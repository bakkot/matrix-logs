[
{"content":{"body":"> <@justingrant:matrix.org> > > (FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")\n> \n> > My team just spent a quarter making a special version of ICU to help a database team not corrupt their data when upgrading our library.\n> \n> By \"stored collation key\" do you mean that when a column is stored with a particular collation, then (as an implementation detail) a collation key is also stored along with that column's data?\n> \n> sffc was this an existing 3rd-party DBMS like Oracle or MySQL?  Or was it a custom internal Google thing?\n> \n> If the former, then I'd be curious to learn if any RDBMS does that. AFAIK, I/O is much more expensive than CPU in most modern platforms, so it seems fine to recalculate a collation key whenever sorting or comparing while running a query or when building a persisted index. Yes, it's slower, but if perf is a problem then building an index is typically the right solution rather than optimizing table scans.\n\nFor an index to be the right solution, the database needs to be willing and performance-wise capable of rebuilding the index upon collation library and/or CLDR update. Otherwise, you get value-added services like AWS maintaining a glibc whose collation behavior is frozen to accommodate Postgres creating a collation-dependent persistent index.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!pGTjbcoTUqwfzHcRaW:matrix.org/$5BFNlPEtzPmxrctjrU0dvLgSsL1v8n3UOAujwUZJ6A8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@justingrant:matrix.org\">@justingrant:matrix.org</a><br><blockquote>\n<blockquote>\n<p>(FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>My team just spent a quarter making a special version of ICU to help a database team not corrupt their data when upgrading our library.</p>\n</blockquote>\n<p>By \"stored collation key\" do you mean that when a column is stored with a particular collation, then (as an implementation detail) a collation key is also stored along with that column's data?</p>\n<p><a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a> was this an existing 3rd-party DBMS like Oracle or MySQL?  Or was it a custom internal Google thing?</p>\n<p>If the former, then I'd be curious to learn if any RDBMS does that. AFAIK, I/O is much more expensive than CPU in most modern platforms, so it seems fine to recalculate a collation key whenever sorting or comparing while running a query or when building a persisted index. Yes, it's slower, but if perf is a problem then building an index is typically the right solution rather than optimizing table scans.</p>\n</blockquote></mx-reply>For an index to be the right solution, the database needs to be willing and performance-wise capable of rebuilding the index upon collation library and/or CLDR update. Otherwise, you get value-added services like AWS maintaining a glibc whose collation behavior is frozen to accommodate Postgres creating a collation-dependent persistent index.","m.relates_to":{"m.in_reply_to":{"event_id":"$5BFNlPEtzPmxrctjrU0dvLgSsL1v8n3UOAujwUZJ6A8"}},"msgtype":"m.text"},"ts":1692698104664,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$lZf1ZZu-eWr9xS2V8pvXerg3Vvst6Q0iUl8t2K8o4VY"},
{"content":{"body":"Yes what Henri mentioned is the type of problem I was referencing","msgtype":"m.text"},"ts":1692723287182,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$d2OVkjttoXq5cGtSR408LsxFsMSlQIVcDI8L1zCQDQY"}
]