[
{"content":{"body":"> <@sffc:mozilla.org> > Moreover, it's bad that the distinction isn't visible in the typical CI locale of en-US.\n> Can you check the resolved options to get the locale?\n\nPossibly, yeah, if one goes looking for it, instead of just testing sort behavior.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!pGTjbcoTUqwfzHcRaW:matrix.org/$JIcKvcMtYv_Z6TptznvRaJtS1gHthn-eLRpR8xMKB6A?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sffc:mozilla.org\">@sffc:mozilla.org</a><br>&gt; Moreover, it&#39;s bad that the distinction isn&#39;t visible in the typical CI locale of en-US.<br/>Can you check the resolved options to get the locale?</blockquote></mx-reply>Possibly, yeah, if one goes looking for it, instead of just testing sort behavior.","m.relates_to":{"m.in_reply_to":{"event_id":"$JIcKvcMtYv_Z6TptznvRaJtS1gHthn-eLRpR8xMKB6A"}},"msgtype":"m.text"},"ts":1692610076530,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$cSiROcpZyloFpWi9twDGtb2r65iXWnTBGTFOCY5khW4"},
{"content":{"body":"> <@littledan:matrix.org> Everything in Intl falls back to the host locale… I think that’s the extent of the rationale.\n\nThanks.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!pGTjbcoTUqwfzHcRaW:matrix.org/$7gZ7fCYvqiYa_s_ki72dDp_kGkYCb1do2Wiv0wso_Vo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Everything in Intl falls back to the host locale… I think that’s the extent of the rationale.</blockquote></mx-reply>Thanks.","m.relates_to":{"m.in_reply_to":{"event_id":"$7gZ7fCYvqiYa_s_ki72dDp_kGkYCb1do2Wiv0wso_Vo"}},"msgtype":"m.text"},"ts":1692610083991,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$JJ82TWGcp2q3ID1zCwSUe8K4slUwOvOx6mKg2EKXr_0"},
{"content":{"body":"> <@littledan:matrix.org> If we wanted to work on Intl.Collator, we should probably address the thing where the design forces a bunch of recalculation of the collation key to do any sorting…\n\nUnlikely. According to ICU4C docs, the number of comparisons that you need to do to amortize the collation key generation is high, and collation keys are rarely appropriate. (FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!pGTjbcoTUqwfzHcRaW:matrix.org/$1TCCMQhCM-8c6eVFzc7u18QcUsbBJVjsp98TtOesAS0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>If we wanted to work on Intl.Collator, we should probably address the thing where the design forces a bunch of recalculation of the collation key to do any sorting…</blockquote></mx-reply>Unlikely. According to ICU4C docs, the number of comparisons that you need to do to amortize the collation key generation is high, and collation keys are rarely appropriate. (FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")","m.relates_to":{"m.in_reply_to":{"event_id":"$1TCCMQhCM-8c6eVFzc7u18QcUsbBJVjsp98TtOesAS0"}},"msgtype":"m.text"},"ts":1692610217007,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$IEVbMsTcBt84ATrUL9eo2T9HMJywNd8FJ4k5SRKeWK0"},
{"content":{"body":"Let's please not use locale sensitive sorting in a database. My team just spent a quarter making a special version of ICU to help a database team not corrupt their data when upgrading our library.","msgtype":"m.text"},"ts":1692631853220,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$32c0ftdwH3N5Cm_0TErclSO8wJrAFEBmE35N5xnoNd8"},
{"content":{"body":"> > (FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")\n\n> My team just spent a quarter making a special version of ICU to help a database team not corrupt their data when upgrading our library.\n\nBy \"stored collation key\" do you mean that when a column is stored with a particular collation, then (as an implementation detail) a collation key is also stored along with that column's data?\n\nsffc was this an existing 3rd-party DBMS like Oracle or MySQL?  Or was it a custom internal Google thing?\n\nIf the former, then I'd be curious to learn if any RDBMS does that. AFAIK, I/O is much more expensive than CPU in most modern platforms, so it seems fine to recalculate a collation key whenever sorting or comparing while running a query or when building a persisted index. Yes, it's slower, but if perf is a problem then building an index is typically the right solution rather than optimizing table scans. ","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<blockquote>\n<p>(FWIW, it appears that even SQLite's ICU4C mode sorts without stored collation keys even though the use case for stored collation keys is \"databases\")</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<p>My team just spent a quarter making a special version of ICU to help a database team not corrupt their data when upgrading our library.</p>\n</blockquote>\n<p>By \"stored collation key\" do you mean that when a column is stored with a particular collation, then (as an implementation detail) a collation key is also stored along with that column's data?</p>\n<p><a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a> was this an existing 3rd-party DBMS like Oracle or MySQL?  Or was it a custom internal Google thing?</p>\n<p>If the former, then I'd be curious to learn if any RDBMS does that. AFAIK, I/O is much more expensive than CPU in most modern platforms, so it seems fine to recalculate a collation key whenever sorting or comparing while running a query or when building a persisted index. Yes, it's slower, but if perf is a problem then building an index is typically the right solution rather than optimizing table scans.</p>\n","msgtype":"m.text"},"ts":1692654604588,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$5BFNlPEtzPmxrctjrU0dvLgSsL1v8n3UOAujwUZJ6A8"}
]