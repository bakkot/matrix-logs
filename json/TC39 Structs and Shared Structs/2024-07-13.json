[
{"content":{"body":"i understand that it is proposed to require an unsafe scope to access shared values, but what does unsafe actually mean? like what is the model we are using to categorize things as safe or unsafe.","msgtype":"m.text"},"ts":1720890390034,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$OsTSVTC1pcJLW2HMsbebanHDFfPFdDLzH1B2ONrpcuc"},
{"content":{"body":" * i understand that it is proposed to require an unsafe scope to access shared values, but what does unsafe actually mean? like what is the model we are using to categorize things as safe or unsafe. and i guess in particular i'm curious if things we categorize as unsafe really justify the syntax. in rust and c# (i think?), unsafe marks a place where you can actually violate some fundamental model of the language, which i'm hoping you cannot do inside a js unsafe block?","m.mentions":{},"m.new_content":{"body":"i understand that it is proposed to require an unsafe scope to access shared values, but what does unsafe actually mean? like what is the model we are using to categorize things as safe or unsafe. and i guess in particular i'm curious if things we categorize as unsafe really justify the syntax. in rust and c# (i think?), unsafe marks a place where you can actually violate some fundamental model of the language, which i'm hoping you cannot do inside a js unsafe block?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OsTSVTC1pcJLW2HMsbebanHDFfPFdDLzH1B2ONrpcuc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720890873654,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$2sOtFSfA5S5S6Yxe01XtNakxN2Az_YCEnHc3rsUSgMs"},
{"content":{"body":" * i understand that it is proposed to require an unsafe scope to access shared values, but what does unsafe actually mean? like what is the model we are using to categorize things as safe or unsafe. and i guess in particular i'm curious if things we categorize as unsafe really justify the syntax. in rust (and c# i think?), unsafe marks a place where you can actually violate some fundamental model of the language, which i'm hoping you cannot do inside a js unsafe block?","m.mentions":{},"m.new_content":{"body":"i understand that it is proposed to require an unsafe scope to access shared values, but what does unsafe actually mean? like what is the model we are using to categorize things as safe or unsafe. and i guess in particular i'm curious if things we categorize as unsafe really justify the syntax. in rust (and c# i think?), unsafe marks a place where you can actually violate some fundamental model of the language, which i'm hoping you cannot do inside a js unsafe block?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OsTSVTC1pcJLW2HMsbebanHDFfPFdDLzH1B2ONrpcuc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720891309453,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$XKCdoT2f0-5q19Q9gT_ORmpvrxKbHQVispYsC0t8y7I"},
{"content":{"body":"My impression from Mark's previous comments is that's evacuate what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). `unsafe` in this context is about JS code accessing data structures held in shared memory. ","format":"org.matrix.custom.html","formatted_body":"My impression from Mark's previous comments is that's evacuate what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). <code>unsafe</code> in this context is about JS code accessing data structures held in shared memory.","msgtype":"m.text"},"ts":1720897901489,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$qdJVKHzXdwYFFTavlMNKdW_Dci2K5sLIyYD_CwPLt58"},
{"content":{"body":"* My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). \nunsafe in this context is about JS code accessing data structures held in shared memory.","m.new_content":{"body":"My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). \nunsafe in this context is about JS code accessing data structures held in shared memory.","format":"org.matrix.custom.html","formatted_body":"My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside).<br />unsafe in this context is about JS code accessing data structures held in shared memory.","msgtype":"m.text"},"m.relates_to":{"event_id":"$qdJVKHzXdwYFFTavlMNKdW_Dci2K5sLIyYD_CwPLt58","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720897915904,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$bTofv--mHvSZgbmjxbHBEZ4B4bW9uBzSbb4ZJvUkJ1k"},
{"content":{"body":"* My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). `unsafe` in this context is about JS code accessing data structures held in shared memory.","m.new_content":{"body":"My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). `unsafe` in this context is about JS code accessing data structures held in shared memory.","format":"org.matrix.custom.html","formatted_body":"My impression from Mark's previous comments is that's exactly what this is. Single-threaded, exclusive memory access is the fundamental model of JS (SAB aside). <code>unsafe</code> in this context is about JS code accessing data structures held in shared memory.","msgtype":"m.text"},"m.relates_to":{"event_id":"$qdJVKHzXdwYFFTavlMNKdW_Dci2K5sLIyYD_CwPLt58","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720897935608,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5qwT69c_B4mAkM9vMdwa9nhquHbVj7QGbIr1C9UlO-I"},
{"content":{"body":"you're saying that inside unsafe you can put the js vm into a state that prevents it from continuing to evaluate javascript in the way that it expects?","m.mentions":{},"msgtype":"m.text"},"ts":1720898026269,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$qiSpj_sw2Idbfmh87JOlba3MSGSHmtnEBqAViuIDVMU"},
{"content":{"body":"While I don't imagine we'd ever add much else to `unsafe` in JS (e.g., pointers), we could if necessary. ","format":"org.matrix.custom.html","formatted_body":"While I don't imagine we'd ever add much else to <code>unsafe</code> in JS (e.g., pointers), we could if necessary.","msgtype":"m.text"},"ts":1720898104809,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JoZ2MTHZvwtt1i1gn6HO9zyvXQPJ7Ni_YxVK80AYZUo"},
{"content":{"body":"> <@devsnek:matrix.org> you're saying that inside unsafe you can put the js vm into a state that prevents it from continuing to evaluate javascript in the way that it expects?\n\nSo far, only the potential for deadlocks preventing execution, AFAIK, though you can still get in that state with SAB and `Atomics.wait`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!fmLqwwrfASaCrzNjAk:matrix.org/$qiSpj_sw2Idbfmh87JOlba3MSGSHmtnEBqAViuIDVMU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />you're saying that inside unsafe you can put the js vm into a state that prevents it from continuing to evaluate javascript in the way that it expects?</blockquote></mx-reply>So far, only the potential for deadlocks preventing execution, AFAIK, though you can still get in that state with SAB and <code>Atomics.wait</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$qiSpj_sw2Idbfmh87JOlba3MSGSHmtnEBqAViuIDVMU"}},"msgtype":"m.text"},"ts":1720898189855,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8NDZAzfi2uuldHjcXWAWVthZO_2gUs7j43ND0vt5B_I"},
{"content":{"body":"but SAB has a memory model that is defined for unsyncronized accesses.","m.mentions":{},"msgtype":"m.text"},"ts":1720898229419,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$sC_XRTq52h4Njb2gmD5h4fCTp8fRd07cuHDhdi8PuCI"},
{"content":{"body":"But it can't easily be used for data structures, so it's adoption is quite low. Shared Structs will be far easier to adopt, and thus much more problematic ","format":"org.matrix.custom.html","formatted_body":"But it can't easily be used for data structures, so it's adoption is quite low. Shared Structs will be far easier to adopt, and thus much more problematic","msgtype":"m.text"},"ts":1720898348416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0w9BAIr7AulpSsvzTJo_l3_ZIimqRlvsj-FZ_VCZ2_w"},
{"content":{"body":"* But it can't easily be used for data structures, so it's adoption is quite low. Shared Structs will be far easier to adopt, and thus users are more likely to run afoul of shared memory issues","m.new_content":{"body":"But it can't easily be used for data structures, so it's adoption is quite low. Shared Structs will be far easier to adopt, and thus users are more likely to run afoul of shared memory issues","msgtype":"m.text"},"m.relates_to":{"event_id":"$0w9BAIr7AulpSsvzTJo_l3_ZIimqRlvsj-FZ_VCZ2_w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720898399372,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$qquF9dce-hplr5O4KPwts69XmPOutZBSF3eFQ4EMKg4"},
{"content":{"body":"are you saying that the behavior will be undefined?","m.mentions":{},"msgtype":"m.text"},"ts":1720898480466,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$n_bjSicyRj3wpHTCAKizrTfVGuEhjwe1msWdIVjB3E4"},
{"content":{"body":"i feel like mark, and all implementations, would object to that","m.mentions":{},"msgtype":"m.text"},"ts":1720898494089,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$GnfRm4Ai-m8H_A7c5Wn6Yl9ZJbVierbHfDL7inyRS-g"},
{"content":{"body":"No, not undefined. ","format":"org.matrix.custom.html","formatted_body":"No, not undefined.","msgtype":"m.text"},"ts":1720898627076,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TAY0S4g7S0MF6VikaUDP-Bb7pxLMFqdlyYzqk0RjayY"},
{"content":{"body":"I'm not clear if your concern is the choice of keyword, or the need for any syntax at all. I'll happily entertain other keywords, but it seems like Mark is quite satisfied with there being a syntax with the semantic proposed as addressing his concern. ","format":"org.matrix.custom.html","formatted_body":"I'm not clear if your concern is the choice of keyword, or the need for any syntax at all. I'll happily entertain other keywords, but it seems like Mark is quite satisfied with there being a syntax with the semantic proposed as addressing his concern.","msgtype":"m.text"},"ts":1720898818249,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9VCUW3rKe14QuQVAyEXGuA3Sv2yeNr-5mAWZ38GdOoE"},
{"content":{"body":"my question was \"what does unsafe mean\" and then i tacked on an opinion after that which was \"if unsafe is just marking some particular way of creating logic bugs i'm not sure its worth it\"","m.mentions":{},"msgtype":"m.text"},"ts":1720898879178,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$CxHh_R8o8p-YMMQ10c0GYv7w23WE4cnui196pkGrE5k"},
{"content":{"body":" * sorry for the confusion, to rephrease... my question was \"what does unsafe mean\" and then i tacked on an opinion after that which was \"if unsafe is just marking some particular way of creating logic bugs i'm not sure its worth it\"","m.mentions":{},"m.new_content":{"body":"sorry for the confusion, to rephrease... my question was \"what does unsafe mean\" and then i tacked on an opinion after that which was \"if unsafe is just marking some particular way of creating logic bugs i'm not sure its worth it\"","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CxHh_R8o8p-YMMQ10c0GYv7w23WE4cnui196pkGrE5k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720898910330,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$_JDHgiqMm9JDTxfEUmtVyiWK1NHarPRleTBbW1ZmXr4"},
{"content":{"body":" * sorry for the confusion, to rephrase... my question was \"what does unsafe mean\" and then i tacked on an opinion after that which was \"if unsafe is just marking some particular way of creating logic bugs i'm not sure its worth it\"","m.mentions":{},"m.new_content":{"body":"sorry for the confusion, to rephrase... my question was \"what does unsafe mean\" and then i tacked on an opinion after that which was \"if unsafe is just marking some particular way of creating logic bugs i'm not sure its worth it\"","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CxHh_R8o8p-YMMQ10c0GYv7w23WE4cnui196pkGrE5k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720899468041,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$bMXXl4O-aftKsFOpJoIxU4vSKUc3L_Zuqlji5zFj8k0"}
]