[
{"content":{"body":"i haven't done much work on the proposal since TC39. does anyone have topics they want to talk about tomorrow? happy to cancel otherwise","m.mentions":{},"msgtype":"m.text"},"ts":1697683813241,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ujkCJQv3W1NpsxgVYhGOGpRZM6I47_bbhca-dmNZ95A"},
{"content":{"body":"I had a chat with Sulekha the other day about a few tangential things to this proposal that might be helpful in tandem with shared structs. One of the things I needed to put together for TS was a concurrent map, and a missing building block I had to work around was the lack of an identity-hash API in the standard library. It's something I've thought about proposing in the past as well","msgtype":"m.text"},"ts":1697686912692,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dUjbH7c_ZYraRGORgIjPpEBrzLIlmAiuCeCpF0T1USM"},
{"content":{"body":"It might be worth some time discussing what other things are missing that might need a follow-on proposal ","format":"org.matrix.custom.html","formatted_body":"It might be worth some time discussing what other things are missing that might need a follow-on proposal","msgtype":"m.text"},"ts":1697687033003,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$B8MIwwK78Rql6mt3-Jz702hSITGlsenIBpqq89pyjUg"},
{"content":{"body":"Either the building blocks for, or complete implementations of, concurrent multi-producer/multi-consumer maps, sets, and bags, thread-safe deques, shared mutexes (multi-reader/single-writer), RAII locking primitives, efficient spin waiting for lock-free algorithms to reduce contention.\n\nUserland implementations can't build a true identity hash efficiently, nor fast string hashing w/o resorting to WASM or native code, nor can they implement spin-waiting efficiently.","format":"org.matrix.custom.html","formatted_body":"<p>Either the building blocks for, or complete implementations of, concurrent multi-producer/multi-consumer maps, sets, and bags, thread-safe deques, shared mutexes (multi-reader/single-writer), RAII locking primitives, efficient spin waiting for lock-free algorithms to reduce contention.</p>\n<p>Userland implementations can't build a true identity hash efficiently, nor fast string hashing w/o resorting to WASM or native code, nor can they implement spin-waiting efficiently.</p>","msgtype":"m.text"},"ts":1697687686629,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lFfKGfNZFOBh5rFuQ4u03q7Lx-LcmKpDlhw_vv3X7BM"}
]