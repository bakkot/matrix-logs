[
{"content":{"body":"> <@iain:mozilla.org> The proposal very nearly avoids the need to support shared->local edges. The incremental cost of having to overhaul GC is significantly larger than the incremental benefits for the few use cases.\n\nWell there is the other problem that currently all JS objects are usable as WeakMap keys, and that some libraries rely on that to hold true, possibly some that never attempt to access the fields of the object. If we're talking about shared structs being a drop-in replacement for class instances in some cases, I'd argue we need to uphold that current property of the language.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!fmLqwwrfASaCrzNjAk:matrix.org/$GdGQlYaebAX-4kIZdzU-BPBS3TWTHfvCy3ERW0FGP2Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@iain:mozilla.org\">@iain:mozilla.org</a><br>The proposal very nearly avoids the need to support shared-&gt;local edges. The incremental cost of having to overhaul GC is significantly larger than the incremental benefits for the few use cases.</blockquote></mx-reply>Well there is the other problem that currently all JS objects are usable as WeakMap keys, and that some libraries rely on that to hold true, possibly some that never attempt to access the fields of the object. If we're talking about shared structs being a drop-in replacement for class instances in some cases, I'd argue we need to uphold that current property of the language.","m.mentions":{"user_ids":["@iain:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$GdGQlYaebAX-4kIZdzU-BPBS3TWTHfvCy3ERW0FGP2Y"}},"msgtype":"m.text"},"ts":1725000693961,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$cH2xu0y9b79m6o0HxW4-tn37xiClWOE5g60mTSV5IHI"},
{"content":{"body":"I think everybody agrees that in the long run it would be good to have shared structs that can be used as weakmap keys. My argument is that in terms of the actual implementation effort, supporting shared-to-local edges (which is required to implement weakmaps that don't leak) is a major implementation challenge (like, 1/3 to 1/2 of the overall proposal?). The new capabilities that it unlocks are relatively small. So the question is whether it is better to ship a complete version of shared structs in N years, or a more restricted version in N/2 years followed by a complete version N/2 years later.","m.mentions":{},"msgtype":"m.text"},"ts":1725033319768,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$u8T-Ep_MT3sBZ3RDGMx3iC6fwBJzeu1_c9dkiClXw-o"},
{"content":{"body":" * I think everybody agrees that in the long run it would be good to have shared structs that can be used as weakmap keys. My argument is that in terms of the actual implementation effort, supporting shared-to-local edges (which is required to implement weakmaps that don't leak) is a major implementation challenge (like, 1/3 to 1/2 of the overall proposal?). The new capabilities that it unlocks are relatively small (compared to the overall proposal). So the question is whether it is better to ship a complete version of shared structs in N years, or a more restricted version in N/2 years followed by a complete version N/2 years later.","m.mentions":{},"m.new_content":{"body":"I think everybody agrees that in the long run it would be good to have shared structs that can be used as weakmap keys. My argument is that in terms of the actual implementation effort, supporting shared-to-local edges (which is required to implement weakmaps that don't leak) is a major implementation challenge (like, 1/3 to 1/2 of the overall proposal?). The new capabilities that it unlocks are relatively small (compared to the overall proposal). So the question is whether it is better to ship a complete version of shared structs in N years, or a more restricted version in N/2 years followed by a complete version N/2 years later.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$u8T-Ep_MT3sBZ3RDGMx3iC6fwBJzeu1_c9dkiClXw-o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725033339110,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$mVfPsGMYwOleNw3qSPwZYMqSViMnKGcn2ShHCL6kB9I"},
{"content":{"body":"I also expect that getting implementation feedback from more than one engine before locking in the final proposal will lead to a better end result.","m.mentions":{},"msgtype":"m.text"},"ts":1725033545195,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$oyNsVqOdBTuhDnBpKhtEq_-cKXrmgU7O6nZi_LM_CtU"},
{"content":{"body":"Didn't V8 also initially consider banning shared to local edges? Do we know more about what led V8 to change their minds?","m.mentions":{},"msgtype":"m.text"},"ts":1725034963555,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BTdZTunGbq7doZkrQLY0N1OjbAX5k-Rwi0oImircdv0"},
{"content":{"body":"Sometimes you want to associate some necessarily local data (eg an event handler, a DOM node) with a shared struct.","m.mentions":{},"msgtype":"m.text"},"ts":1725035283086,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$zUDQE5AqTxEwTr2OVyZDe31fFtlhnDi-gKS0rXpJv7M"},
{"content":{"body":"are you saying, we could support those edges, just not for WeakMaps?","m.mentions":{},"msgtype":"m.text"},"ts":1725035350069,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tSNK5Drw3BTDrUaPfp_aNgfVBnDIwgy9H6p0Bdw6dwo"}
]