[
{"content":{"body":"Since it is plenary week, should we assume the structs meeting is cancelled for today?","m.mentions":{},"msgtype":"m.text"},"ts":1728579431280,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ICWMTkstOj1VPpbk1PlnkhPQtg4edjmDPUFcDieB_U0"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1728579463857,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$9HhaQGjQSdRzb_VyzSYDOK0UcQBDzCVcmAUTLBOCpAc"},
{"content":{"body":"Unless we want to have little stage 2 party :P","msgtype":"m.text"},"ts":1728579490761,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_GDJ5Q4kl2-9ZPfuGgtngk3Ui3OnYTmKeultAD_xXhk"},
{"content":{"body":"I'd rather save that for the next meeting","m.mentions":{},"msgtype":"m.text"},"ts":1728579580344,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Kr55G1ICOC7SQGrQUIbdSRR9eFkjYsa9n5kzrrLi_g8"},
{"content":{"body":"i talked with jordan and mark in the hallway and i think we have promising directions to explore for both of the big issue areas of:\n\n- unsafe {} opposition\n- jordan's concern of \"i want every object to be able to get private fields\"\n\nthe \"can be used as weakmap keys\" concern basically 100% rides on implementation feasibility from others at this point, and i don't think it's useful for this group to design around it yet","format":"org.matrix.custom.html","formatted_body":"<p>i talked with jordan and mark in the hallway and i think we have promising directions to explore for both of the big issue areas of:</p>\n<ul>\n<li>unsafe {} opposition</li>\n<li>jordan's concern of \"i want every object to be able to get private fields\"</li>\n</ul>\n<p>the \"can be used as weakmap keys\" concern basically 100% rides on implementation feasibility from others at this point, and i don't think it's useful for this group to design around it yet</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1728602199738,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Es5b3J-UNW7xzmJSuVS9dYnZ_cVgOFDjSbOKvLJ2SpM"},
{"content":{"body":"for unsafe {}, mark is also happy with \"all shared struct fields always private\", then we don't need unsafe {}, because the idea is the public API must be written by the developer, which should be threadsafe\n\nthe implementation constraint for me with that world is that we must be able to compile #-names in shared structs just as normal property slots. because of the \"#-names have different identities depending on the evaluation of the class declaration\" thing, they are wildly inefficient in engines. this problem might not exist at all if we have the restriction that struct decls are top-level only and thus can't be reevaluated anyways\n\nso that sounds like a promising thing for us to explore","m.mentions":{},"msgtype":"m.text"},"ts":1728602327637,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7JwPed5zxSVPN3-azCmGxtxB6P858zkxYlR2GXQb1Ys"},
{"content":{"body":"for \"i want to stamp private fields\", jordan is happy with an outcome where we expose a new method like preventExtensions that also prohibits any object from being stampable. mark has been independently working on a new integrity level that already has that capability, and is happy to unbundle that new method from the integrity level.\n\nso it sounds like if we just introduce that method, here or independently, that solves it. everyone AFAIK agrees return override is loathsome so that method would be a good addition independently anyway","m.mentions":{},"msgtype":"m.text"},"ts":1728602413754,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$upehavSNXBsjLiuoqTTh5mVecDETZIw7HOO9NWakqhI"},
{"content":{"body":"structs, then, would be born as if that method were already called on them","m.mentions":{},"msgtype":"m.text"},"ts":1728602447718,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TWOTlidyC1lHjBOn6U7_XVzh7i5CQ1NWq9Z2y_xlT0Y"},
{"content":{"body":"oh, one additional caveat to the unsafe {} thing, without unsafe {}, shared arrays would just work, which is also racy. i flagged this to mark, who thinks that is actually fine and as intended, because the indexed properties _are_ the public API of an array","format":"org.matrix.custom.html","formatted_body":"oh, one additional caveat to the unsafe {} thing, without unsafe {}, shared arrays would just work, which is also racy. i flagged this to mark, who thinks that is actually fine and as intended, because the indexed properties <em>are</em> the public API of an array","m.mentions":{},"msgtype":"m.text"},"ts":1728602513571,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z6vVG69mV8q1xxNMPliaIRx02Yz-4c97M4Bf2tcXUNI"}
]