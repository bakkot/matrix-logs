[
{"content":{"body":"shu: are you aware of any issues debugging workers when - - harmony-structs or the Shared string table flag are enabled? I'm running issues debugging in VS Code and wanted to check if there were any known issues before I file an issue with VS Code. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: are you aware of any issues debugging workers when - - harmony-structs or the Shared string table flag are enabled? I'm running issues debugging in VS Code and wanted to check if there were any known issues before I file an issue with VS Code.","msgtype":"m.text"},"ts":1694216901705,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$x-1c4_QVQ-9UVUOm4lNvkp61Dd0RQCd3SWcXIwVXjnw"},
{"content":{"body":"I'm not sure if it's Code, the chrome debug protocol, NodeJS, or V8 causing the issue, but the first breakpoint I hit after starting a worker and passing it a shared struct results in the debugger locking up. ","format":"org.matrix.custom.html","formatted_body":"I'm not sure if it's Code, the chrome debug protocol, NodeJS, or V8 causing the issue, but the first breakpoint I hit after starting a worker and passing it a shared struct results in the debugger locking up.","msgtype":"m.text"},"ts":1694217012414,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$e2Cze120Zi0_3Va9rKjBDJFXNfe07gy6XL5f7mmUOME"},
{"content":{"body":"I finally reached a point where I can successfully parse a large project (xstate) using parallel parsing and the results aren't very promising yet. On a single thread, parse takes about 1.2s on my machine, and about 3.5s when running in parallel. However this is still very early and I'm having to copy the entire AST of each file from the struct representation into a normal JS object so it can be used by our existing checker and emitter. The limitations of structs mean we can't just use them as-is without a significant rewrite. ","format":"org.matrix.custom.html","formatted_body":"I finally reached a point where I can successfully parse a large project (xstate) using parallel parsing and the results aren't very promising yet. On a single thread, parse takes about 1.2s on my machine, and about 3.5s when running in parallel. However this is still very early and I'm having to copy the entire AST of each file from the struct representation into a normal JS object so it can be used by our existing checker and emitter. The limitations of structs mean we can't just use them as-is without a significant rewrite.","msgtype":"m.text"},"ts":1694217434828,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$uCTUrcDkFd65Db20R0uZfK8nnd2p_l-cfD4_95YzVMo"}
]