[
{"content":{"body":"I’ve made a rig to improve my understanding of the `primitive.prototypeMethod()` behavior empirically. My assumption proved false and that makes me more optimistic that a lexically scoped shared struct prototype registry could possibly maintain evaluator isolation https://gist.github.com/kriskowal/cd07cfcd93d79c1224c7036ca1e6c776","format":"org.matrix.custom.html","formatted_body":"I’ve made a rig to improve my understanding of the <code>primitive.prototypeMethod()</code> behavior empirically. My assumption proved false and that makes me more optimistic that a lexically scoped shared struct prototype registry could possibly maintain evaluator isolation https://gist.github.com/kriskowal/cd07cfcd93d79c1224c7036ca1e6c776","m.mentions":{},"msgtype":"m.text"},"ts":1725655466744,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$lF9GNOkZxBiYn1ysdG7YhRG8dLME-iEfsnF5p3BJmV8"},
{"content":{"body":"That is, there could be a hook on a `Module(source, hooks)` constructor that would provide the prototype for a struct, like `prototypeOf(source, keysOfSomeKind)`.","format":"org.matrix.custom.html","formatted_body":"That is, there could be a hook on a <code>Module(source, hooks)</code> constructor that would provide the prototype for a struct, like <code>prototypeOf(source, keysOfSomeKind)</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1725655662320,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$yC0A-54txG8NfyZBO34FVuc6jDs-0OHpGCbbAqPzB_Y"},
{"content":{"body":" * That is, there could be a hook on a `Module(source, hooks)` constructor that would provide the prototype for a struct, like `prototypeOf(source, keyOfSomeKind)`.","format":"org.matrix.custom.html","formatted_body":" * That is, there could be a hook on a <code>Module(source, hooks)</code> constructor that would provide the prototype for a struct, like <code>prototypeOf(source, keyOfSomeKind)</code>.","m.mentions":{},"m.new_content":{"body":"That is, there could be a hook on a `Module(source, hooks)` constructor that would provide the prototype for a struct, like `prototypeOf(source, keyOfSomeKind)`.","format":"org.matrix.custom.html","formatted_body":"That is, there could be a hook on a <code>Module(source, hooks)</code> constructor that would provide the prototype for a struct, like <code>prototypeOf(source, keyOfSomeKind)</code>.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$yC0A-54txG8NfyZBO34FVuc6jDs-0OHpGCbbAqPzB_Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725655670131,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$X6S_IxTQ1KVYXH-hleOjc3iOcqhrure1eO4Yg75fKSg"},
{"content":{"body":"I believe nicolo-ribaudo was driving at that, and now I understand that it’s viable.","format":"org.matrix.custom.html","formatted_body":"I believe <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> was driving at that, and now I understand that it’s viable.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1725655689696,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$LOLNvxBkhh6TwJ7waLnTA8dOwwsuZW-mBo3wzevJSXQ"},
{"content":{"body":"I think that being able to completely virtualize that prototype attachment (i.e. have a hook for it) is neither needed nor desiderabile, but I'm happy to discuss it further :)","msgtype":"m.text"},"ts":1725656466961,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$t3sAK0TRShcb0m6rLDGRMNllEeZ-b3MdaOoOnwuI_yk"},
{"content":{"body":"By \"not needed\" I mean \"not needed to maintain isolation\"","msgtype":"m.text"},"ts":1725656511669,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7BjoXz6zEGO8s4zeTnKrElITEk9SWAK5BplB2fd02Vo"}
]