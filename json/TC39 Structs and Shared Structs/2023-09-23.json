[
{"content":{"body":"I'm trying to determine whether it makes sense to publish a package that utilizes the origin trial structs implementation, whose purpose is to facilitate using the origin trial implementation. Like the thread pool I posted earlier. ","format":"org.matrix.custom.html","formatted_body":"I'm trying to determine whether it makes sense to publish a package that utilizes the origin trial structs implementation, whose purpose is to facilitate using the origin trial implementation. Like the thread pool I posted earlier.","msgtype":"m.text"},"ts":1695492085060,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DhKfBw5H6mREuhE_nnxZHInEdr-TWN75Bczpy9jIemY"},
{"content":{"body":"shu: do you know if V8 has plans to support `using` in the near term? I'm considering contributing `unique_lock` and `scoped_lock`-like  classes to `Atomics` for the origin trial, if there's interest, but they would need to leverage `Symbol.dispose` to be used even with transpilers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: do you know if V8 has plans to support <code>using</code> in the near term? I'm considering contributing <code>unique_lock</code> and <code>scoped_lock</code>-like  classes to <code>Atomics</code> for the origin trial, if there's interest, but they would need to leverage <code>Symbol.dispose</code> to be used even with transpilers","msgtype":"m.text"},"ts":1695493084766,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wfxRUwLJdRv9lhhINh9Ttd2yipoQfiydQDpoIfMjEqs"}
]