[
{"content":{"body":"> <@littledan:matrix.org> Didn't V8 also initially consider banning shared to local edges? Do we know more about what led V8 to change their minds?\n\nthere are two things you get out of banning *all* shared->local edges:\n\n1. language-level correctness/safety\n2. independent GCs of separate threads","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!fmLqwwrfASaCrzNjAk:matrix.org/$BTdZTunGbq7doZkrQLY0N1OjbAX5k-Rwi0oImircdv0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Didn&#39;t V8 also initially consider banning shared to local edges? Do we know more about what led V8 to change their minds?</blockquote></mx-reply><p>there are two things you get out of banning <em>all</em> shared-&gt;local edges:</p>\n<ol>\n<li>language-level correctness/safety</li>\n<li>independent GCs of separate threads</li>\n</ol>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BTdZTunGbq7doZkrQLY0N1OjbAX5k-Rwi0oImircdv0"}},"msgtype":"m.text"},"ts":1725231584179,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$S2J7Ek0p1eH2wg7AJDuJyxto-H_PORwuBrSYuLOUK_g"},
{"content":{"body":"as we experimented more, we realized that 2) wasn't possible. as part of the shared WasmGC proposal, it's very clear from the partner feedback that we can't get away with banning *all* shared->local edges. Flutter, among a bunch of other Google partners, have been clear that they need either thread-bound (i.e. a shared struct can hold a reference to some unshared thing, but it is an error to access that reference from another thread), or thread-local data","format":"org.matrix.custom.html","formatted_body":"as we experimented more, we realized that 2) wasn't possible. as part of the shared WasmGC proposal, it's very clear from the partner feedback that we can't get away with banning <em>all</em> shared-&gt;local edges. Flutter, among a bunch of other Google partners, have been clear that they need either thread-bound (i.e. a shared struct can hold a reference to some unshared thing, but it is an error to access that reference from another thread), or thread-local data","m.mentions":{},"msgtype":"m.text"},"ts":1725231750693,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rBXAS77zpDZ0nSh17UcZWeff_vizWtllDiKb2U8ApZw"},
{"content":{"body":"implementing support for thread-bound or thread-local data in almost all cases, boil down to the same work required in the GC as implementing support for shared things as keys in WeakMaps","m.mentions":{},"msgtype":"m.text"},"ts":1725231788524,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$r_kEB5vDg3zD6ls0YhCVT7tFRqneyS3Bg8yIH6eHoac"},
{"content":{"body":"the WeakMap itself isn't shared and is local to a particular thread, so you still have the correctness property (1) above. but it asks extra complexity of the GC because you now have a local things whose liveness depends on a shared thing","m.mentions":{},"msgtype":"m.text"},"ts":1725231833571,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fkfyNwJEa2gc5z7s4-Y1nTqbjeT5azYzCLF3HNNIrxk"},
{"content":{"body":"the bulk of this discussion has been happening on the Wasm side","m.mentions":{},"msgtype":"m.text"},"ts":1725231865721,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$44GO0PAg3FjsGzOwEnLLCczvL3KqmrZoeQC4IE1-C_8"}
]