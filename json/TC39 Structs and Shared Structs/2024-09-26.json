[
{"content":{"body":"Can someone remind me, why is disallowing Reflect.get / Reflect.set from accessing shared struct fields not acceptable? Aka always triggering the `[[Get]]` behavior? Also have proxies implement an `[[UnsafeGet]]` that triggers the `get` trap as is (no extra arg)? From what I gather it would just prevent using proxies or reflect to access shared fields on shared structs, but not prevent access to non-shared behavior. Is that really unacceptable?","format":"org.matrix.custom.html","formatted_body":"Can someone remind me, why is disallowing Reflect.get / Reflect.set from accessing shared struct fields not acceptable? Aka always triggering the <code>[[Get]]</code> behavior? Also have proxies implement an <code>[[UnsafeGet]]</code> that triggers the <code>get</code> trap as is (no extra arg)? From what I gather it would just prevent using proxies or reflect to access shared fields on shared structs, but not prevent access to non-shared behavior. Is that really unacceptable?","m.mentions":{},"msgtype":"m.text"},"ts":1727387780833,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$KnNFVtt48uQ5EVjZZtvQa0kuOkhKr_q9rA_78IS4uU0"},
{"content":{"body":"Inside of an `unsafe` block, *every* get is an `[[UnsafeGet]]`. Otherwise implementations would need to check the type of the object on every get/set, which would slow down *every* get/set operation even outside of an `unsafe {}` block. This was deemed an unacceptable performance regression.","format":"org.matrix.custom.html","formatted_body":"Inside of an <code>unsafe</code> block, <em>every</em> get is an <code>[[UnsafeGet]]</code>. Otherwise implementations would need to check the type of the object on every get/set, which would slow down <em>every</em> get/set operation even outside of an <code>unsafe {}</code> block. This was deemed an unacceptable performance regression.","m.mentions":{},"msgtype":"m.text"},"ts":1727389843132,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-cqC1ijfXcsGtZS7Ko5E9mAw57ihSL-X21qr0Q4h5As"},
{"content":{"body":"(though I've refactored `[[UnsafeGet]]` and `[[UnsafeSet]]` out now, so its just an `unsafe` parameter passed to `[[Get]]`).","format":"org.matrix.custom.html","formatted_body":"(though I've refactored <code>[[UnsafeGet]]</code> and <code>[[UnsafeSet]]</code> out now, so its just an <code>unsafe</code> parameter passed to <code>[[Get]]</code>).","m.mentions":{},"msgtype":"m.text"},"ts":1727389973468,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$OT4bIuAFofGDEv-wsJkyOwyOeKNcUN-JXIm3r4g4djk"}
]