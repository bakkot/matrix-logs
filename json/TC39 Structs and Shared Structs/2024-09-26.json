[
{"content":{"body":"Can someone remind me, why is disallowing Reflect.get / Reflect.set from accessing shared struct fields not acceptable? Aka always triggering the `[[Get]]` behavior? Also have proxies implement an `[[UnsafeGet]]` that triggers the `get` trap as is (no extra arg)? From what I gather it would just prevent using proxies or reflect to access shared fields on shared structs, but not prevent access to non-shared behavior. Is that really unacceptable?","format":"org.matrix.custom.html","formatted_body":"Can someone remind me, why is disallowing Reflect.get / Reflect.set from accessing shared struct fields not acceptable? Aka always triggering the <code>[[Get]]</code> behavior? Also have proxies implement an <code>[[UnsafeGet]]</code> that triggers the <code>get</code> trap as is (no extra arg)? From what I gather it would just prevent using proxies or reflect to access shared fields on shared structs, but not prevent access to non-shared behavior. Is that really unacceptable?","m.mentions":{},"msgtype":"m.text"},"ts":1727387780833,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$KnNFVtt48uQ5EVjZZtvQa0kuOkhKr_q9rA_78IS4uU0"}
]