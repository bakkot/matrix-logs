[
{"content":{"body":"Chatting with Mark yesterday, we realized that the wasm shared everything thread is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"msgtype":"m.text"},"ts":1709660756344,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$UrLhn9gh3gS9-wmL83hWK1QM_5Z0uBaibwhRpzXm1cg"},
{"content":{"body":" * Chatting with Mark yesterday, we realized that the wasm shared everything thread proposal is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"m.new_content":{"body":"Chatting with Mark yesterday, we realized that the wasm shared everything thread proposal is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UrLhn9gh3gS9-wmL83hWK1QM_5Z0uBaibwhRpzXm1cg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709660769249,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$crs0QmBi4qX2-q1QBV8bsSvUr483kBD2WgHyWSBkWpk"},
{"content":{"body":"that is a required use case, in fact","m.mentions":{},"msgtype":"m.text"},"ts":1709661120245,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wD0QvOemL-5czHouB5XhVj6N_x0_MwDpCtq29vM_Clc"},
{"content":{"body":"that's what all the thread-local storage, thread-bound storage, and discussions of that nature orbit around","m.mentions":{},"msgtype":"m.text"},"ts":1709661139599,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NPdVEvlgaWNgJpWklRAcVxX0E7K7n2r5EHb2ulsXfb4"},
{"content":{"body":"i talked about this in the update talk as the \"syscall table\"","m.mentions":{},"msgtype":"m.text"},"ts":1709661160553,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Zp7rSyTgfYQcBNiBXeVYdCQs5cgTnNqxxbfUemDK1rM"},
{"content":{"body":"right but what I'm reading is that TLS only stored shared things?","m.mentions":{},"msgtype":"m.text"},"ts":1709661162976,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NzaHe_7cDyATA-LV14uhsadWa5SNoCmDuUbPiEdADVw"},
{"content":{"body":"TLS is a table that stores unshared things","m.mentions":{},"msgtype":"m.text"},"ts":1709661175517,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JLRew11dQWscW_5nqPO-AeCsgj7yKqX-D_cqIXA6cpA"},
{"content":{"body":"the _storage_ is local","format":"org.matrix.custom.html","formatted_body":"the <em>storage</em> is local","m.mentions":{},"msgtype":"m.text"},"ts":1709661180054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6c35g2yz9HIJWMz8JOL2kS6U4Zx0MWTBWG6HfvhliRU"},
{"content":{"body":"err","m.mentions":{},"msgtype":"m.text"},"ts":1709661184516,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-g7qfn8xPFi_TQ3puEV1YC5LdBoAyKhrwAAJUrzfOdw"},
{"content":{"body":" * the _storage_ is thread-local","format":"org.matrix.custom.html","formatted_body":" * the <em>storage</em> is thread-local","m.mentions":{},"m.new_content":{"body":"the _storage_ is thread-local","format":"org.matrix.custom.html","formatted_body":"the <em>storage</em> is thread-local","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6c35g2yz9HIJWMz8JOL2kS6U4Zx0MWTBWG6HfvhliRU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709661189624,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nR-OV4XHVC0-BHkEx7YWoFm7881roMyp_29pDJU3_xQ"},
{"content":{"body":"you can put e.g. web API JSFunctions inside them","m.mentions":{},"msgtype":"m.text"},"ts":1709661197522,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9QrVUamsNbcZBjHXh0wKGd9Bv9F5YUzOEIulQutTIFs"},
{"content":{"body":"the JS proposal also has the no shared->unshared edges restriction (at runtime)","m.mentions":{},"msgtype":"m.text"},"ts":1709661211027,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uFxTWyPAYcjEHlnQK6oYNGyr1i7Gjjrsrqm8P4EsplY"},
{"content":{"body":"In https://github.com/WebAssembly/shared-everything-threads/blob/main/proposals/shared-everything-threads/Overview.md#thread-local-storage-tls it says:\n> We don't allow non-shared references in thread-local globals because then they would not be able to be accessed from shared functions\n\nThat's why I'm confused","format":"org.matrix.custom.html","formatted_body":"<p>In https://github.com/WebAssembly/shared-everything-threads/blob/main/proposals/shared-everything-threads/Overview.md#thread-local-storage-tls it says:</p>\n<blockquote>\n<p>We don't allow non-shared references in thread-local globals because then they would not be able to be accessed from shared functions</p>\n</blockquote>\n<p>That's why I'm confused</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1709661262687,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$15vjfVGekW6dkdAKIS2MkVDehOYwkoQzsNdNqFE8Z2o"},
{"content":{"body":"oh that's a wasm type systems quirk, i was also confused by that","m.mentions":{},"msgtype":"m.text"},"ts":1709661288350,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EAYau1N6gOufaa5TUREV7-gTM4qTattfCRulinaRE3g"},
{"content":{"body":"iirc that's resolved by thread-local functions created on the Wasm/JS API layer via WebAssembly.Function(..., { thread-local: true }) showing up as shared extern refs","m.mentions":{},"msgtype":"m.text"},"ts":1709661318264,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xO4LFkg8F4hcE_BoIoB1OKULyfzd3T7C-t8lmcjppT0"},
{"content":{"body":"\"non-shared references\" should be read as \"references with non-shared types in the type system\"","m.mentions":{},"msgtype":"m.text"},"ts":1709661341694,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xQgGmTx-OH1HRBCCUWEqgdvqrX8lARMH5fsDgoLKyRs"},
{"content":{"body":"ok so a thread local function is considered \"shared\"","m.mentions":{},"msgtype":"m.text"},"ts":1709661371420,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$cZg8ChYCoPQSDcQACTOwFx7LSnyggmkfjhlc-qc117c"},
{"content":{"body":"yeah","m.mentions":{},"msgtype":"m.text"},"ts":1709661380571,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0QjKsWpqrCnQbziXAKlwm70mvwkQeZTbJv-JMcNPtGI"},
{"content":{"body":"that's weird, what happens if you get a reference to it not from TLS ","m.mentions":{},"msgtype":"m.text"},"ts":1709661467289,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$cgw0XFgA1SpC16X-69QD9gA-Nz4ywn_R5NZGV5jOgkc"},
{"content":{"body":"aka if you attempt to call a thread-local func from a different thread","m.mentions":{},"msgtype":"m.text"},"ts":1709661496300,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$G4n76sQOLzDciBbnGQpl7lN8THdpIaMLqziBkFqm0Uk"},
{"content":{"body":"it's thread-local","m.mentions":{},"msgtype":"m.text"},"ts":1709661501687,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6Wv0KvS3smAWpHG91SxoIVKP3a69WnX8GQR0qQZs2dU"},
{"content":{"body":"so it's safe to access it from a different thread, it'll call whatever function that TLS \"box\" is bound to in the other thread","m.mentions":{},"msgtype":"m.text"},"ts":1709661519257,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LHA5khkBcm1cFwwuQxcvSTdlS9Mu3mVxnypsYwXWLSg"},
{"content":{"body":"if it's thread-_bound_, it'll trap from other threads","format":"org.matrix.custom.html","formatted_body":"if it's thread-<em>bound</em>, it'll trap from other threads","m.mentions":{},"msgtype":"m.text"},"ts":1709661526090,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1PdCbBZEwaDuyFb8oLGB_KixPhNPc18qVUmGROWsanw"},
{"content":{"body":"right but it materializes in wasm as just a shared func ref, no ?","m.mentions":{},"msgtype":"m.text"},"ts":1709661537165,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$l7UD3MAcDZSM64Lc659h9G400T4r3s7aOzcX4vL8kPQ"},
{"content":{"body":"a shared externref","m.mentions":{},"msgtype":"m.text"},"ts":1709661546478,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x00uPPTHRRNVwRjFn6uzQ60KyuhMjy3kUhO5Nfh3Ehk"},
{"content":{"body":"i think?","m.mentions":{},"msgtype":"m.text"},"ts":1709661549585,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$38FRltuhJL1TRu4cMZ_TnBLw754mWsgIsAg79D9qzLg"},
{"content":{"body":"like are you saying it's weird it'll trap when called?","m.mentions":{},"msgtype":"m.text"},"ts":1709661562265,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DAcjx1cgU0d00jKK_i-nwH1abZYpQkUIoQ-t1ocjkoI"},
{"content":{"body":"I'm just trying to understand the shared / unshared integration for now","m.mentions":{},"msgtype":"m.text"},"ts":1709661603877,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GdIx-1V7eD8nzfdZ77PUkOETZLk-eV8jHC3nCzs-gwM"},
{"content":{"body":"at the type system, thread-local things show up as \"shared\"","m.mentions":{},"msgtype":"m.text"},"ts":1709661626188,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lbh1LjbC2PRZf_13nvJm5g8IeGLPf3YCOY63aCvqn8w"},
{"content":{"body":"what slightly surprises me is that the type system doesn't seem to have a distinction between thread local and shared, which means you can end up having shared refs which are really only valid locally without a way to know ","m.mentions":{},"msgtype":"m.text"},"ts":1709661861350,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$7ajROLMPzrWm36jlqhXzX53tD5WED9Hzdc4bvAp6hl0"},
{"content":{"body":"ah","m.mentions":{},"msgtype":"m.text"},"ts":1709661957115,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OuGvfysTtTVrz5H6-IzfZ8XifAzIFgxTJN9Kr3XDmHg"},
{"content":{"body":"that's a fair question","m.mentions":{},"msgtype":"m.text"},"ts":1709661961365,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x3w9M6CHtIR4q3dxz_MqwbO-rNx7GkPuvV5LlQBBmdQ"},
{"content":{"body":"i have no idea why not and the trade-off space there","m.mentions":{},"msgtype":"m.text"},"ts":1709661966943,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AYrCi7nmVIugxuo_mCQNQ0fp-SGWHvzDlLTktVu9flw"},
{"content":{"body":"as an observer there's a certain deference to toolchain complexity that guides design","m.mentions":{},"msgtype":"m.text"},"ts":1709661980697,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yddbpP3NrjQqeJkTCP0OC5l6-4Rq6CDNuu7axIV8rXU"},
{"content":{"body":"you're best redirecting that question to the wasmcg folks themselves","m.mentions":{},"msgtype":"m.text"},"ts":1709661993521,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZVaAlGUVzCQmF_S4aaGgeLI3U8KFJtW3ULbctIB_06Q"},
{"content":{"body":"yeah, do you know where I can ask such questions?","m.mentions":{},"msgtype":"m.text"},"ts":1709662032199,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qwJupczO_1ciwhov5g67-G3cXVjravLz4a90Z_cpLg8"},
{"content":{"body":"https://github.com/WebAssembly/shared-everything-threads/discussions i think?","m.mentions":{},"msgtype":"m.text"},"ts":1709662137880,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6irww5RCqDBBJu84anxrpcbZDd7HmmfBdwhF3sshO88"},
{"content":{"body":"there's certainly a lot of activity there","m.mentions":{},"msgtype":"m.text"},"ts":1709662146671,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YuaAkwH2Pm0c-IndvvpaVqm8gKU5sfNrIFXurgukMA8"},
{"content":{"body":"ah didn't realize they use GH discussion. Sorry pretty new to wasm things","m.mentions":{},"msgtype":"m.text"},"ts":1709662169252,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$I9odGFCYbJ7ClB7lp71D_06TErsdZokZMVQ_x0muUVI"},
{"content":{"body":"i don't like discussions","m.mentions":{},"msgtype":"m.text"},"ts":1709662233604,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DPOEBT9ptyCEBYJWoX9n9kXrCJ9s29_Q0uEzShPR4IY"},
{"content":{"body":"it's just such a bizarre UI","m.mentions":{},"msgtype":"m.text"},"ts":1709662242972,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LysxOzoXqPYKVyUlfL1uRXlsf5ejAoGupM7QUWZy6GU"}
]