[
{"content":{"body":"Chatting with Mark yesterday, we realized that the wasm shared everything thread is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"msgtype":"m.text"},"ts":1709660756344,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$UrLhn9gh3gS9-wmL83hWK1QM_5Z0uBaibwhRpzXm1cg"},
{"content":{"body":" * Chatting with Mark yesterday, we realized that the wasm shared everything thread proposal is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"m.new_content":{"body":"Chatting with Mark yesterday, we realized that the wasm shared everything thread proposal is pretty strict about shared stuff not being able to access non shared stuff. Which brings the question, are there no use cases where shared funcs need to \"call\" a host function (which I assume is non-shared?). How would that work?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UrLhn9gh3gS9-wmL83hWK1QM_5Z0uBaibwhRpzXm1cg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709660769249,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$crs0QmBi4qX2-q1QBV8bsSvUr483kBD2WgHyWSBkWpk"},
{"content":{"body":"that is a required use case, in fact","m.mentions":{},"msgtype":"m.text"},"ts":1709661120245,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wD0QvOemL-5czHouB5XhVj6N_x0_MwDpCtq29vM_Clc"},
{"content":{"body":"that's what all the thread-local storage, thread-bound storage, and discussions of that nature orbit around","m.mentions":{},"msgtype":"m.text"},"ts":1709661139599,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NPdVEvlgaWNgJpWklRAcVxX0E7K7n2r5EHb2ulsXfb4"},
{"content":{"body":"i talked about this in the update talk as the \"syscall table\"","m.mentions":{},"msgtype":"m.text"},"ts":1709661160553,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Zp7rSyTgfYQcBNiBXeVYdCQs5cgTnNqxxbfUemDK1rM"},
{"content":{"body":"right but what I'm reading is that TLS only stored shared things?","m.mentions":{},"msgtype":"m.text"},"ts":1709661162976,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NzaHe_7cDyATA-LV14uhsadWa5SNoCmDuUbPiEdADVw"},
{"content":{"body":"TLS is a table that stores unshared things","m.mentions":{},"msgtype":"m.text"},"ts":1709661175517,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JLRew11dQWscW_5nqPO-AeCsgj7yKqX-D_cqIXA6cpA"},
{"content":{"body":"the _storage_ is local","format":"org.matrix.custom.html","formatted_body":"the <em>storage</em> is local","m.mentions":{},"msgtype":"m.text"},"ts":1709661180054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6c35g2yz9HIJWMz8JOL2kS6U4Zx0MWTBWG6HfvhliRU"},
{"content":{"body":"err","m.mentions":{},"msgtype":"m.text"},"ts":1709661184516,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-g7qfn8xPFi_TQ3puEV1YC5LdBoAyKhrwAAJUrzfOdw"},
{"content":{"body":" * the _storage_ is thread-local","format":"org.matrix.custom.html","formatted_body":" * the <em>storage</em> is thread-local","m.mentions":{},"m.new_content":{"body":"the _storage_ is thread-local","format":"org.matrix.custom.html","formatted_body":"the <em>storage</em> is thread-local","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6c35g2yz9HIJWMz8JOL2kS6U4Zx0MWTBWG6HfvhliRU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709661189624,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nR-OV4XHVC0-BHkEx7YWoFm7881roMyp_29pDJU3_xQ"},
{"content":{"body":"you can put e.g. web API JSFunctions inside them","m.mentions":{},"msgtype":"m.text"},"ts":1709661197522,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9QrVUamsNbcZBjHXh0wKGd9Bv9F5YUzOEIulQutTIFs"},
{"content":{"body":"the JS proposal also has the no shared->unshared edges restriction (at runtime)","m.mentions":{},"msgtype":"m.text"},"ts":1709661211027,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uFxTWyPAYcjEHlnQK6oYNGyr1i7Gjjrsrqm8P4EsplY"},
{"content":{"body":"In https://github.com/WebAssembly/shared-everything-threads/blob/main/proposals/shared-everything-threads/Overview.md#thread-local-storage-tls it says:\n> We don't allow non-shared references in thread-local globals because then they would not be able to be accessed from shared functions\n\nThat's why I'm confused","format":"org.matrix.custom.html","formatted_body":"<p>In https://github.com/WebAssembly/shared-everything-threads/blob/main/proposals/shared-everything-threads/Overview.md#thread-local-storage-tls it says:</p>\n<blockquote>\n<p>We don't allow non-shared references in thread-local globals because then they would not be able to be accessed from shared functions</p>\n</blockquote>\n<p>That's why I'm confused</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1709661262687,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$15vjfVGekW6dkdAKIS2MkVDehOYwkoQzsNdNqFE8Z2o"},
{"content":{"body":"oh that's a wasm type systems quirk, i was also confused by that","m.mentions":{},"msgtype":"m.text"},"ts":1709661288350,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EAYau1N6gOufaa5TUREV7-gTM4qTattfCRulinaRE3g"}
]