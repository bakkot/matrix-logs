[
{"content":{"body":"Right, this is why I concluded that the only reference point we could use is the module system ","format":"org.matrix.custom.html","formatted_body":"Right, this is why I concluded that the only reference point we could use is the module system","msgtype":"m.text"},"ts":1675055498484,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$cwb7fKCf8XSNBfQRJT4FDMDAX8y0CgKdCQsCL77T8-8"},
{"content":{"body":"just like builtin modules, there'd always have to be a way to access the same functionality in Scripts - how would that work at all with the module system?","msgtype":"m.text"},"ts":1675058850422,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gaBwSU47zI9VeCUs62jxzwkKBpH1s5zJj9QFAAuUgo0"},
{"content":{"body":"Automatically de-duping types based on module could also be difficult when the bundler inlines the defining module into separate main and worker bundles. It would need to know this module is an entry-point that should not be inlined ","format":"org.matrix.custom.html","formatted_body":"Automatically de-duping types based on module could also be difficult when the bundler inlines the defining module into separate main and worker bundles. It would need to know this module is an entry-point that should not be inlined","msgtype":"m.text"},"ts":1675067993169,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$k_W3CFnespbK7LjVR0ayiMzrhYJAOy5k6ASIX0mGVvM"},
{"content":{"body":"For manually registering a prototype:\n\n- `StructClass.adopt(orphanedInstance)` is potential the simplest to explain on its own but pre-instance-per-agent uses the most memory, and requires the most orchestration as each individual instance needs to be adopted before methods can be called ","format":"org.matrix.custom.html","formatted_body":"<p>For manually registering a prototype:</p>\n<ul>\n<li><code>StructClass.adopt(orphanedInstance)</code> is potential the simplest to explain on its own but pre-instance-per-agent uses the most memory, and requires the most orchestration as each individual instance needs to be adopted before methods can be called</li>\n</ul>","msgtype":"m.text"},"ts":1675068205930,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$VLLTFv2v9x7XTiIdq51XLcWgwPY0EKTJu_QJoWcND1A"},
{"content":{"body":"- registering once per type, reduces memory and is a one time orchestration and then it could \"just work\" from that point on. But needs to answer:  what carries the \"type\" being registered? Is the registry per-agent, or per-realm, or per-comms-channel?","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>registering once per type, reduces memory and is a one time orchestration and then it could &quot;just work&quot; from that point on. But needs to answer:  what carries the &quot;type&quot; being registered? Is the registry per-agent, or per-realm, or per-comms-channel?</li>\n</ul>","msgtype":"m.text"},"ts":1675068529041,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$lkahEnvQpyMKyG5RGMJHHeexgE4OmYO3Kh5GpJZfjQU"}
]