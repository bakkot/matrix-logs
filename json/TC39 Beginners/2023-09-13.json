[
{"content":{"body":"Hi, what's the difference between Completion Record `normal` and `return` type?","format":"org.matrix.custom.html","formatted_body":"Hi, what's the difference between Completion Record <code>normal</code> and <code>return</code> type?","msgtype":"m.text"},"ts":1694613134037,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$IIlLiIwQZETwTHqyZwWefAFRvQ61UFK-6zTs18Jcm4E"},
{"content":{"body":"https://tc39.es/ecma262/#table-completion-record-fields","msgtype":"m.text"},"ts":1694613217088,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$VmJ1PDpxFAJ4qTyNngRhbG607yVyiq8AFJ8lgsA47_8"},
{"content":{"body":"If you evaluate a statement (within a function body, say), and it causes a return from that function, then that's signaled via a `return` completion. If evaluation is to proceed normally to the next statement, then that's signaled by a `normal` completion.","format":"org.matrix.custom.html","formatted_body":"If you evaluate a statement (within a function body, say), and it causes a return from that function, then that's signaled via a <code>return</code> completion. If evaluation is to proceed normally to the next statement, then that's signaled by a <code>normal</code> completion.","msgtype":"m.text"},"ts":1694613401097,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$dgceRGD-0aNSn3uZWAjM-IjMHtogveiomEbTMMataNA"},
{"content":{"body":"Makes sense, but what about the next paragraph: \"Callable objects that are defined in this specification only return a normal completion or a throw completion. Returning any other kind of Completion Record is considered an editorial error.\"","msgtype":"m.text"},"ts":1694613639083,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$71QMah51HX0ckHMWEN8ObfDmw7OdZCf98pd1D0Ro1os"},
{"content":{"body":"I'll expect it to include `return` completion?","format":"org.matrix.custom.html","formatted_body":"I'll expect it to include <code>return</code> completion?","msgtype":"m.text"},"ts":1694613655657,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$EWqWjpDmFL8I5jXAyDE_OY83rVSRlRS54USuL8FsxJc"},
{"content":{"body":"No, if, within function A, you call function B, that call cannot cause a return from function A. (But it can cause A to throw.)","msgtype":"m.text"},"ts":1694613765717,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$tbXNupqMhahYtrbcfWWFCBidIWrUdzjfcDAfAzyJeMA"},
{"content":{"body":"The wording you quoted is not the best: callable objects (i.e., functions) don't return completions at all.","msgtype":"m.text"},"ts":1694613924742,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Gsu-nAVgEpLjg0bwQ0ux3_5hS0Q3bKoDB89ruOY6ISM"},
{"content":{"body":"Rather, the completions are 'internal' to the process of calling a function. I.e., certain algorithms in the spec are returning completions. ","msgtype":"m.text"},"ts":1694614113899,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$QuZpvwPigy4A5Ij0yFT5aeDgsKsdi4YCxW3BVe7pqqE"},
{"content":{"body":"It would be more accurate to say something like \"a function's [[Call]] internal method can only return a normal completion or a throw completion...\"","msgtype":"m.text"},"ts":1694614344409,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$YtfOjRSY9Fn7ydgmkgsFRpalfb2t_5rmfA7zhLkGWLY"},
{"content":{"body":"Hmm, I see... But still, it's a bit weird to me. Can you please point me to the semantics of function invocation in the spec? I can't seem to find it in https://tc39.es/ecma262/#sec-function-objects, https://tc39.es/ecma262/#sec-ecmascript-language-functions-and-classes, or https://tc39.es/ecma262/#sec-ecmascript-language-expressions","msgtype":"m.text"},"ts":1694614435208,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$zz5MA5Do5-fouI-Fik_nw1CxWD8VRSvYj1wZIHRNq_s"},
{"content":{"body":"What if I want to describe the semantics of invoking function A?","msgtype":"m.text"},"ts":1694614463438,"senderName":"zacque","senderId":"@zacque:matrix.org","id":"$0TN2w53FzdUHarZfklr9S70S2KoqPrP0J1CMq5wtxAU"},
{"content":{"body":"Function invocation is kind of involved. You should maybe start at https://tc39.es/ecma262/#sec-function-calls-runtime-semantics-evaluation","msgtype":"m.text"},"ts":1694614610202,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$g4exoZFeqQek9828JmL87GZ0i5sX1RbMh_6d_hsHBIc"},
{"content":{"body":"skip the first group and go to ` CallExpression : CallExpression Arguments`","format":"org.matrix.custom.html","formatted_body":"skip the first group and go to <code> CallExpression : CallExpression Arguments</code>","msgtype":"m.text"},"ts":1694614645396,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$iuIU3Km47kX1_-N1cBilLsJuXK1rt8RLfp9fROmZnHo"},
{"content":{"body":"to EvaluateCall(), to Call(), to [[Call]]()","format":"org.matrix.custom.html","formatted_body":"to EvaluateCall(), to Call(), to [Call]","msgtype":"m.text"},"ts":1694614702270,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$EbWshdu7EIrmcRU_MP-YJywkdx3f9DCJkc9R3yaHiSY"},
{"content":{"body":" * to EvaluateCall(), to Call(), to \\[\\[Call\\]\\]","format":"org.matrix.custom.html","formatted_body":" * to EvaluateCall(), to Call(), to [[Call]]","m.new_content":{"body":"to EvaluateCall(), to Call(), to \\[\\[Call\\]\\]","format":"org.matrix.custom.html","formatted_body":"to EvaluateCall(), to Call(), to [[Call]]","msgtype":"m.text"},"m.relates_to":{"event_id":"$EbWshdu7EIrmcRU_MP-YJywkdx3f9DCJkc9R3yaHiSY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694614716225,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$YYaLZzyCo8vGyUPt2AdY5It5JT-yFImc8gTR2L7j8xU"}
]