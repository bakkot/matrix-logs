[
{"content":{"body":"Hi there. I have two small questions: \n\nFirst one is regarding a need I had recently to get both quotient and remainder of an integer division at the same time.\n\nDidn't found anything doing it in JS, and felt a bit dumb needing to perform two distinct operations to do so.\n\nOk, it feels like micro optimization, and they are good chances that many JS engines optimize it transparently, but I just wanted to make sure I didn't missed anything about such a basic problematic ðŸ˜›","msgtype":"m.text"},"ts":1664020787058,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$GpjLtrLYaWerRBjfP6ozGoPfnvVvqWx1WwphRJuxHjo"},
{"content":{"body":"My second question is regarding a (maybe bad) code pattern I'm using often, which looks like : \n\nlet options = {}\n...\noptions = { ... options, extraParam }\n...\noptions = { anotherExtraParam, ...options }\n...\n\n","msgtype":"m.text"},"ts":1664021138807,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$wnWf7RRyQmsOGBfld7e98fiaPgJMIZqD3yYSbYlTIK8"},
{"content":{"body":"This pattern is making me feel like I'm adding fields to an object as if one would do :\n\ncount += 5\n\nExcept that there is no affectation operator to do it.","msgtype":"m.text"},"ts":1664021265964,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$io7__n6gGLuPZst5RIeiJfbHM800nv3O2aZLCllNnKM"},
{"content":{"body":"Is there a better way to write it, that would avoid writing twice the 'options' variable in the first code example ?","msgtype":"m.text"},"ts":1664021326569,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$eSJUrD-MoVqMuaOPjfBJS3ybAeHScQa__pq8C4hG-9s"},
{"content":{"body":"And would creating two new affectation operator such as :\n\noptions ...= extraParam\n\noptions =... anotherExtraParam\n\nWould make any sense.\n\nI mean I'm not even talking about all the syntaxique problematic it could arise, but simply if it would be of any use, wouldn't promote bad development habits, and wouldn't simply write another way something that could already be written in a simpler way ðŸ¤”","msgtype":"m.text"},"ts":1664021568588,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$WG680yIHDyFN0jKhu5iumMUO1p-49cJM8Xe040HC6LI"},
{"content":{"body":"Looking forward for any thoughts about it ðŸ˜Š","msgtype":"m.text"},"ts":1664022557380,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$frEEF4y1FC9B6ZRxIg1brufpRG7M9Ri2uRz887s4pNY"},
{"content":{"body":"lemmy: have you considered `Object.assign()` ?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mumeii:matrix.org\">lemmy</a>: have you considered <code>Object.assign()</code> ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"lemmy: have you considered `Object.assign()` ?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mumeii:matrix.org\">lemmy</a>: have you considered <code>Object.assign()</code> ?","mimetype":"text/html"}]},"ts":1664059183766,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$BiRoZkJujB7nBvU8jss69_IBbEu7JMMvhZ6XuxhPLuI"},
{"content":{"body":"what you're doing with the spread operator is fine; doesn't seem like an anti-pattern at all to me, but I don't know what the rest of your code looks like ðŸ™‚","msgtype":"m.text","org.matrix.msc1767.text":"what you're doing with the spread operator is fine; doesn't seem like an anti-pattern at all to me, but I don't know what the rest of your code looks like ðŸ™‚"},"ts":1664059320444,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$oW1-5-Yad9p5rYJYs2mU7zwCEEXyl-wYmPUym2TKbDY"},
{"content":{"body":"Hey Chris de Almeida ! ","format":"org.matrix.custom.html","formatted_body":"Hey <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>! ","msgtype":"m.text"},"ts":1664059365004,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$M7ODH4RPTKwny6_GYMrQvw-PJJlVp0JkPtU_G7CkOlU"},
{"content":{"body":"Thanks for the feedback ","msgtype":"m.text"},"ts":1664059373662,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$WnDftk6BJ5H0l5LiwdzJie5Mc-mgRa5zKPWY9N2x9-U"},
{"content":{"body":"I'll have a look to Object.assign, thanks","msgtype":"m.text"},"ts":1664059402099,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$RZNKKZK8xgRv35DA4r24UQeX_EG_ACLvO48pKh0w4xg"},
{"content":{"body":"Yup, assign seems to do the trick, plus it can be used with an empty target object if immutability is needed. More functional oriented than operators, I prefer this way in fact :) thanks for the tip","msgtype":"m.text"},"ts":1664060044007,"senderName":"lemmy","senderId":"@mumeii:matrix.org","id":"$GN6WEBz74b6zriHxfAevEL7h5h7GSXAz5GTzdar6S-Q"},
{"content":{"body":"happy to help","msgtype":"m.text","org.matrix.msc1767.text":"happy to help"},"ts":1664062092478,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$_yr9m9Mijzwx7Nc7TnWHcCPDcHBAj3R7uQG6GtIsldo"}
]