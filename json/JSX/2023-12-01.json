[
{"content":{"body":"> <@mhofman:matrix.org> I am ok exploring the problems of representing tree structures, but I am very skeptical it should take the shape of new syntax. Tagged templates litterals were added to the language to solve exactly this kind of problem, and the fact they have been used exactly for this same use case by other frameworks show JSX is not the only viable approach.\n\nI think that tagged templates for representing tree structures comes at the cost of runtime parsing and processing of the template. Unlike jsx which is already structured on the desired way as an object structure.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!gYQqrHiXdnZUcuEkqn:matrix.org/$Ruqz-3ohjUVr0JrvsWikxXTykNyKLs4PfCzGEmDUl3o?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br />I am ok exploring the problems of representing tree structures, but I am very skeptical it should take the shape of new syntax. Tagged templates litterals were added to the language to solve exactly this kind of problem, and the fact they have been used exactly for this same use case by other frameworks show JSX is not the only viable approach.</blockquote></mx-reply>I think that tagged templates for representing tree structures comes at the cost of runtime parsing and processing of the template. Unlike jsx which is already structured on the desired way as an object structure.","m.relates_to":{"m.in_reply_to":{"event_id":"$Ruqz-3ohjUVr0JrvsWikxXTykNyKLs4PfCzGEmDUl3o"}},"msgtype":"m.text"},"ts":1701396115381,"senderName":"David Brito","senderId":"@davbrito:matrix.org","id":"$l00Cu8i_pDFKi7i9pL2_tqLuSgjosOgCl7IjOa1uzo4"},
{"content":{"body":"In both cases it's text that has to be parsed. If the tag is built-in, I don't see the difference.","msgtype":"m.text"},"ts":1701396706967,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$iVuk0Nf_rJXnO2btsHxY8Wxw8bnVMiqS5bm1yYdwmng"},
{"content":{"body":"> <@mhofman:matrix.org> In both cases it's text that has to be parsed. If the tag is built-in, I don't see the difference.\n\nWould it then be some kind of special case of tagged templates with it's own specific call semantics?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!gYQqrHiXdnZUcuEkqn:matrix.org/$iVuk0Nf_rJXnO2btsHxY8Wxw8bnVMiqS5bm1yYdwmng?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br />In both cases it's text that has to be parsed. If the tag is built-in, I don't see the difference.</blockquote></mx-reply>Would it then be some kind of special case of tagged templates with it's own specific call semantics?","m.relates_to":{"m.in_reply_to":{"event_id":"$iVuk0Nf_rJXnO2btsHxY8Wxw8bnVMiqS5bm1yYdwmng"}},"msgtype":"m.text"},"ts":1701397145251,"senderName":"David Brito","senderId":"@davbrito:matrix.org","id":"$_MiW8RG7OX44bsJWQngY5q2nSLhXMiJwsqLX4nipodg"},
{"content":{"body":"No, why? The tag function gets passed an array of strings, and has to parse those according to the DSL it implements. If the function is natively implemented, the parsing can be as efficient as parsing the string of JS source code. Also the string array is immutable with unique identity, so the parsing can be cached.","msgtype":"m.text"},"ts":1701397412501,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$IiUBtWPz5fvAaMURAC3-cW1kdUmKD0ENEF5T4ZL5nK4"},
{"content":{"body":"I see your what you mean.","msgtype":"m.text"},"ts":1701397665117,"senderName":"David Brito","senderId":"@davbrito:matrix.org","id":"$7wz8aIQowSo38JGbUeaCSt6UujAv3vM2ojsPqAr0muE"},
{"content":{"body":"https://facebook.github.io/jsx/#sec-why-not-template-literals\n\nwell, the problem I think tagged template literal have, is exactly stated in the JSX doc","m.mentions":{},"msgtype":"m.text"},"ts":1701398266387,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$t2jGzjrMpxtyPmIsb_3bP3qLG23Uzx6Ra4b4UHg7uD0"}
]