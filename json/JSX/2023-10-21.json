[
{"content":{"body":"I wonder if \"just\" adding JSX to the syntax would cause any actual conflicts with the existing use of `<` for less-than comparisons? According to its [spec](https://facebook.github.io/jsx/), the JSXElement and JSXFragment are added as new PrimaryExpressions.","format":"org.matrix.custom.html","formatted_body":"I wonder if \"just\" adding JSX to the syntax would cause any actual conflicts with the existing use of <code>&lt;</code> for less-than comparisons? According to its <a href=\"https://facebook.github.io/jsx/\">spec</a>, the JSXElement and JSXFragment are added as new PrimaryExpressions.","m.mentions":{},"msgtype":"m.text"},"ts":1697883247035,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$KfSRfAiqOoLtgBsbdA1Fy1Sw7C99jw3RVQbO-0INfT4"},
{"content":{"body":"I would love to understand why JSX would need to be added as syntax, and why a built-in template tag litteral is not sufficient to support these use cases. I do realize some cases would require a little more verbose escaping, and that IDEs would need to get better at understanding DSLs in template tags, but that doesn't seem like a fundamental blocker to me. There have been a lot of discussions on this topic in ES Discourse, and I still don't understand the requirement for new syntax besides familiarity with JSX.","msgtype":"m.text"},"ts":1697902709663,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$pi06W-irVRWEy7zcbLxKXWwDYOUNIowMaRTHfzeAyrI"},
{"content":{"body":"Besides any other reasons, one aspect of JSX that I observe is that it works really well as a suburb for representing an XML-ish structure in JS. Since its release almost a decade ago, I think the only real change to the syntax has been the addition of fragments. Rather than inspiring alternatives, it's been adopted pretty much directly by a number of other front-end frameworks.\n\nSo given that a tagged template literal is in many ways easier to implement than something like JSX, I would point at the popularity of JSX and the rarity of comparable template literal solutions as a really strong indicator of the strength of the syntax.","msgtype":"m.text"},"ts":1697920867408,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$URG09bEaTMAoLGh9HwC6XBRwiWFJOjBWyq_8X50uBzs"},
{"content":{"body":"* Besides any other reasons, one aspect of JSX that I observe is that it works really well as a syntax for representing an XML-ish structure in JS. Since its release almost a decade ago, I think the only real change to the syntax has been the addition of fragments. Rather than inspiring alternatives, it's been adopted pretty much directly by a number of other front-end frameworks.\n\nSo given that a tagged template literal is in many ways easier to implement than something like JSX, I would point at the popularity of JSX and the rarity of comparable template literal solutions as a really strong indicator of the strength of the syntax.","m.new_content":{"body":"Besides any other reasons, one aspect of JSX that I observe is that it works really well as a syntax for representing an XML-ish structure in JS. Since its release almost a decade ago, I think the only real change to the syntax has been the addition of fragments. Rather than inspiring alternatives, it's been adopted pretty much directly by a number of other front-end frameworks.\n\nSo given that a tagged template literal is in many ways easier to implement than something like JSX, I would point at the popularity of JSX and the rarity of comparable template literal solutions as a really strong indicator of the strength of the syntax.","msgtype":"m.text"},"m.relates_to":{"event_id":"$URG09bEaTMAoLGh9HwC6XBRwiWFJOjBWyq_8X50uBzs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697920884698,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$YkzSoGUroiFn39d3noa9iv3nTcFFl7eOAH6IMKkQToY"},
{"content":{"body":"Whilst I agree that the popularity is a very strong signal of the need for some solution, there's been significant interest in evolving JSX with a new version for a long time, so I suspect what we have today is not the final form.","msgtype":"m.text"},"ts":1697924590018,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$rHBaEA-3txeatVnSLQrKmKHotLVTnNUdcWFnYJAiw3A"}
]