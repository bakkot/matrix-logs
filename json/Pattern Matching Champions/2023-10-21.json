[
{"content":{"body":"> <@rbuckton:matrix.org> Couldn't you disambiguate the rarer case of matching a function against itself by doing something like `x is y(...)`?\n\nno I cannot think of, but as a language feature, I'd like to keep the property that you can always do === match. this makes it feel \"complete\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$lWSHXvFnO0-2v-Xho1WcJRAHiW9FKeNcWlvSV-uAhRI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Couldn't you disambiguate the rarer case of matching a function against itself by doing something like <code>x is y(...)</code>?</blockquote></mx-reply>no I cannot think of, but as a language feature, I'd like to keep the property that you can always do === match. this makes it feel \"complete\"","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$lWSHXvFnO0-2v-Xho1WcJRAHiW9FKeNcWlvSV-uAhRI"}},"msgtype":"m.text"},"ts":1697863032519,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$GYygZS25lNJTAR7xsdx6Kk7RCyzv8FCL0lxqtEV7EG8"},
{"content":{"body":"> <@rbuckton:matrix.org> I just don't want `<`, `>`, `>=`, `<=`, and `in` to be lumped together with `===` if someone blocks `===`, as there is a huge difference in how often `<` et al will be used in comparison.\n\nyes, I'll make the separation between `>` and `===` so readers will know `===` can be removed and `>` still be kept if they don't like `===`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$RGb1hXTAk-GRGJ-RlmIwHvpp5jvy6exyjT7xq4S_nTw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I just don't want <code>&lt;</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;=</code>, and <code>in</code> to be lumped together with <code>===</code> if someone blocks <code>===</code>, as there is a huge difference in how often <code>&lt;</code> et al will be used in comparison.</blockquote></mx-reply>yes, I'll make the separation between <code>&gt;</code> and <code>===</code> so readers will know <code>===</code> can be removed and <code>&gt;</code> still be kept if they don't like <code>===</code>","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RGb1hXTAk-GRGJ-RlmIwHvpp5jvy6exyjT7xq4S_nTw"}},"msgtype":"m.text"},"ts":1697863125176,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Y_d8Fsc03X5w70M2ZaGS7GxNTPz5AuRWIoS5Rkxy-VQ"},
{"content":{"body":"That should be fine. `===` and `>` belong to different productions in the expression grammar as well, so it makes sense to separate them here","format":"org.matrix.custom.html","formatted_body":"That should be fine. <code>===</code> and <code>&gt;</code> belong to different productions in the expression grammar as well, so it makes sense to separate them here","msgtype":"m.text"},"ts":1697891047136,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4tclPEBtS7y-ArRaizVVPzMLMIP_BseinxPBN6CzG_A"}
]