[
{"content":{"body":"Hiya! I'm planning to submit a proposal at the next plenary for assertions (or the problem it solves), and I think it will have some overlap with pattern matching.\n\nBringing it up here so it's on your radar and in case you have any comments https://github.com/JakobJingleheimer/proposal-assertions ðŸ™‚","format":"org.matrix.custom.html","formatted_body":"<p>Hiya! I'm planning to submit a proposal at the next plenary for assertions (or the problem it solves), and I think it will have some overlap with pattern matching.</p>\n<p>Bringing it up here so it's on your radar and in case you have any comments https://github.com/JakobJingleheimer/proposal-assertions ðŸ™‚</p>","msgtype":"m.text"},"ts":1747163223531,"senderName":"jakobjingleheimer","senderId":"@jakobjingleheimer:matrix.org","id":"$RsJ9feOtmLznylsXV4XYRzc0OAOjnS-xdGHD0f1Ka-U"},
{"content":{"body":"jakobjingleheimer: Hm, I don't immediately see the connection. Enlighten me?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakobjingleheimer:matrix.org\">jakobjingleheimer</a>: Hm, I don't immediately see the connection. Enlighten me?","m.mentions":{"user_ids":["@jakobjingleheimer:matrix.org"]},"msgtype":"m.text"},"ts":1747175198371,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$KWRWepunATKU_R9yCbuWMY6x1NmXqcv4b0o1LCJKE2s"},
{"content":{"body":"eg `assert.equal(typeof x.foo, 'boolean');` and `match (x) { when { foo: boolean } {} }` are equivalent, aside from error message","format":"org.matrix.custom.html","formatted_body":"eg <code>assert.equal(typeof x.foo, 'boolean');</code> and <code>match (x) { when { foo: boolean } {} }</code> are equivalent, aside from error message","m.mentions":{},"msgtype":"m.text"},"ts":1747176654776,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vBljfqj5YXQqkcASfeKb2Vlq4cpdPnCBmo7kAacUUZY"},
{"content":{"body":"* eg `assert.equal(typeof x.foo, 'boolean');` and `match (x) { when { foo: boolean }: {} }` are equivalent, aside from error message","format":"org.matrix.custom.html","formatted_body":"* eg <code>assert.equal(typeof x.foo, 'boolean');</code> and <code>match (x) { when { foo: boolean }: {} }</code> are equivalent, aside from error message","m.mentions":{},"m.new_content":{"body":"eg `assert.equal(typeof x.foo, 'boolean');` and `match (x) { when { foo: boolean }: {} }` are equivalent, aside from error message","format":"org.matrix.custom.html","formatted_body":"eg <code>assert.equal(typeof x.foo, 'boolean');</code> and <code>match (x) { when { foo: boolean }: {} }</code> are equivalent, aside from error message","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$vBljfqj5YXQqkcASfeKb2Vlq4cpdPnCBmo7kAacUUZY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1747176664029,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yd9z_-TB0ks_AJ6-jWWted7lyHnzMr-KQAEx_hYvruw"},
{"content":{"body":"* eg `assert.equal(typeof x.foo, 'boolean');` and `match (x) { when { foo: boolean }: {} }` are equivalent, aside from error message (ignore any syntax mistakes, it's off the cuff)","format":"org.matrix.custom.html","formatted_body":"* eg <code>assert.equal(typeof x.foo, 'boolean');</code> and <code>match (x) { when { foo: boolean }: {} }</code> are equivalent, aside from error message (ignore any syntax mistakes, it's off the cuff)","m.mentions":{},"m.new_content":{"body":"eg `assert.equal(typeof x.foo, 'boolean');` and `match (x) { when { foo: boolean }: {} }` are equivalent, aside from error message (ignore any syntax mistakes, it's off the cuff)","format":"org.matrix.custom.html","formatted_body":"eg <code>assert.equal(typeof x.foo, 'boolean');</code> and <code>match (x) { when { foo: boolean }: {} }</code> are equivalent, aside from error message (ignore any syntax mistakes, it's off the cuff)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$vBljfqj5YXQqkcASfeKb2Vlq4cpdPnCBmo7kAacUUZY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1747176673213,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Gnmzbk4GvDqXznrcafDbQ7mDXcJVBRIDrqSmqjZxDtU"}
]