[
{"content":{"body":"Right, I think that's what'd happen, with `let {a as b: {c}} = expr;` for further destucturing *alongside* the naming. (In this case, storing expr.a as b, and expr.a.c as c.)","format":"org.matrix.custom.html","formatted_body":"Right, I think that's what'd happen, with <code>let {a as b: {c}} = expr;</code> for further destucturing <em>alongside</em> the naming. (In this case, storing expr.a as b, and expr.a.c as c.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Right, I think that's what'd happen, with `let {a as b: {c}} = expr;` for further destucturing *alongside* the naming. (In this case, storing expr.a as b, and expr.a.c as c.)","mimetype":"text/plain"},{"body":"Right, I think that's what'd happen, with <code>let {a as b: {c}} = expr;</code> for further destucturing <em>alongside</em> the naming. (In this case, storing expr.a as b, and expr.a.c as c.)","mimetype":"text/html"}]},"ts":1666730324594,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2T7CejJh10LIEkaSQDhkPqtmHMJtXXf_4oaPPb6Ab1k"},
{"content":{"body":"But pattern matching needs to have `as b` in the value space as a matcher, so it's usable in other types of patterns as well.","format":"org.matrix.custom.html","formatted_body":"But pattern matching needs to have <code>as b</code> in the value space as a matcher, so it's usable in other types of patterns as well.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But pattern matching needs to have `as b` in the value space as a matcher, so it's usable in other types of patterns as well.","mimetype":"text/plain"},{"body":"But pattern matching needs to have <code>as b</code> in the value space as a matcher, so it's usable in other types of patterns as well.","mimetype":"text/html"}]},"ts":1666730365223,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$RfDp547uPGYmg0kQYwlaAK0o7laZh3jWZzF_usvl1Bw"}
]