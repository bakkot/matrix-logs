[
{"content":{"body":"Had a silly thought, based on the extractor object idea: `if-let` and `let-in` as an alternative to `match-when`:\n```js\nlet x =\n  if let { statusCode: 200, body } in expr(body) \n```","msgtype":"m.text"},"ts":1639182949480,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lGgSg_yz8GIN2JmFUqvYkXERnLP9hpqttbWZCqJsREw"},
{"content":{"body":"rust does that","msgtype":"m.text"},"ts":1639182972781,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$mknhk-nZM5an1HET5luFAK8B-MuTuLlT2DV_Gjje048"},
{"content":{"body":"https://doc.rust-lang.org/rust-by-example/flow_control/if_let.html","msgtype":"m.text"},"ts":1639182980049,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$TPH7GPAhJ11w2GHnntjzh290kIht_AKAJWh_JlZY414"},
{"content":{"body":"I think it's useful, but not an alternative","msgtype":"m.text"},"ts":1639183000255,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$UVCmle10Pj3Fi6__c9P9L2nMZRGB17N9qRAGvDG-5lE"},
{"content":{"body":"how to do computed property key matching?","msgtype":"m.text"},"ts":1639189351406,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$iuNXsRvH1ZfgtT1FJOVscgX3pCGaHUGWcaGDvyS7vh8"},
{"content":{"body":"```js\nwhen ({ [expr]: 1 })\nwhen ({ [${expr}]: 1 })\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">when ({ [expr]: 1 })\nwhen ({ [${expr}]: 1 })\n</code></pre>\n","msgtype":"m.text"},"ts":1639189374251,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kpF64dn7lJqWqLFrtauY830x56yUgPl7njLoe_GvKbk"},
{"content":{"body":"which one?","msgtype":"m.text"},"ts":1639189377372,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$9yzmVbAx2OVxfqIF50Ap0H78x4nKbxUtWpAhU9Kmwfw"},
{"content":{"body":"Jack Works: it’d have to be the second one, unless it’s a string literal","msgtype":"m.text"},"ts":1639190101748,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1H6ivCyRjBPjJ770Dw1RaILi_I5uN_cH3oPESJd3Xhk"},
{"content":{"body":"is that worth opening an issue for? my gut instinct was the second way, but that'd diverge from destructuring... I don't see why we couldn't have the first way?","msgtype":"m.text"},"ts":1639190549628,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$hIAApVXk5EownXvHhB0WiYNMiAsa1oLdHktkDY9Ttyo"},
{"content":{"body":"Won't `${` step on possible syntax space? I'd like to bring extractor objects to committee next year, and it would conflict because $ is a valid identifier","msgtype":"m.text"},"ts":1639193040887,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LHNIj69YXn6FYFdyevCyT0Wl1hDuvIaiR0OPx8C89Qk"},
{"content":{"body":"* Won't `${` step on possible syntax space? I'd like to bring extractor objects to committee next year, and it would conflict because $ is a valid identifier","m.new_content":{"body":"Won't `${` step on possible syntax space? I'd like to bring extractor objects to committee next year, and it would conflict because $ is a valid identifier","msgtype":"m.text"},"m.relates_to":{"event_id":"$LHNIj69YXn6FYFdyevCyT0Wl1hDuvIaiR0OPx8C89Qk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1639193137006,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$c_kDqIf9-JU9oxyWPZGkQCh0egve6MGj-0tfMKGp5Mo"}
]