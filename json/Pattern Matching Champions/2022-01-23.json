[
{"content":{"body":"ah alrighty","msgtype":"m.text"},"ts":1642905574809,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$3OQb4cQHSEBCeNbGs9x5mnOJ6OMLsHvdMTJh_WRal0U"},
{"content":{"body":"about sep, have we discussed about this?\n`when (_Pattern_) -> expression` + `when (_Pattern_) Block`","format":"org.matrix.custom.html","formatted_body":"about sep, have we discussed about this?<br><code>when (_Pattern_) -&gt; expression</code> + <code>when (_Pattern_) Block</code>","msgtype":"m.text"},"ts":1642941208638,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Sy9uZdcZ6Un6oUYfIGCDkFBRW0NVh7xnhdeHQ6R-w4A"},
{"content":{"body":"We have, and our conclusion so far is that we'd prefer to lean on do-exprs for blocks and not special-case the syntax.","msgtype":"m.text"},"ts":1642953794059,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$UpCNrPJB0Gov2sz9ifWb_blot-5EFkN3dcj4cyH3m0Q"},
{"content":{"body":"(if we added blocks now, we'd just be tracking do-exprs exactly anyway, since each match arm has to produce a value)","msgtype":"m.text"},"ts":1642953832665,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ZaJoGivPB9jsZ9OvJfu-vNoCflUI5j9UANOZ5_Hhj24"},
{"content":{"body":"well, we *could* say that when match is in statement position, it’s RHS can be a block with normal block semantics. But that’s a refactoring hazard, and somewhat repeats the mistakes of functions.","format":"org.matrix.custom.html","formatted_body":"well, we <em>could</em> say that when match is in statement position, it’s RHS can be a block with normal block semantics. But that’s a refactoring hazard, and somewhat repeats the mistakes of functions.","msgtype":"m.text"},"ts":1642954970570,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5jSIloNcMtElGxZO0y3fnBTHJ06Y_z7NS_-ktyRJCIM"},
{"content":{"body":"> <@ljharb:matrix.org> well, we *could* say that when match is in statement position, it’s RHS can be a block with normal block semantics. But that’s a refactoring hazard, and somewhat repeats the mistakes of functions.\n\nI think it's acceptable to have this refactoring hazard. When a match statements is initially written in the statement position, it's intended to use as an statement, so it's completion value is highly likely are not going to be used.\nAnd it will become a syntax error therefore the developer can know it right after they changed their statements into the expression position.\n\nI think this kind of refactoring hazard is not a real hazard because it does not create implicit bug but an early error. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$5jSIloNcMtElGxZO0y3fnBTHJ06Y_z7NS_-ktyRJCIM?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />well, we <em>could</em> say that when match is in statement position, it’s RHS can be a block with normal block semantics. But that’s a refactoring hazard, and somewhat repeats the mistakes of functions.</blockquote></mx-reply><p>I think it's acceptable to have this refactoring hazard. When a match statements is initially written in the statement position, it's intended to use as an statement, so it's completion value is highly likely are not going to be used.<br />And it will become a syntax error therefore the developer can know it right after they changed their statements into the expression position.</p>\n<p>I think this kind of refactoring hazard is not a real hazard because it does not create implicit bug but an early error.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$5jSIloNcMtElGxZO0y3fnBTHJ06Y_z7NS_-ktyRJCIM"}},"msgtype":"m.text"},"ts":1642955279729,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rrL7Lh3mKbsiP7UZtbYi1rPtm_13O4kCgZ6PjKHx4KM"},
{"content":{"body":"that's a fair point. but i still think it'd be confusing for people to have to think about statement vs expression position unnecessarily","msgtype":"m.text"},"ts":1642955356815,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HSBQ7z475bC4qHsfJbTRhpORWEvAlnUBivoT7A7X95g"}
]