[
{"content":{"body":"The current semantics of `InvokeCustomMatcher` don't work well for extractors due to the `SameValueZero` and `SameValueNonNumber` semantics on steps 1 and 3. I would expect that steps 1 and 3 would return `false` when _kind_ is `~list~`, since a `Foo(x)` is invalid if `Foo` isn't a valid matcher since an iterator is expected.","format":"org.matrix.custom.html","formatted_body":"The current semantics of <code>InvokeCustomMatcher</code> don't work well for extractors due to the <code>SameValueZero</code> and <code>SameValueNonNumber</code> semantics on steps 1 and 3. I would expect that steps 1 and 3 would return <code>false</code> when <em>kind</em> is <code>~list~</code>, since a <code>Foo(x)</code> is invalid if <code>Foo</code> isn't a valid matcher since an iterator is expected.","m.mentions":{},"msgtype":"m.text"},"ts":1711464355780,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$1qCWGWUGVHZ_Ph4bg4nbYs5wi2oZeVY8L35NshB6mNI"},
{"content":{"body":"Also, step 10 and 11 say:\n> 10. Perform ? GetIteratorCached(_result_, _cacheGroup_).\n> 11. Return _result_.\n\nWhy are we not returning the iterator here? I was hoping to avoid dragging in all of the caching logic for non-pattern Extractors, but if I want to reuse `InvokeCustomMatcher` it seems like I would need to do so.","format":"org.matrix.custom.html","formatted_body":"<p>Also, step 10 and 11 say:</p>\n<blockquote>\n<ol start=\"10\">\n<li>Perform ? GetIteratorCached(<em>result</em>, <em>cacheGroup</em>).</li>\n<li>Return <em>result</em>.</li>\n</ol>\n</blockquote>\n<p>Why are we not returning the iterator here? I was hoping to avoid dragging in all of the caching logic for non-pattern Extractors, but if I want to reuse <code>InvokeCustomMatcher</code> it seems like I would need to do so.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1711465313465,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LwB_b0FchEos2pZ0LSWGLQJVUPjbBnCghoTaYFrzt7k"}
]