[
{"content":{"body":"I'm doing some tweaking of the proposal based on the feedback from last meeting + littledan's private feedback, and littledan had a good idea for the binding syntax, I think.","msgtype":"m.text"},"ts":1680897972205,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$0aR0_-ouVX27c1TX54rSnMO0yh1d-ZvPka0LhofNaMY"},
{"content":{"body":"Jordan wanted the ability to drop matchers into destructuring, using the same syntax as what I'm proposing for function args. This sounds great in general, and it means that the `let` and `for` syntaxes no longer become new additions; they're just destructuring that happens to use the first argument form (`when ...` only, no arg name) for the top-level destructuring pattern.","format":"org.matrix.custom.html","formatted_body":"Jordan wanted the ability to drop matchers into destructuring, using the same syntax as what I'm proposing for function args. This sounds great in general, and it means that the <code>let</code> and <code>for</code> syntaxes no longer become new additions; they're just destructuring that happens to use the first argument form (<code>when ...</code> only, no arg name) for the top-level destructuring pattern.","msgtype":"m.text"},"ts":1680898059986,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$W_lP_4FqPSDUwx-bVJ3uf90-x-0lMqkGitZ5juYuvzs"},
{"content":{"body":"So this would mean that adding a matcher to a destructuring pattern like `{a, b: c}` would be spelled like `{a, b: c when ...}`.","format":"org.matrix.custom.html","formatted_body":"So this would mean that adding a matcher to a destructuring pattern like <code>{a, b: c}</code> would be spelled like <code>{a, b: c when ...}</code>.","msgtype":"m.text"},"ts":1680898101925,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$uA7dIefZ8N4ttnFs7HQ5VNgQ4eQYPcqxxOpiLYLdrxs"},
{"content":{"body":"@littledan suggests that we can use that same syntax *in* matchers as the \"naming a chunk of the pattern\" syntax - `when [a, b when {prop}]: ...;` to bind the first value to `a`, the second to `b`, and additionally test the second value to make sure it has a `.prop` (and bind that value too, while we're at it).","format":"org.matrix.custom.html","formatted_body":"@littledan suggests that we can use that same syntax <em>in</em> matchers as the &quot;naming a chunk of the pattern&quot; syntax - <code>when [a, b when {prop}]: ...;</code> to bind the first value to <code>a</code>, the second to <code>b</code>, and additionally test the second value to make sure it has a <code>.prop</code> (and bind that value too, while we're at it).","msgtype":"m.text"},"ts":1680898166738,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$qUzT03xsJp_ukAxTVmx91bpfb1wLV0fz_lLYmweToJ4"},
{"content":{"body":"This sounds pretty good to me; I'm gonna rewrite toward that pattern.","msgtype":"m.text"},"ts":1680898178857,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$hQvrvLAek76XG62IR_XjQR2DHEhC6U7vtq8Oshfr-hI"}
]