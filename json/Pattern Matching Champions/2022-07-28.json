[
{"content":{"body":"I hope you don't mind me butting in - just a distant observer. I quite like the presentation of the layering from yulia . However, one concern, which I think TabAtkins picked upon, with the specific content of the proposal is that the `let when` matching doesn't allow for matching on nested properties, which I think its pretty core the value of the original pattern matching proposal and is a common feature across prior art in other languages. \n\nFor some context, I originally suggested expanding the matcher proposal to include implementation for at least all scalars in the language, and I provide some example use cases in the first few comments https://github.com/tc39/proposal-pattern-matching/issues/209","format":"org.matrix.custom.html","formatted_body":"<p>I hope you don't mind me butting in - just a distant observer. I quite like the presentation of the layering from <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> . However, one concern, which I think <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> picked upon, with the specific content of the proposal is that the <code>let when</code> matching doesn't allow for matching on nested properties, which I think its pretty core the value of the original pattern matching proposal and is a common feature across prior art in other languages.</p>\n<p>For some context, I originally suggested expanding the matcher proposal to include implementation for at least all scalars in the language, and I provide some example use cases in the first few comments https://github.com/tc39/proposal-pattern-matching/issues/209</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I hope you don't mind me butting in - just a distant observer. I quite like the presentation of the layering from yulia . However, one concern, which I think TabAtkins picked upon, with the specific content of the proposal is that the `let when` matching doesn't allow for matching on nested properties, which I think its pretty core the value of the original pattern matching proposal and is a common feature across prior art in other languages. \n\nFor some context, I originally suggested expanding the matcher proposal to include implementation for at least all scalars in the language, and I provide some example use cases in the first few comments https://github.com/tc39/proposal-pattern-matching/issues/209","mimetype":"text/plain"},{"body":"<p>I hope you don't mind me butting in - just a distant observer. I quite like the presentation of the layering from <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> . However, one concern, which I think <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> picked upon, with the specific content of the proposal is that the <code>let when</code> matching doesn't allow for matching on nested properties, which I think its pretty core the value of the original pattern matching proposal and is a common feature across prior art in other languages.</p>\n<p>For some context, I originally suggested expanding the matcher proposal to include implementation for at least all scalars in the language, and I provide some example use cases in the first few comments https://github.com/tc39/proposal-pattern-matching/issues/209</p>\n","mimetype":"text/html"}]},"ts":1659002865053,"senderName":"michael","senderId":"@m-rutter:matrix.org","id":"$0OGaRHnB4QvXh4BfmoGhxqMz5Sb9W-RszyuZa_vMBFU"},
{"content":{"body":"but I can definitely see the value of building up the feature from smaller parts that can be used standalone - it could make it a better integrated feature in the language if its made up of smaller parts that have value elsewhere","msgtype":"m.text","org.matrix.msc1767.text":"but I can definitely see the value of building up the feature from smaller parts that can be used standalone - it could make it a better integrated feature in the language if its made up of smaller parts that have value elsewhere"},"ts":1659002980670,"senderName":"michael","senderId":"@m-rutter:matrix.org","id":"$mGXcwU1dKKHPuI0iB9JeJ65sineTO65SQ1OLuRRbzNQ"},
{"content":{"body":"easier to understand, and educate users","msgtype":"m.text","org.matrix.msc1767.text":"easier to understand, and educate users"},"ts":1659002994895,"senderName":"michael","senderId":"@m-rutter:matrix.org","id":"$qghKgKoYxpAeFhIQXLTNsrci5bsT2hX2ZRmm_WyzilY"}
]