[
{"content":{"body":"I mean, compare to rust/swift/c#/java (even python), our current syntax seems have more syntax noise: parens, pin operator, `with/as` keywords.","format":"org.matrix.custom.html","formatted_body":"I mean, compare to rust/swift/c#/java (even python), our current syntax seems have more syntax noise: parens, pin operator, <code>with/as</code> keywords.","msgtype":"m.text"},"ts":1628146494724,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$HCDABFn0xZohF70pXGbWVw-2Co8mMLtkEAlY8QoLPxg"},
{"content":{"body":"sure, but i don’t think those are apples to apples comparisons, because the languages are all so different.","msgtype":"m.text"},"ts":1628171990881,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OIJOxXzqqJLTKdZCq2s1BChH-URrhih9dICf6xszFJY"},
{"content":{"body":"Python has the `as` keyword and parens (it doesn't *require* them on the top level, and I hope we can land on a syntax that doesn't either, but that's a separate issue). It doesn't have pin/`with`, because it *instead* devotes a different chunk of its syntax to the class-property matcher concept.","format":"org.matrix.custom.html","formatted_body":"Python has the <code>as</code> keyword and parens (it doesn't <em>require</em> them on the top level, and I hope we can land on a syntax that doesn't either, but that's a separate issue). It doesn't have pin/<code>with</code>, because it <em>instead</em> devotes a different chunk of its syntax to the class-property matcher concept.","msgtype":"m.text"},"ts":1628187591384,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$8Tn_O_JMDGlabP1PAIKmrupAWv3Xx28_yXt4JxgODvM"},
{"content":{"body":"All in all, Python and this proposal are *very similar* in overall syntax complexity, essentially equivalent.","format":"org.matrix.custom.html","formatted_body":"All in all, Python and this proposal are <em>very similar</em> in overall syntax complexity, essentially equivalent.","msgtype":"m.text"},"ts":1628187619794,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$KiMPLC6R3tsD81TYLVrOc7AUg04t7i8NccTLBTGE6fE"},
{"content":{"body":"Rust has somewhat less, but it's also less powerful, in ways that I think are significant, and it gains some of its simplicity from being able to lean on structural typing, which we have to handle with pin.","msgtype":"m.text"},"ts":1628187714460,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ZODDJ7OR4jdS9wawPkn-qK1vpFziVxZlH0HWs5vJaS0"},
{"content":{"body":"I'm not familiar enough with Swift/C# to judge them, but I suspect they're in a similar place - they're either less powerful, have similar syntax weight, or have \"less\" because they get to rely on a more powerful feature of the language that JS doesn't have access to.","msgtype":"m.text"},"ts":1628187780297,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$aANPGL8SiSLvkipDC5TXeq49rUpKg6gEg0ye-fI3oek"},
{"content":{"body":"How do we feel about closing some of the older issues that the Champion group seems pretty united against? Like <https://github.com/tc39/proposal-pattern-matching/issues/194>, where the OP really dislikes `if` without a matcher.","format":"org.matrix.custom.html","formatted_body":"How do we feel about closing some of the older issues that the Champion group seems pretty united against? Like <a href=\"https://github.com/tc39/proposal-pattern-matching/issues/194\">https://github.com/tc39/proposal-pattern-matching/issues/194</a>, where the OP really dislikes <code>if</code> without a matcher.","msgtype":"m.text"},"ts":1628188620711,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$QnlzbJHm4RetD3Im26exfKQhMrXNs9lNww_VUwp--OE"},
{"content":{"body":"I also doubt `if` without matcher, it seems no precedent in other languages. I always think we should have a very strong reason to invent something without precedents.","format":"org.matrix.custom.html","formatted_body":"I also doubt <code>if</code> without matcher, it seems no precedent in other languages. I always think we should have a very strong reason to invent something without precedents.","msgtype":"m.text"},"ts":1628191014697,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$E-Gb9l9LCavcohTfRnhGKm15DU1NPljL6iEr3eGywRY"},
{"content":{"body":"> <@ljharb:matrix.org> sure, but i don’t think those are apples to apples comparisons, because the languages are all so different.\n\nYeah, of coz every languages have some differences, while they also have similarities. Differences should not mean we can't improve current syntax, especially the goal of pattern match is improve ergonomics. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$OIJOxXzqqJLTKdZCq2s1BChH-URrhih9dICf6xszFJY?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>sure, but i don’t think those are apples to apples comparisons, because the languages are all so different.</blockquote></mx-reply>Yeah, of coz every languages have some differences, while they also have similarities. Differences should not mean we can't improve current syntax, especially the goal of pattern match is improve ergonomics.","m.relates_to":{"m.in_reply_to":{"event_id":"$OIJOxXzqqJLTKdZCq2s1BChH-URrhih9dICf6xszFJY"}},"msgtype":"m.text"},"ts":1628191859166,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$6OdgoPq_03LogeB8nT8h1N39OX7cegN1CRDgCJb8qIM"},
{"content":{"body":"> <@tabatkins:matrix.org> All in all, Python and this proposal are *very similar* in overall syntax complexity, essentially equivalent.\n\nAs I know there are many complains about the pep622 in python community, that's also the reason I hope we should be cautious about the syntax :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$KiMPLC6R3tsD81TYLVrOc7AUg04t7i8NccTLBTGE6fE?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>All in all, Python and this proposal are <em>very similar</em> in overall syntax complexity, essentially equivalent.</blockquote></mx-reply>As I know there are many complains about the pep622 in python community, that's also the reason I hope we should be cautious about the syntax :)","m.relates_to":{"m.in_reply_to":{"event_id":"$KiMPLC6R3tsD81TYLVrOc7AUg04t7i8NccTLBTGE6fE"}},"msgtype":"m.text"},"ts":1628192268163,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$KDLoHrX5QmfJseNg0JVZV9FfoxUd1i98sK5ECQBeD70"},
{"content":{"body":"If we don’t have a bare if, then people will be forced to do `when (_) if (…)`, and they will do that. Why would we want to knowingly encourage a gross pattern?","format":"org.matrix.custom.html","formatted_body":"If we don’t have a bare if, then people will be forced to do <code>when (_) if (…)</code>, and they will do that. Why would we want to knowingly encourage a gross pattern?","msgtype":"m.text"},"ts":1628201414780,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NmkM9OHrU6wj-ZXOcoGnOuvmzXU9JJbyczww8xCOqpk"},
{"content":{"body":"Notably, at least a few langs I know that don't have a bare `if` also don't have extra syntax weight on their clauses, so the \"non-bare\" `if` just has a `_` before it to indicate a throw-away irrefutable match. They clearly don't *need* to allow bare `if` because it's so cheap to just do a match.","format":"org.matrix.custom.html","formatted_body":"Notably, at least a few langs I know that don't have a bare <code>if</code> also don't have extra syntax weight on their clauses, so the &quot;non-bare&quot; <code>if</code> just has a <code>_</code> before it to indicate a throw-away irrefutable match. They clearly don't <em>need</em> to allow bare <code>if</code> because it's so cheap to just do a match.","msgtype":"m.text"},"ts":1628203283015,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$bLVfrkCPJPTk4Xf81gGekmYbFqEioCO_RfjY_ExdMCo"}
]