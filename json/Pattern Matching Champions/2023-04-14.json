[
{"content":{"body":"> `({ x: when [y] } = value)` is already legal JS\n\nwhat. how. what does that parse as","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p><code>({ x: when [y] } = value)</code> is already legal JS</p>\n</blockquote>\n<p>what. how. what does that parse as</p>\n","msgtype":"m.text"},"ts":1681510820948,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$gM3JQQIQjmpmdS01MLM05PTTIEqI9VSzR-xsvyGthVM"},
{"content":{"body":"mfer is that pulling out the x property and assigning its value to `when[y]`","format":"org.matrix.custom.html","formatted_body":"mfer is that pulling out the x property and assigning its value to <code>when[y]</code>","msgtype":"m.text"},"ts":1681510874058,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$i-Rig6Le9kpw8J0otSaigRDfA65PeFuaRlgvJA2Kj3A"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1681511023158,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dNtjPufvkeUA8FtV4rsbuyDyaD4C6WCd8eqMdH1eKgA"},
{"content":{"body":"it's super terrible and i don't understand how the 2015 era committee thought it was acceptable, but here we are","msgtype":"m.text"},"ts":1681511058954,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fy8_nC8x79ljZfQSjqprabg2dK-ivE6rL1dbRGhTEFA"},
{"content":{"body":"clearly we need to swap `when`=>`case` and just call it a day","format":"org.matrix.custom.html","formatted_body":"clearly we need to swap <code>when</code>=&gt;<code>case</code> and just call it a day","msgtype":"m.text"},"ts":1681511312911,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$39-bJRRl4yoxWJw4BObqsu8Q70yrRzEcC0Ik3te4XyY"},
{"content":{"body":"hard no :-p","msgtype":"m.text"},"ts":1681511486523,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$otiSCk7LCtPnbVyjmUe32RodV-H-4FYjMElXx8YxBcw"},
{"content":{"body":"`while` is reserved and it's basically a synonym for `when`, we can use that. :p","format":"org.matrix.custom.html","formatted_body":"<code>while</code> is reserved and it's basically a synonym for <code>when</code>, we can use that. :p","msgtype":"m.text"},"ts":1681511567686,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$FUr4tAF5g_-RIhEsqI3sIPEFYB7Cy4C_-3PCyLltbVQ"},
{"content":{"body":"nah it means something different, while implies continuousness while when implies a single occurrence","msgtype":"m.text"},"ts":1681511644428,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GLFqEUJP4ZIFh8LnukXWZImS1PRrqmMHWjIiqXR-lFM"},
{"content":{"body":"> <@rbuckton:matrix.org> Besides, I much prefer C#'s `if (dictionary.TryGetValue(key, out var value))` to `if (map.has(key)) { let value = map.get(key); ... }` due to the repetition and potential performance issues of querying a key twice.\n\nThis is why we can't kill interpolation matchers, fwiw. `when ${Map.get(key)}(val)` is definitely the sort of custom matcher i'd expect to work.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$BCpna1wqOrGmOalh5hf0RVjyh7_Ye2nsZ1pAPrSTEWk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Besides, I much prefer C#'s <code>if (dictionary.TryGetValue(key, out var value))</code> to <code>if (map.has(key)) { let value = map.get(key); ... }</code> due to the repetition and potential performance issues of querying a key twice.</blockquote></mx-reply>This is why we can't kill interpolation matchers, fwiw. <code>when ${Map.get(key)}(val)</code> is definitely the sort of custom matcher i'd expect to work.","m.relates_to":{"m.in_reply_to":{"event_id":"$BCpna1wqOrGmOalh5hf0RVjyh7_Ye2nsZ1pAPrSTEWk"}},"msgtype":"m.text"},"ts":1681511767528,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$4zODlc4TYt8vkJwR-ZAmxVv2XtocM-CwL2lQjBoXBHU"},
{"content":{"body":"I don't think we should be mixing expression-space and pattern-space like that. It's too complicated, no other language does this, and it will make patterns so much harder to reason over. 99% of the time you won't need it, and you can just save off the value in a variable when you do. ","format":"org.matrix.custom.html","formatted_body":"I don't think we should be mixing expression-space and pattern-space like that. It's too complicated, no other language does this, and it will make patterns so much harder to reason over. 99% of the time you won't need it, and you can just save off the value in a variable when you do.","msgtype":"m.text"},"ts":1681512588296,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wWu7J4SVZoh6Qu3KqZ5z5HMwEv-BbpbeZ29O9DAKBWo"}
]