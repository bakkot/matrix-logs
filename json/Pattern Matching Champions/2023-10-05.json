[
{"content":{"body":"> <@tabatkins:matrix.org> And if you think I'm not being kind with that interpretation of your statements, well, same.\n\nSorry, this has indeed been quite difficult. What I was seeking in bringing the conversation here is a \"step away from plenary and have a calm sidebar chat to resolve concerns\" situation but I don't think this chat can actually replicate that; the illusion that it could has probably made this a worse choice than just using a GH issue","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$5bclj_FUw8MSGcDtRGDh8MDu69J10gEnC_rjC12ASIo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>And if you think I&#39;m not being kind with that interpretation of your statements, well, same.</blockquote></mx-reply>Sorry, this has indeed been quite difficult. What I was seeking in bringing the conversation here is a \"step away from plenary and have a calm sidebar chat to resolve concerns\" situation but I don't think this chat can actually replicate that; the illusion that it could has probably made this a worse choice than just using a GH issue","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5bclj_FUw8MSGcDtRGDh8MDu69J10gEnC_rjC12ASIo"}},"msgtype":"m.text"},"ts":1696466583377,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$J0WQzRNzXK-AcZvY2FMyk6BCvQRpZ-MCdh1cjibgAyo"},
{"content":{"body":"> <@ljharb:matrix.org> i'm a bit confused about the implication of \"protecting\"; nothing we do here will break existing JS, it's just about existing developers' expectations and intuition, and the likelihood of bugs in both use and refactors, no?\n\n\"protecting existing JS\" was just my single-phrase summary of the worry I expressed -- of course we're not going to break the web regardless, but \"we now have to worry about interactions of patterns with literally everything else in the language\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$8cJ3hoIVNMpmyHQYGJgZGfQQ9bGtjvLLr0rBBQidguE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i&#39;m a bit confused about the implication of &quot;protecting&quot;; nothing we do here will break existing JS, it&#39;s just about existing developers&#39; expectations and intuition, and the likelihood of bugs in both use and refactors, no?</blockquote></mx-reply>\"protecting existing JS\" was just my single-phrase summary of the worry I expressed -- of course we're not going to break the web regardless, but \"we now have to worry about interactions of patterns with literally everything else in the language\"","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$8cJ3hoIVNMpmyHQYGJgZGfQQ9bGtjvLLr0rBBQidguE"}},"msgtype":"m.text"},"ts":1696467712242,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$cFoXHHOTAfe2hJR9a6BxDdYn-dXpzqdqTWtBAVcbdTw"},
{"content":{"body":"> <@rkirsling:matrix.org> combined with combinators and if patterns it's as if we're now not just redoing `switch` but also redoing destructuring, boolean operators, and ternaries; it feels like a bifurcation of the language\n\nnamely, this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$GifT3Dn7gXRex_4v0ecTVBkTD7SuXkoLxTPcVxalii0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling:matrix.org</a><br>combined with combinators and if patterns it's as if we're now not just redoing <code>switch</code> but also redoing destructuring, boolean operators, and ternaries; it feels like a bifurcation of the language</blockquote></mx-reply>namely, this","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$GifT3Dn7gXRex_4v0ecTVBkTD7SuXkoLxTPcVxalii0"}},"msgtype":"m.text"},"ts":1696467766775,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$NdqVxpGPfNiMDgbWpXhuOE_VStOT50R9OXbuBrJgsHM"},
{"content":{"body":"Anyway, this started as me feeling that I must be missing some important rationale lurking behind our current approach, but","m.mentions":{},"msgtype":"m.text"},"ts":1696468018063,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$VPZN96BInWPyzfusjlHmoRBXNW7ZZVbcc6vwN2mvLCs"},
{"content":{"body":"if, by this point, it's just me having a different opinion, I'm happy to try to formulate a clear statement of that on GH instead","m.mentions":{},"msgtype":"m.text"},"ts":1696468053899,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$x-VXPTOuj1As39woVbq_SL75qybsOs5kDEB1-DMnoQ0"},
{"content":{"body":"> <@rkirsling:matrix.org> \"protecting existing JS\" was just my single-phrase summary of the worry I expressed -- of course we're not going to break the web regardless, but \"we now have to worry about interactions of patterns with literally everything else in the language\"\n\nthat was always going to be the case; even if this proposal didn't include it, there's tons of follow-ons waiting in the wings to add patterns in lots of other places","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$cFoXHHOTAfe2hJR9a6BxDdYn-dXpzqdqTWtBAVcbdTw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling:matrix.org</a><br>\"protecting existing JS\" was just my single-phrase summary of the worry I expressed -- of course we're not going to break the web regardless, but \"we now have to worry about interactions of patterns with literally everything else in the language\"</blockquote></mx-reply>that was always going to be the case; even if this proposal didn't include it, there's tons of follow-ons waiting in the wings to add patterns in lots of other places","m.mentions":{"user_ids":["@rkirsling:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cFoXHHOTAfe2hJR9a6BxDdYn-dXpzqdqTWtBAVcbdTw"}},"msgtype":"m.text"},"ts":1696470218559,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Lv4tNsTJ1DuodxfM8jXD_P7psBDWon86udGnBeQ00lI"},
{"content":{"body":"fair enough","m.mentions":{},"msgtype":"m.text"},"ts":1696470837993,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Yu_KUGVBBvfvBj_cZi0Q1Av4b2Xai19wqh9wcq0mKNU"},
{"content":{"body":"I mean, even with that possibility, I think \"what's our absolute minimum for day 1 must-haves\" is an important thing to have in mind","m.mentions":{},"msgtype":"m.text"},"ts":1696470936610,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Me7c30lC_A51nWs_ImzZM-R9jTeOJFI0xXXxKb4D53Q"},
{"content":{"body":" * I mean, even with that possibility, I think \"what's our absolute minimum for day 1 must-haves\" is an important thing to have continually in mind","m.mentions":{},"m.new_content":{"body":"I mean, even with that possibility, I think \"what's our absolute minimum for day 1 must-haves\" is an important thing to have continually in mind","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Me7c30lC_A51nWs_ImzZM-R9jTeOJFI0xXXxKb4D53Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1696470951286,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$uGfIx2yCeCwIlB9j5q6x3suOJm4hUkNhzC80hCPSgAs"},
{"content":{"body":"but I think that's sort of my point anyway: this is really shocking scope creep for a single proposal, but it wouldn't have to feel that way if it _weren't_ a single proposal","format":"org.matrix.custom.html","formatted_body":"but I think that's sort of my point anyway: this is really shocking scope creep for a single proposal, but it wouldn't have to feel that way if it <em>weren't</em> a single proposal","m.mentions":{},"msgtype":"m.text"},"ts":1696471066430,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$360me6lZTwpNoIijbpijHULiBaxl7gSHbMpfa5t5bvY"},
{"content":{"body":"indeed, I think it's interesting that Python _rejected_ \"and\" and \"not\"\nhttps://peps.python.org/pep-0622/#and-patterns\n\nand deferred \"patterns outside of `match`\" as well as custom matchers\nhttps://peps.python.org/pep-0622/#one-off-syntax-variant","format":"org.matrix.custom.html","formatted_body":"<p>indeed, I think it's interesting that Python <em>rejected</em> \"and\" and \"not\"<br>https://peps.python.org/pep-0622/#and-patterns</p>\n<p>and deferred \"patterns outside of <code>match</code>\" as well as custom matchers<br>https://peps.python.org/pep-0622/#one-off-syntax-variant</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1696482692112,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$-KAXaxnnMAnNxoqhsOIVTlFcHW7USY1D-3EHWoaHVLQ"},
{"content":{"body":"I find the \"rarely used\" argument for `and` and `not` to be debatable. I've seen them both used quite often in C#","format":"org.matrix.custom.html","formatted_body":"I find the &quot;rarely used&quot; argument for <code>and</code> and <code>not</code> to be debatable. I've seen them both used quite often in C#","msgtype":"m.text"},"ts":1696502929534,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$c01jqfhqcnPj4ziMsySJzv743d_jciCus71Pqwxtyzw"},
{"content":{"body":"i mean, i would use them a ton in JS. i don't understand why anyone would claim they're rarely used.","m.mentions":{},"msgtype":"m.text"},"ts":1696506864249,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-TMwtCLgxyHWWyQlXguTILpZ0sPJ_WpK-P8OOpbBwPg"},
{"content":{"body":"languages are different, maybe it's true that python doesn't need it","msgtype":"m.text"},"ts":1696507235214,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EwO1u6tkhQ_ifLHKGkjZQqscMPNC-DDDJbXOI8JAwAc"},
{"content":{"body":"for me, it just feels a foreign concept, since none of the languages I've used pattern matching in have had that","m.mentions":{},"msgtype":"m.text"},"ts":1696510151477,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$iRLEOsB6TDV6stHHb7rou3LzzY2C1eJw8tfW0USLO5w"},
{"content":{"body":"is it just C# and F#?","m.mentions":{},"msgtype":"m.text"},"ts":1696510168407,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$j3UtoGGTMJOTS_03_y3_IO-YWfe_vJ6ICFkiH4Fg4fw"},
{"content":{"body":"the reason it feels \"foreign\" and not like, filling in a gap, is because you wouldn't expect to destructure something into two different shapes at once in an FP language","m.mentions":{},"msgtype":"m.text"},"ts":1696510604003,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$yZRvO24omuiPhNRXMXUd_lLcMMpqOY9WXScxUUIuTTY"},
{"content":{"body":"kinda feels like a paradigm break, like passing a function with side effects to map","m.mentions":{},"msgtype":"m.text"},"ts":1696510676114,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$vNVS8iFocFmPyNyLAoBOl1xBYR1PC1rmi6lNet-yfWM"},
{"content":{"body":" * for me, it just feels like a foreign concept, since none of the languages I've used pattern matching in have had that","m.mentions":{},"m.new_content":{"body":"for me, it just feels like a foreign concept, since none of the languages I've used pattern matching in have had that","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$iRLEOsB6TDV6stHHb7rou3LzzY2C1eJw8tfW0USLO5w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1696510756881,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$S2XoyRnBAo5zpdu0J8b0b4JJKGTXrHup4Rwd7sqIFcw"}
]