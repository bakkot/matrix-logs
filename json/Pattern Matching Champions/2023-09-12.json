[
{"content":{"body":"do we have if pattern?","msgtype":"m.text"},"ts":1694519761222,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$NZuZdJzhdv1X0L8wPuypNTi5ZlGxGLzkKZdfprH6ijk"},
{"content":{"body":"if we have if pattern, some structure can be composed with it","msgtype":"m.text"},"ts":1694519858461,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YVOKrLRhUxxJiCSWLTxiu40NWmtf7J6FP1G0azMfdw4"},
{"content":{"body":"* ```\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n```","m.new_content":{"body":"```\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n```","msgtype":"m.text"},"m.relates_to":{"event_id":"$rq3zy2jSktiFYt_gifdNea5uyXT0XDUFM9Jh4EeU8DY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694519949004,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lHHhhIjhgCGAWvLtmsi6o_1anhf-lYRhVYl0_pLYzBg"},
{"content":{"body":"* ```js\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n```","m.new_content":{"body":"```js\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n```","msgtype":"m.text"},"m.relates_to":{"event_id":"$rq3zy2jSktiFYt_gifdNea5uyXT0XDUFM9Jh4EeU8DY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694519954806,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Gh1G3T09HneXrHtFkwxBE1vjJrAOxU0mzhyK3F5qtXI"},
{"content":{"body":"```js\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n```","msgtype":"m.text"},"ts":1694519969714,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$yUKhX3CRM1B16dKvXdQw5Lj86Y2odA3rkKBu7DjZD2c"},
{"content":{"body":"* <code>\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n</code>","m.new_content":{"body":"<code>\n// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard\n</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$yUKhX3CRM1B16dKvXdQw5Lj86Y2odA3rkKBu7DjZD2c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694519994686,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fH_ZFnsxQNc8PEoP8R4aHaWnJiovfnSFkYHJRl0X6Rw"},
{"content":{"body":"* `// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard`","m.new_content":{"body":"`// before\nwhen pattern if (expr): expr // match with guard\n// after\nwhen pattern and if (expr): expr // the whole thing is a pattern, no need special syntax for match + guard`","msgtype":"m.text"},"m.relates_to":{"event_id":"$yUKhX3CRM1B16dKvXdQw5Lj86Y2odA3rkKBu7DjZD2c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694520016442,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$cXsdObQI8s4SkC8QHZ7jDR0q5aRMvrp6jcE33iLGcSQ"},
{"content":{"body":"* // before\nwhen pattern if (expr): expr\n// match with guard\n\n// after\nwhen pattern and if (expr): expr\n// the whole thing is a pattern, no need special syntax for match + guard\n","m.new_content":{"body":"// before\nwhen pattern if (expr): expr\n// match with guard\n\n// after\nwhen pattern and if (expr): expr\n// the whole thing is a pattern, no need special syntax for match + guard\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$yUKhX3CRM1B16dKvXdQw5Lj86Y2odA3rkKBu7DjZD2c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694520033486,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tA8RfpgxNPflNkNvIdQWou8g2dFhe-fTz_TatHIKwsg"},
{"content":{"body":"// before\nmatch (...) {\n...\nif (expr): ...\n}\n\n// after\nmatch (...) {\n...\nwhen if (expr): ...\n}","msgtype":"m.text"},"ts":1694520102271,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kHZ7cOakuUX14cTvRMZkid-CDSeqZ8T1kp7TjMawC3c"},
{"content":{"body":"i think we still need it","msgtype":"m.text"},"ts":1694528772270,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$std_N0em6LFnzrj7Pj6sVQMe9dSnW7LUNNmlN55YUIU"},
{"content":{"body":"Jack Works: is your question \"Do we still have a form of `if` in `match`?\" or is it \"Do we have an `if` _pattern_ that can be placed anywhere in a pattern, or an `if` _clause_ that must come after the pattern?\"? While I like the idea of an `if` _pattern_, that would have ramifications on how `let` patterns are initialized. \nMy intent for `let`/`const` patterns was for the bindings to be initialized only once after an entire pattern has matched successfully. That doesn't quite work if `if` is a _pattern_, since they would need to be initialized immediately.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: is your question \"Do we still have a form of <code>if</code> in <code>match</code>?\" or is it \"Do we have an <code>if</code> <em>pattern</em> that can be placed anywhere in a pattern, or an <code>if</code> <em>clause</em> that must come after the pattern?\"? While I like the idea of an <code>if</code> <em>pattern</em>, that would have ramifications on how <code>let</code> patterns are initialized.<br>My intent for <code>let</code>/<code>const</code> patterns was for the bindings to be initialized only once after an entire pattern has matched successfully. That doesn't quite work if <code>if</code> is a <em>pattern</em>, since they would need to be initialized immediately.","msgtype":"m.text"},"ts":1694529416121,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7ZHXZS_kNG9clf26GCJ5Rry3KISQnad0fWEm2ZhwluI"},
{"content":{"body":"in other words:\n\n```\nif (x is [let y and if (y > 1)]) {\n  y; // ok, 'y' is initialized\n} else {\n  y; // expected to error as 'y' in TDZ/uninitialized, but won't because 'y' was initialized immediately.\n}\n```\nThough, we could possibly do both by having both outer bindings and per-pattern bindings, such that the outer bindings are initialized with the per-pattern bindings from the success path of the match, not unlike per-iteration bindings in `for` statements.","format":"org.matrix.custom.html","formatted_body":"<p>in other words:</p>\n<pre><code>if (x is [let y and if (y &gt; 1)]) {\n  y; // ok, 'y' is initialized\n} else {\n  y; // expected to error as 'y' in TDZ/uninitialized, but won't because 'y' was initialized immediately.\n}\n</code></pre>\n<p>Though, we could possibly do both by having both outer bindings and per-pattern bindings, such that the outer bindings are initialized with the per-pattern bindings from the success path of the match, not unlike per-iteration bindings in <code>for</code> statements.</p>\n","msgtype":"m.text"},"ts":1694529700527,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Rj-vkj85QNU13Bnn4GTeIKH6V8NxAtjL73knIFyxMBs"},
{"content":{"body":"One benefit of `if` patterns is that they could be a mechanism to use predicates, had we gone the route of doing `instanceof` checks by default, though they wouldn't have been quite as elegant: `let y and if (isFoo(y))`","format":"org.matrix.custom.html","formatted_body":"One benefit of <code>if</code> patterns is that they could be a mechanism to use predicates, had we gone the route of doing <code>instanceof</code> checks by default, though they wouldn't have been quite as elegant: <code>let y and if (isFoo(y))</code>","msgtype":"m.text"},"ts":1694529855310,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0jyLHx8qsIFQX45CsD5V74ZmildqRe8hCoA0jxsCWA0"},
{"content":{"body":"we should still have if clauses in match; id never considered an if pattern","msgtype":"m.text"},"ts":1694537436092,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K1TBymKWJX1P8s2Mmj_aTWfOh_ANTb-fAwvlXz0WiUY"},
{"content":{"body":"is pattern (let x and F) calls F as a predicate function when F is a function and there is no @@matcher on it?","msgtype":"m.text"},"ts":1694537812753,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Qqf0qJPMxVHC3QR_gGgO8YlfvPcy3yoD0EaiYbtVP7w"},
{"content":{"body":"I think it should at least be (let x and F()) or something to indicate it will call the function? but it will also conflict with the extractor maybe?","msgtype":"m.text"},"ts":1694537859422,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$s_IgHaNmaOlx251jOT_VJl5hd7Jk0vW771rh_WdwhP0"},
{"content":{"body":"> <@jackworks:matrix.org> I think it should at least be (let x and F()) or something to indicate it will call the function? but it will also conflict with the extractor maybe?\n\nThat would conflict with Extractors, yes. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$s_IgHaNmaOlx251jOT_VJl5hd7Jk0vW771rh_WdwhP0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br />I think it should at least be (let x and F()) or something to indicate it will call the function? but it will also conflict with the extractor maybe?</blockquote></mx-reply>That would conflict with Extractors, yes.","m.relates_to":{"m.in_reply_to":{"event_id":"$s_IgHaNmaOlx251jOT_VJl5hd7Jk0vW771rh_WdwhP0"}},"msgtype":"m.text"},"ts":1694539874810,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cJM3LV_FTc4qZHU02SJGLz4lJYJwB2eVbzcXvfzJZKk"}
]