[
{"content":{"body":"Eh","msgtype":"m.text"},"ts":1694567495378,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$U_ZGQZBbzsnkreJJvYcg76dQWUk3qH_dyclmOCxeCMU"},
{"content":{"body":"I forgot the separator","msgtype":"m.text"},"ts":1694567512293,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Em_sKzw4eZvlwKKFkJ-7IDsEy6GBaodfk0b3JGYccP0"},
{"content":{"body":"how do we do this? using `,` or `;`?","format":"org.matrix.custom.html","formatted_body":"how do we do this? using <code>,</code> or <code>;</code>?","msgtype":"m.text"},"ts":1694567525649,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$x_Zoy2dAIZazfHjHdn21ykBAzlVvV9WwouQVTIh1RDU"},
{"content":{"body":"I'd be tempted to suggest `,`, since `;` might run afoul of ASI so we'd have to add restrictions to ASI interpretation such as the one for `for` in https://tc39.es/ecma262/#sec-rules-of-automatic-semicolon-insertion","format":"org.matrix.custom.html","formatted_body":"I'd be tempted to suggest <code>,</code>, since <code>;</code> might run afoul of ASI so we'd have to add restrictions to ASI interpretation such as the one for <code>for</code> in https://tc39.es/ecma262/#sec-rules-of-automatic-semicolon-insertion","msgtype":"m.text"},"ts":1694569554922,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$EMEVVc81yKCJ-zM7qAmBhUibVlWuPJ7GQMG38VLsmH0"},
{"content":{"body":"But I'd rather get feedback from everyone else on that one. If its `,`, then you would need to use something other than _Expression_ in each leg since that also consumes `,`.","format":"org.matrix.custom.html","formatted_body":"But I'd rather get feedback from everyone else on that one. If its <code>,</code>, then you would need to use something other than <em>Expression</em> in each leg since that also consumes <code>,</code>.","msgtype":"m.text"},"ts":1694569656376,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6X9z2xnwfUQBfq7ghZ5h88G_PR3kDZJGz0Iu3ZMiJ3Y"},
{"content":{"body":" * But I'd rather get feedback from everyone else on that one. If its `,`, then you would need to use _AssignmentExpression_ rather than _Expression_  in each leg since _Expression_ also consumes `,`.","format":"org.matrix.custom.html","formatted_body":" * But I'd rather get feedback from everyone else on that one. If its <code>,</code>, then you would need to use <em>AssignmentExpression</em> rather than <em>Expression</em>  in each leg since <em>Expression</em> also consumes <code>,</code>.","m.new_content":{"body":"But I'd rather get feedback from everyone else on that one. If its `,`, then you would need to use _AssignmentExpression_ rather than _Expression_  in each leg since _Expression_ also consumes `,`.","format":"org.matrix.custom.html","formatted_body":"But I'd rather get feedback from everyone else on that one. If its <code>,</code>, then you would need to use <em>AssignmentExpression</em> rather than <em>Expression</em>  in each leg since <em>Expression</em> also consumes <code>,</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$6X9z2xnwfUQBfq7ghZ5h88G_PR3kDZJGz0Iu3ZMiJ3Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694569732825,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$P0ipfJrwj-ywAGKNCotQcKrAZqA0Br6VCybQxIZZjq4"},
{"content":{"body":"i'm confused, which separator","msgtype":"m.text"},"ts":1694585588813,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0usV0f_FwrYHljw_UazFqvAh82Br_4yNmxg_r5_bPzo"},
{"content":{"body":"after a RHS expression? 1000% semicolon","msgtype":"m.text"},"ts":1694585597428,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4v5_GGQnYtY5eSyh5ks2Dns3vsN5DKVlwUpuJ6X-tT8"},
{"content":{"body":"we don't need to cater to ASI people at all as long as we leave the \"style\" possible, they can stick semicolons in the front of lines where it conflicts","msgtype":"m.text"},"ts":1694585631004,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mGCAhRKf8DkmKnKt37t4xHogrwI8A9ELfqk7fceygAI"},
{"content":{"body":"the committee already has consensus on that (it's ok to add new ASI restrictions) even tho we couldn't quite get consensus on telling people to just use semicolons","msgtype":"m.text"},"ts":1694585658849,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$s1_taZXtxlycYNKbijKLuoPcovjUERSd2HkUTPdez0U"},
{"content":{"body":"> <@rbuckton:matrix.org> in other words:\n> \n> ```\n> if (x is [let y and if (y > 1)]) {\n>   y; // ok, 'y' is initialized\n> } else {\n>   y; // expected to error as 'y' in TDZ/uninitialized, but won't because 'y' was initialized immediately.\n> }\n> ```\n> Though, we could possibly do both by having both outer bindings and per-pattern bindings, such that the outer bindings are initialized with the per-pattern bindings from the success path of the match, not unlike per-iteration bindings in `for` statements.\n\nWhy would you expect y to be TDZ there? The binding was established, even if the pattern eventually failed. `if( x is [let y] && y > 1)` wouldn't TDZ, for instance.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$Rj-vkj85QNU13Bnn4GTeIKH6V8NxAtjL73knIFyxMBs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><p>in other words:</p>\n<pre><code>if (x is [let y and if (y &gt; 1)]) {\n  y; // ok, 'y' is initialized\n} else {\n  y; // expected to error as 'y' in TDZ/uninitialized, but won't because 'y' was initialized immediately.\n}\n</code></pre>\n<p>Though, we could possibly do both by having both outer bindings and per-pattern bindings, such that the outer bindings are initialized with the per-pattern bindings from the success path of the match, not unlike per-iteration bindings in <code>for</code> statements.</p>\n</blockquote></mx-reply>Why would you expect y to be TDZ there? The binding was established, even if the pattern eventually failed. <code>if( x is [let y] &amp;&amp; y &gt; 1)</code> wouldn't TDZ, for instance.","m.relates_to":{"m.in_reply_to":{"event_id":"$Rj-vkj85QNU13Bnn4GTeIKH6V8NxAtjL73knIFyxMBs"}},"msgtype":"m.text"},"ts":1694601637169,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$MAc74vT4V2Cgm7V9QLpb3bOAgnWwhpJE91jHv0juvUs"},
{"content":{"body":"> <@tabatkins:matrix.org> Why would you expect y to be TDZ there? The binding was established, even if the pattern eventually failed. `if( x is [let y] && y > 1)` wouldn't TDZ, for instance.\n\nWhen we discussed this before, the `y` would be uninitialized if the pattern failed to match. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$MAc74vT4V2Cgm7V9QLpb3bOAgnWwhpJE91jHv0juvUs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br />Why would you expect y to be TDZ there? The binding was established, even if the pattern eventually failed. <code>if( x is [let y] &amp;&amp; y &gt; 1)</code> wouldn't TDZ, for instance.</blockquote></mx-reply>When we discussed this before, the <code>y</code> would be uninitialized if the pattern failed to match.","m.relates_to":{"m.in_reply_to":{"event_id":"$MAc74vT4V2Cgm7V9QLpb3bOAgnWwhpJE91jHv0juvUs"}},"msgtype":"m.text"},"ts":1694602157620,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$k2rIeyjSXjY5wFH26lpLxnNZUbp2fQ4ezi8nfW17LbA"},
{"content":{"body":"> <@rbuckton:matrix.org> But I'd rather get feedback from everyone else on that one. If its `,`, then you would need to use _AssignmentExpression_ rather than _Expression_  in each leg since _Expression_ also consumes `,`.\n\nAh, I'm not familiar with that. There are so many expressions and I can't tell difference from their name. `Assignment...` `Member...`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$6X9z2xnwfUQBfq7ghZ5h88G_PR3kDZJGz0Iu3ZMiJ3Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>But I'd rather get feedback from everyone else on that one. If its <code>,</code>, then you would need to use <em>AssignmentExpression</em> rather than <em>Expression</em>  in each leg since <em>Expression</em> also consumes <code>,</code>.</blockquote></mx-reply>Ah, I'm not familiar with that. There are so many expressions and I can't tell difference from their name. <code>Assignment...</code> <code>Member...</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$6X9z2xnwfUQBfq7ghZ5h88G_PR3kDZJGz0Iu3ZMiJ3Y"}},"msgtype":"m.text"},"ts":1694619208874,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YTECK21vAp3KqqUffmv53ZEcJPx45bbIFmZZF0X8nX8"},
{"content":{"body":"`Expression` is just `AssignmentExpression` or comma","format":"org.matrix.custom.html","formatted_body":"<code>Expression</code> is just <code>AssignmentExpression</code> or comma","msgtype":"m.text"},"ts":1694621660402,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5rDxvW9ctEUjiQ29Qyl3AAi7p48HTYC-D4zy0Z489L0"}
]