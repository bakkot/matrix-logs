[
{"content":{"body":"r+ on the latest version of 279, looks good to me now","msgtype":"m.text","org.matrix.msc1767.text":"r+ on the latest version of 279, looks good to me now"},"ts":1657904215481,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$SSpb4gyRROexKfKvReueXdfpjDYYrowl1e0EoWR5GAk"},
{"content":{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","format":"org.matrix.custom.html","formatted_body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","mimetype":"text/plain"},{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","mimetype":"text/html"}]},"ts":1657908058616,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GzAuessGgQ4lB-FNPME7UqqT7k3ds3jzM8TtjssKiaU"},
{"content":{"body":" * i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","format":"org.matrix.custom.html","formatted_body":" * i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","m.new_content":{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","format":"org.matrix.custom.html","formatted_body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","mimetype":"text/plain"},{"body":"i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$GzAuessGgQ4lB-FNPME7UqqT7k3ds3jzM8TtjssKiaU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (mpcsh danielrosenwasser yulia rkirsling Jack Works )","mimetype":"text/plain"},{"body":" * i'd love to get everyone's opinion in the champion group on 279 as well as 278, ideally before plenary next week (<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> )","mimetype":"text/html"}]},"ts":1657908112326,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BIdH5Pujs1kEjQV53CFnpJIgLnQx17clTzOtYDpNzCs"},
{"content":{"body":"Folks -- i will have to sadly step away as a champion","msgtype":"m.text","org.matrix.msc1767.text":"Folks -- i will have to sadly step away as a champion"},"ts":1657908168671,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cOkFrqJ7mnd_aiZTPUBocnBwOOTvWqfi4HG3xwBqocQ"},
{"content":{"body":"I don't have the time to fully dedicate to the proposal, and in its current shape i consider it to be too complex and trying to do too many things","msgtype":"m.text","org.matrix.msc1767.text":"I don't have the time to fully dedicate to the proposal, and in its current shape i consider it to be too complex and trying to do too many things"},"ts":1657908192362,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$m0JiPjg1x107OgmRfbmGFyGynnhD5V9XCew6ABqDegI"},
{"content":{"body":"i have had that concern for a long time, ive tried to raise it but it didn't feel like i could represent that accurately, so i am not longer really a champion in practice anyway","msgtype":"m.text","org.matrix.msc1767.text":"i have had that concern for a long time, ive tried to raise it but it didn't feel like i could represent that accurately, so i am not longer really a champion in practice anyway"},"ts":1657908213655,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$9pdXe31Efl1_0mxeRX2Rcc6dyt4tcV1VKnZvoqMa83Q"},
{"content":{"body":"yulia: Respect your decision, but I would still be interested in learning more about the \"too complex\" - I know you had that complaint earlier, but I've not been able to fully understand it, given the similarity in complexity (imo) to the corresponding constructs in many other languages.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Respect your decision, but I would still be interested in learning more about the &quot;too complex&quot; - I know you had that complaint earlier, but I've not been able to fully understand it, given the similarity in complexity (imo) to the corresponding constructs in many other languages.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: Respect your decision, but I would still be interested in learning more about the \"too complex\" - I know you had that complaint earlier, but I've not been able to fully understand it, given the similarity in complexity (imo) to the corresponding constructs in many other languages.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Respect your decision, but I would still be interested in learning more about the &quot;too complex&quot; - I know you had that complaint earlier, but I've not been able to fully understand it, given the similarity in complexity (imo) to the corresponding constructs in many other languages.","mimetype":"text/html"}]},"ts":1657908688864,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$YRe2FsEuHBVy6yr-igVoodhAtQynm7TALT6zIK--zuk"},
{"content":{"body":"I've just gotten out of a lot of meetings and im freshly back from having covid so im not sure ill be able to articulate it well now either","msgtype":"m.text","org.matrix.msc1767.text":"I've just gotten out of a lot of meetings and im freshly back from having covid so im not sure ill be able to articulate it well now either"},"ts":1657908737020,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$DpnHMHhYxC8xlQh9Fq9wxagfPIrpVlOY-tfl02dJ16g"},
{"content":{"body":"but: i don't think that the complexity in other languages warrents such a complex initial design","msgtype":"m.text","org.matrix.msc1767.text":"but: i don't think that the complexity in other languages warrents such a complex initial design"},"ts":1657908751158,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Pq2HAhfXlFRpAECsamVjNIM6gqpom-fnNjnhV2zFxA4"},
{"content":{"body":"we should consider how to break up the proposal into smaller steps -- the argument has been \"its all or nothing\" and i disagree. This can have great improvements to JS if we do it in parts","msgtype":"m.text","org.matrix.msc1767.text":"we should consider how to break up the proposal into smaller steps -- the argument has been \"its all or nothing\" and i disagree. This can have great improvements to JS if we do it in parts"},"ts":1657908819781,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$a6I0qdaz_shwxlsPjr76ZXB8Bd-8RB8Mr9412Y6oMwo"},
{"content":{"body":"Yeah, no pressure right now, but I'd love to hear some more detailed articulation of your feelings, because we've heard \"too complex\" and I can't reasonably respond to it at that level (since I think it's not).","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, no pressure right now, but I'd love to hear some more detailed articulation of your feelings, because we've heard \"too complex\" and I can't reasonably respond to it at that level (since I think it's not)."},"ts":1657908948091,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$LUvGf9bnAFm2cSMIZirJuiIHcpWEIfrVqXoXisON8AA"},
{"content":{"body":"To be a little more specific, I don't believe the proposal *can* in any meaningful way be broken up into smaller steps. You need the match() construct itself, and at least *most* of the match patterns, to have a useful feature. In theory we can boot a few bits to extension proposals, but in practice that would just draw out the feature's definition without actually reducing anything, since I feel they have very strong arguments for inclusion.","format":"org.matrix.custom.html","formatted_body":"To be a little more specific, I don't believe the proposal <em>can</em> in any meaningful way be broken up into smaller steps. You need the match() construct itself, and at least <em>most</em> of the match patterns, to have a useful feature. In theory we can boot a few bits to extension proposals, but in practice that would just draw out the feature's definition without actually reducing anything, since I feel they have very strong arguments for inclusion.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"To be a little more specific, I don't believe the proposal *can* in any meaningful way be broken up into smaller steps. You need the match() construct itself, and at least *most* of the match patterns, to have a useful feature. In theory we can boot a few bits to extension proposals, but in practice that would just draw out the feature's definition without actually reducing anything, since I feel they have very strong arguments for inclusion.","mimetype":"text/plain"},{"body":"To be a little more specific, I don't believe the proposal <em>can</em> in any meaningful way be broken up into smaller steps. You need the match() construct itself, and at least <em>most</em> of the match patterns, to have a useful feature. In theory we can boot a few bits to extension proposals, but in practice that would just draw out the feature's definition without actually reducing anything, since I feel they have very strong arguments for inclusion.","mimetype":"text/html"}]},"ts":1657909546024,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$UuD42iSncVrkFsoiU4Nl3LrWdacdFc41Kfr7cdYXCOM"},
{"content":{"body":"I'm curious if the \"smaller steps\" is along the lines of \"do less interpolation patterns in teh base proposal\" or something more radical in cleaving the proposal into smaller pieces?","msgtype":"m.text","org.matrix.msc1767.text":"I'm curious if the \"smaller steps\" is along the lines of \"do less interpolation patterns in teh base proposal\" or something more radical in cleaving the proposal into smaller pieces?"},"ts":1657909587622,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$InRxYGvxjpuPoIOp4kpn6rcd7XvRywLHaefjvnUUKRE"},
{"content":{"body":"Let me come up with a clear realistic statement and bring it to you Monday. ","format":"org.matrix.custom.html","formatted_body":"Let me come up with a clear realistic statement and bring it to you Monday.","msgtype":"m.text"},"ts":1657914195620,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$YPP9a203efACImp-KNziuQhb7vokY5pggnEiRIwWtXc"},
{"content":{"body":"I do share Yulia's general sentiment but I agree that it's not concrete enough to be actionable so lemme give this a good think this afternoon too","msgtype":"m.text"},"ts":1657916000291,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$TiCTyw7IR90rC_KE4rtVQV6W4dro3-NkCsQBQJY1cb8"},
{"content":{"body":"I have a concrete suggestion, I want time to think of how to convert it properly","msgtype":"m.text"},"ts":1657916600109,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$HfifSH1LxoX9hA9C3RWAW3GBki6mPTnZypBpsFq4kmA"},
{"content":{"body":"* I think I have a concrete suggestion, I want time to think of how to describe it properly","format":"org.matrix.custom.html","formatted_body":"* (null)","m.new_content":{"body":"I think I have a concrete suggestion, I want time to think of how to describe it properly","msgtype":"m.text"},"m.relates_to":{"event_id":"$HfifSH1LxoX9hA9C3RWAW3GBki6mPTnZypBpsFq4kmA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657917058673,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$j_s_4rosSG30sPHF6mTrIoxcwYHxMsCWCPsrlJVKM80"},
{"content":{"body":"Excellent thanks y'all","msgtype":"m.text","org.matrix.msc1767.text":"Excellent thanks y'all"},"ts":1657918494335,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Bdqx5jKVrbAa69vMra5IoXzokx2Zdmqone5AePXqVT4"},
{"content":{"body":"(btw I'll be on vacation next week so I'm missing the meeting unfortunately, but I'll follow up)","msgtype":"m.text","org.matrix.msc1767.text":"(btw I'll be on vacation next week so I'm missing the meeting unfortunately, but I'll follow up)"},"ts":1657918507557,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$N7FDOrFyQf_hUgsbsaYVBEqlsgTZ6k1JOey2xi-1qOc"},
{"content":{"body":"Okay, so one good thing is that some stuff I thought was intended for V1 is not","msgtype":"m.text"},"ts":1657921254362,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$2JPMI9nW683CHI7H5cWG78iKJIC4GEjjs8RG1cO0IK0"},
{"content":{"body":"(for any proposal you have I will always be in favor of shrinking it lol)","msgtype":"m.text"},"ts":1657921283012,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$2XytzeJVyVLJ4EeMynvgHI6JSU7MLysp0ZoKCVvis0I"},
{"content":{"body":"re-reviewing the README, my thoughts are:\n\n1. *General terminology* looks 💯\n\n2. *More on combinators*: example makes it looks like `and` is required for existence checking even if the bound name goes unused. This needs fixing but isn't a problem with the proposal.\n\n3. *Array length checking*: \"oh btw, bare guards exist\" 😛 tbh, I don't think they should exist for V1 -- I think the proposal is leaner if all LHSes start with `when` and `default`, as \"general terminology\" promised.\n\n4. *Regex*: I kind of hate that both of these are valid. My immediate reaction is that named capture is nifty and `/.../ with ...` is gross. Is the latter a requirement? I don't see why any built-in type needs to motivate the custom matcher protocol.\n\n5. *Custom matchers*: Me being me, I want to ask \"could this be a second proposal?\" but of course the answer is no, because how can you have a pattern matching proposal that doesn't let you implement Option. So actually I'm totally fine with this. 😄\n\n6. A final nitpick: I really dislike the word choice \"chaining\" for `with`. How about something like \"unwrapping\"?","msgtype":"m.text"},"ts":1657922747423,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$JpXZt99kuB4ARSQqtODhQzxYkn0f8BnIOOCK3UNEUKI"},
{"content":{"body":"3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","format":"org.matrix.custom.html","formatted_body":"3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","mimetype":"text/plain"},{"body":"3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","mimetype":"text/html"}]},"ts":1657922856954,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$S0YzC5g8PhVaEmT6zf-J8meQ6XiNc1un_xjmw1Yusp8"},
{"content":{"body":"4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","format":"org.matrix.custom.html","formatted_body":"4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","mimetype":"text/plain"},{"body":"4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","mimetype":"text/html"}]},"ts":1657922888268,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iC_aRn3jjwh-oMp3YRGGYtE6zUFdeVc_rQQbmoV1RFg"},
{"content":{"body":"points 2 and 6 seem like good readme feedback, i'm not sure about \"unwrapping\" but we can bikeshed :-)","msgtype":"m.text","org.matrix.msc1767.text":"points 2 and 6 seem like good readme feedback, i'm not sure about \"unwrapping\" but we can bikeshed :-)"},"ts":1657922919734,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XHs_80cSZfuVQIfLqSRijaIXIFB0hG9RWUQTxC8hwDA"},
{"content":{"body":" * 4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","format":"org.matrix.custom.html","formatted_body":" * 4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","m.new_content":{"body":"4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","format":"org.matrix.custom.html","formatted_body":"4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","mimetype":"text/plain"},{"body":"4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$iC_aRn3jjwh-oMp3YRGGYtE6zUFdeVc_rQQbmoV1RFg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * 4: `/…/ with ` is something that unavoidably falls out of \"you can use `with` after patterns\"","mimetype":"text/plain"},{"body":" * 4: <code>/…/ with </code> is something that unavoidably falls out of &quot;you can use <code>with</code> after patterns&quot;","mimetype":"text/html"}]},"ts":1657922925089,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sj1SNTTti6sCXWVxbIGD3uw9VN1_iYJ860tUbuHFIQ4"},
{"content":{"body":" * 3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","format":"org.matrix.custom.html","formatted_body":" * 3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","m.new_content":{"body":"3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","format":"org.matrix.custom.html","formatted_body":"3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","mimetype":"text/plain"},{"body":"3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$S0YzC5g8PhVaEmT6zf-J8meQ6XiNc1un_xjmw1Yusp8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * 3: if bare guards don't exist, people will write `when (_) if (…)` just to get them. why is that better?","mimetype":"text/plain"},{"body":" * 3: if bare guards don't exist, people will write <code>when (_) if (…)</code> just to get them. why is that better?","mimetype":"text/html"}]},"ts":1657922928990,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$x_YAagEIAv6oyfcPN5sfeUz1P1PtwjuJgpIie6zNAbk"},
{"content":{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","format":"org.matrix.custom.html","formatted_body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","mimetype":"text/plain"},{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","mimetype":"text/html"}]},"ts":1657922948054,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0LejfdD-Bzzw0J4di7jUEnBf1wTK1cqTkzuNebL7Kec"},
{"content":{"body":" * 5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","format":"org.matrix.custom.html","formatted_body":" * 5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","m.new_content":{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","format":"org.matrix.custom.html","formatted_body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","mimetype":"text/plain"},{"body":"5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0LejfdD-Bzzw0J4di7jUEnBf1wTK1cqTkzuNebL7Kec","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * 5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have `===` behavior)","mimetype":"text/plain"},{"body":" * 5: the other reason it can't be a separate proposal is that adding it later would be a breaking change, so we'd never be able to (at least, not with builtins, since they'd already have <code>===</code> behavior)","mimetype":"text/html"}]},"ts":1657922958107,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4BPGOiCMrMTeaf6qBczhqRYXw_8v3CWKO88IG7ihuyI"},
{"content":{"body":" * 3: if bare guards don't exist, people will write `when (throwaway) if (condition)` just to get them. why is that better?","format":"org.matrix.custom.html","formatted_body":" * 3: if bare guards don't exist, people will write <code>when (throwaway) if (condition)</code> just to get them. why is that better?","m.new_content":{"body":"3: if bare guards don't exist, people will write `when (throwaway) if (condition)` just to get them. why is that better?","format":"org.matrix.custom.html","formatted_body":"3: if bare guards don't exist, people will write <code>when (throwaway) if (condition)</code> just to get them. why is that better?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"3: if bare guards don't exist, people will write `when (throwaway) if (condition)` just to get them. why is that better?","mimetype":"text/plain"},{"body":"3: if bare guards don't exist, people will write <code>when (throwaway) if (condition)</code> just to get them. why is that better?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$S0YzC5g8PhVaEmT6zf-J8meQ6XiNc1un_xjmw1Yusp8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * 3: if bare guards don't exist, people will write `when (throwaway) if (condition)` just to get them. why is that better?","mimetype":"text/plain"},{"body":" * 3: if bare guards don't exist, people will write <code>when (throwaway) if (condition)</code> just to get them. why is that better?","mimetype":"text/html"}]},"ts":1657923028484,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8gPK60LSGZjPwG-We_-bRJrA-GrOod2d1xuCvN6wdag"},
{"content":{"body":"(fwiw i'd have replied in threads if you'd posted each point as a separate message :-p )","msgtype":"m.text","org.matrix.msc1767.text":"(fwiw i'd have replied in threads if you'd posted each point as a separate message :-p )"},"ts":1657923070213,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$JHLBwsKH9mfy1kjyUnS3opacxZYF3kUUMB0HZhW_EDQ"},
{"content":{"body":"Yeah I kind of thought that might be the response for (4)...\n\nFor (3), I hear what you're saying but I guess my concern is kind of about people misusing `match` just to do an `if`. I'd probably be less bothered by a case where the `if` came in between two `when`s, say.","msgtype":"m.text"},"ts":1657923163941,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$DOMHRWR7swWqa4a7yt9DzVZ-geLjsd4jWHDlw2OAESg"},
{"content":{"body":"remember that this is in a world where `do {}` exists","format":"org.matrix.custom.html","formatted_body":"remember that this is in a world where <code>do {}</code> exists","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"remember that this is in a world where `do {}` exists","mimetype":"text/plain"},{"body":"remember that this is in a world where <code>do {}</code> exists","mimetype":"text/html"}]},"ts":1657923199571,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$08ov1dAUa4LFTkOq6TlU-K0djtLWXr4CqgW5ez5Qibc"},
{"content":{"body":"Ah yeah sorry about the singular message. Not really used to using Matrix on my phone","msgtype":"m.text"},"ts":1657923205725,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$8I8HcOpOD2J9wmt5RCeXurWHY8JGzLwzuTgA4LneZp4"},
{"content":{"body":"* Ah yeah sorry about the singular message. Not really used to using Matrix on my phone","m.new_content":{"body":"Ah yeah sorry about the singular message. Not really used to using Matrix on my phone","msgtype":"m.text"},"m.relates_to":{"event_id":"$8I8HcOpOD2J9wmt5RCeXurWHY8JGzLwzuTgA4LneZp4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657923222537,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$mvzTw90Yk_jOd2jzDn4h01pQrj1URpPR6zHQLK2iz5Y"},
{"content":{"body":"so to make if an expression, why would someone do `match (x) { if (condition) { … } }` when they can do `do { if (x === condition) { … } }`?","format":"org.matrix.custom.html","formatted_body":"so to make if an expression, why would someone do <code>match (x) { if (condition) { … } }</code> when they can do <code>do { if (x === condition) { … } }</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so to make if an expression, why would someone do `match (x) { if (condition) { … } }` when they can do `do { if (x === condition) { … } }`?","mimetype":"text/plain"},{"body":"so to make if an expression, why would someone do <code>match (x) { if (condition) { … } }</code> when they can do <code>do { if (x === condition) { … } }</code>?","mimetype":"text/html"}]},"ts":1657923233120,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8kEG12KTLQnweL-TjopRXc33eTOOw5rwE0C811rPccc"},
{"content":{"body":"altho i guess maybe they'd want to to avoid the `x ===` repetition. but if that's what they want, so what? people already abuse switch for that","format":"org.matrix.custom.html","formatted_body":"altho i guess maybe they'd want to to avoid the <code>x ===</code> repetition. but if that's what they want, so what? people already abuse switch for that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"altho i guess maybe they'd want to to avoid the `x ===` repetition. but if that's what they want, so what? people already abuse switch for that","mimetype":"text/plain"},{"body":"altho i guess maybe they'd want to to avoid the <code>x ===</code> repetition. but if that's what they want, so what? people already abuse switch for that","mimetype":"text/html"}]},"ts":1657923254164,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eSh2QXHj9Aqyg0fktNOnYlt8tvUJrWE5E7_gyavrT2c"},
{"content":{"body":"that seems like linter territory to me","msgtype":"m.text","org.matrix.msc1767.text":"that seems like linter territory to me"},"ts":1657923260137,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TafEKvT0u5tJoabiWMx-DA8Q4ljUmdG9NOun1l4Dv8Q"},
{"content":{"body":"it'd be really easy to block match statements that have no `when`s, with the `no-restricted-syntax` rule","format":"org.matrix.custom.html","formatted_body":"it'd be really easy to block match statements that have no <code>when</code>s, with the <code>no-restricted-syntax</code> rule","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it'd be really easy to block match statements that have no `when`s, with the `no-restricted-syntax` rule","mimetype":"text/plain"},{"body":"it'd be really easy to block match statements that have no <code>when</code>s, with the <code>no-restricted-syntax</code> rule","mimetype":"text/html"}]},"ts":1657923311626,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XZFbafKamFcKA9BF-U3dmiP1EWK7nw86kGnEbVggzpc"},
{"content":{"body":"agreed; to the extent that we'd likely end up supporting it sooner or later anyway, it is indeed linter territory.","msgtype":"m.text"},"ts":1657923312103,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$lnZJ6ESv86fIi0b6PNU3ZheAHmGkEFQAOGOjFFMCjE4"},
{"content":{"body":"readme stuff I can create PRs for","msgtype":"m.text"},"ts":1657923398838,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$S8OBtUuAluu0vIAk9DzmElqzdwhXm1zdELNwBreGkjc"},
{"content":{"body":"overall I'm happy that my concerns are way less significant than I'd remembered them to be","msgtype":"m.text"},"ts":1657923420458,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$e7cFxvA0EhaAGR4nA8G201aeiOEn4QDtynBP_azOAgs"},
{"content":{"body":"(a lot of people get really excited dreaming up what could be, but I instead get anxious about clutter and waste)","msgtype":"m.text"},"ts":1657923664579,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$LtjEQizARzlvBox0YJ9ch1A47OJFKZ8t1JIzXJ0kIW4"},
{"content":{"body":"* (a lot of people get really excited dreaming up what could be, but I instead get anxious about clutter and waste)","m.new_content":{"body":"(a lot of people get really excited dreaming up what could be, but I instead get anxious about clutter and waste)","msgtype":"m.text"},"m.relates_to":{"event_id":"$LtjEQizARzlvBox0YJ9ch1A47OJFKZ8t1JIzXJ0kIW4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657923678953,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$phRKifrH9-N6HbfQSb6KfeDiF8YU7t8M66GN_VyG6h4"},
{"content":{"body":"Or just `a ? b : c`...","format":"org.matrix.custom.html","formatted_body":"Or just <code>a ? b : c</code>...","msgtype":"m.text"},"ts":1657923734613,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$KSm2QfcCMfzSPdAgr11FCD-AWaoLofsEbyD7aXcBhbo"},
{"content":{"body":"My biggest concern is still `${}`","format":"org.matrix.custom.html","formatted_body":"My biggest concern is still <code>${}</code>","msgtype":"m.text"},"ts":1657923766757,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$v8WQdF3oTCoKcYCr8GCW5DT3__I4DjlPi8q4BWK9mF8"},
{"content":{"body":"Especially since the old pin/placeholder operator was potentially more convenient and didn't step on `id{}`: i.e., `^Foo` or `^(expr)`, esp since `^()` is the same number of characters as `$\t{}` in the worst case. ","format":"org.matrix.custom.html","formatted_body":"Especially since the old pin/placeholder operator was potentially more convenient and didn't step on <code>id{}</code>: i.e., <code>^Foo</code> or <code>^(expr)</code>, esp since <code>^()</code> is the same number of characters as <code>$\t{}</code> in the worst case.","msgtype":"m.text"},"ts":1657924142183,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$acnoJdL4jU9wb7wYJl0xMJL3wC4xe8X3QYMd7CWoylQ"},
{"content":{"body":"i think it's incumbent on you to present a proposal to the committee if that ends up being a concern you think should be considered for pattern matching","m.relates_to":{"event_id":"$acnoJdL4jU9wb7wYJl0xMJL3wC4xe8X3QYMd7CWoylQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$acnoJdL4jU9wb7wYJl0xMJL3wC4xe8X3QYMd7CWoylQ"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"i think it's incumbent on you to present a proposal to the committee if that ends up being a concern you think should be considered for pattern matching"},"ts":1657926499084,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t7Uy2FoZQtR7mME7DCvfIvKEiBlfTeRTaE2TN3w-ux8"},
{"content":{"body":"Er uh, maybe \"`with` patterns\" is enough? It doesn't necessarily need to be a gerund, just something other than \"construct\" or \"clause\"","msgtype":"m.text"},"ts":1657927936821,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$ZRDNKqlhj24rNQkph2ferbRL5xLfKs1drazyNTcI5f0"},
{"content":{"body":"> <@ljharb:matrix.org> i think it's incumbent on you to present a proposal to the committee if that ends up being a concern you think should be considered for pattern matching\n\nI hope to be ready to present in the next plenary following this one. Unfortunately, I'm currently in the middle of a cross country move and wasn't able to finish preparing presentation materials. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$t7Uy2FoZQtR7mME7DCvfIvKEiBlfTeRTaE2TN3w-ux8?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />i think it's incumbent on you to present a proposal to the committee if that ends up being a concern you think should be considered for pattern matching</blockquote></mx-reply>I hope to be ready to present in the next plenary following this one. Unfortunately, I'm currently in the middle of a cross country move and wasn't able to finish preparing presentation materials.","m.relates_to":{"event_id":"$acnoJdL4jU9wb7wYJl0xMJL3wC4xe8X3QYMd7CWoylQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$t7Uy2FoZQtR7mME7DCvfIvKEiBlfTeRTaE2TN3w-ux8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1657928441941,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$bhMq2QJR10DubgjY8iWziF0_ETChdL577uQQssZs0Us"},
{"content":{"body":"i get that, but i think you've been referring to this unapply thing and its interaction with `${}` since november","format":"org.matrix.custom.html","formatted_body":"i get that, but i think you've been referring to this unapply thing and its interaction with <code>${}</code> since november","m.relates_to":{"event_id":"$acnoJdL4jU9wb7wYJl0xMJL3wC4xe8X3QYMd7CWoylQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$bhMq2QJR10DubgjY8iWziF0_ETChdL577uQQssZs0Us"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i get that, but i think you've been referring to this unapply thing and its interaction with `${}` since november","mimetype":"text/plain"},{"body":"i get that, but i think you've been referring to this unapply thing and its interaction with <code>${}</code> since november","mimetype":"text/html"}]},"ts":1657928999626,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Kcl-WvPg6rFTXqOoINCGBs4MgTT-Gs58Qex3nllkkOE"}
]