[
{"content":{"body":"The negated `in`/`instanceof` proposal is interesting, but potentially covered by pattern matching with relational patterns:\n\n```\nx !in y // negated-in\nx !instanceof Y // negated-instanceof\n\nx is not in y; // negated relational pattern\nx is not Y; // negated custom match\nx is not instanceof y; // negated relational pattern (generally covered by regular `is` though)\n```","format":"org.matrix.custom.html","formatted_body":"<p>The negated <code>in</code>/<code>instanceof</code> proposal is interesting, but potentially covered by pattern matching with relational patterns:</p>\n<pre><code>x !in y // negated-in\nx !instanceof Y // negated-instanceof\n\nx is not in y; // negated relational pattern\nx is not Y; // negated custom match\nx is not instanceof y; // negated relational pattern (generally covered by regular `is` though)\n</code></pre>\n","msgtype":"m.text"},"ts":1694799412833,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mBf5FSTTBrjYYOQt1SfK3f0e-Gr6VHvt4Lguwzjz_WU"},
{"content":{"body":"indeed, but still useful separately and as a smaller piece","msgtype":"m.text"},"ts":1694800468832,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iTNm8uZt3APVmRLePVXSaNt4X553alvxQ5fYZHuhACE"},
{"content":{"body":"especially if it's spelled `x not in y` and `x not instanceof y`","format":"org.matrix.custom.html","formatted_body":"especially if it's spelled <code>x not in y</code> and <code>x not instanceof y</code>","msgtype":"m.text"},"ts":1694800477497,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1Vn9Zl4JeHxmkTZ08P8Eh1YlRFB2Ja7RudAEvYOXv_0"},
{"content":{"body":"just like how throw expressions would still be useful even if we had do expressions","msgtype":"m.text"},"ts":1694800489748,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$etzU-LI0dpBoMFbXrk_jV26k9apCwPr01zC5BX5H4G4"}
]