[
{"content":{"body":"yes, match against arr[0] is a legit use case","msgtype":"m.text"},"ts":1700612343485,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$hoOJCThAwdf1MtQPWRMPaWFPJ2tJnGkFk8qcO3Y-m-Y"},
{"content":{"body":"> <@rbuckton:matrix.org> `is` is not a MemberExpression, so `x is a and {}.toString` would just be a syntax error\n\nok...? I do not quite understand how this works, can you explain more? now it is a relational expression, that already makes x is {}. toString illegal?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$O9Q23kbpDXZ1vPZFPnrdE044R-m5mhe-YyTmB1FtgHA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br /><code>is</code> is not a MemberExpression, so <code>x is a and {}.toString</code> would just be a syntax error</blockquote></mx-reply>ok...? I do not quite understand how this works, can you explain more? now it is a relational expression, that already makes x is {}. toString illegal?","m.relates_to":{"m.in_reply_to":{"event_id":"$O9Q23kbpDXZ1vPZFPnrdE044R-m5mhe-YyTmB1FtgHA"}},"msgtype":"m.text"},"ts":1700612432524,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EQvaPYQ9udxjJvn2gheOmioxQrORh02ZoHQCDgMdQ4g"},
{"content":{"body":"Yes, if `is` is in RelationalExpression, then `is {}.anything` is illegal","format":"org.matrix.custom.html","formatted_body":"Yes, if <code>is</code> is in RelationalExpression, then <code>is {}.anything</code> is illegal","msgtype":"m.text"},"ts":1700613190904,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$RSZzvEd9nx4HgoKDuhgiFT38kixecf7Uvt8Z0eSCNO4"},
{"content":{"body":"`a in b.c` is legal because the right-hand side of `in` allows MemberExpression. ","format":"org.matrix.custom.html","formatted_body":"<code>a in b.c</code> is legal because the right-hand side of <code>in</code> allows MemberExpression.","msgtype":"m.text"},"ts":1700613233924,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iMzLkvqDqf92ybjKBuq8tH7p9N618CpAcLJok9RxsNo"},
{"content":{"body":"`a is pattern` doesn't parse a MemberExpression on the right, it parses a MatchPattern, so it only allows a\t`.` if it is specified in syntax","format":"org.matrix.custom.html","formatted_body":"<code>a is pattern</code> doesn't parse a MemberExpression on the right, it parses a MatchPattern, so it only allows a\t<code>.</code> if it is specified in syntax","msgtype":"m.text"},"ts":1700613314861,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5yGot4viaD1OUex11Wp-H81wf54SHn3Kxj5wetf86Ng"},
{"content":{"body":"ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”ðŸ¤”","msgtype":"m.text"},"ts":1700613411770,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xSEtYT2Frt83VDsMWcyy_mc4F-NSPC4fv8pgE3sYOFQ"},
{"content":{"body":"We allow `a is b.c` because you've explicitly specified PatternMatchingMemberExpression: https://raw.githack.com/tc39/proposal-pattern-matching/new-spec/index.html#prod-PatternMatchingMemberExpression","format":"org.matrix.custom.html","formatted_body":"We allow <code>a is b.c</code> because you've explicitly specified PatternMatchingMemberExpression: https://raw.githack.com/tc39/proposal-pattern-matching/new-spec/index.html#prod-PatternMatchingMemberExpression","m.mentions":{},"msgtype":"m.text"},"ts":1700613451603,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9_QOQHOj69eLExw8VfqgFQD3Q0rxMBanDQ1vzGdKEh8"},
{"content":{"body":"that's interesting, what is legal to follow a relational expression directly?","msgtype":"m.text"},"ts":1700613459879,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$U_anfAsVizWDizgaoBj0fkHcFhungU7V6fXzy2c9FjA"},
{"content":{"body":"I want to make sure nothing is visually confusing","msgtype":"m.text"},"ts":1700613506672,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$0wtRGQo_mBfL_xec0qwSP1EdKkRfbKW2a3T5BGBqc2Q"}
]