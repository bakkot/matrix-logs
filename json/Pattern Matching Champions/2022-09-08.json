[
{"content":{"body":"rbuckton: Your gist seems very good!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Your gist seems very good!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"rbuckton: Your gist seems very good!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Your gist seems very good!","mimetype":"text/html"}]},"ts":1662595649200,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$j2K0hGe5TuoGowSxvg5FFn5HmVRPinBCAYMP54ZSgFU"},
{"content":{"body":"And I quite like your layering of concerns, particularly the \"Being explicit should not unduly prevent us from remaining concise. Being explicit should not unduly prevent us from remaining expressive.\"","msgtype":"m.text","org.matrix.msc1767.text":"And I quite like your layering of concerns, particularly the \"Being explicit should not unduly prevent us from remaining concise. Being explicit should not unduly prevent us from remaining expressive.\""},"ts":1662595694773,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$tnDSyK-hiWe6wjnCQZGPtCSpjKu2lKGpBSj7cEOUADc"},
{"content":{"body":"(In regards to complaints about size of the proposal, for instance.)","msgtype":"m.text","org.matrix.msc1767.text":"(In regards to complaints about size of the proposal, for instance.)"},"ts":1662595717118,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$C1r2ytgiCr1QHxAwt_pBzZPbdF1P5cgutERRgJYyBb4"},
{"content":{"body":"I don’t think your list is exhaustive tho. The readme already contains our core tenets, which i think already include this gist?","msgtype":"m.text"},"ts":1662608477275,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dStvj2UxMo3GZw969AXL3ajpv-z2lkV1YXFnd9lJLWw"},
{"content":{"body":"I don't see anything like it in the proposal's README. The README contains motivations, priorities, and syntax solutions but I don't feel like it addresses \"why\" those solutions are the answer. ","msgtype":"m.text","org.matrix.msc1767.text":"I don't see anything like it in the proposal's README. The README contains motivations, priorities, and syntax solutions but I don't feel like it addresses \"why\" those solutions are the answer. "},"ts":1662651970784,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$uAZ7Oncda8BuzlNyQxBBGAlo_7cR1CAtkOo0nDhKPM8"},
{"content":{"body":"The gist I wrote up is a bit of a reframing. Its intent would be to serve as a set of guiding principles for how those priorities should be chosen and what those syntax solutions should look like.","msgtype":"m.text","org.matrix.msc1767.text":"The gist I wrote up is a bit of a reframing. Its intent would be to serve as a set of guiding principles for how those priorities should be chosen and what those syntax solutions should look like."},"ts":1662652074534,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5ctqlutSmXcQfdZMkAeVsKvIffyhmD57fpBl9oPofjc"},
{"content":{"body":"I'm talking about https://github.com/tc39/proposal-pattern-matching#priorities-for-a-solution","msgtype":"m.text","org.matrix.msc1767.text":"I'm talking about https://github.com/tc39/proposal-pattern-matching#priorities-for-a-solution"},"ts":1662652667169,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$G33Ks3LDXnDHiz8OnOZeUEMhehRVsANccn7-XnaCvYw"},
{"content":{"body":"iow, we already came up with a set of guiding principles, which *led* us to the current solution (and that doesn't mean the current solution is the only one, ofc)","format":"org.matrix.custom.html","formatted_body":"iow, we already came up with a set of guiding principles, which <em>led</em> us to the current solution (and that doesn't mean the current solution is the only one, ofc)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"iow, we already came up with a set of guiding principles, which *led* us to the current solution (and that doesn't mean the current solution is the only one, ofc)","mimetype":"text/plain"},{"body":"iow, we already came up with a set of guiding principles, which <em>led</em> us to the current solution (and that doesn't mean the current solution is the only one, ofc)","mimetype":"text/html"}]},"ts":1662652696720,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wMguthQ1N83BOXbP8sjPc-cfAVQA49V1CTaI8MZH_2M"},
{"content":{"body":"I read that, and its a somewhat different purpose though it has some overlap.","msgtype":"m.text","org.matrix.msc1767.text":"I read that, and its a somewhat different purpose though it has some overlap."},"ts":1662653185171,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jPR7BDM6wu6zyRHxHAwYIG1-6v3fShRB6HyYsjT6tuc"},
{"content":{"body":"i.e., \"subsumption of `switch`\" doesn't seem like a guiding principle, and \"be better than `switch`\" is fairly ambiguous. But either way, these tenets are not intended to be at odds with the current proposal, as they mostly agree.","format":"org.matrix.custom.html","formatted_body":"i.e., &quot;subsumption of <code>switch</code>&quot; doesn't seem like a guiding principle, and &quot;be better than <code>switch</code>&quot; is fairly ambiguous. But either way, these tenets are not intended to be at odds with the current proposal, as they mostly agree.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i.e., \"subsumption of `switch`\" doesn't seem like a guiding principle, and \"be better than `switch`\" is fairly ambiguous. But either way, these tenets are not intended to be at odds with the current proposal, as they mostly agree.","mimetype":"text/plain"},{"body":"i.e., &quot;subsumption of <code>switch</code>&quot; doesn't seem like a guiding principle, and &quot;be better than <code>switch</code>&quot; is fairly ambiguous. But either way, these tenets are not intended to be at odds with the current proposal, as they mostly agree.","mimetype":"text/html"}]},"ts":1662668274469,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$fhyUoMmQufwC_nZ9J42frlfNUnlmH7cdMeOT7z7ClO0"},
{"content":{"body":"It’s a guiding principle in that any switch use cases need to work for pattern matching ","format":"org.matrix.custom.html","formatted_body":"It’s a guiding principle in that any switch use cases need to work for pattern matching","msgtype":"m.text"},"ts":1662669464105,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DxtXLpt5TzzJNLoIKA8-RFPp2i7KUBT_2Gt8KehL634"},
{"content":{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","format":"org.matrix.custom.html","formatted_body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","mimetype":"text/plain"},{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","mimetype":"text/html"}]},"ts":1662670475339,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Yq2Wv90d8dto_V_H8d0ZmUTfe8pi06vPf34Ono8p_rU"},
{"content":{"body":" * I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","format":"org.matrix.custom.html","formatted_body":" * I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","m.new_content":{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","format":"org.matrix.custom.html","formatted_body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","mimetype":"text/plain"},{"body":"I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Yq2Wv90d8dto_V_H8d0ZmUTfe8pi06vPf34Ono8p_rU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I don't necessarily agree. They are similar in that they conditionally branch, but so does `if`. Whether or not `switch` could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an \"in the weeds\" concern than a guiding principle.","mimetype":"text/plain"},{"body":" * I don't necessarily agree. They are similar in that they conditionally branch, but so does <code>if</code>. Whether or not <code>switch</code> could be modified to support pattern matching is something that would fall out from the guiding principles and limitations imposed on backwards compatibility with new syntax. To me it feels like more of an &quot;in the weeds&quot; concern than a guiding principle.","mimetype":"text/html"}]},"ts":1662670499574,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$viY9YScEQokfq-SQpZTvgdGJ8YxFmvlYUQSEKliYGFs"}
]