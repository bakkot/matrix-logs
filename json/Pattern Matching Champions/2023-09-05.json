[
{"content":{"body":"I started to edit spec and found there is something we need to figure out before we continue","msgtype":"m.text"},"ts":1693913957965,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nbNJslEkdQsPygjT34k021UB7SCs2kIV24a7yxQYUbc"},
{"content":{"body":"the current spec create a new DeclarativeEnvironment for each binding (https://tc39.es/proposal-pattern-matching/#sec-add-match-binding)","msgtype":"m.text"},"ts":1693914006621,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-7ymo5OkvsVuB2xkeTh9ISKNezC3qhZ9WJGa25fhD34"},
{"content":{"body":"to support `for` head, https://tc39.es/ecma262/#sec-createperiterationenvironment, we need to pre-determinate what binding it contains","format":"org.matrix.custom.html","formatted_body":"to support <code>for</code> head, https://tc39.es/ecma262/#sec-createperiterationenvironment, we need to pre-determinate what binding it contains","msgtype":"m.text"},"ts":1693914079914,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$6yxWICLC_PF-mdKEHL7it1wE3hove-qfpnGCh4ANAj4"},
{"content":{"body":"this brings the question: how is the `let` `const` binding work inside a pattern.","format":"org.matrix.custom.html","formatted_body":"this brings the question: how is the <code>let</code> <code>const</code> binding work inside a pattern.","msgtype":"m.text"},"ts":1693914153805,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-nUKVnQIhFc9P6K70EQFosur8pQh-1IkaEaWkW2TckM"},
{"content":{"body":"for example, is `[1, let a] or [2, let a]` valid? or is it an early error?","format":"org.matrix.custom.html","formatted_body":"for example, is <code>[1, let a] or [2, let a]</code> valid? or is it an early error?","msgtype":"m.text"},"ts":1693914217502,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$csJ5ELeTHbwTjT5PTDn4DSoRectZXWh-NKnshKOe4T0"},
{"content":{"body":"is every level of MatchPattern creates a DeclarationEnvironment?\n\n```\n{ // level 1 DeclEnv\n    let x,\n    y: [ // level 2 DeclEnv\n        let x, x\n    ]\n} // matches { x: 1, y: [2, 3] } and creates binding of x that is value ...?\n```","format":"org.matrix.custom.html","formatted_body":"<p>is every level of MatchPattern creates a DeclarationEnvironment?</p>\n<pre><code>{ // level 1 DeclEnv\n    let x,\n    y: [ // level 2 DeclEnv\n        let x, x\n    ]\n} // matches { x: 1, y: [2, 3] } and creates binding of x that is value ...?\n</code></pre>\n","msgtype":"m.text"},"ts":1693914543500,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rEsA0k7R3YUX_9N9hsQR0NZrZpXbWh1ZpDH4H2zIsoU"},
{"content":{"body":"or only the top level MatchPattern creates a DeclarationEnvironment (in this case the previous example gives an early error)?","msgtype":"m.text"},"ts":1693914651644,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wAS_f38bmv1n7Pd4aNBI-baLHmBdA15WmLDwJ6B5e7Q"},
{"content":{"body":"what's the syntax when it is used in `for...of`?\n\n`for (const x is pattern of expr)`? `for (match pattern of expr)`?","format":"org.matrix.custom.html","formatted_body":"<p>what's the syntax when it is used in <code>for...of</code>?</p>\n<p><code>for (const x is pattern of expr)</code>? <code>for (match pattern of expr)</code>?</p>\n","msgtype":"m.text"},"ts":1693914797404,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kg4dr9lKWEDxBfl8J1ShDwZIn_6qFxprKGmrb618cMs"}
]