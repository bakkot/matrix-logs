[
{"content":{"body":"In Scala, an object with an `apply` method is essentially a function, and can behave similar to a constructor. So you can do something like `Book.apply(isbn, name)` (or just `Book(isbn, name)` and get a `Book` object back. You give it arguments and it gives you the result.\n\nThe `unapply` method is something like the inverse of a constructor. You give it the result and it gives you back the arguments. ","format":"org.matrix.custom.html","formatted_body":"<p>In Scala, an object with an <code>apply</code> method is essentially a function, and can behave similar to a constructor. So you can do something like <code>Book.apply(isbn, name)</code> (or just <code>Book(isbn, name)</code> and get a <code>Book</code> object back. You give it arguments and it gives you the result.</p>\n<p>The <code>unapply</code> method is something like the inverse of a constructor. You give it the result and it gives you back the arguments.</p>\n","msgtype":"m.text"},"ts":1637280144219,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$f_mEoKIpo-2aB-zDp7SXRK9vl5SOhmJBdG29-3qG72I"},
{"content":{"body":"This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this\n\n```js\nconst x = new Book(isbn, name);\nconst [isbn, name] = Book.unapply(x);\n```","format":"org.matrix.custom.html","formatted_body":"<p>This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this</p>\n<pre><code class=\"language-js\">const x = new Book(isbn, name);\nconst [isbn, name] = Book.unapply(x);\n</code></pre>\n","msgtype":"m.text"},"ts":1637280268243,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mSiUJ7DM_Ylt0aVuaT4xMyH6deiTLBUAKMTwIIWnwZo"},
{"content":{"body":" * This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this\n```js\nconst x = new Book(isbn, name);\nconst [isbn, name] = Book[Symbol.unapply](x);\n```","format":"org.matrix.custom.html","formatted_body":" * <p>This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this</p>\n<pre><code class=\"language-js\">const x = new Book(isbn, name);\nconst [isbn, name] = Book[Symbol.unapply](x);\n</code></pre>\n","m.new_content":{"body":"This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this\n```js\nconst x = new Book(isbn, name);\nconst [isbn, name] = Book[Symbol.unapply](x);\n```","format":"org.matrix.custom.html","formatted_body":"<p>This is especially useful in pattern matching. In JS, (without extra syntax) it might look something like this</p>\n<pre><code class=\"language-js\">const x = new Book(isbn, name);\nconst [isbn, name] = Book[Symbol.unapply](x);\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$mSiUJ7DM_Ylt0aVuaT4xMyH6deiTLBUAKMTwIIWnwZo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1637280352855,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BrAC7kCs7AVA_3sGpsl-N5EHyw-b4qzGlspBgSal-og"},
{"content":{"body":"With syntax it would instead look like this:\n```js\nconst x = new Book(isbn, name);\nconst Book(isbn, name) = x;\n```","format":"org.matrix.custom.html","formatted_body":"<p>With syntax it would instead look like this:</p>\n<pre><code class=\"language-js\">const x = new Book(isbn, name);\nconst Book(isbn, name) = x;\n</code></pre>\n","msgtype":"m.text"},"ts":1637280377297,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-UTwZUK-IK8xi7TS98Z1UFYWtTP7YTsIJUlIhSojI6s"},
{"content":{"body":"This becomes even more powerful when used in a binding pattern, allowing you to evaluate extractor logic in the middle of a binding pattern:\n```js\nconst books = [new Book(isbn, name, { publisher: \"O'Reilly\" })]\nconst [Book(isbn, name, { publisher )] = books;\n```","format":"org.matrix.custom.html","formatted_body":"<p>This becomes even more powerful when used in a binding pattern, allowing you to evaluate extractor logic in the middle of a binding pattern:</p>\n<pre><code class=\"language-js\">const books = [new Book(isbn, name, { publisher: &quot;O'Reilly&quot; })]\nconst [Book(isbn, name, { publisher )] = books;\n</code></pre>\n","msgtype":"m.text"},"ts":1637280528079,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PqIXQZRs2T57prE9_CFlmq6N3P4Qv6rR049lMmQ-RCc"}
]