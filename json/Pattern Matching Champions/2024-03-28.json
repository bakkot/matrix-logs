[
{"content":{"body":"> <@ljharb:matrix.org> i'd love to see some examples that feel javascripty\n\nI'll show some code I found in our product source. You may argue TypeScript is not javascripty but it's a big part you cannot unsee in the JS community\n\n```js\ntype Action =\n    | { type: 'SET_ACCOUNT_TYPE', accountType: BackupAccountType }\n    | { type: 'TO_STEP', step: RestoreStep }\n    | { type: 'SET_EMAIL', form: Partial<RestoreState['emailForm']> }\n    | { type: 'SET_PHONE', form: Partial<RestoreState['phoneForm']> }\n    | { type: 'SET_VALIDATION' }\n    | { type: 'SET_BACKUP_INFO', info: BackupFileInfo }\n    | { type: 'SET_BACKUP_SUMMARY', summary: BackupSummary, backupDecrypted: string }\n    | { type: 'SET_PASSWORD', password: string }\n    | { type: 'SET_LOADING', loading: boolean }\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case 'SET_ACCOUNT_TYPE':\n                // ...\n            case 'NEXT_STEP':\n                // ...\n            case 'TO_STEP':\n                // ...\n        }\n    })\n}\ndispatch({ type: 'SET_ACCOUNT_TYPE', accountType: 'email' })\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$ETVrdtIv_U1_u5t__vM8ACkTT9mR45KBdHZ_c4tTpqc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i'd love to see some examples that feel javascripty</blockquote></mx-reply><p>I'll show some code I found in our product source. You may argue TypeScript is not javascripty but it's a big part you cannot unsee in the JS community</p>\n<pre><code class=\"language-js\">type Action =\n    | { type: 'SET_ACCOUNT_TYPE', accountType: BackupAccountType }\n    | { type: 'TO_STEP', step: RestoreStep }\n    | { type: 'SET_EMAIL', form: Partial&lt;RestoreState['emailForm']&gt; }\n    | { type: 'SET_PHONE', form: Partial&lt;RestoreState['phoneForm']&gt; }\n    | { type: 'SET_VALIDATION' }\n    | { type: 'SET_BACKUP_INFO', info: BackupFileInfo }\n    | { type: 'SET_BACKUP_SUMMARY', summary: BackupSummary, backupDecrypted: string }\n    | { type: 'SET_PASSWORD', password: string }\n    | { type: 'SET_LOADING', loading: boolean }\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) =&gt; {\n        switch (action.type) {\n            case 'SET_ACCOUNT_TYPE':\n                // ...\n            case 'NEXT_STEP':\n                // ...\n            case 'TO_STEP':\n                // ...\n        }\n    })\n}\ndispatch({ type: 'SET_ACCOUNT_TYPE', accountType: 'email' })\n</code></pre>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ETVrdtIv_U1_u5t__vM8ACkTT9mR45KBdHZ_c4tTpqc"}},"msgtype":"m.text"},"ts":1711598180502,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Z86JTCvE74YbRp4sp60oVX7RZC8H5EXAmh5B9-2neD0"},
{"content":{"body":"I wrote this pattern a lot. My co-workers also.","m.mentions":{},"msgtype":"m.text"},"ts":1711598202934,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Od2QW2jSKS-0wKLaWduMqvNTCubV8lWQFcgECuUwIYg"},
{"content":{"body":"nah TS code isn’t necessarily un-JavaScripty :-) not making that claim.","msgtype":"m.text"},"ts":1711598225370,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2CTrYt42h0wqs08BzLmnxx8e1NxTC1Ecmf0Y54PqNj8"},
{"content":{"body":"so, that kind of switch usage is very common. That’s using a tagged union where the tag could be a primitive enum.","msgtype":"m.text"},"ts":1711598266287,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oGciuQIbxBAVjeevA5S_VvNzcMgPPoeoXyVoO2mV7kg"},
{"content":{"body":"well, the important thing here is that the tag is always bind with a known-shaped structure","m.mentions":{},"msgtype":"m.text"},"ts":1711598302448,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EmiK-OnBCbMh5E0VMBPJRbC9rnp18k3fExVijAmH0s4"},
{"content":{"body":"I'll rewrite this code with primitive enum and ADT enum","m.mentions":{},"msgtype":"m.text"},"ts":1711598391480,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lgcGvw1B6MrMrqM6CR405gjoQaQJ9aipVJzaFemNV1k"},
{"content":{"body":"Primitive\n\n```js\nenum Action {\n    SET_ACCOUNT_TYPE,\n    TO_STEP,\n    SET_EMAIL,\n    SET_PHONE,\n    SET_VALIDATION,\n    SET_BACKUP_INFO,\n    SET_BACKUP_SUMMARY,\n    SET_PASSWORD,\n    SET_LOADING,\n}\ntype Action =\n    | { type: Action.SET_ACCOUNT_TYPE, accountType: BackupAccountType }\n    | { type: Action.TO_STEP, step: RestoreStep }\n    | { type: Action.SET_EMAIL, form: Partial<RestoreState['emailForm']> }\n    | { type: Action.SET_PHONE, form: Partial<RestoreState['phoneForm']> }\n    | { type: Action.SET_VALIDATION }\n    | { type: Action.SET_BACKUP_INFO, info: BackupFileInfo }\n    | { type: Action.SET_BACKUP_SUMMARY, summary: BackupSummary, backupDecrypted: string }\n    | { type: Action.SET_PASSWORD, password: string }\n    | { type: Action.SET_LOADING, loading: boolean }\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) => {\n        match(action) {\n            when { type: Action.SET_ACCOUNT_TYPE, let accountType }: expr,\n            when { type: Action.SET_EMAIL, let form }: expr,\n            when { type: Action.TO_STEP, let step }: expr,\n        }\n    })\n}\ndispatch({ type: 'SET_ACCOUNT_TYPE', accountType: 'email' })\n```","format":"org.matrix.custom.html","formatted_body":"<p>Primitive</p>\n<pre><code class=\"language-js\">enum Action {\n    SET_ACCOUNT_TYPE,\n    TO_STEP,\n    SET_EMAIL,\n    SET_PHONE,\n    SET_VALIDATION,\n    SET_BACKUP_INFO,\n    SET_BACKUP_SUMMARY,\n    SET_PASSWORD,\n    SET_LOADING,\n}\ntype Action =\n    | { type: Action.SET_ACCOUNT_TYPE, accountType: BackupAccountType }\n    | { type: Action.TO_STEP, step: RestoreStep }\n    | { type: Action.SET_EMAIL, form: Partial&lt;RestoreState['emailForm']&gt; }\n    | { type: Action.SET_PHONE, form: Partial&lt;RestoreState['phoneForm']&gt; }\n    | { type: Action.SET_VALIDATION }\n    | { type: Action.SET_BACKUP_INFO, info: BackupFileInfo }\n    | { type: Action.SET_BACKUP_SUMMARY, summary: BackupSummary, backupDecrypted: string }\n    | { type: Action.SET_PASSWORD, password: string }\n    | { type: Action.SET_LOADING, loading: boolean }\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) =&gt; {\n        match(action) {\n            when { type: Action.SET_ACCOUNT_TYPE, let accountType }: expr,\n            when { type: Action.SET_EMAIL, let form }: expr,\n            when { type: Action.TO_STEP, let step }: expr,\n        }\n    })\n}\ndispatch({ type: 'SET_ACCOUNT_TYPE', accountType: 'email' })\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1711598549935,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nibGBaq_vd15Qd8MpyyXMh3DbXrgZqwmnBV0yIvONPM"},
{"content":{"body":"ADT\n\n```js\nenum Action {\n    SET_ACCOUNT_TYPE(accountType: BackupAccountType),\n    TO_STEP(step: RestoreStep),\n    SET_EMAIL(form: Partial<RestoreState['emailForm']>),\n    SET_PHONE(form: Partial<RestoreState['phoneForm']>),\n    SET_VALIDATION,\n    SET_BACKUP_INFO(info: BackupFileInfo),\n    SET_BACKUP_SUMMARY(summary: BackupSummary, backupDecrypted: string),\n    SET_PASSWORD(password: string),\n    SET_LOADING(loading: boolean),\n}\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) => {\n        match(action) {\n            when Action.SET_ACCOUNT_TYPE(let accountType): expr,\n            when Action.SET_EMAIL(let form): expr,\n            when Action.TO_STEP(let step): expr,\n        }\n    })\n}\ndispatch(Action.SET_ACCOUNT_TYPE('email'))\n```","format":"org.matrix.custom.html","formatted_body":"<p>ADT</p>\n<pre><code class=\"language-js\">enum Action {\n    SET_ACCOUNT_TYPE(accountType: BackupAccountType),\n    TO_STEP(step: RestoreStep),\n    SET_EMAIL(form: Partial&lt;RestoreState['emailForm']&gt;),\n    SET_PHONE(form: Partial&lt;RestoreState['phoneForm']&gt;),\n    SET_VALIDATION,\n    SET_BACKUP_INFO(info: BackupFileInfo),\n    SET_BACKUP_SUMMARY(summary: BackupSummary, backupDecrypted: string),\n    SET_PASSWORD(password: string),\n    SET_LOADING(loading: boolean),\n}\n\nfunction restoreReducer(state: RestoreState, action: Action) {\n    return produce(state, (draft) =&gt; {\n        match(action) {\n            when Action.SET_ACCOUNT_TYPE(let accountType): expr,\n            when Action.SET_EMAIL(let form): expr,\n            when Action.TO_STEP(let step): expr,\n        }\n    })\n}\ndispatch(Action.SET_ACCOUNT_TYPE('email'))\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1711598693906,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$KswZHFo3GtNSAnxSiCPouZAsqKWXNLBTJXde33fvRYQ"},
{"content":{"body":"adt can reduce a lot of redundant code in this pattern. make code more dense and let people write more semantic code","m.mentions":{},"msgtype":"m.text"},"ts":1711598910963,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jIaTMpuYo-ryQoPxfqcc9AyUbzdUFiqnxa-MLFUIj0c"},
{"content":{"body":"What about that code requires the enum values to not be strings?","msgtype":"m.text"},"ts":1711599166766,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t0ZUGuvUXPANIsS4BDwzPMrqibz9GsKEe0u1qeW4zP0"},
{"content":{"body":"> <@ljharb:matrix.org> What about that code requires the enum values to not be strings?\n\nsorry can you rephrase? I did not understand the meaning","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$t0ZUGuvUXPANIsS4BDwzPMrqibz9GsKEe0u1qeW4zP0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>What about that code requires the enum values to not be strings?</blockquote></mx-reply>sorry can you rephrase? I did not understand the meaning","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$t0ZUGuvUXPANIsS4BDwzPMrqibz9GsKEe0u1qeW4zP0"}},"msgtype":"m.text"},"ts":1711599223226,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ELo0uU03xU9nIv_urY5RZO8G4q7PxhXhO7pqHfZ5FKo"},
{"content":{"body":"i mean that seems like a nicer sugar for the non-enum version of the code - where the tags are still strings, just better typed.","msgtype":"m.text"},"ts":1711599271720,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pOtBouT91yqGNCMI7uXVB4PtPjprtok1Rk-wAjE_IeA"},
{"content":{"body":"yes, if we remove the typescript part, it looks like just a small syntax sugar (but also with all performance benefits that Ron mentioned)","m.mentions":{},"msgtype":"m.text"},"ts":1711599406339,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$KzR7TMkJ-L62gVr_CH-ittsPNPEBa2tx9htmZ-WlCsE"},
{"content":{"body":"with typescript this feature is a huge improve","m.mentions":{},"msgtype":"m.text"},"ts":1711599416003,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xH6x__jHhvwJq6H8A3XGfh1bkRGvKMmyxRwDhk62YTg"},
{"content":{"body":"right, and I’m super on board for that. but i don’t see what “adt” adds there nor why enum values need to be objects","msgtype":"m.text"},"ts":1711599432911,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VXGQL8bPQktyiBN3M9_ovk1nAexam0JGTHgVtZM7eHw"},
{"content":{"body":"every enum proposal so far has satisfied that code’s need, which is a good thing","msgtype":"m.text"},"ts":1711599468553,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$3_CiThnRak08eJh4J7_ArBdza3h7Nl6XeyvgVsy7qKg"},
{"content":{"body":"(note: there was a typo in the TOC, but then i realized having a TOC is redundant because github auto-makes one on every markdown file, so i removed it)","m.mentions":{},"msgtype":"m.text"},"ts":1711644283897,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$b9W4I3u_ai02bJLMHXtNASEkFysFK0eH4UgvflX3jYo"}
]