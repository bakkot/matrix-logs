[
{"content":{"body":"I was fiddling around with enum/ADT stuff and realized it wasn't hard to define custom matchers to be ADT-like, so I replaced our previous trivial custom matcher example with one based on Option: https://github.com/tc39/proposal-pattern-matching#custom-matcher-protocol-interpolations","msgtype":"m.text"},"ts":1643073189456,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$QR8ieASOXSxZyZmAY7zTEwtfa7X-DNRCUbFKOWSYs0A"},
{"content":{"body":"And then I realized that decorators should be able to help here as well:\n```js\n// A predefined ADT decorator\nconst ADT = (mapper=()=>null) => (_, c) => {\n\tif(c.kind == \"method\" && c.isStatic) {\n\t\tc.addInitializer(function(){\n\t\t\t// `this` is the class\n\t\t\tconst method = this[c.name];\n\t\t\tmethod[Symbol.matcher] = (matchable) => {\n\t\t\t\tif(matchable instanceof this && matchable._kind == method) {\n\t\t\t\t\treturn {matched: true, value:mapper(matchable)};\n\t\t\t\t}\n\t\t\t\treturn {matched:false};\n\t\t\t}\n\t\t});\n\t} else {\n\t\tthrow new Exception(\"only usable on static methods\");\n\t}\n}\n\nclass Option {\n\tconstructor(val, kind) {\n\t\tthis.value = val;\n\t\tthis._kind = kind;\n\t}\n\n\t@ADT(x=>x.value)\n\tstatic Some(val) {\n\t\treturn new Option(val, Option.Some);\n\t}\n\t\n\t@ADT\n\tstatic None() {\n\t\treturn new Option(null, Option.None);\n\t}\n}\n\nmatch(result) {\n\twhen (${Option.Some} with val) -> console.log(val);\n\twhen (${Option.None}) -> console.log(\"none\");\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>And then I realized that decorators should be able to help here as well:</p>\n<pre><code class=\"language-js\">// A predefined ADT decorator\nconst ADT = (mapper=()=&gt;null) =&gt; (_, c) =&gt; {\n\tif(c.kind == &quot;method&quot; &amp;&amp; c.isStatic) {\n\t\tc.addInitializer(function(){\n\t\t\t// `this` is the class\n\t\t\tconst method = this[c.name];\n\t\t\tmethod[Symbol.matcher] = (matchable) =&gt; {\n\t\t\t\tif(matchable instanceof this &amp;&amp; matchable._kind == method) {\n\t\t\t\t\treturn {matched: true, value:mapper(matchable)};\n\t\t\t\t}\n\t\t\t\treturn {matched:false};\n\t\t\t}\n\t\t});\n\t} else {\n\t\tthrow new Exception(&quot;only usable on static methods&quot;);\n\t}\n}\n\nclass Option {\n\tconstructor(val, kind) {\n\t\tthis.value = val;\n\t\tthis._kind = kind;\n\t}\n\n\t@ADT(x=&gt;x.value)\n\tstatic Some(val) {\n\t\treturn new Option(val, Option.Some);\n\t}\n\t\n\t@ADT\n\tstatic None() {\n\t\treturn new Option(null, Option.None);\n\t}\n}\n\nmatch(result) {\n\twhen (${Option.Some} with val) -&gt; console.log(val);\n\twhen (${Option.None}) -&gt; console.log(&quot;none&quot;);\n}\n</code></pre>\n","msgtype":"m.text"},"ts":1643073217223,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$mKMqoiX21jOVvhy4DF1OsG_W14rgo6b_cdKmtevq9Dw"}
]