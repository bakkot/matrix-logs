[
{"content":{"body":"I presented pattern matching to JSCIG and get some feedbacks","msgtype":"m.text","org.matrix.msc1767.text":"I presented pattern matching to JSCIG and get some feedbacks"},"ts":1646987598710,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kDTl06RPb6VTeC_PIwGlyIWUHAfBQ0yzY6g0obyfm60"},
{"content":{"body":"Some feedbacks are about the confusions/bugs in the slides, I have commented on the slide.","msgtype":"m.text","org.matrix.msc1767.text":"Some feedbacks are about the confusions/bugs in the slides, I have commented on the slide."},"ts":1646988029351,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$1_OaT-_Ke04rNTp7A7Wj5FCbNevgYpxMlqL8Z598YPI"},
{"content":{"body":"The rest are about the proposal design, and I think we can do better","msgtype":"m.text","org.matrix.msc1767.text":"The rest are about the proposal design, and I think we can do better"},"ts":1646988042474,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$r_rjIY6XRvVxVA3nBbxpnPEspgIFd30CNhVs_aE2zrQ"},
{"content":{"body":"https://github.com/tc39/proposal-pattern-matching/issues/248","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-pattern-matching/issues/248"},"ts":1646989268179,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$vRDlC8YdaEEuulOAKO-3LEjl-PIOeH8E3L0LpvGhF18"},
{"content":{"body":"other feedbacks are not too formal so I will post it here","msgtype":"m.text","org.matrix.msc1767.text":"other feedbacks are not too formal so I will post it here"},"ts":1646989413695,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$AEXXRTLmCaesT2IGEGIEguhkVnxZ8uBmfOCm_pgZwlA"},
{"content":{"body":"\nFeedback:\n\n```js\nwhen ([ 'go', dir and ('n' or 'e' or 's' or 'w')]):\n```\n\n> if I need to write `dir and ('n' or 'e' or 's' or 'w')`, there is no way to extract them out. I have to copy and paste.","format":"org.matrix.custom.html","formatted_body":"<p>Feedback:</p>\n<pre><code class=\"language-js\">when ([ 'go', dir and ('n' or 'e' or 's' or 'w')]):\n</code></pre>\n<blockquote>\n<p>if I need to write <code>dir and ('n' or 'e' or 's' or 'w')</code>, there is no way to extract them out. I have to copy and paste.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"\nFeedback:\n\n```js\nwhen ([ 'go', dir and ('n' or 'e' or 's' or 'w')]):\n```\n\n> if I need to write `dir and ('n' or 'e' or 's' or 'w')`, there is no way to extract them out. I have to copy and paste.","mimetype":"text/plain"},{"body":"<p>Feedback:</p>\n<pre><code class=\"language-js\">when ([ 'go', dir and ('n' or 'e' or 's' or 'w')]):\n</code></pre>\n<blockquote>\n<p>if I need to write <code>dir and ('n' or 'e' or 's' or 'w')</code>, there is no way to extract them out. I have to copy and paste.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1646989487333,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BD6E00tW0l6OISgfKj7Kugf4nf2OnqcdkaQD36sNYyA"},
{"content":{"body":"Feedback 2: \n\nSyntax has too much noise in it.\n\nQuestion: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)","format":"org.matrix.custom.html","formatted_body":"<p>Feedback 2:</p>\n<p>Syntax has too much noise in it.</p>\n<p>Question: Why a <code>()</code> after <code>when</code> is required? It's enough to separate LHS and RHS with the <code>:</code> we have. (I don't remember why we made that decision so ...)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Feedback 2: \n\nSyntax has too much noise in it.\n\nQuestion: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)","mimetype":"text/plain"},{"body":"<p>Feedback 2:</p>\n<p>Syntax has too much noise in it.</p>\n<p>Question: Why a <code>()</code> after <code>when</code> is required? It's enough to separate LHS and RHS with the <code>:</code> we have. (I don't remember why we made that decision so ...)</p>\n","mimetype":"text/html"}]},"ts":1646989859742,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$TaqgUs7D_o4H3ugHpdapFnXDVOwipbVS2I-ShVPjwpk"},
{"content":{"body":"Feedback 3:\n\n`Symbol.match` and `Symbol.matcher` creates confusion","format":"org.matrix.custom.html","formatted_body":"<p>Feedback 3:</p>\n<p><code>Symbol.match</code> and <code>Symbol.matcher</code> creates confusion</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Feedback 3:\n\n`Symbol.match` and `Symbol.matcher` creates confusion","mimetype":"text/plain"},{"body":"<p>Feedback 3:</p>\n<p><code>Symbol.match</code> and <code>Symbol.matcher</code> creates confusion</p>\n","mimetype":"text/html"}]},"ts":1646989973922,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$COiNgbUqLJ__IM1kUKuJe9ZaAO8jcqSKzEVSUGl7i_I"},
{"content":{"body":"And the final problem, the current Custom Matcher is too verbose on syntax.\n\nI wish it could be the rbuckton 's unapply form and also bring it to the destructing:\n\n```js\nmatch (val) {\n    when (Some(val)): val,\n    when (None()): undefined\n}\n```\n\nAnd if we have this form, the alternative syntax I proposed in issue #248 will become\n\n\n```js\nmatch (val) {\n    when (NaN): NaN\n    default(Magic): console.log(\"default case with\", Magic)\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>And the final problem, the current Custom Matcher is too verbose on syntax.</p>\n<p>I wish it could be the <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply form and also bring it to the destructing:</p>\n<pre><code class=\"language-js\">match (val) {\n    when (Some(val)): val,\n    when (None()): undefined\n}\n</code></pre>\n<p>And if we have this form, the alternative syntax I proposed in issue #248 will become</p>\n<pre><code class=\"language-js\">match (val) {\n    when (NaN): NaN\n    default(Magic): console.log(&quot;default case with&quot;, Magic)\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And the final problem, the current Custom Matcher is too verbose on syntax.\n\nI wish it could be the rbuckton 's unapply form and also bring it to the destructing:\n\n```js\nmatch (val) {\n    when (Some(val)): val,\n    when (None()): undefined\n}\n```\n\nAnd if we have this form, the alternative syntax I proposed in issue #248 will become\n\n\n```js\nmatch (val) {\n    when (NaN): NaN\n    default(Magic): console.log(\"default case with\", Magic)\n}\n```","mimetype":"text/plain"},{"body":"<p>And the final problem, the current Custom Matcher is too verbose on syntax.</p>\n<p>I wish it could be the <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply form and also bring it to the destructing:</p>\n<pre><code class=\"language-js\">match (val) {\n    when (Some(val)): val,\n    when (None()): undefined\n}\n</code></pre>\n<p>And if we have this form, the alternative syntax I proposed in issue #248 will become</p>\n<pre><code class=\"language-js\">match (val) {\n    when (NaN): NaN\n    default(Magic): console.log(&quot;default case with&quot;, Magic)\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1646990155109,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$gCxvA8FnPG8T-Ihu1wY3krE9MDIQXPtAs-j9pZfjSCc"},
{"content":{"body":"üôè really want this one, it's much simpler to use","msgtype":"m.text","org.matrix.msc1767.text":"üôè really want this one, it's much simpler to use"},"ts":1646990204260,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$a-Dkc-PuPvDn_lhkHDrOJrIi4sHUx31EktE2asUECfk"},
{"content":{"body":"Jack Works: we talked about the identifier pattern in a previous meeting that i'm pretty sure you were present for; my last comment on that issue sums it up","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: we talked about the identifier pattern in a previous meeting that i'm pretty sure you were present for; my last comment on that issue sums it up","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: we talked about the identifier pattern in a previous meeting that i'm pretty sure you were present for; my last comment on that issue sums it up","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: we talked about the identifier pattern in a previous meeting that i'm pretty sure you were present for; my last comment on that issue sums it up","mimetype":"text/html"}]},"ts":1647018641752,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uz5sTE9Nf2xVlPZmLtDkTsvmSvF4PanI9XUl8JNNp08"},
{"content":{"body":"iow:\n```\nwhen ([foo])\n```\nneeds to work, therefore\n```\nwhen (foo)\n```\nmust also work","format":"org.matrix.custom.html","formatted_body":"<p>iow:</p>\n<pre><code>when ([foo])\n</code></pre>\n<p>needs to work, therefore</p>\n<pre><code>when (foo)\n</code></pre>\n<p>must also work</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"iow:\n```\nwhen ([foo])\n```\nneeds to work, therefore\n```\nwhen (foo)\n```\nmust also work","mimetype":"text/plain"},{"body":"<p>iow:</p>\n<pre><code>when ([foo])\n</code></pre>\n<p>needs to work, therefore</p>\n<pre><code>when (foo)\n</code></pre>\n<p>must also work</p>\n","mimetype":"text/html"}]},"ts":1647018662182,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Df4KG4bgNxcTdj_usROUXXyGFvZJ7AiVzJqJWC-wL4Y"},
{"content":{"body":"> <@jackworks:matrix.org> Feedback 2: \n> \n> Syntax has too much noise in it.\n> \n> Question: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)\n\nit's not enough imo; the parens are a necessary boundary. container characters aren't noise, they're explicit easy-to-tune-out boundary markers.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$TaqgUs7D_o4H3ugHpdapFnXDVOwipbVS2I-ShVPjwpk?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>Feedback 2:</p>\n<p>Syntax has too much noise in it.</p>\n<p>Question: Why a <code>()</code> after <code>when</code> is required? It's enough to separate LHS and RHS with the <code>:</code> we have. (I don't remember why we made that decision so ...)</p>\n</blockquote></mx-reply>it's not enough imo; the parens are a necessary boundary. container characters aren't noise, they're explicit easy-to-tune-out boundary markers.","m.relates_to":{"m.in_reply_to":{"event_id":"$TaqgUs7D_o4H3ugHpdapFnXDVOwipbVS2I-ShVPjwpk"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> Feedback 2: \n> \n> Syntax has too much noise in it.\n> \n> Question: Why a `()` after `when` is required? It's enough to separate LHS and RHS with the `:` we have. (I don't remember why we made that decision so ...)\n\nit's not enough imo; the parens are a necessary boundary. container characters aren't noise, they're explicit easy-to-tune-out boundary markers.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$TaqgUs7D_o4H3ugHpdapFnXDVOwipbVS2I-ShVPjwpk?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>Feedback 2:</p>\n<p>Syntax has too much noise in it.</p>\n<p>Question: Why a <code>()</code> after <code>when</code> is required? It's enough to separate LHS and RHS with the <code>:</code> we have. (I don't remember why we made that decision so ...)</p>\n</blockquote></mx-reply>it's not enough imo; the parens are a necessary boundary. container characters aren't noise, they're explicit easy-to-tune-out boundary markers.","mimetype":"text/html"}]},"ts":1647018694533,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$a2cSF2QISiyfIc-xPTMnCHY5T9EDT16kGS0M8mIzLY4"},
{"content":{"body":"> <@ljharb:matrix.org> iow:\n> ```\n> when ([foo])\n> ```\n> needs to work, therefore\n> ```\n> when (foo)\n> ```\n> must also work\n\nBut it's already not working in most places.\n\nAnd when we discussed this, I didn't recall that we have considered the future special identifier pattern like undefined and infinity.\n\nTake that into our consideration, I think the solo identifier pattern should be a syntax error. There are better ways to do it. `default(binding)`. This way is also more clear on visuals. Easier to read. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$Df4KG4bgNxcTdj_usROUXXyGFvZJ7AiVzJqJWC-wL4Y?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br /><p>iow:</p>\n<pre><code>when ([foo])\n</code></pre>\n<p>needs to work, therefore</p>\n<pre><code>when (foo)\n</code></pre>\n<p>must also work</p>\n</blockquote></mx-reply><p>But it's already not working in most places.</p>\n<p>And when we discussed this, I didn't recall that we have considered the future special identifier pattern like undefined and infinity.</p>\n<p>Take that into our consideration, I think the solo identifier pattern should be a syntax error. There are better ways to do it. <code>default(binding)</code>. This way is also more clear on visuals. Easier to read.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$Df4KG4bgNxcTdj_usROUXXyGFvZJ7AiVzJqJWC-wL4Y"}},"msgtype":"m.text"},"ts":1647019097358,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$a6y-4CYsu_mmo_VtZYlCnLL_7G-akd_6thYqw4uJH7c"},
{"content":{"body":"what do you mean not working in most places?","msgtype":"m.text","org.matrix.msc1767.text":"what do you mean not working in most places?"},"ts":1647019111240,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$O01mrH8v0njixu_bLL8vFQnaPk2Vd_TA1SrJc9Clm_A"},
{"content":{"body":"anywhere inside a pattern, a bare identifier is an irrefutable match","msgtype":"m.text","org.matrix.msc1767.text":"anywhere inside a pattern, a bare identifier is an irrefutable match"},"ts":1647019119319,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qSQ73u7kGeJs9qSLneQSa9xrgoXvk6vUu5jnNgMH9ic"},
{"content":{"body":"(undefined and infinity and NaN aren't future patterns, they're part of this proposal)","msgtype":"m.text","org.matrix.msc1767.text":"(undefined and infinity and NaN aren't future patterns, they're part of this proposal)"},"ts":1647019135203,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$V9qmuD-vfwXpZVaIPH9pIPoU1G4G_iod46AFONfzmRs"},
{"content":{"body":"`default(binding)` simply *can not work* for nested matches, like inside an array or object","format":"org.matrix.custom.html","formatted_body":"<code>default(binding)</code> simply <em>can not work</em> for nested matches, like inside an array or object","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`default(binding)` simply *can not work* for nested matches, like inside an array or object","mimetype":"text/plain"},{"body":"<code>default(binding)</code> simply <em>can not work</em> for nested matches, like inside an array or object","mimetype":"text/html"}]},"ts":1647019151109,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m30FvJEilCIZLgF2A_Zl2E2Sd8V1Ho4UdM_XqU4N9VE"},
{"content":{"body":"and, because of `if`, you need to be able to do `when (foo) if (condition)`, which the `default()` wouldn't support, because \"default with if\" would be bizarre","format":"org.matrix.custom.html","formatted_body":"and, because of <code>if</code>, you need to be able to do <code>when (foo) if (condition)</code>, which the <code>default()</code> wouldn't support, because &quot;default with if&quot; would be bizarre","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and, because of `if`, you need to be able to do `when (foo) if (condition)`, which the `default()` wouldn't support, because \"default with if\" would be bizarre","mimetype":"text/plain"},{"body":"and, because of <code>if</code>, you need to be able to do <code>when (foo) if (condition)</code>, which the <code>default()</code> wouldn't support, because &quot;default with if&quot; would be bizarre","mimetype":"text/html"}]},"ts":1647019172967,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5IHVqM023jJ1N17IBq7a1V2sxQofbFTJhWuseheJSFg"},
{"content":{"body":"we certainly could make `when (foo)` by itself a syntax error - we already will, if it's not the last clause - but i'm not sure what value that would add","format":"org.matrix.custom.html","formatted_body":"we certainly could make <code>when (foo)</code> by itself a syntax error - we already will, if it's not the last clause - but i'm not sure what value that would add","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"we certainly could make `when (foo)` by itself a syntax error - we already will, if it's not the last clause - but i'm not sure what value that would add","mimetype":"text/plain"},{"body":"we certainly could make <code>when (foo)</code> by itself a syntax error - we already will, if it's not the last clause - but i'm not sure what value that would add","mimetype":"text/html"}]},"ts":1647019196724,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PRNivzfeHX66XEMzIWzBtZg10Yjz6zVvUQEP5Dt9thk"},
{"content":{"body":"> <@ljharb:matrix.org> what do you mean not working in most places?\n\nSolo identifier pattern as a syntax error if it does not occur at last. So in most places it's not working. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$O01mrH8v0njixu_bLL8vFQnaPk2Vd_TA1SrJc9Clm_A?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />what do you mean not working in most places?</blockquote></mx-reply>Solo identifier pattern as a syntax error if it does not occur at last. So in most places it's not working.","m.relates_to":{"m.in_reply_to":{"event_id":"$O01mrH8v0njixu_bLL8vFQnaPk2Vd_TA1SrJc9Clm_A"}},"msgtype":"m.text"},"ts":1647019200744,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$VD44_wAOm7lAf9NFuUwSInsoljl09QH7lfiDRqcPMZo"},
{"content":{"body":"ah, i see what you mean","msgtype":"m.text","org.matrix.msc1767.text":"ah, i see what you mean"},"ts":1647019212308,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$n9957EgA4ZykwL9mF7vuCPVoKHfHan9U0JyAOQrqA6s"},
{"content":{"body":"sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that `default(binding)` is a good idea or makes sense","format":"org.matrix.custom.html","formatted_body":"sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that <code>default(binding)</code> is a good idea or makes sense","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that `default(binding)` is a good idea or makes sense","mimetype":"text/plain"},{"body":"sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that <code>default(binding)</code> is a good idea or makes sense","mimetype":"text/html"}]},"ts":1647019230701,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SZ4GxgYhtlMgIseFPKseZ0uJm6IVGrHg4pd31BNwC-c"},
{"content":{"body":"but i also don't think `when (foo)` is harmful or bad, as long as it's the last clause","format":"org.matrix.custom.html","formatted_body":"but i also don't think <code>when (foo)</code> is harmful or bad, as long as it's the last clause","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but i also don't think `when (foo)` is harmful or bad, as long as it's the last clause","mimetype":"text/plain"},{"body":"but i also don't think <code>when (foo)</code> is harmful or bad, as long as it's the last clause","mimetype":"text/html"}]},"ts":1647019255337,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hCu9_M_6j3HQ8_CUV0Rioy1Kf-ENxWJJj2zaGc50Nqk"},
{"content":{"body":"> <@ljharb:matrix.org> anywhere inside a pattern, a bare identifier is an irrefutable match\n\nYes other identifier pattern is useful. I only mean the topmost sole identifier pattern. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$qSQ73u7kGeJs9qSLneQSa9xrgoXvk6vUu5jnNgMH9ic?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />anywhere inside a pattern, a bare identifier is an irrefutable match</blockquote></mx-reply>Yes other identifier pattern is useful. I only mean the topmost sole identifier pattern.","m.relates_to":{"m.in_reply_to":{"event_id":"$qSQ73u7kGeJs9qSLneQSa9xrgoXvk6vUu5jnNgMH9ic"}},"msgtype":"m.text"},"ts":1647019261452,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$bN-AVeRz-5kmprzGCfWEhnC_rnUKzk8HEdMg6UYpNxU"},
{"content":{"body":"banning `when (foo)` even as the last item creates an inconsistency tho","format":"org.matrix.custom.html","formatted_body":"banning <code>when (foo)</code> even as the last item creates an inconsistency tho","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"banning `when (foo)` even as the last item creates an inconsistency tho","mimetype":"text/plain"},{"body":"banning <code>when (foo)</code> even as the last item creates an inconsistency tho","mimetype":"text/html"}]},"ts":1647019309329,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K12-gRT8RFS69ChaZgImQTuodqx9Vky5yLaqwKfDN_k"},
{"content":{"body":"it seems more like something that should be linted against, if someone doesn't like the style, rather than banned at the language level","msgtype":"m.text","org.matrix.msc1767.text":"it seems more like something that should be linted against, if someone doesn't like the style, rather than banned at the language level"},"ts":1647019326691,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vu5iJggIVPDqzaw12TimBbr4I5oMtRUxk17D0yzsnkY"},
{"content":{"body":"> <@ljharb:matrix.org> sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that `default(binding)` is a good idea or makes sense\n\nIt's like `catch(error)`, or if you don't like it, we may also have `default with binding`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$SZ4GxgYhtlMgIseFPKseZ0uJm6IVGrHg4pd31BNwC-c?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />sure, that's a reasonable argument for making it a syntax error always at the top level. i do not think that <code>default(binding)</code> is a good idea or makes sense</blockquote></mx-reply>It's like <code>catch(error)</code>, or if you don't like it, we may also have <code>default with binding</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$SZ4GxgYhtlMgIseFPKseZ0uJm6IVGrHg4pd31BNwC-c"}},"msgtype":"m.text"},"ts":1647019338246,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rs-jLs_Zf2nJCp3oSeAGVVH64aIahMiQuab_OOhcsPo"},
{"content":{"body":"why would you need the binding tho?","msgtype":"m.text","org.matrix.msc1767.text":"why would you need the binding tho?"},"ts":1647019363728,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KxytLcBPOGn7ysLDczGH_ahNNPQNJi8X8d5LVdV6rIc"},
{"content":{"body":"ü§î oh wait... Yes that reminds me, the issue I mentioned also affects nested pattern","msgtype":"m.text"},"ts":1647019376740,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$sRqCU1XLr2Urou9UQJ1lnmQ_zKNAdF1aCCnAC3d_JU8"},
{"content":{"body":"i don't personally have any use case for `when (foo)`, it just naturally falls out of consistency with being able to do it nested","format":"org.matrix.custom.html","formatted_body":"i don't personally have any use case for <code>when (foo)</code>, it just naturally falls out of consistency with being able to do it nested","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i don't personally have any use case for `when (foo)`, it just naturally falls out of consistency with being able to do it nested","mimetype":"text/plain"},{"body":"i don't personally have any use case for <code>when (foo)</code>, it just naturally falls out of consistency with being able to do it nested","mimetype":"text/html"}]},"ts":1647019378396,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xpGP_oPdk397pqk7llVefaHNYgvNtpOOwac8clr4fTg"},
{"content":{"body":"and i see zero harm in allowing it","msgtype":"m.text","org.matrix.msc1767.text":"and i see zero harm in allowing it"},"ts":1647019386606,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2p2sDjCvVH6f7uyYeOQfB3wVZt2F_3vd8ofAmsPll24"},
{"content":{"body":"Since we need irfutable pattern","msgtype":"m.text"},"ts":1647019389166,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4xDAz8xAuuzhWQFgEAlJZETBYaFGLeSS-o7K_bWhO6E"},
{"content":{"body":"Ban the topmost cannot solve the problem ","msgtype":"m.text"},"ts":1647019418171,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$WGrFDwyQLoklUDaWpgGJY-7GOfPRh2LrbhkE8YCF1Qc"},
{"content":{"body":"if the problem is \"irrefutable patterns\", yes, that's unavoidable","msgtype":"m.text","org.matrix.msc1767.text":"if the problem is \"irrefutable patterns\", yes, that's unavoidable"},"ts":1647019470125,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PgNoziGfyK0f1QYR8IXMn2anh6yQ0otuOOo2VQjpNwo"},
{"content":{"body":"I understand now. So... are we sure we didn't miss anything? What if we really need to add something special? That's really not possible... ","msgtype":"m.text"},"ts":1647019547233,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Jqgm7mUnJtAxfgMckXailod8pfLfgrN30o5zl5bZChA"},
{"content":{"body":"why would there ever be any new special things?","msgtype":"m.text","org.matrix.msc1767.text":"why would there ever be any new special things?"},"ts":1647019556958,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NxKdqz-uIA25ZDh3bgv9BuiVvZtIlJWkIk2FqB9lFTw"},
{"content":{"body":"that `undefined` is an identifier is a historical mistake","format":"org.matrix.custom.html","formatted_body":"that <code>undefined</code> is an identifier is a historical mistake","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"that `undefined` is an identifier is a historical mistake","mimetype":"text/plain"},{"body":"that <code>undefined</code> is an identifier is a historical mistake","mimetype":"text/html"}]},"ts":1647019565699,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rm35QKRwxBanAxezNYKShY3_mdfVJTMyXvrMzwkbNEs"},
{"content":{"body":"and `-0` and `+0` are special patterns because of -0, which also won't be repeated","format":"org.matrix.custom.html","formatted_body":"and <code>-0</code> and <code>+0</code> are special patterns because of -0, which also won't be repeated","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `-0` and `+0` are special patterns because of -0, which also won't be repeated","mimetype":"text/plain"},{"body":"and <code>-0</code> and <code>+0</code> are special patterns because of -0, which also won't be repeated","mimetype":"text/html"}]},"ts":1647019580562,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qNJAW8gvd61l1mKCCvarLyaEwJmNvkFfVQX_R6NEVB8"},
{"content":{"body":"Hmm I don't know, maybe, when we have Decimals, we have a decimal version of DecimalNaN","msgtype":"m.text"},"ts":1647019598070,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$eBJoVN_JsxGqPrYk2332TdeWP2rwTJEkg4ptIO7Hmr4"},
{"content":{"body":"(`NaN` and `Infinity` are also special patterns because they're identifiers instead of keywords)","format":"org.matrix.custom.html","formatted_body":"(<code>NaN</code> and <code>Infinity</code> are also special patterns because they're identifiers instead of keywords)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(`NaN` and `Infinity` are also special patterns because they're identifiers instead of keywords)","mimetype":"text/plain"},{"body":"(<code>NaN</code> and <code>Infinity</code> are also special patterns because they're identifiers instead of keywords)","mimetype":"text/html"}]},"ts":1647019610291,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m3f53vaANFfRbiMfHfvMCYAarice_SB94NtpXhuHlLw"},
{"content":{"body":"if we had Decimals, and they added a NaN (which i doubt), they'd not be able to add it as an identifier, for all these reasons","msgtype":"m.text","org.matrix.msc1767.text":"if we had Decimals, and they added a NaN (which i doubt), they'd not be able to add it as an identifier, for all these reasons"},"ts":1647019625661,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rKuIhaB1KnpjkZaWOV3hg0PYTpKpUzcIcMOg2sGe9YM"},
{"content":{"body":"Yeah, what if we have more NaN in the language... ","msgtype":"m.text"},"ts":1647019629353,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Faarij9JuTCOMN9x9ZbPLRcEbYV45yPvqAOQOuh-GGo"},
{"content":{"body":"lol if this proposal helps ensure no added NaNs to the language, i think we'd get stage 4 tomorrow","msgtype":"m.text","org.matrix.msc1767.text":"lol if this proposal helps ensure no added NaNs to the language, i think we'd get stage 4 tomorrow"},"ts":1647019646730,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$H2qJAZrsUWWJwvypiTP_q0NH6XwpzF9uvBOqH5ylwfc"},
{"content":{"body":"üòÜ","msgtype":"m.text"},"ts":1647019662880,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$T7uBbwa54_58JHnOxvRDnLAo2rU2A0It6KwE8tkiD2g"},
{"content":{"body":"But what about Infinity? ","msgtype":"m.text"},"ts":1647019669937,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$pyAUgHf1wS33nXADwJt0t2KS1ExuqPn1EmqS-BiwbWA"},
{"content":{"body":"Maybe some new number kind will have its own Infinity ","msgtype":"m.text"},"ts":1647019686610,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CpaFccAmY9u5Eacj0WX6m2V0WKi6A-TXHez6fUHr7BM"},
{"content":{"body":"Well, that might be reasonable that \"we won't add new special identifier patterns in the future\" ","msgtype":"m.text"},"ts":1647020040929,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$MsSXdDkdeJixgxhwn_xrAUb7AkwNzZ9w-Ptz1Do1EU4"},
{"content":{"body":"exactly, i think we can say that","msgtype":"m.text","org.matrix.msc1767.text":"exactly, i think we can say that"},"ts":1647020178586,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RJLVl_gQS_CYgJUZNkx-yaR8lU2FbV35-5mNx6LqofY"},
{"content":{"body":"since, we shouldn't anyways","msgtype":"m.text","org.matrix.msc1767.text":"since, we shouldn't anyways"},"ts":1647020194705,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TMobXfngGF-MPLzeLjTMLYTdpd2yNdztp9Nzksn3K2w"},
{"content":{"body":"Ok that's cool","msgtype":"m.text"},"ts":1647020435311,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$hfmOKOl4f264JY6t9V0P_jvX9784Mc2DcfPFvnu9qEs"},
{"content":{"body":"> <@jackworks:matrix.org> And the final problem, the current Custom Matcher is too verbose on syntax.\n> \n> I wish it could be the rbuckton 's unapply form and also bring it to the destructing:\n> \n> ```js\n> match (val) {\n>     when (Some(val)): val,\n>     when (None()): undefined\n> }\n> ```\n> \n> And if we have this form, the alternative syntax I proposed in issue #248 will become\n> \n> \n> ```js\n> match (val) {\n>     when (NaN): NaN\n>     default(Magic): console.log(\"default case with\", Magic)\n> }\n> ```\n\nAnd what about this? I really hope we can have this form and we can also bring it to the destructor syntax.\n\nIt's works nicer than the current syntax and have the same feature","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$gCxvA8FnPG8T-Ihu1wY3krE9MDIQXPtAs-j9pZfjSCc?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br /><p>And the final problem, the current Custom Matcher is too verbose on syntax.</p>\n<p>I wish it could be the <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply form and also bring it to the destructing:</p>\n<pre><code class=\"language-js\">match (val) {\n    when (Some(val)): val,\n    when (None()): undefined\n}\n</code></pre>\n<p>And if we have this form, the alternative syntax I proposed in issue #248 will become</p>\n<pre><code class=\"language-js\">match (val) {\n    when (NaN): NaN\n    default(Magic): console.log(&quot;default case with&quot;, Magic)\n}\n</code></pre>\n</blockquote></mx-reply><p>And what about this? I really hope we can have this form and we can also bring it to the destructor syntax.</p>\n<p>It's works nicer than the current syntax and have the same feature</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$gCxvA8FnPG8T-Ihu1wY3krE9MDIQXPtAs-j9pZfjSCc"}},"msgtype":"m.text"},"ts":1647020589709,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$geraeDQh307UcUw276c1g9B6n1vtmBX1h1rJScPOGeY"},
{"content":{"body":"\"works nicer\" is pretty subjective; i am not a fan of that form","msgtype":"m.text","org.matrix.msc1767.text":"\"works nicer\" is pretty subjective; i am not a fan of that form"},"ts":1647022270936,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B4brwOiLHLIh2nG_geWTbZ6v8A3Wyp7xS3Ce28qRC0c"},
{"content":{"body":"but also, changing destructuring is far out of scope of this proposal; if we want something in both, it needs to be added to both at the same time","msgtype":"m.text","org.matrix.msc1767.text":"but also, changing destructuring is far out of scope of this proposal; if we want something in both, it needs to be added to both at the same time"},"ts":1647022303704,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rmCMr-4Uuw1cGagqPuNK0WiYYHy8XdJCTs6YRDNLeSE"},
{"content":{"body":"I plan to present extractors at an upcoming meeting, but unfortunately have a conflict at the end of this month and won't be able to attend. ","format":"org.matrix.custom.html","formatted_body":"I plan to present extractors at an upcoming meeting, but unfortunately have a conflict at the end of this month and won't be able to attend.","msgtype":"m.text"},"ts":1647042428015,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$MRMx1O4pqeLtVjI9QiMffrtPdZ9BAkv-ymEXPlAr2aw"}
]