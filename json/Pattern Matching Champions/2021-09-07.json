[
{"content":{"body":"`()=>` doesn't make it \"totally different\", most things just work, the only things changed are control flow things (`return`, `break`, `continue`, `await`), and if u wrap the code with `() =>`, most wrong usage of them will report as syntax error, so people only need to care about `return`, and js programmers already know that from the start day of js because the existence of anonymous functions. \nChanges of `if` is totally different. I could accept that only it could produce enough syntax errors to avoid misuse.","format":"org.matrix.custom.html","formatted_body":"<code>()=&gt;</code> doesn't make it &quot;totally different&quot;, most things just work, the only things changed are control flow things (<code>return</code>, <code>break</code>, <code>continue</code>, <code>await</code>), and if u wrap the code with <code>() =&gt;</code>, most wrong usage of them will report as syntax error, so people only need to care about <code>return</code>, and js programmers already know that from the start day of js because the existence of anonymous functions.<br>Changes of <code>if</code> is totally different. I could accept that only it could produce enough syntax errors to avoid misuse.","msgtype":"m.text"},"ts":1631002573022,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$NG32XwC9ZuhZe8H-YMhTEfmA1-NzDmbLXdAcJdACzgA"},
{"content":{"body":"it makes it a function instead of whatever the value is. Having to invoke it is indeed very different","msgtype":"m.text"},"ts":1631027010332,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$46hbdhIVQKSOgO1G3DFqBP9Duo8L1HtiXVZPFVWmXj8"}
]