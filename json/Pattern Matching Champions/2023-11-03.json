[
{"content":{"body":"class T extends ((class {} is let x), x) { [1 is let y]() {}, x = ((1 is let z), z) };\n\nconst { x = 1 is let y, [(Symbol.iterator is let w, w)]: p } = 1 is let z;\n\nif (false) expr is let x; // if (false) let x = expr // is syntax error","format":"org.matrix.custom.html","formatted_body":"<p>class T extends ((class {} is let x), x) { 1 is let y {}, x = ((1 is let z), z) };</p>\n<p>const { x = 1 is let y, [(Symbol.iterator is let w, w)]: p } = 1 is let z;</p>\n<p>if (false) expr is let x; // if (false) let x = expr // is syntax error</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1698978703262,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4SZyEd43HvpSy9pSGinoX9ymot15DyZLngwECndbLZE"},
{"content":{"body":"try to find some cursed case","m.mentions":{},"msgtype":"m.text"},"ts":1698978713379,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YFaA1VWBeIVx0z1G1l6KQlqQx1FQQPrwcyYlzML0S70"},
{"content":{"body":"I'm not sure that's a helpful exercise. You can find cursed cases of just about any syntax. None of those cases will be likely in practice. ","format":"org.matrix.custom.html","formatted_body":"I'm not sure that's a helpful exercise. You can find cursed cases of just about any syntax. None of those cases will be likely in practice.","msgtype":"m.text"},"ts":1698986535938,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JFhxmUXjStFGIFfLoCl3SMEaLFSJ6_Ds1Pg713kwfMo"},
{"content":{"body":"ðŸ˜­","msgtype":"m.text"},"ts":1699004408279,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fSC3Akl7XXmhEBL0b2GdU3PE7uC7O0Apm9DAIyNPyo4"},
{"content":{"body":"yes, elision is allowed and should simply ignore that item","m.mentions":{},"msgtype":"m.text"},"ts":1699034947777,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$A7tzqDWo48FvLE4Woh7-TpZ8lvVoy1Tc5jUNAh9D9ZU"},
{"content":{"body":"All the easy part of the spec is done","m.mentions":{},"msgtype":"m.text"},"ts":1699035138686,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UytX32FSUH3klXH1S-z0RUfw8zZ0jH_2enCOEvyxgUA"},
{"content":{"body":"The rest work:\n- Object & Array pattern (not that hard, because I can copy cache semantics from the old spec)\n- Extractor pattern (depends on RS of Array pattern)\n- Binding pattern (don't know how to do this, so I'll leave it to the last)","format":"org.matrix.custom.html","formatted_body":"<p>The rest work:</p>\n<ul>\n<li>Object &amp; Array pattern (not that hard, because I can copy cache semantics from the old spec)</li>\n<li>Extractor pattern (depends on RS of Array pattern)</li>\n<li>Binding pattern (don't know how to do this, so I'll leave it to the last)</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1699035255146,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rMVp3NGzEZKUbq9LhxU6ANvbINwooxe4HZKjHYu-oA4"}
]