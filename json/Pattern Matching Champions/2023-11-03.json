[
{"content":{"body":"class T extends ((class {} is let x), x) { [1 is let y]() {}, x = ((1 is let z), z) };\n\nconst { x = 1 is let y, [(Symbol.iterator is let w, w)]: p } = 1 is let z;\n\nif (false) expr is let x; // if (false) let x = expr // is syntax error","format":"org.matrix.custom.html","formatted_body":"<p>class T extends ((class {} is let x), x) { 1 is let y {}, x = ((1 is let z), z) };</p>\n<p>const { x = 1 is let y, [(Symbol.iterator is let w, w)]: p } = 1 is let z;</p>\n<p>if (false) expr is let x; // if (false) let x = expr // is syntax error</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1698978703262,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4SZyEd43HvpSy9pSGinoX9ymot15DyZLngwECndbLZE"},
{"content":{"body":"try to find some cursed case","m.mentions":{},"msgtype":"m.text"},"ts":1698978713379,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YFaA1VWBeIVx0z1G1l6KQlqQx1FQQPrwcyYlzML0S70"},
{"content":{"body":"I'm not sure that's a helpful exercise. You can find cursed cases of just about any syntax. None of those cases will be likely in practice. ","format":"org.matrix.custom.html","formatted_body":"I'm not sure that's a helpful exercise. You can find cursed cases of just about any syntax. None of those cases will be likely in practice.","msgtype":"m.text"},"ts":1698986535938,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JFhxmUXjStFGIFfLoCl3SMEaLFSJ6_Ds1Pg713kwfMo"}
]