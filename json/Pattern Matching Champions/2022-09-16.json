[
{"content":{"body":"Okay finally finished up the issue for moving irrefutable matchers to a different pattern, so plain idents can be custom matchers: https://github.com/tc39/proposal-pattern-matching/issues/283","msgtype":"m.text","org.matrix.msc1767.text":"Okay finally finished up the issue for moving irrefutable matchers to a different pattern, so plain idents can be custom matchers: https://github.com/tc39/proposal-pattern-matching/issues/283"},"ts":1663293176004,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$GXjzpMIKAhC-zDI664w7ttzl1hdg4xO8rtbSmRX000s"},
{"content":{"body":"This also completely removes the need to have primitive matchers as a *concept*; they just fall into this case of \"interpolation patterns without the `${}` wrapper\".","format":"org.matrix.custom.html","formatted_body":"This also completely removes the need to have primitive matchers as a <em>concept</em>; they just fall into this case of &quot;interpolation patterns without the <code>${}</code> wrapper&quot;.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"This also completely removes the need to have primitive matchers as a *concept*; they just fall into this case of \"interpolation patterns without the `${}` wrapper\".","mimetype":"text/plain"},{"body":"This also completely removes the need to have primitive matchers as a <em>concept</em>; they just fall into this case of &quot;interpolation patterns without the <code>${}</code> wrapper&quot;.","mimetype":"text/html"}]},"ts":1663293225280,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$_w-evAsYTIBUNrLlrB0QyT-UjERicgCGrSJfjYfBbyM"},
{"content":{"body":"I can't say I like that (though I had not considered the -2 thing before)","msgtype":"m.text","org.matrix.msc1767.text":"I can't say I like that (though I had not considered the -2 thing before)"},"ts":1663298585616,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$MzUs9vz5hmXzRtbVg_LeApBxDktSVsc1D4tCgMGqYvY"},
{"content":{"body":" * I can't say I like that (though I had not considered the -2 thing before)","m.new_content":{"body":"I can't say I like that (though I had not considered the -2 thing before)","msgtype":"m.text","org.matrix.msc1767.text":"I can't say I like that (though I had not considered the -2 thing before)"},"m.relates_to":{"event_id":"$MzUs9vz5hmXzRtbVg_LeApBxDktSVsc1D4tCgMGqYvY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I can't say I like that (though I had not considered the -2 thing before)"},"ts":1663298599794,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$TxhH_k9bM1TlAzfIZtkw0MZ3jdkAepy8ViU8IOfKQII"},
{"content":{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you match a singleton array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you match a singleton array ðŸ¤”","m.new_content":{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you match a singleton array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you match a singleton array ðŸ¤”","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you match a singleton array ðŸ¤”","mimetype":"text/plain"},{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you match a singleton array ðŸ¤”","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$MzUs9vz5hmXzRtbVg_LeApBxDktSVsc1D4tCgMGqYvY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you match a singleton array ðŸ¤”","mimetype":"text/plain"},{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you match a singleton array ðŸ¤”","mimetype":"text/html"}]},"ts":1663298710476,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$u4yJYJI1OuJJnoM5ulJCE_OXeRdeySIZV1fIbYmRNgs"},
{"content":{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","m.new_content":{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/plain"},{"body":"I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$MzUs9vz5hmXzRtbVg_LeApBxDktSVsc1D4tCgMGqYvY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/plain"},{"body":" * I can't say I like that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/html"}]},"ts":1663298815274,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$8H9KTgR0hX2wtscDab8sFJxvu7Vgx3ss3--I3YUlTbU"},
{"content":{"body":" * I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":" * I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","m.new_content":{"body":"I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","format":"org.matrix.custom.html","formatted_body":"I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/plain"},{"body":"I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$MzUs9vz5hmXzRtbVg_LeApBxDktSVsc1D4tCgMGqYvY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if `when([x])` isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/plain"},{"body":" * I can't say I like anything about that (though I had not considered the -2 thing before) -- it seems bad if <code>when([x])</code> isn't how you bind against the first element of an array ðŸ¤”","mimetype":"text/html"}]},"ts":1663298925873,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$G-mNKIC6quJkN7ShYLpomUZRkIsAmYgKdY5hUuQwBp8"},
{"content":{"body":"and `when([as x])` or `when([let x])`just looks like \"what would that even mean\" in spite of being a very basic thing to do","format":"org.matrix.custom.html","formatted_body":"and <code>when([as x])</code> or <code>when([let x])</code>just looks like &quot;what would that even mean&quot; in spite of being a very basic thing to do","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `when([as x])` or `when([let x])`just looks like \"what would that even mean\" in spite of being a very basic thing to do","mimetype":"text/plain"},{"body":"and <code>when([as x])</code> or <code>when([let x])</code>just looks like &quot;what would that even mean&quot; in spite of being a very basic thing to do","mimetype":"text/html"}]},"ts":1663298948098,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$HSmJA3IRD1z5dfUm5fnr79_jxnLQrOH4xABy1dtn2Ag"},
{"content":{"body":"I am sad to give that a + because it is a very sensible way to define things","msgtype":"m.text","org.matrix.msc1767.text":"I am sad to give that a + because it is a very sensible way to define things"},"ts":1663324216635,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$a_bW2QieKtgcPxRciVe7DG9Ha-9CJJ-_mdBqdQrQwYw"},
{"content":{"body":"Overall, I'm not really convinced it's so important to pattern match on Infinity/-Infinity, NaN or undefined... it would be good for me to learn more background on how/why you've been weighing that as you have.","msgtype":"m.text","org.matrix.msc1767.text":"Overall, I'm not really convinced it's so important to pattern match on Infinity/-Infinity, NaN or undefined... it would be good for me to learn more background on how/why you've been weighing that as you have."},"ts":1663324346871,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RSzXtNEYjfQJLGylhAQ3CuZ3OkAISpkUZg4QCoj25fI"},
{"content":{"body":"they're values, and there's use cases to pattern match on every single kind of value","msgtype":"m.text","org.matrix.msc1767.text":"they're values, and there's use cases to pattern match on every single kind of value"},"ts":1663348294895,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Gk8oT4w-_0_VSL63LRs9_zY6cMAwpWDBADv5ezIlcIM"}
]