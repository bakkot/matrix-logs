[
{"content":{"body":"> <@rbuckton:matrix.org> IMO, a good topic order for these slides might be:\n> 1. `match` syntax overview\n> 2. Literal constant patterns (i.e., \"Primitive Patterns\")\n> 3. Reference patterns (variable references and member references)\n> 4. Object patterns\n> 5. Array patterns\n> 6. Discards/`void` patterns\n> 7. Extractors\n> 9. Combinator patterns (and/or/not/parens)\n> 8. Variable declaration patterns (i.e., `let`/`const`/`var`) - calling them \"Binding Patterns\" is mildly confusing as JS already has something else called a binding pattern \n> 10. `if` patterns\n> 11. Semantics of custom matchers\n> 12. Future syntax\n> \n> This order progressively builds in complexity while leveraging key information from previous slides. For example `if` patterns really need `and` to be meaningful. Oftentimes, so do `let` patterns.\n\nI'll update the spec to rename the term \"BindingPattern\" to what you suggested","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$5rN1U2qJrKYUSxEdHlXo4xCEYRNAmjEvmpmzX7YZ6Qs\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><p>IMO, a good topic order for these slides might be:</p>\n<ol>\n<li><code>match</code> syntax overview</li>\n<li>Literal constant patterns (i.e., \"Primitive Patterns\")</li>\n<li>Reference patterns (variable references and member references)</li>\n<li>Object patterns</li>\n<li>Array patterns</li>\n<li>Discards/<code>void</code> patterns</li>\n<li>Extractors</li>\n<li>Combinator patterns (and/or/not/parens)</li>\n<li>Variable declaration patterns (i.e., <code>let</code>/<code>const</code>/<code>var</code>) - calling them \"Binding Patterns\" is mildly confusing as JS already has something else called a binding pattern</li>\n<li><code>if</code> patterns</li>\n<li>Semantics of custom matchers</li>\n<li>Future syntax</li>\n</ol>\n<p>This order progressively builds in complexity while leveraging key information from previous slides. For example <code>if</code> patterns really need <code>and</code> to be meaningful. Oftentimes, so do <code>let</code> patterns.</p>\n</blockquote></mx-reply>I&#39;ll update the spec to rename the term &quot;BindingPattern&quot; to what you suggested","m.relates_to":{"m.in_reply_to":{"event_id":"$5rN1U2qJrKYUSxEdHlXo4xCEYRNAmjEvmpmzX7YZ6Qs"}},"msgtype":"m.text"},"ts":1727420958928,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$hhiKAETUVEU_bnKd9LPAmFW8AVJlWn5grtKw_Ak6dBY"}
]