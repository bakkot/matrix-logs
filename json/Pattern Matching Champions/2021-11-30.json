[
{"content":{"body":"yes but the thing you extract isn’t always further destructured ","format":"org.matrix.custom.html","formatted_body":"yes but the thing you extract isn’t always further destructured","msgtype":"m.text"},"ts":1638259710426,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IkI_l9AO6dwM9Iu6wfOGo1mgmwb8Az8QDCUc_JZInRg"},
{"content":{"body":"> <@ljharb:matrix.org> yes but the thing you extract isn’t always further destructured\n\nWith the `const Foo(x) = ...` and `const Foo{x} = ...` syntax, it is. `const Foo(x) = ...` is analogous to `const [x] = ...`, and `const Foo{x} = ...` is analogous to `const {x} = ...`. Extractors are only for those two cases, and certainly don't cover the whole of pattern matching.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$IkI_l9AO6dwM9Iu6wfOGo1mgmwb8Az8QDCUc_JZInRg?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yes but the thing you extract isn’t always further destructured</blockquote></mx-reply>With the <code>const Foo(x) = ...</code> and <code>const Foo{x} = ...</code> syntax, it is. <code>const Foo(x) = ...</code> is analogous to <code>const [x] = ...</code>, and <code>const Foo{x} = ...</code> is analogous to <code>const {x} = ...</code>. Extractors are only for those two cases, and certainly don't cover the whole of pattern matching.","m.relates_to":{"m.in_reply_to":{"event_id":"$IkI_l9AO6dwM9Iu6wfOGo1mgmwb8Az8QDCUc_JZInRg"}},"msgtype":"m.text"},"ts":1638260454080,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$3m3-HhzwBdRmJvGNGr4WUrDgateYppobv-1igy_JYNs"},
{"content":{"body":"With an extractor there is no analogue to `const x = ...`.","format":"org.matrix.custom.html","formatted_body":"With an extractor there is no analogue to <code>const x = ...</code>.","msgtype":"m.text"},"ts":1638260494038,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$z5izkJP4h6CFkncFsttWETWCfNN5ocjIVmauwEzHcKU"},
{"content":{"body":"(or at least, none that I've found a compelling syntax for, so far)","msgtype":"m.text"},"ts":1638260605928,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$omQazPEftE8AGF_bBW3Ku0bjCDpMf3cfOL_gabldagY"},
{"content":{"body":"Aside from the object destructuring pattern, the general principle behind an extractor is that it is the inverse of construction, i.e. `const x = Foo(a, b, c)` (multiple values in to one value out) vs `const Foo(a, b, c) = x` (one value in to multiple values out).","format":"org.matrix.custom.html","formatted_body":"Aside from the object destructuring pattern, the general principle behind an extractor is that it is the inverse of construction, i.e. <code>const x = Foo(a, b, c)</code> (multiple values in to one value out) vs <code>const Foo(a, b, c) = x</code> (one value in to multiple values out).","msgtype":"m.text"},"ts":1638260827101,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$58qyJLMZXwoioTQmfT0-fyq2CY8Wmf0iOiaSxZjMXsA"},
{"content":{"body":"TabAtkins (c.f. [this post](https://github.com/tc39/Reflector/issues/412#issuecomment-982785776)) mind if I take the doodle for the next incubator call off your hands? I'll post the agenda by EOD today","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> (c.f. <a href=\"https://github.com/tc39/Reflector/issues/412#issuecomment-982785776\">this post</a>) mind if I take the doodle for the next incubator call off your hands? I'll post the agenda by EOD today","msgtype":"m.text"},"ts":1638288721495,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$9pK13P0sSefs3zQuSjkYWblAD50J32YQwWposfyUWqg"},
{"content":{"body":"Oh sure, have fun","msgtype":"m.text"},"ts":1638288756063,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$uexgiHUPsShChL37mQ8v3bI9j5BVQp6deeL2smHEYzU"},
{"content":{"body":"alright y'all, [here's my roundup](https://hackmd.io/@mpcsh/HJ9bJk4tK) of all our current open questions. let's use this as an agenda for an incubator call. there's a lot here - I think we'll need at least 2 hours. do folks have a preference for one long session with an intermission vs two (or more) calendar invites? cc ljharb TabAtkins yulia danielrosenwasser Jack Works rkirsling","format":"org.matrix.custom.html","formatted_body":"alright y'all, <a href=\"https://hackmd.io/@mpcsh/HJ9bJk4tK\">here's my roundup</a> of all our current open questions. let's use this as an agenda for an incubator call. there's a lot here - I think we'll need at least 2 hours. do folks have a preference for one long session with an intermission vs two (or more) calendar invites? cc <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a>","msgtype":"m.text"},"ts":1638293612062,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$m-iHsTSj3dPVzlLCpkm7s3tYbn-vXyfqaQ5qdg5T7oQ"}
]