[
{"content":{"body":"TabAtkins: gist review:\n - `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?\n - for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?\n - i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous\n - for bindings in an `if` does it also apply to an `else if` and every other else in the chain?\n\ndoes the gist already incorporate all the discussion at the bottom of it?\n\n - there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: gist review:</p>\n<ul>\n<li><code>plain-or-dotted-ident</code> presumably includes brackets and optional things and whatever, the same stuff a decorator allows after <code>@</code>?</li>\n<li>for <code>&lt;plain-or-dotted-ident&gt;(&lt;matcher-list&gt;)</code>, what happens if it's a function that does not have a Symbol.matcher property?</li>\n<li>i really like the desugaring example for <code>is</code>, but that falls apart with the bindings bit, and that makes me nervous</li>\n<li>for bindings in an <code>if</code> does it also apply to an <code>else if</code> and every other else in the chain?</li>\n</ul>\n<p>does the gist already incorporate all the discussion at the bottom of it?</p>\n<ul>\n<li>there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as <code>with</code>. if someone doesn't want the bindings they just don't have to reference them.</li>\n</ul>\n","msgtype":"m.text"},"ts":1692223427722,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w-tQW4Z85KKaVkgMqxp_iGf5RbA8ccGbTBq3kT-HRj8"},
{"content":{"body":" * TabAtkins: gist review:\n\n- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?\n- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?\n- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous\n- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?\n\ndoes the gist already incorporate all the discussion at the bottom of it?\n\n- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.\n\nI like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-(","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: gist review:</p>\n<ul>\n<li><code>plain-or-dotted-ident</code> presumably includes brackets and optional things and whatever, the same stuff a decorator allows after <code>@</code>?</li>\n<li>for <code>&lt;plain-or-dotted-ident&gt;(&lt;matcher-list&gt;)</code>, what happens if it's a function that does not have a Symbol.matcher property?</li>\n<li>i really like the desugaring example for <code>is</code>, but that falls apart with the bindings bit, and that makes me nervous</li>\n<li>for bindings in an <code>if</code> does it also apply to an <code>else if</code> and every other else in the chain?</li>\n</ul>\n<p>does the gist already incorporate all the discussion at the bottom of it?</p>\n<ul>\n<li>there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as <code>with</code>. if someone doesn't want the bindings they just don't have to reference them.</li>\n</ul>\n<p>I like the name <code>Symbol.matcher</code> and since nobody knows about or uses <code>Symbol.match</code> i think it'd be a shame to pick a worse name for our symbol :-(</p>\n","m.new_content":{"body":"TabAtkins: gist review:\n\n- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?\n- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?\n- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous\n- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?\n\ndoes the gist already incorporate all the discussion at the bottom of it?\n\n- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.\n\nI like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-(","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: gist review:</p>\n<ul>\n<li><code>plain-or-dotted-ident</code> presumably includes brackets and optional things and whatever, the same stuff a decorator allows after <code>@</code>?</li>\n<li>for <code>&lt;plain-or-dotted-ident&gt;(&lt;matcher-list&gt;)</code>, what happens if it's a function that does not have a Symbol.matcher property?</li>\n<li>i really like the desugaring example for <code>is</code>, but that falls apart with the bindings bit, and that makes me nervous</li>\n<li>for bindings in an <code>if</code> does it also apply to an <code>else if</code> and every other else in the chain?</li>\n</ul>\n<p>does the gist already incorporate all the discussion at the bottom of it?</p>\n<ul>\n<li>there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as <code>with</code>. if someone doesn't want the bindings they just don't have to reference them.</li>\n</ul>\n<p>I like the name <code>Symbol.matcher</code> and since nobody knows about or uses <code>Symbol.match</code> i think it'd be a shame to pick a worse name for our symbol :-(</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$w-tQW4Z85KKaVkgMqxp_iGf5RbA8ccGbTBq3kT-HRj8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692223461061,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6U8_zdw7GDYBXV54c_JNE8EefIb38ZrPHNNvLRH6Xnw"},
{"content":{"body":" * TabAtkins: gist review:\n\n- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?\n- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?\n- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous\n- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?\n\ndoes the gist already incorporate all the discussion at the bottom of it?\n\n- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.\n\nI like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-( I very much do *not* want :\"unapply\" and think that would be a very confusing choice.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: gist review:</p>\n<ul>\n<li><code>plain-or-dotted-ident</code> presumably includes brackets and optional things and whatever, the same stuff a decorator allows after <code>@</code>?</li>\n<li>for <code>&lt;plain-or-dotted-ident&gt;(&lt;matcher-list&gt;)</code>, what happens if it's a function that does not have a Symbol.matcher property?</li>\n<li>i really like the desugaring example for <code>is</code>, but that falls apart with the bindings bit, and that makes me nervous</li>\n<li>for bindings in an <code>if</code> does it also apply to an <code>else if</code> and every other else in the chain?</li>\n</ul>\n<p>does the gist already incorporate all the discussion at the bottom of it?</p>\n<ul>\n<li>there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as <code>with</code>. if someone doesn't want the bindings they just don't have to reference them.</li>\n</ul>\n<p>I like the name <code>Symbol.matcher</code> and since nobody knows about or uses <code>Symbol.match</code> i think it'd be a shame to pick a worse name for our symbol :-( I very much do <em>not</em> want :\"unapply\" and think that would be a very confusing choice.</p>\n","m.new_content":{"body":"TabAtkins: gist review:\n\n- `plain-or-dotted-ident` presumably includes brackets and optional things and whatever, the same stuff a decorator allows after `@`?\n- for `<plain-or-dotted-ident>(<matcher-list>)`, what happens if it's a function that does not have a Symbol.matcher property?\n- i really like the desugaring example for `is`, but that falls apart with the bindings bit, and that makes me nervous\n- for bindings in an `if` does it also apply to an `else if` and every other else in the chain?\n\ndoes the gist already incorporate all the discussion at the bottom of it?\n\n- there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as `with`. if someone doesn't want the bindings they just don't have to reference them.\n\nI like the name `Symbol.matcher` and since nobody knows about or uses `Symbol.match` i think it'd be a shame to pick a worse name for our symbol :-( I very much do *not* want :\"unapply\" and think that would be a very confusing choice.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: gist review:</p>\n<ul>\n<li><code>plain-or-dotted-ident</code> presumably includes brackets and optional things and whatever, the same stuff a decorator allows after <code>@</code>?</li>\n<li>for <code>&lt;plain-or-dotted-ident&gt;(&lt;matcher-list&gt;)</code>, what happens if it's a function that does not have a Symbol.matcher property?</li>\n<li>i really like the desugaring example for <code>is</code>, but that falls apart with the bindings bit, and that makes me nervous</li>\n<li>for bindings in an <code>if</code> does it also apply to an <code>else if</code> and every other else in the chain?</li>\n</ul>\n<p>does the gist already incorporate all the discussion at the bottom of it?</p>\n<ul>\n<li>there should not be an optin for regex named group bindings, since they're statically mentioned it's not the same as <code>with</code>. if someone doesn't want the bindings they just don't have to reference them.</li>\n</ul>\n<p>I like the name <code>Symbol.matcher</code> and since nobody knows about or uses <code>Symbol.match</code> i think it'd be a shame to pick a worse name for our symbol :-( I very much do <em>not</em> want :\"unapply\" and think that would be a very confusing choice.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$w-tQW4Z85KKaVkgMqxp_iGf5RbA8ccGbTBq3kT-HRj8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692223480242,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$U9So-oAYXEKMQ1c-Gg2qQdw_mGdsSBKEvUCJz4A2J9U"}
]