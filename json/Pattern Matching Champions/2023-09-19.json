[
{"content":{"body":"Agreed on disallowing `using` declarations.","format":"org.matrix.custom.html","formatted_body":"Agreed on disallowing <code>using</code> declarations.","msgtype":"m.text"},"ts":1695083488629,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$gApVWhJ7Skw0KQrgtnrRpFXoaZrLmA1a80ZYJVMDMQ4"},
{"content":{"body":"Okay, so for the rest of the room, I believe the first draft of the new proposal text is complete, at <https://github.com/tc39/proposal-pattern-matching/pull/293>. Feel free to review.","format":"org.matrix.custom.html","formatted_body":"Okay, so for the rest of the room, I believe the first draft of the new proposal text is complete, at <a href=\"https://github.com/tc39/proposal-pattern-matching/pull/293\">https://github.com/tc39/proposal-pattern-matching/pull/293</a>. Feel free to review.","msgtype":"m.text"},"ts":1695083543688,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$dw0wbu7sdBLGgNm8F0s-VAzSfrbt1c14ggwKe1-xEtw"},
{"content":{"body":"I *believe* I've accurately captured champion-group consensus on all points.","format":"org.matrix.custom.html","formatted_body":"I <em>believe</em> I've accurately captured champion-group consensus on all points.","msgtype":"m.text"},"ts":1695083560892,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$pLaq50fvMJbizZp_tZrQB9MH_rMJ5G5Ura6laRBlxWI"},
{"content":{"body":"so `when if` feels like a big step backwards","format":"org.matrix.custom.html","formatted_body":"so <code>when if</code> feels like a big step backwards","msgtype":"m.text"},"ts":1695112633702,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$vKAfzpNHZabdf4AZSxa7hUMBckqYfpHlv1Tvs1G-uao"},
{"content":{"body":"I'm inferring that the rationale is to make it clear that an guard pattern is a pattern, but","msgtype":"m.text"},"ts":1695112669623,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$5pqDOuZMuTzqJqBtu4Htvtta954kFrPgv8zq3DPn8Ww"},
{"content":{"body":" * I'm inferring that the rationale is to make it clear that a guard pattern is a pattern, but","m.new_content":{"body":"I'm inferring that the rationale is to make it clear that a guard pattern is a pattern, but","msgtype":"m.text"},"m.relates_to":{"event_id":"$5pqDOuZMuTzqJqBtu4Htvtta954kFrPgv8zq3DPn8Ww","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695112672419,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$xzVrviPGnp8hLN23RCgn-nnmzgn35Y8x8yf-t5lve3c"},
{"content":{"body":"also I see in the notes that\n> Assuming binding semantics are well-established (looks like we're in agreement, see below), everyone's fine with using if() patterns and not doing separate if clauses in match().\n","format":"org.matrix.custom.html","formatted_body":"<p>also I see in the notes that</p>\n<blockquote>\n<p>Assuming binding semantics are well-established (looks like we're in agreement, see below), everyone's fine with using if() patterns and not doing separate if clauses in match().</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1695112708764,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$13urtd3ld5zI_aA2m0lpeuvn_4QUDzua7v4jk9auWzs"},
{"content":{"body":"the only reason I can see for us wanting to do this is for short-circuiting but like","msgtype":"m.text"},"ts":1695112778120,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$8ZLNC1S-6pEzR-7D3IpYfRiQ1xdUkfChEpyuyIpakhQ"},
{"content":{"body":" * the only reason I can see for us wanting to do this is for short-circuiting (somehow, in theory) but","m.new_content":{"body":"the only reason I can see for us wanting to do this is for short-circuiting (somehow, in theory) but","msgtype":"m.text"},"m.relates_to":{"event_id":"$8ZLNC1S-6pEzR-7D3IpYfRiQ1xdUkfChEpyuyIpakhQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695112836836,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$RcybpREUIeYpsHl0qe5gCeRFCyoDsO-Z56j7dD_5arg"},
{"content":{"body":"feel like that may indicate that we're getting carried away with combinators?","msgtype":"m.text"},"ts":1695112863665,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$XpupEPYZj26YAXLta8f4I41IErP1SByTBZ-LphyYRbU"},
{"content":{"body":"the gist comments suggest a desire to have it usable with `is` but that's actually super dangerous?","format":"org.matrix.custom.html","formatted_body":"the gist comments suggest a desire to have it usable with <code>is</code> but that's actually super dangerous?","msgtype":"m.text"},"ts":1695113428360,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$7aj_JG7osST9OkR3_k2S6T_JsinmxBLc0u1jRnqOZK8"},
{"content":{"body":"like having `if ()` be two totally different things only works if they have two very obviously separated contexts","format":"org.matrix.custom.html","formatted_body":"like having <code>if ()</code> be two totally different things only works if they have two very obviously separated contexts","msgtype":"m.text"},"ts":1695113456710,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$avjuqU3aoRrjnISsXb1Gt04T3dOtUFGPveEPnEe0evA"},
{"content":{"body":"which is facilitated by having `if` be a rigid clause in pattern matching, since an `if` statement is similarly rigid by virtue of being a statement","format":"org.matrix.custom.html","formatted_body":"which is facilitated by having <code>if</code> be a rigid clause in pattern matching, since an <code>if</code> statement is similarly rigid by virtue of being a statement","msgtype":"m.text"},"ts":1695113591927,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$LAJgd3cRUWzfUauuuFXSNbJJF46m9_2SdJjbtbMSZ40"},
{"content":{"body":"\"`if` patterns directly within `if` statement conditionals\" definitely feels block-worthy","format":"org.matrix.custom.html","formatted_body":"\"<code>if</code> patterns directly within <code>if</code> statement conditionals\" definitely feels block-worthy","msgtype":"m.text"},"ts":1695113938328,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$LfHFEAmRcfryR4v8ZoXofJ-PPQVEpsgTNUj7_bS2bfU"},
{"content":{"body":" * I usually lack the assertiveness to block things, but \"`if` patterns directly within `if` statement conditionals\" is simply too far.","format":"org.matrix.custom.html","formatted_body":" * I usually lack the assertiveness to block things, but \"<code>if</code> patterns directly within <code>if</code> statement conditionals\" is simply too far.","m.new_content":{"body":"I usually lack the assertiveness to block things, but \"`if` patterns directly within `if` statement conditionals\" is simply too far.","format":"org.matrix.custom.html","formatted_body":"I usually lack the assertiveness to block things, but \"<code>if</code> patterns directly within <code>if</code> statement conditionals\" is simply too far.","msgtype":"m.text"},"m.relates_to":{"event_id":"$LfHFEAmRcfryR4v8ZoXofJ-PPQVEpsgTNUj7_bS2bfU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695114191285,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$746-FTObmYCqr0C1M86hoMdKGuyFl6zh85jp1rJX87I"},
{"content":{"body":" * I usually lack the assertiveness to block things, but \"`if` patterns directly within `if` statement conditionals\" is simply going too far.","format":"org.matrix.custom.html","formatted_body":" * I usually lack the assertiveness to block things, but \"<code>if</code> patterns directly within <code>if</code> statement conditionals\" is simply going too far.","m.new_content":{"body":"I usually lack the assertiveness to block things, but \"`if` patterns directly within `if` statement conditionals\" is simply going too far.","format":"org.matrix.custom.html","formatted_body":"I usually lack the assertiveness to block things, but \"<code>if</code> patterns directly within <code>if</code> statement conditionals\" is simply going too far.","msgtype":"m.text"},"m.relates_to":{"event_id":"$LfHFEAmRcfryR4v8ZoXofJ-PPQVEpsgTNUj7_bS2bfU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695114214579,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$7t_esJEWKAdChXNq_YVJoPsAAsiqVD7EVFHstqyDZBI"},
{"content":{"body":"do we still need `when (pattern) if (expr)`? we now can use `when (pattern and if (expr))`","format":"org.matrix.custom.html","formatted_body":"do we still need <code>when (pattern) if (expr)</code>? we now can use <code>when (pattern and if (expr))</code>","msgtype":"m.text"},"ts":1695118992348,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jCcTEJwugsOHH-AE-ueYXz5EzUW28O5h4KOFQzL9Vg0"},
{"content":{"body":"rkirsling: I'm not sure I understand the concern. You don't *have* to do an if() pattern when you're using `is` unless you need to condition a branch immediately; otherwise just doing `x is <pattern> && <some test>` is fine","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a>: I'm not sure I understand the concern. You don't <em>have</em> to do an if() pattern when you're using <code>is</code> unless you need to condition a branch immediately; otherwise just doing <code>x is &lt;pattern&gt; &amp;&amp; &lt;some test&gt;</code> is fine","msgtype":"m.text"},"ts":1695134535992,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$yzwNA6IA3W07Vxc1fNTKci_teEweAdLWhKBU9vikH_Q"},
{"content":{"body":"And in general context-sensitivity is a bad thing that we try to avoid. Having `if()` patterns be usable in `match()` but not in `is` seems bad. ","format":"org.matrix.custom.html","formatted_body":"And in general context-sensitivity is a bad thing that we try to avoid. Having <code>if()</code> patterns be usable in <code>match()</code> but not in <code>is</code> seems bad.","msgtype":"m.text"},"ts":1695134581641,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$vXPmmt4HH4jq1uw-y4qFq5la2DLju2mkDS8MgwGuOow"},
{"content":{"body":"well I mean that was a very real-time series of thoughts","msgtype":"m.text"},"ts":1695134644292,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$bT5-HezNHBjdAC1BlcRZPSCtfF4mq-BQkonELnpMF9g"}
]