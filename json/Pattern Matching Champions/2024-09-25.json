[
{"content":{"body":"My preference was to drop it, I'm not sure where others stand","msgtype":"m.text"},"ts":1727225193609,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dEAM4S9XsLYOUvTUKh9bRm5JA5IOUVNjcuIDGvndl28"},
{"content":{"body":"aight, first draft is https://docs.google.com/presentation/d/1ckdNcRpzMB7oV91k98gNkXxVtwkzqIv0vALPffSaU44/edit?usp=sharing","m.mentions":{},"msgtype":"m.text"},"ts":1727226403374,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$HzpKw_oODx5A0UtuFFJtcXIEXvgaRJnnwf6RHR6wqG8"},
{"content":{"body":"i'm assuming \"no `when`\"","format":"org.matrix.custom.html","formatted_body":"i'm assuming \"no <code>when</code>\"","m.mentions":{},"msgtype":"m.text"},"ts":1727226410822,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$M7FhNYn4ggWPf3ZcxN-Z6OlVr5DPA9g1J-lN38P2gI0"},
{"content":{"body":"new slogan: \"no when, no how\"","m.mentions":{},"msgtype":"m.text"},"ts":1727226742989,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Pg_DZM8WODLgN8Kv3sJGOCoCNpEOw5vRPd1Gpy4VNvk"},
{"content":{"body":"my strong preference is to keep it","m.mentions":{},"msgtype":"m.text"},"ts":1727238313432,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RbDszasRFvHrH3Vwt3QspNZileFMM_DsaIP2ANZ71hE"},
{"content":{"body":"explicit > implicit","m.mentions":{},"msgtype":"m.text"},"ts":1727238324185,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K3nXa2IZW4At9wIRaZJfzbR5lLr9Wy9kD_OrQgDbx7Y"},
{"content":{"body":"but for stage 2 i'm content saying \"we'll decide to keep or drop the `when` prefix before stage 2.7\"","format":"org.matrix.custom.html","formatted_body":"but for stage 2 i'm content saying \"we'll decide to keep or drop the <code>when</code> prefix before stage 2.7\"","m.mentions":{},"msgtype":"m.text"},"ts":1727238348237,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pPTCt_kCqqZFl5ihEOBVd6IRW6IpOxeNasDpVyOtMHY"},
{"content":{"body":"slide 4, `undefined` literal - `null` is always a literal, no exceptions","format":"org.matrix.custom.html","formatted_body":"slide 4, <code>undefined</code> literal - <code>null</code> is always a literal, no exceptions","m.mentions":{},"msgtype":"m.text"},"ts":1727238393374,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SchPOUSGJXyWpc35BSeVogWRoGCDn-IbCv2yQwv3wN0"},
{"content":{"body":" * slide 4, `undefined` literal - `null` is always a literal, no exceptions, no matter what we decide","format":"org.matrix.custom.html","formatted_body":" * slide 4, <code>undefined</code> literal - <code>null</code> is always a literal, no exceptions, no matter what we decide","m.mentions":{},"m.new_content":{"body":"slide 4, `undefined` literal - `null` is always a literal, no exceptions, no matter what we decide","format":"org.matrix.custom.html","formatted_body":"slide 4, <code>undefined</code> literal - <code>null</code> is always a literal, no exceptions, no matter what we decide","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SchPOUSGJXyWpc35BSeVogWRoGCDn-IbCv2yQwv3wN0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1727238405048,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$3pSn0mTNbV_SiQc46C64ufTEZ2roal9GSUYqEQO-9gQ"},
{"content":{"body":"oh oof, we decided not to make undefined and the infinities special?","m.mentions":{},"msgtype":"m.text"},"ts":1727238427948,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$JknDwOFOy2KgLTFK0Q05wodqubwVKyVkNX-Ee404sOM"},
{"content":{"body":" * oh oof, we decided not to make undefined and the non-finites special?","m.mentions":{},"m.new_content":{"body":"oh oof, we decided not to make undefined and the non-finites special?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$JknDwOFOy2KgLTFK0Q05wodqubwVKyVkNX-Ee404sOM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1727238435816,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W659YpdNSdBZzrjFQJb-00YOtSgDuR16zecrGiBXV54"},
{"content":{"body":"when you say `ident`, let's say `Identifier` in backticks, to be explicit about the grammar production","format":"org.matrix.custom.html","formatted_body":"when you say <code>ident</code>, let's say <code>Identifier</code> in backticks, to be explicit about the grammar production","m.mentions":{},"msgtype":"m.text"},"ts":1727238459937,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vCBMbB5qV-UNPbTRAtHtbZDGKQ778ypJOxQBp3G_vMI"},
{"content":{"body":"for slide 6, falsiness implying \"no match\" is fine, and a *primitive* truthy value implying \"match\" is fine, but an object should be the `{ matched: boolean, value: unknown }` schema, yes?","format":"org.matrix.custom.html","formatted_body":"for slide 6, falsiness implying \"no match\" is fine, and a <em>primitive</em> truthy value implying \"match\" is fine, but an object should be the <code>{ matched: boolean, value: unknown }</code> schema, yes?","m.mentions":{},"msgtype":"m.text"},"ts":1727238528749,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7mL2oV0FtVu8hKf0eTRa823wLGC6ZM55aG97EUD3a0Y"},
{"content":{"body":"for slide 7, this is wrong - it needs to check for `Object(3)` - ie, boxed numbers - also, same for all primitive wrappers. `typeof` only detects primitives.","format":"org.matrix.custom.html","formatted_body":"for slide 7, this is wrong - it needs to check for <code>Object(3)</code> - ie, boxed numbers - also, same for all primitive wrappers. <code>typeof</code> only detects primitives.","m.mentions":{},"msgtype":"m.text"},"ts":1727238571239,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$x9ctIm4_taHpLjBFTQnwDpwvHqmLA-fWd3fM6zbI62M"},
{"content":{"body":"slides 14 and 15 should reference caching.","m.mentions":{},"msgtype":"m.text"},"ts":1727238639999,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ajTdipL5mp4k0JsFvkWCBsbtodE0Q2nC6-Ud6bZh7fo"},
{"content":{"body":"globally, `s/falsey/falsy`","format":"org.matrix.custom.html","formatted_body":"globally, <code>s/falsey/falsy</code>","m.mentions":{},"msgtype":"m.text"},"ts":1727238644508,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$45ZQg__U2apwRil8mCP5ut4shynzPm8ya-_4PDlwv5Y"},
{"content":{"body":" * slides 14 and 15 should reference caching, even though it's explained on slide 18","m.mentions":{},"m.new_content":{"body":"slides 14 and 15 should reference caching, even though it's explained on slide 18","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ajTdipL5mp4k0JsFvkWCBsbtodE0Q2nC6-Ud6bZh7fo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1727238692933,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YUJPakQ994pN29ZjNnQBMh6CIl6d07Rx_hRirCpNJxs"},
{"content":{"body":"i'd love more elaboration on slide 17 also","m.mentions":{},"msgtype":"m.text"},"ts":1727238753156,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aa-jOFeESPJqhZ27l6pJnUMg0JQZJrlKjdD3Rta-AfI"},
{"content":{"body":"overall, awesome, this is a great first draft :-)","m.mentions":{},"msgtype":"m.text"},"ts":1727238763135,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZTeHlhSgipS3jbeZ706RmhPEMuBAyhZNu7NQzXiLU6Y"},
{"content":{"body":"> <@tabatkins:matrix.org> i'm assuming \"no `when`\"\n\ncurrent spec is no when","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!XyZDxqjPFLRXDgUzhD:matrix.org/$M7FhNYn4ggWPf3ZcxN-Z6OlVr5DPA9g1J-lN38P2gI0\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>i'm assuming \"no <code>when</code>\"</blockquote></mx-reply>current spec is no when","m.relates_to":{"m.in_reply_to":{"event_id":"$M7FhNYn4ggWPf3ZcxN-Z6OlVr5DPA9g1J-lN38P2gI0"}},"msgtype":"m.text"},"ts":1727239452887,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$aQYmkvYr0hFuTIyByNUPEnD4t3pV2wNcU010YNcctqg"},
{"content":{"body":"üëç","msgtype":"m.text"},"ts":1727239474396,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$fUpmylYbfzX9anida54ARcyurc61z3CkmX2RvwFzPOw"},
{"content":{"body":"Examples in the readme are still all over, wasn't 100% sure","msgtype":"m.text"},"ts":1727239489683,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$abenOuMS5H4OtGQSB_SKjrLnqj-aStiWMnVuushtQg0"},
{"content":{"body":"I'll fix","msgtype":"m.text"},"ts":1727239492128,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$cl_E_uI094VSom_GYi13LDasRsqg44RrotwiB_8_F3g"}
]