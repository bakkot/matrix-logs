[
{"content":{"body":"https://github.com/tc39/proposal-async-context/pull/53/files","msgtype":"m.text"},"ts":1692725307771,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$21IU31-QnyLURk8eGtPiYyd4_pTBMGxDOcIXyaL-Qsk"},
{"content":{"body":"I just realized that making `HostCallJobCallback` not swap the snapshot makes it so we'd need to swap it in `CleanupFinalizationRegistry` to preserve the behavior in the current spec","format":"org.matrix.custom.html","formatted_body":"I just realized that making <code>HostCallJobCallback</code> not swap the snapshot makes it so we'd need to swap it in <code>CleanupFinalizationRegistry</code> to preserve the behavior in the current spec","msgtype":"m.text"},"ts":1692727262661,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$FTq7BPn9m6QeTrhqMliS8abuA8jR5pJbtcMH1hCm_0I"},
{"content":{"body":"and with Justin's suggestion in https://github.com/tc39/proposal-async-context/pull/41#pullrequestreview-1348745850 to store the snapshot in the PromiseCapability, we'd need to add a slot to `FinalizationRegistry` for the snapshot","format":"org.matrix.custom.html","formatted_body":"and with Justin's suggestion in https://github.com/tc39/proposal-async-context/pull/41#pullrequestreview-1348745850 to store the snapshot in the PromiseCapability, we'd need to add a slot to <code>FinalizationRegistry</code> for the snapshot","msgtype":"m.text"},"ts":1692727311685,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ZAhSyyLLYwcAItQEjfmxD-TqFYxOTzzNQcF3IG68v7M"},
{"content":{"body":"so maybe we should discuss if that is needed/expected, since it doesn't fall naturally out of how `HostCallJobCallback` works","format":"org.matrix.custom.html","formatted_body":"so maybe we should discuss if that is needed/expected, since it doesn't fall naturally out of how <code>HostCallJobCallback</code> works","msgtype":"m.text"},"ts":1692727339041,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$W2YvRU0m9Yxrg6GQqd_uI1_HxGlfgR-36aEqG6xov7w"},
{"content":{"body":" * so maybe we should discuss if that is needed/expected, since it wouldn't fall naturally out of how `HostCallJobCallback` works anymore","format":"org.matrix.custom.html","formatted_body":" * so maybe we should discuss if that is needed/expected, since it wouldn't fall naturally out of how <code>HostCallJobCallback</code> works anymore","m.new_content":{"body":"so maybe we should discuss if that is needed/expected, since it wouldn't fall naturally out of how `HostCallJobCallback` works anymore","format":"org.matrix.custom.html","formatted_body":"so maybe we should discuss if that is needed/expected, since it wouldn't fall naturally out of how <code>HostCallJobCallback</code> works anymore","msgtype":"m.text"},"m.relates_to":{"event_id":"$W2YvRU0m9Yxrg6GQqd_uI1_HxGlfgR-36aEqG6xov7w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692727350019,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$x7tEq5-3mzBz9MclggWP2G3JNHMRvLfd3J3r1wJFZVs"},
{"content":{"body":"Oh interesting, I hadn't realized that `FinalizationRegistry` is the only case of a TC39 \"event callback\". I would definitely expect the context of that callback to be the one that created the `FinalizationRegistry`","format":"org.matrix.custom.html","formatted_body":"Oh interesting, I hadn't realized that <code>FinalizationRegistry</code> is the only case of a TC39 \"event callback\". I would definitely expect the context of that callback to be the one that created the <code>FinalizationRegistry</code>","msgtype":"m.text"},"ts":1692737157684,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Hihp2hEdJ_hUngiWGt_O0cF-EIlm8n6wQKwarp-B63U"},
{"content":{"body":"yeah, that makes sense","msgtype":"m.text"},"ts":1692737531094,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$eI9UbJKgMNdp2uX6STEEGkSrfnuXxAQuckFtFTHWWaY"},
{"content":{"body":"arguably there is another context that would make sense here: the context at the time of the `finalizationRegistry.register` call","format":"org.matrix.custom.html","formatted_body":"arguably there is another context that would make sense here: the context at the time of the <code>finalizationRegistry.register</code> call","msgtype":"m.text"},"ts":1692739806976,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$1YFRQmlw_4k_T3IX4GNeBpQEDK7bVY2cdhaDQTje28o"},
{"content":{"body":"in which case the context would be stored on the FinalizationRegistry cell instead of the FinalizationRegistry instance. what would make the most sense ?","msgtype":"m.text"},"ts":1692739854226,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$L6SWIknX2lCr8gF-WRFNVFL1ukBCrTd1Pu1AaXQC03k"},
{"content":{"body":"I personally think that causing an AsyncContext's lifetime to depend on some value getting collected is a source of issues","msgtype":"m.text"},"ts":1692739957324,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$QCodRoqNwnDD5Ql3eiENYsS8kN4G0kxBlQ0uE8h06lM"},
{"content":{"body":"and if programs want to do that, they can create a snapshot and use it as FinalizationRegistry held value","msgtype":"m.text"},"ts":1692739987149,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$4cvoWJj4yIHI89DbscEj4dLoKeNG9G0GKvypq8LuUfw"}
]