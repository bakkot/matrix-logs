[
{"content":{"msgtype":"m.text","body":"Shu added a schedule constraint for AsyncContext since he's getting the background on that magical API that Justin found. It's pretty weird, it was implemented in https://chromium-review.googlesource.com/c/v8/v8/+/2005849 but I can't find any usages."},"ts":1674600386126,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hlcRH085uFaALeCFVnveNW0z5d8bbF1WHhjtTShJlTc"},
{"content":{"msgtype":"m.text","body":"It'd be nice to identify where this implementation falls over for thenables, and whether that's something to fix at the V8 level, or whether it's something for each custom thenable to do something-or-other (I don't know exactly what)"},"ts":1674600436357,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EL7bwlf_m-qoaqTAt8LCa8GVwTdmFvsMFsDYyHNUUYg"},
{"content":{"msgtype":"m.text","body":"It's also worth pointing out that it should be possible to workaround with thenables by using something like Node.js' `AsyncResource`. Not elegant but it gets the job done.","format":"org.matrix.custom.html","formatted_body":"It's also worth pointing out that it should be possible to workaround with thenables by using something like Node.js' <code>AsyncResource</code>. Not elegant but it gets the job done."},"ts":1674600517044,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$c3HfOyqguMs_-8X-Y8DTYQ8QQ52qcDqOeJc3xTbbv-M"},
{"content":{"msgtype":"m.text","body":"right, or as it's called in this proposal, `wrap`","format":"org.matrix.custom.html","formatted_body":"right, or as it's called in this proposal, <code>wrap</code>"},"ts":1674600817187,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4VNc9NGruxNEmRwFTE5vmj26yH8tfhc29mdi5sjDu2w"},
{"content":{"msgtype":"m.text","body":"so, the question in my mind is: is Justin's example something that V8 should fix, or should it just be fixed by saying, Working As Intended, use `wrap` if you want it to have the other behavior","format":"org.matrix.custom.html","formatted_body":"so, the question in my mind is: is Justin's example something that V8 should fix, or should it just be fixed by saying, Working As Intended, use <code>wrap</code> if you want it to have the other behavior"},"ts":1674600853116,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QYC-guKyj9bporobNcu0O2w2GWibsSB08RCmAJvi44E"},
{"content":{"msgtype":"m.text","body":"(this is concretely something we should get back to V8 on)"},"ts":1674600866698,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BcZAxyuyf9CHVut1ZyIgUfr7ufRUxsqR1jrMfdAwlqo"},
{"content":{"msgtype":"m.text","body":"Yoav’s work is also using this API, and I can’t imagine that Task Attribution is happy with the way micro tasks aren’t properly tracked"},"ts":1674602098796,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Ck-ENp33q5onq1kReKVwfUg41MQCD1OR48i74H6y-WY"}
]