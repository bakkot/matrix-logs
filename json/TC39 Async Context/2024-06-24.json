[
{"content":{"body":"while checking out https://github.com/tc39/proposal-async-context/pull/94, I noticed that the (current) `AsyncContext.Variable` semantics *also* has merge points","format":"org.matrix.custom.html","formatted_body":"while checking out https://github.com/tc39/proposal-async-context/pull/94, I noticed that the (current) <code>AsyncContext.Variable</code> semantics <em>also</em> has merge points","m.mentions":{},"msgtype":"m.text"},"ts":1719236110865,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$bZpKznPui3DZ9gQb644uiJqWZTZG9nFc4NMAEG4f_yI"},
{"content":{"body":"except you can only observe them from in `unhandledrejection`","format":"org.matrix.custom.html","formatted_body":"except you can only observe them from in <code>unhandledrejection</code>","m.mentions":{},"msgtype":"m.text"},"ts":1719236129805,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$YDbp-Vn7f5sjWCCucy0Z5uToOfvBwpTg6abFHtgX6Mw"},
{"content":{"body":" * except you can only observe them from the `unhandledrejection` event","format":"org.matrix.custom.html","formatted_body":" * except you can only observe them from the <code>unhandledrejection</code> event","m.mentions":{},"m.new_content":{"body":"except you can only observe them from the `unhandledrejection` event","format":"org.matrix.custom.html","formatted_body":"except you can only observe them from the <code>unhandledrejection</code> event","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$YDbp-Vn7f5sjWCCucy0Z5uToOfvBwpTg6abFHtgX6Mw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1719236136057,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$cBu_RWoN3UQyTk7lHMhW2x1y4nZc9pOikTPmX3Xp3iE"},
{"content":{"body":"Would you mind elaborating on it? Can a property on `PromiseRejectionEvent` liked mentioned at https://matrixlogs.bakkot.com/TC39_General/2024-06-21#L2-L5 address that?","format":"org.matrix.custom.html","formatted_body":"Would you mind elaborating on it? Can a property on <code>PromiseRejectionEvent</code> liked mentioned at https://matrixlogs.bakkot.com/TC39_General/2024-06-21#L2-L5 address that?","m.mentions":{},"msgtype":"m.text"},"ts":1719236659970,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$jvzn1TqkUUsV5cY_aqaHj_I-ef_SSl5uzFpvwS3-Z4g"},
{"content":{"body":"I think the background for littledan's comment there was that, when discussing events with Anne and other web platform folks in the Web Engines Hackfest, we agreed that the originating context should be exposed as a (maybe null) property on all events","format":"org.matrix.custom.html","formatted_body":"I think the background for <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>'s comment there was that, when discussing events with Anne and other web platform folks in the Web Engines Hackfest, we agreed that the originating context should be exposed as a (maybe null) property on all events","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1719236927135,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$k0sPEXQ2sM5m4vcSyHkUqmcY_PvwsgxHjQ2xFXRHuzo"},
{"content":{"body":"and for `ErrorEvent`, that would just be the regular property, but it would need special tracking across the abrupt completions to be able to get the context in which the exception was thrown","format":"org.matrix.custom.html","formatted_body":"and for <code>ErrorEvent</code>, that would just be the regular property, but it would need special tracking across the abrupt completions to be able to get the context in which the exception was thrown","m.mentions":{},"msgtype":"m.text"},"ts":1719236996135,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$zhZZiKdwzaCdfrtqPgbOep1cIbkNN5hghjU8DfbH7wE"},
{"content":{"body":"but I guess for `PromiseRejectionEvent`, that property could be an array instead","format":"org.matrix.custom.html","formatted_body":"but I guess for <code>PromiseRejectionEvent</code>, that property could be an array instead","m.mentions":{},"msgtype":"m.text"},"ts":1719237018131,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$G6P08vcCnI3plv-k-fyp60yLIlXTJpu6pyokD7SZfOk"},
{"content":{"body":"```js\nfunction createRejectionInContext(value) {\n    ctx.run(value, () => Promise.reject());\n}\n\nctx.run(\"main\", () => {\n    // don't await or do anything with the result\n    Promise.all([\n        createRejectionInContext(\"task-0\"),\n        createRejectionInContext(\"task-1\"),\n        createRejectionInContext(\"task-2\"),\n        createRejectionInContext(\"task-3\"),\n    ]);\n});\n\nwindow.onunhandledrejection = (evt) => {\n    evt.originatingContext.run(() => {\n        // Could be task-[0123]. Can't be main.\n        console.log(ctx.get());\n    })\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">function createRejectionInContext(value) {\n    ctx.run(value, () =&gt; Promise.reject());\n}\n\nctx.run(\"main\", () =&gt; {\n    // don't await or do anything with the result\n    Promise.all([\n        createRejectionInContext(\"task-0\"),\n        createRejectionInContext(\"task-1\"),\n        createRejectionInContext(\"task-2\"),\n        createRejectionInContext(\"task-3\"),\n    ]);\n});\n\nwindow.onunhandledrejection = (evt) =&gt; {\n    evt.originatingContext.run(() =&gt; {\n        // Could be task-[0123]. Can't be main.\n        console.log(ctx.get());\n    })\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1719237057900,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ZtAkb5SQnlt8hDqZtjSS278_SScLSTLfD1U17d7xO6o"},
{"content":{"body":"well, I guess in that example, with the current spec, it would always be `task-0`","format":"org.matrix.custom.html","formatted_body":"well, I guess in that example, with the current spec, it would always be <code>task-0</code>","m.mentions":{},"msgtype":"m.text"},"ts":1719237179913,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Gw_IMFuoX_ttHTnKKq9TIk1hixEsw2RjG8bOYfNQKRA"},
{"content":{"body":"but for `allSettled` you would definitely have a merge","format":"org.matrix.custom.html","formatted_body":"but for <code>allSettled</code> you would definitely have a merge","m.mentions":{},"msgtype":"m.text"},"ts":1719237245004,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$druNkc92_yt2lhduCJVghJPCwBqSDwo9lKCQpt_AEhY"},
{"content":{"body":"There should be only one rejection event for the promise of `Promise.all`, and the `evt.promise` is the promise of `Promise.all`","format":"org.matrix.custom.html","formatted_body":"There should be only one rejection event for the promise of <code>Promise.all</code>, and the <code>evt.promise</code> is the promise of <code>Promise.all</code>","m.mentions":{},"msgtype":"m.text"},"ts":1719237247541,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$koRx12CrV52yA9JYSYcBSSkAjaWTkoDzHJdvVUDz160"},
{"content":{"body":"yeah, you're right","m.mentions":{},"msgtype":"m.text"},"ts":1719237296857,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Jbjg0YRuMc3bpnQZYuL8EC5HMf1J4c8zre5Xbf3XbFc"},
{"content":{"body":"but for `Promise.allSettled` and `Promise.any` you would have a merge","format":"org.matrix.custom.html","formatted_body":"but for <code>Promise.allSettled</code> and <code>Promise.any</code> you would have a merge","m.mentions":{},"msgtype":"m.text"},"ts":1719237310465,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$WRuBYGIX0oJO2DahDJcc4-nA-_ykca3zt6WIsj3ko_8"},
{"content":{"body":"if you implemented the current spec as is, you'd get the context of the last promise to resolve","m.mentions":{},"msgtype":"m.text"},"ts":1719237518505,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$72JRLZJoR9sFRG0rl2UJfplaFoF64Namg_JY4k3tT-I"},
{"content":{"body":"even if that last promise succeeds","m.mentions":{},"msgtype":"m.text"},"ts":1719237534802,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$b2Tc5ZnZDvwKGdmn44QgszX9rZGWBJ8Nct7aMNrqwVI"},
{"content":{"body":" * even if that last promise fulfills","m.mentions":{},"m.new_content":{"body":"even if that last promise fulfills","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$b2Tc5ZnZDvwKGdmn44QgszX9rZGWBJ8Nct7aMNrqwVI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1719237538811,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$BgLZHbmAcpg9Aj9moMOBFcGpoEJSAtZlWrxkedyq7u8"},
{"content":{"body":" * even if that last promise is fulfilled","m.mentions":{},"m.new_content":{"body":"even if that last promise is fulfilled","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$b2Tc5ZnZDvwKGdmn44QgszX9rZGWBJ8Nct7aMNrqwVI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1719237544085,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$AsM5vR8QjS-kTsC5GKlLcXBJu0RALnDbXZY8ebV0TvQ"},
{"content":{"body":"that's for `Promise.any`","format":"org.matrix.custom.html","formatted_body":"that's for <code>Promise.any</code>","m.mentions":{},"msgtype":"m.text"},"ts":1719237736534,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$URRL7PUzEGcII4F0b_tIVgi2Z1O9sVmWZ1tIAEoOFkQ"},
{"content":{"body":"I didn't realize `Promise.allSettled` never rejected","format":"org.matrix.custom.html","formatted_body":"I didn't realize <code>Promise.allSettled</code> never rejected","m.mentions":{},"msgtype":"m.text"},"ts":1719237745572,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$6U-hVhKB78R-i6AO9j1QPVVdk75F-Ito_dQRolu2kVQ"},
{"content":{"body":"Yeah, `Promise.allSettled` never rejects","format":"org.matrix.custom.html","formatted_body":"Yeah, <code>Promise.allSettled</code> never rejects","m.mentions":{},"msgtype":"m.text"},"ts":1719237788352,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$HFBWgCZrWEZ1mN3ii7-as_EjwELKJzDUyAZ3uvihAZY"},
{"content":{"body":"> <@abotella:igalia.com> if you implemented the current spec as is, you'd get the context of the last promise to resolve\n\nhttps://tc39.es/ecma262/#sec-performpromiseany 27.2.4.3.1 step 4.n performs `then` on the iterated promises, how would it be different from a `Promise.prototype.then` in this case?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$72JRLZJoR9sFRG0rl2UJfplaFoF64Namg_JY4k3tT-I?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>if you implemented the current spec as is, you&#39;d get the context of the last promise to resolve</blockquote></mx-reply>https://tc39.es/ecma262/#sec-performpromiseany 27.2.4.3.1 step 4.n performs <code>then</code> on the iterated promises, how would it be different from a <code>Promise.prototype.then</code> in this case?","m.mentions":{"user_ids":["@abotella:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$72JRLZJoR9sFRG0rl2UJfplaFoF64Namg_JY4k3tT-I"}},"msgtype":"m.text"},"ts":1719237959187,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$Mvn0Yq-UtxS7ZXOAwL41B7DBCEfv-61o9ts_eyF4JMo"},
{"content":{"body":"...I might need to trace through the algorithm steps after all","m.mentions":{},"msgtype":"m.text"},"ts":1719238106281,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$t8TVDWcExRRk4_Ko-Un7VOdcZ8y7fMVfEyOH06bGc9U"},
{"content":{"body":"yeah, maybe there's no way to observe that after all, since you'd end up with the context in which `Promise.any` was called in any case","format":"org.matrix.custom.html","formatted_body":"yeah, maybe there's no way to observe that after all, since you'd end up with the context in which <code>Promise.any</code> was called in any case","m.mentions":{},"msgtype":"m.text"},"ts":1719238150429,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$d5W5M6jzq0QfjTRzPyXUalhW2tz1bFYAmdccIQTeJXw"},
{"content":{"body":"Yeah, if I understand it correctly, this is what the document described","m.mentions":{},"msgtype":"m.text"},"ts":1719238192607,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$4apKZ6L-AxHldLUNctyGYtjRaKMQPzbDLO15-F2VR5A"},
{"content":{"body":"...is it? Sorry, I haven't been doing any work on this proposal for the past few weeks (because of other obligations and a break I took), and enough things changed shortly before that that I'm not so sure where things stand right now","m.mentions":{},"msgtype":"m.text"},"ts":1719238343218,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$8g_dBK2cAv8QO9HFm8R2mElcFIVyvaTV97B08gnZYJM"},
{"content":{"body":"We didn't make any normative changes yet. It just wraps up the comparison of semantics.","m.mentions":{},"msgtype":"m.text"},"ts":1719238452135,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$eAmQFFclmYpshyrcEdLyAojUOXh5kAiEUekh_Mty8qw"}
]