[
{"content":{"body":"Steve Hicks: You previously mentioned that with a single property name on events, developers would have to look up which would be the source of that snapshot for each event. If most events with async sources don't propagate the context but some do, wouldn't developers also have to look up when the context is propagated?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">Steve Hicks</a>: You previously mentioned that with a single property name on events, developers would have to look up which would be the source of that snapshot for each event. If most events with async sources don't propagate the context but some do, wouldn't developers also have to look up when the context is propagated?","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"msgtype":"m.text"},"ts":1723056941660,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$_QfCfzCFVZ5zbf_jGrux6wVm42AZcspvlPcyS8jPKOI"},
{"content":{"body":"and I suspect that would be a lot harder to google","m.mentions":{},"msgtype":"m.text"},"ts":1723056948883,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$RWB1zTktg_0LrS8M8eutKUoF1iAdvynJlx--kjrTvR4"},
{"content":{"body":"> <@abotella:igalia.com> Steve Hicks: You previously mentioned that with a single property name on events, developers would have to look up which would be the source of that snapshot for each event. If most events with async sources don't propagate the context but some do, wouldn't developers also have to look up when the context is propagated?\n\nThat's a fair point.  I really do prefer the consistency, but ultimately I think getting the right default as much as possible is a more important trade-off.  I think in order to reason much further about this, we need two things: (1) a more concrete list of events and what context they will run in, and (2) a better understanding of whether the \"no context exists\" case falls back on the top-level (empty) context or else the registration-time context.  What's the best way to collaborate on #1?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$_QfCfzCFVZ5zbf_jGrux6wVm42AZcspvlPcyS8jPKOI?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br><a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">Steve Hicks</a>: You previously mentioned that with a single property name on events, developers would have to look up which would be the source of that snapshot for each event. If most events with async sources don't propagate the context but some do, wouldn't developers also have to look up when the context is propagated?</blockquote></mx-reply>That's a fair point.  I really do prefer the consistency, but ultimately I think getting the right default as much as possible is a more important trade-off.  I think in order to reason much further about this, we need two things: (1) a more concrete list of events and what context they will run in, and (2) a better understanding of whether the \"no context exists\" case falls back on the top-level (empty) context or else the registration-time context.  What's the best way to collaborate on #1?","m.mentions":{"user_ids":["@abotella:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_QfCfzCFVZ5zbf_jGrux6wVm42AZcspvlPcyS8jPKOI"}},"msgtype":"m.text"},"ts":1723060536445,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$i361GWbU4YglCtrSkJMWnTKo8_6U-uvs55HW63IJgpY"},
{"content":{"body":"last time I checked there were 250+ event names in the web platform (which is not the same as distinct events, since e.g. the `error` event on window is very different from the `error` event on say `WebSocket`)","format":"org.matrix.custom.html","formatted_body":"last time I checked there were 250+ event names in the web platform (which is not the same as distinct events, since e.g. the <code>error</code> event on window is very different from the <code>error</code> event on say <code>WebSocket</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1723060748269,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$eZDTvbvpUPYRjrvWvbkan1jyturtphJVv_lMNtgm-xI"},
{"content":{"body":"only those that have async sources matter here, but I don't think there's a good way to get the full list short of analyzing every single one","m.mentions":{},"msgtype":"m.text"},"ts":1723060800675,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$cpkvA-s05bHqxQsyx5TByPWSVsyQ-z1H7fSKKzlSmlY"},
{"content":{"body":" * only those that have async sources matter here, but I don't think there's a good way to get the full list of those, short of analyzing every single one","m.mentions":{},"m.new_content":{"body":"only those that have async sources matter here, but I don't think there's a good way to get the full list of those, short of analyzing every single one","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$cpkvA-s05bHqxQsyx5TByPWSVsyQ-z1H7fSKKzlSmlY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723060817630,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$PxbSJ3xvHfBxyKlHXeZ87A79_lbpxu1s293lloGM-so"},
{"content":{"body":"although maybe there's a way to analyze e.g. chromium code to get a partial list of events that are guaranteed to have async sources","m.mentions":{},"msgtype":"m.text"},"ts":1723060881902,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$sW3fbnhlt4m_gU8IxxiJeUQpXIKtWKMQeLBXjovww50"},
{"content":{"body":"I can ask my internal chrome contacts to see if they've got any pointers","m.mentions":{},"msgtype":"m.text"},"ts":1723060915646,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$gJ324DofyAT0dEHZyrbsu1N__VQQijYCiAUSpiECifw"},
{"content":{"body":"one thing nicolo-ribaudo pointed out is that we could try to reach out to JS educators, maybe giving some example APIs for libraries that would be using AsyncContext, and let developers tell us which events they'd use those libraries with","format":"org.matrix.custom.html","formatted_body":"one thing <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> pointed out is that we could try to reach out to JS educators, maybe giving some example APIs for libraries that would be using AsyncContext, and let developers tell us which events they'd use those libraries with","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1723060998820,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$AIl1RSLh9ErMsR02hNvgp1gBfcXz7HdQ6kFA7Y6bwok"},
{"content":{"body":"since we have a selection bias in that first-party developers won't be engaging because they will not be using AsyncContext directly most of the time","m.mentions":{},"msgtype":"m.text"},"ts":1723061026662,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$0xJfHjxTkCNhO9x70cYkFV9PV3lCXFmZmUItuxTeLns"},
{"content":{"body":"that's an interesting approach - I'm a little unsure of what it would mean to use an event with a library, though.","m.mentions":{},"msgtype":"m.text"},"ts":1723061096175,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$K_etYGQprqFVAnSDUj1rBLh--NHLQK9fBJyqekaM-Zk"}
]