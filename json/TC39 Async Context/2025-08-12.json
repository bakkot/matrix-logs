[
{"content":{"body":"The hope would be that it the active span is the one that actually closed the dialog that triggered the after() promise to resolve (and thus the callback to run).  But since it's a `Promise`, we lose that context and (per every version of the spec we've considered) end up in the registration context that called `then()`.","format":"org.matrix.custom.html","formatted_body":"The hope would be that it the active span is the one that actually closed the dialog that triggered the after() promise to resolve (and thus the callback to run).  But since it's a <code>Promise</code>, we lose that context and (per every version of the spec we've considered) end up in the registration context that called <code>then()</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1754960948579,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$NepRs5JG1CB74GWeFsTfiycAsjCCihfauQ91R7EMQVQ"},
{"content":{"body":"I'd be curious how the library interprets the two spans, one that calls the `dialog.after().then` and one that triggered the dialog close event, are there any relationship between them?","format":"org.matrix.custom.html","formatted_body":"I'd be curious how the library interprets the two spans, one that calls the <code>dialog.after().then</code> and one that triggered the dialog close event, are there any relationship between them?","m.mentions":{},"msgtype":"m.text"},"ts":1754992052360,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$eJikMcB2pU7Uqo-0FKLrJRlLuQTa08W-Z5vEDmKiWBU"},
{"content":{"body":"My impression is that this is similar to https://github.com/WICG/observable?tab=readme-ov-file#concerns when wrapping an event handler in a promise and this handler will always been called in a new microtask, instead of the execution context when the event is been dispatched. If a library would like to avoid the microtask in this case but keep the `.then` API, it can return a thenable on `after()`, which invokes the handlers immediately, in the event's context.","format":"org.matrix.custom.html","formatted_body":"My impression is that this is similar to https://github.com/WICG/observable?tab=readme-ov-file#concerns when wrapping an event handler in a promise and this handler will always been called in a new microtask, instead of the execution context when the event is been dispatched. If a library would like to avoid the microtask in this case but keep the <code>.then</code> API, it can return a thenable on <code>after()</code>, which invokes the handlers immediately, in the event's context.","m.mentions":{},"msgtype":"m.text"},"ts":1754992325679,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$rHtME4Y9LNIZRsCfU6Xqk5C6_JK6PryhCe3CJ1h1djU"}
]