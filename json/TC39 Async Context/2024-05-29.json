[
{"content":{"body":"> <@jridgewell:matrix.org> The current spec should preserve the context at `.then()` time, no? Are you expecting `someAsyncApi`’s rejection time?\n\nI'm not seeing a specific code example, but I can imagine a few possibilities: (1) `v.run(1, () => Promise.reject()).then(x => x)` doesn't actually invoke the callback, so would it be reasonable to _not_ change the rejection context?  (2) It's also possible that the `then` handler runs in the causal context instead of the registration context - so regardless of whether or not it runs, it might still not lose the context.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$e3PlLNNUvhtlplh16USgcIX0BpwrAkpmEKbR6S2bijE?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>The current spec should preserve the context at <code>.then()</code> time, no? Are you expecting <code>someAsyncApi</code>’s rejection time?</blockquote></mx-reply>I'm not seeing a specific code example, but I can imagine a few possibilities: (1) <code>v.run(1, () =&gt; Promise.reject()).then(x =&gt; x)</code> doesn't actually invoke the callback, so would it be reasonable to <em>not</em> change the rejection context?  (2) It's also possible that the <code>then</code> handler runs in the causal context instead of the registration context - so regardless of whether or not it runs, it might still not lose the context.","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$e3PlLNNUvhtlplh16USgcIX0BpwrAkpmEKbR6S2bijE"}},"msgtype":"m.text"},"ts":1717006957189,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$RVnZxy7_iekwT8o5aQzttmrj6v5PETX6wPto9XAvgME"}
]