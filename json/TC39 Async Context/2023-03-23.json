[
{"content":{"body":"I talked through what AsyncContext was with Jordan and he said he understands it better now than previously. I focused on how it was used; he said he found the pseudo-implementation confusing (sorry for the bad recommendation there!)\n\nWhen presenting, I recommend you spend a bunch of the time reviewing what the proposal is, somehow in terms a little different from last time, and what the use cases are, before going ahead. The open questions to answer during Stage 2 should probably go faster without dwelling too much.","format":"org.matrix.custom.html","formatted_body":"<p>I talked through what AsyncContext was with Jordan and he said he understands it better now than previously. I focused on how it was used; he said he found the pseudo-implementation confusing (sorry for the bad recommendation there!)</p>\n<p>When presenting, I recommend you spend a bunch of the time reviewing what the proposal is, somehow in terms a little different from last time, and what the use cases are, before going ahead. The open questions to answer during Stage 2 should probably go faster without dwelling too much.</p>","msgtype":"m.text"},"ts":1679542208017,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Y3LVg9v7v9p8IY44Nwi_JQSs7CXzioIOv8rROp3Ef5c"},
{"content":{"body":"Maybe we could have a break in the middle to go through the queue and answer questions about what the proposal is and why we want it, before going on","msgtype":"m.text"},"ts":1679542263386,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ee_sNuRvrlOJcC7cq3rwLsvUtbLaMiTjbXQ4DNP9m6c"},
{"content":{"body":"I think this lack of understanding all of the basics is a common pattern in proposals and doesn’t really reflect on the quality of your first presentation, or on Jordan. I heard similar lack of understanding of the motivation for a couple other proposals whose motivation had been extensively discussed.","msgtype":"m.text"},"ts":1679542465179,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DU7VEMILQysxDbNQ5m6z13vS7_lbGgfMUwdmDV5UHSY"},
{"content":{"body":"Chengzhong Wu: I added you as an editor of the slide deck, if you want to add some slides on OTEL","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a>: I added you as an editor of the slide deck, if you want to add some slides on OTEL","msgtype":"m.text"},"ts":1679548919317,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$msquYY3zonDsmjfYz34AfuOkSCTJ9j4HORgU1Q5YGIE"},
{"content":{"body":"You can use https://carbon.now.sh/aXSZjJ58QreRZMzMLEfP to generate code images (use 17 lines of code to get optimal size for slides)","msgtype":"m.text"},"ts":1679549001899,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$iQnvs1ABy1H6OsYYpvTm0hKzieR3BAYO4yoD57gnXkI"},
{"content":{"body":"I can explain a fair bit of usage and usecases between slides 2 and 3","msgtype":"m.text"},"ts":1679549058867,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$oqcAn6ofhiScxP3IepBmG3603vJfJanXlIb-rf8fseY"},
{"content":{"body":"I think having a before and after might be helpful. Eg, normal use code that might be written, and how the code has to change  (or rather doesn’t have to change) if we add OTEL","msgtype":"m.text"},"ts":1679549485589,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$rZ-0R0zH4uC2qdEom5S-2hhC8iB1AJIdJzkGendfVzw"},
{"content":{"body":"A bit like the logs example I used in the last deck, user code doesn’t need to be written with telemetry in mind, it just gets added seamlessly","msgtype":"m.text"},"ts":1679549531389,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$LY_tHY1IBfskcxZUhi2nvf46xHZKUCyKIO7kzFR8sCg"},
{"content":{"body":"Thanks, I'll add the slides on OTEL","msgtype":"m.text"},"ts":1679551232098,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$smZCUjT6D7Ms7klolArTXUl7qjY2H3mAahXe9AviY0M"},
{"content":{"body":"Note, code images aren’t accessible by themselves but you can fix this by putting the code in the speakers notes","msgtype":"m.text"},"ts":1679555355004,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nzHU5nn5Gv4wOIaGp8nvUU_iPmtr2XaqJK3xQgp52mg"},
{"content":{"body":"I wonder if the presentation should mention this layering question (about whether it should be a web API) and our plan to investigate it (by trying out implementing it in Chrome)","msgtype":"m.text"},"ts":1679585513197,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ljmA58TdMLv6yJ2-7ihx0kTCm5T8LfZeAZ7L8q-Hwf4"},
{"content":{"body":"Chrome has put in a lot of time to articulate that concern, so we should probably speak to it somehow","msgtype":"m.text"},"ts":1679585535277,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dGiiNFjMIrHxu0Rd5FM36H45oFH0wvgJNdvIESVPGAQ"},
{"content":{"body":"(I am happy to explain this part if people want)","msgtype":"m.text"},"ts":1679585546391,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fcRpDzePr5Gk2ZF19FH-7xxUmKIPKrQ533OQEebmh4s"},
{"content":{"body":"whether AsyncContext should be a web API ≠ whether Chrome should implement it as a web API","msgtype":"m.text"},"ts":1679586979526,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$F64zVdHEzkXKOTMzzfUUS7CwVotUQUA37elw6x8YyGk"},
{"content":{"body":"but yeah, it might be good to discuss that as well","msgtype":"m.text"},"ts":1679587004606,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$69pvt6ob3_PfNXNSPV4Tz75EZ_tnAQ7wM6iq99MuwUE"},
{"content":{"body":" * whether AsyncContext should be a web API ≠ whether Chrome (or browsers in general) should implement it as a web API","m.new_content":{"body":"whether AsyncContext should be a web API ≠ whether Chrome (or browsers in general) should implement it as a web API","msgtype":"m.text"},"m.relates_to":{"event_id":"$F64zVdHEzkXKOTMzzfUUS7CwVotUQUA37elw6x8YyGk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679587110931,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$fEv6UjxWu8UYgh9XoyFb1eyC4Y3UahP3_Z7mBFsRdbY"},
{"content":{"body":"> <@abotella:igalia.com> whether AsyncContext should be a web API ≠ whether Chrome (or browsers in general) should implement it as a web API\n\nYes, I think this is a good point to make in the presentation as well","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24F64zVdHEzkXKOTMzzfUUS7CwVotUQUA37elw6x8YyGk\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>whether AsyncContext should be a web API ≠ whether Chrome (or browsers in general) should implement it as a web API</blockquote></mx-reply>Yes, I think this is a good point to make in the presentation as well","m.relates_to":{"m.in_reply_to":{"event_id":"$F64zVdHEzkXKOTMzzfUUS7CwVotUQUA37elw6x8YyGk"}},"msgtype":"m.text"},"ts":1679587203090,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xmcGSZ2GmSevn6WNymaRzpgdApfh_dqEi9cp_yMX7Jg"},
{"content":{"body":"But I believe Yoav if he says it is easier for him to implement and expose it as a web API","msgtype":"m.text"},"ts":1679587225860,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vmoQBvxY4T3sBc7grDi0oWdj8VT2_-vyle8hVmqL-M0"},
{"content":{"body":"Slides updated, and I added the code as speaker notes","msgtype":"m.text"},"ts":1679587236606,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$H6cILAhj9lDKxxxXLlL3nUmfaWz_afGI1t4T9BNiawo"},
{"content":{"body":"* But I believe Yoav if he says it is easier *for him* to implement and expose it as a web API","format":"org.matrix.custom.html","formatted_body":"* But I believe Yoav if he says it is easier <em>for him</em> to implement and expose it as a web API","m.new_content":{"body":"But I believe Yoav if he says it is easier *for him* to implement and expose it as a web API","format":"org.matrix.custom.html","formatted_body":"But I believe Yoav if he says it is easier <em>for him</em> to implement and expose it as a web API","msgtype":"m.text"},"m.relates_to":{"event_id":"$vmoQBvxY4T3sBc7grDi0oWdj8VT2_-vyle8hVmqL-M0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679587259903,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qW94NyTkmduTiK2GidzdnOinGk4DlVQCe7f2SJ3Avw4"},
{"content":{"body":"> <@littledan:matrix.org> I wonder if the presentation should mention this layering question (about whether it should be a web API) and our plan to investigate it (by trying out implementing it in Chrome)\n\nI'm going to mention this in my foreword","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$ljmA58TdMLv6yJ2-7ihx0kTCm5T8LfZeAZ7L8q-Hwf4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I wonder if the presentation should mention this layering question (about whether it should be a web API) and our plan to investigate it (by trying out implementing it in Chrome)</blockquote></mx-reply>I'm going to mention this in my foreword","m.relates_to":{"m.in_reply_to":{"event_id":"$ljmA58TdMLv6yJ2-7ihx0kTCm5T8LfZeAZ7L8q-Hwf4"}},"msgtype":"m.text"},"ts":1679587297601,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3j_A0DcgqKc1gwO7hNIJv23AND85tuRmPTPt-2-2dmw"},
{"content":{"body":"I for one would prefer seeing this in the language itself","msgtype":"m.text"},"ts":1679589787529,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$yTdi9-G7iAkZMkxevxZbI2OdC_YdyO6XUhe_pyOodyM"},
{"content":{"body":"While I think I'd prefer language level also, I'm sympathetic to the web API approach and it's likely easier for us to implement that way anyway. Specifically, even if it were in the language we'd want v8 to treat it largely as an embedder API anyway to make it easier for us to integrate with other embedder use cases ","msgtype":"m.text"},"ts":1679589997970,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$yALFv0IR6HYx-bOzyD2RrV1H4zQNBPrjPOj_ozTxCwA"},
{"content":{"body":"Could you be more specific about those other embedder use cases?","msgtype":"m.text"},"ts":1679590192537,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$xgtQV7FtdTWbDmqlo-sb9MArtmYLuT2HUz-Ch8ojZNI"},
{"content":{"body":"> <@mhofman:matrix.org> I for one would prefer seeing this in the language itself\n\nMaybe this is something you could articulate (with justification) in a queue item after the presentation?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$yTdi9-G7iAkZMkxevxZbI2OdC_YdyO6XUhe_pyOodyM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I for one would prefer seeing this in the language itself</blockquote></mx-reply>Maybe this is something you could articulate (with justification) in a queue item after the presentation?","m.relates_to":{"m.in_reply_to":{"event_id":"$yTdi9-G7iAkZMkxevxZbI2OdC_YdyO6XUhe_pyOodyM"}},"msgtype":"m.text"},"ts":1679590836893,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$MmteT7-2Oa7qx2u1bmY9yY9FV7U8gmr8fn8SkaYmZNo"},
{"content":{"body":"> <@jasnell:matrix.org> While I think I'd prefer language level also, I'm sympathetic to the web API approach and it's likely easier for us to implement that way anyway. Specifically, even if it were in the language we'd want v8 to treat it largely as an embedder API anyway to make it easier for us to integrate with other embedder use cases\n\nCould you elaborate on this point? It might feed into the design of the V8 API, to ensure it meets your use cases (if we go that way at all).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$yALFv0IR6HYx-bOzyD2RrV1H4zQNBPrjPOj_ozTxCwA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jasnell:matrix.org\">@jasnell:matrix.org</a><br>While I think I&#39;d prefer language level also, I&#39;m sympathetic to the web API approach and it&#39;s likely easier for us to implement that way anyway. Specifically, even if it were in the language we&#39;d want v8 to treat it largely as an embedder API anyway to make it easier for us to integrate with other embedder use cases </blockquote></mx-reply>Could you elaborate on this point? It might feed into the design of the V8 API, to ensure it meets your use cases (if we go that way at all).","m.relates_to":{"m.in_reply_to":{"event_id":"$yALFv0IR6HYx-bOzyD2RrV1H4zQNBPrjPOj_ozTxCwA"}},"msgtype":"m.text"},"ts":1679590882294,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$69Kv6tB6HJ3nmDf6TG7CI6NoKPU54p2Quh96Uvbv5IE"},
{"content":{"body":"I need to articulate it better, but I think what I'll need is to extend the current API to support capturing both the registering context AND the resolving context, mostly to support join type use case like `Promise.all`.","format":"org.matrix.custom.html","formatted_body":"I need to articulate it better, but I think what I'll need is to extend the current API to support capturing both the registering context AND the resolving context, mostly to support join type use case like <code>Promise.all</code>.","msgtype":"m.text"},"ts":1679591055755,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$30n7eMBUI5fd5lZNBV5Jrb8xzRLb0cxS2U7IG1mGkII"},
{"content":{"body":"> <@mhofman:matrix.org> I need to articulate it better, but I think what I'll need is to extend the current API to support capturing both the registering context AND the resolving context, mostly to support join type use case like `Promise.all`.\n\nhuh, this is a big request; I'm looking forward to you articulating it more.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$30n7eMBUI5fd5lZNBV5Jrb8xzRLb0cxS2U7IG1mGkII?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I need to articulate it better, but I think what I'll need is to extend the current API to support capturing both the registering context AND the resolving context, mostly to support join type use case like <code>Promise.all</code>.</blockquote></mx-reply>huh, this is a big request; I'm looking forward to you articulating it more.","m.relates_to":{"m.in_reply_to":{"event_id":"$30n7eMBUI5fd5lZNBV5Jrb8xzRLb0cxS2U7IG1mGkII"}},"msgtype":"m.text"},"ts":1679591419899,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qSBVR1vdVgyvNPXG1FrElsh4sunY20Xl3MEV-y53z6s"},
{"content":{"body":"I don't believe it's that big, we already need to capture the rejection context for unhandled rejections","msgtype":"m.text"},"ts":1679591495065,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$M4qr7UYWUFeV1oisy_6Q95rPXNJdfds8ic0px-bdPK8"},
{"content":{"body":"when a context is captured, how are we imagining it can be accessed later?","msgtype":"m.text"},"ts":1679591671435,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$Az40qwlNUFeu6GaDDoD4rRoMHeMrsLcukpuFMES4JBU"},
{"content":{"body":"maybe it's an `AsyncContext.wrap`-bound function that runs other functions in that bound context?","format":"org.matrix.custom.html","formatted_body":"maybe it's an <code>AsyncContext.wrap</code>-bound function that runs other functions in that bound context?","msgtype":"m.text"},"ts":1679591681611,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$UEdgMgJQaN0jlOoDApx0extdfonKDdajkEaCbxHK6eM"}
]