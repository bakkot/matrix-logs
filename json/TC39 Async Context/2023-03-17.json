[
{"content":{"body":"> <@littledan:matrix.org> How did the WebPerf WG meeting to, Chengzhong Wu ?\n\nas far as I can tell, the initial feedback is positive (slides of the talk: https://docs.google.com/presentation/d/1cmAUbNUsqkuO6gMjhPaEcVGHuCJFYluntw7AIPETGaI/edit?usp=sharing)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$cwqsicTAa-hChgC1GkGmML9yZFhjdaM6rN1EruaLdEM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>How did the WebPerf WG meeting to, <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> ?</blockquote></mx-reply>as far as I can tell, the initial feedback is positive (slides of the talk: https://docs.google.com/presentation/d/1cmAUbNUsqkuO6gMjhPaEcVGHuCJFYluntw7AIPETGaI/edit?usp=sharing)","m.relates_to":{"m.in_reply_to":{"event_id":"$cwqsicTAa-hChgC1GkGmML9yZFhjdaM6rN1EruaLdEM"}},"msgtype":"m.text"},"ts":1679021166083,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$lvJ_qA1aOzjCbidZXKJgFvmI-bTh5vPx6Yg_ZzE0Kfc"},
{"content":{"body":"Are there notes?","msgtype":"m.text"},"ts":1679022492421,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$sX5j_J3et-hs7cHk3t6eWkhrMdgVyGk0sU7DTWFRuLc"},
{"content":{"body":"It should be published shortly at https://w3c.github.io/web-performance/meetings/","msgtype":"m.text"},"ts":1679022574492,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$JLSrV0Kb_52GO5pjR0WZgbsyfPE9zU6sme44E5IsuqU"},
{"content":{"body":"Not published yet.","msgtype":"m.text"},"ts":1679022647381,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$D60tVOGQ1nBrWJpbIueejByqM9orqwJ7sgacOfiwC3o"},
{"content":{"body":"The use cases there are very interesting. Maybe it would be useful to link that deck from the readme","msgtype":"m.text"},"ts":1679022724046,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WBOk2epnI_J0_nmSwH6wOmpJ4zvC7Bv6ug7BIaDQlsA"},
{"content":{"body":"And possibly go into it at TC39 as well if there is skepticism raised ","format":"org.matrix.custom.html","formatted_body":"And possibly go into it at TC39 as well if there is skepticism raised","msgtype":"m.text"},"ts":1679022752195,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$uyp-TSfK21s9nra1iUal5VNatCsu4Bh_QVHSsN49yFM"},
{"content":{"body":"(Could be pasted on as bonus slides?)","msgtype":"m.text"},"ts":1679022801604,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_cNSO3K-VNUGa8yDdzFhwL1Yo7ciJzCBjt5Iaa8p1BA"},
{"content":{"body":"yeah, we can bring the use case slides up when needed.","msgtype":"m.text"},"ts":1679023475578,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$dTQk_yt9JUOVyP3yLkzZCT6tXRBdgIzpT7AH8cQ6GvE"},
{"content":{"body":"> <@littledan:matrix.org> So I'd suggest saying, \"asynchronous flow of control\", or especially better if we say something more concrete, e.g., \"Annotating logs with information related to a particular logically related series of operations, even with callbacks and promises\" (or, maybe there's a better way to put that, idk)\n\nAgreed. \"async stack\" sounds like we are preserving the exact call stacks but this is not accurate.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$2qwdwBVugmVtoynJKfDD5eN8Z3m5qPQnIgJ7MxU_WHY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>So I&#39;d suggest saying, &quot;asynchronous flow of control&quot;, or especially better if we say something more concrete, e.g., &quot;Annotating logs with information related to a particular logically related series of operations, even with callbacks and promises&quot; (or, maybe there&#39;s a better way to put that, idk)</blockquote></mx-reply>Agreed. &quot;async stack&quot; sounds like we are preserving the exact call stacks but this is not accurate.","m.relates_to":{"m.in_reply_to":{"event_id":"$2qwdwBVugmVtoynJKfDD5eN8Z3m5qPQnIgJ7MxU_WHY"}},"msgtype":"m.text"},"ts":1679023542760,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$sHX8rOhWHQgPrTujn4rPpTUGAdnwC9g20cVRMmaoPqI"},
{"content":{"body":"Rough minutes are at https://docs.google.com/document/d/1wO7mbGr6f3tDnEWAaMSVI0bMeEHIdcLbAKeOQe-Zh4U/edit#heading=h.1sx1vjpi65co","msgtype":"m.text"},"ts":1679041565522,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$IRGL3rHcDqRyjklrdHbbPf-V0_KPYZoPsA5zCGsg3nU"},
{"content":{"body":"The document is not public -- access requested","msgtype":"m.text"},"ts":1679041688050,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$6U62vVU8YssK46WHuOCHs7sqe_C_XKvUcUytbpe-OMw"},
{"content":{"body":"apologies! should be now","msgtype":"m.text"},"ts":1679041718462,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$2rX6T62QMX1d7PgwNlVI9FpQL65mL7MZ_ZgJQ7CWAjQ"},
{"content":{"body":"If I can try to summarize the feedback: RUM providers would be very interested in being able to keep track of operations that are a result of a certain AsyncContext","msgtype":"m.text"},"ts":1679042092268,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$tP0dQxZ7jc3_DdrSntbjyIWfAdAdXGkAtaks76vz2AQ"},
{"content":{"body":"e.g. \"This element timing entry is a result of a user click on element X\" is something they'd love to be able to surface to their customers","msgtype":"m.text"},"ts":1679042133479,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$aZFnf38TU_B900X2C2ZM9gMV9_3tx2Hhz4IWLiuQsrw"},
{"content":{"body":"It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers' code (which they prefer not to do)","msgtype":"m.text"},"ts":1679042172512,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM"},
{"content":{"body":"But maybe magicaly surfacing the AsyncContext data in PerfObserver entries can help them do that if they wrap addEventListener callbacks","msgtype":"m.text"},"ts":1679042306156,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$GCLd2nRwH1GS3V_7D0ycL9t_UvIAi9ivMxgOHv_e2ys"},
{"content":{"body":"> <@yoavweiss:matrix.org> It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers' code (which they prefer not to do)\n\nYeah, this can be another interesting topic that we can discuss about. Node.js provides experimental [`diagnostics_channel`](https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel) for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">@yoavweiss:matrix.org</a><br>It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers&#39; code (which they prefer not to do)</blockquote></mx-reply>Yeah, this can be another interesting topic that we can discuss about. Node.js provides experimental <a href=\"https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel\"><code>diagnostics_channel</code></a> for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","m.relates_to":{"m.in_reply_to":{"event_id":"$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM"}},"msgtype":"m.text"},"ts":1679043017667,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$9SkIfHr0-j_5K1F6_HCfTqUYH1lJoud5f5QP6ip8JJU"},
{"content":{"body":"I don't think async context is the exact only tool helping in this problem.","msgtype":"m.text"},"ts":1679043259326,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$LiSvYoW8rHmFu0XKGKXzYweWgySQHBFEvS97YoEjmFI"},
{"content":{"body":"> <@yoavweiss:matrix.org> It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers' code (which they prefer not to do)\n\n * Yeah, this can be another interesting topic that we can discuss about. Node.js provides [`diagnostics_channel`](https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel) for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">@yoavweiss:matrix.org</a><br>It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers' code (which they prefer not to do)</blockquote></mx-reply> * Yeah, this can be another interesting topic that we can discuss about. Node.js provides <a href=\"https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel\"><code>diagnostics_channel</code></a> for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","m.new_content":{"body":"Yeah, this can be another interesting topic that we can discuss about. Node.js provides [`diagnostics_channel`](https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel) for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","format":"org.matrix.custom.html","formatted_body":"Yeah, this can be another interesting topic that we can discuss about. Node.js provides <a href=\"https://nodejs.org/api/diagnostics_channel.html#diagnostics-channel\"><code>diagnostics_channel</code></a> for library providers to expose certain events, for example: https://github.com/nodejs/undici/blob/main/docs/api/DiagnosticsChannel.md.","msgtype":"m.text"},"m.relates_to":{"event_id":"$9SkIfHr0-j_5K1F6_HCfTqUYH1lJoud5f5QP6ip8JJU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679043400201,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$JsEJn_YuSLpMDQRcHvdhjUq6hah2QpWLd0XYY6o8-i8"},
{"content":{"body":"https://docs.google.com/document/d/16HstQ6yHWMhFHflrpnKTeH0FDGxpQ8fKWqbA1mos3Ag/edit#heading=h.9g3dvhcn9qro as I jotted down what I think a JS side impl may look like from my perspective ","msgtype":"m.text"},"ts":1679043655724,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$CcUmQ1OdRURIqUL1L0M-MMt0PXrGS20roYH3m6D6TR0"},
{"content":{"body":"(dunno much about the implementation complexity of actually doing that in V8)","msgtype":"m.text"},"ts":1679043669854,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$HKNsi4dT2fOwcHo5OB0b3Hx7cYQ-j7jGiaqgtEG6yC8"},
{"content":{"body":"Is `AsyncContext.wrap` only needed in userland JS with things like non-builtin promise libraries?","format":"org.matrix.custom.html","formatted_body":"Is <code>AsyncContext.wrap</code> only needed in userland JS with things like non-builtin promise libraries?","msgtype":"m.text"},"ts":1679053401548,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$RrdI1Z30ea_IOlmt1uuTbpS6zj2cW6hI6jYVvmFfq7k"},
{"content":{"body":"I was mostly thinking of it from an implementation perspective where you have to wrap when enqueuing promise jobs and other tasks","msgtype":"m.text"},"ts":1679053454441,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$eyZTCcSZen_7repa84TtHm0B8gx34dg3CD3Rfzdn4ZA"},
{"content":{"body":" * I was mostly thinking of it from an implementation perspective where you have to wrap when enqueuing promise jobs and other tasks, so I hadn't really thought about how it'd be used in userland","m.new_content":{"body":"I was mostly thinking of it from an implementation perspective where you have to wrap when enqueuing promise jobs and other tasks, so I hadn't really thought about how it'd be used in userland","msgtype":"m.text"},"m.relates_to":{"event_id":"$eyZTCcSZen_7repa84TtHm0B8gx34dg3CD3Rfzdn4ZA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679053500954,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$tzvP53pmAycVS7xfEQ9w6TEmzdtsYc648g0Ny4Dl36w"},
{"content":{"body":"but I guess it's only really useful at that same level of abstraction","msgtype":"m.text"},"ts":1679053511404,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$KazVbJbu0_kXuCcArwL4TJXeonZudEyb6_ZhrZfHCcQ"},
{"content":{"body":"Yoav Weiss: I think what you describe there matches what we're doing in workers. We do have cases where we gave to grab a strong reference the current frame (taskscope in your proposal) and enter it manually (for instance, when queuing unhandled rejection events, or setTimer/setInterval... We also use it for tracing internally). If we had to implement task attribution apis in the runtime I don't think that's too much of a problem tho I would need to see more of what's involved. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a>: I think what you describe there matches what we're doing in workers. We do have cases where we gave to grab a strong reference the current frame (taskscope in your proposal) and enter it manually (for instance, when queuing unhandled rejection events, or setTimer/setInterval... We also use it for tracing internally). If we had to implement task attribution apis in the runtime I don't think that's too much of a problem tho I would need to see more of what's involved. ","msgtype":"m.text"},"ts":1679054080675,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$erB3cP44Sgw7AqkK14l3ExLyqe6hUKxr3_Rww-d_gvo"},
{"content":{"body":"> <@abotella:igalia.com> and no matter how that gets implemented in V8, V8-based WinterCG runtimes could handle it the same way as Chromium\n\nI don't think this is the case, because Node.js at least needs to be able to host Chrome at the same time. So there's value in the \"multiplexing\" of different variables being at the V8 level, rather than the blink level. Is that right, James M Snell ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$qpNwmCHxeT6sZlngvUaDR4VX2bkm4-uZjUqh2YSYifc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>and no matter how that gets implemented in V8, V8-based WinterCG runtimes could handle it the same way as Chromium</blockquote></mx-reply>I don't think this is the case, because Node.js at least needs to be able to host Chrome at the same time. So there's value in the &quot;multiplexing&quot; of different variables being at the V8 level, rather than the blink level. Is that right, <a href=\"https://matrix.to/#/@jasnell:matrix.org\">James M Snell</a> ?","m.relates_to":{"m.in_reply_to":{"event_id":"$qpNwmCHxeT6sZlngvUaDR4VX2bkm4-uZjUqh2YSYifc"}},"msgtype":"m.text"},"ts":1679058098291,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$G2nxK6a0a4IOoVR7SlU2NuwT3krzJAC-iWtie3LT_d0"},
{"content":{"body":"oh, that's right, Electron","msgtype":"m.text"},"ts":1679058119732,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$o2Bz0jAh9V4I7NqfLb3IQsJN08oVu2a1vVa7ygzvnKw"},
{"content":{"body":"Yep that's exactly it. As long as embedders can capture a reference to the entire frame at a point in time when necessary. ","msgtype":"m.text"},"ts":1679058408825,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$fuLkEzyKiUtaPr2AZvvzVfB89a_ou7l3q6VC_Iq7GYI"},
{"content":{"body":"Having v8 manage it for us is best","msgtype":"m.text"},"ts":1679058434869,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$AbqBdx40chqH5FkoNYbVkVlXD5IoqwCaWh6FtKy3oZs"},
{"content":{"body":"> <@yoavweiss:matrix.org> It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers' code (which they prefer not to do)\n\nI'm also not certain how they collect their data. If it's anything like OTEL, then we should be pretty good.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">@yoavweiss:matrix.org</a><br>It was unclear from the conversation if the current API enables them to achieve that without over-instrumentation of their customers&#39; code (which they prefer not to do)</blockquote></mx-reply>I'm also not certain how they collect their data. If it's anything like OTEL, then we should be pretty good.","m.relates_to":{"m.in_reply_to":{"event_id":"$9aC0ORKU1vM3JXm4lEz37b3zB1EwHAm3KjpcBrWByjM"}},"msgtype":"m.text"},"ts":1679073972921,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$oXN5edM1D7Ek4W9uzbH8cgUnA7sNVuzDI2fvF8c7r50"},
{"content":{"body":"> <@abotella:igalia.com> Is `AsyncContext.wrap` only needed in userland JS with things like non-builtin promise libraries?\n\nIt's also useful when firing batches of handlers with a framework level event listener. Eg, I don't want to install a click listener on every element, I just want one at the root and it'll fire the handlers for the specific element that was clicked.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$RrdI1Z30ea_IOlmt1uuTbpS6zj2cW6hI6jYVvmFfq7k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>Is <code>AsyncContext.wrap</code> only needed in userland JS with things like non-builtin promise libraries?</blockquote></mx-reply>It's also useful when firing batches of handlers with a framework level event listener. Eg, I don't want to install a click listener on every element, I just want one at the root and it'll fire the handlers for the specific element that was clicked.","m.relates_to":{"m.in_reply_to":{"event_id":"$RrdI1Z30ea_IOlmt1uuTbpS6zj2cW6hI6jYVvmFfq7k"}},"msgtype":"m.text"},"ts":1679074086415,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SCN_n8JRPkvb2tToJ5ncg0iHPQfbTsLWpwPYtdd7tXk"},
{"content":{"body":"right, any time you have an API which takes a callback and the API logically \"schedules\" that callback, it might be a good idea to use .wrap()","msgtype":"m.text"},"ts":1679074150288,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TxxRUCDdWaw_fv7JgvzH-NAFH715G9bxusq7viYHOgo"},
{"content":{"body":"> <@littledan:matrix.org> So I'd suggest saying, \"asynchronous flow of control\", or especially better if we say something more concrete, e.g., \"Annotating logs with information related to a particular logically related series of operations, even with callbacks and promises\" (or, maybe there's a better way to put that, idk)\n\nI disagree with this. I think explaining this in terms of the async callstack is the perfect way, because people already have a understanding of how that propagates","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$2qwdwBVugmVtoynJKfDD5eN8Z3m5qPQnIgJ7MxU_WHY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>So I&#39;d suggest saying, &quot;asynchronous flow of control&quot;, or especially better if we say something more concrete, e.g., &quot;Annotating logs with information related to a particular logically related series of operations, even with callbacks and promises&quot; (or, maybe there&#39;s a better way to put that, idk)</blockquote></mx-reply>I disagree with this. I think explaining this in terms of the async callstack is the perfect way, because people already have a understanding of how that propagates","m.relates_to":{"m.in_reply_to":{"event_id":"$2qwdwBVugmVtoynJKfDD5eN8Z3m5qPQnIgJ7MxU_WHY"}},"msgtype":"m.text"},"ts":1679074449267,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$-qJtqFD7GGLC1MPvboV7e0_kcT34U9yYt_K0YXqtBWg"},
{"content":{"body":"I don't think the we imply that we're capturing the actual function calls anywhere","msgtype":"m.text"},"ts":1679074499678,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$RFBhW4uvHaxcR436TmASzMpXRehWj_8wrGKItcX-E98"},
{"content":{"body":"Particularly for cases like `await promiseFromAnotherContext`, is the context after that await the one from the promise? That would follow control flow, but describing it as the the callstack clears up that confusion","format":"org.matrix.custom.html","formatted_body":"Particularly for cases like <code>await promiseFromAnotherContext</code>, is the context after that await the one from the promise? That would follow control flow, but describing it as the the callstack clears up that confusion","msgtype":"m.text"},"ts":1679075048635,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$t6TE9IBo1R6ly_FWimOKVV-DpPSekQgrk3gk9sn58yw"},
{"content":{"body":"And, it's easy to explain why the context contains a certain value, just poke up the callstack in the dev tools","msgtype":"m.text"},"ts":1679075071187,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$I1q6nbpA9nAHMkEIF4qlTDHSYbwPT8VzY3SEPNH0mwE"}
]