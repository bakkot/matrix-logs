[
{"content":{"body":"I was updating my engine262 implementation, and I noticed that a side effect of https://github.com/tc39/proposal-async-context/pull/41 was that `FinalizationRegistry` callbacks don't propagate the context anymore","format":"org.matrix.custom.html","formatted_body":"I was updating my engine262 implementation, and I noticed that a side effect of https://github.com/tc39/proposal-async-context/pull/41 was that <code>FinalizationRegistry</code> callbacks don't propagate the context anymore","msgtype":"m.text"},"ts":1706181925159,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$wsofomDYXVjxfYslweX4mAr6TfH5oSqF6eEQzSBz9xE"},
{"content":{"body":"Because it doesn’t do a default HostMakeJobCallback anymore?","msgtype":"m.text"},"ts":1706183570817,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$y7OKmo-ZwzYeMtS8hjAd5xlMz-1SjR8BUpMto2lJvww"},
{"content":{"body":"Shouldn’t this be capturing the context at register anyways?","msgtype":"m.text"},"ts":1706183610923,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3gBXvNGSeRyaP5URms1vM3a_YjQ2lkdmCbR3nksiu98"},
{"content":{"body":"we made it so `HostCallJobCallback` doesn't set the snapshot, instead leaving that to `NewPromiseReactionJob` and `NewPromiseResolveThenableJob`, which are of course not called on FinalizationRegistry callbacks","format":"org.matrix.custom.html","formatted_body":"we made it so <code>HostCallJobCallback</code> doesn't set the snapshot, instead leaving that to <code>NewPromiseReactionJob</code> and <code>NewPromiseResolveThenableJob</code>, which are of course not called on FinalizationRegistry callbacks","msgtype":"m.text"},"ts":1706183992816,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$mNN-H-8TZQEC3pwOffY9PLJf-N3-RPTMFidZZ-yKgEw"},
{"content":{"body":"I always expected the finalization registry callback to capture the time the corresponding registry entry was added.","msgtype":"m.text"},"ts":1706194770269,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HyJKx-yHkACC2zfEAxXGsQKP5t14BEUm-ri8MoeTT8w"},
{"content":{"body":"Afaik this and atomics are the only 2 APIs with custom scheduling logic, and atomics ends up using a promise","msgtype":"m.text"},"ts":1706194916585,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$YKoZ4wlFbwaE3dmAdW3i9ItmOiBXqDcpghwtM9uW-NY"},
{"content":{"body":"> <@mhofman:matrix.org> I always expected the finalization registry callback to capture the time the corresponding registry entry was added.\n\nagreed, but I didn't realize this was an issue in the PR, and then I only checked it after Justin merged it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$HyJKx-yHkACC2zfEAxXGsQKP5t14BEUm-ri8MoeTT8w?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I always expected the finalization registry callback to capture the time the corresponding registry entry was added.</blockquote></mx-reply>agreed, but I didn't realize this was an issue in the PR, and then I only checked it after Justin merged it","m.relates_to":{"m.in_reply_to":{"event_id":"$HyJKx-yHkACC2zfEAxXGsQKP5t14BEUm-ri8MoeTT8w"}},"msgtype":"m.text"},"ts":1706195140996,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$e913iZAqbtWFejJvftwDvM6sK-Wo-Ft8D-6HZxZ9vg4"},
{"content":{"body":"OK, sounds like we all agree on the bug fix, and there isn't any controversy. Does this need an engine262 change, or also a spec change?","m.mentions":{},"msgtype":"m.text"},"ts":1706201526583,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nAPMu-A5ZvsAC4TDlDD5vL_zRbRCMsZbrBcmSboVJpQ"},
{"content":{"body":"Sounds like it needs a spec change to capture and restore the context for finalization registry jobs?","msgtype":"m.text"},"ts":1706202130979,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$WVv6aP_fHPXFeXNPDmzzaNDKgdmOMu1yxOR3UNrTxaA"},
{"content":{"body":"Yup","m.mentions":{},"msgtype":"m.text"},"ts":1706206527203,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dPoEnCq3eKvNOjsWHkhmW04qaZ05O22t_Cps_c3FaZM"},
{"content":{"body":"Though, we also need to fix `Atomis.waitAsync`'s rejection context","format":"org.matrix.custom.html","formatted_body":"Though, we also need to fix <code>Atomis.waitAsync</code>'s rejection context","m.mentions":{},"msgtype":"m.text"},"ts":1706206707117,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$GTDDj-8Yhslc1ZZZ4JJjF_Anz1i8HyF83latQ2mNnyI"}
]