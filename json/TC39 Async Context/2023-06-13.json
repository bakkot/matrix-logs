[
{"content":{"body":"it should be 17 UTC","msgtype":"m.text"},"ts":1686636083354,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$C0gkWeNs1bHsZoaHiHMaZWCFt8LhunsCOEkqHFr4wFQ"},
{"content":{"body":"Yeah I see the earlier one as “cancelled” but all calendar integration is broken..","msgtype":"m.text"},"ts":1686652165383,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$29eCe2WvWqnVBMjzBKD05S9B5Gq3tgiewWwt78vZ5HM"},
{"content":{"body":"Hello. Is AsyncContext meeting open for everyone? May I invite my colleague joseph@socketsupply.co?","msgtype":"m.text"},"ts":1686666165360,"senderName":"Sergey Rubanov","senderId":"@chicoxyzzy:matrix.org","id":"$uEuJLZdbRdXt9K0aveAxJ83HidgfH3Q9Aw_9nSznmYw"},
{"content":{"body":"Yes, please do!","msgtype":"m.text"},"ts":1686669917068,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nDBo5mCK3udTPWeFyp9BWJEQh27V6EhhCY6nIf_TtmI"},
{"content":{"body":"anyone can make contributions to TC39 things online if they sign https://tc39.es/agreements/contributor/","msgtype":"m.text"},"ts":1686669953301,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Hs3Wt3W0BpJRCmwHF63yRcPmIjScJ0T0fehVM2roE7o"},
{"content":{"body":"Sergey Rubanov: I added Joseph to the invite, please ensure they sign the IPR agreement before joining","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@chicoxyzzy:matrix.org\">Sergey Rubanov</a>: I added Joseph to the invite, please ensure they sign the IPR agreement before joining","msgtype":"m.text"},"ts":1686673885895,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Y-5VHkHVHMgsmYSB7iW9Ad8pubufqYPstodrtywuYPY"},
{"content":{"body":"See you all in 30min!","msgtype":"m.text"},"ts":1686673924116,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$iQ_U7qjdrjTp4W-pa0QN_R5z9zOa3Su8XCkLwoNR8ME"},
{"content":{"body":"> <@jridgewell:matrix.org> Sergey Rubanov: I added Joseph to the invite, please ensure they sign the IPR agreement before joining\n\nThank you, I'll make sure Joe signed it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Y-5VHkHVHMgsmYSB7iW9Ad8pubufqYPstodrtywuYPY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br><a href=\"https://matrix.to/#/@chicoxyzzy:matrix.org\">Sergey Rubanov</a>: I added Joseph to the invite, please ensure they sign the IPR agreement before joining</blockquote></mx-reply>Thank you, I'll make sure Joe signed it","m.relates_to":{"m.in_reply_to":{"event_id":"$Y-5VHkHVHMgsmYSB7iW9Ad8pubufqYPstodrtywuYPY"}},"msgtype":"m.text"},"ts":1686674486321,"senderName":"Sergey Rubanov","senderId":"@chicoxyzzy:matrix.org","id":"$DfoMjNBXJHORbh6BThQc_Kipa7imInP9RwNOb7dhgSY"},
{"content":{"body":"littledan: in the meeting you mentioned you still believe there is a way to fast path task termination with reference counting when snapshots are not in play. While I have to think more about this, I have a few clarifying questions:\n- Do you expect that context termination would be a user exposed API. Aka would there be a callback executing when a task is deemed to be terminated\n- What is the expected behavior of termination in the case of pending promises (or captured snapshots) which are garbage collected, thus preventing any future execution in the context to occur through them. Do we expect the task to be considered terminated in that case (if they were the last related promise / snapshots) ?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: in the meeting you mentioned you still believe there is a way to fast path task termination with reference counting when snapshots are not in play. While I have to think more about this, I have a few clarifying questions:</p>\n<ul>\n<li>Do you expect that context termination would be a user exposed API. Aka would there be a callback executing when a task is deemed to be terminated</li>\n<li>What is the expected behavior of termination in the case of pending promises (or captured snapshots) which are garbage collected, thus preventing any future execution in the context to occur through them. Do we expect the task to be considered terminated in that case (if they were the last related promise / snapshots) ?</li>\n</ul>\n","msgtype":"m.text"},"ts":1686682782342,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$uhjV6b7ZMvqv_h4Bl4UNbhxkXtn44ETL8l4NtGtx4zI"}
]