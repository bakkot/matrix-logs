[
{"content":{"body":"We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:\n\n- Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)\n- Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/_opentelemetry_context_zone_peer_dep.ZoneContextManager.html\n- There's some other use case with React Cache but I don't fully understand it.\n- We have other use cases within Bloomberg in the Terminal to track different logical \"applications\" which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)","format":"org.matrix.custom.html","formatted_body":"<p>We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:</p>\n<ul>\n<li>Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)</li>\n<li>Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/_opentelemetry_context_zone_peer_dep.ZoneContextManager.html</li>\n<li>There's some other use case with React Cache but I don't fully understand it.</li>\n<li>We have other use cases within Bloomberg in the Terminal to track different logical &quot;applications&quot; which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)</li>\n</ul>\n","msgtype":"m.text"},"ts":1678391380549,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ufOPpyDAZMIi7N9TUPKjwua1-A8xprfIWbu-hRUlNjw"},
{"content":{"body":"Every time I talk with a web person about this proposal, they are confused for this exact reason","msgtype":"m.text"},"ts":1678391391437,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tMeEGPv2nU6TCAXY3dJjgINpwHyT_F5VsH0IUebv_9s"},
{"content":{"body":"Can someone take the action to make a PR to the async context readme on this topic? If not, please let me know and I'll try to eventually do it (but might not have time before this meeting)","msgtype":"m.text"},"ts":1678391422838,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$O-_UVNY_dbhGTSZ4Ty78OgBdSQJgdJnt-t_ZuSheIQE"},
{"content":{"body":" * We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:\n\n- Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)\n- Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/\\_opentelemetry\\_context\\_zone\\_peer\\_dep.ZoneContextManager.html\n- Yoav's various use cases [as a consistent mechanism which works within browsers and fundamentally needs the same mechanics]\n- There's some other use case with React Cache but I don't fully understand it.\n- We have other use cases within Bloomberg in the Terminal to track different logical \"applications\" which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)","format":"org.matrix.custom.html","formatted_body":" * <p>We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:</p>\n<ul>\n<li>Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)</li>\n<li>Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/_opentelemetry_context_zone_peer_dep.ZoneContextManager.html</li>\n<li>Yoav's various use cases [as a consistent mechanism which works within browsers and fundamentally needs the same mechanics]</li>\n<li>There's some other use case with React Cache but I don't fully understand it.</li>\n<li>We have other use cases within Bloomberg in the Terminal to track different logical &quot;applications&quot; which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)</li>\n</ul>\n","m.new_content":{"body":"We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:\n\n- Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)\n- Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/\\_opentelemetry\\_context\\_zone\\_peer\\_dep.ZoneContextManager.html\n- Yoav's various use cases [as a consistent mechanism which works within browsers and fundamentally needs the same mechanics]\n- There's some other use case with React Cache but I don't fully understand it.\n- We have other use cases within Bloomberg in the Terminal to track different logical \"applications\" which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)","format":"org.matrix.custom.html","formatted_body":"<p>We really need to execute on improving the motivation section of the async context readme, especially for the web use cases. Here's a summary of use cases I have in mind:</p>\n<ul>\n<li>Prioritizing threads of control, along the lines of https://github.com/WICG/scheduling-apis , and inheriting these priorities across callbacks and async/await (both the built-in mechanism and JS-level mechanisms)</li>\n<li>Collecting performance information across logical asynchronous threads of control, including both timings and with OpenTelemetry. See this project which can only work with async/await if you use a custom transpiler: https://open-telemetry.github.io/opentelemetry-js/classes/_opentelemetry_context_zone_peer_dep.ZoneContextManager.html</li>\n<li>Yoav's various use cases [as a consistent mechanism which works within browsers and fundamentally needs the same mechanics]</li>\n<li>There's some other use case with React Cache but I don't fully understand it.</li>\n<li>We have other use cases within Bloomberg in the Terminal to track different logical &quot;applications&quot; which run in the same JS heap, but I'm not sure if anyone else runs into these issues. (We also want to make more use of OpenTelemetry)</li>\n</ul>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$ufOPpyDAZMIi7N9TUPKjwua1-A8xprfIWbu-hRUlNjw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1678391491492,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$00BbM-QTbFN5LmoZpWa9ZSo5bO4tERV7opEcCe9I990"},
{"content":{"body":"also: Are we putting AsyncContext on the agenda for this TC39 meeting? We need to decide by tomorrow and add it if so.","msgtype":"m.text"},"ts":1678391505779,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GL1RMxvyj36kc5FcemiluCt-7zvyRXSLY6uLjvmahE0"},
{"content":{"body":"Chengzhong mentioned in the WinterCG meeting that the idea was to propose it for stage 2 for this TC39 plenary\n","msgtype":"m.text"},"ts":1678391575989,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$e2mgK5o32tWLdvzdGRZXYzzhnd0TMaxikrKiotCwsRU"},
{"content":{"body":"Good, let's put it on the agenda then","msgtype":"m.text"},"ts":1678391623367,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BbwQ31XWp-RE8Dn0er_m1MvayAemNYFufQNOcbEsRS4"},
{"content":{"body":"it will need to have this web motivation better documented for this plenary","msgtype":"m.text"},"ts":1678391645972,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bKuRLKBicVDq4PUu81VcTfE_00alI-OCK_ERbfNQu90"},
{"content":{"body":"This will also be important to have written down significantly before the March 16th WebPerf WG call which will discuss AsyncContext","msgtype":"m.text"},"ts":1678391689766,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ydBjob7Me_w5kV8krVSrxwVv7QMEdop5zFXZOvJBYiU"},
{"content":{"body":"is there some link for the react use case?","msgtype":"m.text"},"ts":1678391811465,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4cE5bRF3saly-b4E8VzssY2hT5_nqpaLJ85CjXwMcYI"},
{"content":{"body":"(I only know of the description in Justin's slides... IMO the others are sufficient to start with)","msgtype":"m.text"},"ts":1678391839461,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3tiw9G3X2V6jPUk2KwBLGK4tYCOcPKYgWBPB-eQy7VM"},
{"content":{"body":"ok, I'll make a PR for that","msgtype":"m.text"},"ts":1678391875101,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$-DtA7jdkczqWovarO0DqpxJSNjbuAjOzqH8XBZSkabc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1678391896750,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$U99QDg4jkDPaTI5Fj7FDKl4qKRKYRdS1ZXCgYvlNbQA"},
{"content":{"body":"What’s WebPerf WG?","msgtype":"m.text"},"ts":1678397476431,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Et7foc4ta5tQ8C1mZgo_5CgkTIoxJKhDLaO8vWeSiqs"},
{"content":{"body":"https://www.w3.org/webperf/","msgtype":"m.text"},"ts":1678399526961,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Jws8OtKAqhiJk3hVM8f2wHj5YuIMLJGdbYWdx3Wuz9U"},
{"content":{"body":"I think a lot of the strongest use cases for AsyncContext in the web are around performance metrics, so we're going to discuss this there.","msgtype":"m.text"},"ts":1678399546221,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$aYWS4_t9F-Ru848m2dqjpMOKIO_hTJZnSoyaWEowFmM"},
{"content":{"body":"If we (non-champions) have additional use cases to suggest, should we open issues on the proposal repo? Or sketch them here?","msgtype":"m.text"},"ts":1678403280698,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$j5qB8VhOKvlumn7592IrKbz0oRTnIX97W00scuxtDDU"},
{"content":{"body":"Either an issue, here, or an explainer PR would all be good and helpful!","msgtype":"m.text"},"ts":1678403978577,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8z25bz2ceXoX5jNAIKbB_R2IUD7lXSylOYSG4Tk2zaQ"},
{"content":{"body":"Whatever works for you","msgtype":"m.text"},"ts":1678403987850,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UntFqhqQA2PU96aTzNlmop2hHQtunOAq3NPpfRQr-KQ"}
]