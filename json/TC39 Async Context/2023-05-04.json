[
{"content":{"body":"I agree that it would be nice to make some basic usages more prominent in the readme ","format":"org.matrix.custom.html","formatted_body":"I agree that it would be nice to make some basic usages more prominent in the readme","msgtype":"m.text"},"ts":1683181790726,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X7-jIj7fpdkMICShXCgTERMu5AIlAsQzgJh_oWow2nw"},
{"content":{"body":"Basically if the readme could be more like the first half of the previous presentation pasted together with the presentation from next meeting ","format":"org.matrix.custom.html","formatted_body":"Basically if the readme could be more like the first half of the previous presentation pasted together with the presentation from next meeting","msgtype":"m.text"},"ts":1683182708310,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3GYX1_nS2h4wSQXiB1HyJyDMCViMg5nn_qdUEZ81Jhw"},
{"content":{"body":"RE https://github.com/tc39/proposal-async-context/issues/52, I'm now thinking if GC times may not be good enough for my immediate use case","msgtype":"m.text"},"ts":1683193200970,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$kHq-jCgDCePhWK01njPgCwUT1sTVqbTa57dBnfL1WwA"},
{"content":{"body":"and potentially something we can more tightly define once it's actually required","msgtype":"m.text"},"ts":1683193219199,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$wdM8DVhR9QtpzuGo02qmUDYe4_4_eHejFjTp5Ry4Q-4"},
{"content":{"body":"Garbage collection is not an option here IMO","msgtype":"m.text"},"ts":1683210074619,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7_imCTszq23eTrZdd3IguxWjEaKyUiSEW1rvudxo0Ao"},
{"content":{"body":"I agree it's not an option for timestamps","msgtype":"m.text"},"ts":1683211522810,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$lsdxc7Bh1YnIvwAlVp41sqQL31GO2tPYdva2T-zCTe0"},
{"content":{"body":"as GC can be arbitrarily late","msgtype":"m.text"},"ts":1683211531100,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$Ntw7ZHByBRBFHU5waabxSZXSTta90ojgLXFws2HFjIM"},
{"content":{"body":"but it can be an option (I think) for TaskAttribution's container management","msgtype":"m.text"},"ts":1683211560282,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$8L1Xu23h6_HXsAK212qmCfpUMdtcfVChbSeiEdoa1v4"},
{"content":{"body":"I think we have to deal with GC in a few cases:\n1. `AsyncContext.wrap()`\n2. `new Promise(() => {})` (permanently pending promise)","format":"org.matrix.custom.html","formatted_body":"<p>I think we have to deal with GC in a few cases:</p>\n<ol>\n<li><code>AsyncContext.wrap()</code></li>\n<li><code>new Promise(() =&gt; {})</code> (permanently pending promise)</li>\n</ol>\n","msgtype":"m.text"},"ts":1683234576060,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Ra1KNji3-Fv2K4yvh0_Pa9LRi1CSQbRvoDqmVZYUk5M"},
{"content":{"body":"There's an optimistic fast path for promises that resolve (we can decrement the pending counter as soon as that happens), but promises aren't guaranteed to resolve ever.","msgtype":"m.text"},"ts":1683234616154,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Vg5fBtoqqRrXuIv7fatz-QqpSvQhqbDFDYWjrjO-mrA"},
{"content":{"body":"So we're stuck waiting for GC the promise","msgtype":"m.text"},"ts":1683234652707,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Lwk6dHSPRxSe-nzLnLMopBgFZ0RV4dryDdeQU_k_XvM"},
{"content":{"body":"Which will be fun given how leaky promises are in most engines these days","msgtype":"m.text"},"ts":1683235025715,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HekL9KjwW4Nzi-WXch6QLYxMhCz1Cmqs2Wi79D7LYRE"},
{"content":{"body":"Yeah I think we want to count outstanding tasks/micro tasks","msgtype":"m.text"},"ts":1683237605032,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$l2QfA4biH2AmVfbdT2EyiphU73AIslhOTnoTkSmBih4"},
{"content":{"body":"We agree that's an optimization, right?","msgtype":"m.text"},"ts":1683240449267,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Qk2naBC4EJxN8WocLSAWuNtgvK6hCtM6sZ41YImRpoA"},
{"content":{"body":"I don’t think gc vs exact timing is an optimization; I think it is sort of different semantics ","format":"org.matrix.custom.html","formatted_body":"I don’t think gc vs exact timing is an optimization; I think it is sort of different semantics","msgtype":"m.text"},"ts":1683240792199,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zyU1o-gHTkbJlo7IXr8AjxSbLjqC5pKJQj_8wOxQ0DQ"},
{"content":{"body":"There are certain use cases that really only work with exact timing (not just perf metrics but also Angular’s zone.js usage)","msgtype":"m.text"},"ts":1683240834674,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ej_QPGSVU27SQekc7seY0WXUOw1JmFth2rwnc-db6yE"},
{"content":{"body":"We just shouldn’t build these features in a way which takes advantage of finalizers","msgtype":"m.text"},"ts":1683240881036,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$a7Lf56cONUv0yzb4LHfLjnmMAn30tgEWb-rLhNkKiYg"},
{"content":{"body":"For a userland API how do you reconcile that with the fact that task termination is intrinsically tied in some cases to the collection of user held and observable objects?","msgtype":"m.text"},"ts":1683244262393,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$AKM-KiDbuH7eD9TKjYYcuAHuqdI567wCTloMFAO5Ztk"}
]