[
{"content":{"body":"I wonder if `dispatchSnapshot` as a property of events would be clear to developers who have no clue what AsyncContext even is or what it's meant for","format":"org.matrix.custom.html","formatted_body":"I wonder if <code>dispatchSnapshot</code> as a property of events would be clear to developers who have no clue what AsyncContext even is or what it's meant for","m.mentions":{},"msgtype":"m.text"},"ts":1721387451362,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$YQ1__HFK1QhN1_Z2t3MjlLakmCsiXCd6HUwhrSv6Fsk"},
{"content":{"body":"well, I guess we don't need it to be clear, we just need them not to use it","m.mentions":{},"msgtype":"m.text"},"ts":1721387461788,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$muI7jz-fWTrQe2MspCw-gAj0BnMXFluHVgYlBihhBiU"},
{"content":{"body":" * well, I guess we don't need it to be clear, we just need them not to use it by mistake","m.mentions":{},"m.new_content":{"body":"well, I guess we don't need it to be clear, we just need them not to use it by mistake","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$muI7jz-fWTrQe2MspCw-gAj0BnMXFluHVgYlBihhBiU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721387504797,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$qVa3iTnAye6OS58_Z909FZLPB4MMw6ng6EZnu9oP1g4"},
{"content":{"body":"An important thing is that it’s \ngoogleable","format":"org.matrix.custom.html","formatted_body":"An important thing is that it’s<br />\ngoogleable","msgtype":"m.text"},"ts":1721393181335,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EPF49so59s1Nvhv0aOI5u4-dvOj7U8NbRTlEWH6Pe54"},
{"content":{"body":"We could be very explicit and say causalAsyncContextSnapshot. Too long?","msgtype":"m.text"},"ts":1721393237000,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$W6rMd5nrgKWl29gnkCAIQdHRgnWDGcIsQSLQfIvzjek"},
{"content":{"body":"Anyway, all of these options should be googleable/searchable in mdn so this name search doesn’t have a big downside risk ","format":"org.matrix.custom.html","formatted_body":"Anyway, all of these options should be googleable/searchable in mdn so this name search doesn’t have a big downside risk","msgtype":"m.text"},"ts":1721393954728,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$H5m9bsBo-uDmOICh3IWqk0TvswqZb9ZyDaz4wCLjHB4"},
{"content":{"body":"I think it is ok to have a single property name to be generic but specifically searchable with its holder's name","m.mentions":{},"msgtype":"m.text"},"ts":1721394291366,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$zyQqgPzoNhOLUzgMeBhaAPLTYNXo7BSq_GLqZwv72bc"},
{"content":{"body":"It might be acceptable, but will be not as convenient for some people","msgtype":"m.text"},"ts":1721394380755,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FBGCH0WLAKrL4ljgCDiCW6X_5Yt0MzZqsjBfbB7MVH4"},
{"content":{"body":"Especially here, this will come up on a lot of autocompletes and people will be trying to figure out what it is","msgtype":"m.text"},"ts":1721394429872,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zS-n7kPuffWK_OTywlqwsTkS3_PxmJin36hJ9XCrFHg"},
{"content":{"body":"Hey, we're discussing whether any of you have use cases for having the dispatch snapshot on user-created events","m.mentions":{},"msgtype":"m.text"},"ts":1721411394174,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$DRzMjKfNQoLsZrzfXE9gx85s7iNCN_zrFWNIpmPFRhQ"},
{"content":{"body":"So 1) should it be there at all, and 2) if so, should the default behavior would be to take the snapshot, or to have it as null","m.mentions":{},"msgtype":"m.text"},"ts":1721411491785,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$vxWujTeEaT7CWNk99Eb1Big0R49E7YDwT7VSXRfxntQ"},
{"content":{"body":"One use case is polyfills, but the property could be added with `Object.defineProperty`","format":"org.matrix.custom.html","formatted_body":"One use case is polyfills, but the property could be added with <code>Object.defineProperty</code>","m.mentions":{},"msgtype":"m.text"},"ts":1721411522485,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$VloSId4fhwNSBH7_8Jq7srlEg7t5kchH2F8yeWO9Fig"},
{"content":{"body":"For user-created events, could you define `class SnapshottingEvent extends Event { dispatchSnapshot = new AsyncContextSnapshot(); }` and then just dispatch that?","format":"org.matrix.custom.html","formatted_body":"For user-created events, could you define <code>class SnapshottingEvent extends Event { dispatchSnapshot = new AsyncContextSnapshot(); }</code> and then just dispatch that?","m.mentions":{},"msgtype":"m.text"},"ts":1721411563157,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$RLDnGrxZAvWg-edOTxnU3gt-qUMSCV-TdYx8kagRJuM"},
{"content":{"body":"yeah","m.mentions":{},"msgtype":"m.text"},"ts":1721411617506,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$f2Nfr6DTpwjrtwN8bySD6R4xJ-0EpxgJjtTmLOZzUaU"},
{"content":{"body":"so I guess the discussion is rather, are there use cases for having the `dispatchSnapshot` property populated by default?","format":"org.matrix.custom.html","formatted_body":"so I guess the discussion is rather, are there use cases for having the <code>dispatchSnapshot</code> property populated by default?","m.mentions":{},"msgtype":"m.text"},"ts":1721411642447,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$JO8ZFoF-GrHb2mpEqUXh_N7U53XYprD-pjSCgcad_GQ"},
{"content":{"body":"So then the question is whether the dispatching code should need to be concerned about it","m.mentions":{},"msgtype":"m.text"},"ts":1721411647166,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$KTmAmsaDcK1Tv_LR_5Uw5fHRHaBhkNDm-CIulZ-21gs"},
{"content":{"body":"I don't have a good sense here...  putting it on the Event constructor wouldn't be exactly accurate w.r.t. being the _dispatch_ snapshot, if event objects are shared or preallocated.  To really be accurate, you'd want `dispatchEvent` to populate it, but then what does that function use to decide whether to populate it or not...?","format":"org.matrix.custom.html","formatted_body":"I don't have a good sense here...  putting it on the Event constructor wouldn't be exactly accurate w.r.t. being the <em>dispatch</em> snapshot, if event objects are shared or preallocated.  To really be accurate, you'd want <code>dispatchEvent</code> to populate it, but then what does that function use to decide whether to populate it or not...?","m.mentions":{},"msgtype":"m.text"},"ts":1721411871416,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$7PftdPKmmrOvCh8KoKG7BR2ADawIGHc4F_YdaJ9MB-0"},
{"content":{"body":"usually the creation and dispatch times is the same, and even for web platform events the spec text I'm proposing would set it when the event is created (not sure if that is ever not the same as when it's dispatched)","m.mentions":{},"msgtype":"m.text"},"ts":1721412095747,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$wq-S8Z0gtM9vm0bBNabbT_yN-XVNHYjY4MNhTWSb5gQ"},
{"content":{"body":"so I guess technically `dispatchSnapshot` wouldn't be an accurate name","format":"org.matrix.custom.html","formatted_body":"so I guess technically <code>dispatchSnapshot</code> wouldn't be an accurate name","m.mentions":{},"msgtype":"m.text"},"ts":1721412110414,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$673NAxmkPwyeBGZKm2fKhShVSlkrKAwiNQOZTp2nUAs"},
{"content":{"body":" * usually the creation and dispatch times is the same, and even for web platform events the spec text I'm proposing would set it when the event is created (not sure if that difference would be observable)","m.mentions":{},"m.new_content":{"body":"usually the creation and dispatch times is the same, and even for web platform events the spec text I'm proposing would set it when the event is created (not sure if that difference would be observable)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wq-S8Z0gtM9vm0bBNabbT_yN-XVNHYjY4MNhTWSb5gQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721412135188,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$jDPbfTSGH1fXoLbnv_-ZJMj8DE0a3rxZNICRN-7B10U"},
{"content":{"body":" * usually the creation and dispatch times is the same, and even for web platform events the spec text I'm proposing would set it when the event is created (not sure if that difference would be observable for any event)","m.mentions":{},"m.new_content":{"body":"usually the creation and dispatch times is the same, and even for web platform events the spec text I'm proposing would set it when the event is created (not sure if that difference would be observable for any event)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wq-S8Z0gtM9vm0bBNabbT_yN-XVNHYjY4MNhTWSb5gQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721412144477,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$_kfaMDT0DYgdKfZwdnpVeYY_-AgPHUe2UkFHMNLSJkM"},
{"content":{"body":"event creation time seems very reasonable","m.mentions":{},"msgtype":"m.text"},"ts":1721412302574,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$vFKBYZsBRSuSDcaIlmSvX72eY1EZGhsx4twPmqdBB3g"},
{"content":{"body":"what's the reasoning to not put a snapshot on _every_ event?","format":"org.matrix.custom.html","formatted_body":"what's the reasoning to not put a snapshot on <em>every</em> event?","m.mentions":{},"msgtype":"m.text"},"ts":1721412318548,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$mtvGsgnbIp7l1yW60GfLisCNd6VXlFYM4cvNTVsCYH8"},
{"content":{"body":"well, we don't want to use the registration-time snapshot--the we are back to Zalgo fallback logic","m.mentions":{},"msgtype":"m.text"},"ts":1721412351376,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HjIe11_6ZJFZS50fjooVLTUvGSp1hSSpC4Vashfc-oc"},
{"content":{"body":"(if we care about that)","m.mentions":{},"msgtype":"m.text"},"ts":1721412355390,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$j5dbRJezlGAqAKnX1n6UJt95iRCvMINeNUussyDDPK0"},
{"content":{"body":"many events only have one relevant snapshot, and that's the registration-time one","m.mentions":{},"msgtype":"m.text"},"ts":1721412366883,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zSKBP6bJc6atX2tblHehNQyw0By1c-5WcSzU68HMEBk"},
{"content":{"body":"sure, but for those the dispatchSnapshot (name tbd) would just be empty","m.mentions":{},"msgtype":"m.text"},"ts":1721412392882,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$9LbJbF1Xv7LWfMqLq1eu53vof9KxF0S-C8vaT9AxE5s"},
{"content":{"body":"that was another point that Andreu and I were chatting about: should the property be missing, or filled in with null? Andreu convinced me the latter is better","m.mentions":{},"msgtype":"m.text"},"ts":1721412423390,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Gw97kda-JlxlC-3G5mQvq7MDu7qTREydUKAlDSIPwTE"},
{"content":{"body":"it's more consistent to say, it's an attribute of Event","m.mentions":{},"msgtype":"m.text"},"ts":1721412436590,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mn-kzQxxq9p59h-qmZgArmtcnwaL4eeerD1kMFcTP3s"},
{"content":{"body":"or filled in with the top-level snapshot?","m.mentions":{},"msgtype":"m.text"},"ts":1721412443519,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$gAo9autqPyMGcdgYTvaWT_ZgZZLTRxaVMz1L4TuNdrE"},
{"content":{"body":"> <@stephenhicks:matrix.org> what's the reasoning to not put a snapshot on _every_ event?\n\nsome events would require quite some complexity around various specs to find the right one","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$mtvGsgnbIp7l1yW60GfLisCNd6VXlFYM4cvNTVsCYH8?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>what's the reasoning to not put a snapshot on <em>every</em> event?</blockquote></mx-reply>some events would require quite some complexity around various specs to find the right one","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mtvGsgnbIp7l1yW60GfLisCNd6VXlFYM4cvNTVsCYH8"}},"msgtype":"m.text"},"ts":1721412452871,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Kurp1z0MNCZ-KYRIyXeET4arna5XG5XS20BxSRsXGE4"},
{"content":{"body":"what we don't want to do is *change* the logic defining the snapshot *later*","format":"org.matrix.custom.html","formatted_body":"what we don't want to do is <em>change</em> the logic defining the snapshot <em>later</em>","m.mentions":{},"msgtype":"m.text"},"ts":1721412467043,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mW09lwrkcZslPmS_aPHvQ5d9s7O9hPeCtWYt9ca_PNU"},
{"content":{"body":"> <@stephenhicks:matrix.org> or filled in with the top-level snapshot?\n\nwhy would this be useful?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$gAo9autqPyMGcdgYTvaWT_ZgZZLTRxaVMz1L4TuNdrE?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>or filled in with the top-level snapshot?</blockquote></mx-reply>why would this be useful?","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$gAo9autqPyMGcdgYTvaWT_ZgZZLTRxaVMz1L4TuNdrE"}},"msgtype":"m.text"},"ts":1721412475905,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CpDBMdUTGN0-ejaS0Wn5aT3zDL7R1KXRsGNsdtYieaI"},
{"content":{"body":"I thought we wanted to let people know whether there was a more interesting causal snapshot","m.mentions":{},"msgtype":"m.text"},"ts":1721412492453,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ttkGjmExEnzwMZnTaRwlprrBGWa9sYrvuBeEEvlBrTk"},
{"content":{"body":" * I thought we wanted to let people know *whether* there was a more interesting causal snapshot","format":"org.matrix.custom.html","formatted_body":" * I thought we wanted to let people know <em>whether</em> there was a more interesting causal snapshot","m.mentions":{},"m.new_content":{"body":"I thought we wanted to let people know *whether* there was a more interesting causal snapshot","format":"org.matrix.custom.html","formatted_body":"I thought we wanted to let people know <em>whether</em> there was a more interesting causal snapshot","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ttkGjmExEnzwMZnTaRwlprrBGWa9sYrvuBeEEvlBrTk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721412500151,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xbxkB42aYGkOXzHc6FL_2ALLnTmoVXufCgIRWcMHhFo"},
{"content":{"body":"> <@littledan:matrix.org> some events would require quite some complexity around various specs to find the right one\n\nI don't imagine doing any searching here - for consistency this property is just the snapshot when the event is created.  If there's another snapshot that's more relevant, it would need a different property","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Kurp1z0MNCZ-KYRIyXeET4arna5XG5XS20BxSRsXGE4?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>some events would require quite some complexity around various specs to find the right one</blockquote></mx-reply>I don't imagine doing any searching here - for consistency this property is just the snapshot when the event is created.  If there's another snapshot that's more relevant, it would need a different property","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Kurp1z0MNCZ-KYRIyXeET4arna5XG5XS20BxSRsXGE4"}},"msgtype":"m.text"},"ts":1721412539436,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$sSImmCscI9BzAk0J3tIi0HW9_HeKRbf3awqNa3ur2Fs"},
{"content":{"body":"As APMs tend to view what we are patching somewhat generically, it'd be in _our_ interest for the snapshot to _always_ be there regardless of origin.","format":"org.matrix.custom.html","formatted_body":"As APMs tend to view what we are patching somewhat generically, it'd be in <em>our</em> interest for the snapshot to <em>always</em> be there regardless of origin.","m.mentions":{},"msgtype":"m.text"},"ts":1721412568625,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$G-HPaRjbthIMK9M4d8u9d6sclJnJyLtcIV_L3Myd6Tg"},
{"content":{"body":"> <@stephenhicks:matrix.org> I don't imagine doing any searching here - for consistency this property is just the snapshot when the event is created.  If there's another snapshot that's more relevant, it would need a different property\n\nthe issue is that for spec-internal async algorithms, there would be a lot of internal tracking that would need to be done","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$sSImmCscI9BzAk0J3tIi0HW9_HeKRbf3awqNa3ur2Fs?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>I don't imagine doing any searching here - for consistency this property is just the snapshot when the event is created.  If there's another snapshot that's more relevant, it would need a different property</blockquote></mx-reply>the issue is that for spec-internal async algorithms, there would be a lot of internal tracking that would need to be done","m.mentions":{"user_ids":["@stephenhicks:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$sSImmCscI9BzAk0J3tIi0HW9_HeKRbf3awqNa3ur2Fs"}},"msgtype":"m.text"},"ts":1721412575827,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$GRNstXwtQyAqq3pUIgjrC0bSYDWS7auf18sVMUFwNE0"},
{"content":{"body":"and that's not trivial","m.mentions":{},"msgtype":"m.text"},"ts":1721412586385,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$VsNQ0GOZkNTatHw9n4ODCUOPlVNuokGGMSEKSpBjESg"},
{"content":{"body":"there's always a snapshot used when running the event handler, there's just not always an *additional* causal snapshot presented","format":"org.matrix.custom.html","formatted_body":"there's always a snapshot used when running the event handler, there's just not always an <em>additional</em> causal snapshot presented","m.mentions":{},"msgtype":"m.text"},"ts":1721412602969,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$isaAcHrlkUQbj864UuB-nlGHn3SMPufvrgxDltpqUH4"},
{"content":{"body":"the idea is to handle that for a subset of use cases in the initial rollout","m.mentions":{},"msgtype":"m.text"},"ts":1721412603738,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$3puDpHzCp3SFhuSmTTMKpS-kllZYVByNt4tiEyHai-Y"},
{"content":{"body":"and then incrementally increase that set","m.mentions":{},"msgtype":"m.text"},"ts":1721412609086,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$rD0-xjJktFuL1K4xFg5V-kkuiqkOFsoHcTkVKHOItsU"},
{"content":{"body":"if we always provided one, we'd want to change some of them later as we incrementally increase accuracy","m.mentions":{},"msgtype":"m.text"},"ts":1721412626423,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$55mEAcJw14om3q58XeukHsZKQi-n-foBzKaVEp5t3iQ"},
{"content":{"body":"but the other option is for it to be null, to say \"no additional causal information to see here\"","m.mentions":{},"msgtype":"m.text"},"ts":1721412642540,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0MNDC0EJjsqRm70wFEQIPVwxatIPDazTZ7O8JF3oqH0"},
{"content":{"body":"> <@littledan:matrix.org> I thought we wanted to let people know *whether* there was a more interesting causal snapshot\n\nI see where you're going with this, but I'm concerned about the consistency of whether we're in an empty snapshot or not in a snapshot at any given time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$ttkGjmExEnzwMZnTaRwlprrBGWa9sYrvuBeEEvlBrTk?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I thought we wanted to let people know <em>whether</em> there was a more interesting causal snapshot</blockquote></mx-reply>I see where you're going with this, but I'm concerned about the consistency of whether we're in an empty snapshot or not in a snapshot at any given time","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ttkGjmExEnzwMZnTaRwlprrBGWa9sYrvuBeEEvlBrTk"}},"msgtype":"m.text"},"ts":1721412652589,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$5m_EE8kss8NGUGOOGf4XCbPeXI34jpMevkdamiGiV1o"},
{"content":{"body":"this field is not a feature that ordinary programmers should use","m.mentions":{},"msgtype":"m.text"},"ts":1721412655755,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hDIKFMVK3pHDHehzZjR1G-aJHZioBtCHRBeehRGXGyc"},
{"content":{"body":"> <@littledan:matrix.org> there's always a snapshot used when running the event handler, there's just not always an *additional* causal snapshot presented\n\nThat's the registration time though, right? APMs need the dispatch context.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$isaAcHrlkUQbj864UuB-nlGHn3SMPufvrgxDltpqUH4?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>there's always a snapshot used when running the event handler, there's just not always an <em>additional</em> causal snapshot presented</blockquote></mx-reply>That's the registration time though, right? APMs need the dispatch context.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$isaAcHrlkUQbj864UuB-nlGHn3SMPufvrgxDltpqUH4"}},"msgtype":"m.text"},"ts":1721412661652,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$RTP7h6rPWg_EVhyB7D7ytcifNkj2E6hy7Jk_a4Ek8mc"},
{"content":{"body":"> <@stephenhicks:matrix.org> I see where you're going with this, but I'm concerned about the consistency of whether we're in an empty snapshot or not in a snapshot at any given time\n\nthere is never an empty snapshot","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$5m_EE8kss8NGUGOOGf4XCbPeXI34jpMevkdamiGiV1o?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>I see where you're going with this, but I'm concerned about the consistency of whether we're in an empty snapshot or not in a snapshot at any given time</blockquote></mx-reply>there is never an empty snapshot","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5m_EE8kss8NGUGOOGf4XCbPeXI34jpMevkdamiGiV1o"}},"msgtype":"m.text"},"ts":1721412666035,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EeQqphoof4Zimk321To0jzBimNBgn3cI998M6As7xz4"},
{"content":{"body":"this seems like it would be implying that the event loop runs outside of any snapshot","m.mentions":{},"msgtype":"m.text"},"ts":1721412673932,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$lyfHLJPwUL6DBMtR3136ux0xGtvtfm5eAVdOjCk8EGw"},
{"content":{"body":"the event runs in the registration time snapshot","m.mentions":{},"msgtype":"m.text"},"ts":1721412676683,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-tDnRyhfqMZm1DiVzCjXUyEGAIqSjsdKllXYjU60t-Y"},
{"content":{"body":"no","m.mentions":{},"msgtype":"m.text"},"ts":1721412680121,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_QBsiG_OYAJHyFCNWLEitqeOnsL3fTHDjdI3JMI1i4U"},
{"content":{"body":"we're talking about the *additional* causal snapshot, which you can .run if you want","format":"org.matrix.custom.html","formatted_body":"we're talking about the <em>additional</em> causal snapshot, which you can .run if you want","m.mentions":{},"msgtype":"m.text"},"ts":1721412689549,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FvbqjVl7IMjQ1ohLR9CyB6Zz5QUA4MDK-ybOdryeCEg"},
{"content":{"body":"s/empty snaphot/host-created initial snapshot/ whatever","m.mentions":{},"msgtype":"m.text"},"ts":1721412693119,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$0kCTMHL1vyTc6rFnl865aRpsidFb1GRoLXPzkfIcb5w"},
{"content":{"body":"yeah that doesn't come up here","m.mentions":{},"msgtype":"m.text"},"ts":1721412701361,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Yxm4ByLMnL6twKQ8ztWJU0gt3ZIgL0pv6iabaklDP_o"},
{"content":{"body":"that only comes up for modules","m.mentions":{},"msgtype":"m.text"},"ts":1721412710981,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AfwUtAwnBMQakrYzG6Cm1oAv0UMruF8GeKaOM8YL4Fs"},
{"content":{"body":"> <@stephenbelanger:matrix.org> That's the registration time though, right? APMs need the dispatch context.\n\nI don't see making sure that the dispatch context is tracked for every single event with an asynchronous source as feasible in a short amount of time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$RTP7h6rPWg_EVhyB7D7ytcifNkj2E6hy7Jk_a4Ek8mc?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenbelanger:matrix.org\">@stephenbelanger:matrix.org</a><br>That's the registration time though, right? APMs need the dispatch context.</blockquote></mx-reply>I don't see making sure that the dispatch context is tracked for every single event with an asynchronous source as feasible in a short amount of time","m.mentions":{"user_ids":["@stephenbelanger:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RTP7h6rPWg_EVhyB7D7ytcifNkj2E6hy7Jk_a4Ek8mc"}},"msgtype":"m.text"},"ts":1721412721544,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$wKDhPcOig5yWWil2UtANIsBA2SWpQiMpu9_cUTp9hHs"},
{"content":{"body":"> <@littledan:matrix.org> we're talking about the *additional* causal snapshot, which you can .run if you want\n\nYes, that is the one APMs need. The registration time snapshot is not useful to us.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$FvbqjVl7IMjQ1ohLR9CyB6Zz5QUA4MDK-ybOdryeCEg?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>we're talking about the <em>additional</em> causal snapshot, which you can .run if you want</blockquote></mx-reply>Yes, that is the one APMs need. The registration time snapshot is not useful to us.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$FvbqjVl7IMjQ1ohLR9CyB6Zz5QUA4MDK-ybOdryeCEg"}},"msgtype":"m.text"},"ts":1721412723923,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$RM86TD8TyaddLPzupB3G9Qz8EJbCaacOwreUHwnYBUs"},
{"content":{"body":"> <@stephenbelanger:matrix.org> That's the registration time though, right? APMs need the dispatch context.\n\nright, so we're talking about the details for how to provide that information","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$RTP7h6rPWg_EVhyB7D7ytcifNkj2E6hy7Jk_a4Ek8mc?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenbelanger:matrix.org\">@stephenbelanger:matrix.org</a><br>That's the registration time though, right? APMs need the dispatch context.</blockquote></mx-reply>right, so we're talking about the details for how to provide that information","m.mentions":{"user_ids":["@stephenbelanger:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RTP7h6rPWg_EVhyB7D7ytcifNkj2E6hy7Jk_a4Ek8mc"}},"msgtype":"m.text"},"ts":1721412737529,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$He6oSqVef76pps2Rp058903U2sx_I1w2xXZhD42lGks"},
{"content":{"body":"> <@littledan:matrix.org> that only comes up for modules\n\nIIUC scripts also load an initial snapshot via the same operation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$AfwUtAwnBMQakrYzG6Cm1oAv0UMruF8GeKaOM8YL4Fs?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>that only comes up for modules</blockquote></mx-reply>IIUC scripts also load an initial snapshot via the same operation","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$AfwUtAwnBMQakrYzG6Cm1oAv0UMruF8GeKaOM8YL4Fs"}},"msgtype":"m.text"},"ts":1721412755445,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$3IBZ_KFOSDphWn_82mfu0VUIWJ2nuRdXVf9062R6eDQ"},
{"content":{"body":"yes that too, but not events","m.mentions":{},"msgtype":"m.text"},"ts":1721412762979,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vankKdfZH97tkbucOr0f_pvHnOPPaHVOWoTLz_iZx34"},
{"content":{"body":"> <@abotella:igalia.com> I don't see making sure that the dispatch context is tracked for every single event with an asynchronous source as feasible in a short amount of time\n\nI mean, if the plan is to reserve a slot for it to _be there_ but just not having all sources _supported_ immediately, that's probably fine. Most APMs don't really do full structural tracing in the browser yet anyway. 🤷","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$wKDhPcOig5yWWil2UtANIsBA2SWpQiMpu9_cUTp9hHs?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>I don't see making sure that the dispatch context is tracked for every single event with an asynchronous source as feasible in a short amount of time</blockquote></mx-reply>I mean, if the plan is to reserve a slot for it to <em>be there</em> but just not having all sources <em>supported</em> immediately, that's probably fine. Most APMs don't really do full structural tracing in the browser yet anyway. 🤷","m.mentions":{"user_ids":["@abotella:igalia.com","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wKDhPcOig5yWWil2UtANIsBA2SWpQiMpu9_cUTp9hHs"}},"msgtype":"m.text"},"ts":1721412789475,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$Br47mCNZqdsROkL0aQw-QF42gsOIvwkvhhgDBkLpSHo"},
{"content":{"body":"> <@stephenbelanger:matrix.org> I mean, if the plan is to reserve a slot for it to _be there_ but just not having all sources _supported_ immediately, that's probably fine. Most APMs don't really do full structural tracing in the browser yet anyway. 🤷\n\nyes, that's the idea. Rather than getting it wrong sometimes, we'll have the value be null for cases where the browser hasn't figured out yet how to provide the information.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Br47mCNZqdsROkL0aQw-QF42gsOIvwkvhhgDBkLpSHo?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenbelanger:matrix.org\">@stephenbelanger:matrix.org</a><br>I mean, if the plan is to reserve a slot for it to <em>be there</em> but just not having all sources <em>supported</em> immediately, that's probably fine. Most APMs don't really do full structural tracing in the browser yet anyway. 🤷</blockquote></mx-reply>yes, that's the idea. Rather than getting it wrong sometimes, we'll have the value be null for cases where the browser hasn't figured out yet how to provide the information.","m.mentions":{"user_ids":["@stephenbelanger:matrix.org","@abotella:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Br47mCNZqdsROkL0aQw-QF42gsOIvwkvhhgDBkLpSHo"}},"msgtype":"m.text"},"ts":1721412821268,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mxjMBTkv_qezIpgHXUH9jF9Ko7ndXvWlgF4Cg34Oe_k"},
{"content":{"body":"I mostly just want to be sure we're going in a direction that one block us from being able to support that in the future.","m.mentions":{},"msgtype":"m.text"},"ts":1721412825687,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$5oPVuUTilEUHW43b6EOAmQPVjDJh8OdLkkghorYMpSI"},
{"content":{"body":" * I mostly just want to be sure we're going in a direction that won't block us from being able to support that in the future.","m.mentions":{},"m.new_content":{"body":"I mostly just want to be sure we're going in a direction that won't block us from being able to support that in the future.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$5oPVuUTilEUHW43b6EOAmQPVjDJh8OdLkkghorYMpSI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721412840616,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$es944jdBafXD4BObXGzpvc3PfRtBQuY3aXIExACqJ9E"},
{"content":{"body":"I worry that if we always provide something for the sake of it, it could disrupt existing programs to change that snapshot. By contrast, the contract for \"null\" would be \"the platform might give you something later, but not now\"","m.mentions":{},"msgtype":"m.text"},"ts":1721412870558,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$aTGzqYrInv7_fTePCg5YNAnW8kjAh6pDT-NRDFWMOGA"},
{"content":{"body":"because if we always give you something for the sake of it, we'd end up using the registration time snapshot as the fallback","m.mentions":{},"msgtype":"m.text"},"ts":1721412896268,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZxbCPWalhfjR4BKZNWB2VU6tEDv5gvCP3_KQYIJtooo"},
{"content":{"body":"Yeah, that seems acceptable to me.","m.mentions":{},"msgtype":"m.text"},"ts":1721412901205,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$EDJLh70yxiYoX2jJfQbbVnrUb4cS17eC_Rpq4EOiVAE"},
{"content":{"body":"(but you don't need to be given that--you're already running in the registration time snapshot)","m.mentions":{},"msgtype":"m.text"},"ts":1721412910463,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$p9yygIu7Aq4bzaG0j9Qv7RZDTi1se7tr_1vpA1CDIuY"},
{"content":{"body":"My thought here is that any given property should have a clear and easily-understandable rule for where its snapshot comes from","m.mentions":{},"msgtype":"m.text"},"ts":1721412927482,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$658sDwurb4SozepvQbmrbXoyeqR9uX1nVgxJyqLlrcY"},
{"content":{"body":"For more _immediate_ term we mostly only care that async/await is handled appropriately, thus my push on through-flow.","format":"org.matrix.custom.html","formatted_body":"For more <em>immediate</em> term we mostly only care that async/await is handled appropriately, thus my push on through-flow.","m.mentions":{},"msgtype":"m.text"},"ts":1721412934592,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$jcvYZD0V6Vv_EX7Kct_gSFvfKmArAb0MqM_MFLq1Vuc"},
{"content":{"body":"so if it's anything other than \"the snapshot when the event was (created|dispatched)\" then it should be a _different_ property","format":"org.matrix.custom.html","formatted_body":"so if it's anything other than \"the snapshot when the event was (created|dispatched)\" then it should be a <em>different</em> property","m.mentions":{},"msgtype":"m.text"},"ts":1721412949865,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$XRgWvSwors9YxqyN9NlqwIlMKwxzwnoiR-OEr4JUudA"},
{"content":{"body":"All the _other_ asynchrony is Node.js-provided, so we can just make whatever changes we need to make to Node.js to capture and restore in the correct places.","format":"org.matrix.custom.html","formatted_body":"All the <em>other</em> asynchrony is Node.js-provided, so we can just make whatever changes we need to make to Node.js to capture and restore in the correct places.","m.mentions":{},"msgtype":"m.text"},"ts":1721412968835,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$wPlRU6TPzMdKwVl7jKnfY2Y4FGgp1feN1dH8pLs1lyQ"},
{"content":{"body":"what I want to avoid is \"for event X, .dispatchSnapshot comes from Y, for event Z, .dispatchSnapshot comes from W, for event U, .dispatchSnapshot is null, etc\"","m.mentions":{},"msgtype":"m.text"},"ts":1721413029850,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$NNj99smziuVUtR6FsAJ6mL9hFbiXCKQ58ihhHLG5wgY"},
{"content":{"body":"this would be a nightmare both to reason about and to polyfill.","m.mentions":{},"msgtype":"m.text"},"ts":1721413059246,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$xe6fU9AJBTp_p2XUtoBXQycY20te4YVfET1WK1ldaZU"},
{"content":{"body":"The idea is, there is no property for the registration time (it just gets run in that snapshot) and there is a property for this causal one (often null, but the rules for filling it are complex and evolving)","msgtype":"m.text"},"ts":1721413070539,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SmtyP1RNwZEjhJkWgT1b4WhKbfTzGZmf0-wZzF-tBR8"},
{"content":{"body":"We could also expose the registration time","msgtype":"m.text"},"ts":1721413077211,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-20vgrd_oijKLLhZkaPMOcz6YKL6Lc8Af2DrMpp6boo"},
{"content":{"body":"On the other hand, if (say) we wanted to expose the .sendSnapshot for XHR events, that could be a different property with different rules","m.mentions":{},"msgtype":"m.text"},"ts":1721413081499,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$QBvMB1FVgSTPtk08X1AP29IxSQ3ErTOIIKbDqmEeYFM"},
{"content":{"body":"Causal snapshots are just inherently complex but they may be useful ","format":"org.matrix.custom.html","formatted_body":"Causal snapshots are just inherently complex but they may be useful","msgtype":"m.text"},"ts":1721413089071,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yh-pCJ0tQ0KVLsMIpg-LjNiYX7gp5o-7diqOPWagdRs"},
{"content":{"body":"There are some subtleties like timers which we implement and so those should probably follow the spec for how flow works, but _technically_ we implement those ourselves so we can violate the spec a bit if we need to for our use case. 😅","format":"org.matrix.custom.html","formatted_body":"There are some subtleties like timers which we implement and so those should probably follow the spec for how flow works, but <em>technically</em> we implement those ourselves so we can violate the spec a bit if we need to for our use case. 😅","m.mentions":{},"msgtype":"m.text"},"ts":1721413089622,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$Q2yXn17trIys_QKm-M9mU6S25KLbj6f9DN_RLgdBE0s"},
{"content":{"body":"> <@stephenhicks:matrix.org> so if it's anything other than \"the snapshot when the event was (created|dispatched)\" then it should be a _different_ property\n\nFor browser-internal asynchronous events, this \"creation/dispatch time\" would be propagated browser-internally, as if there were awaits inside the browser","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$XRgWvSwors9YxqyN9NlqwIlMKwxzwnoiR-OEr4JUudA?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>so if it's anything other than \"the snapshot when the event was (created|dispatched)\" then it should be a <em>different</em> property</blockquote></mx-reply>For browser-internal asynchronous events, this \"creation/dispatch time\" would be propagated browser-internally, as if there were awaits inside the browser","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XRgWvSwors9YxqyN9NlqwIlMKwxzwnoiR-OEr4JUudA"}},"msgtype":"m.text"},"ts":1721413099220,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$GoHd2vIkFSWzcYQkwi9viiLbbHIYH7A-40qlbzukSDk"},
{"content":{"body":"* We could also expose the registration time snapshot as a property","m.new_content":{"body":"We could also expose the registration time snapshot as a property","msgtype":"m.text"},"m.relates_to":{"event_id":"$-20vgrd_oijKLLhZkaPMOcz6YKL6Lc8Af2DrMpp6boo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721413104016,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$icGm4Vr0l1a-EnynLW02bzQVzphJOp3pleyvZ7AtlOg"},
{"content":{"body":"for XHR, you could imagine `.send()` as starting a background fetch, and creating the event after that await","format":"org.matrix.custom.html","formatted_body":"for XHR, you could imagine <code>.send()</code> as starting a background fetch, and creating the event after that await","m.mentions":{},"msgtype":"m.text"},"ts":1721413120799,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$IPNEVrvRrfY8TErz8lCBTy3vLRWKz7CW6g4kAcLajzw"},
{"content":{"body":"> <@abotella:igalia.com> For browser-internal asynchronous events, this \"creation/dispatch time\" would be propagated browser-internally, as if there were awaits inside the browser\n\nThis is exactly the complex case where Anne is worried about trying to do too much at first","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24GoHd2vIkFSWzcYQkwi9viiLbbHIYH7A-40qlbzukSDk\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>For browser-internal asynchronous events, this \"creation/dispatch time\" would be propagated browser-internally, as if there were awaits inside the browser</blockquote></mx-reply>This is exactly the complex case where Anne is worried about trying to do too much at first","m.relates_to":{"m.in_reply_to":{"event_id":"$GoHd2vIkFSWzcYQkwi9viiLbbHIYH7A-40qlbzukSDk"}},"msgtype":"m.text"},"ts":1721413135724,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vtcu2N6mQkE0lFrupGvCgb6GtT5nC6fEd56egnmvZN0"},
{"content":{"body":"> <@abotella:igalia.com> for XHR, you could imagine `.send()` as starting a background fetch, and creating the event after that await\n\nyes, which is why I don't see it as appropriate to use the same snapshot property for this use case","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$IPNEVrvRrfY8TErz8lCBTy3vLRWKz7CW6g4kAcLajzw?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>for XHR, you could imagine <code>.send()</code> as starting a background fetch, and creating the event after that await</blockquote></mx-reply>yes, which is why I don't see it as appropriate to use the same snapshot property for this use case","m.mentions":{"user_ids":["@abotella:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$IPNEVrvRrfY8TErz8lCBTy3vLRWKz7CW6g4kAcLajzw"}},"msgtype":"m.text"},"ts":1721413158274,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$XiHWTYQh_pNZMKVeGdPat4Hg-ABrMCPmc4JOFdBpvIM"},
{"content":{"body":"We could make two properties, I was just talking about the causal one","msgtype":"m.text"},"ts":1721413178199,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zjJiguD5xb_iecpuzmUcS-mjRIxFy-sOdKHpf8zGf0U"},
{"content":{"body":"I think \"causal\" is too loaded a name","m.mentions":{},"msgtype":"m.text"},"ts":1721413191359,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$nKh5ySr1DszorJ6QnKgsEQr9ka4RkLIeXfS3bJy4Pcg"},
{"content":{"body":"Ugh I don’t care what we call it, the complex one","msgtype":"m.text"},"ts":1721413213968,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PyVSeY7m6voamAzDbF1yO8P6_44Vp0hT4-CMUP7_I3k"},
{"content":{"body":"I just thought there was no need to expose the registration time snapshot in a property","msgtype":"m.text"},"ts":1721413249826,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$43FCqREWpnmlCCx5lzNC3HBdRAj4YNBCAmd1Eh_sod0"},
{"content":{"body":"Since we are already running the event there","msgtype":"m.text"},"ts":1721413257331,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5u0RGw2u2WALnwouXlge3q5-VhLi2bPfbaQl1yK18HE"},
{"content":{"body":"> <@stephenhicks:matrix.org> yes, which is why I don't see it as appropriate to use the same snapshot property for this use case\n\nso if you were trying to polyfill XHR based on fetch (maybe to run some browser code on Node.js), you'd have to change the value of those properties?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$XiHWTYQh_pNZMKVeGdPat4Hg-ABrMCPmc4JOFdBpvIM?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>yes, which is why I don't see it as appropriate to use the same snapshot property for this use case</blockquote></mx-reply>so if you were trying to polyfill XHR based on fetch (maybe to run some browser code on Node.js), you'd have to change the value of those properties?","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XiHWTYQh_pNZMKVeGdPat4Hg-ABrMCPmc4JOFdBpvIM"}},"msgtype":"m.text"},"ts":1721413263891,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$O0C-csAt_2ojL9dCGmRR7sNP8CrYscEprbZuHBlgC9g"},
{"content":{"body":"But we could if it is useful ","format":"org.matrix.custom.html","formatted_body":"But we could if it is useful","msgtype":"m.text"},"ts":1721413268538,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xws0xtp2TKgTH99QWVL0hG1ETmxQbh8Fr3RUyo5VDQU"},
{"content":{"body":"but that's what I'm saying - we've simplified the rules for which snapshot to run in to _not_ be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object","format":"org.matrix.custom.html","formatted_body":"but that's what I'm saying - we've simplified the rules for which snapshot to run in to <em>not</em> be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object","m.mentions":{},"msgtype":"m.text"},"ts":1721413286454,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$RfJBAXwf8nWmGHwgVa3IWMoIb4LmClB7JoGuplk_ED4"},
{"content":{"body":"> <@littledan:matrix.org> I just thought there was no need to expose the registration time snapshot in a property\n\nwho's talking about registration snapshot as a property?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$43FCqREWpnmlCCx5lzNC3HBdRAj4YNBCAmd1Eh_sod0?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I just thought there was no need to expose the registration time snapshot in a property</blockquote></mx-reply>who's talking about registration snapshot as a property?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$43FCqREWpnmlCCx5lzNC3HBdRAj4YNBCAmd1Eh_sod0"}},"msgtype":"m.text"},"ts":1721413340618,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$HkSiB68eMneDCkp85husD5_-z_ecSDrL7l8VDn9sLqk"},
{"content":{"body":"I think part of the problem is that AsyncContext seems to be viewed as an isolated data type rather than a runtime feature. For example, I went through and watched all the SES review meetings the other day and they circled a whole lot around the idea of the internal context map being a mutable global, but if you consider it as a runtime-level thing there are _lots_ of mutable globals. They eventually figured out it's like passing an implicit parameter, but didn't get _quite_ so far as realizing that it's essentially just a reserved register for passing context same as you would do for passing lexical scope.","format":"org.matrix.custom.html","formatted_body":"I think part of the problem is that AsyncContext seems to be viewed as an isolated data type rather than a runtime feature. For example, I went through and watched all the SES review meetings the other day and they circled a whole lot around the idea of the internal context map being a mutable global, but if you consider it as a runtime-level thing there are <em>lots</em> of mutable globals. They eventually figured out it's like passing an implicit parameter, but didn't get <em>quite</em> so far as realizing that it's essentially just a reserved register for passing context same as you would do for passing lexical scope.","m.mentions":{},"msgtype":"m.text"},"ts":1721413381344,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$MDBarK4jfI9yFx9tTb2vjJcy7cne6CB0bKeXLGeY0fc"},
{"content":{"body":"And for through flow, it's the same as just having an extra reserved register for multiple-return with one return value reserved for outward flowing context.","m.mentions":{},"msgtype":"m.text"},"ts":1721413450997,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$77dYQ1s2hJ__LWreuNk9KuVFxUgTVglc7Y8e56s-PKc"},
{"content":{"body":"If you think of it at the level of being a runtime feature the internals of the type actually become kind of irrelevant from the SES perspective.","m.mentions":{},"msgtype":"m.text"},"ts":1721413576515,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$NrkAYHxNjrf0UoiMSot6jXyS2r3urAbpg4PEgIUvBsg"},
{"content":{"body":"> <@stephenhicks:matrix.org> but that's what I'm saying - we've simplified the rules for which snapshot to run in to _not_ be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object\n\nin every case I've looked at, when there is a synchronous dispatch context, there is no asynchronous dispatch context","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$RfJBAXwf8nWmGHwgVa3IWMoIb4LmClB7JoGuplk_ED4?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>but that's what I'm saying - we've simplified the rules for which snapshot to run in to <em>not</em> be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object</blockquote></mx-reply>in every case I've looked at, when there is a synchronous dispatch context, there is no asynchronous dispatch context","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RfJBAXwf8nWmGHwgVa3IWMoIb4LmClB7JoGuplk_ED4"}},"msgtype":"m.text"},"ts":1721413589232,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Uts1tTLMZmRLv1MX8jgrzAdzHHNXQ_Z4_oC3KQ5b8IM"},
{"content":{"body":"so it would be two properties where at least one of them would always be null","m.mentions":{},"msgtype":"m.text"},"ts":1721413602249,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$TB2bys1D4vJwL-BdUt5sC9phqm6SKnJ9OQNn2x8aaY0"},
{"content":{"body":"> <@stephenhicks:matrix.org> but that's what I'm saying - we've simplified the rules for which snapshot to run in to _not_ be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object\n\n * in every case I've looked at, when there is a synchronous dispatch context, there is no relevant asynchronous dispatch context","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$RfJBAXwf8nWmGHwgVa3IWMoIb4LmClB7JoGuplk_ED4?via=igalia.com&amp;via=matrix.org&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>but that's what I'm saying - we've simplified the rules for which snapshot to run in to <em>not</em> be complex, I think we can do the same for these properties by keeping them similarly well-defined, and deferring the logic of selecting which one is needed to the holder of the event object</blockquote></mx-reply> * in every case I've looked at, when there is a synchronous dispatch context, there is no relevant asynchronous dispatch context","m.mentions":{},"m.new_content":{"body":"in every case I've looked at, when there is a synchronous dispatch context, there is no relevant asynchronous dispatch context","format":"org.matrix.custom.html","formatted_body":"in every case I've looked at, when there is a synchronous dispatch context, there is no relevant asynchronous dispatch context","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Uts1tTLMZmRLv1MX8jgrzAdzHHNXQ_Z4_oC3KQ5b8IM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721413632978,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$r5fZXGepiuNXZr_Jw7p78XMdUIhOGd0_VfVWWuqWAos"},
{"content":{"body":"Considering it at the runtime level also makes the context segments between awaits make a lot more sense as you can then visualize it alongside the execution DAG and flowing context along the same edges as the execution data would flow.","m.mentions":{},"msgtype":"m.text"},"ts":1721413690458,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$xlgDXwwkQun4D6OeGnKuP6h5zlgClTS13JwRzr_XqsM"},
{"content":{"body":"Context is very much a _runtime_ feature, _not_ a data type.","format":"org.matrix.custom.html","formatted_body":"Context is very much a <em>runtime</em> feature, <em>not</em> a data type.","m.mentions":{},"msgtype":"m.text"},"ts":1721413703278,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$I624nV-o6OjkOJ4P9-8ajSpbvP2qjRf0DBfvwwqEQus"},
{"content":{"body":"> <@abotella:igalia.com> so it would be two properties where at least one of them would always be null\n\nI'm not quite sure I understand what you mean by each of those two terms (synchronous vs asynchronous dispatch context), but could it ever be useful to know which it is?  Or is there value in simplifying the rules so that you don't need to do complex logic to figure out how to populate it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$TB2bys1D4vJwL-BdUt5sC9phqm6SKnJ9OQNn2x8aaY0?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>so it would be two properties where at least one of them would always be null</blockquote></mx-reply>I'm not quite sure I understand what you mean by each of those two terms (synchronous vs asynchronous dispatch context), but could it ever be useful to know which it is?  Or is there value in simplifying the rules so that you don't need to do complex logic to figure out how to populate it?","m.mentions":{"user_ids":["@abotella:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$TB2bys1D4vJwL-BdUt5sC9phqm6SKnJ9OQNn2x8aaY0"}},"msgtype":"m.text"},"ts":1721413715635,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$m-sYHW7Zcp9x96v4mlhQRn0CiGZWQDlc0FzNAczjAeE"},
{"content":{"body":"if you call into some API from JS, and that synchronously dispatches an event, that is a synchronous dispatch context (e.g. `el.click()`)","format":"org.matrix.custom.html","formatted_body":"if you call into some API from JS, and that synchronously dispatches an event, that is a synchronous dispatch context (e.g. <code>el.click()</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1721413762795,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4Zs9sXzUo7tO-OZR56BwXH_71hJbVrdUZHtT4HecZ2Y"},
{"content":{"body":"the async dispatch context is when you call into some API that causes some async operation behind the scenes that eventually fires an event","m.mentions":{},"msgtype":"m.text"},"ts":1721413797942,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$zg3fZzA2mJz-9DECNw9XgeIvCBhh5aWyzaVfmOABWhQ"},
{"content":{"body":"gotcha, so async would be like xhr send.  And in some cases there's neither (like a UI click)","m.mentions":{},"msgtype":"m.text"},"ts":1721413828820,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$ofQCmuIW2TLCAdEsRcM-93FryIgaP3JFL7zlBDM9Y14"},
{"content":{"body":"right","m.mentions":{},"msgtype":"m.text"},"ts":1721413833763,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$gPOnEO0rl7j7LFSUmoB98s5NZQmHuV3Wb4cvgBMc-wE"},
{"content":{"body":"there are some cases where there are multiple possible async dispatch contexts, but those are the extreme minority (in the subset of events I've looked at, this can only happen for media events, and would not be the usual case)","m.mentions":{},"msgtype":"m.text"},"ts":1721413950092,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$qfR2DcYVku92j3wDXiwJav1O7VFMfGeKWhlyArOu--o"},
{"content":{"body":"Is anyone else tracking what I'm saying about trying not to be smart here, though?  It still seems like a pretty big win in terms of future direction/flexibility if we keep the scope narrow by simply saying .dispatchSnapshot is this-and-only-this, and if we need something else in the future, it will be a different property.  This lets us be _very_ consistent with applying it immediately to all events, while still have flexibility to add different snapshots later.  The alternative means we need to be very conservative.","format":"org.matrix.custom.html","formatted_body":"Is anyone else tracking what I'm saying about trying not to be smart here, though?  It still seems like a pretty big win in terms of future direction/flexibility if we keep the scope narrow by simply saying .dispatchSnapshot is this-and-only-this, and if we need something else in the future, it will be a different property.  This lets us be <em>very</em> consistent with applying it immediately to all events, while still have flexibility to add different snapshots later.  The alternative means we need to be very conservative.","m.mentions":{},"msgtype":"m.text"},"ts":1721413992146,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$ccm-bfzRHzqv5aef6Ndzih42pO7vq6xsZ4BAjS75Fjc"},
{"content":{"body":"how many different async dispatch contexts have you identified?","m.mentions":{},"msgtype":"m.text"},"ts":1721414042276,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$fs03jXaCC6tvUuTy5fB61SVEAXU7nkSyeNLe5W97ji0"},
{"content":{"body":"for media events?","m.mentions":{},"msgtype":"m.text"},"ts":1721414058500,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$j9SG8AFWbiBSGJa5FAVTjbYgorTQNiZJKKIpDlNhlbM"},
{"content":{"body":"(in short, I'm allergic to special cases)","m.mentions":{},"msgtype":"m.text"},"ts":1721414061648,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$BXaHWThGjDZsB_EEmlVF2xrlIvRr5TCqvwUkk2ijwbQ"},
{"content":{"body":"no, across all events","m.mentions":{},"msgtype":"m.text"},"ts":1721414069669,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$Etpm8njfaPkK2RktJGW69yfDqtX78221vwVMmtxN-Qg"},
{"content":{"body":"what do you mean by \"different async dispatch contexts\"? how would you categorize them?","m.mentions":{},"msgtype":"m.text"},"ts":1721414097668,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$qbGPrdKcV-oCu3FWqZazQ1VZaKMsCRJhDww5X3wZPsE"},
{"content":{"body":"e.g. xhr send would be one, media events is one or a few","m.mentions":{},"msgtype":"m.text"},"ts":1721414130634,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$8fEQVc6-zqGQMfN8Evlt7GVmwzCX_fUFvlA-eoMR6v8"},
{"content":{"body":"what other events have dispatches triggered asynchronously from a concrete point in code?","m.mentions":{},"msgtype":"m.text"},"ts":1721414177171,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$IMTCrAOzK2U1GMQaUuUUbpLURHftEKM_N9gMo9lIRYI"},
{"content":{"body":"are there a bunch more, or is it just a small handful?","m.mentions":{},"msgtype":"m.text"},"ts":1721414206638,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$QgRFf4XhGiCSEEyrGticlNwTCij0--x3Ww29CAyTjEo"},
{"content":{"body":"there are a bunch more","m.mentions":{},"msgtype":"m.text"},"ts":1721414220562,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$NHn0V4qMXy01ouDJ9w6eLRTqUdQ6g-XAFwbu_uHdRyU"},
{"content":{"body":"a lot of events are dispatched asynchronously","m.mentions":{},"msgtype":"m.text"},"ts":1721414234834,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$GpURi1awDKgubs_nib5OikbNx5MTSivtgrkquZb4LiQ"},
{"content":{"body":"e.g. setting `img.src` eventually fires a `load` event","format":"org.matrix.custom.html","formatted_body":"e.g. setting <code>img.src</code> eventually fires a <code>load</code> event","m.mentions":{},"msgtype":"m.text"},"ts":1721414252156,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$YHkU5GyZtxsH48edRGQ68e7hHRCDG0OwLUQIiH-oxU0"}
]