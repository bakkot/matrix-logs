[
{"content":{"body":"Looking over the slides for next weeks discussion around AsyncContext... in particular Mozilla's objections, and specifically the concerns over the niche use case. I wanted to ask if it would be helpful at all for me to discuss the way that the Workers runtime itself is making use of async context propagation for tracing and diagnostics independent of any frameworks and third-party libraries?","m.mentions":{},"msgtype":"m.text"},"ts":1747672871448,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$eTbB0BhFVfkn3bg9uRAbLvbtKD9d3g6erYebSa5Xz_w"},
{"content":{"body":"I think browsers need to hear about _browser_ use cases, and hopefully they were satisfied with the answer about use cases we gave last time (even though I'd like them to confirm at this meeting that that answer was satisfying). I think the main problem now is the implementation complexity ","msgtype":"m.text"},"ts":1747672978973,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$t046NdtV9LhLMqChqLynPR-Wr-6F2FDJItczY4wTdi4"},
{"content":{"body":"Fair, ok, that's what I was thinking but wanted to at least ask","m.mentions":{},"msgtype":"m.text"},"ts":1747673017411,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$bzAAzQEuje1he9WgpIIjtx9Bwrez2eV9gKGOnYgwenU"},
{"content":{"body":"IIRC, CF Workers implements some browser web APIs (as what WinterTC covers). Maybe you'd have thoughts about how the web APIs listed in the slides are implemented with AsyncContext/AsyncLocalStorage on CF Workers? ","m.mentions":{},"msgtype":"m.text"},"ts":1747673263399,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$LjYaUwbKw6-QEbsa0YyfdqN-p56sbSpmoIKbof-M7ws"},
{"content":{"body":"* IIRC, CF Workers implement some browser web APIs (as what WinterTC covers). Maybe you'd have thoughts about how the web APIs listed in the slides are implemented with AsyncContext/AsyncLocalStorage on CF Workers? ","m.mentions":{},"m.new_content":{"body":"IIRC, CF Workers implement some browser web APIs (as what WinterTC covers). Maybe you'd have thoughts about how the web APIs listed in the slides are implemented with AsyncContext/AsyncLocalStorage on CF Workers? ","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$LjYaUwbKw6-QEbsa0YyfdqN-p56sbSpmoIKbof-M7ws","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1747673277622,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$NNlD_-2s8z8XWewNraKk9PzYsauo0jfyV_r--Nz3yRQ"},
{"content":{"body":"yes we do. Currently we don't do anything special for some of the more complicated cases. On `setTimeout`, `setInterval`, and `queueMicrotask` we capture the current context and propagate it, as well as in any promise-based apis. But for the higher level apis like `EventTarget`, streams, etc we have been intentionally waiting on see how this conversation in the committee plays out","format":"org.matrix.custom.html","formatted_body":"yes we do. Currently we don't do anything special for some of the more complicated cases. On <code>setTimeout</code>, <code>setInterval</code>, and <code>queueMicrotask</code> we capture the current context and propagate it, as well as in any promise-based apis. But for the higher level apis like <code>EventTarget</code>, streams, etc we have been intentionally waiting on see how this conversation in the committee plays out","m.mentions":{},"msgtype":"m.text"},"ts":1747673462505,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$_TjDojd7lBGo0xqHrlzSASmw04P3nMceRI35i-XyF0Y"},
{"content":{"body":"fortunately for us we are not heavily dependent on `EventTarget` and we haven't hit many cases with other standard apis where it matters much","format":"org.matrix.custom.html","formatted_body":"fortunately for us we are not heavily dependent on <code>EventTarget</code> and we haven't hit many cases with other standard apis where it matters much","m.mentions":{},"msgtype":"m.text"},"ts":1747673498127,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$lxeVCz5ZMYYS9uTJ6eYpWeAsaLfoqug_uwMsJX3gta4"},
{"content":{"body":"oh... we also capture and restore the context for unhandled promise rejections","m.mentions":{},"msgtype":"m.text"},"ts":1747673515674,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$8DesZpnw-r--NBLQH-uQJ6Xe5PvO6KOY1fWLg6MCbeU"},
{"content":{"body":"For what is worth, I think although WinterTC includes events and EventTarget, the only specific events it includes are `error`/`unhandledrejection`/`rejectionhandled`","format":"org.matrix.custom.html","formatted_body":"For what is worth, I think although WinterTC includes events and EventTarget, the only specific events it includes are <code>error</code>/<code>unhandledrejection</code>/<code>rejectionhandled</code>","m.mentions":{},"msgtype":"m.text"},"ts":1747673528480,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$AseplESBSwmSFMJfYlmFDBG2pE3T-Jok4fcNuh1f0OQ"},
{"content":{"body":"well, and AbortSignal's abort event, which doesn't need propagation because it's fired synchronously","m.mentions":{},"msgtype":"m.text"},"ts":1747673556848,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$_AXSHJzY2n48DVan3mKLHpUphySzkigFnBdn22S6I_g"},
{"content":{"body":"for `UnderlyingSink` and `UnderlyingSource` in streams, it is possible to polyfill using `AsyncContext.snapshot` (I've done similar with `AsyncLocalStorage`).  It's not all that difficult to get close to exactly what you want there","format":"org.matrix.custom.html","formatted_body":"for <code>UnderlyingSink</code> and <code>UnderlyingSource</code> in streams, it is possible to polyfill using <code>AsyncContext.snapshot</code> (I've done similar with <code>AsyncLocalStorage</code>).  It's not all that difficult to get close to exactly what you want there","m.mentions":{},"msgtype":"m.text"},"ts":1747673633089,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$fzhk_TAfKVVIG2R9G9ZacW5IqVNu9AN0theaOU-vyIw"}
]