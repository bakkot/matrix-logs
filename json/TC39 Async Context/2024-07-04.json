[
{"content":{"body":"> <@littledan:matrix.org> oh yeah I thought we'd use the execution context to hold this kind of thing\n\nwouldn't that mean every time the execution context changes we need to copy the value over","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$BuN-90F5wda2eLAahIh8t4hY7Y-_kZEIbnYfEcb590E?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>oh yeah I thought we&#39;d use the execution context to hold this kind of thing</blockquote></mx-reply>wouldn't that mean every time the execution context changes we need to copy the value over","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BuN-90F5wda2eLAahIh8t4hY7Y-_kZEIbnYfEcb590E"}},"msgtype":"m.text"},"ts":1720055842960,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$AgFLLMs1Ng3ctnBbIlRcQ5qyaVLMHTMPfHjEdljDnio"},
{"content":{"body":"wrt number of variables... should we put bounds on the algorithmic complexity of variable.run/get like we do for Map/Set? ","m.mentions":{},"msgtype":"m.text"},"ts":1720056094794,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$DDKXmsaX3vy9YO7G_9wELQFkK9U11yD_9Ez17u9TG-c"},
{"content":{"body":"> <@devsnek:matrix.org> wrt number of variables... should we put bounds on the algorithmic complexity of variable.run/get like we do for Map/Set? \n\nYou mean, tell everyone they are expected to optimize for >100 variables? I am not sure; maybe it is OK for people to decide that they are slow. We don’t do this for objects.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24DDKXmsaX3vy9YO7G_9wELQFkK9U11yD_9Ez17u9TG-c\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>wrt number of variables... should we put bounds on the algorithmic complexity of variable.run/get like we do for Map/Set? </blockquote></mx-reply>You mean, tell everyone they are expected to optimize for &gt;100 variables? I am not sure; maybe it is OK for people to decide that they are slow. We don’t do this for objects.","m.relates_to":{"m.in_reply_to":{"event_id":"$DDKXmsaX3vy9YO7G_9wELQFkK9U11yD_9Ez17u9TG-c"}},"msgtype":"m.text"},"ts":1720060805555,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6g1YzyYVEKGv3FOff8C2ubo70Xgi18LeEKvGyfo1x4A"},
{"content":{"body":"well specifically just because we specify them with lists","m.mentions":{},"msgtype":"m.text"},"ts":1720060847714,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$HZdVzVXb80bii-y-pYEehyWgq47W0ogzhJrAQLzf9tM"},
{"content":{"body":"> <@devsnek:matrix.org> wouldn't that mean every time the execution context changes we need to copy the value over\n\nI think in this throw case you don’t want to copy","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24AgFLLMs1Ng3ctnBbIlRcQ5qyaVLMHTMPfHjEdljDnio\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>wouldn't that mean every time the execution context changes we need to copy the value over</blockquote></mx-reply>I think in this throw case you don’t want to copy","m.relates_to":{"m.in_reply_to":{"event_id":"$AgFLLMs1Ng3ctnBbIlRcQ5qyaVLMHTMPfHjEdljDnio"}},"msgtype":"m.text"},"ts":1720060855237,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZG5vSCB2JosHAYgn5-BXHziR7Y3yr5DYc4ilLP56Cs0"},
{"content":{"body":"> <@devsnek:matrix.org> well specifically just because we specify them with lists\n\nWhat if we include a note saying “btw you can implement this with a hamt”","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24HZdVzVXb80bii-y-pYEehyWgq47W0ogzhJrAQLzf9tM\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>well specifically just because we specify them with lists</blockquote></mx-reply>What if we include a note saying “btw you can implement this with a hamt”","m.relates_to":{"m.in_reply_to":{"event_id":"$HZdVzVXb80bii-y-pYEehyWgq47W0ogzhJrAQLzf9tM"}},"msgtype":"m.text"},"ts":1720060885840,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ltf4O2SfNr3eoHJI8gxxewq7TojlfXuoiGt13n50psw"},
{"content":{"body":"> Maps must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this specification is only intended to describe the required observable semantics of Maps. It is not intended to be a viable implementation model.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Maps must be implemented using either hash tables or other mechanisms that, on average, provide access times that are sublinear on the number of elements in the collection. The data structure used in this specification is only intended to describe the required observable semantics of Maps. It is not intended to be a viable implementation model.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1720061142402,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$0Tmc1KQaJgu8kMmc00Md5VUVat6SJxz28M1H2pWqInQ"},
{"content":{"body":"something like this could be reasonable i think","m.mentions":{},"msgtype":"m.text"},"ts":1720061201056,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$tgXMppoPcctlhTQWv4cf8uK14H7ypRVyID6pCHE0Dns"},
{"content":{"body":"i guess i can open an issue","m.mentions":{},"msgtype":"m.text"},"ts":1720061203589,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Swx_s7QEDYLphoty0jqFNrgYjx2X7ydeO03NJNrwNm4"},
{"content":{"body":"> <@devsnek:matrix.org> wrt number of variables... should we put bounds on the algorithmic complexity of variable.run/get like we do for Map/Set?\n\nMy understanding is that v8 is intending to actually use a linked list, under the assumption that the number will be pretty small, so requiring sublinear complexity may be a (bit of a) nonstarter for them.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$DDKXmsaX3vy9YO7G_9wELQFkK9U11yD_9Ez17u9TG-c?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>wrt number of variables... should we put bounds on the algorithmic complexity of variable.run/get like we do for Map/Set? </blockquote></mx-reply>My understanding is that v8 is intending to actually use a linked list, under the assumption that the number will be pretty small, so requiring sublinear complexity may be a (bit of a) nonstarter for them.","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DDKXmsaX3vy9YO7G_9wELQFkK9U11yD_9Ez17u9TG-c"}},"msgtype":"m.text"},"ts":1720062130476,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$JtNEBtST6GzAz3k-ouhWui5tmIyDdri6wZ-fMD6p5VQ"},
{"content":{"body":"they're planning to start with a linked list but they've outlined a few other implementation strategies to try next","m.mentions":{},"msgtype":"m.text"},"ts":1720062164459,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$EtJI0-wKfWf9TEmrAyfjPcSxmZigCRf47VYCh3zgmGw"},
{"content":{"body":"either way, if we expect react apps to have 100 of these, O(n) might not be great","m.mentions":{},"msgtype":"m.text"},"ts":1720062181562,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QyKh8srN3VWFZQMDENzfrjEnYcx3NxDVJruBpVly3L8"},
{"content":{"body":"> <@devsnek:matrix.org> wouldn't that mean every time the execution context changes we need to copy the value over\n\nIIUC, it would make function calls slightly more expensive (one more pointer to copy) but async context switches less expensive.  But since function calls are likely more common, it seems like the right trade-off to put it on the agent record.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$AgFLLMs1Ng3ctnBbIlRcQ5qyaVLMHTMPfHjEdljDnio?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>wouldn't that mean every time the execution context changes we need to copy the value over</blockquote></mx-reply>IIUC, it would make function calls slightly more expensive (one more pointer to copy) but async context switches less expensive.  But since function calls are likely more common, it seems like the right trade-off to put it on the agent record.","m.mentions":{"user_ids":["@devsnek:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$AgFLLMs1Ng3ctnBbIlRcQ5qyaVLMHTMPfHjEdljDnio"}},"msgtype":"m.text"},"ts":1720062251719,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$e9seq_oRSBHxtZFzeoh2hNAIp1Oa2JyYrbYnOuj20BI"},
{"content":{"body":"> <@devsnek:matrix.org> either way, if we expect react apps to have 100 of these, O(n) might not be great\n\nEven if there's 100s, if they're not all active at once it may not matter.  I'd expect any variables involved in rendering one component shouldn't escape into unrelated calls (under the current flow-around semantics).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$QyKh8srN3VWFZQMDENzfrjEnYcx3NxDVJruBpVly3L8?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>either way, if we expect react apps to have 100 of these, O(n) might not be great</blockquote></mx-reply>Even if there's 100s, if they're not all active at once it may not matter.  I'd expect any variables involved in rendering one component shouldn't escape into unrelated calls (under the current flow-around semantics).","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QyKh8srN3VWFZQMDENzfrjEnYcx3NxDVJruBpVly3L8"}},"msgtype":"m.text"},"ts":1720062427391,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$e_tyoAVvxaa5ul-JT7ubJP_qRmqsJU1BCRXwdvLpH9c"},
{"content":{"body":"But I'm not against speccing defensively here","m.mentions":{},"msgtype":"m.text"},"ts":1720062470604,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$Dvr2Hx1dStYBoR3PaEWLV6rv2EEptzCPlc47mmtF6E0"}
]