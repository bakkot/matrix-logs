[
{"content":{"body":"> <@devsnek:matrix.org> either way, if we expect react apps to have 100 of these, O(n) might not be great\n\nReact Contexts do not need AC, and I don’t think they’re even compatible beacuse of React’s fiber batching mechanism.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24QyKh8srN3VWFZQMDENzfrjEnYcx3NxDVJruBpVly3L8\">In reply to</a><a href=\"https://matrix.to/#/%40devsnek%3Amatrix.org\">@devsnek:matrix.org</a><br />either way, if we expect react apps to have 100 of these, O(n) might not be great</blockquote></mx-reply>React Contexts do not need AC, and I don’t think they’re even compatible beacuse of React’s fiber batching mechanism.","m.relates_to":{"m.in_reply_to":{"event_id":"$QyKh8srN3VWFZQMDENzfrjEnYcx3NxDVJruBpVly3L8"}},"msgtype":"m.text"},"ts":1720465467649,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$sCZ1IH7ok3ZVU2ipJTfcfBndLYBCABpkYdNIKna7zcA"},
{"content":{"body":"> <@stephenhicks:matrix.org> IIUC, it would make function calls slightly more expensive (one more pointer to copy) but async context switches less expensive.  But since function calls are likely more common, it seems like the right trade-off to put it on the agent record.\n\nSorry, what new thing are we putting on the agent record?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24e9seq_oRSBHxtZFzeoh2hNAIp1Oa2JyYrbYnOuj20BI\">In reply to</a><a href=\"https://matrix.to/#/%40stephenhicks%3Amatrix.org\">@stephenhicks:matrix.org</a><br />IIUC, it would make function calls slightly more expensive (one more pointer to copy) but async context switches less expensive.  But since function calls are likely more common, it seems like the right trade-off to put it on the agent record.</blockquote></mx-reply>Sorry, what new thing are we putting on the agent record?","m.relates_to":{"m.in_reply_to":{"event_id":"$e9seq_oRSBHxtZFzeoh2hNAIp1Oa2JyYrbYnOuj20BI"}},"msgtype":"m.text"},"ts":1720465562477,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$lZmdyH2DrZ22Aaph_WE4M-Zecqp-suW0Df-LbcEooBA"},
{"content":{"body":"The proposal as written puts `[[AsyncContextMapping]]` on the agent record, and #95 also adds `[[ThrowAsyncContextMapping]]`.","format":"org.matrix.custom.html","formatted_body":"The proposal as written puts <code>[[AsyncContextMapping]]</code> on the agent record, and #95 also adds <code>[[ThrowAsyncContextMapping]]</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1720466796173,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$73rP19Bx1WJpF9bM90S1SlVoNXxqgi9bKczpwkucgig"},
{"content":{"body":"to what extent that's just an implementation detail is unclear to me - if an engine wanted to hold it on the execution context, that might be just as feasible?","m.mentions":{},"msgtype":"m.text"},"ts":1720466863101,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$0HeecwFEZh0wZLOan-4BLHFRsBeGiDwGDFN0bmFwEqc"},
{"content":{"body":"I think for `[[AsyncContextMapping]]`, it'd be implementable as a property of the execution context","format":"org.matrix.custom.html","formatted_body":"I think for <code>[[AsyncContextMapping]]</code>, it'd be implementable as a property of the execution context","m.mentions":{},"msgtype":"m.text"},"ts":1720467960340,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Vk54ixQyi7DhAcQxdtRYZBhaidJrBmRFE6KbIX7zoa4"},
{"content":{"body":"for `[[ThrowAsyncContextMapping]]` too I think (or I hope)","format":"org.matrix.custom.html","formatted_body":"for <code>[[ThrowAsyncContextMapping]]</code> too I think (or I hope)","m.mentions":{},"msgtype":"m.text"},"ts":1720468038694,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$eKNSgGCtxG1V859l3F0RsxJJY4jvvSkWaObBckZiXSQ"},
{"content":{"body":"HTML needs abrupt completions to hold information related to when the exception was thrown, that currently isn't passed along in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1720468098544,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$2lT2sXkDJRIX2RD17XizyUpySM910x5YplxutTnlupQ"},
{"content":{"body":"the idea would be that in a future where that is added to the JS spec, the throw context would be part of that data","m.mentions":{},"msgtype":"m.text"},"ts":1720468121871,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$3H41n21aqsfLRwR9zqJ9N8hE53IOkHliH8eXltxYpnA"},
{"content":{"body":"I haven't fully checked whether the behavior with #95 would be equivalent to that, but ideally it would be","m.mentions":{},"msgtype":"m.text"},"ts":1720468189169,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$EewSVTZjXk1X-rO1gjf79Fjyl5RuG3WID5n50IdD5tk"},
{"content":{"body":"> <@jridgewell:matrix.org> React Contexts do not need AC, and I don’t think they’re even compatible beacuse of React’s fiber batching mechanism.\n\nCan you elaborate on this? I know it doesn’t *need* it, but I thought it might be a good fit if async await were to ever be enabled on the client side in conjunction with hooks","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24sCZ1IH7ok3ZVU2ipJTfcfBndLYBCABpkYdNIKna7zcA\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>React Contexts do not need AC, and I don’t think they’re even compatible beacuse of React’s fiber batching mechanism.</blockquote></mx-reply>Can you elaborate on this? I know it doesn’t <em>need</em> it, but I thought it might be a good fit if async await were to ever be enabled on the client side in conjunction with hooks","m.relates_to":{"m.in_reply_to":{"event_id":"$sCZ1IH7ok3ZVU2ipJTfcfBndLYBCABpkYdNIKna7zcA"}},"msgtype":"m.text"},"ts":1720468452685,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4bmyLuQtVXKLKQWy1ZeuOHX2Nt1c66x0rwc3ZnyFr04"}
]