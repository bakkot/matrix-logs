[
{"content":{"body":"sure. low bar, though.","msgtype":"m.text"},"ts":1679617816617,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lA_xAhKGZbCymXkP79FLVbZZs0YB18q8MYobmmmhz4w"},
{"content":{"body":"A lesson: don’t talk about DI with respect to TC39 proposals ","format":"org.matrix.custom.html","formatted_body":"A lesson: don’t talk about DI with respect to TC39 proposals","msgtype":"m.text"},"ts":1679635623448,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XRuETuNbPDLQA2lAeOvTW_A4W5sdBXirkJhNVFBOPE4"},
{"content":{"body":"Overall, really great job in the presentation, Justin Ridgewell and Chengzhong Wu! And great work supporting this proposal all around from everyone else. I think the next steps are:\n- For next meeting, we should have a presentation which focuses on use cases, being both broad and concrete. Maybe Chengzhong Wu could give this talk, based on his past presentation. [If we make progress on any of the below items before next meeting, we could *briefly* explain that, but the focus would be the overall motivation, which we still haven't fully gotten across to the committee.]\n- Chengzhong Wu will schedule a regular call to discuss this proposal and its evolution. (Should this be monthly? Biweekly?) We can check up on progress on various work items, and talk through what resolution we should take on the various items that Justin presented to the committee, and once we come to a resolution, assigning different spec-writing tasks to different people. This can also be where we dig into the \"merging\" idea that Ben Newman (Apollo, @benjamn on GH) and Mathieu Hofman have raised. Remember that, at Stage 2, it remains OK for us to land PRs without waiting for committee consensus.\n- On the host integration: Andreu, Yoav, ms2ger and Chengzhong to work on a draft \"processing model\" for HTML which explains how task attribution/AsyncContext works. This might involve iterating on the proposed layering, and might involve treating things like the incumbent Realm as analogous to an AsyncContext variable, etc. Several use cases (both the built-in cases that Yoav is looking at, and the JS-level AsyncContext cases that the rest of us here are thinking about) should be considered in terms of what \"processing model\" would work best.\n- Implementation: Andreu Botella and Chengzhong Wu to collaborate on an implementation in V8, potentially informed by pending feedback from shu about what performance concerns the V8 team might have. This process should start with a design doc to be reviewed in v8-dev, like all major V8 projects; the design doc should include the V8 API changes, which Yoav can review. Once this has a complete CL draft, they will work with Yoav Weiss to integrate it with TaskAttribution. It's currently unclear yet whether this will work with the existing TaskAttribution implementation or if significant changes are required; it might be at this point that we all realize that it'd be a lot easier to do this as a Web API, and change course. Maybe people could work on implementing this feature in a second browser as well, and/or test262+web-platform-test tests.","format":"org.matrix.custom.html","formatted_body":"<p>Overall, really great job in the presentation, <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> and <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a>! And great work supporting this proposal all around from everyone else. I think the next steps are:</p>\n<ul>\n<li>For next meeting, we should have a presentation which focuses on use cases, being both broad and concrete. Maybe <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> could give this talk, based on his past presentation. [If we make progress on any of the below items before next meeting, we could <em>briefly</em> explain that, but the focus would be the overall motivation, which we still haven't fully gotten across to the committee.]</li>\n<li><a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> will schedule a regular call to discuss this proposal and its evolution. (Should this be monthly? Biweekly?) We can check up on progress on various work items, and talk through what resolution we should take on the various items that Justin presented to the committee, and once we come to a resolution, assigning different spec-writing tasks to different people. This can also be where we dig into the &quot;merging&quot; idea that <a href=\"https://matrix.to/#/@benjamn:matrix.org\">Ben Newman (Apollo, @benjamn on GH)</a> and <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> have raised. Remember that, at Stage 2, it remains OK for us to land PRs without waiting for committee consensus.</li>\n<li>On the host integration: Andreu, Yoav, ms2ger and Chengzhong to work on a draft &quot;processing model&quot; for HTML which explains how task attribution/AsyncContext works. This might involve iterating on the proposed layering, and might involve treating things like the incumbent Realm as analogous to an AsyncContext variable, etc. Several use cases (both the built-in cases that Yoav is looking at, and the JS-level AsyncContext cases that the rest of us here are thinking about) should be considered in terms of what &quot;processing model&quot; would work best.</li>\n<li>Implementation: <a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a> and <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> to collaborate on an implementation in V8, potentially informed by pending feedback from <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> about what performance concerns the V8 team might have. This process should start with a design doc to be reviewed in v8-dev, like all major V8 projects; the design doc should include the V8 API changes, which Yoav can review. Once this has a complete CL draft, they will work with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> to integrate it with TaskAttribution. It's currently unclear yet whether this will work with the existing TaskAttribution implementation or if significant changes are required; it might be at this point that we all realize that it'd be a lot easier to do this as a Web API, and change course. Maybe people could work on implementing this feature in a second browser as well, and/or test262+web-platform-test tests.</li>\n</ul>\n","msgtype":"m.text"},"ts":1679698467990,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RGN-3n_QWXQ3fk34c5ymZii2WgnUOGRbe9G0hMEn-Yw"}
]