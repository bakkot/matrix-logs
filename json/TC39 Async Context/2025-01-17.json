[
{"content":{"body":"ðŸ‘‹ Hello team!\n\nI wrote another polyfill for this feature. \nIt works a bit differently that the current one, it works only by intrumenting the Promise object. \n\ncheck it out: https://github.com/iliasbhal/simple-async-context.\nIt satifies the test suite in the repo + some extra tests that I added.\n\nLet me know what you think ;) ","m.mentions":{},"msgtype":"m.text"},"ts":1737096822133,"senderName":"Iliasbhal","senderId":"@iliasbhal:matrix.org","id":"$7t6-lCM3SrboEfrlEnuxo-0aESAQ4xyPyirS0wJHpEw"},
{"content":{"body":"Turns out, they work kind of similary. Few differences here and there:\n\n  - On the strategy used to store data in the context. \n    `simple-async-context` let the garbage collectore reclaim memeory, it won't programmaticaly delete stored data.\n\n  - `simple-async-context` will polyfill timers as well.\n  - The way it instruments Promise is slightly different.","format":"org.matrix.custom.html","formatted_body":"<p>Turns out, they work kind of similary. Few differences here and there:</p>\n<ul>\n<li>\n<p>On the strategy used to store data in the context.<br><code>simple-async-context</code> let the garbage collectore reclaim memeory, it won't programmaticaly delete stored data.</p>\n</li>\n<li>\n<p><code>simple-async-context</code> will polyfill timers as well.</p>\n</li>\n<li>\n<p>The way it instruments Promise is slightly different.</p>\n</li>\n</ul>\n","m.mentions":{},"m.relates_to":{"event_id":"$7t6-lCM3SrboEfrlEnuxo-0aESAQ4xyPyirS0wJHpEw","is_falling_back":true,"m.in_reply_to":{"event_id":"$7t6-lCM3SrboEfrlEnuxo-0aESAQ4xyPyirS0wJHpEw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1737098126075,"senderName":"Iliasbhal","senderId":"@iliasbhal:matrix.org","id":"$47lAzgT_-l2JnoKLZ5I1eiLhXY4v6xPe7_B8O03Y5uc"},
{"content":{"body":"* Turns out, they work kind of similary. Few differences here and there:\n\n- On the strategy used to store data in the context.\n`simple-async-context` let the garbage collectore reclaim memory (hopefully ðŸ˜†), it won't programmaticaly delete stored data.\n- `simple-async-context` will polyfill timers as well.\n- The way it instruments Promise is slightly different.","format":"org.matrix.custom.html","formatted_body":"* <p>Turns out, they work kind of similary. Few differences here and there:</p>\n<ul>\n<li>On the strategy used to store data in the context.<br><code>simple-async-context</code> let the garbage collectore reclaim memory (hopefully ðŸ˜†), it won't programmaticaly delete stored data.</li>\n<li><code>simple-async-context</code> will polyfill timers as well.</li>\n<li>The way it instruments Promise is slightly different.</li>\n</ul>\n","m.mentions":{},"m.new_content":{"body":"Turns out, they work kind of similary. Few differences here and there:\n\n- On the strategy used to store data in the context.\n`simple-async-context` let the garbage collectore reclaim memory (hopefully ðŸ˜†), it won't programmaticaly delete stored data.\n- `simple-async-context` will polyfill timers as well.\n- The way it instruments Promise is slightly different.","format":"org.matrix.custom.html","formatted_body":"<p>Turns out, they work kind of similary. Few differences here and there:</p>\n<ul>\n<li>On the strategy used to store data in the context.<br><code>simple-async-context</code> let the garbage collectore reclaim memory (hopefully ðŸ˜†), it won't programmaticaly delete stored data.</li>\n<li><code>simple-async-context</code> will polyfill timers as well.</li>\n<li>The way it instruments Promise is slightly different.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$47lAzgT_-l2JnoKLZ5I1eiLhXY4v6xPe7_B8O03Y5uc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737098191499,"senderName":"Iliasbhal","senderId":"@iliasbhal:matrix.org","id":"$q5dxm-2JwrvRvXBIvQpk3eGoeycOGKOkww1k3S6sBvg"}
]