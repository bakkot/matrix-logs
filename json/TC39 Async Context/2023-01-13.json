[
{"content":{"org.matrix.msc1767.message":[{"body":"Justin Ridgewell: Could you describe the semantics you're thinking of in the cross-realm case?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: Could you describe the semantics you're thinking of in the cross-realm case?","mimetype":"text/html"}],"body":"Justin Ridgewell: Could you describe the semantics you're thinking of in the cross-realm case?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: Could you describe the semantics you're thinking of in the cross-realm case?"},"ts":1673624008139,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$f-Hw8wlomN2B-kxicxvVFDk1RhhbC9pQbJofe-I8w-4"},
{"content":{"org.matrix.msc1767.text":"(or if there's some JS implementation, point me to it)","body":"(or if there's some JS implementation, point me to it)","msgtype":"m.text"},"ts":1673624019903,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WtYTMm2z7N3r9QJ9KMaqj5eddrPbACv9wq6m-cMmYgU"},
{"content":{"msgtype":"m.text","body":"It would require the polyfill to have access to the other realm"},"ts":1673625828893,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4plOqH9vgD9QLaLrUqgIe77FLBUMIC88wdeKYMupccg"},
{"content":{"org.matrix.msc1767.text":"Sure, this is a general thing about polyfills that makes them tend to not be spec-complaint","body":"Sure, this is a general thing about polyfills that makes them tend to not be spec-complaint","msgtype":"m.text"},"ts":1673626152630,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$00FUH3Y7K_jTlIQcJ9ONBQeLtml6sMW5DuefLvscyNU"},
{"content":{"org.matrix.msc1767.message":[{"body":"What are the semantics that you want Realm-separated `wrap` to have at runtime? I just don't know what you're proposing.","mimetype":"text/plain"},{"body":"What are the semantics that you want Realm-separated <code>wrap</code> to have at runtime? I just don't know what you're proposing.","mimetype":"text/html"}],"body":"What are the semantics that you want Realm-separated `wrap` to have at runtime? I just don't know what you're proposing.","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"What are the semantics that you want Realm-separated <code>wrap</code> to have at runtime? I just don't know what you're proposing."},"ts":1673626172103,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Jr9dd5I-1qVWiJEt6BuED5qIqWnmPkabn3rw2oRKtnw"},
{"content":{"org.matrix.msc1767.message":[{"body":"like, would Promise.prototype.then do a Realm-separated `wrap` or a cross-Realm one?","mimetype":"text/plain"},{"body":"like, would Promise.prototype.then do a Realm-separated <code>wrap</code> or a cross-Realm one?","mimetype":"text/html"}],"body":"like, would Promise.prototype.then do a Realm-separated `wrap` or a cross-Realm one?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"like, would Promise.prototype.then do a Realm-separated <code>wrap</code> or a cross-Realm one?"},"ts":1673626228767,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Jq8CbIFX-8ohlJgUkQhNNhq_J4neUeXRWX1xyg5n0Bw"},
{"content":{"org.matrix.msc1767.text":"without Realm separation, each microtask queue item can have a single word added to it, which is \"what is the whole group of AsyncContexts to restore during this microtask queue item\". If we're being Realm-specific... I don't actually know what this should contain.","body":"without Realm separation, each microtask queue item can have a single word added to it, which is \"what is the whole group of AsyncContexts to restore during this microtask queue item\". If we're being Realm-specific... I don't actually know what this should contain.","msgtype":"m.text"},"ts":1673626321090,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$g36YXUPXLdAcMza8fE1FEoWUjSksoZCK8X3pyzfrE1g"},
{"content":{"msgtype":"m.text","body":"I don’t understand how they would be different. It would still be a single pointer to a map."},"ts":1673626414503,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$1O6wNNcYs-gUNCVKAQQjxLfcNSXlBbR1AUM5auEmtDs"},
{"content":{"org.matrix.msc1767.message":[{"body":"OK, but the map would contain only the async contexts that are in the Realm that called `then`?","mimetype":"text/plain"},{"body":"OK, but the map would contain only the async contexts that are in the Realm that called <code>then</code>?","mimetype":"text/html"}],"body":"OK, but the map would contain only the async contexts that are in the Realm that called `then`?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"OK, but the map would contain only the async contexts that are in the Realm that called <code>then</code>?"},"ts":1673626430658,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VgZ1CI53z8B-JlQjrvmdqlnb53tgLbEqrWqi1dLmQIE"},
{"content":{"org.matrix.msc1767.message":[{"body":"so, synchronously, you could call `otherRealmContext.get()` and get that value, but it'd be lost when you restore the microtask queue item","mimetype":"text/plain"},{"body":"so, synchronously, you could call <code>otherRealmContext.get()</code> and get that value, but it'd be lost when you restore the microtask queue item","mimetype":"text/html"}],"body":"so, synchronously, you could call `otherRealmContext.get()` and get that value, but it'd be lost when you restore the microtask queue item","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"so, synchronously, you could call <code>otherRealmContext.get()</code> and get that value, but it'd be lost when you restore the microtask queue item"},"ts":1673626483611,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-g7CdF4yb-M_FbrAqOiVC4kIS6tBFAF74fBMQitCWVM"},
{"content":{"org.matrix.msc1767.text":"that's the observable difference of being realm-separated","body":"that's the observable difference of being realm-separated","msgtype":"m.text"},"ts":1673626489783,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ATwMVdIeuD2SFBik-4Ku_EvDE9_DaSqmAywMzDnCvx8"},
{"content":{"org.matrix.msc1767.text":"right?","body":"right?","msgtype":"m.text"},"ts":1673626491490,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DTuYghQ43slUDPW0h-HClcjHz0m1GEpYcSCXmwbvbi0"},
{"content":{"msgtype":"m.text","body":"Isn’t that intrinsic to then? Like which globals and environment is it going to resume with?"},"ts":1673626505603,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$bZqXErJHt026XsYCAMlx7cWul6E1l-dd1bfPQ-8gq8w"},
{"content":{"org.matrix.msc1767.message":[{"body":"sure but I imagined this being different from that (since synchronously you can `get` multiple Realms' AsyncContext things)","mimetype":"text/plain"},{"body":"sure but I imagined this being different from that (since synchronously you can <code>get</code> multiple Realms' AsyncContext things)","mimetype":"text/html"}],"body":"sure but I imagined this being different from that (since synchronously you can `get` multiple Realms' AsyncContext things)","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"sure but I imagined this being different from that (since synchronously you can <code>get</code> multiple Realms' AsyncContext things)"},"ts":1673626565955,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qwF9c4yxS6DzMv3FEVQOp8XVyn18xJBkMIGFCQx1aJA"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> so, synchronously, you could call `otherRealmContext.get()` and get that value, but it'd be lost when you restore the microtask queue item\n\nIs this what you are picturing?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$-g7CdF4yb-M_FbrAqOiVC4kIS6tBFAF74fBMQitCWVM?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>so, synchronously, you could call <code>otherRealmContext.get()</code> and get that value, but it'd be lost when you restore the microtask queue item</blockquote></mx-reply>Is this what you are picturing?","mimetype":"text/html"}],"body":"> <@littledan:matrix.org> so, synchronously, you could call `otherRealmContext.get()` and get that value, but it'd be lost when you restore the microtask queue item\n\nIs this what you are picturing?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$-g7CdF4yb-M_FbrAqOiVC4kIS6tBFAF74fBMQitCWVM?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>so, synchronously, you could call <code>otherRealmContext.get()</code> and get that value, but it'd be lost when you restore the microtask queue item</blockquote></mx-reply>Is this what you are picturing?","m.relates_to":{"m.in_reply_to":{"event_id":"$-g7CdF4yb-M_FbrAqOiVC4kIS6tBFAF74fBMQitCWVM"}}},"ts":1673626576176,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5r8xbGCULpzPiYekHHep0NjXgswwRnghMRPWie13v40"},
{"content":{"msgtype":"m.text","body":"Yes, if we choose per realm."},"ts":1673626633982,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$HDeQn-AabgKZIeCADJtYQl0LCuFHmdc7Vii8ZCGl7k0"},
{"content":{"org.matrix.msc1767.text":"OK, now I understand. And so what is the advantage of these semantics, of partitioning the AsyncContexts in this way?","body":"OK, now I understand. And so what is the advantage of these semantics, of partitioning the AsyncContexts in this way?","msgtype":"m.text"},"ts":1673626722503,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YGYrcpTFNOJBkTOF7xLrc-AWisUeZ3uG-kgqBszgQiU"},
{"content":{"body":"> Having it be per-realm or per-agent isn't important to me, I chose realm because it's easiest to implement in JS, I figured it be easy in C++, and it seems the least objectionable (per the dedent caching semantics)","format":"org.matrix.custom.html","msgtype":"m.text","formatted_body":"<blockquote>\n<p>Having it be per-realm or per-agent isn't important to me, I chose realm because it's easiest to implement in JS, I figured it be easy in C++, and it seems the least objectionable (per the dedent caching semantics)</p>\n</blockquote>"},"ts":1673626818269,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zI9Qk00aFajHD0DwYd4vPQOEoOxT2a2-cIqTXgBq1Bw"},
{"content":{"msgtype":"m.text","body":"There’s no real benefit to it this way, it’s just easy"},"ts":1673626835907,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$IZKCvHeFMybKvbzP-2K0KIRHx3_wh9AtyUgq9DOUNK8"},
{"content":{"org.matrix.msc1767.message":[{"body":"One thing it consider is that, in some implementations, this data structure gets a bit complex since you might want to scale up to a large number of `.run` calls nested in each other without that being quadratic (so you don't want to have to clone the whole map for each `.run` call). But I'm not sure whether this argues for Realm-partitioned or global (maybe it's the same?)","mimetype":"text/plain"},{"body":"One thing it consider is that, in some implementations, this data structure gets a bit complex since you might want to scale up to a large number of <code>.run</code> calls nested in each other without that being quadratic (so you don't want to have to clone the whole map for each <code>.run</code> call). But I'm not sure whether this argues for Realm-partitioned or global (maybe it's the same?)","mimetype":"text/html"}],"body":"One thing it consider is that, in some implementations, this data structure gets a bit complex since you might want to scale up to a large number of `.run` calls nested in each other without that being quadratic (so you don't want to have to clone the whole map for each `.run` call). But I'm not sure whether this argues for Realm-partitioned or global (maybe it's the same?)","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"One thing it consider is that, in some implementations, this data structure gets a bit complex since you might want to scale up to a large number of <code>.run</code> calls nested in each other without that being quadratic (so you don't want to have to clone the whole map for each <code>.run</code> call). But I'm not sure whether this argues for Realm-partitioned or global (maybe it's the same?)"},"ts":1673627093569,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PK-6SHX06pGB_NoOsfUdnmNTpJlVrOyTUq847fMCk28"},
{"content":{"org.matrix.msc1767.text":"oh, also, how should we handle AsyncContexts that aren't in any Realm at all because they're implicitly set by other built-in libraries (e.g., web standards)?","body":"oh, also, how should we handle AsyncContexts that aren't in any Realm at all because they're implicitly set by other built-in libraries (e.g., web standards)?","msgtype":"m.text"},"ts":1673627175146,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tlHwgPd88jo_79aUzKeLbsCpLIZBDMejGs2KnpDiXds"},
{"content":{"msgtype":"m.text","body":"I think it’s much more likely that you’ll have many snapshots happening than many nested runs happening, so I prioritized zero-copy snapshots"},"ts":1673627189890,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$YP3nfP1ry7gn0ZI4gXhxVWhxrRNB8UcPrRhDaiv444I"},
{"content":{"org.matrix.msc1767.text":"yes, snapshots must be extremely cheap, that's for sure","body":"yes, snapshots must be extremely cheap, that's for sure","msgtype":"m.text"},"ts":1673627222760,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$R1ad1zGxrUM2WNeEUd6fN-W-p43uZtsDsZ48el6bkOM"},
{"content":{"org.matrix.msc1767.text":"I don't think one thing excludes another. A classic purely functional map (like Clojure has) would work for what I described.","body":"I don't think one thing excludes another. A classic purely functional map (like Clojure has) would work for what I described.","msgtype":"m.text"},"ts":1673627275157,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$T_X7DufM88EJ4hiTncft9ne55n6fEyxc141FWic7OmM"},
{"content":{"org.matrix.msc1767.text":"(snapshots are also free there)","body":"(snapshots are also free there)","msgtype":"m.text"},"ts":1673627283855,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FPZg2GQIoPcGnCV_AswxqpxQ3h58HgRYGSxVxLXdk7Y"},
{"content":{"msgtype":"m.text","body":"Maybe we could add a multi-run behavior where many contexts are set, to avoid N clones of the map?"},"ts":1673627290733,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2pIm6wqBStOjneTfMdWVMouoPw5yf6HxTXE-z-GhFtk"},
{"content":{"org.matrix.msc1767.text":"what do you mean?","body":"what do you mean?","msgtype":"m.text"},"ts":1673627309865,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SCoIIVmRkfXPBaNKdjLgzomlw7SFVur2V7R7Gr1G9Xs"},
{"content":{"org.matrix.msc1767.text":"oh, a JS-visible API for that?","body":"oh, a JS-visible API for that?","msgtype":"m.text"},"ts":1673627344969,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$b5sS-cUED-jOhKlpiRd6ph-oISZ4JuRJ83bDTcsv-88"},
{"content":{"body":"`AsyncContext.runMultiple([a, val, b, otherVal])`","format":"org.matrix.custom.html","msgtype":"m.text","formatted_body":"<code>AsyncContext.runMultiple([a, val, b, otherVal])</code>"},"ts":1673627354925,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SMk9PULAeMG749sR4DYn8qz_oXLm1kKTCujqGRwqTKw"},
{"content":{"body":"So `a` and `b` are set without 2 clones","format":"org.matrix.custom.html","msgtype":"m.text","formatted_body":"So <code>a</code> and <code>b</code> are set without 2 clones"},"ts":1673627386345,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$21eYSE8zuAE6YpZqW81L7wE6O01As6YR4YGCArLv8Mw"},
{"content":{"org.matrix.msc1767.text":"I don't think this would remove the potential demand for multiple calls of run being more efficient. Also I'm speculating here; I can't think of when it'd make sense to do that very deeply","body":"I don't think this would remove the potential demand for multiple calls of run being more efficient. Also I'm speculating here; I can't think of when it'd make sense to do that very deeply","msgtype":"m.text"},"ts":1673627388432,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qbLelsBEmerJBp4GWN1QtbDPKVJlKjiCefrwNB5EwKo"},
{"content":{"org.matrix.msc1767.text":"Generally it should be separate pieces of code which ask for different variables (otherwise they should consolidate into one)","body":"Generally it should be separate pieces of code which ask for different variables (otherwise they should consolidate into one)","msgtype":"m.text"},"ts":1673627409811,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3u8_MrXC2H3yRfpZGCHtSwxpx5Jm4Mp3g2T1XUtZUSM"},
{"content":{"body":"> <@littledan:matrix.org> I don't think one thing excludes another. A classic purely functional map (like Clojure has) would work for what I described.\n\nThe issue with pure linked list approaches that a snapshot prevents GC of prior values on the chain","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy%3Amatrix.org/%24T_X7DufM88EJ4hiTncft9ne55n6fEyxc141FWic7OmM\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I don't think one thing excludes another. A classic purely functional map (like Clojure has) would work for what I described.</blockquote></mx-reply>The issue with pure linked list approaches that a snapshot prevents GC of prior values on the chain","m.relates_to":{"m.in_reply_to":{"event_id":"$T_X7DufM88EJ4hiTncft9ne55n6fEyxc141FWic7OmM"}}},"ts":1673627461513,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$VRPKSm7dC5zyknxql_zEstesvfDDYbghx-9CiAdQtOw"},
{"content":{"msgtype":"m.text","body":"You’ve had to flatten the chain, but maybe that can happen in a GC step"},"ts":1673627491666,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$xWbMlL2v_6zIKn3N8roYhpMxHhY6mbsHIlCztuCDlzU"},
{"content":{"org.matrix.msc1767.text":"Yeah, this is why you wouldn't use a linked list but instead a functional map. Will find a link...","body":"Yeah, this is why you wouldn't use a linked list but instead a functional map. Will find a link...","msgtype":"m.text"},"ts":1673627492122,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RewOYADxs81HUW_B8Ow5vzxLXZ8WolfQgfCXM-1ex28"},
{"content":{"org.matrix.msc1767.text":"https://clojure.org/reference/data_structures#Maps","body":"https://clojure.org/reference/data_structures#Maps","msgtype":"m.text"},"ts":1673627603329,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BG7lHNsvNAya8AmlNbo6YP3POZaGWjJ9xlFTRB5MybA"},
{"content":{"org.matrix.msc1767.text":"anyway probably just a JS Map is good enough in practice; I just wouldn't want to rule out using this theoretically more efficient mechanism in case things come up. But I think this would be possible and doesn't relate to the use of Realms.","body":"anyway probably just a JS Map is good enough in practice; I just wouldn't want to rule out using this theoretically more efficient mechanism in case things come up. But I think this would be possible and doesn't relate to the use of Realms.","msgtype":"m.text"},"ts":1673627655361,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$89YgQrh00V22HdlJq2K_igh5cADo8iD1ZhJ0cA0IrW0"},
{"content":{"org.matrix.msc1767.text":"see Chris Okazaki's classic thesis for an overview of this topic, summary at https://en.wikipedia.org/wiki/Purely_functional_data_structure","body":"see Chris Okazaki's classic thesis for an overview of this topic, summary at https://en.wikipedia.org/wiki/Purely_functional_data_structure","msgtype":"m.text"},"ts":1673627703174,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$92yimavITl-HlgoL-bkgUwJhYCTdDHPf_DvOa8oz0lE"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> oh, also, how should we handle AsyncContexts that aren't in any Realm at all because they're implicitly set by other built-in libraries (e.g., web standards)?\n\nOK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with Yoav Weiss 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$tlHwgPd88jo_79aUzKeLbsCpLIZBDMejGs2KnpDiXds?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>oh, also, how should we handle AsyncContexts that aren&#39;t in any Realm at all because they&#39;re implicitly set by other built-in libraries (e.g., web standards)?</blockquote></mx-reply>OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)","mimetype":"text/html"}],"body":"> <@littledan:matrix.org> oh, also, how should we handle AsyncContexts that aren't in any Realm at all because they're implicitly set by other built-in libraries (e.g., web standards)?\n\nOK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with Yoav Weiss 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$tlHwgPd88jo_79aUzKeLbsCpLIZBDMejGs2KnpDiXds?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>oh, also, how should we handle AsyncContexts that aren&#39;t in any Realm at all because they&#39;re implicitly set by other built-in libraries (e.g., web standards)?</blockquote></mx-reply>OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)","m.relates_to":{"m.in_reply_to":{"event_id":"$tlHwgPd88jo_79aUzKeLbsCpLIZBDMejGs2KnpDiXds"}}},"ts":1673627903411,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5lyZJSZsUXuIssl3UCYeeyz4bcQPfVAElmTygivFgG4"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with Yoav Weiss 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)\n\nJustin Ridgewell: What do you think?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$5lyZJSZsUXuIssl3UCYeeyz4bcQPfVAElmTygivFgG4?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)</blockquote></mx-reply><a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: What do you think?","mimetype":"text/html"}],"body":"> <@littledan:matrix.org> OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with Yoav Weiss 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)\n\nJustin Ridgewell: What do you think?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$5lyZJSZsUXuIssl3UCYeeyz4bcQPfVAElmTygivFgG4?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>OK, so I want to dig into this part. This is core to my agenda of linking AsyncContext with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> 's work, which is around built-in variables (which I believe should be propagated in the identical way to AsyncContext)</blockquote></mx-reply><a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: What do you think?","m.relates_to":{"m.in_reply_to":{"event_id":"$5lyZJSZsUXuIssl3UCYeeyz4bcQPfVAElmTygivFgG4"}}},"ts":1673628785614,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-yrjZEO-BRFARlKxfsaAULcDzOXHqdb59BVFruxUAWg"},
{"content":{"msgtype":"m.text","body":"🤷‍♂️. Is we specify the storage as per-agent, do we need to do any further work to integrate the browser context?"},"ts":1673629869229,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$_4B26vI8nft0nELm8k-txbC7l7vjTGcaNmviKdaVORQ"},
{"content":{"org.matrix.msc1767.text":"yeah I'd prefer per-agent; if we do per-Realm, I'm not sure how it should work","body":"yeah I'd prefer per-agent; if we do per-Realm, I'm not sure how it should work","msgtype":"m.text"},"ts":1673631435776,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5ESiWlgKxkez3Aqq7dwOJTGysVb4jBFk0qMKY-MkcTY"},
{"content":{"org.matrix.msc1767.text":"I guess you convinced me that it wouldn't be harder to implement per-Realm and that the semantics can be defined; now this is potentially the thing to rest the decision on","body":"I guess you convinced me that it wouldn't be harder to implement per-Realm and that the semantics can be defined; now this is potentially the thing to rest the decision on","msgtype":"m.text"},"ts":1673631491291,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s-9QVaOII3mhCq31sAaCymdrVAlHCyzD5OP4pUmdZYk"},
{"content":{"org.matrix.msc1767.text":"Just got out of a meeting with the SES folks, and they're supportive of the proposal now","body":"Just got out of a meeting with the SES folks, and they're supportive of the proposal now","msgtype":"m.text"},"ts":1673642003388,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$j47A90Mg3odPVToYBXxXTv2-MX0i3uAMO3ylIjiDvKg"},
{"content":{"org.matrix.msc1767.text":"Well, MM in particular, but of the 2 meetings I've had with SES and OCAP folks, there aren't any objections raised","body":"Well, MM in particular, but of the 2 meetings I've had with SES and OCAP folks, there aren't any objections raised","msgtype":"m.text"},"ts":1673642043943,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$-_lrnTSn-HqInmU13Z5XApT_giXduDb77Jg159VZIUQ"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> Just got out of a meeting with the SES folks, and they're supportive of the proposal now\n\nWow, that's great!","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$j47A90Mg3odPVToYBXxXTv2-MX0i3uAMO3ylIjiDvKg?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Just got out of a meeting with the SES folks, and they&#39;re supportive of the proposal now</blockquote></mx-reply>Wow, that's great!","mimetype":"text/html"}],"body":"> <@jridgewell:matrix.org> Just got out of a meeting with the SES folks, and they're supportive of the proposal now\n\nWow, that's great!","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$j47A90Mg3odPVToYBXxXTv2-MX0i3uAMO3ylIjiDvKg?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Just got out of a meeting with the SES folks, and they&#39;re supportive of the proposal now</blockquote></mx-reply>Wow, that's great!","m.relates_to":{"m.in_reply_to":{"event_id":"$j47A90Mg3odPVToYBXxXTv2-MX0i3uAMO3ylIjiDvKg"}}},"ts":1673642145547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KrZBnijX89gea5GV7lfifiM5SG8UK_tMFenMPZOJbIc"},
{"content":{"org.matrix.msc1767.text":"Could you elaborate a little more on their thoughts?","body":"Could you elaborate a little more on their thoughts?","msgtype":"m.text"},"ts":1673642160689,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NjRpEDZIpPaljJtQtNsKnTAWTD7uTj1ighGfrdqZ9cQ"},
{"content":{"org.matrix.msc1767.text":"Did it rest on the per-Realm vs cross-Realm aspect we were discussing above?","body":"Did it rest on the per-Realm vs cross-Realm aspect we were discussing above?","msgtype":"m.text"},"ts":1673642174824,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wkFYy3vy5HPadSx5ulv8iPd1ChY_3A0_-DtJabwIKCM"},
{"content":{"org.matrix.msc1767.text":"No, not at all, they're looking at it from the OCAP language model","body":"No, not at all, they're looking at it from the OCAP language model","msgtype":"m.text"},"ts":1673642224042,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kghdWTnyaQiSHQiRHD7NYbku0enAjiEto2g0ZBnWOdY"},
{"content":{"org.matrix.msc1767.text":"cool","body":"cool","msgtype":"m.text"},"ts":1673642231649,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vLv_-WHSHJhcsyrgsnd4cxOMuw_EU-IoMd0pTFoZj8k"},
{"content":{"org.matrix.msc1767.text":"While this does give new powers (and there's an implicit message passing), they're ok with it.","body":"While this does give new powers (and there's an implicit message passing), they're ok with it.","msgtype":"m.text"},"ts":1673642253022,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$cF-FPLQVkkCDIVbly-Tle2CaQJOHSoaNsY9SUa3eksA"},
{"content":{"org.matrix.msc1767.text":"I think we'll need to discuss with the browser folks to decide on realm-ness","body":"I think we'll need to discuss with the browser folks to decide on realm-ness","msgtype":"m.text"},"ts":1673642281920,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$GLAbTrca73nhxaw0ak8WbUiOMG7MIgHlpUGTU2c7U-E"},
{"content":{"org.matrix.msc1767.text":"🌶️ Also Crockford wants us to stop adding new features to the language","body":"🌶️ Also Crockford wants us to stop adding new features to the language","msgtype":"m.text"},"ts":1673642563898,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$gIJtzfIuQS9eG9OrY7YEgvHS20Mz4gcoT6QACNgyIjA"},
{"content":{"org.matrix.msc1767.text":"Crockford wants us to take features away, really.","body":"Crockford wants us to take features away, really.","msgtype":"m.text"},"ts":1673642583252,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Atk7aB5GH_fWnPsTKa3G0UrtlrVuq-4WGh6W-7pFSAE"},
{"content":{"org.matrix.msc1767.text":"Oh, he was at friam! Of course he was.","body":"Oh, he was at friam! Of course he was.","msgtype":"m.text"},"ts":1673642610951,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FPWWkiJpnBr-zNgCHxZxoiS0Pax2W7whzxyqM2mqBKw"},
{"content":{"org.matrix.msc1767.text":"Yup","body":"Yup","msgtype":"m.text"},"ts":1673642646880,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ZJiizqhuRdE8Lrg0vXJM69XM1WHjTdTWiB6pMibKkR0"},
{"content":{"org.matrix.msc1767.text":"We'll have a video of it uploaded eventually","body":"We'll have a video of it uploaded eventually","msgtype":"m.text"},"ts":1673642661831,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$XJnlkNgLUErbV_kV_oKprBRh054t3murWNgUKwpKPYo"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Crockford wants us to take features away, really.\n\nthis is in general, not with respect to AsyncContext?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$Atk7aB5GH_fWnPsTKa3G0UrtlrVuq-4WGh6W-7pFSAE?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Crockford wants us to take features away, really.</blockquote></mx-reply>this is in general, not with respect to AsyncContext?","mimetype":"text/html"}],"body":"> <@kriskowal:matrix.org> Crockford wants us to take features away, really.\n\nthis is in general, not with respect to AsyncContext?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$Atk7aB5GH_fWnPsTKa3G0UrtlrVuq-4WGh6W-7pFSAE?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Crockford wants us to take features away, really.</blockquote></mx-reply>this is in general, not with respect to AsyncContext?","m.relates_to":{"m.in_reply_to":{"event_id":"$Atk7aB5GH_fWnPsTKa3G0UrtlrVuq-4WGh6W-7pFSAE"}}},"ts":1673644252602,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$d6rfL78FEU_QbeLlhcEq3A1oTm7A7MC_ntuHYlttaY0"},
{"content":{"org.matrix.msc1767.text":"Yes.","body":"Yes.","msgtype":"m.text"},"ts":1673644270409,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oWWIuhkHmej-6NbF9fXSMrCbNqOqh6_9KfSa5RbbmsM"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> I think we'll need to discuss with the browser folks to decide on realm-ness\n\nOK, I think we should start this conversation with Yoav Weiss , let's try to organize a call","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$GLAbTrca73nhxaw0ak8WbUiOMG7MIgHlpUGTU2c7U-E?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I think we&#39;ll need to discuss with the browser folks to decide on realm-ness</blockquote></mx-reply>OK, I think we should start this conversation with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> , let's try to organize a call","mimetype":"text/html"}],"body":"> <@jridgewell:matrix.org> I think we'll need to discuss with the browser folks to decide on realm-ness\n\nOK, I think we should start this conversation with Yoav Weiss , let's try to organize a call","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$GLAbTrca73nhxaw0ak8WbUiOMG7MIgHlpUGTU2c7U-E?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I think we&#39;ll need to discuss with the browser folks to decide on realm-ness</blockquote></mx-reply>OK, I think we should start this conversation with <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> , let's try to organize a call","m.relates_to":{"m.in_reply_to":{"event_id":"$GLAbTrca73nhxaw0ak8WbUiOMG7MIgHlpUGTU2c7U-E"}}},"ts":1673644282616,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XYJC9zDl-kottLRljYw8y0SK0ofYDvwVlU45rI_X-qo"},
{"content":{"org.matrix.msc1767.text":"Crockford has gone from specifically grumpy to generally grumpy.","body":"Crockford has gone from specifically grumpy to generally grumpy.","msgtype":"m.text"},"ts":1673644284554,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$g9PodMwj1pK4EebTvOe834k_c2b9wt-I1soxhp9aISQ"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Crockford has gone from specifically grumpy to generally grumpy.\n\nI am not sure whether/why I should care what Crockford thinks at this point","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$g9PodMwj1pK4EebTvOe834k_c2b9wt-I1soxhp9aISQ?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Crockford has gone from specifically grumpy to generally grumpy.</blockquote></mx-reply>I am not sure whether/why I should care what Crockford thinks at this point","mimetype":"text/html"}],"body":"> <@kriskowal:matrix.org> Crockford has gone from specifically grumpy to generally grumpy.\n\nI am not sure whether/why I should care what Crockford thinks at this point","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$g9PodMwj1pK4EebTvOe834k_c2b9wt-I1soxhp9aISQ?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Crockford has gone from specifically grumpy to generally grumpy.</blockquote></mx-reply>I am not sure whether/why I should care what Crockford thinks at this point","m.relates_to":{"m.in_reply_to":{"event_id":"$g9PodMwj1pK4EebTvOe834k_c2b9wt-I1soxhp9aISQ"}}},"ts":1673644364249,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XpHHCWcAxNNTK7lWNh5WKuxFdrZD6k6krf0BGDuozf4"},
{"content":{"org.matrix.msc1767.text":"Same as anyone else and in the same way. :-)","body":"Same as anyone else and in the same way. :-)","msgtype":"m.text"},"ts":1673644450121,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$TcKyAbW7EnTUOaAuA4T0FU2iRMgo9pBa5BoUEqBngfQ"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Oh, he was at friam! Of course he was.\n\nwhat is this?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$FPWWkiJpnBr-zNgCHxZxoiS0Pax2W7whzxyqM2mqBKw?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Oh, he was at friam! Of course he was.</blockquote></mx-reply>what is this?","mimetype":"text/html"}],"body":"> <@kriskowal:matrix.org> Oh, he was at friam! Of course he was.\n\nwhat is this?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$FPWWkiJpnBr-zNgCHxZxoiS0Pax2W7whzxyqM2mqBKw?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Oh, he was at friam! Of course he was.</blockquote></mx-reply>what is this?","m.relates_to":{"m.in_reply_to":{"event_id":"$FPWWkiJpnBr-zNgCHxZxoiS0Pax2W7whzxyqM2mqBKw"}}},"ts":1673644607494,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JZPq4ub9OTtOKUhz53WPYWZa0YBdmwQx8gmEkcfRXe8"},
{"content":{"org.matrix.msc1767.text":"There was an ocap research group meeting at a company called Agorics in the 90s. The company was acquired by Microsoft and the team scattered, but has continued to meet every Friday morning ever since. Folks as noteworthy as the late Carl Hewitt were regulars at Friam.","body":"There was an ocap research group meeting at a company called Agorics in the 90s. The company was acquired by Microsoft and the team scattered, but has continued to meet every Friday morning ever since. Folks as noteworthy as the late Carl Hewitt were regulars at Friam.","msgtype":"m.text"},"ts":1673644737311,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$xjkAtDKulKVg-CbPYxbI5JZWj5dzFnGZ-fcSiWkR8pA"},
{"content":{"org.matrix.msc1767.text":"Might have started at Xeorx PARC. I’m not sure.","body":"Might have started at Xeorx PARC. I’m not sure.","msgtype":"m.text"},"ts":1673644786519,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$My7qt_6d3gLFeWsXLtF9zHbq__7pg1eDLFisf-dmp68"},
{"content":{"org.matrix.msc1767.text":"oh, this was the audience that Justin brought this proposal to?","body":"oh, this was the audience that Justin brought this proposal to?","msgtype":"m.text"},"ts":1673644821702,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$oy0W8sR_EQ4sJJ-HWv_4e_LcyRhC1rDVS7FjUlmgfqU"},
{"content":{"org.matrix.msc1767.text":"Yeah, MarkM wanted to share the same material from the SES meeting with this group for more eyes.","body":"Yeah, MarkM wanted to share the same material from the SES meeting with this group for more eyes.","msgtype":"m.text"},"ts":1673644863658,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ADVOrc-n0e1QKXd52YaXvXBECEIBQNTFDS136no7vs4"},
{"content":{"org.matrix.msc1767.text":"SGTM, are there further eyes in the ocap world we should be seeking here, or is this considered the highest body?","body":"SGTM, are there further eyes in the ocap world we should be seeking here, or is this considered the highest body?","msgtype":"m.text"},"ts":1673644908985,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5byC4kSRPj0hqUhMKyMuGuNjdSQqXqoBzUsvLEcXI5w"},
{"content":{"org.matrix.msc1767.text":"Idk about highest, but it’s certainly the centermost.","body":"Idk about highest, but it’s certainly the centermost.","msgtype":"m.text"},"ts":1673645109176,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$xna2QagExqSODEzrkq6et-5N-2prUsFSv54OxghZjIg"},
{"content":{"org.matrix.msc1767.text":"Yah, Mark wanted to discuss with OCAP folks because JS is a subset of the OCAP language model","body":"Yah, Mark wanted to discuss with OCAP folks because JS is a subset of the OCAP language model","msgtype":"m.text"},"ts":1673646925802,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QNXxYlT3wY_6XlgGd60Se0T0T1dsAt36A0xDcvKzh6c"},
{"content":{"org.matrix.msc1767.text":"We didn't dive deeply into the JS semantics, it was pretty general discussion on programming","body":"We didn't dive deeply into the JS semantics, it was pretty general discussion on programming","msgtype":"m.text"},"ts":1673646963896,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$UTtoTAX7c6YkfWjGjT8hOyjQ7YovSnnO1bXICGMTds8"}
]