[
{"content":{"body":"Can we land this PR? https://github.com/tc39/proposal-async-context/pull/87#pullrequestreview-2106646155","m.mentions":{},"msgtype":"m.text"},"ts":1717996154317,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$INwxoXEoaWUS9paLpcZfHrLRzPfgvCmjugmB_SADkXY"},
{"content":{"body":"> <@littledan:matrix.org> Can we land this PR? https://github.com/tc39/proposal-async-context/pull/87#pullrequestreview-2106646155\n\nI don't know if we decided in the end to have the meetings in the public calendar","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$INwxoXEoaWUS9paLpcZfHrLRzPfgvCmjugmB_SADkXY?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Can we land this PR? https://github.com/tc39/proposal-async-context/pull/87#pullrequestreview-2106646155</blockquote></mx-reply>I don't know if we decided in the end to have the meetings in the public calendar","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$INwxoXEoaWUS9paLpcZfHrLRzPfgvCmjugmB_SADkXY"}},"msgtype":"m.text"},"ts":1717997636462,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$jFv4kdftzedAWkX_NR2yXhbv-6T5tC89qXHrRVQTAAM"},
{"content":{"body":"if you go to the link in that PR, there are no AsyncContext meetings","m.mentions":{},"msgtype":"m.text"},"ts":1717997650188,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$w8NnKD7nXSDxJ0UQUKhIsP5U7g0EolWH_cw-SStwa6s"},
{"content":{"body":"I guess I haven't considered enough the context of module evaluations","m.mentions":{},"msgtype":"m.text"},"ts":1717997793776,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Sa8Tytlm5UEyKZ2LtbiW8dhs-TsHOBkZIwmqsPvdK38"},
{"content":{"body":"I've mostly been looking at APIs in the web integration","m.mentions":{},"msgtype":"m.text"},"ts":1717997841005,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$v04C7Rr31-bxLGrWaOXrG08S4MDrJ_5ICkRApQSL_9k"},
{"content":{"body":"> <@abotella:igalia.com> I guess I haven't considered enough the context of module evaluations\n\nIs there any option other than \"the same as async functions\"?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Sa8Tytlm5UEyKZ2LtbiW8dhs-TsHOBkZIwmqsPvdK38?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br />I guess I haven't considered enough the context of module evaluations</blockquote></mx-reply>Is there any option other than &quot;the same as async functions&quot;?","m.relates_to":{"m.in_reply_to":{"event_id":"$Sa8Tytlm5UEyKZ2LtbiW8dhs-TsHOBkZIwmqsPvdK38"}},"msgtype":"m.text"},"ts":1718004141821,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$xue91TIL1PGzjY3Y2OG7i5THEMrlkH6kRQdpkpSOA6g"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Is there any option other than \"the same as async functions\"?\n\nI suspect not, but haven't looked at it enough","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$xue91TIL1PGzjY3Y2OG7i5THEMrlkH6kRQdpkpSOA6g?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Is there any option other than \"the same as async functions\"?</blockquote></mx-reply>I suspect not, but haven't looked at it enough","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$xue91TIL1PGzjY3Y2OG7i5THEMrlkH6kRQdpkpSOA6g"}},"msgtype":"m.text"},"ts":1718006517216,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$qPPBIzPJ-FOHtFAJajzhSehCl8FP256Y-BA426zsKjM"},
{"content":{"body":"I've been researching past discussions and dug up this one (which Qard participated in many years ago): https://github.com/othiym23/node-continuation-local-storage/issues/64\n\nSome interesting and relevant perspectives.","msgtype":"m.text"},"ts":1718006805980,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$0k_qm0rm96agnnjD4C3oVJehH59_RaYFgF2kqZPxqxs"},
{"content":{"body":"> <@abotella:igalia.com> if you go to the link in that PR, there are no AsyncContext meetings\n\nOK, let’s land a version of this patch that omits the meetings but includes the other parts ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24w8NnKD7nXSDxJ0UQUKhIsP5U7g0EolWH_cw-SStwa6s\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>if you go to the link in that PR, there are no AsyncContext meetings</blockquote></mx-reply>OK, let’s land a version of this patch that omits the meetings but includes the other parts","m.relates_to":{"m.in_reply_to":{"event_id":"$w8NnKD7nXSDxJ0UQUKhIsP5U7g0EolWH_cw-SStwa6s"}},"msgtype":"m.text"},"ts":1718011257317,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$49_P3sYggxpj0-tq_ghNU32LUKC8tyCij_2oOS3sLxw"},
{"content":{"body":"I think we decided to tell people, there are regular meetings at these times, join the chat to get the zoom link","msgtype":"m.text"},"ts":1718011277801,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fJe61nNRTGLGPWsSp1vMVcuThvBOqeqhb-pWdnK0Oe0"},
{"content":{"body":"So let’s make that be reflected in both the PR and calendar","msgtype":"m.text"},"ts":1718011295867,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qF4tdEQUQ0lhZk05cpNb8wcFlYCGMYYl82oI_zp2Jnk"},
{"content":{"body":"yeah, the calendar item was not added yet. I'll move that part out","m.mentions":{},"msgtype":"m.text"},"ts":1718011298528,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$TAZeRP73K4t61GUYF9vO5b9Y8AelbeRKKQqcaRxaFBI"},
{"content":{"body":"> <@abotella:igalia.com> I guess I haven't considered enough the context of module evaluations\n\nYou’re thinking about https://github.com/tc39/proposal-async-context/issues/93 ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24Sa8Tytlm5UEyKZ2LtbiW8dhs-TsHOBkZIwmqsPvdK38\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>I guess I haven't considered enough the context of module evaluations</blockquote></mx-reply>You’re thinking about https://github.com/tc39/proposal-async-context/issues/93 ?","m.relates_to":{"m.in_reply_to":{"event_id":"$Sa8Tytlm5UEyKZ2LtbiW8dhs-TsHOBkZIwmqsPvdK38"}},"msgtype":"m.text"},"ts":1718011395741,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Cn6g4hU6BiOjqhWPi5QtJib5LDrRc5nIBF0YWFUZeks"},
{"content":{"body":"> <@littledan:matrix.org> You’re thinking about https://github.com/tc39/proposal-async-context/issues/93 ?\n\nyeah","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Cn6g4hU6BiOjqhWPi5QtJib5LDrRc5nIBF0YWFUZeks?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>You’re thinking about https://github.com/tc39/proposal-async-context/issues/93 ?</blockquote></mx-reply>yeah","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Cn6g4hU6BiOjqhWPi5QtJib5LDrRc5nIBF0YWFUZeks"}},"msgtype":"m.text"},"ts":1718011866214,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$kuDShiG5UsaQSZ71PMPh19XBAMn8IDQUJId50xdo1sY"},
{"content":{"body":"What do you think of my suggestion there, that we make modules always run in an “original” (empty) context associated with the realm? (And this should apply for import defer as well)","msgtype":"m.text"},"ts":1718011993564,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C9c9w5Xq7pcGhVj_m7k8l3dGna0mG0yW0t17jNajgDU"},
{"content":{"body":"> <@littledan:matrix.org> Yeah I don’t have a better solution. For flow advocates: how bad would it be if we called LexicalVariable “Variable” and did FlowVariable in a follow-on proposal?\n\nI'm fine with through flow being a follow-on, so long as what lands _first_ is very clearly communicated as _not_ providing that flow type. I feel the naming should more clearly communicate the flow type as `AsyncContext.Variable` alone does not communicate how it flows _at all_.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$lu6LNSBXwnCjvMJUvLpFTm_048LxX1wpJKaKGvgu9Ss?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Yeah I don’t have a better solution. For flow advocates: how bad would it be if we called LexicalVariable “Variable” and did FlowVariable in a follow-on proposal?</blockquote></mx-reply>I'm fine with through flow being a follow-on, so long as what lands <em>first</em> is very clearly communicated as <em>not</em> providing that flow type. I feel the naming should more clearly communicate the flow type as <code>AsyncContext.Variable</code> alone does not communicate how it flows <em>at all</em>.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$lu6LNSBXwnCjvMJUvLpFTm_048LxX1wpJKaKGvgu9Ss"}},"msgtype":"m.text"},"ts":1718039682854,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$VYtQ1QCJUP4Ys5-xVB-2AKsUa-8wS8Ng2RJtYIbFJXk"},
{"content":{"body":"> <@littledan:matrix.org> Sure but there might not be JS on the stack when rejecting the promise, so at some point earlier you need to save off the context\n\nIn flow-through semantics you're modelling causality, so you'd just trace back through directly _causal_ code until you reach JS again. In many cases this may just be the construction of an object which emits events or something like that. If you think of it as tracing _all_ execution and not just _JS_ execution then you can always trace a path back through the code to what logically caused it. That could even be something initiated _before_ any JS ran, which would just be a root context.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Krzj5XeGSljgf40rGCS32wsaHPkf-G5ooIGoOvV5pDs?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Sure but there might not be JS on the stack when rejecting the promise, so at some point earlier you need to save off the context</blockquote></mx-reply>In flow-through semantics you're modelling causality, so you'd just trace back through directly <em>causal</em> code until you reach JS again. In many cases this may just be the construction of an object which emits events or something like that. If you think of it as tracing <em>all</em> execution and not just <em>JS</em> execution then you can always trace a path back through the code to what logically caused it. That could even be something initiated <em>before</em> any JS ran, which would just be a root context.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Krzj5XeGSljgf40rGCS32wsaHPkf-G5ooIGoOvV5pDs"}},"msgtype":"m.text"},"ts":1718040258882,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$TUguOqhioHJRqcd35I8dn61Oy-OBWLWPwS-Ef4BvaSg"},
{"content":{"body":"> <@littledan:matrix.org> What do you think of my suggestion there, that we make modules always run in an “original” (empty) context associated with the realm? (And this should apply for import defer as well)\n\nI find it easiest to think of everything as descending from a root context like that, even if it's empty. OTel does the same thing too with `ROOT_CONTEXT` being an empty map.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$C9c9w5Xq7pcGhVj_m7k8l3dGna0mG0yW0t17jNajgDU?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>What do you think of my suggestion there, that we make modules always run in an “original” (empty) context associated with the realm? (And this should apply for import defer as well)</blockquote></mx-reply>I find it easiest to think of everything as descending from a root context like that, even if it's empty. OTel does the same thing too with <code>ROOT_CONTEXT</code> being an empty map.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$C9c9w5Xq7pcGhVj_m7k8l3dGna0mG0yW0t17jNajgDU"}},"msgtype":"m.text"},"ts":1718041184777,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$28pDGUlggcXlmGUjaAVv8PcexYUaDgAxjg5pQQKvBn0"},
{"content":{"body":"> <@stephenbelanger:matrix.org> I'm fine with through flow being a follow-on, so long as what lands _first_ is very clearly communicated as _not_ providing that flow type. I feel the naming should more clearly communicate the flow type as `AsyncContext.Variable` alone does not communicate how it flows _at all_.\n\nI worry that there might be developers that might want *any* kind of async propagation for their own use cases, and might not understand or care much about the difference between flow-through and flow-around","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$VYtQ1QCJUP4Ys5-xVB-2AKsUa-8wS8Ng2RJtYIbFJXk?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@stephenbelanger:matrix.org\">@stephenbelanger:matrix.org</a><br>I'm fine with through flow being a follow-on, so long as what lands <em>first</em> is very clearly communicated as <em>not</em> providing that flow type. I feel the naming should more clearly communicate the flow type as <code>AsyncContext.Variable</code> alone does not communicate how it flows <em>at all</em>.</blockquote></mx-reply>I worry that there might be developers that might want <em>any</em> kind of async propagation for their own use cases, and might not understand or care much about the difference between flow-through and flow-around","m.mentions":{"user_ids":["@stephenbelanger:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$VYtQ1QCJUP4Ys5-xVB-2AKsUa-8wS8Ng2RJtYIbFJXk"}},"msgtype":"m.text"},"ts":1718042639290,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ae9KgfwIDqQ6z2giNi7qNiYEujSs8cs8eAATawIDl-E"},
{"content":{"body":"not sure how realistic that situation is though","m.mentions":{},"msgtype":"m.text"},"ts":1718042665286,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4fyGCDBERAzb1VWrfqC2fWZG3cAJ7pATwTdHp-vtv68"},
{"content":{"body":"(and I might be taking worries from the other project I'm working on and applying them to AsyncContext when they don't really apply)","m.mentions":{},"msgtype":"m.text"},"ts":1718042708297,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$lGWd5hHaS5n2tpxREwF5g4W0ycis5KB_BvhbdSIyiKc"},
{"content":{"body":"I think people generally will have a particular flow in mind for their use case. Likely lacking _nuance_ in the details, but they'll have a general flow in mind, I would think.","format":"org.matrix.custom.html","formatted_body":"I think people generally will have a particular flow in mind for their use case. Likely lacking <em>nuance</em> in the details, but they'll have a general flow in mind, I would think.","m.mentions":{},"msgtype":"m.text"},"ts":1718043803223,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$lIWTCT9xnq8h8pa7q5qIcbDOENhTT-rOdwwm9WOezsM"},
{"content":{"body":"I _do_ expect people might make mistakes between the two at first due to lack of understanding though.","format":"org.matrix.custom.html","formatted_body":"I <em>do</em> expect people might make mistakes between the two at first due to lack of understanding though.","m.mentions":{},"msgtype":"m.text"},"ts":1718043867292,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$IT2owYmxl8peOBhTMaDosVbb6n3GBnpo2bQcHBqgxiI"}
]