[
{"content":{"body":"Who is advocating for “in different ways”?","msgtype":"m.text"},"ts":1717566220317,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GNqnD3lKKYCCx1BqfLqx9zmPMMpGGV142prL8Wp0aNw"},
{"content":{"body":"Oh I guess you mean, there are different base objects to look it up off of, and signals don’t have any base object at all (unlike the AsyncContext.currentContext API)","msgtype":"m.text"},"ts":1717566301944,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C6O5-iM3rzTAeW00815fRJ4oceuqqM2fDG2S1WVXLdM"},
{"content":{"body":"For Signals: is there any way we could take advantage of the fact that you’re trying to trace something which happens completely synchronously when reconstructing the “what access caused which computeds to be synchronously evaluated” relation (which I take it was the reason for the non-registration-time semantics)?","msgtype":"m.text"},"ts":1717566427079,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$gdSrmDprIu1HPG8VxrONacXVDmmp0v44bmTr2Wy-Y2A"},
{"content":{"body":"Yah, \"in different ways\" is an automatic result of piggybacking off of the Event object - it shifts the question down to the underlying scheduling API, since each such API will necessarily have a different shape and thus a different way to access the causal context.","m.mentions":{},"msgtype":"m.text"},"ts":1717605968191,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$bfcXllNZzpAfYv0bX8F_mZgZH_IJ43YuJpFkoNKsR-k"},
{"content":{"body":"Many/most/(all?) userland schedulers will be synchronous, so the casual context would generally be the immediately previous one.  That said, if one were to double-wrap a callback, then it wouldn't be quite as \"immediate\" anymore, and I assume we'd like `wrap` to really be idempotent.","format":"org.matrix.custom.html","formatted_body":"Many/most/(all?) userland schedulers will be synchronous, so the casual context would generally be the immediately previous one.  That said, if one were to double-wrap a callback, then it wouldn't be quite as \"immediate\" anymore, and I assume we'd like <code>wrap</code> to really be idempotent.","m.mentions":{},"msgtype":"m.text"},"ts":1717606062802,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$njZEwJC3LcxO-Vtx9nWFNF2-FTyNL0XKcWIUBnmCloM"}
]