[
{"content":{"org.matrix.msc1767.message":[{"body":"Yoav Weiss and I had a nice chat on this topic earlier today. Based on that, I'm hopeful that we'd be able to make AsyncContext layer in as the same thing that many of the built-in-to-the-browser timing cases that Yoav is working on, but I don't fully understand it all yet. In this way, we might work in parallel in TC39 vs web standards, with a pretty narrow point of overlap for the interaction/layering, and no need for one side to block on the other.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> and I had a nice chat on this topic earlier today. Based on that, I'm hopeful that we'd be able to make AsyncContext layer in as the same thing that many of the built-in-to-the-browser timing cases that Yoav is working on, but I don't fully understand it all yet. In this way, we might work in parallel in TC39 vs web standards, with a pretty narrow point of overlap for the interaction/layering, and no need for one side to block on the other.","mimetype":"text/html"}],"body":"Yoav Weiss and I had a nice chat on this topic earlier today. Based on that, I'm hopeful that we'd be able to make AsyncContext layer in as the same thing that many of the built-in-to-the-browser timing cases that Yoav is working on, but I don't fully understand it all yet. In this way, we might work in parallel in TC39 vs web standards, with a pretty narrow point of overlap for the interaction/layering, and no need for one side to block on the other.","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> and I had a nice chat on this topic earlier today. Based on that, I'm hopeful that we'd be able to make AsyncContext layer in as the same thing that many of the built-in-to-the-browser timing cases that Yoav is working on, but I don't fully understand it all yet. In this way, we might work in parallel in TC39 vs web standards, with a pretty narrow point of overlap for the interaction/layering, and no need for one side to block on the other."},"ts":1670624048619,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8ZpXRLVM5MsKVtlrLmHED9GAm1f-S-keMrvFOBK-Ta4"},
{"content":{"org.matrix.msc1767.text":"One thing which was especially interesting to me was that Yoav's current version is based on saving/restoring the context across tasks, as opposed to when callbacks are taken in by WebIDL. This was found to have better performance. The technique makes sense to me, and was just different from what I expected. In any case, this detail sits outside of what TC39 is responsible for.","body":"One thing which was especially interesting to me was that Yoav's current version is based on saving/restoring the context across tasks, as opposed to when callbacks are taken in by WebIDL. This was found to have better performance. The technique makes sense to me, and was just different from what I expected. In any case, this detail sits outside of what TC39 is responsible for.","msgtype":"m.text"},"ts":1670624144313,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Tg-O0lSWzVAe7dQOLCdtH-YDymW4_K8quF5jaLXvfQA"},
{"content":{"msgtype":"m.text","body":"That’s great to hear!"},"ts":1670626895462,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$sMsMH5agLzPM0w4WAeeOgFxqSK1Yr83_F2rf1Et-eZk"},
{"content":{"msgtype":"m.text","body":"Shy said they were a bit worried about the extra memory per callback, but if there’s a better way then that’s amazing"},"ts":1670626933131,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$RIWr4kHuLXhjVwj0mnBJvRglN06KYL4REPu4KKjpJDE"}
]