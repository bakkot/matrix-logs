[
{"content":{"body":"> <@littledan:matrix.org> the same lifecycle event might be called without a JS context (from the parser directly loading an html file after a blocking script which registers the element) or from one (calling a constructor or setting innerhtml)\n\nExactly - I think we may have opposite understandings of what \"zalgo\" means in this case.  We agree on the facts that the same callback may be called from either a JS or a non-JS context, but we differ on our understandings of what it means to not release zalgo given that fact.  It sounds like you're saying that the callback's execution context should be stable/predictable independent of the circumstances that triggered it, while I'm saying that the _relationship between_ the callback's execution context and the circumstances that triggered it should be stable.  I don't think the former is actually viable, because the only thing that's stable is that there _is_ a snapshot, but the actual snapshot is still unpredictable.\n\nOne point of clarification - my proposal would allow escaping your calling environment and getting access to the HostGetTopLevelAsyncContextSnapshot if you can listen to an event that you know will get called from non-JS.  Is that a problem?  I still see it as more consistent, so if this does pose a problem, them I'm at a bit of a loss as to the correct way to deal with it.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$19-SLpCDAhwymgBQR9af_NZT4LujzQIt0zKpDYtj9WM?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>the same lifecycle event might be called without a JS context (from the parser directly loading an html file after a blocking script which registers the element) or from one (calling a constructor or setting innerhtml)</blockquote></mx-reply><p>Exactly - I think we may have opposite understandings of what \"zalgo\" means in this case.  We agree on the facts that the same callback may be called from either a JS or a non-JS context, but we differ on our understandings of what it means to not release zalgo given that fact.  It sounds like you're saying that the callback's execution context should be stable/predictable independent of the circumstances that triggered it, while I'm saying that the <em>relationship between</em> the callback's execution context and the circumstances that triggered it should be stable.  I don't think the former is actually viable, because the only thing that's stable is that there <em>is</em> a snapshot, but the actual snapshot is still unpredictable.</p>\n<p>One point of clarification - my proposal would allow escaping your calling environment and getting access to the HostGetTopLevelAsyncContextSnapshot if you can listen to an event that you know will get called from non-JS.  Is that a problem?  I still see it as more consistent, so if this does pose a problem, them I'm at a bit of a loss as to the correct way to deal with it.</p>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$19-SLpCDAhwymgBQR9af_NZT4LujzQIt0zKpDYtj9WM"}},"msgtype":"m.text"},"ts":1722270793557,"senderName":"Steve Hicks","senderId":"@stephenhicks:matrix.org","id":"$2W07NW5FQD0-2jSXiylzrxaHfmJYfmzVuTDn8qfksZs"},
{"content":{"body":"I don’t see how falling back to the top level context (or a null context) makes the relationship stable","msgtype":"m.text"},"ts":1722281786850,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fnHsA1PTbrvp94qyvqUnRw2zr5BLa0D4uk8YFPsXP_8"},
{"content":{"body":"I am not claiming that Zalgo is the most important thing, just that I don’t see a different in Zalgo-ness between “fall back to top level” vs “fall back to registration time”. In either case you will be tempted to just use that snapshot.","msgtype":"m.text"},"ts":1722281842389,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hBr6kcEaGMSkFZkoPl0zxXh4MJ3lRaZzObQoGhHcci0"},
{"content":{"body":"* I am not claiming that Zalgo is the most important thing, just that I don’t see a different in Zalgo-ness between “fall back to top level” vs “fall back to registration time”. In either case you will be tempted to just use that snapshot, and it will be missing the information you are hoping for some of the time","m.new_content":{"body":"I am not claiming that Zalgo is the most important thing, just that I don’t see a different in Zalgo-ness between “fall back to top level” vs “fall back to registration time”. In either case you will be tempted to just use that snapshot, and it will be missing the information you are hoping for some of the time","msgtype":"m.text"},"m.relates_to":{"event_id":"$hBr6kcEaGMSkFZkoPl0zxXh4MJ3lRaZzObQoGhHcci0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1722281866485,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mTfAg6_3N-e4blDT3ebxst3nDyHZ6jD9QScjwN_rW0I"}
]