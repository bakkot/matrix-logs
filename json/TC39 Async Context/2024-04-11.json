[
{"content":{"body":"https://github.com/tc39/proposal-async-context/pull/77 seems to have everyone saying call-time context is the better choice by default.","msgtype":"m.text"},"ts":1712851722048,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3GxZMODcyGb7Sw3Cbi-9OqK3DRZOL17NLSOHv8hpzwQ"},
{"content":{"body":"> <@jridgewell:matrix.org> https://github.com/tc39/proposal-async-context/pull/77 seems to have everyone saying call-time context is the better choice by default.\n\nthe people in that thread acknowledge that often there isn't a meaningful call-time context, and so you fall back to registration time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$3GxZMODcyGb7Sw3Cbi-9OqK3DRZOL17NLSOHv8hpzwQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>https://github.com/tc39/proposal-async-context/pull/77 seems to have everyone saying call-time context is the better choice by default.</blockquote></mx-reply>the people in that thread acknowledge that often there isn't a meaningful call-time context, and so you fall back to registration time","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$3GxZMODcyGb7Sw3Cbi-9OqK3DRZOL17NLSOHv8hpzwQ"}},"msgtype":"m.text"},"ts":1712852156454,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1A1VcTeMhHc36tuTnYOKoLCou4ckxjDjza6e6GYCdgM"},
{"content":{"body":"For system scheduled events, yes. But for event listeners triggered in code, call time seems to be the consensus.","msgtype":"m.text"},"ts":1712853167267,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3yUkEKqFwYh1mfYhTJ8mM_wuRnH0xwiBIE8uA38Ynao"},
{"content":{"body":"I'm happy with this as a starting point, but I still think we will have to consider around 10 of these semi-manually to make sure it works out in practice for the web","m.mentions":{},"msgtype":"m.text"},"ts":1712853477378,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AyQ1ta-0pth-FlzrpTwTnTeFFLUHf1ESaNBweNNqCig"},
{"content":{"body":"note that all of those people were coming from a Node.js perspective...","m.mentions":{},"msgtype":"m.text"},"ts":1712853495087,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o8P93_kzN5iUXoyIv-1Amh8pfkMwawaChswzGdx5Kwg"},
{"content":{"body":"Steve works on libraries across Web and Node, and he’s advocating for it too","msgtype":"m.text"},"ts":1712853580406,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$T45E_a4QmwRK0lgAVQZpU98Fw7FsKQ8AMGPLDOad_cc"},
{"content":{"body":" * note that <del>all</del>many of those people were coming from a Node.js perspective...","format":"org.matrix.custom.html","formatted_body":" * note that <del>all</del>many of those people were coming from a Node.js perspective...","m.mentions":{},"m.new_content":{"body":"note that <del>all</del>many of those people were coming from a Node.js perspective...","format":"org.matrix.custom.html","formatted_body":"note that <del>all</del>many of those people were coming from a Node.js perspective...","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$o8P93_kzN5iUXoyIv-1Amh8pfkMwawaChswzGdx5Kwg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712853602017,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$08DFy9ymB0J0PHHRoxhAXYYMf1gVDWgxMXfXAdJsXWQ"},
{"content":{"body":"Though I don’t know how generators will work in this system.","msgtype":"m.text"},"ts":1712853602614,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$YEDri53NxB-AmdW1z7On-pXTHGXr7yt0RoFVj0I9xRc"},
{"content":{"body":"oh I did not mean Steve","m.mentions":{},"msgtype":"m.text"},"ts":1712853606539,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VU94kbZHO2f2-iCWEFsCKex5geoJo7iyJHFbhHLK9Yk"},
{"content":{"body":"> <@jridgewell:matrix.org> Though I don’t know how generators will work in this system.\n\nwhy would this affect generators?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$YEDri53NxB-AmdW1z7On-pXTHGXr7yt0RoFVj0I9xRc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Though I don’t know how generators will work in this system.</blockquote></mx-reply>why would this affect generators?","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YEDri53NxB-AmdW1z7On-pXTHGXr7yt0RoFVj0I9xRc"}},"msgtype":"m.text"},"ts":1712853618827,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mOzuz7Nt2Z74f5s-GGIKPj5H0XfLio2nZmR9gV3pRDs"},
{"content":{"body":"I think we’re still agreeing on init-time, but how do you get the call-time context in one?","msgtype":"m.text"},"ts":1712853641182,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Op-ilrstQHERJ333d9eDZY232IXPEym38r1kzF3Vnc4"},
{"content":{"body":"> <@jridgewell:matrix.org> I think we’re still agreeing on init-time, but how do you get the call-time context in one?\n\nyou don't? you only use call-time context sometimes. For example, promises still don't use call-time context","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Op-ilrstQHERJ333d9eDZY232IXPEym38r1kzF3Vnc4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I think we’re still agreeing on init-time, but how do you get the call-time context in one?</blockquote></mx-reply>you don't? you only use call-time context sometimes. For example, promises still don't use call-time context","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Op-ilrstQHERJ333d9eDZY232IXPEym38r1kzF3Vnc4"}},"msgtype":"m.text"},"ts":1712853663760,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FR42ALmLwiDW9reS6IySn1m3w-LoxczUWXcE3YLReHM"},
{"content":{"body":"and onload doesn't have any sort of call-time context so it uses registration-time context","m.mentions":{},"msgtype":"m.text"},"ts":1712853695518,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AhKMYlGCrQdljUeof2o4syYgSX9NlRUS2xSZDRDLCPI"},
{"content":{"body":"Steve and Stephen have given examples where generators need to access the call-time data","msgtype":"m.text"},"ts":1712853707772,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BnFEyl6iqikOsVMBDl2bjyZ5TWVDRO0CGnOZJO93OMY"},
{"content":{"body":"OK I'll have to catch up on those threads","m.mentions":{},"msgtype":"m.text"},"ts":1712853726039,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pC51qdaKOwItFqrySrOwdk9UJboInpQipC8DO06SJ30"},
{"content":{"body":"we have to have this conversation with Steven and Signals people about Computed's context -- there's a concern that call-time context there would constitute \"Zalgo\": a computed signal could be forced in many different ways, and it should be giving the same answer regardless of context (of course we need some debugging/perf analysis tools to be possible)","m.mentions":{},"msgtype":"m.text"},"ts":1712853758678,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rorB792EDNX34EdSfB9td7vBuxOAeqgNiPuJLANCVPg"},
{"content":{"body":"> <@jridgewell:matrix.org> For system scheduled events, yes. But for event listeners triggered in code, call time seems to be the consensus.\n\nit would mean the same if it is the one who emits the event determines which context the the event listeners should be.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$3yUkEKqFwYh1mfYhTJ8mM_wuRnH0xwiBIE8uA38Ynao?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>For system scheduled events, yes. But for event listeners triggered in code, call time seems to be the consensus.</blockquote></mx-reply>it would mean the same if it is the one who emits the event determines which context the the event listeners should be.","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$3yUkEKqFwYh1mfYhTJ8mM_wuRnH0xwiBIE8uA38Ynao"}},"msgtype":"m.text"},"ts":1712859134250,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$QEVVsCf-bhGEl0apg-WfwTjpQCibQQaDB7YoifvjjT4"}
]