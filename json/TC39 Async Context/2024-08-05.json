[
{"content":{"body":"littledan: in the node impl its `super(AsyncContextFrame.current())` and in the deno impl its `{...previousContextMapping}`. There's no efficient copy-on-write structure available in js like there is in native code","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: in the node impl its <code>super(AsyncContextFrame.current())</code> and in the deno impl its <code>{...previousContextMapping}</code>. There's no efficient copy-on-write structure available in js like there is in native code","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1722862052243,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Vj8mch7yyv_CjUS7HMl0PlzaPbU0EIHbyQ2hQSNyunw"},
{"content":{"body":"> <@devsnek:matrix.org> littledan: in the node impl its `super(AsyncContextFrame.current())` and in the deno impl its `{...previousContextMapping}`. There's no efficient copy-on-write structure available in js like there is in native code\n\nit should be possible to implement a HAMT in JS, shouldn't it? (hash based on an incrementing number that each Variable has)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$Vj8mch7yyv_CjUS7HMl0PlzaPbU0EIHbyQ2hQSNyunw?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: in the node impl its <code>super(AsyncContextFrame.current())</code> and in the deno impl its <code>{...previousContextMapping}</code>. There's no efficient copy-on-write structure available in js like there is in native code</blockquote></mx-reply>it should be possible to implement a HAMT in JS, shouldn't it? (hash based on an incrementing number that each Variable has)","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Vj8mch7yyv_CjUS7HMl0PlzaPbU0EIHbyQ2hQSNyunw"}},"msgtype":"m.text"},"ts":1722866434576,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$i0L4kv0oeqlE8C5Xr1wTsH94DvO5-its7xs2VGXjMjA"},
{"content":{"body":"or, equally, the simple linked list model (good enough sometimes--all web frameworks do this)","m.mentions":{},"msgtype":"m.text"},"ts":1722866457671,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$el746Lh-c1kA1DeRtYSQLWmrpNkSTNUpzG-p7pgrQ7U"}
]