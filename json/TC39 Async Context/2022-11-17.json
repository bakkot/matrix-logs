[
{"content":{"org.matrix.msc1767.text":"hello!","body":"hello!","msgtype":"m.text"},"ts":1668699260856,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OJ_pWpWp8MYnJKRZQKt7GN5vKM-lRGhicEz5nU_XfgQ"},
{"content":{"org.matrix.msc1767.text":"Hey, dan!","body":"Hey, dan!","msgtype":"m.text"},"ts":1668699310652,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$DXRjPusJ2bISnnjcBZgraqHSA7JhQ3Fj-l7BkPg_lwc"},
{"content":{"org.matrix.msc1767.text":"Hey, good to be in touch with you again","body":"Hey, good to be in touch with you again","msgtype":"m.text"},"ts":1668699337675,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IYrkpjPz7PXZbFCTYJd2Xk0vXQBIxvvp_XRHOpa6dgs"},
{"content":{"org.matrix.msc1767.text":"I'm very excited about seeing this proposal move forward","body":"I'm very excited about seeing this proposal move forward","msgtype":"m.text"},"ts":1668699347843,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8O7ZAuRGdW7E9ebwiHsXxB6a2m88supUJmCJTFZ35fA"},
{"content":{"org.matrix.msc1767.text":"Maybe Justin communicated this to you, my main feedback at this point is we should have a method enabling userspace queuing","body":"Maybe Justin communicated this to you, my main feedback at this point is we should have a method enabling userspace queuing","msgtype":"m.text"},"ts":1668699372974,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$J2rU7Y-ptnGV_57KJZItlN6WJXgp39SKbnZii6pu0CU"},
{"content":{"org.matrix.msc1767.text":"Just for people who are not able to join the SES meeting yesterday like me, this is the recording of the discussion about the async context on the meeting: https://youtu.be/Y6hQLM08Ig8?t=891 The discussion is very helpful for people to catch up with the latest status of the proposal","body":"Just for people who are not able to join the SES meeting yesterday like me, this is the recording of the discussion about the async context on the meeting: https://youtu.be/Y6hQLM08Ig8?t=891 The discussion is very helpful for people to catch up with the latest status of the proposal","msgtype":"m.text"},"ts":1668699406952,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$3ljEVCAbSorEte1Dr4nLSym2M2WExI0YK9NjPBqeP4M"},
{"content":{"org.matrix.msc1767.text":"yeah. It can be useful and I am willing to know more about the requirement of this method. We recently stripped the proposed API aiming to reduce the surface of the proposal and pushing it forward with the essential part.","body":"yeah. It can be useful and I am willing to know more about the requirement of this method. We recently stripped the proposed API aiming to reduce the surface of the proposal and pushing it forward with the essential part.","msgtype":"m.text","m.relates_to":{"event_id":"$J2rU7Y-ptnGV_57KJZItlN6WJXgp39SKbnZii6pu0CU","is_falling_back":true,"m.in_reply_to":{"event_id":"$J2rU7Y-ptnGV_57KJZItlN6WJXgp39SKbnZii6pu0CU"},"rel_type":"m.thread"}},"ts":1668699676108,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$aMZcfTqXd2fNbopqpnflxloVMiHHbrufSHZQZLlSLHw"},
{"content":{"org.matrix.msc1767.text":"yeah I am really happy about the direction of making the API as minimal as possible, and I like how this is currently done","body":"yeah I am really happy about the direction of making the API as minimal as possible, and I like how this is currently done","msgtype":"m.text"},"ts":1668699719541,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vGw7eQ4QhA-SveQly3Iz9dB6BZZIFWfLfe0HBXhbRUk"},
{"content":{"org.matrix.msc1767.text":"I'd add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution","body":"I'd add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution","msgtype":"m.text"},"ts":1668699765401,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YH9YAig0fTNfrxMhAMt3SdITh15EQwYkOvjp_Tat_hw"},
{"content":{"org.matrix.msc1767.text":"if we don't have this, then the platform has superpowers (to wrap its callbacks, not just promise reactions) which user code does not have","body":"if we don't have this, then the platform has superpowers (to wrap its callbacks, not just promise reactions) which user code does not have","msgtype":"m.text"},"ts":1668699824454,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fZOCemMXOFvmGwwA9mjI8sogs7Qm-feNKvDWRDPe7HU"},
{"content":{"org.matrix.msc1767.text":"Kris gave the example of the Q promise library that he maintains. Maybe that's an edge case. But I imagine that this would come up for some larger RPC client libraries for example.","body":"Kris gave the example of the Q promise library that he maintains. Maybe that's an edge case. But I imagine that this would come up for some larger RPC client libraries for example.","msgtype":"m.text"},"ts":1668699869479,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YA_a9T4jD9kIj3tuL7H4uHEvU5ZSJ5hsAHaHpDYo7o0"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> I'd add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution\n\nthis design might be a little heavy in that it requires allocating a new closure. But, on the positive, it avoids the need to reify the snapshot in a more complicated way","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$YH9YAig0fTNfrxMhAMt3SdITh15EQwYkOvjp_Tat_hw?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I&#39;d add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution</blockquote></mx-reply>this design might be a little heavy in that it requires allocating a new closure. But, on the positive, it avoids the need to reify the snapshot in a more complicated way","mimetype":"text/html"}],"body":"> <@littledan:matrix.org> I'd add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution\n\nthis design might be a little heavy in that it requires allocating a new closure. But, on the positive, it avoids the need to reify the snapshot in a more complicated way","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$YH9YAig0fTNfrxMhAMt3SdITh15EQwYkOvjp_Tat_hw?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I&#39;d add one static method, AsyncContext.wrap (or, name tbd), which takes a callback, and eagerly stores a snapshot of all the async contexts, and returns a new callback which restores that snapshot through the duration of its execution</blockquote></mx-reply>this design might be a little heavy in that it requires allocating a new closure. But, on the positive, it avoids the need to reify the snapshot in a more complicated way","m.relates_to":{"m.in_reply_to":{"event_id":"$YH9YAig0fTNfrxMhAMt3SdITh15EQwYkOvjp_Tat_hw"}}},"ts":1668699926784,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$erYheJF00rMlUAZ1mLmMro4IUkgM0E7Rb1Ll4VXAs28"},
{"content":{"org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> Kris gave the example of the Q promise library that he maintains. Maybe that's an edge case. But I imagine that this would come up for some larger RPC client libraries for example.\n\nTrue, the snapshotting API is very helpful to those larger libraries. I had an example shows how it can be achieved with built-in Promise: https://github.com/legendecas/proposal-async-context/pull/8#issuecomment-1246309357 (limited to asynchronous flows, yes :( ).","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$YA_a9T4jD9kIj3tuL7H4uHEvU5ZSJ5hsAHaHpDYo7o0?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Kris gave the example of the Q promise library that he maintains. Maybe that&#39;s an edge case. But I imagine that this would come up for some larger RPC client libraries for example.</blockquote></mx-reply>True, the snapshotting API is very helpful to those larger libraries. I had an example shows how it can be achieved with built-in Promise: https://github.com/legendecas/proposal-async-context/pull/8#issuecomment-1246309357 (limited to asynchronous flows, yes :( ).","mimetype":"text/html"}],"body":"> <@littledan:matrix.org> Kris gave the example of the Q promise library that he maintains. Maybe that's an edge case. But I imagine that this would come up for some larger RPC client libraries for example.\n\nTrue, the snapshotting API is very helpful to those larger libraries. I had an example shows how it can be achieved with built-in Promise: https://github.com/legendecas/proposal-async-context/pull/8#issuecomment-1246309357 (limited to asynchronous flows, yes :( ).","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$YA_a9T4jD9kIj3tuL7H4uHEvU5ZSJ5hsAHaHpDYo7o0?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Kris gave the example of the Q promise library that he maintains. Maybe that&#39;s an edge case. But I imagine that this would come up for some larger RPC client libraries for example.</blockquote></mx-reply>True, the snapshotting API is very helpful to those larger libraries. I had an example shows how it can be achieved with built-in Promise: https://github.com/legendecas/proposal-async-context/pull/8#issuecomment-1246309357 (limited to asynchronous flows, yes :( ).","m.relates_to":{"m.in_reply_to":{"event_id":"$YA_a9T4jD9kIj3tuL7H4uHEvU5ZSJ5hsAHaHpDYo7o0"}}},"ts":1668700384664,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$ItcszzYH7s8PSZdAxA8XXH2I0R6aQXHxQ_XguBR5DAs"},
{"content":{"org.matrix.msc1767.text":"A well defined method can definitely alleviates the burden for those libraries with complex use cases, and avoid restricting them to snapshot with asynchronous flows.","body":"A well defined method can definitely alleviates the burden for those libraries with complex use cases, and avoid restricting them to snapshot with asynchronous flows.","msgtype":"m.text"},"ts":1668700468866,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$QMXPmk4pEHLBZth-Zd0KOKiFZpSnqKSXDecTTxyiRA8"},
{"content":{"org.matrix.msc1767.text":"I'm suggesting that we do this as a single method rather than another class","body":"I'm suggesting that we do this as a single method rather than another class","msgtype":"m.text"},"ts":1668700522493,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DHLhvygYrjypUxW4DTTCsOh5yR635N0QGEpAI9h2KBQ"},
{"content":{"org.matrix.msc1767.text":"so this could remain minimal-feeling","body":"so this could remain minimal-feeling","msgtype":"m.text"},"ts":1668700529301,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$J9k3WNbaACo3e73VywzfWziFPbqf_65Sz8GlG31krbI"},
{"content":{"org.matrix.msc1767.text":"the thing is, Kris identified this gap in our SES call, so I think it's a bit difficult to delay for later; we may have others asking about this","body":"the thing is, Kris identified this gap in our SES call, so I think it's a bit difficult to delay for later; we may have others asking about this","msgtype":"m.text"},"ts":1668700575780,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v0kVUatRoeYE9XNtWeDJBGO4cExgmYjJnCA1jZdoIqM"},
{"content":{"org.matrix.msc1767.text":"also I think it makes it easier to explain what's going on, to have a concrete name for this wrapping, with a pseudo-js implementation on the slides","body":"also I think it makes it easier to explain what's going on, to have a concrete name for this wrapping, with a pseudo-js implementation on the slides","msgtype":"m.text"},"ts":1668700611414,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pScRX_Al7Xbb9X8cjzwf_duDtn6U0vOscyWIhLsY0wQ"},
{"content":{"org.matrix.msc1767.text":"and then say, yeah this is what we apply to promise reactions as well as all built-in callbacks","body":"and then say, yeah this is what we apply to promise reactions as well as all built-in callbacks","msgtype":"m.text"},"ts":1668700626758,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YNmu1CoeksaZ-gK8vX9083RvIDqYz2hiA8OHwvLqo9g"},
{"content":{"org.matrix.msc1767.text":"I don't think taking advantage of promises is a working way through, as you might want a synchronous callback to restore the context (think addEventListener)","body":"I don't think taking advantage of promises is a working way through, as you might want a synchronous callback to restore the context (think addEventListener)","msgtype":"m.text"},"ts":1668700752369,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NoNecV5QQVXZ6JcBACT1CLqlLJWHVAfQ3ySP81UXqc8"},
{"content":{"org.matrix.msc1767.text":"anyway it's fine to make this change after Stage 1","body":"anyway it's fine to make this change after Stage 1","msgtype":"m.text"},"ts":1668700764412,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7iGyrcTM4Shm96gEMqpDdGG04XM3c_AWFLbASmlSjdE"},
{"content":{"org.matrix.msc1767.text":"Beyond Q, some other promise libraries also use my ASAP queueMicrotask shim, which is a more isolated example of a library that is obliged to wrap async context in a “user mode queue”. You can see the treatment we were obliged to integrate for Node.js domains https://github.com/kriskowal/asap/blob/master/asap.js#L44","body":"Beyond Q, some other promise libraries also use my ASAP queueMicrotask shim, which is a more isolated example of a library that is obliged to wrap async context in a “user mode queue”. You can see the treatment we were obliged to integrate for Node.js domains https://github.com/kriskowal/asap/blob/master/asap.js#L44","msgtype":"m.text"},"ts":1668704720178,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$PK3Sg4DnQ1Q6EDa6QtAkJL5XnrekBET_YQuH38ODIYg"},
{"content":{"org.matrix.msc1767.text":"Dan’s right about RPC libraries. It’s common to have work shedding or prioritization middleware that are also user mode queues.","body":"Dan’s right about RPC libraries. It’s common to have work shedding or prioritization middleware that are also user mode queues.","msgtype":"m.text"},"ts":1668704803832,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$l02cI1zNgTCtVro6EHtk_zcTupJ26yo4_CiEZL0dKIc"},
{"content":{"org.matrix.msc1767.text":"User mode queueing problems are both a reason for and against AsyncLocal. On the one hand, I don’t like being obliged to accommodate this kind of action-at-a-distance, where a library must account how it will compose with another library. But on the other hand, I would rather there be just one such thing to accommodate, and for it to be design well enough to address problems analogous to hygienic dynamic scope, as AsyncLocal does and domains did not.","body":"User mode queueing problems are both a reason for and against AsyncLocal. On the one hand, I don’t like being obliged to accommodate this kind of action-at-a-distance, where a library must account how it will compose with another library. But on the other hand, I would rather there be just one such thing to accommodate, and for it to be design well enough to address problems analogous to hygienic dynamic scope, as AsyncLocal does and domains did not.","msgtype":"m.text"},"ts":1668704975744,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$s6dSjXGP8hZHkBJ46wmE3xJSR_9Fc1YEWri-fDSL7JE"},
{"content":{"org.matrix.msc1767.message":[{"body":"As I mentioned on the WinterCG room, in a talk at BlinkOn yesterday, Yoav Weiss was talking about task attribution, which sounded somewhat similar to `AsyncContext` to me","mimetype":"text/plain"},{"body":"As I mentioned on the WinterCG room, in a talk at BlinkOn yesterday, Yoav Weiss was talking about task attribution, which sounded somewhat similar to <code>AsyncContext</code> to me","mimetype":"text/html"}],"body":"As I mentioned on the WinterCG room, in a talk at BlinkOn yesterday, Yoav Weiss was talking about task attribution, which sounded somewhat similar to `AsyncContext` to me","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"As I mentioned on the WinterCG room, in a talk at BlinkOn yesterday, Yoav Weiss was talking about task attribution, which sounded somewhat similar to <code>AsyncContext</code> to me"},"ts":1668707707462,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$DTNEjhVnjlfMrF6JIywHd0mYmM9SvbXgaM57etun_LY"},
{"content":{"org.matrix.msc1767.text":"The video for the talk is up at https://www.youtube.com/watch?v=NOWC6M0MS2o","body":"The video for the talk is up at https://www.youtube.com/watch?v=NOWC6M0MS2o","msgtype":"m.text"},"ts":1668707717665,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Li0wl7APH2mHklLQgClBAwRRTHEXrDcyZ0X6kdPA_OA"},
{"content":{"msgtype":"m.text","body":"Yeah, it does seem like task attribution is a subset of a AsyncContext"},"ts":1668710528459,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$56uEsgAcqHQQ7bSOh0DuDMtO_WwqSFtPLkS6crhBk28"},
{"content":{"msgtype":"m.text","body":"Yoav mentions in the last question in the video that task attribution did not have a performance penalty after they trimmed it down"},"ts":1668710554282,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$6TH3PX-0l2HSlF2bcOqORG-qf7Uy7NWm2wVAavRlpEE"},
{"content":{"msgtype":"m.text","body":"That might be a good sign for us"},"ts":1668710571759,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ThbLWALba9eAd7oyDkg80fXJCoLl_9oMc2jpluThB5E"},
{"content":{"org.matrix.msc1767.text":"so I guess it's not too soon to trace through the implementation and see if it could be extended...","body":"so I guess it's not too soon to trace through the implementation and see if it could be extended...","msgtype":"m.text"},"ts":1668710655177,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$g-wGw_KxM_RujhH8az4pAEAgYBbm0x7Zi40LaqNDPNw"},
{"content":{"org.matrix.msc1767.text":"just got off the phone with Mark Miller. He supports continuing the discussion here at Stage 1!","body":"just got off the phone with Mark Miller. He supports continuing the discussion here at Stage 1!","msgtype":"m.text"},"ts":1668719653571,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JEsyuVq9dW-64xkI_SlaRC977VJBtUReZrDYzhGzG8I"},
{"content":{"org.matrix.msc1767.text":"Whoot!","body":"Whoot!","msgtype":"m.text"},"ts":1668719691189,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ThZbIva2VmyTDf4ZcvGqHI9O3ulCvTU88axdZm8Sm3c"},
{"content":{"org.matrix.msc1767.text":"He agreed on a sort of stretch goal of having his analysis complete in 2 months, or in the worst case in 4 months, but this is the kind of analysis that would be more of a Stage 2 precondition","body":"He agreed on a sort of stretch goal of having his analysis complete in 2 months, or in the worst case in 4 months, but this is the kind of analysis that would be more of a Stage 2 precondition","msgtype":"m.text"},"ts":1668719694936,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$q3c1poQmQ_C4At_W1pI5StABNsPFfqSpLIWg5YEKpAs"},
{"content":{"org.matrix.msc1767.text":"I don't think we should push him to go faster than that; that is a very reasonable pace IMO","body":"I don't think we should push him to go faster than that; that is a very reasonable pace IMO","msgtype":"m.text"},"ts":1668719713282,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bjl20XlJMVmrJzMt_yTnRjw_vckB7c30sUrrTuua-bA"},
{"content":{"org.matrix.msc1767.text":"I'll add it to the agenda as as advancement item","body":"I'll add it to the agenda as as advancement item","msgtype":"m.text"},"ts":1668719721632,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$d0pT260dY0XhMoq4VtalnZDeMsCByWRDtkzU3BWwuK4"},
{"content":{"org.matrix.msc1767.text":"also I wanted to suggest that we get someone from MS in this discussion, like Ron Buckton was expressing support for this last time, right?","body":"also I wanted to suggest that we get someone from MS in this discussion, like Ron Buckton was expressing support for this last time, right?","msgtype":"m.text"},"ts":1668719748780,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OU2tcmPURWZZYmnlnbLRFGFFAcutFlnt1Wbj6lKeo5k"},
{"content":{"org.matrix.msc1767.text":"saying that there was a similar feature in C# that was very important","body":"saying that there was a similar feature in C# that was very important","msgtype":"m.text"},"ts":1668719758709,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$93ptFnwSLuuuT4jlMqI5HMU-ibmmQm4c1w9xZJhkwkI"},
{"content":{"org.matrix.msc1767.text":"I don't remember, but I'll check the minutes later today","body":"I don't remember, but I'll check the minutes later today","msgtype":"m.text"},"ts":1668719781610,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$cKqbbwa4e2aMPhQSbo8k6kerpZSKqo-veZo47sKWRfs"},
{"content":{"org.matrix.msc1767.text":"yeah, watching that BlinkOn video, I think citing exactly what Yoav is talking about would be a great way to explain the relevance to frontend","body":"yeah, watching that BlinkOn video, I think citing exactly what Yoav is talking about would be a great way to explain the relevance to frontend","msgtype":"m.text"},"ts":1668721274193,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZZSvgfZUAei4h9VHM2hkROPNboCG5ywUkd82nKm2GTs"},
{"content":{"org.matrix.msc1767.text":"he's talking about both prioritization and recording timing","body":"he's talking about both prioritization and recording timing","msgtype":"m.text"},"ts":1668721293319,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7RkR_mX75-JLIinJU7GVFlYAyBcc6Yc1okeTJ4yza4U"},
{"content":{"org.matrix.msc1767.message":[{"body":"Stefan is actually suggesting that Yoav's work move in a direction which is *more* similar to this proposal, where there's no big tree of all the ancestors always tracked, but rather only certain pieces of code explicitly start a task with tracking","mimetype":"text/plain"},{"body":"Stefan is actually suggesting that Yoav's work move in a direction which is <em>more</em> similar to this proposal, where there's no big tree of all the ancestors always tracked, but rather only certain pieces of code explicitly start a task with tracking","mimetype":"text/html"}],"body":"Stefan is actually suggesting that Yoav's work move in a direction which is *more* similar to this proposal, where there's no big tree of all the ancestors always tracked, but rather only certain pieces of code explicitly start a task with tracking","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"Stefan is actually suggesting that Yoav's work move in a direction which is <em>more</em> similar to this proposal, where there's no big tree of all the ancestors always tracked, but rather only certain pieces of code explicitly start a task with tracking"},"ts":1668721922683,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WQmFRGvMl12RYBISpLEUHJ6k8h2eGuiyVwipCwhUswY"},
{"content":{"org.matrix.msc1767.text":"For RPC, this stuff is usually used for distributed tracing and measuring latency. Trace headers and TTL from inbound requests get captured as a deadline and inbound span on the context, which in turn gets written back as an updated TTL and span for dependent outbound requests. In Go, this is done explicitly with a context.Context, which is a slow but small KV store.","body":"For RPC, this stuff is usually used for distributed tracing and measuring latency. Trace headers and TTL from inbound requests get captured as a deadline and inbound span on the context, which in turn gets written back as an updated TTL and span for dependent outbound requests. In Go, this is done explicitly with a context.Context, which is a slow but small KV store.","msgtype":"m.text"},"ts":1668721932667,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$NX833z9bOf93QKMZxPI_yx_WLd-pprxo_gX9mb2otXw"},
{"content":{"org.matrix.msc1767.message":[{"body":"An _immutable_ KV store, to be clear.","mimetype":"text/plain"},{"body":"An <em>immutable</em> KV store, to be clear.","mimetype":"text/html"}],"body":"An _immutable_ KV store, to be clear.","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"An <em>immutable</em> KV store, to be clear."},"ts":1668721988863,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SONdbrP8PQoxfpyfy33HzV2_ty2cY5L1xQtXdm9QTuk"},
{"content":{"org.matrix.msc1767.text":"note that the talk links to this document: https://docs.google.com/document/d/1_m-h9_KgDMddTS2OFP0CShr4zjU-C-up64DwCrCfBo4/edit#","body":"note that the talk links to this document: https://docs.google.com/document/d/1_m-h9_KgDMddTS2OFP0CShr4zjU-C-up64DwCrCfBo4/edit#","msgtype":"m.text"},"ts":1668722050960,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s7RMvRjiVPh-z21Qa6ynPUPpTdsjZzvjSwWfuy7_nDM"},
{"content":{"org.matrix.msc1767.message":[{"body":"does someone want to take the action item to have a more detailed conversation about this relationship with Yoav? Andreu Botella ?","mimetype":"text/plain"},{"body":"does someone want to take the action item to have a more detailed conversation about this relationship with Yoav? <a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a> ?","mimetype":"text/html"}],"body":"does someone want to take the action item to have a more detailed conversation about this relationship with Yoav? Andreu Botella ?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"does someone want to take the action item to have a more detailed conversation about this relationship with Yoav? <a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a> ?"},"ts":1668722073210,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$r2iZatgxQ0DoyBkk87oGdxOtJWT1pb0741MVxvqO7Fo"},
{"content":{"org.matrix.msc1767.text":"Tracing: https://opentelemetry.io/docs/concepts/observability-primer/#distributed-traces","body":"Tracing: https://opentelemetry.io/docs/concepts/observability-primer/#distributed-traces","msgtype":"m.text"},"ts":1668722137870,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$sIPjuKV4yUwROiPXjua2SvPdfxF1Nd2kZBJup3a5EJk"},
{"content":{"org.matrix.msc1767.text":"I took his question to mean that a flat mapping should be used instead of a tree?","body":"I took his question to mean that a flat mapping should be used instead of a tree?","msgtype":"m.text","m.relates_to":{"event_id":"$WQmFRGvMl12RYBISpLEUHJ6k8h2eGuiyVwipCwhUswY","is_falling_back":true,"m.in_reply_to":{"event_id":"$WQmFRGvMl12RYBISpLEUHJ6k8h2eGuiyVwipCwhUswY"},"rel_type":"m.thread"}},"ts":1668722858560,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$wREjmb408t9kmQZcEHdX0UK4Zqr8pmu-uwdN0tWGegw"},
{"content":{"org.matrix.msc1767.text":"Which is exactly how AsyncLocal does it","body":"Which is exactly how AsyncLocal does it","msgtype":"m.text","m.relates_to":{"event_id":"$WQmFRGvMl12RYBISpLEUHJ6k8h2eGuiyVwipCwhUswY","is_falling_back":true,"m.in_reply_to":{"event_id":"$wREjmb408t9kmQZcEHdX0UK4Zqr8pmu-uwdN0tWGegw"},"rel_type":"m.thread"}},"ts":1668722882817,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$y7VVXpH7db2dQxBbzGjVI-9QD-vCS2zuopOfUy6YXdo"},
{"content":{"org.matrix.msc1767.text":"(Though, you could store an array to track the ancestry if you wanted)","body":"(Though, you could store an array to track the ancestry if you wanted)","msgtype":"m.text","m.relates_to":{"event_id":"$WQmFRGvMl12RYBISpLEUHJ6k8h2eGuiyVwipCwhUswY","is_falling_back":true,"m.in_reply_to":{"event_id":"$y7VVXpH7db2dQxBbzGjVI-9QD-vCS2zuopOfUy6YXdo"},"rel_type":"m.thread"}},"ts":1668722913753,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kYWvfHTaTubnm94TjKzInhXZbFOCER_tytb6rvRKTbo"},
{"content":{"org.matrix.msc1767.text":"It sounded like Yoav's thing tracked the ancestry for all promise/callback reactions, so it could be traced backwards, not just forwards","body":"It sounded like Yoav's thing tracked the ancestry for all promise/callback reactions, so it could be traced backwards, not just forwards","msgtype":"m.text"},"ts":1668722962303,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rXA55BQFmar67R8br3FQshX9dnZN6-Nugk0NAGkxoqU"},
{"content":{"org.matrix.msc1767.text":"could you talk through the relationship between AsyncLocal and AsyncContext?","body":"could you talk through the relationship between AsyncLocal and AsyncContext?","msgtype":"m.text"},"ts":1668722979749,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WfNPyX6YrSaX8yLYEJ-uqUIhOW-s_uf5qjMo4Eg_5T0"},
{"content":{"org.matrix.msc1767.message":[{"body":"The current proposal doesn't have an `AsyncContext` (though my personal one does). `AsyncLocal` is the same as an `AsyncLocalStorage` (allows propagating a value through an async call stack). `AsyncTask` is the snapshotting API (allows you to snapshot all `AsyncLocal`s at the time of the snapshot and run later a function with that snapshot). Together, those make up the \"Async Context\" APIs","mimetype":"text/plain"},{"body":"The current proposal doesn't have an <code>AsyncContext</code> (though my personal one does). <code>AsyncLocal</code> is the same as an <code>AsyncLocalStorage</code> (allows propagating a value through an async call stack). <code>AsyncTask</code> is the snapshotting API (allows you to snapshot all <code>AsyncLocal</code>s at the time of the snapshot and run later a function with that snapshot). Together, those make up the &quot;Async Context&quot; APIs","mimetype":"text/html"}],"body":"The current proposal doesn't have an `AsyncContext` (though my personal one does). `AsyncLocal` is the same as an `AsyncLocalStorage` (allows propagating a value through an async call stack). `AsyncTask` is the snapshotting API (allows you to snapshot all `AsyncLocal`s at the time of the snapshot and run later a function with that snapshot). Together, those make up the \"Async Context\" APIs","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"The current proposal doesn't have an <code>AsyncContext</code> (though my personal one does). <code>AsyncLocal</code> is the same as an <code>AsyncLocalStorage</code> (allows propagating a value through an async call stack). <code>AsyncTask</code> is the snapshotting API (allows you to snapshot all <code>AsyncLocal</code>s at the time of the snapshot and run later a function with that snapshot). Together, those make up the &quot;Async Context&quot; APIs"},"ts":1668723182090,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ev-XplJJVy6bQN4YnCtO6A9sNZ4F3XjAiNf6CQwCyPs"},
{"content":{"org.matrix.msc1767.message":[{"body":"My personal design has a `AsyncContext` namespace which holds a `Value` class (`AsyncLocal`) and a `Snapshot` class (`AsyncTask`)","mimetype":"text/plain"},{"body":"My personal design has a <code>AsyncContext</code> namespace which holds a <code>Value</code> class (<code>AsyncLocal</code>) and a <code>Snapshot</code> class (<code>AsyncTask</code>)","mimetype":"text/html"}],"body":"My personal design has a `AsyncContext` namespace which holds a `Value` class (`AsyncLocal`) and a `Snapshot` class (`AsyncTask`)","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"My personal design has a <code>AsyncContext</code> namespace which holds a <code>Value</code> class (<code>AsyncLocal</code>) and a <code>Snapshot</code> class (<code>AsyncTask</code>)"},"ts":1668723226835,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BLgUypFnAhpUcknkB6jadqgzbHReokds3oxJ2nGIFgc"},
{"content":{"org.matrix.msc1767.text":"why do we need all three of those classes?","body":"why do we need all three of those classes?","msgtype":"m.text"},"ts":1668723269824,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$LP-xGFgLKFyOMqg1kFYpJKMdOcljOPBe_SK4sRHOybs"},
{"content":{"org.matrix.msc1767.text":"Maybe we should debate the APIs here at https://github.com/legendecas/proposal-async-context/issues/9","body":"Maybe we should debate the APIs here at https://github.com/legendecas/proposal-async-context/issues/9","msgtype":"m.text"},"ts":1668723303893,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s52KSbjERH0LPrGUBaJFcl65Rqp8xETSg8JyUqV87qE"},
{"content":{"org.matrix.msc1767.text":"The current design just has 2, but my personal has a namespace class purely for organization","body":"The current design just has 2, but my personal has a namespace class purely for organization","msgtype":"m.text"},"ts":1668723316826,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$6KXgKwHnWXgs-4RJPzC_BEisbU_TedbevPpdJqquW8E"},
{"content":{"org.matrix.msc1767.text":"AsyncLocal and AsyncContext seem very similar","body":"AsyncLocal and AsyncContext seem very similar","msgtype":"m.text"},"ts":1668723345852,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$eSh2_3vnu86BUxR36lC_G_HPXFyce1ZElXd7BVz2_GQ"},
{"content":{"org.matrix.msc1767.text":"the differences are really superficial, right?","body":"the differences are really superficial, right?","msgtype":"m.text"},"ts":1668723354318,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-v42fZ7fbgAtr9aFq4Ca0nNeXzhMyiWcyWgjDh-12-o"},
{"content":{"org.matrix.msc1767.message":[{"body":"`AsyncLocal` and `AsyncContext.Value` are the same","mimetype":"text/plain"},{"body":"<code>AsyncLocal</code> and <code>AsyncContext.Value</code> are the same","mimetype":"text/html"}],"body":"`AsyncLocal` and `AsyncContext.Value` are the same","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<code>AsyncLocal</code> and <code>AsyncContext.Value</code> are the same"},"ts":1668723409341,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$JIGEkpkUEZ520AvNsWiB4IBltBQnZu1AdWIcfOccct8"},
{"content":{"org.matrix.msc1767.message":[{"body":"If we offer a wrapping/snapshotting API, I think we need a distinction between `AsyncLocal` (or `Value`) and the the namespace","mimetype":"text/plain"},{"body":"If we offer a wrapping/snapshotting API, I think we need a distinction between <code>AsyncLocal</code> (or <code>Value</code>) and the the namespace","mimetype":"text/html"}],"body":"If we offer a wrapping/snapshotting API, I think we need a distinction between `AsyncLocal` (or `Value`) and the the namespace","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"If we offer a wrapping/snapshotting API, I think we need a distinction between <code>AsyncLocal</code> (or <code>Value</code>) and the the namespace"},"ts":1668723487801,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$PQ5he6oTjq5eo11UcYAZIxr_9qygnwbY9k6TnAHkdDw"},
{"content":{"org.matrix.msc1767.message":[{"body":"Eg, we would need `AsyncContext.Local` class if we wanted to have a `AsyncContext.wrap` static function","mimetype":"text/plain"},{"body":"Eg, we would need <code>AsyncContext.Local</code> class if we wanted to have a <code>AsyncContext.wrap</code> static function","mimetype":"text/html"}],"body":"Eg, we would need `AsyncContext.Local` class if we wanted to have a `AsyncContext.wrap` static function","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"Eg, we would need <code>AsyncContext.Local</code> class if we wanted to have a <code>AsyncContext.wrap</code> static function"},"ts":1668723518210,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$cwhehFrP0zy4RCG2O96ux69zNed5JcU5D1-yRs4Wnxs"},
{"content":{"org.matrix.msc1767.message":[{"body":"yeah I'm proposing that we have no explicit snapshot, just `wrap` with the current stuff","mimetype":"text/plain"},{"body":"yeah I'm proposing that we have no explicit snapshot, just <code>wrap</code> with the current stuff","mimetype":"text/html"}],"body":"yeah I'm proposing that we have no explicit snapshot, just `wrap` with the current stuff","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"yeah I'm proposing that we have no explicit snapshot, just <code>wrap</code> with the current stuff"},"ts":1668723570257,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ic0xv7OTRsiYB7RDxc4sFGdFq0kZ1gCB1LHWwGH9eTQ"},
{"content":{"org.matrix.msc1767.message":[{"body":"also, yeah, I think `run` is a lot better than flat get/set","mimetype":"text/plain"},{"body":"also, yeah, I think <code>run</code> is a lot better than flat get/set","mimetype":"text/html"}],"body":"also, yeah, I think `run` is a lot better than flat get/set","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"also, yeah, I think <code>run</code> is a lot better than flat get/set"},"ts":1668723616777,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1-ixpsqj1UqiRzawqbdG49o6fuYCwkTrnRdPiNQgoxY"},
{"content":{"org.matrix.msc1767.text":"it's more structured","body":"it's more structured","msgtype":"m.text"},"ts":1668723628678,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WAN_xks_qHcs7WyoPFd1yEJQathQ6j_dJ89iGuFmoSs"},
{"content":{"org.matrix.msc1767.text":"I'm not sure why we need the observer thing--you can just build that yourself","body":"I'm not sure why we need the observer thing--you can just build that yourself","msgtype":"m.text"},"ts":1668723647529,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jrakCVOlqax6eDNFmKAcmeQMOaU1OGM4qyGG1WfM-Gw"},
{"content":{"org.matrix.msc1767.text":"I think the API should be `class AsyncContext { run(value, callback); get(); static wrap(callback); }","body":"I think the API should be `class AsyncContext { run(value, callback); get(); static wrap(callback); }","msgtype":"m.text"},"ts":1668723694113,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3z1Wa_v-zDmKY1f1t743ibrcKozdJ5LdYbzTfQ_9ftA"},
{"content":{"org.matrix.msc1767.text":"you can express everything with just that","body":"you can express everything with just that","msgtype":"m.text"},"ts":1668723717491,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qqYNYNNKZ3zOfxQPg6JxLVJZZDNOl06X7gZB8ukUaaU"},
{"content":{"org.matrix.msc1767.text":"right?","body":"right?","msgtype":"m.text"},"ts":1668723719040,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h3-_J2xEB1OYes-Si3ejUecH_vXzhxm8uqD1lestJ9A"},
{"content":{"org.matrix.msc1767.text":"I worry about the confusion of wrapping a particular local vs the all the locals, which is why I suggest that the class and wrap be on a common namespace","body":"I worry about the confusion of wrapping a particular local vs the all the locals, which is why I suggest that the class and wrap be on a common namespace","msgtype":"m.text"},"ts":1668723777093,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$1tp_3Z12p5YvXa3EI9CNO5Cn3y7xSAZMLjY3QfZCqWg"},
{"content":{"org.matrix.msc1767.text":"Though I guess it could work that way","body":"Though I guess it could work that way","msgtype":"m.text"},"ts":1668723804927,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NFLspoS7u1bQwg9z5akz5bDiy1OhAc2hDJkxdfY51MM"},
{"content":{"org.matrix.msc1767.text":"Using the static vs instance distinction (and not offering the instance wrap)","body":"Using the static vs instance distinction (and not offering the instance wrap)","msgtype":"m.text"},"ts":1668723821860,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dGFd_f7O_92SnLCRwW-l3aexOt0tbDVi2dZcG4rRucI"},
{"content":{"org.matrix.msc1767.text":"well, I don't care about naming, but I think we should minimize the number of classes and things we reify","body":"well, I don't care about naming, but I think we should minimize the number of classes and things we reify","msgtype":"m.text"},"ts":1668723829533,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vQe1bL1YlM26qOvu9FXp2jNMVrtEOxDKcKPk5pm8wwI"},
{"content":{"org.matrix.msc1767.text":"(I mean, I totally care about naming, but...)","body":"(I mean, I totally care about naming, but...)","msgtype":"m.text"},"ts":1668723838422,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9DjD5ctWQGENvwNbZXJMtb3zSeHOPkcoC70JBR-3TW4"},
{"content":{"org.matrix.msc1767.text":"the idea is you are always wrapping for all of the locals/contexts","body":"the idea is you are always wrapping for all of the locals/contexts","msgtype":"m.text"},"ts":1668723857084,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$uQAvDt0qSoVXr62Ahu7t8l6qlSwVK6ErJFnOzIDWD6Y"},
{"content":{"org.matrix.msc1767.text":"we're just going for Stage 1, so we really don't need to be settled on any of this","body":"we're just going for Stage 1, so we really don't need to be settled on any of this","msgtype":"m.text"},"ts":1668723879734,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4ASzTuYvs0IXmk-3CAwu-b8kxs4VmnzoLUJLbRoRrds"},
{"content":{"org.matrix.msc1767.text":"If anyone wants to try to prototype AsyncContext in V8/Chrome, I'd start by looking at https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/scheduler/public/task_attribution_tracker.h;l=24","body":"If anyone wants to try to prototype AsyncContext in V8/Chrome, I'd start by looking at https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/platform/scheduler/public/task_attribution_tracker.h;l=24","msgtype":"m.text"},"ts":1668724788620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZllUXtBS3JT3KWYQFZtSghVEXNovARpqm1ljyMBz9w0"}
]