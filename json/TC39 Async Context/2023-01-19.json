[
{"content":{"msgtype":"m.text","body":"I'd be curious as to why. Even if the answer is `321` by default, you should still be able to get `123` as the result by wrapping `resolve`\n\n```\n// should print 123\naddEventListener('unhandledrejection', () => console.log(als.getStore()));\n\nlet reject;\nals.run(123, () => new Promise((a,b) => reject = AsyncResource.bind(b)));\nals.run(321, () => reject());\n```","format":"org.matrix.custom.html","formatted_body":"<p>I'd be curious as to why. Even if the answer is <code>321</code> by default, you should still be able to get <code>123</code> as the result by wrapping <code>resolve</code></p>\n<pre><code>// should print 123\naddEventListener('unhandledrejection', () =&gt; console.log(als.getStore()));\n\nlet reject;\nals.run(123, () =&gt; new Promise((a,b) =&gt; reject = AsyncResource.bind(b)));\nals.run(321, () =&gt; reject());\n</code></pre>\n","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$kekM-46BLDvhYn2ki58ggStMHsbNdwFzM5hHCk--Qok"},"rel_type":"m.thread"}},"ts":1674086439735,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$zkyH-aI-CuHlCXxjRCIYinnW_zNW_iTql1Ew50240BY"},
{"content":{"msgtype":"m.text","body":"yeah, I guess so, I'd just rather this be based on analyzing how our codebase works today to double-check, rather than just hand-waving","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$zkyH-aI-CuHlCXxjRCIYinnW_zNW_iTql1Ew50240BY"},"rel_type":"m.thread"}},"ts":1674086516810,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AMg1d16g2NdchcFFD_Bgz5-O2hhBqA_fQEGzEBg1gwA"},
{"content":{"msgtype":"m.text","body":"yep, understood","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$AMg1d16g2NdchcFFD_Bgz5-O2hhBqA_fQEGzEBg1gwA"},"rel_type":"m.thread"}},"ts":1674086540054,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$LEyaDnviWo0IWIPwCE5bncRN8NEobXqZEBkao5Lw0HU"},
{"content":{"msgtype":"m.text","body":"(and I feel like we need an analogous analysis for the Node ecosystem)","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$LEyaDnviWo0IWIPwCE5bncRN8NEobXqZEBkao5Lw0HU"},"rel_type":"m.thread"}},"ts":1674086543423,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yjbB3rwLjhW-kZTEDj8RcU49fqPVdOZUpxzgZE1v2vI"},
{"content":{"body":"> <@littledan:matrix.org> It would indeed be special, but Yoav found that, in DOM, some events naturally wanted to restore the context when they were registered, whereas others should *not* do so and leave in place the context that triggered them\n\nInteresting, I think we definitely need to meet with them to figure out what cases these are","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy%3Amatrix.org/%24f1IlGiAgZQcyKuInm9vV9brFU-nPWe2k41A2H5CSlBI\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>It would indeed be special, but Yoav found that, in DOM, some events naturally wanted to restore the context when they were registered, whereas others should <em>not</em> do so and leave in place the context that triggered them</blockquote></mx-reply>Interesting, I think we definitely need to meet with them to figure out what cases these are","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":false,"m.in_reply_to":{"event_id":"$f1IlGiAgZQcyKuInm9vV9brFU-nPWe2k41A2H5CSlBI"},"rel_type":"m.thread"}},"ts":1674087697355,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$f3DzLsCjITXYhupXvIcjkTcn7kU0lu4d-oEDyzR8JQo"},
{"content":{"body":"Chengzhong Wu I think is setting up a meeting with Yoav already?","format":"org.matrix.custom.html","msgtype":"m.text","formatted_body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> I think is setting up a meeting with Yoav already?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$f3DzLsCjITXYhupXvIcjkTcn7kU0lu4d-oEDyzR8JQo"},"rel_type":"m.thread"}},"ts":1674087725780,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$u2Ok0_2bfVA00yfnb5cAqOEbnd-iSKD9N-lwwpXlk2U"},
{"content":{"msgtype":"m.text","body":"Node.js specifically introduced `EventEmitterAsyncResource` for those kinds of use cases","format":"org.matrix.custom.html","formatted_body":"Node.js specifically introduced <code>EventEmitterAsyncResource</code> for those kinds of use cases","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$u2Ok0_2bfVA00yfnb5cAqOEbnd-iSKD9N-lwwpXlk2U"},"rel_type":"m.thread"}},"ts":1674087749138,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$muofISSFPHudH6HXIxHD_X5bftK0Q271ypst19e0tX4"},
{"content":{"msgtype":"m.text","body":"by default, `emitter.emit('...')` will propagate the context where `emit()` is called. With an `EventEmitterAsyncResource`, however, the context is captured when the emitter is created and that's what is propagated when `emit()` is called","format":"org.matrix.custom.html","formatted_body":"by default, <code>emitter.emit('...')</code> will propagate the context where <code>emit()</code> is called. With an <code>EventEmitterAsyncResource</code>, however, the context is captured when the emitter is created and that's what is propagated when <code>emit()</code> is called","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$muofISSFPHudH6HXIxHD_X5bftK0Q271ypst19e0tX4"},"rel_type":"m.thread"}},"ts":1674087962915,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$Rn6OjE9JOfkIzJpi0nqF3f2GH-AX8pvozzmL6I-O7wA"},
{"content":{"msgtype":"m.text","body":"but, unhandledRejection is a third behavior, right?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$Rn6OjE9JOfkIzJpi0nqF3f2GH-AX8pvozzmL6I-O7wA"},"rel_type":"m.thread"}},"ts":1674088062719,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ob9yJBTYv00bwJ25l3yGF7xorm9SfKz6tle2V6tIXhY"},
{"content":{"msgtype":"m.text","body":"yep, because it's a singular event on an emitter that otherwise acts like the default","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$ob9yJBTYv00bwJ25l3yGF7xorm9SfKz6tle2V6tIXhY"},"rel_type":"m.thread"}},"ts":1674088094029,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$oHobNCe9f0Aa18DpLxVKRJZCltzFZFXjsrifR202AdY"},
{"content":{"msgtype":"m.text","body":"```\nprocess.on('foo', () => console.log(als.getStore()); // context at emit\nprocess.on('unhandledRejection' () => console.log(als.getStore()); // context at promise create\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>process.on('foo', () =&gt; console.log(als.getStore()); // context at emit\nprocess.on('unhandledRejection' () =&gt; console.log(als.getStore()); // context at promise create\n</code></pre>\n","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$oHobNCe9f0Aa18DpLxVKRJZCltzFZFXjsrifR202AdY"},"rel_type":"m.thread"}},"ts":1674088146423,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$kDgWu1NTFaur-DT1Ii-3A9g39KH0ijP-cbKOLwR15D0"},
{"content":{"msgtype":"m.text","body":"same object, two very different behaviors","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$kDgWu1NTFaur-DT1Ii-3A9g39KH0ijP-cbKOLwR15D0"},"rel_type":"m.thread"}},"ts":1674088158972,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$GIVQEHODRFIDbLsp9bZ07lxTMTQ0NGD5PxkYRDHhwjY"},
{"content":{"msgtype":"m.text","body":"makes sense. Ultimately, whether we go with `123` or `321`, `unhandledRejection` is still special, right?","format":"org.matrix.custom.html","formatted_body":"makes sense. Ultimately, whether we go with <code>123</code> or <code>321</code>, <code>unhandledRejection</code> is still special, right?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$GIVQEHODRFIDbLsp9bZ07lxTMTQ0NGD5PxkYRDHhwjY"},"rel_type":"m.thread"}},"ts":1674088298280,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5ENQsvj1qN1372WZC0AF6BXVQbpgcy2y8eCZy6wMQCg"},
{"content":{"msgtype":"m.text","body":"yep","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$5ENQsvj1qN1372WZC0AF6BXVQbpgcy2y8eCZy6wMQCg"},"rel_type":"m.thread"}},"ts":1674088305020,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$94U3s4S_RH1GSzJQj8CELGtlPkDRcK-9x1Td-s1fg4w"},
{"content":{"msgtype":"m.text","body":"This is a bit of a mischaracterization. Mark asked what Justin thought of the idea of using his work as the explainer. Justin (in my opinion rightly) responded that Mark’s reexplanation is better suited for a different audience. I believe Mark found that argument compelling."},"ts":1674097520932,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nM-fgHp5RKFoXmL8UQLjmNEmcoNdhic3-3DpSzCNh_E"},
{"content":{"msgtype":"m.text","body":"Posted https://youtu.be/KKOn5SepxYI"},"ts":1674098028823,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$MNkBynfd6yrBu2yUVsg-LfQlyqrJJgqvg-SAZkTxOPE"},
{"content":{"msgtype":"m.text","body":"Oh, Mark also said we should probably use per-Agent storage for the contexts"},"ts":1674098679329,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zCpIAaVj1HFJsHcuZjmn1EUBwy7bcrca6LY5RV4d8ek"},
{"content":{"msgtype":"m.text","body":"https://youtu.be/KKOn5SepxYI?t=1950"},"ts":1674098699914,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$OMS2TUvPENBcRZVQOd_R24FrfxtgGGGwiZS3NThZBjs"},
{"content":{"msgtype":"m.text","body":"> <@littledan:matrix.org> Would be cool to see if someone can build AsyncContext as a Node native module just based on that, or if there are limitations\n\nHere's a simple package implementing the proposal: https://github.com/jridgewell/async-context-native","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Would be cool to see if someone can build AsyncContext as a Node native module just based on that, or if there are limitations</blockquote></mx-reply>Here's a simple package implementing the proposal: https://github.com/jridgewell/async-context-native","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k"}}},"ts":1674111675384,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$T7Ff-w_ongKjsjCjwbIELYJISD2lVezhzyFvb3tKr_w"},
{"content":{"org.matrix.msc1767.text":"Is it special because the mere fact of rejecting causes a macrotask, as opposed to other macrotasks which have to be triggered from a call to a runtime API?","body":"Is it special because the mere fact of rejecting causes a macrotask, as opposed to other macrotasks which have to be triggered from a call to a runtime API?","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$94U3s4S_RH1GSzJQj8CELGtlPkDRcK-9x1Td-s1fg4w"},"rel_type":"m.thread"}},"ts":1674117014052,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ylvZBl4sKH6y8GAzMGA7uKYmmrG37BzkleG4mATjulw"},
{"content":{"body":"> <@jridgewell:matrix.org> Here's a simple package implementing the proposal: https://github.com/jridgewell/async-context-native\n\nWhat, is that all??? I refuse to believe it!","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy%3Amatrix.org/%24T7Ff-w_ongKjsjCjwbIELYJISD2lVezhzyFvb3tKr_w\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Here's a simple package implementing the proposal: https://github.com/jridgewell/async-context-native</blockquote></mx-reply>What, is that all??? I refuse to believe it!","m.relates_to":{"m.in_reply_to":{"event_id":"$T7Ff-w_ongKjsjCjwbIELYJISD2lVezhzyFvb3tKr_w"}}},"ts":1674134518514,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SDPvmcmizh_AHx3LrVeQnUCsZSTno3bzvJ4nHfBmMGc"},
{"content":{"msgtype":"m.text","body":"So the magic V8 API does literally all of the work?"},"ts":1674134579204,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zUqLdCjjmmCbWKercwI_rjElkdSURMReoKgkJx5w8f4"},
{"content":{"body":"> <@jridgewell:matrix.org> Oh, Mark also said we should probably use per-Agent storage for the contexts\n\nYay also!","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy%3Amatrix.org/%24zCpIAaVj1HFJsHcuZjmn1EUBwy7bcrca6LY5RV4d8ek\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Oh, Mark also said we should probably use per-Agent storage for the contexts</blockquote></mx-reply>Yay also!","m.relates_to":{"m.in_reply_to":{"event_id":"$zCpIAaVj1HFJsHcuZjmn1EUBwy7bcrca6LY5RV4d8ek"}}},"ts":1674134600759,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lObre9nhPVUkruK_CCz0rYKhdo7pP79D5hAYlejcvCI"},
{"content":{"msgtype":"m.text","body":"I think the specialness here is unrelated to it being a macro task vs micro or sync, and more that we turn out to want this somewhat weird state restored for unique reasons","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$ylvZBl4sKH6y8GAzMGA7uKYmmrG37BzkleG4mATjulw"},"rel_type":"m.thread"}},"ts":1674134780589,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$uYwlcn82iv76ca2EQ39Na0QrA1m52arFQr7OXdQ9L-U"},
{"content":{"msgtype":"m.text","body":"Anyway, as Daryl from my team wrote on the local issue, it turns out our use case works fine whether the answer is 123 or 321 (though Daryl shares my intuition that 123 feels nicer, maybe related to the fact that he has spent much more time than me on the current 123 implementation)","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$uYwlcn82iv76ca2EQ39Na0QrA1m52arFQr7OXdQ9L-U"},"rel_type":"m.thread"}},"ts":1674134875858,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v8NkY8hvoZ7XscFjouHHNd_UUNS0eChqigvXcOvZ7aI"},
{"content":{"msgtype":"m.text","body":"I think in the overwhelming majority of cases the promise is going to reject in the appropriate context. The only case where I've seen this issue so far is the deferred reject where the reject is called in a different context. If the model were set up to handle returning `321` in that case, the more usual cases would still resolve correctly.","format":"org.matrix.custom.html","formatted_body":"I think in the overwhelming majority of cases the promise is going to reject in the appropriate context. The only case where I've seen this issue so far is the deferred reject where the reject is called in a different context. If the model were set up to handle returning <code>321</code> in that case, the more usual cases would still resolve correctly.","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$v8NkY8hvoZ7XscFjouHHNd_UUNS0eChqigvXcOvZ7aI"},"rel_type":"m.thread"}},"ts":1674145892335,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$ZD8iwrSxo9dtl-RUyyFoHAkEWK8FIpcA85KMfyeHOxk"},
{"content":{"msgtype":"m.text","body":"and it would still be possible to implement it so that `123` was returned if that's really what you wanted","format":"org.matrix.custom.html","formatted_body":"and it would still be possible to implement it so that <code>123</code> was returned if that's really what you wanted","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZD8iwrSxo9dtl-RUyyFoHAkEWK8FIpcA85KMfyeHOxk"},"rel_type":"m.thread"}},"ts":1674145917833,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$yuBqt0jBWItnMPQSX79v_sSISEJWwdSg2_UqmCD-zPI"},
{"content":{"msgtype":"m.text","body":"> <@littledan:matrix.org> So the magic V8 API does literally all of the work?\n\nYup. The magic V8 API is the parallel for the hooks the spec already implements (though they don't faithfully implement it everywhere it's needed, hence the `queueMicrotask` not working)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$zUqLdCjjmmCbWKercwI_rjElkdSURMReoKgkJx5w8f4?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>So the magic V8 API does literally all of the work?</blockquote></mx-reply>Yup. The magic V8 API is the parallel for the hooks the spec already implements (though they don't faithfully implement it everywhere it's needed, hence the <code>queueMicrotask</code> not working)","m.relates_to":{"m.in_reply_to":{"event_id":"$zUqLdCjjmmCbWKercwI_rjElkdSURMReoKgkJx5w8f4"}}},"ts":1674151617362,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$qn1ACNwuwnFPS5-KDeu6_vqKA5Jz-JmLlIfmT9uZNTg"},
{"content":{"msgtype":"m.text","body":"It's also not possible to hook into Node's `unhandledRejection` without completely reimplementing the event queue, but that's a Node issue and not a spec issue.","format":"org.matrix.custom.html","formatted_body":"It's also not possible to hook into Node's <code>unhandledRejection</code> without completely reimplementing the event queue, but that's a Node issue and not a spec issue."},"ts":1674151669137,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$vfuPR8l1J9m8RF0v3ldcfUaCnhv7VNqBrMfH2CpMGiA"},
{"content":{"msgtype":"m.text","body":"> <@jridgewell:matrix.org> Yup. The magic V8 API is the parallel for the hooks the spec already implements (though they don't faithfully implement it everywhere it's needed, hence the `queueMicrotask` not working)\n\nWould be really cool to describe the extent to which this does and doesn't work in its readme","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$qn1ACNwuwnFPS5-KDeu6_vqKA5Jz-JmLlIfmT9uZNTg?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Yup. The magic V8 API is the parallel for the hooks the spec already implements (though they don't faithfully implement it everywhere it's needed, hence the <code>queueMicrotask</code> not working)</blockquote></mx-reply>Would be really cool to describe the extent to which this does and doesn't work in its readme","m.relates_to":{"m.in_reply_to":{"event_id":"$qn1ACNwuwnFPS5-KDeu6_vqKA5Jz-JmLlIfmT9uZNTg"}}},"ts":1674151718188,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CM5SJWGkIHHd5B64WWp6EeAk4EIwrJpcDtCcvw_01Gs"},
{"content":{"msgtype":"m.text","body":"👍️, I'll add more details later tonight"},"ts":1674151746102,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QPosROT0tf4QdZ4Q_PlnAowO9PP0wkNDsBXy96ae5UU"},
{"content":{"msgtype":"m.text","body":"So the `321` semantics significantly simplify the implementation?","format":"org.matrix.custom.html","formatted_body":"So the <code>321</code> semantics significantly simplify the implementation?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$yuBqt0jBWItnMPQSX79v_sSISEJWwdSg2_UqmCD-zPI"},"rel_type":"m.thread"}},"ts":1674152842063,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zWAieLvrDaQV_pzrcZCVH9lux0pifxO8IN9gY7niQxk"},
{"content":{"msgtype":"m.text","body":"and this is part of the motivation?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$zWAieLvrDaQV_pzrcZCVH9lux0pifxO8IN9gY7niQxk"},"rel_type":"m.thread"}},"ts":1674152852985,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o5f8GzSNpX9l01xbZNtvn_7sGj6U9Kqa__HrFKvW1AM"},
{"content":{"msgtype":"m.text","body":"it's hard for me to see the part of it which is more intuitive with 321, but if it's easier to implement (avoiding the kInit hook?) then I'm sold","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$o5f8GzSNpX9l01xbZNtvn_7sGj6U9Kqa__HrFKvW1AM"},"rel_type":"m.thread"}},"ts":1674152887934,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Yf5rtEEJBiubziW-sp2UZKiBwTUPMeCyKQPTMM00joU"},
{"content":{"msgtype":"m.text","body":"do we need anything more than the small V8 API? e.g., the resolve hook","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$Yf5rtEEJBiubziW-sp2UZKiBwTUPMeCyKQPTMM00joU"},"rel_type":"m.thread"}},"ts":1674152913899,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$McipPSPSbbw6l9hJOyKZHPEAf6ev5ihpefTiy1zFiE8"},
{"content":{"msgtype":"m.text","body":"err, reject hook","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$McipPSPSbbw6l9hJOyKZHPEAf6ev5ihpefTiy1zFiE8"},"rel_type":"m.thread"}},"ts":1674152924098,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hFYfFPE1jHs3Nzcwun25fW1UUY_BhVXcVAT0UW4uj9M"},
{"content":{"msgtype":"m.text","body":"or this is handled by the relevant V8 API being synchronous?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$hFYfFPE1jHs3Nzcwun25fW1UUY_BhVXcVAT0UW4uj9M"},"rel_type":"m.thread"}},"ts":1674152944991,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Qf2WuUeyEWvSlE4oJ9uOslGgQR4CAacJxD3ilkXYxTs"},
{"content":{"msgtype":"m.text","body":"V8 could implement efficiently (all promises will require another slot to hold the context pointer). It's inefficient for embedders to do this","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$Qf2WuUeyEWvSlE4oJ9uOslGgQR4CAacJxD3ilkXYxTs"},"rel_type":"m.thread"}},"ts":1674152951335,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2NEbhHe8NpzbR_YuwWnJ_Kvs3MtUrJN5ANMrGu9hquM"},
{"content":{"msgtype":"m.text","body":"yeah, I'm convinced that either option could be implemented efficiently; this is more about curiousity","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$2NEbhHe8NpzbR_YuwWnJ_Kvs3MtUrJN5ANMrGu9hquM"},"rel_type":"m.thread"}},"ts":1674152978867,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IEE1fPuG8RXd0Eao-1vIN2esHkzOkB5f0eSHYV7i_rQ"},
{"content":{"msgtype":"m.text","body":"what is it that V8 would have to implement, if all we want is 321?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$IEE1fPuG8RXd0Eao-1vIN2esHkzOkB5f0eSHYV7i_rQ"},"rel_type":"m.thread"}},"ts":1674152988689,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UzgzX2xIutmNkGUJIyDvNI55fSlmTXmxf_zsflNZa2o"},
{"content":{"msgtype":"m.text","body":"V8 wouldn't need to implement anything, it already has the necessary hooks for us. Embedders will need to capture the context when V8 triggers the ProjectReject hook.","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$UzgzX2xIutmNkGUJIyDvNI55fSlmTXmxf_zsflNZa2o"},"rel_type":"m.thread"}},"ts":1674153114645,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$fNF0XndyzbdIYyu86qAx89eYyeRv4v0lVQ-UxUzTs_o"},
{"content":{"msgtype":"m.text","body":"If we want 123 behavior, then V8 needs to store the context on each promise allocation, and provide a method for embedders to access that when they V8 triggers the PromiseReject hook.","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$fNF0XndyzbdIYyu86qAx89eYyeRv4v0lVQ-UxUzTs_o"},"rel_type":"m.thread"}},"ts":1674153174216,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$C4_zNtnMgxtVnQQYQORHJPq8OzRFCqGCXwAS6g2C57Y"},
{"content":{"msgtype":"m.text","body":"right, OK","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$C4_zNtnMgxtVnQQYQORHJPq8OzRFCqGCXwAS6g2C57Y"},"rel_type":"m.thread"}},"ts":1674153388326,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$61h57QWS8tAz_AgjcTuKmvw6O2mdNICpH_k2867d65o"},
{"content":{"msgtype":"m.text","body":"so this works because the V8 API's SetPromiseRejectCallback is invoked synchronously (giving us all the context we need)","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$61h57QWS8tAz_AgjcTuKmvw6O2mdNICpH_k2867d65o"},"rel_type":"m.thread"}},"ts":1674153628692,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8NAZbvwPRjWp1opfHM7BOxmzfq_gGn0LyzCbyySZyJQ"},
{"content":{"msgtype":"m.text","body":"Correct","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$8NAZbvwPRjWp1opfHM7BOxmzfq_gGn0LyzCbyySZyJQ"},"rel_type":"m.thread"}},"ts":1674154009796,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NvCLuRgTJi9XHp1s1XtcLBk79iXBUWnYdOFtDr-TVy0"},
{"content":{"body":"Yeah, the promise kinit hook is unnecessary if v8 will capture the context for us on promise creation and give an API to retrieve it","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$NvCLuRgTJi9XHp1s1XtcLBk79iXBUWnYdOFtDr-TVy0"},"rel_type":"m.thread"}},"ts":1674154396072,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$NNoyCfMbFb2ExqlmObPkY7omIk62ve8m9vcTqdhd2j4"},
{"content":{"msgtype":"m.text","body":"right but we're thinking that we don't even need that, if we build consensus around 321","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$NNoyCfMbFb2ExqlmObPkY7omIk62ve8m9vcTqdhd2j4"},"rel_type":"m.thread"}},"ts":1674154434941,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hx_LwF1_EWVNn2KFfZYRTpmNrOjCj9EoQttJGy-odJg"},
{"content":{"msgtype":"m.text","body":"right?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$hx_LwF1_EWVNn2KFfZYRTpmNrOjCj9EoQttJGy-odJg"},"rel_type":"m.thread"}},"ts":1674154437469,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$F4DqDjXs76reI0p__RCgBEmBmPQYnZKyotvzyVyJeao"},
{"content":{"body":"Correct","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$F4DqDjXs76reI0p__RCgBEmBmPQYnZKyotvzyVyJeao"},"rel_type":"m.thread"}},"ts":1674154482543,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$IbeVSq13aciEWoKhe9QJgYizVmeffeLIweZntHklFDU"},
{"content":{"body":"There is one additional bit of complexity to support multiple AsyncContext instances. That is, for ALS, the context stored is actually a map of ALS instances to the current values associated with each. ","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$IbeVSq13aciEWoKhe9QJgYizVmeffeLIweZntHklFDU"},"rel_type":"m.thread"}},"ts":1674154506695,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$QHITCwNlBf3x3LOfS_tqA-y8EZEE1RXkVIxDFca-Nso"},
{"content":{"msgtype":"m.text","body":"Why's that a problem?","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$QHITCwNlBf3x3LOfS_tqA-y8EZEE1RXkVIxDFca-Nso"},"rel_type":"m.thread"}},"ts":1674154552362,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$nVcPtgAGW0LyXmr0sLsSH_pN802pPgYOnrcYxW_zDOk"},
{"content":{"body":"That's minor tho. But it would be convenient if the v8 API allowed me to store an embedder value directly rather than a v8::Value","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$nVcPtgAGW0LyXmr0sLsSH_pN802pPgYOnrcYxW_zDOk"},"rel_type":"m.thread"}},"ts":1674154559310,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$TyxCwN4DDEM9JXlzUd7W9_c6aJToLXGHbxiJFhAUQ7Y"},
{"content":{"body":"Not a problem, just a detail","msgtype":"m.text","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$TyxCwN4DDEM9JXlzUd7W9_c6aJToLXGHbxiJFhAUQ7Y"},"rel_type":"m.thread"}},"ts":1674154565592,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$u11LWMUIJLsvmTmF_xHBQC1KyURSAVx3wKsjgQBwaM8"},
{"content":{"msgtype":"m.text","body":"yeah, that's exactly what Justin's code does, I think","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$u11LWMUIJLsvmTmF_xHBQC1KyURSAVx3wKsjgQBwaM8"},"rel_type":"m.thread"}},"ts":1674154614852,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_qfPYHHokQWMddU9tvtyAhAev_vcEBFv1D9dHto3jeU"},
{"content":{"msgtype":"m.text","body":"definitely necessary!","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$_qfPYHHokQWMddU9tvtyAhAev_vcEBFv1D9dHto3jeU"},"rel_type":"m.thread"}},"ts":1674154620953,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$cXZPg2pxOI_Qj4sj5Y50mWjgb-14lqloaWGyJvL0IXY"},
{"content":{"msgtype":"m.text","body":"oh yeah I guess basically V8 should remove the existing API and just provide a higher AsyncContext API (or make it an assertion failure to use them both at once)","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$cXZPg2pxOI_Qj4sj5Y50mWjgb-14lqloaWGyJvL0IXY"},"rel_type":"m.thread"}},"ts":1674157451724,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xZOASO41wF-X-5rSmQccd4elITIyQXFSxArztNURVbI"},
{"content":{"msgtype":"m.text","body":"for Bloomberg's use case, we really want a C++-accessible API for all of this. I think that would be necessary for the browser-internal cases as well.","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$xZOASO41wF-X-5rSmQccd4elITIyQXFSxArztNURVbI"},"rel_type":"m.thread"}},"ts":1674157491556,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FfBMSqphhGrDsL6-ibeS8tD-5kFzduxsRrupomNMGTA"},
{"content":{"msgtype":"m.text","body":"> <@littledan:matrix.org> yeah, that's exactly what Justin's code does, I think\n\noh sorry I misunderstood this comment; ignore me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!siOjSOrhCVYVzIoThy:matrix.org/$_qfPYHHokQWMddU9tvtyAhAev_vcEBFv1D9dHto3jeU?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>yeah, that&#39;s exactly what Justin&#39;s code does, I think</blockquote></mx-reply>oh sorry I misunderstood this comment; ignore me","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":false,"m.in_reply_to":{"event_id":"$_qfPYHHokQWMddU9tvtyAhAev_vcEBFv1D9dHto3jeU"},"rel_type":"m.thread"}},"ts":1674158384213,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$P6sVTNNadx1-IJ3dCd0dOnJFA5d6O2VudHpZY8Fkkoo"},
{"content":{"msgtype":"m.text","body":"Justin Ridgewell Chengzhong Wu : For the TC39 slides, I want to suggest that we talk about OpenTelemetry rather than React Cache. It is a very real client-side use case, and it's also easy to understand based on the context from the previous example (it's just a more sophisticated version). I honestly still don't understand the React Cache case, and I don't think getting into a self-contained explanation of React would play well with theorists in the audience if we had to go down that rabbit hole. OpenTelemetry will sound very convincing to serious people, on the other hand :) and there are intuitive reasons for why you want to split a span on the client side, which Chengzhong Wu 's library shows.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> : For the TC39 slides, I want to suggest that we talk about OpenTelemetry rather than React Cache. It is a very real client-side use case, and it's also easy to understand based on the context from the previous example (it's just a more sophisticated version). I honestly still don't understand the React Cache case, and I don't think getting into a self-contained explanation of React would play well with theorists in the audience if we had to go down that rabbit hole. OpenTelemetry will sound very convincing to serious people, on the other hand :) and there are intuitive reasons for why you want to split a span on the client side, which <a href=\"https://matrix.to/#/@legendecas:matrix.org\">Chengzhong Wu</a> 's library shows."},"ts":1674170233097,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HxoP_Mz4bfknT4fGOYgDFa_aIX2UfbjlicvxH6bWdYY"},
{"content":{"msgtype":"m.text","body":"Sure"},"ts":1674170302017,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$TSv6hN8K-lgDgKETh5u_cnmECgNdfUwjFd4vMOAPTUw"},
{"content":{"msgtype":"m.text","body":"could also be fun to explain the relationship to Justin's awesome library above and/or James's ongoing work, but this can also just be in the air without slides"},"ts":1674170423531,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fv-gFCQ7C8r5SYDvF2KxvY4k_ChGSaqLk5xFe9H-DkY"},
{"content":{"msgtype":"m.text","body":"OpenTel would speak to me. I used to work with Yuri Shkuro."},"ts":1674172136890,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bt-m-4GHRd8sGIUBD4xDh1_4nvAqClcLa6tBRM7iH68"},
{"content":{"msgtype":"m.text","body":"Oh god, thenables are broken!","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$P6sVTNNadx1-IJ3dCd0dOnJFA5d6O2VudHpZY8Fkkoo"},"rel_type":"m.thread"}},"ts":1674172733411,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$1CawZtln7TyFT9rOMQLMEVyrNJ48VoZZ1OGhAJ1C-BI"},
{"content":{"msgtype":"m.text","body":"```js\nconst ctx = new AsyncContext()\n\nconst queue = [];\n\nconst thenable = {\n  then(onRes, _onRej) {\n    queue.push(\"thenable: \" + ctx.get());\n    onRes();\n  },\n};\n\nconst out = ctx.run(1, () => {\n  queue.push(\"new Promise\");\n  const p = new Promise(res => res(thenable));\n\n  queue.push(\"p.then\");\n  const p2 = p.then(() => thenable);\n\n  queue.push(\"p2.then\");\n  return p2.then(() => {\n    queue.push(\"promise: \" + ctx.get());\n  });\n});\n\nqueue.push(\"out.then\");\nout.then(() => {\n  queue.push(\"done\");\n  //hook.disable();\n  console.log(queue);\n});\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const ctx = new AsyncContext()\n\nconst queue = [];\n\nconst thenable = {\n  then(onRes, _onRej) {\n    queue.push(&quot;thenable: &quot; + ctx.get());\n    onRes();\n  },\n};\n\nconst out = ctx.run(1, () =&gt; {\n  queue.push(&quot;new Promise&quot;);\n  const p = new Promise(res =&gt; res(thenable));\n\n  queue.push(&quot;p.then&quot;);\n  const p2 = p.then(() =&gt; thenable);\n\n  queue.push(&quot;p2.then&quot;);\n  return p2.then(() =&gt; {\n    queue.push(&quot;promise: &quot; + ctx.get());\n  });\n});\n\nqueue.push(&quot;out.then&quot;);\nout.then(() =&gt; {\n  queue.push(&quot;done&quot;);\n  //hook.disable();\n  console.log(queue);\n});\n</code></pre>\n","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$1CawZtln7TyFT9rOMQLMEVyrNJ48VoZZ1OGhAJ1C-BI"},"rel_type":"m.thread"}},"ts":1674172775632,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NbrXpWSeC3FTtUiG2AyCy7I5isgev-qGfSdZghepLYw"},
{"content":{"msgtype":"m.text","body":"```\n[\n  'new Promise',\n  'p.then',\n  'p2.then',\n  'out.then',\n  'thenable: undefined',\n  'thenable: undefined',\n  'promise: 1',\n  'done'\n]\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>[\n  'new Promise',\n  'p.then',\n  'p2.then',\n  'out.then',\n  'thenable: undefined',\n  'thenable: undefined',\n  'promise: 1',\n  'done'\n]\n</code></pre>\n","m.relates_to":{"event_id":"$fdLRPv7OFj3pBRtKTuS1cUoUPhgjT9S-9db_-vVtL3k","is_falling_back":true,"m.in_reply_to":{"event_id":"$NbrXpWSeC3FTtUiG2AyCy7I5isgev-qGfSdZghepLYw"},"rel_type":"m.thread"}},"ts":1674172796759,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$7L0IJLaPFLGe2WEF4s77a-DrS1GgJeuJX1KI6ynTexw"}
]