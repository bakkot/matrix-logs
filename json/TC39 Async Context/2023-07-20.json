[
{"content":{"body":"It looks like there are a few spec-created iterators that use the generators machinery internally","msgtype":"m.text"},"ts":1689852897484,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$rxl8HUBgg8m3CchEJNJxEBx0271JBOVog6HsiwdpOpI"},
{"content":{"body":"currently I think this would only allow observing the AsyncContext generators state if you use `Object.defineProperty` to make one of the indexes of an array (or maybe also a regex) have a getter","format":"org.matrix.custom.html","formatted_body":"currently I think this would only allow observing the AsyncContext generators state if you use <code>Object.defineProperty</code> to make one of the indexes of an array (or maybe also a regex) have a getter","msgtype":"m.text"},"ts":1689852972024,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$T-OfXQkWcSeP_d13iCF_MvbPDNm4Q3a-z2ts2GZc9uo"},
{"content":{"body":"```js\nconst asyncVar = new AsyncContext.Variable();\n\nconst array = [23, 34, 45];\nObject.defineProperty(array, 1, {\n  get() {\n    return asyncVar.get();\n  }\n});\n\nconst iter = asyncVar.run(\"foo\", () => array.values());\n\nasyncVar.run(\"bar\", () => {\n    console.log([...iter]);  // [23, \"foo\", 45]\n});\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const asyncVar = new AsyncContext.Variable();\n\nconst array = [23, 34, 45];\nObject.defineProperty(array, 1, {\n  get() {\n    return asyncVar.get();\n  }\n});\n\nconst iter = asyncVar.run(\"foo\", () =&gt; array.values());\n\nasyncVar.run(\"bar\", () =&gt; {\n    console.log([...iter]);  // [23, \"foo\", 45]\n});\n</code></pre>\n","msgtype":"m.text"},"ts":1689852978280,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4bjwWTlUYgcmnrNyQhbtsd8KNUUGIHw0FAnPIPfLBC0"},
{"content":{"body":"but this would be more readily observable with iterators helpers","msgtype":"m.text"},"ts":1689852989832,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$n8mq-q_52kjBt09ecY3F2Rxgsc1pGRGCaPOZy4kRFEc"},
{"content":{"body":" * but this would be more readily observable with iterator helpers","m.new_content":{"body":"but this would be more readily observable with iterator helpers","msgtype":"m.text"},"m.relates_to":{"event_id":"$n8mq-q_52kjBt09ecY3F2Rxgsc1pGRGCaPOZy4kRFEc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689852992952,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$EbMTAxiZS50-MSwfT3-hEc83XLojUBO6saO85l9y8vo"},
{"content":{"body":"```js\nconst asyncVar = new AsyncContext.Variable();\n\nconst array = [23, 34, 45];\nconst iter1 = array.values();\nconst iter2 = asyncVar.run(\"foo\", () => {\n    return iter1.map(v => [asyncVar.get(), v]);\n});\nasyncVar.run(\"bar\", () => {\n    console.log([...iter2]);  // [[\"foo\", 23], [\"foo\", 34], [\"foo\", 45]]\n});\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const asyncVar = new AsyncContext.Variable();\n\nconst array = [23, 34, 45];\nconst iter1 = array.values();\nconst iter2 = asyncVar.run(\"foo\", () =&gt; {\n    return iter1.map(v =&gt; [asyncVar.get(), v]);\n});\nasyncVar.run(\"bar\", () =&gt; {\n    console.log([...iter2]);  // [[\"foo\", 23], [\"foo\", 34], [\"foo\", 45]]\n});\n</code></pre>\n","msgtype":"m.text"},"ts":1689853210506,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$yURWEtQ8NVDs9nWm1-g5vdxLkOl9LYwqVOuMYt63I_k"},
{"content":{"body":"is this expected?","msgtype":"m.text"},"ts":1689853276252,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$3Ko0Asur4KGg8yOoUQK82GTMaMCIhvDPmDZDeRwKwds"}
]