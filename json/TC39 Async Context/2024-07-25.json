[
{"content":{"body":"I think React is actually kind of a _bad_ basis in a way, because I feel it’s pointing us down a road that is only useful for functional code and not so much for procedural code.","format":"org.matrix.custom.html","formatted_body":"I think React is actually kind of a <em>bad</em> basis in a way, because I feel it’s pointing us down a road that is only useful for functional code and not so much for procedural code.","msgtype":"m.text"},"ts":1721873490241,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$tsOm74-XR3wbRT0NBnBNzoxG0021723N3TmDCbfbP9Y"},
{"content":{"body":"> <@stephenhicks:matrix.org> The zalgo situation is the most concerning part. I'd be more comfortable if it's statically determined per API. So something like - lifecycle callbacks are always unwrapped, events are always wrapped. Unwrapped callbacks have an opt-out by manually wrapping them. Wrapped callbacks _may_ have an opt-out via a snapshot property. I'm still not convinced that it's a problem to sometimes run a callback in the top-level/initial snapshot (e.g. if it's dispatched from the parser).\n\nI don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as using the registration context is","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24GHJLc2CVxV-PMVgYIug4QlLSzHeGWTSULEyDVvoWEM4\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>The zalgo situation is the most concerning part. I'd be more comfortable if it's statically determined per API. So something like - lifecycle callbacks are always unwrapped, events are always wrapped. Unwrapped callbacks have an opt-out by manually wrapping them. Wrapped callbacks _may_ have an opt-out via a snapshot property. I'm still not convinced that it's a problem to sometimes run a callback in the top-level/initial snapshot (e.g. if it's dispatched from the parser).</blockquote></mx-reply>I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as using the registration context is","m.relates_to":{"m.in_reply_to":{"event_id":"$GHJLc2CVxV-PMVgYIug4QlLSzHeGWTSULEyDVvoWEM4"}},"msgtype":"m.text"},"ts":1721875496831,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_47_4QyietDt0XZDgjhtlSwaAMeCFzoJGSDBqosFXsg"},
{"content":{"body":"“Consistently do nothing” just isn’t an option for certain APIs which people have been bringing up here","msgtype":"m.text"},"ts":1721875860632,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9CuZPQHA-lKls5EYMtpKj_oRrJfGFblV3arpubNKbHE"},
{"content":{"body":"> <@stephenhicks:matrix.org> The zalgo situation is the most concerning part. I'd be more comfortable if it's statically determined per API. So something like - lifecycle callbacks are always unwrapped, events are always wrapped. Unwrapped callbacks have an opt-out by manually wrapping them. Wrapped callbacks _may_ have an opt-out via a snapshot property. I'm still not convinced that it's a problem to sometimes run a callback in the top-level/initial snapshot (e.g. if it's dispatched from the parser).\n\n * I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as falling back to the registration context is","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24GHJLc2CVxV-PMVgYIug4QlLSzHeGWTSULEyDVvoWEM4\">In reply to</a> <a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">@stephenhicks:matrix.org</a><br>The zalgo situation is the most concerning part. I'd be more comfortable if it's statically determined per API. So something like - lifecycle callbacks are always unwrapped, events are always wrapped. Unwrapped callbacks have an opt-out by manually wrapping them. Wrapped callbacks _may_ have an opt-out via a snapshot property. I'm still not convinced that it's a problem to sometimes run a callback in the top-level/initial snapshot (e.g. if it's dispatched from the parser).</blockquote></mx-reply> * I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as falling back to the registration context is","m.new_content":{"body":"I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as falling back to the registration context is","msgtype":"m.text"},"m.relates_to":{"event_id":"$_47_4QyietDt0XZDgjhtlSwaAMeCFzoJGSDBqosFXsg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721875871540,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ew789ccMuUEN7yuz8YsPLkJHHPia3nhOF5graUOLVG0"},
{"content":{"body":"> <@littledan:matrix.org> I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as falling back to the registration context is\n\nThere’s not really a way to bind _out_ of registration-time. The other option being “have no context at all” is maybe not super helpful or intuitive, but you can at least fix that. Whereas if there is an _expectation_ of not having a context then that seems like a reasonable solution to me.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG%3Amatrix.org/%24_47_4QyietDt0XZDgjhtlSwaAMeCFzoJGSDBqosFXsg\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I don’t understand why running it in the top level snapshot wouldn’t also amount to Zalgo to the same extent as falling back to the registration context is</blockquote></mx-reply>There’s not really a way to bind <em>out</em> of registration-time. The other option being “have no context at all” is maybe not super helpful or intuitive, but you can at least fix that. Whereas if there is an <em>expectation</em> of not having a context then that seems like a reasonable solution to me.","m.relates_to":{"m.in_reply_to":{"event_id":"$_47_4QyietDt0XZDgjhtlSwaAMeCFzoJGSDBqosFXsg"}},"msgtype":"m.text"},"ts":1721876076602,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$-ON4KO_LRQ0BItdffcsEa0VUGFMw0JypDKyY82IybbQ"},
{"content":{"body":"But yes, an imperfect solution.","msgtype":"m.text"},"ts":1721876085680,"senderName":"Stephen Belanger","senderId":"@stephenbelanger:matrix.org","id":"$iN09rmB0uCXPyNyLgTmEh2QSx4mUcCuMUdkXOEanlzg"}
]