[
{"content":{"body":"> <@littledan:matrix.org> also: Are we putting AsyncContext on the agenda for this TC39 meeting? We need to decide by tomorrow and add it if so.\n\nThanks for the reminder! Agenda item submitted: https://github.com/tc39/agendas/pull/1334","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$GL1RMxvyj36kc5FcemiluCt-7zvyRXSLY6uLjvmahE0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>also: Are we putting AsyncContext on the agenda for this TC39 meeting? We need to decide by tomorrow and add it if so.</blockquote></mx-reply>Thanks for the reminder! Agenda item submitted: https://github.com/tc39/agendas/pull/1334","m.relates_to":{"m.in_reply_to":{"event_id":"$GL1RMxvyj36kc5FcemiluCt-7zvyRXSLY6uLjvmahE0"}},"msgtype":"m.text"},"ts":1678417161489,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$jaCdEstaHjYsnuxPFphWawd02scgbbeGTRxntN9ysPA"},
{"content":{"body":"> <@benjamn:matrix.org> If we (non-champions) have additional use cases to suggest, should we open issues on the proposal repo? Or sketch them here?\n\nwhatever works for you is welcomed!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$j5qB8VhOKvlumn7592IrKbz0oRTnIX97W00scuxtDDU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@benjamn:matrix.org\">@benjamn:matrix.org</a><br>If we (non-champions) have additional use cases to suggest, should we open issues on the proposal repo? Or sketch them here?</blockquote></mx-reply>whatever works for you is welcomed!","m.relates_to":{"m.in_reply_to":{"event_id":"$j5qB8VhOKvlumn7592IrKbz0oRTnIX97W00scuxtDDU"}},"msgtype":"m.text"},"ts":1678417280946,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$YveWBRPyeeJxtSdJxmcDk24K3_4S6wBRNlhR5oDJG90"},
{"content":{"body":"Working on slides now","msgtype":"m.text"},"ts":1678427582070,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$uTXks7xC0WrvnHavQ40fJ6Cemj6oIIqEnqB3ZRaeKcY"},
{"content":{"body":"https://docs.google.com/presentation/d/1LLcZxYyuQ1DhBH1htvEFp95PkeYM5nLSrlQoOmWpYEI/edit#slide=id.p","msgtype":"m.text"},"ts":1678433187911,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$FakYHTnQ9FmdBuKcu1JiBSJ3ol3JLyybr0Dfi3LFWFE"},
{"content":{"body":"Great, thanks for writing slides, Justin, these look really good! Some notes:\n- IMPORTANT: right before Slide 2, insert a slide which quickly lists some use cases (including at least 2 client-side use cases, plus a third thing which is internal infrastructure within web standards [Yoav's thing]); hopefully this can also link to Andreu's more detailed description at the top of the README [The rest of these comments are nits, but the motivation is key.]\n- In Slide 4, note explicitly that this is what Promise .then, setTimeout, etc would do. [Or: Consider consolidating slides 3 and 4 into something which just shows the interface, saving the pseudocode implementation for a bonus slide. I am undecided on whether we should do this]\n- Write somewhere on the slides that we consider all of the questions raised to be things that we aim to resolve between Stage 2 and Stage 3. Emphasize this especially for the web platform integration and unhandled rejection context--these must be spelled out, and we plan to work with Yoav Weiss on this, who was already thinking in this direction for the previously mentioned internal use case.\n- The constructor parameters idea is really superficial; should it really be the first slide? Maybe we should start with the important issues. [Also IMO the parameter order should be reversed but that's a comment I should make in the issue]\n- The web platform doesn't have a lot of cases to consider because it's weird--this is just an inherent difficulty with AsyncContext wherever it's done. I think \"case by case\" might make it sound too bad--we'll have some organizing principles, we just don't have a proposal yet. The proposal here will be a precondition for Stage 3. (BTW: Avoid saying \"a Stage $n question\" because people use this term both to mean, a precondition to enter $n or something to discuss during $n)\n- Focus on explaining next steps towards resolution when presenting each of these slides.\n[More notes to come, have to go]","format":"org.matrix.custom.html","formatted_body":"<p>Great, thanks for writing slides, Justin, these look really good! Some notes:</p>\n<ul>\n<li>IMPORTANT: right before Slide 2, insert a slide which quickly lists some use cases (including at least 2 client-side use cases, plus a third thing which is internal infrastructure within web standards [Yoav's thing]); hopefully this can also link to Andreu's more detailed description at the top of the README [The rest of these comments are nits, but the motivation is key.]</li>\n<li>In Slide 4, note explicitly that this is what Promise .then, setTimeout, etc would do. [Or: Consider consolidating slides 3 and 4 into something which just shows the interface, saving the pseudocode implementation for a bonus slide. I am undecided on whether we should do this]</li>\n<li>Write somewhere on the slides that we consider all of the questions raised to be things that we aim to resolve between Stage 2 and Stage 3. Emphasize this especially for the web platform integration and unhandled rejection context--these must be spelled out, and we plan to work with Yoav Weiss on this, who was already thinking in this direction for the previously mentioned internal use case.</li>\n<li>The constructor parameters idea is really superficial; should it really be the first slide? Maybe we should start with the important issues. [Also IMO the parameter order should be reversed but that's a comment I should make in the issue]</li>\n<li>The web platform doesn't have a lot of cases to consider because it's weird--this is just an inherent difficulty with AsyncContext wherever it's done. I think &quot;case by case&quot; might make it sound too bad--we'll have some organizing principles, we just don't have a proposal yet. The proposal here will be a precondition for Stage 3. (BTW: Avoid saying &quot;a Stage $n question&quot; because people use this term both to mean, a precondition to enter $n or something to discuss during $n)</li>\n<li>Focus on explaining next steps towards resolution when presenting each of these slides.<br>[More notes to come, have to go]</li>\n</ul>\n","msgtype":"m.text"},"ts":1678458703567,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4CT207Ha6JquV5La4ShBKK7TF59mpbAHYOPHoEEmV78"},
{"content":{"body":"speaking of constructor parameters, I really like the `defaultValue` idea, though I suppose you could subclass `AsyncContext` to add functionality like that if you wanted it","format":"org.matrix.custom.html","formatted_body":"speaking of constructor parameters, I really like the <code>defaultValue</code> idea, though I suppose you could subclass <code>AsyncContext</code> to add functionality like that if you wanted it","msgtype":"m.text"},"ts":1678465446825,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$rsrBJDo3iVUqxDkPp7CZa_gztVPu_N0cJhKPMa7FGwo"},
{"content":{"body":"could you? since you'd need to wrap all uses of the `AsyncContext` in a `run`, I think","format":"org.matrix.custom.html","formatted_body":"could you? since you'd need to wrap all uses of the <code>AsyncContext</code> in a <code>run</code>, I think","msgtype":"m.text"},"ts":1678465496847,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$QQoCJ_siUMttmuW_-y0fi72jJzjWAAzhEwMhVHRqvKc"},
{"content":{"body":"oh, by overriding `get` I guess","format":"org.matrix.custom.html","formatted_body":"oh, by overriding <code>get</code> I guess","msgtype":"m.text"},"ts":1678465525719,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$QcGB13aEjQSKxr2jx7ZWQQoukocf7CJx3apxFX_vhj0"},
{"content":{"body":"I've also been asked about the possibility of setting up a construction-time default value but really don't think it's a good idea. I imagine that it would have the same basic effect as `asyncLocalStorage.enterWith(...)`, modifying the state of the current async context unless it is defined as \"use this value as the default if the current storage for this is undefined\"","format":"org.matrix.custom.html","formatted_body":"I've also been asked about the possibility of setting up a construction-time default value but really don't think it's a good idea. I imagine that it would have the same basic effect as <code>asyncLocalStorage.enterWith(...)</code>, modifying the state of the current async context unless it is defined as &quot;use this value as the default if the current storage for this is undefined&quot;","msgtype":"m.text"},"ts":1678465681561,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$vlvW-8jr64UzeJdm_UPpqlwypp3plHaK5iX710I2jXw"},
{"content":{"body":"if that's the semantic, then I can get on board with it, but if setting the value on the constructor actually modifies the async context, definitely not","msgtype":"m.text"},"ts":1678465780661,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$3lWeIM1uBldvyPlpqCGALYUs5f9P4sMTC0cvjdT05DQ"},
{"content":{"body":"I'm not familiar with the `AsyncLocalStorage` API, but I don't think I understand the difference between those two options","format":"org.matrix.custom.html","formatted_body":"I'm not familiar with the <code>AsyncLocalStorage</code> API, but I don't think I understand the difference between those two options","msgtype":"m.text"},"ts":1678466104504,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$S3enMLRpewIJ0_xr-PMz0UsnWcc6YYgQdtQpQElL9EI"},
{"content":{"body":"would it lead to any observable difference?","msgtype":"m.text"},"ts":1678466110229,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$2MjLlLiLMOPSiqYwUwtSe_z9K95zaDz4GwocaRDnVGc"},
{"content":{"body":"oh, is this about snapshot?","msgtype":"m.text"},"ts":1678466139615,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$n0nhcBLmvOgNzrYmtuhSrDw-8s5WYFzbB1fHmOeIb9A"},
{"content":{"body":" * oh, is this about wrap?","m.new_content":{"body":"oh, is this about wrap?","msgtype":"m.text"},"m.relates_to":{"event_id":"$n0nhcBLmvOgNzrYmtuhSrDw-8s5WYFzbB1fHmOeIb9A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1678466156518,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$6j_vA7VzFrdcTZNtzLqax8UP0pEk2fgEA5hDXckdtIo"},
{"content":{"body":"The default value would only be returned if the mapping can’t be found in the global state","msgtype":"m.text"},"ts":1678466217377,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$0H_jJQiuRj1gXJvTH3jwra-6Qc4LCJ7c7B9GZxtlyMU"},
{"content":{"body":"You wouldn’t be able to modify the context instance after the fact","msgtype":"m.text"},"ts":1678466237588,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$lmSEVthEa48RNn6J9lK35uv-9d7M6oDKit8SKuJ0a8o"},
{"content":{"body":"So just modifying the get method’s last step","msgtype":"m.text"},"ts":1678466252511,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$-oHAYlcpeCHg5HrBDfVTRkonXOGSUR9qboi90-4IB-E"},
{"content":{"body":"So I guess the key question then is what happens in the `AsyncLocalStorage.exit(...)` case, which Node.js defines as exiting the context scope but we've implemented as being equivalent to `als.run(undefined, () => {})`","format":"org.matrix.custom.html","formatted_body":"So I guess the key question then is what happens in the <code>AsyncLocalStorage.exit(...)</code> case, which Node.js defines as exiting the context scope but we've implemented as being equivalent to <code>als.run(undefined, () =&gt; {})</code>","msgtype":"m.text"},"ts":1678466329939,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$ty4FkEhusd_Jdls_DGzq33aeupzn4jT4nNbdhHl8xag"},
{"content":{"body":"Setting to an explicit undefined isn’t the same as no found mapping, so you’d get undefined","msgtype":"m.text"},"ts":1678466382930,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$lv4YNjIsBG1yqaFYQpTDg-JrBCPs86yxpjPO7yo3ROs"},
{"content":{"body":"e.g. what would you expect in the following:\n\n```\nconst als = new AsyncLocalStorage({ defaultValue: 'foo' });\nals.run(123, () => {\n  als.exit(() => {\n    console.log(als.getStore()); // undefined or foo?\n  }\n})\n```","format":"org.matrix.custom.html","formatted_body":"<p>e.g. what would you expect in the following:</p>\n<pre><code>const als = new AsyncLocalStorage({ defaultValue: 'foo' });\nals.run(123, () =&gt; {\n  als.exit(() =&gt; {\n    console.log(als.getStore()); // undefined or foo?\n  }\n})\n</code></pre>\n","msgtype":"m.text"},"ts":1678466407987,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$Fq2ipsAalo7Y13INIThkgYkoMGy7PB5b8tDW7LEpZvQ"},
{"content":{"body":"Undefined, but it could really be either. AsyncContext doesn’t have an exit method, so this is really just Node","msgtype":"m.text"},"ts":1678466502488,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2ggISR79FfdTLP7HVfbLsT9P8cqnbfE_yrRaf8IJFEs"},
{"content":{"body":"if this is only something that is a concern when implementing `AsyncLocalStorage` in terms of `AsyncContext`, I'm not sure that's enough to block this addition","format":"org.matrix.custom.html","formatted_body":"if this is only something that is a concern when implementing <code>AsyncLocalStorage</code> in terms of <code>AsyncContext</code>, I'm not sure that's enough to block this addition","msgtype":"m.text"},"ts":1678466544627,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$IiushxibtjKBdnGi_PJDZhG-82BsFPVKZQIUk3XLKM8"},
{"content":{"body":"it can surely be implemented anyway with an additional layer of indirection, right?","msgtype":"m.text"},"ts":1678466560310,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$TFyi3lLgcvlqhD2g79yARPJcduDuIxuX1em0A54QVis"},
{"content":{"body":"yeah, I think I just wanted to make sure that adding the default value does not actually modify the current storage context","msgtype":"m.text"},"ts":1678466590374,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$VkxAlgYnN79iFKj4LYUYPql4NtsFRy_rVcMtOQk9rig"},
{"content":{"body":"if it's local to the `AsyncContext` instance itself, then +1","format":"org.matrix.custom.html","formatted_body":"if it's local to the <code>AsyncContext</code> instance itself, then +1","msgtype":"m.text"},"ts":1678466603307,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$kLJjhaa5RFpgtiOu-FgEL6Uulhdxaj1wPZci97RvLxc"},
{"content":{"body":"> <@abotella:igalia.com> is there some link for the react use case?\n\nIf we don't include the React or Bloomberg Terminal use cases, it seems like the only non-browser-internal use cases we have logging, timing and OpenTelemetry","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!eQuZUAhGqudVFPodUG:matrix.org/$4cE5bRF3saly-b4E8VzssY2hT5_nqpaLJ85CjXwMcYI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>is there some link for the react use case?</blockquote></mx-reply>If we don't include the React or Bloomberg Terminal use cases, it seems like the only non-browser-internal use cases we have logging, timing and OpenTelemetry","m.relates_to":{"m.in_reply_to":{"event_id":"$4cE5bRF3saly-b4E8VzssY2hT5_nqpaLJ85CjXwMcYI"}},"msgtype":"m.text"},"ts":1678469072511,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$nJQp_X-7kWZF-EPw0XCCvfBg0I1-FuQFL_4VgMFGYxA"},
{"content":{"body":"the browser-internal use cases are relevant, of course, but it'd be great to have more use cases for having `AsyncContext` as an actual JS built-in","format":"org.matrix.custom.html","formatted_body":"the browser-internal use cases are relevant, of course, but it'd be great to have more use cases for having <code>AsyncContext</code> as an actual JS built-in","msgtype":"m.text"},"ts":1678469155755,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$MyL3zW2M9Oz-tXWmvEpn1HlcLpS9X7pn3X5X4-OYQOI"}
]