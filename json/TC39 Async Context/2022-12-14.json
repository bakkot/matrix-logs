[
{"content":{"org.matrix.msc1767.message":[{"body":"We should talk about how AsyncContext relates to unhandled promise rejections. For our usage in Bloomberg, we'd really want the context *where the promise was created* to be restored when running the unhandled rejection event. (This could sort of be modeled with wrap if used in the spec algorithm for creating a promise.) Do others have similar requirements?","mimetype":"text/plain"},{"body":"We should talk about how AsyncContext relates to unhandled promise rejections. For our usage in Bloomberg, we'd really want the context <em>where the promise was created</em> to be restored when running the unhandled rejection event. (This could sort of be modeled with wrap if used in the spec algorithm for creating a promise.) Do others have similar requirements?","mimetype":"text/html"}],"body":"We should talk about how AsyncContext relates to unhandled promise rejections. For our usage in Bloomberg, we'd really want the context *where the promise was created* to be restored when running the unhandled rejection event. (This could sort of be modeled with wrap if used in the spec algorithm for creating a promise.) Do others have similar requirements?","msgtype":"m.text","format":"org.matrix.custom.html","formatted_body":"We should talk about how AsyncContext relates to unhandled promise rejections. For our usage in Bloomberg, we'd really want the context <em>where the promise was created</em> to be restored when running the unhandled rejection event. (This could sort of be modeled with wrap if used in the spec algorithm for creating a promise.) Do others have similar requirements?"},"ts":1671058512593,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wx_aSFx3OwFEZuwrlXUC2xqD4zfERfZPk-eWLphtxm0"}
]