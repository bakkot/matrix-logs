[
{"content":{"body":"I've updated https://github.com/tc39/proposal-grouped-and-auto-accessors with initial spec text and plan to bring it back to committee in June for possible advancement. The spec text is aligned with the proposed spec text for Stage 3 Decorators, and expands upon the current `accessor` keyword form as we discussed when we added the `accessor` keyword to the Decorators proposal.","format":"org.matrix.custom.html","formatted_body":"I've updated https://github.com/tc39/proposal-grouped-and-auto-accessors with initial spec text and plan to bring it back to committee in June for possible advancement. The spec text is aligned with the proposed spec text for Stage 3 Decorators, and expands upon the current <code>accessor</code> keyword form as we discussed when we added the <code>accessor</code> keyword to the Decorators proposal.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I've updated https://github.com/tc39/proposal-grouped-and-auto-accessors with initial spec text and plan to bring it back to committee in June for possible advancement. The spec text is aligned with the proposed spec text for Stage 3 Decorators, and expands upon the current `accessor` keyword form as we discussed when we added the `accessor` keyword to the Decorators proposal.","mimetype":"text/plain"},{"body":"I've updated https://github.com/tc39/proposal-grouped-and-auto-accessors with initial spec text and plan to bring it back to committee in June for possible advancement. The spec text is aligned with the proposed spec text for Stage 3 Decorators, and expands upon the current <code>accessor</code> keyword form as we discussed when we added the <code>accessor</code> keyword to the Decorators proposal.","mimetype":"text/html"}]},"ts":1652833892830,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$yCumYOnMVDKe11r17WJNz_8rUo21zWR4ytqxiuLW4c8"},
{"content":{"body":"Full spec text is at https://tc39.es/proposal-grouped-and-auto-accessors. I will update the website link in the GitHub Repo as soon as a chair is able to fix my permissions in the repo.","msgtype":"m.text","org.matrix.msc1767.text":"Full spec text is at https://tc39.es/proposal-grouped-and-auto-accessors. I will update the website link in the GitHub Repo as soon as a chair is able to fix my permissions in the repo."},"ts":1652833944954,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$GtHL9CsPJkG4U8xRr3vCUv9xisBU5RD7AQOS83weqUs"},
{"content":{"body":"pzuraq: I wonder if we need a more general name than \"ClassElementDefinition Record\", considering object literals also have _MethodDefinition_ elements. In the auto-accessors proposal I add a second thing to an Object Literal that produces a \"ClassElementDefinition Record\", making it feel even more out of place in those algorithms.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: I wonder if we need a more general name than &quot;ClassElementDefinition Record&quot;, considering object literals also have <em>MethodDefinition</em> elements. In the auto-accessors proposal I add a second thing to an Object Literal that produces a &quot;ClassElementDefinition Record&quot;, making it feel even more out of place in those algorithms.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"pzuraq: I wonder if we need a more general name than \"ClassElementDefinition Record\", considering object literals also have _MethodDefinition_ elements. In the auto-accessors proposal I add a second thing to an Object Literal that produces a \"ClassElementDefinition Record\", making it feel even more out of place in those algorithms.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: I wonder if we need a more general name than &quot;ClassElementDefinition Record&quot;, considering object literals also have <em>MethodDefinition</em> elements. In the auto-accessors proposal I add a second thing to an Object Literal that produces a &quot;ClassElementDefinition Record&quot;, making it feel even more out of place in those algorithms.","mimetype":"text/html"}]},"ts":1652834438140,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$elmquhMPgl6hrprDq_SI-uaRGprpHKB95Z8vDbSbPKc"},
{"content":{"body":"yeah the overlap there is a bit odd for sure","msgtype":"m.text","org.matrix.msc1767.text":"yeah the overlap there is a bit odd for sure"},"ts":1652884060378,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$UkK74aCiM8v4d39lTaQc_UaA26cZurH0lSkCvuPoapo"},
{"content":{"body":"open to naming suggestions","msgtype":"m.text","org.matrix.msc1767.text":"open to naming suggestions"},"ts":1652884064747,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$KGlQYBtfrh8J6S2FUoofRGWm63pnxwB55d1s8DBmgtw"},
{"content":{"body":"> <@pzura:matrix.org> ljharb: can you remove zenparsing@gmail.com from the decorators meeting invites? There are two invites also, since we have two different times\n\ndone","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!jiQJvracogtdUglzPZ:matrix.org/$FX0CduxiWGCPfauoTARHMRiX1a0737MZ6Fv-pspDYiM?via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@pzura:matrix.org\">@pzura:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you remove zenparsing@gmail.com from the decorators meeting invites? There are two invites also, since we have two different times</blockquote></mx-reply>done","m.relates_to":{"m.in_reply_to":{"event_id":"$FX0CduxiWGCPfauoTARHMRiX1a0737MZ6Fv-pspDYiM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@pzura:matrix.org> ljharb: can you remove zenparsing@gmail.com from the decorators meeting invites? There are two invites also, since we have two different times\n\ndone","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!jiQJvracogtdUglzPZ:matrix.org/$FX0CduxiWGCPfauoTARHMRiX1a0737MZ6Fv-pspDYiM?via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@pzura:matrix.org\">@pzura:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you remove zenparsing@gmail.com from the decorators meeting invites? There are two invites also, since we have two different times</blockquote></mx-reply>done","mimetype":"text/html"}]},"ts":1652889413782,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oh5LLGwXSPOIyE8F0p9aaa6Ame65rn4iXoJm7W2irZk"},
{"content":{"body":"> <@pzura:matrix.org> open to naming suggestions\n\nIt could just be as simple as \"MemberDefinition Record\", \"PropertyDefinition Record\", or \"ElementDefinition Record\". \"PropertyDefinition\" aligns with \"PropertyDescriptor\" even if it has always felt out of place calling a method a property. I'm personally partial to \"MemberDefinition\", since it is consistent with terms like \"class member\", \"object literal member\", and possible future things like enum members. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!jiQJvracogtdUglzPZ:matrix.org/$KGlQYBtfrh8J6S2FUoofRGWm63pnxwB55d1s8DBmgtw?via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@pzura:matrix.org\">@pzura:matrix.org</a><br />open to naming suggestions</blockquote></mx-reply>It could just be as simple as &quot;MemberDefinition Record&quot;, &quot;PropertyDefinition Record&quot;, or &quot;ElementDefinition Record&quot;. &quot;PropertyDefinition&quot; aligns with &quot;PropertyDescriptor&quot; even if it has always felt out of place calling a method a property. I'm personally partial to &quot;MemberDefinition&quot;, since it is consistent with terms like &quot;class member&quot;, &quot;object literal member&quot;, and possible future things like enum members.","m.relates_to":{"m.in_reply_to":{"event_id":"$KGlQYBtfrh8J6S2FUoofRGWm63pnxwB55d1s8DBmgtw"}},"msgtype":"m.text"},"ts":1652892081077,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2xfkXKgJJl9kKE4IKZI-vqJfRgWKiWAEYCC9SxMj1RM"}
]