[
{"content":{"body":"is there a maintainers meeting this week? I wanted to attend, follow the discussion around the async helpers RFC if there is any, but maybe people are away this week","msgtype":"m.text","org.matrix.msc1767.text":"is there a maintainers meeting this week? I wanted to attend, follow the discussion around the async helpers RFC if there is any, but maybe people are away this week"},"ts":1670526245014,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$jLKCQGVTUhF05FI3t3238AcLLtDuhUed1vyJq8ILLuI"},
{"content":{"body":"I'm here","msgtype":"m.text","org.matrix.msc1767.text":"I'm here"},"ts":1670526255131,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$gfl8ECG9mMS4qvYh_Um5W_s2pN2UVmRDC2lOkabR7fw"},
{"content":{"body":"I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","format":"org.matrix.custom.html","formatted_body":"<p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","mimetype":"text/plain"},{"body":"<p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","mimetype":"text/html"}]},"ts":1670539249748,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$ekT0lwslLm628tcD49YvQhQ9XOX9JWWhTvfKchlTCiw"},
{"content":{"body":" * I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","format":"org.matrix.custom.html","formatted_body":" * <p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","m.new_content":{"body":"I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","format":"org.matrix.custom.html","formatted_body":"<p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","mimetype":"text/plain"},{"body":"<p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$ekT0lwslLm628tcD49YvQhQ9XOX9JWWhTvfKchlTCiw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I don't remember how we got to the idea that there were only a handful of `.then($DONE, $DONE)` invocations:\n\n```\n~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n```\n\nEither way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?\nAlso, unrelatedly, I realized `grep -ia` and `grep -HErn` are some of my more common invocations, and they can be combined into `grep -HErnia` ðŸ˜³","mimetype":"text/plain"},{"body":" * <p>I don't remember how we got to the idea that there were only a handful of <code>.then($DONE, $DONE)</code> invocations:</p>\n<pre><code>~/repos/test262$ grep -HErn 'then\\(\\$DONE, \\$DONE\\)' test/ | cut -d : -f 1 | sort | uniq | grep -v 'test/harness/' | wc -l\n5276\n</code></pre>\n<p>Either way, I don't mind writing a transform, but does that change the approach we want to take to existing tests?<br>Also, unrelatedly, I realized <code>grep -ia</code> and <code>grep -HErn</code> are some of my more common invocations, and they can be combined into <code>grep -HErnia</code> ðŸ˜³</p>\n","mimetype":"text/html"}]},"ts":1670539263369,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$_cYV1_goY6YqNo-QSJOX903EJVmXDlxDHXfc2q-oULk"},
{"content":{"body":"Also jugglinmike I couldn't find anything in the linter checking async flags, are there other changes we were talking about? Sorry, I forgot what the conclusion was around what might need to be changed in the linter","format":"org.matrix.custom.html","formatted_body":"Also <a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a> I couldn't find anything in the linter checking async flags, are there other changes we were talking about? Sorry, I forgot what the conclusion was around what might need to be changed in the linter","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Also jugglinmike I couldn't find anything in the linter checking async flags, are there other changes we were talking about? Sorry, I forgot what the conclusion was around what might need to be changed in the linter","mimetype":"text/plain"},{"body":"Also <a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a> I couldn't find anything in the linter checking async flags, are there other changes we were talking about? Sorry, I forgot what the conclusion was around what might need to be changed in the linter","mimetype":"text/html"}]},"ts":1670539451080,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$D3TgxyoYul1PGmCyMqXzTLpfYYbyNYslxO6pJG8BX9s"},
{"content":{"body":"There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node.","msgtype":"m.text","org.matrix.msc1767.text":"There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node."},"ts":1670542042882,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$1hTQ0lq7VKO_Ayl40qkRLUjjhJ3rrTskYR8qtJ6s21k"},
{"content":{"body":" * There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node.","m.new_content":{"body":"There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node.","msgtype":"m.text","org.matrix.msc1767.text":"There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node."},"m.relates_to":{"event_id":"$1hTQ0lq7VKO_Ayl40qkRLUjjhJ3rrTskYR8qtJ6s21k","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * There is one case where asyncTest returning a promise is extremely useful: testing asyncTest. Without asyncTest returning a promise, the promises that are created by the functions passed to asyncTest are not necessarily fulfilled before the call to asyncTest completes, making it hard to observe their execution deterministically. I can still observe their side effects by doing e.g. await Promise.resolve(); and letting the event loop run, but I'm not sure if that's a legit approach or just happens to play nice with node."},"ts":1670542059350,"senderName":"cjtenny","senderId":"@ctenny:igalia.com","id":"$lg-IaXnmjreNnz8bTmlY0yOLwtFrC8eqtmYlft54pDk"}
]