[
{"content":{"body":"for https://github.com/tc39/test262/pull/4528#discussion_r2349906917, ptomato (intermittent availability) asks that the test avoid a mini-implementation. I agree with the reasoning that it is hard to tell if the implementation or the mini-implementation is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).\n\nAs an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-implementation is correct.","format":"org.matrix.custom.html","formatted_body":"<p>for https://github.com/tc39/test262/pull/4528#discussion_r2349906917, <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato (intermittent availability)</a> asks that the test avoid a mini-implementation. I agree with the reasoning that it is hard to tell if the implementation or the mini-implementation is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).</p>\n<p>As an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-implementation is correct.</p>\n","m.mentions":{"user_ids":["@pchimento:igalia.com"]},"msgtype":"m.text"},"ts":1759272460705,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gGiZqZ5nhrU6J1oWHJE3JTtPHy01_tgb9QfWWqY9IaM"},
{"content":{"body":"(In this specific case it's arguably not a mini-implementation but rather just checking \"invariant properties of outputs that must hold across multiple inputs\", as the slides linked from that comment say, which I think is better still.)","m.mentions":{},"msgtype":"m.text"},"ts":1759272543724,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mmr3fNclNHOY2HF8obNkYcCgvs3neGbQ2j5Ojgn4EEE"},
{"content":{"body":"* for https://github.com/tc39/test262/pull/4528#discussion\\_r2349906917, ptomato (intermittent availability) asks that the test avoid a mini-polyfill. I agree with the reasoning that it is hard to tell if the implementation or the mini-polyfill is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).\n\nAs an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-polyfill is correct.","format":"org.matrix.custom.html","formatted_body":"* <p>for https://github.com/tc39/test262/pull/4528#discussion_r2349906917, <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato (intermittent availability)</a> asks that the test avoid a mini-polyfill. I agree with the reasoning that it is hard to tell if the implementation or the mini-polyfill is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).</p>\n<p>As an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-polyfill is correct.</p>\n","m.mentions":{},"m.new_content":{"body":"for https://github.com/tc39/test262/pull/4528#discussion\\_r2349906917, ptomato (intermittent availability) asks that the test avoid a mini-polyfill. I agree with the reasoning that it is hard to tell if the implementation or the mini-polyfill is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).\n\nAs an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-polyfill is correct.","format":"org.matrix.custom.html","formatted_body":"<p>for https://github.com/tc39/test262/pull/4528#discussion_r2349906917, <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato (intermittent availability)</a> asks that the test avoid a mini-polyfill. I agree with the reasoning that it is hard to tell if the implementation or the mini-polyfill is correct; on the other hand, this test covers 1000 cases, each of which is in some way distinct, and I don't think a test which just hardcodes the result for each of those cases would be maintainable (and who's to say the hardcoded results would not have bugs?).</p>\n<p>As an implementer I've found that these more exhaustive tests do a much better job of uncovering bugs than just a hardcoded list of cases. I think that in this case the most useful thing is to ensure the mini-polyfill is correct.</p>\n","m.mentions":{"user_ids":["@pchimento:igalia.com"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$gGiZqZ5nhrU6J1oWHJE3JTtPHy01_tgb9QfWWqY9IaM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1759272665379,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uCKnNKQtEb5x4DLCQoJo8Y_fiztSusMusVYT-mkbloc"},
{"content":{"body":"* (In this specific case it's arguably not a mini-polyfill but rather just checking \"invariant properties of outputs that must hold across multiple inputs\", as the slides linked from that comment say, which I think is better still.)","m.mentions":{},"m.new_content":{"body":"(In this specific case it's arguably not a mini-polyfill but rather just checking \"invariant properties of outputs that must hold across multiple inputs\", as the slides linked from that comment say, which I think is better still.)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mmr3fNclNHOY2HF8obNkYcCgvs3neGbQ2j5Ojgn4EEE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1759272668837,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DM1xdY32ylJNz_bTUk3w5U2nnjKVRLjU0jrVzIG-PhM"}
]