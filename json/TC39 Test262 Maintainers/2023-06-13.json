[
{"content":{"body":"maintainers, how do you feel about merging iterator helpers tests? https://github.com/tc39/test262/pull/2818","msgtype":"m.text"},"ts":1686646175701,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$RrcRUIySV7h7-0BmEqfhm1dRQShBq0glO7o4nwIzMDc"},
{"content":{"body":"I'm OK with it\\","format":"org.matrix.custom.html","formatted_body":"I'm OK with it\\","msgtype":"m.text"},"ts":1686646183019,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$YobNVEVZ-RdkwvXRq-SsZbjDYDwpi-lor_Uoz3f-uoo"},
{"content":{"body":"i'm ok with it too - i can rerun them against my polyfill first, later today too","msgtype":"m.text"},"ts":1686675247300,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_Mejvxv-tpqGA9DilWNy6kksZjLBpJIuh1KKZSTFneU"},
{"content":{"body":" * i'm ok with it too - i can rerun them against my polyfill first, later today","m.new_content":{"body":"i'm ok with it too - i can rerun them against my polyfill first, later today","msgtype":"m.text"},"m.relates_to":{"event_id":"$_Mejvxv-tpqGA9DilWNy6kksZjLBpJIuh1KKZSTFneU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1686675249030,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gXIMnV5XfrrRIXap7ddvxFsUALjsVa4-pm3VbmakJYg"},
{"content":{"body":"ptomato: i would prefer it to be merged","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: i would prefer it to be merged","msgtype":"m.text"},"ts":1686676929065,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gg9mwKQoGJrHh948_id_v7eYbOBaRNep2I_PvpSBusM"},
{"content":{"body":"> <@bakkot:matrix.org> question for shu / other implementers: right now the TypedArray tests are almost all generic across all of the TypedArray types, including stuff like Atomics which are tested against every TA type. if I just add Float16Array to that list it's going to cause every one of those tests to fail. that seems undesirable for implementers. do you have thoughts?\n\ncausing every one of those tests to fail is undesirable because the granularity of V8's runner, and i suspect most engines' runners, isn't at that level. if we update expectations to `FAIL` then we're not going to detect regressions in other TAs until F16Arrays land","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!dGIsaFIukRWLdpurvh:matrix.org/$ZlmUQniTg4EMRm3b9HoZ6Qn6pWQpqqZDKFH4Zm7av3I?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>question for <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> / other implementers: right now the TypedArray tests are almost all generic across all of the TypedArray types, including stuff like Atomics which are tested against every TA type. if I just add Float16Array to that list it's going to cause every one of those tests to fail. that seems undesirable for implementers. do you have thoughts?</blockquote></mx-reply>causing every one of those tests to fail is undesirable because the granularity of V8's runner, and i suspect most engines' runners, isn't at that level. if we update expectations to <code>FAIL</code> then we're not going to detect regressions in other TAs until F16Arrays land","m.relates_to":{"m.in_reply_to":{"event_id":"$ZlmUQniTg4EMRm3b9HoZ6Qn6pWQpqqZDKFH4Zm7av3I"}},"msgtype":"m.text"},"ts":1686677006753,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3El_NvIb5yRRoAeNTpsk16iHAjs6cQsWV_KonwvLXyY"},
{"content":{"body":"oh yeah I didn't mean there's any question about it, but I meant more like have folks done all the reviews they wanted","msgtype":"m.text"},"ts":1686677012075,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$nWPn1FYjKxPpKzk1Sy-DE40BZ9ILjJ1VgHknfDwj2cE"},
{"content":{"body":"but it sounds like you settled on a more granular approach anyways?","msgtype":"m.text"},"ts":1686677017416,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Tzii4koi1oPuucFifCbyp0Z4WTByrSVzPTIs9MeJPLA"},
{"content":{"body":"ptomato: oh yes, V8 has","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: oh yes, V8 has","msgtype":"m.text"},"ts":1686677021043,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iIMz52pWe3ZgoAh0U3Bg6wAEAFwAvIxS8BIh4Q0hdE4"},
{"content":{"body":"bakkot: ideally we keep test granularity at file level and avoid having polymorphic tests; i know test262 already has capability to generate tests from sources","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: ideally we keep test granularity at file level and avoid having polymorphic tests; i know test262 already has capability to generate tests from sources","msgtype":"m.text"},"ts":1686677104764,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tysgR4vly3k97ZqKmCyy29uKs8OEtrCRRBTKk8sSXjo"}
]