[
{"content":{"body":"I added a few items to the next meeting's agenda; in particular, our hosts at this TC39 plenary, a research group at University of Bergen, are interested in having students collaborate with us to write some test262 tests. I imagine we would welcome the help, if there were suitable projects for the students","msgtype":"m.text"},"ts":1689246294957,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$3nfTsnvWAA85BJk5fRHmUnDQDR9gggnjxnDGjd8UM-0"},
{"content":{"body":"the other discussion item is that the cleanupSome proposal may be withdrawn in a future plenary, and it's one of the few stage 2 proposals that has already-merged tests, so it has some implications for us","msgtype":"m.text"},"ts":1689246362773,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$qbTiPKZJBJwtO2wlzQvEYUpDQiIRJZujKK2IUJsnPDU"},
{"content":{"body":"Though I'd contributed to test262 in the past, I found it very difficult to get started on the tests for `using` as I found the documentation was somewhat lacking in terms of how to set up the environment, and I had trouble running the tests on Windows and had to use WSL. ","format":"org.matrix.custom.html","formatted_body":"Though I'd contributed to test262 in the past, I found it very difficult to get started on the tests for <code>using</code> as I found the documentation was somewhat lacking in terms of how to set up the environment, and I had trouble running the tests on Windows and had to use WSL.","msgtype":"m.text"},"ts":1689248288489,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M89kFW9uSZORAxpLlASLT3cxw5cqKRAozV47ifvmlqw"},
{"content":{"body":"Plus there is a lot of hunting around to figure out what files you need to add to `includes: []` for some assertions. The experience of working with test262 in an editor like VSCode wasn't great. ","format":"org.matrix.custom.html","formatted_body":"Plus there is a lot of hunting around to figure out what files you need to add to <code>includes: []</code> for some assertions. The experience of working with test262 in an editor like VSCode wasn't great.","msgtype":"m.text"},"ts":1689248297712,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HJ00ep9sq8amlntztFonQJ3CUuoOTsTbbbn79H2TkCM"},
{"content":{"body":"do any of the other maintainers/contributors in this channel build/run the tests on Windows?","msgtype":"m.text"},"ts":1689248364628,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$AmxjCo_4d8FYYxeh1qB3zEsKSPEm4jzDDCCCwTygWGI"},
{"content":{"body":"The package.json uses syntax that isn't legal in either cmd.exe or Powershell (namely the use of `$()` to collect diffs.","format":"org.matrix.custom.html","formatted_body":"The package.json uses syntax that isn't legal in either cmd.exe or Powershell (namely the use of <code>$()</code> to collect diffs.","msgtype":"m.text"},"ts":1689248523814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8ZzSzV_A0945arsvSdmdHxJl2VpdftBbTHdjx-FWEFY"},
{"content":{"body":" * The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of `$()` to collect diffs.","format":"org.matrix.custom.html","formatted_body":" * The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of <code>$()</code> to collect diffs.","m.new_content":{"body":"The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of `$()` to collect diffs.","format":"org.matrix.custom.html","formatted_body":"The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of <code>$()</code> to collect diffs.","msgtype":"m.text"},"m.relates_to":{"event_id":"$8ZzSzV_A0945arsvSdmdHxJl2VpdftBbTHdjx-FWEFY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689248534912,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JXUlNMcSImGXEx0GgbYwRepOIK0VQdOS6xAJK1Z48eI"},
{"content":{"body":" * The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of `$()` to collect diffs).","format":"org.matrix.custom.html","formatted_body":" * The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of <code>$()</code> to collect diffs).","m.new_content":{"body":"The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of `$()` to collect diffs).","format":"org.matrix.custom.html","formatted_body":"The scripts in package.json use syntax that isn't legal in either cmd.exe or Powershell (namely the use of <code>$()</code> to collect diffs).","msgtype":"m.text"},"m.relates_to":{"event_id":"$8ZzSzV_A0945arsvSdmdHxJl2VpdftBbTHdjx-FWEFY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689248544334,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CVXnxcN2ujRTkRFxBBH8QWO8r3Qlos-NA5TDGBlND2w"},
{"content":{"body":"Do we have an issue about that?","msgtype":"m.text"},"ts":1689248544915,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$YzQxLW5K6dpy7zUfljhc6Kphfq6UZinT3T2l2Dy5Hkg"},
{"content":{"body":"I also don't see a way to easily run lint locally","msgtype":"m.text"},"ts":1689248633818,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$1zUtkOecjty1UBJHXzAQm7jGDR4KNWDaPnKm1PAXD3k"},
{"content":{"body":"i would have assumed windows users would prefer to run WSL, is it hard to set up?","msgtype":"m.text"},"ts":1689250628577,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$whG-6WeOu4JMbTdiiT86Ulm_vofpdWejK6kNFiaNI9k"},
{"content":{"body":"WSL was moderately annoying last time I used it","msgtype":"m.text"},"ts":1689250745425,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_awPeZeU4fxfi47r7LlsfyFv-rKtnV44cmF3SrxWjys"},
{"content":{"body":"but in any case, as an empirical question, very few windows developers use it as their primary development environment, in my experience","msgtype":"m.text"},"ts":1689250779286,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wno2PUq7Sv0VzwKLKOX1HBGffnFkkJsmtqihJ5r4P3I"},
{"content":{"body":"> <@ljharb:matrix.org> i would have assumed windows users would prefer to run WSL, is it hard to set up?\n\nYes and no. It's not hard to set up, but running `git` in WSL against a mounted windows disk is *very* slow. Running `git` in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running `git.exe` from within WSL against any windows disk under `/mnt`. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since `esvu` and `test262-harness` both work in Windows, iirc.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!dGIsaFIukRWLdpurvh:matrix.org/$whG-6WeOu4JMbTdiiT86Ulm_vofpdWejK6kNFiaNI9k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i would have assumed windows users would prefer to run WSL, is it hard to set up?</blockquote></mx-reply>Yes and no. It's not hard to set up, but running <code>git</code> in WSL against a mounted windows disk is <em>very</em> slow. Running <code>git</code> in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running <code>git.exe</code> from within WSL against any windows disk under <code>/mnt</code>. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since <code>esvu</code> and <code>test262-harness</code> both work in Windows, iirc.","m.relates_to":{"m.in_reply_to":{"event_id":"$whG-6WeOu4JMbTdiiT86Ulm_vofpdWejK6kNFiaNI9k"}},"msgtype":"m.text"},"ts":1689251916310,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$D4yEKH7H_dmr3RpFJawLe5s6m1ryJFrtA2X7argcIlI"},
{"content":{"body":"> <@ljharb:matrix.org> i would have assumed windows users would prefer to run WSL, is it hard to set up?\n\n * Yes and no. It's not hard to set up, but running `git` in WSL against a mounted windows volume is _very_ slow. Running `git` in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running `git.exe` from within WSL against any windows disk under `/mnt`. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since `esvu` and `test262-harness` both work in Windows, iirc.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!dGIsaFIukRWLdpurvh:matrix.org/$whG-6WeOu4JMbTdiiT86Ulm_vofpdWejK6kNFiaNI9k?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i would have assumed windows users would prefer to run WSL, is it hard to set up?</blockquote></mx-reply> * Yes and no. It's not hard to set up, but running <code>git</code> in WSL against a mounted windows volume is <em>very</em> slow. Running <code>git</code> in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running <code>git.exe</code> from within WSL against any windows disk under <code>/mnt</code>. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since <code>esvu</code> and <code>test262-harness</code> both work in Windows, iirc.","m.new_content":{"body":"Yes and no. It's not hard to set up, but running `git` in WSL against a mounted windows volume is _very_ slow. Running `git` in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running `git.exe` from within WSL against any windows disk under `/mnt`. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since `esvu` and `test262-harness` both work in Windows, iirc.","format":"org.matrix.custom.html","formatted_body":"Yes and no. It's not hard to set up, but running <code>git</code> in WSL against a mounted windows volume is <em>very</em> slow. Running <code>git</code> in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running <code>git.exe</code> from within WSL against any windows disk under <code>/mnt</code>. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since <code>esvu</code> and <code>test262-harness</code> both work in Windows, iirc.","msgtype":"m.text"},"m.relates_to":{"event_id":"$D4yEKH7H_dmr3RpFJawLe5s6m1ryJFrtA2X7argcIlI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689251939589,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZFsd8UTy7I9pLpDpW2v1x3jIwXHW1nXBHoRky585oVw"},
{"content":{"body":" * Yes and no. It's not hard to set up, but running `git` in WSL against a mounted windows volume is _very_ slow. Running `git` in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running `git.exe` from within WSL against any windows volume under `/mnt`. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since `esvu` and `test262-harness` both work in Windows, iirc.","format":"org.matrix.custom.html","formatted_body":" * Yes and no. It's not hard to set up, but running <code>git</code> in WSL against a mounted windows volume is <em>very</em> slow. Running <code>git</code> in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running <code>git.exe</code> from within WSL against any windows volume under <code>/mnt</code>. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since <code>esvu</code> and <code>test262-harness</code> both work in Windows, iirc.","m.new_content":{"body":"Yes and no. It's not hard to set up, but running `git` in WSL against a mounted windows volume is _very_ slow. Running `git` in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running `git.exe` from within WSL against any windows volume under `/mnt`. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since `esvu` and `test262-harness` both work in Windows, iirc.","format":"org.matrix.custom.html","formatted_body":"Yes and no. It's not hard to set up, but running <code>git</code> in WSL against a mounted windows volume is <em>very</em> slow. Running <code>git</code> in WSL against a path inside of the virtual disk for the WSL install is fast. The workaround is running <code>git.exe</code> from within WSL against any windows volume under <code>/mnt</code>. Worst case I would recommend adding a section to the README.md on using WSL, with a caution not to use an mounted Windows volume. I think it would be far easier to use platform-agnostic scripts in package.json for anything a developer might regularly use to write tests, especially since <code>esvu</code> and <code>test262-harness</code> both work in Windows, iirc.","msgtype":"m.text"},"m.relates_to":{"event_id":"$D4yEKH7H_dmr3RpFJawLe5s6m1ryJFrtA2X7argcIlI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689251962303,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7TbIjAx_ulzLwoa6NQwxziFjUjhRdUjp-ow0FGTPfYQ"}
]