[
{"content":{"body":"Hi! I'm working on the `import defer` tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:\n\n````md\nCopyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n````\n\nIs this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?","format":"org.matrix.custom.html","formatted_body":"<p>Hi! I'm working on the <code>import defer</code> tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:</p>\n<pre><code class=\"language-md\">Copyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n</code></pre>\n<p>Is this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1721914216694,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1LJWTbkYC57t826Pwsc85GoZp5xWqjjkL_Jmig2K73s"},
{"content":{"body":" * Hi! I'm working on the `import defer` tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:\n\n````markdown\nCopyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n````\n\nIs this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?","format":"org.matrix.custom.html","formatted_body":" * <p>Hi! I'm working on the <code>import defer</code> tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:</p>\n<pre><code class=\"language-markdown\">Copyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n</code></pre>\n<p>Is this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?</p>\n","m.mentions":{},"m.new_content":{"body":"Hi! I'm working on the `import defer` tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:\n\n````markdown\nCopyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n````\n\nIs this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?","format":"org.matrix.custom.html","formatted_body":"<p>Hi! I'm working on the <code>import defer</code> tests, and I ended up building my own utility to be able to author multiple JS modules in the same file, so that I don't have to read across multiple files to see what a test is doing. For example, https://github.com/tc39/test262/blob/main/test/language/import/import-attributes/json-idempotency.js would be rewritten in a single file like this:</p>\n<pre><code class=\"language-markdown\">Copyright (C) 2021 the V8 project authors. All rights reserved.\nThis code is governed by the BSD license found in the LICENSE file.\n\n## main.js\n\n```js\n/*---\nesid: sec-parse-json-module\ndescription: The same object representation is returned to all import sites\nflags: [module, async]\nfeatures: [import-attributes, json-modules, globalThis, dynamic-import]\n---*/\n\nimport viaStaticImport1 from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport {default as viaStaticImport2} from './json-idempotency_FIXTURE.json' with { type: 'json' };\nimport './json-idempotency-indirect_FIXTURE.js';\n\nassert.sameValue(viaStaticImport1, viaStaticImport2);\nassert.sameValue(globalThis.viaSecondModule, viaStaticImport1);\n\nimport('./json-idempotency_FIXTURE.json', { with: { type: 'json' } })\n  .then(function(viaDynamicImport) {\n    assert.sameValue(viaDynamicImport.default, viaStaticImport1);\n  })\n  .then($DONE, $DONE);\n```\n\n## json-idempotency_FIXTURE.json\n\n```json\n{}\n```\n\n## json-idempotency-indirect_FIXTURE.js\n\n```js\nimport value from './json-idempotency_FIXTURE.json' with { type: 'json' };\n\nglobalThis.viaSecondModule = value;\n```\n\n</code></pre>\n<p>Is this something that I could upstream in the test262 repo, similarly to how we have the scripts to generate tests based on .template/.case?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$1LJWTbkYC57t826Pwsc85GoZp5xWqjjkL_Jmig2K73s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721914224431,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8Bv1KWIpTrj8aU0nFqgZeG2k8ACd5ru04HSy-9VSbDM"}
]