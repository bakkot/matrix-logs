[
{"content":{"body":"> <@littledan:matrix.org> Arguably people should be doing unit-ed computations all over the place, but I think that is beyond the scope of measure (initially)\n\nI want to put Measure on a path to where it is the main gateway to dimensioned operations in units and currencies. I want it to be integrated with Decimal and the rest of the language, not just an interface to Intl. This is better for developers and better for users in the long run.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$h4dtgbGLQjY-Uh-3XScd4mJmi2mbKDKgCmSgbE0pQtE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Arguably people should be doing unit-ed computations all over the place, but I think that is beyond the scope of measure (initially)</blockquote></mx-reply>I want to put Measure on a path to where it is the main gateway to dimensioned operations in units and currencies. I want it to be integrated with Decimal and the rest of the language, not just an interface to Intl. This is better for developers and better for users in the long run.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$h4dtgbGLQjY-Uh-3XScd4mJmi2mbKDKgCmSgbE0pQtE"}},"msgtype":"m.text"},"ts":1734581997336,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$S3fqkMxeNeMiDnl9Y2qU7LeJXAzTvGXvlm2vfzdiRls"},
{"content":{"body":"> <@littledan:matrix.org> Re strings: oops! That was kind of an unforced error; we added that support somewhat recently, though I guess before we had thought much about how exactly decimal should work. Remember, that was already a redefinition, since previously it worked via a cast to number (if that can be counted as working) so I am optimistic that the change can be done in place.\n\nIntl.NumberFormat has supported strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$_dxJbfjB9KM6bNNRVNV3EFbP7YB_pj59CIypRk5nncI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Re strings: oops! That was kind of an unforced error; we added that support somewhat recently, though I guess before we had thought much about how exactly decimal should work. Remember, that was already a redefinition, since previously it worked via a cast to number (if that can be counted as working) so I am optimistic that the change can be done in place.</blockquote></mx-reply>Intl.NumberFormat has supported strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_dxJbfjB9KM6bNNRVNV3EFbP7YB_pj59CIypRk5nncI"}},"msgtype":"m.text"},"ts":1734582148974,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU"},
{"content":{"body":"> <@littledan:matrix.org> Re strings: oops! That was kind of an unforced error; we added that support somewhat recently, though I guess before we had thought much about how exactly decimal should work. Remember, that was already a redefinition, since previously it worked via a cast to number (if that can be counted as working) so I am optimistic that the change can be done in place.\n\n * `Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$_dxJbfjB9KM6bNNRVNV3EFbP7YB_pj59CIypRk5nncI?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Re strings: oops! That was kind of an unforced error; we added that support somewhat recently, though I guess before we had thought much about how exactly decimal should work. Remember, that was already a redefinition, since previously it worked via a cast to number (if that can be counted as working) so I am optimistic that the change can be done in place.</blockquote></mx-reply> * <code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","m.mentions":{},"m.new_content":{"body":"`Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582169493,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ODWw-kQ539BjBF9D1d8JwcpCXiPk6vCk8lHLTeKeGAY"},
{"content":{"body":" * `Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":" * <code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","m.mentions":{},"m.new_content":{"body":"`Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. This should not have any direct impact on the direction of Decimal or Measure.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582180873,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$5lK-t4rqUHqSeL_d32df0XpLqDomjeIoC8upCQmdg88"},
{"content":{"body":" * `Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":" * <p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n","m.mentions":{},"m.new_content":{"body":"`Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582249408,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$u_G1dBQJNJpO7BY_sQ6xH--fMMmrpR_Gq5MuXK8lOmg"},
{"content":{"body":" * `Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":" * <p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n","m.mentions":{},"m.new_content":{"body":"`Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.","format":"org.matrix.custom.html","formatted_body":"<p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582284514,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$vKvTuYB4aFA87bMkQ4cGdTGRznKB3U8saoUTue35tcM"},
{"content":{"body":" * `Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.\n\nHowever, this is a good example of why I want the Measure and Decimal champions to talk more; I don't think we should be developing these proposals in two silos.","format":"org.matrix.custom.html","formatted_body":" * <p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n<p>However, this is a good example of why I want the Measure and Decimal champions to talk more; I don't think we should be developing these proposals in two silos.</p>\n","m.mentions":{},"m.new_content":{"body":"`Intl.NumberFormat.prototype.format` has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.\n\nThe string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.\n\nHowever, this is a good example of why I want the Measure and Decimal champions to talk more; I don't think we should be developing these proposals in two silos.","format":"org.matrix.custom.html","formatted_body":"<p><code>Intl.NumberFormat.prototype.format</code> has accepted strings since its inception, but they were converted to Numbers first. The recent proposal I championed kept the status quo except that more nonzero significant digits in the string would be retained. I would have liked to retain trailing zeros, too, but that almost certainly would have broken the Web.</p>\n<p>The string support in Intl.NumberFormat should therefore not have any direct impact on the design of Decimal or Measure.</p>\n<p>However, this is a good example of why I want the Measure and Decimal champions to talk more; I don't think we should be developing these proposals in two silos.</p>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9_4x1Dhuwawcz4w7VBOJ7NCwujA0eR_516Xa7d-_BU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582319120,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$wXY1y5HiQVjYcoDQ8AKWOhKK6e6WD2goNQDcmhxU9bg"},
{"content":{"body":"> <@eemeli:mozilla.org> First, it'd be really nice if the proposal repo reflected the benefits of decimal-in-spec over decimal-in-libraries, which is the status quo. At the moment, the spec readme lists three use cases:\n> 1. Representing human-readable decimal values such as money\n> 2. Data exchange [...] with external systems, such as databases and foreign function interfaces to other programming languages\n> 3. Numerical calculations on more precise floats\n> \n> Each of those use cases can be addressed equally well by MikeMcl's libraries.\n> \n> The value propositions that you put forward here don't appear in the readme at all, and neither the FAQ nor the \"Known alternatives\" sections answer the question \"Why not a library?\"\n> \n> So could the readme be revised to present the current arguments for the proposal not as if decimals weren't supported at all by the ecosystem, but instead showing how defining Decimal in the spec is an improvement on them? I understand that some of these arguments are certainly included in some of the Decimal presentations, but there's been 11 of those so far, and that's a lot of slides and discussions to look through.\n> \n> I at least look primarily at the proposal repo readme as the source of truth on what a proposal is about, and expect the presentations and discussions to be reflections of some of its aspects. If/as the Decimal readme doesn't seem to answer the questions I have, I may well not think e.g. of your valid point about string \"summation\" really being concatenation, and not see the value being presented.\n\nI find Decimal's value proposition stronger if it is part of a holistic design for united computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call `toLocaleString` on them and it will just work.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$jDwxQu7-tehNmInf_5_OTFj5JXVwOF8J0BVcHmC14ug?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli:mozilla.org</a><br><p>First, it'd be really nice if the proposal repo reflected the benefits of decimal-in-spec over decimal-in-libraries, which is the status quo. At the moment, the spec readme lists three use cases:</p>\n<ol>\n<li>Representing human-readable decimal values such as money</li>\n<li>Data exchange [...] with external systems, such as databases and foreign function interfaces to other programming languages</li>\n<li>Numerical calculations on more precise floats</li>\n</ol>\n<p>Each of those use cases can be addressed equally well by MikeMcl's libraries.</p>\n<p>The value propositions that you put forward here don't appear in the readme at all, and neither the FAQ nor the \"Known alternatives\" sections answer the question \"Why not a library?\"</p>\n<p>So could the readme be revised to present the current arguments for the proposal not as if decimals weren't supported at all by the ecosystem, but instead showing how defining Decimal in the spec is an improvement on them? I understand that some of these arguments are certainly included in some of the Decimal presentations, but there's been 11 of those so far, and that's a lot of slides and discussions to look through.</p>\n<p>I at least look primarily at the proposal repo readme as the source of truth on what a proposal is about, and expect the presentations and discussions to be reflections of some of its aspects. If/as the Decimal readme doesn't seem to answer the questions I have, I may well not think e.g. of your valid point about string \"summation\" really being concatenation, and not see the value being presented.</p>\n</blockquote></mx-reply>I find Decimal's value proposition stronger if it is part of a holistic design for united computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call <code>toLocaleString</code> on them and it will just work.","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$jDwxQu7-tehNmInf_5_OTFj5JXVwOF8J0BVcHmC14ug"}},"msgtype":"m.text"},"ts":1734582737727,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$GTNh5PRARIBBriel-Tpu2AHkSR9QsgwcL6MT7aZkO9Y"},
{"content":{"body":" * I find Decimal's value proposition stronger if it is part of a holistic design for dimensioned computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call `toLocaleString` on them and it will just work.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$jDwxQu7-tehNmInf_5_OTFj5JXVwOF8J0BVcHmC14ug?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli:mozilla.org</a><br><p>First, it'd be really nice if the proposal repo reflected the benefits of decimal-in-spec over decimal-in-libraries, which is the status quo. At the moment, the spec readme lists three use cases:</p>\n<ol>\n<li>Representing human-readable decimal values such as money</li>\n<li>Data exchange [...] with external systems, such as databases and foreign function interfaces to other programming languages</li>\n<li>Numerical calculations on more precise floats</li>\n</ol>\n<p>Each of those use cases can be addressed equally well by MikeMcl's libraries.</p>\n<p>The value propositions that you put forward here don't appear in the readme at all, and neither the FAQ nor the \"Known alternatives\" sections answer the question \"Why not a library?\"</p>\n<p>So could the readme be revised to present the current arguments for the proposal not as if decimals weren't supported at all by the ecosystem, but instead showing how defining Decimal in the spec is an improvement on them? I understand that some of these arguments are certainly included in some of the Decimal presentations, but there's been 11 of those so far, and that's a lot of slides and discussions to look through.</p>\n<p>I at least look primarily at the proposal repo readme as the source of truth on what a proposal is about, and expect the presentations and discussions to be reflections of some of its aspects. If/as the Decimal readme doesn't seem to answer the questions I have, I may well not think e.g. of your valid point about string \"summation\" really being concatenation, and not see the value being presented.</p>\n</blockquote></mx-reply> * I find Decimal's value proposition stronger if it is part of a holistic design for dimensioned computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call <code>toLocaleString</code> on them and it will just work.","m.mentions":{},"m.new_content":{"body":"I find Decimal's value proposition stronger if it is part of a holistic design for dimensioned computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call `toLocaleString` on them and it will just work.","format":"org.matrix.custom.html","formatted_body":"I find Decimal's value proposition stronger if it is part of a holistic design for dimensioned computations in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call <code>toLocaleString</code> on them and it will just work.","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GTNh5PRARIBBriel-Tpu2AHkSR9QsgwcL6MT7aZkO9Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582770043,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$JjUjnDs0aZnzcKMnJ8gCUnAkkskehyOmVkpR2-ROhoI"},
{"content":{"body":" * I find Decimal's value proposition stronger if it is part of a holistic design for dimensions in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call `toLocaleString` on them and it will just work.","format":"org.matrix.custom.html","formatted_body":" * I find Decimal's value proposition stronger if it is part of a holistic design for dimensions in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call <code>toLocaleString</code> on them and it will just work.","m.mentions":{},"m.new_content":{"body":"I find Decimal's value proposition stronger if it is part of a holistic design for dimensions in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call `toLocaleString` on them and it will just work.","format":"org.matrix.custom.html","formatted_body":"I find Decimal's value proposition stronger if it is part of a holistic design for dimensions in ECMAScript. This would really \"level up\" numbers in ECMAScript. And it's better for Intl because users who have these structured types floating around can call <code>toLocaleString</code> on them and it will just work.","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GTNh5PRARIBBriel-Tpu2AHkSR9QsgwcL6MT7aZkO9Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734582784160,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ZJYUrcXt0b5VqaYqP_fmEgUBenyeHReeIB1d7RvPM60"},
{"content":{"body":"I really think we should avoid shipping the org chart here. We have two proposals that are both proposing to add new primordials for number-related things. These proposals must be evaluated as part of the bigger picture.","m.mentions":{"user_ids":["@littledan:matrix.org","@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$hLHVljG47VWtU29aOr89-RMEGH-JZ-ARBNfnhNskS4U"}},"msgtype":"m.text"},"ts":1734583012386,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$XijtKeUxrdCCXX0_Jiq05RE62fk2HMgVdqoLarvzRRA"}
]