[
{"content":{"body":"My understanding of where we got to in post-meeting discussions this week with Jesse and nicolo-ribaudo is that an Amount ought to hold a _mathematical value_ (as defined in '262), parsed from a string input value using the same method as for **ToIntlMathematicalValue ( value )**, but without support for non-finite values or -0. Amount would either have no built-in limits on the value, or it would match the limits imposed by Intl.NumberFormat.\n\nOverall, the intent would be to avoid defining a new numeric type beyond what's already in the spec, even if not easily accessible by users.","format":"org.matrix.custom.html","formatted_body":"<p>My understanding of where we got to in post-meeting discussions this week with <a href=\"https://matrix.to/#/@jesse:igalia.com\">Jesse</a> and <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> is that an Amount ought to hold a <em>mathematical value</em> (as defined in '262), parsed from a string input value using the same method as for <strong>ToIntlMathematicalValue ( value )</strong>, but without support for non-finite values or -0. Amount would either have no built-in limits on the value, or it would match the limits imposed by Intl.NumberFormat.</p>\n<p>Overall, the intent would be to avoid defining a new numeric type beyond what's already in the spec, even if not easily accessible by users.</p>\n","m.mentions":{"user_ids":["@jesse:igalia.com","@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1749026597690,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$ADm0BAtMME553DuEMGxp-5pldoomv_WXY1M4TVo-QzU"}
]