[
{"content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181. I think my position on most of the comments here is well-known, and back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"msgtype":"m.text"},"ts":1744778995296,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc"},
{"content":{"body":"* There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181. I think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.. If there are specific concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181. I think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.. If there are specific concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779356337,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$YA8YgEX8yRglnQ2eiNRMSBzmSaogd3Wnvto8w6aooAY"},
{"content":{"body":"* There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181. I think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181. I think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779376949,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$HHNqzKnYd1JwCV6tZt1cyw9mlZjjwKsgR_RHs1P9Xrc"},
{"content":{"body":"* There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779394943,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$t5sjfiNCm00krhFgBJiTCQxolQ2hy3VL6Kq4ZV5u9Ig"},
{"content":{"body":"* There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer matters of substance to stick to GitHub.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. Back-and-forth on Matrix is not my communication channel of choice. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer matters of substance to stick to GitHub.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779493246,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$IoDRBPRC2Ey7KoYwJuZRUJZ7uxY7dV5Fi8bXO5_WicY"},
{"content":{"body":"* There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply. Most of it relates to topics I've already explained in my GitHub issues including #175 and #181.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779529530,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$dnlR_KzzGlflfAppxjpJDvUo11Ov1zvlfVOK2rYJPUo"},
{"content":{"body":"* There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779601781,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$-9GGOvwrguRf7q0ScEKKJ2T_pQA5KDUqLIBy4JgiPO4"},
{"content":{"body":"* There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181. I don't see anything in the last 100 comments that changes my logic.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181. I don't see anything in the last 100 comments that changes my logic.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779666384,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$9zNZvCWOy2X8daSwO_NuTSWt3EgQ122tB3Usc0IYdwU"},
{"content":{"body":"* There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181. I don't see anything in the last 100 Matrix comments that would change my logic.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"m.new_content":{"body":"There's a lot here since I last posted my reply.\n\nI think my position on most of the comments here is well-known. In short, I am in support of a clean immutable data type that supports decimal with precision, possibly with future support for units. All methods operate according to that data model, including equals and to/from string. I've already explained my reasoning in GitHub issues including #175 and #181. I don't see anything in the last 100 Matrix comments that would change my logic.\n\nIf there are specific questions/suggestions/comments/concerns, let's make GitHub issues. I like Matrix for things like sharing slides and asking quick questions, but I strongly prefer GitHub for matters of substance.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IWt_V-bYUoBxe0f_iPMLE8aGe6haixbBq5tINVoGBKc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744779695781,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$lbfifYtLbOzhuaGMnPMfym6qCcOuzFZoSP4YHal5QaE"},
{"content":{"body":"sffc Isn't it 34 significant digits, and not 31? (I'm just reading from wikipedia)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a> Isn't it 34 significant digits, and not 31? (I'm just reading from wikipedia)","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"msgtype":"m.text"},"ts":1744825835497,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$nxZT1TjVK9nvKK_UJ45q8IYor-P2pB4pQjsy3grVhmk"},
{"content":{"body":"presumably we're taking off a few to deal with those edge cases Waldemar is talking about","m.mentions":{},"msgtype":"m.text"},"ts":1744825897129,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1toyVcWp6CDT0zakKq_GNTg3tGfIBM9Op72aFGpNZ4A"},
{"content":{"body":"I'm not sure what Waldemar meant about rounding mode -- does he want that to be a property of the Decimal.Amount?","m.mentions":{},"msgtype":"m.text"},"ts":1744825940522,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5nLBEaiuacGoeRzU6M7F7VZOSNqT5QU3s2jTI9RwDH4"},
{"content":{"body":"thanks","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nxZT1TjVK9nvKK_UJ45q8IYor-P2pB4pQjsy3grVhmk"}},"msgtype":"m.text"},"ts":1744825944131,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$lt1CDM5zZspsJhRkb9B0Psr01q1RficThMFnqdL_tNY"},
{"content":{"body":"I think what WH meant with rounding was triggered by one of my examples: \"converting\" 42.56 to \"42\" or \"43\" if you impute 2 significant digits to the number","m.mentions":{},"msgtype":"m.text"},"ts":1744827992404,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$oEBz8MR1_RFezA_MxJWUvWtOvstsjpK8860WAaVlyHw"},
{"content":{"body":"it would be \"42\" using round-ties-to-even","m.mentions":{},"msgtype":"m.text"},"ts":1744828011035,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$MbcVDyXSVook9eeA-VQ4-BOLOFOuobBXnc5teiMOhoE"},
{"content":{"body":"in the current API, there's no place for speciifying a rounding mode, if needed","m.mentions":{},"msgtype":"m.text"},"ts":1744828041424,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$D8hJ_UsLcZrRqpbaqZl2pq-RVTNlB8IoVGVx48niufw"},
{"content":{"body":"by contract, `Decimal.prototype.toPrecision` does allow for specifying a rounding mode","format":"org.matrix.custom.html","formatted_body":"by contract, <code>Decimal.prototype.toPrecision</code> does allow for specifying a rounding mode","m.mentions":{},"msgtype":"m.text"},"ts":1744828055821,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$BdRKFVAXKC979-QZhvctHNkdlk-7ipOEl43YdGy0HZ8"},
{"content":{"body":"contrast","m.mentions":{},"msgtype":"m.text"},"ts":1744828059034,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$QHTV0w7_07ukNhczMmQraZhRlOovZZ2l2mQkfAS4CH4"},
{"content":{"body":"we could certainyl support that","m.mentions":{},"msgtype":"m.text"},"ts":1744828108083,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$2tGNkzxSiVSl6Fg0CNwlQqdM47nsAR8XYhap7GR8Uv0"},
{"content":{"body":"yeah it's 34, though the exponent gets a bit tricky when dealing with subnormal numbers (*extremely* close to zero)","format":"org.matrix.custom.html","formatted_body":"yeah it's 34, though the exponent gets a bit tricky when dealing with subnormal numbers (<em>extremely</em> close to zero)","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org","@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nxZT1TjVK9nvKK_UJ45q8IYor-P2pB4pQjsy3grVhmk"}},"msgtype":"m.text"},"ts":1744828276024,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$K0KBLPMgSRQRLYACW6HN3ODqUyq3jyPdKe3bI0IbN1w"},
{"content":{"body":"but the 34 significaitn digits is true for those numbers, too","m.mentions":{},"msgtype":"m.text"},"ts":1744828297073,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$7lpGydpNDQvZFXk_vB1xQTNqe5vP1oLBJVsEa3HXssc"},
{"content":{"body":"we could add that as an optional argument to `togetherWithSignificantDigits`, as is the case today with `Decimal.prototype.toPRecision`","format":"org.matrix.custom.html","formatted_body":"we could add that as an optional argument to <code>togetherWithSignificantDigits</code>, as is the case today with <code>Decimal.prototype.toPRecision</code>","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5nLBEaiuacGoeRzU6M7F7VZOSNqT5QU3s2jTI9RwDH4"}},"msgtype":"m.text"},"ts":1744828380467,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$amtTqBTKimZeRkOe5cAlnyA71tteqZJe9L03q6u1-RM"},
{"content":{"body":"but then, yeah, I guess that would need to be stored in the Decimal.Amount value","m.mentions":{},"msgtype":"m.text"},"ts":1744828424587,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$W-eBMRDvzHyGp-u-hAw3lPPCuIzu1mtoLQTVEpebLME"},
{"content":{"body":"and pass that to Intl.NF rounding options","m.mentions":{},"msgtype":"m.text"},"ts":1744828463813,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$75Gr5KEjp2OnrpYbOxiXbWRo5tnPw6wCKYAO5hGwCqM"},
{"content":{"body":"My presumption is that we would want the numerical value `42.56` of  `new Amount('42.56', { significantDigits: 2 })` to be somehow available.","msgtype":"m.text"},"ts":1744828768578,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$mQEHKcPnXmxxL2cBc6TN5-jYenp1_F5GpaTDZ-RPG9o"},
{"content":{"body":"eem-eli thanks for pointing out to MM that he can solve his number formatting needs, today, even with huge/ultra precise numbers by contructing a digit string and passing that to Intl","m.mentions":{},"msgtype":"m.text"},"ts":1744828782507,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$qimeIh1mFaPzUotMODdeKZbHtGyANKt5ebIb-WcYAHc"},
{"content":{"body":"ah, interesting - we currently have an accessor for the underlying decimal -- which doesn't change when constructing a Decimal.Something -- so that data is recoverable","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mQEHKcPnXmxxL2cBc6TN5-jYenp1_F5GpaTDZ-RPG9o"}},"msgtype":"m.text"},"ts":1744828851233,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$G-aG82bkI9BkDeKqyNrrpVwitOiqcaNxyVZoHI-rLz0"},
{"content":{"body":"Because if it's not available, don't we end up with effectively a black-box Amount, and y'all have pushed back against that quite strongly.","msgtype":"m.text"},"ts":1744828908743,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$Pa8Un4jet7gYV2duc-NR3TgJlZJg5kb7SEVrX6OH640"},
{"content":{"body":"Decimal.Amount should do the rounding stuff ahead of time. That's kind-of the point. `new Amount('42.56', { significantDigits: 2 })` should take a rounding mode.","format":"org.matrix.custom.html","formatted_body":"Decimal.Amount should do the rounding stuff ahead of time. That's kind-of the point. <code>new Amount('42.56', { significantDigits: 2 })</code> should take a rounding mode.","m.mentions":{},"msgtype":"m.text"},"ts":1744829147861,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$Jpv9pYfCFyqzk6gvVj_jLyee9AxsyLaeOCp2unf2GmY"},
{"content":{"body":"my thinking is that we store the original value but *present* only the (possibly rounded) value","format":"org.matrix.custom.html","formatted_body":"my thinking is that we store the original value but <em>present</em> only the (possibly rounded) value","m.mentions":{},"msgtype":"m.text"},"ts":1744829205359,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$XePb6Nep6oDEt8i16eaLB58auVRabtPbQqsTOhRVPiw"},
{"content":{"body":"Actually, are there use cases for Decimal.Amount that would not be served equally well by a numeric string?","msgtype":"m.text"},"ts":1744829245488,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$1l4ZRaMFmHoQsaDBNsDP2YERXDkNkyO5XbpK4hOcqdQ"},
{"content":{"body":"#175","m.mentions":{},"msgtype":"m.text"},"ts":1744829306988,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$yMbtCr4sP-tenu6DAwqBlKMV_vfo24d5XieKu22frvE"},
{"content":{"body":"https://github.com/tc39/proposal-decimal/issues/175","m.mentions":{},"msgtype":"m.text"},"ts":1744829355180,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$A-KgK3enM7gXRBUpMC3OB_jmnWDsf8jZTBRqXnOpHJ4"},
{"content":{"body":"I will try to write up my thoughts on Mark and Waldemar's comments, but tl;dr there seems to be a disconnect between both the facts and the goals of the proposal.","m.mentions":{},"msgtype":"m.text"},"ts":1744829510528,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$6aoGCuaNExDjntMSnzhSJ8dOouhxaeBXo4KZ8THzU9g"},
{"content":{"body":"I think we don't need to talk about quanta; I didn't quite understand how that came up, and I when i think about Amount I don't feel the need to reach for the concept of quanta","m.mentions":{},"msgtype":"m.text"},"ts":1744829619345,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$4Nh0afpvAnwHrOnB1-dG9sbce41Os8ywUAKp9CfQSAo"},
{"content":{"body":"I mean, maybe as an implementation detail, in some implemenations; but it's not necessary to understand the proposal","m.mentions":{},"msgtype":"m.text"},"ts":1744829665507,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$Ylh7LUuiFZuU072ocxfboB-JSk00i--UG1vlX6AhI7U"},
{"content":{"body":"I mentioned the word in the context of an optimization Decimal.Amount makes possible and didn't mean for the conversation to rathole on that","m.mentions":{},"msgtype":"m.text"},"ts":1744829699059,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$E6_HmnMxkKQjja-XWh_mZ6EXlSMfSR-pzg0aknMH-KY"}
]