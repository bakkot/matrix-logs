[
{"content":{"body":"Looking over and considering Jesse's upcoming Decimal/Measure presentation and explainer, I get the sense that we really ought to find a way to reach the end goals here in multiple smaller steps, rather than one big leap. By Decimal normalising trailing zeros, the use cases for them introduce a dependency on Measure, but it gets a bit hairy if Measure then also depends on Decimal for its value representation.\n\nWhat if we were to initially not include _any_ conversions in Measure? Then we wouldn't need to change its inputs at all, and we would still be providing a way for Intl.NumberFormat and Intl.MessageFormat to get their formattable inputs as a combined value+units+precision package.\n\nThen we could consider separately the Smart Units part of this whole thing adding unit conversions, and Decimal defining its accessors on Measure, and we'd avoid having everythin depend on everything else.","format":"org.matrix.custom.html","formatted_body":"<p>Looking over and considering <a href=\"https://matrix.to/#/@jesse:igalia.com\">Jesse</a>'s upcoming Decimal/Measure presentation and explainer, I get the sense that we really ought to find a way to reach the end goals here in multiple smaller steps, rather than one big leap. By Decimal normalising trailing zeros, the use cases for them introduce a dependency on Measure, but it gets a bit hairy if Measure then also depends on Decimal for its value representation.</p>\n<p>What if we were to initially not include <em>any</em> conversions in Measure? Then we wouldn't need to change its inputs at all, and we would still be providing a way for Intl.NumberFormat and Intl.MessageFormat to get their formattable inputs as a combined value+units+precision package.</p>\n<p>Then we could consider separately the Smart Units part of this whole thing adding unit conversions, and Decimal defining its accessors on Measure, and we'd avoid having everythin depend on everything else.</p>\n","m.mentions":{"user_ids":["@jesse:igalia.com"]},"msgtype":"m.text"},"ts":1739360571849,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$wYE0bFW2RDMWttZnv6512fzoIoXvrAGURrhblFKK9X8"},
{"content":{"body":"Here's a sketch of what that might look like: https://gist.github.com/eemeli/0bd413d2f711cbd6016673af8d68c38c\n\nThat's in TS, so the real thing would need to have appropriate runtime checks for the types. The lack of any methods on the class is quite intentional, as is freezing it.\n\nI'm also starting to think that we might want to call this \"Amount\" rather than \"Measure\", mostly because then it also makes sense for currencies: it feels really clumsy to talk of a \"measure of money\", whereas an \"amount of money\" (or anything else, really) makes more sense.","m.mentions":{},"msgtype":"m.text"},"ts":1739362298886,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$Fw4tuCzNJBIOZGK4vDUbrXAQ_R5VQ5Brrd9-iq0EI-A"},
{"content":{"body":"thanks!","m.mentions":{},"msgtype":"m.text"},"ts":1739362643096,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$k7uMZtNG_6SM5-Mf7y6aOZQtSopWtjQ4QtEMRs7inb8"},
{"content":{"body":"happy to discuss another name","m.mentions":{},"msgtype":"m.text"},"ts":1739362729872,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$a7PcNzgzwD_ul2knZwKS5BAUAUmn14Hu_2uyxjyh5fo"},
{"content":{"body":"\"measure\" suggests physical quantities and (it feels like) is excludes currencies; \"amount\" clearly includes currencies but (to my mind) weakly excludes other kinds of measurements","m.mentions":{},"msgtype":"m.text"},"ts":1739362774784,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$7U7-GMjUCKrZcAZEHnoeIghvx-_Hga48oZgtZM0Iwdw"},
{"content":{"body":"shouldn't we have a toLocaleString or at least toString in Amounts?","m.mentions":{},"msgtype":"m.text"},"ts":1739362949800,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$7lCrH9mUZb5yNmCZ7puUw33wawUHqOaElmxOCWmLYIk"},
{"content":{"body":"I wonder if want to tie in to ISO 4217 (standardization of currencies) somehow or whether measure/amount is merely any tagged number (or string, or bigint) at all","m.mentions":{},"msgtype":"m.text"},"ts":1739363376662,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$U0nuJc5O6FA_gPuPtkTyVGrlAvyZpyuUQ-I3nfy-GUA"},
{"content":{"body":"`new Amount(42.75, \"foobar gramz\")`","format":"org.matrix.custom.html","formatted_body":"<code>new Amount(42.75, \"foobar gramz\")</code>","m.mentions":{},"msgtype":"m.text"},"ts":1739363409079,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$rWl3DWSkc1yp6cX_5xy2tkb9ybh9SKZZm373GcztKKY"},
{"content":{"body":"I like the simplicity of the zero-method approach but I wonder if this deflates the value-add too much","m.mentions":{},"msgtype":"m.text"},"ts":1739363455318,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$BdQTn9L_JITjtjVb97BLqblknVx-LV4qvAh7FuKUT_0"},
{"content":{"body":"one of the nice value-add parts of measure, to my mind, was its tie-in to CLDR's units.xml","m.mentions":{},"msgtype":"m.text"},"ts":1739363488406,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$woa8AWquKGB0pw8olabhG4QCWTFIhyLCfsEY4RfBnEA"},
{"content":{"body":"exposing new capabilities to the language, rather than merely attaching a string to a number","m.mentions":{},"msgtype":"m.text"},"ts":1739363509994,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$CY20CvvvXGhczVgoWeKYdplfGuJ8fekdddJHDoDMD40"},
{"content":{"body":"I would argue that e.g. \"3 meters\" or \"42 grams\" are both also \"amounts\", whereas calling those \"measures\" or \"measurements\" would be more opinionated about how the figure was reached.","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7U7-GMjUCKrZcAZEHnoeIghvx-_Hga48oZgtZM0Iwdw"}},"msgtype":"m.text"},"ts":1739364210766,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$nsC8k09xYE3UWa-9lmfEZcBZ8wTMM_kO7HjkpcZMh_U"},
{"content":{"body":"toLocaleString potentially yes, delegating to Intl.NumberFormat. Not at all so sure about toString; what would be the use case for it?","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7lCrH9mUZb5yNmCZ7puUw33wawUHqOaElmxOCWmLYIk"}},"msgtype":"m.text"},"ts":1739364268320,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$TkK39CKWn68cXHpIGTef7Mvb_jUOlH7OZfIlrkQg6HM"},
{"content":{"body":"I think that's a question that would be best answered within a more general currency formatting context, as any answer here ought to match the answer given by Intl.NumberFormat.","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$U0nuJc5O6FA_gPuPtkTyVGrlAvyZpyuUQ-I3nfy-GUA"}},"msgtype":"m.text"},"ts":1739364344998,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$TrDik9k2hM8xBNt_XSUuz3Fz-i7DGCRqEzcJPzykB50"},
{"content":{"body":"I agree that conversion is nice, but I think it's also complicated -- and has its own Stage 1 proposal: https://github.com/tc39/proposal-smart-unit-preferences","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$woa8AWquKGB0pw8olabhG4QCWTFIhyLCfsEY4RfBnEA"}},"msgtype":"m.text"},"ts":1739364477156,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$m5KRRFzdQNsWKsYmKUMHJm7XPmeVrGvr0AQrR39pBiM"},
{"content":{"body":"ah, right","m.mentions":{},"msgtype":"m.text"},"ts":1739365028967,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$7BJRgFF-VC2LfhFlxW3QwM0pIYvglC77ODsZWmd8e1A"},
{"content":{"body":"I wonder if the harmony under discussion should also include smart units","m.mentions":{},"msgtype":"m.text"},"ts":1739365047015,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$ckFILOJsuX95LOvMT0vJbg9_-UaHrBgjrbTQAEuxUA4"},
{"content":{"body":"the current measure README explicitly refers to smart units","m.mentions":{},"msgtype":"m.text"},"ts":1739365059255,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$GOnG2JvfF856xnIMWN5NBO-Utcdt5s1tAtjtObYJmf0"},
{"content":{"body":"Yeah, there's a continuum of (at least) three separate considerations here that we're trying to solve:\n- How to represent a number together with its unit/currency/precision (Measure/Amount)\n- How to convert values between compatible units (Smart Units)\n- How to represent numbers better (Decimal)\n\nI think Decimal depends on Amount, and unit conversion _might_ depend on Decimal if that's the chosen type for the value of an Amount after conversion. So I'm looking for a way to solve the first problem in a way that doesn't require simultaneously solving all the problems and introducing all of these cross-dependencies.","format":"org.matrix.custom.html","formatted_body":"<p>Yeah, there's a continuum of (at least) three separate considerations here that we're trying to solve:</p>\n<ul>\n<li>How to represent a number together with its unit/currency/precision (Measure/Amount)</li>\n<li>How to convert values between compatible units (Smart Units)</li>\n<li>How to represent numbers better (Decimal)</li>\n</ul>\n<p>I think Decimal depends on Amount, and unit conversion <em>might</em> depend on Decimal if that's the chosen type for the value of an Amount after conversion. So I'm looking for a way to solve the first problem in a way that doesn't require simultaneously solving all the problems and introducing all of these cross-dependencies.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1739365386937,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$k_4VBKOopn5A0cdfSlf_k_z_RF_vk9CeP0z9xcZQ5Jw"},
{"content":{"body":"I like the suggestion to use decimal as the result of doing conversions","m.mentions":{},"msgtype":"m.text"},"ts":1739365752850,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$yFIs5zS00or61wudiaT7m08KhOLg06pzdCm2h8RhNes"},
{"content":{"body":"these typically involve things like taking reciporocals or multiplying values (including squaring, cubing, etc.) so decimal feels like a good match","m.mentions":{},"msgtype":"m.text"},"ts":1739365789234,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$hrsIOmGQzr6H3oXVLCgl3r9quBJhvNLb5VhJ66mpY-o"},
{"content":{"body":"since it's promise is to provide more precision","m.mentions":{},"msgtype":"m.text"},"ts":1739365806311,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$A8IzLCTtlf8c-zhX3Ka6biqN9qkux95c1Mg4doKlDUs"},
{"content":{"body":"The cleanest way that I see for this stack to proceed would be:\n1. Amount\n2. Decimal\n3. Unit conversions\n\nThen each step would only depend on things before it.","format":"org.matrix.custom.html","formatted_body":"<p>The cleanest way that I see for this stack to proceed would be:</p>\n<ol>\n<li>Amount</li>\n<li>Decimal</li>\n<li>Unit conversions</li>\n</ol>\n<p>Then each step would only depend on things before it.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1739365831620,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$uKYs8zlqfNL6by_eP9DRJJzy2qLWhdAdSRI-QbbPTNs"},
{"content":{"body":"that looks good -- I'd like to see decimal building on amount/measure so I think it makes sense to focus on amount","m.mentions":{},"msgtype":"m.text"},"ts":1739365977943,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$3K79XNQIg_VSu3o4b49o5W8Cii20PzyVwXJsCZtCLDs"},
{"content":{"body":"I think given the amount of interest in these topics it might make sense to set up a regular call for decimal, measure/amount, and smart units","m.mentions":{},"msgtype":"m.text"},"ts":1739367753698,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$8PssE14z9ANUU9HyI8-quAvwZmaOsYdL8eH8HoshSEI"},
{"content":{"body":"things are sort of scattered atm -- I've discussed this stuff in TG2, TG3, in plenary, in this channel, and (to a much lesser extent) the delegates channel","m.mentions":{},"msgtype":"m.text"},"ts":1739367807156,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$oA_m6vpA93Wjn31scL4XNUj0exBiRT_tjiYRK44i9dU"},
{"content":{"body":"how about tomorrow (Thursday, February 13th) at, say, 18:00 CET?","m.mentions":{},"msgtype":"m.text"},"ts":1739367899825,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$IBGwtQP--dlumPlDaR6YdDDkRp6Oezbu0DTJn9Ccr0A"},
{"content":{"body":"I'm glad that we're laying out the whole space, but let's see if we can keep the result, or at least the first step, not too complex.","m.mentions":{},"msgtype":"m.text"},"ts":1739368687274,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$neIoPBziYsed2moqed2hqCirLk8fpYDcJMegfYnRi9I"},
{"content":{"body":"I'm sold on the need for a unit'ed Measure class, but I don't know why we'd have a third class","m.mentions":{},"msgtype":"m.text"},"ts":1739368833514,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wTcEmnKHHO806xsK2Y-9DHKpdRINZSliL-LAAenBlIs"},
{"content":{"body":"or is Amount just a way to rename Measure?","m.mentions":{},"msgtype":"m.text"},"ts":1739368874104,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lbbyjvmXW57tzI_Qw_PWiWRcJB0JI4Vkk1Fm-OFWIKU"},
{"content":{"body":"sorry maybe this was just me skimming too fast and the proposal is already good :)","m.mentions":{},"msgtype":"m.text"},"ts":1739368907113,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5doLlZnLXMjKqfu3AXCKbxSJyDKsmrZusPEpkvh4b4c"},
{"content":{"body":"I think the current thinking is that amount is just a renaming of measure","m.mentions":{},"msgtype":"m.text"},"ts":1739368941448,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$z-Pt2Ff3pOSHsiDuJUncYsLu951JaIYprL9Q3VAQLNI"},
{"content":{"body":"plus a certain shrinking of its scope","m.mentions":{},"msgtype":"m.text"},"ts":1739368955766,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$39Lf7VZrB4lsWPGYCZDRA57wvX8L9Grof_-yGjOxNjw"},
{"content":{"body":"there was a discussion in various places about whether measure/amount should support arithmetic, at all, and the consensus seems to be \"no\"; the most recent sketch is of a class that has no methods at all (except possibly toLocaleString)","m.mentions":{},"msgtype":"m.text"},"ts":1739369041246,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$0k0Tr7hYhkU7JP1S-v7tpgSYj2AbyWqVRrA2KfSXbTM"},
{"content":{"body":"I can see the argument for arithmetic, but it's really complicated, and having the base type exist facilitates people writing libraries to do that. (Of course the same could be said for Temporal)","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0k0Tr7hYhkU7JP1S-v7tpgSYj2AbyWqVRrA2KfSXbTM"}},"msgtype":"m.text"},"ts":1739369087971,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JRIIfXaLuT5rZEgZz1Orv3jN5gdXOPx5HBg8UK-EEwY"},
{"content":{"body":"(I can join tomorrow at 18:00 CET, or earlier)","m.mentions":{},"msgtype":"m.text"},"ts":1739369123059,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$B03giaBJFNJ8hQxb_xwDTgORkqGbYVYwjeNPFq1G3xo"},
{"content":{"body":"I'd expect (citation needed!) that keeping it to one numerical type is probably simpler implementation-wise, but 3 classes vs one class with multiple possibilities for the value's type doesn't really simplify anything.","m.mentions":{},"msgtype":"m.text"},"ts":1739369144720,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o6TQF7ihaCagYTIzan6v5u_OPh-GaHXFxlp3yDqfvw4"},
{"content":{"body":" Personally I don't mind Measure baking in Decimal (since measured quantities are very often decimals, and other numeric types might just be used in error)","m.mentions":{},"msgtype":"m.text"},"ts":1739369145737,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4Jyo3wESIGvVIjwDuYznc4IRqK2tNGGAdH2E4v4egpY"},
{"content":{"body":"to my mind there are a couple senses of \"arithmetic\" -- 1. adding (or multiplying, or ...) two measure objects; and (2) converting to a \"higher-order\" unit, such as going from meter to meter^3 and converting between compatible scales (meters and inches)","m.mentions":{},"msgtype":"m.text"},"ts":1739369291979,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$beNnz_-3YkZelyDPOANBsn5jKlng6JGj8k4FV0dDIpE"},
{"content":{"body":"my understanding is that (1) is currently not very well received, but I'm not sure about (2)","m.mentions":{},"msgtype":"m.text"},"ts":1739369313922,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$9K779B4-VyR3bCDt0m9guUNtuzM_xek6D97wpy4g0pk"},
{"content":{"body":"Just looked at Jesse's slides. They look like exactly the kind of conversation I think we should be having right now. 👍️","m.mentions":{},"msgtype":"m.text"},"ts":1739369348074,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$PqGhDuZBhRW4rxIDZXlKLHwbi6OW8NpHPx2RD2lOazk"},
{"content":{"body":"Yeah, \"Amount\" is effectively a synonym \"Measure\".","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$z-Pt2Ff3pOSHsiDuJUncYsLu951JaIYprL9Q3VAQLNI"}},"msgtype":"m.text"},"ts":1739369410196,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$fl4czrMe_15e1uQSOOlefdy1lPfWm0254hTMUGNvqk8"},
{"content":{"body":"> <@littledan:matrix.org> Personally I don't mind Measure baking in Decimal (since measured quantities are very often decimals, and other numeric types might just be used in error)\n\nagree, though I can see the value in rolling just with currently existing primitive types","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$4Jyo3wESIGvVIjwDuYznc4IRqK2tNGGAdH2E4v4egpY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br> Personally I don&#39;t mind Measure baking in Decimal (since measured quantities are very often decimals, and other numeric types might just be used in error)</blockquote></mx-reply>agree, though I can see the value in rolling just with currently existing primitive types","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4Jyo3wESIGvVIjwDuYznc4IRqK2tNGGAdH2E4v4egpY"}},"msgtype":"m.text"},"ts":1739369436971,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$0bGVxPy6M5v8G6D_qIG_vfb3_Mlv0ytyN7aL5H271s4"},
{"content":{"body":"(one could go even further an imagine supporting only Number)","m.mentions":{},"msgtype":"m.text"},"ts":1739369461955,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$iuV-kmr6Kzlh06YxCHw-jODuh9X-_inRjXBafZzL96U"},
{"content":{"body":"As I see it, the primary utility gained from a minimal Amount/Measure is in the improvements of the Intl.NumberFormat API, and so it'd be rather suprising if `new Amount('42')` or `new Amount(42)` would not work.","format":"org.matrix.custom.html","formatted_body":"As I see it, the primary utility gained from a minimal Amount/Measure is in the improvements of the Intl.NumberFormat API, and so it'd be rather suprising if <code>new Amount('42')</code> or <code>new Amount(42)</code> would not work.","m.mentions":{},"msgtype":"m.text"},"ts":1739369604410,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$hy0Gj8HgXAZ2v3DwAOcgCY8CvDXxR3UlKfKnI5LLwgo"},
{"content":{"body":"Given that calling `nf.format('42')` or `nf.format(42)` works.","format":"org.matrix.custom.html","formatted_body":"Given that calling <code>nf.format('42')</code> or <code>nf.format(42)</code> works.","m.mentions":{},"msgtype":"m.text"},"ts":1739369633800,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$b345iEGI5Chwud5wy9_2QP9yu3t9EpSy1rDl_w3wy5o"},
{"content":{"body":"Well, we could apply the `new Decimal` logic in the Measure constructor","format":"org.matrix.custom.html","formatted_body":"Well, we could apply the <code>new Decimal</code> logic in the Measure constructor","m.mentions":{},"msgtype":"m.text"},"ts":1739369676548,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9RMGrb_ClZz1E9ovikASqcGoKss_7055a9ZfGXhSgiE"},
{"content":{"body":"for casting","m.mentions":{},"msgtype":"m.text"},"ts":1739369681351,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KhtJcBqMNUdZUgooTcFGu74WTDsSoYT1BKi3Itk2V9s"},
{"content":{"body":"Huh, just realised as I typed that that `new Amount(42)` doesn't feel as wrong as `new Measure(42)` does, i.e. without the options.","format":"org.matrix.custom.html","formatted_body":"Huh, just realised as I typed that that <code>new Amount(42)</code> doesn't feel as wrong as <code>new Measure(42)</code> does, i.e. without the options.","m.mentions":{},"msgtype":"m.text"},"ts":1739369700760,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$R8zbnXnfTjx9V2CBDwFPLtQl27Z9kOypO-DHH4SfVnc"},
{"content":{"body":"(I like the name `Measure`)","format":"org.matrix.custom.html","formatted_body":"(I like the name <code>Measure</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1739369729347,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YfdFnzdIRaL8ADgpJMuni1CyqYloW4AtHSth-Wj8ijI"},
{"content":{"body":"Why should `new Amount(x).value === x` not be retained? Something like `new Amount(x).asDecimal()` could be a thing, but there's no reason to throw away the original input value.","format":"org.matrix.custom.html","formatted_body":"Why should <code>new Amount(x).value === x</code> not be retained? Something like <code>new Amount(x).asDecimal()</code> could be a thing, but there's no reason to throw away the original input value.","m.mentions":{},"msgtype":"m.text"},"ts":1739369771863,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$7S9OMZNQnc2fR-TMT591RBZmFxTxr0_Jbia6QmAFV7E"},
{"content":{"body":"> <@littledan:matrix.org> Well, we could apply the `new Decimal` logic in the Measure constructor\n\nI like that idea too but I've heard from a couple people that they'd like to use bigints in measures/amounts, and I'm a bit uncomfortable with going beyond the range of Decimal128","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$9RMGrb_ClZz1E9ovikASqcGoKss_7055a9ZfGXhSgiE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Well, we could apply the <code>new Decimal</code> logic in the Measure constructor</blockquote></mx-reply>I like that idea too but I've heard from a couple people that they'd like to use bigints in measures/amounts, and I'm a bit uncomfortable with going beyond the range of Decimal128","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9RMGrb_ClZz1E9ovikASqcGoKss_7055a9ZfGXhSgiE"}},"msgtype":"m.text"},"ts":1739369825070,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$dLFMlbQgEFhqXK6nlfBQdjfwn3yBj4jl0X3mXYBOE9k"},
{"content":{"body":"I've made a new calendar item PR but it's not merged yet","m.mentions":{},"msgtype":"m.text"},"ts":1739370027829,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$mJMOuW4zijA3CqpBP-vTm4CD3uOk97Vv29et18pZFkY"},
{"content":{"body":"https://github.com/tc39/Reflector/issues/551","m.mentions":{},"msgtype":"m.text"},"ts":1739370043436,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$iYaTyVchwuYn0_85M29ybMlASoOX_RbOMyIO5xcSYSI"},
{"content":{"body":"I should be able to make that time as well.","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$B03giaBJFNJ8hQxb_xwDTgORkqGbYVYwjeNPFq1G3xo"}},"msgtype":"m.text"},"ts":1739370216881,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$WhHBG4fMKdjyveNgBXZY6DCpomdG5mqlG3eC0X0ZDPw"},
{"content":{"body":"I'd appreciate a calendar invite at eemeli@mozilla.com for the meeting, once such is available.","m.mentions":{},"msgtype":"m.text"},"ts":1739370272274,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$bPmpn7WHO2mg6OvpG1L5mdsnadvKG65qBkfw8VoZBpk"},
{"content":{"body":"why is this identity important?","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7S9OMZNQnc2fR-TMT591RBZmFxTxr0_Jbia6QmAFV7E"}},"msgtype":"m.text"},"ts":1739371042216,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8dm5ezHyanNMtLTm2kpvQwXLDHSK-xcK70MG5oRVQxI"},
{"content":{"body":"Because it would be surprising for that identity not to hold, and because it makes it straightforward to support all the same types that are supported by Intl.NumberFormat.","m.mentions":{},"msgtype":"m.text"},"ts":1739371540024,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$F2ONMZ4-v3Sn3J4CmMReiIbE5urzoPzUzeu76QMWs9c"},
{"content":{"body":"I'm not so sure that it's important for the value type to be retained after e.g. conversion. So something like\n```\nnew Amount(42, { unit: 'meter' }).convertTo('foot-and-inch').value\n```\ncould well be a Decimal. Which is why I think we ought to do Amount first, then Decimal, then unit conversions. That way each step only depends on previous work.","format":"org.matrix.custom.html","formatted_body":"<p>I'm not so sure that it's important for the value type to be retained after e.g. conversion. So something like</p>\n<pre><code>new Amount(42, { unit: 'meter' }).convertTo('foot-and-inch').value\n</code></pre>\n<p>could well be a Decimal. Which is why I think we ought to do Amount first, then Decimal, then unit conversions. That way each step only depends on previous work.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1739371726098,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$6p0YU6ZcEJScGSicjKgZX3LYnCal0335y4_cC-mJxJ8"}
]