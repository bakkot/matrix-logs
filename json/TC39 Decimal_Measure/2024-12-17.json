[
{"content":{"body":"Hi, everyone! Thanks Chris for making this room! I've been in a lot of DMs and other different communication channels with different subsets of people regarding the Decimal and Measure proposals, so I thought we would benefit from a single forum to talk and plan.","m.mentions":{},"msgtype":"m.text"},"ts":1734408664396,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$GnGo30C9l24BDPzV0j5b2uW4FQiccAuLsABbSE8cGEE"},
{"content":{"body":"I had a good conversation with nicolo-ribaudo after the session I hosted in the December plenary. Basically, I would really like to see these proposals advance together as soon as possible. It might not seem like it, but I feel we are the closest we've been to getting a proposal that everyone on the committee is happy about.","format":"org.matrix.custom.html","formatted_body":"I had a good conversation with <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> after the session I hosted in the December plenary. Basically, I would really like to see these proposals advance together as soon as possible. It might not seem like it, but I feel we are the closest we've been to getting a proposal that everyone on the committee is happy about.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1734408826529,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$6-T11icO3VviJWdrc6I_srr4C-dRtJne2ilcsL3GdXM"},
{"content":{"body":"It looks from the outside that we've been going in circles, but I describe it more as a helix: when we go back to the shape of a proposal we've had before, we arrive there with more stakeholders and a much more foolproof specification and understanding of the problem space.","m.mentions":{},"msgtype":"m.text"},"ts":1734408892919,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ef3cstHPh1YZmEPeDJppvPHAAuBXPmnwu9q6mH-zjsg"},
{"content":{"body":"thanks for setting up this room! I think it makes sense to have a common place to discuss","m.mentions":{},"msgtype":"m.text"},"ts":1734427548291,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$VpRWyYweirpYkswRJ_RG6WI_kTHAVuBhzUlQiw4EzsI"},
{"content":{"body":"I also agree that what appears to be circular motion is actually progress","m.mentions":{},"msgtype":"m.text"},"ts":1734427579960,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$4C4E8rWAxg3yRlMz9fFUgcgylA7HHdPSW9dIdeRRVJA"},
{"content":{"body":"having measure & decimal move together makes a lot of sense","m.mentions":{},"msgtype":"m.text"},"ts":1734427634063,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$paCVXJKfuDCwt0dO4SVcHFcQdjlR_Om7blP8p6vF36g"},
{"content":{"body":"we'll be presenting a vision in February that unifies all these threads","m.mentions":{},"msgtype":"m.text"},"ts":1734427911779,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$7tZHNZ09nFonVEnG9zy2wwAzL-8EU0O8v7WedQbQXKE"},
{"content":{"body":"For Measure, this may also be relevant: https://github.com/mozilla/explainers/blob/main/amount.md\n\nThat document also links to some relevant prior art & previous discussions.","m.mentions":{},"msgtype":"m.text"},"ts":1734437627774,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$GHU4WsLHFa-kzrmGqYP6hDcD8jeQB-gzL4DU40xm0Ng"},
{"content":{"body":"I'm very happy to hear about this progress, and excited to learn more","m.mentions":{},"msgtype":"m.text"},"ts":1734461877827,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5QXxuRooG7BlTQwVuqvdVNBBpiXdX9wpniD9O42o2hw"},
{"content":{"body":"> <@jesse:igalia.com> we'll be presenting a vision in February that unifies all these threads\n\nPart of the goal of this room is to communicate earlier and more often so we aren't surprised by presentations and what everyone else is working on. So I encourage you to share more information on what you are planning to present in February","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$7tZHNZ09nFonVEnG9zy2wwAzL-8EU0O8v7WedQbQXKE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jesse:igalia.com\">@jesse:igalia.com</a><br>we&#39;ll be presenting a vision in February that unifies all these threads</blockquote></mx-reply>Part of the goal of this room is to communicate earlier and more often so we aren't surprised by presentations and what everyone else is working on. So I encourage you to share more information on what you are planning to present in February","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7tZHNZ09nFonVEnG9zy2wwAzL-8EU0O8v7WedQbQXKE"}},"msgtype":"m.text"},"ts":1734461973069,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$2au0JMIW9ZsEwa5I57y2zpvk1vv23W7SA3fkfCzOtt4"},
{"content":{"body":"sffc: When you say that you imagine Decimal and Measure advancing together, which version of Decimal do you have in your head?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: When you say that you imagine Decimal and Measure advancing together, which version of Decimal do you have in your head?","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"msgtype":"m.text"},"ts":1734462019183,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v6C1APXVYOw8rqB0DrbN7jcVp-uRX2LhUVCxklhrcrk"},
{"content":{"body":"I'd like to see something based on the \"bonus slide\" in my November presentation. Basically a form of hybrid solution. I expect lots of bikeshedding to follow","m.mentions":{},"msgtype":"m.text"},"ts":1734462807690,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$BiS3JHikS4VEbV4fNas_EyikqgpQe8bzBCA6uMs_kg8"},
{"content":{"body":"great, so, like, which one?","format":"org.matrix.custom.html","formatted_body":"great, so, like, which one?","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BiS3JHikS4VEbV4fNas_EyikqgpQe8bzBCA6uMs_kg8"}},"msgtype":"m.text"},"ts":1734463567352,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qwkXQUDQtaM1tiHNEF_qHLqwE56u_ZmGbELrkKJE96w"},
{"content":{"body":"this? https://docs.google.com/presentation/d/1Uzrf-IwPrljF2BhCbCWuwQxlgGSm_bcd3FRbPO3Yrio/edit#slide=id.g31a6e89a509_0_8","m.mentions":{},"msgtype":"m.text"},"ts":1734463628576,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$P85Lxi9zW7lgcPaegS-IHzRh0LViwNNCWHxyw8oFsg4"},
{"content":{"body":"do you want to propose two decimal types (with and without quanta)?","m.mentions":{},"msgtype":"m.text"},"ts":1734463695309,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PgBQIKRKSSV17ZJCLCSiY729FYb1ZauwZXYVwk8zXfI"},
{"content":{"body":"bikeshedding is good. I'm curious what you'd change vs the current proposal (besides advancing Measure)","m.mentions":{},"msgtype":"m.text"},"ts":1734464369734,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C71mhTJueLb19iABuMN2gYbtzk4JfFunmtIMR4Cb4PY"},
{"content":{"body":"My preference would be to encapsulate within Measure the protocol that we need for interacting with Intl.NumberFormat, including formatting precision as fraction or significant digits, so that Decimal only needs to hold a numerical value.","m.mentions":{},"msgtype":"m.text"},"ts":1734464629630,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$7hFwv3C_kthFMFOfmyze6I-EduaaqP5wxL08arJhBho"},
{"content":{"body":"I *think* I agree with that, but I imagine you'd still be able to pass in a Decimal directly (just like you can pass in Numbers)","format":"org.matrix.custom.html","formatted_body":"I <em>think</em> I agree with that, but I imagine you'd still be able to pass in a Decimal directly (just like you can pass in Numbers)","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7hFwv3C_kthFMFOfmyze6I-EduaaqP5wxL08arJhBho"}},"msgtype":"m.text"},"ts":1734464688921,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$q2AuRsagGTXvM8pxjkefVxaNBZ1kf6LmhLNzdd_iy4w"},
{"content":{"body":"Sure, but if you're coming from some other decimal representation (say, one used by a JS library) that might incorporate precision with the value, a Measure would allow you to represent the value as a numerical string + give the precision separately.","m.mentions":{},"msgtype":"m.text"},"ts":1734464914969,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$2l0R4YLTzWU7rFx23kKsJEtc-AA1V2KmErmY2NJl0Ww"},
{"content":{"body":"sgtm","format":"org.matrix.custom.html","formatted_body":"sgtm","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2l0R4YLTzWU7rFx23kKsJEtc-AA1V2KmErmY2NJl0Ww"}},"msgtype":"m.text"},"ts":1734464932150,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4YVw5UXgt23Rl61jtnwXct_wdRoZTUoiHx_6Xdl6OhA"},
{"content":{"body":"I don't completely agree with Eemeli's position","msgtype":"m.text"},"ts":1734467359991,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$1PMZCbSvXuWyi-C2vN2c6Anj6ONnx-fzcR78IP0tor0"},
{"content":{"body":"What I'd like to avoid is a Decimal proposal that doesn't consider Intl's needs and a separate Measure proposal that doesn't consider 262's needs","msgtype":"m.text"},"ts":1734467569835,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$lWfX7Ukec6SMnrdeanfvhshtRZu1dIfsWilGjg7ZuWE"},
{"content":{"body":"can you elaborate on that? what is it that you don't like? If we verify that the decomposition is clean, correct and logical, that is a way of considering the other's needs.","m.mentions":{},"msgtype":"m.text"},"ts":1734468946783,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$raj8OTEsRvs8YqLH5cK9Oy2T_jtIqERxn_a4QypRcK4"},
{"content":{"body":"If TC39 were to bless a Decimal-without-precision as the recommended number type, the well-known Intl bug will continue to exist indefinitely. ECMA-262 numbers should \"just work\" when interoperating with Intl","m.mentions":{},"msgtype":"m.text"},"ts":1734471116813,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$vEA7TZhF2t8EwheufNchEz5imV2fNEXkysRBfXb_0rE"},
{"content":{"body":"That's what I mean about \"avoid a Decimal proposal that doesn't consider Intl's needs\"","m.mentions":{},"msgtype":"m.text"},"ts":1734471182744,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$nCABe2TW7b8OgcmXxunOgXWfXHCgISAh3iB9LreWdhw"},
{"content":{"body":"In the other direction, I would like to see Measure become a standard protocol for interacting with dimensioned values (units and currencies). A software program already written using Measure can then easily change `toString` to `toLocaleString` and it will just work.","format":"org.matrix.custom.html","formatted_body":"In the other direction, I would like to see Measure become a standard protocol for interacting with dimensioned values (units and currencies). A software program already written using Measure can then easily change <code>toString</code> to <code>toLocaleString</code> and it will just work.","m.mentions":{},"msgtype":"m.text"},"ts":1734471250980,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$R_uwBW7VIqQDh3KKjpkFCeu9Rdy0Qz1Ou9O_cHEQ5K0"},
{"content":{"body":"A potential three-layered solution _could_ be workable: one with `NormalizedDecimal128`, `FullDecimal128`, and `DimensionedDecimal128`. Intl can accept the later two.","format":"org.matrix.custom.html","formatted_body":"A potential three-layered solution <em>could</em> be workable: one with <code>NormalizedDecimal128</code>, <code>FullDecimal128</code>, and <code>DimensionedDecimal128</code>. Intl can accept the later two.","m.mentions":{},"msgtype":"m.text"},"ts":1734471380593,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$OMjcJ074bNnouuLnZk4SZU_BHkGyHOxIYHDgfkdZRw0"},
{"content":{"body":"I'm actually not quite sure what \"the well-known Intl bug\" is in this context. Could you elaborate a bit?","m.mentions":{},"msgtype":"m.text"},"ts":1734472847758,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$tvM6fUMmZb_CozhmeAsdM6OkuxOApjTbjqx2u3LUGZA"},
{"content":{"body":"It's about how  you need to make sure to pass the same formatting option to separate APIs so that their results are coherent (NumberFormat and PluralRules), because the number that you pass to them doesn't encode all the necessary info","msgtype":"m.text"},"ts":1734473296342,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$126AFRBBaauTNWG5txXUreGqYCmiqaUeDzSNP3_MNT4"},
{"content":{"body":"this feels a lot like the ISO calendar debate","m.mentions":{},"msgtype":"m.text"},"ts":1734474333676,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7blMw5WyBOL_W2GxwctHaJbe0lV0qre0aZ_iVHC4xfk"},
{"content":{"body":"I'm not really convinced that when we run into a problem, we need to make it a really noisy part of the API. I think it's enough to ensure that we have a data type that supports the right operations (here, Measure)","m.mentions":{},"msgtype":"m.text"},"ts":1734474372817,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bLgfd6I1pBeeuOFx80Irs9GPSprUpAG1tVGqVVPrj-g"},
{"content":{"body":"(sometimes it feels like pluralrules should've been a method on NumberFormat instead of a separate class)","m.mentions":{},"msgtype":"m.text"},"ts":1734474444778,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-x9s8QyJI6qR39Hv8bMBqoA6eyrgRilXcN4KTsFvxKk"},
{"content":{"body":"I think in Temporal we ended up with the right data model, and we worked out a way to make it not be too \"noisy\"","m.mentions":{},"msgtype":"m.text"},"ts":1734474450297,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$a-iHE2HAi5hiZMZ6KX64q1H_nNWhfqGpzR5OHbW6yqo"},
{"content":{"body":"well, I don't want to relitigate that, but in that case we did end up with only `now` methods for the ISO calendar, while making sure that we had a data model that worked with all calendars. Having just normalized decimal + Measure + NumberFormat forces you to explicitly construct a Measure instance might be analogous.","format":"org.matrix.custom.html","formatted_body":"well, I don't want to relitigate that, but in that case we did end up with only <code>now</code> methods for the ISO calendar, while making sure that we had a data model that worked with all calendars. Having just normalized decimal + Measure + NumberFormat forces you to explicitly construct a Measure instance might be analogous.","m.mentions":{},"msgtype":"m.text"},"ts":1734474512139,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qjTqA3nHuH2gKRKEMV4Ey7ogT4XLruCeCK0_FCy6rGA"},
{"content":{"body":"I don't feel extremely strongly about the ergonomics of Decimal + NumberFormat; I'm OK if you need to explicitly wrap it with something that gives it precision","m.mentions":{},"msgtype":"m.text"},"ts":1734474534237,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FwGho872xA3_nEbaTLFw7Pta3IU5O4arnTlLqky7xoo"},
{"content":{"body":"I think that's basically the three-layered solution but without the middle layer","m.mentions":{},"msgtype":"m.text"},"ts":1734474662057,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$JWC7F4zJd01ON6JE8gG4mYZ0UKysEqVOPRpC56GaE0Y"},
{"content":{"body":"`myNormalizedDecimal.withFractionDigits(3).toLocaleString(\"th\")`","format":"org.matrix.custom.html","formatted_body":"<code>myNormalizedDecimal.withFractionDigits(3).toLocaleString(\"th\")</code>","m.mentions":{},"msgtype":"m.text"},"ts":1734474770431,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$wlVbtIFIQtWEwjjGln6qEHWyy_oiicYSQtFZEUmfCF4"},
{"content":{"body":"Yeah, I'd be happy with that. What do you think?","m.mentions":{},"msgtype":"m.text"},"ts":1734474782142,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s_8UhMe9RfOUP-Zr52MJV182DsrPaSMv2fo_imZqE5A"},
{"content":{"body":"Overall I'm happy with this composable data model. Ideally with the middle layer, and with names that need to be bikeshed.","m.mentions":{},"msgtype":"m.text"},"ts":1734475049719,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$6LIzuSfB1GARiAAeacX7VWgoV52PH-KGkG9w1xrbm9c"},
{"content":{"body":"can you explain the importance of the middle layer?","m.mentions":{},"msgtype":"m.text"},"ts":1734475099489,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rwN-L_4byXKbOo4i0xSi1XMm5qMoa4dlgpDCJ5ficks"},
{"content":{"body":"I'm not really sure when someone would want to use it","m.mentions":{},"msgtype":"m.text"},"ts":1734475113492,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tFvljeoetXF15AgdxxNJFCM0DL2s63LB5tN587_pNLs"},
{"content":{"body":"In this model, a `FullDecimal128` is a `DimensionedDecimal128` without a dimension. It is what feeds Intl APIs.","format":"org.matrix.custom.html","formatted_body":"In this model, a <code>FullDecimal128</code> is a <code>DimensionedDecimal128</code> without a dimension. It is what feeds Intl APIs.","m.mentions":{},"msgtype":"m.text"},"ts":1734475165278,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$b0VSUu9UE-DDZ1vaFgzjc0GafaFyruNqPnjrSZxU-Po"},
{"content":{"body":"It could alternatively be modeled as a `DimensionedDecimal128` with a null unit. But if we have the opportunity, it seems having a self-contained `FullDecimal128` is a better design.","format":"org.matrix.custom.html","formatted_body":"It could alternatively be modeled as a <code>DimensionedDecimal128</code> with a null unit. But if we have the opportunity, it seems having a self-contained <code>FullDecimal128</code> is a better design.","m.mentions":{},"msgtype":"m.text"},"ts":1734475225370,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$I4dYckoxL-yfrBgp0jc2zaiNyt_JOtNrJ6VcHzMkN-4"},
{"content":{"body":"It allows things like `(2.5m).withFractionalDigits(2).withCurrency(\"USD\").toLocaleString(\"en-CA\")`","format":"org.matrix.custom.html","formatted_body":"It allows things like <code>(2.5m).withFractionalDigits(2).withCurrency(\"USD\").toLocaleString(\"en-CA\")</code>","m.mentions":{},"msgtype":"m.text"},"ts":1734475254172,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$KBHSIrvR3cUk0R1Ldk_O2OZ62RHIq8Cs836ZVBeV3mM"},
{"content":{"body":"yeah, I guess it's analogous to how, in Temporal, we avoided data types with null things","m.mentions":{},"msgtype":"m.text"},"ts":1734475409081,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bdSyZoPiXdXw7cexHO2bnsfN4LsO-oAKs3iSCUqVdhA"},
{"content":{"body":"agree that this should work","format":"org.matrix.custom.html","formatted_body":"agree that this should work","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$KBHSIrvR3cUk0R1Ldk_O2OZ62RHIq8Cs836ZVBeV3mM"}},"msgtype":"m.text"},"ts":1734475438897,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ewn1i6HtVVTgtzkFeijtgNmHx0mfEXWLv1_IBQmDmBE"},
{"content":{"body":"this could be done in a \"weakly typed\" way (with null units) or in a strongly typed way (with the mid layer)","m.mentions":{},"msgtype":"m.text"},"ts":1734475462542,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BkFa12_r_NgqUcp8JQgXSilOBnbWjD3nIS3wI4-Dn7M"},
{"content":{"body":"We could make `NormalizedDecimal128.prototype.withFractionalDigits` return a `DimensionedDecimal128` with null unit, and `DimensionedDecimal128.prototype.withCurrency` throws an exception if the unit is not null. But that seems not as clean as a different object in the middle with its own methods.","format":"org.matrix.custom.html","formatted_body":"We could make <code>NormalizedDecimal128.prototype.withFractionalDigits</code> return a <code>DimensionedDecimal128</code> with null unit, and <code>DimensionedDecimal128.prototype.withCurrency</code> throws an exception if the unit is not null. But that seems not as clean as a different object in the middle with its own methods.","m.mentions":{},"msgtype":"m.text"},"ts":1734475464419,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ZhDuXwxL0rnGVHaU_tyPpdAd8Q8ZLpRbWABmV3HJdzs"},
{"content":{"body":"why would it be DimensionedDecimal128 and not DimensionedNumeric (so it works with Number too)?","m.mentions":{},"msgtype":"m.text"},"ts":1734475489695,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1fB2nUd_1014ceRkXFyMHVtJG6trxGvZLc6GW-aOmAQ"},
{"content":{"body":"yeah, I think we share an understanding of the design space and can consider the difference to be \"bikeshedding\" (though at a high level)","format":"org.matrix.custom.html","formatted_body":"yeah, I think we share an understanding of the design space and can consider the difference to be \"bikeshedding\" (though at a high level)","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZhDuXwxL0rnGVHaU_tyPpdAd8Q8ZLpRbWABmV3HJdzs"}},"msgtype":"m.text"},"ts":1734475520271,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VFq7lbDaE22W1jtYrooMEFlVUq01O6Q8L3C8K0d9ifU"},
{"content":{"body":"> <@littledan:matrix.org> why would it be DimensionedDecimal128 and not DimensionedNumeric (so it works with Number too)?\n\n1. IEEE has given us a definition for how precision should work and I think we should use it instead of designing our own way of representing precision\n2. It's likely simpler and potentially more efficient to implement a DimensionedDecimal128 with a single numeric representation than one with a pluggable numeric representation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$1fB2nUd_1014ceRkXFyMHVtJG6trxGvZLc6GW-aOmAQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>why would it be DimensionedDecimal128 and not DimensionedNumeric (so it works with Number too)?</blockquote></mx-reply><ol>\n<li>IEEE has given us a definition for how precision should work and I think we should use it instead of designing our own way of representing precision</li>\n<li>It's likely simpler and potentially more efficient to implement a DimensionedDecimal128 with a single numeric representation than one with a pluggable numeric representation</li>\n</ol>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1fB2nUd_1014ceRkXFyMHVtJG6trxGvZLc6GW-aOmAQ"}},"msgtype":"m.text"},"ts":1734475663407,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$wgZ7GhOZzRUs7e4Vqa-tx35WXgmLZWMZ6Y-iOqGlbDo"},
{"content":{"body":"when you say \"how precision should work\", are you imagining implementing arithmetic operations or anything like that on these?","format":"org.matrix.custom.html","formatted_body":"when you say \"how precision should work\", are you imagining implementing arithmetic operations or anything like that on these?","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wgZ7GhOZzRUs7e4Vqa-tx35WXgmLZWMZ6Y-iOqGlbDo"}},"msgtype":"m.text"},"ts":1734478034961,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2Sh2aMQLFVRzd6SZGjVkR-LWhzbRu6tQRVdaIgPyE9Y"},
{"content":{"body":"or comparisons, etc","m.mentions":{},"msgtype":"m.text"},"ts":1734478060780,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IyMBOR68-LKo5LoOKWhXa24yvUFCOFB5u70aOOyenA4"},
{"content":{"body":"What I mean is more like, let's avoid a debate about whether precision should be represented as `fractionDigits`, `min/max FractionDigits`, `significantDigits`, `errorBar`, etc. Like, I think it's not valuable and potentially harmful for there to be a difference between `(2.5m).withFractionDigits(2)` and `(2.5m).withSignificantDigits(3)`. But this isn't a topic we've discussed very much and I haven't heard many arguments one way or another.","format":"org.matrix.custom.html","formatted_body":"What I mean is more like, let's avoid a debate about whether precision should be represented as <code>fractionDigits</code>, <code>min/max FractionDigits</code>, <code>significantDigits</code>, <code>errorBar</code>, etc. Like, I think it's not valuable and potentially harmful for there to be a difference between <code>(2.5m).withFractionDigits(2)</code> and <code>(2.5m).withSignificantDigits(3)</code>. But this isn't a topic we've discussed very much and I haven't heard many arguments one way or another.","m.mentions":{},"msgtype":"m.text"},"ts":1734478205143,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$9mu5YfVu-LkwwrZn1KbwrSM5qaj0dPnu3qEoaGdc6Pk"},
{"content":{"body":"oh, I see. I think once we decide we're working in terms of base-10 quanta, we sort of have an answer which can apply to Numbers as well. But I'm not sure if this answer serves the needs of these i18n applications.","m.mentions":{},"msgtype":"m.text"},"ts":1734478290620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$uuBQXEughTVgI3Nvizf0_d3rrDePaJ9YsmZt9IU6_bw"}
]