[
{"content":{"body":"Niocolo's reply does answer my questions, but it doesn't really make me happy about `Decimal.Amount`. According to the current version of the slides it's described as:\n> Today, we propose a new `Decimal.Amount` primordial for storing a (1) decimal value (2) with a precision (3) but without a unit.\n\nThat last part in particular seems rather novel and surprising, and I can't find any mention of such an approach in the repo or meeting notes. I proposed the term \"amount\" as an alternative for \"measure\", but now it's being taken up as a part of Decimal and won't include any units?","format":"org.matrix.custom.html","formatted_body":"<p>Niocolo's reply does answer my questions, but it doesn't really make me happy about <code>Decimal.Amount</code>. According to the current version of the slides it's described as:</p>\n<blockquote>\n<p>Today, we propose a new <code>Decimal.Amount</code> primordial for storing a (1) decimal value (2) with a precision (3) but without a unit.</p>\n</blockquote>\n<p>That last part in particular seems rather novel and surprising, and I can't find any mention of such an approach in the repo or meeting notes. I proposed the term \"amount\" as an alternative for \"measure\", but now it's being taken up as a part of Decimal and won't include any units?</p>\n","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7KvVVJ_gi_ZBx_Lwx7EhicNB02xg-UVKslH1BAIA_tE"}},"msgtype":"m.text"},"ts":1744263065129,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$Hq-t-3RAzTZB_xJ0eysetGpEFK9hOmcSjoz-VpjrfwI"},
{"content":{"body":"My mental model of `Decimal.Amount` is that it contains both a precision and a unit","format":"org.matrix.custom.html","formatted_body":"My mental model of <code>Decimal.Amount</code> is that it contains both a precision and a unit","m.mentions":{},"msgtype":"m.text"},"ts":1744263576205,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$jERFTczpKjXsUu6En8XF01GDtEKwlQQX4h8XpDdnmYQ"},
{"content":{"body":"* My mental model of `Decimal.Amount` is that it contains both a precision and a unit. I just looked at Jesse's updated slides and they are proposing a specific shape I haven't seen before.","format":"org.matrix.custom.html","formatted_body":"* My mental model of <code>Decimal.Amount</code> is that it contains both a precision and a unit. I just looked at Jesse's updated slides and they are proposing a specific shape I haven't seen before.","m.mentions":{},"m.new_content":{"body":"My mental model of `Decimal.Amount` is that it contains both a precision and a unit. I just looked at Jesse's updated slides and they are proposing a specific shape I haven't seen before.","format":"org.matrix.custom.html","formatted_body":"My mental model of <code>Decimal.Amount</code> is that it contains both a precision and a unit. I just looked at Jesse's updated slides and they are proposing a specific shape I haven't seen before.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$jERFTczpKjXsUu6En8XF01GDtEKwlQQX4h8XpDdnmYQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744263674124,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$wMmGGTm1ZA50dV6t7oBptO8QkXkBd7PvimRWnVPT-Dg"},
{"content":{"body":"I don't agree with the framing of the motivation on slide 4. There wasn't consensus that the proposals remain separate; I would describe it as skepticism raised by some delegates that the use cases were similar enough to merge them.","m.mentions":{},"msgtype":"m.text"},"ts":1744264000126,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$u1Wd-GZLM9cK6ONrcLno-ElxW2hquu9HXY31l6DDXvE"},
{"content":{"body":"We should highlight that we took home the feedback about building a _protocol_, and we investigated it. We found, however, that only the primordial brings immutability, ergonomics, and interoperability to the table. To address the feedback about a top-level `Amount` not seeming well-motivated, we are coming with an updated proposal that scopes the primordial under `Decimal.Amount`, to make clear that this is a type that is designed to live in the Decimal universe.","format":"org.matrix.custom.html","formatted_body":"We should highlight that we took home the feedback about building a <em>protocol</em>, and we investigated it. We found, however, that only the primordial brings immutability, ergonomics, and interoperability to the table. To address the feedback about a top-level <code>Amount</code> not seeming well-motivated, we are coming with an updated proposal that scopes the primordial under <code>Decimal.Amount</code>, to make clear that this is a type that is designed to live in the Decimal universe.","m.mentions":{},"msgtype":"m.text"},"ts":1744264233422,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$kvFfB33XuVwIE4Tvf8ZXQihTFj2hgCwaBzIlhNKL5kA"},
{"content":{"body":"why would \"amount\" include a unit?","m.mentions":{},"msgtype":"m.text"},"ts":1744268242391,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lFWyVd6p7iIi6Q-a84f8RtCt4lGrMamRHk-JQIph-ts"},
{"content":{"body":"amount to me is like a magnitude, it's unitless","m.mentions":{},"msgtype":"m.text"},"ts":1744268251979,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YkPcbhud67l8quOkMTI61SWUdCl-5zV5v1snHQB3zlM"},
{"content":{"body":"> <@ljharb:matrix.org> why would \"amount\" include a unit?\n\nThe idea is that:\n- the decimal proposal introduces plain decimals, exactly as it was for the past year\n- for good Intl integration and to be able to fully represent external decimal128 values, the proposal also introduced an object that lets you represent a (decimal,precision) pair. This object doesn't support any operations, it's just some data payload + a comparison function. It has a prototype, to put the function on it, as well as things like .toLocaleString.\n- the measure proposal needs a way to define an (object,precision,unit): given that for the other proposal we are defining (object,precision) already, this proposal can just add the unit there.\n\nWhether it's called Amount, Measure, or something else doesn't really matter for now — if we have .to/.with/.someThing else methods to get to it, we could even not expose the constructor at all (like we don't expose ArrayIterator)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$lFWyVd6p7iIi6Q-a84f8RtCt4lGrMamRHk-JQIph-ts?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />why would &quot;amount&quot; include a unit?</blockquote></mx-reply><p>The idea is that:<br />- the decimal proposal introduces plain decimals, exactly as it was for the past year<br />- for good Intl integration and to be able to fully represent external decimal128 values, the proposal also introduced an object that lets you represent a (decimal,precision) pair. This object doesn't support any operations, it's just some data payload + a comparison function. It has a prototype, to put the function on it, as well as things like .toLocaleString.<br />- the measure proposal needs a way to define an (object,precision,unit): given that for the other proposal we are defining (object,precision) already, this proposal can just add the unit there.</p>\n<p>Whether it's called Amount, Measure, or something else doesn't really matter for now — if we have .to/.with/.someThing else methods to get to it, we could even not expose the constructor at all (like we don't expose ArrayIterator)</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$lFWyVd6p7iIi6Q-a84f8RtCt4lGrMamRHk-JQIph-ts"}},"msgtype":"m.text"},"ts":1744268965928,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$mp7b4vVIMiRc77oMFE46o8ZRgZQ4ybEsyZJrEKqIcKQ"},
{"content":{"body":"* The idea is that:\n- the decimal proposal introduces plain decimals, exactly as it was for the past year\n- for good Intl integration and to be able to fully represent external decimal128 values, the proposal also introduced an object that lets you represent a (decimal,precision) pair. This object doesn't support any operations, it's just some data payload + a comparison function. It has a prototype, to put the function on it, as well as things like .toLocaleString.\n- the measure proposal needs a way to define an (object,precision,unit): given that for the other proposal we are defining (object,precision) already, this proposal can just add the unit there.\nWhether it's called Amount, Measure, or something else doesn't really matter for now — if we have .to/.with/.someThing else methods to get to it, we could even not expose the constructor at all (like we don't expose ArrayIterator). Although this is more like a nuclear option, because people will give a name to these objects and we are in a position to direct that.\n","m.new_content":{"body":"> <@ljharb:matrix.org> why would \"amount\" include a unit?\n\nThe idea is that:\n- the decimal proposal introduces plain decimals, exactly as it was for the past year\n- for good Intl integration and to be able to fully represent external decimal128 values, the proposal also introduced an object that lets you represent a (decimal,precision) pair. This object doesn't support any operations, it's just some data payload + a comparison function. It has a prototype, to put the function on it, as well as things like .toLocaleString.\n- the measure proposal needs a way to define an (object,precision,unit): given that for the other proposal we are defining (object,precision) already, this proposal can just add the unit there.\nWhether it's called Amount, Measure, or something else doesn't really matter for now — if we have .to/.with/.someThing else methods to get to it, we could even not expose the constructor at all (like we don't expose ArrayIterator). Although this is more like a nuclear option, because people will give a name to these objects and we are in a position to direct that.\n","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!NnKyFxSjabKpyjbPcL:matrix.org/$lFWyVd6p7iIi6Q-a84f8RtCt4lGrMamRHk-JQIph-ts?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a><br />why would &quot;amount&quot; include a unit?</blockquote></mx-reply><p>The idea is that:</p>\n<ul>\n<li>the decimal proposal introduces plain decimals, exactly as it was for the past year</li>\n<li>for good Intl integration and to be able to fully represent external decimal128 values, the proposal also introduced an object that lets you represent a (decimal,precision) pair. This object doesn't support any operations, it's just some data payload + a comparison function. It has a prototype, to put the function on it, as well as things like .toLocaleString.</li>\n<li>the measure proposal needs a way to define an (object,precision,unit): given that for the other proposal we are defining (object,precision) already, this proposal can just add the unit there.<br />Whether it's called Amount, Measure, or something else doesn't really matter for now — if we have .to/.with/.someThing else methods to get to it, we could even not expose the constructor at all (like we don't expose ArrayIterator). Although this is more like a nuclear option, because people will give a name to these objects and we are in a position to direct that.</li>\n</ul>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mp7b4vVIMiRc77oMFE46o8ZRgZQ4ybEsyZJrEKqIcKQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744269006906,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aMrdf1mXU95ZDJKMOsEW_F0nacjL4_T4WgsOJvWH6sQ"}
]