[
{"content":{"body":"the decimal continuatin will be this afternoon (early, not late)","m.mentions":{},"msgtype":"m.text"},"ts":1748505571104,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$mOkyi9Gpes2kaD9IPvAdBUkt0jOEJXAV9L-0rviQKr8"},
{"content":{"body":"here are the continuation topics:","m.mentions":{},"msgtype":"m.text"},"ts":1748508139998,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$HfAq-8UG_kfDfCxSDDmQCBST0e0poSErFHLsJyQpRmo"},
{"content":{"body":"not sure what WH has in mind with pi to 72 significant digits; this isn't one of the (many, many) Number values that are exactly representable in base-10 having > 34 significant digits","m.mentions":{},"msgtype":"m.text"},"ts":1748508510349,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$vSm5lVb2_VtcW6MBpjkMOQH-j0EiW4HpUAvVD9chOeA"},
{"content":{"body":"* not sure what WH has in mind with pi to 72 significant digits; this isn't one of the (many, many) Number values that are exactly representable in base-2 and having > 34 significant (decimal) digits","m.mentions":{},"m.new_content":{"body":"not sure what WH has in mind with pi to 72 significant digits; this isn't one of the (many, many) Number values that are exactly representable in base-2 and having > 34 significant (decimal) digits","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$vSm5lVb2_VtcW6MBpjkMOQH-j0EiW4HpUAvVD9chOeA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748508532281,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$cPB5imbGVsRoc6GjQ43RHr2zzhBKsVUc0U09r5plar8"},
{"content":{"body":"I'd love to hear more about use cases for `equals` for amounts","format":"org.matrix.custom.html","formatted_body":"I'd love to hear more about use cases for <code>equals</code> for amounts","m.mentions":{},"msgtype":"m.text"},"ts":1748508581798,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$joDvm4YgBs7TWFXsDxRIkTe9j5eYFK0dMLC4OmXtQqg"},
{"content":{"body":"it got removed not because of any opposition to it, just ignorance of any concrete need","m.mentions":{},"msgtype":"m.text"},"ts":1748508613235,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$FSMnKMAlJ2IRWNia6hgqhlVj3QTF_FRRGH_AyKvi_6s"},
{"content":{"body":"(I added it in the latest version of the Decimal polyfil, fwiw)","m.mentions":{},"msgtype":"m.text"},"ts":1748508640745,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$X-YwVnD9MwNiHL2pyUtpb3FMXW2WqmYffShJC0l2INY"},
{"content":{"body":"It confounds me how any value type wouldn't have an equals function. As the most basic use case, I would like the ability to store these in a hash set.","m.mentions":{},"msgtype":"m.text"},"ts":1748508761046,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ssi8LdYXV7libT1ONqWFxWCprolgApGdH_WWIaSd69w"},
{"content":{"body":"MM's question at the top (\"Why is amount tied to decimal?\") might have been answered by N-ic's email","m.mentions":{},"msgtype":"m.text"},"ts":1748508762986,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$2nIxuKTSeZfyxI54j-ar_3hLY-PFTF7esH7JFyZcKc0"},
{"content":{"body":"but it might also be another form of \"why a monomorphic decimal-backed amount instead of a polymorphic one\"","m.mentions":{},"msgtype":"m.text"},"ts":1748508795557,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$b4R6EqzTQcYWTZd3DrcpORF-6LdNIg8PiVBDnBkGWRc"},
{"content":{"body":"I still have to answer again to Mark","msgtype":"m.text"},"ts":1748508797836,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LTFamCtBPk0PbMagOWqWjrzWBdSULiMwGnVNELn3VYg"},
{"content":{"body":"sgtm -- that's convincing enough","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ssi8LdYXV7libT1ONqWFxWCprolgApGdH_WWIaSd69w"}},"msgtype":"m.text"},"ts":1748508834318,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$ipVklSPbD6TRU790M1aBfdTFSGAqVsIwvYJPggDypiI"},
{"content":{"body":"for the exponential notation question, I'm not sure if there's any issue. All the examples we listed use decimal digit strings but we intend to support exponential notation, too","m.mentions":{},"msgtype":"m.text"},"ts":1748508888835,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$d_oB_fdqzT3wVkWlWnlEUv6Ue0siKxvKCKmL_9PtflI"},
{"content":{"body":"The Equals function gets a bit more fraught with Polymorphic Amount (are numerically-equal Number, BigInt, and Decimal Amounts .equals to each other?)","m.mentions":{},"msgtype":"m.text"},"ts":1748508902457,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$KPO82O3dC12OHWn0y3W4ZTA3k1uCYtKKzmR3vxP7Mhs"},
{"content":{"body":"right","m.mentions":{},"msgtype":"m.text"},"ts":1748508908118,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$Bj7GApUCUNN3XeEuC4FaU9VInwyJI-EaA1YOZ7RFiMc"},
{"content":{"body":"I think that instead of Polymorphic Amount, I like your idea of String Amount. Many of the Polymorphic Amount problems go away.","m.mentions":{},"msgtype":"m.text"},"ts":1748508966075,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$BqNa4-bW1CpOzwSzwpKBMwL9d7vVELvNaj-zheBtJT8"},
{"content":{"body":"So the question should be Decimal Amount or String Amount.","m.mentions":{},"msgtype":"m.text"},"ts":1748508986872,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$lviLNClxYqWCI3PI5kvWiz9cT2ZZVU5mp7c_wzkX5eA"},
{"content":{"body":"a String-backed amount definitely aligns with the main use cases for amount","m.mentions":{},"msgtype":"m.text"},"ts":1748509011935,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$cNdW3Oz_GcADzv3_QcmGTYtzvKIhcJ1nWI3SFD4PRgg"},
{"content":{"body":"conversion function (`toDecimal` etc.) might throw but maybe that's not so bad","format":"org.matrix.custom.html","formatted_body":"conversion function (<code>toDecimal</code> etc.) might throw but maybe that's not so bad","m.mentions":{},"msgtype":"m.text"},"ts":1748509043266,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$rPXQrPfD1p8arMs4MfLWo2hB480_h5RX_7PTDIzSX_0"},
{"content":{"body":"* conversion functions (`toDecimal`, `toBigInt`, `toNumber` etc.) might throw but maybe that's not so bad","format":"org.matrix.custom.html","formatted_body":"* conversion functions (<code>toDecimal</code>, <code>toBigInt</code>, <code>toNumber</code> etc.) might throw but maybe that's not so bad","m.mentions":{},"m.new_content":{"body":"conversion functions (`toDecimal`, `toBigInt`, `toNumber` etc.) might throw but maybe that's not so bad","format":"org.matrix.custom.html","formatted_body":"conversion functions (<code>toDecimal</code>, <code>toBigInt</code>, <code>toNumber</code> etc.) might throw but maybe that's not so bad","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$rPXQrPfD1p8arMs4MfLWo2hB480_h5RX_7PTDIzSX_0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748509076450,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$N8NbE6rJlxrEtfLzw1G4tkt0K217M8ZUYjWXK3H70aA"},
{"content":{"body":"We can discuss that in an issue but I feel like `toDecimal` could have an options argument that tells it whether to round or throw","format":"org.matrix.custom.html","formatted_body":"We can discuss that in an issue but I feel like <code>toDecimal</code> could have an options argument that tells it whether to round or throw","m.mentions":{},"msgtype":"m.text"},"ts":1748509082065,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$4kVbHUuL2bgnvBM-BG32-0sI4uwIEg-sCNtufCNQTKA"},
{"content":{"body":"If we do string amount, I'd prefer conversions to be cast-like operations, e.g. `Decimal(amount)` and `BigInt(amount)` rather than `amount.toDecimal()` and `amount.toBigInt()`","format":"org.matrix.custom.html","formatted_body":"If we do string amount, I'd prefer conversions to be cast-like operations, e.g. <code>Decimal(amount)</code> and <code>BigInt(amount)</code> rather than <code>amount.toDecimal()</code> and <code>amount.toBigInt()</code>","m.mentions":{},"msgtype":"m.text"},"ts":1748509230971,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$b7aL2ONTL5Zw0p7SByBpcsP1oxox6nNT81DUZ0nL0M0"},
{"content":{"body":"I think E-emli suggested this approach, too?","m.mentions":{},"msgtype":"m.text"},"ts":1748509474846,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$AqDnGsmSsAkyHsUWJU5SibIhbHMSAHlhKhdryP_qUKU"},
{"content":{"body":"I would also prefer something like a \"string amount\". Provided that its `.toString()` was a numeric string, then `new Decimal(amount)`, `BigInt(amount)`, and `Number(amount)` would all work.","format":"org.matrix.custom.html","formatted_body":"I would also prefer something like a \"string amount\". Provided that its <code>.toString()</code> was a numeric string, then <code>new Decimal(amount)</code>, <code>BigInt(amount)</code>, and <code>Number(amount)</code> would all work.","m.mentions":{},"msgtype":"m.text"},"ts":1748509497652,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$lvA0Dvb38YMuPKmiRhdR7gvk4fX1dQEvPjUVhaEiaUM"},
{"content":{"body":"a String-backed amount also leaves open the possibility of adding new numeric types","m.mentions":{},"msgtype":"m.text"},"ts":1748509549873,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$m0DASV8qRf-SOGnm11j205L7NTvodmy3I3BlFz7WZEc"},
{"content":{"body":"I don't want to get ahead of ourselves on `.toString()`; I want it to be able to hold a unit annotation","format":"org.matrix.custom.html","formatted_body":"I don't want to get ahead of ourselves on <code>.toString()</code>; I want it to be able to hold a unit annotation","m.mentions":{},"msgtype":"m.text"},"ts":1748509552047,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$7VGSFvDIWAzK9Yx5W0xJvodujGKWKh0yCvMDwAmwU74"},
{"content":{"body":"Or some other syntax for rationals","m.mentions":{},"msgtype":"m.text"},"ts":1748509563686,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$YjIvEtf-jxxMWLv5sAzxRDlo1_M6cmLK2NHXigY_His"},
{"content":{"body":"`\"4/3\"` or `\"1.50[meter]\"` might be valid string outputs","format":"org.matrix.custom.html","formatted_body":"<code>\"4/3\"</code> or <code>\"1.50[meter]\"</code> might be valid string outputs","m.mentions":{},"msgtype":"m.text"},"ts":1748509597404,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$NEuTQ_vsLPa0yxLz8Uw8ex-lNcECZO0TmVKsM6IU92o"},
{"content":{"body":"But not as part of the Decimal proposal","m.mentions":{},"msgtype":"m.text"},"ts":1748509618483,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$W8ljQndm6MozG_jkPuu9SiLPfQvyEiEpD-U0qU-Yng0"},
{"content":{"body":"We should make it future-proof though","m.mentions":{},"msgtype":"m.text"},"ts":1748509630959,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ruoLdw3gf9qfPNDtl2kvwEJPbknSBB0RC_mdE4VWK0g"},
{"content":{"body":"the decimal continuation might happen after this talk (!)","m.mentions":{},"msgtype":"m.text"},"ts":1748509685952,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$rHuOGAxPsY9lfwok5GM3bLFf-BctNY_yeO-yUcz8FhA"},
{"content":{"body":"As in, before lunch?","m.mentions":{},"msgtype":"m.text"},"ts":1748509769627,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$iiT3Ont2gcRM0HyGhtdFDIFDVfJz35rvWFVSbE9dTUc"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1748509779104,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$sK3y1UrKe6Bsp9baAPsyh262dsAip7slaoLghR-ChII"},
{"content":{"body":"As long as Waldemar and Mark Miller are on the call","m.mentions":{},"msgtype":"m.text"},"ts":1748509798482,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$eIqNg1-j9KWYmXtcJDu8Y2Mi5S2auny_A9-rIsZOxp8"},
{"content":{"body":"WH is here but MM isn't (and he might not be here in the early afternoon, either)","m.mentions":{},"msgtype":"m.text"},"ts":1748509818096,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$lFRDxMRO2F9cLSkECUgYK8QVQkSK2dN2D9UoJWdsSZc"},
{"content":{"body":"but there are too many contraints for the late afternoon","m.mentions":{},"msgtype":"m.text"},"ts":1748509839800,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$DU6zis97tUuA1DgtmQFhvS3rgyLoXoYccAXMoIfKq7Y"},
{"content":{"body":"(that's my understanding from the chairs)","m.mentions":{},"msgtype":"m.text"},"ts":1748509845115,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$NOnpzC3UXLwVBL_4YPbJwAzbKMYtHLTPBxASr6J3MPQ"},
{"content":{"body":"We could do a WH continuation now and a MM continuation later (both shorter and therefore easier to fit in)","m.mentions":{},"msgtype":"m.text"},"ts":1748509855378,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$DccNJy-SgndteR0ks9_DByJrRaLIj44h5XbUzdTvQsk"},
{"content":{"body":"neither expressed a constraint fwiw","m.mentions":{},"msgtype":"m.text"},"ts":1748509867050,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$9wPgtlA7B98w2gYkxk0zZHK-i73lvaHDtL9OD55i21g"},
{"content":{"body":"we have enough constraints explicitly laid out \\","format":"org.matrix.custom.html","formatted_body":"we have enough constraints explicitly laid out \\","m.mentions":{},"msgtype":"m.text"},"ts":1748509880930,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$FNJV4wsmwnTzxS9kMFE3vj4jYiAHr72KGHgHC_M6ggI"},
{"content":{"body":"* we have enough constraints explicitly laid out that it feels a bit harder accommodating implicit constraints","m.mentions":{},"m.new_content":{"body":"we have enough constraints explicitly laid out that it feels a bit harder accommodating implicit constraints","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$FNJV4wsmwnTzxS9kMFE3vj4jYiAHr72KGHgHC_M6ggI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748509911088,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$s8KiiBT_23-UuQgbBVZnxlB_4RxtW-RXdv_aZAObT9o"},
{"content":{"body":"Based on the queue, it looks like the WH items are most of what's left","m.mentions":{},"msgtype":"m.text"},"ts":1748509926013,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$kXjeQNMD3aX6du2fvrE98FAXPBjwm4JWMkkdqzN8WXU"},
{"content":{"body":"In preparing my slides for the meetup talk this evening, I'm reminded that I still don't recall us getting an answer on whether \"redefine BigInt\" is feasible","m.mentions":{},"msgtype":"m.text"},"ts":1748510251929,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$yes7IcUv-Iqrxu5iBlitfSi6xO7qmQMUq2rzklDBV2s"},
{"content":{"body":"redefine bigint? was that the idea of extending bigint with a new property indicating a decimal point index?","m.mentions":{},"msgtype":"m.text"},"ts":1748510313337,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$ZY1JRGE-MBIeJ_TdrhoZiQXVvb7O9EaqbSY-Dow8ecE"},
{"content":{"body":"IIRC this was an alternative path towards getting \"decimal\" as a primitive","m.mentions":{},"msgtype":"m.text"},"ts":1748510393158,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$MyrT_uAcoXPECw0eewOSfrv_m-wyRBL068yoCVY_gMs"},
{"content":{"body":"Yes. If we did that, then that would also be the Amount type, since it is a superset of the others.","m.mentions":{},"msgtype":"m.text"},"ts":1748510490116,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$IH0ngomXMrMv18Ns5K73ofBIRpjvdsOsHsRKJj5fogA"},
{"content":{"body":"Re \"the Amount type\", do you mean the type of the numerical value within Amount?","m.mentions":{},"msgtype":"m.text"},"ts":1748510532723,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$oFxHz0nyPW7o5qxpPRwz-3txoRV44H4BDdDQVPbXBiY"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1748510558058,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$K3dhLiv8GVlSpOvhFk7ONmDP6cAUJWkWemfuCmfpFAQ"},
{"content":{"body":"If so, I agree.","m.mentions":{},"msgtype":"m.text"},"ts":1748510558604,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$OzY59N8mrBI4o2PTkaXWYf-UIqBCKg7uxE13qF1Rp-I"},
{"content":{"body":"* Yes. If we did that, then that would also be the [numeric portion of the] Amount type, since it is a superset of the others.","m.mentions":{},"m.new_content":{"body":"Yes. If we did that, then that would also be the [numeric portion of the] Amount type, since it is a superset of the others.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IH0ngomXMrMv18Ns5K73ofBIRpjvdsOsHsRKJj5fogA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748510572454,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$_fbezOrVVKqS20cDiMiIJGDjueJPM-NOvsz2mqFPxfY"},
{"content":{"body":"one question would be the data model -- BigInt is an unlimited data type but Decimal128 has bounds","m.mentions":{},"msgtype":"m.text"},"ts":1748510654651,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$cb292ObXvda4sQHT8yDIA7sHwJpsyMtHyAUhVEJbDuc"},
{"content":{"body":"I guess Decimal128 wouldn't be the way to go","m.mentions":{},"msgtype":"m.text"},"ts":1748510711377,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$Op9pBs7mE9dYJS3XEBfuHx0YFXnbG6FUolcmjmvlUrk"},
{"content":{"body":"(for this approach)","m.mentions":{},"msgtype":"m.text"},"ts":1748510715802,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$8nzQmnjnQnFnFDlI7ujlj7w1m09RkWn6p6a3oF3X-44"},
{"content":{"body":"Yah.","m.mentions":{},"msgtype":"m.text"},"ts":1748510719708,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$xc-0knI9HdR19tFk9y7i378bdatsd5TStoe1EOZMGOs"},
{"content":{"body":"\"Modified BigInt\" is more like \"BigDecimal\" which is closer to String than Decimal","m.mentions":{},"msgtype":"m.text"},"ts":1748510764518,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$35-fc_0x50nUsU7O89t94arG01Jd0CErERVSWhGdJ5E"},
{"content":{"body":"thinking about arithmetic on these values, it's a sort of back-door rational number (but restricted to values that have finite decimal representations)","m.mentions":{},"msgtype":"m.text"},"ts":1748510876275,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$jG6yrCt-ZJDTO3zVwcIq_3wlhvotqGpqD5FcppkM7wU"},
{"content":{"body":"(btw that is definitley doable, and not slow; I'm not raising a performance concern)","m.mentions":{},"msgtype":"m.text"},"ts":1748510933563,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$jUWta8FMcHuARIRRHT5-vqYP67HJv1hbV6kCs2u9IrA"},
{"content":{"body":"Is there any way in which a string-backed Amount could be distinguished from a bigdecimal-backed Amount by a JS user?","m.mentions":{},"msgtype":"m.text"},"ts":1748510935027,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$FVxVi1DaVWeTAARJXjAqRCbrDr1E_Q02xCLTCon5QL4"},
{"content":{"body":"(I don't think there is or should be any difference)","m.mentions":{},"msgtype":"m.text"},"ts":1748510994417,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$Y543-O6geMWvpRZZx6VjHgx7e0j6yHk3rdrmwMKCQsg"},
{"content":{"body":"to my mind nothing sticks out; they seem basically interchangeable","m.mentions":{},"msgtype":"m.text"},"ts":1748511055358,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$VnlKSQuQfQTfATyCdK-Ja44Zzek8IRrrKqJVTvfh_io"},
{"content":{"body":"That's mostly correct, yes, except that it may prevent us from supporting rationals where a string like `\"4/3\"` could be a thing we support","format":"org.matrix.custom.html","formatted_body":"That's mostly correct, yes, except that it may prevent us from supporting rationals where a string like <code>\"4/3\"</code> could be a thing we support","m.mentions":{},"msgtype":"m.text"},"ts":1748511135403,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$7DfiCs7tUyq3urJRZtJZUe-xJBQyddwFtSZkxXBkIKc"},
{"content":{"body":"it seems that we're converging toward a String-backed Amount that would support all \"numerics\" via cast-like operations suggested by Eemeli and Nic","m.mentions":{},"msgtype":"m.text"},"ts":1748512863604,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$StUp3d6XOPwXJqO0Ubko3KfQIWcOlEsMftXrHexMNMg"},
{"content":{"body":"Note that string amount is not a solution to all problems, as we might need to redefine that for example 1e+1 and 1e1 are the same number but different strings","msgtype":"m.text"},"ts":1748512918571,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SK29FtxhtQz1YF3nyomcdxlVIZFpWIQjTK44KpIPBPk"},
{"content":{"body":"right we'd need to settle on normalization here too","m.mentions":{},"msgtype":"m.text"},"ts":1748512938989,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$Ho65Afa61q3cC1r9_cdtSWN3iLPyo_00ht4DpsgI_fw"},
{"content":{"body":"decimal does that kind of normalization in the sense that it accepts both of those but outputs only the 1st","m.mentions":{},"msgtype":"m.text"},"ts":1748512971569,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$3b0UGXd5cwDNO5BCgddjhfs555xaS1CXLvRchmOcqOQ"},
{"content":{"body":"I can say with extremely high confidence that redefining bigint is not feasible. It is a primitive type with existing well-defined integer-only semantics, e.g. `4n / 3n === 1n`.","format":"org.matrix.custom.html","formatted_body":"I can say with extremely high confidence that redefining bigint is not feasible. It is a primitive type with existing well-defined integer-only semantics, e.g. <code>4n / 3n === 1n</code>.","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yes7IcUv-Iqrxu5iBlitfSi6xO7qmQMUq2rzklDBV2s"}},"msgtype":"m.text"},"ts":1748513128936,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$765RFzFD-P86D_Q-_UsewH05fS3Wxh0O9EMfbD6OLmU"},
{"content":{"body":"No, I would say that we're converging on this being a feasible alternative, not necessarily converging on the preferred approach","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$StUp3d6XOPwXJqO0Ubko3KfQIWcOlEsMftXrHexMNMg"}},"msgtype":"m.text"},"ts":1748513142699,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$zJDj4d4FVyTgrGb9Y1e2ieGMLLDehHjRPf8YpeMRzTo"},
{"content":{"body":"Just add a new operator and define `/` as integer division. I see this as a papercut to be weighed with other pros and cons but not a fatal flaw","format":"org.matrix.custom.html","formatted_body":"Just add a new operator and define <code>/</code> as integer division. I see this as a papercut to be weighed with other pros and cons but not a fatal flaw","m.mentions":{"user_ids":["@gibson042:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$765RFzFD-P86D_Q-_UsewH05fS3Wxh0O9EMfbD6OLmU"}},"msgtype":"m.text"},"ts":1748513242688,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$5vkJKrsPEuBYRIkey0zR2mDk4ty3yuiOpy22sCXiU9o"},
{"content":{"body":"for storage, it might be a bit odd to have bigints be either an integer or a decimal","m.mentions":{},"msgtype":"m.text"},"ts":1748513370704,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$WbDF_R2IQyCJQlTFVwuuy9Yf3GPYY_GUDM2BzomMGp4"},
{"content":{"body":"even if we could smooth out the ergonomics and surface area","m.mentions":{},"msgtype":"m.text"},"ts":1748513390326,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$GLPKsytkCcKCHRridmurzsMBI86B5qAfWk8MbCuk3uY"},
{"content":{"body":"bigints already require a heap, so I don't think it's much cost","m.mentions":{},"msgtype":"m.text"},"ts":1748513411839,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$5b3CHTOX7-_elTOh9kmG7f0Ekgrt5u5tr494OMRC4eA"},
{"content":{"body":"In other words, they are _already_ not particularly efficient in their storage. We're making a slightly-inefficient-and-not-widely-used type into a slightly-more-inefficient-but-more-widely-used type","format":"org.matrix.custom.html","formatted_body":"In other words, they are <em>already</em> not particularly efficient in their storage. We're making a slightly-inefficient-and-not-widely-used type into a slightly-more-inefficient-but-more-widely-used type","m.mentions":{},"msgtype":"m.text"},"ts":1748513449515,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$J-V-UA3hncuB1usT_f5V2wO_AdEwjziL5DibQ0TNeiU"},
{"content":{"body":"oh, \"just\" add a new operator? And it's not only that anyway, there's also existing ecosystem use of bigint for alignment with interoperable data models such as Syrup and CBOR, in which arbitrarily-sized integers constitute a distinct type from arbitrary decimal and/or binary fractions","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5vkJKrsPEuBYRIkey0zR2mDk4ty3yuiOpy22sCXiU9o"}},"msgtype":"m.text"},"ts":1748513737770,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$F8ML8GDc-jX79i-YMb1UI9zyU_tOtS6EuTT0IPT0JAw"},
{"content":{"body":"Yes, the data model concerns are something worth discussing, the nature of the issues involved there","m.mentions":{},"msgtype":"m.text"},"ts":1748513845138,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$tpioKnDV_f-X6lbKoFo05gCw-IFS3dGC0MWmjI9SVGA"},
{"content":{"body":"to be clear: not only do I have high confidence that redefining bigint is not feasible, but furthermore I am personally inclined to oppose any such attempt","m.mentions":{},"msgtype":"m.text"},"ts":1748513871555,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$e_khaa3TM6q6wB5t0vVrtfDB5zOpWl-hoAD5sBZE1X0"},
{"content":{"body":"Jesse (ðŸ‡ªðŸ‡¸): Should we steer the conversation to one of the questions we need answers from MM","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jesse:igalia.com\">Jesse (ðŸ‡ªðŸ‡¸)</a>: Should we steer the conversation to one of the questions we need answers from MM","m.mentions":{"user_ids":["@jesse:igalia.com"]},"msgtype":"m.text"},"ts":1748519015173,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$K1zNGvwUO3xu1jXwlh1mboqAsv4-iOBi0ApyN6aH0rs"},
{"content":{"body":"Better use of time than NaN","m.mentions":{},"msgtype":"m.text"},"ts":1748519027085,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$dVTr25xtNDMmGWhx7O2AZt6uYHZVnTSxUBNMk5c1LNI"},
{"content":{"body":"I don't really understand the relevance of the rounding discussions, given that AFAIK the only place where rounding might happen with Amount is when going from a high-precision numeric string to Decimal (if that's what's used as its internal representation). Any Amount-internal fraction/significant digit rounding will presumably happen with respect to the value's internal representation, so all of it will happen consistently.","m.mentions":{},"msgtype":"m.text"},"ts":1748521119820,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$xxzYHK2LzpA3DhY9DJ01FQ5QyNXV_xbzcRcnqw10lgI"},
{"content":{"body":"yes, I also didn't quite detect the substantive issue that we were trying to get at in the rounding discussion","m.mentions":{},"msgtype":"m.text"},"ts":1748521227318,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$t2g1KduTVlGWDnIhAvKmNlvllYMyBdd_XREASqYkNZw"},
{"content":{"body":"surely, such things would be a stage 2 concern","m.mentions":{},"msgtype":"m.text"},"ts":1748521240180,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$NrDQPMu_mK4TLP_r4LsGc0qu_HHo3aSpHUefrDe7cuo"},
{"content":{"body":"even Intl, with its huge limits, surely has to handle rounding, when given massive digit strings","m.mentions":{},"msgtype":"m.text"},"ts":1748521332490,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$dc5xP9YN7NvEVCCBTBooiB5m4HeF03yCurgqID0bRSQ"},
{"content":{"body":"I do think that unless we use something like a numeric strings as the internal representation, then a constructor needs to be able to define the rounding mode. Would the currently-proposed `.from` static method allow for a second argument setting that?","format":"org.matrix.custom.html","formatted_body":"I do think that unless we use something like a numeric strings as the internal representation, then a constructor needs to be able to define the rounding mode. Would the currently-proposed <code>.from</code> static method allow for a second argument setting that?","m.mentions":{},"msgtype":"m.text"},"ts":1748521362674,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$jWvQ9wDIcHix3tMYG2jn2Yc3NCxSFMbNP9z9Ia1QPEU"},
{"content":{"body":"we could add a 2nd argument","m.mentions":{},"msgtype":"m.text"},"ts":1748521389896,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$mwvMj8Ynu98fsKVgOaoqcHQe3Z9eiW3ag_NWz8oODoU"},
{"content":{"body":"Do any of the prior-art Temporal `.from` methods allow for a second argument?","format":"org.matrix.custom.html","formatted_body":"Do any of the prior-art Temporal <code>.from</code> methods allow for a second argument?","m.mentions":{},"msgtype":"m.text"},"ts":1748521417107,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$Au8tqPSC6K3InKbxgE-zhD3u1S0fpJm0DzZ1WQNbKGo"},
{"content":{"body":"IIRC those are all single-argument methods","m.mentions":{},"msgtype":"m.text"},"ts":1748521466030,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$NCxfM4qT0VRb6ous6JyYhb-0vXCKP7cS17qwMhQYUAE"},
{"content":{"body":"this reminds me of the discussion of whether we should also have a constructor, not just `.from`","format":"org.matrix.custom.html","formatted_body":"this reminds me of the discussion of whether we should also have a constructor, not just <code>.from</code>","m.mentions":{},"msgtype":"m.text"},"ts":1748521501192,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$fKfuOtBnKFKrZf15V-kufwqPX7lfI3gVFE2zBoliDK8"},
{"content":{"body":"the constructor would be like Temporal's, where every argument is needed","m.mentions":{},"msgtype":"m.text"},"ts":1748521524626,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$LK8pD9AJxO0fdeqBQ9UdOURCrkZ-XHA1wgeZ6YfpLwo"},
{"content":{"body":"to totally specify everything, without fallbacks","m.mentions":{},"msgtype":"m.text"},"ts":1748521537430,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$IBmYP-YVZthZu82qnugTdod3Aq5_8Fhv4hIEa-xW3O8"},
{"content":{"body":"I would think that the Intl.NumberFormat model of value+options bag matches much better, esp. considering future extension for unit/currency support.","m.mentions":{},"msgtype":"m.text"},"ts":1748523039672,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$i2XKUnfmdQRTOuxjGdp91TODeCEFN9aeRihkJbw68-k"},
{"content":{"body":"procedurally, how should we think about presenting a String-backed Amount? would it continue to be part of the decimal proposal?","m.mentions":{},"msgtype":"m.text"},"ts":1748523274418,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$1N-m6rvn2jW3SMyDyldqghFF42oruh5CnAWBvIAHEYA"}
]