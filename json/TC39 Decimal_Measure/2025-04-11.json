[
{"content":{"body":"* What do people think of this comparison: in Temporal, by themselves, MonthDay or YearMonth might not be super strongly motivated. We would have been able to achieve most of the value proposition of Temporal by just having PlainDate. However, the champions decided amongst themselves that these two types were an important part of the whole overall package of an ergonomic datetime API. The plenary trusted our judgement, and now we have the types. In a similar way, Decimal.Amount should be a type that we position as motivated as a piece of the ergonomic numerics type system, and it is just one piece of the proposal that we put in front of plenary.\n\nI don't think it is right to position this as a question we ask plenary: \"should we include Decimal.Amount?\" That's just an opportunity for inconclusive debate around what it means to be motivated and what is the bar for being motivated and what the alternatives could be. In Temporal, we didn't ask \"should we include Temporal.PlainYearMonth?\" We just included it as part of our package. Delegates who were interested left feedback on GitHub. This is what we can and should do with Decimal.Amount.","m.mentions":{},"m.new_content":{"body":"What do people think of this comparison: in Temporal, by themselves, MonthDay or YearMonth might not be super strongly motivated. We would have been able to achieve most of the value proposition of Temporal by just having PlainDate. However, the champions decided amongst themselves that these two types were an important part of the whole overall package of an ergonomic datetime API. The plenary trusted our judgement, and now we have the types. In a similar way, Decimal.Amount should be a type that we position as motivated as a piece of the ergonomic numerics type system, and it is just one piece of the proposal that we put in front of plenary.\n\nI don't think it is right to position this as a question we ask plenary: \"should we include Decimal.Amount?\" That's just an opportunity for inconclusive debate around what it means to be motivated and what is the bar for being motivated and what the alternatives could be. In Temporal, we didn't ask \"should we include Temporal.PlainYearMonth?\" We just included it as part of our package. Delegates who were interested left feedback on GitHub. This is what we can and should do with Decimal.Amount.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$miYENBzw_N5mvCfcRsL3VL6qOgmbtflhsYxak2TDmg4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744329860500,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$VvDK9Gcr0bE0NhE-ZK7SxVoDkbj_dGT7B6O_TLR4lRM"},
{"content":{"body":"* What do people think of this comparison: in Temporal, by themselves, MonthDay or YearMonth might not be super strongly motivated. We would have been able to achieve most of the value proposition of Temporal by just having PlainDate. However, the champions decided amongst themselves that these two types were an important part of the whole overall package of an ergonomic datetime API. The plenary trusted our judgement, and now we have the types. In a similar way, Decimal.Amount should be a type that we position as motivated as a piece of the ergonomic numerics type system, and it is just one piece of the proposal that we put in front of plenary.\n\nI don't think it is right to position this as a question we ask plenary: \"should we include Decimal.Amount?\" That's just an opportunity for inconclusive debate around what it means to be motivated and what is the bar for being motivated and what the alternatives could be. In Temporal, I don't recall us asking \"should we include Temporal.YearMonth?\" We just included it as part of our package. Delegates who were interested left feedback on GitHub. This is what we can and should do with Decimal.Amount.","m.mentions":{},"m.new_content":{"body":"What do people think of this comparison: in Temporal, by themselves, MonthDay or YearMonth might not be super strongly motivated. We would have been able to achieve most of the value proposition of Temporal by just having PlainDate. However, the champions decided amongst themselves that these two types were an important part of the whole overall package of an ergonomic datetime API. The plenary trusted our judgement, and now we have the types. In a similar way, Decimal.Amount should be a type that we position as motivated as a piece of the ergonomic numerics type system, and it is just one piece of the proposal that we put in front of plenary.\n\nI don't think it is right to position this as a question we ask plenary: \"should we include Decimal.Amount?\" That's just an opportunity for inconclusive debate around what it means to be motivated and what is the bar for being motivated and what the alternatives could be. In Temporal, I don't recall us asking \"should we include Temporal.YearMonth?\" We just included it as part of our package. Delegates who were interested left feedback on GitHub. This is what we can and should do with Decimal.Amount.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$miYENBzw_N5mvCfcRsL3VL6qOgmbtflhsYxak2TDmg4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744329918065,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$Cv24Al6Iwu5asmxXkddyK08fToo37YVzZSoij_RPMaY"}
]