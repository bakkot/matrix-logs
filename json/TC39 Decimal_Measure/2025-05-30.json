[
{"content":{"body":"agreed, though I think in our case we ought to have that guarantee because we track precision","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$p4BFJp2U4CM1MeDRcGaXR5qjyuBAwjWA4eqv9Hd6ziE"}},"msgtype":"m.text"},"ts":1748592384155,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$Ew-o3dAsK80I3A4a6OBNnIFWsHQjb5PoYUi_UhI-Cxk"},
{"content":{"body":"That works fine for number+precision, but what happens when we include units and currencies in the Amount? `<42, EUR>` and `<42, USD>` should not compare as equal, but if their `toString()` values are different to ensure that, how can a user easily get at the `'42'` string value? For a toy example like this that can be available via e.g. `.toDecimal().toString()`, but that breaks for values beyond 34 digits.","format":"org.matrix.custom.html","formatted_body":"That works fine for number+precision, but what happens when we include units and currencies in the Amount? <code>&lt;42, EUR&gt;</code> and <code>&lt;42, USD&gt;</code> should not compare as equal, but if their <code>toString()</code> values are different to ensure that, how can a user easily get at the <code>'42'</code> string value? For a toy example like this that can be available via e.g. <code>.toDecimal().toString()</code>, but that breaks for values beyond 34 digits.","m.mentions":{},"msgtype":"m.text"},"ts":1748592884859,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$CcVexP2tC-kbAm6jR_iPhlf7vi39Iz-X_6hwYf4kiQk"},
{"content":{"body":"the latter part seems expected tho","m.mentions":{},"msgtype":"m.text"},"ts":1748592917957,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Tp74XeazMGXkM_3NEY0RckUvGXnnnsifs7ptdYvUbZw"},
{"content":{"body":"Which \"latter part\"?","m.mentions":{},"msgtype":"m.text"},"ts":1748592932773,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$0O_O91QEaJjvWbbD3jD5LoXvDslHFWKMjoFElOSCI4U"},
{"content":{"body":"if you can't make a numeric and then get the string you want, then it seems like you just can't get that string?","m.mentions":{},"msgtype":"m.text"},"ts":1748592938641,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tSqxGAoxWSEbb3b2Qy57ZB34cvu-yKYzzpEStrYqEiQ"},
{"content":{"body":"phrased another way, if decimal can't stringify properly after 34 digits that's a problem to fix in decimal, not amount","m.mentions":{},"msgtype":"m.text"},"ts":1748592958082,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZvCKJ0MmrPDZrA-IXD5toIM41dkHN3Qwch_iB40kOSw"},
{"content":{"body":"For context, I'm thinking here of a non-Decimal Amount, i.e. one that can support numerical string values beyond Decimal.","m.mentions":{},"msgtype":"m.text"},"ts":1748593003000,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$90wswtiKcYc-uyq0M6YeUadzjs58WjUVlxdIKJyKKbQ"},
{"content":{"body":"ah","m.mentions":{},"msgtype":"m.text"},"ts":1748593031858,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EsqCJ8B2wy37vFzla78-lAeA9xtmdBA51zTLkdNuGU8"},
{"content":{"body":"As in, values in the numeric string range supported by Intl.NumberFormat.","m.mentions":{},"msgtype":"m.text"},"ts":1748593042807,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$5f5FVg18TnZeKdlSgGv63fMwtQyWImCf6EtPrk4X6lo"},
{"content":{"body":"(Anything up the Math.MAX_VALUE, with up to 100 fraction digits)","m.mentions":{},"msgtype":"m.text"},"ts":1748593061548,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$B-f0SjbX5BGQX5hjx_p2I5qOUg2YhOXMBnJ_v_sQfog"},
{"content":{"body":"* (Anything up to the Math.MAX\\_VALUE, with up to 100 fraction digits)","format":"org.matrix.custom.html","formatted_body":"* (Anything up to the Math.MAX_VALUE, with up to 100 fraction digits)","m.mentions":{},"m.new_content":{"body":"(Anything up to the Math.MAX\\_VALUE, with up to 100 fraction digits)","format":"org.matrix.custom.html","formatted_body":"(Anything up to the Math.MAX_VALUE, with up to 100 fraction digits)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$B-f0SjbX5BGQX5hjx_p2I5qOUg2YhOXMBnJ_v_sQfog","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748593069257,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$xgFZGBJR6F5m_MX9n463rfHsbyLICHjsfMClmfzywsc"},
{"content":{"body":"ah","m.mentions":{},"msgtype":"m.text"},"ts":1748593090324,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1vOA52JgR3DBYFp50aOtk9Qiq8dILM3laLqEcGk9nsY"},
{"content":{"body":"`.toString` can have an options bag similar to Temporal `.toString` functions","format":"org.matrix.custom.html","formatted_body":"<code>.toString</code> can have an options bag similar to Temporal <code>.toString</code> functions","m.mentions":{},"msgtype":"m.text"},"ts":1748593169581,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$HYHplsia7XfF4hCVHKNyOdFCHIOH2g7ndNLJ8WsxVns"},
{"content":{"body":"`.withUnit(null).toString()` would work, too. But not `.toDecimal().toString()` as it loses precision.","format":"org.matrix.custom.html","formatted_body":"<code>.withUnit(null).toString()</code> would work, too. But not <code>.toDecimal().toString()</code> as it loses precision.","m.mentions":{},"msgtype":"m.text"},"ts":1748593235646,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$4KjyDMZkdi4n_SFE25Mb4-XeuOHnx6O3u_FbFraOoMc"},
{"content":{"body":"I had not noticed the Temporal toString options bags, that would certainly work for me.","m.mentions":{},"msgtype":"m.text"},"ts":1748593296559,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$uK6DtVJVSE_ULBh1EpPtHOvoSDuZehPxaQBvkd-fW4Y"},
{"content":{"body":"do we want to expose any limits coming from Decimal128 Ã  la Math.MAX_VALUE?","m.mentions":{},"msgtype":"m.text"},"ts":1748593399168,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$0jx2TmaZvZsuj71oOxlm7jjkNb7u5ohEWEvOjWimFWs"},
{"content":{"body":"I think not, because that would unnecessarily limit support of all bigint values.","m.mentions":{},"msgtype":"m.text"},"ts":1748593675944,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$-XN-kf6ew1GluWMHApOAMU2RLpGpTFQK6jxyPBzNaQ8"},
{"content":{"body":"* (Anything up to Number.MAX\\_VALUE, with up to 100 fraction digits)","format":"org.matrix.custom.html","formatted_body":"* (Anything up to Number.MAX_VALUE, with up to 100 fraction digits)","m.mentions":{},"m.new_content":{"body":"(Anything up to Number.MAX\\_VALUE, with up to 100 fraction digits)","format":"org.matrix.custom.html","formatted_body":"(Anything up to Number.MAX_VALUE, with up to 100 fraction digits)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$B-f0SjbX5BGQX5hjx_p2I5qOUg2YhOXMBnJ_v_sQfog","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748593705626,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$5JsQ-WXeqtCiyrpmVUNYP-9Fv1mrwMP7UjG-O5lO9Ew"},
{"content":{"body":"(corrected my comment above to refer to Number.MAX_VALUE, which is what I meant)","m.mentions":{},"msgtype":"m.text"},"ts":1748593728150,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$fyoGETYmLpFNG4dlCZyfHOrG184ejGo_g9kSocLxAcs"},
{"content":{"body":"maybe this is a question for the decimal proposal in the narrow sense, not related to amount/measure","m.mentions":{},"msgtype":"m.text"},"ts":1748593847623,"senderName":"Jesse (ðŸ‡ªðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$thXcoOuyPUFu1WP0Hbp--IYvYqGzPk4_iR5mHhwCleY"}
]