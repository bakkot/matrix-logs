[
{"content":{"body":"Surma  I opened https://github.com/tc39/proposal-js-module-blocks/pull/65 to define a spec text we can iterate on to clearly define caching semantics. That PR does not aim at choosing a \"definitive caching strategy\" (I don't like how it behaves with `import(aModuleBlockFromAnotherRealm)`), but they are the simplest consistent semantics that I could write.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@surma:matrix.org\">Surma</a>  I opened https://github.com/tc39/proposal-js-module-blocks/pull/65 to define a spec text we can iterate on to clearly define caching semantics. That PR does not aim at choosing a &quot;definitive caching strategy&quot; (I don't like how it behaves with <code>import(aModuleBlockFromAnotherRealm)</code>), but they are the simplest consistent semantics that I could write.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Surma  I opened https://github.com/tc39/proposal-js-module-blocks/pull/65 to define a spec text we can iterate on to clearly define caching semantics. That PR does not aim at choosing a \"definitive caching strategy\" (I don't like how it behaves with `import(aModuleBlockFromAnotherRealm)`), but they are the simplest consistent semantics that I could write.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@surma:matrix.org\">Surma</a>  I opened https://github.com/tc39/proposal-js-module-blocks/pull/65 to define a spec text we can iterate on to clearly define caching semantics. That PR does not aim at choosing a &quot;definitive caching strategy&quot; (I don't like how it behaves with <code>import(aModuleBlockFromAnotherRealm)</code>), but they are the simplest consistent semantics that I could write.","mimetype":"text/html"}]},"ts":1656335274940,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7uHNQ4vY_pCtcO8pZbk6nvID-HL1zHdEMS4KCi5ml10"}
]