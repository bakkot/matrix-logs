[
{"content":{"body":"I sketched guybedford (Guy Bedford) and Luca Casonato ’s ModuleInstance in the context of the Loader née Compartments proposal https://github.com/tc39/proposal-compartments/pull/51","format":"org.matrix.custom.html","formatted_body":"I sketched <a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a> and <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> ’s ModuleInstance in the context of the Loader née Compartments proposal https://github.com/tc39/proposal-compartments/pull/51","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I sketched guybedford (Guy Bedford) and Luca Casonato ’s ModuleInstance in the context of the Loader née Compartments proposal https://github.com/tc39/proposal-compartments/pull/51","mimetype":"text/plain"},{"body":"I sketched <a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a> and <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> ’s ModuleInstance in the context of the Loader née Compartments proposal https://github.com/tc39/proposal-compartments/pull/51","mimetype":"text/html"}]},"ts":1654735264562,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SmY3zbdhiqu3d5RBJgNWDf503XaQ44xgYbDqOjeny2E"},
{"content":{"body":"In short, it doesn’t obviate the need for Loader, because dynamic import has to fall through.","msgtype":"m.text","org.matrix.msc1767.text":"In short, it doesn’t obviate the need for Loader, because dynamic import has to fall through."},"ts":1654735326018,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$cAmKRlq0fN9rtqJC8mBa4sFxRNPHVduI7S7aJyyvu14"},
{"content":{"body":"It may be interesting to include a `ModuleInstance` constructor regardless, but it doesn’t reduce the scope of the Loader proposal.","format":"org.matrix.custom.html","formatted_body":"It may be interesting to include a <code>ModuleInstance</code> constructor regardless, but it doesn’t reduce the scope of the Loader proposal.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It may be interesting to include a `ModuleInstance` constructor regardless, but it doesn’t reduce the scope of the Loader proposal.","mimetype":"text/plain"},{"body":"It may be interesting to include a <code>ModuleInstance</code> constructor regardless, but it doesn’t reduce the scope of the Loader proposal.","mimetype":"text/html"}]},"ts":1654735375065,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$E6UKpeMoOfxsa-XpIdo3lR0WC7W8cSKA5Z0Nryn-wMo"},
{"content":{"body":"On further reflection (updated above PR, it’s possible to implement Loader in user code, with all of the “static import” part of Import Reflection, ModuleInstance, and a Global constructor for the hardened JavaScript case. The user-code Loader wouldn’t be able to do import reflection on your behalf, so you’d have to learn harder on that.","msgtype":"m.text","org.matrix.msc1767.text":"On further reflection (updated above PR, it’s possible to implement Loader in user code, with all of the “static import” part of Import Reflection, ModuleInstance, and a Global constructor for the hardened JavaScript case. The user-code Loader wouldn’t be able to do import reflection on your behalf, so you’d have to learn harder on that."},"ts":1654737812181,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$UNATaHyBm0L26MZK2zjhfRttoxlLDUT1I6i8-bco-v8"},
{"content":{"body":"The user code loader would have to thread a dynamic import (or not).","msgtype":"m.text","org.matrix.msc1767.text":"The user code loader would have to thread a dynamic import (or not)."},"ts":1654737890500,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wd_M_uYTVhUcDf7pFD7ak6E_xrGD_fYq8qcAK6prw1U"},
{"content":{"body":"guybedford: When you say “Synthetic”, as in static module record, is that equivalent to how I’ve been using “third-party” in the Loader (née Compartments) proposal? If so, I like it and would be glad to propose a change.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a>: When you say “Synthetic”, as in static module record, is that equivalent to how I’ve been using “third-party” in the Loader (née Compartments) proposal? If so, I like it and would be glad to propose a change.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"guybedford: When you say “Synthetic”, as in static module record, is that equivalent to how I’ve been using “third-party” in the Loader (née Compartments) proposal? If so, I like it and would be glad to propose a change.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a>: When you say “Synthetic”, as in static module record, is that equivalent to how I’ve been using “third-party” in the Loader (née Compartments) proposal? If so, I like it and would be glad to propose a change.","mimetype":"text/html"}]},"ts":1654746602934,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bdIvnDYwLrCAwqGnfMxLaGCNiSE9APrK5bpmjqZzR1w"}
]