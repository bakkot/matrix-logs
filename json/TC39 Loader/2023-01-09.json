[
{"content":{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","format":"org.matrix.custom.html","formatted_body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","mimetype":"text/plain"},{"body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","mimetype":"text/html"}]},"ts":1673264589072,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$xdm65ojtYuR8323guvrBmXpmRCJzo-R0kBzHOJRSo_U"},
{"content":{"body":" * My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","format":"org.matrix.custom.html","formatted_body":" * My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","m.new_content":{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","format":"org.matrix.custom.html","formatted_body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","mimetype":"text/plain"},{"body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xdm65ojtYuR8323guvrBmXpmRCJzo-R0kBzHOJRSo_U","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","mimetype":"text/plain"},{"body":" * My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","mimetype":"text/html"}]},"ts":1673264598511,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$8tbx1PubetAQrg6a_qINR2-Td-7_EAsxgSYFwFmQlj4"},
{"content":{"body":" * My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","format":"org.matrix.custom.html","formatted_body":" * My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","m.new_content":{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","format":"org.matrix.custom.html","formatted_body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","mimetype":"text/plain"},{"body":"My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xdm65ojtYuR8323guvrBmXpmRCJzo-R0kBzHOJRSo_U","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * My major open question in response to bakkot's points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a `ModuleSource` constructor was in fact **not** a new path to eval, because the \"evalness\" of the ModuleSource is done through the existing dynamic import. The constructor itself **does not eval** - eval only happens at import - which is already possible right now.","mimetype":"text/plain"},{"body":" * My major open question in response to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s points at plenary is how this qualifies as a new path to eval - we discussed this at the last loader meeting and came to the conclusion that a <code>ModuleSource</code> constructor was in fact <strong>not</strong> a new path to eval, because the &quot;evalness&quot; of the ModuleSource is done through the existing dynamic import. The constructor itself <strong>does not eval</strong> - eval only happens at import - which is already possible right now.","mimetype":"text/html"}]},"ts":1673264617702,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$W1qTEpsfrSx8HIKF5GmdkVhrESLlevW22PNml3B5zw0"},
{"content":{"body":"I would still like to invite bakkot to a loader meeting so we can discuss this in detail - I am likely missing something, or I am not understanding your concern correctly.","format":"org.matrix.custom.html","formatted_body":"I would still like to invite <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> to a loader meeting so we can discuss this in detail - I am likely missing something, or I am not understanding your concern correctly.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I would still like to invite bakkot to a loader meeting so we can discuss this in detail - I am likely missing something, or I am not understanding your concern correctly.","mimetype":"text/plain"},{"body":"I would still like to invite <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> to a loader meeting so we can discuss this in detail - I am likely missing something, or I am not understanding your concern correctly.","mimetype":"text/html"}]},"ts":1673264665498,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Qfu-32-DAaetpXFRCchqOwpqoGp55hY0btbDAdxmoh8"}
]