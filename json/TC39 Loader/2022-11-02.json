[
{"content":{"body":"nicolo-ribaudo: I got a question from guybedford and want to confirm we’re on the same page: reflective import would advance the module to loaded but not to linked and its dependencies won’t be loaded.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I got a question from <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> and want to confirm we’re on the same page: reflective import would advance the module to loaded but not to linked and its dependencies won’t be loaded.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"nicolo-ribaudo: I got a question from guybedford and want to confirm we’re on the same page: reflective import would advance the module to loaded but not to linked and its dependencies won’t be loaded.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I got a question from <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> and want to confirm we’re on the same page: reflective import would advance the module to loaded but not to linked and its dependencies won’t be loaded.","mimetype":"text/html"}]},"ts":1667427749025,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$g_4-6hvYuiD4nkUOSTbc5up87SZTXtz9eAMMA8Hs8GU"},
{"content":{"body":"I can easily imagine `import(x, {reflect: true, state: 'linked'})` or some such would load transitive dependencies without initializing or executing.","format":"org.matrix.custom.html","formatted_body":"I can easily imagine <code>import(x, {reflect: true, state: 'linked'})</code> or some such would load transitive dependencies without initializing or executing.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can easily imagine `import(x, {reflect: true, state: 'linked'})` or some such would load transitive dependencies without initializing or executing.","mimetype":"text/plain"},{"body":"I can easily imagine <code>import(x, {reflect: true, state: 'linked'})</code> or some such would load transitive dependencies without initializing or executing.","mimetype":"text/html"}]},"ts":1667427804917,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gmosUthoSEIfEI1pAKa5dKSMoIjRSxDsxSEA-vZs8o8"},
{"content":{"body":"Right, it would not load it's dependencies.\nHowever, I hope it will not just result in a ModuleSource but in something that contains all the info necessary to later load&link it's dependencies ","format":"org.matrix.custom.html","formatted_body":"Right, it would not load it's dependencies.<br />However, I hope it will not just result in a ModuleSource but in something that contains all the info necessary to later load&amp;link it's dependencies","msgtype":"m.text"},"ts":1667428023806,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QYibK2nSLNZDz0EFvkZ-8k2fWDPrT90FkiFOWKmNABk"},
{"content":{"body":"\"would advance the module to loaded\" -> Informally yes. Formally, it doesn't advance the module's state because the first state change happens when loading all its dependencies. It just makes us go from \"I have nothing\" to \"I have a Module/ModuleSource\"","format":"org.matrix.custom.html","formatted_body":"&quot;would advance the module to loaded&quot; -&gt; Informally yes. Formally, it doesn't advance the module's state because the first state change happens when loading all its dependencies. It just makes us go from &quot;I have nothing&quot; to &quot;I have a Module/ModuleSource&quot;","msgtype":"m.text"},"ts":1667428211313,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$3odlWs8zV1TtDBQVjTGeABnfC41futlmFqxxcvEB83E"},
{"content":{"body":"I assume it would not be an observable optimization if the Module Record was born with a null pointer to the structs needed to advance past the loaded state.","msgtype":"m.text","org.matrix.msc1767.text":"I assume it would not be an observable optimization if the Module Record was born with a null pointer to the structs needed to advance past the loaded state."},"ts":1667428256550,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$WpBBjw-QNkaFZZ5w9H8gataaGXx9fnGp2GN_K-YdMK8"},
{"content":{"body":"We are in agreement about having a `Module` object and not just a `ModuleSource` but guybedford would like us to at least contemplate the alternative given that deferred `await import(reflectedModule)` doesn’t go as far as yulia’s proposing for deferred execution. I don’t think our current agreement precludes going farther and I think it’s compelling for code splitting, but it wouldn’t initialize a dependency on the stack of the first access of one of its exports.","format":"org.matrix.custom.html","formatted_body":"We are in agreement about having a <code>Module</code> object and not just a <code>ModuleSource</code> but <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> would like us to at least contemplate the alternative given that deferred <code>await import(reflectedModule)</code> doesn’t go as far as <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>’s proposing for deferred execution. I don’t think our current agreement precludes going farther and I think it’s compelling for code splitting, but it wouldn’t initialize a dependency on the stack of the first access of one of its exports.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We are in agreement about having a `Module` object and not just a `ModuleSource` but guybedford would like us to at least contemplate the alternative given that deferred `await import(reflectedModule)` doesn’t go as far as yulia’s proposing for deferred execution. I don’t think our current agreement precludes going farther and I think it’s compelling for code splitting, but it wouldn’t initialize a dependency on the stack of the first access of one of its exports.","mimetype":"text/plain"},{"body":"We are in agreement about having a <code>Module</code> object and not just a <code>ModuleSource</code> but <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> would like us to at least contemplate the alternative given that deferred <code>await import(reflectedModule)</code> doesn’t go as far as <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>’s proposing for deferred execution. I don’t think our current agreement precludes going farther and I think it’s compelling for code splitting, but it wouldn’t initialize a dependency on the stack of the first access of one of its exports.","mimetype":"text/html"}]},"ts":1667428481394,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IvWOaZxDhXVqHYL9YmiZ4HMFpD--tdUg5_sGuaP_ZZ0"}
]