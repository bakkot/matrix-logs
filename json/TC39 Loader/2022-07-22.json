[
{"content":{"body":"nicolo-ribaudo: Caridy is working on First-class Modules spec text. It might be good for you to connect.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Caridy is working on First-class Modules spec text. It might be good for you to connect.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"nicolo-ribaudo: Caridy is working on First-class Modules spec text. It might be good for you to connect.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Caridy is working on First-class Modules spec text. It might be good for you to connect.","mimetype":"text/html"}]},"ts":1658519149712,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LluC8fhPVyXxFx_Dzey8SuoVh5qBKmsKBVc6mqvaFjo"},
{"content":{"body":"One thing we can’t do Right Now™ is have `importHook` and `importMeta` fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","format":"org.matrix.custom.html","formatted_body":"One thing we can’t do Right Now™ is have <code>importHook</code> and <code>importMeta</code> fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"One thing we can’t do Right Now™ is have `importHook` and `importMeta` fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","mimetype":"text/plain"},{"body":"One thing we can’t do Right Now™ is have <code>importHook</code> and <code>importMeta</code> fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","mimetype":"text/html"}]},"ts":1658519216835,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6UqAxt2LhEf2-FGicSwA2iGNWYLyB_hfH2-2dRN4o-U"},
{"content":{"body":"And if we had them, they’d have to be host-defined.","msgtype":"m.text","org.matrix.msc1767.text":"And if we had them, they’d have to be host-defined."},"ts":1658519241011,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IIgMx9H0o5JRiab5TZwWyPbvEW6ZbM0kdjguWRmWPGo"},
{"content":{"body":"Maybe we have them but they have other names or forms that obscure them?","msgtype":"m.text","org.matrix.msc1767.text":"Maybe we have them but they have other names or forms that obscure them?"},"ts":1658519265627,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kL1ndDhXBlR6C1P0BD5k6KscZUbGCNPRy-9Atedd94g"},
{"content":{"body":"Kris Kowal: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the `importHook` could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize `HostResolveImportedModule` by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the <code>importHook</code> could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize <code>HostResolveImportedModule</code> by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Kris Kowal: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the `importHook` could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize `HostResolveImportedModule` by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the <code>importHook</code> could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize <code>HostResolveImportedModule</code> by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","mimetype":"text/html"}]},"ts":1658519507204,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$dWYByWYf_HmfIb73VgDV0ZmOVswFqTpBD-46nEhKh3M"},
{"content":{"body":"I think that makes sense.","msgtype":"m.text","org.matrix.msc1767.text":"I think that makes sense."},"ts":1658519546117,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8S3vKsX4SJ8j1uEAdKV3JsXR-OndbFZacAa6Zp1fnXo"},
{"content":{"body":"Something very much like that in any case.","msgtype":"m.text","org.matrix.msc1767.text":"Something very much like that in any case."},"ts":1658519564992,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YDO67AAE_ORfvh7fYpnL81nmtyrkjnCMxfOaeF6SpH0"},
{"content":{"body":"Do you plan to put time to these discussions in SES meetings? Or can we resume in our modules meetings?","msgtype":"m.text","org.matrix.msc1767.text":"Do you plan to put time to these discussions in SES meetings? Or can we resume in our modules meetings?"},"ts":1658519599011,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$oIsSQuAtrS6al7HClFVzjZjXh3tqNL77mQwGvuepvVI"},
{"content":{"body":"I can also reach out to caridy as well / or just copy in on anything for feedback too","msgtype":"m.text","org.matrix.msc1767.text":"I can also reach out to caridy as well / or just copy in on anything for feedback too"},"ts":1658519620837,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$E6BWtLuMG65ctOKC-th3YMQLUmrie_Y0E3sooqectnM"},
{"content":{"body":"I would like to get crackin’ on nitty gritty as soon as possible and SES meetings will help with that. The contract with Module Harmony calls remains the same, though. When we get together with the stakeholders, have to present from where the group left off.","msgtype":"m.text","org.matrix.msc1767.text":"I would like to get crackin’ on nitty gritty as soon as possible and SES meetings will help with that. The contract with Module Harmony calls remains the same, though. When we get together with the stakeholders, have to present from where the group left off."},"ts":1658519679554,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_gBj2AS6zF6j0jwn1zsindHoryY17aFDmKpMAEcgsmc"},
{"content":{"body":"But just putting heads together with Caridy, Nicolo, you, and me to puzzle out what’s possible also makes sense to me.","msgtype":"m.text","org.matrix.msc1767.text":"But just putting heads together with Caridy, Nicolo, you, and me to puzzle out what’s possible also makes sense to me."},"ts":1658519716687,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IGJgAfoCIMa7OcMlgampgsDv_3Ta8hoUUAhZSaCXzdk"},
{"content":{"body":"yeah I'd be happy to put some time into the direct spec questions","msgtype":"m.text","org.matrix.msc1767.text":"yeah I'd be happy to put some time into the direct spec questions"},"ts":1658519752868,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$11Tw-njdVtBk2fa1RXWL9DEFLSMwp9LDniDtdfZby00"},
{"content":{"body":"I'm still very hopeful we can improve the modules spec as we do this work","msgtype":"m.text","org.matrix.msc1767.text":"I'm still very hopeful we can improve the modules spec as we do this work"},"ts":1658519768030,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$YgoiGAk25JsUkF6ERfvaz0GN5_2HJ5-_L89iXBys3nA"},
{"content":{"body":"and actually make it more capable and more well-defined in the process","msgtype":"m.text","org.matrix.msc1767.text":"and actually make it more capable and more well-defined in the process"},"ts":1658519781997,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$L8jY17dHBlgTSaFiZjNU7L2nkEuXiCdX05Uyyp4GvH4"},
{"content":{"body":"Yeah, on the one hand Caridy wants to have the lightest touch possible so the proposal is provably free of surprises.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, on the one hand Caridy wants to have the lightest touch possible so the proposal is provably free of surprises."},"ts":1658519838645,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$XjvHuhvLVKVRwEZlEj_LYOlfrUUAzkO5kaG3Q4V7XWM"},
{"content":{"body":"But I think setting up for a non-normative refactor should be part of the plan.","msgtype":"m.text","org.matrix.msc1767.text":"But I think setting up for a non-normative refactor should be part of the plan."},"ts":1658519872280,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fGjDAxzfTU6_vgdnWsNZmTaQ9RTnVXL2oys0IOirfuQ"},
{"content":{"body":"If there's room for some refactoring, like working on any old codebase hopefully we can leave it better than we found it :)","msgtype":"m.text","org.matrix.msc1767.text":"If there's room for some refactoring, like working on any old codebase hopefully we can leave it better than we found it :)"},"ts":1658519879720,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$3nyA3YeW7EUbZl9KtrTMQhdbH_xucyNy7mKmK9c6pTA"},
{"content":{"body":"Or preceding with a non-normative refactor would work for me too.","msgtype":"m.text","org.matrix.msc1767.text":"Or preceding with a non-normative refactor would work for me too."},"ts":1658519907482,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$4cn-nVGQ5vKhcBCrJTMik-27rIDXxZJsD2R143zD6Vw"},
{"content":{"body":"Are you familiar with Chesterton’s Fence?","msgtype":"m.text","org.matrix.msc1767.text":"Are you familiar with Chesterton’s Fence?"},"ts":1658519943296,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ae38dbuMU4gYJGy9EZxpEVb0xT2lWG2c6eLbEJsiwJU"},
{"content":{"body":"I always dismiss Chesterton's fence discussions because I don't see their purpose","msgtype":"m.text","org.matrix.msc1767.text":"I always dismiss Chesterton's fence discussions because I don't see their purpose"},"ts":1658520260709,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$1fbEyu9nxxNTkCz-UOuDlC6Ivn5ym61NGJxyNxrvjF8"},
{"content":{"body":"Yeah, so relatedly, I suspect that Cyclic Module Record only exists because Module Source Record doesn’t exist yet.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, so relatedly, I suspect that Cyclic Module Record only exists because Module Source Record doesn’t exist yet."},"ts":1658520469609,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1F1CPf0pOOCiNE3YSrh6dSLm5TGDaoYsqRoS6MWzQ0o"},
{"content":{"body":"But I don’t *know* *know* whether there are any concrete Module Record types that *don’t* include the abstract Cyclic Module Record.","format":"org.matrix.custom.html","formatted_body":"But I don’t <em>know</em> <em>know</em> whether there are any concrete Module Record types that <em>don’t</em> include the abstract Cyclic Module Record.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But I don’t *know* *know* whether there are any concrete Module Record types that *don’t* include the abstract Cyclic Module Record.","mimetype":"text/plain"},{"body":"But I don’t <em>know</em> <em>know</em> whether there are any concrete Module Record types that <em>don’t</em> include the abstract Cyclic Module Record.","mimetype":"text/html"}]},"ts":1658520521030,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oX93dnB7pCeS4kwA1N81DIkvJ--IEAc8kD8aKQpzwoI"},
{"content":{"body":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","msgtype":"m.text","org.matrix.msc1767.text":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"ts":1658520539532,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$H5ZOjkXyh4pRuBm0WfkSBjpXDE2HF9Cew4TRKdVoW5Q"},
{"content":{"body":" * So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","m.new_content":{"body":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","msgtype":"m.text","org.matrix.msc1767.text":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"m.relates_to":{"event_id":"$H5ZOjkXyh4pRuBm0WfkSBjpXDE2HF9Cew4TRKdVoW5Q","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"ts":1658520548016,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Tu9R1T-nQx1aWoxcXMc6jnk2Hd4IPYsGSg-f7pA6pSs"},
{"content":{"body":"That kind of uncertainty is a good reason to refactor it out of existence, _if_ we can.","format":"org.matrix.custom.html","formatted_body":"That kind of uncertainty is a good reason to refactor it out of existence, <em>if</em> we can.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That kind of uncertainty is a good reason to refactor it out of existence, _if_ we can.","mimetype":"text/plain"},{"body":"That kind of uncertainty is a good reason to refactor it out of existence, <em>if</em> we can.","mimetype":"text/html"}]},"ts":1658520594409,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FYu-yIfgiSaufe9IH31MSaHBduPLPUBZb7vd56GqQBM"},
{"content":{"body":"So I think the way we set the stage for that refactor is to create a new concrete Module Record that embeds Cyclic Module Record and refers to a Module Source Record. This would be the last concrete Module Record we would ever need, and in a refactor, we could circle back and replace the Module Record abstract type hierarchy with the single, concrete Module Record and rely on the abstract Module Source Record for extensibility.","msgtype":"m.text","org.matrix.msc1767.text":"So I think the way we set the stage for that refactor is to create a new concrete Module Record that embeds Cyclic Module Record and refers to a Module Source Record. This would be the last concrete Module Record we would ever need, and in a refactor, we could circle back and replace the Module Record abstract type hierarchy with the single, concrete Module Record and rely on the abstract Module Source Record for extensibility."},"ts":1658520781570,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3FwKCFWPSyX_cvFB-KnzljEm-s-lDb2e2L6rn3ej4Vs"},
{"content":{"body":"In that refactor, Cyclic Module Record squashes into Module Record.","msgtype":"m.text","org.matrix.msc1767.text":"In that refactor, Cyclic Module Record squashes into Module Record."},"ts":1658520830303,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$toJ_udccSitXV_bt9_WnNHiRwGDn0P8iY9nJz4BFVjY"},
{"content":{"body":"But, again, weary that might not be possible and is also not necessary to make progress on “Virtual Module Record”.","msgtype":"m.text","org.matrix.msc1767.text":"But, again, weary that might not be possible and is also not necessary to make progress on “Virtual Module Record”."},"ts":1658520862673,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Gx034PO0m2cGb7AYZaHUhFnjdyzHaH_2nAfeRTdbGQQ"},
{"content":{"body":"And very very weary of signaling that the refactor is necessary, given that it might not be possible.","msgtype":"m.text","org.matrix.msc1767.text":"And very very weary of signaling that the refactor is necessary, given that it might not be possible."},"ts":1658520885645,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$rNW5T4LQ7uEHoWYRZw_qGhFFE61zCwHRK4vHjQC49bI"},
{"content":{"body":"guybedford (Guy Bedford):  And I’m sure that’s the least of the refactoring you have in mind. 😂","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a>:  And I’m sure that’s the least of the refactoring you have in mind. 😂","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"guybedford (Guy Bedford):  And I’m sure that’s the least of the refactoring you have in mind. 😂","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a>:  And I’m sure that’s the least of the refactoring you have in mind. 😂","mimetype":"text/html"}]},"ts":1658521464884,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YHHgFBPiX0WCw-6gS235qyPx5ms3WtCfiRk8xenFM2U"},
{"content":{"body":"interesting!","msgtype":"m.text","org.matrix.msc1767.text":"interesting!"},"ts":1658522754387,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$qmKgrUnPkzl7qjFfnz5bBAbOI2Y_7JD5EB8r9g-GvmY"},
{"content":{"body":"I wonder if we could do such a refactoring as a non-normative PR?","msgtype":"m.text","org.matrix.msc1767.text":"I wonder if we could do such a refactoring as a non-normative PR?"},"ts":1658522762476,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$829PjnDohJaTGG3dTcodvpxuGXRVfNGSHEvXGBoVGgU"},
{"content":{"body":"perhaps write our respective specs, then work out a refactoring to write our respective specs against, then PR that first...?","msgtype":"m.text","org.matrix.msc1767.text":"perhaps write our respective specs, then work out a refactoring to write our respective specs against, then PR that first...?"},"ts":1658522786033,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$iybtVcDy_GONUGQLPnuw0Bj3LdVBzfDPCTcctrv2OZE"},
{"content":{"body":"I think any refactoring is by definition non-normative.","msgtype":"m.text","org.matrix.msc1767.text":"I think any refactoring is by definition non-normative."},"ts":1658522884039,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qGFyr3rbfA6edgpBAtQBIXByrJXFP-HJYsw8VyNcN2w"},
{"content":{"body":"yeah I guess its more likely, let's get this spec feedback going on see where it ends up though","msgtype":"m.text","org.matrix.msc1767.text":"yeah I guess its more likely, let's get this spec feedback going on see where it ends up though"},"ts":1658522992600,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$_eFObbuaGbvWLZrdsHPO4z6w_vHglaio2GCXCctjMSo"},
{"content":{"body":"I also think we could generalize CyclicModuleRecord istead of AbstractModuleRecord being separated","msgtype":"m.text","org.matrix.msc1767.text":"I also think we could generalize CyclicModuleRecord istead of AbstractModuleRecord being separated"},"ts":1658523033325,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$tpgv4XnqjcUt5TqcQAjlaqmuq5uby5CcB1IVKvMbsWQ"},
{"content":{"body":"Then having ModuleSourceRecord v ModuleInstanceRecord","msgtype":"m.text","org.matrix.msc1767.text":"Then having ModuleSourceRecord v ModuleInstanceRecord"},"ts":1658523057406,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$vkdjxqGWzg6c2BexoZV78bCxqA93BF-qTIx9LLQ23Xw"},
{"content":{"body":"In theory SyntheticModules could just be a CyclicModuleRecord with no dependencies","msgtype":"m.text","org.matrix.msc1767.text":"In theory SyntheticModules could just be a CyclicModuleRecord with no dependencies"},"ts":1658523086470,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$ByfCP3MUfKsDP14Osc-FnBRKItnjfZoYTmj8Gd-oLJA"},
{"content":{"body":"and that leaves the door open to a form of Synthetic with dependencies anyway","msgtype":"m.text","org.matrix.msc1767.text":"and that leaves the door open to a form of Synthetic with dependencies anyway"},"ts":1658523095358,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5SGOogEz8eFummVuAsckhMdlAGjibDr-OQFzypaj0pQ"},
{"content":{"body":"A thing I could use help explaining is why we should separate source from instance.","msgtype":"m.text","org.matrix.msc1767.text":"A thing I could use help explaining is why we should separate source from instance."},"ts":1658523106555,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lN3O9ALY6m8y3A7oIE0Ooc_R4y6fTgjPYJncBcTpPm8"},
{"content":{"body":"I guess the new constraint is the same source record can now have multiple instances under module blocks","msgtype":"m.text","org.matrix.msc1767.text":"I guess the new constraint is the same source record can now have multiple instances under module blocks"},"ts":1658523129181,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5eyKx1e5I5zX6AHVylCCcboTAK-AM-L8mbsHGOhmLKk"},
{"content":{"body":"that’s certainly true","msgtype":"m.text","org.matrix.msc1767.text":"that’s certainly true"},"ts":1658523148295,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3EKaPj16thXGkHKJbGlNn6ULR4MiTeYwA1_xc32ThJI"},
{"content":{"body":"multiple instantiation is the crux, and multiple motivating cases require multiple instantiation","msgtype":"m.text","org.matrix.msc1767.text":"multiple instantiation is the crux, and multiple motivating cases require multiple instantiation"},"ts":1658523171044,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Yad3aUp6NFlG1nHWj9WaEz1nBCa9jDoSfmiz2pvi0vI"},
{"content":{"body":"there’s also transferability between agents of the same cluster. I think James Browning (@?) would be very interested in that dimension.","msgtype":"m.text","org.matrix.msc1767.text":"there’s also transferability between agents of the same cluster. I think James Browning (@?) would be very interested in that dimension."},"ts":1658523216907,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$avMyb5RAPAtarpV-epeERN1T-KPFyTU2khfQFwnAcxE"},
{"content":{"body":"toll-free transfer between realms too","msgtype":"m.text","org.matrix.msc1767.text":"toll-free transfer between realms too"},"ts":1658523260643,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IycLNmM7AEPbRRCoXWa4fMyzvywL9cNCNGHRT-_l16I"},
{"content":{"body":"i suppose it’s incidental is that it fixes the encapsulation boundary","msgtype":"m.text","org.matrix.msc1767.text":"i suppose it’s incidental is that it fixes the encapsulation boundary"},"ts":1658523308041,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lm2yZD8cQ0B4n7JBtSRgeRxVJ251uZZoFS2wT9iTR2A"},
{"content":{"body":"“encapsulate the thing that varies”","msgtype":"m.text","org.matrix.msc1767.text":"“encapsulate the thing that varies”"},"ts":1658523318344,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LToYQnNGOOpVJxTXwDy2FvlEg31CLiDkd50IPeaNUEw"},
{"content":{"body":"yeah these seem to be the main points I think? - cyclic / abstract unification, instance / source separation, multi agent / realm usage","msgtype":"m.text","org.matrix.msc1767.text":"yeah these seem to be the main points I think? - cyclic / abstract unification, instance / source separation, multi agent / realm usage"},"ts":1658523320955,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$W-W4zIbs46X9wbmXg5WsTtHQfGPpvy9BYSHfasLNkDk"},
{"content":{"body":"source types vary, module lifecycle management does not","msgtype":"m.text","org.matrix.msc1767.text":"source types vary, module lifecycle management does not"},"ts":1658523333111,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$H67vW0OrJtSqB_KE-se8mni17m1qdNwttz6HqYug4WE"},
{"content":{"body":"then cache semantics and host hook modifications I guess","msgtype":"m.text","org.matrix.msc1767.text":"then cache semantics and host hook modifications I guess"},"ts":1658523367422,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$zJAyKt7wiTG2hvK4978Uj7sfMsVvj4e9D48NgtUsWfY"},
{"content":{"body":"yeah I agree that you can just use CyclicModuleRecord for more things","msgtype":"m.text","org.matrix.msc1767.text":"yeah I agree that you can just use CyclicModuleRecord for more things"},"ts":1658523503347,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$y8vRBOjzOq431cOUIJNsHw0giTodUzRm5wSZwAg7G4g"},
{"content":{"body":"it doesn't hurt to have that logic around","msgtype":"m.text","org.matrix.msc1767.text":"it doesn't hurt to have that logic around"},"ts":1658523512042,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ifBmNT0a-C9uAzrdaSL9PmVY-J2HS4oCA49NlzZPmE4"},
{"content":{"body":"(or maybe that's not what you're saying?)","msgtype":"m.text","org.matrix.msc1767.text":"(or maybe that's not what you're saying?)"},"ts":1658523523762,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o81_c2zW21OVdKBXJiCLa_NilkZgIf9CrFpli07jzTk"},
{"content":{"body":"It’s one of the things I’m saying.","msgtype":"m.text","org.matrix.msc1767.text":"It’s one of the things I’m saying."},"ts":1658523533989,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$yoOAVyL9xZk69JjWR5eVAgbIh4PM-rEld6bCh73cvvA"},
{"content":{"body":"Separating module source from instance moves the abstraction boundary to a better place than where it is at the moment","msgtype":"m.text","org.matrix.msc1767.text":"Separating module source from instance moves the abstraction boundary to a better place than where it is at the moment"},"ts":1658523681610,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YW2m3lvRvkj0lZrHKHX2VU2inG8N8E6804irzp4tLHs"},
{"content":{"body":"Some of the concerns of Source Text Module Record belong on the Source side and others on the Instance side.","msgtype":"m.text","org.matrix.msc1767.text":"Some of the concerns of Source Text Module Record belong on the Source side and others on the Instance side."},"ts":1658523733080,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JsFF2uCjMd-31UqoadcRrofGPPcpQ93Or0zMhHbV4y0"},
{"content":{"body":"But all of the concerns of Cyclic Module Record belong on the Instance side.","msgtype":"m.text","org.matrix.msc1767.text":"But all of the concerns of Cyclic Module Record belong on the Instance side."},"ts":1658523750958,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FcXQ17Ti-SSNYXdSwD9zjpeFOmg03gAr0u8ipxwFSlY"},
{"content":{"body":"When the Instance side has all the right concerns, it becomes clear that you only need one concrete Instance type and many derived Source types.","msgtype":"m.text","org.matrix.msc1767.text":"When the Instance side has all the right concerns, it becomes clear that you only need one concrete Instance type and many derived Source types."},"ts":1658523832182,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$U9LCy_LFkrThD45akeod0iYfPmVI5D0dylSyVatNBIY"},
{"content":{"body":"But, again, a refactor is _not_ necessary to make progress.","format":"org.matrix.custom.html","formatted_body":"But, again, a refactor is <em>not</em> necessary to make progress.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But, again, a refactor is _not_ necessary to make progress.","mimetype":"text/plain"},{"body":"But, again, a refactor is <em>not</em> necessary to make progress.","mimetype":"text/html"}]},"ts":1658523886539,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$yXDTY-cJAGhAE3LZp-Fw15CmjUZPLZ_BiemfiIEPX5E"},
{"content":{"body":"I’m proposing that we just make a new Virtual Module Record type that embeds Cyclic Module Record and borrows some properties of Source Text Module Record (everything but the Source!), then makes a reference to a Module Source Record that keeps the remaining bits of Source Text Module Record.","msgtype":"m.text","org.matrix.msc1767.text":"I’m proposing that we just make a new Virtual Module Record type that embeds Cyclic Module Record and borrows some properties of Source Text Module Record (everything but the Source!), then makes a reference to a Module Source Record that keeps the remaining bits of Source Text Module Record."},"ts":1658523973335,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$0r2r8BGZ-gkR262ZoQgaIbPi_4MiocUlS7rC_KdUwyw"},
{"content":{"body":"We’d leave the existing Module Record hierarchy in tact, maybe circle back clean it up later.","msgtype":"m.text","org.matrix.msc1767.text":"We’d leave the existing Module Record hierarchy in tact, maybe circle back clean it up later."},"ts":1658524021450,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IzA0TpEF4j4UFYUvUkAspHp05Au-SRI10TvPUQwEUSM"},
{"content":{"body":"I guess one of the difficulties is that because SourceTextModule extends CyclicModule extends AbstractModule, having parts of SourceTextModule refactored into a ModuleSource, doesn't mean all abstract modules have a ModuleSource?","msgtype":"m.text","org.matrix.msc1767.text":"I guess one of the difficulties is that because SourceTextModule extends CyclicModule extends AbstractModule, having parts of SourceTextModule refactored into a ModuleSource, doesn't mean all abstract modules have a ModuleSource?"},"ts":1658524181556,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$x_rZmY7-0YNblJYiBipYgALayyjpNAjrK4BYMyjqJCk"},
{"content":{"body":"Correct.","msgtype":"m.text","org.matrix.msc1767.text":"Correct."},"ts":1658524216217,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$XjUMdW-XCxoDsFndxJKoVyh8aCVE4gaXQY5U98gWPy8"},
{"content":{"body":"And when you put it that way, maybe a refactor is necessary.","msgtype":"m.text","org.matrix.msc1767.text":"And when you put it that way, maybe a refactor is necessary."},"ts":1658524229630,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oLPL8OWSexC3xuafupxJ2GqAB4euPF1-hwBb8sfFeXk"},
{"content":{"body":"Or `Module` instances could end up with a null `source`, and that’s not good for business.","format":"org.matrix.custom.html","formatted_body":"Or <code>Module</code> instances could end up with a null <code>source</code>, and that’s not good for business.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Or `Module` instances could end up with a null `source`, and that’s not good for business.","mimetype":"text/plain"},{"body":"Or <code>Module</code> instances could end up with a null <code>source</code>, and that’s not good for business.","mimetype":"text/html"}]},"ts":1658524311554,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$joUx2yby_oQaMzHF57Bp1T_MSc4kC5EVsIBnvSqVy1g"},
{"content":{"body":"Right, so how to define `source` in cases where it's under-specified?","format":"org.matrix.custom.html","formatted_body":"Right, so how to define <code>source</code> in cases where it's under-specified?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Right, so how to define `source` in cases where it's under-specified?","mimetype":"text/plain"},{"body":"Right, so how to define <code>source</code> in cases where it's under-specified?","mimetype":"text/html"}]},"ts":1658524350861,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Bkv0HdIo5Ns2Iw9IKg0w3iwl6VMRAls5QZ137v5r3_8"},
{"content":{"body":"short of just having a bunch of null entries on a record","msgtype":"m.text","org.matrix.msc1767.text":"short of just having a bunch of null entries on a record"},"ts":1658524362831,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$4u_3VKD2d17BpDzjqzk_sG6RCy8D80a4SSqJnYv8rAk"},
{"content":{"body":"Refactor is getting compelling.","msgtype":"m.text","org.matrix.msc1767.text":"Refactor is getting compelling."},"ts":1658524380794,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$uqDQ-AEAjabsLQCIKySCH6vDoyuTR9Cofe_Be5Qx9ak"},
{"content":{"body":"I think realistically we only have to handle SyntheticModule and CyclicModule","msgtype":"m.text","org.matrix.msc1767.text":"I think realistically we only have to handle SyntheticModule and CyclicModule"},"ts":1658524385479,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$jREqUszO2F54fmSUREkRzxzbfT37RlP-LTKG7JdV2xo"},
{"content":{"body":"but even JSON as a SyntheticModule could in theory associate with its source","msgtype":"m.text","org.matrix.msc1767.text":"but even JSON as a SyntheticModule could in theory associate with its source"},"ts":1658524402202,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$a4yQeaQ6TpNOzcHyaGL0VvitOhnTz9lbTr6apDYFwS4"},
{"content":{"body":"Yes.","msgtype":"m.text","org.matrix.msc1767.text":"Yes."},"ts":1658524426698,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gSn40BPT0X8azplq3PH2Pi65sQoMmO0HGp2e5H1203M"},
{"content":{"body":"I'd be very keen to be involved in a refactoring effort, and will gladly sling some PRs on a shared repo","msgtype":"m.text","org.matrix.msc1767.text":"I'd be very keen to be involved in a refactoring effort, and will gladly sling some PRs on a shared repo"},"ts":1658524471174,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$NqZPXCH49RlKH711Ov3u6rEIvkiVD0gKQ6MZ9zAgWis"},
{"content":{"body":"Dan made a point to me on the way out of plenary yesterday, that module fragments might not be able to have a source. So nullable source might be on the table, but I would like to avoid that.","msgtype":"m.text","org.matrix.msc1767.text":"Dan made a point to me on the way out of plenary yesterday, that module fragments might not be able to have a source. So nullable source might be on the table, but I would like to avoid that."},"ts":1658524500831,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mYEOpJT-qCzRj9ELJ1C5eDMjse6hqJ40T0OAE5Ysjhg"},
{"content":{"body":"if it's better to do under the compartments umbrella for now happy to do that as well","msgtype":"m.text","org.matrix.msc1767.text":"if it's better to do under the compartments umbrella for now happy to do that as well"},"ts":1658524502747,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$ay-2FCAK_Yt7HgHpzq2zZWyW8h-YO5Lr4pAO2yTj59U"},
{"content":{"body":"if you have a link to what Caridy is working on please do share","msgtype":"m.text","org.matrix.msc1767.text":"if you have a link to what Caridy is working on please do share"},"ts":1658524523345,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$WpgyrseAwNXOQ3xTQZC0e9iUmBdN2EX008_HyC0yeYk"},
{"content":{"body":"yes Dan explicitly mentioned for import reflection he wants to see the fragments etc use cases worked out at a spec level","msgtype":"m.text","org.matrix.msc1767.text":"yes Dan explicitly mentioned for import reflection he wants to see the fragments etc use cases worked out at a spec level"},"ts":1658524539835,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Lm76Mrnc-pgWeh-Ejv30xAjPgxp7eM8e9uqdPRfOj1M"},
{"content":{"body":"we can certainly do that","msgtype":"m.text","org.matrix.msc1767.text":"we can certainly do that"},"ts":1658524545059,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$mpb5PYZDkKKh8M0yBKynK3GtAYyohGj8GbxX0-aKUOA"},
{"content":{"body":"I’ll pass Caridy’s work along when I get it.","msgtype":"m.text","org.matrix.msc1767.text":"I’ll pass Caridy’s work along when I get it."},"ts":1658524597313,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$pHCTRwGqD4EL1EHqnU1Re9Aa-zQpcUClpXzj-MKx2MI"},
{"content":{"body":"TBD on making a new proposal repo for each layer of a “modules epic”. Going to put that on agendas.","msgtype":"m.text","org.matrix.msc1767.text":"TBD on making a new proposal repo for each layer of a “modules epic”. Going to put that on agendas."},"ts":1658524648028,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QvbEpmjj_rSj1ziwh4lA_0CY8VIiUyk4KERXPmXi_l8"}
]