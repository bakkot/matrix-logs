[
{"content":{"body":"nicolo-ribaudo: Caridy is working on First-class Modules spec text. It might be good for you to connect.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Caridy is working on First-class Modules spec text. It might be good for you to connect.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"nicolo-ribaudo: Caridy is working on First-class Modules spec text. It might be good for you to connect.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Caridy is working on First-class Modules spec text. It might be good for you to connect.","mimetype":"text/html"}]},"ts":1658519149712,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LluC8fhPVyXxFx_Dzey8SuoVh5qBKmsKBVc6mqvaFjo"},
{"content":{"body":"One thing we can’t do Right Now™ is have `importHook` and `importMeta` fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","format":"org.matrix.custom.html","formatted_body":"One thing we can’t do Right Now™ is have <code>importHook</code> and <code>importMeta</code> fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"One thing we can’t do Right Now™ is have `importHook` and `importMeta` fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","mimetype":"text/plain"},{"body":"One thing we can’t do Right Now™ is have <code>importHook</code> and <code>importMeta</code> fall through to defaults in the realm. I presume this is because we don’t have [[ImportHook]] or [[ImportMeta]] on the realm record Yet™.","mimetype":"text/html"}]},"ts":1658519216835,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6UqAxt2LhEf2-FGicSwA2iGNWYLyB_hfH2-2dRN4o-U"},
{"content":{"body":"And if we had them, they’d have to be host-defined.","msgtype":"m.text","org.matrix.msc1767.text":"And if we had them, they’d have to be host-defined."},"ts":1658519241011,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IIgMx9H0o5JRiab5TZwWyPbvEW6ZbM0kdjguWRmWPGo"},
{"content":{"body":"Maybe we have them but they have other names or forms that obscure them?","msgtype":"m.text","org.matrix.msc1767.text":"Maybe we have them but they have other names or forms that obscure them?"},"ts":1658519265627,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kL1ndDhXBlR6C1P0BD5k6KscZUbGCNPRy-9Atedd94g"},
{"content":{"body":"Kris Kowal: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the `importHook` could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize `HostResolveImportedModule` by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the <code>importHook</code> could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize <code>HostResolveImportedModule</code> by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Kris Kowal: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the `importHook` could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize `HostResolveImportedModule` by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: great to hear progress is coming along! Happy to assist where I can as well. I wonder if the <code>importHook</code> could be treated as an internal operation to start to avoid the realm issues? As in, a spec function doesn't need to have context? Eg paramaterize <code>HostResolveImportedModule</code> by the realm (as it likely should be), and have import hook delegate to that? Then refactor outwards from there? Thinking aloud... not sure if something like that makes sense.","mimetype":"text/html"}]},"ts":1658519507204,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$dWYByWYf_HmfIb73VgDV0ZmOVswFqTpBD-46nEhKh3M"},
{"content":{"body":"I think that makes sense.","msgtype":"m.text","org.matrix.msc1767.text":"I think that makes sense."},"ts":1658519546117,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8S3vKsX4SJ8j1uEAdKV3JsXR-OndbFZacAa6Zp1fnXo"},
{"content":{"body":"Something very much like that in any case.","msgtype":"m.text","org.matrix.msc1767.text":"Something very much like that in any case."},"ts":1658519564992,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YDO67AAE_ORfvh7fYpnL81nmtyrkjnCMxfOaeF6SpH0"},
{"content":{"body":"Do you plan to put time to these discussions in SES meetings? Or can we resume in our modules meetings?","msgtype":"m.text","org.matrix.msc1767.text":"Do you plan to put time to these discussions in SES meetings? Or can we resume in our modules meetings?"},"ts":1658519599011,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$oIsSQuAtrS6al7HClFVzjZjXh3tqNL77mQwGvuepvVI"},
{"content":{"body":"I can also reach out to caridy as well / or just copy in on anything for feedback too","msgtype":"m.text","org.matrix.msc1767.text":"I can also reach out to caridy as well / or just copy in on anything for feedback too"},"ts":1658519620837,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$E6BWtLuMG65ctOKC-th3YMQLUmrie_Y0E3sooqectnM"},
{"content":{"body":"I would like to get crackin’ on nitty gritty as soon as possible and SES meetings will help with that. The contract with Module Harmony calls remains the same, though. When we get together with the stakeholders, have to present from where the group left off.","msgtype":"m.text","org.matrix.msc1767.text":"I would like to get crackin’ on nitty gritty as soon as possible and SES meetings will help with that. The contract with Module Harmony calls remains the same, though. When we get together with the stakeholders, have to present from where the group left off."},"ts":1658519679554,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_gBj2AS6zF6j0jwn1zsindHoryY17aFDmKpMAEcgsmc"},
{"content":{"body":"But just putting heads together with Caridy, Nicolo, you, and me to puzzle out what’s possible also makes sense to me.","msgtype":"m.text","org.matrix.msc1767.text":"But just putting heads together with Caridy, Nicolo, you, and me to puzzle out what’s possible also makes sense to me."},"ts":1658519716687,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IGJgAfoCIMa7OcMlgampgsDv_3Ta8hoUUAhZSaCXzdk"},
{"content":{"body":"yeah I'd be happy to put some time into the direct spec questions","msgtype":"m.text","org.matrix.msc1767.text":"yeah I'd be happy to put some time into the direct spec questions"},"ts":1658519752868,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$11Tw-njdVtBk2fa1RXWL9DEFLSMwp9LDniDtdfZby00"},
{"content":{"body":"I'm still very hopeful we can improve the modules spec as we do this work","msgtype":"m.text","org.matrix.msc1767.text":"I'm still very hopeful we can improve the modules spec as we do this work"},"ts":1658519768030,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$YgoiGAk25JsUkF6ERfvaz0GN5_2HJ5-_L89iXBys3nA"},
{"content":{"body":"and actually make it more capable and more well-defined in the process","msgtype":"m.text","org.matrix.msc1767.text":"and actually make it more capable and more well-defined in the process"},"ts":1658519781997,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$L8jY17dHBlgTSaFiZjNU7L2nkEuXiCdX05Uyyp4GvH4"},
{"content":{"body":"Yeah, on the one hand Caridy wants to have the lightest touch possible so the proposal is provably free of surprises.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, on the one hand Caridy wants to have the lightest touch possible so the proposal is provably free of surprises."},"ts":1658519838645,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$XjvHuhvLVKVRwEZlEj_LYOlfrUUAzkO5kaG3Q4V7XWM"},
{"content":{"body":"But I think setting up for a non-normative refactor should be part of the plan.","msgtype":"m.text","org.matrix.msc1767.text":"But I think setting up for a non-normative refactor should be part of the plan."},"ts":1658519872280,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fGjDAxzfTU6_vgdnWsNZmTaQ9RTnVXL2oys0IOirfuQ"},
{"content":{"body":"If there's room for some refactoring, like working on any old codebase hopefully we can leave it better than we found it :)","msgtype":"m.text","org.matrix.msc1767.text":"If there's room for some refactoring, like working on any old codebase hopefully we can leave it better than we found it :)"},"ts":1658519879720,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$3nyA3YeW7EUbZl9KtrTMQhdbH_xucyNy7mKmK9c6pTA"},
{"content":{"body":"Or preceding with a non-normative refactor would work for me too.","msgtype":"m.text","org.matrix.msc1767.text":"Or preceding with a non-normative refactor would work for me too."},"ts":1658519907482,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$4cn-nVGQ5vKhcBCrJTMik-27rIDXxZJsD2R143zD6Vw"},
{"content":{"body":"Are you familiar with Chesterton’s Fence?","msgtype":"m.text","org.matrix.msc1767.text":"Are you familiar with Chesterton’s Fence?"},"ts":1658519943296,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ae38dbuMU4gYJGy9EZxpEVb0xT2lWG2c6eLbEJsiwJU"},
{"content":{"body":"I always dismiss Chesterton's fence discussions because I don't see their purpose","msgtype":"m.text","org.matrix.msc1767.text":"I always dismiss Chesterton's fence discussions because I don't see their purpose"},"ts":1658520260709,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$1fbEyu9nxxNTkCz-UOuDlC6Ivn5ym61NGJxyNxrvjF8"},
{"content":{"body":"Yeah, so relatedly, I suspect that Cyclic Module Record only exists because Module Source Record doesn’t exist yet.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, so relatedly, I suspect that Cyclic Module Record only exists because Module Source Record doesn’t exist yet."},"ts":1658520469609,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1F1CPf0pOOCiNE3YSrh6dSLm5TGDaoYsqRoS6MWzQ0o"},
{"content":{"body":"But I don’t *know* *know* whether there are any concrete Module Record types that *don’t* include the abstract Cyclic Module Record.","format":"org.matrix.custom.html","formatted_body":"But I don’t <em>know</em> <em>know</em> whether there are any concrete Module Record types that <em>don’t</em> include the abstract Cyclic Module Record.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But I don’t *know* *know* whether there are any concrete Module Record types that *don’t* include the abstract Cyclic Module Record.","mimetype":"text/plain"},{"body":"But I don’t <em>know</em> <em>know</em> whether there are any concrete Module Record types that <em>don’t</em> include the abstract Cyclic Module Record.","mimetype":"text/html"}]},"ts":1658520521030,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oX93dnB7pCeS4kwA1N81DIkvJ--IEAc8kD8aKQpzwoI"},
{"content":{"body":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","msgtype":"m.text","org.matrix.msc1767.text":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"ts":1658520539532,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$H5ZOjkXyh4pRuBm0WfkSBjpXDE2HF9Cew4TRKdVoW5Q"},
{"content":{"body":" * So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","m.new_content":{"body":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified.","msgtype":"m.text","org.matrix.msc1767.text":"So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"m.relates_to":{"event_id":"$H5ZOjkXyh4pRuBm0WfkSBjpXDE2HF9Cew4TRKdVoW5Q","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * So I’m approaching that particular Chesterton’s Fence as if it might be electrified."},"ts":1658520548016,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Tu9R1T-nQx1aWoxcXMc6jnk2Hd4IPYsGSg-f7pA6pSs"},
{"content":{"body":"That kind of uncertainty is a good reason to refactor it out of existence, _if_ we can.","format":"org.matrix.custom.html","formatted_body":"That kind of uncertainty is a good reason to refactor it out of existence, <em>if</em> we can.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That kind of uncertainty is a good reason to refactor it out of existence, _if_ we can.","mimetype":"text/plain"},{"body":"That kind of uncertainty is a good reason to refactor it out of existence, <em>if</em> we can.","mimetype":"text/html"}]},"ts":1658520594409,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FYu-yIfgiSaufe9IH31MSaHBduPLPUBZb7vd56GqQBM"},
{"content":{"body":"So I think the way we set the stage for that refactor is to create a new concrete Module Record that embeds Cyclic Module Record and refers to a Module Source Record. This would be the last concrete Module Record we would ever need, and in a refactor, we could circle back and replace the Module Record abstract type hierarchy with the single, concrete Module Record and rely on the abstract Module Source Record for extensibility.","msgtype":"m.text","org.matrix.msc1767.text":"So I think the way we set the stage for that refactor is to create a new concrete Module Record that embeds Cyclic Module Record and refers to a Module Source Record. This would be the last concrete Module Record we would ever need, and in a refactor, we could circle back and replace the Module Record abstract type hierarchy with the single, concrete Module Record and rely on the abstract Module Source Record for extensibility."},"ts":1658520781570,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3FwKCFWPSyX_cvFB-KnzljEm-s-lDb2e2L6rn3ej4Vs"},
{"content":{"body":"In that refactor, Cyclic Module Record squashes into Module Record.","msgtype":"m.text","org.matrix.msc1767.text":"In that refactor, Cyclic Module Record squashes into Module Record."},"ts":1658520830303,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$toJ_udccSitXV_bt9_WnNHiRwGDn0P8iY9nJz4BFVjY"},
{"content":{"body":"But, again, weary that might not be possible and is also not necessary to make progress on “Virtual Module Record”.","msgtype":"m.text","org.matrix.msc1767.text":"But, again, weary that might not be possible and is also not necessary to make progress on “Virtual Module Record”."},"ts":1658520862673,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Gx034PO0m2cGb7AYZaHUhFnjdyzHaH_2nAfeRTdbGQQ"},
{"content":{"body":"And very very weary of signaling that the refactor is necessary, given that it might not be possible.","msgtype":"m.text","org.matrix.msc1767.text":"And very very weary of signaling that the refactor is necessary, given that it might not be possible."},"ts":1658520885645,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$rNW5T4LQ7uEHoWYRZw_qGhFFE61zCwHRK4vHjQC49bI"},
{"content":{"body":"guybedford (Guy Bedford):  And I’m sure that’s the least of the refactoring you have in mind. 😂","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a>:  And I’m sure that’s the least of the refactoring you have in mind. 😂","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"guybedford (Guy Bedford):  And I’m sure that’s the least of the refactoring you have in mind. 😂","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a>:  And I’m sure that’s the least of the refactoring you have in mind. 😂","mimetype":"text/html"}]},"ts":1658521464884,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YHHgFBPiX0WCw-6gS235qyPx5ms3WtCfiRk8xenFM2U"},
{"content":{"body":"interesting!","msgtype":"m.text","org.matrix.msc1767.text":"interesting!"},"ts":1658522754387,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$qmKgrUnPkzl7qjFfnz5bBAbOI2Y_7JD5EB8r9g-GvmY"},
{"content":{"body":"I wonder if we could do such a refactoring as a non-normative PR?","msgtype":"m.text","org.matrix.msc1767.text":"I wonder if we could do such a refactoring as a non-normative PR?"},"ts":1658522762476,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$829PjnDohJaTGG3dTcodvpxuGXRVfNGSHEvXGBoVGgU"},
{"content":{"body":"perhaps write our respective specs, then work out a refactoring to write our respective specs against, then PR that first...?","msgtype":"m.text","org.matrix.msc1767.text":"perhaps write our respective specs, then work out a refactoring to write our respective specs against, then PR that first...?"},"ts":1658522786033,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$iybtVcDy_GONUGQLPnuw0Bj3LdVBzfDPCTcctrv2OZE"},
{"content":{"body":"I think any refactoring is by definition non-normative.","msgtype":"m.text","org.matrix.msc1767.text":"I think any refactoring is by definition non-normative."},"ts":1658522884039,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qGFyr3rbfA6edgpBAtQBIXByrJXFP-HJYsw8VyNcN2w"},
{"content":{"body":"yeah I guess its more likely, let's get this spec feedback going on see where it ends up though","msgtype":"m.text","org.matrix.msc1767.text":"yeah I guess its more likely, let's get this spec feedback going on see where it ends up though"},"ts":1658522992600,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$_eFObbuaGbvWLZrdsHPO4z6w_vHglaio2GCXCctjMSo"},
{"content":{"body":"I also think we could generalize CyclicModuleRecord istead of AbstractModuleRecord being separated","msgtype":"m.text","org.matrix.msc1767.text":"I also think we could generalize CyclicModuleRecord istead of AbstractModuleRecord being separated"},"ts":1658523033325,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$tpgv4XnqjcUt5TqcQAjlaqmuq5uby5CcB1IVKvMbsWQ"},
{"content":{"body":"Then having ModuleSourceRecord v ModuleInstanceRecord","msgtype":"m.text","org.matrix.msc1767.text":"Then having ModuleSourceRecord v ModuleInstanceRecord"},"ts":1658523057406,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$vkdjxqGWzg6c2BexoZV78bCxqA93BF-qTIx9LLQ23Xw"},
{"content":{"body":"In theory SyntheticModules could just be a CyclicModuleRecord with no dependencies","msgtype":"m.text","org.matrix.msc1767.text":"In theory SyntheticModules could just be a CyclicModuleRecord with no dependencies"},"ts":1658523086470,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$ByfCP3MUfKsDP14Osc-FnBRKItnjfZoYTmj8Gd-oLJA"},
{"content":{"body":"and that leaves the door open to a form of Synthetic with dependencies anyway","msgtype":"m.text","org.matrix.msc1767.text":"and that leaves the door open to a form of Synthetic with dependencies anyway"},"ts":1658523095358,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5SGOogEz8eFummVuAsckhMdlAGjibDr-OQFzypaj0pQ"},
{"content":{"body":"A thing I could use help explaining is why we should separate source from instance.","msgtype":"m.text","org.matrix.msc1767.text":"A thing I could use help explaining is why we should separate source from instance."},"ts":1658523106555,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lN3O9ALY6m8y3A7oIE0Ooc_R4y6fTgjPYJncBcTpPm8"},
{"content":{"body":"I guess the new constraint is the same source record can now have multiple instances under module blocks","msgtype":"m.text","org.matrix.msc1767.text":"I guess the new constraint is the same source record can now have multiple instances under module blocks"},"ts":1658523129181,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5eyKx1e5I5zX6AHVylCCcboTAK-AM-L8mbsHGOhmLKk"},
{"content":{"body":"that’s certainly true","msgtype":"m.text","org.matrix.msc1767.text":"that’s certainly true"},"ts":1658523148295,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3EKaPj16thXGkHKJbGlNn6ULR4MiTeYwA1_xc32ThJI"},
{"content":{"body":"multiple instantiation is the crux, and multiple motivating cases require multiple instantiation","msgtype":"m.text","org.matrix.msc1767.text":"multiple instantiation is the crux, and multiple motivating cases require multiple instantiation"},"ts":1658523171044,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Yad3aUp6NFlG1nHWj9WaEz1nBCa9jDoSfmiz2pvi0vI"},
{"content":{"body":"there’s also transferability between agents of the same cluster. I think James Browning (@?) would be very interested in that dimension.","msgtype":"m.text","org.matrix.msc1767.text":"there’s also transferability between agents of the same cluster. I think James Browning (@?) would be very interested in that dimension."},"ts":1658523216907,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$avMyb5RAPAtarpV-epeERN1T-KPFyTU2khfQFwnAcxE"},
{"content":{"body":"toll-free transfer between realms too","msgtype":"m.text","org.matrix.msc1767.text":"toll-free transfer between realms too"},"ts":1658523260643,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IycLNmM7AEPbRRCoXWa4fMyzvywL9cNCNGHRT-_l16I"}
]