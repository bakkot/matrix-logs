[
{"content":{"body":"ðŸ¤”","msgtype":"m.text"},"ts":1680006353369,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$KliRNfO9kjIybi8ULrXhutxKCdGJMI-yoZ7pVhDWdWY"},
{"content":{"body":"implementing \"assert { webpackSync: true }\" in webpack","msgtype":"m.text"},"ts":1680006388072,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Thw3F0gyAftZn6SY3XMtno-nchz-N3_Y0Tq7lmVEAnE"},
{"content":{"body":"asserts the module graph does not contain TLA or Async WebAssembly module","msgtype":"m.text"},"ts":1680006404965,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QGqcj0WfYfkiRqi9d9V2PsqbgjzxHD2ddr-Mdd9g1Fk"},
{"content":{"body":"but asserts have been deprecated, and the \"with\" keyword does not fit the semantic of this feature. ","msgtype":"m.text"},"ts":1680006440301,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$25baqeM43Sp41-sDZ4KWnUTm67hp3bp2KuN1M2MzwXs"},
{"content":{"body":"any suggestion? does that mean assert itself has its meaning? or should I rename it to \"with { webpackAssertSync: true }\"?","msgtype":"m.text"},"ts":1680006493727,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lWJLxnVQL1q-yldgLIEVmxAhhjXlb5l570F29Fwe0FY"},
{"content":{"body":"Using `with` the key could express the assertion. What about `with { webpack: { ensureSync: true }}`?","format":"org.matrix.custom.html","formatted_body":"Using <code>with</code> the key could express the assertion. What about <code>with { webpack: { ensureSync: true }}</code>?","msgtype":"m.text"},"ts":1680006543110,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4"},
{"content":{"body":"Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"| instead of `true`","msgtype":"m.text"},"ts":1680006558604,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$h_WR0_hpNcIg8sJs5dEfxzdt-MrdrBLyqQ8YwlhbRAY"},
{"content":{"body":"* Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"` instead of `true`","m.new_content":{"body":"Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"` instead of `true`","msgtype":"m.text"},"m.relates_to":{"event_id":"$h_WR0_hpNcIg8sJs5dEfxzdt-MrdrBLyqQ8YwlhbRAY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006568256,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$T9d7mrBskaOC3F5WeCgV5fgcVErRy7shDQurdo_FgBo"},
{"content":{"body":"another alternative could be `with { webpack: { sync: 'ensure' }}`","format":"org.matrix.custom.html","formatted_body":"another alternative could be <code>with { webpack: { sync: 'ensure' }}</code>","msgtype":"m.text"},"ts":1680006599510,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$LMUkdruUe2CtR6El8WbVIJx52yqu90Ss2Rv-G1oY_pM"},
{"content":{"body":"> <@svensauleau:matrix.org> Using `with` the key could express the assertion. What about `with { webpack: { ensureSync: true }}`?\n\noh... that's also an option, but webpack internal does not have the evaluation of object literals means it will be a lot more work for me to do this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4?via=matrix.org&via=igalia.com&via=gitter.im\">In reply to</a> <a href=\"https://matrix.to/#/@svensauleau:matrix.org\">@svensauleau:matrix.org</a><br />Using <code>with</code> the key could express the assertion. What about <code>with { webpack: { ensureSync: true }}</code>?</blockquote></mx-reply>oh... that's also an option, but webpack internal does not have the evaluation of object literals means it will be a lot more work for me to do this","m.relates_to":{"m.in_reply_to":{"event_id":"$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4"}},"msgtype":"m.text"},"ts":1680006664065,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$SVoi1FbIcaJn1_3-IBHE7OJfzDNDxKHxZ5ZRh9y7Ipg"},
{"content":{"body":"for multiple attributes provided by the same tool chain, does the proposal champions supports \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","msgtype":"m.text"},"ts":1680006749402,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Vfx1bOIAPbXCK7LXyH5AKcnmbOuUS2Hk_LqgFVASl7w"},
{"content":{"body":"there was a discussion about that and I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":"there was a discussion about that and I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","msgtype":"m.text"},"ts":1680006784304,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$x3N8mzLzKDvGRitq2U914NGu2X1Pb7x5kZF8aDigTDw"},
{"content":{"body":" * there was a discussion about that but I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":" * there was a discussion about that but I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","m.new_content":{"body":"there was a discussion about that but I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":"there was a discussion about that but I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$x3N8mzLzKDvGRitq2U914NGu2X1Pb7x5kZF8aDigTDw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006789517,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$-2I2kVMaXDEeCwY197CCon_ccftUC-S8BAs_OWNrG3w"},
{"content":{"body":"* for multiple attributes provided by the same tool chain, does the proposal champions recommend \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","m.new_content":{"body":"for multiple attributes provided by the same tool chain, does the proposal champions recommend \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","msgtype":"m.text"},"m.relates_to":{"event_id":"$Vfx1bOIAPbXCK7LXyH5AKcnmbOuUS2Hk_LqgFVASl7w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006803055,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oAHtGq1-z7lNXIr952GmJP9YwfgIDx-ppv8y3_im1u0"},
{"content":{"body":"Currently only strings are supported","msgtype":"m.text"},"ts":1680007468568,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ltg4NA8CRHVSnMwH-exOvSSIraWLt6pWK3pyU1KU7JM"}
]