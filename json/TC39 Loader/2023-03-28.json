[
{"content":{"body":"ü§î","msgtype":"m.text"},"ts":1680006353369,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$KliRNfO9kjIybi8ULrXhutxKCdGJMI-yoZ7pVhDWdWY"},
{"content":{"body":"implementing \"assert { webpackSync: true }\" in webpack","msgtype":"m.text"},"ts":1680006388072,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Thw3F0gyAftZn6SY3XMtno-nchz-N3_Y0Tq7lmVEAnE"},
{"content":{"body":"asserts the module graph does not contain TLA or Async WebAssembly module","msgtype":"m.text"},"ts":1680006404965,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QGqcj0WfYfkiRqi9d9V2PsqbgjzxHD2ddr-Mdd9g1Fk"},
{"content":{"body":"but asserts have been deprecated, and the \"with\" keyword does not fit the semantic of this feature. ","msgtype":"m.text"},"ts":1680006440301,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$25baqeM43Sp41-sDZ4KWnUTm67hp3bp2KuN1M2MzwXs"},
{"content":{"body":"any suggestion? does that mean assert itself has its meaning? or should I rename it to \"with { webpackAssertSync: true }\"?","msgtype":"m.text"},"ts":1680006493727,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lWJLxnVQL1q-yldgLIEVmxAhhjXlb5l570F29Fwe0FY"},
{"content":{"body":"Using `with` the key could express the assertion. What about `with { webpack: { ensureSync: true }}`?","format":"org.matrix.custom.html","formatted_body":"Using <code>with</code> the key could express the assertion. What about <code>with { webpack: { ensureSync: true }}</code>?","msgtype":"m.text"},"ts":1680006543110,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4"},
{"content":{"body":"Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"| instead of `true`","msgtype":"m.text"},"ts":1680006558604,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$h_WR0_hpNcIg8sJs5dEfxzdt-MrdrBLyqQ8YwlhbRAY"},
{"content":{"body":"* Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"` instead of `true`","m.new_content":{"body":"Note: I also found no boolean literal is allowed which is annoying. I have to use `\"true\"` instead of `true`","msgtype":"m.text"},"m.relates_to":{"event_id":"$h_WR0_hpNcIg8sJs5dEfxzdt-MrdrBLyqQ8YwlhbRAY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006568256,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$T9d7mrBskaOC3F5WeCgV5fgcVErRy7shDQurdo_FgBo"},
{"content":{"body":"another alternative could be `with { webpack: { sync: 'ensure' }}`","format":"org.matrix.custom.html","formatted_body":"another alternative could be <code>with { webpack: { sync: 'ensure' }}</code>","msgtype":"m.text"},"ts":1680006599510,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$LMUkdruUe2CtR6El8WbVIJx52yqu90Ss2Rv-G1oY_pM"},
{"content":{"body":"> <@svensauleau:matrix.org> Using `with` the key could express the assertion. What about `with { webpack: { ensureSync: true }}`?\n\noh... that's also an option, but webpack internal does not have the evaluation of object literals means it will be a lot more work for me to do this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4?via=matrix.org&via=igalia.com&via=gitter.im\">In reply to</a> <a href=\"https://matrix.to/#/@svensauleau:matrix.org\">@svensauleau:matrix.org</a><br />Using <code>with</code> the key could express the assertion. What about <code>with { webpack: { ensureSync: true }}</code>?</blockquote></mx-reply>oh... that's also an option, but webpack internal does not have the evaluation of object literals means it will be a lot more work for me to do this","m.relates_to":{"m.in_reply_to":{"event_id":"$nuhoygRgayIjyMuMJs3HDXVEctbsRM29l1AwkSEcrZ4"}},"msgtype":"m.text"},"ts":1680006664065,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$SVoi1FbIcaJn1_3-IBHE7OJfzDNDxKHxZ5ZRh9y7Ipg"},
{"content":{"body":"for multiple attributes provided by the same tool chain, does the proposal champions supports \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","msgtype":"m.text"},"ts":1680006749402,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Vfx1bOIAPbXCK7LXyH5AKcnmbOuUS2Hk_LqgFVASl7w"},
{"content":{"body":"there was a discussion about that and I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":"there was a discussion about that and I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","msgtype":"m.text"},"ts":1680006784304,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$x3N8mzLzKDvGRitq2U914NGu2X1Pb7x5kZF8aDigTDw"},
{"content":{"body":" * there was a discussion about that but I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":" * there was a discussion about that but I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","m.new_content":{"body":"there was a discussion about that but I don't remember the outcome. I think we should support `with { webpack: { ... }}`.","format":"org.matrix.custom.html","formatted_body":"there was a discussion about that but I don't remember the outcome. I think we should support <code>with { webpack: { ... }}</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$x3N8mzLzKDvGRitq2U914NGu2X1Pb7x5kZF8aDigTDw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006789517,"senderName":"svensauleau","senderId":"@svensauleau:matrix.org","id":"$-2I2kVMaXDEeCwY197CCon_ccftUC-S8BAs_OWNrG3w"},
{"content":{"body":"* for multiple attributes provided by the same tool chain, does the proposal champions recommend \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","m.new_content":{"body":"for multiple attributes provided by the same tool chain, does the proposal champions recommend \"webpackX: val, webpackY: val\" or nested \"webpack: { x: val, y: val }\"?","msgtype":"m.text"},"m.relates_to":{"event_id":"$Vfx1bOIAPbXCK7LXyH5AKcnmbOuUS2Hk_LqgFVASl7w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680006803055,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oAHtGq1-z7lNXIr952GmJP9YwfgIDx-ppv8y3_im1u0"},
{"content":{"body":"Currently only strings are supported","msgtype":"m.text"},"ts":1680007468568,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ltg4NA8CRHVSnMwH-exOvSSIraWLt6pWK3pyU1KU7JM"},
{"content":{"body":"For multiple webpack-defined keys, you can use `with { _webpackFoo: ‚Äúxyz‚Äù, _webpackBar: ‚Äúabc‚Äù }`","format":"org.matrix.custom.html","formatted_body":"For multiple webpack-defined keys, you can use <code>with { _webpackFoo: ‚Äúxyz‚Äù, _webpackBar: ‚Äúabc‚Äù }</code>","msgtype":"m.text"},"ts":1680007529204,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7MJAvUu0Hi3NDTib6ohLgOHa9R0hSczX0o9b9yt73mY"},
{"content":{"body":"We should probably do more ASAP to document and socialize this convention","msgtype":"m.text"},"ts":1680007551088,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$a6INGxwxoq0gQVnTfzmNN7Nw14Dtvbjq3_BcO4RwMm4"},
{"content":{"body":"I don‚Äôt think we should be adding features right now; we just had a period of reconsideration and explicitly decided to keep the expressiveness of values the same ","format":"org.matrix.custom.html","formatted_body":"I don‚Äôt think we should be adding features right now; we just had a period of reconsideration and explicitly decided to keep the expressiveness of values the same","msgtype":"m.text"},"ts":1680007593307,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_vQab1w6lJKdi0Dg3xjv4XphztBp6SUWJIqKnaNYcbs"},
{"content":{"body":"Meeting now?","msgtype":"m.text"},"ts":1680019307264,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$919pn8UOpEVnCOOaCTQpj89r87DmwzGQQZzfG1ltfKM"},
{"content":{"body":"I‚Äôm still away and tending to a newborn and toddler, but I‚Äôm very much interested in summaries if someone has a moment to describe progress/regress from plenary or today‚Äôs module meeting.","msgtype":"m.text"},"ts":1680019369837,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$I203QSZUHaxuocDRjal64JjgZIcANvxFTdsLvLR9-VU"},
{"content":{"body":"I'm sitting in the waiting room - no-one else around to join today?","msgtype":"m.text"},"ts":1680019393086,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$TBaGORZRvT8SMvr0Mx0rD0dFxtVjOaYvMWJB25fOOJQ"},
{"content":{"body":"> <@lucacasonato:matrix.org> I'm sitting in the waiting room - no-one else around to join today?\n\nSame","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$TBaGORZRvT8SMvr0Mx0rD0dFxtVjOaYvMWJB25fOOJQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br>I&#39;m sitting in the waiting room - no-one else around to join today?</blockquote></mx-reply>Same","m.relates_to":{"m.in_reply_to":{"event_id":"$TBaGORZRvT8SMvr0Mx0rD0dFxtVjOaYvMWJB25fOOJQ"}},"msgtype":"m.text"},"ts":1680019443869,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$DcJ0YDsCuqGMJd6XhJ6uMx5OEfh26s0hGfEuTmbu3sY"},
{"content":{"body":"> <@kriskowal:matrix.org> I‚Äôm still away and tending to a newborn and toddler, but I‚Äôm very much interested in summaries if someone has a moment to describe progress/regress from plenary or today‚Äôs module meeting.\n\nMost significant updates:\n- import assertions are back to Stage 3 (conditional on editors reviews), without the constraint that they cannot affect loading and cannot be part of the cache key\n- Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n- Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$I203QSZUHaxuocDRjal64JjgZIcANvxFTdsLvLR9-VU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I‚Äôm still away and tending to a newborn and toddler, but I‚Äôm very much interested in summaries if someone has a moment to describe progress/regress from plenary or today‚Äôs module meeting.</blockquote></mx-reply><p>Most significant updates:</p>\n<ul>\n<li>import assertions are back to Stage 3 (conditional on editors reviews), without the constraint that they cannot affect loading and cannot be part of the cache key</li>\n<li>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;</li>\n<li>Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting</li>\n</ul>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$I203QSZUHaxuocDRjal64JjgZIcANvxFTdsLvLR9-VU"}},"msgtype":"m.text"},"ts":1680019662901,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ka8MZS0IKESrOlEG77CHmRY0AHHMqPvhJMZU36WT-wA"},
{"content":{"body":"> <@kriskowal:matrix.org> I‚Äôm still away and tending to a newborn and toddler, but I‚Äôm very much interested in summaries if someone has a moment to describe progress/regress from plenary or today‚Äôs module meeting.\n\n * Most significant updates:\n\n- import assertions are back to Stage 3 (conditional on editors reviews) as \"import attributes\", without the constraint that they cannot affect loading and cannot be part of the cache key\n- Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n- Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$I203QSZUHaxuocDRjal64JjgZIcANvxFTdsLvLR9-VU?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I‚Äôm still away and tending to a newborn and toddler, but I‚Äôm very much interested in summaries if someone has a moment to describe progress/regress from plenary or today‚Äôs module meeting.</blockquote></mx-reply> * <p>Most significant updates:</p>\n<ul>\n<li>import assertions are back to Stage 3 (conditional on editors reviews) as &quot;import attributes&quot;, without the constraint that they cannot affect loading and cannot be part of the cache key</li>\n<li>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;</li>\n<li>Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting</li>\n</ul>\n","m.new_content":{"body":"Most significant updates:\n\n- import assertions are back to Stage 3 (conditional on editors reviews) as \"import attributes\", without the constraint that they cannot affect loading and cannot be part of the cache key\n- Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n- Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting","format":"org.matrix.custom.html","formatted_body":"<p>Most significant updates:</p>\n<ul>\n<li>import assertions are back to Stage 3 (conditional on editors reviews) as &quot;import attributes&quot;, without the constraint that they cannot affect loading and cannot be part of the cache key</li>\n<li>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;</li>\n<li>Guy is thinking about possible design suggestions to compartments Layer 0 to work around some of the feedback given in the November meeting</li>\n</ul>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$ka8MZS0IKESrOlEG77CHmRY0AHHMqPvhJMZU36WT-wA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680019685630,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pvj9Nio5qfxE9PBSeJvOET8k45wE8KSVdmbldZINtuk"},
{"content":{"body":"unfortunately I don't have permissions either, also in waiting room...","msgtype":"m.text"},"ts":1680019735651,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$V-IpTo2DPUDMC6lOQE941i6r534J7xdrTrmpTL7wqq0"},
{"content":{"body":"> Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\nI think the presentation was well received. We have some feedback from Jordan to think about return types for \"source\" phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;<br>I think the presentation was well received. We have some feedback from Jordan to think about return types for &quot;source&quot; phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1680019738220,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$UVKjGU77NSy4OBZW9HMMnjbJi4_D_1x-ts8XpTMOTQI"},
{"content":{"body":" * > Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n\nI think the presentation was well received. We have some feedback from Jordan to think about return types for \"source\" phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\n<p>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;</p>\n</blockquote>\n<p>I think the presentation was well received. We have some feedback from Jordan to think about return types for &quot;source&quot; phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.</p>\n","m.new_content":{"body":"> Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n\nI think the presentation was well received. We have some feedback from Jordan to think about return types for \"source\" phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just &quot;stop at an early phase&quot;</p>\n</blockquote>\n<p>I think the presentation was well received. We have some feedback from Jordan to think about return types for &quot;source&quot; phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$UVKjGU77NSy4OBZW9HMMnjbJi4_D_1x-ts8XpTMOTQI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680019751545,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$ZpNNh6bvW1LcfdeJKdBO9NYR6DPwTFEmFlYnMMv1uUI"},
{"content":{"body":"To join the video meeting, click this link: https://meet.google.com/afs-kzui-qsx\nOtherwise, to join by phone, dial +31 20 257 4432 and enter this PIN: 775 821 400#\nTo view more phone numbers, click this link: https://tel.meet/afs-kzui-qsx?hs=5","msgtype":"m.text"},"ts":1680019773576,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$q-oRUgbsnIlvO8vX9X9aCyinrua-2sb82S7SRoL1M5E"},
{"content":{"body":"let's just use a different room then :)","msgtype":"m.text"},"ts":1680019788497,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$v3feYLillfl6rME4di31RB_7Hbq5l6VCULL9DAo_Az4"},
{"content":{"body":"(I'm skipping this meeting but I can briefly join to let people in if needed)","msgtype":"m.text"},"ts":1680019815702,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$J6U6OsSWYE3Ov4qplFho0dZ4_humbY21Pa9n6W9CyWM"},
{"content":{"body":"littledan: we've figured it out","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: we've figured it out","msgtype":"m.text"},"ts":1680019836250,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$rkYvLG2dAN8FNd3qsdyQsa6ERyFnGE4ENPl9216hEmY"},
{"content":{"body":"guybedford: new link, can you join there?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a>: new link, can you join there?","msgtype":"m.text"},"ts":1680019873588,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$4duPOX6_v92pI4JGtIDyJFM4lVyiB3XLZDVIHtU0Y1Y"},
{"content":{"body":"Nice work on Import Attributes, btw!","msgtype":"m.text"},"ts":1680021374383,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$nM_JV1gyiUP6LvSDzJdtG3bZ8F6ighEjXMrSbtFqg_8"},
{"content":{"body":"Mathieu Hofman: https://crbug.com/567999","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: https://crbug.com/567999","msgtype":"m.text"},"ts":1680021862155,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Zng1R1Ha5Ec9RaykqYhHkVhocYAMhygn8TzJ6VTYsew"},
{"content":{"body":"What do you all think about making the loader meeting 1 hour again, but doing it weekly rather than bi-weekly? Please vote below:","msgtype":"m.text"},"ts":1680023038896,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$IQQworJvj7QMAHBCljUoBq1vTYAoddNru6WsXO4c7Js"},
{"content":{"body":"> <@lucacasonato:matrix.org> > Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"\n> \n> I think the presentation was well received. We have some feedback from Jordan to think about return types for \"source\" phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.\n\nIs the proposed solution described anywhere?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$UVKjGU77NSy4OBZW9HMMnjbJi4_D_1x-ts8XpTMOTQI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><blockquote>\n<p>Luca and Guy gave a presentation in plenary about the various phases of loading a module, from resolution to evaluation, showing how different proposals are just \"stop at an early phase\"</p>\n</blockquote>\n<p>I think the presentation was well received. We have some feedback from Jordan to think about return types for \"source\" phase imports, but we think we can tackle this and attempt Stage 3 at next plenary.</p>\n</blockquote></mx-reply>Is the proposed solution described anywhere?","m.relates_to":{"m.in_reply_to":{"event_id":"$UVKjGU77NSy4OBZW9HMMnjbJi4_D_1x-ts8XpTMOTQI"}},"msgtype":"m.text"},"ts":1680024150944,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Wbm5CrN9xVSdRZdMRlXdYHtJm8gOKMLNeegNmMjyfmQ"},
{"content":{"body":"I really think we need a general set of built-in type-checkers similar to isArray, as was previously proposed. I don't think it's optimal that we're doing this case-by-case (it comes up for many proposals).","msgtype":"m.text"},"ts":1680024211116,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$txW0fITha02vwLwgCyjVZU4yGt08eDlfPBj2GF0PNkE"},
{"content":{"body":"Jordan's concern here was not \"that thing has an internal slot I cannot check\", but \"that thing has no internal slot to uniquely describe it as the result of import reflection\"","msgtype":"m.text"},"ts":1680025068179,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7Q_qLL1wNXmVcgzIT_TQtmPgYI64hh_1dyueV6P7z_A"},
{"content":{"body":"> <@littledan:matrix.org> I really think we need a general set of built-in type-checkers similar to isArray, as was previously proposed. I don't think it's optimal that we're doing this case-by-case (it comes up for many proposals).\n\nplease don't give too much importance to this comment; I'm fine with a specific solution for this case, for now.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$txW0fITha02vwLwgCyjVZU4yGt08eDlfPBj2GF0PNkE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I really think we need a general set of built-in type-checkers similar to isArray, as was previously proposed. I don&#39;t think it&#39;s optimal that we&#39;re doing this case-by-case (it comes up for many proposals).</blockquote></mx-reply>please don't give too much importance to this comment; I'm fine with a specific solution for this case, for now.","m.relates_to":{"m.in_reply_to":{"event_id":"$txW0fITha02vwLwgCyjVZU4yGt08eDlfPBj2GF0PNkE"}},"msgtype":"m.text"},"ts":1680025732190,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VkOy6yjveGrl1F36zD8aMEvcDtaJJzPuSfqNov44XeU"},
{"content":{"body":"* Jordan's concern here was not \"that thing has an internal slot we cannot check\", but \"that thing has no internal slot to uniquely describe it as the result of import reflection\"","m.new_content":{"body":"Jordan's concern here was not \"that thing has an internal slot we cannot check\", but \"that thing has no internal slot to uniquely describe it as the result of import reflection\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$7Q_qLL1wNXmVcgzIT_TQtmPgYI64hh_1dyueV6P7z_A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680026429782,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$TMWCHrTcB3YcZlgFjwGdlD4fZ6U8vkVJQcUSWRQpfxI"},
{"content":{"body":"> that thing has no internal slot to uniquely describe it as the result of import reflection\n\nWhich I think it will - the internal slot that will be used by the `new Module()` constructor to figure out what it is meant to do with a given source.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>that thing has no internal slot to uniquely describe it as the result of import reflection</p>\n</blockquote>\n<p>Which I think it will - the internal slot that will be used by the <code>new Module()</code> constructor to figure out what it is meant to do with a given source.</p>\n","msgtype":"m.text"},"ts":1680032927941,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$vOHD4oIyP_6Yfcf2K72Y-JKwQCdYTWDWKXogGNULoCo"},
{"content":{"body":"So, what's the proposed solution? Do we create a predicate specifically for this, or do we say it will be solved when we later add `new Module`, or what?","format":"org.matrix.custom.html","formatted_body":"So, what's the proposed solution? Do we create a predicate specifically for this, or do we say it will be solved when we later add <code>new Module</code>, or what?","msgtype":"m.text"},"ts":1680032973934,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$694EIRvbN0OnpZwCu0dE5-EQmcB3BoLcCH0QftDu7_4"},
{"content":{"body":"or do we add `new Module` already?","format":"org.matrix.custom.html","formatted_body":"or do we add <code>new Module</code> already?","msgtype":"m.text"},"ts":1680032980928,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CEJaccAnzRKQTX5gg6h5U_lV_7ZxHBn1SsU-R_dhr2U"},
{"content":{"body":"That I am not sure on yet - ljharb: would you be OK with the predicate being the `Module` constructor itself?","format":"org.matrix.custom.html","formatted_body":"That I am not sure on yet - <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: would you be OK with the predicate being the <code>Module</code> constructor itself?","msgtype":"m.text"},"ts":1680033020674,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ"},
{"content":{"body":"We still have 6 weeks to figure it out :D","msgtype":"m.text"},"ts":1680033049909,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$6Kjd4TInGbKiaZ8PlrX6PFtQ5FQ2s2dRQxrkWU1nPZ0"},
{"content":{"body":"how would that work?","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033121942,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Dgd79YtkRdHlxJYdmm7lYax67KV5mbl9C2HccoRzglI"},
{"content":{"body":"like new Module throws unless it has a single argument that‚Äôs a module source instance, and creating a Module has no immediate side effects?","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$Dgd79YtkRdHlxJYdmm7lYax67KV5mbl9C2HccoRzglI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033146442,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WukcEOZU2bDzPEs6ZJLllYCIdor2CfSOuZkwtkoDiac"},
{"content":{"body":"if `new Module(source)` throws it is not a source, if it does not, it is a source","format":"org.matrix.custom.html","formatted_body":"if <code>new Module(source)</code> throws it is not a source, if it does not, it is a source","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$WukcEOZU2bDzPEs6ZJLllYCIdor2CfSOuZkwtkoDiac"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033151606,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$bRGtm661MROdZKcrei1AsTxJcAE0FEVf2s20gvzZH-U"},
{"content":{"body":"creating a module has no side-effects","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$WukcEOZU2bDzPEs6ZJLllYCIdor2CfSOuZkwtkoDiac"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033155395,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$n3b9qRCkRXcazK_Jj0llG43YnU2CfNTSqAaCqC5pxyA"},
{"content":{"body":"evaluation only happens when you call `await import(module)`","format":"org.matrix.custom.html","formatted_body":"evaluation only happens when you call <code>await import(module)</code>","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$n3b9qRCkRXcazK_Jj0llG43YnU2CfNTSqAaCqC5pxyA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033165295,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$HstBo7r9SbAITGebOPmPxVotU7hM4NFNsqo2cSVlbBY"},
{"content":{"body":"seems fine to me. How can i synchronously detect what‚Äôs a Module instance? :-)","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$HstBo7r9SbAITGebOPmPxVotU7hM4NFNsqo2cSVlbBY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033193887,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$unb04XPsD_6XbmY9pbZdQMrsGz7z5J7x2vVFV26YN-8"},
{"content":{"body":"I agree that the `Module` constructor would naturally throw if passed a non-source thing. and it'd return a Module instance directly, not a Promise, so no need to worry about asynchrony.","format":"org.matrix.custom.html","formatted_body":"I agree that the <code>Module</code> constructor would naturally throw if passed a non-source thing. and it'd return a Module instance directly, not a Promise, so no need to worry about asynchrony.","msgtype":"m.text"},"ts":1680033242072,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XuQp0BOMLlEwnSCorjSMn8Xcct1369-sgfCT3v6vzQg"},
{"content":{"body":"We could also have a Module constructor which initially *doesn't* allow an importHook, but this would still maybe not be the best, as the idea for Wasm source imports is that it then *wouldn't* pull in Wasm/ESM integration","format":"org.matrix.custom.html","formatted_body":"We could also have a Module constructor which initially <em>doesn't</em> allow an importHook, but this would still maybe not be the best, as the idea for Wasm source imports is that it then <em>wouldn't</em> pull in Wasm/ESM integration","msgtype":"m.text"},"ts":1680033283694,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$g7bu0wR-wiYBWyh0KhtYFgl0pPRAyeKsuZaie-GkpUA"},
{"content":{"body":"`Module.isModule()`? üòÜ","format":"org.matrix.custom.html","formatted_body":"<code>Module.isModule()</code>? üòÜ","m.relates_to":{"event_id":"$sCPb7miUbRnWSuxsJXAoEd5v5tSdptFPvB76ph9q2uQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$unb04XPsD_6XbmY9pbZdQMrsGz7z5J7x2vVFV26YN-8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033288745,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$ib680snQPB62mNy6rw83_Jn-YeHdJQYHxHgyhWESR-M"},
{"content":{"body":"What do you mean by that? I'd expect Wasm/ESM integration to happen if we ship import reflection. Wasm source import reflection without Wasm/ESM integration seems very weird üòÉ","m.relates_to":{"event_id":"$g7bu0wR-wiYBWyh0KhtYFgl0pPRAyeKsuZaie-GkpUA","is_falling_back":true,"m.in_reply_to":{"event_id":"$g7bu0wR-wiYBWyh0KhtYFgl0pPRAyeKsuZaie-GkpUA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033372182,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$HjU2x9GObXXJCSJ7sj_VtVOSSzyJn1Ii-AlNZN-rEfk"},
{"content":{"body":"well, there had previously been a lot of doubt about whether importing Wasm all the way, directly, was useful for anyone at all. The argument was made that source imports are more useful, and that direct Wasm imports would only really work well with \"the component model\" or something similar to do the glue code for you","m.relates_to":{"event_id":"$g7bu0wR-wiYBWyh0KhtYFgl0pPRAyeKsuZaie-GkpUA","is_falling_back":true,"m.in_reply_to":{"event_id":"$HjU2x9GObXXJCSJ7sj_VtVOSSzyJn1Ii-AlNZN-rEfk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1680033462601,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AInVoiHChVu29tk2cHgMfLJHxNtEdHH4zKdlXXt-no4"}
]