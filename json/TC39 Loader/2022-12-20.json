[
{"content":{"body":"I'll join the meeting ~10 minutes late","msgtype":"m.text"},"ts":1671555460420,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$W5_VlQEELHA0-QZjrVXaMveWG1GRZrUL2NpGENfM_EQ"},
{"content":{"body":"The latest iteration of the syntax proposal as discussed:\n\nhttps://gist.github.com/lucacasonato/6f7db6a449fd7e047999343810309ca0\n\n- Only \"as\" is part of the cache key and it is interpreted exclusively by the host hook. It can be any primitive (including records & tuples when they ship).\n- All other keys in the import options are not cache keys, and are defined and interpreted exclusively by ECMA262. They are never passed to host hooks or the compartments import hook.\n\n","format":"org.matrix.custom.html","formatted_body":"<p>The latest iteration of the syntax proposal as discussed:</p>\n<p>https://gist.github.com/lucacasonato/6f7db6a449fd7e047999343810309ca0</p>\n<ul>\n<li>Only &quot;as&quot; is part of the cache key and it is interpreted exclusively by the host hook. It can be any primitive (including records &amp; tuples when they ship).</li>\n<li>All other keys in the import options are not cache keys, and are defined and interpreted exclusively by ECMA262. They are never passed to host hooks or the compartments import hook.</li>\n</ul>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"The latest iteration of the syntax proposal as discussed:\n\nhttps://gist.github.com/lucacasonato/6f7db6a449fd7e047999343810309ca0\n\n- Only \"as\" is part of the cache key and it is interpreted exclusively by the host hook. It can be any primitive (including records & tuples when they ship).\n- All other keys in the import options are not cache keys, and are defined and interpreted exclusively by ECMA262. They are never passed to host hooks or the compartments import hook.\n\n","mimetype":"text/plain"},{"body":"<p>The latest iteration of the syntax proposal as discussed:</p>\n<p>https://gist.github.com/lucacasonato/6f7db6a449fd7e047999343810309ca0</p>\n<ul>\n<li>Only &quot;as&quot; is part of the cache key and it is interpreted exclusively by the host hook. It can be any primitive (including records &amp; tuples when they ship).</li>\n<li>All other keys in the import options are not cache keys, and are defined and interpreted exclusively by ECMA262. They are never passed to host hooks or the compartments import hook.</li>\n</ul>\n","mimetype":"text/html"}]},"ts":1671561624419,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$k8RCPPJsVDvEAk5YENu0qpsYaKeJpsnBYn-tIbUNVyc"},
{"content":{"body":"Justin Ridgewell, for the record, please confirm your position is that a mechanism that feeds into the cache key is necessary, and an `as <primitive>` + records and tuples as primitives would suffice.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>, for the record, please confirm your position is that a mechanism that feeds into the cache key is necessary, and an <code>as &lt;primitive&gt;</code> + records and tuples as primitives would suffice.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Justin Ridgewell, for the record, please confirm your position is that a mechanism that feeds into the cache key is necessary, and an `as <primitive>` + records and tuples as primitives would suffice.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>, for the record, please confirm your position is that a mechanism that feeds into the cache key is necessary, and an <code>as &lt;primitive&gt;</code> + records and tuples as primitives would suffice.","mimetype":"text/html"}]},"ts":1671562876683,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$zIyUV0B_ySd5GTr_oiTuuurks_3EsVN7hPJY6W1ajWc"},
{"content":{"body":"Let’s get this written up in our minutes. Thank you Luca Casonato ","format":"org.matrix.custom.html","formatted_body":"Let’s get this written up in our minutes. Thank you <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let’s get this written up in our minutes. Thank you Luca Casonato ","mimetype":"text/plain"},{"body":"Let’s get this written up in our minutes. Thank you <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>","mimetype":"text/html"}]},"ts":1671562890487,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fs_jLu8seYWJpjD5knsyFz6veM5sXOQFYRfjzvuQwsk"},
{"content":{"body":"huh, what's the rationale for the # being in the syntax?","msgtype":"m.text","org.matrix.msc1767.text":"huh, what's the rationale for the # being in the syntax?"},"ts":1671563692143,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jetYVgtpabvXP6noi72MNwcgr-JgtjjHRfXmgm-AtK8"},
{"content":{"body":"not all primitives can be included (e.g., symbols can't) so conceiving of this as \"primitives\" seems a little funny","msgtype":"m.text","org.matrix.msc1767.text":"not all primitives can be included (e.g., symbols can't) so conceiving of this as \"primitives\" seems a little funny"},"ts":1671563729482,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Zfr3U9Iy9YZ7swfb_qMyma0dy6HnNFctHcCgFnZtf50"},
{"content":{"body":"The reified value corresponding to the syntax must be a primitive.","msgtype":"m.text","org.matrix.msc1767.text":"The reified value corresponding to the syntax must be a primitive."},"ts":1671563780314,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_0lMfWFqNnHwjguijT_kBv28IhfcqHGeOHGWIlKRBd4"},
{"content":{"body":"ah, OK, why?","msgtype":"m.text","org.matrix.msc1767.text":"ah, OK, why?"},"ts":1671563788594,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Rpz-3U3nBpEH7HE2UHseT91ZEBuuv2StGdCy54l042g"},
{"content":{"body":"In order to ensure that the cache key is canonical.","msgtype":"m.text","org.matrix.msc1767.text":"In order to ensure that the cache key is canonical."},"ts":1671563809909,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IMWL-gMy9D0x7zalJX0YTqzdOgIRZ2n5WKAHVqK8pP8"},
{"content":{"body":"ah","msgtype":"m.text","org.matrix.msc1767.text":"ah"},"ts":1671563827252,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$gSvHn3aoh5w9VgqWvi29a78rjmW6d6H4RHIAubAklio"},
{"content":{"body":"Also, given that this is occurring pre-evaluating, that imposes some limits on what’s expressible.","msgtype":"m.text","org.matrix.msc1767.text":"Also, given that this is occurring pre-evaluating, that imposes some limits on what’s expressible."},"ts":1671563837754,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LH1E8WmvAmNBrkCDkXHOomckIu-64caUBufnOjFXlfI"},
{"content":{"body":"well.... we should keep in mind the possibility that R&T won't go to Stage 3 in their current form","msgtype":"m.text","org.matrix.msc1767.text":"well.... we should keep in mind the possibility that R&T won't go to Stage 3 in their current form"},"ts":1671563857541,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HFuJb6OuqxUpqH0X9O-Np86Onr02tCuxyba0TmRgd10"},
{"content":{"body":"I don't even know if we have consensus on having any kind of syntax for them, at this point.","msgtype":"m.text","org.matrix.msc1767.text":"I don't even know if we have consensus on having any kind of syntax for them, at this point."},"ts":1671563874475,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XGzFF3O_rkJHVsU2D7uFeBCyZTZqwFcrqF1PgEI1sYU"},
{"content":{"body":"That is to say, however the value is lifted off the page, it has to occur in the parse phase, not the evaluation phase, and not in a lexical scope, so what’s expressible is inherently limited. I don’t have strong feelings about how that’s expressed syntactically.","msgtype":"m.text","org.matrix.msc1767.text":"That is to say, however the value is lifted off the page, it has to occur in the parse phase, not the evaluation phase, and not in a lexical scope, so what’s expressible is inherently limited. I don’t have strong feelings about how that’s expressed syntactically."},"ts":1671563891887,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ZXFgZx9d-O-cbSj6tejPSOZ6NquE-af5iK3NPwhHEd0"},
{"content":{"body":"Yeah, we’re aware that this is precarious.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, we’re aware that this is precarious."},"ts":1671563918959,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$48rDHa5WGZZGWECz06q4M3fmJsYk0Uu9SEmzz--J2bw"},
{"content":{"body":"(R&T syntax obviously doesn't imply that it doesn't contain expressions)","msgtype":"m.text","org.matrix.msc1767.text":"(R&T syntax obviously doesn't imply that it doesn't contain expressions)"},"ts":1671563995265,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$m7Z31FFcp9xcdOfSiPQYZXJSJHB1WNmrzyU-kLUhFFM"},
{"content":{"body":"As solutions go, this so far uniquely addresses all the concerns of both cache key formation, separation of the cache key namespace from non-cache key namespace, and extensibility in bundlers such that the portions participating in the cache key are visible to importHook.","msgtype":"m.text","org.matrix.msc1767.text":"As solutions go, this so far uniquely addresses all the concerns of both cache key formation, separation of the cache key namespace from non-cache key namespace, and extensibility in bundlers such that the portions participating in the cache key are visible to importHook."},"ts":1671564001153,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SQZwNTLXaXHs-pm5OUQVYakOfY0hAJuIpswZg6iABjI"}
]