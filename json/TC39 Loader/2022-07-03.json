[
{"content":{"body":"> <@kriskowal:matrix.org> In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565\n\n> The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.\n\nI don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565</blockquote></mx-reply><blockquote>\n<p>The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.</p>\n</blockquote>\n<p>I don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565\n\n> The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.\n\nI don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565</blockquote></mx-reply><blockquote>\n<p>The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.</p>\n</blockquote>\n<p>I don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not</p>\n","mimetype":"text/html"}]},"ts":1656865793611,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tI2ynIL4eU4-0KcGBYkjfJ1HyTm-GWCH4YVe8qX7K_g"},
{"content":{"body":"I also don’t like it, but couldn’t think of an alternative behavior. Answering that point consistently with the current host behavior would be ideal.","msgtype":"m.text","org.matrix.msc1767.text":"I also don’t like it, but couldn’t think of an alternative behavior. Answering that point consistently with the current host behavior would be ideal."},"ts":1656866126826,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$4uI9hCKbAAd4VW52s-MUi2hPuHm5BoWPdI7tMd74H7k"},
{"content":{"body":"But also, if we reduce the scope to `Module` and `ModuleSource` constructors, I don’t believe we have to answer the question in our proposal.","format":"org.matrix.custom.html","formatted_body":"But also, if we reduce the scope to <code>Module</code> and <code>ModuleSource</code> constructors, I don’t believe we have to answer the question in our proposal.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But also, if we reduce the scope to `Module` and `ModuleSource` constructors, I don’t believe we have to answer the question in our proposal.","mimetype":"text/plain"},{"body":"But also, if we reduce the scope to <code>Module</code> and <code>ModuleSource</code> constructors, I don’t believe we have to answer the question in our proposal.","mimetype":"text/html"}]},"ts":1656866165725,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$xZkqTW-ePg6-gdvWWTH1VtDOyFx4yylq0xns-IUaEuE"},
{"content":{"body":"Can't it spread to where the import happens? ","msgtype":"m.text"},"ts":1656866173433,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4Zu5C6cJGgjsJuCzsxpzIc_PVUIhr_VeG4EvVBxc9oY"},
{"content":{"body":"Is that the behavior of dynamic import for a module and its transitive dependencies when any of them contains top-level-await?","msgtype":"m.text","org.matrix.msc1767.text":"Is that the behavior of dynamic import for a module and its transitive dependencies when any of them contains top-level-await?"},"ts":1656866212936,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lTBNAionCkGcu88h4B27E7eXLmfKugUyAok3VO3FcYQ"},
{"content":{"body":"Genuinely, not an expert on TLA.","msgtype":"m.text","org.matrix.msc1767.text":"Genuinely, not an expert on TLA."},"ts":1656866225742,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QRjP0YaLKewFNlDxhbHZaGZuiogBTo4wf5P5e_4Rc3M"},
{"content":{"body":"That is, does the promise returned by dynamic import settle only when all of the transitive dependencies settle for TLA?","msgtype":"m.text","org.matrix.msc1767.text":"That is, does the promise returned by dynamic import settle only when all of the transitive dependencies settle for TLA?"},"ts":1656866283609,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$RkUyT040mvF8NvdA_s0nolI1GR8KBH6-sSvIZPtY21c"},
{"content":{"body":"And I wonder how much code I need to write in the user land for the housekeeping work (e.g. module caching stuff), so I can emulate a normal ES module environment (with some built-in modules and a relative path module resolution)? I would like to see an example. ","msgtype":"m.text"},"ts":1656866328534,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$OEb2Z5eQNnQA6FvXSG3V1M6ILlURHdmLV28KPU4lM4Q"},
{"content":{"body":"> <@kriskowal:matrix.org> Is that the behavior of dynamic import for a module and its transitive dependencies when any of them contains top-level-await?\n\nI believe so, otherwise what should be the result of that dynamic import? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$lTBNAionCkGcu88h4B27E7eXLmfKugUyAok3VO3FcYQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br />Is that the behavior of dynamic import for a module and its transitive dependencies when any of them contains top-level-await?</blockquote></mx-reply>I believe so, otherwise what should be the result of that dynamic import?","m.relates_to":{"m.in_reply_to":{"event_id":"$lTBNAionCkGcu88h4B27E7eXLmfKugUyAok3VO3FcYQ"}},"msgtype":"m.text"},"ts":1656866375561,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$M1hb_8gaAtvqRMNR7VVIxPB-ioUhMNjSpH-GXnv6e4o"}
]