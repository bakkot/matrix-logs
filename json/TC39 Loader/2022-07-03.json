[
{"content":{"body":"> <@kriskowal:matrix.org> In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565\n\n> The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.\n\nI don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565</blockquote></mx-reply><blockquote>\n<p>The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.</p>\n</blockquote>\n<p>I don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565\n\n> The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.\n\nI don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$R6vzCXVsXoaF1NO3bWx6aMHCsNf6uT-quOxlnXMEn2U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>In any case, I sketched this, borrowing as much as possible from the Compartments proposal https://gist.github.com/kriskowal/288d38e62e55e09685bf62c3a3c25565</blockquote></mx-reply><blockquote>\n<p>The compartment will leave that promise to dangle, so an eventual rejection will necessarily go unhandled.</p>\n</blockquote>\n<p>I don't agree with this part. If the module throws sync, it will become a sync error that can be caught, but if the promise dangles, I cannot handle it. This creates inconsistency in if module uses TLA or not</p>\n","mimetype":"text/html"}]},"ts":1656865793611,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tI2ynIL4eU4-0KcGBYkjfJ1HyTm-GWCH4YVe8qX7K_g"}
]