[
{"content":{"body":"Could anyone summarize the conclusions of this conversation?","msgtype":"m.text","org.matrix.msc1767.text":"Could anyone summarize the conclusions of this conversation?"},"ts":1673313049600,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-BOZ0Fmr-MMLPCMObqZtQSL6oz1L1osBVXdBj_TVr6w"},
{"content":{"body":"Kevin might be convinced that a path from module text to evaluated behavior is permissible if 1. no new loopholes to CSP are introduced (and we agree that this is not a concern) 2. the capability is not too easy to find or use, for example made possibly only through a Compartment importHook that returns `{ source }` (but presumably not a Module importHook, and with no ModuleSource constructor. We agree that this does not limit expressible behavior.) and 2. motivation more compelling than just Agoric’s use case can be found. The use cases presented as yet are not sufficiently compelling.","format":"org.matrix.custom.html","formatted_body":"Kevin might be convinced that a path from module text to evaluated behavior is permissible if 1. no new loopholes to CSP are introduced (and we agree that this is not a concern) 2. the capability is not too easy to find or use, for example made possibly only through a Compartment importHook that returns <code>{ source }</code> (but presumably not a Module importHook, and with no ModuleSource constructor. We agree that this does not limit expressible behavior.) and 2. motivation more compelling than just Agoric’s use case can be found. The use cases presented as yet are not sufficiently compelling.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Kevin might be convinced that a path from module text to evaluated behavior is permissible if 1. no new loopholes to CSP are introduced (and we agree that this is not a concern) 2. the capability is not too easy to find or use, for example made possibly only through a Compartment importHook that returns `{ source }` (but presumably not a Module importHook, and with no ModuleSource constructor. We agree that this does not limit expressible behavior.) and 2. motivation more compelling than just Agoric’s use case can be found. The use cases presented as yet are not sufficiently compelling.","mimetype":"text/plain"},{"body":"Kevin might be convinced that a path from module text to evaluated behavior is permissible if 1. no new loopholes to CSP are introduced (and we agree that this is not a concern) 2. the capability is not too easy to find or use, for example made possibly only through a Compartment importHook that returns <code>{ source }</code> (but presumably not a Module importHook, and with no ModuleSource constructor. We agree that this does not limit expressible behavior.) and 2. motivation more compelling than just Agoric’s use case can be found. The use cases presented as yet are not sufficiently compelling.","mimetype":"text/html"}]},"ts":1673322429449,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fKBJ-qqOZJti4NWo3WQO3eTqxCyqXU3woxkko3mYxMs"},
{"content":{"body":"To that end, I might reach out to the community at large to build a coalition. It seems we need some combination of quantity and quality of use cases that we have not yet presented. I believe these exist and we need testimonials.","msgtype":"m.text","org.matrix.msc1767.text":"To that end, I might reach out to the community at large to build a coalition. It seems we need some combination of quantity and quality of use cases that we have not yet presented. I believe these exist and we need testimonials."},"ts":1673322559406,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$0YokgQsahnDrfFB0COfTnZnmDxGbvsjbUU2kKRAT8L8"},
{"content":{"body":"my primary use case is being able to test module-level syntax features, like TLA, without necessarily needing a filesystem to be present. That's already what I use Function for (and potentially AsyncFunction, GeneratorFunction, and AsyncGeneratorFunction as well).","msgtype":"m.text","org.matrix.msc1767.text":"my primary use case is being able to test module-level syntax features, like TLA, without necessarily needing a filesystem to be present. That's already what I use Function for (and potentially AsyncFunction, GeneratorFunction, and AsyncGeneratorFunction as well)."},"ts":1673322877783,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bZRGpupRW5k5uAtR-EYlFh3CvAKvfHqf_LzCaeIE6dI"},
{"content":{"body":"ljharb, could you elaborate on what the testing is for? I take it that this is for a polyfill, rather than test262-related (where we could add extra host callbacks)","msgtype":"m.text","org.matrix.msc1767.text":"ljharb, could you elaborate on what the testing is for? I take it that this is for a polyfill, rather than test262-related (where we could add extra host callbacks)"},"ts":1673323287250,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vPoxv2K2iFA244_HKN8D9inQF-u2EWo-0SXrgypJvVo"},
{"content":{"body":"I take it that the use case has to be something that bakkot can be convinced is important enough (since he questioned that above); maybe context from ljharb could meet that requirement","format":"org.matrix.custom.html","formatted_body":"I take it that the use case has to be something that <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> can be convinced is important enough (since he questioned that above); maybe context from ljharb could meet that requirement","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I take it that the use case has to be something that bakkot can be convinced is important enough (since he questioned that above); maybe context from ljharb could meet that requirement","mimetype":"text/plain"},{"body":"I take it that the use case has to be something that <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> can be convinced is important enough (since he questioned that above); maybe context from ljharb could meet that requirement","mimetype":"text/html"}]},"ts":1673323356963,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nO_tZtAonXAVQgn_J89MzDesnq7zuUSA80jyxNZWm_4"},
{"content":{"body":"yes, polyfills or environment testing packages - like “has object spread” or “has top-level await”","msgtype":"m.text"},"ts":1673323610373,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$cmqe0Rl2z7fdUenvlygQeMyyRNJfBKDxKNXejmVwKA8"},
{"content":{"body":"or “has Unicode named exports”, or any new syntax we add to the top level of Modules in the future","msgtype":"m.text"},"ts":1673323639317,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Cc0F1fDpGRVnP-iFLhQd1YvJxfK8DOC4RMPV6xYI3rY"},
{"content":{"body":"until we ship a syntax detection mechanism (which we may never do), eval is the only viable alternative.","msgtype":"m.text"},"ts":1673323676611,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Zut3kSoXPwNy4JhMFZRts6JRx8NFBvKcG1AFduEqMfs"},
{"content":{"body":"Could you say more about why ModuleSource helps you do something that you can't do with plain eval?","msgtype":"m.text","org.matrix.msc1767.text":"Could you say more about why ModuleSource helps you do something that you can't do with plain eval?"},"ts":1673323920204,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EP7vUZxKFskKg-c516Ttyz-1luaGWQLr3bip1190uIk"}
]