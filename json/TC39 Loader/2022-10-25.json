[
{"content":{"body":"I plan to attend the Module Harmony call today, but will not be able to speak due to a very temporary but inconvenient illness.","msgtype":"m.text","org.matrix.msc1767.text":"I plan to attend the Module Harmony call today, but will not be able to speak due to a very temporary but inconvenient illness."},"ts":1666708208858,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bKofcTPhES2ji15BXPZaGa1k-clR7afnkygpNHF2nkA"},
{"content":{"body":"I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be _exceedingly weird_ if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws `Module` constructor indefinitely.","format":"org.matrix.custom.html","formatted_body":"I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be <em>exceedingly weird</em> if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws <code>Module</code> constructor indefinitely.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be _exceedingly weird_ if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws `Module` constructor indefinitely.","mimetype":"text/plain"},{"body":"I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be <em>exceedingly weird</em> if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws <code>Module</code> constructor indefinitely.","mimetype":"text/html"}]},"ts":1666708417184,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oDhyjzjyUd5Pi9UgCqWnVNC9r7hhM6ay7W0xBUE9Q0Q"},
{"content":{"body":"And I _do_ like to continue framing these proposals as ordered incremental advancements, just for sake of reviewability, but if folks overwhelmingly wanted to mix them in a big pot, I wouldn’t resist.","format":"org.matrix.custom.html","formatted_body":"And I <em>do</em> like to continue framing these proposals as ordered incremental advancements, just for sake of reviewability, but if folks overwhelmingly wanted to mix them in a big pot, I wouldn’t resist.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And I _do_ like to continue framing these proposals as ordered incremental advancements, just for sake of reviewability, but if folks overwhelmingly wanted to mix them in a big pot, I wouldn’t resist.","mimetype":"text/plain"},{"body":"And I <em>do</em> like to continue framing these proposals as ordered incremental advancements, just for sake of reviewability, but if folks overwhelmingly wanted to mix them in a big pot, I wouldn’t resist.","mimetype":"text/html"}]},"ts":1666708511362,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bzy1DI5dMd4bsgUFGZVwWy8rOIk0me1iwCk_xEY9LZA"},
{"content":{"body":"I would like to convince @caridy that he or we should put Layer 0 on the agenda for A Coruña.","msgtype":"m.text","org.matrix.msc1767.text":"I would like to convince @caridy that he or we should put Layer 0 on the agenda for A Coruña."},"ts":1666708588412,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8frlt8NuKkPjgZJJPqY0b44Bw2IUIJZmJSmlWn37So0"},
{"content":{"body":"i cannot attend today, might be checking out some wasm in-person cg stuff this week","msgtype":"m.text","org.matrix.msc1767.text":"i cannot attend today, might be checking out some wasm in-person cg stuff this week"},"ts":1666709972301,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dZJcc53-3KSrMzirPXB1NlLXmA3pgwVXbUStMR9qc-8"},
{"content":{"body":"> <@kriskowal:matrix.org> I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be _exceedingly weird_ if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws `Module` constructor indefinitely.\n\nI agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$oDhyjzjyUd5Pi9UgCqWnVNC9r7hhM6ay7W0xBUE9Q0Q?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be <em>exceedingly weird</em> if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws <code>Module</code> constructor indefinitely.</blockquote></mx-reply>I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.","m.relates_to":{"m.in_reply_to":{"event_id":"$oDhyjzjyUd5Pi9UgCqWnVNC9r7hhM6ay7W0xBUE9Q0Q"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be _exceedingly weird_ if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws `Module` constructor indefinitely.\n\nI agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$oDhyjzjyUd5Pi9UgCqWnVNC9r7hhM6ay7W0xBUE9Q0Q?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I believe we need to talk about our intentions regarding advancement, particularly for First-class Module and ModuleSource (from Compartments: Layer 0) and Module Blocks. In my opinion, we should ask for Stage 2 for Module and ModuleSource constructors. I don’t have strong feelings about coupling with Module Blocks (I think Nicolò has done good work keeping the proposals loosely coupled) but I do share @ljharb’s opinion that it would be <em>exceedingly weird</em> if Module Blocks landed and we never managed to pull Module Constructor over the line, since that would leave us with an always-throws <code>Module</code> constructor indefinitely.</blockquote></mx-reply>I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.","mimetype":"text/html"}]},"ts":1666710758210,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dPg_2FvpY5uTZsfqpeQnaQ22SYxx73ZcnfbaLVs8X7Y"},
{"content":{"body":"Well, I guess if that unfortunate case happens we could make `new Module` accept a string, after being certain that Layer 0 cannot advance as-is","format":"org.matrix.custom.html","formatted_body":"Well, I guess if that unfortunate case happens we could make <code>new Module</code> accept a string, after being certain that Layer 0 cannot advance as-is","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Well, I guess if that unfortunate case happens we could make `new Module` accept a string, after being certain that Layer 0 cannot advance as-is","mimetype":"text/plain"},{"body":"Well, I guess if that unfortunate case happens we could make <code>new Module</code> accept a string, after being certain that Layer 0 cannot advance as-is","mimetype":"text/html"}]},"ts":1666710814409,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ugrkqBFR5cXz9qhr5jPvt-dHPWeAUbYgM55k0nRAvNI"},
{"content":{"body":"I'm not feeling well too, so I'm not sure if I will attend (but I started not feeling well suddenly, so it might end suddenly soon, who knows)","msgtype":"m.text","org.matrix.msc1767.text":"I'm not feeling well too, so I'm not sure if I will attend (but I started not feeling well suddenly, so it might end suddenly soon, who knows)"},"ts":1666710931690,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JXxbVJkJmxDIPr7y06LiYc0FWJIK4hD_L7c6J7mDYTw"},
{"content":{"body":"* I'm not feeling well too, so I'm not sure if I will attend (but I started not feeling well suddenly, so it might end suddenly soon, who knows)\n\nEDIT: I'll join","m.new_content":{"body":"I'm not feeling well too, so I'm not sure if I will attend (but I started not feeling well suddenly, so it might end suddenly soon, who knows)\n\nEDIT: I'll join","msgtype":"m.text"},"m.relates_to":{"event_id":"$JXxbVJkJmxDIPr7y06LiYc0FWJIK4hD_L7c6J7mDYTw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1666713072239,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$uW18u_sBj4JJUopicQSO7B-2_mNAcNXUEkxF6bFmR30"},
{"content":{"body":"I also can't attend today, sorry","msgtype":"m.text","org.matrix.msc1767.text":"I also can't attend today, sorry"},"ts":1666713867909,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FP416PsoRk3HFPswEkfj_m0dg7luPpu_nVGt0GlcrXY"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.\n\nHmm, I guess I wouldn't mind this end state","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$dPg_2FvpY5uTZsfqpeQnaQ22SYxx73ZcnfbaLVs8X7Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.</blockquote></mx-reply>Hmm, I guess I wouldn't mind this end state","m.relates_to":{"m.in_reply_to":{"event_id":"$dPg_2FvpY5uTZsfqpeQnaQ22SYxx73ZcnfbaLVs8X7Y"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@nicolo-ribaudo:matrix.org> I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.\n\nHmm, I guess I wouldn't mind this end state","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$dPg_2FvpY5uTZsfqpeQnaQ22SYxx73ZcnfbaLVs8X7Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>I agree: I don't think the proposals should be too copuled, but I don't want to have a future JavaScript with just module blocks and with Layer 0 objected.</blockquote></mx-reply>Hmm, I guess I wouldn't mind this end state","mimetype":"text/html"}]},"ts":1666713896413,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$75jQgF5C0evsmAdYF2kRWgR8PVPmFn2YG7UTzCsT6PQ"}
]