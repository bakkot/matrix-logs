[
{"content":{"body":"https://github.com/tc39/proposal-compartments/pull/78/\n\nI tried to implement this change but I found it is invalid","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-compartments/pull/78/\n\nI tried to implement this change but I found it is invalid"},"ts":1664003384032,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UZAugMk4_jMRwANCzW3-3830S5WbDWiZOoDDoNjRQ48"},
{"content":{"body":"the referral parts goes away","msgtype":"m.text","org.matrix.msc1767.text":"the referral parts goes away"},"ts":1664003400188,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ju7h41UHNkYs3jcMim_wEqSpvnW2X3Us5V3I-mueFJc"},
{"content":{"body":"At the last SES meeting, we agreed that I’d add a non-normative note that the \"options bag\" is passed as `this` to the hooks, so you can use `this.referrer` in an `importHook`.","format":"org.matrix.custom.html","formatted_body":"At the last SES meeting, we agreed that I’d add a non-normative note that the &quot;options bag&quot; is passed as <code>this</code> to the hooks, so you can use <code>this.referrer</code> in an <code>importHook</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"At the last SES meeting, we agreed that I’d add a non-normative note that the \"options bag\" is passed as `this` to the hooks, so you can use `this.referrer` in an `importHook`.","mimetype":"text/plain"},{"body":"At the last SES meeting, we agreed that I’d add a non-normative note that the &quot;options bag&quot; is passed as <code>this</code> to the hooks, so you can use <code>this.referrer</code> in an <code>importHook</code>.","mimetype":"text/html"}]},"ts":1664032845763,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$uhFQYT5if7DSebxuwiWjNhj5IzsGAkB2dqy-K4gTnPM"},
{"content":{"body":"> <@kriskowal:matrix.org> At the last SES meeting, we agreed that I’d add a non-normative note that the \"options bag\" is passed as `this` to the hooks, so you can use `this.referrer` in an `importHook`.\n\nThat's very unintuitive ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$uhFQYT5if7DSebxuwiWjNhj5IzsGAkB2dqy-K4gTnPM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br />At the last SES meeting, we agreed that I’d add a non-normative note that the &quot;options bag&quot; is passed as <code>this</code> to the hooks, so you can use <code>this.referrer</code> in an <code>importHook</code>.</blockquote></mx-reply>That's very unintuitive","m.relates_to":{"m.in_reply_to":{"event_id":"$uhFQYT5if7DSebxuwiWjNhj5IzsGAkB2dqy-K4gTnPM"}},"msgtype":"m.text"},"ts":1664033074417,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fgQT3tHDsaQ59XqaE1k9LxCyl1BN0eGgp8YBW37N85E"},
{"content":{"body":"Proxy handler supports sharing between multiple proxy","msgtype":"m.text"},"ts":1664033098459,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$y3KxMV2XYH1UmCOtK2-1-qin9ZfK5qChQbQ87pkgqV0"},
{"content":{"body":"And it's real target is given by the first argument ","msgtype":"m.text"},"ts":1664033113607,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ossuRH4SdXbsZCLs8kdn-1omwzG_mI3sKA5jjCnzZ5g"},
{"content":{"body":"If this design requires different object instance for each module, it will be a performance cliff ","msgtype":"m.text"},"ts":1664033148100,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$W8JWCX-fXYyZrjvpepzAzKjr-V2q476_bra91L-KQqo"},
{"content":{"body":"I’ve been unable to convince Caridy that referrer should be explicitly mentioned. He’s quite adamant about leaving it to user code.","msgtype":"m.text","org.matrix.msc1767.text":"I’ve been unable to convince Caridy that referrer should be explicitly mentioned. He’s quite adamant about leaving it to user code."},"ts":1664034750456,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$pOrANM8Xsg9mimpIJ4mIB8eTh4nbea2FuUpikRFomr8"},
{"content":{"body":"Caridy does accept that the hooks themselves cannot be per-module closures.","msgtype":"m.text","org.matrix.msc1767.text":"Caridy does accept that the hooks themselves cannot be per-module closures."},"ts":1664034773666,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$-jOAUk3KKdy85dr4rBK_Eiq8XodtlX4yBMuqVY3dihg"},
{"content":{"body":"In any case, Caridy is the one among us who needs to be convinced. In our last SES call, Caridy convinced Mark and me at least that his design does not limit expressivity.","msgtype":"m.text","org.matrix.msc1767.text":"In any case, Caridy is the one among us who needs to be convinced. In our last SES call, Caridy convinced Mark and me at least that his design does not limit expressivity."},"ts":1664034878427,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VfGYNch9YD3zs5PVYyaxdwtWV4Jta8FwF0KKJaS5RX0"},
{"content":{"body":"The middle ground between Caridy's and Jack's positions is to use `new Module(source, handler, thisArg/context)`, rather than mixing the handler and the thisArg in the same parameter. This also feels cleaner, since we have a clearly separation between \"an object with clearly defined properties\" and \"something that the user can use as they wish\"","msgtype":"m.text"},"ts":1664035750530,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$KzxKdrTJh-RlmhnH-SUFEyBZc_A0ZILkTGGWBzm6C98"},
{"content":{"body":"(I propose it as a middle ground to not mention the referrer while still reusing the same handler object every time, but it also happens to be my favourite design)","msgtype":"m.text"},"ts":1664035811204,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wcReu28MZtMYlleKRNojUx_tQ03okTu0TlDRMur5mEk"}
]