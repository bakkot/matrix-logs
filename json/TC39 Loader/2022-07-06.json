[
{"content":{"body":"I’ve finished a deck for tomorrow, should time permit. I added this to the end of the meeting as it shows where I think we’re converging. https://drive.google.com/file/d/1_juf8l8PCrVHA4iA1G4BwQ1JsuXMjOVa/view","msgtype":"m.text","org.matrix.msc1767.text":"I’ve finished a deck for tomorrow, should time permit. I added this to the end of the meeting as it shows where I think we’re converging. https://drive.google.com/file/d/1_juf8l8PCrVHA4iA1G4BwQ1JsuXMjOVa/view"},"ts":1657069626251,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$p6hyPwxe9z3nkLsvgELZphMdRieClvuSgw_0CTn57Rc"},
{"content":{"body":"> <@kriskowal:matrix.org> I’ve finished a deck for tomorrow, should time permit. I added this to the end of the meeting as it shows where I think we’re converging. https://drive.google.com/file/d/1_juf8l8PCrVHA4iA1G4BwQ1JsuXMjOVa/view\n\nI like this. Where does the module descriptor go? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$p6hyPwxe9z3nkLsvgELZphMdRieClvuSgw_0CTn57Rc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br />I’ve finished a deck for tomorrow, should time permit. I added this to the end of the meeting as it shows where I think we’re converging. https://drive.google.com/file/d/1_juf8l8PCrVHA4iA1G4BwQ1JsuXMjOVa/view</blockquote></mx-reply>I like this. Where does the module descriptor go?","m.relates_to":{"m.in_reply_to":{"event_id":"$p6hyPwxe9z3nkLsvgELZphMdRieClvuSgw_0CTn57Rc"}},"msgtype":"m.text"},"ts":1657090408016,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5b0M73VDwaHHJzGCucLr2LCEAhsboEWn9OH1K11c5Ys"},
{"content":{"body":"Module descriptors cease to be necessary. When implementing a Compartment in user code, module instances replace module descriptors. User-mode Compartments aren’t able to address modules from the host compartment by name, but import reflection replaces that role.","msgtype":"m.text","org.matrix.msc1767.text":"Module descriptors cease to be necessary. When implementing a Compartment in user code, module instances replace module descriptors. User-mode Compartments aren’t able to address modules from the host compartment by name, but import reflection replaces that role."},"ts":1657091482336,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_fwAwC8wqEtcDtM-8v6574m8hGDi7CJSc760cRuc5pY"},
{"content":{"body":"e.g., `defer import fs from 'fs'; new Compartment{{ modules: { fs } }).import('fs')` is a possible solution with a user-code Compartment implementation.","format":"org.matrix.custom.html","formatted_body":"e.g., <code>defer import fs from 'fs'; new Compartment{{ modules: { fs } }).import('fs')</code> is a possible solution with a user-code Compartment implementation.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"e.g., `defer import fs from 'fs'; new Compartment{{ modules: { fs } }).import('fs')` is a possible solution with a user-code Compartment implementation.","mimetype":"text/plain"},{"body":"e.g., <code>defer import fs from 'fs'; new Compartment{{ modules: { fs } }).import('fs')</code> is a possible solution with a user-code Compartment implementation.","mimetype":"text/html"}]},"ts":1657091636058,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Lp24nRR1lBwHHLpx6LAByuXUqMiJB-Ey6DnXu2Aj0mc"},
{"content":{"body":"(where `defer import` is import reflection. I haven’t seen a syntax I like for that yet, so just riffing here.)","format":"org.matrix.custom.html","formatted_body":"(where <code>defer import</code> is import reflection. I haven’t seen a syntax I like for that yet, so just riffing here.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(where `defer import` is import reflection. I haven’t seen a syntax I like for that yet, so just riffing here.)","mimetype":"text/plain"},{"body":"(where <code>defer import</code> is import reflection. I haven’t seen a syntax I like for that yet, so just riffing here.)","mimetype":"text/html"}]},"ts":1657091697283,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IWz-3DDWrpMDpFPKSOYn-iXnMbAiDTH5PPCTofLgeuE"},
{"content":{"body":"Actually, for inter-compartment linkage, we would have to implement module-descriptors in user code.","msgtype":"m.text","org.matrix.msc1767.text":"Actually, for inter-compartment linkage, we would have to implement module-descriptors in user code."},"ts":1657092186820,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$tHe6r4t-dCREn05tfyLscFYhBv-TFfulHUhbdzrhPiA"},
{"content":{"body":"Are any champions going to seek advancement for module proposals at the next plenary?","msgtype":"m.text","org.matrix.msc1767.text":"Are any champions going to seek advancement for module proposals at the next plenary?"},"ts":1657135780452,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YzBsoqbG5mXJmMzPdV2Q-UMxMl8waDC5xwvMORdMy5M"},
{"content":{"body":"We are planning to seek stage 2","msgtype":"m.text"},"ts":1657135840510,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$XuIdDYZ3t30NWL-q6_hzfuqOQAhhdI_kS5GjmEFsUrA"},
{"content":{"body":"I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2.","msgtype":"m.text","org.matrix.msc1767.text":"I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2."},"ts":1657135941263,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$vrefnSWy6HfswECvv6YVOe6t4xJ4o_t42jh6pKOfZdo"},
{"content":{"body":"In my opinion, none of our proposals should advance until we have a shared foundation, and as far as I’m concerned, that shared foundation could be bundled into any proposal seeking stage 2 or greater.","msgtype":"m.text","org.matrix.msc1767.text":"In my opinion, none of our proposals should advance until we have a shared foundation, and as far as I’m concerned, that shared foundation could be bundled into any proposal seeking stage 2 or greater."},"ts":1657136010932,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FEEkM4jmm606sOEO62S-BefCOezGsjoZF-A4SCvKxzA"},
{"content":{"body":"By the shared foundation, I mean the modifications to the abstract module record hierarchy on which we all likely depend.","msgtype":"m.text","org.matrix.msc1767.text":"By the shared foundation, I mean the modifications to the abstract module record hierarchy on which we all likely depend."},"ts":1657136067119,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$GDOl3L5G6OP1a1ElhhaPHxfvhpTuBj3i1XjmqpEhPyk"},
{"content":{"body":" * I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony report, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2.","m.new_content":{"body":"I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony report, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2.","msgtype":"m.text","org.matrix.msc1767.text":"I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony report, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2."},"m.relates_to":{"event_id":"$vrefnSWy6HfswECvv6YVOe6t4xJ4o_t42jh6pKOfZdo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I propose that I repurpose the slot I’ve reserved for compartments to deliver a module harmony report, based on where we are as of this morning. My impression is that we need more work on module harmony before we have a proposal that can advance to Stage 2."},"ts":1657136122467,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bgPBE4D8k0RIHTFteOrpKr1wgLu4ObwZCuZy6Pjxn1A"},
{"content":{"body":" * By the shared foundation, I mean the additions to the abstract module record hierarchy on which we all likely depend.","m.new_content":{"body":"By the shared foundation, I mean the additions to the abstract module record hierarchy on which we all likely depend.","msgtype":"m.text","org.matrix.msc1767.text":"By the shared foundation, I mean the additions to the abstract module record hierarchy on which we all likely depend."},"m.relates_to":{"event_id":"$GDOl3L5G6OP1a1ElhhaPHxfvhpTuBj3i1XjmqpEhPyk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * By the shared foundation, I mean the additions to the abstract module record hierarchy on which we all likely depend."},"ts":1657136184472,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LyFWrmt_NGeH2_E7PrNlFunwl7AukHX6vTEQcxM8wSY"},
{"content":{"body":"Kris Kowal: I'm not sure we should let specification editorial details block individual proposals. As long as each proposal is semantically sound, and we are tackling the shared interaction problems, I don't think we need to converge on sharing exact spec text between proposals especially at this stage.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: I'm not sure we should let specification editorial details block individual proposals. As long as each proposal is semantically sound, and we are tackling the shared interaction problems, I don't think we need to converge on sharing exact spec text between proposals especially at this stage.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Kris Kowal: I'm not sure we should let specification editorial details block individual proposals. As long as each proposal is semantically sound, and we are tackling the shared interaction problems, I don't think we need to converge on sharing exact spec text between proposals especially at this stage.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: I'm not sure we should let specification editorial details block individual proposals. As long as each proposal is semantically sound, and we are tackling the shared interaction problems, I don't think we need to converge on sharing exact spec text between proposals especially at this stage.","mimetype":"text/html"}]},"ts":1657136252950,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$MAd-i-d3nsbIXMAY_fCyfgwxd8TNfHdfQXCyzr1fxLs"},
{"content":{"body":"For import reflection, I think the syntax pivot is good. I can see `import module` and `import static module`. I would be okay with `import static module` reifying the literal WASM `Module` object provided that it can be passed to a `new Module(wasmSource, importHook, importMeta)` when first-class modules come.","format":"org.matrix.custom.html","formatted_body":"For import reflection, I think the syntax pivot is good. I can see <code>import module</code> and <code>import static module</code>. I would be okay with <code>import static module</code> reifying the literal WASM <code>Module</code> object provided that it can be passed to a <code>new Module(wasmSource, importHook, importMeta)</code> when first-class modules come.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For import reflection, I think the syntax pivot is good. I can see `import module` and `import static module`. I would be okay with `import static module` reifying the literal WASM `Module` object provided that it can be passed to a `new Module(wasmSource, importHook, importMeta)` when first-class modules come.","mimetype":"text/plain"},{"body":"For import reflection, I think the syntax pivot is good. I can see <code>import module</code> and <code>import static module</code>. I would be okay with <code>import static module</code> reifying the literal WASM <code>Module</code> object provided that it can be passed to a <code>new Module(wasmSource, importHook, importMeta)</code> when first-class modules come.","mimetype":"text/html"}]},"ts":1657136305970,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8K5RIJn4ygbXfDPd2MG6EA8JvNG8PZallxCXLkcZcD0"},
{"content":{"body":"My understanding is that stage 2 requires tentative spec text. I’m asking that any proposal that advances have tentative spec text that is sufficient for any other module proposal to build upon.","msgtype":"m.text","org.matrix.msc1767.text":"My understanding is that stage 2 requires tentative spec text. I’m asking that any proposal that advances have tentative spec text that is sufficient for any other module proposal to build upon."},"ts":1657136400590,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mm4GZ9ReJ436FPYqEEiYUmI89-u7eG7yYd6JugvpSxs"},
{"content":{"body":"I could be wrong. This is my first stage advancement rodeo.","msgtype":"m.text","org.matrix.msc1767.text":"I could be wrong. This is my first stage advancement rodeo."},"ts":1657136425575,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qnCotwoHKd_YgKiKhezY6glj6FZPlecziVDNZNH8Hxg"},
{"content":{"body":"But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue.","msgtype":"m.text","org.matrix.msc1767.text":"But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue."},"ts":1657136471948,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$F7A0EJmOO6X39ytcqCv0zpKBGhUW6siDJAEASFvBvM4"},
{"content":{"body":" * But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue.","m.new_content":{"body":"But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue.","msgtype":"m.text","org.matrix.msc1767.text":"But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue."},"m.relates_to":{"event_id":"$F7A0EJmOO6X39ytcqCv0zpKBGhUW6siDJAEASFvBvM4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * But I believe the guiding principle is right: we should not paint ourselves into a corner that would preclude advancement of other proposals, or produce avoidable scar tissue."},"ts":1657136478814,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$hJuGlPrh1jWux4z242J6b9kZtLjIYf7UdYLsKZbaWyE"},
{"content":{"body":"But I’ll qualify that: spec text scar tissue does not bother me. Reified object scar tissue does.","msgtype":"m.text","org.matrix.msc1767.text":"But I’ll qualify that: spec text scar tissue does not bother me. Reified object scar tissue does."},"ts":1657136502719,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fQHi_t8rO682X7hgGabYEhMRjKUy26_TqBF6SnoGrK4"},
{"content":{"body":"Right, although Stage 2 is not an implementation stage","msgtype":"m.text","org.matrix.msc1767.text":"Right, although Stage 2 is not an implementation stage"},"ts":1657136530007,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$BlCJNDWGPUiYGlVMfvBwiMRv1SdUOeqIwmmd9Z99c5E"},
{"content":{"body":"Only at Stage 3 does scarring start to occur!","msgtype":"m.text","org.matrix.msc1767.text":"Only at Stage 3 does scarring start to occur!"},"ts":1657136544275,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$nDZO8FTic7rwexgZX_HABIcsW-NoZoMdjCrZHC6Xt1U"},
{"content":{"body":"In our current specification we defined the mechanics of the reflection, but we have left the actual reflection object being returned to be entirely defined by the host for now","msgtype":"m.text","org.matrix.msc1767.text":"In our current specification we defined the mechanics of the reflection, but we have left the actual reflection object being returned to be entirely defined by the host for now"},"ts":1657136590411,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$NtfYUlwKHjLhHklkP0BoayEWHmU_rweus3TX9ocZlx8"},
{"content":{"body":"through a HostResolveModuleReflection hook","msgtype":"m.text","org.matrix.msc1767.text":"through a HostResolveModuleReflection hook"},"ts":1657136602001,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5CFfJCW6bY59dDJr7OXn-enRq2aK2Fm4yc2YLhmd4qc"},
{"content":{"body":"our hope is that this is clear enough for stage 2, without being too prescriptive yet","msgtype":"m.text","org.matrix.msc1767.text":"our hope is that this is clear enough for stage 2, without being too prescriptive yet"},"ts":1657136616348,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$DxkrTsJmLBwfuXNHAz1iBMF6UA9k6kNbEujjfmeqg5c"},
{"content":{"body":"we would hope to refine for stage 3 some further invariants around the resolution and exact JS reflection object","msgtype":"m.text","org.matrix.msc1767.text":"we would hope to refine for stage 3 some further invariants around the resolution and exact JS reflection object"},"ts":1657136634298,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$IfKGpDPnxjCcsFqghShp5TaEFgL05A7I9dqw9oO5WQ4"},
{"content":{"body":"but for now we just treat it as host defined","msgtype":"m.text","org.matrix.msc1767.text":"but for now we just treat it as host defined"},"ts":1657136642690,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$B6qr85RmWoYufWA_lkXXoo-OfZSj7z76YbWYbzOXG0A"},
{"content":{"body":"I would be interested to hear if that mitigates your concerns, the spec text PR is up at https://github.com/tc39/proposal-import-reflection/pull/21 and should be landing soon","msgtype":"m.text","org.matrix.msc1767.text":"I would be interested to hear if that mitigates your concerns, the spec text PR is up at https://github.com/tc39/proposal-import-reflection/pull/21 and should be landing soon"},"ts":1657136675315,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$_LXZyET_KPEirlRiZe8yz8oQBkWi8qOp7OxB7mVLFxI"},
{"content":{"body":"I’ll give it a read.","msgtype":"m.text","org.matrix.msc1767.text":"I’ll give it a read."},"ts":1657136687021,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gRnFQogQPw5t-rGYQatZDpLtNFLfXYWXfv2m87sH1Ac"},
{"content":{"body":"The invariant I would hope to preserve would be `new Module(x, …rest)` would work for any `x` reflected by `import static module ...`.","format":"org.matrix.custom.html","formatted_body":"The invariant I would hope to preserve would be <code>new Module(x, …rest)</code> would work for any <code>x</code> reflected by <code>import static module ...</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"The invariant I would hope to preserve would be `new Module(x, …rest)` would work for any `x` reflected by `import static module ...`.","mimetype":"text/plain"},{"body":"The invariant I would hope to preserve would be <code>new Module(x, …rest)</code> would work for any <code>x</code> reflected by <code>import static module ...</code>.","mimetype":"text/html"}]},"ts":1657136726526,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$y_f0LlPJHvNdCqDzI8T6JAVnW7uzEx8KONDBoCwlVcQ"},
{"content":{"body":"And I would cut it as fine as differentiating `import module` from `import module static`.","format":"org.matrix.custom.html","formatted_body":"And I would cut it as fine as differentiating <code>import module</code> from <code>import module static</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And I would cut it as fine as differentiating `import module` from `import module static`.","mimetype":"text/plain"},{"body":"And I would cut it as fine as differentiating <code>import module</code> from <code>import module static</code>.","mimetype":"text/html"}]},"ts":1657136753729,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6_fadF0OFKbRUusHi8WDvsFN1NqNlC9mk_xnEh2T0vA"},
{"content":{"body":"I think it is important that `import module x from 'x.any'` should always produce `x instanceof Module` whereas there’re more degrees of freedom for `import static module x from 'x.any'`.","format":"org.matrix.custom.html","formatted_body":"I think it is important that <code>import module x from 'x.any'</code> should always produce <code>x instanceof Module</code> whereas there’re more degrees of freedom for <code>import static module x from 'x.any'</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think it is important that `import module x from 'x.any'` should always produce `x instanceof Module` whereas there’re more degrees of freedom for `import static module x from 'x.any'`.","mimetype":"text/plain"},{"body":"I think it is important that <code>import module x from 'x.any'</code> should always produce <code>x instanceof Module</code> whereas there’re more degrees of freedom for <code>import static module x from 'x.any'</code>.","mimetype":"text/html"}]},"ts":1657136829639,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$y915Wg31uV3RPNsAFTcyY89F19R2JrMWWele79RYOA8"},
{"content":{"body":"as mentioned in the meeting, we are only interested in the `import module` being the `import static module` case you describe","format":"org.matrix.custom.html","formatted_body":"as mentioned in the meeting, we are only interested in the <code>import module</code> being the <code>import static module</code> case you describe","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"as mentioned in the meeting, we are only interested in the `import module` being the `import static module` case you describe","mimetype":"text/plain"},{"body":"as mentioned in the meeting, we are only interested in the <code>import module</code> being the <code>import static module</code> case you describe","mimetype":"text/html"}]},"ts":1657136846843,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$X9VxWn18VzdwWrVfhSQk8JGZuNu7as-ZQspEL-GznJM"},
{"content":{"body":"I’m interested in both existing.","msgtype":"m.text","org.matrix.msc1767.text":"I’m interested in both existing."},"ts":1657136861074,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VsoN6GpguNBrKv2OGDm2w_vY-437792udNLDZ1lhGqU"},
{"content":{"body":"we don't have a use case for the module instance reflection","msgtype":"m.text","org.matrix.msc1767.text":"we don't have a use case for the module instance reflection"},"ts":1657136861815,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$dkTrzrKKokLyi9ysEVugJKVMidkj4Df3v6dxR2hDORA"},
{"content":{"body":"Deferred execution is the motivating case for module instance reflection.","msgtype":"m.text","org.matrix.msc1767.text":"Deferred execution is the motivating case for module instance reflection."},"ts":1657136877458,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$aULs1U5HhIB4fp9a4j1SeVZQ8YFkl8jP1Tqt6pgXOLA"},
{"content":{"body":"specifically - what would the import hook be for an implicit instance reflection?","msgtype":"m.text","org.matrix.msc1767.text":"specifically - what would the import hook be for an implicit instance reflection?"},"ts":1657136885160,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$imM0mvINOmQmKYdOixnSMcBRvvxGP7R14R4meJsjqHo"},
{"content":{"body":"deferred execution is not a use case of reflection either, and we have mentioned before this is separate specification work","msgtype":"m.text","org.matrix.msc1767.text":"deferred execution is not a use case of reflection either, and we have mentioned before this is separate specification work"},"ts":1657136919833,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$vhGYjtEQIBKFmrtcrkuC0aD5mD9glPOREmBJPX0x9yY"},
{"content":{"body":"import instance reflection would inherit the surrounding module instance’s import hook.","msgtype":"m.text","org.matrix.msc1767.text":"import instance reflection would inherit the surrounding module instance’s import hook."},"ts":1657136931661,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$B1nXGY3Zz81JVbXwUEN9Mnrfozr2JaJLpJi4fQMDMUc"},
{"content":{"body":"In my current mental model, these occupy overlapping syntactic space that should be coherent when we have solutions to both problems.","msgtype":"m.text","org.matrix.msc1767.text":"In my current mental model, these occupy overlapping syntactic space that should be coherent when we have solutions to both problems."},"ts":1657136977897,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bGavyQCdeXVKbX9NRFZ_ZirR2OFzJRpZqQbKCNWdj6g"},
{"content":{"body":"it sounds very much like a deferred import","msgtype":"m.text","org.matrix.msc1767.text":"it sounds very much like a deferred import"},"ts":1657136987079,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$X8FD7ADlAqT-0Bg0Cot6cOihZLd4QwpFXzhF1tYtn84"},
{"content":{"body":"It is.","msgtype":"m.text","org.matrix.msc1767.text":"It is."},"ts":1657136991555,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$X3WgV5wDt3dxlwroT0kUlGzQrH1_eEyovU7rJDYycJc"},
{"content":{"body":"That is Yulias area not ours","msgtype":"m.text","org.matrix.msc1767.text":"That is Yulias area not ours"},"ts":1657136998888,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$l3N5bSt2jtCz44KXOJbfNgBeKpEK0yoJXJai0vRhM60"},
{"content":{"body":"I think it can be achieved but it is a separate specification to what we are working on with module reflection","msgtype":"m.text","org.matrix.msc1767.text":"I think it can be achieved but it is a separate specification to what we are working on with module reflection"},"ts":1657137024947,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$CwzIUyRAzCWzyLPu88ZbslSu7w2MXalufTnYszEvqC0"},
{"content":{"body":"\"reflection\" by its nature is about a higher order import","msgtype":"m.text","org.matrix.msc1767.text":"\"reflection\" by its nature is about a higher order import"},"ts":1657137032196,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$UlzS_jKxKwwAkUK9WMDd4xUCJg52Ka9xD9-9R2ublYA"},
{"content":{"body":"not an instance import","msgtype":"m.text","org.matrix.msc1767.text":"not an instance import"},"ts":1657137034997,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$HC32fybFHp09skRmBgL1PFk_ETc-zAHGu1pHE67TUd8"},
{"content":{"body":"I do not mean to suggest that your proposal should solve both motivating use cases.","msgtype":"m.text","org.matrix.msc1767.text":"I do not mean to suggest that your proposal should solve both motivating use cases."},"ts":1657137052573,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$2jEhThttKcfF3OR_tOpEcEAzE_-iRN-hAK6dPZiwSjI"},
{"content":{"body":"I do suggest that we are responsible for ensuring that these merge without conflict.","msgtype":"m.text","org.matrix.msc1767.text":"I do suggest that we are responsible for ensuring that these merge without conflict."},"ts":1657137067454,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JQqBbiCTfcVoB__bT-6JwosVlEQ_ddThmZiIe_k844I"},
{"content":{"body":"it is our collective responsibility to not conflict eachother yes :)","msgtype":"m.text","org.matrix.msc1767.text":"it is our collective responsibility to not conflict eachother yes :)"},"ts":1657137096073,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$OPNM91h9Okuo0bpXKxNUFzH0qmUgiyhk5fLBcU4989E"},
{"content":{"body":"I suggest that in the end we should have syntax for both cases.","msgtype":"m.text","org.matrix.msc1767.text":"I suggest that in the end we should have syntax for both cases."},"ts":1657137097690,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qc0cVyvZzftYRnrxg_v4Z123sOqm8HcLiFYqxhHBUxs"},
{"content":{"body":"that's fine, and nothing is precluded","msgtype":"m.text","org.matrix.msc1767.text":"that's fine, and nothing is precluded"},"ts":1657137123680,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$rH1cLYLKPqARoqhVa2pIpF5A6DtF-M8dm6BeCIIIKK4"},
{"content":{"body":"specifically we have further constrained import reflection to module import reflection","msgtype":"m.text","org.matrix.msc1767.text":"specifically we have further constrained import reflection to module import reflection"},"ts":1657137145221,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$lawQl046HCdXbD8qEpAd0MV-xyrbK3doKeKfnC1enr4"},
{"content":{"body":"other proposals for other types of imports like assets or deferred execution can easily coexist","msgtype":"m.text","org.matrix.msc1767.text":"other proposals for other types of imports like assets or deferred execution can easily coexist"},"ts":1657137171516,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$GFpce3_QD_ol656dirYuXMC71s28bH9Lovhd14yLB_8"},
{"content":{"body":"`import module x from 'x.js'` meaning x instanceof `WASM.Module` would preclude `import module x from 'x.js'` alternately meaning `x instanceof Module`.","format":"org.matrix.custom.html","formatted_body":"<code>import module x from 'x.js'</code> meaning x instanceof <code>WASM.Module</code> would preclude <code>import module x from 'x.js'</code> alternately meaning <code>x instanceof Module</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`import module x from 'x.js'` meaning x instanceof `WASM.Module` would preclude `import module x from 'x.js'` alternately meaning `x instanceof Module`.","mimetype":"text/plain"},{"body":"<code>import module x from 'x.js'</code> meaning x instanceof <code>WASM.Module</code> would preclude <code>import module x from 'x.js'</code> alternately meaning <code>x instanceof Module</code>.","mimetype":"text/html"}]},"ts":1657137174094,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Uo-V8gtxkhhV5U5L5vcsKqcDhPaxmyrYx77odHfZTHQ"},
{"content":{"body":"right but it doesn't preclude `import defer x from 'x.js'`","format":"org.matrix.custom.html","formatted_body":"right but it doesn't preclude <code>import defer x from 'x.js'</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"right but it doesn't preclude `import defer x from 'x.js'`","mimetype":"text/plain"},{"body":"right but it doesn't preclude <code>import defer x from 'x.js'</code>","mimetype":"text/html"}]},"ts":1657137187575,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$qIrw-bLbUWuMp3KsTwNi-mT4PZQI40Ky8hlfYie6DnM"},
{"content":{"body":"I agree that is possible.","msgtype":"m.text","org.matrix.msc1767.text":"I agree that is possible."},"ts":1657137202366,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$XcRXeP7zff1SRF_Cou9i23U7ldRb4mQb8nZRAB_A8ss"},
{"content":{"body":"In a universe with both, are we creating another footnote in WAT.js?","msgtype":"m.text","org.matrix.msc1767.text":"In a universe with both, are we creating another footnote in WAT.js?"},"ts":1657137231490,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Wc39-U6IsFw0JE2iHVt_8p1ohxqy_B21M_a41LGD2aI"},
{"content":{"body":"if there is issue with the `module` term not being clear enough, we can consider other options","format":"org.matrix.custom.html","formatted_body":"if there is issue with the <code>module</code> term not being clear enough, we can consider other options","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if there is issue with the `module` term not being clear enough, we can consider other options","mimetype":"text/plain"},{"body":"if there is issue with the <code>module</code> term not being clear enough, we can consider other options","mimetype":"text/html"}]},"ts":1657137251585,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$o92sJBEQhqFy2ZELXTjtcJ099oPpeyHlQSAwpW9kZo8"},
{"content":{"body":"the hope was too avoid too much of a bikeshed of course","msgtype":"m.text","org.matrix.msc1767.text":"the hope was too avoid too much of a bikeshed of course"},"ts":1657137259362,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$c74pwwCSalzWosJo-iiuv30LdabziYgHGa-1Z_wKq1U"},
{"content":{"body":"```\nimport module x from 'x.wasm';\nx instanceof Module; // false WAT?\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>import module x from 'x.wasm';\nx instanceof Module; // false WAT?\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```\nimport module x from 'x.wasm';\nx instanceof Module; // false WAT?\n```","mimetype":"text/plain"},{"body":"<pre><code>import module x from 'x.wasm';\nx instanceof Module; // false WAT?\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657137259804,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qrql9IhIlPxG0piTsJEx0K36BQTS7jAGNakuNlKpFW0"},
{"content":{"body":"I hope we could consider this mostly aesthetic as opposed to a primary stage 2 concern","msgtype":"m.text","org.matrix.msc1767.text":"I hope we could consider this mostly aesthetic as opposed to a primary stage 2 concern"},"ts":1657137271687,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$7TAhUyXBr4pYa70of-WpbwN1SRBUxjtDJhMsbq-OPDM"},
{"content":{"body":"I’ll grant this is aesthetic. What stage do aesthetics become a concern?","msgtype":"m.text","org.matrix.msc1767.text":"I’ll grant this is aesthetic. What stage do aesthetics become a concern?"},"ts":1657137314000,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qhJKS6-OovJVphMCPHBxGWbXnzbImcOu_UB_6135asg"},
{"content":{"body":"Soft concern for 2, hard concern for 3?","msgtype":"m.text","org.matrix.msc1767.text":"Soft concern for 2, hard concern for 3?"},"ts":1657137348931,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$UQCNIaxc3eA3gwZF2hQ_pS-C2ds8QxyJd82bBkWXfnI"},
{"content":{"body":"From what I believe, stage 2 is expected to be complete specification but can still have open questions","msgtype":"m.text","org.matrix.msc1767.text":"From what I believe, stage 2 is expected to be complete specification but can still have open questions"},"ts":1657137526093,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Lrv_fSGCuF3m1sVCKL7J4PsDvYwQ727bdtus2HNUCqQ"},
{"content":{"body":"I’ll also grant that `import defer x from 'x.any'` has a nice ring to it.","format":"org.matrix.custom.html","formatted_body":"I’ll also grant that <code>import defer x from 'x.any'</code> has a nice ring to it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I’ll also grant that `import defer x from 'x.any'` has a nice ring to it.","mimetype":"text/plain"},{"body":"I’ll also grant that <code>import defer x from 'x.any'</code> has a nice ring to it.","mimetype":"text/html"}]},"ts":1657137538353,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$CzJMbm88Il-v3bRcqzIK3cqcYJm7qkmiP3MYasEmDoI"},
{"content":{"body":"we'll make sure to highlight these points, this has been useful","msgtype":"m.text","org.matrix.msc1767.text":"we'll make sure to highlight these points, this has been useful"},"ts":1657137579632,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$WkUEaGWjWUkighjHqAaYqHyEOO4wJ9iyYxng6sWp4nA"},
{"content":{"body":"I think we still have a number of foundational questions to answer, for all of the proposals we're discussing. A number of unresolved points of disagreement just came up in that meeting. I'm fine with things moving to Stage 2 as long as this is to be interpreted explicitly as \"we agree that we want to move forward as a committee in this area, and have one concrete idea of how it might work, but we're still open to resolving these foundational questions in multiple ways\"","msgtype":"m.text","org.matrix.msc1767.text":"I think we still have a number of foundational questions to answer, for all of the proposals we're discussing. A number of unresolved points of disagreement just came up in that meeting. I'm fine with things moving to Stage 2 as long as this is to be interpreted explicitly as \"we agree that we want to move forward as a committee in this area, and have one concrete idea of how it might work, but we're still open to resolving these foundational questions in multiple ways\""},"ts":1657139746505,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h6hxAUt7_NanLCnBp5U677e3On_YJLuyOeJSnde1XFU"},
{"content":{"body":"> <@guybedford:matrix.org> From what I believe, stage 2 is expected to be complete specification but can still have open questions\n\nStage 3 is complete specification, for stage 2 you need a draft ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$Lrv_fSGCuF3m1sVCKL7J4PsDvYwQ727bdtus2HNUCqQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">@guybedford:matrix.org</a><br />From what I believe, stage 2 is expected to be complete specification but can still have open questions</blockquote></mx-reply>Stage 3 is complete specification, for stage 2 you need a draft","m.relates_to":{"m.in_reply_to":{"event_id":"$Lrv_fSGCuF3m1sVCKL7J4PsDvYwQ727bdtus2HNUCqQ"}},"msgtype":"m.text"},"ts":1657139778817,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IsvpROEi4vy3988ldw7OXi84JWjpQjzdwmbHDR1uaCc"},
{"content":{"body":"I mean, module blocks seems to be one of these proposals which has these unresolved foundational questions, and it's already at Stage 2! But this is largely because it hadn't yet occurred to us that module blocks might be referrer-less, which Caridy is now advocating","msgtype":"m.text","org.matrix.msc1767.text":"I mean, module blocks seems to be one of these proposals which has these unresolved foundational questions, and it's already at Stage 2! But this is largely because it hadn't yet occurred to us that module blocks might be referrer-less, which Caridy is now advocating"},"ts":1657139801320,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tj8bRIIwv3BdcIouwyOTanYdKruhdFTwjAMMjQn_Wfg"},
{"content":{"body":"I don't tend to agree with people who insist that all foundational questions be addressed by Stage 2. It's just too common for us to find that we need to revisit foundational issues during Stage 2. I think it's more that, Stage 2 indicates a level of interest/resolve to work things out, together with concreteness on *some* possibility","format":"org.matrix.custom.html","formatted_body":"I don't tend to agree with people who insist that all foundational questions be addressed by Stage 2. It's just too common for us to find that we need to revisit foundational issues during Stage 2. I think it's more that, Stage 2 indicates a level of interest/resolve to work things out, together with concreteness on <em>some</em> possibility","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't tend to agree with people who insist that all foundational questions be addressed by Stage 2. It's just too common for us to find that we need to revisit foundational issues during Stage 2. I think it's more that, Stage 2 indicates a level of interest/resolve to work things out, together with concreteness on *some* possibility","mimetype":"text/plain"},{"body":"I don't tend to agree with people who insist that all foundational questions be addressed by Stage 2. It's just too common for us to find that we need to revisit foundational issues during Stage 2. I think it's more that, Stage 2 indicates a level of interest/resolve to work things out, together with concreteness on <em>some</em> possibility","mimetype":"text/html"}]},"ts":1657139855721,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$g0AYMYI5VbOVYTplVIKJxfgOgWenOTunXcvGyf5YaH0"},
{"content":{"body":"the bikeshed is definitely not a Stage 2 blocker","msgtype":"m.text","org.matrix.msc1767.text":"the bikeshed is definitely not a Stage 2 blocker"},"ts":1657139871214,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$cDbqlG55YPkecYES41WSVNMXOyyaGnyiNWJ19vmRk7A"},
{"content":{"body":"I think we should at least wait until Yulia is back to conclude that deferred module evaluation is separate from Guy's and Luca's proposal. I've heard multiple suggestions that these are really the same space. So if Stage 2 were to be taken to mean, \"these are definitely separate\"... I wouldn't be ready to say that yet.","msgtype":"m.text","org.matrix.msc1767.text":"I think we should at least wait until Yulia is back to conclude that deferred module evaluation is separate from Guy's and Luca's proposal. I've heard multiple suggestions that these are really the same space. So if Stage 2 were to be taken to mean, \"these are definitely separate\"... I wouldn't be ready to say that yet."},"ts":1657139942468,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Y7dThN_JCbOcGvoup__AWryjgaoZ5DIME7PomR_GXlo"}
]