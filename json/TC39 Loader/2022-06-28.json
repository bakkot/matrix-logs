[
{"content":{"body":"Is there a loader call today?","msgtype":"m.text","org.matrix.msc1767.text":"Is there a loader call today?"},"ts":1656409768847,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$vVLgY1Ww5tvWslhO4H20unIf1pjvD9xi4r2zqvHyiNo"},
{"content":{"body":"nvm, found the notes doc and it says next call is Jul 6 :)","msgtype":"m.text","org.matrix.msc1767.text":"nvm, found the notes doc and it says next call is Jul 6 :)"},"ts":1656410183983,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$Y2agaSovjLxG1drKPPEpnMuvN5ZMoJwFLLMcsOYOgTI"},
{"content":{"body":"Apologies for missing the first call. I must have forgotten to subscribe to the issue","msgtype":"m.text","org.matrix.msc1767.text":"Apologies for missing the first call. I must have forgotten to subscribe to the issue"},"ts":1656410204131,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$dinVQIj7-3_CFOy76MBSpHBx8nopcdv89JV4D4nhzEw"},
{"content":{"body":"Kris Kowal: Thanks for making the slides very consumable by themselves. Enjoyed reading them.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: Thanks for making the slides very consumable by themselves. Enjoyed reading them.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Kris Kowal: Thanks for making the slides very consumable by themselves. Enjoyed reading them.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: Thanks for making the slides very consumable by themselves. Enjoyed reading them.","mimetype":"text/html"}]},"ts":1656414666250,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$5pinpQOOteETp1myg8mXI8DaT6EAYBCuZuxeQho0zak"},
{"content":{"body":"One thing that is currently not quite clear after the slides: Was there tension for module blocks capturing `import.meta.url` of the module they are syntactically embedded in? I believe that’s crucial for module blocks to be successful.","format":"org.matrix.custom.html","formatted_body":"One thing that is currently not quite clear after the slides: Was there tension for module blocks capturing <code>import.meta.url</code> of the module they are syntactically embedded in? I believe that’s crucial for module blocks to be successful.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"One thing that is currently not quite clear after the slides: Was there tension for module blocks capturing `import.meta.url` of the module they are syntactically embedded in? I believe that’s crucial for module blocks to be successful.","mimetype":"text/plain"},{"body":"One thing that is currently not quite clear after the slides: Was there tension for module blocks capturing <code>import.meta.url</code> of the module they are syntactically embedded in? I believe that’s crucial for module blocks to be successful.","mimetype":"text/html"}]},"ts":1656414872997,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$3WIZ-7fTdLcaWptM5SpKAKouwKeCYfDM4gXOiJMQjCU"},
{"content":{"body":"With the long messages above we ended up concluding that the tension is solvable, by separating the concept of \"module source\" (equivalent to the actual contents of an ESM file) and \"module instance\" (which has the runtime metadata such as import.meta)","msgtype":"m.text"},"ts":1656415792675,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$EXP-u_QRr1nEfIVa-J-higLVbFrnGXQi5Dl8_WQLBjA"},
{"content":{"body":"* With the long messages above we concluded that the tension is solvable, by separating the concept of \"module source\" (equivalent to the actual contents of an ESM file) and \"module instance\" (which has the runtime metadata such as import.meta)","m.new_content":{"body":"With the long messages above we concluded that the tension is solvable, by separating the concept of \"module source\" (equivalent to the actual contents of an ESM file) and \"module instance\" (which has the runtime metadata such as import.meta)","msgtype":"m.text"},"m.relates_to":{"event_id":"$EXP-u_QRr1nEfIVa-J-higLVbFrnGXQi5Dl8_WQLBjA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1656415816800,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tgyqqoZqiiCQj9RYRHfcR_lVZLJ79XE48ZWqHQK7jxc"},
{"content":{"body":"Module blocks would be the second","msgtype":"m.text"},"ts":1656415846543,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$exiJw36nw-BcjLO5OTQorT5Hz4_qKbtjqus9Zplf86E"},
{"content":{"body":"I think that makes sense, ty","msgtype":"m.text","org.matrix.msc1767.text":"I think that makes sense, ty"},"ts":1656416309013,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$XOeFya181tLhAKunk-V-HI_IEw19tu_q07PHNDtFDn4"},
{"content":{"body":"Wait, I think there are three things, the \"source\", the \"instance\" (which includes imports) and then this third thing which module blocks and fragments are, where their imports aren't bound but where they do have an import.meta.url","msgtype":"m.text","org.matrix.msc1767.text":"Wait, I think there are three things, the \"source\", the \"instance\" (which includes imports) and then this third thing which module blocks and fragments are, where their imports aren't bound but where they do have an import.meta.url"},"ts":1656427019796,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ab9Ixk4YxV9Lq8Y-S9wAesA4mzxocFRcR_O1SU0d0m0"},
{"content":{"body":"I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?","msgtype":"m.text","org.matrix.msc1767.text":"I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?"},"ts":1656428707115,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LWdeMpam5TP8PnnDSvK6LN8z1EqCEE53WPM9iDjPL3A"},
{"content":{"body":"I think quite a bit hinges on this referrer property, where and whether it exists.","msgtype":"m.text","org.matrix.msc1767.text":"I think quite a bit hinges on this referrer property, where and whether it exists."},"ts":1656428754699,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$OYUPykLmdaAmit1-iNg6Q9ajuW414YC1rvnuZtYrXt8"},
{"content":{"body":"There is certainly a formulation of module loaders where module instances do not capturer their referrer but are still suitable for bundlers, import mappers, hot module replacement, &c.","msgtype":"m.text","org.matrix.msc1767.text":"There is certainly a formulation of module loaders where module instances do not capturer their referrer but are still suitable for bundlers, import mappers, hot module replacement, &c."},"ts":1656428872803,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$0kkCSFGPf_0kH12RkGZthmOpDecD2U4EnY6xpq2YvtE"},
{"content":{"body":"Though retaining the referrer wouldn’t break those motivating cases and would probably help more than hurt.","msgtype":"m.text","org.matrix.msc1767.text":"Though retaining the referrer wouldn’t break those motivating cases and would probably help more than hurt."},"ts":1656428925316,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3FTqXhVNMfg0cltBQ6jsLZghrPKN7OYZ35MMVoZqQ7A"},
{"content":{"body":"The use-case that drives this is the following: It’s quite common (on the web) to refer to assets using the “new URL” pattern, i.e. `const imgURL = new URL(\"./hero-image.png\", import.meta.url)`. This ensures that the path “./hero-image.png” is resolved relative to the module. I want to make sure that this continues to work, even if the modules is postMessage()’d to another realm, which means the module block needs to have the same `import.meta.url` as the module it is syntactically embedded in.","format":"org.matrix.custom.html","formatted_body":"The use-case that drives this is the following: It’s quite common (on the web) to refer to assets using the “new URL” pattern, i.e. <code>const imgURL = new URL(&quot;./hero-image.png&quot;, import.meta.url)</code>. This ensures that the path “./hero-image.png” is resolved relative to the module. I want to make sure that this continues to work, even if the modules is postMessage()’d to another realm, which means the module block needs to have the same <code>import.meta.url</code> as the module it is syntactically embedded in.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"The use-case that drives this is the following: It’s quite common (on the web) to refer to assets using the “new URL” pattern, i.e. `const imgURL = new URL(\"./hero-image.png\", import.meta.url)`. This ensures that the path “./hero-image.png” is resolved relative to the module. I want to make sure that this continues to work, even if the modules is postMessage()’d to another realm, which means the module block needs to have the same `import.meta.url` as the module it is syntactically embedded in.","mimetype":"text/plain"},{"body":"The use-case that drives this is the following: It’s quite common (on the web) to refer to assets using the “new URL” pattern, i.e. <code>const imgURL = new URL(&quot;./hero-image.png&quot;, import.meta.url)</code>. This ensures that the path “./hero-image.png” is resolved relative to the module. I want to make sure that this continues to work, even if the modules is postMessage()’d to another realm, which means the module block needs to have the same <code>import.meta.url</code> as the module it is syntactically embedded in.","mimetype":"text/html"}]},"ts":1656430657905,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$xRroaa-kCFqk7JOpZNQds7l4gRMN9dyLecyaGDBnXzI"},
{"content":{"body":"> <@kriskowal:matrix.org> I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?\n\nYes, that was just shorthand/an intuitive way of describing it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$LWdeMpam5TP8PnnDSvK6LN8z1EqCEE53WPM9iDjPL3A?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?</blockquote></mx-reply>Yes, that was just shorthand/an intuitive way of describing it","m.relates_to":{"m.in_reply_to":{"event_id":"$LWdeMpam5TP8PnnDSvK6LN8z1EqCEE53WPM9iDjPL3A"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?\n\nYes, that was just shorthand/an intuitive way of describing it","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$LWdeMpam5TP8PnnDSvK6LN8z1EqCEE53WPM9iDjPL3A?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I assume module blocks and fragments can be used on hosts that do not provide import.meta.url. Do you mean a referrer internal slot?</blockquote></mx-reply>Yes, that was just shorthand/an intuitive way of describing it","mimetype":"text/html"}]},"ts":1656430701419,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$92UYfnUgl7U61i7yM1uYHEH8SpgrEobUo_Le3EXh0jI"}
]