[
{"content":{"body":"oh, right","msgtype":"m.text","org.matrix.msc1767.text":"oh, right"},"ts":1655856003931,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$cHYuXZDNvQDZtWacRaMHehaCkrTn3OYL2fGYNdjJ_fA"},
{"content":{"body":"wait I thought it did have a static module record?","msgtype":"m.text","org.matrix.msc1767.text":"wait I thought it did have a static module record?"},"ts":1655856019699,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$D4ywe6u499i6O31_tJrAD5NNta3S6-4ngAtf79VNluc"},
{"content":{"body":" * wait I thought it did have a static module record?","m.new_content":{"body":"wait I thought it did have a static module record?","msgtype":"m.text","org.matrix.msc1767.text":"wait I thought it did have a static module record?"},"m.relates_to":{"event_id":"$D4ywe6u499i6O31_tJrAD5NNta3S6-4ngAtf79VNluc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * wait I thought it did have a static module record?"},"ts":1655856049273,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TI03rbIPT6WoO4OGiPFWRmjIfNDdQkMixw51uJihAzc"},
{"content":{"body":"The mini-maps are interesting because they contain subgraphs, some of which are potentially cyclic.","msgtype":"m.text","org.matrix.msc1767.text":"The mini-maps are interesting because they contain subgraphs, some of which are potentially cyclic."},"ts":1655856050584,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$RbvD85oz6j_S-oHcHUoBKQUa7Pt95WJwEACOMDxdWBs"},
{"content":{"body":"yes","msgtype":"m.text","org.matrix.msc1767.text":"yes"},"ts":1655856062089,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BNKBi_nJpc4zo2HdG_B07CTgkBA44c5SJWyvIKQkl88"},
{"content":{"body":"Thankfully you can arrive at a deterministic ordering of the subgraphs by sampling in order of appearance in the source.","msgtype":"m.text","org.matrix.msc1767.text":"Thankfully you can arrive at a deterministic ordering of the subgraphs by sampling in order of appearance in the source."},"ts":1655856090658,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$XM4Lt2Ki46-dSulJzvv1jxwexJVBvAnZBACuWDKluww"},
{"content":{"body":"well, presumably we'd do this ordering with the same algorithm we use for normal cyclic graphs (depending on where you start with in the cycle)","msgtype":"m.text","org.matrix.msc1767.text":"well, presumably we'd do this ordering with the same algorithm we use for normal cyclic graphs (depending on where you start with in the cycle)"},"ts":1655856122113,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xuKNxVAy5xS9V9KnrFiWKUcvk14-RulRVTnRydvNs98"},
{"content":{"body":"Yeah, maybe. There might be optimizations that are possible only if the entrypoint doesn’t figure. But that doesn’t surface to JavaScript regardless.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, maybe. There might be optimizations that are possible only if the entrypoint doesn’t figure. But that doesn’t surface to JavaScript regardless."},"ts":1655856202202,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$zxiHuPSP85enSC3e8HLPkS_oeXvIDcT2G0gniQqMy-k"},
{"content":{"body":"well, it's readily observable, unfortunately","msgtype":"m.text","org.matrix.msc1767.text":"well, it's readily observable, unfortunately"},"ts":1655856226923,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$g2WpoyhLRVY40iV2Y0dvkbE2BtiTP4s0hBYrP725H1k"},
{"content":{"body":"As for StaticModuleRecord…","msgtype":"m.text","org.matrix.msc1767.text":"As for StaticModuleRecord…"},"ts":1655856235435,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$tXjIt4YbV08TFx1CPenYIY4_vQb11FTdUStaMPR7wT4"},
{"content":{"body":" * As for StaticModuleRecord…","m.new_content":{"body":"As for StaticModuleRecord…","msgtype":"m.text","org.matrix.msc1767.text":"As for StaticModuleRecord…"},"m.relates_to":{"event_id":"$tXjIt4YbV08TFx1CPenYIY4_vQb11FTdUStaMPR7wT4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * As for StaticModuleRecord…"},"ts":1655856239082,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$BcSn6wPHlv4pvggTCR5uwBfddM9c6z5svPX_6idMytc"},
{"content":{"body":"StaticModuleRecords would hang off the nodes of the mini-graph, not off the ModuleBlock.","msgtype":"m.text","org.matrix.msc1767.text":"StaticModuleRecords would hang off the nodes of the mini-graph, not off the ModuleBlock."},"ts":1655856326144,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$sXCVIJNhIq6eqdyJZ520InPhQVl8x7r20QXsAUmF-BQ"},
{"content":{"body":"huh, that's a way to represent it, I guess more normalized and less cyclic of a structure than I was imagining","msgtype":"m.text","org.matrix.msc1767.text":"huh, that's a way to represent it, I guess more normalized and less cyclic of a structure than I was imagining"},"ts":1655856394409,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_JWtDI5qXxlmegu2041Lo5Z5bwDxsNPzBCFbHVRK44s"},
{"content":{"body":"sgtm","msgtype":"m.text","org.matrix.msc1767.text":"sgtm"},"ts":1655856399525,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9RelvcdlNg1LutVOXjIlBeJnUhjs2S5T6qO7gmxuyq0"},
{"content":{"body":"They don’t correspond to a document per se. Not something you could fetch.","msgtype":"m.text","org.matrix.msc1767.text":"They don’t correspond to a document per se. Not something you could fetch."},"ts":1655856443006,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$60r8437mayDoj3loGL6vgYSsXayQKB61Mn2aP5Mbrzs"},
{"content":{"body":"Except perhaps in a compiled form.","msgtype":"m.text","org.matrix.msc1767.text":"Except perhaps in a compiled form."},"ts":1655856457583,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$9y5Yy0K4m80qKQQdMERMnxvuLYHntpn3cXkszZhdZGY"},
{"content":{"body":"One of the interesting things about lexical linkage is that the compiler can erase the names.","msgtype":"m.text","org.matrix.msc1767.text":"One of the interesting things about lexical linkage is that the compiler can erase the names."},"ts":1655856491145,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ITieQejlp8s--lQCcZSAd8VtSGKq0ywBbSrvvcywS54"},
{"content":{"body":"BTW note that the mini-graph is actually something like a singly linked list of maps, following a scope chain, as you could have (and this is stupid code but still possible),\n```\nmodule foo { }\nmodule bar { }\nif (true) {\n  module foo { }\n  module baz { }\n  module bing { import foo; import bar; }\n}","format":"org.matrix.custom.html","formatted_body":"<p>BTW note that the mini-graph is actually something like a singly linked list of maps, following a scope chain, as you could have (and this is stupid code but still possible),</p>\n<pre><code>module foo { }\nmodule bar { }\nif (true) {\n  module foo { }\n  module baz { }\n  module bing { import foo; import bar; }\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"BTW note that the mini-graph is actually something like a singly linked list of maps, following a scope chain, as you could have (and this is stupid code but still possible),\n```\nmodule foo { }\nmodule bar { }\nif (true) {\n  module foo { }\n  module baz { }\n  module bing { import foo; import bar; }\n}","mimetype":"text/plain"},{"body":"<p>BTW note that the mini-graph is actually something like a singly linked list of maps, following a scope chain, as you could have (and this is stupid code but still possible),</p>\n<pre><code>module foo { }\nmodule bar { }\nif (true) {\n  module foo { }\n  module baz { }\n  module bing { import foo; import bar; }\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655856563564,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DM9CXNP3zx0gJ6ZBddoKNvFs0_f719ct0-wGK-N3TAI"},
{"content":{"body":"also line 6 could've been `eval(\"module bing { import foo; import bar; }\")` -- this scope chain needs to be reified at runtime if there's a direct eval","format":"org.matrix.custom.html","formatted_body":"also line 6 could've been <code>eval(&quot;module bing { import foo; import bar; }&quot;)</code> -- this scope chain needs to be reified at runtime if there's a direct eval","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"also line 6 could've been `eval(\"module bing { import foo; import bar; }\")` -- this scope chain needs to be reified at runtime if there's a direct eval","mimetype":"text/plain"},{"body":"also line 6 could've been <code>eval(&quot;module bing { import foo; import bar; }&quot;)</code> -- this scope chain needs to be reified at runtime if there's a direct eval","mimetype":"text/html"}]},"ts":1655856609433,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qHIQ-ldw4v1UZQtPsc_HZAH7Fzd9qzHFkl5uHLywZz8"},
{"content":{"body":"(I feel pretty strongly that you should be able to use module blocks/fragments in sloppy mode code)","msgtype":"m.text","org.matrix.msc1767.text":"(I feel pretty strongly that you should be able to use module blocks/fragments in sloppy mode code)"},"ts":1655856694832,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KA2pC3sY6Fk68lLv3St84DW607FIpDVDofjg1zaZb40"},
{"content":{"body":"Are we in agreement that every time import(ModuleBlock), it’s getting fresh instances of the nodes of its minigraph?","msgtype":"m.text","org.matrix.msc1767.text":"Are we in agreement that every time import(ModuleBlock), it’s getting fresh instances of the nodes of its minigraph?"},"ts":1655856697387,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$voepcL9N_cPUe3no4Vz-RNnVKsH56glgr378PzhmJFo"},
{"content":{"body":"hmm, I imagined otherwise, that the gensym would be cached","msgtype":"m.text","org.matrix.msc1767.text":"hmm, I imagined otherwise, that the gensym would be cached"},"ts":1655856723591,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NZfmjLgSmU1K2iDEJePnN2JI9cjXChLziP91wF2gj3M"},
{"content":{"body":"and the duplication would only happen across postMessage","msgtype":"m.text","org.matrix.msc1767.text":"and the duplication would only happen across postMessage"},"ts":1655856738207,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$j8Pft_f3ZIp8zBlsmv8wL4cKGLbPG7p-i4rmJxhAebI"},
{"content":{"body":"So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)","msgtype":"m.text","org.matrix.msc1767.text":"So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)"},"ts":1655856776358,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$aU3kmN5U_rmYLfVLAarwPbcHEC56v4qKj7OWr18M3WE"},
{"content":{"body":"Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)","msgtype":"m.text","org.matrix.msc1767.text":"Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)"},"ts":1655856810663,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$x2epucbtAW1r1Oer_4jUcOkA9GySq9HI2tPA8w12-Ww"},
{"content":{"body":"> <@kriskowal:matrix.org> So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)\n\nthese both go to the host's module map","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$aU3kmN5U_rmYLfVLAarwPbcHEC56v4qKj7OWr18M3WE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)</blockquote></mx-reply>these both go to the host's module map","m.relates_to":{"m.in_reply_to":{"event_id":"$aU3kmN5U_rmYLfVLAarwPbcHEC56v4qKj7OWr18M3WE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)\n\nthese both go to the host's module map","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$aU3kmN5U_rmYLfVLAarwPbcHEC56v4qKj7OWr18M3WE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>So import(ModuleBlock) would behave differently than e.g., shadowRealm.importValue(ModuleBlock)</blockquote></mx-reply>these both go to the host's module map","mimetype":"text/html"}]},"ts":1655856832899,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PhCwChpYXeXYZnMzRYBQO2uj7L8Cn7CjcKeM_vM1OCY"},
{"content":{"body":"I mean, for the \"fetch\" part","msgtype":"m.text","org.matrix.msc1767.text":"I mean, for the \"fetch\" part"},"ts":1655856846634,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AUE3zC3jbiqHYY00OYGkGVCG6eUJdoGby5-Vxi138fI"},
{"content":{"body":"Yeh, those both being local.","msgtype":"m.text","org.matrix.msc1767.text":"Yeh, those both being local."},"ts":1655856849343,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$P0ZzbcNH-n_1JF7Xx9wHR0cHqhj2lONrAgboV6hf3mU"},
{"content":{"body":"> <@kriskowal:matrix.org> Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)\n\nI don't really know what these statements mean","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$x2epucbtAW1r1Oer_4jUcOkA9GySq9HI2tPA8w12-Ww?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)</blockquote></mx-reply>I don't really know what these statements mean","m.relates_to":{"m.in_reply_to":{"event_id":"$x2epucbtAW1r1Oer_4jUcOkA9GySq9HI2tPA8w12-Ww"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)\n\nI don't really know what these statements mean","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$x2epucbtAW1r1Oer_4jUcOkA9GySq9HI2tPA8w12-Ww?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Versus, compartment.import(ModuleBlock), maybeAgentSomeday.import(ModuleBlock)</blockquote></mx-reply>I don't really know what these statements mean","mimetype":"text/html"}]},"ts":1655856864116,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IKZfXcFrVE1T2b3v9oL5hvxpv_cla6kx1zwfsST5Sd8"},
{"content":{"body":"I suppose it’s here nor there for me.","msgtype":"m.text","org.matrix.msc1767.text":"I suppose it’s here nor there for me."},"ts":1655856882374,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$DHt5f-oF7e7M3OuyOKo8RpTP2mQ94lteah-IZP_kEKM"},
{"content":{"body":"Just that if a module block has to be serialized and deserialized, you necessarily get a fresh batch of gensyms, so the invariants are different.","msgtype":"m.text","org.matrix.msc1767.text":"Just that if a module block has to be serialized and deserialized, you necessarily get a fresh batch of gensyms, so the invariants are different."},"ts":1655856913848,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$zpLfr2hB-ll8Y_HNOmkMyzzY7VU9y0L8U2ilwF7gTwQ"},
{"content":{"body":"oh yes I agree with that","msgtype":"m.text","org.matrix.msc1767.text":"oh yes I agree with that"},"ts":1655856939102,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SrmPJpYnXuHMMyyeB-JeSnsCDvNiFDtWoBrHJ_5pxqE"},
{"content":{"body":"I mean at least this is what I was picturing","msgtype":"m.text","org.matrix.msc1767.text":"I mean at least this is what I was picturing"},"ts":1655856958310,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$r7gXbWXU2UqCi4wLOniz3LMGzfHjLdt4jinsF0zhd9o"},
{"content":{"body":"I don’t like there being difference but it concede it’s a value judgement.","msgtype":"m.text","org.matrix.msc1767.text":"I don’t like there being difference but it concede it’s a value judgement."},"ts":1655856978264,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wOfSvCcWzPWSg7Si6YPCde34QpHI2yp7V6xjt2MySSw"},
{"content":{"body":"And I think we agree it’s an orthogonal concern to compartments.","msgtype":"m.text","org.matrix.msc1767.text":"And I think we agree it’s an orthogonal concern to compartments."},"ts":1655857003735,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QqsNDpV-EX_JfQvHMu_uIHjrUf0CBtI12LLYWfNJhs4"},
{"content":{"body":"That is, I’m convinced that module blocks and fragments proposals are orthogonal to compartments.","msgtype":"m.text","org.matrix.msc1767.text":"That is, I’m convinced that module blocks and fragments proposals are orthogonal to compartments."},"ts":1655857053809,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ukBgO-nK9zmCLL7A35KkDJHTXPc8oWvMXPkh3lIVVSE"},
{"content":{"body":"And that I’ll want to carve a hole for `static module {}` which would be different.","format":"org.matrix.custom.html","formatted_body":"And that I’ll want to carve a hole for <code>static module {}</code> which would be different.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And that I’ll want to carve a hole for `static module {}` which would be different.","mimetype":"text/plain"},{"body":"And that I’ll want to carve a hole for <code>static module {}</code> which would be different.","mimetype":"text/html"}]},"ts":1655857077294,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oiJsZm38ZzFrhEa1JxzXYhpZMLaOcboG8pSqDuqK05w"},
{"content":{"body":"yeah, or put differently, I think we have ideas about how this should go that works out orthogonally","msgtype":"m.text","org.matrix.msc1767.text":"yeah, or put differently, I think we have ideas about how this should go that works out orthogonally"},"ts":1655857083022,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fK506au4OsikjROldOhCtUrkzdZ_XY_wljHLvVU0ZFA"},
{"content":{"body":"Yes.","msgtype":"m.text","org.matrix.msc1767.text":"Yes."},"ts":1655857095736,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ikHFiYI68jrhywHIGswuOpzGYm3Uju_mjZUks5fTNyQ"},
{"content":{"body":"I'd suggest that, as a hack, you could just make a method on a module block which \"projects out\" the static module record","msgtype":"m.text","org.matrix.msc1767.text":"I'd suggest that, as a hack, you could just make a method on a module block which \"projects out\" the static module record"},"ts":1655857105591,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3oRSPb7wfkVsoD7wqNTnBpDbSj_4UzHDG9jBmxRBvrc"},
{"content":{"body":"There are certainly ways that would cross the streams :-)","msgtype":"m.text","org.matrix.msc1767.text":"There are certainly ways that would cross the streams :-)"},"ts":1655857108154,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jgElvePeAI-r2b29w7-oVPqvbiwi4Y5wXDXZMkY1NR0"},
{"content":{"body":"That’s a good idea.","msgtype":"m.text","org.matrix.msc1767.text":"That’s a good idea."},"ts":1655857163313,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$DRzChiwb2aXbsW9GMT2zETJnH7v0-T0X11b0TXZxfCY"},
{"content":{"body":"(and I guess it's an error if that leaves you with a free reference to another module fragment)","msgtype":"m.text","org.matrix.msc1767.text":"(and I guess it's an error if that leaves you with a free reference to another module fragment)"},"ts":1655857170684,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-QN_Ml8QVdhgdHmxSaJp0iKyhSPskLXwLv433G6eUjU"}
]