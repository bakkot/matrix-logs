[
{"content":{"body":"nicolo-ribaudo: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"nicolo-ribaudo: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?","mimetype":"text/html"}]},"ts":1656540172190,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$z7TFoCfP2jtazaWmarJIPqK8Y-38ZompXbZdUILPbBo"},
{"content":{"body":"Follow-up, where does the web anchor its module map? Realm, Agent, Agent Cluster?","msgtype":"m.text","org.matrix.msc1767.text":"Follow-up, where does the web anchor its module map? Realm, Agent, Agent Cluster?"},"ts":1656540208478,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$16QwWO_H08cNwE4kSJRPo25pdRyFzZBY8-LcnKW229I"},
{"content":{"body":"> <@kriskowal:matrix.org> nicolo-ribaudo: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?\n\nYes, you are right ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$z7TFoCfP2jtazaWmarJIPqK8Y-38ZompXbZdUILPbBo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br /><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: can you confirm a suspicion for me? Am I right that 262 does not specify a module map at all? All module map behavior is deferred to host hooks?</blockquote></mx-reply>Yes, you are right","m.relates_to":{"m.in_reply_to":{"event_id":"$z7TFoCfP2jtazaWmarJIPqK8Y-38ZompXbZdUILPbBo"}},"msgtype":"m.text"},"ts":1656540376531,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$-0fjvv671B_2LPAlRGMc1EdONf-9LTred_u09TSdaCs"},
{"content":{"body":"Iâ€™ve been talking to Caridy PatiÃ±o about carving the leanest subset possible out of the compartments proposal. One of the motivating reasons is that we are less likely to encounter friction with hosts if weâ€™re not the first proposal to introduce a distinction between import specifier and referrer specifier (where thereâ€™s currently just module specifier and that _means_ import specifier), and not confine hosts to implement module maps in any particular way.","format":"org.matrix.custom.html","formatted_body":"Iâ€™ve been talking to Caridy PatiÃ±o about carving the leanest subset possible out of the compartments proposal. One of the motivating reasons is that we are less likely to encounter friction with hosts if weâ€™re not the first proposal to introduce a distinction between import specifier and referrer specifier (where thereâ€™s currently just module specifier and that <em>means</em> import specifier), and not confine hosts to implement module maps in any particular way.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Iâ€™ve been talking to Caridy PatiÃ±o about carving the leanest subset possible out of the compartments proposal. One of the motivating reasons is that we are less likely to encounter friction with hosts if weâ€™re not the first proposal to introduce a distinction between import specifier and referrer specifier (where thereâ€™s currently just module specifier and that _means_ import specifier), and not confine hosts to implement module maps in any particular way.","mimetype":"text/plain"},{"body":"Iâ€™ve been talking to Caridy PatiÃ±o about carving the leanest subset possible out of the compartments proposal. One of the motivating reasons is that we are less likely to encounter friction with hosts if weâ€™re not the first proposal to introduce a distinction between import specifier and referrer specifier (where thereâ€™s currently just module specifier and that <em>means</em> import specifier), and not confine hosts to implement module maps in any particular way.","mimetype":"text/html"}]},"ts":1656540389927,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mTS1YSGTOTDZgyFqBy7MxkX8AIGSPWQtnlxcnpw6DtM"},
{"content":{"body":"> <@kriskowal:matrix.org> Follow-up, where does the web anchor its module map? Realm, Agent, Agent Cluster?\n\nI don't know yet, I might have an answer next week because I still need to finish reading that part of the spec ðŸ˜¬ unless you find it earlier ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$16QwWO_H08cNwE4kSJRPo25pdRyFzZBY8-LcnKW229I?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br />Follow-up, where does the web anchor its module map? Realm, Agent, Agent Cluster?</blockquote></mx-reply>I don't know yet, I might have an answer next week because I still need to finish reading that part of the spec ðŸ˜¬ unless you find it earlier","m.relates_to":{"m.in_reply_to":{"event_id":"$16QwWO_H08cNwE4kSJRPo25pdRyFzZBY8-LcnKW229I"}},"msgtype":"m.text"},"ts":1656540414154,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Uwmr_qH5E4RgTErZDA3yUJfntuJZc-EVoYfgU5STq6s"},
{"content":{"body":"Thanks. I would be delighted to benefit from your exploration!","msgtype":"m.text","org.matrix.msc1767.text":"Thanks. I would be delighted to benefit from your exploration!"},"ts":1656540430937,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ippm0i7NaF0vZCxXwXK1WmmG8Es7uTqHOrw0Gb4qkCA"},
{"content":{"body":"Toward that end, trying to glean as much as I can from the spec text you landed in blocks.","msgtype":"m.text","org.matrix.msc1767.text":"Toward that end, trying to glean as much as I can from the spec text you landed in blocks."},"ts":1656540466343,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$pGYnFcjEzAVQiAgoNZDzoZ4_JauHMhqG1Aw0EbNTfWI"},
{"content":{"body":"In any case, I think Iâ€™m getting closer to isolating the major axes of design tension so we can have a productive conversation at the call next Wednesday.","msgtype":"m.text","org.matrix.msc1767.text":"In any case, I think Iâ€™m getting closer to isolating the major axes of design tension so we can have a productive conversation at the call next Wednesday."},"ts":1656540513621,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$w2m41He3dEjzalOkRt-BZVxX5mHvBlALZ6Q3ZU3zuoo"},
{"content":{"body":"Awesome! I also still have to fix some other things in module blocks, since my changes were in the good direction but I'm not satisfied yet ","msgtype":"m.text"},"ts":1656540565368,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ohy5__TU8eiQdvxnaiR6BKJ6eC9HD1SmxCKBhACrgw4"},
{"content":{"body":"And that involves learning more about how html handles modules ","msgtype":"m.text"},"ts":1656540582402,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RGhjWrQvWYVmiR7eONcq2dPTWSEsYOvXpydeBxc1AI8"},
{"content":{"body":"One of those axes is whether to reify ModuleInstance vs ModuleLoader (by whatever names). ModuleSource (by whatever name) exists in either version.","msgtype":"m.text","org.matrix.msc1767.text":"One of those axes is whether to reify ModuleInstance vs ModuleLoader (by whatever names). ModuleSource (by whatever name) exists in either version."},"ts":1656540588456,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VS0ywaiC-ti4h-bUuAxkEg1DtaxrhUXwO8lPOaIHz6M"},
{"content":{"body":"Along that axes, the dominant design tensions appear to be:\n1. With ModuleInstance, some responsibility passes to the host hooks to maintain idempotence, whereas ModuleLoader can encourage but not enforce idempotence. Thereâ€™s no viable proposal that fully enforces that invariant, as that would be antithetical to some of the motivating cases.\n2. With ModuleLoader (by whatever name), carry a virtualized module map. That does not need to be an imposition on the current host-defined module map, and it should be *possible* to virtualize the web.","format":"org.matrix.custom.html","formatted_body":"<p>Along that axes, the dominant design tensions appear to be:</p>\n<ol>\n<li>With ModuleInstance, some responsibility passes to the host hooks to maintain idempotence, whereas ModuleLoader can encourage but not enforce idempotence. Thereâ€™s no viable proposal that fully enforces that invariant, as that would be antithetical to some of the motivating cases.</li>\n<li>With ModuleLoader (by whatever name), carry a virtualized module map. That does not need to be an imposition on the current host-defined module map, and it should be <em>possible</em> to virtualize the web.</li>\n</ol>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Along that axes, the dominant design tensions appear to be:\n1. With ModuleInstance, some responsibility passes to the host hooks to maintain idempotence, whereas ModuleLoader can encourage but not enforce idempotence. Thereâ€™s no viable proposal that fully enforces that invariant, as that would be antithetical to some of the motivating cases.\n2. With ModuleLoader (by whatever name), carry a virtualized module map. That does not need to be an imposition on the current host-defined module map, and it should be *possible* to virtualize the web.","mimetype":"text/plain"},{"body":"<p>Along that axes, the dominant design tensions appear to be:</p>\n<ol>\n<li>With ModuleInstance, some responsibility passes to the host hooks to maintain idempotence, whereas ModuleLoader can encourage but not enforce idempotence. Thereâ€™s no viable proposal that fully enforces that invariant, as that would be antithetical to some of the motivating cases.</li>\n<li>With ModuleLoader (by whatever name), carry a virtualized module map. That does not need to be an imposition on the current host-defined module map, and it should be <em>possible</em> to virtualize the web.</li>\n</ol>\n","mimetype":"text/html"}]},"ts":1656540866802,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$xyI2cSVrmQyaCQWkmkWjlQrD2G8X71o77GIX-7FIwPU"}
]