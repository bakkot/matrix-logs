[
{"content":{"body":"Caridy (and by association Daniel) have convinced me that we can use `importMeta` as in `new Module(source, importHook, importMeta)` and in `importHook(importSpecifier, importMeta)` to stand in for a “referrer” and that every host environment would still be able to emulate every other host environment. The key is that `importMeta` is object identical in these cases so can be used to carry a gensym or as a key in a WeakMap, even though it’s not identical to the `import.meta` that the evaluated module sees (unless we change that in ecma262 too!).","format":"org.matrix.custom.html","formatted_body":"Caridy (and by association Daniel) have convinced me that we can use <code>importMeta</code> as in <code>new Module(source, importHook, importMeta)</code> and in <code>importHook(importSpecifier, importMeta)</code> to stand in for a “referrer” and that every host environment would still be able to emulate every other host environment. The key is that <code>importMeta</code> is object identical in these cases so can be used to carry a gensym or as a key in a WeakMap, even though it’s not identical to the <code>import.meta</code> that the evaluated module sees (unless we change that in ecma262 too!).","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Caridy (and by association Daniel) have convinced me that we can use `importMeta` as in `new Module(source, importHook, importMeta)` and in `importHook(importSpecifier, importMeta)` to stand in for a “referrer” and that every host environment would still be able to emulate every other host environment. The key is that `importMeta` is object identical in these cases so can be used to carry a gensym or as a key in a WeakMap, even though it’s not identical to the `import.meta` that the evaluated module sees (unless we change that in ecma262 too!).","mimetype":"text/plain"},{"body":"Caridy (and by association Daniel) have convinced me that we can use <code>importMeta</code> as in <code>new Module(source, importHook, importMeta)</code> and in <code>importHook(importSpecifier, importMeta)</code> to stand in for a “referrer” and that every host environment would still be able to emulate every other host environment. The key is that <code>importMeta</code> is object identical in these cases so can be used to carry a gensym or as a key in a WeakMap, even though it’s not identical to the <code>import.meta</code> that the evaluated module sees (unless we change that in ecma262 too!).","mimetype":"text/html"}]},"ts":1656708610331,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7KrAhrmNcmSzmEINvrXEnna_m3DDrpeVlZ8eqsstkgk"}
]