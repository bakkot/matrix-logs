[
{"content":{"body":"i will not be to attend next meeting; this and next week conflict with some chrome events (blinkon next week, some other thing this week)","msgtype":"m.text","org.matrix.msc1767.text":"i will not be to attend next meeting; this and next week conflict with some chrome events (blinkon next week, some other thing this week)"},"ts":1667925307948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m7LwiNiTVgkK-WN_7lrVz6tT16jcZ3VH1H6QYlHh-jA"},
{"content":{"body":"We did not prepare an agenda. If guybedford is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","format":"org.matrix.custom.html","formatted_body":"We did not prepare an agenda. If <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We did not prepare an agenda. If guybedford is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","mimetype":"text/plain"},{"body":"We did not prepare an agenda. If <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","mimetype":"text/html"}]},"ts":1667926623954,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$2F9_dprYzRkeKZJhCIwX-b_H0L2WA1mmzhhA1NZZJ1I"},
{"content":{"body":"I guess we could work through a status update of the various specs perhaps since we haven't had a sync in a while","msgtype":"m.text","org.matrix.msc1767.text":"I guess we could work through a status update of the various specs perhaps since we haven't had a sync in a while"},"ts":1667926822364,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$RwrBcSn_uw-tj4TcEZa-E1O2-lqFNoW-REc_nOgHyWc"},
{"content":{"body":"not much to show for Wasm right now short of the basic reflection use case which we can always go through again, but was actually considering giving a more in depth Wasm components intro as a TC39 presentation possibly for the next meeting","msgtype":"m.text","org.matrix.msc1767.text":"not much to show for Wasm right now short of the basic reflection use case which we can always go through again, but was actually considering giving a more in depth Wasm components intro as a TC39 presentation possibly for the next meeting"},"ts":1667926912141,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$XGT8R_PJOVrMjkMVDc3UN3_rjf3yGyeS6PMgAIVwKPE"},
{"content":{"body":"(and sorry just fumbling for the meeting link here!)","msgtype":"m.text","org.matrix.msc1767.text":"(and sorry just fumbling for the meeting link here!)"},"ts":1667926946754,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$kG233K-J5Bc7cjlYUbzjPrgR9QZHv6xrW8ZU5Un_zM8"},
{"content":{"body":"oh, we still had another half hour on the time","msgtype":"m.text","org.matrix.msc1767.text":"oh, we still had another half hour on the time"},"ts":1667930812371,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$R1vkxMrAfbQ5hGbJj0C7m-ApzIZsISVpRU-SLPaThfg"},
{"content":{"body":"Dinner time for all of us near GMT, it's fine to end earlier :P","msgtype":"m.text","org.matrix.msc1767.text":"Dinner time for all of us near GMT, it's fine to end earlier :P"},"ts":1667930919860,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$q1CfcflMjZWch6mQlklkLalgLw63ZKlwY4uPPdCSO-A"},
{"content":{"body":"Mathieu Hofman I was wrong, `(async function f() { try { await import(\"data:text/javascript, throw new Error()\") } catch (e) { return console.log(\"STACK\", e.stack) } })()` doesn't leak the function name neither in Chrome nor in Firefox.\n\nThe error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> I was wrong, <code>(async function f() { try { await import(&quot;data:text/javascript, throw new Error()&quot;) } catch (e) { return console.log(&quot;STACK&quot;, e.stack) } })()</code> doesn't leak the function name neither in Chrome nor in Firefox.</p>\n<p>The error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Mathieu Hofman I was wrong, `(async function f() { try { await import(\"data:text/javascript, throw new Error()\") } catch (e) { return console.log(\"STACK\", e.stack) } })()` doesn't leak the function name neither in Chrome nor in Firefox.\n\nThe error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> I was wrong, <code>(async function f() { try { await import(&quot;data:text/javascript, throw new Error()&quot;) } catch (e) { return console.log(&quot;STACK&quot;, e.stack) } })()</code> doesn't leak the function name neither in Chrome nor in Firefox.</p>\n<p>The error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.</p>\n","mimetype":"text/html"}]},"ts":1667931032205,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$qyrHeymgc1vU_YMcGFuWu1mghw_5newc2YEt5FRQqDk"},
{"content":{"body":"interesting that the CSP error contains more information","msgtype":"m.text","org.matrix.msc1767.text":"interesting that the CSP error contains more information"},"ts":1667935575748,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$1iFKJ8FeTBPG9AgJHLctg8bOy_jnbdpIixaou8OesuM"},
{"content":{"body":"We really need to move the error stack proposal forward to put them within tc39 scope","msgtype":"m.text","org.matrix.msc1767.text":"We really need to move the error stack proposal forward to put them within tc39 scope"},"ts":1667935608920,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$IwQxwAarArkw1ZFblYtskn1ZrnGxSLrViWu7DNugOtY"}
]