[
{"content":{"body":"i will not be to attend next meeting; this and next week conflict with some chrome events (blinkon next week, some other thing this week)","msgtype":"m.text","org.matrix.msc1767.text":"i will not be to attend next meeting; this and next week conflict with some chrome events (blinkon next week, some other thing this week)"},"ts":1667925307948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m7LwiNiTVgkK-WN_7lrVz6tT16jcZ3VH1H6QYlHh-jA"},
{"content":{"body":"We did not prepare an agenda. If guybedford is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","format":"org.matrix.custom.html","formatted_body":"We did not prepare an agenda. If <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We did not prepare an agenda. If guybedford is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","mimetype":"text/plain"},{"body":"We did not prepare an agenda. If <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> is prepared to show us some WASM integration, this would probably be a fine meeting to do so.","mimetype":"text/html"}]},"ts":1667926623954,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$2F9_dprYzRkeKZJhCIwX-b_H0L2WA1mmzhhA1NZZJ1I"},
{"content":{"body":"I guess we could work through a status update of the various specs perhaps since we haven't had a sync in a while","msgtype":"m.text","org.matrix.msc1767.text":"I guess we could work through a status update of the various specs perhaps since we haven't had a sync in a while"},"ts":1667926822364,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$RwrBcSn_uw-tj4TcEZa-E1O2-lqFNoW-REc_nOgHyWc"},
{"content":{"body":"not much to show for Wasm right now short of the basic reflection use case which we can always go through again, but was actually considering giving a more in depth Wasm components intro as a TC39 presentation possibly for the next meeting","msgtype":"m.text","org.matrix.msc1767.text":"not much to show for Wasm right now short of the basic reflection use case which we can always go through again, but was actually considering giving a more in depth Wasm components intro as a TC39 presentation possibly for the next meeting"},"ts":1667926912141,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$XGT8R_PJOVrMjkMVDc3UN3_rjf3yGyeS6PMgAIVwKPE"},
{"content":{"body":"(and sorry just fumbling for the meeting link here!)","msgtype":"m.text","org.matrix.msc1767.text":"(and sorry just fumbling for the meeting link here!)"},"ts":1667926946754,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$kG233K-J5Bc7cjlYUbzjPrgR9QZHv6xrW8ZU5Un_zM8"},
{"content":{"body":"oh, we still had another half hour on the time","msgtype":"m.text","org.matrix.msc1767.text":"oh, we still had another half hour on the time"},"ts":1667930812371,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$R1vkxMrAfbQ5hGbJj0C7m-ApzIZsISVpRU-SLPaThfg"},
{"content":{"body":"Dinner time for all of us near GMT, it's fine to end earlier :P","msgtype":"m.text","org.matrix.msc1767.text":"Dinner time for all of us near GMT, it's fine to end earlier :P"},"ts":1667930919860,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$q1CfcflMjZWch6mQlklkLalgLw63ZKlwY4uPPdCSO-A"},
{"content":{"body":"Mathieu Hofman I was wrong, `(async function f() { try { await import(\"data:text/javascript, throw new Error()\") } catch (e) { return console.log(\"STACK\", e.stack) } })()` doesn't leak the function name neither in Chrome nor in Firefox.\n\nThe error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> I was wrong, <code>(async function f() { try { await import(&quot;data:text/javascript, throw new Error()&quot;) } catch (e) { return console.log(&quot;STACK&quot;, e.stack) } })()</code> doesn't leak the function name neither in Chrome nor in Firefox.</p>\n<p>The error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Mathieu Hofman I was wrong, `(async function f() { try { await import(\"data:text/javascript, throw new Error()\") } catch (e) { return console.log(\"STACK\", e.stack) } })()` doesn't leak the function name neither in Chrome nor in Firefox.\n\nThe error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> I was wrong, <code>(async function f() { try { await import(&quot;data:text/javascript, throw new Error()&quot;) } catch (e) { return console.log(&quot;STACK&quot;, e.stack) } })()</code> doesn't leak the function name neither in Chrome nor in Firefox.</p>\n<p>The error stack contains the function name only when the error is a CSP error, but in that case it throws fresh errors every time.</p>\n","mimetype":"text/html"}]},"ts":1667931032205,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$qyrHeymgc1vU_YMcGFuWu1mghw_5newc2YEt5FRQqDk"},
{"content":{"body":"interesting that the CSP error contains more information","msgtype":"m.text","org.matrix.msc1767.text":"interesting that the CSP error contains more information"},"ts":1667935575748,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$1iFKJ8FeTBPG9AgJHLctg8bOy_jnbdpIixaou8OesuM"},
{"content":{"body":"We really need to move the error stack proposal forward to put them within tc39 scope","msgtype":"m.text","org.matrix.msc1767.text":"We really need to move the error stack proposal forward to put them within tc39 scope"},"ts":1667935608920,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$IwQxwAarArkw1ZFblYtskn1ZrnGxSLrViWu7DNugOtY"},
{"content":{"body":"My understanding from comments from shu was that adding an error stack API wouldn't cause browsers to necessarily change how they expose non-standard information. I think you'd have to persuade them to make those changes more directly.","format":"org.matrix.custom.html","formatted_body":"My understanding from comments from <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> was that adding an error stack API wouldn't cause browsers to necessarily change how they expose non-standard information. I think you'd have to persuade them to make those changes more directly.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"My understanding from comments from shu was that adding an error stack API wouldn't cause browsers to necessarily change how they expose non-standard information. I think you'd have to persuade them to make those changes more directly.","mimetype":"text/plain"},{"body":"My understanding from comments from <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> was that adding an error stack API wouldn't cause browsers to necessarily change how they expose non-standard information. I think you'd have to persuade them to make those changes more directly.","mimetype":"text/html"}]},"ts":1667935890854,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TCReI68F86ZzWbHomyT3IbrRBv6HftQ4UvpFIzfCfGc"},
{"content":{"body":"(please correct me if I misunderstood)","msgtype":"m.text","org.matrix.msc1767.text":"(please correct me if I misunderstood)"},"ts":1667935909397,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HCg9lIJ-IQCudJmUpE5pwnu7iyTgZx4amQm349BQiTc"},
{"content":{"body":"The main problem is that right now it's hard to talk about stacks in the spec, and what information can and cannot be exposed through them","msgtype":"m.text","org.matrix.msc1767.text":"The main problem is that right now it's hard to talk about stacks in the spec, and what information can and cannot be exposed through them"},"ts":1667936456250,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$ORl1hPIh1Bo0HIdK50XGoPVi6KB9a_ZrlgtmKrwK-3Q"},
{"content":{"body":"We're seeing this with the ShadowRealm proposal, we're seeing it potentially with the lazy/deferred module loading.","msgtype":"m.text","org.matrix.msc1767.text":"We're seeing this with the ShadowRealm proposal, we're seeing it potentially with the lazy/deferred module loading."},"ts":1667936497884,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$mLS7HVEpBG1-YDib-kf3C8CbkjVeL4YYK9PvsSD0ITc"},
{"content":{"body":"it may or may not be a problem for any changes we want to make to promises as well","msgtype":"m.text","org.matrix.msc1767.text":"it may or may not be a problem for any changes we want to make to promises as well"},"ts":1667936546643,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$xKVtI3uClE70L2ZiV_iAF7-Gkmyja7hyomFZpu2yEu8"},
{"content":{"body":"this relates a lot to the lack of a shared model for what constitutes an information leak, though","msgtype":"m.text","org.matrix.msc1767.text":"this relates a lot to the lack of a shared model for what constitutes an information leak, though"},"ts":1667936567462,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h7CeQ42eivchrao4ApDm6pQ2TLBvwVKYDPrhn97vy_w"},
{"content":{"body":"i haven't checked since last time this was brought up but littledan's summary still sounds accurate","format":"org.matrix.custom.html","formatted_body":"i haven't checked since last time this was brought up but <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>'s summary still sounds accurate","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i haven't checked since last time this was brought up but littledan's summary still sounds accurate","mimetype":"text/plain"},{"body":"i haven't checked since last time this was brought up but <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>'s summary still sounds accurate","mimetype":"text/html"}]},"ts":1667936569813,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JgMKtEP3O203cC5mHy8uACCAlH0nHb9KXDYeUK41_zo"},
{"content":{"body":"(and I think this is not as simple as documenting what the SES group believes is an information leak--there is a sort of ideological disagreement)","msgtype":"m.text","org.matrix.msc1767.text":"(and I think this is not as simple as documenting what the SES group believes is an information leak--there is a sort of ideological disagreement)"},"ts":1667936593472,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AM8sxhJi934iL2eG-H8c7LGIsWnM2TdgqBb9UySwi-w"},
{"content":{"body":"burring out head in the sand pretending stacks don't exist is not right, as programs very much can observe them and change their execution","msgtype":"m.text","org.matrix.msc1767.text":"burring out head in the sand pretending stacks don't exist is not right, as programs very much can observe them and change their execution"},"ts":1667936622739,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GFg2-CA0bRERWZaqjc5X_EAeBbEk_IwtLlYcMigD2JY"},
{"content":{"body":"who is doing that in your opinion, tc39?","msgtype":"m.text","org.matrix.msc1767.text":"who is doing that in your opinion, tc39?"},"ts":1667936644821,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$09UygmjIsFcMqK_N9GWcrdOgimPXg9QRPRJ9qA7IVZA"},
{"content":{"body":"yeah, so I think the project of addressing these leaks will consist more of persuading folks about these issues, more than exposing an additional stack API","msgtype":"m.text","org.matrix.msc1767.text":"yeah, so I think the project of addressing these leaks will consist more of persuading folks about these issues, more than exposing an additional stack API"},"ts":1667936684161,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6u7AEvReKaQ3KNS-o0-Yc1RActlybFa-GFAiR79Hj4o"},
{"content":{"body":"I believe we/tc39 keep forgetting that some changes may have visible impact through stack information","msgtype":"m.text","org.matrix.msc1767.text":"I believe we/tc39 keep forgetting that some changes may have visible impact through stack information"},"ts":1667936718499,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$z_Y2klKDzZFxFIpHyulVKxMqawZWMiup4CG6q_dzSE4"},
{"content":{"body":"because stacks are not currently defined anywhere in ecma262","msgtype":"m.text","org.matrix.msc1767.text":"because stacks are not currently defined anywhere in ecma262"},"ts":1667936755567,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$H932TeFxlUWchwgqpezqRrd02WeM4CXES9AyMlQ-xc0"},
{"content":{"body":"my point is, you're misanalyzing the causation there","msgtype":"m.text","org.matrix.msc1767.text":"my point is, you're misanalyzing the causation there"},"ts":1667936785874,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BpL2b6gL0MGetF0o2rOxdSmsQO53bk3lcT_XHaS4uOs"},
{"content":{"body":"causality? cause?","msgtype":"m.text","org.matrix.msc1767.text":"causality? cause?"},"ts":1667936814048,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ch8P_GaUW4wuhfNWO2MeXaQHl462U8r8UxZJ2AUl5uo"},
{"content":{"body":"today on the call, noone was sure of the content of the stack property for an error contructed during evaluation of dynamically imported module ","msgtype":"m.text","org.matrix.msc1767.text":"today on the call, noone was sure of the content of the stack property for an error contructed during evaluation of dynamically imported module "},"ts":1667936818209,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$zT-a8tVcOkwgT1Oq75KuGullTAYp1odiQjjFviKOnSo"},
{"content":{"body":"we all somewhat agreed that having potentially different evaluation behavior based on the dynamic import stack would be weird","msgtype":"m.text","org.matrix.msc1767.text":"we all somewhat agreed that having potentially different evaluation behavior based on the dynamic import stack would be weird"},"ts":1667936898061,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$04qeWVuqFP215b8OA6qCQYO-h73n5LAvojptR3wq-fg"},
{"content":{"body":"if we add an additional stack API, the existing ones will continue to exist, so it wouldn't really resolve that...","msgtype":"m.text","org.matrix.msc1767.text":"if we add an additional stack API, the existing ones will continue to exist, so it wouldn't really resolve that..."},"ts":1667936899675,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$91FPSmkN5sJgNcVP4vjE0o3kxvgT7vjcweb6TNpoPJA"},
{"content":{"body":"I think it'd provide a place to explicitly discuss and eventually agree on what stack frames should reveal or not","msgtype":"m.text","org.matrix.msc1767.text":"I think it'd provide a place to explicitly discuss and eventually agree on what stack frames should reveal or not"},"ts":1667936970443,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$bQG3Z6ba5KvO5ua5wdyVN6AcsugdI0lLUUXi3SYgS2g"}
]