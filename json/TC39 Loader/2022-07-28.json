[
{"content":{"body":"> <@kriskowal:matrix.org> nicolo-ribaudo: In the extra time on the SES call, caridy agreed to add referrer, so new Module(source, referrer, â€¦) and we are still working on the importMeta and importHook order/optionality. But, among us, weâ€™ve arrived at importHook(specifier, referrer) for the hook signature.\n\nI've got some ideas when I left the SES call too ðŸ˜› I'll post them on GitHub so that Caridy can see them.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ZAeLAY0HGxbsV6oqCQuJ1d7kz2X0Cw7AV5CnxjuHgu0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>nicolo-ribaudo: In the extra time on the SES call, caridy agreed to add referrer, so new Module(source, referrer, â€¦) and we are still working on the importMeta and importHook order/optionality. But, among us, weâ€™ve arrived at importHook(specifier, referrer) for the hook signature.</blockquote></mx-reply>I've got some ideas when I left the SES call too ðŸ˜› I'll post them on GitHub so that Caridy can see them.","m.relates_to":{"m.in_reply_to":{"event_id":"$ZAeLAY0HGxbsV6oqCQuJ1d7kz2X0Cw7AV5CnxjuHgu0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> nicolo-ribaudo: In the extra time on the SES call, caridy agreed to add referrer, so new Module(source, referrer, â€¦) and we are still working on the importMeta and importHook order/optionality. But, among us, weâ€™ve arrived at importHook(specifier, referrer) for the hook signature.\n\nI've got some ideas when I left the SES call too ðŸ˜› I'll post them on GitHub so that Caridy can see them.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ZAeLAY0HGxbsV6oqCQuJ1d7kz2X0Cw7AV5CnxjuHgu0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>nicolo-ribaudo: In the extra time on the SES call, caridy agreed to add referrer, so new Module(source, referrer, â€¦) and we are still working on the importMeta and importHook order/optionality. But, among us, weâ€™ve arrived at importHook(specifier, referrer) for the hook signature.</blockquote></mx-reply>I've got some ideas when I left the SES call too ðŸ˜› I'll post them on GitHub so that Caridy can see them.","mimetype":"text/html"}]},"ts":1658988599941,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JOnFoBCYIoWxhDCkfOPt7eRJt37gQXLHWxy8ZZl2yC4"},
{"content":{"body":"what happened in that call? Sorry I missed it","msgtype":"m.text","org.matrix.msc1767.text":"what happened in that call? Sorry I missed it"},"ts":1659013199190,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wXdo9sb4rQXFvSdoSaNQRKpinqZsYjw4R6GlL9SvOiI"},
{"content":{"body":"We reviewed Caridy's proposed spec for Layer 0 of compartments, and my host hooks refactor. Then they had the discussion about referrer vs importMeta.","msgtype":"m.text","org.matrix.msc1767.text":"We reviewed Caridy's proposed spec for Layer 0 of compartments, and my host hooks refactor. Then they had the discussion about referrer vs importMeta."},"ts":1659015203544,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$AHfi5Mq8my7-aQi4EXvdjdMgU2IP5f6cCpSgdwfyujY"},
{"content":{"body":"how do people feel about the host hooks refactor?","msgtype":"m.text","org.matrix.msc1767.text":"how do people feel about the host hooks refactor?"},"ts":1659019213243,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EoGggU1Mz_dt8VGomLDyTKcNH1oUd7KXGiCRYvR4sh8"},
{"content":{"body":"Yesterday there were no negative comments! We were unsure if it's editorial or normative, but it's something that we can figure out. I believe that the only potentially observable change from user code is that if you import the same module dynamically twice in the same file, the number of promise ticks needed to \"call\" the second import is now spec-defined rather than host-defined.","msgtype":"m.text","org.matrix.msc1767.text":"Yesterday there were no negative comments! We were unsure if it's editorial or normative, but it's something that we can figure out. I believe that the only potentially observable change from user code is that if you import the same module dynamically twice in the same file, the number of promise ticks needed to \"call\" the second import is now spec-defined rather than host-defined."},"ts":1659019738350,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ts6mo9juOvSP1Gi2um6bRZxHJQMA3sfhRi8LKxt1iJE"},
{"content":{"body":"I think we'll continue to disagree on whether such a change is normative, but that shouldn't block it from landing :)","msgtype":"m.text","org.matrix.msc1767.text":"I think we'll continue to disagree on whether such a change is normative, but that shouldn't block it from landing :)"},"ts":1659019763962,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yNj-MwafVNYFPi1Ha8BH2cEgI13CYY_4rdioW8Eo0O0"},
{"content":{"body":"there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change.","msgtype":"m.text","org.matrix.msc1767.text":"there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change."},"ts":1659019842220,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rLcND2QF35pq7bb3POp9ERUgbYg-w8vDMWqT-xWseKE"},
{"content":{"body":"Yes I agree that we should not do this \"silently\" just with the editors","msgtype":"m.text","org.matrix.msc1767.text":"Yes I agree that we should not do this \"silently\" just with the editors"},"ts":1659019931000,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$zVWuFmXgfgEfEpx4kTbas-GP-7Z2gvGansUnZwhStfo"},
{"content":{"body":"Has there been any more discussion on whether import reflection should give you a Module or ModuleSource/WebAssembly.Module?","msgtype":"m.text","org.matrix.msc1767.text":"Has there been any more discussion on whether import reflection should give you a Module or ModuleSource/WebAssembly.Module?"},"ts":1659019941798,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$L9EBknu_vkAR2GM3kjlEd6NsvAwyBRoGl8SofPEVzYA"},
{"content":{"body":"Nope","msgtype":"m.text","org.matrix.msc1767.text":"Nope"},"ts":1659019954373,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bE4BVwpXBmGXa0L3DuZM4WzCnKs-lf7FhqY8lWbas2c"},
{"content":{"body":"maybe we can put this on our modules call agenda next time?","msgtype":"m.text","org.matrix.msc1767.text":"maybe we can put this on our modules call agenda next time?"},"ts":1659019971667,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$iaeqb729ZVNJu3XnOZCEqu8BjVTKCzeTitRyPGocrMo"},
{"content":{"body":" * maybe we can put this on our modules call agenda next time?","m.new_content":{"body":"maybe we can put this on our modules call agenda next time?","msgtype":"m.text","org.matrix.msc1767.text":"maybe we can put this on our modules call agenda next time?"},"m.relates_to":{"event_id":"$iaeqb729ZVNJu3XnOZCEqu8BjVTKCzeTitRyPGocrMo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * maybe we can put this on our modules call agenda next time?"},"ts":1659019977459,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mKHmEw4a7m277i2hXzPTHdMN_34wFeBgW1F9ntWlbgw"},
{"content":{"body":" * there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change.","m.new_content":{"body":"there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change.","msgtype":"m.text","org.matrix.msc1767.text":"there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change."},"m.relates_to":{"event_id":"$rLcND2QF35pq7bb3POp9ERUgbYg-w8vDMWqT-xWseKE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * there's the argument that \"layering\" changes are not normative but just editorial refactoring, and there are people who see the host hooks as a critical layer with normative semantics. Either way, it should be reviewed in plenary since it's a big change."},"ts":1659020006863,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3d4xwqWRtACcL32dnhdVDYdi1MQwBX-iGVZhTez6pck"},
{"content":{"body":"one detail which we haven't explicitly discussed is that, if we go the Module way, we should allow people to ship this *while initially rejecting if you directly import() a Wasm module*. This is because implementing Wasm/ESM integration is a lot of work, not so useful yet, and it shouldn't block getting access to the WebAssembly.Module","format":"org.matrix.custom.html","formatted_body":"one detail which we haven't explicitly discussed is that, if we go the Module way, we should allow people to ship this <em>while initially rejecting if you directly import() a Wasm module</em>. This is because implementing Wasm/ESM integration is a lot of work, not so useful yet, and it shouldn't block getting access to the WebAssembly.Module","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"one detail which we haven't explicitly discussed is that, if we go the Module way, we should allow people to ship this *while initially rejecting if you directly import() a Wasm module*. This is because implementing Wasm/ESM integration is a lot of work, not so useful yet, and it shouldn't block getting access to the WebAssembly.Module","mimetype":"text/plain"},{"body":"one detail which we haven't explicitly discussed is that, if we go the Module way, we should allow people to ship this <em>while initially rejecting if you directly import() a Wasm module</em>. This is because implementing Wasm/ESM integration is a lot of work, not so useful yet, and it shouldn't block getting access to the WebAssembly.Module","mimetype":"text/html"}]},"ts":1659020094916,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Cx5SkQDUWpwudFXX0ryJQBvzQYQDw7lrjxVF7kWIrJ4"}
]