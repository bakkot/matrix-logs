[
{"content":{"body":"I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables. \n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.\n","format":"org.matrix.custom.html","formatted_body":"<p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables.</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1744829268566,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$wrmdj4AFWPlJxbiPch08UD6htelbbY2KvWG9-aIFRok"},
{"content":{"body":"* I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).\n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.","format":"org.matrix.custom.html","formatted_body":"* <p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"m.new_content":{"body":"I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).\n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.","format":"org.matrix.custom.html","formatted_body":"<p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wrmdj4AFWPlJxbiPch08UD6htelbbY2KvWG9-aIFRok","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744829337920,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GyUc4dZYSZ1c-__YtDa9OdfCtgCkcJqJEhDykwIQEno"},
{"content":{"body":"well, I think those questions could lead to a little bit of confusion. We're always being asked to make signals based on observables, but it doesn't make sense because, at most, it's a way that we could take a callback as an argument. it does keep getting repeated. I'm worried about the opposite thing: what if people use observables when they want reactivity? (which observables are broken for, but signals works well for)","m.mentions":{},"msgtype":"m.text"},"ts":1744830500842,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kXPT7ZgLknkmqWJGi73rjIKjmr9V4Aj7THjRzjmSF8A"},
{"content":{"body":"re: outreach: I was always aware of the Observables proposal and intermmitently in contact","m.mentions":{},"msgtype":"m.text"},"ts":1744830522101,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Anx8BSuewnNdaXs9AJzfa7lkHhU0swNzGlDYxH1hZ0c"},
{"content":{"body":"for interoperability: some things in the DOM could be exposed as Observables which I think would be better handled as signals, e.g., ResizeObserver. But we can't say \"don't use Observables\" since we haven't proven out Signals yet","m.mentions":{},"msgtype":"m.text"},"ts":1744830565729,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ywazEIHlZH1Hno25md4XQbY69lE5m3NoiBOYpV3G3og"},
{"content":{"body":"Can you create a signal out of an observable?","msgtype":"m.text"},"ts":1744830607411,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$vWUpj3CGdOyIh47PdUpvDgXkfvY7XcSpz5BlyQu9xcg"},
{"content":{"body":"you can!","m.mentions":{},"msgtype":"m.text"},"ts":1744830625687,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qwE8vm6TTbeMhDzBR_Os0KuOJENbAT_p5Jl28gQpci4"},
{"content":{"body":"it requires a 3-line snippet","m.mentions":{},"msgtype":"m.text"},"ts":1744830630412,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bBJO5Vj5vwF8Yd8MuQVBv-GOhj0RCJqQmohQkV29WuY"},
{"content":{"body":"the questions aren't *bad* but I'm not sure if they'll lead to productive conversation","format":"org.matrix.custom.html","formatted_body":"the questions aren't <em>bad</em> but I'm not sure if they'll lead to productive conversation","m.mentions":{},"msgtype":"m.text"},"ts":1744830642418,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Vp_XqI1ch7lefOqV5I59JmrSzNkBZcSE-YuS_dKwXhg"},
{"content":{"body":"but we're at risk of even worse, more unproductive conversation, if people get stuck on turf wars","m.mentions":{},"msgtype":"m.text"},"ts":1744830660562,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$LkNHcoaqTH0Wmr0Z09Kx0PnHBzTf8HXCSNnVbK34YQU"},
{"content":{"body":"I think Observables can live next to Signals.\nIn Reactive Programming there are both Cells (states/signals) and also Events (Observables).\nEvents are the points when a state change is triggered.\n\nIt's possible to use Observables to implement Cells but it's not a good fit due to glitching.\n","format":"org.matrix.custom.html","formatted_body":"I think Observables can live next to Signals.<br />In Reactive Programming there are both Cells (states/signals) and also Events (Observables).<br />Events are the points when a state change is triggered.<br /><br />It's possible to use Observables to implement Cells but it's not a good fit due to glitching.<br />","msgtype":"m.text"},"ts":1744831008593,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$AxsDam-l26Rk3_85XL3-NbUxDB3Z9TgMTaW0SPPw2nc"},
{"content":{"body":"I agree. I don't want it to turn into an observables-vs-signals fight","m.mentions":{},"msgtype":"m.text"},"ts":1744831497368,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0yUTr8dMlK3d0VGZNIcLWaKsj3ZIltEvB9W1bS1q6x0"},
{"content":{"body":"Yes, I want to avoid turf wars. \nI’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli. \nSo I hope that we can focus constructively on interoperability and coordination. \nSuggestions on the questions are welcome. ","format":"org.matrix.custom.html","formatted_body":"Yes, I want to avoid turf wars.<br />\nI’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.<br />\nSo I hope that we can focus constructively on interoperability and coordination.<br />\nSuggestions on the questions are welcome.","msgtype":"m.text"},"ts":1744831914925,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$5M1LLHwU9KKo55QQgDO9uR9Dsl8zLMPub5VlkjSO3YQ"},
{"content":{"body":"* Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.\n So I hope that we can focus constructively on increasing their interoperability and coordination.\n Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","format":"org.matrix.custom.html","formatted_body":"* Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.<br />\n So I hope that we can focus constructively on increasing their interoperability and coordination.<br />\n Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","m.new_content":{"body":"Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.\n So I hope that we can focus constructively on increasing their interoperability and coordination.\n Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","format":"org.matrix.custom.html","formatted_body":"Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.<br />\n So I hope that we can focus constructively on increasing their interoperability and coordination.<br />\n Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$5M1LLHwU9KKo55QQgDO9uR9Dsl8zLMPub5VlkjSO3YQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744832183706,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$EH6dbwcikUkH5xNtlJHGtj9QbJ7I6WmlUC3MXPYPclo"},
{"content":{"body":"* Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.  So I hope that we can focus constructively on increasing Observables’ and Signals’ interoperability and coordination.  Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","m.new_content":{"body":"Yes, I want to avoid turf wars. I’m treating Observables’ coupling to DOM Events and thus WHATWG as a fait accompli.  So I hope that we can focus constructively on increasing Observables’ and Signals’ interoperability and coordination.  Suggestions on the questions are welcome. (For example, I can skip or delay the “what do you see their respective roles” question.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$5M1LLHwU9KKo55QQgDO9uR9Dsl8zLMPub5VlkjSO3YQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744832237653,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$6_r3RDG-bAgpfOQn-FCkSAC0mFQcx1ei8lrHvWbZDuk"},
{"content":{"body":"> <@littledan:matrix.org> well, I think those questions could lead to a little bit of confusion. We're always being asked to make signals based on observables, but it doesn't make sense because, at most, it's a way that we could take a callback as an argument. it does keep getting repeated. I'm worried about the opposite thing: what if people use observables when they want reactivity? (which observables are broken for, but signals works well for)\n\nOh, Element finally properly synced and now I see all your responses. \n\nI can hold off and avoid asking any of these three questions if you think that would be more productive, Daniel. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!JoBeERPRsfNmTzghhy%3Amatrix.org/%24kXPT7ZgLknkmqWJGi73rjIKjmr9V4Aj7THjRzjmSF8A\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>well, I think those questions could lead to a little bit of confusion. We're always being asked to make signals based on observables, but it doesn't make sense because, at most, it's a way that we could take a callback as an argument. it does keep getting repeated. I'm worried about the opposite thing: what if people use observables when they want reactivity? (which observables are broken for, but signals works well for)</blockquote></mx-reply><p>Oh, Element finally properly synced and now I see all your responses.</p>\n<p>I can hold off and avoid asking any of these three questions if you think that would be more productive, Daniel.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$kXPT7ZgLknkmqWJGi73rjIKjmr9V4Aj7THjRzjmSF8A"}},"msgtype":"m.text"},"ts":1744836131516,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Xvj28gMpIiGoiVAp3ir7fkDaKAYAIaTimXWcp98nL00"},
{"content":{"body":"It’s good to hear that there’s been some communication between the two proposals’ drivers. ","format":"org.matrix.custom.html","formatted_body":"It’s good to hear that there’s been some communication between the two proposals’ drivers.","msgtype":"m.text"},"ts":1744836449295,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gvzM4cTSSgZE1vcXCoNvw0wj7D1e3Knf6_ZYup5KZ7w"},
{"content":{"body":"* (It’s good to hear that there’s been some communication between the two proposals’ drivers.)","m.new_content":{"body":"(It’s good to hear that there’s been some communication between the two proposals’ drivers.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$gvzM4cTSSgZE1vcXCoNvw0wj7D1e3Knf6_ZYup5KZ7w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744836460929,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$UO4oTfYbnBe_wpVE29d5UrKM5DrlVpUWUJAXKZ665tg"},
{"content":{"body":"* (It’s good to hear that there’s been some communication/coordination between the two proposals’ drivers.)","m.new_content":{"body":"(It’s good to hear that there’s been some communication/coordination between the two proposals’ drivers.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$gvzM4cTSSgZE1vcXCoNvw0wj7D1e3Knf6_ZYup5KZ7w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744836481331,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Gfpkro8uqiFFf3PKll5VBX35I0VZaM8Kfy_TfCAL2y8"}
]