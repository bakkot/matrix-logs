[
{"content":{"body":"I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables. \n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.\n","format":"org.matrix.custom.html","formatted_body":"<p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables.</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1744829268566,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$wrmdj4AFWPlJxbiPch08UD6htelbbY2KvWG9-aIFRok"},
{"content":{"body":"* I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).\n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.","format":"org.matrix.custom.html","formatted_body":"* <p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"m.new_content":{"body":"I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).\n\nAs a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—\n\nIntersection with ES Signals: In a world with both, what is the role of either?\n\n- This is an exciting proposal. Thank you for presenting it to TC39.\n- ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?\n\nCoordination/outreach to Signals champions?\n\n- I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.\n\nInteroperability with Signals: Observables feeding Signals or vice versa?\n\n- More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.","format":"org.matrix.custom.html","formatted_body":"<p>I’ve been excitedly watching both ES Signals and WHATWG Observables from the outside. And I’m enthused about tomorrow’s presentation for plenary feedback from Dominic Farolino about WHATWG Observables (https://docs.google.com/presentation/d/1i5_zneksrU7i7ZHcl5EQRzUHGkmXRIQKd-bLfrPRNXY/edit?usp=sharing).</p>\n<p>As a heads up to the Signals group, I plan to ask the following three questions to Dominic regarding Observables’ interactions with Signals—</p>\n<p>Intersection with ES Signals: In a world with both, what is the role of either?</p>\n<ul>\n<li>This is an exciting proposal. Thank you for presenting it to TC39.</li>\n<li>ES Signals are also an active proposal. Observables and Signals will seem superficially similar to many developers. Indeed, I’ve seen several comments on Signals conceptually depending on Observables as a primitive, although that seems to be impossible given Observables’ dependence on DOM. So I’d like clarification on what roles do you see Observables versus Signals serving, in a hypothetical future world with both. Do you see Observables and Signals as redundant or complementary? Do you see developers using both Observables and Signals?</li>\n</ul>\n<p>Coordination/outreach to Signals champions?</p>\n<ul>\n<li>I’d like to know whether there has been prior outreach and coordination with the champions of the ES Signals proposal, such as Daniel Ehrenberg and Rob Eisenberg. I think coordination between the two groups is very important here. It will probably be important to coordinate messaging to developers regarding the two proposals’ respective roles. Also, API uniformity between Observables and Signals where appropriate, especially in naming and maybe interoperability, also requires coordination between the two proposals. I haven’t seen evidence of direct coordination between the Signal and Observable groups except for Ben Lesh’s occasional appearance in Signals’ GitHub issues.</li>\n</ul>\n<p>Interoperability with Signals: Observables feeding Signals or vice versa?</p>\n<ul>\n<li>More on Signals. Have there been explorations on how an Observable could feed a Signal or vice versa? It would need to be WHATWG DOM, not core ECMAScript, that specifies such an API. The situation is somewhat analogous with WHATWG Streams and ECMAScript async iterators. I understand that Observables are probably closer to shipping than Signals are, so this could be deferred to a future DOM proposal, but this should still be explored early on.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wrmdj4AFWPlJxbiPch08UD6htelbbY2KvWG9-aIFRok","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1744829337920,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GyUc4dZYSZ1c-__YtDa9OdfCtgCkcJqJEhDykwIQEno"}
]