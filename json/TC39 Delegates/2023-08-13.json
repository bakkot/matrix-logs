[
{"content":{"body":"bakkot: the more i convert codebases to use iterator helpers, the more i dearly need .concat - that follow-on can't come fast enough","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the more i convert codebases to use iterator helpers, the more i dearly need .concat - that follow-on can't come fast enough","msgtype":"m.text"},"ts":1691964383087,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$I5L_-HrN0Mb1bj-YgHqIUliE3l4n2bVRKKWkKM9klhY"},
{"content":{"body":"if you have use cases that will help!","msgtype":"m.text"},"ts":1691964412430,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$q8daCANLAHt76F43bxSGbZYqsyXBDTau34gmUnTF0sQ"},
{"content":{"body":"I suspect the committee will not need much convincing but it's always good to collect them","msgtype":"m.text"},"ts":1691964429257,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$97FNesafydYc_ij2-9AwCwJIZC84W4zGh11E4Zs1n9Q"},
{"content":{"body":"i mean, basically every time i have a chain of transformations that starts in an iterable, and i want to manually add in some hardcoded cases. concretely, in eslint-plugin-jsx-a11y, there's a few places where we need to hardcode specific aria role values, so we need to concat them onto the Set provided by an aria library as part of the transformation chain","msgtype":"m.text"},"ts":1691964628797,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B4s6RY6MI9jjfrcWqSEQ75OUWVHjz7fdlY9lfWGn_zE"},
{"content":{"body":"also, i build up arrays/iterators of test cases, and then i want to combine the different conceptual streams of test cases, i have to reify them each into an array before concatenating","msgtype":"m.text"},"ts":1691964667948,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$snKPbulqWI6alQWsW6TB6LXU7-gcHfarJERhXV00dXE"},
{"content":{"body":"(so specifically, i need the ability to concatenate both single values as well as iterators of values)","msgtype":"m.text"},"ts":1691964740783,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fA74dJhKVsMW8w8CVpzRyihG9OJ6Bfni84OM0dW_AvI"},
{"content":{"body":" * (so specifically, i need the ability to concatenate both single values as well as iterators of values, which is exactly where concat is most useful for arrays/scalars)","m.new_content":{"body":"(so specifically, i need the ability to concatenate both single values as well as iterators of values, which is exactly where concat is most useful for arrays/scalars)","msgtype":"m.text"},"m.relates_to":{"event_id":"$fA74dJhKVsMW8w8CVpzRyihG9OJ6Bfni84OM0dW_AvI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1691964765598,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pOgoEFFeaV0ReoMkAhgSfgs_PcHN_uUsrbcWaGbIqHU"},
{"content":{"body":"ah, that specific behavior is... not one I would carry over if we can avoid it","msgtype":"m.text"},"ts":1691966161046,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uusi5YgHv-RVnusTqS2HI4Us-alqB3KKi809vmJxW4Y"},
{"content":{"body":"we'll see though","msgtype":"m.text"},"ts":1691966177323,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0RvYVr5Jpx6cBAikpdKVSSq3-UConn1teMtx5-8-5iI"},
{"content":{"body":"it's a little trickier for iterators than for arrays because a lot more things are iterable than concat-spreadable","msgtype":"m.text"},"ts":1691966218370,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1dUNYGyV89CZBg4_F6tqnLccCcnH9VWMWTsE-B7nfBE"},
{"content":{"body":"my inclination would be to go with the same thing as Iterator.prototype.flatMap, i.e. iterable (except strings) or iterator, otherwise error","msgtype":"m.text"},"ts":1691966435030,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xbw-zyQNodaWpYIuY5s0kc3vnENot3f-LTwTVhq_ELE"},
{"content":{"body":"so you'd have to `.concat([x])` to do a single item","format":"org.matrix.custom.html","formatted_body":"so you'd have to <code>.concat([x])</code> to do a single item","msgtype":"m.text"},"ts":1691966452565,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-chpBjAc_4zdFH1YQG7Nu-eTwecVnV1wqP0lAXbDVCc"}
]