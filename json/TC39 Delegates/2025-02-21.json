[
{"content":{"body":"And I do think there's a world where `enum` could be extended to support ADTs, e.g.:\n```ts\nenum Message {\n  Quit,\n  Write(text),\n  Move({x, y}),\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>And I do think there's a world where <code>enum</code> could be extended to support ADTs, e.g.:</p>\n<pre><code class=\"language-ts\">enum Message {\n  Quit,\n  Write(text),\n  Move({x, y}),\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1740096079107,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$icQsLLkhUOdHYW3wCH70wGVr6HJTPR-fjqYNCXLKMkc"},
{"content":{"body":"Rob Palmer: do you have the link to the stdlib breakout session notes?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: do you have the link to the stdlib breakout session notes?","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"msgtype":"m.text"},"ts":1740096093260,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$kSfjyhGdcMml71nMPgto0JY7Gz6fI460BiBV8nifA_o"},
{"content":{"body":"* Rob Palmer: do you have the link to the stdlib breakout session notes? nvm","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: do you have the link to the stdlib breakout session notes? nvm","m.mentions":{},"m.new_content":{"body":"Rob Palmer: do you have the link to the stdlib breakout session notes? nvm","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: do you have the link to the stdlib breakout session notes? nvm","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$kSfjyhGdcMml71nMPgto0JY7Gz6fI460BiBV8nifA_o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740096161373,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$3D5QpfklUfNM94mfghDXu-O9Nt22X9_TvUXnPKkcX8A"},
{"content":{"body":"did you mean https://devblogs.microsoft.com/typescript/announcing-typescript-5-8-rc/#the---erasablesyntaxonly-option ?","m.mentions":{"user_ids":["@rekmarks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0vrnzqsOCPbnqX9Zl8d_pc0hA-r111287KbDERAdHXk"}},"msgtype":"m.text"},"ts":1740096280515,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rB32KC-J3G_pc5WlwiF868xMalB755ptrwh3BVOYeyk"},
{"content":{"body":"ðŸ“£ come back to the main plenary room for a summary of breakouts","m.mentions":{},"msgtype":"m.text"},"ts":1740096488286,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$DxmXOAxlyrttu2INzdqqc1GFvgTtKR2y0TzqbnRAZ6M"},
{"content":{"body":"> <@bakkot:matrix.org> did you mean https://devblogs.microsoft.com/typescript/announcing-typescript-5-8-rc/#the---erasablesyntaxonly-option ?\n\nAnother reason I love TypeScript is that they frequently know what I wantâ€”and give it to meâ€”before I do","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24rB32KC-J3G_pc5WlwiF868xMalB755ptrwh3BVOYeyk\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>did you mean https://devblogs.microsoft.com/typescript/announcing-typescript-5-8-rc/#the---erasablesyntaxonly-option ?</blockquote></mx-reply>Another reason I love TypeScript is that they frequently know what I wantâ€”and give it to meâ€”before I do","m.relates_to":{"m.in_reply_to":{"event_id":"$rB32KC-J3G_pc5WlwiF868xMalB755ptrwh3BVOYeyk"}},"msgtype":"m.text"},"ts":1740096540955,"senderName":"rekmarks","senderId":"@rekmarks:matrix.org","id":"$pw2vfR6bSREr2bUZ3kEnWRJ31EOEjqRYSAfetC1EnxA"},
{"content":{"body":"I'll take notes of the summaries of the presentatoins in https://docs.google.com/document/d/17u9l-TRdEasF5cKHJnTmcBUNRqGQpsYxLNraV8sChfw/edit?tab=t.0","m.mentions":{},"msgtype":"m.text"},"ts":1740096620907,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$z4g4ZFGfcJ_tufvTadHX7biVdCmVjF5KcQoGKwgMu_8"},
{"content":{"body":"> <@anthonybullard:matrix.org> Enum with its current TS implementation is considered an anti-pattern today, not to say that a native enum implementation in ES would not be much better (since most C-like languages have them)\n\n+1, although current TS enums have some nice properties, they are ultimately inessential","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%240MW0lA30ZrzMCHS88ZA5QA5ALXb0KyWKj49uCxuBB5E\">In reply to</a> <a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">@anthonybullard:matrix.org</a><br>Enum with its current TS implementation is considered an anti-pattern today, not to say that a native enum implementation in ES would not be much better (since most C-like languages have them)</blockquote></mx-reply>+1, although current TS enums have some nice properties, they are ultimately inessential","m.relates_to":{"m.in_reply_to":{"event_id":"$0MW0lA30ZrzMCHS88ZA5QA5ALXb0KyWKj49uCxuBB5E"}},"msgtype":"m.text"},"ts":1740096797013,"senderName":"rekmarks","senderId":"@rekmarks:matrix.org","id":"$FYdHgtBn4qMJPclg0q5wadGZx8b0vjtFUM4hyrwdhGU"},
{"content":{"body":"I'd still like to hear feedback as to what exactly is considered an anti-pattern regarding `enum`? The two things I've heard have been:\n- Don't use `enum` in TS because it's not in ES\n- `enum` defaulting to numbers and not something like `Symbol()`\n\n","format":"org.matrix.custom.html","formatted_body":"<p>I'd still like to hear feedback as to what exactly is considered an anti-pattern regarding <code>enum</code>? The two things I've heard have been:</p>\n<ul>\n<li>Don't use <code>enum</code> in TS because it's not in ES</li>\n<li><code>enum</code> defaulting to numbers and not something like <code>Symbol()</code></li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1740096977072,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kq6L0IwUifHyu2XHnbo6TrZU9BljDGNQaUmoBgiL5P0"},
{"content":{"body":"(considering the alternative is manually defining a fixed set of forgeable strings, or unforgeable but inconvenient objects or symbols, and manually validating those)","m.mentions":{},"msgtype":"m.text"},"ts":1740097025948,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sCpxc7SD0KyTyMMdy8-QZyi9jGTeTWZcjkmB_KbOdQk"},
{"content":{"body":"Maybe the merging too?","m.mentions":{},"msgtype":"m.text"},"ts":1740097026281,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$WyTV1pCLH-jOhqGKIP-89GIueD5AngcfgpBDC1tRUzg"},
{"content":{"body":"Merging? as in `enum A { ... } enum A { ... }`?","format":"org.matrix.custom.html","formatted_body":"Merging? as in <code>enum A { ... } enum A { ... }</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1740097042741,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$g3U_Vjbn2HGc1Fv5xfRqwzLtKMGTjRBw5qXPKMkFTp0"},
{"content":{"body":"I'd be suprised if a 262 version had that","m.mentions":{},"msgtype":"m.text"},"ts":1740097065374,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$svS1bBpnHk1h0NU1Zs2HEG3gfm6TUxwof2etHhDZiGA"},
{"content":{"body":"I agree that's an anti-pattern and is something we probably wouldn't want to carry forward.","m.mentions":{},"msgtype":"m.text"},"ts":1740097104163,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$crWcQG8b5Nwpdaub5QlkmU0U_HublMx7_4cp7tGLak0"}
]