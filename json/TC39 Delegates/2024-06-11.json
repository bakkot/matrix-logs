[
{"content":{"body":"> <@shuyuguo:matrix.org> Promise.try too\n\nI guess I won't complain that they featured my work like this 😆","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DyUx34quNRgyZ4a51AiVMEmB2s5ux7Ys4lCfyLjaCew?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>Promise.try too</blockquote></mx-reply>I guess I won't complain that they featured my work like this 😆","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DyUx34quNRgyZ4a51AiVMEmB2s5ux7Ys4lCfyLjaCew"}},"msgtype":"m.text"},"ts":1718067915806,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$aJHpWlcdYlBtSR3O-WELHdVfG6rnzIIhgJOPn5_mTAc"},
{"content":{"body":"The Zoom is up and the Sign-in form is posted on the Reflector.\n\nhttps://github.com/tc39/Reflector/issues/527","m.mentions":{},"msgtype":"m.text"},"ts":1718087266501,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$gEjc2XbePOZBT1UvxWADNn6zPgxvGxMXmYV0E2pP95g"},
{"content":{"body":"Is it the same sign in form for remote and in person?","m.mentions":{},"msgtype":"m.text"},"ts":1718089892175,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$Gj5JnvIS6g7xGopmkdT3cL1-gNONLFnhDpyfjXdupgY"},
{"content":{"body":"Yes.","m.mentions":{},"msgtype":"m.text"},"ts":1718090204826,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$WFIbciD559Bf8uSnW23Ty-200KJOd1XX34eGwHvfiqk"},
{"content":{"body":"have a smooth recovery saminahusain ","format":"org.matrix.custom.html","formatted_body":"have a smooth recovery <a href=\"https://matrix.to/#/@saminahusain:matrix.org\">saminahusain</a>","m.mentions":{"user_ids":["@saminahusain:matrix.org"]},"msgtype":"m.text"},"ts":1718090300277,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$r0rr6wwHGMJL6dk_kbowpjP0LMTvosn7j5m3GEJvnhc"},
{"content":{"body":"recommendation to presenters: write your summary for notes ahead of time. edit on the fly as needed.","m.mentions":{},"msgtype":"m.text"},"ts":1718090417890,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$Po9wNaAorA91_b6zSwZgGkMW_SR8cIl9X3T5CWKB4N4"},
{"content":{"body":"top quality transcriptionist today","m.mentions":{},"msgtype":"m.text"},"ts":1718090613946,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Z7Y8GC-D-qLIsYpChpHQ9h3dgOJWVuQBDdPdEqVtEyk"},
{"content":{"body":" * top quality transcription today","m.mentions":{},"m.new_content":{"body":"top quality transcription today","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Z7Y8GC-D-qLIsYpChpHQ9h3dgOJWVuQBDdPdEqVtEyk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718090624791,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HhUt-1bhjh9KDuD6qYX7Iquxc5NRroIh-CW_sOZ1_wQ"},
{"content":{"body":"FYI: Google Docs works badly when many people are in the doc. Please close the doc if you just have it in the background, if you're not reading or editing the notes.","m.mentions":{},"msgtype":"m.text"},"ts":1718090935545,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Dk4voUIxTyZ7DzyoJhzKqxwLNEKFAJDMMIIQQq9TCSQ"},
{"content":{"body":"@littledan:matrix.org the recurring work was only due to Paged.js failing to break (or not break) according to the breaking rules that we wrote","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> the recurring work was only due to Paged.js failing to break (or not break) according to the breaking rules that we wrote","msgtype":"m.text"},"ts":1718091163056,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$h8CezkHuS5RkmURPwKFwZTozcw99uisvioxIZvTt4O4"},
{"content":{"body":"if a tool supports those rules, we don't need to do that work by hand","msgtype":"m.text"},"ts":1718091175405,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Wwwopk1E_UCCJrxlyGtyWdamufbUj10GevwSWdZNWzQ"},
{"content":{"body":"for any browser vendors in the room, that tool *could* be your browser if you implement CSS Paged Media btw","format":"org.matrix.custom.html","formatted_body":"for any browser vendors in the room, that tool <i data-md=\"*\">could</i> be your browser if you implement CSS Paged Media btw","msgtype":"m.text"},"ts":1718091218643,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KS1QrmqseWtrY2hHJvZzLj2jYXDcQFHiVMfQsl6hHf0"},
{"content":{"body":"cc nicolo-ribaudo 👀","format":"org.matrix.custom.html","formatted_body":"cc <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> 👀","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1718091243009,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$_uRgWBEupg8WuW1igD67COpwy_N9WLvXxJXgL5DZpis"},
{"content":{"body":" * ^ nicolo-ribaudo 👀","format":"org.matrix.custom.html","formatted_body":" * ^ <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> 👀","m.mentions":{},"m.new_content":{"body":"^ nicolo-ribaudo 👀","format":"org.matrix.custom.html","formatted_body":"^ <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> 👀","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$_uRgWBEupg8WuW1igD67COpwy_N9WLvXxJXgL5DZpis","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718091257625,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$nflNU7j0ikEOQUOzAxiIQ8pfzZ4LB-A1eDJF_pDYHn4"},
{"content":{"body":"Is ryzokuken audible from remote?","m.mentions":{},"msgtype":"m.text"},"ts":1718091458609,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$R4f1rBRYwV6X2NS9Co3cjIL0_pof7lKXdVS3ChtgBZ8"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1718091469999,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$oknZC-85QkM2v6z1jWz6rifz_e7gbTcGnZsmhAz_3jo"},
{"content":{"body":"@littledan:matrix.org in-room audio appears to be modulated separately from zoom audio","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> in-room audio appears to be modulated separately from zoom audio","msgtype":"m.text"},"ts":1718091669063,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MiZbDT1C-Oh9JIcotnoqj1ukOstLG7W4h9gzID3-kr4"},
{"content":{"body":"if something sounds off to you, ask @eemeli:mozilla.org to adjust it","format":"org.matrix.custom.html","formatted_body":"if something sounds off to you, ask <a href=\"https://matrix.to/#/%40eemeli%3Amozilla.org\">@eemeli</a> to adjust it","msgtype":"m.text"},"ts":1718091682208,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bGXow6F1-TUMw6sXy0BIHitFxbaTaTCJLVRAgz-8eNk"},
{"content":{"body":"FYI 402 editors: here is the in-progress editorial conventions document that @bakkot:matrix.org mentioned in the 262 update: https://github.com/tc39/ecma262/wiki/Editorial-Conventions","format":"org.matrix.custom.html","formatted_body":"FYI 402 editors: here is the in-progress editorial conventions document that <a href=\"https://matrix.to/#/%40bakkot%3Amatrix.org\">@bakkot</a> mentioned in the 262 update: https://github.com/tc39/ecma262/wiki/Editorial-Conventions","msgtype":"m.text"},"ts":1718091731720,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BZns64mVs0HQKRIWICf3-l-fb9G3aZmjgruEcOVTVc4"},
{"content":{"body":"Yeah, in-room and remote audio are routed separately. The speakers on the wall are delivering sound from Zoom, while in-room is from the screen at the other end.","m.mentions":{},"msgtype":"m.text"},"ts":1718091771133,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$SVGDhalFJXjBXThz2td31Yp9d-c4PW_woZLdRXJaN6Y"},
{"content":{"body":"great bullets bakkot, thanks","m.mentions":{},"msgtype":"m.text"},"ts":1718091776744,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PhIVw-n_RcThi7rpnLe3HBtPDwKYc-2FjjPlAG5smts"},
{"content":{"body":"sffc: I would prefer that we not add Gemini-produced summaries in the notes. Let's use our human intelligence to understand what the important points are.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: I would prefer that we not add Gemini-produced summaries in the notes. Let's use our human intelligence to understand what the important points are.","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"msgtype":"m.text"},"ts":1718092255259,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VEin-fl4_zHglmKxAdqsYKQvFmkbwwKTW6v_dt7Ntqw"},
{"content":{"body":"everyone who wants AI-produced summaries can make them themselves","m.mentions":{},"msgtype":"m.text"},"ts":1718092284585,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$m0NKLlJE_eg3uRqiDE4ID-AXVOOvDZ_AUs6Qujf4qtY"},
{"content":{"body":"Is the _<< Software identified by reference to the Ecma Standard* (\"Software)\">>_ in https://github.com/tc39/test262/blob/main/LICENSE#L1 a placeholder, or is it expected to be written like that?","format":"org.matrix.custom.html","formatted_body":"Is the <em>&lt;&lt; Software identified by reference to the Ecma Standard* (\"Software)\"&gt;&gt;</em> in https://github.com/tc39/test262/blob/main/LICENSE#L1 a placeholder, or is it expected to be written like that?","m.mentions":{},"msgtype":"m.text"},"ts":1718092311466,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$UH8X1WkNNgtUGH3QBtBAbi2eEDiK4R1Xy6nHUsz_hTk"},
{"content":{"body":"> <@littledan:matrix.org> everyone who wants AI-produced summaries can make them themselves\n\nyou're *so close*","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24m0NKLlJE_eg3uRqiDE4ID-AXVOOvDZ_AUs6Qujf4qtY\">In reply to</a><a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan:matrix.org</a><br />everyone who wants AI-produced summaries can make them themselves</blockquote></mx-reply>you&#39;re <i data-md=\"*\">so close</i>","m.relates_to":{"m.in_reply_to":{"event_id":"$m0NKLlJE_eg3uRqiDE4ID-AXVOOvDZ_AUs6Qujf4qtY"}},"msgtype":"m.text"},"ts":1718092464594,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-V2kt_HUcqhh67bF1NqYyM-gVV8EIQBZCSuHxd5Yn44"},
{"content":{"body":"(I don't want to read an AI summary of anything)","m.mentions":{},"msgtype":"m.text"},"ts":1718092498072,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$83KCQJSXclvkbqcVHneBL8P4HU6xBdXUXHL_ao-DPoY"},
{"content":{"body":"(and it is confusing if they're included in our docs because it looks authoritative)","m.mentions":{},"msgtype":"m.text"},"ts":1718092515214,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Huxf-0Y8aH1xrRuOXtVh7D-9b-Mp6tfi7It2CrdRMdo"},
{"content":{"body":"I agree with both of those statement","msgtype":"m.text"},"ts":1718092525357,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vNdPnbG37iBhXCs-i5O9YTcWr2WjclJlMmfGT4QNYGc"},
{"content":{"body":"* I agree with both of those statements","m.new_content":{"body":"I agree with both of those statements","msgtype":"m.text"},"m.relates_to":{"event_id":"$vNdPnbG37iBhXCs-i5O9YTcWr2WjclJlMmfGT4QNYGc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718092530073,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$I6GFXZmJjw5LUDcNjrkenhvgg7snySnP3MC8BLpwipo"},
{"content":{"body":"holy shit toronto and montreal were merged?","m.mentions":{},"msgtype":"m.text"},"ts":1718092559738,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$b4ZfKsbIyZe-grW_AN6-QdJRLHShqLMq8lBbeKwnP4A"},
{"content":{"body":"politically not insignificant","m.mentions":{},"msgtype":"m.text"},"ts":1718092573908,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$VCsfaimIZO_zr-fiNZeyM1LbXO1Gtst1YCuyu1p2Zbg"},
{"content":{"body":"it's Torontreal now","m.mentions":{},"msgtype":"m.text"},"ts":1718092579300,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$KQEQczuNt7CBbiid2Q7gcX4x3zwm6XoryBDhdLAocgk"},
{"content":{"body":"whoops, this isn't TDZ","m.mentions":{},"msgtype":"m.text"},"ts":1718092594128,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$DAKcemQdpfwhltwEymDCWzWbbQ-Heg7h6NWd-WtHnPM"},
{"content":{"body":"Montronto surely","m.mentions":{},"msgtype":"m.text"},"ts":1718092594459,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ZwncK-ha8CVPQDGk_LHqqnoQaaTGZz6U2EkYKCKoP6w"},
{"content":{"body":"👮 ➡️ #temporaldeadzone:matrix.org","format":"org.matrix.custom.html","formatted_body":"👮 ➡️ <a href=\"https://matrix.to/#/%23temporaldeadzone%3Amatrix.org\">#Temporal Dead Zone</a>","msgtype":"m.text"},"ts":1718092626266,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_gbOBOw5VeNxsIpwcv7ldVE7r-wtPMb5_yaGeW-l56o"},
{"content":{"body":"typo： chongquing should be chongqing","m.mentions":{},"msgtype":"m.text"},"ts":1718092760345,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$hdLR0rQ9EWpgIiToIWjtEVhRdt6ak1aJK6J2_YkVKqA"},
{"content":{"body":"> <@haxjs:matrix.org> typo： chongquing should be chongqing\n\nThis is a historical entry in TZDB; there are a lot of outdated latinizations there","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$hdLR0rQ9EWpgIiToIWjtEVhRdt6ak1aJK6J2_YkVKqA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>typo： chongquing should be chongqing</blockquote></mx-reply>This is a historical entry in TZDB; there are a lot of outdated latinizations there","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$hdLR0rQ9EWpgIiToIWjtEVhRdt6ak1aJK6J2_YkVKqA"}},"msgtype":"m.text"},"ts":1718092782673,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AyLzLLIlEmO-BqGQJf1Ot7pTbCrIV7lTWhX6rjbi0Ro"},
{"content":{"body":"(several of the other forwardings discussed were examples of the same)","m.mentions":{},"msgtype":"m.text"},"ts":1718092826879,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$54iVBT0b_dK_WWM6XR6mzXXk7_PdHgNNeLXbbzqJn7I"},
{"content":{"body":"I never see \"asia/chongquing\" spelling, google shows nothing...","m.mentions":{},"msgtype":"m.text"},"ts":1718092922083,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$fvLSKqYpxwFS8j2EqZAUjMtjRXc3QMhrnDcZUyc865o"},
{"content":{"body":"yeah that's an interesting typo that only an English speaker could make","m.mentions":{},"msgtype":"m.text"},"ts":1718092957411,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$9pfmgsShA192RoROyWtK8s9bCgTiY983AiBvhxRk78s"},
{"content":{"body":"oh I stand corrected","m.mentions":{},"msgtype":"m.text"},"ts":1718092966464,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nXY3Cw0RsyVZ3ieFhMCuWmCyVMNEAtCNyj3j23MmZbo"},
{"content":{"body":"I thought the whole point of the slide was that some of the timezones were being renamed due to historical misspellings","msgtype":"m.text"},"ts":1718092998213,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jpqzXvvTr5i1peoNZew77atL7sinr8fA5LKMvxaMADY"},
{"content":{"body":"Anyway, \"asia/chongqing\" -> \"asia/shanghai\" is a mistake IMO, always cause confusion and accidentaly cause bug 😂","m.mentions":{},"msgtype":"m.text"},"ts":1718093006023,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$m5QXa12w7GuRfi_GoUQiy8heE6he4F2dVrILYe3Fppc"},
{"content":{"body":"(the outdated romanization would be chungking, fwiw)","m.mentions":{},"msgtype":"m.text"},"ts":1718093006339,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$9isLeHB515GYEWvWX5oqFR_U9SK_RJaAkl3WvDEYAWI"},
{"content":{"body":"Though it's not the bug of JS, but the bug of TZDB.","m.mentions":{},"msgtype":"m.text"},"ts":1718093063495,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$GaO5BJ1wysmn4-EfRGmjD7X_0P_9k5mORcdO3TviiX0"},
{"content":{"body":"> <@haxjs:matrix.org> Anyway, \"asia/chongqing\" -> \"asia/shanghai\" is a mistake IMO, always cause confusion and accidentaly cause bug 😂\n\nwhy is that? is there a chance that China will split into multiple timezones?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$m5QXa12w7GuRfi_GoUQiy8heE6he4F2dVrILYe3Fppc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Anyway, &quot;asia/chongqing&quot; -&gt; &quot;asia/shanghai&quot; is a mistake IMO, always cause confusion and accidentaly cause bug 😂</blockquote></mx-reply>why is that? is there a chance that China will split into multiple timezones?","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$m5QXa12w7GuRfi_GoUQiy8heE6he4F2dVrILYe3Fppc"}},"msgtype":"m.text"},"ts":1718093184804,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$cjFT2JcuiZeAxnpyIGR4-c3LRunNNZt0YxAEeYBMaFc"},
{"content":{"body":"https://github.com/eggert/tz/blob/d56ae6ee85d496ef67f0428e81060341ec70cec2/backward#L311","m.mentions":{},"msgtype":"m.text"},"ts":1718093302550,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$UV70uFjpIeot4W3Ll3jF0NHstki1HgtkxL9cPCQwIsE"},
{"content":{"body":"> <@littledan:matrix.org> why is that? is there a chance that China will split into multiple timezones?\n\nbit of a misconception there is only one","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cjFT2JcuiZeAxnpyIGR4-c3LRunNNZt0YxAEeYBMaFc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>why is that? is there a chance that China will split into multiple timezones?</blockquote></mx-reply>bit of a misconception there is only one","m.mentions":{"user_ids":["@littledan:matrix.org","@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cjFT2JcuiZeAxnpyIGR4-c3LRunNNZt0YxAEeYBMaFc"}},"msgtype":"m.text"},"ts":1718093316944,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$WM6tAx2IbAjmNm7__Dj1wVdYJQ_04BlICt_FedtlMXE"},
{"content":{"body":"`Asia/Urumqi`","format":"org.matrix.custom.html","formatted_body":"<code>Asia/Urumqi</code>","m.mentions":{},"msgtype":"m.text"},"ts":1718093320041,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$3IDFccQoXZrvwLvRSNBfDN8Ep_-tOMb91XooMS6mZIE"},
{"content":{"body":" * https://github.com/eggert/tz/blob/d56ae6ee85d496ef67f0428e81060341ec70cec2/backward#L311\n> `Link\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing`","format":"org.matrix.custom.html","formatted_body":" * <p>https://github.com/eggert/tz/blob/d56ae6ee85d496ef67f0428e81060341ec70cec2/backward#L311</p>\n<blockquote>\n<p><code>Link\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"https://github.com/eggert/tz/blob/d56ae6ee85d496ef67f0428e81060341ec70cec2/backward#L311\n> `Link\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing`","format":"org.matrix.custom.html","formatted_body":"<p>https://github.com/eggert/tz/blob/d56ae6ee85d496ef67f0428e81060341ec70cec2/backward#L311</p>\n<blockquote>\n<p><code>Link\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UV70uFjpIeot4W3Ll3jF0NHstki1HgtkxL9cPCQwIsE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718093321249,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$rNOAG53SXKdfR3NSbvSHA3JimPs_mBSfyXlB4jaw0eo"},
{"content":{"body":"also different TZ for HK and Macau","m.mentions":{},"msgtype":"m.text"},"ts":1718093366262,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$WL1BvoNEcPNheqAtY6gGJhDR3CHjhpWM5lEecZ3ZWzc"},
{"content":{"body":"although those are UTC+8 same as CST","m.mentions":{},"msgtype":"m.text"},"ts":1718093398654,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$azoYMJPRlQwBJcMyqeoOOFosFkCbg35NdZ2nb5xbFcQ"},
{"content":{"body":"> <@littledan:matrix.org> why is that? is there a chance that China will split into multiple timezones?\n\nIt's irrelevant to possible multiple timezones. Asia/Chongqing is a BUG due to misunderstanding of historical timezones in World War II. It never be used broadly in practice in the history. Or if it was been used, it already have no usage from 1950. So keep Asia/chongqing in the TZDB always cause confusion to Chinese programmers and users, especially some users might change the timezone to it and in edge cases it cause weird bugs in the historical dates.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cjFT2JcuiZeAxnpyIGR4-c3LRunNNZt0YxAEeYBMaFc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>why is that? is there a chance that China will split into multiple timezones?</blockquote></mx-reply>It's irrelevant to possible multiple timezones. Asia/Chongqing is a BUG due to misunderstanding of historical timezones in World War II. It never be used broadly in practice in the history. Or if it was been used, it already have no usage from 1950. So keep Asia/chongqing in the TZDB always cause confusion to Chinese programmers and users, especially some users might change the timezone to it and in edge cases it cause weird bugs in the historical dates.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$cjFT2JcuiZeAxnpyIGR4-c3LRunNNZt0YxAEeYBMaFc"}},"msgtype":"m.text"},"ts":1718093488184,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$yMwCQ2at98kkuzXXuiJ-UK7Px9Dhut0hr1o_yta6OQQ"},
{"content":{"body":"> <@haxjs:matrix.org> It's irrelevant to possible multiple timezones. Asia/Chongqing is a BUG due to misunderstanding of historical timezones in World War II. It never be used broadly in practice in the history. Or if it was been used, it already have no usage from 1950. So keep Asia/chongqing in the TZDB always cause confusion to Chinese programmers and users, especially some users might change the timezone to it and in edge cases it cause weird bugs in the historical dates.\n\nGreat, so sounds like the merge is what should happen","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yMwCQ2at98kkuzXXuiJ-UK7Px9Dhut0hr1o_yta6OQQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>It's irrelevant to possible multiple timezones. Asia/Chongqing is a BUG due to misunderstanding of historical timezones in World War II. It never be used broadly in practice in the history. Or if it was been used, it already have no usage from 1950. So keep Asia/chongqing in the TZDB always cause confusion to Chinese programmers and users, especially some users might change the timezone to it and in edge cases it cause weird bugs in the historical dates.</blockquote></mx-reply>Great, so sounds like the merge is what should happen","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yMwCQ2at98kkuzXXuiJ-UK7Px9Dhut0hr1o_yta6OQQ"}},"msgtype":"m.text"},"ts":1718093579643,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wxB6tmdLYBDzLeoEi89qNlB-3E3nUDEoACFYxlhcSW8"},
{"content":{"body":"TCQ Revolutions","m.mentions":{},"msgtype":"m.text"},"ts":1718093631887,"senderName":"JaseW","senderId":"@jasew:matrix.org","id":"$r6R4BDVK5PuJRTnZT8hA7i5vJWPk9LKd_VHojST84BM"},
{"content":{"body":"> <@littledan:matrix.org> Great, so sounds like the merge is what should happen\n\nWell I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wxB6tmdLYBDzLeoEi89qNlB-3E3nUDEoACFYxlhcSW8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Great, so sounds like the merge is what should happen</blockquote></mx-reply>Well I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wxB6tmdLYBDzLeoEi89qNlB-3E3nUDEoACFYxlhcSW8"}},"msgtype":"m.text"},"ts":1718093633531,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$tegldeYurnZNweJgLbRZ3_wh3RJ3Wuz1aoZGVd9HOqM"},
{"content":{"body":"Meta: Please link your slides from the agenda so it's easier for folks to follow along (and link the slides from the notes)","m.mentions":{},"msgtype":"m.text"},"ts":1718093636647,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wWl2psZk8Gb8kiE1-GGZcM_nxO5qDB0DeCif-IhEun8"},
{"content":{"body":"> <@haxjs:matrix.org> Well I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.\n\nso if someone uses it, an exception should be thrown, rather than redirecting them to CST?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tegldeYurnZNweJgLbRZ3_wh3RJ3Wuz1aoZGVd9HOqM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Well I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.</blockquote></mx-reply>so if someone uses it, an exception should be thrown, rather than redirecting them to CST?","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tegldeYurnZNweJgLbRZ3_wh3RJ3Wuz1aoZGVd9HOqM"}},"msgtype":"m.text"},"ts":1718093664502,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3sF2TVyjRIR6GrjI_Ld5qur3_aOPDHV9rhFckEL79Zw"},
{"content":{"body":"Christian Ulbrich: After the presentation, please paste your slide link in the notes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: After the presentation, please paste your slide link in the notes","m.mentions":{"user_ids":["@christianulbrich:matrix.org"]},"msgtype":"m.text"},"ts":1718093688847,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ACTrj4HcgjpCNgtdTRNNvJN9ytWOqFLtPpAOGlidBvc"},
{"content":{"body":"> <@haxjs:matrix.org> Well I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.\n\nunfortunately that's not how TZDB is managed, yeah 😕 ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tegldeYurnZNweJgLbRZ3_wh3RJ3Wuz1aoZGVd9HOqM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Well I think it should be deleted, not merged.. but It might be the deep design philosophy of TZDB which I don't fully agree with.</blockquote></mx-reply>unfortunately that's not how TZDB is managed, yeah 😕","m.mentions":{"user_ids":["@haxjs:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tegldeYurnZNweJgLbRZ3_wh3RJ3Wuz1aoZGVd9HOqM"}},"msgtype":"m.text"},"ts":1718093768854,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$uDMOSyWT-8Hx9-hiyglZpdmharE-q_Tx7d8ftowtl2Y"},
{"content":{"body":"so all historic or just incorrect timezones need to stay forever although they could be linked to a more relevant zone","m.mentions":{},"msgtype":"m.text"},"ts":1718093790986,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$tZWXXA8tBXRncSEneIMRBGNtrMdbYPgQMsr740O95fM"},
{"content":{"body":"> <@littledan:matrix.org> so if someone uses it, an exception should be thrown, rather than redirecting them to CST?\n\nIf it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3sF2TVyjRIR6GrjI_Ld5qur3_aOPDHV9rhFckEL79Zw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>so if someone uses it, an exception should be thrown, rather than redirecting them to CST?</blockquote></mx-reply>If it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$3sF2TVyjRIR6GrjI_Ld5qur3_aOPDHV9rhFckEL79Zw"}},"msgtype":"m.text"},"ts":1718093806098,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$0RW2hC4x-kYo1gpbqsIY2tN3Sqt0KBo6P4zCYq2ubx0"},
{"content":{"body":"> <@haxjs:matrix.org> If it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.\n\nNote \"Asia/chongqing\" is especially bad case , because in some old version TZDB it even report different time to CST in 198x dates.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0RW2hC4x-kYo1gpbqsIY2tN3Sqt0KBo6P4zCYq2ubx0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>If it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.</blockquote></mx-reply>Note \"Asia/chongqing\" is especially bad case , because in some old version TZDB it even report different time to CST in 198x dates.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$0RW2hC4x-kYo1gpbqsIY2tN3Sqt0KBo6P4zCYq2ubx0"}},"msgtype":"m.text"},"ts":1718094091129,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$gLlILVDNFMMMMRoXcFyHJpkLzi11bmxJ9BG1FTArmY8"},
{"content":{"body":"> <@usharma:igalia.com> so all historic or just incorrect timezones need to stay forever although they could be linked to a more relevant zone\n\nBut there were another three China historical timezones in old TZDB and have been deleted, only Asia/Chongqing is merged, not sure why they keep it, IMO they are just from same misunderstand.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tZWXXA8tBXRncSEneIMRBGNtrMdbYPgQMsr740O95fM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>so all historic or just incorrect timezones need to stay forever although they could be linked to a more relevant zone</blockquote></mx-reply>But there were another three China historical timezones in old TZDB and have been deleted, only Asia/Chongqing is merged, not sure why they keep it, IMO they are just from same misunderstand.","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tZWXXA8tBXRncSEneIMRBGNtrMdbYPgQMsr740O95fM"}},"msgtype":"m.text"},"ts":1718094479277,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$Wl7ZbuWQqlbt9WPTbwrrdru2LAt9ud4fQP9ZthbX2hs"},
{"content":{"body":"> <@haxjs:matrix.org> But there were another three China historical timezones in old TZDB and have been deleted, only Asia/Chongqing is merged, not sure why they keep it, IMO they are just from same misunderstand.\n\ninteresting! yeah I have no clue but I'm curious so I'd try to dig around to see why","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Wl7ZbuWQqlbt9WPTbwrrdru2LAt9ud4fQP9ZthbX2hs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>But there were another three China historical timezones in old TZDB and have been deleted, only Asia/Chongqing is merged, not sure why they keep it, IMO they are just from same misunderstand.</blockquote></mx-reply>interesting! yeah I have no clue but I'm curious so I'd try to dig around to see why","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Wl7ZbuWQqlbt9WPTbwrrdru2LAt9ud4fQP9ZthbX2hs"}},"msgtype":"m.text"},"ts":1718094518882,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$8x-jMEZkoyyJQf-6g-f3NVFPs0WLH6_uvzzOffFrQwI"},
{"content":{"body":"> <@haxjs:matrix.org> If it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.\n\nYes, ICU and JS implementations tend to implement this historical part","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0RW2hC4x-kYo1gpbqsIY2tN3Sqt0KBo6P4zCYq2ubx0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>If it's really \"merged\", I think it's ok. But in fact it will report differently in old dates in 194x ~ 195x. As I understand, TZDB never ensure correctness before 1970, but most OS still use TZDB history part, which IMO is bad, and cause problems.</blockquote></mx-reply>Yes, ICU and JS implementations tend to implement this historical part","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0RW2hC4x-kYo1gpbqsIY2tN3Sqt0KBo6P4zCYq2ubx0"}},"msgtype":"m.text"},"ts":1718094545147,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bctacmZDjfy5i3ciYYwx9udbk7Rj6Fm9h3Pp38g4BJw"},
{"content":{"body":"bakkot A few weeks ago I was writing my own source maps decoder, which use base64 but in a weird way: 6-bit-bytes should not be rearranged in 8-bit-bytes, but left as they are (or padded with a leading `00`): `ABCD` is not `[0, 16, 131]` but `[0, 1, 2, 3]`.\nThe proposals does _not_ support doing anything like this, right? (it's a quite niche use case so I'm not expecting it to, but I'm wondering if I missed something)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> A few weeks ago I was writing my own source maps decoder, which use base64 but in a weird way: 6-bit-bytes should not be rearranged in 8-bit-bytes, but left as they are (or padded with a leading <code>00</code>): <code>ABCD</code> is not <code>[0, 16, 131]</code> but <code>[0, 1, 2, 3]</code>.<br>The proposals does <em>not</em> support doing anything like this, right? (it's a quite niche use case so I'm not expecting it to, but I'm wondering if I missed something)","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1718095171787,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7LMKDpOEPkElTr0Qn6n6yOUXssVpBpKwWuW_EZrrVrE"},
{"content":{"body":"correct","m.mentions":{},"msgtype":"m.text"},"ts":1718095189704,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eNWF7EcyATgWvpIXrCuqP_GuDJhk_OPj83HgbwfpZWA"},
{"content":{"body":"but Michael Ficarra's iterator chunking proposal + flatMap would get you there!","format":"org.matrix.custom.html","formatted_body":"but <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>'s iterator chunking proposal + flatMap would get you there!","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1718095217997,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pNVDImYjZ14HlC7SKhkPmKwsHGKCG_qVTVRxHBXFZw0"},
{"content":{"body":"actually no it wouldn't, reading closer","m.mentions":{},"msgtype":"m.text"},"ts":1718095244549,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zYGOnPdvlAWGwnlbDrWA4DWdzB03ysrOe7GmcDA2nOE"},
{"content":{"body":"I guess that's just `[...string].map(x => Uint8Array.fromBase64(x + 'AAA')[0])`","format":"org.matrix.custom.html","formatted_body":"I guess that's just <code>[...string].map(x =&gt; Uint8Array.fromBase64(x + 'AAA')[0])</code>","m.mentions":{},"msgtype":"m.text"},"ts":1718095311103,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BaPGApvy_hAAJQ5KHfKd3fbiJ_9s39Dsp_bPTNw-AiI"},
{"content":{"body":"or... something like that anyway","m.mentions":{},"msgtype":"m.text"},"ts":1718095357696,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pzOYz9nWwj4P2dJSA9mBOtQ-xMmeatQEUQFlez7iGpg"},
{"content":{"body":"Oh yes that would work","m.mentions":{},"msgtype":"m.text"},"ts":1718095367931,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$iVJG7jsgC5xxe99yl45G-WeBLukKxbNcus6jHD6Tho4"},
{"content":{"body":"> <@littledan:matrix.org> Yes, ICU and JS implementations tend to implement this historical part\n\nYeah, even Asia/Shanghai have some weird historical part. So in current js/web application, there is no easy way to represent CST (China standard time) for old dates (just like proleptic Gregorian calendar). It seems the design flaw of TZDB?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bctacmZDjfy5i3ciYYwx9udbk7Rj6Fm9h3Pp38g4BJw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Yes, ICU and JS implementations tend to implement this historical part</blockquote></mx-reply>Yeah, even Asia/Shanghai have some weird historical part. So in current js/web application, there is no easy way to represent CST (China standard time) for old dates (just like proleptic Gregorian calendar). It seems the design flaw of TZDB?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$bctacmZDjfy5i3ciYYwx9udbk7Rj6Fm9h3Pp38g4BJw"}},"msgtype":"m.text"},"ts":1718095482159,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$Hyr9OmWggIDE9ZoeQaTZMohNZBDiOjXfviWGLvXfeQw"},
{"content":{"body":"has this feedback been raised to the tzdb mailing list? (we're not really in a position to manage a better tzdb here in TC39)","m.mentions":{},"msgtype":"m.text"},"ts":1718095521661,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Yq6QqmqSOUbp8gE6lPfkaYZq4pnyGv9TFFsYWHavJF0"},
{"content":{"body":" * I guess that's just `[...string].map(x => Uint8Array.fromBase64(x + 'AAA')[0] >> 2)`","format":"org.matrix.custom.html","formatted_body":" * I guess that's just <code>[...string].map(x =&gt; Uint8Array.fromBase64(x + 'AAA')[0] &gt;&gt; 2)</code>","m.mentions":{},"m.new_content":{"body":"I guess that's just `[...string].map(x => Uint8Array.fromBase64(x + 'AAA')[0] >> 2)`","format":"org.matrix.custom.html","formatted_body":"I guess that's just <code>[...string].map(x =&gt; Uint8Array.fromBase64(x + 'AAA')[0] &gt;&gt; 2)</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BaPGApvy_hAAJQ5KHfKd3fbiJ_9s39Dsp_bPTNw-AiI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718095560660,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DMRHlp_5lBY4BmjCYUeHhWghlxq0ZpXuE4ZnCvp0pIQ"},
{"content":{"body":"On the topic of time zones: TZDB and CLDR have both fairly explicitly decided to not prioritize pre-1970 transitions (and especially not pre-WWII transitions) because they were kind of a mess and documentation is kind-of lacking.","m.mentions":{},"msgtype":"m.text"},"ts":1718095765098,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$yQzZz_OY0mdGlx_2uB4KoOZ-eK2RHJ5uJVY6oayCDRM"},
{"content":{"body":"My understanding is that some of the merges are from time zones that had historic differences but have been the same since 1970","m.mentions":{},"msgtype":"m.text"},"ts":1718095843445,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$2bqey_Sdz04LJywo5vGwkoQm1sYbUs4qyfqTc3s5NhU"},
{"content":{"body":"re: `Symbol.isConcatSpreadable`, not only does no one use it, but also if you do use it then all uses of `Array.p.concat` anywhere on your page get slower in V8: https://www.tines.com/blog/understanding-why-our-build-got-15x-slower-with-webpack-5","format":"org.matrix.custom.html","formatted_body":"re: <code>Symbol.isConcatSpreadable</code>, not only does no one use it, but also if you do use it then all uses of <code>Array.p.concat</code> anywhere on your page get slower in V8: https://www.tines.com/blog/understanding-why-our-build-got-15x-slower-with-webpack-5","m.mentions":{},"msgtype":"m.text"},"ts":1718095943719,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CW3uvR7vxtN7GrJzr0BqOj6Iq6ZzHOxxCHn6O3S-yD0"},
{"content":{"body":"Is it also get slower in FF/Webkit? Isn't that the bug of v8?","m.mentions":{},"msgtype":"m.text"},"ts":1718096259089,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$u2cR7Sd8do6qkgEVVnxEKzmOfSnXQ4O2i_HH9UDBCpw"},
{"content":{"body":"it's not a bug, it's an intentional design decision","m.mentions":{},"msgtype":"m.text"},"ts":1718096282666,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VBowX9VPS9RvCi0dp0EZLKONElSBkHIO6mdX6spJaLY"},
{"content":{"body":"FF and Webkit have similar things though I don't know if they have this specific thing","m.mentions":{},"msgtype":"m.text"},"ts":1718096332084,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nc84tRJKf2DmlXafDstMZNbR7aIUJwJLpAN87C49KbE"},
{"content":{"body":"There is always going to be a trade off when deoptimising for things likes `isConcatSpreadable`. Just deopting at the particular sites you'll likely use more resources than just noting that the possibility exists everywhere.","format":"org.matrix.custom.html","formatted_body":"There is always going to be a trade off when deoptimising for things likes <code>isConcatSpreadable</code>. Just deopting at the particular sites you'll likely use more resources than just noting that the possibility exists everywhere.","m.mentions":{},"msgtype":"m.text"},"ts":1718096477295,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$cADOYbXzn22XXnB86_a_4WFL_lDIzvDOjlFjr6sohA4"},
{"content":{"body":"The `AsyncIterator.propotype.split` thing looks nice","format":"org.matrix.custom.html","formatted_body":"The <code>AsyncIterator.propotype.split</code> thing looks nice","m.mentions":{},"msgtype":"m.text"},"ts":1718101218931,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$agqFB19UOQrmRZv_vXUJBDyknuRpTMRHc5rGCIjqVDA"},
{"content":{"body":"I wonder if we can combine the ideas from `split`, but still not require combining  a `split` and `merge`. For example:\n\n```\nconst parallel = iter.parallelMap(5, (iter) => {\n  return iter.map(mapFn).filter(filterFn)\n});\n```\n\nWould be the same as\n\n```\nconst parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) => {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n```","format":"org.matrix.custom.html","formatted_body":"<p>I wonder if we can combine the ideas from <code>split</code>, but still not require combining  a <code>split</code> and <code>merge</code>. For example:</p>\n<pre><code>const parallel = iter.parallelMap(5, (iter) =&gt; {\n  return iter.map(mapFn).filter(filterFn)\n});\n</code></pre>\n<p>Would be the same as</p>\n<pre><code>const parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) =&gt; {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718101460116,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1kjGjUuu96jBBEb3n88vZ5DcSW7puA2l41-tCkdEcfE"},
{"content":{"body":" * I wonder if we can combine the ideas from `split`, but still not require combining  a `split`, `map` and `merge`. For example:\n\n```\nconst parallel = iter.parallelMap(5, (iter) => {\n  return iter.map(mapFn).filter(filterFn)\n});\n```\n\nWould be the same as\n\n```\nconst parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) => {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n```","format":"org.matrix.custom.html","formatted_body":" * <p>I wonder if we can combine the ideas from <code>split</code>, but still not require combining  a <code>split</code>, <code>map</code> and <code>merge</code>. For example:</p>\n<pre><code>const parallel = iter.parallelMap(5, (iter) =&gt; {\n  return iter.map(mapFn).filter(filterFn)\n});\n</code></pre>\n<p>Would be the same as</p>\n<pre><code>const parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) =&gt; {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"I wonder if we can combine the ideas from `split`, but still not require combining  a `split`, `map` and `merge`. For example:\n\n```\nconst parallel = iter.parallelMap(5, (iter) => {\n  return iter.map(mapFn).filter(filterFn)\n});\n```\n\nWould be the same as\n\n```\nconst parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) => {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n```","format":"org.matrix.custom.html","formatted_body":"<p>I wonder if we can combine the ideas from <code>split</code>, but still not require combining  a <code>split</code>, <code>map</code> and <code>merge</code>. For example:</p>\n<pre><code>const parallel = iter.parallelMap(5, (iter) =&gt; {\n  return iter.map(mapFn).filter(filterFn)\n});\n</code></pre>\n<p>Would be the same as</p>\n<pre><code>const parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) =&gt; {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$1kjGjUuu96jBBEb3n88vZ5DcSW7puA2l41-tCkdEcfE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718101474646,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$8X5ktdTBfi-n3pjA1UV3h-ZXyYQolgPCpbQ34szjbIg"},
{"content":{"body":"@aclaymore:matrix.org that's what semaphores are for","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40aclaymore%3Amatrix.org\">@Ashley Claymore</a> that&#39;s what semaphores are for","msgtype":"m.text"},"ts":1718102102751,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys"},
{"content":{"body":"very pleased to have used 44minutes 30 seconds of a 45 minute timebox","m.mentions":{},"msgtype":"m.text"},"ts":1718102688805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XGpjKiKcu0Et1bjveIoQiAIKx09CUK296lUyweFEo7c"},
{"content":{"body":"> <@michaelficarra:matrix.org> @aclaymore:matrix.org that's what semaphores are for\n\nwhich we also don't have","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40aclaymore%3Amatrix.org\">@Ashley Claymore</a> that's what semaphores are for</blockquote></mx-reply>which we also don't have","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys"}},"msgtype":"m.text"},"ts":1718102701756,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qIoGGguUqc-FvgEUEL7GbZJIIXeXHAaj-7lbWONP2qY"},
{"content":{"body":"like a pro","m.mentions":{},"msgtype":"m.text"},"ts":1718102702168,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$UN2yVJ6_xjhFouWpiRYPgMTm1B4pnf2kFmtH0wBr_nY"},
{"content":{"body":"@bakkot:matrix.org yes but I would prefer the concurrency-limiting function helper anyway","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40bakkot%3Amatrix.org\">@bakkot</a> yes but I would prefer the concurrency-limiting function helper anyway","msgtype":"m.text"},"ts":1718102783594,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PR-q_WhKZsnME-NMviylpPoMx87tEMVQ7qNtCpDpILs"},
{"content":{"body":"> <@lucacasonato:matrix.org> I wonder if we can combine the ideas from `split`, but still not require combining  a `split`, `map` and `merge`. For example:\n> \n> ```\n> const parallel = iter.parallelMap(5, (iter) => {\n>   return iter.map(mapFn).filter(filterFn)\n> });\n> ```\n> \n> Would be the same as\n> \n> ```\n> const parallel = AsyncIterator.merge(\n>   iter.split(5).map((iter) => {\n>     return iter.map(mapFn).filter(filterFn);\n>   })\n> );\n> ```\n\nyeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:\n\n```\niter.parallelMap(5,  async function*(vals) { for await (let item of vals) { yield item + 2 } })\n```\nor whatever","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1kjGjUuu96jBBEb3n88vZ5DcSW7puA2l41-tCkdEcfE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><p>I wonder if we can combine the ideas from <code>split</code>, but still not require combining  a <code>split</code>, <code>map</code> and <code>merge</code>. For example:</p>\n<pre><code>const parallel = iter.parallelMap(5, (iter) =&gt; {\n  return iter.map(mapFn).filter(filterFn)\n});\n</code></pre>\n<p>Would be the same as</p>\n<pre><code>const parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) =&gt; {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n</code></pre>\n</blockquote></mx-reply><p>yeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:</p>\n<pre><code>iter.parallelMap(5,  async function*(vals) { for await (let item of vals) { yield item + 2 } })\n</code></pre>\n<p>or whatever</p>\n","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1kjGjUuu96jBBEb3n88vZ5DcSW7puA2l41-tCkdEcfE"}},"msgtype":"m.text"},"ts":1718103385040,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ngFGhhsQ2KEzrhZL9QOtoCrgcHh1bClW_5j0R2LNstg"},
{"content":{"body":" * yeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:\n\n```\niter.parallelMap(5, async function* (vals) { for await (let item of vals) { yield item + 2 } })\n```\n\nor whatever","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1kjGjUuu96jBBEb3n88vZ5DcSW7puA2l41-tCkdEcfE?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><p>I wonder if we can combine the ideas from <code>split</code>, but still not require combining  a <code>split</code>, <code>map</code> and <code>merge</code>. For example:</p>\n<pre><code>const parallel = iter.parallelMap(5, (iter) =&gt; {\n  return iter.map(mapFn).filter(filterFn)\n});\n</code></pre>\n<p>Would be the same as</p>\n<pre><code>const parallel = AsyncIterator.merge(\n  iter.split(5).map((iter) =&gt; {\n    return iter.map(mapFn).filter(filterFn);\n  })\n);\n</code></pre>\n</blockquote></mx-reply> * <p>yeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:</p>\n<pre><code>iter.parallelMap(5, async function* (vals) { for await (let item of vals) { yield item + 2 } })\n</code></pre>\n<p>or whatever</p>\n","m.mentions":{},"m.new_content":{"body":"yeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:\n\n```\niter.parallelMap(5, async function* (vals) { for await (let item of vals) { yield item + 2 } })\n```\n\nor whatever","format":"org.matrix.custom.html","formatted_body":"<p>yeah I was thinking about something like this. it's a very weird signature but once you learn to use it I think it does exactly what you want in many cases. a cute thing is that you can pass an async generator as the second argument:</p>\n<pre><code>iter.parallelMap(5, async function* (vals) { for await (let item of vals) { yield item + 2 } })\n</code></pre>\n<p>or whatever</p>\n","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ngFGhhsQ2KEzrhZL9QOtoCrgcHh1bClW_5j0R2LNstg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718103400843,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5epmQcKnwqloklTWebn_dZXNLJ1D4xGQ5mOlpF_jvAY"},
{"content":{"body":"it does not immediately resolve the question of consuming, but I think that could just be a second function; `iter.concurrentForEach` or something","format":"org.matrix.custom.html","formatted_body":"it does not immediately resolve the question of consuming, but I think that could just be a second function; <code>iter.concurrentForEach</code> or something","m.mentions":{},"msgtype":"m.text"},"ts":1718103484164,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DZ0eqLQAr6mIDFjwK2Kz7IdII5dHHz_2kJHUENWfmjg"},
{"content":{"body":" * it does not immediately resolve the question of consuming without producing a new iterator, but I think that could just be a second function; `iter.concurrentForEach` or something","format":"org.matrix.custom.html","formatted_body":" * it does not immediately resolve the question of consuming without producing a new iterator, but I think that could just be a second function; <code>iter.concurrentForEach</code> or something","m.mentions":{},"m.new_content":{"body":"it does not immediately resolve the question of consuming without producing a new iterator, but I think that could just be a second function; `iter.concurrentForEach` or something","format":"org.matrix.custom.html","formatted_body":"it does not immediately resolve the question of consuming without producing a new iterator, but I think that could just be a second function; <code>iter.concurrentForEach</code> or something","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DZ0eqLQAr6mIDFjwK2Kz7IdII5dHHz_2kJHUENWfmjg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718103500562,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jiMOqy0han7m0sjpwDOZXQ1SNd3lCR4xU1r2Igv832c"},
{"content":{"body":"the note-taker is double-spacing sentences again, are we just gonna fix that up in post?","msgtype":"m.text"},"ts":1718103540318,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xHQkYGIndwvkOe18YbSnG8wO2MDrXC3_rFGuqqmKevM"},
{"content":{"body":"```\nlet vals = iter.concurrentMap(5, async_generator);\n\nfor await (let item of vals) ...\n```\nand\n```\nlet promise = iter.concurrentForEach(5, async_function);\n\nawait promise;\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>let vals = iter.concurrentMap(5, async_generator);\n\nfor await (let item of vals) ...\n</code></pre>\n<p>and</p>\n<pre><code>let promise = iter.concurrentForEach(5, async_function);\n\nawait promise;\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718103554950,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hzaq0yXVDHXTbmiGE-COhcnuEwNmpNyzBc_txfLFWMw"},
{"content":{"body":" * ```\nlet vals = iter.concurrentMap(5, async_generator_taking_iterator);\n\nfor await (let item of vals) ...\n```\n\nand\n\n```\nlet promise = iter.concurrentForEach(5, async_function_taking_iterator);\n\nawait promise;\n```","format":"org.matrix.custom.html","formatted_body":" * <pre><code>let vals = iter.concurrentMap(5, async_generator_taking_iterator);\n\nfor await (let item of vals) ...\n</code></pre>\n<p>and</p>\n<pre><code>let promise = iter.concurrentForEach(5, async_function_taking_iterator);\n\nawait promise;\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"```\nlet vals = iter.concurrentMap(5, async_generator_taking_iterator);\n\nfor await (let item of vals) ...\n```\n\nand\n\n```\nlet promise = iter.concurrentForEach(5, async_function_taking_iterator);\n\nawait promise;\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>let vals = iter.concurrentMap(5, async_generator_taking_iterator);\n\nfor await (let item of vals) ...\n</code></pre>\n<p>and</p>\n<pre><code>let promise = iter.concurrentForEach(5, async_function_taking_iterator);\n\nawait promise;\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Hzaq0yXVDHXTbmiGE-COhcnuEwNmpNyzBc_txfLFWMw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718103584754,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mJx98CPfsEXIixsdHFOBKgQI5ArtTXH7stwVZnxgUH0"},
{"content":{"body":"though maybe `concurrentForEach` would take a `T => void` rather than an `Iterator<T> => void`? unclear","format":"org.matrix.custom.html","formatted_body":"though maybe <code>concurrentForEach</code> would take a <code>T =&gt; void</code> rather than an <code>Iterator&lt;T&gt; =&gt; void</code>? unclear","m.mentions":{},"msgtype":"m.text"},"ts":1718103616507,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YXpChjuPT3NQWXszjxzk87DjN9mltrnluH8xSxPDNDE"},
{"content":{"body":"(which would make that a bad choice of names)","m.mentions":{},"msgtype":"m.text"},"ts":1718103653393,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qIX-g2Ibi5xJbAA8qnwWlHNxEL5zcHYFLgxigX4oy20"},
{"content":{"body":"> <@michaelficarra:matrix.org> the note-taker is double-spacing sentences again, are we just gonna fix that up in post?\n\nabsolutely","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xHQkYGIndwvkOe18YbSnG8wO2MDrXC3_rFGuqqmKevM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>the note-taker is double-spacing sentences again, are we just gonna fix that up in post?</blockquote></mx-reply>absolutely","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$xHQkYGIndwvkOe18YbSnG8wO2MDrXC3_rFGuqqmKevM"}},"msgtype":"m.text"},"ts":1718103681319,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$0wrSF918DXvYgIm3WKNvcNsBo2OISqbqXZBTuZ_7Ujs"},
{"content":{"body":"i have a regex for it","m.mentions":{},"msgtype":"m.text"},"ts":1718103686896,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$2T5X3tG5ZcftyMQpRZHp8rAZwd6JCwd8ZTA7CTv3uO4"},
{"content":{"body":"k good then we don't need to bug them about it","msgtype":"m.text"},"ts":1718103816239,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3ixMrK09muhpYv55TeKr3JPj1XTOiDUmqxzRaU9-CGw"},
{"content":{"body":"Option 6 (a-la acorn):\n\n```\nconst errors = [];\n...format(..., { onError: errors });\nif (errors.length) { ...}\n```\n\nto avoid inline callbacks","format":"org.matrix.custom.html","formatted_body":"<p>Option 6 (a-la acorn):</p>\n<pre><code>const errors = [];\n...format(..., { onError: errors });\nif (errors.length) { ...}\n</code></pre>\n<p>to avoid inline callbacks</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718104654061,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$n1W8pRq1yU36O9CkuNebtkYsypCuqer-1ECo2iZ_utI"},
{"content":{"body":"i can no longer stay awake, but my bot will continue being in the meeting. please don't be misled by its presence, it is just a computer and cannot (yet?) represent my opinions for me","m.mentions":{},"msgtype":"m.text"},"ts":1718105012581,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KPAjMNu1_sQ9QDuyvwsY7o0obLRcvJZaBIGSO38ym3w"},
{"content":{"body":"for Error.isError, I'm not objecting to stage 2, but I still have reservations about whether it is motivated. i would like it to have strong from other delegates, and the reasons they want it to be captured, before it advances. also I do want to say that it absolutely must consider dom exceptions to be errors; users should not be exposed to that distinction.","m.mentions":{},"msgtype":"m.text"},"ts":1718105108596,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lUbk7UOBI3ek4Ph6dQJ2M1DviiwKjrYJrxUpCaOekXE"},
{"content":{"body":"> <@michaelficarra:matrix.org> @aclaymore:matrix.org that's what semaphores are for\n\nstraw man proposal: https://github.com/lucacasonato/proposal-semaphore","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40aclaymore%3Amatrix.org\">@Ashley Claymore</a> that's what semaphores are for</blockquote></mx-reply>straw man proposal: https://github.com/lucacasonato/proposal-semaphore","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys"}},"msgtype":"m.text"},"ts":1718105676109,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$ORabDFadQ6jHeoLUuAMNsUvjXm98Okk4IYGoHQPA0nA"},
{"content":{"body":"> <@michaelficarra:matrix.org> @aclaymore:matrix.org that's what semaphores are for\n\n * straw person proposal: https://github.com/lucacasonato/proposal-semaphore","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XA3MEpwmr69QAIXK4tjkktNPR0wLXp8eIUlFJu8ayys?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40aclaymore%3Amatrix.org\">@Ashley Claymore</a> that's what semaphores are for</blockquote></mx-reply> * straw person proposal: https://github.com/lucacasonato/proposal-semaphore","m.mentions":{},"m.new_content":{"body":"straw person proposal: https://github.com/lucacasonato/proposal-semaphore","format":"org.matrix.custom.html","formatted_body":"straw person proposal: https://github.com/lucacasonato/proposal-semaphore","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ORabDFadQ6jHeoLUuAMNsUvjXm98Okk4IYGoHQPA0nA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718105686179,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$OGkiAGaltD2okp0Kd9CSq8CW2Q_8H9NeDZvNyXGK91E"},
{"content":{"body":"@lucacasonato:matrix.org lol noooo why?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40lucacasonato%3Amatrix.org\">@Luca Casonato</a> lol noooo why?","msgtype":"m.text"},"ts":1718105709928,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-5YMai7JjQ16tgZqwt8YYjWl_zh6OaVmDaouZROPvus"},
{"content":{"body":"> @bakkot yes but I would prefer the concurrency-limiting function helper anyway","format":"org.matrix.custom.html","formatted_body":"<blockquote data-md=\">\">@bakkot yes but I would prefer the concurrency-limiting function helper anyway<br/></blockquote>","msgtype":"m.text"},"ts":1718105723626,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vwppEbUqnPOAeJihpwjI5U4_dQUr-LR3nfWLm9w9-DA"},
{"content":{"body":"Michael Ficarra: It actually does that too - `semaphore.wait()` is this","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: It actually does that too - <code>semaphore.wait()</code> is this","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1718105747228,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$HfsrMZX6qmLQYu_0m5yWhmLazum0deVHIo1999Y9KWw"},
{"content":{"body":" * Michael Ficarra: It actually does that too - `semaphore.wait()` is this (minus the wrapping itself)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: It actually does that too - <code>semaphore.wait()</code> is this (minus the wrapping itself)","m.mentions":{},"m.new_content":{"body":"Michael Ficarra: It actually does that too - `semaphore.wait()` is this (minus the wrapping itself)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: It actually does that too - <code>semaphore.wait()</code> is this (minus the wrapping itself)","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$HfsrMZX6qmLQYu_0m5yWhmLazum0deVHIo1999Y9KWw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718105772610,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$tR_ev8_wJ_R0mZLave_rE-QTECH5XJV2pvYyd0JeJ-I"},
{"content":{"body":"@lucacasonato:matrix.org that's backwards though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40lucacasonato%3Amatrix.org\">@Luca Casonato</a> that&#39;s backwards though","msgtype":"m.text"},"ts":1718105785127,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DJMTZj6t9G4ZBYHUuMyyFFHC3WYp48WK4gZDTDw7Qac"},
{"content":{"body":"(Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) ","m.mentions":{},"msgtype":"m.text"},"ts":1718105804052,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE"},
{"content":{"body":"> <@mgaudet:mozilla.org> (Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment)\n\nIt's just bugged at the moment - it has V8 and SM usually","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">@mgaudet:mozilla.org</a><br>(Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) </blockquote></mx-reply>It's just bugged at the moment - it has V8 and SM usually","m.mentions":{"user_ids":["@mgaudet:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE"}},"msgtype":"m.text"},"ts":1718105830399,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$idznD8ho6CaKwgep3w3rYh6BDQWPspVEgAj0JX0enUE"},
{"content":{"body":"`let limitedFunction = fn.limitConcurrency(5)` and then pass `limitedFunction` around in place of `fn`","format":"org.matrix.custom.html","formatted_body":"<code data-md=\"`\">let limitedFunction = fn.limitConcurrency(5)</code> and then pass <code data-md=\"`\">limitedFunction</code> around in place of <code data-md=\"`\">fn</code>","msgtype":"m.text"},"ts":1718105831890,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZwFrVdWOKQzKItHGXtLg20k6fJJwAqg5KeC2QFDnH3k"},
{"content":{"body":"> <@mgaudet:mozilla.org> (Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) \n\nhttps://github.com/CanadaHonk/test262.fyi/issues/56","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE\">In reply to</a><a href=\"https://matrix.to/#/%40mgaudet%3Amozilla.org\">@mgaudet:mozilla.org</a><br />(Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) </blockquote></mx-reply>https://github.com/CanadaHonk/test262.fyi/issues/56","m.relates_to":{"m.in_reply_to":{"event_id":"$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE"}},"msgtype":"m.text"},"ts":1718105870313,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0pa1W9XQXoy82m82lgeTPdmqTH67BfEY0q-ajEPpUFs"},
{"content":{"body":"> <@mgaudet:mozilla.org> (Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) \n\nWas just wondering that as well, since I based my remark about implementation status on it 😅","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">@mgaudet:mozilla.org</a><br />(Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment)</blockquote></mx-reply>Was just wondering that as well, since I based my remark about implementation status on it 😅","m.relates_to":{"m.in_reply_to":{"event_id":"$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE"}},"msgtype":"m.text"},"ts":1718105880477,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$ZVib7R12e4O3noohMOO51XCYVDjN33k0iL7koa70Ixg"},
{"content":{"body":"> <@michaelficarra:matrix.org> @lucacasonato:matrix.org that's backwards though\n\n```js\nconst semaphore = new Semaphore(12)\nfunction wrap(cb) {\n  return (...args) => semaphore.wait(cb);\n}\n```\n\nI'll add this helper as an open question to the doc :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DJMTZj6t9G4ZBYHUuMyyFFHC3WYp48WK4gZDTDw7Qac?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40lucacasonato%3Amatrix.org\">@Luca Casonato</a> that's backwards though</blockquote></mx-reply><pre><code class=\"language-js\">const semaphore = new Semaphore(12)\nfunction wrap(cb) {\n  return (...args) =&gt; semaphore.wait(cb);\n}\n</code></pre>\n<p>I'll add this helper as an open question to the doc :)</p>\n","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DJMTZj6t9G4ZBYHUuMyyFFHC3WYp48WK4gZDTDw7Qac"}},"msgtype":"m.text"},"ts":1718105910388,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$9WitVqqJfSpAE8Y4DOHsxvJ0xcF5vSd2QGfbrdEiN8s"},
{"content":{"body":"yeah but that allows you to wait on the semaphore with multiple functions, right?","msgtype":"m.text"},"ts":1718105947262,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Wybc0fVli6lXzLyajcluO-yv3Q3bk3gFjGilcqbMvAc"},
{"content":{"body":"Yes - I mean isn't that what you want?","m.mentions":{},"msgtype":"m.text"},"ts":1718105988711,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$3cOHkTMzVtqAuUJp092EQWMKPU4xqdRSeFLpyVLtav4"},
{"content":{"body":"> <@michaelficarra:matrix.org> `let limitedFunction = fn.limitConcurrency(5)` and then pass `limitedFunction` around in place of `fn`\n\nThis lacks flex","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZwFrVdWOKQzKItHGXtLg20k6fJJwAqg5KeC2QFDnH3k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><code data-md=\"`\">let limitedFunction = fn.limitConcurrency(5)</code> and then pass <code data-md=\"`\">limitedFunction</code> around in place of <code data-md=\"`\">fn</code></blockquote></mx-reply>This lacks flex","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZwFrVdWOKQzKItHGXtLg20k6fJJwAqg5KeC2QFDnH3k"}},"msgtype":"m.text"},"ts":1718106002913,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$XA6-N9Ym_IZSycQDfpFB38D3jGXbjlx1AU4aHgGvYbk"},
{"content":{"body":"no, it's inverted","msgtype":"m.text"},"ts":1718106007632,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1XJLBJWuyKoGgP3cnxsnv5j3iTjjYmMNF43aeMAj3CI"},
{"content":{"body":"I want consumers to not have to even know that there's limiting going on","msgtype":"m.text"},"ts":1718106027107,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XRELlxU5D1fZCLuYHWCPBJbQmNdvDK8rQdlSzayn4OU"},
{"content":{"body":"think about it this way: if I am currently passing a function to someone, I want to swap it out with a concurrency-limited one without them changing their implementation","msgtype":"m.text"},"ts":1718106057802,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Z93eYYn3-zqHTarIn3OyDcm34Ja-tMxrZkEyZ51zxL4"},
{"content":{"body":"yes I could do that with your wrap helper, and in fact that's how I will always do it","msgtype":"m.text"},"ts":1718106074857,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$d3CraqX5BKAIArCLcDj63gqusAZd4p01JD0DsjHA3TY"},
{"content":{"body":"so if I always do it that way, there's no reason to expose the semaphore directly","msgtype":"m.text"},"ts":1718106090561,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$boPZ6NpodRgCacPSAOnZ60qbZpgKvrHzN4SgLsXfpD0"},
{"content":{"body":"Sure - that makes sense. But there are use cases where this doesn't work - for example if you have `execute` and `query` functions that both operate on the same database, and you want to limit both together.\n\nAnother common case for this is when you want to limit the number of FS ops, but there are many different ops. For example you want to limit the number of `stat()`, `realpath()` etc all with the same limiter\n\nAnother use case that wrapping is not expressive enough for is if you want to limit the number of open files. Because you \"acquire\" at every `open` call, but only release once a file handle is explicitly closed.\n\nAlso one could propose that we make `Semaphore` sharable across agents :)","format":"org.matrix.custom.html","formatted_body":"<p>Sure - that makes sense. But there are use cases where this doesn't work - for example if you have <code>execute</code> and <code>query</code> functions that both operate on the same database, and you want to limit both together.</p>\n<p>Another common case for this is when you want to limit the number of FS ops, but there are many different ops. For example you want to limit the number of <code>stat()</code>, <code>realpath()</code> etc all with the same limiter</p>\n<p>Another use case that wrapping is not expressive enough for is if you want to limit the number of open files. Because you \"acquire\" at every <code>open</code> call, but only release once a file handle is explicitly closed.</p>\n<p>Also one could propose that we make <code>Semaphore</code> sharable across agents :)</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718106393077,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$4Bs_Pz_1bL69cew1bS6rVhAfQLbErV4ShGaDBYElVLs"},
{"content":{"body":"added a `wrap` method:\n\n```\nconst semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () => {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>added a <code>wrap</code> method:</p>\n<pre><code>const semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () =&gt; {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718106570204,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$YP6JEKzyABPJhSqtzm39vsbAtWvOBU1QzTPNrV5WpQY"},
{"content":{"body":" * added a `wrap` method:\n\n```js\nconst semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () => {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n```","format":"org.matrix.custom.html","formatted_body":" * <p>added a <code>wrap</code> method:</p>\n<pre><code class=\"language-js\">const semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () =&gt; {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"added a `wrap` method:\n\n```js\nconst semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () => {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>added a <code>wrap</code> method:</p>\n<pre><code class=\"language-js\">const semaphore = new Semaphore(5);\n\nconst wrappedFunction = semaphore.wrap(async () =&gt; {\n  // Do some work\n});\n\nasync function doWork() {\n  await wrappedFunction();\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$YP6JEKzyABPJhSqtzm39vsbAtWvOBU1QzTPNrV5WpQY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718106574938,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$8nbD-qYnxPLamc8RhZJNlgL_cg5CMCVtBcJcjjaaktw"},
{"content":{"body":"> <@lucacasonato:matrix.org> Sure - that makes sense. But there are use cases where this doesn't work - for example if you have `execute` and `query` functions that both operate on the same database, and you want to limit both together.\n> \n> Another common case for this is when you want to limit the number of FS ops, but there are many different ops. For example you want to limit the number of `stat()`, `realpath()` etc all with the same limiter\n> \n> Another use case that wrapping is not expressive enough for is if you want to limit the number of open files. Because you \"acquire\" at every `open` call, but only release once a file handle is explicitly closed.\n> \n> Also one could propose that we make `Semaphore` sharable across agents :)\n\nit does if you virtualise the database through these","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%244Bs_Pz_1bL69cew1bS6rVhAfQLbErV4ShGaDBYElVLs\">In reply to</a><a href=\"https://matrix.to/#/%40lucacasonato%3Amatrix.org\">@lucacasonato:matrix.org</a><br /><p>Sure - that makes sense. But there are use cases where this doesn't work - for example if you have <code>execute</code> and <code>query</code> functions that both operate on the same database, and you want to limit both together.</p>\n<p>Another common case for this is when you want to limit the number of FS ops, but there are many different ops. For example you want to limit the number of <code>stat()</code>, <code>realpath()</code> etc all with the same limiter</p>\n<p>Another use case that wrapping is not expressive enough for is if you want to limit the number of open files. Because you \"acquire\" at every <code>open</code> call, but only release once a file handle is explicitly closed.</p>\n<p>Also one could propose that we make <code>Semaphore</code> sharable across agents :)</p>\n</blockquote></mx-reply>it does if you virtualise the database through these","m.relates_to":{"m.in_reply_to":{"event_id":"$4Bs_Pz_1bL69cew1bS6rVhAfQLbErV4ShGaDBYElVLs"}},"msgtype":"m.text"},"ts":1718106712179,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3uKXrkQ1tvLqYOl4Ao7XjEHm6Dp7SJrcHOANnYVAEhM"},
{"content":{"body":"yeah, but that seems rather unergonomic?","m.mentions":{},"msgtype":"m.text"},"ts":1718106746280,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$T9KwgpAG_gmL6svcDdxq9qoeuP2I03rWgMWsOr8sspg"},
{"content":{"body":"You can always do it by creating a function like `(function call(cb, ...args) => cb(args)).limitConcurrency(5)` - but i mean that is very messy and it also does not layer well with `using` - also it's very unergonomic when you are limiting a resource, not a single call","format":"org.matrix.custom.html","formatted_body":"You can always do it by creating a function like <code>(function call(cb, ...args) =&gt; cb(args)).limitConcurrency(5)</code> - but i mean that is very messy and it also does not layer well with <code>using</code> - also it's very unergonomic when you are limiting a resource, not a single call","m.mentions":{},"msgtype":"m.text"},"ts":1718106928516,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$jBz5BAYiJ6u9yymLBwDZTutvHhDE7LZooG0Q36NMxxo"},
{"content":{"body":" * You can always do it by creating a function like `const call = ((cb, ...args) => cb(args)).limitConcurrency(5)` - but i mean that is very messy and it also does not layer well with `using` - also it's very unergonomic when you are limiting a resource, not a single call","format":"org.matrix.custom.html","formatted_body":" * You can always do it by creating a function like <code>const call = ((cb, ...args) =&gt; cb(args)).limitConcurrency(5)</code> - but i mean that is very messy and it also does not layer well with <code>using</code> - also it's very unergonomic when you are limiting a resource, not a single call","m.mentions":{},"m.new_content":{"body":"You can always do it by creating a function like `const call = ((cb, ...args) => cb(args)).limitConcurrency(5)` - but i mean that is very messy and it also does not layer well with `using` - also it's very unergonomic when you are limiting a resource, not a single call","format":"org.matrix.custom.html","formatted_body":"You can always do it by creating a function like <code>const call = ((cb, ...args) =&gt; cb(args)).limitConcurrency(5)</code> - but i mean that is very messy and it also does not layer well with <code>using</code> - also it's very unergonomic when you are limiting a resource, not a single call","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$jBz5BAYiJ6u9yymLBwDZTutvHhDE7LZooG0Q36NMxxo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718106948955,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$mLkyE5yqkeYkLX0KNNvV1dpNP8LDNZoAjczU9KQfYI4"},
{"content":{"body":"not really, it moves the limiting further inward into like a \"kernel\"","msgtype":"m.text"},"ts":1718106950317,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$E_SwDDAYN5krZxu4xVqtnuG3ELQddYnIzqJRy5bKr38"},
{"content":{"body":"we should talk over snack break","msgtype":"m.text"},"ts":1718106956509,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F-VUa1wSeEnX59B4wWbYhzFPC_aMWd3HeoTQhq0UjYI"},
{"content":{"body":"I want a snack","msgtype":"m.text"},"ts":1718106958464,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lEqkHjOcq2U7akVu1W2aLz4pu3Yq7YihvZcxSR6KgSQ"},
{"content":{"body":"sure :)","m.mentions":{},"msgtype":"m.text"},"ts":1718106963050,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1mxsKb2XMPRtjl6UlZEucQnCcvCLywqGeEBk6wkqw3w"},
{"content":{"body":"littledan: \n\nRegarding `function.sent`, we have discussed use cases and possible solutions in several past meetings. However, there is no consensus on whether the use cases are strong enough to support introducing a syntactic solution. Although I generally still believe this is a problem worth addressing, perhaps solving it through a more general feature like function decorators in the form of an API is more promising than introducing entirely new syntax. Therefore, I hope to revisit this proposal after the function decorator proposal advances to the next stage.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>:</p>\n<p>Regarding <code>function.sent</code>, we have discussed use cases and possible solutions in several past meetings. However, there is no consensus on whether the use cases are strong enough to support introducing a syntactic solution. Although I generally still believe this is a problem worth addressing, perhaps solving it through a more general feature like function decorators in the form of an API is more promising than introducing entirely new syntax. Therefore, I hope to revisit this proposal after the function decorator proposal advances to the next stage.</p>\n","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1718107350160,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$Y3XeWHBScKh_5FnC5rlg5NsNnfdwJdTqORHI9CVzYm0"},
{"content":{"body":"good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.concatSpreadable, it's that array concat takes an array or a scalar, and anything with the name concat should do the same (take a container or a thing contained).","m.mentions":{},"msgtype":"m.text"},"ts":1718107654223,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ"},
{"content":{"body":" * good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.concatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes an array or a scalar, and anything with the name concat should do the same (take a container or a thing contained).","m.mentions":{},"m.new_content":{"body":"good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.concatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes an array or a scalar, and anything with the name concat should do the same (take a container or a thing contained).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718107668669,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m5mUVqGSf08Itbv0BuLdJ6XnGtOaSyqV6D6c49pw5xA"},
{"content":{"body":" * good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes an array or a scalar, and anything with the name concat should do the same (take a container or a thing contained).","m.mentions":{},"m.new_content":{"body":"good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes an array or a scalar, and anything with the name concat should do the same (take a container or a thing contained).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718107674966,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BfSDDAvKXNISH1YhCf6oJqCJJhzUjeRjmBzX4vH8rT8"},
{"content":{"body":" * good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes both arrays or scalars, and anything with the name concat should do the same (take both containers or things contained).","m.mentions":{},"m.new_content":{"body":"good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes both arrays or scalars, and anything with the name concat should do the same (take both containers or things contained).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718107776714,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Qok3Vx17_3d-ey2WC4dlte-ouLV2ThiCWe0G5KYhtm8"},
{"content":{"body":"link to present for Promise.try: https://github.com/tc39/proposal-promise-try/issues/15","m.mentions":{},"msgtype":"m.text"},"ts":1718108129761,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iZLq72FVOtUtOP-Q87BPiUzC-T9JPpLinLDdAO_P2wE"},
{"content":{"body":"> <@ljharb:matrix.org> good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it's that array concat takes both arrays or scalars, and anything with the name concat should do the same (take both containers or things contained).\n\nah, sorry for any confusion caused by my misinterpretation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>good morning. to be clear about Iterator.concat, the behavior I think users will expect has nothing to do with Symbol.isConcatSpreadable (which is regrettable and nobody should expect it), it&#39;s that array concat takes both arrays or scalars, and anything with the name concat should do the same (take both containers or things contained).</blockquote></mx-reply>ah, sorry for any confusion caused by my misinterpretation","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SEyPTjP1RbR7zh5ltqcvRxfK7YoW2dRZJPCsz22i9MQ"}},"msgtype":"m.text"},"ts":1718108266151,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AETHgF8dhlbN1H8Yv_fWw_ItwEF03iNu9MkxWefverk"},
{"content":{"body":"test262.fyi is sorta back ^^","m.mentions":{},"msgtype":"m.text"},"ts":1718108344925,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$E1G00WUjj2MT4c3EiaH7i3bdqLInAvpYMtPRFiTNTAs"},
{"content":{"body":"it's gradually filling","msgtype":"m.text"},"ts":1718108352103,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WqeSZ8BFPYpiK6VetXyasaDnKJt19vglvRwRCFw5wc4"},
{"content":{"body":"\n\nlinks to present for RegExp.escape:\n - https://github.com/tc39/proposal-regex-escaping/issues/58\n - https://tc39.es/proposal-regex-escaping/\n","format":"org.matrix.custom.html","formatted_body":"<p>links to present for RegExp.escape:</p>\n<ul>\n<li>https://github.com/tc39/proposal-regex-escaping/issues/58</li>\n<li>https://tc39.es/proposal-regex-escaping/</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718108370622,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$q6Tca-BUYu3uabiKfoyl2S0bPe7Aq94NkNspyy7u-Ls"},
{"content":{"body":"Congrats ljharb ","format":"org.matrix.custom.html","formatted_body":"Congrats <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1718108401312,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TkQugghnY9l60bn2HCO4mADp3ANbckBwHTrYjCBoZng"},
{"content":{"body":"they wouldn't let me clap...","m.mentions":{},"msgtype":"m.text"},"ts":1718108407278,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Jj_-en2bmjQWws1uBrt7q0oyK5XHf2LPhQK-ZOig_sM"},
{"content":{"body":"BTW volunteers welcome for doing the next proposal scrub","m.mentions":{},"msgtype":"m.text"},"ts":1718108511619,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h3d9tAjdVnojAwQJD2hFMwdvKdln6-Xip_WKzrNvW30"},
{"content":{"body":"I think we should retro the proposal scrub because I value it but it felt unproductive for some parts","msgtype":"m.text"},"ts":1718109121443,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ygNsEWKzTDw71qwpIib1QV4R-_kUJcMXquSTaL9iLWs"},
{"content":{"body":"> <@haxjs:matrix.org> littledan: \n> \n> Regarding `function.sent`, we have discussed use cases and possible solutions in several past meetings. However, there is no consensus on whether the use cases are strong enough to support introducing a syntactic solution. Although I generally still believe this is a problem worth addressing, perhaps solving it through a more general feature like function decorators in the form of an API is more promising than introducing entirely new syntax. Therefore, I hope to revisit this proposal after the function decorator proposal advances to the next stage.\n\nthanks! I've copied this into the notes in the appropriate section.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Y3XeWHBScKh_5FnC5rlg5NsNnfdwJdTqORHI9CVzYm0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br><p><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>:</p>\n<p>Regarding <code>function.sent</code>, we have discussed use cases and possible solutions in several past meetings. However, there is no consensus on whether the use cases are strong enough to support introducing a syntactic solution. Although I generally still believe this is a problem worth addressing, perhaps solving it through a more general feature like function decorators in the form of an API is more promising than introducing entirely new syntax. Therefore, I hope to revisit this proposal after the function decorator proposal advances to the next stage.</p>\n</blockquote></mx-reply>thanks! I've copied this into the notes in the appropriate section.","m.mentions":{"user_ids":["@haxjs:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Y3XeWHBScKh_5FnC5rlg5NsNnfdwJdTqORHI9CVzYm0"}},"msgtype":"m.text"},"ts":1718109168362,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$P0AB5n7yAg5wyqvNU4GS4NwpfiDMb93yRx-PesUIGBg"},
{"content":{"body":"If do temp check, could we have a simple example to show the difference of two escape solutions ?","m.mentions":{},"msgtype":"m.text"},"ts":1718109262874,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$4IlAKBu3bn9Zmpa2EwV6QBL9PY2cEbDvFlJ4tlRhF2Y"},
{"content":{"body":"https://docs.google.com/document/d/19PqeLeKjdy9zTn4OAQEhQVI2zmAxUvZ7eCmnNrKQHeI/edit","m.mentions":{},"msgtype":"m.text"},"ts":1718109275567,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Y8AG8h1vy4-2AXXm_QAWy0XCf6C_kRiPVAFdvmSu5Mc"},
{"content":{"body":"Nicolo, can you share this on-screen","m.mentions":{},"msgtype":"m.text"},"ts":1718109284264,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pWvSS6C6xke1T0EHupewy9P3LdW3ZY79zcwqvRceq-s"},
{"content":{"body":"> <@haxjs:matrix.org> If do temp check, could we have a simple example to show the difference of two escape solutions ?\n\n`\\x40` vs `\\@`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%244IlAKBu3bn9Zmpa2EwV6QBL9PY2cEbDvFlJ4tlRhF2Y\">In reply to</a><a href=\"https://matrix.to/#/%40haxjs%3Amatrix.org\">@haxjs:matrix.org</a><br />If do temp check, could we have a simple example to show the difference of two escape solutions ?</blockquote></mx-reply><code data-md=\"`\">\\x40</code> vs <code data-md=\"`\">\\@</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$4IlAKBu3bn9Zmpa2EwV6QBL9PY2cEbDvFlJ4tlRhF2Y"}},"msgtype":"m.text"},"ts":1718109356048,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wqtnCYMZEneqs5xSjp2niYcNzH9cLcovIf3NwPhD6Ow"},
{"content":{"body":"`for RegExp.escape('@')`","format":"org.matrix.custom.html","formatted_body":"<code data-md=\"`\">for RegExp.escape(&#39;@&#39;)</code>","msgtype":"m.text"},"ts":1718109375024,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ddjPAHBIKD6P13lx4trvsAR2P7hgxm33deFOd6MVRCE"},
{"content":{"body":"* for `RegExp.escape('@')`","format":"org.matrix.custom.html","formatted_body":"for <code data-md=\"`\">RegExp.escape(&#39;@&#39;)</code>","m.new_content":{"body":"for `RegExp.escape('@')`","format":"org.matrix.custom.html","formatted_body":"for <code data-md=\"`\">RegExp.escape(&#39;@&#39;)</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$ddjPAHBIKD6P13lx4trvsAR2P7hgxm33deFOd6MVRCE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718109383659,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hwVn_aAePJllSkH8OVQqNaHO7UGn99fb8hKXENk5kKc"},
{"content":{"body":"> <@haxjs:matrix.org> If do temp check, could we have a simple example to show the difference of two escape solutions ?\n\nif we don't change, `RegExp.escape(\"$\") === \"\\\\$\"`. If we do change, `RegExp.escape(\"$\") === \"\\\\x24\"`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4IlAKBu3bn9Zmpa2EwV6QBL9PY2cEbDvFlJ4tlRhF2Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>If do temp check, could we have a simple example to show the difference of two escape solutions ?</blockquote></mx-reply>if we don't change, <code>RegExp.escape(\"$\") === \"\\\\$\"</code>. If we do change, <code>RegExp.escape(\"$\") === \"\\\\x24\"</code>","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4IlAKBu3bn9Zmpa2EwV6QBL9PY2cEbDvFlJ4tlRhF2Y"}},"msgtype":"m.text"},"ts":1718109408167,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$UXA3wTN4K-qrZZEAN5zqBNLZaXmpqWR6a09wY6cQzpA"},
{"content":{"body":"\n\nlinks to present for Error.isError:\n - https://github.com/tc39/proposal-is-error?tab=readme-ov-file#use-cases\n - https://tc39.es/proposal-is-error/","format":"org.matrix.custom.html","formatted_body":"<p>links to present for Error.isError:</p>\n<ul>\n<li>https://github.com/tc39/proposal-is-error?tab=readme-ov-file#use-cases</li>\n<li>https://tc39.es/proposal-is-error/</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718109579116,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mpmhGJkXws1Gz5Bzepidj3oD-T9pzoZsU0_jVJtJo0s"},
{"content":{"body":"I made a mistake of not stating Shu's comments on `RegExp.escape` so will read it out at the next break:\n\n>V8 has no concerns for Stage 2.7.\n\n>As for character vs hex code escapes, V8 can live with either outcome but weakly prefers character escapes. The future stability argument AFAIU is that choosing character escapes makes changing the behavior of character escapes in the future even harder. But it is already very hard to change non-throwing behavior to new non-throwing behavior. We don't understand why this would make it meaningfully harder.","format":"org.matrix.custom.html","formatted_body":"<p>I made a mistake of not stating Shu's comments on <code>RegExp.escape</code> so will read it out at the next break:</p>\n<blockquote>\n<p>V8 has no concerns for Stage 2.7.</p>\n</blockquote>\n<blockquote>\n<p>As for character vs hex code escapes, V8 can live with either outcome but weakly prefers character escapes. The future stability argument AFAIU is that choosing character escapes makes changing the behavior of character escapes in the future even harder. But it is already very hard to change non-throwing behavior to new non-throwing behavior. We don't understand why this would make it meaningfully harder.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718109823014,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$2L0-pZMrJVkBpsrjbbqxNl_-LEnMJj71CbCsxMYjgNM"},
{"content":{"body":"> <@robpalme:matrix.org> I made a mistake of not stating Shu's comments on `RegExp.escape` so will read it out at the next break:\n> \n> >V8 has no concerns for Stage 2.7.\n> \n> >As for character vs hex code escapes, V8 can live with either outcome but weakly prefers character escapes. The future stability argument AFAIU is that choosing character escapes makes changing the behavior of character escapes in the future even harder. But it is already very hard to change non-throwing behavior to new non-throwing behavior. We don't understand why this would make it meaningfully harder.\n\nthat was exactly my opinion","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%242L0-pZMrJVkBpsrjbbqxNl_-LEnMJj71CbCsxMYjgNM\">In reply to</a><a href=\"https://matrix.to/#/%40robpalme%3Amatrix.org\">@robpalme:matrix.org</a><br /><p>I made a mistake of not stating Shu's comments on <code>RegExp.escape</code> so will read it out at the next break:</p>\n<blockquote>\n<p>V8 has no concerns for Stage 2.7.</p>\n</blockquote>\n<blockquote>\n<p>As for character vs hex code escapes, V8 can live with either outcome but weakly prefers character escapes. The future stability argument AFAIU is that choosing character escapes makes changing the behavior of character escapes in the future even harder. But it is already very hard to change non-throwing behavior to new non-throwing behavior. We don't understand why this would make it meaningfully harder.</p>\n</blockquote>\n</blockquote></mx-reply>that was exactly my opinion","m.relates_to":{"m.in_reply_to":{"event_id":"$2L0-pZMrJVkBpsrjbbqxNl_-LEnMJj71CbCsxMYjgNM"}},"msgtype":"m.text"},"ts":1718110187894,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$V4lKZ8JRf_vwdG15OMpxY5H9FExkM7YbyXsgLs9XlZo"},
{"content":{"body":"doesn't it throw an exception if you forget to call super(), unless you take the extreme step of returning something other than this?","m.mentions":{},"msgtype":"m.text"},"ts":1718110258145,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QftA-v0zb1uS6yqc3ii4jIllduzxC_Zud0-wfm6mi6I"},
{"content":{"body":" * doesn't it throw an exception if you forget to call super(), unless you take the extreme step of returning something other than this/undefined?","m.mentions":{},"m.new_content":{"body":"doesn't it throw an exception if you forget to call super(), unless you take the extreme step of returning something other than this/undefined?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$QftA-v0zb1uS6yqc3ii4jIllduzxC_Zud0-wfm6mi6I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718110264652,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GU5wo8ge4iR8nR_0mtCkrMIJSFvYVZe4AJZfydf-C-Y"},
{"content":{"body":"> <@michaelficarra:matrix.org> that was exactly my opinion\n\nI think that's a misunderstanding; the changes would not be from non-throwing to throwing but rather the other way around (such that e.g. `/\\@/u` becomes valid)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$V4lKZ8JRf_vwdG15OMpxY5H9FExkM7YbyXsgLs9XlZo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>that was exactly my opinion</blockquote></mx-reply>I think that's a misunderstanding; the changes would not be from non-throwing to throwing but rather the other way around (such that e.g. <code>/\\@/u</code> becomes valid)","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$V4lKZ8JRf_vwdG15OMpxY5H9FExkM7YbyXsgLs9XlZo"}},"msgtype":"m.text"},"ts":1718110280570,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$coui7Y9sMX6DjnZNRkq1GeETDU5Sv7o_2J0Nl4wePf0"},
{"content":{"body":"(possible) hot take: brand checking is orders of magnitude more important (and less icky) than type checking","m.mentions":{},"msgtype":"m.text"},"ts":1718110324465,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$ibnkragFJuCW2F-2JsmTUynlqQkDDGwCZxqzJWECQz0"},
{"content":{"body":"> <@usharma:igalia.com> (possible) hot take: brand checking is orders of magnitude more important (and less icky) than type checking\n\nwhy contrast them? they are both important and just do different things.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ibnkragFJuCW2F-2JsmTUynlqQkDDGwCZxqzJWECQz0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>(possible) hot take: brand checking is orders of magnitude more important (and less icky) than type checking</blockquote></mx-reply>why contrast them? they are both important and just do different things.","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ibnkragFJuCW2F-2JsmTUynlqQkDDGwCZxqzJWECQz0"}},"msgtype":"m.text"},"ts":1718110351073,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$864T0q7vwo0hRVGBt0TquKzblWvplCg19W8XpDVcT2s"},
{"content":{"body":"oh","m.mentions":{},"msgtype":"m.text"},"ts":1718110358532,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$G8qSK2idp8Y15Jw7JNSoi272YoAQMGQ0tyDpXZHWM_w"},
{"content":{"body":"true","m.mentions":{},"msgtype":"m.text"},"ts":1718110359509,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$qEswH-iHZJk1X9v_HfR9Mb6xtaSVnUnD_O4jDldUJKE"},
{"content":{"body":"I guess more accurately: runtime brand checks are important to complement type checks","m.mentions":{},"msgtype":"m.text"},"ts":1718110388080,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$EyGV0roHXjPGqBWOTkFBsFR0L5GPB6jx5WTMEmbHVpM"},
{"content":{"body":"Chris de Almeida (TCQ) Because it's a revoked proxy, so you should not be able to inspect its state","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a> (TCQ) Because it's a revoked proxy, so you should not be able to inspect its state","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"msgtype":"m.text"},"ts":1718110499552,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QZcAwcFpM3JrQrfsBHNoFA7nNTOox1zYyF8qSWVqpnY"},
{"content":{"body":"Array.isArray does the same","m.mentions":{},"msgtype":"m.text"},"ts":1718110502866,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$STgaViLfPH7O49xZRWUfvkfE6KMsJX_97pjpyelTttY"},
{"content":{"body":"@usharma:igalia.com give me one reason for brand checks","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40usharma%3Aigalia.com\">@ryzokuken (TC39 🇫🇮)</a> give me one reason for brand checks","msgtype":"m.text"},"ts":1718110577012,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2ny6RhFXG02Qi66TxWtwR5F85TeL0GG30nXYh7wcC7M"},
{"content":{"body":"well, you might want to check the \"type\" of something on runtime? I use code that uses `Array.isArray` all the time?","format":"org.matrix.custom.html","formatted_body":"well, you might want to check the \"type\" of something on runtime? I use code that uses <code>Array.isArray</code> all the time?","m.mentions":{},"msgtype":"m.text"},"ts":1718110618896,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$ZJ08otumbM7_hXxWsLY_648_i93LqGo2DkakHYIwbEQ"},
{"content":{"body":"as do many others I believe","m.mentions":{},"msgtype":"m.text"},"ts":1718110631537,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$YEyzR2Zo0jB0m0L97PcE6mtPE3jcHJmYUaghFb7NXcQ"},
{"content":{"body":"we're in quite violent agreement about Error.isError returning true for DOMException.","m.mentions":{},"msgtype":"m.text"},"ts":1718110633758,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DkzkksV6Ro4xLkQ-414G9yV9NmeL1ukj--lDijxGmPU"},
{"content":{"body":"@usharma:igalia.com you should be duck typing, though maybe you need to know whether the object has a magic length property for some reason?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40usharma%3Aigalia.com\">@ryzokuken (TC39 🇫🇮)</a> you should be duck typing, though maybe you need to know whether the object has a magic length property for some reason?","msgtype":"m.text"},"ts":1718110736950,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XdB5DsZAgrAm8hOJVdZr60oAzvo58Zj6fkzotyQMUII"},
{"content":{"body":"I can give a more specific example from a recent function I wrote but in general when dealing with heterogeneous objects and collections like we do in JS, it's quite useful","m.mentions":{},"msgtype":"m.text"},"ts":1718110753448,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$pdwqzYpzoTTZWxB-jO8KnnOZpFIYvvwSY0mZpGL9GwM"},
{"content":{"body":"like I can see testing for Arrays due to the magic length property and mapped arguments objects because of their magic assignment behaviour","msgtype":"m.text"},"ts":1718110763072,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZvttPSoyyxHrX54fbfeshMMxoOKMovNajcwoYf40K54"},
{"content":{"body":"in *general*, you definitely shouldn't be brand checking","format":"org.matrix.custom.html","formatted_body":"in <i data-md=\"*\">general</i>, you definitely shouldn&#39;t be brand checking","msgtype":"m.text"},"ts":1718110784014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_0vXRK4q2-GzT4YP7c4rJ04-JGG9Ag-1UZGHQ-oxKmY"},
{"content":{"body":"those two cases are accounting for language magic","msgtype":"m.text"},"ts":1718110792730,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nNvI7C02uOvgDd3s-srFY3vDwjf4Gl4xzWW5SZwQE_A"},
{"content":{"body":"idk what to say... I disagree?","m.mentions":{},"msgtype":"m.text"},"ts":1718110817081,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$frPFPF7B4VmSoRghwB0KWdS2ytHpqwpdQ9n0ZFTXF1A"},
{"content":{"body":"I don't think the stuff I'm writing would be better handled _without_ brand checks","format":"org.matrix.custom.html","formatted_body":"I don't think the stuff I'm writing would be better handled <em>without</em> brand checks","m.mentions":{},"msgtype":"m.text"},"ts":1718110835696,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$DeHn-91A2DP2-K4pa6TM25aQt1AEi9FhCw8d7uMaeM8"},
{"content":{"body":"> <@michaelficarra:matrix.org> like I can see testing for Arrays due to the magic length property and mapped arguments objects because of their magic assignment behaviour\n\nis there a way to identify a mapped arguments object?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZvttPSoyyxHrX54fbfeshMMxoOKMovNajcwoYf40K54?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>like I can see testing for Arrays due to the magic length property and mapped arguments objects because of their magic assignment behaviour</blockquote></mx-reply>is there a way to identify a mapped arguments object?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZvttPSoyyxHrX54fbfeshMMxoOKMovNajcwoYf40K54"}},"msgtype":"m.text"},"ts":1718111072613,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc"},
{"content":{"body":"> <@gibson042:matrix.org> is there a way to identify a mapped arguments object?\n\nno, this is indeed another missing brand check i seem to always forget about","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gibson042:matrix.org\">@gibson042:matrix.org</a><br>is there a way to identify a mapped arguments object?</blockquote></mx-reply>no, this is indeed another missing brand check i seem to always forget about","m.mentions":{"user_ids":["@gibson042:matrix.org","@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc"}},"msgtype":"m.text"},"ts":1718111101824,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Sz4pec61pSzmhdg5ZiaQlO4k0lvYJ7seGapxzJG9H8Q"},
{"content":{"body":"@ljharb:matrix.org don't you dare","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40ljharb%3Amatrix.org\">@ljharb</a> don&#39;t you dare","msgtype":"m.text"},"ts":1718111114435,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$IpTajFsMzPXB-YheqpWz_zWkwlXjpu2D6d6Dx81AGQY"},
{"content":{"body":"> <@gibson042:matrix.org> is there a way to identify a mapped arguments object?\n\n * no, this is indeed another missing brand check i seem to always forget about. see https://npmjs.com/is-arguments","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gibson042:matrix.org\">@gibson042:matrix.org</a><br>is there a way to identify a mapped arguments object?</blockquote></mx-reply> * no, this is indeed another missing brand check i seem to always forget about. see https://npmjs.com/is-arguments","m.mentions":{},"m.new_content":{"body":"no, this is indeed another missing brand check i seem to always forget about. see https://npmjs.com/is-arguments","format":"org.matrix.custom.html","formatted_body":"no, this is indeed another missing brand check i seem to always forget about. see https://npmjs.com/is-arguments","m.mentions":{"user_ids":["@gibson042:matrix.org","@michaelficarra:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Sz4pec61pSzmhdg5ZiaQlO4k0lvYJ7seGapxzJG9H8Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718111115775,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rqZih8kb865zESh5z1RiXp_ltkYzNjyr8cD88TBfDI8"},
{"content":{"body":"> <@gibson042:matrix.org> is there a way to identify a mapped arguments object?\n\nHe said \"all _instances_ except for error have a brand check\", I found the wording to be carefully chosen :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gibson042:matrix.org\">@gibson042:matrix.org</a><br>is there a way to identify a mapped arguments object?</blockquote></mx-reply>He said \"all <em>instances</em> except for error have a brand check\", I found the wording to be carefully chosen :)","m.mentions":{"user_ids":["@gibson042:matrix.org","@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$EQzLAPOB3DFh84jizYQq19uHnI1UzmuC5gi9rMHZpHc"}},"msgtype":"m.text"},"ts":1718111117324,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$0eUoeMZu8dginG96EzHAhbCB7hguV53Fjftr9Vb909Y"},
{"content":{"body":"Can I stop screen sharing?","m.mentions":{},"msgtype":"m.text"},"ts":1718111138106,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$p1d3_22s3-irDCxCIR5LTNX1wjF1Vy1UPy_TU1XEoQg"},
{"content":{"body":"sure, thanks","m.mentions":{},"msgtype":"m.text"},"ts":1718111144294,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eblyPUNiGfjTKtyvvQxwr8ew-JTzsRNLfXkJA72Vccw"},
{"content":{"body":"Michael Ficarra can you expand a bit on \"icky\"? What's specifically wrong with explicit brand checks apart from just the added cost of an additional static method?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> can you expand a bit on \"icky\"? What's specifically wrong with explicit brand checks apart from just the added cost of an additional static method?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1718111334820,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$G4OEBDWW_riUoR7UOQcDnrkuF0FpDFvYp1hIMpn9cko"},
{"content":{"body":"@littledan:matrix.org I think you hit on the key point there: the opposition is to brand checks that are not otherwise justified. Like *all features* we consider, we should require them to have a good reason to exist.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> I think you hit on the key point there: the opposition is to brand checks that are not otherwise justified. Like <i data-md=\"*\">all features</i> we consider, we should require them to have a good reason to exist.","msgtype":"m.text"},"ts":1718111548950,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_zpS0SlpNYvDJcrjfLT5oLNT-1tZ-h3J4n09DairJVk"},
{"content":{"body":"@usharma:igalia.com this is basically \"nominal typing > structural typing\" but at the term level","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40usharma%3Aigalia.com\">@ryzokuken (TC39 🇫🇮)</a> this is basically &quot;nominal typing &gt; structural typing&quot; but at the term level","msgtype":"m.text"},"ts":1718111687592,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F5-D9S79RhANz7hDZ6AV5biFaGYOENrtOfF6GzHL_z4"},
{"content":{"body":"> <@michaelficarra:matrix.org> @littledan:matrix.org I think you hit on the key point there: the opposition is to brand checks that are not otherwise justified. Like *all features* we consider, we should require them to have a good reason to exist.\n\nso the action item is for supporters and opponents to come together and make a shared set of guidelines. I'd prefer an answer which is not, \"make sure you sneak in an operation that does a brand check without being just a brand check operation.\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_zpS0SlpNYvDJcrjfLT5oLNT-1tZ-h3J4n09DairJVk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> I think you hit on the key point there: the opposition is to brand checks that are not otherwise justified. Like <i data-md=\"*\">all features</i> we consider, we should require them to have a good reason to exist.</blockquote></mx-reply>so the action item is for supporters and opponents to come together and make a shared set of guidelines. I'd prefer an answer which is not, \"make sure you sneak in an operation that does a brand check without being just a brand check operation.\"","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_zpS0SlpNYvDJcrjfLT5oLNT-1tZ-h3J4n09DairJVk"}},"msgtype":"m.text"},"ts":1718112273087,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$T64UtuPNDTlVdbsNxnM03nnLf3pI54WlVsf9hoacJ94"},
{"content":{"body":"because this is what proposal champions currently have to do! it just papers over the disagreement about whether the brand check is justified.","m.mentions":{},"msgtype":"m.text"},"ts":1718112330459,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DkIj5Tmq2XnLHdNCiMtx8i6iXgaFKHLNL0Ux8BtIccA"},
{"content":{"body":"@littledan:matrix.org how is that a bad situation if that operation has been independently sufficiently justified","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> how is that a bad situation if that operation has been independently sufficiently justified","msgtype":"m.text"},"ts":1718112338932,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$J-rt8jOQVM-inCtngsjNPWkH2s7NNXI2h-cf_w-wXEE"},
{"content":{"body":"* @littledan:matrix.org how is that a bad situation if that operation has been independently sufficiently justified?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> how is that a bad situation if that operation has been independently sufficiently justified?","m.new_content":{"body":"@littledan:matrix.org how is that a bad situation if that operation has been independently sufficiently justified?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> how is that a bad situation if that operation has been independently sufficiently justified?","msgtype":"m.text"},"m.relates_to":{"event_id":"$J-rt8jOQVM-inCtngsjNPWkH2s7NNXI2h-cf_w-wXEE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718112343751,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aRPFG5Gi1XLglapQ3JGlEzOybMnv-HMMDh5ncZ2te3k"},
{"content":{"body":"wanting the same thing for different reasons is how dispute resolution happens all the time, and it's fine","msgtype":"m.text"},"ts":1718112379259,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LQ3Wl3u3M3hvXpvgZXJvGUvvwyQwLCeK1t0ock8DzUg"},
{"content":{"body":"it is super confusing; if the objection from person A is \"this can't move forward unless it adds a brand check\" and person B is simultaneously saying \"a brand check is not justified\" then the champion ends up finding an *excuse* for a brand check by shaping the API such that it's \"natural\" to include one, such that independent motivation can be argued for. It's super confusing!","format":"org.matrix.custom.html","formatted_body":"it is super confusing; if the objection from person A is \"this can't move forward unless it adds a brand check\" and person B is simultaneously saying \"a brand check is not justified\" then the champion ends up finding an <em>excuse</em> for a brand check by shaping the API such that it's \"natural\" to include one, such that independent motivation can be argued for. It's super confusing!","m.mentions":{},"msgtype":"m.text"},"ts":1718112414590,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5Bx9wI8sZQbkWt0nI_G7pyBNH95779NptHMyyRSBpaM"},
{"content":{"body":"this is a particularly weird set of disagreements, among the various ones we have. It doesn't amount to a coherent design principle.","m.mentions":{},"msgtype":"m.text"},"ts":1718112442739,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6Q-tqIbHjtjVI9rf8GjgaiIXazLPC6XGVDjQmEy08a4"},
{"content":{"body":"it seems like you have a different set of things you're looking for in \"what makes a brand check justified\" than ljharb does. Maybe you can work together on a common set of criteria.","format":"org.matrix.custom.html","formatted_body":"it seems like you have a different set of things you're looking for in \"what makes a brand check justified\" than <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> does. Maybe you can work together on a common set of criteria.","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1718112471324,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$F4HTcIYDGvp2BL5jfVqOOm00gbTvSoYJ7N2pU2ih2CI"},
{"content":{"body":"the answer does not need to be that everything has a brand check; we should just find a common answer one way or another","m.mentions":{},"msgtype":"m.text"},"ts":1718112519366,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$myoadBjEz_pHc4AtM4HolB63uz6T8VqoBbHHEuR5wLM"},
{"content":{"body":"I think the majority of the committee agrees that brand checks are harmful for \"normal\" code","msgtype":"m.text"},"ts":1718112531702,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$N0-hC7jCi27lx7doDxiZtzPuwdKDd2gM4Hr74OHllwg"},
{"content":{"body":"this Error check was justified for like dev tooling","msgtype":"m.text"},"ts":1718112554772,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZxS2txDj2FdkxuwjQLBsOCJv0T9XvgeN0MXGNKCCQec"},
{"content":{"body":"i don't think that's actually true anymore","m.mentions":{},"msgtype":"m.text"},"ts":1718112568486,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wto_D6uZAfaWrlpFr1y9LppNmaFIbt-RIPlU76LYIdk"},
{"content":{"body":"it would be ideal if it was *less* ergonomic to discourage its use","format":"org.matrix.custom.html","formatted_body":"it would be ideal if it was <i data-md=\"*\">less</i> ergonomic to discourage its use","msgtype":"m.text"},"ts":1718112569394,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$FmiyKqc86sTvOi_W-XtUY7AQx0xsXBhckFGWDy2hn0Q"},
{"content":{"body":"it was certainly true when the committee was 20 people, but we're much larger and have a much more \"anchored in userland\" set of experience represented than in the past","m.mentions":{},"msgtype":"m.text"},"ts":1718112596246,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VpkGwdSJUvnMlpK6odZFht26W_oTg9l53foft-NcjIM"},
{"content":{"body":"so, yes, if we can get consensus among the committee that brand checks are *not* required when making a new type of object with internal slots, then yeah that's a way through","format":"org.matrix.custom.html","formatted_body":"so, yes, if we can get consensus among the committee that brand checks are <em>not</em> required when making a new type of object with internal slots, then yeah that's a way through","m.mentions":{},"msgtype":"m.text"},"ts":1718112609475,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bONKAaouyHYHYcQ56WXcK1RTciRvuPDyr5dbhS_FOJk"},
{"content":{"body":"*if*","format":"org.matrix.custom.html","formatted_body":"<em>if</em>","m.mentions":{},"msgtype":"m.text"},"ts":1718112627372,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$madxmSUu5W5kWGgzLY4-CisuKF9UtEh6cP_ZNHoQYc4"},
{"content":{"body":"@nicolo-ribaudo:matrix.org to be clear, I didn't actually have time to complete my review, but from the review I did do, it was fine","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo</a> to be clear, I didn&#39;t actually have time to complete my review, but from the review I did do, it was fine","msgtype":"m.text"},"ts":1718112705887,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$E4kgV6KyuBW3Kk_MGUjBVBBA-UUlQh0jnkkrS1MOWJk"},
{"content":{"body":"(not sure why Shu's question was directed specifically at implementers)","m.mentions":{},"msgtype":"m.text"},"ts":1718112734636,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xPjVHR8jseNJvvkS8wKB0hNzYZHBCwWnK8IsQaA_E7A"},
{"content":{"body":"question: are defer namespace and normal namespace object always distinct? or only distinct when error?","m.mentions":{},"msgtype":"m.text"},"ts":1718113242588,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$v1apo1INVELyejOZ-AV_VVCAbpmxH6svjamVgt2LXiM"},
{"content":{"body":"> <@haxjs:matrix.org> question: are defer namespace and normal namespace object always distinct? or only distinct when error?\n\nhax (HE Shi-Jun): can you get that on the queue?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v1apo1INVELyejOZ-AV_VVCAbpmxH6svjamVgt2LXiM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>question: are defer namespace and normal namespace object always distinct? or only distinct when error?</blockquote></mx-reply><a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a>: can you get that on the queue?","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v1apo1INVELyejOZ-AV_VVCAbpmxH6svjamVgt2LXiM"}},"msgtype":"m.text"},"ts":1718113401097,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$RrHe3nLjWK9A49WQvEcUF8SJ6YPDgO_eQeKDCan-lHg"},
{"content":{"body":"> <@michaelficarra:matrix.org> @nicolo-ribaudo:matrix.org to be clear, I didn't actually have time to complete my review, but from the review I did do, it was fine\n\n2.7 would be conditinal on editorial reviews","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$E4kgV6KyuBW3Kk_MGUjBVBBA-UUlQh0jnkkrS1MOWJk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo</a> to be clear, I didn't actually have time to complete my review, but from the review I did do, it was fine</blockquote></mx-reply>2.7 would be conditinal on editorial reviews","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$E4kgV6KyuBW3Kk_MGUjBVBBA-UUlQh0jnkkrS1MOWJk"}},"msgtype":"m.text"},"ts":1718113487526,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$gqEKPkH2PhSu92b6tQM_1Ba0WvoyJ-rVZhYYBIVHz2Q"},
{"content":{"body":"> <@haxjs:matrix.org> question: are defer namespace and normal namespace object always distinct? or only distinct when error?\n\nAlways distinct because when you create them you don't know yet if the module will error or not","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v1apo1INVELyejOZ-AV_VVCAbpmxH6svjamVgt2LXiM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>question: are defer namespace and normal namespace object always distinct? or only distinct when error?</blockquote></mx-reply>Always distinct because when you create them you don't know yet if the module will error or not","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v1apo1INVELyejOZ-AV_VVCAbpmxH6svjamVgt2LXiM"}},"msgtype":"m.text"},"ts":1718113503669,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$euajmo_n7bOV9X1kcyTiwEBM14FxUpT70rZjL-GLCxk"},
{"content":{"body":"> <@gibson042:matrix.org> hax (HE Shi-Jun): can you get that on the queue?\n\nAdded.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$RrHe3nLjWK9A49WQvEcUF8SJ6YPDgO_eQeKDCan-lHg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gibson042:matrix.org\">@gibson042:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a>: can you get that on the queue?</blockquote></mx-reply>Added.","m.mentions":{"user_ids":["@gibson042:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RrHe3nLjWK9A49WQvEcUF8SJ6YPDgO_eQeKDCan-lHg"}},"msgtype":"m.text"},"ts":1718113550260,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$VUJjShqo9tLn3Zz6PhPvrDqo8N64xNk80z0a8wj5Gyg"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Always distinct because when you create them you don't know yet if the module will error or not\n\nSeems reasonable. Thank u!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$euajmo_n7bOV9X1kcyTiwEBM14FxUpT70rZjL-GLCxk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Always distinct because when you create them you don't know yet if the module will error or not</blockquote></mx-reply>Seems reasonable. Thank u!","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$euajmo_n7bOV9X1kcyTiwEBM14FxUpT70rZjL-GLCxk"}},"msgtype":"m.text"},"ts":1718113573542,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$UV_8pcOIwyGMks5I6zc1vf_oR3GAdpojtd3Ty2L-Ems"},
{"content":{"body":"> <@mgaudet:mozilla.org> (Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment)\n\nIt's back up fully now https://test262.fyi","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">@mgaudet:mozilla.org</a><br>(Do we have a test262 dashboard that has v8 and sm on it? I have https://test262.fyi/ in my history, but this seems incomplete at the moment) </blockquote></mx-reply>It's back up fully now https://test262.fyi","m.mentions":{"user_ids":["@mgaudet:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Wj26saEqW2TYtN6rdwoTIXRYnho9oHB_0R6VmfRHJTE"}},"msgtype":"m.text"},"ts":1718113597387,"senderName":"JaseW","senderId":"@jasew:matrix.org","id":"$2gSSDnUcJevzRcuVM1nt5KPiUmWxceWta0Oozas9RKg"},
{"content":{"body":":) Still waiting for legacy regexp results tho","m.mentions":{},"msgtype":"m.text"},"ts":1718113665407,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$LHpYNTJAK7CB6_YrYL1sr8UOlbi7VTdWbAyaLN2I2T0"},
{"content":{"body":"> <@mgaudet:mozilla.org> :) Still waiting for legacy regexp results tho\n\na bit weird. this is what it looked like when I loaded it a couple of hours ago:","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LHpYNTJAK7CB6_YrYL1sr8UOlbi7VTdWbAyaLN2I2T0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">@mgaudet:mozilla.org</a><br>:) Still waiting for legacy regexp results tho</blockquote></mx-reply>a bit weird. this is what it looked like when I loaded it a couple of hours ago:","m.mentions":{"user_ids":["@mgaudet:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$LHpYNTJAK7CB6_YrYL1sr8UOlbi7VTdWbAyaLN2I2T0"}},"msgtype":"m.text"},"ts":1718113856982,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$4ozkDsgi6YkU0teL_aMcs1kswLXFVg-PCaCPY5lDbEU"},
{"content":{"body":"now it's not showing v8 anymore","m.mentions":{},"msgtype":"m.text"},"ts":1718113865215,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$9ryiWSikEwyh0y3xDZ1GN_xda1qP1_je1OZKVa3QEEs"},
{"content":{"body":"... huh. (kudos to Canadahonk for building this tho -- its a bit weird it's become load bearing?) ","m.mentions":{},"msgtype":"m.text"},"ts":1718113896715,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$V7rN5n2JG-qpqzFaONUfYpzUASm7VUT2XSLDKgeuWXU"},
{"content":{"body":"if the fake module namespace object is created, it will be created each import","msgtype":"m.text"},"ts":1718114322333,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$bxc35bMWE7j5pmisP1VLsKx9kvpx6zl6h_hEjb_X3Sc"},
{"content":{"body":"this usually happens in getting the ES namespace object of a  CommonJS module","msgtype":"m.text"},"ts":1718114353610,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$gWFF0WtgjHTExRZssEMRjuop8H5ZzP31H_WwohIZj1w"}
]