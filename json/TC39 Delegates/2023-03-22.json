[
{"content":{"body":"Good morning, all.  Plenary begins in one hour.","msgtype":"m.text"},"ts":1679500707741,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$zIaUJAiCCfCxD3ihqTvnBKBZ5Plbt2pMiRKXu87xSt0"},
{"content":{"body":"For those interested, I have two draft PRs up that illustrate the potential cover grammars for `await using` and `async using`:\n- `await using`: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15\n- `async using`: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16","format":"org.matrix.custom.html","formatted_body":"<p>For those interested, I have two draft PRs up that illustrate the potential cover grammars for <code>await using</code> and <code>async using</code>:</p>\n<ul>\n<li><code>await using</code>: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15</li>\n<li><code>async using</code>: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16</li>\n</ul>\n","msgtype":"m.text"},"ts":1679502436857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ong5nxyPuCjy9JMqR_AbcofPHKCGHHoEgUIFLCgB3Bw"},
{"content":{"body":"slides for the awkwardly done election (sorry about that y'all) https://docs.google.com/presentation/d/1xQ7huTJQsbcfFM6nhN7Tk3uBUf3h7FHkroM1m56ueZE/edit#slide=id.g6e7d7a6a09_0_98","msgtype":"m.text"},"ts":1679505516107,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cbGzbe9ih3BtSDaQ_-As-uw_9iuKeUKBA0ruGxzu4yo"},
{"content":{"body":"I thought it was fine, I had no problem with the process, personally","msgtype":"m.text"},"ts":1679505615551,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$oAMbz0TigxLE-t0W2ZqM3SIZmDUDGxjpekFu_N_nODg"},
{"content":{"body":"ah nice, i like source as a keyword","msgtype":"m.text"},"ts":1679505705300,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LOXLjlU92Jbi5_EiK0s8aGpl-3-jCFAw0PW28LibBcQ"},
{"content":{"body":"I already love this presentation","msgtype":"m.text"},"ts":1679505730487,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$m3b_hbbC2xFZBIKJx4mPSrKdZjR-iezbIaGWYU-wj8s"},
{"content":{"body":"Wait, he said \"next slide\" right?","msgtype":"m.text"},"ts":1679506445592,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$W4okFIIV8O_e0urkljhA_eymdEgOyJWPkRT_XEN20k0"},
{"content":{"body":"I'm still seeing \"Import phase syntax\" slide","msgtype":"m.text"},"ts":1679506454416,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$CzBc-tMmGRZ9mIp5p0jdxLIz7kosoXT8xA289rnjg7Q"},
{"content":{"body":"we're on spec: ordering of fetches slide","msgtype":"m.text"},"ts":1679506477723,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Svvvj1hQlI6jpPzaKez1RVTqHhyw_u57Vvqou8-0EvM"},
{"content":{"body":"now on spec: idempotence is unchanged","msgtype":"m.text"},"ts":1679506490522,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ek8S0DZzhkBtz2htep0V9XTVVYygelNXRxgCeXPTKAw"},
{"content":{"body":"https://docs.google.com/presentation/d/1F62Jia5erIm6m6nqkm_2pFIlNLOVF0E4ewrVRytSJEs/edit","msgtype":"m.text"},"ts":1679506505291,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$F5rHgiyFp9QAdvN8BMWSoQSXd23LujIImOYeFMEvnus"},
{"content":{"body":"this seems like a thing that we, as language designers, would notice and/or care about, but users of the language don't want to care about this distinction or have to pass around an awkward intermediate opaque value because of it","msgtype":"m.text"},"ts":1679507311390,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$G6MQGAeKKV4G6XBTtrCXWhZNq9LhKcEcbKS34wGJYp8"},
{"content":{"body":"feature request: import/export queue as YAML","msgtype":"m.text"},"ts":1679507370448,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Q9p0ldgOPPGkDeZQfjgM8Pk6Va7nADOsd4Zc4hqzjxo"},
{"content":{"body":"some though:\n```js\nimport source wasm from './x.wasm'\n// and\nimport wasm from './x.wasm'\n```\n\nboth give us reference to undeniable host objects.","format":"org.matrix.custom.html","formatted_body":"<p>some though:</p>\n<pre><code class=\"language-js\">import source wasm from './x.wasm'\n// and\nimport wasm from './x.wasm'\n</code></pre>\n<p>both give us reference to undeniable host objects.</p>\n","msgtype":"m.text"},"ts":1679507397964,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$yddxOa60oAWkI8RnCm2qRTQ1hhO1jdcSKnljs0KHvJI"},
{"content":{"body":"I mean that depends on the embedder, right?","msgtype":"m.text"},"ts":1679507437451,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CymYbsMkRPcWapdXaLTguxSIVSq9EpBVsbuDtaM-Vvo"},
{"content":{"body":"the embedder could add hooks for denying that, surely","msgtype":"m.text"},"ts":1679507481377,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fQbjFtW3nkOhzi_ugsaNuOH8kuKwRCHE4bUE99yZifs"},
{"content":{"body":"yes. since it already happens today, IMO we no need to care about deniability in this syntax.","msgtype":"m.text"},"ts":1679507482347,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ZillCkMwNzkNBim3LIy6Dyb0RJz7x6cNSH5E0fZbkRk"},
{"content":{"body":"Wait, so `import x from \"test\"` and `import x from \"test\" with {}` would have different cache keys?","format":"org.matrix.custom.html","formatted_body":"Wait, so <code>import x from &quot;test&quot;</code> and <code>import x from &quot;test&quot; with {}</code> would have different cache keys?","msgtype":"m.text"},"ts":1679508522875,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$JYvcsfm96hZz1-mAFHMaleA9pg3SfKU5vqVs4gxh6MI"},
{"content":{"body":"in that case, no","msgtype":"m.text"},"ts":1679508533542,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pq4cLkcVk7DKynjVw4LW6LISu0kuWh9ze64Y2lO2cBw"},
{"content":{"body":"keep in mind, it's not that all attributes result in a differing cache key at the host level, they might be normalized just like relative paths","msgtype":"m.text"},"ts":1679508562937,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hODt1Z4tVYZ9uoy0v4L8r6o5yWG1qdJ8fKgnMHUNm_0"},
{"content":{"body":"slide https://docs.google.com/presentation/d/1Abdr54Iflz_4sah2_yX2qS3K09qDJGV84qIZ6pHAqIk/edit#slide=id.g216c73c7b74_0_35 seems to suggest the cache key for the former would be `#[\"test\", null]` and the latter would be `#[\"test\", #{}]`","format":"org.matrix.custom.html","formatted_body":"slide https://docs.google.com/presentation/d/1Abdr54Iflz_4sah2_yX2qS3K09qDJGV84qIZ6pHAqIk/edit#slide=id.g216c73c7b74_0_35 seems to suggest the cache key for the former would be <code>#[&quot;test&quot;, null]</code> and the latter would be <code>#[&quot;test&quot;, #{}]</code>","msgtype":"m.text"},"ts":1679508610803,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$12nsaobwIWdwCkvKbCZbCmoEuUHQo0h-dwXRl5QuyGg"},
{"content":{"body":"erm, ok. i have maybe a solution to what mark is asking","msgtype":"m.text"},"ts":1679508776482,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$iLg30o1CaN3pgc-pL_bwIN_qDkMTDumNX7-OMZK8YSI"},
{"content":{"body":"i have a slide deck","msgtype":"m.text"},"ts":1679508779212,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$jLut_MVVwEEta9Rmv0VtAJjgs10TnoqW5AaGVa78S-A"},
{"content":{"body":"but it wasn't totally ready","msgtype":"m.text"},"ts":1679508786254,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$p8OZHv-DUP-hEbHFKILkyaEHxscS0-3kGIls3JWj16Q"},
{"content":{"body":"I will probably do it as a blog post after i've had a chance to talk to the other modules folks","msgtype":"m.text"},"ts":1679508837576,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6jODKDGjqi6149IIvsrfLBrnpFN4W3xai02BIRGJ3s0"},
{"content":{"body":"oh, I just checked the spec and it is actually the same cache key, my bad","msgtype":"m.text"},"ts":1679508837590,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$CKKHwdcMSPoHTgmAguFAAe4okt02uIid26x9TS_-11E"},
{"content":{"body":" * oh, I just checked the proposed spec text and it is actually the same cache key, my bad","m.new_content":{"body":"oh, I just checked the proposed spec text and it is actually the same cache key, my bad","msgtype":"m.text"},"m.relates_to":{"event_id":"$CKKHwdcMSPoHTgmAguFAAe4okt02uIid26x9TS_-11E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679508846152,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$pjzx3INXZxZeWU8Bu5AHo1DVdaEYIkG2Ea8ln8p7cPc"},
{"content":{"body":"here is the deck: https://docs.google.com/presentation/d/1YDFyEj8SxbWXhtPBVjyoSOVnaeydnZ_lexmd-LLgO4U/edit#slide=id.p","msgtype":"m.text"},"ts":1679508859782,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$2winsWXLSXOC09KknDQCwsGCEAN6cy0E09g2ch9wHcY"},
{"content":{"body":"its out of date, please don't take it as anything concrete","msgtype":"m.text"},"ts":1679508882867,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$_gwTTRwfsDrfcMyL9wH6-ChkjcQrQBolwVb3cseoE90"},
{"content":{"body":"I took it off the agenda because it wasn't concrete but i can talk about it briefly","msgtype":"m.text"},"ts":1679508945636,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$NgV4fKCgDEg0KDBLfwdOrH4dUi9PTUMSLO7Zf4gjrIg"},
{"content":{"body":"I'd encourage you to add this to the agenda as well as the queue","msgtype":"m.text"},"ts":1679508959682,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5WiTowbZ07nf_Wuzizr60U-k8d0Soe4ZTxg-NWLMbZU"},
{"content":{"body":"I think Mark was probably just unaware of the coordination already happening between the module proposal authors","msgtype":"m.text"},"ts":1679508985802,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Jdix-qFiIsxYKl1EgTYJL-KjlTR7F6s651nO2WfXsk0"},
{"content":{"body":"I've been impressed with how much coordination and participation has gone into the various modules proposals","msgtype":"m.text"},"ts":1679508988384,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$w84LCak77BwRGDm7S-bMq45jAhDWrzaMccXIXXh4EsY"},
{"content":{"body":"OT yulia presented some stuff about this module work (including layering/process improcements) at BOBKonf 2023 just last week (great talk!) https://bobkonf.de/2023/startsev.html","format":"org.matrix.custom.html","formatted_body":"OT <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> presented some stuff about this module work (including layering/process improcements) at BOBKonf 2023 just last week (great talk!) https://bobkonf.de/2023/startsev.html","msgtype":"m.text"},"ts":1679509117220,"senderName":"Jesse (TC39)","senderId":"@jesse:igalia.com","id":"$y19N0rWgu4VJytROaDwyiyTNe76U9gNqpKCdgzbPd3w"},
{"content":{"body":"its very out of date already","msgtype":"m.text"},"ts":1679509136513,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$IgVHMDgVLGv_2X1Fz1Yoj_rri1rTj4RudDw4XCI6viU"},
{"content":{"body":"in one week? JS moves faster than I thought!","msgtype":"m.text"},"ts":1679509152637,"senderName":"Jesse (TC39)","senderId":"@jesse:igalia.com","id":"$6juScWx8-izSQ-S9EAOSsxQhImwnEd8l1hg1MKXgCtY"},
{"content":{"body":"yes, i have the wrong names already, probably because i was writing the talk a couple of months ago","msgtype":"m.text"},"ts":1679509169874,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$fIHjXHU7giVOyhMCdkkXUMwJ-fA9UFVJJwUZu7hRgMo"},
{"content":{"body":"I think it'd be much better to discuss this internally in TC39, even if very very unfinished, before you leave (and maybe this will feed into the blog post, even)","msgtype":"m.text"},"ts":1679509173823,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X0ig_mUHTI81fuQ9IuMbevWgVoFqAMIal6FxlvEY6a0"},
{"content":{"body":"the bar for something we're discussing just internally should be logically lower than what goes into a public-facing blog post","msgtype":"m.text"},"ts":1679509198920,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$e9hGOecpm2K3LInHm4oI1CIpgLZ2gDncnmDaDym_CVo"},
{"content":{"body":"my view on layering doesn't need to be adopted, its just my thinking","msgtype":"m.text"},"ts":1679509361313,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6sC1A_K7_ZDGqKnUqe1L-8RTaTw5ro4a9CN0f5C865c"},
{"content":{"body":"littledan: afaik node already decided to reflag","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: afaik node already decided to reflag","msgtype":"m.text"},"ts":1679509371184,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QKsAWSJftmVF0YTjKcQMK2KD0yeUC_A20KNrmz7-WYU"},
{"content":{"body":"and blocking that from going public is something i am against because i have reasons for my opinions even if tc39 disagrees","msgtype":"m.text"},"ts":1679509383027,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$VTa4wc1UdbDgwRe-mbySNgNKebvhPXAsr_WYY1qiTuo"},
{"content":{"body":"honestly the slow path seems totally fine as long as we update docs and stuff?","msgtype":"m.text"},"ts":1679509385115,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IIhhoG7qBnQW2V7L-ps8U2ndGT76nn_zEVsFWAnDmuA"},
{"content":{"body":"> <@ljharb:matrix.org> littledan: afaik node already decided to reflag\n\ninteresting, I guess they don't need a signal from us?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QKsAWSJftmVF0YTjKcQMK2KD0yeUC_A20KNrmz7-WYU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: afaik node already decided to reflag</blockquote></mx-reply>interesting, I guess they don't need a signal from us?","m.relates_to":{"m.in_reply_to":{"event_id":"$QKsAWSJftmVF0YTjKcQMK2KD0yeUC_A20KNrmz7-WYU"}},"msgtype":"m.text"},"ts":1679509392763,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FcKlCd93yN0VteadWEWp6SEmdLiz6K7ZOyykRbXAenE"},
{"content":{"body":"like if no new code uses it, I don't see a problem","msgtype":"m.text"},"ts":1679509398411,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$b4rRuNmolEuG-tSkGh9YDGbEjse15f60milhDBs5lck"},
{"content":{"body":" * like if no new code uses `assert`, I don't see a problem","format":"org.matrix.custom.html","formatted_body":" * like if no new code uses <code>assert</code>, I don't see a problem","m.new_content":{"body":"like if no new code uses `assert`, I don't see a problem","format":"org.matrix.custom.html","formatted_body":"like if no new code uses <code>assert</code>, I don't see a problem","msgtype":"m.text"},"m.relates_to":{"event_id":"$b4rRuNmolEuG-tSkGh9YDGbEjse15f60milhDBs5lck","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679509403084,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RlW8-bUjEmSJ12jeHwdr7LzhOkHJfcxY1g95tnZY40s"},
{"content":{"body":"> <@littledan:matrix.org> interesting, I guess they don't need a signal from us?\n\nthey reflagged because they had no signal, and the future of the syntax was uncertain","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FcKlCd93yN0VteadWEWp6SEmdLiz6K7ZOyykRbXAenE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>interesting, I guess they don't need a signal from us?</blockquote></mx-reply>they reflagged because they had no signal, and the future of the syntax was uncertain","m.relates_to":{"m.in_reply_to":{"event_id":"$FcKlCd93yN0VteadWEWp6SEmdLiz6K7ZOyykRbXAenE"}},"msgtype":"m.text"},"ts":1679509412325,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aaMWg_pSAKHsur6x81fwke_3Q0rvB4MK93uh0vI7h2k"},
{"content":{"body":"bakkot: it's a bit scary, you don't want to have adoption of the legacy variant increase","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: it's a bit scary, you don't want to have adoption of the legacy variant increase","msgtype":"m.text"},"ts":1679509417953,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$FQ3GAxxNfGgGa32Axqi8vHDJcmLY6CwblkyeEZ1inq0"},
{"content":{"body":"hopefully implementations can warn through some side channel","msgtype":"m.text"},"ts":1679509427299,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$FGjRiC83kI0rxcroPRWAsEONSVOvqy7ruO1aBmZwjNc"},
{"content":{"body":"console warning would be good too yeah","msgtype":"m.text"},"ts":1679509455764,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r03OZQHl1tL3ppidFHZEyVUKPYJeV99IAyNmbOqmaUU"},
{"content":{"body":"console warning only if mtime > March TC39 meeting lol","msgtype":"m.text"},"ts":1679509485465,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PMfNIw5yHMwtkCTMXON4xIUqEncOSnfkg5WKtWtj9YQ"},
{"content":{"body":"> <@ljharb:matrix.org> they reflagged because they had no signal, and the future of the syntax was uncertain\n\nhas a release actually gone out with the re-flagging?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aaMWg_pSAKHsur6x81fwke_3Q0rvB4MK93uh0vI7h2k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>they reflagged because they had no signal, and the future of the syntax was uncertain</blockquote></mx-reply>has a release actually gone out with the re-flagging?","m.relates_to":{"m.in_reply_to":{"event_id":"$aaMWg_pSAKHsur6x81fwke_3Q0rvB4MK93uh0vI7h2k"}},"msgtype":"m.text"},"ts":1679509496362,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_CTebFMN4OYZW1gppDlZCigyz7cv8AvD3ymE-wH__5g"},
{"content":{"body":"i don't think so yet","msgtype":"m.text"},"ts":1679509511829,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f-6khTFZB9Yd7kRvfKOn9uzDjEtruvAghluqHUdRq-0"},
{"content":{"body":"Do we have any precedent for a MAY or SHOULD statement on emitting warnings for deprecated syntax?","msgtype":"m.text"},"ts":1679509634268,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$sTUP48oSGSyLv5-4Y3DnNop4P8gjugxKZMPpDqdvx7o"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1679509672009,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YrIozZ4_xQas83eSEUHyEXdRApwedJlqp3nGRAa4MTE"},
{"content":{"body":"eemeli: we have no jurisdiction there","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: we have no jurisdiction there","msgtype":"m.text"},"ts":1679509677053,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hUoxJQwofXDHbOlXiScT4ceHW69n8oT-D2JtyPTuoIo"},
{"content":{"body":"we can give suggestions but like we can also give suggestions to Shu, in words","msgtype":"m.text"},"ts":1679509704147,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dEeWEpc_l_z5XJK9VlzAMOFvR5ap8ZxflIYdXRP9szU"},
{"content":{"body":"like yes i am not a generative AI","msgtype":"m.text"},"ts":1679509728365,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4f6ywCSkXB0bdtB3PAyyKSqO3k9AOKGV5x4v1h5ownY"},
{"content":{"body":"Tbf, I think we're just established that it's not just Chrome.","msgtype":"m.text"},"ts":1679509812985,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$KhF0IRabECx3Yl0Wd7sK8kkXuTAS3x2CQb7V0R1RQlg"},
{"content":{"body":"does node ever do warnings? warnings from node can break stuff","msgtype":"m.text"},"ts":1679509842571,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Jiqsjww3BxpYgafjG-KYVfIpW_RFqJarjV4HeUAOaUU"},
{"content":{"body":"bundlers could, though","msgtype":"m.text"},"ts":1679509845141,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3lVRUmEr6GzZXmPHU1C9LhCNXd7HTsHJjlzAwTos8Yo"},
{"content":{"body":"I guess it does ever do warnings; I have seen some","msgtype":"m.text"},"ts":1679509856719,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bMMwmsggTlcD8Q4MONW1DGYBAPykCuzfKi_aPt6Uanw"},
{"content":{"body":"> <@yulia:mozilla.org> and blocking that from going public is something i am against because i have reasons for my opinions even if tc39 disagrees\n\nSorry I did not mean that I or anyone should block you from doing anything, it just seems like you're hesitant to present something unfinished to us and I was trying to encourage you that it'd be OK to share.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VTa4wc1UdbDgwRe-mbySNgNKebvhPXAsr_WYY1qiTuo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>and blocking that from going public is something i am against because i have reasons for my opinions even if tc39 disagrees</blockquote></mx-reply>Sorry I did not mean that I or anyone should block you from doing anything, it just seems like you're hesitant to present something unfinished to us and I was trying to encourage you that it'd be OK to share.","m.relates_to":{"m.in_reply_to":{"event_id":"$VTa4wc1UdbDgwRe-mbySNgNKebvhPXAsr_WYY1qiTuo"}},"msgtype":"m.text"},"ts":1679509883695,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ASvxBy3aCbMxQgrvFhKHqoLs94TwzoxkDgcw0t9QV40"},
{"content":{"body":"At least for flagged features, it does.","msgtype":"m.text"},"ts":1679509885485,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$WAQvfjua29nqO-wcaB-lptocC_koLcTpvGNrdLTj0xI"},
{"content":{"body":"doesn't do warnings? I have an UnhandledPromiseRejection for you","msgtype":"m.text"},"ts":1679509939310,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5ZGEyVrX2Mz7RMgMO_c42KCUIoJce0Yb1YViLYc8T-E"},
{"content":{"body":"node def does warnings, and has a caching mechanism so it only shows it to you once per process","msgtype":"m.text"},"ts":1679509954098,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VVuf4jizUcg_qqRhQ742mfwIQXo_byBWF3EJCsWnaog"},
{"content":{"body":"UnhandledPromiseRejection now crashes the process by default, I think","msgtype":"m.text"},"ts":1679509970436,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KB3SCMkf7xYcJmZ0yf4zdzS-OV7wxKaSal1t3qxtORc"},
{"content":{"body":"Where do I find the slides yulia ?","format":"org.matrix.custom.html","formatted_body":"Where do I find the slides <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> ?","msgtype":"m.text"},"ts":1679509997036,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$sxeyL0e5RCPerW_GqzKBJ5RtXcHWRt2YUaj5HUWrgGk"},
{"content":{"body":"https://docs.google.com/presentation/d/1YDFyEj8SxbWXhtPBVjyoSOVnaeydnZ_lexmd-LLgO4U/edit#slide=id.p","msgtype":"m.text"},"ts":1679510012777,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$frTouhgBLA7Ubbi_t1b7JULk6J-BC7bHdWIWPgfeORs"},
{"content":{"body":"its not that much of an evolution of what we've discussed in the module calls","msgtype":"m.text"},"ts":1679510023307,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ZnMcxvR-R-gchG-CWDEjcY_AgCJZ1lVBZeR12-3Fc3o"},
{"content":{"body":"you will notice things are on different layers and the layers are named","msgtype":"m.text"},"ts":1679510030557,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$qsjhLiXh9HfdDMS9df_ahMAeMl3J2G_MYeLsv6OhefA"},
{"content":{"body":"its in part in response to my thinking of how the layers can be organized","msgtype":"m.text"},"ts":1679510042071,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Rfk5DJLJXvfF4xTmlDbfC5x1XgjtIGWIemHgMuZsg2M"},
{"content":{"body":"Are there any annex features that don't run on all major browsers?","msgtype":"m.text"},"ts":1679510384692,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$pdChU1p-DrXsAvAXDCdl4SlncRR1qiVpMWpVI6eLEbY"},
{"content":{"body":"(I swear I am not trying to start a fight 😅)","msgtype":"m.text"},"ts":1679510398719,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$3tkPpEFBuJXZecUKg3c8T-zMGYIOJbGGWFKIf1gnnKc"},
{"content":{"body":"editorial notes could help?","msgtype":"m.text"},"ts":1679510429928,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$OH_CEsNTnabl1Ro79hV8kMO8o0oTRMhc0Isz61ofY7E"},
{"content":{"body":"this is a spectacularly unnuanced understanding of the purpose of a specification document","msgtype":"m.text"},"ts":1679510457268,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m-0dHDeTCIIpp0H_wtsg2HTe_MG9M-j3yE3hmFufEzc"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> Are there any annex features that don't run on all major browsers?\n\nThis would not be annex b -- annex b must be implemented by all browsers","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pdChU1p-DrXsAvAXDCdl4SlncRR1qiVpMWpVI6eLEbY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>Are there any annex features that don&#39;t run on all major browsers?</blockquote></mx-reply>This would not be annex b -- annex b must be implemented by all browsers","m.relates_to":{"m.in_reply_to":{"event_id":"$pdChU1p-DrXsAvAXDCdl4SlncRR1qiVpMWpVI6eLEbY"}},"msgtype":"m.text"},"ts":1679510474172,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$syRl4eszum3TtaUae1wjQeL2Fmo57nKMKt5QRghft_c"},
{"content":{"body":"I mean, we could include it with a big banner that says \"careful\"","msgtype":"m.text"},"ts":1679510477557,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$MqngV5TYqCcy1qzgm2XaqQjfr50TxpziFBCEDb8xN_A"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> This would not be annex b -- annex b must be implemented by all browsers\n\nannex b + normative optional 😂","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$syRl4eszum3TtaUae1wjQeL2Fmo57nKMKt5QRghft_c?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>This would not be annex b -- annex b must be implemented by all browsers</blockquote></mx-reply>annex b + normative optional 😂","m.relates_to":{"m.in_reply_to":{"event_id":"$syRl4eszum3TtaUae1wjQeL2Fmo57nKMKt5QRghft_c"}},"msgtype":"m.text"},"ts":1679510499733,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$DbKhVNEPwaKHvPXlifazZYRL2rxntQN3Ut5MhMBCxlk"},
{"content":{"body":"ah, I see. I'm just trying to understand better.","msgtype":"m.text"},"ts":1679510501784,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$X9OOmT9j-K-moelSwjoSLEsuSB5sPWMbxAC9U8vQb10"},
{"content":{"body":"Annex C, anyone? 😇","msgtype":"m.text"},"ts":1679510538208,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$tZU09xoZ2yA2GRTTeMeDRL6wjTnwd8VhIQBEScHK5YI"},
{"content":{"body":"it is fine if committee wants the lesson V8 to learn from this is \"conformance as a proxy measure for shipping reality becomes even more tenuous\"","msgtype":"m.text"},"ts":1679510541663,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AVaqjCuTUHy7BS44YgVv6DuTxsHNlIc7NNs5N0l4GGo"},
{"content":{"body":"but that will weak TC39's pull in the future, to be clear","msgtype":"m.text"},"ts":1679510553028,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CkzpyqbRIyNQM_NvDjR5VDqpAd-gtvollQLWX06tVvE"},
{"content":{"body":"i'm confused. why would supporting `assert` syntax make you noncompliant?","format":"org.matrix.custom.html","formatted_body":"i'm confused. why would supporting <code>assert</code> syntax make you noncompliant?","msgtype":"m.text"},"ts":1679510588941,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$T8RDZ1vEKd4Ql6XvZaiijBV8wMUny4fP4XqC0tDrv8k"},
{"content":{"body":" * but that will weaken TC39's pull in the future, to be clear","m.new_content":{"body":"but that will weaken TC39's pull in the future, to be clear","msgtype":"m.text"},"m.relates_to":{"event_id":"$CkzpyqbRIyNQM_NvDjR5VDqpAd-gtvollQLWX06tVvE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679510599359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4r0OA2EtBrCvuEVFv3UxOkAM7O9BkvPTiKpMv9tgHok"},
{"content":{"body":"the spec already explicitly allows implementations to go nuts with their own syntax","msgtype":"m.text"},"ts":1679510608412,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IrFODEb00MX8Fv91FiH6i4zD1CF_ISyJNW9stZWamy8"},
{"content":{"body":"speaking of, I still need to specify the `if (false) f() = 0` syntax...","format":"org.matrix.custom.html","formatted_body":"speaking of, I still need to specify the <code>if (false) f() = 0</code> syntax...","msgtype":"m.text"},"ts":1679510613770,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5IgVcgMP3F-7yNSRpMx7rNHEy7HMScml38gAyTJGcBI"},
{"content":{"body":"ljharb: I do not think we want implementations to think of themselves as being allowed to go nuts with their own syntax, regardless of whether the spec says they are allowed to","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I do not think we want implementations to think of themselves as being allowed to go nuts with their own syntax, regardless of whether the spec says they are allowed to","msgtype":"m.text"},"ts":1679510654576,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nzdfGs0ceWGTjiDjCj1PTn5oyfGxmi9et9Q8rkyDFcQ"},
{"content":{"body":"i very much wouldn't want to make important implementations noncompliant, but omitting `assert` from the spec doesn't seem like it would cause that.","format":"org.matrix.custom.html","formatted_body":"i very much wouldn't want to make important implementations noncompliant, but omitting <code>assert</code> from the spec doesn't seem like it would cause that.","msgtype":"m.text"},"ts":1679510654969,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VuHvVKUaoD9uVgfX9Kn--ZgdLA599AcwIJUUd-n_qFc"},
{"content":{"body":"> <@bakkot:matrix.org> ljharb: I do not think we want implementations to think of themselves as being allowed to go nuts with their own syntax, regardless of whether the spec says they are allowed to\n\nvery true","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nzdfGs0ceWGTjiDjCj1PTn5oyfGxmi9et9Q8rkyDFcQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I do not think we want implementations to think of themselves as being allowed to go nuts with their own syntax, regardless of whether the spec says they are allowed to</blockquote></mx-reply>very true","m.relates_to":{"m.in_reply_to":{"event_id":"$nzdfGs0ceWGTjiDjCj1PTn5oyfGxmi9et9Q8rkyDFcQ"}},"msgtype":"m.text"},"ts":1679510661839,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yavdz1grLkkgAN9_TfEBkp6oc9bsQp-LvEqaYr0qURQ"},
{"content":{"body":"it is no skin off my back to start going nuts with syntax","msgtype":"m.text"},"ts":1679510670124,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kuY--bqYIWTDarydlaQTf9-_SdOrsZJIiuBCKaDf2KA"},
{"content":{"body":"> <@shuyuguo:matrix.org> it is fine if committee wants the lesson V8 to learn from this is \"conformance as a proxy measure for shipping reality becomes even more tenuous\"\n\nI don't think V8 should take that lesson; it was clear that the committee largely *does* see the spec reflecting reality as a goal.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AVaqjCuTUHy7BS44YgVv6DuTxsHNlIc7NNs5N0l4GGo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>it is fine if committee wants the lesson V8 to learn from this is &quot;conformance as a proxy measure for shipping reality becomes even more tenuous&quot;</blockquote></mx-reply>I don't think V8 should take that lesson; it was clear that the committee largely <em>does</em> see the spec reflecting reality as a goal.","m.relates_to":{"m.in_reply_to":{"event_id":"$AVaqjCuTUHy7BS44YgVv6DuTxsHNlIc7NNs5N0l4GGo"}},"msgtype":"m.text"},"ts":1679510670360,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$K1ou2yM95WAziPqR1bRj2Bh1IYTsKQtJ1XIQ-OIP4I4"},
{"content":{"body":"but more narrowly, because the spec needs to say `assert` has the same semantics as `with`","format":"org.matrix.custom.html","formatted_body":"but more narrowly, because the spec needs to say <code>assert</code> has the same semantics as <code>with</code>","msgtype":"m.text"},"ts":1679510698417,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$a4_M64zqdSJUlXWk-xtQmsVc-II3ErtFAoSFaaYd85c"},
{"content":{"body":"i see that as a goal as well. but it has a purpose beyond that in that it guides new implementations","msgtype":"m.text"},"ts":1679510699972,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nPa_3SMQGghtjGK4rzla-tDc5dS0gOEFaYtnIGVnzm8"},
{"content":{"body":"that's what the \"legacy\" box is for","msgtype":"m.text"},"ts":1679510711480,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0DpZVJQ2v6iOe7rbh9OZM23nGsuGhj5umLkUH3yIuGc"},
{"content":{"body":"that is literally why that box exists","msgtype":"m.text"},"ts":1679510718118,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GyRo_ldR5nSdgW6ecjNGKdlV-OXCcDmULO2RJri7YvI"},
{"content":{"body":"sure. but that's for stuff that all browsers already implement. this one's just chrome","msgtype":"m.text"},"ts":1679510736331,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VkLFmocQVeEfn2biQYKm3rYyrVA_6b6BeYE2lpmcfHk"},
{"content":{"body":"`Legacy` is actually \"must implement\"","format":"org.matrix.custom.html","formatted_body":"<code>Legacy</code> is actually &quot;must implement&quot;","msgtype":"m.text"},"ts":1679510773338,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$67VqAbHa7aUuOUSmW9k9dVneO62zwhzCkdNQ7EpFHWU"},
{"content":{"body":"sorry, normative optional + legacy","msgtype":"m.text"},"ts":1679510784840,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0o8UHtqq04DTXE_lzcrwPY7qRw9K1f_y_n0D0Iej63w"},
{"content":{"body":"but `Legacy` plus `Normative Optional` does the thing yes","format":"org.matrix.custom.html","formatted_body":"but <code>Legacy</code> plus <code>Normative Optional</code> does the thing yes","msgtype":"m.text"},"ts":1679510787848,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VdNvImD5PVE7makJi1AVhKmRV8Sm4lQvHJ9EvcRNdhs"},
{"content":{"body":"maybe the solution is to invent a new category that's more strongly worded and implies both legacy and normative optional, i dunno","msgtype":"m.text"},"ts":1679510803580,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Xm0-7P0TzQLdAL1gNwEKT4IMclW5vyvPqOH-WjY38rc"},
{"content":{"body":"can we try? maybe the migration isn't that hard considering code using import assertions are new and highly likely in maintaining","msgtype":"m.text"},"ts":1679510806449,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nu2CjLgSQj1k6LLCpGkIwM-__c5ymcvRwSF8W2bw96c"},
{"content":{"body":"odd sidebar, since I'm curious: is it a possibility to eventually move `Date` to this \"legacy\" section?","format":"org.matrix.custom.html","formatted_body":"odd sidebar, since I'm curious: is it a possibility to eventually move <code>Date</code> to this &quot;legacy&quot; section?","msgtype":"m.text"},"ts":1679510812371,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE"},
{"content":{"body":" but there is a distinct difference to me between the string HTML methods, and the `assert` syntax","format":"org.matrix.custom.html","formatted_body":"but there is a distinct difference to me between the string HTML methods, and the <code>assert</code> syntax","msgtype":"m.text"},"ts":1679510821749,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$58uO0oJGxZv-jZIo-1SAGLzrpLzp0a6IXUGq9HzYQok"},
{"content":{"body":"> <@usharma:igalia.com> odd sidebar, since I'm curious: is it a possibility to eventually move `Date` to this \"legacy\" section?\n\nno? this is a confusing tangent","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>odd sidebar, since I'm curious: is it a possibility to eventually move <code>Date</code> to this \"legacy\" section?</blockquote></mx-reply>no? this is a confusing tangent","m.relates_to":{"m.in_reply_to":{"event_id":"$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE"}},"msgtype":"m.text"},"ts":1679510826639,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$saxClaOFcQx6_rAXf70KC9PIrHhNG2F8Pz1r50Uv-cg"},
{"content":{"body":"yes, sorry","msgtype":"m.text"},"ts":1679510837658,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rd5IroQ27VGAjsoB2QonmbgaCyhqozi5dZw75PkFTKk"},
{"content":{"body":"seems very unlikely","m.relates_to":{"event_id":"$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE","is_falling_back":true,"m.in_reply_to":{"event_id":"$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679510838247,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$56KHP9uAgjqO3_OKWGAlmVadhs8eSFT0qqUYd_aOIsk"},
{"content":{"body":"Legacy + Normative Optional + Pls Do Not Ship If At All Possible","msgtype":"m.text"},"ts":1679510839069,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$aPXkkJf6655RMeBoWI8YKuYwTE3vhDoOvU7LMeKLnwo"},
{"content":{"body":"you can mark anything as deprecated if you want, but just don't remove it","m.relates_to":{"event_id":"$AuQAY0Ys9kfAHfeBzG7Ua9QOU6wXJNKkPKLEGAYKQQE","is_falling_back":true,"m.in_reply_to":{"event_id":"$56KHP9uAgjqO3_OKWGAlmVadhs8eSFT0qqUYd_aOIsk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679510871606,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$HhyTMsJx6jKExlagVR6wNxtsVRibgio1Lldq0l-cxz0"},
{"content":{"body":"wonder the real world use rate in Web of Import assertions","msgtype":"m.text"},"ts":1679510979033,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YJhyCJmWgFr_LkI83ipfdgAgVO-7BrpkCSoA_8D6S90"},
{"content":{"body":"is there any data of it?","msgtype":"m.text"},"ts":1679510984665,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$HsUXsvmjx5JqH2RAdDgMzf4lHV0BoO0Nu2z7e8JOOus"},
{"content":{"body":"> <@jackworks:matrix.org> wonder the real world use rate in Web of Import assertions\n\nI think yulia might have some data there?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YJhyCJmWgFr_LkI83ipfdgAgVO-7BrpkCSoA_8D6S90?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>wonder the real world use rate in Web of Import assertions</blockquote></mx-reply>I think <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> might have some data there?","m.relates_to":{"m.in_reply_to":{"event_id":"$YJhyCJmWgFr_LkI83ipfdgAgVO-7BrpkCSoA_8D6S90"}},"msgtype":"m.text"},"ts":1679510998226,"senderName":"Jesse (TC39)","senderId":"@jesse:igalia.com","id":"$vDBU6w_HS6XtXVJJg7JrRKGWpSpqq6SVCSzV8X_dU-U"},
{"content":{"body":"> <@jackworks:matrix.org> wonder the real world use rate in Web of Import assertions\n\nI believe it's very low","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YJhyCJmWgFr_LkI83ipfdgAgVO-7BrpkCSoA_8D6S90?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>wonder the real world use rate in Web of Import assertions</blockquote></mx-reply>I believe it's very low","m.relates_to":{"m.in_reply_to":{"event_id":"$YJhyCJmWgFr_LkI83ipfdgAgVO-7BrpkCSoA_8D6S90"}},"msgtype":"m.text"},"ts":1679510999958,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$oK5lz8zlKqX8glCNcgkJTASKUX0YjadFPlqz3f3OjHc"},
{"content":{"body":"chrome would be the one with the counters","msgtype":"m.text"},"ts":1679511016020,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$XN9M3YMXG6gV5_bwaOzfu0fYDXN1KZiY9Ph3w1Ksr8w"},
{"content":{"body":"it has to be very, very low","msgtype":"m.text"},"ts":1679511018601,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$QZeG-SxHfeafyEeXWCO5XsizFnF8-Vxon0a3H6mEMs8"},
{"content":{"body":"> <@jesse:igalia.com> I think yulia might have some data there?\n\nbut firefox does not ship it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vDBU6w_HS6XtXVJJg7JrRKGWpSpqq6SVCSzV8X_dU-U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jesse:igalia.com\">@jesse:igalia.com</a><br>I think <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> might have some data there?</blockquote></mx-reply>but firefox does not ship it?","m.relates_to":{"m.in_reply_to":{"event_id":"$vDBU6w_HS6XtXVJJg7JrRKGWpSpqq6SVCSzV8X_dU-U"}},"msgtype":"m.text"},"ts":1679511030615,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oA0OZPrPijp9BRhDm6EhPDwRuPdL5fVjlY5wnGXXHkc"},
{"content":{"body":"at the moment, no","msgtype":"m.text"},"ts":1679511045517,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$7GzfsWCt0IgPQKuRP3O-zGdmZyuqASfOtBxpP6e_gdw"},
{"content":{"body":"we have an implementation but it is unshipped","msgtype":"m.text"},"ts":1679511050431,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$HS4eRiixFWJpCaWDGonzr-ML1RP8ckaTTR7U9cx7vso"},
{"content":{"body":"safari likewise has it behind a flag","msgtype":"m.text"},"ts":1679511061888,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$fqvNTB_rH63xVtgMjRXFXxkzqUSy7cQT3eVKDQdPqqQ"},
{"content":{"body":"it would be a really unfortunate outcome imo if anyone newly ships it unflagged (prior to time + evidence that it's unshakeable web reality)","msgtype":"m.text"},"ts":1679511078096,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$21Gb7bRYO44mHd3OeiU88cTytGXgXY5rMh_EFwOEyTc"},
{"content":{"body":"i believe assert is most used by tooling, Justin Ridgewell would have the context here","format":"org.matrix.custom.html","formatted_body":"i believe assert is most used by tooling, <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> would have the context here","msgtype":"m.text"},"ts":1679511094393,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ltwuakvALLUinsWEqRYexLZXOu2u4VdU9n-HDnr6-fY"},
{"content":{"body":"and given how new this feature is, it seems entirely achievable for everyone using `assert` to migrate to `with`","format":"org.matrix.custom.html","formatted_body":"and given how new this feature is, it seems entirely achievable for everyone using <code>assert</code> to migrate to <code>with</code>","msgtype":"m.text"},"ts":1679511098045,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BNjBMRz8Nf2fNGlcSWENbUEIAAYUViD6Qo54pdTBRso"},
{"content":{"body":"eventually","msgtype":"m.text"},"ts":1679511121145,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VHSJentr2tUycWZtx9LaL0M9X0pO_GzJjo_d770ViGs"},
{"content":{"body":"sure, in the fullness of time. but i think on a reasonably short timescale","msgtype":"m.text"},"ts":1679511130899,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oI0dcTxO2EeAmYYrkoiX6HRL7pSFzqN0rUNXQtBn6aI"},
{"content":{"body":"if every browser, and node/deno, shipped `with` today, i'd expect `assert` to be gone in like a year","format":"org.matrix.custom.html","formatted_body":"if every browser, and node/deno, shipped <code>with</code> today, i'd expect <code>assert</code> to be gone in like a year","msgtype":"m.text"},"ts":1679511158878,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zoX1c7OYfWqXcQeSGBYWZ6YOrFbuoElHvmwhVu4566s"},
{"content":{"body":"the most likely usage is in v8-only environments: Deno, Node, Electron, etc... but those are versioned and also have breaking changes somewhat regularly","msgtype":"m.text"},"ts":1679511160354,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$ngCYfI59rdZbXJQbcsZm18zLKJ3TKR9GBcjRmf5MjnA"},
{"content":{"body":" * if every browser, and node/deno, shipped `with` today, i'd expect `assert` to be largely gone in like a year","format":"org.matrix.custom.html","formatted_body":" * if every browser, and node/deno, shipped <code>with</code> today, i'd expect <code>assert</code> to be largely gone in like a year","m.new_content":{"body":"if every browser, and node/deno, shipped `with` today, i'd expect `assert` to be largely gone in like a year","format":"org.matrix.custom.html","formatted_body":"if every browser, and node/deno, shipped <code>with</code> today, i'd expect <code>assert</code> to be largely gone in like a year","msgtype":"m.text"},"m.relates_to":{"event_id":"$zoX1c7OYfWqXcQeSGBYWZ6YOrFbuoElHvmwhVu4566s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679511162218,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nOg1ac8BmbWoDlErs4hvvk4GPHyvmfWuaU3bXWYic2g"},
{"content":{"body":"(IIRC some linux let apps use shared electron so maybe for electron it's not so versioned)","msgtype":"m.text"},"ts":1679511242172,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5H5-OhWqsH4Ghh5gwREhsgkA0bFZ5tvB1-GC_CMDYDk"},
{"content":{"body":"v8 use counters would need to differentiate web from server (if any server env even contributes to use counters, which I doubt?)","msgtype":"m.text"},"ts":1679511246850,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$hLrGxY6QfDM1oNuKkVCAUgSBhuT1zLNzCVTtSIVgNH0"},
{"content":{"body":"p sure use counters are in chrome, not v8?","m.relates_to":{"event_id":"$hLrGxY6QfDM1oNuKkVCAUgSBhuT1zLNzCVTtSIVgNH0","is_falling_back":true,"m.in_reply_to":{"event_id":"$hLrGxY6QfDM1oNuKkVCAUgSBhuT1zLNzCVTtSIVgNH0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679511261411,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RTvNGUMrtVcRF7cgik13NkUL0j7iKn2Yd010EgsX4wI"},
{"content":{"body":"ah, counter would be web-only","msgtype":"m.text"},"ts":1679511264644,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$S47NpJnTKYrEgt-MpTLhcERyinLj6S0-dss3xCl-AbQ"},
{"content":{"body":"yeah that use counter infra is chrome only i think","msgtype":"m.text"},"ts":1679511283872,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KHtYIm9O66CYk19wXKBoxMaVbLYCeA04wSVcx9V5st0"},
{"content":{"body":"node's ability to ever ship breaking changes is great, I love that; I also appreciate that it happens quite rarely these days","msgtype":"m.text"},"ts":1679511301558,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4-5QP-GeEPujbOFswTTZquWIcvBPst8M6j0RsXfYsF8"},
{"content":{"body":"does Electron has use counter?  🧐","msgtype":"m.text"},"ts":1679511307219,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$N-287EPRh9osOL0MyhTIMPqarHm0fDxL0i0lH8x1j8A"},
{"content":{"body":"I have not had an issue updating a major version of node since 10->12","msgtype":"m.text"},"ts":1679511321800,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$crC6D4Z3gca8nAXQVkvkHNI287HAuHzj99Y4ASPw1SE"},
{"content":{"body":"I don't know... seems like some sort of metrics would have been useful from server / desktop environments, but I admit I don't know of any that do","m.relates_to":{"event_id":"$hLrGxY6QfDM1oNuKkVCAUgSBhuT1zLNzCVTtSIVgNH0","is_falling_back":true,"m.in_reply_to":{"event_id":"$RTvNGUMrtVcRF7cgik13NkUL0j7iKn2Yd010EgsX4wI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679511325148,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$YuKlobPEbDdannKsBka8D1A-4D1vWhyUnXqRYQh69XY"},
{"content":{"body":"this is just the consequence of our staging and shipping model","msgtype":"m.text"},"ts":1679511346831,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7vwNHXjOKwFpHdoHBhLG8zc81y1lojWE0n3X310hDtU"},
{"content":{"body":"you can't have your cake and eat it too","msgtype":"m.text"},"ts":1679511350459,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fOMPG5nh22E_rpr0zqwe4toHDZy9yZekhe_Vq-3RR5g"},
{"content":{"body":"i am not interested in spec purity","msgtype":"m.text"},"ts":1679511364567,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9ZzcRjsMiQk8VAheS55EioLPjNaTljd-FJOrvVx94qo"},
{"content":{"body":"> <@bakkot:matrix.org> node's ability to ever ship breaking changes is great, I love that; I also appreciate that it happens quite rarely these days\n\n(Node 18 new SSL provider breaks Webpack 4)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4-5QP-GeEPujbOFswTTZquWIcvBPst8M6j0RsXfYsF8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>node&#39;s ability to ever ship breaking changes is great, I love that; I also appreciate that it happens quite rarely these days</blockquote></mx-reply>(Node 18 new SSL provider breaks Webpack 4)","m.relates_to":{"m.in_reply_to":{"event_id":"$4-5QP-GeEPujbOFswTTZquWIcvBPst8M6j0RsXfYsF8"}},"msgtype":"m.text"},"ts":1679511374854,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$PlI_tZgA1WEKtTDAAZfJyzr1xLDDjVHuxzFa6VaDTzI"},
{"content":{"body":"fortunately webpack is usually a direct dep rather than a transitive dep, so that's not too bad","msgtype":"m.text"},"ts":1679511412314,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G2l0R8pUcNIcTI8mfY2sE4eqoYRPTcPIweKzEOPvALs"},
{"content":{"body":"if we're interested in spec purity, we won't have IsHTMLDDA today","msgtype":"m.text"},"ts":1679511488700,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$LBeJ4ayeuF1XuwZ9LzTLew-IE59UXw46D-85KADoU_o"},
{"content":{"body":"*un*fortunately tho, lots of people can't upgrade to webpack 5 because of its node core module polyfilling change, so unless a fix is backported to v4 lots of people will be stuck","format":"org.matrix.custom.html","formatted_body":"<em>un</em>fortunately tho, lots of people can't upgrade to webpack 5 because of its node core module polyfilling change, so unless a fix is backported to v4 lots of people will be stuck","m.relates_to":{"event_id":"$G2l0R8pUcNIcTI8mfY2sE4eqoYRPTcPIweKzEOPvALs","is_falling_back":true,"m.in_reply_to":{"event_id":"$G2l0R8pUcNIcTI8mfY2sE4eqoYRPTcPIweKzEOPvALs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679511512179,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8ZcdQtfqXREyGEPkfOSWqXB7MClDMMn60hST2nDrZQI"},
{"content":{"body":"ljharb: I would prefer the committee not give too much editorial direction here. I want to retain discretion to best communicate what we understand the committee's opinion to be here.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I would prefer the committee not give too much editorial direction here. I want to retain discretion to best communicate what we understand the committee's opinion to be here.","msgtype":"m.text"},"ts":1679511575884,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zI_WZ96zpBjtB89gxnrPcghyMlsq4WQZfPOBTJjRV0w"},
{"content":{"body":"that one is easy to migrate. the hard part is webpack plugins and loaders","m.relates_to":{"event_id":"$G2l0R8pUcNIcTI8mfY2sE4eqoYRPTcPIweKzEOPvALs","is_falling_back":true,"m.in_reply_to":{"event_id":"$8ZcdQtfqXREyGEPkfOSWqXB7MClDMMn60hST2nDrZQI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679511590055,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mqE_hlrqH94XeGK7OSo22QlF_t4ElKxaXyvtcNWGe6c"},
{"content":{"body":"this sounds like \"deprecated\" to me","msgtype":"m.text"},"ts":1679511603470,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7w-Vz7dpt8W8r_Ey1fOFbMS5CbC4IcuEH3Kl_8l4otE"},
{"content":{"body":"also sounds like deprecated to me","msgtype":"m.text"},"ts":1679511613790,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ri43JY-CUdiD_bXfmCnIhSiUALv9upReJ1fYg1tKZ6o"},
{"content":{"body":"> <@michaelficarra:matrix.org> ljharb: I would prefer the committee not give too much editorial direction here. I want to retain discretion to best communicate what we understand the committee's opinion to be here.\n\nyeah i'm not trying to dictate editorial wording, just the conveyed intent","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zI_WZ96zpBjtB89gxnrPcghyMlsq4WQZfPOBTJjRV0w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I would prefer the committee not give too much editorial direction here. I want to retain discretion to best communicate what we understand the committee's opinion to be here.</blockquote></mx-reply>yeah i'm not trying to dictate editorial wording, just the conveyed intent","m.relates_to":{"m.in_reply_to":{"event_id":"$zI_WZ96zpBjtB89gxnrPcghyMlsq4WQZfPOBTJjRV0w"}},"msgtype":"m.text"},"ts":1679511654535,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7T2L2frQfeVPGbt_qy-5ST9KefRmJPk8HfBdZC6IziE"},
{"content":{"body":"+1 to Jordan's comments about the spec being explicit about the hope to remove it (though I'd note that normative-optional advocates like to think the same thing about those sections)","msgtype":"m.text"},"ts":1679511662260,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wkrLuwKEIsXl7Jw-1HoP9sDHz6BOrbvZQXGkwLVnACY"},
{"content":{"body":"Annex B is evidence that we don't have spec purity.  I'd rather that we don't decrease purity.","msgtype":"m.text"},"ts":1679511701512,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$6nikNoIAeCGqO3mHDpEP_SE17f8Rl1rNsfrLbpJcRng"},
{"content":{"body":"that's fair, but the bar for me is \"is this true of the world\", not \"is this a wish we have of the world\"","msgtype":"m.text"},"ts":1679511736489,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fDItk95GcgBODG73QSUSZFDmefkD2FJU_fLmr6rNP-k"},
{"content":{"body":"and as i said we can find that out empirically","msgtype":"m.text"},"ts":1679511742833,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C-8aOepObvjNKo0JwlpanHIWrmxTRrN6-eE6-nFIRpk"},
{"content":{"body":" * that's fair, but the bar for me for when it's acceptable to decrease purity is \"is this true of the world\", not \"is this a wish we have of the world\"","m.new_content":{"body":"that's fair, but the bar for me for when it's acceptable to decrease purity is \"is this true of the world\", not \"is this a wish we have of the world\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$fDItk95GcgBODG73QSUSZFDmefkD2FJU_fLmr6rNP-k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679511765376,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$udOi7--s2NuqvSFVJ61gn1QTX_mznDqrEWoLlI5g7Mc"},
{"content":{"body":"I am real curious what the real-world in-browser usage will turn out to be","msgtype":"m.text"},"ts":1679511801458,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Nv7VHtr8_G0xB4dC7Q9yJv5YxI0aek5kzh3RfVWADqc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1679511831014,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FqfckqbMJ_IFRGffsJbEDLqOWO9R6_RsVeyzfj2xaDU"},
{"content":{"body":"> <@msaboff:matrix.org> Annex B is evidence that we don't have spec purity.  I'd rather that we don't decrease purity.\n\nmsaboff: What do you think about the point Shu made of, this committee will have more influence if we are willing to be impure in this way?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6nikNoIAeCGqO3mHDpEP_SE17f8Rl1rNsfrLbpJcRng?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br>Annex B is evidence that we don&#39;t have spec purity.  I&#39;d rather that we don&#39;t decrease purity.</blockquote></mx-reply><a href=\"https://matrix.to/#/@msaboff:matrix.org\">msaboff</a>: What do you think about the point Shu made of, this committee will have more influence if we are willing to be impure in this way?","m.relates_to":{"m.in_reply_to":{"event_id":"$6nikNoIAeCGqO3mHDpEP_SE17f8Rl1rNsfrLbpJcRng"}},"msgtype":"m.text"},"ts":1679511831601,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Dz-J3GcpBGBrCDs3s8jh3ZTCuF6XRxosniWPpZdl_Aw"},
{"content":{"body":"corollary: be careful how many times you ask people to unship","msgtype":"m.text"},"ts":1679511866548,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vTJbxQi-rKvzfqf9JeaEcOCOAk3FlqWdZMWFbjGoLNE"},
{"content":{"body":"For those interested, I have two draft PRs up that illustrate the potential cover grammars for await using and async using:\n\n- await using: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15\n- async using: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16","format":"org.matrix.custom.html","formatted_body":"<p>For those interested, I have two draft PRs up that illustrate the potential cover grammars for await using and async using:</p>\n<ul>\n<li>await using: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15</li>\n<li>async using: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16</li>\n</ul>\n","msgtype":"m.text"},"ts":1679515394138,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Ziys-S15IkISLv9ug1Y8ibGlle_UCUwYdRG5v6G1E2w"},
{"content":{"body":"Rendered version of #15: https://tc39.es/proposal-async-explicit-resource-management/pr/15\nRendered version of #16: https://tc39.es/proposal-async-explicit-resource-management/pr/16","msgtype":"m.text"},"ts":1679515461577,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8Y7l3Pd_kKRQGLi-hHyjhimb7jD4CdEmDccLPt2F7TM"},
{"content":{"body":" * Rendered version of #15 (`await using`): https://tc39.es/proposal-async-explicit-resource-management/pr/15\nRendered version of #16 (`async using`): https://tc39.es/proposal-async-explicit-resource-management/pr/16","format":"org.matrix.custom.html","formatted_body":" * Rendered version of #15 (<code>await using</code>): https://tc39.es/proposal-async-explicit-resource-management/pr/15<br>Rendered version of #16 (<code>async using</code>): https://tc39.es/proposal-async-explicit-resource-management/pr/16","m.new_content":{"body":"Rendered version of #15 (`await using`): https://tc39.es/proposal-async-explicit-resource-management/pr/15\nRendered version of #16 (`async using`): https://tc39.es/proposal-async-explicit-resource-management/pr/16","format":"org.matrix.custom.html","formatted_body":"Rendered version of #15 (<code>await using</code>): https://tc39.es/proposal-async-explicit-resource-management/pr/15<br>Rendered version of #16 (<code>async using</code>): https://tc39.es/proposal-async-explicit-resource-management/pr/16","msgtype":"m.text"},"m.relates_to":{"event_id":"$8Y7l3Pd_kKRQGLi-hHyjhimb7jD4CdEmDccLPt2F7TM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679515476165,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$xpLmrHc-lkVFEA-A2Xw0nQFIwLB_rEFKTwrOIoHJms8"},
{"content":{"body":"Apologies, I need to step out for a few minutes. I will be back shortly. ","msgtype":"m.text"},"ts":1679515589983,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$sMekzk6kRiVdc_DMcH9Vqh5_JvG3eUDiLZwD0RWkO3s"},
{"content":{"body":"ljharb: Where would I find the draft standard for patent opt out review?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Where would I find the draft standard for patent opt out review?","msgtype":"m.text"},"ts":1679515612342,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$xop2tMTRgZmLNzkKzOqSXhmrm3P2zqHM6IoJaq8gyag"},
{"content":{"body":"Draft notes for the conclusion for import attributes, please edit the notes if you want to refine anything:\n\n#### Summary\nImport attributes are the path forward for the standard, having re-achieved Stage 3.\nThe keyword is `with`\nAs previously, there is an options bag following it\nThe options can form part of the interpretation of the module and \"cache key\"\nUnknown attributes in the import statement cause an error.\nAlthough a couple delegates would prefer sticking with the keyword `assert`, the majority preferred switching to the long-term optimal solution of being more semantically well-aligned using `with`\nSignificant debate focused around how to communicate the deprecation.\n\n#### Conclusion\n`assert` will remain in the specification, marked somehow as \"deprecated\", with the intention to remove it eventually, though with an anticipated timespan of at least multiple years before final removal.\nJS environments which currently ship `assert` are *not* encouraged to remove it, but environments which do not yet ship `assert` are discouraged from shipping it.\nChrome will gather data on usage of `assert` on the web, which can inform the deprecation path.\nConditional consensus for Stage 3 on this proposal, with the conditions:\nReviews are still needed from the reviewers who volunteered – JRL and JHD, as well as the editors\nThe wording for normative optional+legacy needs to be updated to something stronger, probably \"deprecated\", and explaining the goal to remove it from the specification.\n","format":"org.matrix.custom.html","formatted_body":"<p>Draft notes for the conclusion for import attributes, please edit the notes if you want to refine anything:</p>\n<h4>Summary</h4>\n<p>Import attributes are the path forward for the standard, having re-achieved Stage 3.<br>The keyword is <code>with</code><br>As previously, there is an options bag following it<br>The options can form part of the interpretation of the module and &quot;cache key&quot;<br>Unknown attributes in the import statement cause an error.<br>Although a couple delegates would prefer sticking with the keyword <code>assert</code>, the majority preferred switching to the long-term optimal solution of being more semantically well-aligned using <code>with</code><br>Significant debate focused around how to communicate the deprecation.</p>\n<h4>Conclusion</h4>\n<p><code>assert</code> will remain in the specification, marked somehow as &quot;deprecated&quot;, with the intention to remove it eventually, though with an anticipated timespan of at least multiple years before final removal.<br>JS environments which currently ship <code>assert</code> are <em>not</em> encouraged to remove it, but environments which do not yet ship <code>assert</code> are discouraged from shipping it.<br>Chrome will gather data on usage of <code>assert</code> on the web, which can inform the deprecation path.<br>Conditional consensus for Stage 3 on this proposal, with the conditions:<br>Reviews are still needed from the reviewers who volunteered – JRL and JHD, as well as the editors<br>The wording for normative optional+legacy needs to be updated to something stronger, probably &quot;deprecated&quot;, and explaining the goal to remove it from the specification.</p>\n","msgtype":"m.text"},"ts":1679515649224,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$050qeFdPoC0ZcSV5WiE5DLYkiJEYZwyR3zO5N1EQcYs"},
{"content":{"body":"> <@msaboff:matrix.org> ljharb: Where would I find the draft standard for patent opt out review?\n\nit hasn't been produced/cut yet, so for now you can look at https://tc39.es/ecma262, but i'll create a github release on the spec repo, and a Reflector issue, and i'll post it in here, when it's prepared","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xop2tMTRgZmLNzkKzOqSXhmrm3P2zqHM6IoJaq8gyag?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Where would I find the draft standard for patent opt out review?</blockquote></mx-reply>it hasn't been produced/cut yet, so for now you can look at https://tc39.es/ecma262, but i'll create a github release on the spec repo, and a Reflector issue, and i'll post it in here, when it's prepared","m.relates_to":{"m.in_reply_to":{"event_id":"$xop2tMTRgZmLNzkKzOqSXhmrm3P2zqHM6IoJaq8gyag"}},"msgtype":"m.text"},"ts":1679515706040,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VVAl-ca14o90e9L7sLkkvg1sRZbj3bCwzvboFMzmoz4"},
{"content":{"body":"yeah, i think tip-of-tree right now will get tagged","msgtype":"m.text"},"ts":1679515729994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t2gLhp49-GQ8s41jzny63xqC48Kv7RBpVYPx6N1GDe0"},
{"content":{"body":"> <@shuyuguo:matrix.org> yeah, i think tip-of-tree right now will get tagged\n\nCan you or another editor email me when it is tagged?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$t2gLhp49-GQ8s41jzny63xqC48Kv7RBpVYPx6N1GDe0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>yeah, i think tip-of-tree right now will get tagged</blockquote></mx-reply>Can you or another editor email me when it is tagged?","m.relates_to":{"m.in_reply_to":{"event_id":"$t2gLhp49-GQ8s41jzny63xqC48Kv7RBpVYPx6N1GDe0"}},"msgtype":"m.text"},"ts":1679515777218,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$osLQ8TI3ulkjXo6uiKB2eJmV1XsHEpc1SqDjHBevsyg"},
{"content":{"body":"sure, let me make a reminder","msgtype":"m.text"},"ts":1679515820827,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TOra4zGvj7MJd5xoQXw7umDwb4xvOv4jXJ_N_lprK0M"},
{"content":{"body":"I would phrase that as: the draft is final, is currently at https://tc39.es/ecma262, but will soon be available at the more stable URL https://tc39.es/ecma262/2023/","msgtype":"m.text"},"ts":1679515840942,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XF6S1p8Ewt9wX3moI7lzRb8VBkugaRX56W6mi44slhI"},
{"content":{"body":"Michael Ficarra: When do you think the stable URL will be available?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: When do you think the stable URL will be available?","msgtype":"m.text"},"ts":1679515949085,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$uSAideS0uJqVTsPS5ajLc1VY0nIqp-E84COoGxsppFw"},
{"content":{"body":"I actually did not know until looking at this issue that python's `range` does not allow floats, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","format":"org.matrix.custom.html","formatted_body":"I actually did not know until looking at this issue that python's <code>range</code> does not allow floats, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","msgtype":"m.text"},"ts":1679515968389,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$R_eJ4AloeHIVEn9P_B9dhPigJvAtJC3CSaA9LQl2IBY"},
{"content":{"body":" * I actually did not know until looking at this issue that python's `range` does not allow non-integer values, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","format":"org.matrix.custom.html","formatted_body":" * I actually did not know until looking at this issue that python's <code>range</code> does not allow non-integer values, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","m.new_content":{"body":"I actually did not know until looking at this issue that python's `range` does not allow non-integer values, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","format":"org.matrix.custom.html","formatted_body":"I actually did not know until looking at this issue that python's <code>range</code> does not allow non-integer values, which I think is indicative of how rarely it comes up (at least in the kind of code I tend to write)","msgtype":"m.text"},"m.relates_to":{"event_id":"$R_eJ4AloeHIVEn9P_B9dhPigJvAtJC3CSaA9LQl2IBY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679515973191,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q7SDYvoidDTzho3W2nL4pMf8Ois-4ivlLQnEEYUv5ic"},
{"content":{"body":"were floating point use cases the champion considers compelling presented?","msgtype":"m.text"},"ts":1679516021961,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$S3DuUF25_uXAb_L_Nxoz9AK23yLH3WIxYkPpUrog_-A"},
{"content":{"body":"Seems like **integer only** makes a lot of sense.","format":"org.matrix.custom.html","formatted_body":"Seems like <strong>integer only</strong> makes a lot of sense.","msgtype":"m.text"},"ts":1679516024012,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$PGUaD7gt1J3LrEc_lew8ueakFoDB6Qj5WVZummrdAiU"},
{"content":{"body":"i am not understanding who is advocating for floats","msgtype":"m.text"},"ts":1679516039801,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$V2qzyhQIvX2fhN8g9MXbfvHYKnAGEwsjixvzS9JoWuA"},
{"content":{"body":"(tab is not here)","msgtype":"m.text"},"ts":1679516044644,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UzgF2n7l3tqFeWk232ywKqLlZ-slaUqWmUZlIhDjPNY"},
{"content":{"body":"tab advocated non-integers, hax opposed; we are here to find out what the committee as a whole things","msgtype":"m.text"},"ts":1679516078720,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$REtCyMLLNyUAvRlh5xS4_GUgYBjGFyXtx0EDy_S0FE8"},
{"content":{"body":"more people need to express opinions","msgtype":"m.text"},"ts":1679516090035,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HZTh8h7XcjP5i8fVrzkaNNO7h3khM95Kp0ofQjG8eV8"},
{"content":{"body":"but are there use cases?","msgtype":"m.text"},"ts":1679516094337,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$y_jr7BIwt_aXjHDcVEnJ5RHq_uO3ykZccaB7Nei5Umc"},
{"content":{"body":"my intuition is strongly integer only","msgtype":"m.text"},"ts":1679516098893,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fVWBUxX4vKIkXnlH4p61WyDOFNAAoHszJTcPj6q9eFg"},
{"content":{"body":"like... why are you doing 0, 0.3, 0.6, 0.9?","msgtype":"m.text"},"ts":1679516121064,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-AxcQQ9ROOw0c6NW5HedG0aRYk23SXhVZ9_RiWnd5R4"},
{"content":{"body":"For reference, Python's `range()` doesn't allow floats.","format":"org.matrix.custom.html","formatted_body":"For reference, Python's <code>range()</code> doesn't allow floats.","msgtype":"m.text"},"ts":1679516272948,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M7CfRHupBDq3FMz4sTQ9ycHLRehYmOaJ940PDXkm9mU"},
{"content":{"body":"from https://github.com/tc39/proposal-Number.range/issues/64, tab says: \"Ranges that include floating-point numbers are perfectly fine and reasonable, and people will want to do them - if we arbitrarily restrict it from this API people will just write their own and be justifiably angry at us for screwing up the API and forcing them to reinvent it themselves.\"","msgtype":"m.text"},"ts":1679516342001,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4JobRe4zzdsH1qDZ8jTASrDFr80htsNpGao6k8EVJsk"},
{"content":{"body":"but... really?","msgtype":"m.text"},"ts":1679516359780,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zSbowSkDvmbkd_NGfkHc-RUE_KUtU5SK5gavU12_14M"},
{"content":{"body":"I found the linked stackoverflow question about python's range informative: https://stackoverflow.com/questions/477486/how-do-i-use-a-decimal-step-value-for-range","msgtype":"m.text"},"ts":1679516373678,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HyPOodZOyZB2G3SLgQzLe4MZR8jY-TvHW1llFCspXsc"},
{"content":{"body":"what's your take from that SO question?","msgtype":"m.text"},"ts":1679516449109,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uWgFc5yR6L9tBKUncYxqy3ZevglbDC8UB-Z9-c27Fhw"},
{"content":{"body":"people aren't mad about it, basically","msgtype":"m.text"},"ts":1679516459101,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JXBm9v85bc5z5I7PK7jaMbQM7WJeDY4UR13KiCRG97w"},
{"content":{"body":"mine is \"if we restrict it, people will ask, and be told how to do it correctly, instead of being mad and also doing it wrong\"","msgtype":"m.text"},"ts":1679516465931,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x1nqcjM71PbWgeR4250ZPEvoB8_PJU3fjcYBU6UAofc"},
{"content":{"body":"okay i think that matches with mine","msgtype":"m.text"},"ts":1679516473393,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CZDpeVkzQzcYff04C7-AlZY-hZo0EJH5B-rih8r0iS0"},
{"content":{"body":"or like, reasonable people can give a good answer to the question that is not just \"this is a bug\"","msgtype":"m.text"},"ts":1679516475037,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YWkYqf6IweWp1b3im0wYQXfveVBXoVxBqUn-2RDffW0"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1679516479209,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UovYPmOPu_yqdl61glIyLVbS-unj5YJFO-FMw8LLfL4"},
{"content":{"body":"possibly some people are mad about it somewhere but clearly not everyone","msgtype":"m.text"},"ts":1679516487275,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$o_WIAT2OhboIaDYTnz97jrfjC9OHIEf2ql0Bp3iBQwY"},
{"content":{"body":"i don't know how you can be mad at \"hold on now, have you heard about rounding errors\"","msgtype":"m.text"},"ts":1679516508677,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rDCdb4RjBEZeFlmjXQiM6ZQrvXFQFb_-SReVNYa6mFw"},
{"content":{"body":"oh I'm mad about that, but in the way that I am mad about entropy, not the way that I am mad about idk strings being utf-16 or whatever","msgtype":"m.text"},"ts":1679516549826,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NC_piER3PbhZga_b_t3o3Y90atMON25pWFHXQ0fSoDM"},
{"content":{"body":"I bet most JS programmers don't even know what a float is, and just treat JS numbers as if they were reals","msgtype":"m.text"},"ts":1679516569320,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$QBAQWUuox2xkXux4b9KdfH7l-MHC-pVMiN4eWpXv3y0"},
{"content":{"body":"they don't want to hear about rounding errors","msgtype":"m.text"},"ts":1679516583544,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$h6cPcKIK7GNkJgLJfMpAdpZ06KE8vtJlONook_cmltA"},
{"content":{"body":"well if `range()` doesn't allow floats then they won't have to","format":"org.matrix.custom.html","formatted_body":"well if <code>range()</code> doesn't allow floats then they won't have to","msgtype":"m.text"},"ts":1679516598831,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6PHzLQNVtSvFvcURXfLjplM2jbRwqag6LcCZ9ES7SrA"},
{"content":{"body":"if they put floats in range then they will have to learn about them","msgtype":"m.text"},"ts":1679516610495,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MAA5LU7E8ixhLJzg6UBXtRHUhi6d42z4IP93vg1g5OQ"},
{"content":{"body":"I found it interesting that these \"fail\" in slightly different ways:\n```\n> for (let i = 0; i < 10; i += 1) console.log(i * 0.1)\n0\n0.1\n0.2\n0.30000000000000004\n0.4\n0.5\n0.6000000000000001\n0.7000000000000001\n0.8\n0.9\n\n> for (let i = 0; i < 1; i += 0.1) console.log(i)\n0\n0.1\n0.2\n0.30000000000000004\n0.4\n0.5\n0.6\n0.7\n0.7999999999999999\n0.8999999999999999\n0.9999999999999999\n```","format":"org.matrix.custom.html","formatted_body":"<p>I found it interesting that these &quot;fail&quot; in slightly different ways:</p>\n<pre><code>&gt; for (let i = 0; i &lt; 10; i += 1) console.log(i * 0.1)\n0\n0.1\n0.2\n0.30000000000000004\n0.4\n0.5\n0.6000000000000001\n0.7000000000000001\n0.8\n0.9\n\n&gt; for (let i = 0; i &lt; 1; i += 0.1) console.log(i)\n0\n0.1\n0.2\n0.30000000000000004\n0.4\n0.5\n0.6\n0.7\n0.7999999999999999\n0.8999999999999999\n0.9999999999999999\n</code></pre>\n","msgtype":"m.text"},"ts":1679516666086,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$EcHxvihdPupExvhz9XfVEmp5MyUO6JAIRT2Wd8Jz4BM"},
{"content":{"body":"(to be clear I'm just repeating things Hax already put in the issue, not finding things myself)","msgtype":"m.text"},"ts":1679516672305,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TqTIb6SlozJ1ej7AUxGhu4yr8OCtnv5cgsGWAFrelQ0"},
{"content":{"body":"ljharb: when we say \"disallow floats\" everyone means \"disallow non-integer numbers\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: when we say &quot;disallow floats&quot; everyone means &quot;disallow non-integer numbers&quot;","msgtype":"m.text"},"ts":1679516811887,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$H1dyPCDY5DWhP-V-Z-VFWE3i38MIOwUCN-Jk1zRslBw"},
{"content":{"body":"no one is suggesting not allowing integral floats","msgtype":"m.text"},"ts":1679516819571,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9kPBGaDhYuatu7u0trNTxjasGOrU0D868pUhg0yavKo"},
{"content":{"body":"though there is some question about whether to allow numbers above max-safe-int","msgtype":"m.text"},"ts":1679516830701,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vJ7nobAiscNB1Egr3kFAOuK9fWrxfPuG4Es6b3fAYfk"},
{"content":{"body":"yes I wish we would stop saying \"disallow floats\", it is confusing people","msgtype":"m.text"},"ts":1679516988348,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$f5Ed8zzjLTH2vxWgrIc6bYeL0ocfKrfEDijrWaaeecI"},
{"content":{"body":"to be clear, this is also how floats work in python; that's how floats work in every language. but python disallows non-integer floats in `range`, and that's fine","format":"org.matrix.custom.html","formatted_body":"to be clear, this is also how floats work in python; that's how floats work in every language. but python disallows non-integer floats in <code>range</code>, and that's fine","msgtype":"m.text"},"ts":1679517216775,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WlsHi-LWI8pfy3esrHeWGDODKnTgbUsj51Tbp_XEiHY"},
{"content":{"body":"so it clearly is a thing that a language can choose to do","msgtype":"m.text"},"ts":1679517225654,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UMm9Dr6ELyKk5UUS_K-eaib0Psle5fuytqjZ00jdI8A"},
{"content":{"body":"no the lack of use cases is specifically about range","msgtype":"m.text"},"ts":1679517290722,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cTVTseM26jj3aOHzUmHYpnh8T5fs7BrJDaWTZVYILAE"},
{"content":{"body":"not about floating point numbers","msgtype":"m.text"},"ts":1679517294152,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Fnczt8MDl4g6kbfRj1apCfsopiedU6PMkPT4gP2VNMo"},
{"content":{"body":"Willian Martins your name isn't in the delegates list for the notes — is your acronym WMS? https://github.com/tc39/notes/blob/main/delegates.txt","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@wmartins:matrix.org\">Willian Martins</a> your name isn't in the delegates list for the notes — is your acronym WMS? https://github.com/tc39/notes/blob/main/delegates.txt","msgtype":"m.text"},"ts":1679517346590,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI"},
{"content":{"body":"(also please send a PR to add yourself to that at your leisure)","msgtype":"m.text"},"ts":1679517355329,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$NM-CkzWFGD9w9ku9EI6hIu17307Rw1mW5wqrLpvKq0c"},
{"content":{"body":"consistency vs foogun prevention","msgtype":"m.text"},"ts":1679517357306,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ptlPxzZHBk65bKfWoHwStXc5AiK6_AB_7XOXhvp3AYQ"},
{"content":{"body":"🥲","msgtype":"m.text"},"ts":1679517366378,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$n6v0b-wdH-MeRWOB-wR9LenDUjlU9QOeN1dQqxc2X-E"},
{"content":{"body":"yes","m.relates_to":{"event_id":"$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI","is_falling_back":true,"m.in_reply_to":{"event_id":"$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517374103,"senderName":"Willian Martins","senderId":"@wmartins:matrix.org","id":"$35VkAt_zDAyMC9oO0mV04-b72nGvh6nGqs_GI3A8WE8"},
{"content":{"body":"see also, the `this` argument on array methods","format":"org.matrix.custom.html","formatted_body":"see also, the <code>this</code> argument on array methods","msgtype":"m.text"},"ts":1679517414276,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m_Zq57_iOGeZVvnE9nBrPPYHLt5uySwWBLMVt3tHFdo"},
{"content":{"body":"I see their name in the notes","m.relates_to":{"event_id":"$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI","is_falling_back":true,"m.in_reply_to":{"event_id":"$35VkAt_zDAyMC9oO0mV04-b72nGvh6nGqs_GI3A8WE8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517460805,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cVkJBqh4FhUR1uqhm_E7Wygx0kqPe-EdMauhlB6neDw"},
{"content":{"body":"Is the current proposal with add or multiply semantics?","msgtype":"m.text"},"ts":1679517715047,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc"},
{"content":{"body":"multiply iirc","m.relates_to":{"event_id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc","is_falling_back":true,"m.in_reply_to":{"event_id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517772408,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8KPGwrVh4feFNvHrRRfybA1bHmUSQuodjHYSNDRGKow"},
{"content":{"body":"multiply","m.relates_to":{"event_id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc","is_falling_back":true,"m.in_reply_to":{"event_id":"$8KPGwrVh4feFNvHrRRfybA1bHmUSQuodjHYSNDRGKow"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517791445,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XbB6Tj02wC1xmLxJIhYftzsvYonhNZxGxvzuHo9QP98"},
{"content":{"body":"` start + (step * currentCount)` perfect","format":"org.matrix.custom.html","formatted_body":"<code> start + (step * currentCount)</code> perfect","m.relates_to":{"event_id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc","is_falling_back":true,"m.in_reply_to":{"event_id":"$XbB6Tj02wC1xmLxJIhYftzsvYonhNZxGxvzuHo9QP98"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517838968,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$utPslSatxyRjOVvwVmn5nPsQBkXT76QqhLMZSLBvRls"},
{"content":{"body":"Had to scan the spec for a min","m.relates_to":{"event_id":"$FHfjUdB0VXq38FVuIUf28QYPX59PQXYz3-a4PAumURc","is_falling_back":true,"m.in_reply_to":{"event_id":"$utPslSatxyRjOVvwVmn5nPsQBkXT76QqhLMZSLBvRls"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679517846826,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ZT3pUJHDXLVMhZuiM4eoSz1DdrndFt3A6V5NmQ7cFmI"},
{"content":{"body":"I agree with Shu's point that we should probably align with wasm on whether they add an f16 for these or they get promoted when they cross to wasm","msgtype":"m.text"},"ts":1679518836978,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$O9MKDnahDtG-pETuW_hOscn-_MLTOi7VH6eeHZ6TEko"},
{"content":{"body":"> <@mpcsh_:matrix.org> Willian Martins your name isn't in the delegates list for the notes — is your acronym WMS? https://github.com/tc39/notes/blob/main/delegates.txt\n\ndminor you as well — I see DLM in the notes, please add yourself to the list 🙂","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">@mpcsh_:matrix.org</a><br><a href=\"https://matrix.to/#/@wmartins:matrix.org\">Willian Martins</a> your name isn't in the delegates list for the notes — is your acronym WMS? https://github.com/tc39/notes/blob/main/delegates.txt</blockquote></mx-reply><a href=\"https://matrix.to/#/@dminor:mozilla.org\">dminor</a> you as well — I see DLM in the notes, please add yourself to the list 🙂","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$lwFAWSQRR-gQLLMd7nV1NmZxVG_CjJIeEttM9XH9jPI"}},"msgtype":"m.text"},"ts":1679518890597,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$RXfh_6MzGCOFYvOWQgP_7rmVeBOFxeWhdvIFKY9AGg4"},
{"content":{"body":"Dan is *also* in the list","format":"org.matrix.custom.html","formatted_body":"Dan is <em>also</em> in the list","m.relates_to":{"event_id":"$RXfh_6MzGCOFYvOWQgP_7rmVeBOFxeWhdvIFKY9AGg4","is_falling_back":true,"m.in_reply_to":{"event_id":"$RXfh_6MzGCOFYvOWQgP_7rmVeBOFxeWhdvIFKY9AGg4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679518924224,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SExjECPQoQhyjMznc0wlL3Dffsa1KgsKI4LQ3aaXgMs"},
{"content":{"body":"mpcsh: I think your search is broken","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mpcsh_:matrix.org\">mpcsh</a>: I think your search is broken","m.relates_to":{"event_id":"$RXfh_6MzGCOFYvOWQgP_7rmVeBOFxeWhdvIFKY9AGg4","is_falling_back":true,"m.in_reply_to":{"event_id":"$SExjECPQoQhyjMznc0wlL3Dffsa1KgsKI4LQ3aaXgMs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679518936064,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Il1HzJ5dVH8QBzbPPeISPUy9FaWWoHn7lsfKBrYWAmA"},
{"content":{"body":" * Dan is _also_ in the list already","format":"org.matrix.custom.html","formatted_body":" * Dan is <em>also</em> in the list already","m.new_content":{"body":"Dan is _also_ in the list already","format":"org.matrix.custom.html","formatted_body":"Dan is <em>also</em> in the list already","msgtype":"m.text"},"m.relates_to":{"event_id":"$SExjECPQoQhyjMznc0wlL3Dffsa1KgsKI4LQ3aaXgMs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679518950817,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vdxpJyPMTRvQ3JVR6FgJ11jVp2AjZ1z3L6YXGScnApI"},
{"content":{"body":"you're right — I don't know how I missed Willian. I searched for \"Daniel Minor\" though here. I see them both now!","m.relates_to":{"event_id":"$RXfh_6MzGCOFYvOWQgP_7rmVeBOFxeWhdvIFKY9AGg4","is_falling_back":true,"m.in_reply_to":{"event_id":"$Il1HzJ5dVH8QBzbPPeISPUy9FaWWoHn7lsfKBrYWAmA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679518996881,"senderName":"mpcsh","senderId":"@mpcsh_:matrix.org","id":"$Poq-vDYESzH1UKLflWjqRxURpfK-DKpOZ0j7_xgLjrA"},
{"content":{"body":"Someone is being very loud in front of a mic","msgtype":"m.text"},"ts":1679519829092,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$PRrU_9j4ZKSaAhbIG_u-SB21sPHit3OisBxwCFpYegI"},
{"content":{"body":"aggressive clicking","msgtype":"m.text"},"ts":1679519905578,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$lDIV5nAc3XQaYta5Ot6oJqEoJzO_dwliqrOjmNYcl1E"},
{"content":{"body":"Is this still the case Justin Ridgewell?","format":"org.matrix.custom.html","formatted_body":"Is this still the case <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>?","msgtype":"m.text"},"ts":1679519909621,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$e8TH58tHlgE7q55MsmWVzRYpIA_i2rvwMVMBapSrpbM"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1679519918322,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$k0dTTZ4LjSx-WlhsDYNdZwMZPq4VHZXXXeiC4Eex-Ew"},
{"content":{"body":"Sorry, yes","msgtype":"m.text"},"ts":1679519922401,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$RFzYMpmsx_7PcccquCeYYX76HObhsAn5PIj_rPpgewo"},
{"content":{"body":"Still noisy","msgtype":"m.text"},"ts":1679519925139,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$H_dIUb7XZJJFVsvkE2TXNe1-fzRQtCOqh5rbwO4rhBE"},
{"content":{"body":"clicking or keyboard?","msgtype":"m.text"},"ts":1679519930212,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$2__G7l39XFuNupRroamr2hjAY6viw95wgyGktSeF6PE"},
{"content":{"body":"both","msgtype":"m.text"},"ts":1679519937368,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$qb4hdZGBWblwLnRmOEByrT4z53Q8aNiP16WLm8cJmcM"},
{"content":{"body":"Clicking?","msgtype":"m.text"},"ts":1679519940087,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$chHuLVcsNMHvZb8hohW4A2f6CEgWYlqTgw5PBOqA8eo"},
{"content":{"body":"from the room or the call?","msgtype":"m.text"},"ts":1679519940192,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XgZyeaNAqemvDuYiPkg4pIO5zlkYiyGISDN6tMIo5nc"},
{"content":{"body":"Also shuffling","msgtype":"m.text"},"ts":1679519946108,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$6XJwEfeZ4MUchrUK13H4S8vhXDSpocOSoc8Mrzz5LTU"},
{"content":{"body":" * from the room or the call? the room i assume","m.new_content":{"body":"from the room or the call? the room i assume","msgtype":"m.text"},"m.relates_to":{"event_id":"$XgZyeaNAqemvDuYiPkg4pIO5zlkYiyGISDN6tMIo5nc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679519946763,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rcQvCmiltnoEJgl7oILRWWabZKe5TAkn5-GSSvFKCNw"},
{"content":{"body":"yes?","msgtype":"m.text"},"ts":1679519946882,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$uGyRh51jxCCR8VUUgHIE2qbJjdmyuSOUcQEHBANPj78"},
{"content":{"body":"I don't hear this noise from the room","msgtype":"m.text"},"ts":1679519949498,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$IOcEWt4jamVA2DZR44C1onLFvJd5CcY1iylK_Vvpt_Y"},
{"content":{"body":"in the room we do not hear aggressive typing or clicking","msgtype":"m.text"},"ts":1679519977167,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$w9RckUSu5XRGwZBOIhz_ARmjibHJpyliD9AlQ2CrIWQ"},
{"content":{"body":"good now","msgtype":"m.text"},"ts":1679519980832,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$KNyTEY5s7fbkhJ3hAMDbS968O21et-0jdKvAqRa8XHI"},
{"content":{"body":"isn't that a strawperson","msgtype":"m.text"},"ts":1679520051427,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$igSLaqj-RRa2uB9ekI5k4umBw4xoiANhYQROgElM-DI"},
{"content":{"body":"like these arguments are formed like \"it's impossible to express now\", whereas it's more like \"we have to use libraries\"?","msgtype":"m.text"},"ts":1679520088681,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lsaY8QnKKO5FrEaMSSmg28k7K5in8Qg_RrY8tgUwOuU"},
{"content":{"body":"the last bullet point is about accidental casts which i remember littledan and brendan bringing up years ago","msgtype":"m.text"},"ts":1679520129969,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9zKrcTtYwm468iftJ__eiaeoYnac-3tfYUy6mVkjRMg"},
{"content":{"body":"that one seems legit as an argument for language inclusion over library","msgtype":"m.text"},"ts":1679520150372,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_mbji3p6eKnsMxEo9IdE8wnMO_XtaYgqj8a64ucptcQ"},
{"content":{"body":"anyone know _why_ IEEE decimal distinguishes between 1.2 and 1.20?","format":"org.matrix.custom.html","formatted_body":"anyone know <em>why</em> IEEE decimal distinguishes between 1.2 and 1.20?","msgtype":"m.text"},"ts":1679520683989,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$64RYDwb6bs7jFqiaPZ9dhbotKxtXRcjF77awQIMYt_E"},
{"content":{"body":"sigfigs?","msgtype":"m.text"},"ts":1679520705941,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$J5FBwKBurESMNDGSefu2xtusKoQl7l1SWc79RtUibQU"},
{"content":{"body":"like high school science","msgtype":"m.text"},"ts":1679520715718,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$icfEWvxY8K7cWOOHO0r0u2iKLrLxjJP4m4hpWQ2ox4I"},
{"content":{"body":"> <@bakkot:matrix.org> anyone know _why_ IEEE decimal distinguishes between 1.2 and 1.20?\n\nthis page explains at way too much length: https://speleotrove.com/decimal/decifaq.html","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$64RYDwb6bs7jFqiaPZ9dhbotKxtXRcjF77awQIMYt_E?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>anyone know <em>why</em> IEEE decimal distinguishes between 1.2 and 1.20?</blockquote></mx-reply>this page explains at way too much length: https://speleotrove.com/decimal/decifaq.html","m.relates_to":{"m.in_reply_to":{"event_id":"$64RYDwb6bs7jFqiaPZ9dhbotKxtXRcjF77awQIMYt_E"}},"msgtype":"m.text"},"ts":1679520739182,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EHl7-CScKgOph71NMQI6Lkmz2i2o75smwmnoOmniJAI"},
{"content":{"body":"there are many use cases posited there for trailing zeroes. The author of this document was participating in the IEEE process.","msgtype":"m.text"},"ts":1679520764234,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0jlqYZ7G4fpSA877_13jMaUaLOzpj-UNRTiqNOi6O_I"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1679520779139,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$W8Od-Ew-ql9lp1e7ZGdA7sgvuOKphQEqX4IvgpNw3x8"},
{"content":{"body":"it is actually a fun and well-written piece","msgtype":"m.text"},"ts":1679520796166,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1kKsywof6_sksGoDpHewatKdLO8_ZCsz4-EVmbBa1Gs"},
{"content":{"body":"last updated today, wow","msgtype":"m.text"},"ts":1679520922298,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$7wfUaKliQnKHfVYjyDQbKPSpm772MxQ8whVv-bBenWk"},
{"content":{"body":"no it just has some JS that writes the current date","msgtype":"m.text"},"ts":1679520933900,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$W37foEAcZZmUXEPyXms9ZmpSX9h03g7KClc9IjXZ3AQ"},
{"content":{"body":"I was also confused by that","msgtype":"m.text"},"ts":1679520937802,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wl92WVGDrXlpFilOuTy2uFJoCn0Mu_IhhhUbq2Twq-8"},
{"content":{"body":"well that is very weird","msgtype":"m.text"},"ts":1679520953368,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$S2eLGP9_zNbz2KTmj-KV16hudREjfAKr-WaFwtXjb6U"},
{"content":{"body":"lol that was a common practice in the late 90s","msgtype":"m.text"},"ts":1679520968802,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bm_7JousOkSuGR2B9sggyf4pdvWQaEyexOU1LmJFdt0"},
{"content":{"body":"next to a \"visit counter\"","msgtype":"m.text"},"ts":1679520980036,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oO6g-3ke4rUuEveBDMPrXPv9DPczj2R8c2c6OgZuU14"},
{"content":{"body":"actually it appears to be using `document.lastModified`","format":"org.matrix.custom.html","formatted_body":"actually it appears to be using <code>document.lastModified</code>","msgtype":"m.text"},"ts":1679521000270,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yP0Z7u-i7Dh1Hvgohc2tbVBB35q1BuU5Dri1Do_hT3c"},
{"content":{"body":"which, TIL","msgtype":"m.text"},"ts":1679521002134,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pvfjZID-f19rMdztuncbtbDwN1xavvz73z5BMYFPkPU"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1679521008920,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gari2yEV238TWkX751uvXhn7ZCqxb13yCQpG9TysIJ8"},
{"content":{"body":"Feedback from remote attendees is that the room mic is particularly hot where Jordan and Patrick are sitting. We hear clicks and zipping noises, etc.  Just for awareness.","msgtype":"m.text"},"ts":1679521110256,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$9GZjg61fRbWRGDzxOWN6yUq-yhjJOZ-as9EqYI3ti_4"},
{"content":{"body":"> <@bakkot:matrix.org> actually it appears to be using `document.lastModified`\n\nwow how does it know? whatever the server says i guess?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yP0Z7u-i7Dh1Hvgohc2tbVBB35q1BuU5Dri1Do_hT3c?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>actually it appears to be using <code>document.lastModified</code></blockquote></mx-reply>wow how does it know? whatever the server says i guess?","m.relates_to":{"m.in_reply_to":{"event_id":"$yP0Z7u-i7Dh1Hvgohc2tbVBB35q1BuU5Dri1Do_hT3c"}},"msgtype":"m.text"},"ts":1679521221545,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1otuboqo9m1EQEJgvIdzFJEjq3a2Ft14uRfKzLdNL8w"},
{"content":{"body":"shu: I think it only works for local files","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I think it only works for local files","msgtype":"m.text"},"ts":1679521284482,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-Kb9z0bpHqbcPCUTeNc407WMR3jeVCBUOezVjEAgojU"},
{"content":{"body":"maybe it goes off a response header though, I dunno","msgtype":"m.text"},"ts":1679521291801,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$GIiu4vU_74qZHbmgWO24AtAY9MyXTWNB-UAjPRwsok8"},
{"content":{"body":"> The Document's source file's last modification date and time must be derived from relevant features of the networking protocols used, e.g. from the value of the HTTP `Last-Modified` header of the document, or from metadata in the file system for local files. If the last modification date and time are not known, the attribute must return the current date and time in the above format.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>The Document's source file's last modification date and time must be derived from relevant features of the networking protocols used, e.g. from the value of the HTTP <code>Last-Modified</code> header of the document, or from metadata in the file system for local files. If the last modification date and time are not known, the attribute must return the current date and time in the above format.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1679521327581,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bMzFqdeT7AHi8GwVnZ9_fCXhlsCsVB2Hg8JtkQcs9j0"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/dom.html#dom-document-lastmodified-dev","msgtype":"m.text"},"ts":1679521329560,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VTK8z3GA_fsg_jOT-DrvZD-398oY-5ydYDIOqJFYYQY"},
{"content":{"body":"sick","msgtype":"m.text"},"ts":1679521342250,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MPlkUny0xEYTwLTJwnJ03gwVqA3oHRJZ16r7ORUzVNo"},
{"content":{"body":"My point was going to be: I think the more important reason (than performance) for decimal over rational is, the very core and common operation of rounding makes sense for decimals in a way which is a sort of mismatch for rationals. This is very common in financial calculations, to have well-defined rounding of intermediate values.","msgtype":"m.text"},"ts":1679521426109,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HJCyuD26T9wEIz6OOH255otrING9G80b7PohapZz2EI"},
{"content":{"body":"+1 to dminor ","format":"org.matrix.custom.html","formatted_body":"+1 to <a href=\"https://matrix.to/#/@dminor:mozilla.org\">dminor</a>","msgtype":"m.text"},"ts":1679521487221,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SytU_rm2nAS32cpNn23nrylmuh0uVRXAeRo_J5L4B6Y"},
{"content":{"body":"I can understand \"it's not motivated enough\" or \"it's too much work to implement\" as counterarguments, but \"there is a design space\" is a common attribute of just about everything we do in TC39.","msgtype":"m.text"},"ts":1679521525661,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$iscwApzJY-gQg0f4Vy0jye_lGTj2ZCvdXop_NAH8vUY"},
{"content":{"body":"Utility as something built-in here is analogous to something like Temporal--it ends up being useful to have some things built-in sometimes. I think this is about the use cases being persuasive enough, which maybe we haven't shown.","msgtype":"m.text"},"ts":1679521614177,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9WBjmyH7S2U7O9hy07EgPktsyUP85LlGatMVi6qXhHg"},
{"content":{"body":"in retrospect Temporal should have been a blessed library","msgtype":"m.text"},"ts":1679521633710,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$85QUQlQn6bxEXFUiUPw28oxTQX5yg2XtgB5LaiI0uuQ"},
{"content":{"body":" * Utility as something built-in here is analogous to something like Temporal--it ends up being useful to have some things built-in sometimes. I think this is about the use cases being persuasive enough to pay for the complexity and implementation cost, which maybe we haven't shown.","m.new_content":{"body":"Utility as something built-in here is analogous to something like Temporal--it ends up being useful to have some things built-in sometimes. I think this is about the use cases being persuasive enough to pay for the complexity and implementation cost, which maybe we haven't shown.","msgtype":"m.text"},"m.relates_to":{"event_id":"$9WBjmyH7S2U7O9hy07EgPktsyUP85LlGatMVi6qXhHg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679521633711,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_Ne_arUIkLAIoCi0jqf7UzaQJdg60h-p0KXsbynRJnE"},
{"content":{"body":"(IMO)","msgtype":"m.text"},"ts":1679521636718,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yEyx8rH_S2ZUxGB8phSy40zWsFYizzr1KUOPkVah6Mw"},
{"content":{"body":"we don't have a way to do that though","msgtype":"m.text"},"ts":1679521657361,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$dwepGy5YDaM92LipYkqAS37BMT1Hu9lRJ5t1_tzgOrs"},
{"content":{"body":"nah, date/time handling is provided (usually poorly) in almost all std libs","msgtype":"m.text"},"ts":1679521663770,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TkhHv1ZVJP2WByV51Y6zTwMtveam-s6Kz0s5Tkk7Zz4"},
{"content":{"body":"interchange is the thing that kills us by not having a vocabulary type","msgtype":"m.text"},"ts":1679521667801,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$4HmcI95KD-epOtJhcPr9pdWNmgsR4RjIjal0jNA3enE"},
{"content":{"body":"tzdata is live as well","msgtype":"m.text"},"ts":1679521675427,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZLlDbVgCwwS0ptOxoXX-Y2jKAh4-trxB2vj7mrqlys8"},
{"content":{"body":"what is a vocabulary type again","msgtype":"m.text"},"ts":1679521683655,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$f5rACOEWHNE2cQuUcfGfJnAZODM30wNXcq39EI0jkTA"},
{"content":{"body":"literally every single software product/language that exists has decimal, so making NxM products all flow through JS is burdensome ","msgtype":"m.text"},"ts":1679521711271,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$KRvNhM6qwhNaOal61L5NPWEb4nuDY6BnnFd1h-sRizo"},
{"content":{"body":"like, if we have something built-in, then all the different libraries know that they can use it. This comes up for Promises, Temporal, Decimal, and more","msgtype":"m.text"},"ts":1679521713197,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ckontYTPne0YTwXpXj82oMR7KsMo_7P8u-r0B0pjXVA"},
{"content":{"body":"\"vocabulary type\" means \"built-in\"?","msgtype":"m.text"},"ts":1679521727622,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yCewWead4h3E-g8XVcSshoTN7TXvSqu4OUwJXigpAB8"},
{"content":{"body":"vocabulary meaning, a concept of interchange between languages/systems","msgtype":"m.text"},"ts":1679521745855,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$FMDQ2lr4_CpnaCeL0LSeYo0ck76AJCm4KbT-nBOXQPo"},
{"content":{"body":"even within the same language/system","msgtype":"m.text"},"ts":1679521751473,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$ztCtDr0yvvT2uLQWfhG42Yv0tMaMl5tsDb4Y_qc7spE"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1679521754586,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ddNwE9e7xBzcSl04qtu7Ecp1ehmCF5Dh3iVwohuDeOk"},
{"content":{"body":"so `double` in C++ / `number` in JS","format":"org.matrix.custom.html","formatted_body":"so <code>double</code> in C++ / <code>number</code> in JS","msgtype":"m.text"},"ts":1679521765403,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$SJzFXsLrEfjQhD8AKjDmlRhk21HOF_pOW71FKt9KOuo"},
{"content":{"body":"i will be unequivocal about one thing, which is what i was planning to bring in the queue: V8 is not going to be okay with a new value type","msgtype":"m.text"},"ts":1679521780314,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cQftMm11t2Iqrb8U51ah7JIeBJU7U1lDsrI6DdFYLrY"},
{"content":{"body":"> <@shuyuguo:matrix.org> i will be unequivocal about one thing, which is what i was planning to bring in the queue: V8 is not going to be okay with a new value type\n\nI would really like to have this conversation in plenary in the overflow time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cQftMm11t2Iqrb8U51ah7JIeBJU7U1lDsrI6DdFYLrY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i will be unequivocal about one thing, which is what i was planning to bring in the queue: V8 is not going to be okay with a new value type</blockquote></mx-reply>I would really like to have this conversation in plenary in the overflow time","m.relates_to":{"m.in_reply_to":{"event_id":"$cQftMm11t2Iqrb8U51ah7JIeBJU7U1lDsrI6DdFYLrY"}},"msgtype":"m.text"},"ts":1679521794901,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pipzW6I9tTBhySRQNc2jI1KAwoNhtVu8k5a0dz2JdXE"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1679521801613,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Lw_Rs9GPe26VDY66tB9apMPE6YQucsJFYV6P9M77uxI"},
{"content":{"body":"yes, that was the path that was being suggested","msgtype":"m.text"},"ts":1679521803051,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$ki5hl_Od2kyixBLIuJKx-iJpGZDtauCBstawAoEZQxo"},
{"content":{"body":"path being (not a value type)","msgtype":"m.text"},"ts":1679521809889,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$ur118M6PHyrfaDVWFeXD2V6996a26AoyeMg7OFTyrPU"},
{"content":{"body":"well, waldemar brought up === overloading","msgtype":"m.text"},"ts":1679521811399,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$usb6OP6X62n5wwLHNM23TJCzeP0TV78T5lyOR2SwJIA"},
{"content":{"body":"which is also not something we want","msgtype":"m.text"},"ts":1679521814648,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$za7EC-Ixv_z_8_d6FWs9waIk-CHUygF0aada1ms81LM"},
{"content":{"body":"yes, I disagree with that point made by waldemar","msgtype":"m.text"},"ts":1679521833471,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eR0-BAMB67lJnFllIQBGNEHNJf0wIqtGVZ3K_qpQc_g"},
{"content":{"body":"> <@shuyuguo:matrix.org> well, waldemar brought up === overloading\n\nyeah, this is exactly why I'm looking forward to having a conversation about it together (as opposed to isolated points from individuals)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$usb6OP6X62n5wwLHNM23TJCzeP0TV78T5lyOR2SwJIA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>well, waldemar brought up === overloading</blockquote></mx-reply>yeah, this is exactly why I'm looking forward to having a conversation about it together (as opposed to isolated points from individuals)","m.relates_to":{"m.in_reply_to":{"event_id":"$usb6OP6X62n5wwLHNM23TJCzeP0TV78T5lyOR2SwJIA"}},"msgtype":"m.text"},"ts":1679521847670,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5A8I-f7lq_WxElKzxsc_JaQSgmlM427mAxddJyUZ_us"},
{"content":{"body":" * which is also not something V8 wants","m.new_content":{"body":"which is also not something V8 wants","msgtype":"m.text"},"m.relates_to":{"event_id":"$za7EC-Ixv_z_8_d6FWs9waIk-CHUygF0aada1ms81LM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679521851407,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Kv2vchwtfYdpzXxkbv4JzNE4DBj2Kokn2KPRk208PoY"},
{"content":{"body":"if we could scope/timebox an overflow specifically about this, it would really help inform champions","msgtype":"m.text"},"ts":1679521878132,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$ZREpyu98aQq3xk-IkJQwrfeXOH3RNAM1XDyBsMm2W5I"},
{"content":{"body":"assuming an object w/o overloading is being proposed, what are delegate opinions as to why that would not be acceptable","msgtype":"m.text"},"ts":1679521907446,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$isHAwatmMeirIdDROf1KyQPqQ48GUcJuxf0GhP3PYrs"},
{"content":{"body":"> <@apaprocki:matrix.org> assuming an object w/o overloading is being proposed, what are delegate opinions as to why that would not be acceptable\n\nYeah, I think we could divide the discussion into those two parts (I'd also like to discuss why Waldemar wants overloading, and what others think about this topic)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$isHAwatmMeirIdDROf1KyQPqQ48GUcJuxf0GhP3PYrs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@apaprocki:matrix.org\">@apaprocki:matrix.org</a><br>assuming an object w/o overloading is being proposed, what are delegate opinions as to why that would not be acceptable</blockquote></mx-reply>Yeah, I think we could divide the discussion into those two parts (I'd also like to discuss why Waldemar wants overloading, and what others think about this topic)","m.relates_to":{"m.in_reply_to":{"event_id":"$isHAwatmMeirIdDROf1KyQPqQ48GUcJuxf0GhP3PYrs"}},"msgtype":"m.text"},"ts":1679521948960,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Hmn4OgKajkOT9B75ZBIVwP3FN-8V0V28Ly0PdhT-0eg"},
{"content":{"body":"the timebox was just not big enough, we had a ton more to talk about wrt decimal","msgtype":"m.text"},"ts":1679521958679,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9JmzOf1sVVwaUDj6Cz7qZvSQdhgtu1Dch5HzKqvl0KU"},
{"content":{"body":"> <@michaelficarra:matrix.org> the timebox was just not big enough, we had a ton more to talk about wrt decimal\n\nGood thing we have tons of slack time this meeting.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9JmzOf1sVVwaUDj6Cz7qZvSQdhgtu1Dch5HzKqvl0KU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>the timebox was just not big enough, we had a ton more to talk about wrt decimal</blockquote></mx-reply>Good thing we have tons of slack time this meeting.","m.relates_to":{"m.in_reply_to":{"event_id":"$9JmzOf1sVVwaUDj6Cz7qZvSQdhgtu1Dch5HzKqvl0KU"}},"msgtype":"m.text"},"ts":1679521997995,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wdWc6Ajb6Y8PRpC1ZW7hBdUMxLBTi2MnxUAs5FgkyEk"},
{"content":{"body":"the slack is being consumed at a fast rate","msgtype":"m.text"},"ts":1679522090192,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5-K5e51X5Z63Ftp7Kqck-AatnZ82SoAf73ZTl2mfZoo"},
{"content":{"body":"we are down to 25mins remaining","msgtype":"m.text"},"ts":1679522124034,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-3BxCY4yIfrilR-jpngBYKzSDjZAvez3CrzazAQCqBc"},
{"content":{"body":"I'll be honest, I'd love something a regex tagged template for `x`-mode, but I'd be more likely to want to bring prefix modifiers back for something like:\n```js\nconst re = RegExp`(?x)\n# comments\nmulti|line\nregexp\n`;\n```\nas I'm also not a fan of having to nest `` ` `` and `/`.","format":"org.matrix.custom.html","formatted_body":"<p>I'll be honest, I'd love something a regex tagged template for <code>x</code>-mode, but I'd be more likely to want to bring prefix modifiers back for something like:</p>\n<pre><code class=\"language-js\">const re = RegExp`(?x)\n# comments\nmulti|line\nregexp\n`;\n</code></pre>\n<p>as I'm also not a fan of having to nest <code>`</code> and <code>/</code>.</p>\n","msgtype":"m.text"},"ts":1679522226144,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lm9fteZvMmGY-gXdVRg-RwEmfKTt-CM7LSDCpNjqDyQ"},
{"content":{"body":"MSL's library that Mark is referring to: https://github.com/mikesamuel/regexp-make-js","msgtype":"m.text"},"ts":1679522391255,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$CSIpIqBDAiVwLmzs3bX-bCnG3Nqx3ifPcqGnJupYow8"},
{"content":{"body":"I think one of Mark's concerns about string append is character classes. If `Regexp.escape` is safe for `new RegExp(\"[\" + Regexp.escape(input) + \"]\")`, is that still a concern?","format":"org.matrix.custom.html","formatted_body":"I think one of Mark's concerns about string append is character classes. If <code>Regexp.escape</code> is safe for <code>new RegExp(&quot;[&quot; + Regexp.escape(input) + &quot;]&quot;)</code>, is that still a concern?","msgtype":"m.text"},"ts":1679522592304,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PxNx6ajQP5P8dqocJ0D0l2c_0kW5DPCGk1Qlo3uyvG0"},
{"content":{"body":"also backslash","msgtype":"m.text"},"ts":1679522654526,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$OsWapYEdfFEb0ewLcQkl_dBywCASigllvyAZQLD-7Qg"},
{"content":{"body":"I don't understand jridgewell's point","msgtype":"m.text"},"ts":1679522679850,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EzXPczGXwf_ot45BszDlX9nBpzl_49h3ELvDRO97rMg"},
{"content":{"body":"> <@rbuckton:matrix.org> I think one of Mark's concerns about string append is character classes. If `Regexp.escape` is safe for `new RegExp(\"[\" + Regexp.escape(input) + \"]\")`, is that still a concern?\n\nhow it could be safe?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PxNx6ajQP5P8dqocJ0D0l2c_0kW5DPCGk1Qlo3uyvG0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I think one of Mark's concerns about string append is character classes. If <code>Regexp.escape</code> is safe for <code>new RegExp(\"[\" + Regexp.escape(input) + \"]\")</code>, is that still a concern?</blockquote></mx-reply>how it could be safe?","m.relates_to":{"m.in_reply_to":{"event_id":"$PxNx6ajQP5P8dqocJ0D0l2c_0kW5DPCGk1Qlo3uyvG0"}},"msgtype":"m.text"},"ts":1679522727919,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$BdflUNMUeVXB5RrDd67RJ3YrKsy8epeV2fgkMcpHOqE"},
{"content":{"body":"```` re``` ```` is just invalid","format":"org.matrix.custom.html","formatted_body":"<code>re```</code> is just invalid","msgtype":"m.text"},"ts":1679522751304,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$5Rq_kT5HlnT3vxoZPN12313xfUEcG71-1Yrjgi7eDtM"},
{"content":{"body":"> <@haxjs:matrix.org> how it could be safe?\n\nEvery character can be escaped into something that would be valid in a _ClassAtom_","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BdflUNMUeVXB5RrDd67RJ3YrKsy8epeV2fgkMcpHOqE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>how it could be safe?</blockquote></mx-reply>Every character can be escaped into something that would be valid in a <em>ClassAtom</em>","m.relates_to":{"m.in_reply_to":{"event_id":"$BdflUNMUeVXB5RrDd67RJ3YrKsy8epeV2fgkMcpHOqE"}},"msgtype":"m.text"},"ts":1679522769797,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gmrLli6xyq5hfcG3k0YQxnuMuurHwir70gg_20FnnI0"},
{"content":{"body":"You can't match a `` ` `` in a TTL built RegExp","format":"org.matrix.custom.html","formatted_body":"You can't match a <code>`</code> in a TTL built RegExp","msgtype":"m.text"},"ts":1679522770119,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$O7hwR--9TM_abZCDOS0vYQYLAnOxvPawYQI0WpptioI"},
{"content":{"body":"Because you can't have a lone `` ` `` in a TTL","format":"org.matrix.custom.html","formatted_body":"Because you can't have a lone <code>`</code> in a TTL","msgtype":"m.text"},"ts":1679522778971,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$9bKe2KOKjFsU6D6WP5VED3Y9I1R_x6t7pA-ffF-6ync"},
{"content":{"body":"I don't understand why `re`\\``` or `re`\\\\`` wouldn't work for this","format":"org.matrix.custom.html","formatted_body":"I don't understand why <code>re</code>`<code> or `re`\\\\</code> wouldn't work for this","msgtype":"m.text"},"ts":1679522798708,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SagLrUxe4Fr8KELgZtN9DzcUoMQ-hWO8VhJ2UuvvOkw"},
{"content":{"body":"(ugh how do I type that?0","msgtype":"m.text"},"ts":1679522805842,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$U4SjUGRSmXSqtX15MriaBWKid-7rz-LUwnkhQd-c2bM"},
{"content":{"body":" * also backslash: https://github.com/tc39/proposal-regex-escaping/issues/37#issue-98309281","m.new_content":{"body":"also backslash: https://github.com/tc39/proposal-regex-escaping/issues/37#issue-98309281","msgtype":"m.text"},"m.relates_to":{"event_id":"$OsWapYEdfFEb0ewLcQkl_dBywCASigllvyAZQLD-7Qg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679522808337,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$xwHZ3lF-u-lwM3M666dZ38GGTEMK_SgDGtLh_TF9PGQ"},
{"content":{"body":"> <@bakkot:matrix.org> anyone know _why_ IEEE decimal distinguishes between 1.2 and 1.20?\n\nIt's just that, unlike IEEE binary which always has an implied 1 as the leading mantissa digit for non-denorms, there are multiple bit patterns that can represent the same IEEE decimal number because the leading mantissa digit can be 0 through 9. For example, there are hundreds of ways to represent +0 as a IEEE decimal, and they're all different and distinguishable.\nThe situation is similar to how UTF-8 was originally defined: there were multiple ways to encode \"a\" (either as a single byte, as two bytes, as three bytes, etc.). Eventually this became enough of a problem that UTF-8 was changed to ban encodings other than the shortest possible ones.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$64RYDwb6bs7jFqiaPZ9dhbotKxtXRcjF77awQIMYt_E?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>anyone know <em>why</em> IEEE decimal distinguishes between 1.2 and 1.20?</blockquote></mx-reply>It's just that, unlike IEEE binary which always has an implied 1 as the leading mantissa digit for non-denorms, there are multiple bit patterns that can represent the same IEEE decimal number because the leading mantissa digit can be 0 through 9. For example, there are hundreds of ways to represent +0 as a IEEE decimal, and they're all different and distinguishable.<br>The situation is similar to how UTF-8 was originally defined: there were multiple ways to encode &quot;a&quot; (either as a single byte, as two bytes, as three bytes, etc.). Eventually this became enough of a problem that UTF-8 was changed to ban encodings other than the shortest possible ones.","m.relates_to":{"m.in_reply_to":{"event_id":"$64RYDwb6bs7jFqiaPZ9dhbotKxtXRcjF77awQIMYt_E"}},"msgtype":"m.text"},"ts":1679522808576,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$VeZmIXXypw46oRDDNn6tdC8o-JGAdR4VCokCVCRV4dM"},
{"content":{"body":"Because the `\\` is now included in your regex","format":"org.matrix.custom.html","formatted_body":"Because the <code>\\</code> is now included in your regex","msgtype":"m.text"},"ts":1679522817274,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$jDiEd99WChPn6nAselPz1GPIGfgQ49usyWtfYKFfLr0"},
{"content":{"body":"> <@jridgewell:matrix.org> You can't match a `` ` `` in a TTL built RegExp\n\nYou can, but not easily. You would have to do `` RegExp`${\"`\"}` ``, which isn't ideal but it is feasible.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O7hwR--9TM_abZCDOS0vYQYLAnOxvPawYQI0WpptioI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>You can't match a <code>`</code> in a TTL built RegExp</blockquote></mx-reply>You can, but not easily. You would have to do <code>RegExp`${&quot;`&quot;}`</code>, which isn't ideal but it is feasible.","m.relates_to":{"m.in_reply_to":{"event_id":"$O7hwR--9TM_abZCDOS0vYQYLAnOxvPawYQI0WpptioI"}},"msgtype":"m.text"},"ts":1679522820601,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$D5quS_4TGqSIX1yICu_DDwi1YHHeTxvRg0m0nkbNMgM"},
{"content":{"body":"I want to match \"`\"","msgtype":"m.text"},"ts":1679522835135,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$j2427t3z3ZrXVYSXepEjimzqft8cvIswBawkpFNGvEE"},
{"content":{"body":"But that won't work for `\\`","format":"org.matrix.custom.html","formatted_body":"But that won't work for <code>\\</code>","msgtype":"m.text"},"ts":1679522855307,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$6kgC-5nkQ6vAT-Hcb09Aiy_ofG1ZAag9NbBmhisJfuQ"},
{"content":{"body":"> <@littledan:matrix.org> I don't understand why `re`\\``` or `re`\\\\`` wouldn't work for this\n\ndouble backtick (or one more than the number used in the sample)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SagLrUxe4Fr8KELgZtN9DzcUoMQ-hWO8VhJ2UuvvOkw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I don't understand why <code>re</code>`<code> or `re`\\\\</code> wouldn't work for this</blockquote></mx-reply>double backtick (or one more than the number used in the sample)","m.relates_to":{"m.in_reply_to":{"event_id":"$SagLrUxe4Fr8KELgZtN9DzcUoMQ-hWO8VhJ2UuvvOkw"}},"msgtype":"m.text"},"ts":1679522857303,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZDrQupFQDSk1tbTe4rEqlVGcnAo9Qpm4_nMG0LYiaoo"},
{"content":{"body":"i.e., ``` `` ` `` ``` produces `` ` ``","format":"org.matrix.custom.html","formatted_body":"i.e., <code>`` ` ``</code> produces <code>`</code>","msgtype":"m.text"},"ts":1679522868508,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-hYAMp-A9Ah-BZJApy5fX6OsZ7NX3TiThtRrqyx92Gs"},
{"content":{"body":"Because `\\` is a special char in RegExp that would need to be escaped in the expression for","format":"org.matrix.custom.html","formatted_body":"Because <code>\\</code> is a special char in RegExp that would need to be escaped in the expression for","msgtype":"m.text"},"ts":1679522869404,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zQ_qh24D9ZicHnKd4UWaWg9WjkCgQE5HLY-sLGWyRjo"},
{"content":{"body":" * Because `\\` is a special char in RegExp that would need to be escaped in the expression form","format":"org.matrix.custom.html","formatted_body":" * Because <code>\\</code> is a special char in RegExp that would need to be escaped in the expression form","m.new_content":{"body":"Because `\\` is a special char in RegExp that would need to be escaped in the expression form","format":"org.matrix.custom.html","formatted_body":"Because <code>\\</code> is a special char in RegExp that would need to be escaped in the expression form","msgtype":"m.text"},"m.relates_to":{"event_id":"$zQ_qh24D9ZicHnKd4UWaWg9WjkCgQE5HLY-sLGWyRjo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679522871510,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$f8SoFT2smWoX_3iZSQZQ9Knvz4oN2cSxveS0ZtL7YOA"},
{"content":{"body":"If we had the ```` re``` ``` ```` multitick start/stop form from String.dedent, then it would have worked except for `\\`","format":"org.matrix.custom.html","formatted_body":"If we had the <code>re``` ```</code> multitick start/stop form from String.dedent, then it would have worked except for <code>\\</code>","msgtype":"m.text"},"ts":1679522919970,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$5sxpDcrlDGYKjHGWCM_nIt0X8U02dS1d_Pn3FjMJhlM"},
{"content":{"body":"We can have ```` re``` ``` ````","format":"org.matrix.custom.html","formatted_body":"We can have <code>re``` ```</code>","msgtype":"m.text"},"ts":1679522940376,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CSf6zgWS_7fDKO5m6WqdhBYGU1hkOq6EP2jclLCzOdc"},
{"content":{"body":"But it doesnt do what you want)","msgtype":"m.text"},"ts":1679522953364,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$h0DJlqacF0-wr4ZxW8qIbLCh1d2jdW-ln1gGU2oVyPE"},
{"content":{"body":" * But it doesnt do what you want :)","m.new_content":{"body":"But it doesnt do what you want :)","msgtype":"m.text"},"m.relates_to":{"event_id":"$h0DJlqacF0-wr4ZxW8qIbLCh1d2jdW-ln1gGU2oVyPE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679522955215,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4btSdQ37HB_qGX8l_FWLQFXeE_y8nIdzAF2fo-UtQ44"},
{"content":{"body":"lol yeah we already have that rbuckton ","format":"org.matrix.custom.html","formatted_body":"lol yeah we already have that <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>","msgtype":"m.text"},"ts":1679522966963,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YT8TDreiaumus1K-Ag41JTLq2K0Cp7s_YhsW0r4Zcm0"},
{"content":{"body":"Yah, this got brought up during String.dedent unfortunately","msgtype":"m.text"},"ts":1679522992710,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3CHZdo4sSJ98TvWMt_uewIt4GLChUUF3y1X8Ztzrmp8"},
{"content":{"body":"Justin Ridgewell: I still don't see how ``re`\\``` doesn't do what you want","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: I still don't see how ``re```` doesn't do what you want","msgtype":"m.text"},"ts":1679523000143,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wmgD4L2xrTrI290m9ExWFPpx9WjqHGPVjTqHKSWCvvc"},
{"content":{"body":"jesus","msgtype":"m.text"},"ts":1679523004299,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$htmC-0TqHhnnlVzSlaIZ3NMAS056CrknOD58EHBlio8"},
{"content":{"body":"I don't know how to talk about this","msgtype":"m.text"},"ts":1679523008800,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qcwfL967NklHHkTQHVBWBTfOMpRTkOnj7j8me4x8AO4"},
{"content":{"body":"even u have ``` ```, what if u want to match ``` ?","format":"org.matrix.custom.html","formatted_body":"even u have <code> </code>, what if u want to match ``` ?","msgtype":"m.text"},"ts":1679523009197,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$JBaaBNL2-kWxT9B-En1ydIO5eiuncNolS8CEOES_2zc"},
{"content":{"body":"Tip, matrix supports multitick blocks","msgtype":"m.text"},"ts":1679523019461,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Fs2OmeGRFRs9jN5RO9i4HgnJi-ZkVYANTUMxKsKoLAk"},
{"content":{"body":" * even u have `` ``, what if u want to match \\`\\`\\` ?","format":"org.matrix.custom.html","formatted_body":" * even u have <code> </code>, what if u want to match ``` ?","m.new_content":{"body":"even u have `` ``, what if u want to match \\`\\`\\` ?","format":"org.matrix.custom.html","formatted_body":"even u have <code> </code>, what if u want to match ``` ?","msgtype":"m.text"},"m.relates_to":{"event_id":"$JBaaBNL2-kWxT9B-En1ydIO5eiuncNolS8CEOES_2zc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523022234,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$E9mrzhAGCo5y_sh7_m1vvnQfQkHVNjm4qkuUmibNSnA"},
{"content":{"body":"``` ` ```","format":"org.matrix.custom.html","formatted_body":"<code>`</code>","msgtype":"m.text"},"ts":1679523032017,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W9byLoG2MGEBroJ2AgEehBAMenNYkpDNQzVOsB57dKU"},
{"content":{"body":"`` re`\\` ``","format":"org.matrix.custom.html","formatted_body":"<code>re`\\`</code>","msgtype":"m.text"},"ts":1679523033530,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$90klvZRcFv5SnwbzOnEh7_5dtO7xpR7KjJ5S_aZ-uKA"},
{"content":{"body":"there","msgtype":"m.text"},"ts":1679523035826,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$a8V5BFlTec9HBaOc_996T0N-txflODdFTYX-uHYwV_Y"},
{"content":{"body":"```` ``` ```` delimits with 4 ticks at start/stop","format":"org.matrix.custom.html","formatted_body":"<code>```</code> delimits with 4 ticks at start/stop","msgtype":"m.text"},"ts":1679523038588,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$DRvJvZYlX-sW5qrxxwd2_BYFnCP-HIf_N8y022HcXGs"},
{"content":{"body":" * ``re`\\\\```","format":"org.matrix.custom.html","formatted_body":" * ``re`\\```","m.new_content":{"body":"``re`\\\\```","format":"org.matrix.custom.html","formatted_body":"``re`\\```","msgtype":"m.text"},"m.relates_to":{"event_id":"$90klvZRcFv5SnwbzOnEh7_5dtO7xpR7KjJ5S_aZ-uKA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523047489,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1e0StQIH3zLJgJJoulBZ0U7QDItmjPW00Ll9zpXWvgo"},
{"content":{"body":"Kleene's regex language, I imagine Mark is referring to","msgtype":"m.text"},"ts":1679523054760,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Mor2vnJJk9BKXtj9WqqF0hYanjWVUvrooR6JKwRYgNc"},
{"content":{"body":" * even u have \\`\\`\\` \\`\\`\\`, what if u want to match \\`\\`\\` ?","format":"org.matrix.custom.html","formatted_body":" * even u have ``` ```, what if u want to match ``` ?","m.new_content":{"body":"even u have \\`\\`\\` \\`\\`\\`, what if u want to match \\`\\`\\` ?","format":"org.matrix.custom.html","formatted_body":"even u have ``` ```, what if u want to match ``` ?","msgtype":"m.text"},"m.relates_to":{"event_id":"$JBaaBNL2-kWxT9B-En1ydIO5eiuncNolS8CEOES_2zc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523055278,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$8KPEeeSD1UgUlzEo_j9WjFt9x7n8qwjZ8spEwkGtEj0"},
{"content":{"body":" * ``re`\\\\\\` ``","format":"org.matrix.custom.html","formatted_body":" * <code>re`\\\\\\` </code>","m.new_content":{"body":"``re`\\\\\\` ``","format":"org.matrix.custom.html","formatted_body":"<code>re`\\\\\\` </code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$90klvZRcFv5SnwbzOnEh7_5dtO7xpR7KjJ5S_aZ-uKA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523065095,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jxXYFmllDrweA6k5QeeOOEAL_pbtqMGdiOmDzIVaQvU"},
{"content":{"body":"> <@michaelficarra:matrix.org> ``re`\\\\\\` ``\n\n`` /\\/ `` doesn't work either though","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$90klvZRcFv5SnwbzOnEh7_5dtO7xpR7KjJ5S_aZ-uKA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><code>re`\\\\\\` </code></blockquote></mx-reply><code>/\\/</code> doesn't work either though","m.relates_to":{"m.in_reply_to":{"event_id":"$90klvZRcFv5SnwbzOnEh7_5dtO7xpR7KjJ5S_aZ-uKA"}},"msgtype":"m.text"},"ts":1679523067930,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zOTnfyNKyKUwSsdF1Y9j4jSPxqo0xEhkChhjLxIk-CE"},
{"content":{"body":"i've always pronounced that Clean-y","msgtype":"m.text"},"ts":1679523068482,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$biTBBScqt0a3ZYKyHbDQxLzXIR0a1yzH-Qjc5pAN3sg"},
{"content":{"body":"omfg","msgtype":"m.text"},"ts":1679523071497,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$pnGYsS3tyXLSKrDcnXD6jmRZon67kfh4d4nblnMva80"},
{"content":{"body":"is it actually Clean?","msgtype":"m.text"},"ts":1679523074770,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z6Gi2TWD-AQ7BhNYkCdGF5-qBy5sWGt0FpvDyJW6gAY"},
{"content":{"body":"yes I am trying to write two backslashes","msgtype":"m.text"},"ts":1679523078124,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KXDdaFBe6hdws8Z41YngSLACisvP7_L1BBrCV6i0sB0"},
{"content":{"body":"> <@shuyuguo:matrix.org> is it actually Clean?\n\nmy theory-heavy coworker pronounced its Clean-y the other day","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$z6Gi2TWD-AQ7BhNYkCdGF5-qBy5sWGt0FpvDyJW6gAY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>is it actually Clean?</blockquote></mx-reply>my theory-heavy coworker pronounced its Clean-y the other day","m.relates_to":{"m.in_reply_to":{"event_id":"$z6Gi2TWD-AQ7BhNYkCdGF5-qBy5sWGt0FpvDyJW6gAY"}},"msgtype":"m.text"},"ts":1679523092582,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$38aEUJhh2m-ITCppxIlfmarb7agGB5JEyBQQkd9ZxOU"},
{"content":{"body":"> <@rbuckton:matrix.org> `` /\\/ `` doesn't work either though\n\nThat would be written as `/\\\\/` to match `s = \"\\\\\"`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zOTnfyNKyKUwSsdF1Y9j4jSPxqo0xEhkChhjLxIk-CE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><code>/\\/</code> doesn't work either though</blockquote></mx-reply>That would be written as <code>/\\\\/</code> to match <code>s = &quot;\\\\&quot;</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$zOTnfyNKyKUwSsdF1Y9j4jSPxqo0xEhkChhjLxIk-CE"}},"msgtype":"m.text"},"ts":1679523101531,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$I9ohl1h8zDiu3IHbdto6PJqbc08Y5X_JME_Bdyy-BHQ"},
{"content":{"body":"But it's not possible to write with a TTL","msgtype":"m.text"},"ts":1679523110385,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ogV9NLMlW7OwKAsczK90UamJ0LK-vuXAzwL1TLjRPOU"},
{"content":{"body":"Justin Ridgewell: please explain why not","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: please explain why not","msgtype":"m.text"},"ts":1679523120611,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$y9Y8125pEOUitahYqhM6bIfMZnYoaoy_LSjh_s4QCLY"},
{"content":{"body":"``` re`\\` ``` is invalid syntax","format":"org.matrix.custom.html","formatted_body":"<code>re`\\`</code> is invalid syntax","msgtype":"m.text"},"ts":1679523137511,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$_WvlbI10iz1RNm-a-TVMK8SLb_NCERtaDTeDXgrNey4"},
{"content":{"body":"Yeah, though your comment indicates that `\\` in a RegExp template is impossible, when it seems pretty consistent with RegExp literals","format":"org.matrix.custom.html","formatted_body":"Yeah, though your comment indicates that <code>\\</code> in a RegExp template is impossible, when it seems pretty consistent with RegExp literals","msgtype":"m.text"},"ts":1679523137839,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BNd_0w59eU2q2RhF3P_tH_924-iCDefptgcnqo5dB24"},
{"content":{"body":"And ``` re`\\\\` ``` only matches `s = \"\\\\\\\\\"`","format":"org.matrix.custom.html","formatted_body":"And <code>re`\\\\`</code> only matches <code>s = &quot;\\\\\\\\&quot;</code>","msgtype":"m.text"},"ts":1679523157208,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$aLh1spEECiImadJ_R3hX7vmWq_x53QWJ5RoJwgTztV4"},
{"content":{"body":"we're on break now right?","msgtype":"m.text"},"ts":1679523166692,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-dB6thGrkt7-0QWtUdjddAPMyc_MZXo0Y21TJNKWzWo"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1679523176333,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$B4Ii8xRPNJH0KMJi34gUS1cUPCWZ1Zy-OsAT0QC0ITw"},
{"content":{"body":"I agree that `` ` `` is problematic, but also rare.","format":"org.matrix.custom.html","formatted_body":"I agree that <code>`</code> is problematic, but also rare.","msgtype":"m.text"},"ts":1679523177198,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$GOs6XKwFaOwc3rg6t2Qo3IuBKz16FHKIraGaB0mvl3Q"},
{"content":{"body":"```String.raw`\\\\`.length === 3```","format":"org.matrix.custom.html","formatted_body":"<code>String.raw`\\\\`.length === 3</code>","msgtype":"m.text"},"ts":1679523183412,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BhJG3ZcYFDRSxv6MfYGO13vRUg_taR-EtVRMlapRpsE"},
{"content":{"body":" * ``String.raw`\\\\`.length === 2``","format":"org.matrix.custom.html","formatted_body":" * <code>String.raw`\\\\`.length === 2</code>","m.new_content":{"body":"``String.raw`\\\\`.length === 2``","format":"org.matrix.custom.html","formatted_body":"<code>String.raw`\\\\`.length === 2</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$BhJG3ZcYFDRSxv6MfYGO13vRUg_taR-EtVRMlapRpsE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523186187,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zBSMDygbFFqffwOgzyQhYHqbF4wTDsTG9h1PvMromv4"},
{"content":{"body":" * ``String.raw`\\\\`.length === 2``, not 1","format":"org.matrix.custom.html","formatted_body":" * <code>String.raw`\\\\`.length === 2</code>, not 1","m.new_content":{"body":"``String.raw`\\\\`.length === 2``, not 1","format":"org.matrix.custom.html","formatted_body":"<code>String.raw`\\\\`.length === 2</code>, not 1","msgtype":"m.text"},"m.relates_to":{"event_id":"$BhJG3ZcYFDRSxv6MfYGO13vRUg_taR-EtVRMlapRpsE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679523192726,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$i_jYpjzr89NmHzvSodwY5klMLagJ_zrJjqV4dhIeDRc"},
{"content":{"body":"Yeah, that's fair. raw is a bit weird, though I wonder if that case is possible to detect.","msgtype":"m.text"},"ts":1679523229408,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$IdpEq_27Mc-Me6IyfTZ08ZQsTYtyVWyQCCZzOouxrw8"},
{"content":{"body":"> <@jridgewell:matrix.org> ``` re`\\` ``` is invalid syntax\n\ntwo backslashes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_WvlbI10iz1RNm-a-TVMK8SLb_NCERtaDTeDXgrNey4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br><code>re`\\`</code> is invalid syntax</blockquote></mx-reply>two backslashes","m.relates_to":{"m.in_reply_to":{"event_id":"$_WvlbI10iz1RNm-a-TVMK8SLb_NCERtaDTeDXgrNey4"}},"msgtype":"m.text"},"ts":1679523275211,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xqmTw2EqnPH00hb2Li7QWctfc5bGcFYSRrL3djCVhFc"},
{"content":{"body":"i.e., Treat `\\\\` as `\\` when parsing from a tagged template literal","format":"org.matrix.custom.html","formatted_body":"i.e., Treat <code>\\\\</code> as <code>\\</code> when parsing from a tagged template literal","msgtype":"m.text"},"ts":1679523286336,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hT11QWNlTi-UgqqKalXv951rRW1-jWfU23cqT3V_y6E"},
{"content":{"body":"See https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aLh1spEECiImadJ_R3hX7vmWq_x53QWJ5RoJwgTztV4?via=matrix.org&via=igalia.com&via=mozilla.org","msgtype":"m.text"},"ts":1679523296143,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Csmm_0f90YxxqW8QPRpR48HGEbNOkAMlSwwF1UVMSxs"},
{"content":{"body":"> And `` re`\\\\` `` only matches `s = \"\\\\\\\\\"`\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>And <code>re`\\\\`</code> only matches <code>s = &quot;\\\\\\\\&quot;</code></p>\n</blockquote>\n","msgtype":"m.text"},"ts":1679523312434,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kjdRahxJMqxTW2kvlYL_lv9aR2L7JCvNXgViXbXvI7w"},
{"content":{"body":"> <@jridgewell:matrix.org> > And `` re`\\\\` `` only matches `s = \"\\\\\\\\\"`\n\nYes, could we not detect that case when parsing from a template tag?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kjdRahxJMqxTW2kvlYL_lv9aR2L7JCvNXgViXbXvI7w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br><blockquote>\n<p>And <code>re`\\\\`</code> only matches <code>s = \"\\\\\\\\\"</code></p>\n</blockquote>\n</blockquote></mx-reply>Yes, could we not detect that case when parsing from a template tag?","m.relates_to":{"m.in_reply_to":{"event_id":"$kjdRahxJMqxTW2kvlYL_lv9aR2L7JCvNXgViXbXvI7w"}},"msgtype":"m.text"},"ts":1679523373105,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ko5YFh_SVmR9146oHldhNNAmzZafqfEOwithdOVPs7g"},
{"content":{"body":"`` /`/ `` and `` /\\\\/ `` cannot be represented","format":"org.matrix.custom.html","formatted_body":"<code>/`/</code> and <code>/\\\\/</code> cannot be represented","msgtype":"m.text"},"ts":1679523381516,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$aj2-K9gDdhPn3eGHO2orDR0SH-Ztw0Y2wvA3i2gm2jE"},
{"content":{"body":"I think `/\\\\/` can be handled. ``/`/`` can't","format":"org.matrix.custom.html","formatted_body":"I think <code>/\\\\/</code> can be handled. <code>/`/</code> can't","msgtype":"m.text"},"ts":1679523451785,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BrmfpjQYuFA1ZEDZusoMk34Zb1T4gi6jVtRroy51hy8"},
{"content":{"body":"Asumu is primarily addressing the feedback that we ought to explore whether runtime-types should be in-scope.","msgtype":"m.text"},"ts":1679524384395,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$mKGgDdpNbJRPUmjz7JS31X2AJd7eIUHL1e_ZHD6gPPU"},
{"content":{"body":"for proponents of runtime types, what do you expect an engine to do if the declared type is incorrect and an engine optimises based on that type? is it now permitted to have a different result? UB?","msgtype":"m.text"},"ts":1679525045374,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$epzPfcatDL8TI9vUHf6-ecp7lZkUE9z8FPTj64lW08s"},
{"content":{"body":"eemeli ljharb I think Asumu is addressing runtime vs compile time in this presentation, and not unification.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I think Asumu is addressing runtime vs compile time in this presentation, and not unification.","msgtype":"m.text"},"ts":1679525065311,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$YTk8Uv4h4okYiePRgx_MXdSU-q8bZhRIk8DVQROi1pA"},
{"content":{"body":"feel free to move mine to the end of the list, but i still want to bring it up if there's time","msgtype":"m.text"},"ts":1679525132392,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BFXk2i7Yb5D61tp6zqq17vuM_dIgM2Nejy2wZfV1QWk"},
{"content":{"body":"Same, because this proposal continues to focus on the technical details of a specific solution, and not addressing their stated main goal.","msgtype":"m.text"},"ts":1679525257777,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$gcdTU8gc7ereCnA6r8YSp9IiIPpW3jQ6wivGA-zszr0"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1679525274753,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$O4JbECH8eAomaLXGlWBPY2YRrYX9ffOSBSaH69GRcK8"},
{"content":{"body":"I agree that this is an important topic for the overall proposal, just not sure if he's prepared to address them","msgtype":"m.text"},"ts":1679525294903,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dZdOsmGji31rxaRxLWaIC7_S8nQh4YBQVHqjM0UCwg4"},
{"content":{"body":"Please feel free to ask these kinds of big-picture questions; they seem important at this stage","msgtype":"m.text"},"ts":1679525328708,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UHTUyA7vVhrJ2tZBb7P5klsWJP88fSCS9XgzJA1SLMw"},
{"content":{"body":"I'm prepared to address it provided we have time, but would encourage that we focus on the current topics","msgtype":"m.text"},"ts":1679525331704,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$uanRt-mOy5EjWG1u9WCwgMDKx1UZjf3oJJKnjmvN_4E"},
{"content":{"body":"Part of what I'll want to say I already filed as an issue: https://github.com/tc39/proposal-type-annotations/issues/171","msgtype":"m.text"},"ts":1679525382371,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$HdXLy6UoY-rmDmAKi8dopRfyR3o0pJJvhrMfU040MqM"},
{"content":{"body":"agree -- folks should be heard, but I think it's reasonable to let folks comment on the presentation topic first.  especially as this is not moving for advancement","msgtype":"m.text"},"ts":1679525441550,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$YuwYrYpDuyyNkvlG4l7ns_f_ydNVyYcJAjYCIPQVsL0"},
{"content":{"body":"I'm personally less interested in \"unforking\" or \"unification\", but more interested in cutting down development time by avoiding a compile step to get from writing code to running code faster.","msgtype":"m.text"},"ts":1679525541887,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$fjCSsjAG-luMisAro7ftbMQlOz9iX0bk3q2fwaBjpGI"},
{"content":{"body":"there have been some truly excellent presentations at this meeting!","msgtype":"m.text"},"ts":1679525583703,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aedmhc97XLAS-aHB5Tau0Y8suBrhH-cTjlznNYQW6Po"},
{"content":{"body":"puts me to shame","msgtype":"m.text"},"ts":1679525586935,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xvS-Itjnjw1kuQcxvP86ClitxzdDYTvi4AHoPaV3_4Q"},
{"content":{"body":"I am going to need to put more effort into mine in the future now","msgtype":"m.text"},"ts":1679525601435,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$M6TzNU6wqy1d5qdFOZSkDfPZprNBq7Fns9fJfGUopAk"},
{"content":{"body":"rbuckton: Agreed. But that's not what's presented as the proposal's motivation.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Agreed. But that's not what's presented as the proposal's motivation.","msgtype":"m.text"},"ts":1679525636069,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$88urdIYx-gBX6jLmSGmRrFNKUzqDVJB4Wigrp6gWrDg"},
{"content":{"body":"And it's not a part of the problem statement that was accepted a year ago.","msgtype":"m.text"},"ts":1679525663327,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$rWsxV8iMY2XcanErX8ZLHUj3IczoXytTLMbzbQ_kanM"},
{"content":{"body":"I think it was part of the problem statement - we talked about the developer friction","msgtype":"m.text"},"ts":1679525707616,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$jzh8AFO-95Tdrqe4g1FW5QN70JpwM2E2V4SmDtjvXi4"},
{"content":{"body":"100% this","m.relates_to":{"event_id":"$M6TzNU6wqy1d5qdFOZSkDfPZprNBq7Fns9fJfGUopAk","is_falling_back":true,"m.in_reply_to":{"event_id":"$tpMqADgDQ4I3ndjXT-62v4BHxg239KVdWY2gYcs4QSw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679525709595,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$icRIcAOZ4gmWTdArW3gGZ_2ljySofci9SN5r8QmOA8Q"},
{"content":{"body":"unrelated:  I am unlikely to be able to attend the end of the day.  Ashley Claymore IBM supports stage 1 for `await dictionary`","format":"org.matrix.custom.html","formatted_body":"unrelated:  I am unlikely to be able to attend the end of the day.  <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a> IBM supports stage 1 for <code>await dictionary</code>","msgtype":"m.text"},"ts":1679525710647,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$BuQQV1dQNC4EpRn-AVUqcesTAg7Asyp-8IFi6cHEAoA"},
{"content":{"body":"we need to talk about unrealistic standards about presentations in TC39 /s","m.relates_to":{"event_id":"$M6TzNU6wqy1d5qdFOZSkDfPZprNBq7Fns9fJfGUopAk","is_falling_back":true,"m.in_reply_to":{"event_id":"$icRIcAOZ4gmWTdArW3gGZ_2ljySofci9SN5r8QmOA8Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679525725369,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$QKP1uOTp0kWf8lOR2P3s2mVZMtxWt9QNomALwr3Ah6Q"},
{"content":{"body":"...are people talking about contracts vs types now?","msgtype":"m.text"},"ts":1679526241331,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yT093xUqJeLgQGOWuDCkujpTkUTI7fUOQpCuhk__R8Q"},
{"content":{"body":"like those are different paradigms","msgtype":"m.text"},"ts":1679526269119,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3U_bWA6-RzY0jwDx9pJC3sr2ubKBnwCHIFZ2CU4-o8c"},
{"content":{"body":"shu: ever heard of gradual typing? checkmate","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: ever heard of gradual typing? checkmate","msgtype":"m.text"},"ts":1679526328355,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jSe6rsIQ5KUFVtxrc4U_YDBxYmjAR0kRpBjLaE1zmFA"},
{"content":{"body":"my brother... ","msgtype":"m.text"},"ts":1679526352446,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FeqiDu7DAUjk5JdoGjAGDBoZa66A2C5O_pzWGIEk4Vs"},
{"content":{"body":"> <@michaelficarra:matrix.org> shu: ever heard of gradual typing? checkmate\n\nTypeScript is gradually typed because you can declare some types and not others!!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jSe6rsIQ5KUFVtxrc4U_YDBxYmjAR0kRpBjLaE1zmFA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: ever heard of gradual typing? checkmate</blockquote></mx-reply>TypeScript is gradually typed because you can declare some types and not others!!","m.relates_to":{"m.in_reply_to":{"event_id":"$jSe6rsIQ5KUFVtxrc4U_YDBxYmjAR0kRpBjLaE1zmFA"}},"msgtype":"m.text"},"ts":1679526357321,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$D0fEM33D0VbxMpQAXhaR0EbfNKUv4IJCx7-8REi-zIM"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1679526362115,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8lvX-ESHhHy2iNNt32BYqTzJcJsMFwEdMZoST_L2wF0"},
{"content":{"body":"No, seriously, given the diversity of meanings of gradual typing (where people unironically use the above form), we deliberately omitted it from this presentation","msgtype":"m.text"},"ts":1679526381723,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o-CxD2MM3dYKtJq1roXgZ5tZZPLHbYS8A5nkF_HVUco"},
{"content":{"body":"Asumu's PhD thesis was on sound gradual typing in Racket (he cited it in the talk!)","msgtype":"m.text"},"ts":1679526400340,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RfyJA1ty5_8jRJ6IRchZfhXloNTl7-u94h0xIQFaQVk"},
{"content":{"body":"yes - when Asumu said there was material on the subject he was referring to his own paper","msgtype":"m.text"},"ts":1679526447556,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$9LzSbilIhPrkwEhGzqUKZVmO2wCWBrTbquW7M6YYEv4"},
{"content":{"body":"tl;dr you might be able to use some fancy compiler techniques to make sound Scheme type enforcement not have way too much of a performance penalty (though it breaks down for JS, as Assume explained)","msgtype":"m.text"},"ts":1679526476168,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dBWkoKPv-yTw4runjjrboSbj6X2Ect7FtUK4oeyCxFs"},
{"content":{"body":" * tl;dr you might be able to use some fancy compiler techniques to make sound Scheme type enforcement not have way too much of a performance penalty (though it breaks down for JS, as Asumu explained)","m.new_content":{"body":"tl;dr you might be able to use some fancy compiler techniques to make sound Scheme type enforcement not have way too much of a performance penalty (though it breaks down for JS, as Asumu explained)","msgtype":"m.text"},"m.relates_to":{"event_id":"$dBWkoKPv-yTw4runjjrboSbj6X2Ect7FtUK4oeyCxFs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679526485941,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Kr7pHn4-ZGGFOzJOXwDq_vdXlM2-x09cz7Sn6dPDjnA"},
{"content":{"body":"> <@littledan:matrix.org> No, seriously, given the diversity of meanings of gradual typing (where people unironically use the above form), we deliberately omitted it from this presentation\n\npeople actually do this? what?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$o-CxD2MM3dYKtJq1roXgZ5tZZPLHbYS8A5nkF_HVUco?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>No, seriously, given the diversity of meanings of gradual typing (where people unironically use the above form), we deliberately omitted it from this presentation</blockquote></mx-reply>people actually do this? what?","m.relates_to":{"m.in_reply_to":{"event_id":"$o-CxD2MM3dYKtJq1roXgZ5tZZPLHbYS8A5nkF_HVUco"}},"msgtype":"m.text"},"ts":1679526492745,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vg_c7nLlQSXu8VnAJ_SoBG_PKzimRLMGuDnWw8QGCQo"},
{"content":{"body":"9min remaining!","msgtype":"m.text"},"ts":1679526501097,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$LdN8LTgcW0JJs2GtZaPNzhnRtj6FBvjBo9vqKyhpGB8"},
{"content":{"body":"> <@michaelficarra:matrix.org> people actually do this? what?\n\nIt is the predominant meaning in our community","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vg_c7nLlQSXu8VnAJ_SoBG_PKzimRLMGuDnWw8QGCQo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>people actually do this? what?</blockquote></mx-reply>It is the predominant meaning in our community","m.relates_to":{"m.in_reply_to":{"event_id":"$vg_c7nLlQSXu8VnAJ_SoBG_PKzimRLMGuDnWw8QGCQo"}},"msgtype":"m.text"},"ts":1679526516444,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rdLbCCMRIlG0yTtK_vEbv-5LF2r60OoY8FE1r3tORrQ"},
{"content":{"body":"I don't understand DE's claim that all the things we've been adding to the language since ES6 are \"unifying\" the language.","msgtype":"m.text"},"ts":1679526740651,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$N546J04gRj-Qch3n92gORqJ2I2eppCdOLcxs1fio7Lw"},
{"content":{"body":"We have 3 min remaining on this item","msgtype":"m.text"},"ts":1679526863501,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$yiJWhHcmV4zuGVJl-cG5xthQrAoDCwJY6yd3CRKodzw"},
{"content":{"body":"is there seriously no [NLTH] in the proposed grammar?","msgtype":"m.text"},"ts":1679527324428,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZtJhRxXnvn1CVNIDzzsfrg5774YS3B1JtogfX6ya_2w"},
{"content":{"body":"Is this only concerned with `< stuff here >` syntax?","format":"org.matrix.custom.html","formatted_body":"Is this only concerned with <code>&lt; stuff here &gt;</code> syntax?","msgtype":"m.text"},"ts":1679527363063,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ujXbmAnGA-VxnAibHSitIFftLd98PnwNJjNOyCH1RZs"},
{"content":{"body":"requiring balanced braces would also probably be a good minimum bar","msgtype":"m.text"},"ts":1679527412788,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XVkR26OAJPP51q6Cu_TTJE1rxgRmNMC4K6DNbRECzDk"},
{"content":{"body":"> <@michaelficarra:matrix.org> is there seriously no [NLTH] in the proposed grammar?\n\nNLTH means \"no line terminator\" ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZtJhRxXnvn1CVNIDzzsfrg5774YS3B1JtogfX6ya_2w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>is there seriously no [NLTH] in the proposed grammar?</blockquote></mx-reply>NLTH means &quot;no line terminator&quot; ?","m.relates_to":{"m.in_reply_to":{"event_id":"$ZtJhRxXnvn1CVNIDzzsfrg5774YS3B1JtogfX6ya_2w"}},"msgtype":"m.text"},"ts":1679527414590,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$eCsXQcm-h3eH_qrd9keu7Zn_1446Aax5AUFu9gm9Wt0"},
{"content":{"body":"HE Shi-Jun: yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: yes","msgtype":"m.text"},"ts":1679527423201,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZaCz5Se7ZaIfddRmErzHSHNSePFbCqWFEEtv74_Hq-Q"},
{"content":{"body":"> <@waldemarh:matrix.org> I don't understand DE's claim that all the things we've been adding to the language since ES6 are \"unifying\" the language.\n\nIf I said \"all\", then that was misspeaking by me; I do think it's been a big theme in our work.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$N546J04gRj-Qch3n92gORqJ2I2eppCdOLcxs1fio7Lw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>I don&#39;t understand DE&#39;s claim that all the things we&#39;ve been adding to the language since ES6 are &quot;unifying&quot; the language.</blockquote></mx-reply>If I said &quot;all&quot;, then that was misspeaking by me; I do think it's been a big theme in our work.","m.relates_to":{"m.in_reply_to":{"event_id":"$N546J04gRj-Qch3n92gORqJ2I2eppCdOLcxs1fio7Lw"}},"msgtype":"m.text"},"ts":1679527443347,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ls7to0hzJW8NoeqvqkyUFda34ehOZIc2kYRhhZBBuOA"},
{"content":{"body":"Michael Ficarra: So type is complex and seems need line terminators.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: So type is complex and seems need line terminators.","msgtype":"m.text"},"ts":1679527458021,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$KDmPwI88WbyND2BLquYMVywYqUSTM42slfhHPx7gC5U"},
{"content":{"body":"Even when we add things to the standard library like Array.prototype.group or Temporal, we're unifying the ecosystem where previously people had to use various different libraries to get that functionality.","msgtype":"m.text"},"ts":1679527487999,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZQiZECBGcCSSZsrFmuP7nL91gG88pl9WBGEjYR1pY_U"},
{"content":{"body":"this is sort of the normal flow of work for a standards body, I think","msgtype":"m.text"},"ts":1679527498955,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IDS1gWikK5Vvw05Qob1gf10WKEksQjw7lVCiiZT2xw8"},
{"content":{"body":"littledan, danielrosenwasser : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>, <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.","msgtype":"m.text"},"ts":1679527551277,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$It-WDu7RD0eGqSQZ0W0tMf2VYc6m3J34BjbYsv0cCeM"},
{"content":{"body":"`{ a: b } =>` can't be an arrow function or arrow type? I would expect `{}` to be far more limited than `()` and `[]`, at least.","format":"org.matrix.custom.html","formatted_body":"<code>{ a: b } =&gt;</code> can't be an arrow function or arrow type? I would expect <code>{}</code> to be far more limited than <code>()</code> and <code>[]</code>, at least.","msgtype":"m.text"},"ts":1679527552370,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Wow26gPOUw1TDqHODwogWAkTNUS3F-zHg5GOcgP6Aqg"},
{"content":{"body":"Also, this `foo < a ;` is addressed by the \"turbofish\" syntax `::<>`, i.e. `foo::< a`","format":"org.matrix.custom.html","formatted_body":"Also, this <code>foo &lt; a ;</code> is addressed by the &quot;turbofish&quot; syntax <code>::&lt;&gt;</code>, i.e. <code>foo::&lt; a</code>","msgtype":"m.text"},"ts":1679527601830,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4RF0oaC_O1iRpcMqZ8207Z5SS9G_TycIGQgXgPEBvj0"},
{"content":{"body":"> <@michaelficarra:matrix.org> is there seriously no [NLTH] in the proposed grammar?\n\nYeah, fundamentally you don't get into this general token soup space without a paren, so you just have space for a token, or one of the productions that's explicitly there","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZtJhRxXnvn1CVNIDzzsfrg5774YS3B1JtogfX6ya_2w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>is there seriously no [NLTH] in the proposed grammar?</blockquote></mx-reply>Yeah, fundamentally you don't get into this general token soup space without a paren, so you just have space for a token, or one of the productions that's explicitly there","m.relates_to":{"m.in_reply_to":{"event_id":"$ZtJhRxXnvn1CVNIDzzsfrg5774YS3B1JtogfX6ya_2w"}},"msgtype":"m.text"},"ts":1679527611411,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nfhaZ9cwGE_UAm6N0JUUni_s-vahhBBLSSmjvjD-iIo"},
{"content":{"body":"> <@eemeli:mozilla.org> littledan, danielrosenwasser : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.\n\nIt's fine to ask us to clarify the explainer more, and I'd be happy to talk with you in more detail about how/where our current readme or presentation fails to make this case. At the same time, I'm a bit offended by the implication that the champion group doesn't know what it's trying to get at, just because the documents weren't written in a way which was sufficiently clear/persuasive to everyone.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$It-WDu7RD0eGqSQZ0W0tMf2VYc6m3J34BjbYsv0cCeM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli:mozilla.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>, <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.</blockquote></mx-reply>It's fine to ask us to clarify the explainer more, and I'd be happy to talk with you in more detail about how/where our current readme or presentation fails to make this case. At the same time, I'm a bit offended by the implication that the champion group doesn't know what it's trying to get at, just because the documents weren't written in a way which was sufficiently clear/persuasive to everyone.","m.relates_to":{"m.in_reply_to":{"event_id":"$It-WDu7RD0eGqSQZ0W0tMf2VYc6m3J34BjbYsv0cCeM"}},"msgtype":"m.text"},"ts":1679527729971,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZhDOkx8yO2W9wdEUiPIJFYW_LvB7TFi-M3IVqBlLRQ0"},
{"content":{"body":"1min","msgtype":"m.text"},"ts":1679528061834,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$wTL3bNdpq7j7KEDyCJ1XSKz5WM07lAdNpALsChaykqk"},
{"content":{"body":"Does anyone know what the issue numbers that Waldemar is referring to?","msgtype":"m.text"},"ts":1679528223815,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9W7s73EwYqdGBIzW815x_JgFxq9_qmGum2rPtbzel90"},
{"content":{"body":"Unfortunately, people keep saying \"turbofish\", so I'll clarify that that means `::<...>`","format":"org.matrix.custom.html","formatted_body":"Unfortunately, people keep saying &quot;turbofish&quot;, so I'll clarify that that means <code>::&lt;...&gt;</code>","msgtype":"m.text"},"ts":1679528249382,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$ZUAb1eKMRiSDh8s0r3Sg65LMndiZ0YiAtCHNTIRoJ8Q"},
{"content":{"body":"Yes, sorry. \"turbofish\" is the term used in Rust","msgtype":"m.text"},"ts":1679528288347,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4wrUMhAeevRDAwtdu2eCAd0JbkLKMfqNuGFequqn2qc"},
{"content":{"body":"why is ordinary fish","msgtype":"m.text"},"ts":1679528303484,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$X8WmDRpostrULhbyU2JGt0QswH6vQq2tVCCsUpfr81M"},
{"content":{"body":" * what is ordinary fish","m.new_content":{"body":"what is ordinary fish","msgtype":"m.text"},"m.relates_to":{"event_id":"$X8WmDRpostrULhbyU2JGt0QswH6vQq2tVCCsUpfr81M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528308855,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cGhSNY0tTpEfzCcDzSng0HwZ0GnD-l5kD31HAzNTg3s"},
{"content":{"body":"> <@eemeli:mozilla.org> littledan, danielrosenwasser : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.\n\nhttps://devblogs.microsoft.com/typescript/a-proposal-for-type-syntax-in-javascript/#whats-next\n\n> This isn’t a sure-fire thing – there are many valuable perspectives within the committee, and we do expect some amount of skepticism. A proposal like this will receive a lot of feedback and appropriate scrutiny. It may involve lots design changes along the way, and may take years to yield results.\n>\n> But if we pull this all off, we have the chance to make one of the most impactful improvements to the world of JavaScript. We’re excited by that, and we hope you are too.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$It-WDu7RD0eGqSQZ0W0tMf2VYc6m3J34BjbYsv0cCeM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli:mozilla.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>, <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> : Is the big-picture vision that you talked about presented in text anywhere? I think that's the sort of motivation and explanation that I'm most missing here, because I don't see how type annotations can get us from here to there.</blockquote></mx-reply><p>https://devblogs.microsoft.com/typescript/a-proposal-for-type-syntax-in-javascript/#whats-next</p>\n<blockquote>\n<p>This isn’t a sure-fire thing – there are many valuable perspectives within the committee, and we do expect some amount of skepticism. A proposal like this will receive a lot of feedback and appropriate scrutiny. It may involve lots design changes along the way, and may take years to yield results.</p>\n<p>But if we pull this all off, we have the chance to make one of the most impactful improvements to the world of JavaScript. We’re excited by that, and we hope you are too.</p>\n</blockquote>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$It-WDu7RD0eGqSQZ0W0tMf2VYc6m3J34BjbYsv0cCeM"}},"msgtype":"m.text"},"ts":1679528326155,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$DLHxGDBLE8cghUZfEXQeMoIgVM9vSoWNU-JZiHGtkpo"},
{"content":{"body":" * Yes, sorry. \"turbofish\" is the term used in Rust, per: https://blog.rust-lang.org/2021/09/09/Rust-1.55.0.html#dedication","m.new_content":{"body":"Yes, sorry. \"turbofish\" is the term used in Rust, per: https://blog.rust-lang.org/2021/09/09/Rust-1.55.0.html#dedication","msgtype":"m.text"},"m.relates_to":{"event_id":"$4wrUMhAeevRDAwtdu2eCAd0JbkLKMfqNuGFequqn2qc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528341189,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0k_xUyBWz5uiCfX14DRzkc_EHiwAdDbow_90ZDuuciA"},
{"content":{"body":"`><>`?","format":"org.matrix.custom.html","formatted_body":"<code>&gt;&lt;&gt;</code>?","m.relates_to":{"event_id":"$X8WmDRpostrULhbyU2JGt0QswH6vQq2tVCCsUpfr81M","is_falling_back":true,"m.in_reply_to":{"event_id":"$X8WmDRpostrULhbyU2JGt0QswH6vQq2tVCCsUpfr81M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1679528347280,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_TOnhqPWG6VRsRIyQDgZ428YPCdieeD9zFfRG7zaZCs"},
{"content":{"body":"shu: We've seen TS make tricky transitions before, e.g., with class fields. I'm not really sure what more details would make sense at this stage.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: We've seen TS make tricky transitions before, e.g., with class fields. I'm not really sure what more details would make sense at this stage.","msgtype":"m.text"},"ts":1679528373208,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dGsi73hGDYYlB_GhQC11VGT1Q4nlIa2WpM35DbWe3ro"},
{"content":{"body":"shu: Maybe you could be more concrete with what kind of thing you're looking for?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: Maybe you could be more concrete with what kind of thing you're looking for?","msgtype":"m.text"},"ts":1679528397773,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rzsg9YVpZngqg-FhrsIuI2R-0ZBZg_TDa-P0hGPHx_E"},
{"content":{"body":"Waldemar's slides are at https://docs.google.com/presentation/d/1TLGdvGfOn2wl-_i_HfrfpgFkdffrhCnisowdkOiebB8/edit#slide=id.g21db78ad531_0_44 ; the two linked issues are https://github.com/tc39/proposal-type-annotations/issues/116 and https://github.com/tc39/proposal-type-annotations/issues/103","msgtype":"m.text"},"ts":1679528408591,"senderName":"scottwhittaker","senderId":"@scottwhittaker:matrix.org","id":"$TwrlTkJSOXKUxKsZDtZ9IxOUIbiqcMquSpJmB3Qh9aw"},
{"content":{"body":"littledan: how did manage the transition with class fields? are old style class fields no longer supported?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: how did manage the transition with class fields? are old style class fields no longer supported?","msgtype":"m.text"},"ts":1679528421645,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hq-eLOU4gwGPEi0JpinoTIAVGPbAy7NSEbnJrs0eyAo"},
{"content":{"body":"`--useDefineForClassFields`","format":"org.matrix.custom.html","formatted_body":"<code>--useDefineForClassFields</code>","msgtype":"m.text"},"ts":1679528441625,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$L4Sb7BnxFD4PLxp-hOcL1MnWfryiXls-kny3DKWI0VU"},
{"content":{"body":"it is turned on as soon as your target is `esWhateverVersionTheyGotStandardized`","format":"org.matrix.custom.html","formatted_body":"it is turned on as soon as your target is <code>esWhateverVersionTheyGotStandardized</code>","msgtype":"m.text"},"ts":1679528467296,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$McjzVJwAh85raPDRSzHEDD38P1B5NstQXzmHGyCIkB0"},
{"content":{"body":" * it is turned on as soon as your output `--target` is `esWhateverVersionTheyGotStandardized`","format":"org.matrix.custom.html","formatted_body":" * it is turned on as soon as your output <code>--target</code> is <code>esWhateverVersionTheyGotStandardized</code>","m.new_content":{"body":"it is turned on as soon as your output `--target` is `esWhateverVersionTheyGotStandardized`","format":"org.matrix.custom.html","formatted_body":"it is turned on as soon as your output <code>--target</code> is <code>esWhateverVersionTheyGotStandardized</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$McjzVJwAh85raPDRSzHEDD38P1B5NstQXzmHGyCIkB0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528476551,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$YCPXL4Aai28_SYchAmR92zUtOjoJnyUYEN2r3yafcnI"},
{"content":{"body":"are both kind of fields code exists in the wild and will continue to exist?","msgtype":"m.text"},"ts":1679528483265,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$znaVPsZBVaOhcD1CUOnoVh7KthScs7dT5V947GXL7GA"},
{"content":{"body":" * do both kind of fields code exist in the wild and will continue to exist?","m.new_content":{"body":"do both kind of fields code exist in the wild and will continue to exist?","msgtype":"m.text"},"m.relates_to":{"event_id":"$znaVPsZBVaOhcD1CUOnoVh7KthScs7dT5V947GXL7GA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528498852,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bRiY0Qf_X2FqxpDtpd7-WZLvsIdVgrhXtMPRM0rk8Cs"},
{"content":{"body":"The class fields transition is significantly harder, because it's different semantics for the same syntax. This is just a syntax subset, completely statically visible with no ambiguity as to how it should run.","msgtype":"m.text"},"ts":1679528543447,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-QQlQUhQ5cDUFNNxuHr_DFA2LCrr--cdJ0--tWOWh0A"},
{"content":{"body":"Until decorator metadata is standardized and adopted, set-based fields need to keep existing, unfortunately. I'm glad we're finally getting there.","msgtype":"m.text"},"ts":1679528574484,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IN3vAXdfRA1gElwJFIW5CrZlNU_woP-_OeTe4M7B9yI"},
{"content":{"body":"sffc: `await.all` is proposing syntax to match the existing API, not syntax instead, to be clear","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: <code>await.all</code> is proposing syntax to match the existing API, not syntax instead, to be clear","msgtype":"m.text"},"ts":1679528577584,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rqFj9mTlgcoz1eLZ4Xy4pXi86DGyPHU7TrqZDTYkHhk"},
{"content":{"body":"(Responsible) evolution of TypeScript is in some ways easier than evolving JS because it's already accepted that regular upgrades of TypeScript are mild (responsibly managed) breaking changes.  People accept this and spend effort upgrading.  The benefits are worth it.","msgtype":"m.text"},"ts":1679528595745,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$lMgLrclsp12nphcjiaMOWn4-1oBQeWTe2rYMKMnaZkE"},
{"content":{"body":"I think the framing is partially about transitions, it's about \"can we find tasteful alternatives to express the same concepts\"","msgtype":"m.text"},"ts":1679528603948,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$eeOZWfsNoTgYn4u89NPSRX40QsWqsJGtz1ZzByh9ovA"},
{"content":{"body":"shu: function call params are already solved because you can pass and return an object :-p","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: function call params are already solved because you can pass and return an object :-p","msgtype":"m.text"},"ts":1679528607338,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WSS4pyRf7VqtQpYl5in4pKztF4KOK-MIm0MEk6kAOOY"},
{"content":{"body":"and so this is also already solved by writing your own code?","msgtype":"m.text"},"ts":1679528633296,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UQkNHOX9Mcg6II0SQ5mMaM02AqptxaO80mCiDGWRlmU"},
{"content":{"body":"Another example might be TypeScript's type cast syntax. We've always had `<T>value`, but added `value as T` to avoid ambiguity with JSX/TSX. We may never fully move everyone to `value as T`, but most TS code I see today uses `as`.","format":"org.matrix.custom.html","formatted_body":"Another example might be TypeScript's type cast syntax. We've always had <code>&lt;T&gt;value</code>, but added <code>value as T</code> to avoid ambiguity with JSX/TSX. We may never fully move everyone to <code>value as T</code>, but most TS code I see today uses <code>as</code>.","msgtype":"m.text"},"ts":1679528640081,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$xUEcAelCeT6yLJSU9xuktQQjYN1jnrge5ZZp0j8KUPs"},
{"content":{"body":"> <@shuyuguo:matrix.org> and so this is also already solved by writing your own code?\n\nfor a function you author, yes. not for Promise combinators","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UQkNHOX9Mcg6II0SQ5mMaM02AqptxaO80mCiDGWRlmU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>and so this is also already solved by writing your own code?</blockquote></mx-reply>for a function you author, yes. not for Promise combinators","m.relates_to":{"m.in_reply_to":{"event_id":"$UQkNHOX9Mcg6II0SQ5mMaM02AqptxaO80mCiDGWRlmU"}},"msgtype":"m.text"},"ts":1679528652686,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-KC0WeosJqgH7XXHXEr97QePFlFo0PnTnkD1M_y13tY"},
{"content":{"body":"> <@shuyuguo:matrix.org> and so this is also already solved by writing your own code?\n\n * for a function you author, yes. not for Promise combinators (at least, not without a mildly complex helper function)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UQkNHOX9Mcg6II0SQ5mMaM02AqptxaO80mCiDGWRlmU?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>and so this is also already solved by writing your own code?</blockquote></mx-reply> * for a function you author, yes. not for Promise combinators (at least, not without a mildly complex helper function)","m.new_content":{"body":"for a function you author, yes. not for Promise combinators (at least, not without a mildly complex helper function)","format":"org.matrix.custom.html","formatted_body":"for a function you author, yes. not for Promise combinators (at least, not without a mildly complex helper function)","msgtype":"m.text"},"m.relates_to":{"event_id":"$-KC0WeosJqgH7XXHXEr97QePFlFo0PnTnkD1M_y13tY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528666454,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MmGuB6bVn3c3Yr72vphTP5S5IPIFHKY51zD40CQ5mQg"},
{"content":{"body":"rbuckton: i don't define non-divergence by \"most code don't diverge\", but by \"no code diverges\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i don't define non-divergence by &quot;most code don't diverge&quot;, but by &quot;no code diverges&quot;","msgtype":"m.text"},"ts":1679528693030,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sNJXNcA45muXK8xrz1jzleUvxFcHRv3NGe1KK8OfPGc"},
{"content":{"body":"HE Shi-Jun: re your queue item, what would `async let` do exactly?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: re your queue item, what would <code>async let</code> do exactly?","msgtype":"m.text"},"ts":1679528701933,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$cMgpMx7fUZKRiY0aki8V5PrQOS50GsrJG2bPTxqd9Z0"},
{"content":{"body":" * HE Shi-Jun: re your queue item, what does `async let` do exactly in swift?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: re your queue item, what does <code>async let</code> do exactly in swift?","m.new_content":{"body":"HE Shi-Jun: re your queue item, what does `async let` do exactly in swift?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: re your queue item, what does <code>async let</code> do exactly in swift?","msgtype":"m.text"},"m.relates_to":{"event_id":"$cMgpMx7fUZKRiY0aki8V5PrQOS50GsrJG2bPTxqd9Z0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679528730294,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pUIJuv9_tbSXIePSCC0B0XgsRt7Cl8tIg8mKOqTgjNo"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> I think the framing is partially about transitions, it's about \"can we find tasteful alternatives to express the same concepts\"\n\nso type arguments on invocations - we prefer the existing syntax, but\n\n1. they're rarely specified, and typically inferred\n2. Rust (everyone's new favorite language) has shown that people are fine with something like `f::<T, U>(...)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eeOZWfsNoTgYn4u89NPSRX40QsWqsJGtz1ZzByh9ovA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>I think the framing is partially about transitions, it&#39;s about &quot;can we find tasteful alternatives to express the same concepts&quot;</blockquote></mx-reply><p>so type arguments on invocations - we prefer the existing syntax, but</p>\n<ol>\n<li>they're rarely specified, and typically inferred</li>\n<li>Rust (everyone's new favorite language) has shown that people are fine with something like `f::&lt;T, U&gt;(...)</li>\n</ol>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$eeOZWfsNoTgYn4u89NPSRX40QsWqsJGtz1ZzByh9ovA"}},"msgtype":"m.text"},"ts":1679528736177,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$sKxrfj3irOyZ_KvRkpk4yXij4qXc-kE1ENzl5_CWjXQ"},
{"content":{"body":"not easy to explain in one sentence","msgtype":"m.text"},"ts":1679528739208,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$VRg10XVcKlvS8m1SO2MTOBGRaqKm80yX63b4vIw8VFU"},
{"content":{"body":"I would rather see syntax here... like:\n```\nawait const {\n  shape = getShape(),\n  color = getColor(),\n  mass = getMass(),\n};\n```","format":"org.matrix.custom.html","formatted_body":"<p>I would rather see syntax here... like:</p>\n<pre><code>await const {\n  shape = getShape(),\n  color = getColor(),\n  mass = getMass(),\n};\n</code></pre>\n","msgtype":"m.text"},"ts":1679528741488,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$z8UBLan_sclLJ8AKmNDxma2IqiADdFwpL25yK9dnis4"},
{"content":{"body":"ljharb: https://www.avanderlee.com/swift/async-let-asynchronous-functions-in-parallel/","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: https://www.avanderlee.com/swift/async-let-asynchronous-functions-in-parallel/","msgtype":"m.text"},"ts":1679528743954,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ADTlV9ZZDG3Q5JYdWVQUNnoHzmBAsHw5BXJ4eVKSoco"},
{"content":{"body":"> <@justinfagnani:matrix.org> I would rather see syntax here... like:\n> ```\n> await const {\n>   shape = getShape(),\n>   color = getColor(),\n>   mass = getMass(),\n> };\n> ```\n\nimo that seems like a great followon after it already exists as API","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$z8UBLan_sclLJ8AKmNDxma2IqiADdFwpL25yK9dnis4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@justinfagnani:matrix.org\">@justinfagnani:matrix.org</a><br><p>I would rather see syntax here... like:</p>\n<pre><code>await const {\n  shape = getShape(),\n  color = getColor(),\n  mass = getMass(),\n};\n</code></pre>\n</blockquote></mx-reply>imo that seems like a great followon after it already exists as API","m.relates_to":{"m.in_reply_to":{"event_id":"$z8UBLan_sclLJ8AKmNDxma2IqiADdFwpL25yK9dnis4"}},"msgtype":"m.text"},"ts":1679528762424,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sssDdd3cPE85RoLRF1VfRYel48uf3YjkwWwVW45AS0M"},
{"content":{"body":"it's neat but doesn't translate naturally to JS","msgtype":"m.text"},"ts":1679528764535,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZAV2WZ3hupJh-B8JMGwaTV3Ux1wIimyRsgN-8edexLk"},
{"content":{"body":"so new code can use the `::<>` syntax in TS, use the old syntax in TS, and in JS you'd have to pick one","format":"org.matrix.custom.html","formatted_body":"so new code can use the <code>::&lt;&gt;</code> syntax in TS, use the old syntax in TS, and in JS you'd have to pick one","msgtype":"m.text"},"ts":1679528779557,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$N7xTnfGNGt7v5W_p2BukMnAumX8CIp0VfDdaCtT_6C4"},
{"content":{"body":"yes, and now you have diverged...?","msgtype":"m.text"},"ts":1679528791590,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6Sgpil-47g3JiFeLDb6TwuSBt-Yf1CpMnclc1il3EAQ"},
{"content":{"body":"> <@bakkot:matrix.org> it's neat but doesn't translate naturally to JS\n\nkind of seems like \"just don't await the promise until later\"?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZAV2WZ3hupJh-B8JMGwaTV3Ux1wIimyRsgN-8edexLk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>it&#39;s neat but doesn&#39;t translate naturally to JS</blockquote></mx-reply>kind of seems like &quot;just don't await the promise until later&quot;?","m.relates_to":{"m.in_reply_to":{"event_id":"$ZAV2WZ3hupJh-B8JMGwaTV3Ux1wIimyRsgN-8edexLk"}},"msgtype":"m.text"},"ts":1679528792796,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ayRId5eavj4ewpAharPMM3l1CkgEdlBFop5TnO8BAIY"},
{"content":{"body":"yyyyeah kinda","msgtype":"m.text"},"ts":1679528802227,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hBZRR8i7hUIBcXH6_1EVBDJ0zpQWz69MEpGBB08oO-Q"},
{"content":{"body":"> <@shuyuguo:matrix.org> rbuckton: i don't define non-divergence by \"most code don't diverge\", but by \"no code diverges\"\n\nSorry, Shu, I'm trying to understand, what are you getting at? E.g., for the `<T>value` syntax, what harm does it do if TS has a mode that accepts that, and JS never will, but it might support a large other subset of TS/Flow?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sNJXNcA45muXK8xrz1jzleUvxFcHRv3NGe1KK8OfPGc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i don't define non-divergence by \"most code don't diverge\", but by \"no code diverges\"</blockquote></mx-reply>Sorry, Shu, I'm trying to understand, what are you getting at? E.g., for the <code>&lt;T&gt;value</code> syntax, what harm does it do if TS has a mode that accepts that, and JS never will, but it might support a large other subset of TS/Flow?","m.relates_to":{"m.in_reply_to":{"event_id":"$sNJXNcA45muXK8xrz1jzleUvxFcHRv3NGe1KK8OfPGc"}},"msgtype":"m.text"},"ts":1679528804509,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$igHCSj6i0ogccnH3taVfbyPaWobAE8QF99NXuBHRn6U"},
{"content":{"body":"but there's better syntax for it","msgtype":"m.text"},"ts":1679528805775,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kJYbvuqXJrzGFNAwEfFCoFZvJTXIdeWJgWJcwATlyco"},
{"content":{"body":"`async let` have some difficulty in JS (eg. variable capture), but I hope we can explore the possibility.","format":"org.matrix.custom.html","formatted_body":"<code>async let</code> have some difficulty in JS (eg. variable capture), but I hope we can explore the possibility.","msgtype":"m.text"},"ts":1679528816946,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$qMkQGbnfZ5xwCjiUKAXKPI00rgTsPkBM31AsZijh3_U"},
{"content":{"body":"i'm sure we could but that sounds like a different proposal maybe?","msgtype":"m.text"},"ts":1679528832087,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LwGKL1HSVKaTg2aW1_JmCgJnpmkefxQRO6Lh7_pROo4"},
{"content":{"body":"I think the important thing for the TSX transitions was, can people \"live in TSX\"? and in that sense, it was a complete success","msgtype":"m.text"},"ts":1679528834927,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0PKktw8cVPTD5ut-fFBKOyRbmHB-NxjIMXEt5wwszn0"},
{"content":{"body":"it needs to be that the syntax that Type Annotations supports is enough to live in; it doesn't need to take over all existing code IMO.","msgtype":"m.text"},"ts":1679528858368,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9aeM4utbeQ_XjfE97iFsKYUnnE7a_wrb7keQ2EhwtF4"},
{"content":{"body":"> <@ljharb:matrix.org> i'm sure we could but that sounds like a different proposal maybe?\n\nIf it's for the same problem, shouldn't it in one proposal?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LwGKL1HSVKaTg2aW1_JmCgJnpmkefxQRO6Lh7_pROo4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i&#39;m sure we could but that sounds like a different proposal maybe?</blockquote></mx-reply>If it's for the same problem, shouldn't it in one proposal?","m.relates_to":{"m.in_reply_to":{"event_id":"$LwGKL1HSVKaTg2aW1_JmCgJnpmkefxQRO6Lh7_pROo4"}},"msgtype":"m.text"},"ts":1679528865723,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_aEOjteMIy0iohrLN0cMt1-Xs9szhCmjpvMOScbbX0Y"},
{"content":{"body":"is it the same problem?","msgtype":"m.text"},"ts":1679528871037,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Mq0t8o0B7trMPU9b9qbY8UDbWwUpeclkxKij8LCvGYo"},
{"content":{"body":"I think an `all` analogue is fine, the others seem to only make sense on unnamed collections","format":"org.matrix.custom.html","formatted_body":"I think an <code>all</code> analogue is fine, the others seem to only make sense on unnamed collections","msgtype":"m.text"},"ts":1679528871559,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MzgVZCuZabfkHn3ZqTM6mLNxgsUWELIbG_8qGU3WnhE"},
{"content":{"body":"I don't even know what I'd use `Promise.raceOwnProperties` for.","format":"org.matrix.custom.html","formatted_body":"I don't even know what I'd use <code>Promise.raceOwnProperties</code> for.","msgtype":"m.text"},"ts":1679528872954,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$91GgwdT80V8zwGo8XAn6nfW0DogoBKCLYlie1iTe3wU"},
{"content":{"body":"i'd use it for allSettled the same as i'd use it for all. the other two i don't see a use case for tho","msgtype":"m.text"},"ts":1679528895097,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BvsBJV_vLzSomqehYIPB4_bwmNQVfGQ3UUdEAkZtMZI"},
{"content":{"body":"But how do you tell which one won the race?","msgtype":"m.text"},"ts":1679528916438,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$5rI_FqWopH3HQNvpgmYWI4m3PNI410t3Y8uNlWXr47o"},
{"content":{"body":"> <@littledan:matrix.org> Sorry, Shu, I'm trying to understand, what are you getting at? E.g., for the `<T>value` syntax, what harm does it do if TS has a mode that accepts that, and JS never will, but it might support a large other subset of TS/Flow?\n\ni understand that the whole point of this proposal is to bring TS syntax \"into the fold\". the harm is that if the promise is actually \"we will work to converge TS and JS syntax in the future\", that sounds like ecosystem divergence to me and i do not have the risk appetite for that","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$igHCSj6i0ogccnH3taVfbyPaWobAE8QF99NXuBHRn6U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Sorry, Shu, I'm trying to understand, what are you getting at? E.g., for the <code>&lt;T&gt;value</code> syntax, what harm does it do if TS has a mode that accepts that, and JS never will, but it might support a large other subset of TS/Flow?</blockquote></mx-reply>i understand that the whole point of this proposal is to bring TS syntax &quot;into the fold&quot;. the harm is that if the promise is actually &quot;we will work to converge TS and JS syntax in the future&quot;, that sounds like ecosystem divergence to me and i do not have the risk appetite for that","m.relates_to":{"m.in_reply_to":{"event_id":"$igHCSj6i0ogccnH3taVfbyPaWobAE8QF99NXuBHRn6U"}},"msgtype":"m.text"},"ts":1679528926620,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MTm5k1eQiuysKjZAAOVIWmaGDROZpKtugiWscAHfQYo"},
{"content":{"body":"> <@ljharb:matrix.org> is it the same problem?\n\nat least it could solve this problem IMO.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Mq0t8o0B7trMPU9b9qbY8UDbWwUpeclkxKij8LCvGYo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>is it the same problem?</blockquote></mx-reply>at least it could solve this problem IMO.","m.relates_to":{"m.in_reply_to":{"event_id":"$Mq0t8o0B7trMPU9b9qbY8UDbWwUpeclkxKij8LCvGYo"}},"msgtype":"m.text"},"ts":1679528928451,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$7ywMH99-S6uJedvvqD_uy3_v7LY1FcYzxHnwJLT2Olc"},
{"content":{"body":"> <@michaelficarra:matrix.org> I think an `all` analogue is fine, the others seem to only make sense on unnamed collections\n\nallSettled makes sense on named collections","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MzgVZCuZabfkHn3ZqTM6mLNxgsUWELIbG_8qGU3WnhE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I think an <code>all</code> analogue is fine, the others seem to only make sense on unnamed collections</blockquote></mx-reply>allSettled makes sense on named collections","m.relates_to":{"m.in_reply_to":{"event_id":"$MzgVZCuZabfkHn3ZqTM6mLNxgsUWELIbG_8qGU3WnhE"}},"msgtype":"m.text"},"ts":1679528930602,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xOE1H0Vbpqf6S_msbaV6ZRDWVdhFgb8kHtM3-WHf6hc"},
{"content":{"body":"the others, no","msgtype":"m.text"},"ts":1679528935774,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vBOKND2M1EbpPJFFxN3WTA-J-KOkmzgJwYwAkmynYkY"},
{"content":{"body":"or at least less so","msgtype":"m.text"},"ts":1679528949488,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D5j-qYfdvgQS4eukyRnwSVJxg8mgNtLdiVjmCy-p9-U"},
{"content":{"body":"> <@haxjs:matrix.org> at least it could solve this problem IMO.\n\ni'm not sure it would, but we would certainly explore that kind of thing in stage 1","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7ywMH99-S6uJedvvqD_uy3_v7LY1FcYzxHnwJLT2Olc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>at least it could solve this problem IMO.</blockquote></mx-reply>i'm not sure it would, but we would certainly explore that kind of thing in stage 1","m.relates_to":{"m.in_reply_to":{"event_id":"$7ywMH99-S6uJedvvqD_uy3_v7LY1FcYzxHnwJLT2Olc"}},"msgtype":"m.text"},"ts":1679528960035,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UQeKs5HPtzAVlG9UZhhLaqxFxoFaqFAyFJW-3SXPJZg"},
{"content":{"body":"okay yeah I buy that","msgtype":"m.text"},"ts":1679528962976,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dRmqABzZLsyJVXrwVW5bLvB7FiT1A6seGIo1nDm9byc"},
{"content":{"body":"> <@haxjs:matrix.org> at least it could solve this problem IMO.\n\n * i'm not sure it would, but we would certainly explore that kind of thing in stage 1. altho i think solving it with syntax is a much harder sell prior to API existing.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7ywMH99-S6uJedvvqD_uy3_v7LY1FcYzxHnwJLT2Olc?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>at least it could solve this problem IMO.</blockquote></mx-reply> * i'm not sure it would, but we would certainly explore that kind of thing in stage 1. altho i think solving it with syntax is a much harder sell prior to API existing.","m.new_content":{"body":"i'm not sure it would, but we would certainly explore that kind of thing in stage 1. altho i think solving it with syntax is a much harder sell prior to API existing.","format":"org.matrix.custom.html","formatted_body":"i'm not sure it would, but we would certainly explore that kind of thing in stage 1. altho i think solving it with syntax is a much harder sell prior to API existing.","msgtype":"m.text"},"m.relates_to":{"event_id":"$UQeKs5HPtzAVlG9UZhhLaqxFxoFaqFAyFJW-3SXPJZg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679529025839,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7pUT05ovOvNqlQNUapclNmUfrLDZxIWPNrPUdJfarow"},
{"content":{"body":"> <@shuyuguo:matrix.org> i understand that the whole point of this proposal is to bring TS syntax \"into the fold\". the harm is that if the promise is actually \"we will work to converge TS and JS syntax in the future\", that sounds like ecosystem divergence to me and i do not have the risk appetite for that\n\nYeah, this is why the syntax *is* aligned with TS and Flow for the most part. If we end up doing something like add `::<`, it would be in conjunction with the change on the TS side (it's not even in the current grammar yet).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MTm5k1eQiuysKjZAAOVIWmaGDROZpKtugiWscAHfQYo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i understand that the whole point of this proposal is to bring TS syntax \"into the fold\". the harm is that if the promise is actually \"we will work to converge TS and JS syntax in the future\", that sounds like ecosystem divergence to me and i do not have the risk appetite for that</blockquote></mx-reply>Yeah, this is why the syntax <em>is</em> aligned with TS and Flow for the most part. If we end up doing something like add <code>::&lt;</code>, it would be in conjunction with the change on the TS side (it's not even in the current grammar yet).","m.relates_to":{"m.in_reply_to":{"event_id":"$MTm5k1eQiuysKjZAAOVIWmaGDROZpKtugiWscAHfQYo"}},"msgtype":"m.text"},"ts":1679529032458,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5Z5fQhYyRpQm4l5ADhbtH7i4jh-dOAScL4Z1sD896tg"},
{"content":{"body":"and i am saying, \"for the most part\" isn't enough for my risk appetite","msgtype":"m.text"},"ts":1679529053434,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0O6hyh4hjvpVTvwadX84_R2lPNP1gmAseYSoePj_eUQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> and i am saying, \"for the most part\" isn't enough for my risk appetite\n\nmaybe this would be a good thing to dig into in another presentation focused on the syntax?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0O6hyh4hjvpVTvwadX84_R2lPNP1gmAseYSoePj_eUQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>and i am saying, &quot;for the most part&quot; isn&#39;t enough for my risk appetite</blockquote></mx-reply>maybe this would be a good thing to dig into in another presentation focused on the syntax?","m.relates_to":{"m.in_reply_to":{"event_id":"$0O6hyh4hjvpVTvwadX84_R2lPNP1gmAseYSoePj_eUQ"}},"msgtype":"m.text"},"ts":1679529078666,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZXDQUw6PEGqkKA8u6he22vpx7IhdN4HTqCjY4ngMHCI"},
{"content":{"body":"I've used `Promise.all(promises)` to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to \"that's what we had at the time'","format":"org.matrix.custom.html","formatted_body":"I've used <code>Promise.all(promises)</code> to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to &quot;that's what we had at the time'","msgtype":"m.text"},"ts":1679529097002,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9GP_6j6NKzssizIYFolIvxwHPnXn9fiaO1E-c1c2-iE"},
{"content":{"body":" * I've used `Promise.all(promises)` to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to \"that's what we had at the time\"","format":"org.matrix.custom.html","formatted_body":" * I've used <code>Promise.all(promises)</code> to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to &quot;that's what we had at the time&quot;","m.new_content":{"body":"I've used `Promise.all(promises)` to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to \"that's what we had at the time\"","format":"org.matrix.custom.html","formatted_body":"I've used <code>Promise.all(promises)</code> to avoid a waterfall when queueing up operations where I only need to wait for completion, so I wouldn't say the fact that its list-oriented is just due to &quot;that's what we had at the time&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$9GP_6j6NKzssizIYFolIvxwHPnXn9fiaO1E-c1c2-iE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1679529100393,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TOrp2rvCunjWZSYH-Eh80Hye43BNEnfVyb_9wubEigQ"},
{"content":{"body":"yes, sorry, I was speaking loosely","msgtype":"m.text"},"ts":1679529131620,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fDWgC9AI0rvsQJNSArXfQgYy5DsykWkub1U0xmqI7FM"},
{"content":{"body":"there's really two uses - when you have a homogenous list, where you're probably not destructuring, and where you have a heterogenous list, where you probably are","msgtype":"m.text"},"ts":1679529151920,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Mn0nWzyLTAJul2A-3bAnER82FpxEQ7D5vwykuZLX3kg"},
{"content":{"body":"Promise.all is perfect for the first case but awkward for the second","msgtype":"m.text"},"ts":1679529162634,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4YEgrrvxIvBAQFdYOZ2VpaLX0RwCk07vJIcB2lIIh5M"},
{"content":{"body":"Or when you want to avoid repetition for non-degenerate cases like how the example started out.","msgtype":"m.text"},"ts":1679529236984,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TJTjx01iqxBaa9nLlO_oO7-hA912lVo9MdALoE77pY8"},
{"content":{"body":"`const { foo, bar } = Promise.ownProperties({ foo: getFoo(), bar: getBar() })` isn't an improvement over `const [foo, bar] = Promise.all([getFoo(), getBar()])` until you reach a level of complexity where that becomes unmanageable (as was illustrated in the example).","format":"org.matrix.custom.html","formatted_body":"<code>const { foo, bar } = Promise.ownProperties({ foo: getFoo(), bar: getBar() })</code> isn't an improvement over <code>const [foo, bar] = Promise.all([getFoo(), getBar()])</code> until you reach a level of complexity where that becomes unmanageable (as was illustrated in the example).","msgtype":"m.text"},"ts":1679529317187,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LZxkO2lWXLRvzIcp2xFHgDZhsIj2xMgg_VtpM1T_oJg"},
{"content":{"body":"I think 2 items is probably the limit though","msgtype":"m.text"},"ts":1679529399047,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pXp7ZZy371ssdPyrysBqgIA-wglJdXng-dvEaUUXqyE"},
{"content":{"body":"like when I have APIs which return 2 values I might return an unnamed pair, but as soon as it's 3 I'm going to name them instead","msgtype":"m.text"},"ts":1679529416520,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$shT0AgjlS8D6mQ8gHSWI7mKULoYWc_8asgR1dRTJnOY"},
{"content":{"body":"the difference with `await Promise.all()` and function parameters is that you need to lists to use Promise.all vs one args list at the call site for a function (of course a function as a parameter list, but we can't eliminate that)","format":"org.matrix.custom.html","formatted_body":"the difference with <code>await Promise.all()</code> and function parameters is that you need to lists to use Promise.all vs one args list at the call site for a function (of course a function as a parameter list, but we can't eliminate that)","msgtype":"m.text"},"ts":1679529471099,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$QLwlS2ErKthfyQOovDIrfRk-Tyr4bEDzH4LQBTRvtDY"},
{"content":{"body":"That said, I'm very much in favor of this as its fairly easy to exhaust that minimum complexity bar for `Promise.all()`. I'm not terribly enthusiastic about `await.` syntax, in general. I think an API approach is the right direction for now. ","format":"org.matrix.custom.html","formatted_body":"That said, I'm very much in favor of this as its fairly easy to exhaust that minimum complexity bar for <code>Promise.all()</code>. I'm not terribly enthusiastic about <code>await.</code> syntax, in general. I think an API approach is the right direction for now.","msgtype":"m.text"},"ts":1679529486302,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9cfvS9xd_1Gt_Zt7_wYKtRg8Tiqts7-XZtVwF4KEGNg"},
{"content":{"body":"it's cumbersome to keep these lists in sync, and hard to read when they get long","msgtype":"m.text"},"ts":1679529488592,"senderName":"justinfagnani","senderId":"@justinfagnani:matrix.org","id":"$HNslPmQvECzoln0Ie8aCjJz4C4kKzMAVUDPSL-PErdI"},
{"content":{"body":"okay, on the motivation front i am now convinced, and this boils down to kevin's reason: \"Promise.all is special, because the ordering of its input list is not semantically meaningful, and so is harder to keep track of mentally. except you _have_ to keep track of it mentally because it must match up to the output list\"","format":"org.matrix.custom.html","formatted_body":"okay, on the motivation front i am now convinced, and this boils down to kevin's reason: &quot;Promise.all is special, because the ordering of its input list is not semantically meaningful, and so is harder to keep track of mentally. except you <em>have</em> to keep track of it mentally because it must match up to the output list&quot;","msgtype":"m.text"},"ts":1679529493403,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dkjdYikHsfkc3NUKz9hTRJeNDwWxCNo7I_Z7dDI5ihI"}
]