[
{"content":{"body":"Good morning, all.  Plenary begins in one hour.","msgtype":"m.text"},"ts":1679500707741,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$zIaUJAiCCfCxD3ihqTvnBKBZ5Plbt2pMiRKXu87xSt0"},
{"content":{"body":"For those interested, I have two draft PRs up that illustrate the potential cover grammars for `await using` and `async using`:\n- `await using`: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15\n- `async using`: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16","format":"org.matrix.custom.html","formatted_body":"<p>For those interested, I have two draft PRs up that illustrate the potential cover grammars for <code>await using</code> and <code>async using</code>:</p>\n<ul>\n<li><code>await using</code>: https://github.com/tc39/proposal-async-explicit-resource-management/pull/15</li>\n<li><code>async using</code>: https://github.com/tc39/proposal-async-explicit-resource-management/pull/16</li>\n</ul>\n","msgtype":"m.text"},"ts":1679502436857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ong5nxyPuCjy9JMqR_AbcofPHKCGHHoEgUIFLCgB3Bw"},
{"content":{"body":"slides for the awkwardly done election (sorry about that y'all) https://docs.google.com/presentation/d/1xQ7huTJQsbcfFM6nhN7Tk3uBUf3h7FHkroM1m56ueZE/edit#slide=id.g6e7d7a6a09_0_98","msgtype":"m.text"},"ts":1679505516107,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cbGzbe9ih3BtSDaQ_-As-uw_9iuKeUKBA0ruGxzu4yo"},
{"content":{"body":"I thought it was fine, I had no problem with the process, personally","msgtype":"m.text"},"ts":1679505615551,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$oAMbz0TigxLE-t0W2ZqM3SIZmDUDGxjpekFu_N_nODg"},
{"content":{"body":"ah nice, i like source as a keyword","msgtype":"m.text"},"ts":1679505705300,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LOXLjlU92Jbi5_EiK0s8aGpl-3-jCFAw0PW28LibBcQ"},
{"content":{"body":"I already love this presentation","msgtype":"m.text"},"ts":1679505730487,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$m3b_hbbC2xFZBIKJx4mPSrKdZjR-iezbIaGWYU-wj8s"},
{"content":{"body":"Wait, he said \"next slide\" right?","msgtype":"m.text"},"ts":1679506445592,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$W4okFIIV8O_e0urkljhA_eymdEgOyJWPkRT_XEN20k0"},
{"content":{"body":"I'm still seeing \"Import phase syntax\" slide","msgtype":"m.text"},"ts":1679506454416,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$CzBc-tMmGRZ9mIp5p0jdxLIz7kosoXT8xA289rnjg7Q"},
{"content":{"body":"we're on spec: ordering of fetches slide","msgtype":"m.text"},"ts":1679506477723,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Svvvj1hQlI6jpPzaKez1RVTqHhyw_u57Vvqou8-0EvM"},
{"content":{"body":"now on spec: idempotence is unchanged","msgtype":"m.text"},"ts":1679506490522,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ek8S0DZzhkBtz2htep0V9XTVVYygelNXRxgCeXPTKAw"},
{"content":{"body":"https://docs.google.com/presentation/d/1F62Jia5erIm6m6nqkm_2pFIlNLOVF0E4ewrVRytSJEs/edit","msgtype":"m.text"},"ts":1679506505291,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$F5rHgiyFp9QAdvN8BMWSoQSXd23LujIImOYeFMEvnus"},
{"content":{"body":"this seems like a thing that we, as language designers, would notice and/or care about, but users of the language don't want to care about this distinction or have to pass around an awkward intermediate opaque value because of it","msgtype":"m.text"},"ts":1679507311390,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$G6MQGAeKKV4G6XBTtrCXWhZNq9LhKcEcbKS34wGJYp8"},
{"content":{"body":"feature request: import/export queue as YAML","msgtype":"m.text"},"ts":1679507370448,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Q9p0ldgOPPGkDeZQfjgM8Pk6Va7nADOsd4Zc4hqzjxo"},
{"content":{"body":"some though:\n```js\nimport source wasm from './x.wasm'\n// and\nimport wasm from './x.wasm'\n```\n\nboth give us reference to undeniable host objects.","format":"org.matrix.custom.html","formatted_body":"<p>some though:</p>\n<pre><code class=\"language-js\">import source wasm from './x.wasm'\n// and\nimport wasm from './x.wasm'\n</code></pre>\n<p>both give us reference to undeniable host objects.</p>\n","msgtype":"m.text"},"ts":1679507397964,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$yddxOa60oAWkI8RnCm2qRTQ1hhO1jdcSKnljs0KHvJI"},
{"content":{"body":"I mean that depends on the embedder, right?","msgtype":"m.text"},"ts":1679507437451,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CymYbsMkRPcWapdXaLTguxSIVSq9EpBVsbuDtaM-Vvo"},
{"content":{"body":"the embedder could add hooks for denying that, surely","msgtype":"m.text"},"ts":1679507481377,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fQbjFtW3nkOhzi_ugsaNuOH8kuKwRCHE4bUE99yZifs"},
{"content":{"body":"yes. since it already happens today, IMO we no need to care about deniability in this syntax.","msgtype":"m.text"},"ts":1679507482347,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ZillCkMwNzkNBim3LIy6Dyb0RJz7x6cNSH5E0fZbkRk"}
]