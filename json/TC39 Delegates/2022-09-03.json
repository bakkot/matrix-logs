[
{"content":{"body":"so an `instanceof` check, you mean? that doesn't seem that useful; you can do that yourself","format":"org.matrix.custom.html","formatted_body":"so an <code>instanceof</code> check, you mean? that doesn't seem that useful; you can do that yourself","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so an `instanceof` check, you mean? that doesn't seem that useful; you can do that yourself","mimetype":"text/plain"},{"body":"so an <code>instanceof</code> check, you mean? that doesn't seem that useful; you can do that yourself","mimetype":"text/html"}]},"ts":1662167936824,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zrQ6P-B9y7qzS5GTCbl6_EBUYRbNb7kBl9ZwZuY8tFo"},
{"content":{"body":"no, not an instanceof check, those are forgeable and don't work across realms. a brand check.","msgtype":"m.text","org.matrix.msc1767.text":"no, not an instanceof check, those are forgeable and don't work across realms. a brand check."},"ts":1662181549750,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XucoVGupQvhfTLHzOv6bKwgI6Eap-z7kU5oIZnjUdvY"},
{"content":{"body":"ljharb: what brand do you imagine checking? there are a bunch of different built-in iterators in the language and the web platform, and they don't have a common brand","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: what brand do you imagine checking? there are a bunch of different built-in iterators in the language and the web platform, and they don't have a common brand","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: what brand do you imagine checking? there are a bunch of different built-in iterators in the language and the web platform, and they don't have a common brand","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: what brand do you imagine checking? there are a bunch of different built-in iterators in the language and the web platform, and they don't have a common brand","mimetype":"text/html"}]},"ts":1662220822548,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LkTmJTJDAFEQVo4sKr1Ff7ItjIgHY0ytBMFxJKNjwFI"},
{"content":{"body":"the whole point of iterator being an interface is that the interface is implemented by a bunch of different classes, including userland classes","msgtype":"m.text","org.matrix.msc1767.text":"the whole point of iterator being an interface is that the interface is implemented by a bunch of different classes, including userland classes"},"ts":1662220846177,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0uVhzus0sXlHPR2kWerNq0kqoto4s72OibPXZt6lOL8"},
{"content":{"body":"IMO the appropriate level for a brand check here would be to revert the whole Symbol.toStringTag change in the first place... what a bad idea of a feature. Not clear if it makes sense to \"chip away at it\" as much as I'm sympathetic with the idea to try.","msgtype":"m.text","org.matrix.msc1767.text":"IMO the appropriate level for a brand check here would be to revert the whole Symbol.toStringTag change in the first place... what a bad idea of a feature. Not clear if it makes sense to \"chip away at it\" as much as I'm sympathetic with the idea to try."},"ts":1662220970840,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kc8Oizd7f-MoM0hnBMtajFtTE4PbBwC3J2-Zgz13YPU"},
{"content":{"body":"it's not unthinkable to add a brand just for this purpose in https://tc39.es/proposal-iterator-helpers/#sec-iterator but I don't see the point","msgtype":"m.text","org.matrix.msc1767.text":"it's not unthinkable to add a brand just for this purpose in https://tc39.es/proposal-iterator-helpers/#sec-iterator but I don't see the point"},"ts":1662221161455,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jL5cq_xESstvPSzZbOKZisDDhXnaLA3j7V53gd_Wr3k"},
{"content":{"body":"(do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)","msgtype":"m.text","org.matrix.msc1767.text":"(do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)"},"ts":1662221201126,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DSmuRZ_-KpuQ5HIb3i7_Ka4Oty2AbizQChjCFFtycnc"},
{"content":{"body":" * (do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)","m.new_content":{"body":"(do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)","msgtype":"m.text","org.matrix.msc1767.text":"(do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)"},"m.relates_to":{"event_id":"$DSmuRZ_-KpuQ5HIb3i7_Ka4Oty2AbizQChjCFFtycnc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * (do we want to start telling people, they shouldn't be pasting iterator helpers onto a base class by messing with a prototype chain? that seems like a useful mode to me)"},"ts":1662221221926,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9TefNOsFWCsBsZLQ36gMANV7_krKV1d_sKvhM25yNXA"}
]