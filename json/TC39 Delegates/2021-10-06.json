[
{"content":{"body":"Several Stage 0 proposals have been transferred to the tc39 GitHub organization. Is there a particular policy about this? https://github.com/tc39/proposals#onboarding-existing-proposals doesnâ€™t talk about Stage 0.","msgtype":"m.text"},"ts":1633530723017,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$0-eudAKKwAo3eD-q1K6wmOdOVsenJ8EJ1jGCb4upr4E"},
{"content":{"body":"are internal slots case sensitive?","msgtype":"m.text"},"ts":1633531306463,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$TiE5j5zT0y93p8TMaV-zV4fT59W5QSJDuPLHPK_8na0"},
{"content":{"body":"https://tc39.es/ecma262/#sec-object-internal-methods-and-internal-slots doesn't specify that","msgtype":"m.text"},"ts":1633531566926,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$oFd0_m3Q5P25ZlQeA44eleQbwJb-780E7XTVZy9y_T8"},
{"content":{"body":"yeah, treat them as case sensitive","msgtype":"m.text"},"ts":1633532271448,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FGAPOiOu-pd8hq0WsOMOFUQG3Dte7wkB-Mzwn0TSjSU"},
{"content":{"body":"i'd be against every introducing slot names that differ only in casing","msgtype":"m.text"},"ts":1633532281159,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C18bMEumm5Fqs6y0BwGX1UWSbqQaU5RLkJ_O9hWZ9Gs"},
{"content":{"body":"but even so just treat them as case sensitive","msgtype":"m.text"},"ts":1633532288196,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hQWKB_F9pla8GaFnb2CXFcfJr5rYyiiyJ9UH9UZrwss"},
{"content":{"body":"I mean more about access. Can I access `[[Foo]]` using `[[foo]]`?","format":"org.matrix.custom.html","formatted_body":"I mean more about access. Can I access <code>[[Foo]]</code> using <code>[[foo]]</code>?","msgtype":"m.text"},"ts":1633532430551,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$7HyimtCWLZ3GosyETXnseE_6mW1IRd9nNfaA1nYXMX4"},
{"content":{"body":"semi-related. is the `[[Description]]` that a Symbol \"holds\" also an 'internal slot'? The spec seems to say that slots are only on objects, so would it be technically incorrect to say that symbols have an internal slot?","format":"org.matrix.custom.html","formatted_body":"semi-related. is the <code>[[Description]]</code> that a Symbol &quot;holds&quot; also an 'internal slot'? The spec seems to say that slots are only on objects, so would it be technically incorrect to say that symbols have an internal slot?","msgtype":"m.text"},"ts":1633533084610,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$E3EpBm6Z7vCMJ9pWfbTrNS-9W33b8Gaet0oxwJt0vCY"},
{"content":{"body":"ryzokuken: no, use [[Foo]]","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: no, use [[Foo]]","msgtype":"m.text"},"ts":1633536136519,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gcGUlAiSrTiZHgDV8fM57gHEm4bTP5Fkpbp4pkLx1EY"},
{"content":{"body":"Ashley Claymore: not technically, but conceptually yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: not technically, but conceptually yes","msgtype":"m.text"},"ts":1633538539358,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$aCJFSuDYsZh1KN9AV1Y0wHvmwC8ODlBCteeZww9xwuA"},
{"content":{"body":"thanks shu  ðŸ™‚","format":"org.matrix.custom.html","formatted_body":"thanks <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>  ðŸ™‚","msgtype":"m.text"},"ts":1633539691475,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$BhqSU90miI1XM0v2B1kXKFMHm1l8_6fyuqfmOQSfzDU"},
{"content":{"body":"PSA: nobody has signed up for the next incubator call yet. the topic is Proxy performance https://github.com/tc39/Reflector/issues/399","msgtype":"m.text"},"ts":1633543110344,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BmYLV3E49crvybkEYZG06cD9o0Jcb21Nj1QmwMOHQEo"},
{"content":{"body":"> <@jschoi:matrix.org> Several Stage 0 proposals have been transferred to the tc39 GitHub organization. Is there a particular policy about this? https://github.com/tc39/proposals#onboarding-existing-proposals doesnâ€™t talk about Stage 0.\n\nthe policy is that stage 1+ proposals *must* be transferred; stage 0 proposals can be, but for scalability, we should probably only transfer the ones that have been discussed in a plenary","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0-eudAKKwAo3eD-q1K6wmOdOVsenJ8EJ1jGCb4upr4E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br>Several Stage 0 proposals have been transferred to the tc39 GitHub organization. Is there a particular policy about this? https://github.com/tc39/proposals#onboarding-existing-proposals doesnâ€™t talk about Stage 0.</blockquote></mx-reply>the policy is that stage 1+ proposals <em>must</em> be transferred; stage 0 proposals can be, but for scalability, we should probably only transfer the ones that have been discussed in a plenary","m.relates_to":{"m.in_reply_to":{"event_id":"$0-eudAKKwAo3eD-q1K6wmOdOVsenJ8EJ1jGCb4upr4E"}},"msgtype":"m.text"},"ts":1633554952018,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$T0S7ZEoyRxUcQcrsv8cTmlDgyfsutZ4-bJ-vxbCTRco"},
{"content":{"body":"Can the `Contains` spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:\n```\nIf _node_ Contains `using const`, ...\n```","format":"org.matrix.custom.html","formatted_body":"<p>Can the <code>Contains</code> spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:</p>\n<pre><code>If _node_ Contains `using const`, ...\n</code></pre>\n","msgtype":"m.text"},"ts":1633559070814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rI2raIOvPx8bfUulvWT75OXuJpfNJ-1UV88Q3v7ju8g"},
{"content":{"body":" * Can the `Contains` spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:\n```\nIf _node_ Contains `using const`, ...\n```","format":"org.matrix.custom.html","formatted_body":" * <p>Can the <code>Contains</code> spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:</p>\n<pre><code>If _node_ Contains `using const`, ...\n</code></pre>\n","m.new_content":{"body":"Can the `Contains` spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:\n```\nIf _node_ Contains `using const`, ...\n```","format":"org.matrix.custom.html","formatted_body":"<p>Can the <code>Contains</code> spec op be used with a sequence of terminals, or would I need to contain the terminals in a nonterminal to use Contains? For example, would the following be valid spec text?:</p>\n<pre><code>If _node_ Contains `using const`, ...\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$rI2raIOvPx8bfUulvWT75OXuJpfNJ-1UV88Q3v7ju8g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633559091754,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LdI23FZalSsRHJ2t6mU0gUIg-6cKfJJodL0RVjm4oVE"},
{"content":{"body":"rbuckton: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","msgtype":"m.text"},"ts":1633559513239,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2MEoFp6YqcDnIXAEOdLk077xLg-dLiP2ichYWg5RTvQ"},
{"content":{"body":" * rbuckton: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","m.new_content":{"body":"rbuckton: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: as it is currently written, it cannot. it walks over the children of a parse node one at a time checking if each is an instance of the argument to Contains, which would not work when the thing you are looking for is spread out across multiple children.","msgtype":"m.text"},"m.relates_to":{"event_id":"$2MEoFp6YqcDnIXAEOdLk077xLg-dLiP2ichYWg5RTvQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633559529096,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HEJPDynDv41qQ2NNh9u7uNMi7-rVd9KNEHNHKWrI2Ns"}
]