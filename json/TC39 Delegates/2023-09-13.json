[
{"content":{"body":"anybody interested in picking up the date parsing proposal? https://twitter.com/domenic/status/1701888428244173166","msgtype":"m.text"},"ts":1694602303236,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ajKrMcYsiklZCCH2OVG5wTMNRgU9X0PQilv3GdynxQk"},
{"content":{"body":"this problem isn't going away on its own","msgtype":"m.text"},"ts":1694602312389,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kAenQZzWq5x8AsyGBAoGRjdov7jFpRCcdfSDI_d_CR4"},
{"content":{"body":"I’d actually plead to leave the problem unresolved and simply declare `Date` as broken.","format":"org.matrix.custom.html","formatted_body":"I’d actually plead to leave the problem unresolved and simply declare <code>Date</code> as broken.","msgtype":"m.text"},"ts":1694616869431,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$KpgtzqKNSoKa04GLXQ9YsxpcPS9ULJuTr9olMjY12B0"},
{"content":{"body":"Temporal already solves the issue.","msgtype":"m.text"},"ts":1694616877949,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$L0k8IitYQqlFHDkxqHMPFdTqVWIgW_pLZpzbqi9FoDY"},
{"content":{"body":"So the canonical solution should be to migrate away from `Date` to `Temporal` instead of patching and modifying existing `Date` behaviour","format":"org.matrix.custom.html","formatted_body":"So the canonical solution should be to migrate away from <code>Date</code> to <code>Temporal</code> instead of patching and modifying existing <code>Date</code> behaviour","msgtype":"m.text"},"ts":1694616916852,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$2sxSFDeQI-d48aADHx2s__U-OYisALJuOYxnRkUfzj8"},
{"content":{"body":"Especially as modifying the existing behaviour carries a risk of breaking the Web for anyone that has fixed this issue based on browser identification","msgtype":"m.text"},"ts":1694616954037,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$hSapffCwszt8Lx11ChqhTKKnbv_DxIYNUgDHbwmc70g"},
{"content":{"body":"(That’s of course just my highly biased 0.02€)","msgtype":"m.text"},"ts":1694616984481,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$ggVaxcJCApg9fEk3zv1H6uPeHix-Hx5qXSU5bdOIrDY"},
{"content":{"body":"also, it seems like a single project aiming to match another needing to reimplement another engine's date parser, one time, isn't much evidence of it being \"needed\"","msgtype":"m.text"},"ts":1694617053437,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YDgTzG58RvK_55ZprNjMKnW3-E7IZK5qsaVjm2GJbwg"},
{"content":{"body":"pipobscure: you aren't considering that engine implementors are one audience of the specification","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pipobscure:matrix.org\">pipobscure</a>: you aren't considering that engine implementors are one audience of the specification","msgtype":"m.text"},"ts":1694617232116,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0d25SOOO4c3Orb3Q-GuatRSkixs7N4T8TUkA9NOHxQc"},
{"content":{"body":"there's no way for a new engine to implement Date.parse in a web-compatible way from scratch via the spec","msgtype":"m.text"},"ts":1694617271609,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nAZg2JAO8ld4rjiN5mLmnnh23bCFlu8gUlkPUyE58zk"},
{"content":{"body":"> <@michaelficarra:matrix.org> pipobscure: you aren't considering that engine implementors are one audience of the specification\n\nI don’t understand what you mean. Could you explain?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%240d25SOOO4c3Orb3Q-GuatRSkixs7N4T8TUkA9NOHxQc\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@pipobscure:matrix.org\">pipobscure</a>: you aren't considering that engine implementors are one audience of the specification</blockquote></mx-reply>I don’t understand what you mean. Could you explain?","m.relates_to":{"m.in_reply_to":{"event_id":"$0d25SOOO4c3Orb3Q-GuatRSkixs7N4T8TUkA9NOHxQc"}},"msgtype":"m.text"},"ts":1694617293887,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$XLPus7ZBTbQ3PwDxLfwJhFGpxdMIAtSLEtliMrX4jIo"},
{"content":{"body":"> <@pipobscure:matrix.org> I don’t understand what you mean. Could you explain?\n\n(as in of course engine implementors are an audience of the spec)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24XLPus7ZBTbQ3PwDxLfwJhFGpxdMIAtSLEtliMrX4jIo\">In reply to</a> <a href=\"https://matrix.to/#/@pipobscure:matrix.org\">@pipobscure:matrix.org</a><br>I don’t understand what you mean. Could you explain?</blockquote></mx-reply>(as in of course engine implementors are an audience of the spec)","m.relates_to":{"m.in_reply_to":{"event_id":"$XLPus7ZBTbQ3PwDxLfwJhFGpxdMIAtSLEtliMrX4jIo"}},"msgtype":"m.text"},"ts":1694617318970,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$FvQU7ICmSAOsz6K5EWCx4-DoQ2lTSGCCiSD3o-BU29A"},
{"content":{"body":"pipobscure: people writing new JS code are not the only ones who may be reading the spec to undstand how APIs are meant to behave","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pipobscure:matrix.org\">pipobscure</a>: people writing new JS code are not the only ones who may be reading the spec to undstand how APIs are meant to behave","msgtype":"m.text"},"ts":1694617331116,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HwBrg6dVasj5Y-jsbWRpQwLvjK2FhVxdxfVTj466QO0"},
{"content":{"body":"> <@michaelficarra:matrix.org> there's no way for a new engine to implement Date.parse in a web-compatible way from scratch via the spec\n\nThat’s the key part: NEW implementors","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24nAZg2JAO8ld4rjiN5mLmnnh23bCFlu8gUlkPUyE58zk\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>there's no way for a new engine to implement Date.parse in a web-compatible way from scratch via the spec</blockquote></mx-reply>That’s the key part: NEW implementors","m.relates_to":{"m.in_reply_to":{"event_id":"$nAZg2JAO8ld4rjiN5mLmnnh23bCFlu8gUlkPUyE58zk"}},"msgtype":"m.text"},"ts":1694617342832,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$K5ifh0bvuV6uVlrTzLFZKf5suMd7jmBEnPn5SonXuUY"},
{"content":{"body":"True that","msgtype":"m.text"},"ts":1694617345829,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$Rnw87NpwRn4nAWPqpGgtFQczi8bxkO94HfYMKDYjLzA"},
{"content":{"body":"Web compatibility depends on particular behaviour of Data.parse that is not encoded in the spec. It is our job to address that.","msgtype":"m.text"},"ts":1694617421000,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$U2WsNkSx6b1HoXzp7GYRq43jVcuvFhG3iAI-nImvKKg"},
{"content":{"body":"I don't see how that could be argued","msgtype":"m.text"},"ts":1694617437996,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$sUw6d0CARSAD5xcjlE6iBpC8DhtUAgm7eGOGtgep1Xc"},
{"content":{"body":"Is there precedence for “Let’s specify what new implementations should do while leaving all existing implementations alone.” ?","msgtype":"m.text"},"ts":1694617445318,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$u22-L5eVNaQFKYjPxIS48dIxHXhfy8nrrOI2Qqo0a48"},
{"content":{"body":" * I don't see how that could be argued against","m.new_content":{"body":"I don't see how that could be argued against","msgtype":"m.text"},"m.relates_to":{"event_id":"$sUw6d0CARSAD5xcjlE6iBpC8DhtUAgm7eGOGtgep1Xc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694617448748,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$sbZ1UoTuW5W6NGOAAxBJZud40nBFyyPE6uOg2U6w4Ak"},
{"content":{"body":"yes, all the time","msgtype":"m.text"},"ts":1694617464582,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uOPY05eY1pAc_SsbFkzIq2A89XTQTqTOn-jEeaSVbCo"},
{"content":{"body":"and it's \"precedent\"","msgtype":"m.text"},"ts":1694617474733,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aU604qY0fIhQ-pP1McrJ_a7Xst66zMcJtDIy4-2lAuw"},
{"content":{"body":"unfortunately attempts to gradually specify that in the past have been blocked, and the requirement seems to be \"specify everything all at once, or specify nothing\", hence nothing's been done","msgtype":"m.text"},"ts":1694617590355,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-nWzVXMaup1T0KMAauhzLaU9gMsjJWN7M5SiWDLMP-E"},
{"content":{"body":"error stacks is in the same boat","msgtype":"m.text"},"ts":1694617600679,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6yy08TiKTKFf7fw5s5AxOy66AGMa2c-6IbDiO9Yh_Is"},
{"content":{"body":"> <@pipobscure:matrix.org> I’d actually plead to leave the problem unresolved and simply declare `Date` as broken.\n\nI would love to live in a world where we could get people to stop using old features, but alas I suspect it's not going to happen","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$KpgtzqKNSoKa04GLXQ9YsxpcPS9ULJuTr9olMjY12B0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@pipobscure:matrix.org\">@pipobscure:matrix.org</a><br>I’d actually plead to leave the problem unresolved and simply declare <code>Date</code> as broken.</blockquote></mx-reply>I would love to live in a world where we could get people to stop using old features, but alas I suspect it's not going to happen","m.relates_to":{"m.in_reply_to":{"event_id":"$KpgtzqKNSoKa04GLXQ9YsxpcPS9ULJuTr9olMjY12B0"}},"msgtype":"m.text"},"ts":1694620223974,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ecRjsG7T54YWnEFQgsgdQJQTfQZp-9ARCqTuypOKYas"},
{"content":{"body":"so I think it's still worth putting effort in, even for existing implementations, so we can avoid stuff like https://bugzilla.mozilla.org/show_bug.cgi?id=1825938","msgtype":"m.text"},"ts":1694620238502,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$B9jInJJkAGuQJ9ESR0c96BAtR7IwL1dtLSIN3L8nk8A"},
{"content":{"body":"this is like, \"we can't have justice, that's why we have the law\", except it's \"we can't tell people what to do, so we have standards that reflect reality\"","msgtype":"m.text"},"ts":1694620382147,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1LE8XRzCS1Sa52fb_Qd3mkcptiIq9L3qtx0tLqC9x5U"},
{"content":{"body":"okay now that we all agree that clarifying Date.parse is, indeed, still valuable, does anybody want to take up this proposal again?","msgtype":"m.text"},"ts":1694621860984,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mt4JeGXOBF3PFUt8OxoCLdRG-4tPWEriA6pCYmroET4"},
{"content":{"body":"if the goal is \"_specify behavior of `Date.parse` that is required for web compatibility but not defined in the specification_\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","format":"org.matrix.custom.html","formatted_body":"if the goal is \"<em>specify behavior of <code>Date.parse</code> that is required for web compatibility but not defined in the specification</em>\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","msgtype":"m.text"},"ts":1694622140668,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$AzV7uXYx3z9Ibs4HJl6SyxF598iA9hXttEg2qFEBz9A"},
{"content":{"body":" * if the goal is \"_specify behavior of `Date.parse` that is required for web compatibility but not currently documented_\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","format":"org.matrix.custom.html","formatted_body":" * if the goal is \"<em>specify behavior of <code>Date.parse</code> that is required for web compatibility but not currently documented</em>\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","m.new_content":{"body":"if the goal is \"_specify behavior of `Date.parse` that is required for web compatibility but not currently documented_\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","format":"org.matrix.custom.html","formatted_body":"if the goal is \"<em>specify behavior of <code>Date.parse</code> that is required for web compatibility but not currently documented</em>\", I don't think https://github.com/tc39/proposal-uniform-interchange-date-parsing applies—it would be a brand new proposal","msgtype":"m.text"},"m.relates_to":{"event_id":"$AzV7uXYx3z9Ibs4HJl6SyxF598iA9hXttEg2qFEBz9A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1694622197718,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$6VTX2dkEyu1LIGpDkRUwaEMTz8IOkLqMvyOdLvfLdZk"},
{"content":{"body":"This seems like it could be done somewhat incrementally: make a list of the cases where some implementation has needed to implement any particular behavior, and write that down","msgtype":"m.text"},"ts":1694622235243,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TOB7s5_9xDllp5YYxqy6ABj7sknxsWCkd-AFhRuZrWY"},
{"content":{"body":"and then say that things not in one of those forms are implementation-defined","msgtype":"m.text"},"ts":1694622248620,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$b0lpx5rmL1VhFyXJ_D6ll2_N_g9b9cx6XhJRWaFZUE4"},
{"content":{"body":"and then whenever a new one gets hit, add it to the list","msgtype":"m.text"},"ts":1694622257453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q74BeHL8wnPRcp06P5WEhvGo8amR1vkxtlV1ClLeAx8"},
{"content":{"body":"in that case no proposal is necessary, just a sequence of web-reality PRs in (ecma262, test262) pairs","msgtype":"m.text"},"ts":1694622589931,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$fYsxlHT9Wnl5MGL8FpsbTtCzYg_jsz3k7omhPq1MZ1I"},
{"content":{"body":"Richard Gibson: Sure, a series of PRs would be fine, but I assume the research into what is commonly supported will mostly need to be front-loaded","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@gibson042:matrix.org\">Richard Gibson</a>: Sure, a series of PRs would be fine, but I assume the research into what is commonly supported will mostly need to be front-loaded","msgtype":"m.text"},"ts":1694623072630,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$l3BMTxLVA78gIUZigGjMJK2W51VS-9Jie2fuu-tWPqQ"}
]