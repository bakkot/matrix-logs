[
{"content":{"body":"I've considered using an infix `~` as an indicator for partial application, i.e. `obj.method~(a, ?)`, so `obj~[key]` might be reasonable. Thin-arrow is possible as well (i.e., `obj->[key]`), though that sequence of tokens get's in to \"`obj.get` is easier to write\" territory","format":"org.matrix.custom.html","formatted_body":"I've considered using an infix <code>~</code> as an indicator for partial application, i.e. <code>obj.method~(a, ?)</code>, so <code>obj~[key]</code> might be reasonable. Thin-arrow is possible as well (i.e., <code>obj-&gt;[key]</code>), though that sequence of tokens get's in to \"<code>obj.get</code> is easier to write\" territory","m.mentions":{},"msgtype":"m.text"},"ts":1701302470763,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VjvlXZ-AmZpeKIW3QQEC93ObgtoRreHmPsaDrIHpUmI"},
{"content":{"body":" * I've considered using an infix `~` as an indicator for partial application, i.e. `obj.method~(a, ?)`, so `obj~[key]` might be reasonable. Thin-arrow is possible as well (i.e., `obj->[key]`), though that sequence of tokens get's into \"`obj.get` is easier to write\" territory","format":"org.matrix.custom.html","formatted_body":" * I've considered using an infix <code>~</code> as an indicator for partial application, i.e. <code>obj.method~(a, ?)</code>, so <code>obj~[key]</code> might be reasonable. Thin-arrow is possible as well (i.e., <code>obj-&gt;[key]</code>), though that sequence of tokens get's into \"<code>obj.get</code> is easier to write\" territory","m.mentions":{},"m.new_content":{"body":"I've considered using an infix `~` as an indicator for partial application, i.e. `obj.method~(a, ?)`, so `obj~[key]` might be reasonable. Thin-arrow is possible as well (i.e., `obj->[key]`), though that sequence of tokens get's into \"`obj.get` is easier to write\" territory","format":"org.matrix.custom.html","formatted_body":"I've considered using an infix <code>~</code> as an indicator for partial application, i.e. <code>obj.method~(a, ?)</code>, so <code>obj~[key]</code> might be reasonable. Thin-arrow is possible as well (i.e., <code>obj-&gt;[key]</code>), though that sequence of tokens get's into \"<code>obj.get</code> is easier to write\" territory","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VjvlXZ-AmZpeKIW3QQEC93ObgtoRreHmPsaDrIHpUmI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701302840754,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gnAsWsUDaEpevrSuL3Aap4YEdWVxI80RdEcNyXc1Fj4"},
{"content":{"body":" * `%` may be out as well. We'd considered it for the topic variable in pipeline, but IIRC `%` is hard to type on a number of international keyboard layouts.","format":"org.matrix.custom.html","formatted_body":" * <code>%</code> may be out as well. We'd considered it for the topic variable in pipeline, but IIRC <code>%</code> is hard to type on a number of international keyboard layouts.","m.mentions":{},"m.new_content":{"body":"`%` may be out as well. We'd considered it for the topic variable in pipeline, but IIRC `%` is hard to type on a number of international keyboard layouts.","format":"org.matrix.custom.html","formatted_body":"<code>%</code> may be out as well. We'd considered it for the topic variable in pipeline, but IIRC <code>%</code> is hard to type on a number of international keyboard layouts.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Ro9le5gbX_AXfSPhd-jGwJohAVVVjr0M-dx7yAH2p94","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701302859533,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$_KmaLEQn1cN_jBbifDvDE3xqRMG9xb4vW_G3NBguS9I"},
{"content":{"body":"We at Agoric are also hoping to use `remote~.method()` for async method invocation on a promise/placeholder for a remote object, `remoteFunction~()` for async function application, and `promise~.propertyName` for async get.","format":"org.matrix.custom.html","formatted_body":"We at Agoric are also hoping to use <code>remote~.method()</code> for async method invocation on a promise/placeholder for a remote object, <code>remoteFunction~()</code> for async function application, and <code>promise~.propertyName</code> for async get.","m.mentions":{},"msgtype":"m.text"},"ts":1701302925357,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$p7lzRAs_KqIFKewsC8BT2HnnEHvnTIlhf3QfxqC9GTo"},
{"content":{"body":"(On the mnemonic that `~` resembles a stream and each of these would be used to stream operations to remote objects.)","format":"org.matrix.custom.html","formatted_body":"(On the mnemonic that <code>~</code> resembles a stream and each of these would be used to stream operations to remote objects.)","m.mentions":{},"msgtype":"m.text"},"ts":1701302981304,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$hrSS_v3lWRJLFeGSxAh-8tIzbUWeLbiGqcXkl6IF0Nw"},
{"content":{"body":"If `f~()` gets used for that, then I don't think there's any syntax that would ever work for partial application.","format":"org.matrix.custom.html","formatted_body":"If <code>f~()</code> gets used for that, then I don't think there's any syntax that would ever work for partial application.","m.mentions":{},"msgtype":"m.text"},"ts":1701303006103,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VM34sN9m9jXqcsRNAG-p6exmksF-yln9JXy1YHeOkr8"},
{"content":{"body":"If you used`f~.()` it would be consistent with `f?.()` at least, though I imagine `f~.~()` would end up being a bridge too far.","format":"org.matrix.custom.html","formatted_body":"If you used<code>f~.()</code> it would be consistent with <code>f?.()</code> at least, though I imagine <code>f~.~()</code> would end up being a bridge too far.","m.mentions":{},"msgtype":"m.text"},"ts":1701303063440,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PmqECvZlyfwvDkzMIXbXPlQ_ckfnEqbAFfHIMu_WtCA"},
{"content":{"body":"I still hold out hope for partial application, which is why I haven't withdrawn it, but where I left it one of the things it needed was a prefix token for the argument list. For a number of reasons I've discussed on the issue tracker, the token can't come *before* the method/function name since it has the wrong precedence for binding, and for partial application to be practically useful it can't have an arduous syntax.","format":"org.matrix.custom.html","formatted_body":"I still hold out hope for partial application, which is why I haven't withdrawn it, but where I left it one of the things it needed was a prefix token for the argument list. For a number of reasons I've discussed on the issue tracker, the token can't come <em>before</em> the method/function name since it has the wrong precedence for binding, and for partial application to be practically useful it can't have an arduous syntax.","m.mentions":{},"msgtype":"m.text"},"ts":1701303202033,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$pKbjpewCSHptQ4uGRRyFQKMb7MgtIuFU2EyFQlhvsEc"},
{"content":{"body":"One of the things that the original `f(?)` syntax for partial app lacked was the ability to indicate a partial 0-arity invocation, i.e. `obj.method()` isn't partial, and there's no way to defer its invocation, while `object.method~()` allows for 0-arity partial application.","format":"org.matrix.custom.html","formatted_body":"One of the things that the original <code>f(?)</code> syntax for partial app lacked was the ability to indicate a partial 0-arity invocation, i.e. <code>obj.method()</code> isn't partial, and there's no way to defer its invocation, while <code>object.method~()</code> allows for 0-arity partial application.","m.mentions":{},"msgtype":"m.text"},"ts":1701303288936,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$AI_xVQO_iXPPPfd9KdGf2S2LMY5OD05bD5XesH0Rykw"},
{"content":{"body":"The other upshot of using `~.` for async invocation, is that you're not limited to `~` as there are a number of other symbols that are currently illegal before `.` in that position.","format":"org.matrix.custom.html","formatted_body":"The other upshot of using <code>~.</code> for async invocation, is that you're not limited to <code>~</code> as there are a number of other symbols that are currently illegal before <code>.</code> in that position.","m.mentions":{},"msgtype":"m.text"},"ts":1701303407945,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$T4_vHDRxXnYfGyoU_FKLfYT7lz4bOYJzPWgYlAy-gBg"},
{"content":{"body":"This is also why I'm not a fan of using up our syntax budget on `a[@x]` when we primarily want to support a narrow case for a small set of objects (`Slice`, `Index`, maybe `WeakMap` or a set of user-defined objects like `Pick`, etc.) that could easily be accomplished with `a[x]`.","format":"org.matrix.custom.html","formatted_body":"This is also why I'm not a fan of using up our syntax budget on <code>a[@x]</code> when we primarily want to support a narrow case for a small set of objects (<code>Slice</code>, <code>Index</code>, maybe <code>WeakMap</code> or a set of user-defined objects like <code>Pick</code>, etc.) that could easily be accomplished with <code>a[x]</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1701303674634,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JpdfeiFaTGHcX4JOk77daKpJaCJf-qdt96Hbchom30M"},
{"content":{"body":"Whatever we used for that would impact what's available for future proposals. i.e., any symbol in the place of `@` in `a[@x]` means that symbol can never be used in a prefix position of an AssignmentExpression. A symbol before `[` doesn't have that issue, but we have an even smaller number of symbols we can legally put before `[` and still have it be somewhat ergonomic to type.","format":"org.matrix.custom.html","formatted_body":"Whatever we used for that would impact what's available for future proposals. i.e., any symbol in the place of <code>@</code> in <code>a[@x]</code> means that symbol can never be used in a prefix position of an AssignmentExpression. A symbol before <code>[</code> doesn't have that issue, but we have an even smaller number of symbols we can legally put before <code>[</code> and still have it be somewhat ergonomic to type.","m.mentions":{},"msgtype":"m.text"},"ts":1701303820002,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$fIPkeSN08jEwNzYCix0FdBk1ZViuSbkCOEToxR674jU"},
{"content":{"body":"I'd love to be able to hook `a[x]` for _numeric_ indexes, since that also gives us a way to make things like Array and TypedArray into regular objects instead of exotic objects. It also opens the door for user-defined numeric-indexed collection classes that work like `Array`, which can only be implemented via a `Proxy` today.","format":"org.matrix.custom.html","formatted_body":"I'd love to be able to hook <code>a[x]</code> for <em>numeric</em> indexes, since that also gives us a way to make things like Array and TypedArray into regular objects instead of exotic objects. It also opens the door for user-defined numeric-indexed collection classes that work like <code>Array</code>, which can only be implemented via a <code>Proxy</code> today.","m.mentions":{},"msgtype":"m.text"},"ts":1701304024244,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$w0bCbsNknKhyWVAXi7rBeVUyzVLGFL8y7_MQcORqntQ"},
{"content":{"body":"> <@rbuckton:matrix.org> And that doesn't seem like a valuable use of our syntactic budget if we could merge them into just `a[x]`.\n\nbut by merging it into `a[x]`, now all `a[x]` require 2 Get call instead of 1, that will be a huge performance cliff","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5_nS19R-0SnT8pAg0Z8XWvlpl_1oBZdIzet-GISf45k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>And that doesn't seem like a valuable use of our syntactic budget if we could merge them into just <code>a[x]</code>.</blockquote></mx-reply>but by merging it into <code>a[x]</code>, now all <code>a[x]</code> require 2 Get call instead of 1, that will be a huge performance cliff","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5_nS19R-0SnT8pAg0Z8XWvlpl_1oBZdIzet-GISf45k"}},"msgtype":"m.text"},"ts":1701318193880,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fd9OZnUxDbJXnLXjEezVjTYSy8IEJebsQiwrEhxmnlM"},
{"content":{"body":"> <@haxjs:matrix.org> Another problem, if there will be index/range I will really hope they are new primitive types. But it seems very impossible as current status.\n\nI don't know if you can take the Decimal way here. preserving the possibility of adding new primitive types and add them as an object for now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_XKpw8SLxF-00N6Xe61hDJT64eY7UzIgyBVkCRVBEVg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Another problem, if there will be index/range I will really hope they are new primitive types. But it seems very impossible as current status.</blockquote></mx-reply>I don't know if you can take the Decimal way here. preserving the possibility of adding new primitive types and add them as an object for now","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_XKpw8SLxF-00N6Xe61hDJT64eY7UzIgyBVkCRVBEVg"}},"msgtype":"m.text"},"ts":1701318528755,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jTsObQFIVvdrWlD_4OSh1LSlbigDPzlLLNQBeoTFOwE"},
{"content":{"body":"> <@kriskowal:matrix.org> We at Agoric are also hoping to use `remote~.method()` for async method invocation on a promise/placeholder for a remote object, `remoteFunction~()` for async function application, and `promise~.propertyName` for async get.\n\nI'd like to update Extension proposal in recent future meetings, one use case in the original proposal is to support eventual send with Extension syntax, in the original draft, it is `promise::Eventual:method()` and `promise::Eventual:propertyName`. I think the old eventual send proposal do not have `remoteFunction()` feature, is it ok to use `remoteFunction::Eventual:call()` for that? (note, I plan to change `::` and `:` delimiters, but I assume it should not the big issue for this case)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$p7lzRAs_KqIFKewsC8BT2HnnEHvnTIlhf3QfxqC9GTo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>We at Agoric are also hoping to use <code>remote~.method()</code> for async method invocation on a promise/placeholder for a remote object, <code>remoteFunction~()</code> for async function application, and <code>promise~.propertyName</code> for async get.</blockquote></mx-reply>I'd like to update Extension proposal in recent future meetings, one use case in the original proposal is to support eventual send with Extension syntax, in the original draft, it is <code>promise::Eventual:method()</code> and <code>promise::Eventual:propertyName</code>. I think the old eventual send proposal do not have <code>remoteFunction()</code> feature, is it ok to use <code>remoteFunction::Eventual:call()</code> for that? (note, I plan to change <code>::</code> and <code>:</code> delimiters, but I assume it should not the big issue for this case)","m.mentions":{"user_ids":["@kriskowal:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$p7lzRAs_KqIFKewsC8BT2HnnEHvnTIlhf3QfxqC9GTo"}},"msgtype":"m.text"},"ts":1701345165175,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$_XTrhVdv3fGJPH2ERX7-Fi84TvjuWJpr9HpKJAdz1RA"},
{"content":{"body":"i feel like some things should remain as DSLs","m.mentions":{},"msgtype":"m.text"},"ts":1701363281151,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$b4QXC4_uvBH8SBSQ_NFeeuMcmhzmgkiDZ3lotL54aPk"},
{"content":{"body":"or, in a versatile enough language, just libraries","m.mentions":{},"msgtype":"m.text"},"ts":1701363988060,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rv8lnmYGOgZ4Sq0DAYOmx2ZWP2mnowGofuBewIaZMMc"},
{"content":{"body":"I agree with Chris. It's much harder to validate tests without also writing an implementation. I'm wondering if it makes more sense to split the \"implementation\" part into two parts: the development/validation of the feature internally or flagged, and _shipping_ the implementation unflagged. ","format":"org.matrix.custom.html","formatted_body":"I agree with Chris. It's much harder to validate tests without also writing an implementation. I'm wondering if it makes more sense to split the \"implementation\" part into two parts: the development/validation of the feature internally or flagged, and <em>shipping</em> the implementation unflagged.","m.mentions":{},"msgtype":"m.text"},"ts":1701367920524,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$e4y8OzpxJa0vDlkVCfcjEr9Co5Fbuvni7c_v8FSTeoM"},
{"content":{"body":"Or I think I agree. I agree with the topic text at least, heh.","m.mentions":{},"msgtype":"m.text"},"ts":1701367946427,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VPT-xO5t-007cJ7cScNmioNSY-KV6ewomhw907bJjkE"},
{"content":{"body":"I like the names","m.mentions":{},"msgtype":"m.text"},"ts":1701368268325,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C7iknfCGNbmuNfwvCHOFNcv_yLtP0HULfLgliDO75fc"},
{"content":{"body":"(but keeping the numbers too sgtm)","m.mentions":{},"msgtype":"m.text"},"ts":1701368297227,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-wl4b4WyH8Kh-reF4rmiu8oRhPi308LEsiguptAPAyk"},
{"content":{"body":"i def like re-adding names. but numbers should remain the primary thing","m.mentions":{},"msgtype":"m.text"},"ts":1701368345916,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6t_XS2l8b0iNKbsJOz6GRWHdGySigZLcklgb8XZrJxg"},
{"content":{"body":"the reason for adding names is because they help explain what we're talking about. The new names are much much better than the old names, hence the change vs previously","m.mentions":{},"msgtype":"m.text"},"ts":1701368353160,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AyjkCatTckkT7lgBaR3xTpN1Vq9au-FwKi-dy7mU0cc"},
{"content":{"body":"(I have no opinion on what should be \"primary\"; maybe we should just start with not primary)","m.mentions":{},"msgtype":"m.text"},"ts":1701368381133,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Wv_GWTJsoVhywxrDVLgXYC3IXSvfunUF3IEOyh3_9Zg"},
{"content":{"body":" * (I have no opinion on what should be \"primary\"; maybe we should just start with not changing)","m.mentions":{},"m.new_content":{"body":"(I have no opinion on what should be \"primary\"; maybe we should just start with not changing)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Wv_GWTJsoVhywxrDVLgXYC3IXSvfunUF3IEOyh3_9Zg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701368391080,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SFhfDPtlXMq2qi03O_BLH4N1bW1h1SGVWQz3oH32pt4"},
{"content":{"body":"well, i just mean, the numbers should never be absent from our communication about the stages; i don't care if the names are present also or not","m.mentions":{},"msgtype":"m.text"},"ts":1701368407914,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lgl15i_yEU_pUJaGVO1fmPQQHFKl8NUm-5ytAB0llk0"},
{"content":{"body":" * well, i just mean, the numbers should never be absent from our communication about the stages; i don't care if the names are present also or not in every such communication","m.mentions":{},"m.new_content":{"body":"well, i just mean, the numbers should never be absent from our communication about the stages; i don't care if the names are present also or not in every such communication","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$lgl15i_yEU_pUJaGVO1fmPQQHFKl8NUm-5ytAB0llk0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701368415866,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qB5wZDWOoewgre2b9UttVXdPbLGzdfQDw1R4UB7VzSU"},
{"content":{"body":"Stages: 1, 2, 2-3 transitional validation, 3, 4","m.mentions":{},"msgtype":"m.text"},"ts":1701368423159,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SN2Sd-wybJV47B13e-vARoIynBWd6ip4rqx3N41xvj0"},
{"content":{"body":"(we also don't need to renumber; there's infinite numbers between 2 and 3)","m.mentions":{},"msgtype":"m.text"},"ts":1701368431243,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$o5CDlyPusgOO6VWO9upEjATUtqQ7czdDvddCbkmWL0w"},
{"content":{"body":"I hope we can avoid this bike shedding debate blocking us from making the more meaningful process change that Michael proposed","m.mentions":{},"msgtype":"m.text"},"ts":1701368455754,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$S8EJeQ37KzZcQW3a9GkMIPOZ85D7NfNCvF314sfzi7g"},
{"content":{"body":"Stage numbers don't need to be integral or floating-point","m.mentions":{},"msgtype":"m.text"},"ts":1701368470357,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iFzBsJrcyyGow-f8Y5AlMSIRoU0wkBNVtm5-cTzLpV4"},
{"content":{"body":"your optimism is refreshing","m.mentions":{},"msgtype":"m.text"},"ts":1701368470520,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XkqbMP9_hcGITY-cuYlxqR2LeXe7349ge7c48mKK81k"},
{"content":{"body":"+<3 for whimsy","m.mentions":{},"msgtype":"m.text"},"ts":1701368496555,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uNolWzhtGK3_GcJzXnNXV0X3XREB-kM8Wqe7G_nJEmA"},
{"content":{"body":"I am anti-whimsey","m.mentions":{},"msgtype":"m.text"},"ts":1701368509697,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$46uzOnUJf8OKfCBPAbS9BKXrrYPj3zp_Qh000-Wzv9Q"},
{"content":{"body":"introducing the new stage with `2.5` is:\n- the path of least resistance\n- avoids bikeshedding\n- is unambiguous\n- does not prevent iterating on this more in the future (names, different schemes)","format":"org.matrix.custom.html","formatted_body":"<p>introducing the new stage with <code>2.5</code> is:</p>\n<ul>\n<li>the path of least resistance</li>\n<li>avoids bikeshedding</li>\n<li>is unambiguous</li>\n<li>does not prevent iterating on this more in the future (names, different schemes)</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1701368530466,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$QgMUwyvMT2GrSPZgu3x-NIu3LCXqP_vRUHPBiyRAYgY"},
{"content":{"body":"I prefer 2 3/4 or 2.75 because it expresses that it's closer to 3","m.mentions":{},"msgtype":"m.text"},"ts":1701368555863,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GMKuEfErkYOYnzTIUSKOx2sONpYI3eOy2rhMLKxgvMQ"},
{"content":{"body":"whimsy is great for audiences in the know, usually falls flat and ends up being a barrier in external communication","msgtype":"m.text"},"ts":1701368562391,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$w9txenmZgo3CYePgDTrSEPbzqAnGzf5itXxQ_OHCEVA"},
{"content":{"body":"I really like having the \"External Communication\" definition in the document, even if we don't use them as names or vocally.  It's the best way of concisely explaining things to a wide audience.","m.mentions":{},"msgtype":"m.text"},"ts":1701368562879,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5QZmK_IbnWA0-lGTzvJBomETpEhoeF0JnMvgcGAAVvo"},
{"content":{"body":"Moving from Stage e to 3 should require consensus *on the question of whether the tests are sufficiently done*; it'd be sort of inappropriate to reject Stage 3 because you didn't like the design in the first place","format":"org.matrix.custom.html","formatted_body":"Moving from Stage e to 3 should require consensus <em>on the question of whether the tests are sufficiently done</em>; it'd be sort of inappropriate to reject Stage 3 because you didn't like the design in the first place","m.mentions":{},"msgtype":"m.text"},"ts":1701368686800,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$A3dLnC2x1x_VNa2hptgX-D5prdB6vV0FVoT84yi7-cA"},
{"content":{"body":"oh sure if there's implementation experience at that point, then that'd be a good reason to hold back Stage 3","m.mentions":{},"msgtype":"m.text"},"ts":1701368724438,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HjcAxeUuKqEFMnEI4zSr1xbiojJ6rgU4PwsiDMCIEyc"},
{"content":{"body":" * oh sure if there's implementation experience at that point, requiring changes, then that'd be a good reason to hold back Stage 3","m.mentions":{},"m.new_content":{"body":"oh sure if there's implementation experience at that point, requiring changes, then that'd be a good reason to hold back Stage 3","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$HjcAxeUuKqEFMnEI4zSr1xbiojJ6rgU4PwsiDMCIEyc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701368732668,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KtLQZF63ZovO6o5xzw1OQ5pv11LcHvluLfLdkxAQuxo"},
{"content":{"body":"One way to keep the integer numbers would be to shift the lower end down, so random ideas are at stage -1, they're first accepted at stage 0, need spec text for stage 1, and this new stage would be stage 2.","m.mentions":{},"msgtype":"m.text"},"ts":1701369018960,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$9FvjCvorRUrjNUNWhBobhsgnpMZi1WIp7taL6eNW2SU"},
{"content":{"body":"that'll cause a lot of confusion for existing data all over the internet","m.mentions":{},"msgtype":"m.text"},"ts":1701369063247,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gC6t8T6qg9te4dkdJv5OLJMfp8RQtIHAsLMQYs-Mwog"},
{"content":{"body":"But less than shifting the other end up a step.","m.mentions":{},"msgtype":"m.text"},"ts":1701369106758,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$BWMbEEJy9Ht-GF4uhDkhcbx9MxfuMu5HuPYSAW1TUXA"},
{"content":{"body":"i think that disruption isn't worth keeping integers, personally","m.mentions":{},"msgtype":"m.text"},"ts":1701369177611,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DgMaHNd1I_BSS0jrFrjnO8pM-uZLJ7TTOYkmZsva6QU"},
{"content":{"body":" * i think that any disruption isn't worth keeping integers, personally","m.mentions":{},"m.new_content":{"body":"i think that any disruption isn't worth keeping integers, personally","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DgMaHNd1I_BSS0jrFrjnO8pM-uZLJ7TTOYkmZsva6QU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701369181752,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QbxfUGKtr71elhYwZiF3z4BJVD3dagQLUSX9plk6F-4"},
{"content":{"body":" * i think that any such disruption isn't worth keeping integers, personally","m.mentions":{},"m.new_content":{"body":"i think that any such disruption isn't worth keeping integers, personally","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DgMaHNd1I_BSS0jrFrjnO8pM-uZLJ7TTOYkmZsva6QU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701369190723,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4trmg7Epkk--HGwjmaSNC7W1x8YS13ZaeeAp8aeS93s"},
{"content":{"body":"i feel like we have several questions happening at once here","m.mentions":{},"msgtype":"m.text"},"ts":1701369241220,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$vYrdokS_JXGmTUU3iVuPUS5uiGe9hzVvceW_hGEi0xk"},
{"content":{"body":"the first is \"what stages do we want to have\"","m.mentions":{},"msgtype":"m.text"},"ts":1701369248047,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Jt_vZX2ncK1Yq2Pe4YVZrA05T6t59TJY-URpGrDOGqA"},
{"content":{"body":"and only once we answer that can we talk about how to label them","m.mentions":{},"msgtype":"m.text"},"ts":1701369255099,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QrrLJSJaq53_o4ulvy6UfxJ9IdT-5pF2J3UPzH__8uk"},
{"content":{"body":"it seems like the stages as described are already what we want, we're just confirming the wording","m.mentions":{},"msgtype":"m.text"},"ts":1701369307021,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KTH-fs-s_PxdhLZDJWOzi4XbBg4QlnQ2ILdTHLQLDSU"},
{"content":{"body":"imo, a clean break switching away from numbers to names is far preferrable to shifting stage numbers around.","m.mentions":{},"msgtype":"m.text"},"ts":1701369313946,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$a30lW3Ek8fAX_9NJc8VZK1JA1eQDpmvz4k7xTcKJckw"},
{"content":{"body":"and a clean break is problematic for reasons i've described, so picking a noninteger number is what's left","m.mentions":{},"msgtype":"m.text"},"ts":1701369373550,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Qz3l4d5RqSwFOuXATn4pmBBpizaYeyL_NCHr_g-ghaw"},
{"content":{"body":"Chris de Almeida: numbers and names landed together with the post-ES6 process iirc, and i think we moved away from the names a few years back because nobody, internally or externally, was using them anyways","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: numbers and names landed together with the post-ES6 process iirc, and i think we moved away from the names a few years back because nobody, internally or externally, was using them anyways","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"msgtype":"m.text"},"ts":1701369420792,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gU4yAXX8Y_SOb3YO_QEruNDBAI6DN0dlMv4meGsEGm4"},
{"content":{"body":"yes, thanks for the correction --  I misremembered partially; trying to dig up the reasoning, but there was i18n aspect IIRC","m.mentions":{},"msgtype":"m.text"},"ts":1701369540350,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$_Vm6FHx-NpoxNU6sR9XSUwgfEaJlcQg0vvYfHBuks60"},
{"content":{"body":"10,20,30, with 10.20, 30.20, etc. is no different thatn 1,1.2,3.2, etc","m.mentions":{},"msgtype":"m.text"},"ts":1701369583407,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$N74QQG9rK0Y0McYfbrWZ83UIdQBPQBN9tvk0hv8YAW4"},
{"content":{"body":"but I guess they have thing's like .93 in there","m.mentions":{},"msgtype":"m.text"},"ts":1701369601542,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$EfLxp7ryRq3gozBtbYqlX-ZPa4B3JwKPWTX3hmctUx8"},
{"content":{"body":" * but I guess they have things like .93 in there","m.mentions":{},"m.new_content":{"body":"but I guess they have things like .93 in there","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$EfLxp7ryRq3gozBtbYqlX-ZPa4B3JwKPWTX3hmctUx8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701369606344,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$oS89fT8KubxAR_fv1xQFwsmfOtWmrsxLJooTJU9aqtk"},
{"content":{"body":"Again, we don't need to use integral or real numbers at all. The new stage could just be something like `2-3-validation` or something, or rename stages like:\n0, 1, 2.approved, 2.validated, 3, 4","format":"org.matrix.custom.html","formatted_body":"Again, we don't need to use integral or real numbers at all. The new stage could just be something like <code>2-3-validation</code> or something, or rename stages like:<br>0, 1, 2.approved, 2.validated, 3, 4","m.mentions":{},"msgtype":"m.text"},"ts":1701369613872,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YoAXoFsai9UGYaoCtHNhpUHHrcfO7Lg1tE_Zscy4T1I"},
{"content":{"body":"Stages 2.a, 2.v (or 2.b)","m.mentions":{},"msgtype":"m.text"},"ts":1701369645600,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0Be24-F5Z0ajpvNio3pCUesnLxSlll3BKm586-J1T5Y"},
{"content":{"body":"since a/b/v/etc. don't imply a closeness or distance from 2 or 3","m.mentions":{},"msgtype":"m.text"},"ts":1701369670436,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TXKDdjTzTGNvvfD5pM5WtsF83E_gvlAoKKL7SG2MOe0"},
{"content":{"body":"Or just do stages 0, 1, 2, 2+tests, 3, 4, or something.","m.mentions":{},"msgtype":"m.text"},"ts":1701369729439,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Em-bIuuNsvffZPWiNaTYs5lMTJlfg08_Ch87PoZGgTA"},
{"content":{"body":"or \"pre-3\" ","m.mentions":{},"msgtype":"m.text"},"ts":1701369748160,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$msABWV6rxbVdXMhjzs4-Pl8KcACeHWqA6wvGGLQmoYc"},
{"content":{"body":"I guess the whole question of \"can we migrate community understanding\" was answered once by turning ESx -> ESxxxx digits eight years ago.  I'd estimate that took two years to achieve widespread understanding.  So Stage x -> Stage xx would probably be accepted in a similar timeframe.","m.mentions":{},"msgtype":"m.text"},"ts":1701369750621,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5h2HFP8l-qaM2sruOYZP6JB4F16CV9GtNkyQxDXnTVw"},
{"content":{"body":"Actually, \"pre-3\" doesn't seem too bad to me?","m.mentions":{},"msgtype":"m.text"},"ts":1701369817724,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Srh1yacxM78dgnHXFfzvpKgUJdoduhU7QF_3YgPC0Xc"},
{"content":{"body":"having \"3\" in it seems very bad to me","m.mentions":{},"msgtype":"m.text"},"ts":1701369834649,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iUpasT7toI8BDM2mJXi7F6VbKwjIy8JuycPmPsxK5aM"},
{"content":{"body":" * having \"3\" in it seems very bad to me, as we discussed last plenary","m.mentions":{},"m.new_content":{"body":"having \"3\" in it seems very bad to me, as we discussed last plenary","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$iUpasT7toI8BDM2mJXi7F6VbKwjIy8JuycPmPsxK5aM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701369844369,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Xbpt7LKqqsrTFHHrSkLvaPa0g1fO1jXp0gjmPXiDXI4"},
{"content":{"body":"if it has \"3\" in it people will treat it as safe to use","m.mentions":{},"msgtype":"m.text"},"ts":1701369855512,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$G3Mz1tuVEy-qzFCrLmzbeGrNFyQWKhBbEDOmgMJ3AOQ"},
{"content":{"body":"Except it's \"pre-\", its even semver-ish.","m.mentions":{},"msgtype":"m.text"},"ts":1701369864834,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nQMecTL66NXMYLffsDc4-ILNlzncgZ0Sb0THt1FbsvM"},
{"content":{"body":"> <@robpalme:matrix.org> I guess the whole question of \"can we migrate community understanding\" was answered once by turning ESx -> ESxxxx digits eight years ago.  I'd estimate that took two years to achieve widespread understanding.  So Stage x -> Stage xx would probably be accepted in a similar timeframe.\n\nthat took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people *still* refer to things by edition number","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5h2HFP8l-qaM2sruOYZP6JB4F16CV9GtNkyQxDXnTVw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br>I guess the whole question of &quot;can we migrate community understanding&quot; was answered once by turning ESx -&gt; ESxxxx digits eight years ago.  I&#39;d estimate that took two years to achieve widespread understanding.  So Stage x -&gt; Stage xx would probably be accepted in a similar timeframe.</blockquote></mx-reply>that took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people <em>still</em> refer to things by edition number","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5h2HFP8l-qaM2sruOYZP6JB4F16CV9GtNkyQxDXnTVw"}},"msgtype":"m.text"},"ts":1701369890798,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xenmSF5yCsTSDtSf4DzfGOosu2MOSQh-DYehMq5AW8Y"},
{"content":{"body":"stage \"almost-3-but-do-not-use-or-you-will-be-fired\" /s","m.mentions":{},"msgtype":"m.text"},"ts":1701369900557,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$KVjxPDZIS0mMYLMvJYgOEAaSIx6DZIWJTB84uyD8eOQ"},
{"content":{"body":"> <@rbuckton:matrix.org> Except it's \"pre-\", its even semver-ish.\n\nthat's what michael was advocating too, but i don't think that's enough. i think if \"3\" is in the name, no qualifier will be sufficient to remove the implication that it's stage 3","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nQMecTL66NXMYLffsDc4-ILNlzncgZ0Sb0THt1FbsvM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Except it&#39;s &quot;pre-&quot;, its even semver-ish.</blockquote></mx-reply>that's what michael was advocating too, but i don't think that's enough. i think if \"3\" is in the name, no qualifier will be sufficient to remove the implication that it's stage 3","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nQMecTL66NXMYLffsDc4-ILNlzncgZ0Sb0THt1FbsvM"}},"msgtype":"m.text"},"ts":1701369920101,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SCZHPJEPncBCTVijEYRfO944bVRfpCDf9bCZMq-JG2w"},
{"content":{"body":"> <@robpalme:matrix.org> I guess the whole question of \"can we migrate community understanding\" was answered once by turning ESx -> ESxxxx digits eight years ago.  I'd estimate that took two years to achieve widespread understanding.  So Stage x -> Stage xx would probably be accepted in a similar timeframe.\n\n * that took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people _still_ refer to things by edition number (eslint still supports edition numbers in its config for ecmaVersion, even)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5h2HFP8l-qaM2sruOYZP6JB4F16CV9GtNkyQxDXnTVw?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br>I guess the whole question of \"can we migrate community understanding\" was answered once by turning ESx -&gt; ESxxxx digits eight years ago.  I'd estimate that took two years to achieve widespread understanding.  So Stage x -&gt; Stage xx would probably be accepted in a similar timeframe.</blockquote></mx-reply> * that took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people <em>still</em> refer to things by edition number (eslint still supports edition numbers in its config for ecmaVersion, even)","m.mentions":{},"m.new_content":{"body":"that took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people _still_ refer to things by edition number (eslint still supports edition numbers in its config for ecmaVersion, even)","format":"org.matrix.custom.html","formatted_body":"that took longer than 2 years, and also was because we were making yearly editions which was a huge change. and, people <em>still</em> refer to things by edition number (eslint still supports edition numbers in its config for ecmaVersion, even)","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$xenmSF5yCsTSDtSf4DzfGOosu2MOSQh-DYehMq5AW8Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701369938045,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bUOx8UejbsN_hzpnf-F69kxsZqLJbW_aMUnR1XuamJQ"},
{"content":{"body":"https://github.com/tc39/notes/blob/df1449925841bc77574e8e127611234670275575/meetings/2021-07/july-14.md#renaming-strawperson-to-concept-or-something-better","m.mentions":{},"msgtype":"m.text"},"ts":1701369942492,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fkN9MyvghDvhAR4Bl0lsQw8-cIOixH694YMA_TY38UQ"},
{"content":{"body":"this is the discussion that led to the removal of stage names","m.mentions":{},"msgtype":"m.text"},"ts":1701369975284,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fp6d9Ykb6phC6b0xBIVq9aCWEHPat14duN8m_hRb93o"},
{"content":{"body":"This new stage has the same entrance criteria that 3 did, so \"pre-3\" makes sense to me. \"post-2\" feels a bit odd to me, though.","m.mentions":{},"msgtype":"m.text"},"ts":1701369998281,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$RNF7-S7pvn16lWGBs4kfArghUBf_bMx48FvpmfH6_n4"},
{"content":{"body":"notably, the discussion actually began with trying to name a stage -- and that led to removal of the names entirely","m.mentions":{},"msgtype":"m.text"},"ts":1701370015370,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$LMVGli70oRceqtGwyu-XfKYhYedkfLsKGIZfQ3_Lzno"},
{"content":{"body":"0,1,2,name,3,4 works too, it'll just inevitably become referred to as \"2.5\" or similar, and then that's what it'll be called.","m.mentions":{},"msgtype":"m.text"},"ts":1701370146080,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PpMNnYTcU4xI05bOXG6VQlpIY27iqOfwkQwZDEen3FQ"},
{"content":{"body":" * 0,1,2,name,3,4 works too, it'll just inevitably become referred to as \"2.5\" or similar, and then that's what it'll be called. if we don't pick a number, a number will be picked for us.","m.mentions":{},"m.new_content":{"body":"0,1,2,name,3,4 works too, it'll just inevitably become referred to as \"2.5\" or similar, and then that's what it'll be called. if we don't pick a number, a number will be picked for us.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PpMNnYTcU4xI05bOXG6VQlpIY27iqOfwkQwZDEen3FQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370155297,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$orlYHYkQtMnG6NotA7zf-6yu_Zr98WMqqvFUD4JrrPQ"},
{"content":{"body":"`unproposed` (old 0), `exploring` (old 1), `draft` (old 2), `validation` (new), `candidate` (old 3), `adopted`","format":"org.matrix.custom.html","formatted_body":"<code>unproposed</code> (old 0), <code>exploring</code> (old 1), <code>draft</code> (old 2), <code>validation</code> (new), <code>candidate</code> (old 3), <code>adopted</code>","m.mentions":{},"msgtype":"m.text"},"ts":1701370169465,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kIHZzzh0k-UhG9OPCE-bGzAY_6KsmoFlIyTZIcV5FLs"},
{"content":{"body":"Stage 2e1","m.mentions":{},"msgtype":"m.text"},"ts":1701370223633,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$jsVQ-_WRFxa1Z2rEXpTxwHuvjmgzjN-zD74jMt3XR88"},
{"content":{"body":"(that's a literal number)","m.mentions":{},"msgtype":"m.text"},"ts":1701370230235,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-ZGC_PS52Ia5k3uidGmCZlB3arBvbRUKdijS9juJDlA"},
{"content":{"body":"didn't we talk about `e` last time?","format":"org.matrix.custom.html","formatted_body":"didn't we talk about <code>e</code> last time?","m.mentions":{},"msgtype":"m.text"},"ts":1701370233849,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$vbWwM_bRHCFGJPrnIfM9O_KIbz8oDKpoUoCIBYnzhPg"},
{"content":{"body":"> <@ljharb:matrix.org> 0,1,2,name,3,4 works too, it'll just inevitably become referred to as \"2.5\" or similar, and then that's what it'll be called. if we don't pick a number, a number will be picked for us.\n\nWell that's a way to solve the consensus problem","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PpMNnYTcU4xI05bOXG6VQlpIY27iqOfwkQwZDEen3FQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>0,1,2,name,3,4 works too, it&#39;ll just inevitably become referred to as &quot;2.5&quot; or similar, and then that&#39;s what it&#39;ll be called. if we don&#39;t pick a number, a number will be picked for us.</blockquote></mx-reply>Well that's a way to solve the consensus problem","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$PpMNnYTcU4xI05bOXG6VQlpIY27iqOfwkQwZDEen3FQ"}},"msgtype":"m.text"},"ts":1701370268188,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8DPZZKT7ri-pnRfiPb4XHNYQJI7ZWnOoaGXQ4wayoxA"},
{"content":{"body":"I don't know that people will pay enough attention for that to actually come up","m.mentions":{},"msgtype":"m.text"},"ts":1701370307319,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ez2t85pR96_5zMKXwv1uPeMTAY5Q1Vlk083BODOr8Eg"},
{"content":{"body":"like if it's \"2\" and \"test development\" and \"3\", not a lot of people are going to get that excited about moving to phase \"test development\", even though it is in reality a big milestone","m.mentions":{},"msgtype":"m.text"},"ts":1701370330336,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3uyRSwGJBbIqWDG7HFWA8Cz9WIGL8ovcruvZ037v1D8"},
{"content":{"body":"there are a lot of podcasters and blog posters and twitter tech influencers that pay attention to it","m.mentions":{},"msgtype":"m.text"},"ts":1701370332558,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hGjeyQNCVxzSW5D4JDNcCzZ9U11FNQ_1-LrjhSM49qc"},
{"content":{"body":" * there are a lot of podcasters and blog posters and twitter tech influencers that pay attention to stage progression (whether it's actually valuable for them to care or not)","m.mentions":{},"m.new_content":{"body":"there are a lot of podcasters and blog posters and twitter tech influencers that pay attention to stage progression (whether it's actually valuable for them to care or not)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$hGjeyQNCVxzSW5D4JDNcCzZ9U11FNQ_1-LrjhSM49qc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370354956,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$enx6VxZ9aEkYUKnMOrpv5q0FcArOcBQ1xQpUjKEDlfw"},
{"content":{"body":"I guess I don't care that much about what name those people use","m.mentions":{},"msgtype":"m.text"},"ts":1701370364493,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n8s9Uc7jD21WGCyeqyIKfhkQXO3PhpiFOsBRKrl_jI8"},
{"content":{"body":"we could also do `2.9` so that \"just before 3\" is strongly implied","format":"org.matrix.custom.html","formatted_body":"we could also do <code>2.9</code> so that \"just before 3\" is strongly implied","m.mentions":{},"msgtype":"m.text"},"ts":1701370423715,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-RADu7BiOLeUMIyW6WSjXTl5z5u3RtUpd8WW6FpEFJ4"},
{"content":{"body":" * we could also do `2.9` so that \"just before 3\" is strongly implied, and then there's no confusion with \"e\"","format":"org.matrix.custom.html","formatted_body":" * we could also do <code>2.9</code> so that \"just before 3\" is strongly implied, and then there's no confusion with \"e\"","m.mentions":{},"m.new_content":{"body":"we could also do `2.9` so that \"just before 3\" is strongly implied, and then there's no confusion with \"e\"","format":"org.matrix.custom.html","formatted_body":"we could also do <code>2.9</code> so that \"just before 3\" is strongly implied, and then there's no confusion with \"e\"","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$-RADu7BiOLeUMIyW6WSjXTl5z5u3RtUpd8WW6FpEFJ4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370429982,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6zsQdLCgUmdyTpJFlt5eewsGS0bcliIdpUU2aZ8TeX4"},
{"content":{"body":"`2.testing` (why not both?)","format":"org.matrix.custom.html","formatted_body":"<code>2.testing</code> (why not both?)","m.mentions":{},"msgtype":"m.text"},"ts":1701370438693,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$441Oynmfg8KoTcfgMCmF7XZUX3lR3ynwY8Il5B4QZVM"},
{"content":{"body":"I love the bingo call-out lol","m.mentions":{},"msgtype":"m.text"},"ts":1701370456071,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aQvOqQbzXz4jjMpx_qodrZg7EBfMS-7npqoVddXSOIc"},
{"content":{"body":"2-bis","m.mentions":{},"msgtype":"m.text"},"ts":1701370465282,"senderName":"ryzokuken 🇮🇹","senderId":"@usharma:igalia.com","id":"$5_OCkPkR9GxiHGt7xz4d-9CZnvJmwiVYUy3YjTfqLzA"},
{"content":{"body":"\"2\" and \"2v\" sgtm","m.mentions":{},"msgtype":"m.text"},"ts":1701370476381,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CrokpvYPonMKIxYJMd69e6P45LbjSQQyPR_Bp8OV3Oo"},
{"content":{"body":"2+","m.mentions":{},"msgtype":"m.text"},"ts":1701370490919,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$MDFecX5W7OXdmojkLCMiAhL-Et54uISzD6lq2V7T2Yg"},
{"content":{"body":"Christian Ulbrich: in new tcq can you make sure there's a way to rewind, so previous queue items aren't deleted? :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: in new tcq can you make sure there's a way to rewind, so previous queue items aren't deleted? :-)","m.mentions":{"user_ids":["@christianulbrich:matrix.org"]},"msgtype":"m.text"},"ts":1701370511138,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VBz4aRDHWUBeY-yZiQDsNvptWqqk2TWtHLaOYbIlRPU"},
{"content":{"body":" * Christian Ulbrich: in new tcq can you make sure there's a way to rewind, so previous queue items aren't lost? :-)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: in new tcq can you make sure there's a way to rewind, so previous queue items aren't lost? :-)","m.mentions":{},"m.new_content":{"body":"Christian Ulbrich: in new tcq can you make sure there's a way to rewind, so previous queue items aren't lost? :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: in new tcq can you make sure there's a way to rewind, so previous queue items aren't lost? :-)","m.mentions":{"user_ids":["@christianulbrich:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VBz4aRDHWUBeY-yZiQDsNvptWqqk2TWtHLaOYbIlRPU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370515899,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xvAgUcJIrs2GQO55MgZhBaA0qMK7zf_ebalBjq8lTvw"},
{"content":{"body":" * Christian Ulbrich: in new tcq can you make sure there's a way to rewind, so previous/accidentally advanced queue items aren't lost? :-)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: in new tcq can you make sure there's a way to rewind, so previous/accidentally advanced queue items aren't lost? :-)","m.mentions":{},"m.new_content":{"body":"Christian Ulbrich: in new tcq can you make sure there's a way to rewind, so previous/accidentally advanced queue items aren't lost? :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: in new tcq can you make sure there's a way to rewind, so previous/accidentally advanced queue items aren't lost? :-)","m.mentions":{"user_ids":["@christianulbrich:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VBz4aRDHWUBeY-yZiQDsNvptWqqk2TWtHLaOYbIlRPU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370526812,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RZZcNQ7tax0WQwF33oQ9NnPONBzz2jumluC--N7w_NQ"},
{"content":{"body":"What we want is to move the testing portion into stage 2, but allow the champion to have consensus on the specification text without rehashing old discussions when getting approval for tests. 2a/2b makes sense for me since as far as the community is concerned, they both still imply 2","m.mentions":{},"msgtype":"m.text"},"ts":1701370646675,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$L1305jzF2iGB_S6jUKf_kpWMuHMWKRJTjTnkqLP-6RE"},
{"content":{"body":"msaboff: you think users can handle renumbering existing stages, but not a non-integer number?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@msaboff:matrix.org\">msaboff</a>: you think users can handle renumbering existing stages, but not a non-integer number?","m.mentions":{"user_ids":["@msaboff:matrix.org"]},"msgtype":"m.text"},"ts":1701370677891,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$g2p767ujD5o_s-N7tzemPRuhlew4ek420TpvoTKKPyE"},
{"content":{"body":"> <@rbuckton:matrix.org> What we want is to move the testing portion into stage 2, but allow the champion to have consensus on the specification text without rehashing old discussions when getting approval for tests. 2a/2b makes sense for me since as far as the community is concerned, they both still imply 2\n\nthe difference is that design can change radically in stage 2, but can NOT change radically in the new stage","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$L1305jzF2iGB_S6jUKf_kpWMuHMWKRJTjTnkqLP-6RE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>What we want is to move the testing portion into stage 2, but allow the champion to have consensus on the specification text without rehashing old discussions when getting approval for tests. 2a/2b makes sense for me since as far as the community is concerned, they both still imply 2</blockquote></mx-reply>the difference is that design can change radically in stage 2, but can NOT change radically in the new stage","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$L1305jzF2iGB_S6jUKf_kpWMuHMWKRJTjTnkqLP-6RE"}},"msgtype":"m.text"},"ts":1701370696596,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qcWpnNaZaQ_IJOCMQc8I0MJIPGuQqkcdjt-Z_ia_yME"},
{"content":{"body":"TCQ really just needs polling instead of abusing temperature checks","m.mentions":{},"msgtype":"m.text"},"ts":1701370697812,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$QP0P-P7qW_XRBNsIcdV5q1c868NtGpqDuEtAhYRkxBw"},
{"content":{"body":"> <@ljharb:matrix.org> the difference is that design can change radically in stage 2, but can NOT change radically in the new stage\n\nYes, but if test acceptance is mostly pro-forma, a proposal shouldn't be in 2b for very long.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qcWpnNaZaQ_IJOCMQc8I0MJIPGuQqkcdjt-Z_ia_yME?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>the difference is that design can change radically in stage 2, but can NOT change radically in the new stage</blockquote></mx-reply>Yes, but if test acceptance is mostly pro-forma, a proposal shouldn't be in 2b for very long.","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$qcWpnNaZaQ_IJOCMQc8I0MJIPGuQqkcdjt-Z_ia_yME"}},"msgtype":"m.text"},"ts":1701370729699,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$G-xanl2lHuxcj3FwKPEh8DGbXR2STCDVUPIlv3DIA94"},
{"content":{"body":"2 hours free today to talk about consensus :)","m.mentions":{},"msgtype":"m.text"},"ts":1701370743484,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$FbnwxLJVYAFKKZz5ErzYvW1tHKV2FyBnZAeKPqzQabM"},
{"content":{"body":"> <@rbuckton:matrix.org> Yes, but if test acceptance is mostly pro-forma, a proposal shouldn't be in 2b for very long.\n\nif we'd had it years ago, temporal would have stayed in it for 3-4 years now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$G-xanl2lHuxcj3FwKPEh8DGbXR2STCDVUPIlv3DIA94?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Yes, but if test acceptance is mostly pro-forma, a proposal shouldn't be in 2b for very long.</blockquote></mx-reply>if we'd had it years ago, temporal would have stayed in it for 3-4 years now","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$G-xanl2lHuxcj3FwKPEh8DGbXR2STCDVUPIlv3DIA94"}},"msgtype":"m.text"},"ts":1701370760016,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mXQDV3eGT6csP8330ZNXoaYoWn0-CJ1Hm0rSK0g-tR4"},
{"content":{"body":"but certainly most proposals shouldn't stay in the new stage very long","m.mentions":{},"msgtype":"m.text"},"ts":1701370781482,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VB09zrvy3w1gdjvwk4izqNid45-9Gl26SZLnM3C8FNA"},
{"content":{"body":" * but certainly most proposals shouldn't stay in the new stage very long. some will tho.","m.mentions":{},"m.new_content":{"body":"but certainly most proposals shouldn't stay in the new stage very long. some will tho.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VB09zrvy3w1gdjvwk4izqNid45-9Gl26SZLnM3C8FNA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701370786915,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QZC4AKn0OXNjNDZ5hhk3b4-tjI62GCiuaY41G99zydI"},
{"content":{"body":"> <@rbuckton:matrix.org> TCQ really just needs polling instead of abusing temperature checks\n\nspecifically approval voting, it needs approval voting","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QP0P-P7qW_XRBNsIcdV5q1c868NtGpqDuEtAhYRkxBw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>TCQ really just needs polling instead of abusing temperature checks</blockquote></mx-reply>specifically approval voting, it needs approval voting","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QP0P-P7qW_XRBNsIcdV5q1c868NtGpqDuEtAhYRkxBw"}},"msgtype":"m.text"},"ts":1701370788795,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KwSJ1mhNadlXZH_C6Baz5qd8CtyXCYVfhmfAF2TcZgE"},
{"content":{"body":"nicolo-ribaudo: you are right, and we don't even need avote: the chairs can just dictate this","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: you are right, and we don't even need avote: the chairs can just dictate this","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1701370892523,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Ownt7autSD3oNG5ETEED0qU1Fssb4odd8_RVRgNUzvA"},
{"content":{"body":"ehhh i think things that involve external communication outside the committee do require consensus","m.mentions":{},"msgtype":"m.text"},"ts":1701370915808,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f2Yqm69rVUXRaQNj2koVzl2WXSejDitqG1WyyMz7esM"},
{"content":{"body":"In general, I'd be fine with just needing tests to advance to Stage 3, if that's the crux of what we want, but I'm uncomfortable with demoting proposals that advanced prior to this change.","m.mentions":{},"msgtype":"m.text"},"ts":1701370964252,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dNGVO20DNYpLKTOi4nl8eaY9lfV8HpSPioCCgOwylBY"},
{"content":{"body":"it's important to have a step between \"design is mostly final\" and \"tests are required\", that's the whole point of this effort","m.mentions":{},"msgtype":"m.text"},"ts":1701371001810,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1NtIinwFrtV-Sn3Hxnhrx-4NQ_yyZ6jl9R61TW7hyRE"},
{"content":{"body":"Informally, a champion could get consensus on the specification text without advancement, write the tests at the end, then ask for advancement in the following meeting.","m.mentions":{},"msgtype":"m.text"},"ts":1701371010361,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4PunwwuvyA_nKkv4CI2imYfwD81ne6UWahbgaghlpBQ"},
{"content":{"body":"Or ask for conditional advancement pending the addition of tests, with a pro-forma ratification of advancement when tests are complete.","m.mentions":{},"msgtype":"m.text"},"ts":1701371056108,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$qfEPLIfIL7U_VzvcAnnKUZxCf1qHAjYZ7kB1G4eTXyk"},
{"content":{"body":" * Or ask for conditional advancement pending the addition of tests, with a (mostly) pro-forma ratification of advancement when tests are complete.","m.mentions":{},"m.new_content":{"body":"Or ask for conditional advancement pending the addition of tests, with a (mostly) pro-forma ratification of advancement when tests are complete.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$qfEPLIfIL7U_VzvcAnnKUZxCf1qHAjYZ7kB1G4eTXyk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701371073879,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZX6FCatzU2kV5zhkkKHRoo4twKpp-A3nKv7l5RnXPLw"}
]