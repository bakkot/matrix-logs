[
{"content":{"body":"bakkot: I was wondering if there was any update to the status of https://github.com/tc39/proposal-freeze-prototype. We have a defense in depth use case that could probably use this feature.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I was wondering if there was any update to the status of https://github.com/tc39/proposal-freeze-prototype. We have a defense in depth use case that could probably use this feature.","msgtype":"m.text"},"ts":1632168530373,"senderName":"mhofman","senderId":"@mhofman:matrix.org","id":"$vnGPFpQoct161OLFJbj6G-lWONv4lh6w-BZwsxw1_3U"},
{"content":{"body":"mhofman: no updates. the place that i left it was, I have not figured a good way to represent the three states \"fully extensible, extensible by new properties but not by setting prototype, not extensible\" in a way which plays well with the MOP/proxy traps, like `isExtensible`. I haven't found anything that I liked and there may not be a way to do it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">mhofman</a>: no updates. the place that i left it was, I have not figured a good way to represent the three states &quot;fully extensible, extensible by new properties but not by setting prototype, not extensible&quot; in a way which plays well with the MOP/proxy traps, like <code>isExtensible</code>. I haven't found anything that I liked and there may not be a way to do it.","msgtype":"m.text"},"ts":1632169096101,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$psnOkDG5rBHu9NhOqF2h2KAjrfwygHTtaM7hu4IgTAM"},
{"content":{"body":"I'm not fully up to date on the issues. Is there any fundamental problem besides adding new proxy traps?","msgtype":"m.text"},"ts":1632170357460,"senderName":"mhofman","senderId":"@mhofman:matrix.org","id":"$_e9Q26V87U8_otOvBIjNJ3snIWlykkeOrEMvC7PyBiE"},
{"content":{"body":"the problem is that `isExtensible` is an existing proxy trap, which returns a boolean, and which is used for _both_ \"can add properties\" and \"can change prototype\". so what should `IsExtensible` mean in a world where those two things are not always identical?","format":"org.matrix.custom.html","formatted_body":"the problem is that <code>isExtensible</code> is an existing proxy trap, which returns a boolean, and which is used for <em>both</em> &quot;can add properties&quot; and &quot;can change prototype&quot;. so what should <code>IsExtensible</code> mean in a world where those two things are not always identical?","msgtype":"m.text"},"ts":1632175790578,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YwAIpNWd-i4oZzVO5eymph93J14jR3LzMnkNJY4AXwY"},
{"content":{"body":"Huh... We define `ScriptEvaluation` in the spec but don't actually reference it from anywhere in the spec.","format":"org.matrix.custom.html","formatted_body":"Huh... We define <code>ScriptEvaluation</code> in the spec but don't actually reference it from anywhere in the spec.","msgtype":"m.text"},"ts":1632178407033,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$K6V5bmL2sCxKynzXEXTeYCWn3SGgnkmk53WGemQN_18"},
{"content":{"body":"> <@bakkot:matrix.org> the problem is that `isExtensible` is an existing proxy trap, which returns a boolean, and which is used for _both_ \"can add properties\" and \"can change prototype\". so what should `IsExtensible` mean in a world where those two things are not always identical?\n\npresumably we could just pick one, but i'm guessing the challenge is ensuring that the one we pick matches the intention of people relying on those meanings?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YwAIpNWd-i4oZzVO5eymph93J14jR3LzMnkNJY4AXwY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>the problem is that <code>isExtensible</code> is an existing proxy trap, which returns a boolean, and which is used for <em>both</em> \"can add properties\" and \"can change prototype\". so what should <code>IsExtensible</code> mean in a world where those two things are not always identical?</blockquote></mx-reply>presumably we could just pick one, but i'm guessing the challenge is ensuring that the one we pick matches the intention of people relying on those meanings?","m.relates_to":{"m.in_reply_to":{"event_id":"$YwAIpNWd-i4oZzVO5eymph93J14jR3LzMnkNJY4AXwY"}},"msgtype":"m.text"},"ts":1632179769189,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QrLLtWXxpUNzDhNRn1CLf_32JMIxJZQXFGLS7AdVCRE"},
{"content":{"body":"rbuckton: yeah, that's the entry point, which is left to hosts; see https://html.spec.whatwg.org/multipage/webappapis.html#calling-scripts","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: yeah, that's the entry point, which is left to hosts; see https://html.spec.whatwg.org/multipage/webappapis.html#calling-scripts","msgtype":"m.text"},"ts":1632180540443,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$agHbTEiVFz9tiEmlNvIV3B71psoSc6ExymAsImxedFE"},
{"content":{"body":"we should probably call this out though","msgtype":"m.text"},"ts":1632180549460,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Je9d0llSjqQw3YPloUSaA8NETBKryWt_Mx5SBDLWz-0"},
{"content":{"body":"> <@bakkot:matrix.org> we should probably call this out though\n\nYeah, I just found it interesting it wasn't called out as such.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Je9d0llSjqQw3YPloUSaA8NETBKryWt_Mx5SBDLWz-0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>we should probably call this out though</blockquote></mx-reply>Yeah, I just found it interesting it wasn't called out as such.","m.relates_to":{"m.in_reply_to":{"event_id":"$Je9d0llSjqQw3YPloUSaA8NETBKryWt_Mx5SBDLWz-0"}},"msgtype":"m.text"},"ts":1632180568596,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$coROHmCEisuEXY7TfVxS5BbUrVs8fa8TQDC3CXFBP7w"}
]