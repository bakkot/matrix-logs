[
{"content":{"body":"bakkot: I was wondering if there was any update to the status of https://github.com/tc39/proposal-freeze-prototype. We have a defense in depth use case that could probably use this feature.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I was wondering if there was any update to the status of https://github.com/tc39/proposal-freeze-prototype. We have a defense in depth use case that could probably use this feature.","msgtype":"m.text"},"ts":1632168530373,"senderName":"mhofman","senderId":"@mhofman:matrix.org","id":"$vnGPFpQoct161OLFJbj6G-lWONv4lh6w-BZwsxw1_3U"},
{"content":{"body":"mhofman: no updates. the place that i left it was, I have not figured a good way to represent the three states \"fully extensible, extensible by new properties but not by setting prototype, not extensible\" in a way which plays well with the MOP/proxy traps, like `isExtensible`. I haven't found anything that I liked and there may not be a way to do it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">mhofman</a>: no updates. the place that i left it was, I have not figured a good way to represent the three states &quot;fully extensible, extensible by new properties but not by setting prototype, not extensible&quot; in a way which plays well with the MOP/proxy traps, like <code>isExtensible</code>. I haven't found anything that I liked and there may not be a way to do it.","msgtype":"m.text"},"ts":1632169096101,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$psnOkDG5rBHu9NhOqF2h2KAjrfwygHTtaM7hu4IgTAM"}
]