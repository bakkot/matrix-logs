[
{"content":{"body":"how do people feel about bit packing?\n\nlike if I want to represent 0, 2, or 4 booleans, I could do that by having a `{ length: 0 | 2 | 4, value: 0-16 }` pair, or I could do it by having a single int32 where the first 2 bits indicate the number of booleans and the next 0-4 bits represent the booleans themselves","format":"org.matrix.custom.html","formatted_body":"<p>how do people feel about bit packing?</p>\n<p>like if I want to represent 0, 2, or 4 booleans, I could do that by having a <code>{ length: 0 | 2 | 4, value: 0-16 }</code> pair, or I could do it by having a single int32 where the first 2 bits indicate the number of booleans and the next 0-4 bits represent the booleans themselves</p>\n","msgtype":"m.text"},"ts":1687402925126,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GYC7cJurwooRUpr1TAj2sHjoOqAVMqxDYJUNBoo75zI"},
{"content":{"body":"this doesn't come up much (ever?) on the web platform but is very common in other spaces","msgtype":"m.text"},"ts":1687402939298,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vDsVPWgj3KBcD_hgZA0fj-CGckIanxzaeuIY7cbCgHw"},
{"content":{"body":"We do that all the time in the TypeScript compiler, and there are more than a few packages built with TS that use bitflags-based enums","msgtype":"m.text"},"ts":1687403281050,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lpSvQ0_LZJUc3dZCND7jurzDw2qI9ev9H5ms2MakSm4"},
{"content":{"body":"Well, not exactly as you described I suppose","msgtype":"m.text"},"ts":1687403340130,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$sgg4--s5lsLTQ6JpO3x7ir-JnD3_4MdWIpyQRPFjKsE"},
{"content":{"body":"yeah, flags specifically is a slightly different case, I think","msgtype":"m.text"},"ts":1687403836967,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ds3-pNUP-c84dGWYrocjMJsJDF9p2LpzJpaLvc-hGwg"},
{"content":{"body":"here it's a combination of a flag and a (small) int","msgtype":"m.text"},"ts":1687403850450,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nRb1AJ_0uHV6KlFU4I1aGbPYCqsouq4l0x5QcXYhirU"},
{"content":{"body":" * here it's a combination of a flag-like thing and a (small) int","m.new_content":{"body":"here it's a combination of a flag-like thing and a (small) int","msgtype":"m.text"},"m.relates_to":{"event_id":"$nRb1AJ_0uHV6KlFU4I1aGbPYCqsouq4l0x5QcXYhirU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1687403858709,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xv8OGRzr69NKOuR_HCT-BJX33NyUzPnQagHGeX5iARY"},
{"content":{"body":"to be clear this would be specifically for a standard library API (https://github.com/tc39/proposal-arraybuffer-base64/issues/21#issuecomment-1601938101), not just in general","msgtype":"m.text"},"ts":1687407394657,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SvQhyVGv5AwGeg70rPzFC_wPhECQd_6L4lFoyuZQIo4"},
{"content":{"body":"Genuine q: Is it common to do that in languages that don't have unions/typed-structs/low-bit-width-integers? Feels more like the type of thing I would see in C/Rust style languages, (as a first reaction)","msgtype":"m.text"},"ts":1687415725859,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$wHCyP6DoCUkf9HOvDxDcBzgv91Iy3HJ6ui7BNAISFkE"},
{"content":{"body":"bakkot: bit packing into object fields?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: bit packing into object fields?","msgtype":"m.text"},"ts":1687421365056,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2nYeYpJYNIVDOKh-vQ50VIgDO61ib5M0e9zZDKy_7-Y"},
{"content":{"body":"i think that makes more sense in structs than in ordinary objects","msgtype":"m.text"},"ts":1687421379526,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$68Wb6zvpVYvFBzZtwOJQTX7SAiMI3i1yu5gmoy1kjC4"},
{"content":{"body":"🇯🇵🇯🇵🇯🇵 ***Reminder***  🇯🇵🇯🇵🇯🇵\n\n- Please fill in [the Interest Survey](https://github.com/tc39/Reflector/issues/478) for the Sept/Nov in-person plenary meeting in Tokyo.\n\n- It only take 60s to complete. The deadline is Sunday 25th June (three days time).\n\n- Thank you to the 26 people who have already completed it 👍\n","format":"org.matrix.custom.html","formatted_body":"<p>🇯🇵🇯🇵🇯🇵 <em><strong>Reminder</strong></em>  🇯🇵🇯🇵🇯🇵</p>\n<ul>\n<li>\n<p>Please fill in <a href=\"https://github.com/tc39/Reflector/issues/478\">the Interest Survey</a> for the Sept/Nov in-person plenary meeting in Tokyo.</p>\n</li>\n<li>\n<p>It only take 60s to complete. The deadline is Sunday 25th June (three days time).</p>\n</li>\n<li>\n<p>Thank you to the 26 people who have already completed it 👍</p>\n</li>\n</ul>\n","msgtype":"m.text"},"ts":1687427589624,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$1lPCrBj7qV7sJwzowtm7ZWQsy84dkSslZ3NDzM-7-ew"},
{"content":{"body":"> <@robpalme:matrix.org> 🇯🇵🇯🇵🇯🇵 ***Reminder***  🇯🇵🇯🇵🇯🇵\n> \n> - Please fill in [the Interest Survey](https://github.com/tc39/Reflector/issues/478) for the Sept/Nov in-person plenary meeting in Tokyo.\n> \n> - It only take 60s to complete. The deadline is Sunday 25th June (three days time).\n> \n> - Thank you to the 26 people who have already completed it 👍\n> \n\nNote, TC39 in Japan is at risk of not happening unless we see more interest. So please fill this out.\n\nEven if you aren’t sure about your availability, it would be good to hear that (it is an option in the survey). If you are aware of whether someone else is likely to attend, but they are unable to fill this out (e.g. they are on leave), let’s get that communicated somehow as well.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%241lPCrBj7qV7sJwzowtm7ZWQsy84dkSslZ3NDzM-7-ew\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br><p>🇯🇵🇯🇵🇯🇵 <em><strong>Reminder</strong></em>  🇯🇵🇯🇵🇯🇵</p>\n<ul>\n<li>\n<p>Please fill in <a href=\"https://github.com/tc39/Reflector/issues/478\">the Interest Survey</a> for the Sept/Nov in-person plenary meeting in Tokyo.</p>\n</li>\n<li>\n<p>It only take 60s to complete. The deadline is Sunday 25th June (three days time).</p>\n</li>\n<li>\n<p>Thank you to the 26 people who have already completed it 👍</p>\n</li>\n</ul>\n</blockquote></mx-reply><p>Note, TC39 in Japan is at risk of not happening unless we see more interest. So please fill this out.</p>\n<p>Even if you aren’t sure about your availability, it would be good to hear that (it is an option in the survey). If you are aware of whether someone else is likely to attend, but they are unable to fill this out (e.g. they are on leave), let’s get that communicated somehow as well.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$1lPCrBj7qV7sJwzowtm7ZWQsy84dkSslZ3NDzM-7-ew"}},"msgtype":"m.text"},"ts":1687443557092,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HPEaXGsWfMD62XfXBi92isPmaEIxS6FEbmXYD-eswtE"},
{"content":{"body":"does 262 require denormals to be supported?","msgtype":"m.text"},"ts":1687444564726,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-TzPuwGZBTB-7Yf0bXI6mCgaqNARL3IOCI2CxGs3f8w"},
{"content":{"body":"the Number section reads like yes, but https://tc39.es/ecma262/#sec-number.min_value reads like no","msgtype":"m.text"},"ts":1687444570528,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TK7VvXdunBio3JBpw8FQ-Fs5DHKNWqdSo3CcxWYDMhI"},
{"content":{"body":"> <@shuyuguo:matrix.org> bakkot: bit packing into object fields?\n\nno, I mean, the options are either bit packing (into a single Number), or object fields","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2nYeYpJYNIVDOKh-vQ50VIgDO61ib5M0e9zZDKy_7-Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: bit packing into object fields?</blockquote></mx-reply>no, I mean, the options are either bit packing (into a single Number), or object fields","m.relates_to":{"m.in_reply_to":{"event_id":"$2nYeYpJYNIVDOKh-vQ50VIgDO61ib5M0e9zZDKy_7-Y"}},"msgtype":"m.text"},"ts":1687450010015,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IT498Mv4MYsi8p8YazjvEwJ0OIrNlCWSiALZea-wB54"},
{"content":{"body":"the space of values to represent in this case is small enough to fit into a Uint32, so we could just use a Number, but that's more opaque for consumers than using separate object fields","msgtype":"m.text"},"ts":1687450037132,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xfDsgDIBUIVjslKhYz49tGr8gWSidcA6HWxMuVGLeh4"},
{"content":{"body":"> <@shuyuguo:matrix.org> the Number section reads like yes, but https://tc39.es/ecma262/#sec-number.min_value reads like no\n\n6.1.6.1 tells us exactly how many inhabitants the Number type has, so subnormals must be supported","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TK7VvXdunBio3JBpw8FQ-Fs5DHKNWqdSo3CcxWYDMhI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>the Number section reads like yes, but https://tc39.es/ecma262/#sec-number.min_value reads like no</blockquote></mx-reply>6.1.6.1 tells us exactly how many inhabitants the Number type has, so subnormals must be supported","m.relates_to":{"m.in_reply_to":{"event_id":"$TK7VvXdunBio3JBpw8FQ-Fs5DHKNWqdSo3CcxWYDMhI"}},"msgtype":"m.text"},"ts":1687454982632,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$7WLcxq9YPr7BfsjxGqavHVg4dVKB-CjkcGdhK_4407k"},
{"content":{"body":"should we normative PR to change the Number.MIN_VALUE requirements?","msgtype":"m.text"},"ts":1687455006411,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$R98BcDZtdErSUNSHo8lThLDI34M2n-tL1YL7s6Zt0W8"},
{"content":{"body":"no, we should add a clarifying note","msgtype":"m.text"},"ts":1687455074538,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$I6XDLEGPIsi5seXHdQT_SgDvT3T5WwRn2EKxpgyY4Pc"},
{"content":{"body":"per https://esdiscuss.org/topic/denormalized-numbers","msgtype":"m.text"},"ts":1687455091390,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6j-8gNmptpxqskfo2JKSHR6ljqwNQ2v653aOzNVT_xg"},
{"content":{"body":"so like... if your implementation is not compliant, please make it non-compliant in this way?","msgtype":"m.text"},"ts":1687455141900,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2vjfyGokh9lrswINwtinXKk6bukapM1tndNdviRCwTM"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1687455144793,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6wtO3Jq3yvTFND7KcMFMAmrKqxzdde83h3pDbj8fn50"},
{"content":{"body":"\"Implementations are required to support denormalized numbers. However, non-conforming implementations which do not denormalized numbers should set Number.MIN_VALUE to the smallest value they are capable of representing\"","msgtype":"m.text"},"ts":1687455149987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v302Yd0B068tB_yk-pvl5Xi_RVwL6ciXDkFFhUdjtcQ"},
{"content":{"body":"it would still be normative IMO to replace that sentence with a note","msgtype":"m.text"},"ts":1687455187138,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PtIpNWDcst_P3igxFx6WLY14yBeAz5MzeqcHXuarbq0"},
{"content":{"body":"we should needs-consensus PR that","msgtype":"m.text"},"ts":1687455194899,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DN0eghWJh2WaXeHAlh1tt7gyR_f_MTagWw01A4uCiwc"},
{"content":{"body":"I really do not think that's normative","msgtype":"m.text"},"ts":1687455230753,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tnhvqyJ_7p4JscRh01sK95Egvb4B3l_vwmsIFYnYJH4"},
{"content":{"body":"it's what it already says, for one thing","msgtype":"m.text"},"ts":1687455238062,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d1ODYeM7I7D67eGoekp34YNKBBvbrF8RkIqCl-XNIdo"},
{"content":{"body":"I guess it's fine since it is only talking about non-conforming implementations, which doesn't really have any jurisdiction over","msgtype":"m.text"},"ts":1687455458593,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KCRBEj3M104FVXbRr2wkJtfwA9vzel_0-372yb_JI5Q"},
{"content":{"body":"and the statement it's making, on behalf of committee, is already being made today","msgtype":"m.text"},"ts":1687455470824,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$byB19QzFvMSGC4RWZccqaz1iDUGu13Hs2Xj50aOg0XM"},
{"content":{"body":" * I guess it's fine since it is only talking about non-conforming implementations, which the committee doesn't really have any jurisdiction over","m.new_content":{"body":"I guess it's fine since it is only talking about non-conforming implementations, which the committee doesn't really have any jurisdiction over","msgtype":"m.text"},"m.relates_to":{"event_id":"$KCRBEj3M104FVXbRr2wkJtfwA9vzel_0-372yb_JI5Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1687455485481,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$531veyIpg-24U1uwaeActONY1msDnCOHEw3DPLfiZqw"}
]