[
{"content":{"body":"for coding interviews, silly ;)","m.mentions":{},"msgtype":"m.text"},"ts":1701701804374,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$25Xn1UN6W_ov8KLzxA-UvumWIgKV23mdgfpJk8k0i7o"},
{"content":{"body":"Trying to remember: do any browser engines actually support TCO right now?","msgtype":"m.text"},"ts":1701704226372,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$Y4eWkOIbY8qyGbjQXzyyGFD1oE1ywmbvJXu4iD1zYDs"},
{"content":{"body":"> <@anthonybullard:matrix.org> Trying to remember: do any browser engines actually support TCO right now?\n\nJSC supports PTCs","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Y4eWkOIbY8qyGbjQXzyyGFD1oE1ywmbvJXu4iD1zYDs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">@anthonybullard:matrix.org</a><br>Trying to remember: do any browser engines actually support TCO right now?</blockquote></mx-reply>JSC supports PTCs","m.mentions":{"user_ids":["@anthonybullard:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Y4eWkOIbY8qyGbjQXzyyGFD1oE1ywmbvJXu4iD1zYDs"}},"msgtype":"m.text"},"ts":1701706894251,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tn4sXuHUmv_mTRP-hIQ2UciTKASM4HhLTwH2JcV3iqQ"},
{"content":{"body":"how come `class Foo extends \"bar\" {}` is valid syntax given that even with return override it can't ever work?","format":"org.matrix.custom.html","formatted_body":"how come <code>class Foo extends \"bar\" {}</code> is valid syntax given that even with return override it can't ever work?","m.mentions":{},"msgtype":"m.text"},"ts":1701724083162,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mV6UK-UV4-ekfp2Xr8K5ngBXtJIWFC7Vgiva1OW9J_Y"},
{"content":{"body":"How come (3)() is valid syntax even though it can't ever work?","m.mentions":{},"msgtype":"m.text"},"ts":1701724148596,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4zQCd4-cw1DQbCpjU0Qg1ppjFgfrp--DvIbsnh7Hozs"},
{"content":{"body":"> <@bakkot:matrix.org> I still do not understand why anyone wants this\n\nAdvent of Code of course /s","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24lcbFOACxttL36dWIySSxAfdByghLJt2pC04PIjKuIFo\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I still do not understand why anyone wants this</blockquote></mx-reply>Advent of Code of course /s","m.relates_to":{"m.in_reply_to":{"event_id":"$lcbFOACxttL36dWIySSxAfdByghLJt2pC04PIjKuIFo"}},"msgtype":"m.text"},"ts":1701724164161,"senderName":"ethanarrowood","senderId":"@ethanarrowood:matrix.org","id":"$p8Oby3QlzHGIpJfRxYIhPiR5Mbg2n5jly9q3KQPR8FM"},
{"content":{"body":"we just don't make all the runtime errors into syntax errors, in general. Tools have been doing a good job of filling the gap.","m.mentions":{},"msgtype":"m.text"},"ts":1701724190867,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Kpq48h1x0Z_Mc6IOLSEbucXVR09bUymaCrYS0riiuiU"},
{"content":{"body":"> <@ljharb:matrix.org> how come `class Foo extends \"bar\" {}` is valid syntax given that even with return override it can't ever work?\n\nBecause it will obviously error at runtime? Adding a syntax error would be inconsistent since `class Foo extends Bar` when `Bar` is `\"bar\"` *can't* be recognized as a syntax error. If we try to ban all the corner cases, we unnecessarily complicate the specification with rules that end up being inconsistent in practice.\n\nIf, however, classes had been designed to be statically evaluated, such that you could only extend an identifier that is statically known to be a class, then it would have made sense to make that a syntax error. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mV6UK-UV4-ekfp2Xr8K5ngBXtJIWFC7Vgiva1OW9J_Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />how come <code>class Foo extends \"bar\" {}</code> is valid syntax given that even with return override it can't ever work?</blockquote></mx-reply><p>Because it will obviously error at runtime? Adding a syntax error would be inconsistent since <code>class Foo extends Bar</code> when <code>Bar</code> is <code>&quot;bar&quot;</code> <em>can't</em> be recognized as a syntax error. If we try to ban all the corner cases, we unnecessarily complicate the specification with rules that end up being inconsistent in practice.</p>\n<p>If, however, classes had been designed to be statically evaluated, such that you could only extend an identifier that is statically known to be a class, then it would have made sense to make that a syntax error.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$mV6UK-UV4-ekfp2Xr8K5ngBXtJIWFC7Vgiva1OW9J_Y"}},"msgtype":"m.text"},"ts":1701728423539,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Cgh80dE9-GFGXRB9aX0CI4gKDm0z1cTmzyTdcufeKiE"},
{"content":{"body":"(and the Heritage Clause grammar would have been far more restrictive) ","msgtype":"m.text"},"ts":1701728483021,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$U6SafMhliwJUBViH_kSgFGeeYdtti5homOGgDwJCqFQ"},
{"content":{"body":"* (and the HeritageClause grammar would have been far more restrictive) ","m.new_content":{"body":"(and the HeritageClause grammar would have been far more restrictive) ","msgtype":"m.text"},"m.relates_to":{"event_id":"$U6SafMhliwJUBViH_kSgFGeeYdtti5homOGgDwJCqFQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1701728493416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$qpL-dcaa8ZgEG8lg3RhYiosRrReyb2OtSDHF2WwiBx4"}
]