[
{"content":{"body":"If the keyword only works in some places and not others might be confusing. e.g if can't change:\n\n```\nfunction f(cb: immediate Fn) { cb() }\n```\n\nto\n\n```\ntype T = immediate Fn;\nfunction f(cb: T) { cb() }\n```","format":"org.matrix.custom.html","formatted_body":"If the keyword only works in some places and not others might be confusing. e.g if can't change:<br /><br />```<br />function f(cb: immediate Fn) { cb() }<br />```<br /><br />to<br /><br />```<br />type T = immediate Fn;<br />function f(cb: T) { cb() }<br />```","msgtype":"m.text"},"ts":1722580723216,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$XHe72Cr-zCrv6Hpu0vHJIUc0nCeZh6JnfHYFeHgXGHo"},
{"content":{"body":"> <@aclaymore:matrix.org> If the keyword only works in some places and not others might be confusing. e.g if can't change:\n> \n> ```\n> function f(cb: immediate Fn) { cb() }\n> ```\n> \n> to\n> \n> ```\n> type T = immediate Fn;\n> function f(cb: T) { cb() }\n> ```\n\n`unique symbol` is similarly restricted","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XHe72Cr-zCrv6Hpu0vHJIUc0nCeZh6JnfHYFeHgXGHo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br />If the keyword only works in some places and not others might be confusing. e.g if can't change:<br /><br />```<br />function f(cb: immediate Fn) { cb() }<br />```<br /><br />to<br /><br />```<br />type T = immediate Fn;<br />function f(cb: T) { cb() }<br />```</blockquote></mx-reply><code>unique symbol</code> is similarly restricted","m.relates_to":{"m.in_reply_to":{"event_id":"$XHe72Cr-zCrv6Hpu0vHJIUc0nCeZh6JnfHYFeHgXGHo"}},"msgtype":"m.text"},"ts":1722600209921,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tAdmpwSXpTfgiJvRI1SmmtIwjUBEaOKFpkURK0PVDdA"},
{"content":{"body":"True. It's like the reverse. And its not `const s: symbol = unique new Symbol()`\ngood point ","format":"org.matrix.custom.html","formatted_body":"True. It's like the reverse. And its not `const s: symbol = unique new Symbol()`<br />good pointÂ ","msgtype":"m.text"},"ts":1722608379166,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8LwXs7GdCFpXe369eYoqx7qQrRE35aoGPd9D7scxzHE"},
{"content":{"body":"Michael Ficarra: why does https://github.com/michaelficarra/proposal-concurrency-control include concurrent `reduce`? does that make sense in some way I'm not immediately seeing?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: why does https://github.com/michaelficarra/proposal-concurrency-control include concurrent <code>reduce</code>? does that make sense in some way I'm not immediately seeing?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1722626683442,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0UgyYs-qfiwP6EGp0OglDUMjMYKFjSLBJm5BXyZM4uI"},
{"content":{"body":"I guess the idea is that a lot of operations are associative? but the types only work out if your reducer function is `(T, T) -> T` and not `(A, T) -> A`","format":"org.matrix.custom.html","formatted_body":"I guess the idea is that a lot of operations are associative? but the types only work out if your reducer function is <code>(T, T) -&gt; T</code> and not <code>(A, T) -&gt; A</code>","m.mentions":{},"msgtype":"m.text"},"ts":1722626767560,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-ML-eKe6c-lawAalAlWV-wFQBxTP72niZ3uBZktAu5s"},
{"content":{"body":"yep, don't do concurrent reduce if your operation isn't associative","msgtype":"m.text"},"ts":1722626967019,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PNrIA_fs26l3zYZ5hgVuU0tAneqQy-MvAGGT7WTLEU8"}
]