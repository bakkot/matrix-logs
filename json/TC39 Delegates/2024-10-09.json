[
{"content":{"body":"please add yourself to the attendees list at the top of today's notes doc.  (and yesterday's if you missed).  thank you üôè","m.mentions":{},"msgtype":"m.text"},"ts":1728435915486,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$IGG_Gsmk-fXHoXSanlCUElcWnlOz_WYh3-d7H9DfuXE"},
{"content":{"body":"I captured the queue","m.mentions":{},"msgtype":"m.text"},"ts":1728437241285,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ahunJt64pibJaH9CpEM1k1iFsfos8FpXtUmzk7NU_SA"},
{"content":{"body":"7 years","m.mentions":{},"msgtype":"m.text"},"ts":1728437426266,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$qfVUmlTv1dKkvqdrjFob0WfcouvSPY5PRgBMTlK_uaE"},
{"content":{"body":" * 7 years, wow","m.mentions":{},"m.new_content":{"body":"7 years, wow","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$qfVUmlTv1dKkvqdrjFob0WfcouvSPY5PRgBMTlK_uaE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1728437434498,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$1cWFKBExn2LDX0nfdTJlPWZEzFrlHEp6wdh4pq90qbA"},
{"content":{"body":"Fun co-incidence. The 'toSorted' spec bug was caught by a Japanese developer","m.mentions":{},"msgtype":"m.text"},"ts":1728437954452,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ou0aDOn_hE7WkG2l6Igdr0jBX2vGhCNg2n-bdWMQh6g"},
{"content":{"body":"\"Summing a list is a very common operation and is one of the few remaining use cases for Array.prototype.reduce.\"","msgtype":"m.text"},"ts":1728438095359,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YVcR9LpW7XgdrD8QFxctBhwSi0rk67LxUnB4fXTy5F0"},
{"content":{"body":"are we going to discouraging use of [].reduce?","msgtype":"m.text"},"ts":1728438106660,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Htilf_cdws2pnz9RWlv7UApWM1mwO3KIq2-4aeVvX9I"},
{"content":{"body":"no, because you don't necessarily want the new behavior","m.mentions":{},"msgtype":"m.text"},"ts":1728438181545,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Ix7b9zKwMIPsNRCSzpZ91-wbDKbV32MLNOAqKqYWHyo"},
{"content":{"body":"The reduce will be faster still, right?","m.mentions":{},"msgtype":"m.text"},"ts":1728438202117,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$5cv03rKIWv8dLTGFo_6eNfoOEV5eh5UZgLdQgywNocM"},
{"content":{"body":"@jkup:matrix.org an equivalent loop will, at least","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jkup:matrix.org\">@jkup</a> an equivalent loop will, at least","msgtype":"m.text"},"ts":1728438250006,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$29ta0xAJT5_LYPzMM27kzgVD7EOagJGJwqWBa6tthLE"},
{"content":{"body":"but you REALLY don't want to do that","msgtype":"m.text"},"ts":1728438259156,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_sxRWg4Z3U4emkPjnuow9hZZvpy_B60gzioG5GA8Iio"},
{"content":{"body":"your result can accumulate a ton of error","msgtype":"m.text"},"ts":1728438281910,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-to-eB9mjEHF9s6s_HtNCoqzygNQ9j6jrYxHx8mHjTI"},
{"content":{"body":"the wording sounds like reduce is a bad thing (actually yes in most cases it _reduce_ the code readability)","format":"org.matrix.custom.html","formatted_body":"the wording sounds like reduce is a bad thing (actually yes in most cases it <em>reduce</em> the code readability)","msgtype":"m.text"},"ts":1728438283897,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$J-UGQ0aTmmrAuYiTQMiPxuuMZpfIcyuOq-iD5cPaQ7c"},
{"content":{"body":"but I'm not expecting that we should have a proposal to solve \"the few remaining use cases of reduce\", other motivations are ok thou","msgtype":"m.text"},"ts":1728438348139,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$JJSW3EJIUAxa1EUjqoaHwFE_Uzkck7EGo5XOhwo2Arw"},
{"content":{"body":"> <@michaelficarra:matrix.org> but you REALLY don't want to do that\n\nI mean, in a specific case you might know that you're just adding e.g. a couple dozen single-digit ints or something though","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_sxRWg4Z3U4emkPjnuow9hZZvpy_B60gzioG5GA8Iio?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>but you REALLY don&#39;t want to do that</blockquote></mx-reply>I mean, in a specific case you might know that you're just adding e.g. a couple dozen single-digit ints or something though","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_sxRWg4Z3U4emkPjnuow9hZZvpy_B60gzioG5GA8Iio"}},"msgtype":"m.text"},"ts":1728438387840,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$GFoxALPfAZeOOaUtHYUC9k7_TobsSZFgyxbCD3IkKao"},
{"content":{"body":"just depends on the guarantees you're working with","m.mentions":{},"msgtype":"m.text"},"ts":1728438402829,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Lk9mzmA3u49OF-WwoKUBUhRe3RmJJSwESMSd6CuR91o"},
{"content":{"body":"did you know reduce is pronounced re-doo-che","m.mentions":{},"msgtype":"m.text"},"ts":1728438427181,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YLXe1kR2IA8WV7FRFwG9s5_GF3dnIzhSMTLfQcc1XU4"},
{"content":{"body":"@rkirsling:matrix.org if the number of values you're summing is small enough, the difference in perf between compensated and uncompensated is negligible anyway","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling</a> if the number of values you&#39;re summing is small enough, the difference in perf between compensated and uncompensated is negligible anyway","msgtype":"m.text"},"ts":1728438447354,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UQe8wb7ZbBagJ-bWJ0pgTv9LP6mBB-647fDEANSPRkE"},
{"content":{"body":"touch√©!","m.mentions":{},"msgtype":"m.text"},"ts":1728438458628,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$tGrGa_LWoVsyRfm1Oo1y6NP3S8zBH-MsYRCI7uRxcFE"},
{"content":{"body":"and once it gets large enough to care about perf, you should also care about error accumulation","msgtype":"m.text"},"ts":1728438477336,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3hbCAmpZyzC9UwXqQUmYlFREcCnXo06fSpGrOtR_SBQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> did you know reduce is pronounced re-doo-che\n\nnot re-diu-s, or it's a ghoti joke?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YLXe1kR2IA8WV7FRFwG9s5_GF3dnIzhSMTLfQcc1XU4\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>did you know reduce is pronounced re-doo-che</blockquote></mx-reply>not re-diu-s, or it&#39;s a ghoti joke?","m.relates_to":{"m.in_reply_to":{"event_id":"$YLXe1kR2IA8WV7FRFwG9s5_GF3dnIzhSMTLfQcc1XU4"}},"msgtype":"m.text"},"ts":1728438479652,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jyA3j35SsWVSe4anTGkfR424Xen96xtaVlSgU7pgB-4"},
{"content":{"body":"it is neither, it's just a \"let's pronounce this word in a silly way\" joke","m.mentions":{},"msgtype":"m.text"},"ts":1728438529009,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$virZfSg2xR3sDRs-pNbmZOaxgRhtPxF5yvEe-WVeXB4"},
{"content":{"body":"...the silly way in this case being like Italian, presumably :D","m.mentions":{},"msgtype":"m.text"},"ts":1728438572084,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$-QSIFuEzO423WSigeNE6BDapR3dnMgdjLYSfgO5lrnw"},
{"content":{"body":"the contents of the schedule may have shifted in flight.  presenters please review and let us know if any issues","m.mentions":{},"msgtype":"m.text"},"ts":1728438816241,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$J5p4iJDyiUc-RINoYGFSPIosd8CdZwpl5MOBzHxTNbA"},
{"content":{"body":"> <@jkup:matrix.org> The reduce will be faster still, right?\n\nI would guess this will actually be faster because the reduce has to do callbacks. at least in the case where the engine knows it's a list of numbers already, `sumPrecise` can avoid a lot of work, which may make up for the difference","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5cv03rKIWv8dLTGFo_6eNfoOEV5eh5UZgLdQgywNocM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jkup:matrix.org\">@jkup:matrix.org</a><br>The reduce will be faster still, right?</blockquote></mx-reply>I would guess this will actually be faster because the reduce has to do callbacks. at least in the case where the engine knows it's a list of numbers already, <code>sumPrecise</code> can avoid a lot of work, which may make up for the difference","m.mentions":{"user_ids":["@jkup:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5cv03rKIWv8dLTGFo_6eNfoOEV5eh5UZgLdQgywNocM"}},"msgtype":"m.text"},"ts":1728438889766,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$avjmGZx4sKBHLAT9hJTjl3vIE-EPPR5MELWr9PzTpko"},
{"content":{"body":"I feel `setdefault` is ok. Not sure why people prefer callback...","format":"org.matrix.custom.html","formatted_body":"I feel <code>setdefault</code> is ok. Not sure why people prefer callback...","m.mentions":{},"msgtype":"m.text"},"ts":1728439081480,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$t4xcXpKhkdRv-ICraSJsDAB35qd18oSHLn6fgqX32lk"},
{"content":{"body":"because sometimes the default is expensive to compute.","m.mentions":{},"msgtype":"m.text"},"ts":1728439095771,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ls8ow2aY-BRP9G9Jiiywl-TTJjB6v9X0GqTfvWqaxxo"},
{"content":{"body":"the callback can be lifted outside a loop, I'm not too worried about it","msgtype":"m.text"},"ts":1728439098901,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JDTHnL9Z9RvjaIR3qO2NClliGyWN5pxOrpge_Ws3zWY"},
{"content":{"body":"`getOrSet`","format":"org.matrix.custom.html","formatted_body":"<code>getOrSet</code>","msgtype":"m.text"},"ts":1728439099174,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-27EkZZTafQpBhsnUpOw8NrdNQBhfuH0bhvCZY6MMAE"},
{"content":{"body":"it's true that people _can_ avoid re-creating the callback, but they're not going to","format":"org.matrix.custom.html","formatted_body":"it's true that people <em>can</em> avoid re-creating the callback, but they're not going to","m.mentions":{},"msgtype":"m.text"},"ts":1728439135236,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZUxzKx90QXuMB-vEEuri-9OmkLJ9ehZAVqMdIlkU3H8"},
{"content":{"body":"yeah","m.mentions":{},"msgtype":"m.text"},"ts":1728439139587,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cSuzHqMtFshRw0TzNk7v7IwlcBpxZdsi4jE0Hqb91Wc"},
{"content":{"body":"i am also skeptical that prepending `() =>` would have a noticeable perf hit, but have no way to argue that","format":"org.matrix.custom.html","formatted_body":"i am also skeptical that prepending <code>() =&gt;</code> would have a noticeable perf hit, but have no way to argue that","m.mentions":{},"msgtype":"m.text"},"ts":1728439140294,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9i1mGMOIwaITK1FaoLDZsLabiYULrnuJZdIZaWYEeFE"},
{"content":{"body":"allocating throwaway closures is a lot more expensive than `0`","format":"org.matrix.custom.html","formatted_body":"allocating throwaway closures is a lot more expensive than <code>0</code>","m.mentions":{},"msgtype":"m.text"},"ts":1728439154145,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U11iDrjkoH86rZf1uX7kKiHw-0y5PqBPK8qx1MPfoI0"},
{"content":{"body":"it will have a noticeable perf hit in a hot loop for sure?","m.mentions":{},"msgtype":"m.text"},"ts":1728439156914,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IHaqetOcbanC-mTRzqSU_H5BYMoVHxGPZ2g7b-9QmQM"},
{"content":{"body":"allocation + call","m.mentions":{},"msgtype":"m.text"},"ts":1728439160233,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WJG8oOfT6jH7ktEfLJgB4-PgZciLF0Vguyw9X1ozQs0"},
{"content":{"body":"> <@bakkot:matrix.org> allocating throwaway closures is a lot more expensive than `0`\n\n```\nfunction returnZero() { return 0; }\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$U11iDrjkoH86rZf1uX7kKiHw-0y5PqBPK8qx1MPfoI0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>allocating throwaway closures is a lot more expensive than <code>0</code></blockquote></mx-reply><pre><code>function returnZero() { return 0; }\n</code></pre>\n","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$U11iDrjkoH86rZf1uX7kKiHw-0y5PqBPK8qx1MPfoI0"}},"msgtype":"m.text"},"ts":1728439174563,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$NnNVhrf9_ZMJ-cuvxWJauSk3a0fMHQ6swMRWM8kr7tM"},
{"content":{"body":"yeah people aren't gonna do that, i agree with kevin there","m.mentions":{},"msgtype":"m.text"},"ts":1728439185730,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vWqECPSxcqAGhXXP8Pbz7DKQmHacBAs-YndB5C42bFw"},
{"content":{"body":"people will write ()=>0","m.mentions":{},"msgtype":"m.text"},"ts":1728439188968,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$V8p2LB52jNXKm2aoO7XJzdRfZMr47XL5-KWUABscBKQ"},
{"content":{"body":"100% of the time","m.mentions":{},"msgtype":"m.text"},"ts":1728439193527,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Y00R1ljno6PXMG1HYgM_guUONdwhiWPec7Ux4sIJnxQ"},
{"content":{"body":"@shuyuguo:matrix.org @bakkot:matrix.org when it's `[]`, you're creating tons of thrown-away arrays instead of just not calling a callback","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shu</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot</a> when it&#39;s <code data-md=\"`\">[]</code>, you&#39;re creating tons of thrown-away arrays instead of just not calling a callback","msgtype":"m.text"},"ts":1728439196937,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tRLhiAOmoEVewfIIP4olguXzqLpqDzWZcIofNWfTrd8"}
]