[
{"content":{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","format":"org.matrix.custom.html","formatted_body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","mimetype":"text/plain"},{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","mimetype":"text/html"}]},"ts":1661051244228,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ah2LQ2qBvnV60ch0AHl3ZoR7PgARlxsrlrruRXGXN08"},
{"content":{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise should be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","format":"org.matrix.custom.html","formatted_body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise should be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","m.new_content":{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise should be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","format":"org.matrix.custom.html","formatted_body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise should be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise should be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","mimetype":"text/plain"},{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise should be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$ah2LQ2qBvnV60ch0AHl3ZoR7PgARlxsrlrruRXGXN08","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise should be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","mimetype":"text/plain"},{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise should be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this.)","mimetype":"text/html"}]},"ts":1661051257757,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$22BIsRiUNPLT1Q8glQ3iUqYZjZXOCQ3GXlU3dSvATdE"},
{"content":{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","format":"org.matrix.custom.html","formatted_body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","m.new_content":{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","format":"org.matrix.custom.html","formatted_body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","mimetype":"text/plain"},{"body":"I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$ah2LQ2qBvnV60ch0AHl3ZoR7PgARlxsrlrruRXGXN08","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?\nFor example, in `await Array.fromAsync([ Promise.resolve(0) ])`, the input promise must be awaited only once. How can that be verified?\n(This is the same behavior as in `for await (const v of [ Promise.resolve(0) ]) …`, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for `for await` either.)","mimetype":"text/plain"},{"body":" * I’m starting to write Test262 tests for Array.fromAsync. Is there any way to check that a promise in an async function has been awaited only once?<br>For example, in <code>await Array.fromAsync([ Promise.resolve(0) ])</code>, the input promise must be awaited only once. How can that be verified?<br>(This is the same behavior as in <code>for await (const v of [ Promise.resolve(0) ]) …</code>, and I can’t find any test in https://github.com/tc39/test262/tree/master/test/language/statements/for-await-of that verifies this for <code>for await</code> either.)","mimetype":"text/html"}]},"ts":1661051301557,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ZCOOak2YqEJvaBOqSHggx1raV_nC38GUYdP_7gCEdBE"},
{"content":{"body":"Outside of test262 I would patch `then` to record how many times it is called. Not sure whether test262 has any other mechanisms. ","format":"org.matrix.custom.html","formatted_body":"Outside of test262 I would patch <code>then</code> to record how many times it is called. Not sure whether test262 has any other mechanisms.","msgtype":"m.text"},"ts":1661055349276,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0FbeqRhElR0kVslR6p-Rqg9rCQuALsh_IKgZvLU2T9s"},
{"content":{"body":"was the sf community event recorded anywhere?","msgtype":"m.text","org.matrix.msc1767.text":"was the sf community event recorded anywhere?"},"ts":1661061212581,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$DdhqBt-rd9VbFuOHEh6bZPy8UWA7Z2iQSWdU_Mdq-_M"}
]