[
{"content":{"body":"All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚\n\n```rust\nfn main() {\n   let a = (1..5).into_iter();\n   //   for i in &a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚</p>\n<pre><code class=\"language-rust\">fn main() {\n   let a = (1..5).into_iter();\n   //   for i in &amp;a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚\n\n```rust\nfn main() {\n   let a = (1..5).into_iter();\n   //   for i in &a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n```","mimetype":"text/plain"},{"body":"<p>All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚</p>\n<pre><code class=\"language-rust\">fn main() {\n   let a = (1..5).into_iter();\n   //   for i in &amp;a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657261641425,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$2BJw8sZuOurUU5Pl2n8TYeNW6N98OVcqLJ9LNSmTlME"},
{"content":{"body":"In general, iterators arenâ€™t reusable, with very few exceptions (notably, builtins like array) - i just donâ€™t think people are going to consistently have the intuition that they will be.","msgtype":"m.text"},"ts":1657264572250,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wDm9DzNoADiHdv-zQAz4cEMVKl6k1jxmAw8gk_GKPlM"},
{"content":{"body":"For those who will be in SF for TC39 in 12 days time, @sffc has organized a Community event on the Wednesday 20th evening at 17:30.\n\n  https://github.com/tc39/Reflector/issues/437#issuecomment-1177199594\n\nPlease let Shane know if you would like to give a presentation or participate in the panel.","msgtype":"m.text","org.matrix.msc1767.text":"For those who will be in SF for TC39 in 12 days time, @sffc has organized a Community event on the Wednesday 20th evening at 17:30.\n\n  https://github.com/tc39/Reflector/issues/437#issuecomment-1177199594\n\nPlease let Shane know if you would like to give a presentation or participate in the panel."},"ts":1657278128646,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ig31z5t81vXqS5qWVQqPrgP5HtLBFXFaNelD5M6A6-0"},
{"content":{"body":"Also, if you wish to put an item on the Plenary agenda for stage advancement, you have a little over 24 hours to do so.\n\nhttps://github.com/tc39/Reflector/issues/437#issuecomment-1178843643","msgtype":"m.text","org.matrix.msc1767.text":"Also, if you wish to put an item on the Plenary agenda for stage advancement, you have a little over 24 hours to do so.\n\nhttps://github.com/tc39/Reflector/issues/437#issuecomment-1178843643"},"ts":1657278219948,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Tu-Xjqc0-GPy5WIoEAAtXYLnurVdwR-u3ndi9rXWDqE"},
{"content":{"body":"> <@jackworks:matrix.org> All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚\n> \n> ```rust\n> fn main() {\n>    let a = (1..5).into_iter();\n>    //   for i in &a {} NOT WORK\n>    for i in a {}\n>    for i in a {} // Error: Use moved value a\n> }\n> ```\n\nbut you can do:\n\n```rust\nfn main() {\n  let a = 1..5;\n  for i in a {} // implicitly calls into_iter()\n  for i in a {} // implicitly calls into_iter()\n}\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2BJw8sZuOurUU5Pl2n8TYeNW6N98OVcqLJ9LNSmTlME?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚</p>\n<pre><code class=\"language-rust\">fn main() {\n   let a = (1..5).into_iter();\n   //   for i in &amp;a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n</code></pre>\n</blockquote></mx-reply><p>but you can do:</p>\n<pre><code class=\"language-rust\">fn main() {\n  let a = 1..5;\n  for i in a {} // implicitly calls into_iter()\n  for i in a {} // implicitly calls into_iter()\n}\n</code></pre>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$2BJw8sZuOurUU5Pl2n8TYeNW6N98OVcqLJ9LNSmTlME"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚\n> \n> ```rust\n> fn main() {\n>    let a = (1..5).into_iter();\n>    //   for i in &a {} NOT WORK\n>    for i in a {}\n>    for i in a {} // Error: Use moved value a\n> }\n> ```\n\nbut you can do:\n\n```rust\nfn main() {\n  let a = 1..5;\n  for i in a {} // implicitly calls into_iter()\n  for i in a {} // implicitly calls into_iter()\n}\n```","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2BJw8sZuOurUU5Pl2n8TYeNW6N98OVcqLJ9LNSmTlME?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>All I know is, if you try to reuse it in Rust, it will be rejected by the compiler ðŸ˜‚</p>\n<pre><code class=\"language-rust\">fn main() {\n   let a = (1..5).into_iter();\n   //   for i in &amp;a {} NOT WORK\n   for i in a {}\n   for i in a {} // Error: Use moved value a\n}\n</code></pre>\n</blockquote></mx-reply><p>but you can do:</p>\n<pre><code class=\"language-rust\">fn main() {\n  let a = 1..5;\n  for i in a {} // implicitly calls into_iter()\n  for i in a {} // implicitly calls into_iter()\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657290803693,"senderName":"zbraniecki","senderId":"@zbraniecki:matrix.org","id":"$9xbXI97Kc_MsJhde2ok7lfzNSivbvy5GBJLh_791Lzc"},
{"content":{"body":"Looks like the TC39 calendar and the agenda page disagree on when the agenda deadline is","msgtype":"m.text","org.matrix.msc1767.text":"Looks like the TC39 calendar and the agenda page disagree on when the agenda deadline is"},"ts":1657294006568,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CMNSFh7yTVpMiO5iIXh2-22yR3XyDLnynzjjg7tz2Jw"},
{"content":{"body":"Should we say that the agenda page is authoritative here? That one is later (tomorrow)","msgtype":"m.text","org.matrix.msc1767.text":"Should we say that the agenda page is authoritative here? That one is later (tomorrow)"},"ts":1657294033734,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ba3gwRKd2NZTjt9_VefG0D9G77-bnzJ2I6PoidGyXF0"},
{"content":{"body":"The agenda is authoritative.","msgtype":"m.text","org.matrix.msc1767.text":"The agenda is authoritative."},"ts":1657295457104,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$k4b9t7RhjE6HNv2ZbifQ9pn51KBc5TI5ilcIaq4hkyc"},
{"content":{"body":"i'll fix the calendar, not sure where the current deadline event came from","msgtype":"m.text","org.matrix.msc1767.text":"i'll fix the calendar, not sure where the current deadline event came from"},"ts":1657300012227,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$3Odj_Bxn-ebWDoL0zpI4u6Ub_W97b0bHZZeApK25wM8"},
{"content":{"body":"thanks for fixing it ljharb !","format":"org.matrix.custom.html","formatted_body":"thanks for fixing it <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> !","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"thanks for fixing it ljharb !","mimetype":"text/plain"},{"body":"thanks for fixing it <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> !","mimetype":"text/html"}]},"ts":1657301809264,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1iSQ8-JpxFuPRN2aB2Cz7nuY06_11Xi5NAoO_cs-wuE"},
{"content":{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","format":"org.matrix.custom.html","formatted_body":"A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/plain"},{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/html"}]},"ts":1657308972906,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$vYixAGjzPSIBTuXv5UwpL728Xd17UH0rcjod5R8EAPE"},
{"content":{"body":" * A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","format":"org.matrix.custom.html","formatted_body":" * A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","m.new_content":{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","format":"org.matrix.custom.html","formatted_body":"A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/plain"},{"body":"A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$vYixAGjzPSIBTuXv5UwpL728Xd17UH0rcjod5R8EAPE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/plain"},{"body":" * A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a","mimetype":"text/html"}]},"ts":1657308978333,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ii8ypUp9x8GtrEkVGDohU1mqsrDFqX7Iz7fv-Cs6lEA"},
{"content":{"body":"Itâ€™s functionally a superset of https://github.com/tc39/proposal-array-equality.","msgtype":"m.text"},"ts":1657309014955,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$dP2y5IIgUILWAlWoj5ebvmTtvIm-HtdGxsYtMrzbNfY"},
{"content":{"body":" * Itâ€™s kind of a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md.","m.new_content":{"body":"Itâ€™s kind of a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md.","msgtype":"m.text","org.matrix.msc1767.text":"Itâ€™s kind of a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md."},"m.relates_to":{"event_id":"$dP2y5IIgUILWAlWoj5ebvmTtvIm-HtdGxsYtMrzbNfY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Itâ€™s kind of a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md."},"ts":1657309016572,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$BLTeOPVd8q7NhVXYslUhJB6XsvPS5Ze-iq9_WbbAPVY"},
{"content":{"body":" * Itâ€™s functionally a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md.","m.new_content":{"body":"Itâ€™s functionally a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md.","msgtype":"m.text","org.matrix.msc1767.text":"Itâ€™s functionally a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md."},"m.relates_to":{"event_id":"$dP2y5IIgUILWAlWoj5ebvmTtvIm-HtdGxsYtMrzbNfY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Itâ€™s functionally a superset of https://github.com/tc39/proposals/blob/main/stage-1-proposals.md."},"ts":1657309029719,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$xsDZ6r19h5V0fx33Hd8v0QW2tK4jt6p249afb3WqUM0"},
{"content":{"body":"jschoi: I think that second link is not the correct link?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: I think that second link is not the correct link?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jschoi: I think that second link is not the correct link?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: I think that second link is not the correct link?","mimetype":"text/html"}]},"ts":1657309094694,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6UcnVJ0qBXWUn_f2nRPoMFvWeuYNKGfAJb4NuyWfdnE"},
{"content":{"body":"* Itâ€™s functionally a superset of https://github.com/tc39/proposal-array-equality.","format":"org.matrix.custom.html","formatted_body":"* (null)","m.new_content":{"body":"Itâ€™s functionally a superset of https://github.com/tc39/proposal-array-equality.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dP2y5IIgUILWAlWoj5ebvmTtvIm-HtdGxsYtMrzbNfY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657309156290,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$q77cxUHBUkP0C0Amc8IkqFwEz774e6ZV_skyPm6YHrg"},
{"content":{"body":"Fixed, thanks. ","format":"org.matrix.custom.html","formatted_body":"Fixed, thanks.","msgtype":"m.text"},"ts":1657309163742,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$VJkeOknYMw8yVdQwclrp179ASA_0IKO84X2xMs3mSbg"},
{"content":{"body":"jschoi: It's a fun idea but for asking for stage 1 people mostly want a problem statement rather than a concrete possible solution, so you might consider presenting this as \"i want to compare objects, ideally in a way where the objects can say how to compare themselves. stage 1?\" and then after that discussion \"also, having gotten stage 1, I want feedback on this direction I was considering, which I am not asking for stage advancement for\"","msgtype":"m.text","org.matrix.msc1767.text":"jschoi: It's a fun idea but for asking for stage 1 people mostly want a problem statement rather than a concrete possible solution, so you might consider presenting this as \"i want to compare objects, ideally in a way where the objects can say how to compare themselves. stage 1?\" and then after that discussion \"also, having gotten stage 1, I want feedback on this direction I was considering, which I am not asking for stage advancement for\""},"ts":1657309785361,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rigq7uSWPgIAf0U3Y9VPCPdTCpKIR58i3TBbte1bOr0"},
{"content":{"body":"Yeah, agreed. ","format":"org.matrix.custom.html","formatted_body":"Yeah, agreed.","msgtype":"m.text"},"ts":1657309838171,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$TT2Q0kM8tzcM-eqRJ527VzbrYZfkSPGHpqW9FI5hHGo"},
{"content":{"body":"Thanks for feedback. : )","msgtype":"m.text"},"ts":1657309852198,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$f5G6kV3J7SQmuZ5kIy_JidqgceKI_XF6GPIhMTbAm3g"},
{"content":{"body":"though you could also consider seeing if the array equality champions would consider something like this in scope, in which case you wouldn't necessarily need to ask for stage 1 again for a separate thing","msgtype":"m.text","org.matrix.msc1767.text":"though you could also consider seeing if the array equality champions would consider something like this in scope, in which case you wouldn't necessarily need to ask for stage 1 again for a separate thing"},"ts":1657309855124,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QjUoBLaXhvdyFXyvC54MRkFnu5rHxBQmzDWUP58UfTo"},
{"content":{"body":"> <@jschoi:matrix.org> A doodle of something I might propose tomorrow for StageÂ 1: generic `Object.equiv` and `Object.diff` functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a\n\nI've wanted to handle object equality for awhile (including use as keys in Map and Set). I created the `@esfx/equatable` package as a possible sketch (along with `@esfx/collections-hashmap` and `@esfx/collections-hashset`). https://esfx.js.org/#collections","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vYixAGjzPSIBTuXv5UwpL728Xd17UH0rcjod5R8EAPE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br />A doodle of something I might propose tomorrow for StageÂ 1: generic <code>Object.equiv</code> and <code>Object.diff</code> functions. https://gist.github.com/js-choi/b8b1a1c1388354d1b4384bea8a1fca0a</blockquote></mx-reply>I've wanted to handle object equality for awhile (including use as keys in Map and Set). I created the <code>@esfx/equatable</code> package as a possible sketch (along with <code>@esfx/collections-hashmap</code> and <code>@esfx/collections-hashset</code>). https://esfx.js.org/#collections","m.relates_to":{"m.in_reply_to":{"event_id":"$vYixAGjzPSIBTuXv5UwpL728Xd17UH0rcjod5R8EAPE"}},"msgtype":"m.text"},"ts":1657311464239,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$2vGM6ta5Wm6qsXHj4MPkR9YKjiaJB2k_nbs5GuY_UB4"},
{"content":{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","format":"org.matrix.custom.html","formatted_body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/plain"},{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/html"}]},"ts":1657312454127,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$p4qpH-1EWOwQXhkb7mo_4DVKZAhwnijRhKp28pT25ew"},
{"content":{"body":" * For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","format":"org.matrix.custom.html","formatted_body":" * For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","m.new_content":{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","format":"org.matrix.custom.html","formatted_body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/plain"},{"body":"For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$p4qpH-1EWOwQXhkb7mo_4DVKZAhwnijRhKp28pT25ew","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.\nImagine how many times youâ€™ve added a temporary `console.log(thingA, thingYouExpectedToBeTheSameAsThingA)` line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.\nOf course, assertion and test-runner libraries nowadays include such functionality for the same reasons. \nAnyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with Hemanth H.M and ljharb about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/plain"},{"body":" * For what itâ€™s worth, I think that diffing (not just testing with a boolean result) is a pretty common use caseâ€”every time you want to assert that two objects are equal, it is useful to be able to quickly see why are not the same.<br>Imagine how many times youâ€™ve added a temporary <code>console.log(thingA, thingYouExpectedToBeTheSameAsThingA)</code> line while debugging, but found that the things were very large and you had to painstakingly find the difference. Iâ€™ve even copied and pasted debugging output to text-diffing applications.<br>Of course, assertion and test-runner libraries nowadays include such functionality for the same reasons.<br>Anyways, any equality can be defined in terms of an empty a diff, so itâ€™s a good opportunity to visit this. Iâ€™ll be talking with <a href=\"https://matrix.to/#/@hemanth.hm:matrix.org\">Hemanth H.M</a> and <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> about whether to tack this onto array-equality in another Matrix room.","mimetype":"text/html"}]},"ts":1657312469677,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$_nV3ZxJeJ4o-uJEbsVveIspytG_LPsLyBCAzVXgBI6M"},
{"content":{"body":"for some prior art, see https://npmjs.com/is-equal, and import/require `is-equal/why`, you'll get a string explaining why they're different (but not a full diff)","format":"org.matrix.custom.html","formatted_body":"for some prior art, see https://npmjs.com/is-equal, and import/require <code>is-equal/why</code>, you'll get a string explaining why they're different (but not a full diff)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"for some prior art, see https://npmjs.com/is-equal, and import/require `is-equal/why`, you'll get a string explaining why they're different (but not a full diff)","mimetype":"text/plain"},{"body":"for some prior art, see https://npmjs.com/is-equal, and import/require <code>is-equal/why</code>, you'll get a string explaining why they're different (but not a full diff)","mimetype":"text/html"}]},"ts":1657313191105,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w2RTi6I4bJxM5aHbSx2HQWoSgSYEKG9u3bEVP3Wu-zQ"}
]