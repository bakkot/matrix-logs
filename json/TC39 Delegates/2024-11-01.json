[
{"content":{"body":"nicolo-ribaudo: is there a repo yet for `Avoid capturing lexical context in indirect eval` ?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: is there a repo yet for <code>Avoid capturing lexical context in indirect eval</code> ?","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1730483188332,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$KN-9ROKAqPUcVjIb_O96ntwwnh4zGe9WqLzDh01SWak"},
{"content":{"body":"> <@gibson042:matrix.org> here's a rather stark example:\n> ```\n> const unfrozen = Array.from({ length: 10000 }, (_, i) => i);\n> const frozen = Object.freeze([...unfrozen]);\n> fn = arr => arr.slice().concat(\"FIN\");\n> let result;\n> \n> result = fn(unfrozen); // 10.787 ops/ms\n> result = fn(frozen); // 1.427 ops/ms\n> ```\n\nA slightly more complex example: https://jsbench.github.io/#7802fbd8f3d46d7fef9d6009e65fd4bd","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24-htDILiIwmugPwDgAXFyo__wx7PJXF4iBbRvsmT-xeU\">In reply to</a><a href=\"https://matrix.to/#/%40gibson042%3Amatrix.org\">@gibson042:matrix.org</a><br /><p>here's a rather stark example:</p>\n<pre><code>const unfrozen = Array.from({ length: 10000 }, (_, i) =&gt; i);\nconst frozen = Object.freeze([...unfrozen]);\nfn = arr =&gt; arr.slice().concat(\"FIN\");\nlet result;\n\nresult = fn(unfrozen); // 10.787 ops/ms\nresult = fn(frozen); // 1.427 ops/ms\n</code></pre>\n</blockquote></mx-reply>A slightly more complex example: https://jsbench.github.io/#7802fbd8f3d46d7fef9d6009e65fd4bd","m.relates_to":{"m.in_reply_to":{"event_id":"$-htDILiIwmugPwDgAXFyo__wx7PJXF4iBbRvsmT-xeU"}},"msgtype":"m.text"},"ts":1730487498151,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Y0IM2rew0PvTdf_3eTbHNxT9sQlHtdYDrBPFTns5Zyc"}
]