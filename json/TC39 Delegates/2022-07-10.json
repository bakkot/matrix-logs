[
{"content":{"body":"I think Java Streams is ok, but we should note it is intentionally named as \"Stream\", to make it clear it's not Iterable/Iterator. If we follow Java design, we should also consider change iterator helpers to \"Stream\". Actually I think Emitter proposal is a very similar and more powerful Stream-like API, a good alternative to iterator helpers.","m.relates_to":{"event_id":"$yO2dcQAv3cFjlPiJXYJz1Vda11WF0vvh2UhbZ_h6ch4","is_falling_back":true,"m.in_reply_to":{"event_id":"$yO2dcQAv3cFjlPiJXYJz1Vda11WF0vvh2UhbZ_h6ch4"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"I think Java Streams is ok, but we should note it is intentionally named as \"Stream\", to make it clear it's not Iterable/Iterator. If we follow Java design, we should also consider change iterator helpers to \"Stream\". Actually I think Emitter proposal is a very similar and more powerful Stream-like API, a good alternative to iterator helpers."},"ts":1657460087624,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$KXXJ1T8RXD74DSsd_DtTLOAJNKhv6aE2DY4cpFOSX98"},
{"content":{"body":"bakkot: And the original question is whether number range() should be iterable/iterator, this is a separate question, not direct relate to the design choice of iterator helpers or iterable helpers or stream... Generally speaking I prefer iterable. I'm ok with iterator/stream version if it is make clear that's a iterator/stream (eg. naming it as `Iterator.integers()` or Java-like `IntStream.range()`). See https://github.com/tc39/proposal-Number.range/issues/57","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: And the original question is whether number range() should be iterable/iterator, this is a separate question, not direct relate to the design choice of iterator helpers or iterable helpers or stream... Generally speaking I prefer iterable. I'm ok with iterator/stream version if it is make clear that's a iterator/stream (eg. naming it as <code>Iterator.integers()</code> or Java-like <code>IntStream.range()</code>). See https://github.com/tc39/proposal-Number.range/issues/57","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: And the original question is whether number range() should be iterable/iterator, this is a separate question, not direct relate to the design choice of iterator helpers or iterable helpers or stream... Generally speaking I prefer iterable. I'm ok with iterator/stream version if it is make clear that's a iterator/stream (eg. naming it as `Iterator.integers()` or Java-like `IntStream.range()`). See https://github.com/tc39/proposal-Number.range/issues/57","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: And the original question is whether number range() should be iterable/iterator, this is a separate question, not direct relate to the design choice of iterator helpers or iterable helpers or stream... Generally speaking I prefer iterable. I'm ok with iterator/stream version if it is make clear that's a iterator/stream (eg. naming it as <code>Iterator.integers()</code> or Java-like <code>IntStream.range()</code>). See https://github.com/tc39/proposal-Number.range/issues/57","mimetype":"text/html"}]},"ts":1657461339655,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$iO94kW6BPliG9ALrQkWatJzckxL8wO9p3nC8ddrxqug"},
{"content":{"body":"Java's Streams happened after they'd already defined their `Iterator` interface and could no longer redefine it as a class; I don't think the naming there is that informative","format":"org.matrix.custom.html","formatted_body":"Java's Streams happened after they'd already defined their <code>Iterator</code> interface and could no longer redefine it as a class; I don't think the naming there is that informative","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Java's Streams happened after they'd already defined their `Iterator` interface and could no longer redefine it as a class; I don't think the naming there is that informative","mimetype":"text/plain"},{"body":"Java's Streams happened after they'd already defined their <code>Iterator</code> interface and could no longer redefine it as a class; I don't think the naming there is that informative","mimetype":"text/html"}]},"ts":1657473576523,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fIHW0vkiHqEUQSTXH30kMD5JJ2xkUSpYNvZ3CSsViKs"},
{"content":{"body":"other languages like Scala and Rust did not make that choice","msgtype":"m.text","org.matrix.msc1767.text":"other languages like Scala and Rust did not make that choice"},"ts":1657473591737,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Uxf7QNGNDeS6P0Bz7_LWQdu0wcWCKYvjOMnydfUuzMk"}
]