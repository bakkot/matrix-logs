[
{"content":{"body":"it's really hard to educate people why JavaScript class works this way","msgtype":"m.text"},"ts":1682738465896,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dmWAFKTg5l2qbuymcXdr8K8f0JUR4L0I3-zaH65dRzA"},
{"content":{"body":"other class features don't have this problem when inheriting","msgtype":"m.text"},"ts":1682738494920,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$u6VNDc5D1IBvpDBEY-meEytN_AsWMK2vTf1dHftrlzU"},
{"content":{"body":"if we use the `accessor` semantics for class fields, it will also be good with inherit","format":"org.matrix.custom.html","formatted_body":"if we use the <code>accessor</code> semantics for class fields, it will also be good with inherit","msgtype":"m.text"},"ts":1682738546595,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$91mZdxUlaufPVMRus8NpFBdisGBGK55vFLpxO7CPSLI"},
{"content":{"body":"I feel like \"fields are on the instance, methods are on the prototype\" is pretty straightforward?","msgtype":"m.text"},"ts":1682745202247,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xPJXpykvALyPnl7mbQR17EdtPHxMRI3IidKPvpvj14Y"}
]