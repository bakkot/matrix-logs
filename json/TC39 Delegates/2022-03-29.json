[
{"content":{"body":"There were more frameworks and libraries that used metadata than not in our survey, IIRC","msgtype":"m.text"},"ts":1648512004424,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$58B8AV-jKhhy8DNfTthg4wJDphuj-XKAA13_mu4AkjU"},
{"content":{"body":"let me put another way, if a burden is placed on all the libraries in the JS universe, that still seems okay","msgtype":"m.text","org.matrix.msc1767.text":"let me put another way, if a burden is placed on all the libraries in the JS universe, that still seems okay"},"ts":1648512028307,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4IRknnsfXEr4Mdr-LMhxWniaEWW6aHT2-U0b7jTx05M"},
{"content":{"body":"vs, a burden put on a majority of all JS programmers","msgtype":"m.text","org.matrix.msc1767.text":"vs, a burden put on a majority of all JS programmers"},"ts":1648512045302,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KB5RyPNiC6p0QJRopQg0ZtnH_nESxKvUVgBEZGpDVOA"},
{"content":{"body":"Fair enough, this would only be a burden on users of those specific frameworks and libraries ","format":"org.matrix.custom.html","formatted_body":"Fair enough, this would only be a burden on users of those specific frameworks and libraries","msgtype":"m.text"},"ts":1648512085245,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$mXpYaGO9o0FiFojKcwgRVjqMx-22A7TnO5J_4yz51SE"},
{"content":{"body":"my proposed sketch has a (slight) cost to anyone making use of such a library, to be clear, not just to the library itself","msgtype":"m.text","org.matrix.msc1767.text":"my proposed sketch has a (slight) cost to anyone making use of such a library, to be clear, not just to the library itself"},"ts":1648512097792,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SATScniwuONl95qcneBOoAg-7BL88oQk6ZG-mC2CFTY"},
{"content":{"body":"good point, i'm trying to weigh that","msgtype":"m.text","org.matrix.msc1767.text":"good point, i'm trying to weigh that"},"ts":1648512105701,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iVpEVIse4NjGhMF9W3VUPmQQTh5pud0uZt_NLdPys2s"},
{"content":{"body":"(it's actually arguably simpler for the library itself)","msgtype":"m.text","org.matrix.msc1767.text":"(it's actually arguably simpler for the library itself)"},"ts":1648512108117,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DE5EXuky-5aPA-cI_aUulAMpSgded-iQqgN_YIjzoX4"},
{"content":{"body":"the `let GObject = makeGObject()` thing?","format":"org.matrix.custom.html","formatted_body":"the <code>let GObject = makeGObject()</code> thing?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the `let GObject = makeGObject()` thing?","mimetype":"text/plain"},{"body":"the <code>let GObject = makeGObject()</code> thing?","mimetype":"text/html"}]},"ts":1648512113044,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cPj8jy-DMlIR-Ta1yj8sEcu_IiWywsJB6x7CM9lZ0B0"},
{"content":{"body":"yup","msgtype":"m.text","org.matrix.msc1767.text":"yup"},"ts":1648512117300,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xbnBsuN8elSzQJMdWx1tLPMBo59gWht4h6YQ2GLMGOU"},
{"content":{"body":"and the need to put a decorator on the class itself, in the case that need did not previously exist","msgtype":"m.text","org.matrix.msc1767.text":"and the need to put a decorator on the class itself, in the case that need did not previously exist"},"ts":1648512129034,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hP3uVb6pjUoysfezW73w2ARE6qDo7TKemn4RQ3jju5g"},
{"content":{"body":"my experience, as someone whose day job is not using frameworks, to be clear, is that frameworks involve incantations already","msgtype":"m.text","org.matrix.msc1767.text":"my experience, as someone whose day job is not using frameworks, to be clear, is that frameworks involve incantations already"},"ts":1648512157410,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dmPI-UHqudd5mts47sdmGmKDZy1fNw2AU8xBPJHKiDI"},
{"content":{"body":"this could be a death-by-a-thousand-cuts thing, of course","msgtype":"m.text","org.matrix.msc1767.text":"this could be a death-by-a-thousand-cuts thing, of course"},"ts":1648512167076,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cD_TpMeESpcy0GfbsPtdJbfv_gdYTi7g2p06aKtdEuM"},
{"content":{"body":"Yeah, I wouldn’t think it’d be much of a burden either way tbh","msgtype":"m.text"},"ts":1648512186143,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$XVX9Iw9lRzeapWTRTU60XfpGfizd7nwwOjvdSyrGVT4"},
{"content":{"body":"For decorator authors","msgtype":"m.text"},"ts":1648512190174,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$HL2qgDQg8w6Rlk83iB-LuohpP8p7Eigtxz2q8gJVUHM"},
{"content":{"body":"i'm also not against a simpler metadata sketched solution","msgtype":"m.text","org.matrix.msc1767.text":"i'm also not against a simpler metadata sketched solution"},"ts":1648512190517,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kMZQHeyakZmKRrvL9dZ0Zg3LoiG_V_7TT3E_VVkwDh4"},
{"content":{"body":"v8's main dislike is the intricate hierarchy of the metadata object that's created","msgtype":"m.text","org.matrix.msc1767.text":"v8's main dislike is the intricate hierarchy of the metadata object that's created"},"ts":1648512225997,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$asbaoFolZbeJoql32aO0oM3t4XrA9FacbjNbv1n_H7E"},
{"content":{"body":"perhaps Mathieu Hofman can sketch out what he meant by having an object","format":"org.matrix.custom.html","formatted_body":"perhaps <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> can sketch out what he meant by having an object","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"perhaps Mathieu Hofman can sketch out what he meant by having an object","mimetype":"text/plain"},{"body":"perhaps <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> can sketch out what he meant by having an object","mimetype":"text/html"}]},"ts":1648512307605,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NqMHKBk8ZYmGft-A0T5BufdT5YrkKmR7IPVrwgUBwbg"},
{"content":{"body":"There's an old sketch here: https://github.com/tc39/proposal-decorators/issues/328","msgtype":"m.text","org.matrix.msc1767.text":"There's an old sketch here: https://github.com/tc39/proposal-decorators/issues/328"},"ts":1648512337254,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$m6m9m3t_4hagfgok26odkWEx6oiAk5YPdRUzl5PzO6M"},
{"content":{"body":"> <@shuyuguo:matrix.org> i still think the answer to where parameter decorators fit in is that we do not have parameter decorators\n\nThe way TS does parameter decorators today is it passes through a `__param` decorator on the method that essentially adapts it to a method decorator, so Metadata is still associated with the class","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tARo0v_Gf9QiV-Uc7medliZE6UxYdxDxo69Yo3puBEs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />i still think the answer to where parameter decorators fit in is that we do not have parameter decorators</blockquote></mx-reply>The way TS does parameter decorators today is it passes through a <code>__param</code> decorator on the method that essentially adapts it to a method decorator, so Metadata is still associated with the class","m.relates_to":{"m.in_reply_to":{"event_id":"$tARo0v_Gf9QiV-Uc7medliZE6UxYdxDxo69Yo3puBEs"}},"msgtype":"m.text"},"ts":1648512341626,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kHljkwJSZb_EXzIcLx1vSZA2fFsCfxTA55bGAESxTKw"},
{"content":{"body":"> <@rbuckton:matrix.org> The way TS does parameter decorators today is it passes through a `__param` decorator on the method that essentially adapts it to a method decorator, so Metadata is still associated with the class\n\nThey way we've thought about it is that your decorating the declaration, not the value. Decorating a method parameter means the decoration is associated with the class","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kHljkwJSZb_EXzIcLx1vSZA2fFsCfxTA55bGAESxTKw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br />The way TS does parameter decorators today is it passes through a <code>__param</code> decorator on the method that essentially adapts it to a method decorator, so Metadata is still associated with the class</blockquote></mx-reply>They way we've thought about it is that your decorating the declaration, not the value. Decorating a method parameter means the decoration is associated with the class","m.relates_to":{"m.in_reply_to":{"event_id":"$kHljkwJSZb_EXzIcLx1vSZA2fFsCfxTA55bGAESxTKw"}},"msgtype":"m.text"},"ts":1648512420770,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mffVIB39zb14DJnh8kPEqPyCki4PicFAImrWMW9Bzz8"},
{"content":{"body":"Essentially the object handle version is to replicate the old semantics, where we received the class itself, as close as possible. So to do that, we pass in a target object to the decorator","msgtype":"m.text"},"ts":1648512445744,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$3pw32_myn9FCrjADsMXFZvJNoIY5-vOxxVKZXlBoe9o"},
{"content":{"body":"And then we associate that with the class on `Symbol.metadata`","format":"org.matrix.custom.html","formatted_body":"And then we associate that with the class on <code>Symbol.metadata</code>","msgtype":"m.text"},"ts":1648512465812,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$BNoY5z3Z44DthREJpwIeyd7ccP6IiYkdosndVHkstz8"},
{"content":{"body":"The object can be used as a WeakMap key to the decorator’s metadata","msgtype":"m.text"},"ts":1648512495591,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$sMNzC14JSAcMbB47oFZpov_cbqtf7g9miNwg6VOMgTE"},
{"content":{"body":"rbuckton: i am not interested in the mechanics of it until we decide it's actually a good idea?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i am not interested in the mechanics of it until we decide it's actually a good idea?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"rbuckton: i am not interested in the mechanics of it until we decide it's actually a good idea?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i am not interested in the mechanics of it until we decide it's actually a good idea?","mimetype":"text/html"}]},"ts":1648512504054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HiZ1b0siA1Hs7N34lY4podzB38HjqsxUlCWVqy_zEKc"},
{"content":{"body":"That’d be simplest possible API here, though it’s a bit odd","msgtype":"m.text"},"ts":1648512521665,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$9nXBpsYw7CFR-7VEisp61WRd7OdbBi5VQNU-ITB0Cvs"},
{"content":{"body":"I would feel better about it if Symbols could be used as weakmap keys, and then we can just pass in a symbol, call it `metadataKey`","format":"org.matrix.custom.html","formatted_body":"I would feel better about it if Symbols could be used as weakmap keys, and then we can just pass in a symbol, call it <code>metadataKey</code>","msgtype":"m.text"},"ts":1648512561367,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$abYZXn0lXtNvAHStNIDqeTjEdeMWVtjJNjFFvhfndvA"},
{"content":{"body":"But a frozen object also works","msgtype":"m.text"},"ts":1648512573374,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$oaP8rd7lBqLhlAQkyGPYwPDsCiXRyPGFrFNHvzAZ724"},
{"content":{"body":"or rather, until fairly strong opposition to the mere idea of parameter decorators fade away, not necessarily we all decide it's a good idea","msgtype":"m.text","org.matrix.msc1767.text":"or rather, until fairly strong opposition to the mere idea of parameter decorators fade away, not necessarily we all decide it's a good idea"},"ts":1648512597400,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$suWF6C7-OkpiACadfM69ch17NwtaSsNYu5A0Z1FhGU4"}
]