[
{"content":{"body":"First I think the main focus here is to build a safe resolve operation for spec and host, and not directly exposed to the programmer.\n\nSecond even if that proxy sensitive operation was directly accessible to programs, we may find it preferable to changing the semantics of thenables.","msgtype":"m.text"},"ts":1754547266989,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$4WiGo5qpn9zKZojhP3ao6yAXaZ_NG_iVg77d7pkIDoM"},
{"content":{"body":"Several delegates have expressed the constraint that anything we do here should be implementable in userland; e.g. Node implements a bunch of web APIs in JS","m.mentions":{},"msgtype":"m.text"},"ts":1754547406532,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YqX9Cc0BtqarzECKsTOsmVd-5qJs2O3tca5jQjYToyY"},
{"content":{"body":"and I don't think this is changing the semantics of thenables given that it's doable in userland already, unless we handle the frozen objects case, which is not really part of how anyone thinks of thenables afaik","m.mentions":{},"msgtype":"m.text"},"ts":1754547531639,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N8xYx5_xcxCGj6LQO8FZ54LUPrM0lpZkTQ4uEGs-AwY"},
{"content":{"body":"Are AOs first class values? Can I maybe pass an AO name to something that expects an abstract closure?","m.mentions":{},"msgtype":"m.text"},"ts":1754599342888,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Sh3sYFyR_PRj_zKSWIFMmEa980IbvAKs_9cUlq44mYM"},
{"content":{"body":"Oh I guess the answer is \"yes\", like in steps 6-7-8 of https://tc39.es/ecma262/#sec-applystringornumericbinaryoperator. Nice","m.mentions":{},"msgtype":"m.text"},"ts":1754599552893,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IuDOdws6tKgDiLN-04GMFd6KIj-6dqOVPp_-0LKKH5M"},
{"content":{"body":"I'm not sure I understand what you mean. My concern is that your \"userland solution\" relies on the resolution value to have a non-frozen `then`. It simply fails with frozen values, which I hope we can agree should be totally valid values to use as a resolution.","format":"org.matrix.custom.html","formatted_body":"I'm not sure I understand what you mean. My concern is that your \"userland solution\" relies on the resolution value to have a non-frozen <code>then</code>. It simply fails with frozen values, which I hope we can agree should be totally valid values to use as a resolution.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$N8xYx5_xcxCGj6LQO8FZ54LUPrM0lpZkTQ4uEGs-AwY"}},"msgtype":"m.text"},"ts":1754603654883,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$aYHsOS8Cbj3s2bFNnVCAHXkuk7A9lnEGGH005ZKv4xA"},
{"content":{"body":"you cannot specifically pass an AO name to something that expects an abstract closure, those are different operations","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Sh3sYFyR_PRj_zKSWIFMmEa980IbvAKs_9cUlq44mYM"}},"msgtype":"m.text"},"ts":1754603727850,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Yz7SOHTBdj39wiUQu1c0OWVm6g-H5egExNJEuzZSRGg"},
{"content":{"body":"* you cannot specifically pass an AO name to something that expects an abstract closure, those are different kinds of thing","m.mentions":{},"m.new_content":{"body":"you cannot specifically pass an AO name to something that expects an abstract closure, those are different kinds of thing","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Yz7SOHTBdj39wiUQu1c0OWVm6g-H5egExNJEuzZSRGg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754603732993,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8aQ6Uu12epOZ1sFl8NFwHY6IWmIjft9ZqzXpj6aRHgw"},
{"content":{"body":"you can do the thing in ApplyStringOrNumericBinaryOperator but it's not a common pattern and I wouldn't recommend it in most cases","m.mentions":{},"msgtype":"m.text"},"ts":1754603755959,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$btW44AUD31anLz49HkKxkit_CPjhL4JMeP3pC9Tl_pY"},
{"content":{"body":"We can definitely consider exposing to userland a safe resolve operation that would let the caller asynchronously discover information about whether the value is a proxy (or has a proxy in its prototype chain).","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YqX9Cc0BtqarzECKsTOsmVd-5qJs2O3tca5jQjYToyY"}},"msgtype":"m.text"},"ts":1754603777064,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$wYn3s6LFm78FHEQx1wAd2TGTwktMqRJU_Uo3ljB13pY"},
{"content":{"body":"I currently find that preferable to other alternatives I've heard so far.","m.mentions":{},"msgtype":"m.text"},"ts":1754603833922,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HzjpkeduNvgXI8VnQLPe0EP5AL8eoJtNbt0HOOTAPWc"}
]