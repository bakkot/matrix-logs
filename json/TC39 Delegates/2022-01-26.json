[
{"content":{"body":"enums-as-constants isn't orthogonal to ADT enums.","msgtype":"m.text"},"ts":1643155254073,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-0il3lVEjHzmPA5ovYofk4NRsY57IQWPHqTlGKA7Uao"},
{"content":{"body":"https://matrix.to/#/!vofPwuBJgbSdyEilYo:matrix.org?via=matrix.org\nWelcome to join the chat if you have interest in working on this together. ⭐\n\nThis is NOT a tc39 group cause it didn't reach stage 1, it's a public group but not following the ECMA policy (logged and published). I'll create an official group like pattern matching and pipeline after it reaches stage 1.","msgtype":"m.text"},"ts":1643155339976,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ht2iR4fAC2NHfIJwq3cRr2hhE8JxyjRnbmp-UU6zK9M"},
{"content":{"body":"we can probably make it an official group if the chairs choose so","msgtype":"m.text"},"ts":1643155481893,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Q4vlijlWujIXtJPU8pFMtVLZz3thF-QXF10kgy4Se3E"},
{"content":{"body":" * we can probably make it an official group if the chairs decide that","m.new_content":{"body":"we can probably make it an official group if the chairs decide that","msgtype":"m.text"},"m.relates_to":{"event_id":"$Q4vlijlWujIXtJPU8pFMtVLZz3thF-QXF10kgy4Se3E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643155507117,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$2S2FPjVu7ZmZsbP2ITE-pE63eAwAi3k3CKHqDwHXYE0"},
{"content":{"body":"rbuckton: I agree, but I also think it wouldn't do any harm to pursue it in two phases","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: I agree, but I also think it wouldn't do any harm to pursue it in two phases","msgtype":"m.text"},"ts":1643155671168,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3kHeKRHlhy8OvS2cACLsh00Zv0S-PCY_TpSvkrrF3uU"},
{"content":{"body":"> <@michaelficarra:matrix.org> rbuckton: I agree, but I also think it wouldn't do any harm to pursue it in two phases\n\nEven if we pursue it in two phases, we need to consider how ADT enums need to function to ensure we don't paint ourselves into a corner with non-ADT enums.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3kHeKRHlhy8OvS2cACLsh00Zv0S-PCY_TpSvkrrF3uU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: I agree, but I also think it wouldn't do any harm to pursue it in two phases</blockquote></mx-reply>Even if we pursue it in two phases, we need to consider how ADT enums need to function to ensure we don't paint ourselves into a corner with non-ADT enums.","m.relates_to":{"m.in_reply_to":{"event_id":"$3kHeKRHlhy8OvS2cACLsh00Zv0S-PCY_TpSvkrrF3uU"}},"msgtype":"m.text"},"ts":1643155716367,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PPzMiGeMFxFCVCCQCe8bq-Ek_vCtQSSskg8qeeybI3E"},
{"content":{"body":"I think we have the ability to do that though","msgtype":"m.text"},"ts":1643155738605,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Zyqb6Gz-QvWhkqzfppH_aRP3x-9clPpvcdZw1dzjU6k"},
{"content":{"body":"Rob Palmer, yulia my coworker Jenna couldn't access the Reflector today to get the meeting info. Can you confirm her github user is ok? https://github.com/tc39/Admin-and-Business/issues/174","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>, <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> my coworker Jenna couldn't access the Reflector today to get the meeting info. Can you confirm her github user is ok? https://github.com/tc39/Admin-and-Business/issues/174","msgtype":"m.text"},"ts":1643155744781,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$RFJQYpXEDzKCWe5rodek8f-8L-ZIu9Nui6iG96Ws_RU"},
{"content":{"body":"leobalter: i just invited them; invites expire in 7 days so perhaps they didn't accept in time the first go","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: i just invited them; invites expire in 7 days so perhaps they didn't accept in time the first go","msgtype":"m.text"},"ts":1643155808157,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$11Aza_VZ_1rhHxpSfaOHdu1jvw2oUu5fMP5hJAf6Cgk"},
{"content":{"body":"Which means we need to do most, if not all, of the work we would need to do for ADT enums to ensure we have consistency across multiple other language features such as pattern matching.","msgtype":"m.text"},"ts":1643155816383,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6PbQBRqn-doihkLDsu5UgZYzQ3eR1CmRiukaZUwyNY8"},
{"content":{"body":"Thanks, ljharb! ","format":"org.matrix.custom.html","formatted_body":"Thanks, <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>!","msgtype":"m.text"},"ts":1643155841192,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$CsUXzc0CHy9FylEne5TacmsVPoRx0AzHbQb88f66hfc"},
{"content":{"body":"rbuckton: i'd like a tighter story than that, because the implementation complexity and the design space of the primitive enums vs ADTs are miles apart","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i'd like a tighter story than that, because the implementation complexity and the design space of the primitive enums vs ADTs are miles apart","msgtype":"m.text"},"ts":1643156099610,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$81VZa15sricB-Jo2Pr4iu_Nw3fDRTE57qcojj09EgFU"},
{"content":{"body":"> <@jridgewell:matrix.org> I do recursion all the time.\n\nTo give a concrete example of this for Jordan, I invariably use recursion when I write parsers. Recursive descent parsers are my favorite type.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24NscDUmgVqpzggRYYJYzKLa8XROW5CFBi7C5jEU3C9tM\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I do recursion all the time.</blockquote></mx-reply>To give a concrete example of this for Jordan, I invariably use recursion when I write parsers. Recursive descent parsers are my favorite type.","m.relates_to":{"m.in_reply_to":{"event_id":"$NscDUmgVqpzggRYYJYzKLa8XROW5CFBi7C5jEU3C9tM"}},"msgtype":"m.text"},"ts":1643156964062,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$3fJqBoBuPhCA9g-aNdkHYbLebPHEwQ3KACyXm-tp328"},
{"content":{"body":"With or without PTC…","msgtype":"m.text"},"ts":1643156981483,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$-d-CgFGqixG0bLqqYmlEluvnCIuZS6IPX3gQhhM-vPk"},
{"content":{"body":"I'm primarily interested in ADT enums for how they could possibly be optimized by engines in ways that regular objects can't (hence my comments about megamorphism earlier). Switching on `node.kind` in the TS compiler is often a performance cliff due to megamorphism, even if every object/shape seen by a function has a `.kind`. If V8 were able to optimize this case for regular objects, I'd be ecstatic. If not, and V8 instead was able to optimize for ADT enums in a similar fashion, I would happily rewrite the entire TypeScript compiler to use an ADT for `Node` instead of regular objects/constructors even if that meant a complete breaking API change for consumers. If there are no performance optimizations that V8 could offer for either case, then ADT enums are at least interesting to me as a data structure but not a necessity.","format":"org.matrix.custom.html","formatted_body":"I'm primarily interested in ADT enums for how they could possibly be optimized by engines in ways that regular objects can't (hence my comments about megamorphism earlier). Switching on <code>node.kind</code> in the TS compiler is often a performance cliff due to megamorphism, even if every object/shape seen by a function has a <code>.kind</code>. If V8 were able to optimize this case for regular objects, I'd be ecstatic. If not, and V8 instead was able to optimize for ADT enums in a similar fashion, I would happily rewrite the entire TypeScript compiler to use an ADT for <code>Node</code> instead of regular objects/constructors even if that meant a complete breaking API change for consumers. If there are no performance optimizations that V8 could offer for either case, then ADT enums are at least interesting to me as a data structure but not a necessity.","msgtype":"m.text"},"ts":1643157389949,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$94NIfMzkj5dXHSZgP26ftgBLqgvpWceFVgg0rQBaEa8"},
{"content":{"body":"There's a convenience factor for ADT enums coupled with something like Scala's \"Extractor Objects\" and pattern matching that is extremely interesting to me, but that's nowhere near as compelling to me as possible performance benefits.","msgtype":"m.text"},"ts":1643157547313,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$J8IK7V5tnuKG80C6t4xjPtxO7tI-NI2I0Xy3_dPUSQI"},
{"content":{"body":"rbuckton: a dirty hack proposal... if the `.kind` property is special and you want to avoid the megamorphic de-opt, couldn't you rename it to be index zero?  `node[0]`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: a dirty hack proposal... if the <code>.kind</code> property is special and you want to avoid the megamorphic de-opt, couldn't you rename it to be index zero?  <code>node[0]</code>","msgtype":"m.text"},"ts":1643157645527,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$7gOMmvH92M3kjCchpOFqjq70AZtuluegSjB_MIuzvBA"},
{"content":{"body":"Does that work? I'd happily turn `kind` into a getter that just reads `this[0]` (for API compatibility) and replace all `node.kind` references in the compiler if that would actually improve performance.","format":"org.matrix.custom.html","formatted_body":"Does that work? I'd happily turn <code>kind</code> into a getter that just reads <code>this[0]</code> (for API compatibility) and replace all <code>node.kind</code> references in the compiler if that would actually improve performance.","msgtype":"m.text"},"ts":1643157805040,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZhLn2187vz79nW0BDuJGgmKLmuI8N0z5ed8m_znQvlw"},
{"content":{"body":"I'm not 100% sure but seem to recall the V8 object layout for elements permits direct lookups not based on the map type.  If only we had someone who knew V8 here...","msgtype":"m.text"},"ts":1643157895120,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$zMD3O3nEwOD5YBjkI-JHTevanZc1LtNiwy53N20uvc0"},
{"content":{"body":"by my reading keyed loads like [0] also checks receiver maps","msgtype":"m.text"},"ts":1643158134546,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VV4f0YAbNxwiqET8ca95Lckl4DLCc4xVf-13RNmY4Fg"},
{"content":{"body":"I wonder how off the “# of kinds of nodes in ts” is from the upper limit in v8 for optimization ","format":"org.matrix.custom.html","formatted_body":"I wonder how off the “# of kinds of nodes in ts” is from the upper limit in v8 for optimization","msgtype":"m.text"},"ts":1643158263717,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$5WLl53fbqcrx-sg9pdITYz9yem9XzvL7_i2-q8YV6So"},
{"content":{"body":"alternatively just rewrite it in go","msgtype":"m.text"},"ts":1643158293466,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$clBV0PlFXykvESQOMy56OG0RU_f4zMMI0WkiQq9w-TI"},
{"content":{"body":"(this is a reference to https://kdy1.dev/posts/2022/1/tsc-go, not a serious proposal)","msgtype":"m.text"},"ts":1643158318416,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qwXe2VuBuqckht4kP3QjMWwUZTOhI7oqZLej8qU7UGM"},
{"content":{"body":"i think if you want speed what you want is C","msgtype":"m.text"},"ts":1643158348116,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9-rMEoYjs6wToaD6B3D5T9VWoQ-UolM2nLfLaOHLhTI"},
{"content":{"body":"you never want c under any circumstances whatsoever","msgtype":"m.text"},"ts":1643158364714,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9fGIKyKYChJ6dA4ONAOQrgsm2sPAopiTLoQCMJto08Q"},
{"content":{"body":"except writing aviation code with the very constrained dialect they use plus all of their static analysis tools I suppose","msgtype":"m.text"},"ts":1643158383340,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UsJM37tZiXnlBrtNyvf20vkPyyp3HT1eIGh7ugz0IWI"},
{"content":{"body":"and even then it's less \"want\" than \"have no legal alternative\"","msgtype":"m.text"},"ts":1643158398644,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n6LefjxLW4Q8QtNuJ7rfJ8vaqcTlcsFViOt63bc539s"},
{"content":{"body":"it is when we are constrained by the law that we are at our most creative","msgtype":"m.text"},"ts":1643158458600,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wxImg1cpoINNmUr7AqLy7bhD59EsMq3Wxus_qfktCYU"},
{"content":{"body":"doubt","msgtype":"m.text"},"ts":1643158475032,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sC7HiwWEbEXmjUrtz5NhrI3yp5xlncmlW4UWC9QPxi4"},
{"content":{"body":"rbuckton: shu this microbenchmark suggests megamorphic access to index properties is 3x faster than the same for string properties https://esbench.com/bench/61f099d96c89f600a570158a","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> this microbenchmark suggests megamorphic access to index properties is 3x faster than the same for string properties https://esbench.com/bench/61f099d96c89f600a570158a","msgtype":"m.text"},"ts":1643160205342,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$xoQf7vnJ4XfXwEzdbDgEsjQRym80TpC5-I3EQ24pbX8"},
{"content":{"body":"oh wow - Axel Rauschmeyer has taken Dean Tribble's Proxy trick and blogged about it within 90mins of learning it...  https://2ality.com/2022/01/symbol-factory.html","msgtype":"m.text"},"ts":1643160495875,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$R4o4RFb0spy33NILZkBszL90NjbngeRgI2IdBqh9sKw"},
{"content":{"body":"We tried to improve perf by ensuring that frequently-used fields like `kind`, `pos`, `end`, and `flags` are all stored in-object:\n```\n000003E4E0E47A91: [Map]\n - type: JS_OBJECT_TYPE\n - instance size: 160\n - inobject properties: 17\n - elements kind: HOLEY_ELEMENTS\n - unused property fields: 7\n - enum length: invalid\n - stable_map\n - back pointer: 0x03e4e0e47a49 <Map(HOLEY_ELEMENTS)>\n - prototype_validity cell: 0x034eb1241659 <Cell value= 1>\n - instance descriptors (own) #11: 0x012f0b6cfb21 <DescriptorArray[11]>\n - prototype: 0x012f0b6cf441 <Object map = 000003E4E0E47779>\n - constructor: 0x013a75523b41 <JSFunction Node (sfi = 00000353F65D5C41)>\n - dependent code: 0x020140ac1281 <Other heap object (WEAK_FIXED_ARRAY_TYPE)>\n - construction counter: 6\n\n  [0]: 00000378FA033E49: [String] in OldSpace: #pos (const data field 0:s, p: 7, attrs: [WEC]) @ Any\n  [1]: 0000009B539BD2B9: [String] in OldSpace: #end (const data field 1:s, p: 1, attrs: [WEC]) @ Any\n  [2]: 0000028DD0EF42B9: [String] in OldSpace: #kind (const data field 2:s, p: 3, attrs: [WEC]) @ Any\n  [3]: 0000007EABDD4071: [String] in OldSpace: #id (const data field 3:s, p: 9, attrs: [WEC]) @ Any\n  [4]: 0000020140AC45D1: [String] in ReadOnlySpace: #flags (const data field 4:s, p: 8, attrs: [WEC]) @ Any\n  [5]: 0000036E885DE309: [String] in OldSpace: #modifierFlagsCache (const data field 5:s, p: 10, attrs: [WEC]) @ Any\n  [6]: 000001B37FD2DA09: [String] in OldSpace: #transformFlags (const data field 6:s, p: 0, attrs: [WEC]) @ Any\n  [7]: 0000007EABDC4B09: [String] in OldSpace: #parent (const data field 7:h, p: 6, attrs: [WEC]) @ Any\n  [8]: 00000378FA0349F1: [String] in OldSpace: #original (const data field 8:h, p: 5, attrs: [WEC]) @ Any\n  [9]: 000001B37FD2D511: [String] in OldSpace: #decorators (const data field 9:h, p: 4, attrs: [WEC]) @ Any\n  [10]: 000001B37FD24099: [String] in OldSpace: #modifiers (const data field 10:h, p: 2, attrs: [WEC]) @ Any\n```","format":"org.matrix.custom.html","formatted_body":"<p>We tried to improve perf by ensuring that frequently-used fields like <code>kind</code>, <code>pos</code>, <code>end</code>, and <code>flags</code> are all stored in-object:</p>\n<pre><code>000003E4E0E47A91: [Map]\n - type: JS_OBJECT_TYPE\n - instance size: 160\n - inobject properties: 17\n - elements kind: HOLEY_ELEMENTS\n - unused property fields: 7\n - enum length: invalid\n - stable_map\n - back pointer: 0x03e4e0e47a49 &lt;Map(HOLEY_ELEMENTS)&gt;\n - prototype_validity cell: 0x034eb1241659 &lt;Cell value= 1&gt;\n - instance descriptors (own) #11: 0x012f0b6cfb21 &lt;DescriptorArray[11]&gt;\n - prototype: 0x012f0b6cf441 &lt;Object map = 000003E4E0E47779&gt;\n - constructor: 0x013a75523b41 &lt;JSFunction Node (sfi = 00000353F65D5C41)&gt;\n - dependent code: 0x020140ac1281 &lt;Other heap object (WEAK_FIXED_ARRAY_TYPE)&gt;\n - construction counter: 6\n\n  [0]: 00000378FA033E49: [String] in OldSpace: #pos (const data field 0:s, p: 7, attrs: [WEC]) @ Any\n  [1]: 0000009B539BD2B9: [String] in OldSpace: #end (const data field 1:s, p: 1, attrs: [WEC]) @ Any\n  [2]: 0000028DD0EF42B9: [String] in OldSpace: #kind (const data field 2:s, p: 3, attrs: [WEC]) @ Any\n  [3]: 0000007EABDD4071: [String] in OldSpace: #id (const data field 3:s, p: 9, attrs: [WEC]) @ Any\n  [4]: 0000020140AC45D1: [String] in ReadOnlySpace: #flags (const data field 4:s, p: 8, attrs: [WEC]) @ Any\n  [5]: 0000036E885DE309: [String] in OldSpace: #modifierFlagsCache (const data field 5:s, p: 10, attrs: [WEC]) @ Any\n  [6]: 000001B37FD2DA09: [String] in OldSpace: #transformFlags (const data field 6:s, p: 0, attrs: [WEC]) @ Any\n  [7]: 0000007EABDC4B09: [String] in OldSpace: #parent (const data field 7:h, p: 6, attrs: [WEC]) @ Any\n  [8]: 00000378FA0349F1: [String] in OldSpace: #original (const data field 8:h, p: 5, attrs: [WEC]) @ Any\n  [9]: 000001B37FD2D511: [String] in OldSpace: #decorators (const data field 9:h, p: 4, attrs: [WEC]) @ Any\n  [10]: 000001B37FD24099: [String] in OldSpace: #modifiers (const data field 10:h, p: 2, attrs: [WEC]) @ Any\n</code></pre>\n","msgtype":"m.text"},"ts":1643160500947,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LaIARkvQFPAil_ILST4_YyZTOa4BXxvV_TXErVF7_i0"},
{"content":{"body":"that should save you a load, yeah","msgtype":"m.text"},"ts":1643160961747,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LELjxAZ3LFOdT2iqPI6noYFL0DewNgGLNs_IP0CAIAo"},
{"content":{"body":"there's a spam comment on an ecma262 PR, what should I do?","msgtype":"m.text"},"ts":1643162318099,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0kBJjOt9jc_ATucgNdOw03-o1e75Ofl179RH0vQhimo"},
{"content":{"body":"You should take a look at closure compilers AST layout","msgtype":"m.text"},"ts":1643162329574,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$hhFUlH8condyN4mQbVeTwDLne8S9udT15m5r1ClMXrY"},
{"content":{"body":"Everything is firstchild lastchild nextchild","msgtype":"m.text"},"ts":1643162358172,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$sMvmYTYv6Uzw1v4AucITovnFeZsyhhgdArJlNijkhvM"},
{"content":{"body":"Can’t have megamorphic access if everything has the exact same properties","msgtype":"m.text"},"ts":1643162381215,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$r_uQa3JWGYH6_XDj5z9x6BfqvC9ZdG5piNnO7s1cXPk"},
{"content":{"body":"jschoi: I double checked `Array.fromAsync`, and since the content of the `[[Iterator]]` slot is never revealed to user code, the async iterator wrapper prototype is still spec internal only. It sure would be nice to have a way to explicitly note this, so that these internal only things don't get surprisingly exposed without anyone noticing in the future!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: I double checked <code>Array.fromAsync</code>, and since the content of the <code>[[Iterator]]</code> slot is never revealed to user code, the async iterator wrapper prototype is still spec internal only. It sure would be nice to have a way to explicitly note this, so that these internal only things don't get surprisingly exposed without anyone noticing in the future!","msgtype":"m.text"},"ts":1643163528899,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GXfRAWRrJFp_TaHpCfOFFiso4u1kXfWRBf_iRk5kzfU"},
{"content":{"body":"Mathieu Hofman: do you mean like the note at https://tc39.es/ecma262/#sec-createlistiteratorRecord ?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: do you mean like the note at https://tc39.es/ecma262/#sec-createlistiteratorRecord ?","msgtype":"m.text"},"ts":1643165202441,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$zvxp2FUOYOpGklEndKK-ALudUCx7Vqd-_yIc6-RbqfU"},
{"content":{"body":"I suppose, but these things can be lost transitively. First, the `CreateAsyncFromSyncIterator` doesn't have this annotation. Second, really it seems that `GetIterator` creates a record for an iterator (possibly coming from user code, possibly internally built through `CreateAsyncFromSyncIterator`), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","format":"org.matrix.custom.html","formatted_body":"I suppose, but these things can be lost transitively. First, the <code>CreateAsyncFromSyncIterator</code> doesn't have this annotation. Second, really it seems that <code>GetIterator</code> creates a record for an iterator (possibly coming from user code, possibly internally built through <code>CreateAsyncFromSyncIterator</code>), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","msgtype":"m.text"},"ts":1643166508895,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$8DaTM045v9vK-XW4PqoLHmGt5Oj2nCO-8-8zKZwj4OE"},
{"content":{"body":" * I suppose, but these things can be lost transitively. First, the `CreateAsyncFromSyncIterator` doesn't have this annotation. Second, really it seems that `GetIterator` creates a record for an iterator (possibly coming from user code, possibly internally built through `CreateAsyncFromSyncIterator`), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","format":"org.matrix.custom.html","formatted_body":" * I suppose, but these things can be lost transitively. First, the <code>CreateAsyncFromSyncIterator</code> doesn't have this annotation. Second, really it seems that <code>GetIterator</code> creates a record for an iterator (possibly coming from user code, possibly internally built through <code>CreateAsyncFromSyncIterator</code>), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","m.new_content":{"body":"I suppose, but these things can be lost transitively. First, the `CreateAsyncFromSyncIterator` doesn't have this annotation. Second, really it seems that `GetIterator` creates a record for an iterator (possibly coming from user code, possibly internally built through `CreateAsyncFromSyncIterator`), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","format":"org.matrix.custom.html","formatted_body":"I suppose, but these things can be lost transitively. First, the <code>CreateAsyncFromSyncIterator</code> doesn't have this annotation. Second, really it seems that <code>GetIterator</code> creates a record for an iterator (possibly coming from user code, possibly internally built through <code>CreateAsyncFromSyncIterator</code>), but while that record transits through a lot of place, the iterator it contains is seemingly never exposed to user code. It's a weird invariant that is not well understood","msgtype":"m.text"},"m.relates_to":{"event_id":"$8DaTM045v9vK-XW4PqoLHmGt5Oj2nCO-8-8zKZwj4OE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643166522191,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$CP5nnYtTcnlN-qwu3Gs7hUK0mWulMID5zlziXdH1kbg"},
{"content":{"body":"> <@jridgewell:matrix.org> Can’t have megamorphic access if everything has the exact same properties\n\nI though location of the initial object creation matters too; for some engines where the hidden-class graph is a forest and not a tree","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24r_uQa3JWGYH6_XDj5z9x6BfqvC9ZdG5piNnO7s1cXPk\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Can’t have megamorphic access if everything has the exact same properties</blockquote></mx-reply>I though location of the initial object creation matters too; for some engines where the hidden-class graph is a forest and not a tree","m.relates_to":{"m.in_reply_to":{"event_id":"$r_uQa3JWGYH6_XDj5z9x6BfqvC9ZdG5piNnO7s1cXPk"}},"msgtype":"m.text"},"ts":1643177208377,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$nwF2C-TIDBxvmbKfeMPSPmvc2eEuq5bqY_yGccCKAgU"},
{"content":{"body":"> <@jridgewell:matrix.org> Can anyone give a demonstration of ADT without using pattern matching?\n\nthat's depends on the semantics of ADT enum but it doesn't have a runtime semantics specified yet so I cannot give an example sorry","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SdmYqMfR8Gk5wS-GAqSLjChkGcKhyLdOsZlW-4LkNJ8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Can anyone give a demonstration of ADT without using pattern matching?</blockquote></mx-reply>that's depends on the semantics of ADT enum but it doesn't have a runtime semantics specified yet so I cannot give an example sorry","m.relates_to":{"m.in_reply_to":{"event_id":"$SdmYqMfR8Gk5wS-GAqSLjChkGcKhyLdOsZlW-4LkNJ8"}},"msgtype":"m.text"},"ts":1643206691121,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BMOzPOyqG3rnQJ7Z1bpk6jM9JyF1A0aWCGjlm93ohc0"},
{"content":{"body":"jschoi: fair, but i hope you're not suggesting that writing a parser is anywhere remotely near a common use case","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: fair, but i hope you're not suggesting that writing a parser is anywhere remotely near a common use case","msgtype":"m.text"},"ts":1643216269129,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8iFH9lPhl3t2rjeHEJNSkABoGOMSQbmSBDjxnFNR8aU"},
{"content":{"body":"ljharb: parsers are everywhere","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: parsers are everywhere","msgtype":"m.text"},"ts":1643216547098,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qPaPifNqxy0nDyWGMfnLZ4BGKOOr1kVbmolFJ7DicPQ"},
{"content":{"body":"people are writing parsers all the time, whether they know it or not","msgtype":"m.text"},"ts":1643216569643,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$piNrH9lBgaiyoCoEcvr8o9r6e0FdT1DoK3PKZC9g9pA"},
{"content":{"body":"most are simple and can be expressed as a regexp or a series of regexps","msgtype":"m.text"},"ts":1643216584535,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F9XbaA23v1d548HdREbwqBhgim4qQ2vhjgQ7NpCT5gs"},
{"content":{"body":"that sounds like either a really bold claim, or one so broad as to dissolve the context","msgtype":"m.text"},"ts":1643216592136,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NapqDoLgqIJpXaqMnaaBU_HJ2o12C-8qDy7iV-1tkk0"},
{"content":{"body":"\"writing a parser where recursion makes sense\" is not a common use case.","msgtype":"m.text"},"ts":1643216610772,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qqoqguJ8pmPxpHdINchGxMx9t3Mz8-NhZZQ6675f0As"},
{"content":{"body":"parsing is turning something less-structured into something more-structured","msgtype":"m.text"},"ts":1643216616144,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wk8S_BhBDp9y54pIKaj0C2bG3627UjC3ie-3M3n345c"},
{"content":{"body":" * \"writing a parser where recursion makes sense\" is not a common use case.","m.new_content":{"body":"\"writing a parser where recursion makes sense\" is not a common use case.","msgtype":"m.text"},"m.relates_to":{"event_id":"$qqoqguJ8pmPxpHdINchGxMx9t3Mz8-NhZZQ6675f0As","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643216626898,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ceWUqPaxMiGCs8Vl7scqoYRyGizAdDWFlqSqbdKY3Kc"},
{"content":{"body":"Yeah. It doesn’t even have to be on text input but any sequence of values. ","format":"org.matrix.custom.html","formatted_body":"Yeah. It doesn’t even have to be on text input but any sequence of values.","msgtype":"m.text"},"ts":1643216657599,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$n5S2r-T6gSJHkxZnXHZQj1cjW7_clZUNGWTx_6p0PN0"},
{"content":{"body":"so parsing is anything that fights the entropy of the universe, gotcha","msgtype":"m.text"},"ts":1643216657740,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uCH3pgULtQV-dAjQXrU3MP49-8AQEpSj6b9jnmv5nUE"},
{"content":{"body":"* Yeah. It doesn’t even have to be on text input but any sequence of values. ","format":"org.matrix.custom.html","formatted_body":"* Yeah. It doesn’t even have to be on text input but any sequence of values.","m.new_content":{"body":"Yeah. It doesn’t even have to be on text input but any sequence of values. ","format":"org.matrix.custom.html","formatted_body":"Yeah. It doesn’t even have to be on text input but any sequence of values.","msgtype":"m.text"},"m.relates_to":{"event_id":"$n5S2r-T6gSJHkxZnXHZQj1cjW7_clZUNGWTx_6p0PN0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643216672665,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$bsMOI2WiOg7f_KC8jGU5SUsa9w3m2PsCuXU4C_fs7VQ"},
{"content":{"body":"when i grow hair, i'm parsing?","msgtype":"m.text"},"ts":1643216678679,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fW3hi4UVYkw1Ow_KQ53z63t9xpbGF_m6NKFD41zXkuA"},
{"content":{"body":"in the context we're discussing things, \"writing a parser\" such that you'd reach for recursion is simply not a common use case","msgtype":"m.text"},"ts":1643216706376,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$D22ijOaTKjfb9jjz4UmjPsejnMEOma_d8ydYY28lWw8"},
{"content":{"body":"JSON validation is parsing, for example.","msgtype":"m.text"},"ts":1643216718299,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$BLKYoEhosT22YnIJXg1_ZbnGZqbdDgL-38aTyTXGLJk"},
{"content":{"body":"i don't need recursion for that tho.","msgtype":"m.text"},"ts":1643216728503,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FY5U88a58GlNqgUtHttLRqHQiZAo9fLhepsdW8t_1MA"},
{"content":{"body":"Hm, is recursion not required to validate many JSON structures? After all, many JSON schemata are recursive.","msgtype":"m.text"},"ts":1643216770449,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$nH9GWzJMrAIwAKMCY-bwC7OR6cAKDkHtBMLU9HSv-Ag"},
{"content":{"body":"i'm sure a JSONSchema validator may be recursive, sure. but most people don't write those, they just consume them","msgtype":"m.text"},"ts":1643216802961,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sVCfRJYJu3G4R2e8T5PwhdlIxVwgfi-WOSc7sCR9cB8"},
{"content":{"body":"i'm not trying to claim that parsers don't affect a lot of devs. i'm saying that most devs don't author them.","msgtype":"m.text"},"ts":1643216833604,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YzJxwXHyMTurPkpEYYPr_wL3sTZmppJuIHYSLDgc4u4"},
{"content":{"body":"in the same way as \"get intrinsics\" affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's *not common*)","format":"org.matrix.custom.html","formatted_body":"in the same way as &quot;get intrinsics&quot; affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's <em>not common</em>)","msgtype":"m.text"},"ts":1643216872057,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AIWo26PsgrFXt3T4S9jFQHfGA-YOYoY7QD7_vg0BmQg"},
{"content":{"body":" * in the same way as \"get intrinsics\" affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's *not common*)","format":"org.matrix.custom.html","formatted_body":" * in the same way as &quot;get intrinsics&quot; affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's <em>not common</em>)","m.new_content":{"body":"in the same way as \"get intrinsics\" affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's *not common*)","format":"org.matrix.custom.html","formatted_body":"in the same way as &quot;get intrinsics&quot; affects a lot of devs, but most devs don't need to do that directly. and both are relevant when weighing the importance of including syntactic affordances in the language (which is why i'm not trying to pursue syntax for getting intrinsics - because it's <em>not common</em>)","msgtype":"m.text"},"m.relates_to":{"event_id":"$AIWo26PsgrFXt3T4S9jFQHfGA-YOYoY7QD7_vg0BmQg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643216888686,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5_Q70Ie83wqQ5mnPsU9-oP5H4WCGmW5YiC869EUfaMY"},
{"content":{"body":"Yeah, it may be that because I’m familiar with them, I reach for them more readily than most developers.","msgtype":"m.text"},"ts":1643216910273,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GraVDpAlRb9K76nQkp4BclBzF3e-7H_vPW7jeCx7LYY"},
{"content":{"body":"But I do know I write a lot of ad-hoc parsers to validate stuff.","msgtype":"m.text"},"ts":1643216919839,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$-Y74IBvMBoF7lWBiN0LdhU63rdOF8QSuwsrwVStXCfw"},
{"content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the latter).","msgtype":"m.text"},"ts":1643216933822,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk"},
{"content":{"body":"As I can recall from some of my friends, \"it's very hard to find some candidates that understand what is recursion\" ","msgtype":"m.text"},"ts":1643216939370,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kHpWRq4zNJZTPIrTA-noaAS2whBjkI4b5rKdIl9VFRg"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines…and, before that, the Unicode Character Database’s source text files.","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines…and, before that, the Unicode Character Database’s source text files.","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643216955032,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$8wwzipgZrRgHYCKDVfP8j0TxRYP84PO1YUeSwoaCIjg"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the latter).","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the latter).","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643216979137,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$03XoxdagXkscGWtw3J-bZuIhhCJYZInslcgJWR6vdgI"},
{"content":{"body":"* But I do know I write a lot of ad-hoc parsers to validate stuff—both textual and non-textual.","m.new_content":{"body":"But I do know I write a lot of ad-hoc parsers to validate stuff—both textual and non-textual.","msgtype":"m.text"},"m.relates_to":{"event_id":"$-Y74IBvMBoF7lWBiN0LdhU63rdOF8QSuwsrwVStXCfw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217025511,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$zVTCdhzSDM5tYEobUB9eI824eYCrodOlVdaCkqhQ07Y"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the latter).","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the latter).","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217047343,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$aayjaXm2hS29QC1BCfXbVm3gvnCFi04Ndgf_lhygG4c"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217057524,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$OsikW-K18KqYS87FNvwloGJAi8bvbBth4Lk8EtXQS1Q"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).\n\nRegexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.","format":"org.matrix.custom.html","formatted_body":"* <p>Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).</p>\n<p>Regexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.</p>","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).\n\nRegexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.","format":"org.matrix.custom.html","formatted_body":"<p>Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON input from a hospital’s record system…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).</p>\n<p>Regexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217122879,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$fbM1teFgZTGXV01_xqdYHrFugMpvH-R75Orj49v4Hj4"},
{"content":{"body":"* Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON data from a hospital’s record system containing entities within entities…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).\n\nRegexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.","format":"org.matrix.custom.html","formatted_body":"* <p>Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON data from a hospital’s record system containing entities within entities…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).</p>\n<p>Regexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.</p>","m.new_content":{"body":"Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON data from a hospital’s record system containing entities within entities…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).\n\nRegexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.","format":"org.matrix.custom.html","formatted_body":"<p>Just the other day, I had to write an ad-hoc parser for some custom-formatted text file’s lines, as well as some JSON data from a hospital’s record system containing entities within entities…and, before that, the Unicode Character Database’s source text files (though recursion wasn’t necessary for the last one).</p>\n<p>Regexes are super common, but I often need more power than regular expressions…and I often need to apply them to non-textual input.</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$gY0NRloOqYXWHLU0KsWvFR0tm3sBQ8kqgLwNOzWfCFk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217141722,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$0LPkEwuLZSrBNtxA8IsYXrG2VmwXOVyCPNEG9MDXSZY"},
{"content":{"body":"i have the opposite experience - i have interviewed _thousands_ of candidates over the years who are incapable of NOT using recursion, since they were indoctrinated with it in university. our hiring panels always reject those, because recursion is often the wrong tool for the job, at least in frontend.","format":"org.matrix.custom.html","formatted_body":"i have the opposite experience - i have interviewed <em>thousands</em> of candidates over the years who are incapable of NOT using recursion, since they were indoctrinated with it in university. our hiring panels always reject those, because recursion is often the wrong tool for the job, at least in frontend.","msgtype":"m.text"},"ts":1643217161006,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YJBvNoC7S0-V00YUEIEtjPxhBlH74UZ7M_hPClsPTHg"},
{"content":{"body":"at any rate, i'm not trying to debate the value of use cases/parsers or techniques/recursion, just that i strongly believe it's an uncommon combination.","msgtype":"m.text"},"ts":1643217201295,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zl4-KZC0L3nUQXl_djNQkW_ZPWMRCX6uW07FeykQul8"},
{"content":{"body":"Yeah. I agree (I think get intrinsics are useful for a very limited set of people including me, but doubt if it worth an API)","msgtype":"m.text"},"ts":1643217342099,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$t8OLocz7bKGwv514YzDOURN2X1iVsRBJhkUcOqyowO4"},
{"content":{"body":"to be clear, i think getting intrinsics is worth an API (hence the proposal), but decidedly not worth syntax.","msgtype":"m.text"},"ts":1643217389429,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WjmBPCzWzn_GpAa2r3qhI-75PkreonPGufhlGIFsJ5o"},
{"content":{"body":" * to be clear, i think getting intrinsics is worth an API (hence the proposal), but decidedly not worth syntax.","m.new_content":{"body":"to be clear, i think getting intrinsics is worth an API (hence the proposal), but decidedly not worth syntax.","msgtype":"m.text"},"m.relates_to":{"event_id":"$WjmBPCzWzn_GpAa2r3qhI-75PkreonPGufhlGIFsJ5o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643217397380,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Py_HbamTboWgASIwkY5omd248javDs9gif3SZ2e2U8c"},
{"content":{"body":"the context from before was about functions having an immutable binding for their own name but lacking a `function.self` metakeyword, or similar - as compared to `class.self` or similar, where i think the use case is much more common.","format":"org.matrix.custom.html","formatted_body":"the context from before was about functions having an immutable binding for their own name but lacking a <code>function.self</code> metakeyword, or similar - as compared to <code>class.self</code> or similar, where i think the use case is much more common.","msgtype":"m.text"},"ts":1643217444010,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xyZX5DN0TE4t2wMm-HubSxJ11gLFyl-BfZnfDUxrZjk"},
{"content":{"body":"(i'd be _fine_ with `function.self` and `class.self` both, ofc, but i think the former would be much more rarely used)","format":"org.matrix.custom.html","formatted_body":"(i'd be <em>fine</em> with <code>function.self</code> and <code>class.self</code> both, ofc, but i think the former would be much more rarely used)","msgtype":"m.text"},"ts":1643217471917,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Fbzt_ifoQdC8wW_Kbn9jkoTx6PwExqLHCTYdJEMn4Og"},
{"content":{"body":"Hmm. Inside a named function, is the name mutable? ","msgtype":"m.text"},"ts":1643217569913,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$6-8xo4T9-4o00tded8ZepVoKKLSc7zCdQ8dSHdDXSUc"},
{"content":{"body":"Jack Works: If you scroll up, we discussed that. Apparently it is immutable but does not error if you try to assign to it. The assignment just does nothing.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: If you scroll up, we discussed that. Apparently it is immutable but does not error if you try to assign to it. The assignment just does nothing.","msgtype":"m.text"},"ts":1643218218950,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$p-hKVB6EiHhXjlCzxm7dahn47qcGoLsYdBoHsW25AiI"},
{"content":{"body":"even in strict mode? (edit: checked, and yes, even in strict mode; that is super weird)","msgtype":"m.text"},"ts":1643218269835,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K6eKeUv7Bb6D9y7gOjB2D4neJ7xrhUH7wFapfJdeBh4"},
{"content":{"body":" * even in strict mode? (edit: checked, and yes, even in strict mode; that is super weird)","m.new_content":{"body":"even in strict mode? (edit: checked, and yes, even in strict mode; that is super weird)","msgtype":"m.text"},"m.relates_to":{"event_id":"$K6eKeUv7Bb6D9y7gOjB2D4neJ7xrhUH7wFapfJdeBh4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643218411457,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HOIqlzga-ubvA2O-jF6xAxWDEjytaoD5IXyP9SPPg2M"},
{"content":{"body":"it is an ur-const","msgtype":"m.text"},"ts":1643218464581,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ul59f_ndUS4nkdCpUeMrFsz1b7RNJ6WqVta3CgD5dEA"},
{"content":{"body":"all these years, I just thought it was mutable","msgtype":"m.text"},"ts":1643218565730,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XF7xi8bn3eD1muZy5E7yme6rNinET57gwkVz7YYabU4"},
{"content":{"body":"\"ur-const\"?","msgtype":"m.text"},"ts":1643218999520,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$U7_aiv0IaGNGEDur-T_OJE5KP3nElU1Q5gXcaA36e-I"},
{"content":{"body":"this behavior predates `const`","format":"org.matrix.custom.html","formatted_body":"this behavior predates <code>const</code>","msgtype":"m.text"},"ts":1643219013212,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fEOWvnHgG1qWts1yWU9cUXswQKCwTgpn9TXBWiu8f2I"},
{"content":{"body":"it used to be the only immutable binding, so it wasn't inconsistent that it didn't throw","msgtype":"m.text"},"ts":1643219029810,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rqSkuI2UEftb1N0JIK2ho6j4MRi_KtryFZJrc5wONFI"},
{"content":{"body":"Rob Palmer: https://www.oxfordlearnersdictionaries.com/us/definition/english/ur","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: https://www.oxfordlearnersdictionaries.com/us/definition/english/ur","msgtype":"m.text"},"ts":1643219040142,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T2-knLuFzhGzClFCoKpar_ir1oAjnIHaIqVfsI4IhZA"},
{"content":{"body":"i would have named it \"pre-const\"","msgtype":"m.text"},"ts":1643219054176,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$bJXrfqFLCYbzC8rhRA2gs3ozmTEnH-fxEt6zt27KxHY"},
{"content":{"body":"pre-const somehow sounds like something which _isn't_ const but predates const for some reason","format":"org.matrix.custom.html","formatted_body":"pre-const somehow sounds like something which <em>isn't</em> const but predates const for some reason","msgtype":"m.text"},"ts":1643219104786,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$4riKqmk318EDA4yPrZsOOBuOZ7V_KtWqdpbP6xJ91r4"},
{"content":{"body":"i'm surprised that when adding strict mode, it was missed","msgtype":"m.text"},"ts":1643219695061,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NmbUnTKGVfcA2Q4vVZOFd1q9A3w_c-hsspFeU1MSenc"},
{"content":{"body":"erights: was that omission intentional?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: was that omission intentional?","msgtype":"m.text"},"ts":1643219865232,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pD0neijQNQPD_JDWVtkvhgm2futRfXw5S-mJ8QUJ-W8"},
{"content":{"body":"We start plenary in 1 minute!","msgtype":"m.text"},"ts":1643219942939,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$2KV89K4G8jw4cBsPB8bswKo4yP6614YUgi80zc0wbLQ"},
{"content":{"body":"jitsi always messes with my audio for some reason","msgtype":"m.text"},"ts":1643220548395,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VnqoNR3KK3tlKMKeUbymlr2FtLdFKP1Apt3PlgPUaOs"},
{"content":{"body":"yesterday it wouldn't detect my headphones until i open preferences, but it goes away after i close preferences","msgtype":"m.text"},"ts":1643220566574,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OsCQodcgs-vrOQYkBgctPgqvKl7FcWBlwjKlwlVHA8s"},
{"content":{"body":"today, everytime i join, it moves the balance all the way to the left","msgtype":"m.text"},"ts":1643220575282,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YUVQYcnDArU2KGqA7ZQ-m2ZRcaGQp0PCwgjw8cCTzwQ"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1643220575807,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HSVgLJ7pYyRSaFIJyIA1LYnfX4NGL68qmZskx6ql76w"},
{"content":{"body":"if it's the system audio balance, that's a Mac OS bug that triggers when the CPU is pegged sometimes","msgtype":"m.text"},"ts":1643220723871,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AUahdBZxhaJWRDBz5B9PLJn7_57i4KVZFkUGRboTH3g"},
{"content":{"body":"it's crazy and it has been known about for like a year now","msgtype":"m.text"},"ts":1643220735475,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uJqQbdF9BVbPpHez8dFj7W_fa7VHVAv2PlnsiyE8g4c"},
{"content":{"body":"that is wild, how does that bug arise","msgtype":"m.text"},"ts":1643220745225,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jjwtaxNqDy3TAtqU1t5VI51vYbBkKXMAj5_RcDO2pzk"},
{"content":{"body":"mac os audio subsystem is extremely buggy. Afaik, chrome had to move to a restart-able audio process to deal with macos issues. Zoom used to just ask for admin rights to be able to kill the system audio when issues were detected.","msgtype":"m.text"},"ts":1643220877074,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$v_uKJQpzqMogFB3OXSK-N4aelE-qbQ5rDm9ZxzGpeGY"},
{"content":{"body":"this is very cool","msgtype":"m.text"},"ts":1643221008679,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$OvJbkHMrdI-bML7xeJ_dgjA4EwLuEtiEkxxBAadNBIQ"},
{"content":{"body":"no kidding","msgtype":"m.text"},"ts":1643221016467,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$A6mtkZzfCyYxgBMf5zThE3ttP95T9b9Nc85NiZKHBUs"},
{"content":{"body":"the idea one can generate test for test262 (ish) but also customize outputs","msgtype":"m.text"},"ts":1643221205056,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$G8cvRmS5m1riPSrRSzZac_2vbeqNxmZd6HrK0j7LYrw"},
{"content":{"body":"ok, stuff like this would be _amazing_ to record","format":"org.matrix.custom.html","formatted_body":"ok, stuff like this would be <em>amazing</em> to record","msgtype":"m.text"},"ts":1643221374664,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$iaXhhyX5naANLEzT3Kes2DDL1w151Azlv4Y5DW-dJaM"},
{"content":{"body":" * ok, stuff like this would be _amazing_ to record","format":"org.matrix.custom.html","formatted_body":" * ok, stuff like this would be <em>amazing</em> to record","m.new_content":{"body":"ok, stuff like this would be _amazing_ to record","format":"org.matrix.custom.html","formatted_body":"ok, stuff like this would be <em>amazing</em> to record","msgtype":"m.text"},"m.relates_to":{"event_id":"$iaXhhyX5naANLEzT3Kes2DDL1w151Azlv4Y5DW-dJaM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643221435432,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$yNievtyqQz-DUL23Izg93oU4oPJlsaVo5clmxAfc2sU"},
{"content":{"body":"i am reminded of Futamura projections","msgtype":"m.text"},"ts":1643221515757,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w3Yl1vqnpvuNq9Pq7U4_RNgpUVI8LlntlrhGxisPZIc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1643221531410,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$OeJA-emlGXYt-ekKcmHVctJwbHBYu3aEXkGxKCymU8w"},
{"content":{"body":"which_one_meme.jpg","msgtype":"m.text"},"ts":1643221533799,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-pt-0Awrw_18exuXZosPGkhzhAs-rj9uYSZwyW9hUSA"},
{"content":{"body":"wut","msgtype":"m.text"},"ts":1643221732303,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$f7xrF-j41wwQ5b8wApDwgcX6flRpINsGe1DLmczXvGQ"},
{"content":{"body":"WHAT","msgtype":"m.text"},"ts":1643221880832,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$fSfp97-F3OUBXmeDUOGLPM8-h3h1Qqi8WicZy9tQK7I"},
{"content":{"body":"this is dope","msgtype":"m.text"},"ts":1643221883445,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$0XKKX3dUvaBEaekb7pUR_S4TptWA0iqpqawLjKRKkP0"},
{"content":{"body":"very","msgtype":"m.text"},"ts":1643221938250,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$UezC1hpQBNQyDAIgLMqJnIzTqSLeF2pMa4WeZVd-Gaw"},
{"content":{"body":"this is why I wanted them to share it with committee 🙂","msgtype":"m.text"},"ts":1643221960994,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3Mp_uTZ-PTpsa5vJdVIg7vc4mMoXGeZedwk9wlRBHyA"},
{"content":{"body":"I think a lot of you will find this useful","msgtype":"m.text"},"ts":1643221968712,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vtkeD13OEoo3x3QKJitJHV2YeVIPynSTwN3XzcbIqAg"},
{"content":{"body":"is the ECMA-402 spec too loose to try this? Let's get this working on 402 too!","msgtype":"m.text"},"ts":1643221973087,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$nloFRGQiJO0kgsaUDf78LUz1t0GmE9hvl8CQRjCNqy4"},
{"content":{"body":"they will probably have to do a decent amount more work to make it work with ECMA-402","msgtype":"m.text"},"ts":1643222008683,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T-kE-XQfcNLbm7cZFSGpkU5yxVx78My0_8WIqFHnC28"},
{"content":{"body":"understandable ☹️","msgtype":"m.text"},"ts":1643222022890,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$-5qhlGLCPD1v-3muq0PBV0Ej5AcEaWPV4fccY-OciwM"},
{"content":{"body":"but we could help!","msgtype":"m.text"},"ts":1643222029812,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Hq_o5zU7TcUEhAvlwZohN8Qih3aOjy5mHAlGW-32Kls"},
{"content":{"body":"remember, their contribution involved encoding the semantics of the phrasing we use in 262","msgtype":"m.text"},"ts":1643222038447,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5XKEK7B7GQkqT0haQCWszARbsLf8doYLwe7RproEazQ"},
{"content":{"body":"reducing the variety of that phrasing will simplify things","msgtype":"m.text"},"ts":1643222048348,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Ez1dLBU2aNAi56mbLnehO1LpSG8FKDGQB-AyPy5TJcU"},
{"content":{"body":"ecma-402 unfortunately has a greater variety","msgtype":"m.text"},"ts":1643222058194,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$sPH8UpDRnfTZOywMTrZk6dOqw1Xu1VYTaX229FyRyS0"},
{"content":{"body":"yeah, that's what I was afraid of","msgtype":"m.text"},"ts":1643222060623,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Sj3VjkIe4hEyREvzgS8OrZ7YxR3ohyaMnv9GVxZtH18"},
{"content":{"body":"absolutely. That plus the fact that large parts of it are impl-defined (relatively anyway) I suppose...","msgtype":"m.text"},"ts":1643222079322,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$pBCkRW2LzQZ009wjSB8A5lWxfMEMA4rg-Jap_zmtuEg"},
{"content":{"body":"ryzokuken: it's all open source, so you actually can make it work","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: it's all open source, so you actually can make it work","msgtype":"m.text"},"ts":1643222090438,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tt2RvMQFJhS2YR749UsA4yO40Nn7cw8EP3jHgyNb4mc"},
{"content":{"body":" * absolutely. That plus the fact that large parts of it are impl-defined (relatively anyway) I suppose...","m.new_content":{"body":"absolutely. That plus the fact that large parts of it are impl-defined (relatively anyway) I suppose...","msgtype":"m.text"},"m.relates_to":{"event_id":"$pBCkRW2LzQZ009wjSB8A5lWxfMEMA4rg-Jap_zmtuEg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643222092044,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Y73td5q350Dk_Jm7qf9NQ82w9mNrPm3gDvo4bmXUomE"},
{"content":{"body":"seems simple enough to add support for new phrases","msgtype":"m.text"},"ts":1643222102399,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SgNmTEQuszPazvEJpjMh0UNdxT-eXzo5_ro4eeSH-Uc"},
{"content":{"body":"cool, I'll try to get it to work 😀 ","msgtype":"m.text"},"ts":1643222125339,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$h_AHaHyb6l-wiMq-VUd2Op4g7jCx4ryDT0j5VmHH9jA"},
{"content":{"body":"but I'd prefer just reducing the variety of your phrasing in 402 anyway","msgtype":"m.text"},"ts":1643222126486,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$7EjANiJ1pD9L12pR2-oH_hz0KJy5vRBoVz7F7ZbB6I8"},
{"content":{"body":"that's not a bad idea either, did you have an issue or sth to track this in 262?","msgtype":"m.text"},"ts":1643222150388,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$3AeHd3H7Ey0htZj9BqWrDgAZN1EfCdVktV_8nWSFJ8c"},
{"content":{"body":"nah, we've just been doing them one by one as we notice them","msgtype":"m.text"},"ts":1643222188653,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Bg0yVan48mFGQOppORe-lhBQEMhQrBsXEM1RYRC5JgU"},
{"content":{"body":"fair, I'll kickstart something on #tc39-ecma402:matrix.org ","format":"org.matrix.custom.html","formatted_body":"fair, I'll kickstart something on <a href=\"https://matrix.to/#/#tc39-ecma402:matrix.org\">#tc39-ecma402:matrix.org</a>","msgtype":"m.text"},"ts":1643222271550,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Z4Cal0Y86KG0skSrMJTBnrS_WAvvTdieF2Q6rsu2mK8"},
{"content":{"body":"shared array buffers are going to be hard to formalize by anything similar to the way the rest of the language is formalized","msgtype":"m.text"},"ts":1643222362995,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lFqddWYqZpvoETPCwjp_jdWkNPuSMUn6NGlufae7-G0"},
{"content":{"body":"omgm","msgtype":"m.text"},"ts":1643222373335,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$g2CQpaHiHhDSK0oh2FzHfP7_Z8slSBwvXl7ZbgGd3Nk"},
{"content":{"body":"though conrad watt has a formalization somewhere I think","msgtype":"m.text"},"ts":1643222375405,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0jnQftHrqiW5OROJCmrtTo9cAE8U6VXiyaGHKxYoeHY"},
{"content":{"body":"depends on what the goal of mechanizing the memory model would be","msgtype":"m.text"},"ts":1643222390086,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zRsgHh1O2SXgsrqS6nWEfisgQF0N4aOHVAt_5Ijylbk"},
{"content":{"body":"loving this","msgtype":"m.text"},"ts":1643222392546,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$GJz8hEAUmSFELs1cN_4bfx1jDCTx2m8WkO98fSXLYIQ"},
{"content":{"body":"it's possible to \"support\" the memory model by just treating them as non-shared","msgtype":"m.text"},"ts":1643222402228,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uhvDOuWcsc9goBtBESSxAuOQ7JRt-1dDYMYFZ_Zbbxo"},
{"content":{"body":"like, an SC execution is never wrong","msgtype":"m.text"},"ts":1643222412732,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PNTAFkmJwjQ5vObSswZ6NSesCsuFLjliYwefjO6lZfs"},
{"content":{"body":"shu: i mean mostly that the memory model is not written in the same kind of way as the rest of the spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: i mean mostly that the memory model is not written in the same kind of way as the rest of the spec","msgtype":"m.text"},"ts":1643222414650,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n012q1GjwFJ7_t1b5nUCWjLgeI7q-fMqev8jkwBS7xs"},
{"content":{"body":"right, mechanizing that into something operational is original research","msgtype":"m.text"},"ts":1643222431855,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E3XJp6x5wwJn7M1yb8VCVHNIih_SC78s4Y04gPljP8c"},
{"content":{"body":"and is unsolved last i checked","msgtype":"m.text"},"ts":1643222434904,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Adbo3WlboRLy-1CSaHhai_DX4b1DYRhia4zIRcnzGg0"},
{"content":{"body":"but i'm saying they could just ignore it","msgtype":"m.text"},"ts":1643222454072,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iZ3tnLEaI9Zu8bRNA5c1cnuCfSLH2q_AtULIU9tlhEI"},
{"content":{"body":"PEGs use ordered choice","msgtype":"m.text"},"ts":1643222488503,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0OOdUZ1ASIUx4sN7P6AwupIxJoZSSPpjow0qsInfD8U"},
{"content":{"body":"so it probably just adopts the order we wrote it in","msgtype":"m.text"},"ts":1643222500336,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aDnfAslTnZWR1b3555k5pjYlZEsfxN9B9SoJ0AcVqjY"},
{"content":{"body":"shu: I'm about to enter a 3 hour block of meetings, which ends with me leaving to pick up my daughter at school (I'm EST). Since there are no slides, or other information attached to \"Let's talk about test262 maintenance and contribution\", I'm not sure what else you want to discuss beyond the creation of the maintainers group. I'm concerned that I'm now going to miss this topic due to obligations on my end. What can we do about that? Can we defer it to tomorrow?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm about to enter a 3 hour block of meetings, which ends with me leaving to pick up my daughter at school (I'm EST). Since there are no slides, or other information attached to &quot;Let's talk about test262 maintenance and contribution&quot;, I'm not sure what else you want to discuss beyond the creation of the maintainers group. I'm concerned that I'm now going to miss this topic due to obligations on my end. What can we do about that? Can we defer it to tomorrow?","msgtype":"m.text"},"ts":1643222621328,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$VdP6FjuxTv5eBFFPrvY4GoSrRv47qWUzlr8I0EPFCWo"},
{"content":{"body":"i would prefer no deferral if there are no other agenda items for Thursday","msgtype":"m.text"},"ts":1643222663690,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sliwdCM9DBGs4lvhPnZ3lbxmqX3oLhbF9NMX24xmKZs"},
{"content":{"body":"ptomato: if you integrated your proposal, as you would in a PR, I don't see why it wouldn't work","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: if you integrated your proposal, as you would in a PR, I don't see why it wouldn't work","msgtype":"m.text"},"ts":1643222702407,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ahZiWP9Wvw_CR2iG3nvq_n-lFNg_swxNxJds45xF4vM"},
{"content":{"body":"i want to discuss the role of the maintainer group, the workflow, expectations from proposal authors, and stage requirements","msgtype":"m.text"},"ts":1643222703068,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TocV0bRlC5B7Wvk03Yz6zvOeRX6_OYfESoIJNOX_arc"},
{"content":{"body":"Rick Waldron: is there someone else you trust to present your viewpoint? are there also specific topics you want to raise?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: is there someone else you trust to present your viewpoint? are there also specific topics you want to raise?","msgtype":"m.text"},"ts":1643222771486,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Lr8REmv0TKRsFKDSrmKGoqkbeYUksBcLiMj8q20GyxM"},
{"content":{"body":"we could bring forward JS Choi's item next, and then do test262 last today - does that help Rick? ","msgtype":"m.text"},"ts":1643222789599,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$O-FtSokuDmJ2FqUsovDL5ct41-8fNjq5pXJi52uJ4UQ"},
{"content":{"body":"yeah, a schedule reshuffle if possible would be ideal, i guess","msgtype":"m.text"},"ts":1643222822645,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Ycab54rIoYr0xy-DM87AVZkv5KObyvoz_MaBh3LlYUc"},
{"content":{"body":"Rob Palmer: I think the end of the day for the meeting is when I'm feeding my daughter dinner","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: I think the end of the day for the meeting is when I'm feeding my daughter dinner","msgtype":"m.text"},"ts":1643222846747,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$Q8g_fioi-Ge7DxSQZXN3-eN0C6kVqpeL0oM2TrvzW90"},
{"content":{"body":"end of the meeting is 14:00-15:00 PST after your 3 hours of meetings","msgtype":"m.text"},"ts":1643222887364,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$HMC-HXg0N-mX1V7SLUbu1AVXC1Do6uO_3MZbrPfWYz8"},
{"content":{"body":"My meetings end at 5, and then I have to leave to pick my child up from school. ","msgtype":"m.text"},"ts":1643222918048,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$moc9Zkz8_i4m8UijNN-bxwGDBK83Sz0H_bK9sufZ_OU"},
{"content":{"body":"ok so that won't work then","msgtype":"m.text"},"ts":1643223014020,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$_x1agCfF6SGtS70my4eV1InxXws9uJIO_MsBX56pUEg"},
{"content":{"body":"I'm trying to figure out how long the 4pm thing will be","msgtype":"m.text"},"ts":1643223107633,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$NWSYzg8gMJcdwcC8S51ufFI-b3O38FbzULefJp2RzFI"},
{"content":{"body":"Ben Newman (Apollo, @benjamn on GH): that was one of the questions the editors asked in our first call with them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamn:matrix.org\">Ben Newman (Apollo, @benjamn on GH)</a>: that was one of the questions the editors asked in our first call with them","msgtype":"m.text"},"ts":1643223423170,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_uJy7uCG0XNlYplTJsygC-oupZ5v23zuSOxQbXWDBsg"},
{"content":{"body":"cool, I guess it's a natural one!","msgtype":"m.text"},"ts":1643223440284,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$bqg2iJod3QlTA92BbnCZQ9Kns136F9ndZXeVI-1--vg"},
{"content":{"body":"editors are planning on fixing up regex chapter at some point","msgtype":"m.text"},"ts":1643223452505,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KKHrfCtnUcNsiTjENUb2xd-Mf9dCTqsqw9MHf8r7Ixg"},
{"content":{"body":"we'll try to make more progress on it following initial integration after we finish up this completion record reform work","msgtype":"m.text"},"ts":1643223454921,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$i4RspwlyhLJSBBOKUcyFdkpttUMRk-W1qCyX1CpPFx0"},
{"content":{"body":"it's already gotten a lot better thanks to jmdyck ","format":"org.matrix.custom.html","formatted_body":"it's already gotten a lot better thanks to <a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>","msgtype":"m.text"},"ts":1643223458483,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BN2GZJcx24ugMiS2ttV32xBNV16bBu4UBMYfjzWzdhE"},
{"content":{"body":"learning that the regex chapter used to be lisp definitely explains some things","msgtype":"m.text"},"ts":1643223585669,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rTxOyic3or-kcbs_Abmw573VQFgXoAFYF6v1dmdNTuo"},
{"content":{"body":"yep, the \"ordered pairs\" probably came from there","msgtype":"m.text"},"ts":1643223655163,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BtJgxN99z4IRE-yxh-8ROj9clJfhavT_Nc3V_Wu4I8M"},
{"content":{"body":"why port it so literally? lol","msgtype":"m.text"},"ts":1643223669764,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6HYONJTtzIAeAlAZ8XFObbdJyiFShAIBpsVo0nFuM2I"},
{"content":{"body":"I guess we didn't have the same ambitions of running analysers on the spec back then","msgtype":"m.text"},"ts":1643223698788,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zN5QSnnZq8q52vRM1Z_uK-baZBkJaKV8TeJON8jneyw"},
{"content":{"body":"Rob Palmer: shu My 4pm meeting was canceled. So 1pm PST?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> My 4pm meeting was canceled. So 1pm PST?","msgtype":"m.text"},"ts":1643223780624,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$HaSFpIeEFU9-bUQHgHvXNTEqPLnzwskc-KV1vaGO4Ww"},
{"content":{"body":"sure, i'm flexible for whatever time that works for rick","msgtype":"m.text"},"ts":1643223793441,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2dMfg1EnvP_DPwVlEHX9gyxB9vLa9P3X79Bf9D8AjRM"},
{"content":{"body":"(though still prefer today, not tomorrow)","msgtype":"m.text"},"ts":1643223799191,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$F3LmeEC6ZdFAmTHQIkQMaBHw-DM2Bjv7FJAeHUJYZn4"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1643223810348,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$2h0uMQN8L4Xon5HJaxSPDuvvQOYz7AWRIaSNZZTmOFg"},
{"content":{"body":"let's see if JS Choi can go next","msgtype":"m.text"},"ts":1643223821039,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$VBn5PzKri2sufkYz01cdIccN4gbElI-MGYqLeTWTeh8"},
{"content":{"body":"jschoi: can you go next after this?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: can you go next after this?","msgtype":"m.text"},"ts":1643223866660,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$__7uvw52Jsitfjp607J1gYbaMycxOavWkdiN1rMWv0A"},
{"content":{"body":"WH is right, the papers are actually pretty easy to follow","msgtype":"m.text"},"ts":1643223987118,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UEAFBSpIFI0XI1bBaV5rdBQaBlIoevjk4l9ARtqvPjc"},
{"content":{"body":"and they're very nicely split up","msgtype":"m.text"},"ts":1643224003411,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fgpPVSFux0_FjIF4-6hGTnUOmtCKKRr9O42iOdG3H10"},
{"content":{"body":"I do think we should have a central place for this though","msgtype":"m.text"},"ts":1643224020056,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$F04QDoZkwyEbhq3h38kRxz7W_J7JoqvSJLbK611aFFs"},
{"content":{"body":"there's a lot of research, not all of it in academia, and it would be good to have it more discoverable","msgtype":"m.text"},"ts":1643224033938,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$c-601XqXukIRQFexkVrp36ySIjOML6NPrEHWW-XiXCw"},
{"content":{"body":"e.g. jmdyck's ecmaspeak and WH's link from earlier are both relevant and do not have papers","msgtype":"m.text"},"ts":1643224064835,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oPMUc66yPgP682eO29vNTBocmCirJJlJ_IoeAALcNkE"},
{"content":{"body":"I support saving the final 10 minutes for after lunch","msgtype":"m.text"},"ts":1643224297604,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$gcRe6Cn6Xx0W8hWyR2GTYUjKBoFkFr9jO-zfCpPlbdk"},
{"content":{"body":"there's some kind of sync issue","msgtype":"m.text"},"ts":1643224345147,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ib75bM_YQ-xA781mb4pBiQXBHKUFN1b3piit_iR3nIc"},
{"content":{"body":"https://jschoi.org/21/es-dataflow/","msgtype":"m.text"},"ts":1643224374938,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KE1GfLI66KxmUrj4aLU_LjxLgijcNM_LhN_lpmiGgvk"},
{"content":{"body":"dang this page is pretty","msgtype":"m.text"},"ts":1643224385707,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$5pXvBtLMKnxTbcsXl8v1aGTbAq_jK2q9tkdx0kBXY9I"},
{"content":{"body":"https://jschoi.org/21/es-dataflow/map/","msgtype":"m.text"},"ts":1643224412068,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_mjnkENxiW4n4jZeH_DPUthkNvJA44kXmMafKosub9w"},
{"content":{"body":"is there like an extreme audio delay or something?","msgtype":"m.text"},"ts":1643224475968,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PZ3chGv4blnKcnzZB6ACBhIeTkyxQoMk-exKdPGNFrU"},
{"content":{"body":"there seems to be, yes","msgtype":"m.text"},"ts":1643224500578,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aCWR4L4nVG98KGTupWQm_SvbckIRCFr34pyMQDhPDuU"},
{"content":{"body":"it's certainly robot-ing here and there","msgtype":"m.text"},"ts":1643224528080,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$ssBHJK1q6zVJKEBL2wuen-IeII8-3qjSIgJ6WRqVUbo"},
{"content":{"body":"Now I can hear JS-Choi better","msgtype":"m.text"},"ts":1643224534138,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$jb6vJaSH1w8mNWK3_SAgpNSfhfERmEw3yk7KJxEGhaQ"},
{"content":{"body":"i think js choi's connection is having issues.","msgtype":"m.text"},"ts":1643224555513,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$B12bNejY7I17o5I68jeAjDg77W3h1-q1ngUPvExmp28"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1643224570552,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$cY775NN1r_KF_3wHQ-mJDnxnPScQC8d3Y3j0xBoGn9E"},
{"content":{"body":"It would be great if we could read the presentations ahead of the meeting. I'd have appreciated some time to study the map of ES dataflow proposals ahead of time instead of in real-time at the meeting.","msgtype":"m.text"},"ts":1643224618778,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$UxBiDkvx0GWZ1D03ej-n1MtgeBTREiOvgeLb8kQzaz0"},
{"content":{"body":"but it seems to be workable now - i suspect it is js choi's upload quality/bandwith","msgtype":"m.text"},"ts":1643224618866,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$HmYCf42Wid6vpQUlMuUtsy5iZMOUs-4AczhsLplorqs"},
{"content":{"body":"waldemar: the material was published ahead of time https://github.com/tc39/agendas/pull/1106","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: the material was published ahead of time https://github.com/tc39/agendas/pull/1106","msgtype":"m.text"},"ts":1643224678732,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pwr04VvZQknvUQkW75WwPZBraTC3NYZh0gaM4rfH-iM"},
{"content":{"body":"They stopped presenting, so the audio got better.","msgtype":"m.text"},"ts":1643224681192,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$nif_b390IZvojFnESIreyBJPsQrnrCTEpdnr1Ab4n48"},
{"content":{"body":"Yeah, the whole point of assembling the agendas is precisely to allow you to review things ahead of time if you wish, and this in particular was put on the agenda about two weeks ago.","msgtype":"m.text"},"ts":1643224728424,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$f6rOwDFepo4FrBNWlfK6TUODBfUeVZVCSWM2x4r13uE"},
{"content":{"body":"The title was on the agenda, but there were no links to anything on the agenda.","msgtype":"m.text"},"ts":1643224922236,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$lX5UlcfHYQAY4ra732WtlS_V9vc7xKkUxuZEs_6olJQ"},
{"content":{"body":"waldemar: that PR contains three links","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that PR contains three links","msgtype":"m.text"},"ts":1643224955385,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XYFPumx-OVgrEd5KnTIp78Au8AwCcpIvmNjScNHlOiM"},
{"content":{"body":"Yes there was - the PR shows that all the linkes were there.","msgtype":"m.text"},"ts":1643224959554,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Ii04qazj2tPxjQVEToouTOXp0sIXioXrzovhRRInPyU"},
{"content":{"body":"Sorry; my bad.","msgtype":"m.text"},"ts":1643225014555,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$4BYjLrd9ReMCwVtMLwbI-d1Xn-BQe8Fw1A3_rZ1YJts"},
{"content":{"body":"I was looking at the wrong item.","msgtype":"m.text"},"ts":1643225029937,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$pI5kQ_GA5b8idHgWdOiGTsUQYZmAFIzxKGmSAoJ5hTQ"},
{"content":{"body":"> <@bakkot:matrix.org> you can assign to it but it's immutable\n\n> the lambda scope is not mutable\n\nI'm not following, do you have an example?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ACYZaEAi0-ZqZh0p9vvrVkOYbuIQCerc49QEG5fqWLg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>you can assign to it but it&#39;s immutable</blockquote></mx-reply><blockquote>\n<p>the lambda scope is not mutable</p>\n</blockquote>\n<p>I'm not following, do you have an example?</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$ACYZaEAi0-ZqZh0p9vvrVkOYbuIQCerc49QEG5fqWLg"}},"msgtype":"m.text"},"ts":1643225214321,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$E7RK4sLdZQ7p_IrwSBeq2Gg7sD1xMPb-Mv2Q-tTn6gE"},
{"content":{"body":"(sorry catching up on some previous discussions)","msgtype":"m.text"},"ts":1643225242221,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$dV345aNoCdfwX1oHhyzhAYE8c30dgn5oOBjbg88wKtc"},
{"content":{"body":"Mathieu Hofman: `(function f(){ f = 0; console.log(f); })();`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: <code>(function f(){ f = 0; console.log(f); })();</code>","msgtype":"m.text"},"ts":1643225565410,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z-lPXY_YJJq_gyVjOzEw3Xy8Aj33tSmO4dIXWfRBhiE"},
{"content":{"body":"the assignment doesn't throw, but also doesn't change `f`","format":"org.matrix.custom.html","formatted_body":"the assignment doesn't throw, but also doesn't change <code>f</code>","msgtype":"m.text"},"ts":1643225581146,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1x1rGqpBy44D1NTFG77AbyspqwmR0X35CntjHlr82bM"},
{"content":{"body":" * the assignment doesn't throw, but also doesn't change `f`","format":"org.matrix.custom.html","formatted_body":" * the assignment doesn't throw, but also doesn't change <code>f</code>","m.new_content":{"body":"the assignment doesn't throw, but also doesn't change `f`","format":"org.matrix.custom.html","formatted_body":"the assignment doesn't throw, but also doesn't change <code>f</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$1x1rGqpBy44D1NTFG77AbyspqwmR0X35CntjHlr82bM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643225600954,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JpbYzIFxf17TIEFD0vcNdzTKDfQYgu7C5PYcEdxT5nk"},
{"content":{"body":"It does in strict mode, doesn't it?\n`(function(){\"use strict\"; let foo = (function f() { f = 'foo'; }); foo(); return foo;})()`\n`Uncaught TypeError: Assignment to constant variable.`","format":"org.matrix.custom.html","formatted_body":"It does in strict mode, doesn't it?<br><code>(function(){&quot;use strict&quot;; let foo = (function f() { f = 'foo'; }); foo(); return foo;})()</code><br><code>Uncaught TypeError: Assignment to constant variable.</code>","msgtype":"m.text"},"ts":1643225764161,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$I-_iXr3ch_NvJjQ9eNarnrQN0zgObwJ1_ZtJSGFAukY"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1643225784955,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hu-1XN4titgVpZJLWiBs9Jg4EI2CcEODkqgay4vuNHM"},
{"content":{"body":"it's like assignment to a readonly property in sloppy, it silently ignore it. But strict mode fixes it.","msgtype":"m.text"},"ts":1643225848703,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NKQY_WzVtT4thkWxHlLpBsHA5yoLQDBAomewRQP8SUk"},
{"content":{"body":"oh hmm. i'm not sure why my earlier strict mode tests didn't throw then","msgtype":"m.text"},"ts":1643225866185,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xvBMV5g1o2L6EJms7k9aj35NSnUEdKA2brVy1767P7g"},
{"content":{"body":"> <@ljharb:matrix.org> even in strict mode? (edit: checked, and yes, even in strict mode; that is super weird)\n\nI was confused by ^","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$K6eKeUv7Bb6D9y7gOjB2D4neJ7xrhUH7wFapfJdeBh4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>even in strict mode? (edit: checked, and yes, even in strict mode; that is super weird)</blockquote></mx-reply>I was confused by ^","m.relates_to":{"m.in_reply_to":{"event_id":"$K6eKeUv7Bb6D9y7gOjB2D4neJ7xrhUH7wFapfJdeBh4"}},"msgtype":"m.text"},"ts":1643225912311,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$O7tn7ItYoLIK_39JRmtvtQPMmpnN7GopfwJPijJSdE4"},
{"content":{"body":"my mistake then, sorry about that","msgtype":"m.text"},"ts":1643225926153,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$93eJzuvWTx0nh48AmtuOokwOsakTpkKDAXGvn12x0zM"},
{"content":{"body":"Was trying to double check things before raising this with MM ;)","msgtype":"m.text"},"ts":1643225953413,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$JQTRxj5sV1o70znrUPCN7aYr3FlUGYbw-ok-5SxhkLw"},
{"content":{"body":"i thought it also didn't throw in strict mode","msgtype":"m.text"},"ts":1643226137779,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RmAZEZdGN6Xa4VrIrYRGA0TtkRdoAE0xdf8nghQQLoI"},
{"content":{"body":"because it's always created with _S_ = false","format":"org.matrix.custom.html","formatted_body":"because it's always created with <em>S</em> = false","msgtype":"m.text"},"ts":1643226144392,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uaN9BzYuTqv_GrX0KcB2pxhkRhSshUmV7os5rF_p-CM"},
{"content":{"body":"been a while though","msgtype":"m.text"},"ts":1643226213593,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tij8fEFcHCC1rWSIgptLjqb96IQBpT9QOygQft4Cb2A"},
{"content":{"body":"`S = true` means that assignments to it will throw even in sloppy mode","format":"org.matrix.custom.html","formatted_body":"<code>S = true</code> means that assignments to it will throw even in sloppy mode","msgtype":"m.text"},"ts":1643226334716,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-gHMiMGomBoRvc97TI1uEudtrflr6inhq80QP3NbmVw"},
{"content":{"body":"ah ha, got it backwards","msgtype":"m.text"},"ts":1643226355816,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GXKn9rtQdzmBKFbxPbAN0JkSfL4erEIk3F2kaP5lWX4"},
{"content":{"body":"let's get to the queue imo","msgtype":"m.text"},"ts":1643226523537,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rnn0tZt3Lgp3HHtD_PepYFRfk2polPJBvfYOOSUMpZg"},
{"content":{"body":"Do we not have free overflow time later today?","msgtype":"m.text"},"ts":1643226685743,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ndUIro73PUcQ0raeqb12bIycHqEYsyYTNhpb71d1tlw"},
{"content":{"body":"the hackmd says 15 minutes","msgtype":"m.text"},"ts":1643226726604,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pRmdJw0FcOtiQyHMpTfa_lItsX9NuExUL4f3coih5I0"},
{"content":{"body":"is 10 of that already filled up by this?","msgtype":"m.text"},"ts":1643226743644,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hT4ROCMAZFNUsK4KADyzFuN1vTZ-Apv4wzGEG2f-I6E"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1643226748963,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$iq33ALy5kV4C-5gL2HYPNi8uG-e8zoKA_-KKZj2rog8"},
{"content":{"body":"did i hear voting","msgtype":"m.text"},"ts":1643227044253,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XV5nzySH1IeYROYiH24LurYzyk4-VJL-WVJ30KWmT24"},
{"content":{"body":"can we have the \"what voting system\" fight again","msgtype":"m.text"},"ts":1643227077206,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GXwVFC943RxHjlaeFQYJ06mlp_FaH6MaubbXaBj3CAs"},
{"content":{"body":"my position is, we should list every subset of these proposals and then do approval voting for the subsets","msgtype":"m.text"},"ts":1643227089818,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9inX1Zysuhfh5q5wl9fAMtvuM26Ufoog5Qt1xvKTz50"},
{"content":{"body":"damn it, i was getting so pumped for this","msgtype":"m.text"},"ts":1643227252480,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$L_4DgG_-Fw1oxU7DBxiNvDB1BIIVEH1dmiBTLtY-KL4"},
{"content":{"body":"gotta stay pumped for 1h","msgtype":"m.text"},"ts":1643227273373,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$MJHiA2dmkXV3XJN_O-8_L7ZdZF6OleOEmV1JE5B7Hrc"},
{"content":{"body":"come in kicking","msgtype":"m.text"},"ts":1643227277976,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$UWAW2743NgDzLVId1hJpdV8FPsBcY_nIhcmrym_aBdU"},
{"content":{"body":"Thank you for splitting the topic (if needed, please continue without me)","msgtype":"m.text"},"ts":1643227306939,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dHKoD8yE6i5i6LeNKfa00NrT8pMJwnfVy0azwnou-Y8"},
{"content":{"body":"Have to give an interview...","msgtype":"m.text"},"ts":1643227317666,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$OEqlBQILy9t3yb-TelvhPhJ4dNTdx144qcP-p3w8VEc"},
{"content":{"body":"We shall return at 13:00 PST for a 10 minute continuation of the current topic on JS Choi's dataflow discussion.  Please do not be late!","msgtype":"m.text"},"ts":1643227382283,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pKxRP8tRf-gXBu9ro9mbhx3jUzysHDRrxbE6ZFvOG2o"},
{"content":{"body":"it occurs to me throughout this agenda item, that it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)","format":"org.matrix.custom.html","formatted_body":"it occurs to me throughout this agenda item, that it might be helpful to avoid using the word &quot;this&quot; to describe something that's not <code>this</code> :-)","msgtype":"m.text"},"ts":1643230912015,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AOnPBjwlXlqmRj1DHBpMw3p7_N_cW7PmqXDSnxy76lQ"},
{"content":{"body":" * it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)","format":"org.matrix.custom.html","formatted_body":" * it might be helpful to avoid using the word &quot;this&quot; to describe something that's not <code>this</code> :-)","m.new_content":{"body":"it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)","format":"org.matrix.custom.html","formatted_body":"it might be helpful to avoid using the word &quot;this&quot; to describe something that's not <code>this</code> :-)","msgtype":"m.text"},"m.relates_to":{"event_id":"$AOnPBjwlXlqmRj1DHBpMw3p7_N_cW7PmqXDSnxy76lQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643230914626,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zX1J2JsPlJucItkhKFCUL02OCHCy85zK38fwLG9dcHw"},
{"content":{"body":" * it occurs to me throughout this agenda item, that it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)","format":"org.matrix.custom.html","formatted_body":" * it occurs to me throughout this agenda item, that it might be helpful to avoid using the word &quot;this&quot; to describe something that's not <code>this</code> :-)","m.new_content":{"body":"it occurs to me throughout this agenda item, that it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)","format":"org.matrix.custom.html","formatted_body":"it occurs to me throughout this agenda item, that it might be helpful to avoid using the word &quot;this&quot; to describe something that's not <code>this</code> :-)","msgtype":"m.text"},"m.relates_to":{"event_id":"$AOnPBjwlXlqmRj1DHBpMw3p7_N_cW7PmqXDSnxy76lQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643230929167,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UxtQYmYUrnvBwyqSShFFKqMhOrF-X-1J1V8Vq-irl58"},
{"content":{"body":"> <@ljharb:matrix.org> it occurs to me throughout this agenda item, that it might be helpful to avoid using the word \"this\" to describe something that's not `this` :-)\n\n_Non-Lexical use of `this` considered harmful_","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AOnPBjwlXlqmRj1DHBpMw3p7_N_cW7PmqXDSnxy76lQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>it occurs to me throughout this agenda item, that it might be helpful to avoid using the word \"this\" to describe something that's not <code>this</code> :-)</blockquote></mx-reply><em>Non-Lexical use of <code>this</code> considered harmful</em>","m.relates_to":{"m.in_reply_to":{"event_id":"$AOnPBjwlXlqmRj1DHBpMw3p7_N_cW7PmqXDSnxy76lQ"}},"msgtype":"m.text"},"ts":1643231580343,"senderName":"SoftwareChris","senderId":"@softwarechris:matrix.org","id":"$K0S0qKnSZNhsgOmvV2BUISpoQu3JtpBcbdk8teCKFI0"},
{"content":{"body":"yeah, I'm interested in this, but it's a bit hard to follow with nothing to look at","msgtype":"m.text"},"ts":1643231888718,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$y5sKj-dULWwhfsMdWLlwdu3ySwfk1NFtH22c0uYP65Y"},
{"content":{"body":"shu: maybe it'd be good to structure the discussion by naming a topic that you'd like to start with?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: maybe it'd be good to structure the discussion by naming a topic that you'd like to start with?","msgtype":"m.text"},"ts":1643231902852,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$_R6b9R7Loiniszk3HDJw8afw7v1AIkzcMneri1-u5yE"},
{"content":{"body":"there are many topics that you touched on in your initial speech","msgtype":"m.text"},"ts":1643231914567,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$r61XoIM1NRg5rSNmAWZU68Bj-sDNpTtsPi1XP6SSmNc"},
{"content":{"body":"sarahghp: By the way, take a look at https://github.com/tabatkins/proposal-call-this-operator and let us know in the pipe room what you think. It’s another version of bind-this but which doesn’t overlap with the pipe operator.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: By the way, take a look at https://github.com/tabatkins/proposal-call-this-operator and let us know in the pipe room what you think. It’s another version of bind-this but which doesn’t overlap with the pipe operator.","msgtype":"m.text"},"ts":1643231942716,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$KJUEz5nlyC9ELtYwrTXXjxiuNhQbeXSxz5L6Nuq05CQ"}
]