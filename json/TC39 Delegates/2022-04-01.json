[
{"content":{"body":"Probably not, but just in case…\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to suppress the grammar-shape errors resulting from the spec referring to those productions.","msgtype":"m.text","org.matrix.msc1767.text":"Probably not, but just in case…\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to suppress the grammar-shape errors resulting from the spec referring to those productions."},"ts":1648785309684,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$pxleZ9IE86I1mPUYardLS83kH4Dc2OZ6Q4Zib-qJn3Y"},
{"content":{"body":"* Probably not, but just in case…\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to prevent the grammar-shape errors resulting from the spec referring to those productions.","format":"org.matrix.custom.html","formatted_body":"* Probably not, but just in case…<br />\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to prevent the grammar-shape errors resulting from the spec referring to those productions.","m.new_content":{"body":"Probably not, but just in case…\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to prevent the grammar-shape errors resulting from the spec referring to those productions.","format":"org.matrix.custom.html","formatted_body":"Probably not, but just in case…<br />\nIs there a way for ecmarkup to become aware of definitions from Ecma262 pull requests? I want a proposal spec to refer to the Decorator productions from #2417—and I want to prevent the grammar-shape errors resulting from the spec referring to those productions.","msgtype":"m.text"},"m.relates_to":{"event_id":"$pxleZ9IE86I1mPUYardLS83kH4Dc2OZ6Q4Zib-qJn3Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1648785757396,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$8HygtzHvbD056Dfitf7699c9KupokqvRLDFD5X6NPdw"},
{"content":{"body":"jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","mimetype":"text/html"}]},"ts":1648786542453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wie38dAMSwHnk7kL4cPTHTPv6OQ7DwHeqcy2CMOyUAw"},
{"content":{"body":"that said I am halfway through making a breaking change to the biblio format so you might want to wait a couple days","msgtype":"m.text","org.matrix.msc1767.text":"that said I am halfway through making a breaking change to the biblio format so you might want to wait a couple days"},"ts":1648786569033,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LvbARlCmqQ7lNXXIjPzIXuwPuD24GG-shIeOeboVYT0"},
{"content":{"body":" * jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","m.new_content":{"body":"jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$wie38dAMSwHnk7kL4cPTHTPv6OQ7DwHeqcy2CMOyUAw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * jschoi: check out the pr, run `ecmarkup --verbose --write-biblio whatever.json spec.html > /dev/null`; this will produce a `whatever.json` biblio file. in your proposal, do `ecmarkup --load-biblio ./whatever.json your-proposal.html`.","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: check out the pr, run <code>ecmarkup --verbose --write-biblio whatever.json spec.html &gt; /dev/null</code>; this will produce a <code>whatever.json</code> biblio file. in your proposal, do <code>ecmarkup --load-biblio ./whatever.json your-proposal.html</code>.","mimetype":"text/html"}]},"ts":1648786581122,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7vIvXqOvpmKnUzupWRXeTedVckeABOYlCeZq0qT05zU"},
{"content":{"body":"(the `./` is import because otherwise ecmarkup will attempt to load a node module named `whatever.json` which is not the thing you want)","format":"org.matrix.custom.html","formatted_body":"(the <code>./</code> is import because otherwise ecmarkup will attempt to load a node module named <code>whatever.json</code> which is not the thing you want)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(the `./` is import because otherwise ecmarkup will attempt to load a node module named `whatever.json` which is not the thing you want)","mimetype":"text/plain"},{"body":"(the <code>./</code> is import because otherwise ecmarkup will attempt to load a node module named <code>whatever.json</code> which is not the thing you want)","mimetype":"text/html"}]},"ts":1648786614710,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8eP-3SEhC7skfoFKzJqFfJaoT34tdwFPP9EFqPjhpw4"},
{"content":{"body":"this requires a recent (v10/v11) version of ecmarkup, I should mention","msgtype":"m.text","org.matrix.msc1767.text":"this requires a recent (v10/v11) version of ecmarkup, I should mention"},"ts":1648786644349,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8lxAr2urE31ZgEPnTX8y4cEXYwKLWN6nxfxoRT-k_3s"},
{"content":{"body":"uh, but that might not actually fix your problem","msgtype":"m.text","org.matrix.msc1767.text":"uh, but that might not actually fix your problem"},"ts":1648786665353,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IYXje0_GqEqAuGn8W22wU6kFWMhwrdWpyyAX0XybA3A"},
{"content":{"body":"because some of the checks are from grammarkdown, which doesn't really know about the biblio","msgtype":"m.text","org.matrix.msc1767.text":"because some of the checks are from grammarkdown, which doesn't really know about the biblio"},"ts":1648786680025,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NE_8BbCpxBE14lMDZkRgsMEJggMfD_cMqdm5XvJ-CJQ"},
{"content":{"body":"Thank you very much! I think the PR’s biblio file will be sufficient. Looking forward to the biblio-format upgrade. ","format":"org.matrix.custom.html","formatted_body":"Thank you very much! I think the PR’s biblio file will be sufficient. Looking forward to the biblio-format upgrade.","msgtype":"m.text"},"ts":1648786823621,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$tTC7Hwpn_TAApsTZWGtBzySRArjqHFazmTb7R8QEwKY"},
{"content":{"body":"it is just a small tweak to make it better for other tooling: https://github.com/tc39/ecmarkup/pull/425","msgtype":"m.text","org.matrix.msc1767.text":"it is just a small tweak to make it better for other tooling: https://github.com/tc39/ecmarkup/pull/425"},"ts":1648786846989,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PZvPaTxrfAVOhDkNoC_6yhxJRLZ3yZcolIxhs4SyQNs"},
{"content":{"body":"This will be a v12?","msgtype":"m.text"},"ts":1648786863960,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ORnFSzBD9M4kP5tjGs0eR8MhqiSVjf593qd4mhBzN-c"},
{"content":{"body":"https://github.com/tc39/ecmarkup/releases/tag/v12.0.0","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/ecmarkup/releases/tag/v12.0.0"},"ts":1648786878841,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TQ4br_hpqL7nJWb3_KNlQTdVgis61Db8uJPXqlel9Zw"},
{"content":{"body":"but there's a bug to do with https://github.com/tc39/ecmarkup/pull/426 that I gotta fix before this is actually usable","msgtype":"m.text","org.matrix.msc1767.text":"but there's a bug to do with https://github.com/tc39/ecmarkup/pull/426 that I gotta fix before this is actually usable"},"ts":1648786896504,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YnbeOBdmv6_ABtiwKXrLeEd9tYJbVW3bRYBny1NjfBg"},
{"content":{"body":"so stick with 11 for now","msgtype":"m.text","org.matrix.msc1767.text":"so stick with 11 for now"},"ts":1648786901717,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NxHfrLKiNxLt3KJ_Rt6UTpirWHrU9jO6oMKqT5tEeVY"},
{"content":{"body":"https://twitter.com/DasSurma/status/1509835337295609865","msgtype":"m.text","org.matrix.msc1767.text":"https://twitter.com/DasSurma/status/1509835337295609865"},"ts":1648822850355,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$pQOO33b5O9idphz4cA34nWZ-Q4JV9pWAgF52VamQwFo"},
{"content":{"body":"The different between imports and destructuring seems to come up more ","format":"org.matrix.custom.html","formatted_body":"The different between imports and destructuring seems to come up more","msgtype":"m.text"},"ts":1648823117923,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$JUAp3BiRRkxCdY6VskGB6LX4-eM1caX44i8DskeV9C0"},
{"content":{"body":"That's not imports and destructuring, but imports vs exports!","msgtype":"m.text","org.matrix.msc1767.text":"That's not imports and destructuring, but imports vs exports!"},"ts":1648823143276,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hiW5abQjZEnEkjBcoSkmt1t6e6ksCD0qXd41bpODr48"},
{"content":{"body":" * That's not imports and destructuring, but imports vs exports","m.new_content":{"body":"That's not imports and destructuring, but imports vs exports","msgtype":"m.text","org.matrix.msc1767.text":"That's not imports and destructuring, but imports vs exports"},"m.relates_to":{"event_id":"$hiW5abQjZEnEkjBcoSkmt1t6e6ksCD0qXd41bpODr48","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * That's not imports and destructuring, but imports vs exports"},"ts":1648823220686,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$updrk0DG5x1vVUDsGsaQoql-PPeHKZc6d6BXOpaWKH0"},
{"content":{"body":" * That's not imports and destructuring, but imports vs exports!","m.new_content":{"body":"That's not imports and destructuring, but imports vs exports!","msgtype":"m.text","org.matrix.msc1767.text":"That's not imports and destructuring, but imports vs exports!"},"m.relates_to":{"event_id":"$hiW5abQjZEnEkjBcoSkmt1t6e6ksCD0qXd41bpODr48","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * That's not imports and destructuring, but imports vs exports!"},"ts":1648823224410,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PmweCgUOh4xD3Ex34qxc0m2PICv1aWjKP-5q82C2Az0"},
{"content":{"body":"yes, I mean how default is treated different here:\n\n`import x from \"path\"`\nAnd \n`const x = v`;\n\nwhen \n\n`import {x} from \"path\"`\nand\n`const {x} = v;`","format":"org.matrix.custom.html","formatted_body":"<p>yes, I mean how default is treated different here:</p>\n<p><code>import x from &quot;path&quot;</code><br />\nAnd<br />\n<code>const x = v</code>;</p>\n<p>when</p>\n<p><code>import {x} from &quot;path&quot;</code><br />\nand<br />\n<code>const {x} = v;</code></p>","msgtype":"m.text"},"ts":1648823303469,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$zfgCM6DBpchyVcg_WHwfouG9dJ5OxBzj0d90gKpOrCs"},
{"content":{"body":"This was also discussed via https://github.com/tc39/notes/blob/main/meetings/2016-11/nov-29.md#12iid-proposal-to-reform-the-spec-to-include-default-export-in-export--from-module around creating an aliasing pattern (since redirects have instancing issues)","msgtype":"m.text","org.matrix.msc1767.text":"This was also discussed via https://github.com/tc39/notes/blob/main/meetings/2016-11/nov-29.md#12iid-proposal-to-reform-the-spec-to-include-default-export-in-export--from-module around creating an aliasing pattern (since redirects have instancing issues)"},"ts":1648823319564,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$R7IuM19wzBPd6zaiuJXcrSpdgCGHgEAWT2lT5mA1JFA"},
{"content":{"body":"I find more people get confused about that, vs using `export *`","format":"org.matrix.custom.html","formatted_body":"I find more people get confused about that, vs using <code>export *</code>","msgtype":"m.text"},"ts":1648823333681,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$fGnXy0qD49rsAPKsV_EMQLCp9dUwFaP97kuJSkwUTj0"},
{"content":{"body":"it could be worth considering an `export **` in future, bradleymeck previously suggested that alternative","format":"org.matrix.custom.html","formatted_body":"it could be worth considering an <code>export **</code> in future, <a href=\"https://matrix.to/#/@bradleymeck:matrix.org\">bradleymeck</a> previously suggested that alternative","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it could be worth considering an `export **` in future, bradleymeck previously suggested that alternative","mimetype":"text/plain"},{"body":"it could be worth considering an <code>export **</code> in future, <a href=\"https://matrix.to/#/@bradleymeck:matrix.org\">bradleymeck</a> previously suggested that alternative","mimetype":"text/html"}]},"ts":1648823356126,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$17aH6AZtyj3rNccqeiVS23YjjKdFfLI0qZaNV7OU7hk"},
{"content":{"body":"the default export can always be chosen explicitly right; just requires a second import ","format":"org.matrix.custom.html","formatted_body":"the default export can always be chosen explicitly right; just requires a second import","msgtype":"m.text"},"ts":1648823417915,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$jkKJ3aXt2Pb0OA1wWoHVJw_HzdRJqUY_CHEEUIFrR9E"},
{"content":{"body":"Yes","msgtype":"m.text","org.matrix.msc1767.text":"Yes"},"ts":1648823425927,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IGjMPRSf1hWVdV0ggRKH9EMicQYC8Y7GJ4dpSIV95RE"},
{"content":{"body":"Or am I missing something?","msgtype":"m.text"},"ts":1648823426288,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$7nTpfLG0GHGQkWItrT7qN4uZtmGxeuY15FboNaNmoA0"},
{"content":{"body":"* Or am I missing something?","m.new_content":{"body":"Or am I missing something?","msgtype":"m.text"},"m.relates_to":{"event_id":"$7nTpfLG0GHGQkWItrT7qN4uZtmGxeuY15FboNaNmoA0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1648823437023,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ozzDc0G8MyuXjgIzzUqF_Y7wBLpwXaTRcVHNG3yVnfo"},
{"content":{"body":"* yes, I mean how default is treated different here:\n\n`import x from \"path\"`\nAnd \n`const x = v`;\n\ncompared to here:\n\n`import {x} from \"path\"`\nand\n`const {x} = v;`","format":"org.matrix.custom.html","formatted_body":"* <p>yes, I mean how default is treated different here:</p>\n<p><code>import x from &quot;path&quot;</code><br />\nAnd<br />\n<code>const x = v</code>;</p>\n<p>compared to here:</p>\n<p><code>import {x} from &quot;path&quot;</code><br />\nand<br />\n<code>const {x} = v;</code></p>","m.new_content":{"body":"yes, I mean how default is treated different here:\n\n`import x from \"path\"`\nAnd \n`const x = v`;\n\ncompared to here:\n\n`import {x} from \"path\"`\nand\n`const {x} = v;`","format":"org.matrix.custom.html","formatted_body":"<p>yes, I mean how default is treated different here:</p>\n<p><code>import x from &quot;path&quot;</code><br />\nAnd<br />\n<code>const x = v</code>;</p>\n<p>compared to here:</p>\n<p><code>import {x} from &quot;path&quot;</code><br />\nand<br />\n<code>const {x} = v;</code></p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$zfgCM6DBpchyVcg_WHwfouG9dJ5OxBzj0d90gKpOrCs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1648823467821,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$BdXllQBGU7S1OKiX_I8fSBazVoj8HtA97QzJ9V1r0zE"},
{"content":{"body":"There’s no formal specification yet for function decorators, right? Are there plans to allow arrow functions to be decorated? ","format":"org.matrix.custom.html","formatted_body":"There’s no formal specification yet for function decorators, right? Are there plans to allow arrow functions to be decorated?","msgtype":"m.text"},"ts":1648824141899,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$n5_uyh2RRC1fSYO_80OJCrTNgsMCAHr27dLkEUHyzMw"},
{"content":{"body":"I don't think there is even a proposal yet, it's mostly a desire","msgtype":"m.text"},"ts":1648824255729,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8GIvoj2ARC_kxXcmPeaetGOFYdg9cJfKWYhBnZJFgwE"},
{"content":{"body":"(btw, we created a decorators room if you are interested)","msgtype":"m.text"},"ts":1648824272112,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HBJzHYRG-871ePI5JTl0FBNAJ6K06-IA76b4BAJNheg"},
{"content":{"body":"There’s a proposal for export default from, so you could do `export default, * from ‘f’` - still stage 1","format":"org.matrix.custom.html","formatted_body":"There’s a proposal for export default from, so you could do <code>export default, * from ‘f’</code> - still stage 1","msgtype":"m.text"},"ts":1648827305326,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BMWkw67EjPjk5OI6a-uBXh_PD6GEGJUqnkFErZX7YlA"},
{"content":{"body":"I'm assuming you need to know if the target has a default, else that will early error. ","msgtype":"m.text"},"ts":1648828002963,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Uv6zbqo-dpS4X-bG7E18FtkJXJqJVA3sbUGMbLfCpWk"},
{"content":{"body":"ah true, that's a good point","msgtype":"m.text","org.matrix.msc1767.text":"ah true, that's a good point"},"ts":1648831120601,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$M-_hQe50bdJjQf9FCKGRP2vmRyPhZ3_7PQ2-QZCq3u8"},
{"content":{"body":"altho tbf i'd hope you do always know what you're re-exporting :-)","msgtype":"m.text","org.matrix.msc1767.text":"altho tbf i'd hope you do always know what you're re-exporting :-)"},"ts":1648831132093,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ryEfEfmmLWdIshiJK5riu3ak_HS1tftg8H9fjbZVDXg"},
{"content":{"body":"I tripped up on this when trying to create a monorepo build tool using ES modules as redirects for inter-package links. It was annoying that those link modules could not be stable, and instead needed to be regenerated based on the target's content. ","msgtype":"m.text"},"ts":1648832617168,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$HHygVrCAZNLesHhu_zG6l5qGURh4OepD8lpMSOYoFpM"},
{"content":{"body":"yeah, I generally feel like `export *` is only useful for glue code, and the glue code should not need to be updated when the thing it's re-exporting is updated; that's the whole point of it","format":"org.matrix.custom.html","formatted_body":"yeah, I generally feel like <code>export *</code> is only useful for glue code, and the glue code should not need to be updated when the thing it's re-exporting is updated; that's the whole point of it","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yeah, I generally feel like `export *` is only useful for glue code, and the glue code should not need to be updated when the thing it's re-exporting is updated; that's the whole point of it","mimetype":"text/plain"},{"body":"yeah, I generally feel like <code>export *</code> is only useful for glue code, and the glue code should not need to be updated when the thing it's re-exporting is updated; that's the whole point of it","mimetype":"text/html"}]},"ts":1648832712749,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ER0FiGYU6XqSBZlhD8Tnio6YYdEhM0f1cdoIuM6FvTA"},
{"content":{"body":"```\nexport * from \"./mod.mjs\";\nimport * as NS from \"./mod.mjs\";\nexport default NS.default ?? \"💥\";\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>export * from &quot;./mod.mjs&quot;;\nimport * as NS from &quot;./mod.mjs&quot;;\nexport default NS.default ?? &quot;💥&quot;;\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```\nexport * from \"./mod.mjs\";\nimport * as NS from \"./mod.mjs\";\nexport default NS.default ?? \"💥\";\n```","mimetype":"text/plain"},{"body":"<pre><code>export * from &quot;./mod.mjs&quot;;\nimport * as NS from &quot;./mod.mjs&quot;;\nexport default NS.default ?? &quot;💥&quot;;\n</code></pre>\n","mimetype":"text/html"}]},"ts":1648834381673,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ny-FrdYPq5kkK_ueKlmQregcJwRXpyTxWQhzVy_hdhI"},
{"content":{"body":"`export { default } from \"./mod.js\";`?","format":"org.matrix.custom.html","formatted_body":"<code>export { default } from &quot;./mod.js&quot;;</code>?","msgtype":"m.text"},"ts":1648834439202,"senderName":"rbuckton (OOF thru Apr. 1st)","senderId":"@rbuckton:matrix.org","id":"$i2G4llYHiIvOOfjE4y8NtWdda0oaUilW-dVw5jaRgZQ"}
]