[
{"content":{"body":"> <@jschoi:matrix.org> I don’t see mentions of this option in the previous Set methods presentations. Static methods might be able to sidestep the issues with the “`this` Set uses internal slots and argument Sets use a symbol-based public API” approach.\n> \n> The only discussion I can find about the static-methods option is in https://github.com/tc39/proposal-set-methods/issues/1, and I don’t really see any compelling reasoning against static methods given in there.\n\n\nit does not sidestep the issue - the fundamental problem is \"how do you get the data from a Set which you take as an argument\", and taking two Sets as arguments instead of one doesn't help ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4UBf3CBrPH0OYHfc62EiAZ_C1Zt2PSRmLMwO67z_pHg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br><p>I don’t see mentions of this option in the previous Set methods presentations. Static methods might be able to sidestep the issues with the “<code>this</code> Set uses internal slots and argument Sets use a symbol-based public API” approach.</p>\n<p>The only discussion I can find about the static-methods option is in https://github.com/tc39/proposal-set-methods/issues/1, and I don’t really see any compelling reasoning against static methods given in there.</p>\n</blockquote></mx-reply>it does not sidestep the issue - the fundamental problem is &quot;how do you get the data from a Set which you take as an argument&quot;, and taking two Sets as arguments instead of one doesn't help","m.relates_to":{"m.in_reply_to":{"event_id":"$4UBf3CBrPH0OYHfc62EiAZ_C1Zt2PSRmLMwO67z_pHg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jschoi:matrix.org> I don’t see mentions of this option in the previous Set methods presentations. Static methods might be able to sidestep the issues with the “`this` Set uses internal slots and argument Sets use a symbol-based public API” approach.\n> \n> The only discussion I can find about the static-methods option is in https://github.com/tc39/proposal-set-methods/issues/1, and I don’t really see any compelling reasoning against static methods given in there.\n\n\nit does not sidestep the issue - the fundamental problem is \"how do you get the data from a Set which you take as an argument\", and taking two Sets as arguments instead of one doesn't help ","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4UBf3CBrPH0OYHfc62EiAZ_C1Zt2PSRmLMwO67z_pHg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br><p>I don’t see mentions of this option in the previous Set methods presentations. Static methods might be able to sidestep the issues with the “<code>this</code> Set uses internal slots and argument Sets use a symbol-based public API” approach.</p>\n<p>The only discussion I can find about the static-methods option is in https://github.com/tc39/proposal-set-methods/issues/1, and I don’t really see any compelling reasoning against static methods given in there.</p>\n</blockquote></mx-reply>it does not sidestep the issue - the fundamental problem is &quot;how do you get the data from a Set which you take as an argument&quot;, and taking two Sets as arguments instead of one doesn't help","mimetype":"text/html"}]},"ts":1662968919487,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DVIGg8sLxs8x_VBFqG2upZP21MiPoyW_shKhDUyOUTQ"}
]