[
{"content":{"body":"hi bakkot I have to say I really like the alternative design of do expression (https://github.com/theScottyJam/proposal-statements-as-expressions/issues/3)","format":"org.matrix.custom.html","formatted_body":"hi <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> I have to say I really like the alternative design of do expression (https://github.com/theScottyJam/proposal-statements-as-expressions/issues/3)","msgtype":"m.text"},"ts":1628385911317,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nbr99jVC6NC3Hdd4YjDO3pJkwIHtuPWjkucWpAlhayE"},
{"content":{"body":"IMO that's the real meaningful way to turn statements into expressions","msgtype":"m.text"},"ts":1628385935970,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$32vdpP4DVg8vzZJmZmz8AzNejSQPggn6ofrIszlVbH4"},
{"content":{"body":"without the complex early errors that do expressions currently have","msgtype":"m.text"},"ts":1628385955640,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qCCWCi8yI5zANw0t8Gd5RqIr4OC_zY3-7jyA_ITtQU8"},
{"content":{"body":"and my idea in the link above also allows the \"temp variable\" case.","msgtype":"m.text"},"ts":1628385998504,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$0u54ZC4lcwLvyhoSn6L1fGUmTR8OmrmaCqPjsJgwBLk"},
{"content":{"body":"To be short: We add `if expression` and `try expression`. (`throw expression` has it's own proposal, `switch` has `pattern matching` as the expression version)","format":"org.matrix.custom.html","formatted_body":"To be short: We add <code>if expression</code> and <code>try expression</code>. (<code>throw expression</code> has it's own proposal, <code>switch</code> has <code>pattern matching</code> as the expression version)","msgtype":"m.text"},"ts":1628386053393,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kaMPCqhB3F0N1bb5LJNuoJ47up-gEFz7Qy3yZpEYg_8"},
{"content":{"body":"Then we add a `ExprBlock`, that in form of\n`{`\n`OneOrMore Declaration or Expression`\n`Expression``}`)","format":"org.matrix.custom.html","formatted_body":"Then we add a <code>ExprBlock</code>, that in form of<br><code>{</code><br><code>OneOrMore Declaration or Expression</code><br><code>Expression``}</code>)","msgtype":"m.text"},"ts":1628386131600,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$q90Fp0YU1Bx0MMMEa_lo0xrvLc4149WEa81I0Nko83w"},
{"content":{"body":" * Then we add a `ExprBlock`, that in the form of\n`{`\n`OneOrMore Declaration or Expression`\n`Expression`\n`}`","format":"org.matrix.custom.html","formatted_body":" * Then we add a <code>ExprBlock</code>, that in the form of<br><code>{</code><br><code>OneOrMore Declaration or Expression</code><br><code>Expression</code><br><code>}</code>","m.new_content":{"body":"Then we add a `ExprBlock`, that in the form of\n`{`\n`OneOrMore Declaration or Expression`\n`Expression`\n`}`","format":"org.matrix.custom.html","formatted_body":"Then we add a <code>ExprBlock</code>, that in the form of<br><code>{</code><br><code>OneOrMore Declaration or Expression</code><br><code>Expression</code><br><code>}</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$q90Fp0YU1Bx0MMMEa_lo0xrvLc4149WEa81I0Nko83w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628386147216,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CmOiN2UnZMU3B3iOEVQpuBh2vxl6LMxBhZQRKKv78Uk"},
{"content":{"body":" * Then we add a `ExprBlock`, that in the form of\nexpr `{`\n`OneOrMore Declaration or Expression`\n`Expression`\n`}`","format":"org.matrix.custom.html","formatted_body":" * Then we add a <code>ExprBlock</code>, that in the form of<br>expr <code>{</code><br><code>OneOrMore Declaration or Expression</code><br><code>Expression</code><br><code>}</code>","m.new_content":{"body":"Then we add a `ExprBlock`, that in the form of\nexpr `{`\n`OneOrMore Declaration or Expression`\n`Expression`\n`}`","format":"org.matrix.custom.html","formatted_body":"Then we add a <code>ExprBlock</code>, that in the form of<br>expr <code>{</code><br><code>OneOrMore Declaration or Expression</code><br><code>Expression</code><br><code>}</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$q90Fp0YU1Bx0MMMEa_lo0xrvLc4149WEa81I0Nko83w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628386159656,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$syvywaTbiiFnk9NL7D03rhYxKBxaAIE8HKJzjbmeTgY"},
{"content":{"body":"So we can do\n\n```js\nconst sth = expr {\n    const tmp = random()\n    tmp * tmp\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>So we can do</p>\n<pre><code class=\"language-js\">const sth = expr {\n    const tmp = random()\n    tmp * tmp\n}\n</code></pre>\n","msgtype":"m.text"},"ts":1628386190098,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$G3iMQy_YMnjLudCUmqw-3xp4ektmnFS1Wi_goBBRHD0"},
{"content":{"body":"meanwhile `for` loop, `break`, `continue`, `return`, `if-without-else` are naturally syntax error in the form above.","format":"org.matrix.custom.html","formatted_body":"meanwhile <code>for</code> loop, <code>break</code>, <code>continue</code>, <code>return</code>, <code>if-without-else</code> are naturally syntax error in the form above.","msgtype":"m.text"},"ts":1628386242593,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$boJo8g_j2UG1Ir9wBs17KKuwsG90qgLonymXuyHIulE"},
{"content":{"body":"That brings more composable syntax sets for developer to use (`if expression`, `try expression`, `pattern matching`, `throw expression`, `expression block`, ...)","format":"org.matrix.custom.html","formatted_body":"That brings more composable syntax sets for developer to use (<code>if expression</code>, <code>try expression</code>, <code>pattern matching</code>, <code>throw expression</code>, <code>expression block</code>, ...)","msgtype":"m.text"},"ts":1628386299290,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$zbyl1_yRDkU55-xp4qsCd9Siz3g-K8bxgl2WmnJg0Mc"},
{"content":{"body":"cc HE Shi-Jun I guess you will like this idea too","format":"org.matrix.custom.html","formatted_body":"cc <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a> I guess you will like this idea too","msgtype":"m.text"},"ts":1628386327390,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-Z_tvVCtG5LxtokqS4P0BqJ-VLqGzcnLqdbj_nYHxUg"},
{"content":{"body":"(and I still don't think using break continue and return in the expression position is a good idea)","msgtype":"m.text"},"ts":1628386537500,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Epor9HOs7RF5ek18XGnZat0OLtRHWmPjDvvCQUFzvFs"},
{"content":{"body":"Jack Works: thanks for the suggestion, I'll take a look in a bit","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: thanks for the suggestion, I'll take a look in a bit","msgtype":"m.text"},"ts":1628404314179,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w8V6d4PEG-TBiQfHo2rLx8xlPzKdU2KcwNxQbJhS9Zg"}
]