[
{"content":{"body":"sure, i can unarchive it if you want to comment it yourself? just lmk","format":"org.matrix.custom.html","formatted_body":"sure, i can unarchive it if you want to comment it yourself? just lmk","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$JvGk6-GVSvZacJRgJGAAB3k8S77ErmncKxdiF2CeSWY"}}},"ts":1643071608084,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$C9u2r09ltjRomUVYsBjWkGveH2cOhULHYCJPwl_br9k"},
{"content":{"body":"> <@bakkot:matrix.org> ljharb: can you use your admin powers to drop a link to https://github.com/bakkot/proposal-duplicate-named-capturing-groups on https://github.com/tc39/proposal-regexp-named-groups/issues/44 ?\n\n * sure, i can unarchive it if you want to comment it yourself? just lmk","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JvGk6-GVSvZacJRgJGAAB3k8S77ErmncKxdiF2CeSWY?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you use your admin powers to drop a link to https://github.com/bakkot/proposal-duplicate-named-capturing-groups on https://github.com/tc39/proposal-regexp-named-groups/issues/44 ?</blockquote></mx-reply> * sure, i can unarchive it if you want to comment it yourself? just lmk","m.new_content":{"body":"sure, i can unarchive it if you want to comment it yourself? just lmk","format":"org.matrix.custom.html","formatted_body":"sure, i can unarchive it if you want to comment it yourself? just lmk","msgtype":"m.text"},"m.relates_to":{"event_id":"$C9u2r09ltjRomUVYsBjWkGveH2cOhULHYCJPwl_br9k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643071645974,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oGi3mFKPb5y0S7uYh2VGWyIzcdyokAZk43SSYRvl6jc"},
{"content":{"body":"also, what happened with the \"set method argument internal slot\" discussion? i had to drop off","msgtype":"m.text"},"ts":1643071670717,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zOsmeS5Vq-u_zhv1Of6hBEibax3KdsUoAu_QNZLzfS8"},
{"content":{"body":" * sure, i can unarchive it if you want to comment it yourself? just lmk, or if we can't coordinate, i can","format":"org.matrix.custom.html","formatted_body":" * sure, i can unarchive it if you want to comment it yourself? just lmk, or if we can't coordinate, i can","m.new_content":{"body":"sure, i can unarchive it if you want to comment it yourself? just lmk, or if we can't coordinate, i can","format":"org.matrix.custom.html","formatted_body":"sure, i can unarchive it if you want to comment it yourself? just lmk, or if we can't coordinate, i can","msgtype":"m.text"},"m.relates_to":{"event_id":"$C9u2r09ltjRomUVYsBjWkGveH2cOhULHYCJPwl_br9k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643072290293,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xD4_gdolcCygrl3Su33zhQ5CWQwnUWpzyP7TifICo64"},
{"content":{"body":"ljharb: if you want to unarchive tonight and ping me I'll link it, or you should feel free to do so on my behalf","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: if you want to unarchive tonight and ping me I'll link it, or you should feel free to do so on my behalf","msgtype":"m.text"},"ts":1643081566276,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YRx58w9LE3E4XViFEWHrfoGVUQFVZ7XWPlIy0SOy4Y0"},
{"content":{"body":"> <@ljharb:matrix.org> also, what happened with the \"set method argument internal slot\" discussion? i had to drop off\n\ntl;dr was, for the argument to `Set.prototype.union`, MM does not like the idea of _only_ reaching in to the [[SetData]] internal slot, but would potentially be OK with reaching in to that slot if present and otherwise falling back to the publicly exposed methods (`has`, etc), even though this would technically be a violation of proxy transparency (because for most cases it would still Just Work)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zOsmeS5Vq-u_zhv1Of6hBEibax3KdsUoAu_QNZLzfS8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>also, what happened with the &quot;set method argument internal slot&quot; discussion? i had to drop off</blockquote></mx-reply>tl;dr was, for the argument to <code>Set.prototype.union</code>, MM does not like the idea of <em>only</em> reaching in to the [[SetData]] internal slot, but would potentially be OK with reaching in to that slot if present and otherwise falling back to the publicly exposed methods (<code>has</code>, etc), even though this would technically be a violation of proxy transparency (because for most cases it would still Just Work)","m.relates_to":{"m.in_reply_to":{"event_id":"$zOsmeS5Vq-u_zhv1Of6hBEibax3KdsUoAu_QNZLzfS8"}},"msgtype":"m.text"},"ts":1643081591253,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$05jo7TVStPF2PxGo-MDN50CCzo7EHpww7yvnXBT3-wY"},
{"content":{"body":"bakkot: done now, go nuts","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: done now, go nuts","msgtype":"m.text"},"ts":1643081592903,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1LYeyv4nuOSn8gx5ZoJaTgVW-rvhi-yLix5rtfZ-0gs"},
{"content":{"body":"bakkot: but the receiver would still have slot access only, yes?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: but the receiver would still have slot access only, yes?","msgtype":"m.text"},"ts":1643081664206,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oh8b37d2ba-uc9axxlGRRKVFE7X6qnwhffnRF8NGNmc"},
{"content":{"body":"yeah, receiver is fine","msgtype":"m.text"},"ts":1643081672427,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OCKLT-_X7ab9KBGfIwjubPGuhPoKd0h722xYcpluxXY"},
{"content":{"body":"that's already how it works","msgtype":"m.text"},"ts":1643081677817,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XUj4Nadp4h4Rl7-aKxnr-Jb5htnO8MiD26dMssYV72Y"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1643081686767,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rCM9MkEi6zzLIa6QUc7mIdxqFROI5-xvCcpqE7DFUXc"},
{"content":{"body":"that is, it is already common to access the internal slot of the receiver","msgtype":"m.text"},"ts":1643081689100,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n3VYcYEiYWs6tl7EVPmpRddYLdfk_LG8VUFb8i-1KFI"},
{"content":{"body":"(re-archived the repo, after your comment; lmk if you need anything else)","msgtype":"m.text"},"ts":1643081695507,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kYTnsfGU6yEKS6zbvqvwFqdX0AewYx4DHJWdBSD9R7Y"},
{"content":{"body":"nope, that was all, thanks","msgtype":"m.text"},"ts":1643081703674,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$o21O7wu23w5R7blKoWEEWixf7ZspIVx2aELzjC2nLZA"},
{"content":{"body":"though in both the argument case and the receiver case we need to figure out what affordances, if any, we're going to make for subclasses","msgtype":"m.text"},"ts":1643081717532,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$359K5d0giCQyW6SdpZ0j-uMPPIuXYa2oSfqx_K-c7_k"},
{"content":{"body":"hi I've read the meeting logs yesterday. I'm interested in reviewing structured clone algr. (cc syg )","format":"org.matrix.custom.html","formatted_body":"hi I've read the meeting logs yesterday. I'm interested in reviewing structured clone algr. (cc <a href=\"https://matrix.to/#/@syg:mozilla.org\">syg</a> )","msgtype":"m.text"},"ts":1643128733172,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$XG0xyyV3SRNaQvs_NuXU1K58LYVYLJaykNn73GD6MaM"},
{"content":{"body":"Jack Works: sure, will request your review when the draft is ready","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: sure, will request your review when the draft is ready","msgtype":"m.text"},"ts":1643128854146,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1FiG8lqAWA6_4d9koaZYowFLLPzvszhVATCJJzdWzh8"},
{"content":{"body":"ðŸ‘€ I set an alarm on 14:00 PST and not be able to present enum before 14:00 cause I'm sleeping.","msgtype":"m.text"},"ts":1643129360372,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$R6z9fTPm-3jxdDcVlufL1-apvEStNOCFsqBufSUp2dk"},
{"content":{"body":"Jack Works: we'll schedule you as late as possible today to help you sleep - so in between 14:00-15:00 PST","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: we'll schedule you as late as possible today to help you sleep - so in between 14:00-15:00 PST","msgtype":"m.text"},"ts":1643129570339,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$dmlwxNeu0v8PN4__N8OlME-SsMKHfUgGSttiG4VbV_Y"},
{"content":{"body":"This is your 4 minute warning: Plenary starts soon","msgtype":"m.text"},"ts":1643133421660,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$V_Zw5xGK6l2wgBZHafl2fMcgQrCau_GXAB2sReUnkKc"},
{"content":{"body":"I can't do notes right away, but I can in a bit","msgtype":"m.text"},"ts":1643133738016,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$opnFRFTCAqH-_rlVCK_EsqAK2jf-m9sbSwmz38wDac0"},
{"content":{"body":"thanks ptomato ","format":"org.matrix.custom.html","formatted_body":"thanks <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>","msgtype":"m.text"},"ts":1643133795269,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$hCi0HODxsIzMVhz0_2RYZP6jW_nYWhSWbVOwol6G66k"},
{"content":{"body":"Mathieu Hofman: can you confirm the conclusion we have captured in the notes is correct","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: can you confirm the conclusion we have captured in the notes is correct","msgtype":"m.text"},"ts":1643135223089,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hssI2VQLpkZfmBE_XfOgzk5oLw3meKkBT5D08ePfsIM"},
{"content":{"body":"I think so but best to confirm","msgtype":"m.text"},"ts":1643135230574,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fhg6FktLHcPQB-4rNsfP4RQWVnav9MzB4XWP2Nf-xVY"},
{"content":{"body":"never GCing is always legal, so XS's implementation would still be conformant","msgtype":"m.text"},"ts":1643136297848,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8bL8Fvrn6gxpy76_ZI3cCVuTslodekp7yzHqaKUGuBs"},
{"content":{"body":"+1, that was a mistake","msgtype":"m.text"},"ts":1643137225095,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uCHPN1wO6ossUuAch3gnZBkEYhY4kPs_a9TBTK5OBdw"},
{"content":{"body":"(but i also think registered symbols themselves are a mistake)","msgtype":"m.text"},"ts":1643137247907,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$g_dPwR98FUcFYA0zcOOi-Z4mr-Z58TZx6bWsMuYpXDs"},
{"content":{"body":"what was the original use case for them anyway","msgtype":"m.text"},"ts":1643137486899,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8uopvfWM7I5Aj72AMzVxbBbaXDg7lgNDfCIMXewtb5Q"},
{"content":{"body":"for registered symbols?","msgtype":"m.text"},"ts":1643137501486,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$c8v1sYH6KWp9zwQ8fL9G_2AEPytKLfIPpZpcA2pXgBo"},
{"content":{"body":"it lets you do the same thing as well-known symbols for libraries","msgtype":"m.text"},"ts":1643137507532,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sE04SxVEvafNXxIN1geIuUXvj5CBudjCOU5ZI_u4QzY"},
{"content":{"body":"so a library can interop with itself across realms","msgtype":"m.text"},"ts":1643137512515,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vPc-xXwiIQCdjr4yudxw5BbhqfzPAuYturUF-aAU6AU"},
{"content":{"body":"but... what realms","msgtype":"m.text"},"ts":1643137522245,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Awpba1bSzyCInDbW7Kf4QhybZMN7y4fNHvQKWYb8GYI"},
{"content":{"body":"we didn't have sync realms","msgtype":"m.text"},"ts":1643137524963,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-o2Ys12nny39wf0Im8B1QrhceEp8neQ9tFqYH37X1dI"},
{"content":{"body":"iframes","msgtype":"m.text"},"ts":1643137540866,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Thg8wGF8FgNW9XMI5EPVK0b9r1gHXm2zdZp0KmK2G84"},
{"content":{"body":"we have always had iframes","msgtype":"m.text"},"ts":1643137548655,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6NTg9hFwy2qCGgUy4NQLGRRjMBzVsDoZlpgyCc3GQ7U"},
{"content":{"body":"oh, i guess sync iframes","msgtype":"m.text"},"ts":1643137548791,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$joxHv-buqLu_VNEq7qToU_mghuJt7WMwRuwY4OczIBw"},
{"content":{"body":"but also, not necessarily across realms","msgtype":"m.text"},"ts":1643137554917,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mHvWA8Kr9sx3A_9nkht6BJFLr2KSkhecRSlT208MLmA"},
{"content":{"body":"i have a hard time believing that was a use case tc39 cared about back then?","msgtype":"m.text"},"ts":1643137559345,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AxgbEU4ROYpp7TWJwncdNa-ks-OOA6POfUVq-aRrK_k"},
{"content":{"body":"just multiple version of the library within the same realm","msgtype":"m.text"},"ts":1643137559886,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DFcw_wjge3e_mppKNMiMKajzhPWQ5rddn9AYFwIN6MM"},
{"content":{"body":" * but also, not necessarily across realms","m.new_content":{"body":"but also, not necessarily across realms","msgtype":"m.text"},"m.relates_to":{"event_id":"$mHvWA8Kr9sx3A_9nkht6BJFLr2KSkhecRSlT208MLmA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643137566082,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MbTbw8JGVytsEFTYP8wOnWp_qMeTtj3CCzlEBAaYO_4"},
{"content":{"body":"Ashley Claymore: can you share with me the test case you used to identify SM gc behavior?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: can you share with me the test case you used to identify SM gc behavior?","msgtype":"m.text"},"ts":1643137569908,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$YhhlGelthWXbh3XvW2dwpPaHbO1S8Gln55wOdJz_D3c"},
{"content":{"body":"yes, right, coordination without having the library do the heavy lifting","msgtype":"m.text"},"ts":1643137583620,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OwgWGtbAFp1-S2e52_wMYny7ciW4eIzy8ZcxDEOuQzE"},
{"content":{"body":"> <@yulia:mozilla.org> Ashley Claymore: can you share with me the test case you used to identify SM gc behavior?\n\nwill do :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YhhlGelthWXbh3XvW2dwpPaHbO1S8Gln55wOdJz_D3c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: can you share with me the test case you used to identify SM gc behavior?</blockquote></mx-reply>will do :)","m.relates_to":{"m.in_reply_to":{"event_id":"$YhhlGelthWXbh3XvW2dwpPaHbO1S8Gln55wOdJz_D3c"}},"msgtype":"m.text"},"ts":1643137630666,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ejTOpm2gw0WHpet2kVPYtbmtUZmYuQ1PrqpnvBxE_No"},
{"content":{"body":"well, also lets consumers of a library coordinate with it without having a direct reference to it","msgtype":"m.text"},"ts":1643137646284,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gjRX2sNXH-7ESjKfNQY8ahY73-xspj6qyzwwGHEb7xo"},
{"content":{"body":"like you can have a library which defines a protocol, and have someone else implement that protocol without reference to the library","msgtype":"m.text"},"ts":1643137666826,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Yfb_UNBJrIURLSaaD2jOk6XWx057nZHjHTXfiSGyEU4"},
{"content":{"body":"shu: as much as i claim that the existence of iframes means browsers can't pretend realms don't exist, i completely agree with you that it's unlikely that was the motivation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: as much as i claim that the existence of iframes means browsers can't pretend realms don't exist, i completely agree with you that it's unlikely that was the motivation","msgtype":"m.text"},"ts":1643137742097,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$T9_okhiHqjohHSr2kmD3hgQUK2gToE5TkmVkgffbetE"},
{"content":{"body":"making the symbol registry realm-specific would have supported the library use case just fine, i think","msgtype":"m.text"},"ts":1643137763522,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qqHsNCvY2AyDyTRcxU0ymYQKq7gELau-90RHsf3UlPE"},
{"content":{"body":"forget I said realms; \"multiple versions of a library\" is the right thing to think about, whether that's cross-realm or not","msgtype":"m.text"},"ts":1643137773217,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PQawaHsp8_WFuLm9irutI41pcFB-95b7wohsmn9zBbg"},
{"content":{"body":"and consumers of a library which aren't including it directly","msgtype":"m.text"},"ts":1643137783714,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2_18nO1BujgxqjzHoqb4QHmF_Ada9BW2kXAA-jI0oP0"},
{"content":{"body":"erights: what if i had a WeakMap of a symbol to an object, and then a WeakRef of the same object, and no other refs to the object. couldn't i observe the collection of the symbol via the collection of the object?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: what if i had a WeakMap of a symbol to an object, and then a WeakRef of the same object, and no other refs to the object. couldn't i observe the collection of the symbol via the collection of the object?","msgtype":"m.text"},"ts":1643137858030,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pAsqLtGaAYyfroykCiInJ0U57CnUW_WfljBZfW88vmI"},
{"content":{"body":"subclassing doesn't work anyway, because of e.g. `BaseClass[method].call(subclassInstance, â€¦)` directly interacting with internal slots","format":"org.matrix.custom.html","formatted_body":"subclassing doesn't work anyway, because of e.g. <code>BaseClass[method].call(subclassInstance, â€¦)</code> directly interacting with internal slots","msgtype":"m.text"},"ts":1643138392376,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$brGyr4KAWAnZbitGH7RyTiTZjUzXK6ipA0nJHtP2vZU"},
{"content":{"body":"ljharb: fwiw I don't think \"registered symbols\" and \"unique symbols\" are actually the same kind of thing for users","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: fwiw I don't think &quot;registered symbols&quot; and &quot;unique symbols&quot; are actually the same kind of thing for users","msgtype":"m.text"},"ts":1643138406385,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sE6TzQS0wh2fvPRsUDNWhOh6epmkQWLOcf5Mp6kGb80"},
{"content":{"body":"they have the same type but they really do not come up in the same cases","msgtype":"m.text"},"ts":1643138415533,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r5EaVjenUbVIu0Z1yOKSZ8KwJ3gCU7k9b4UAMHO_2zo"},
{"content":{"body":"Aren't registered Symbols often used for safely branding objects, in case you have more the one copy of a library (so instanceof is risky)?","msgtype":"m.text"},"ts":1643138472896,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$XXMArafZrzk-kacsXmjMTyxDXBRzdC8ZnlEdvsikCU4"},
{"content":{"body":"Ben Newman (Apollo, @benjamn on GH): yes, but that's not like a regular symbol","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamn:matrix.org\">Ben Newman (Apollo, @benjamn on GH)</a>: yes, but that's not like a regular symbol","msgtype":"m.text"},"ts":1643138504065,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iMy9P__7DW7ApL4Ei7UVp2k7ULdrPTXgwrk1A4qNNok"},
{"content":{"body":"I was responding to the question about whether anyone actually uses registered Symbols","msgtype":"m.text"},"ts":1643138525123,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$SWQzO0k2muX6J4UHpAwQvOHnMVMm4pUlLaJ6EXYrDsA"},
{"content":{"body":"ah, sure","msgtype":"m.text"},"ts":1643138537572,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NpBBo6-Qwvw_elace3GbA5NUJ0vc2aGmYgCPJMOPktc"},
{"content":{"body":"that's the common _appropriate_ use case, yeah","format":"org.matrix.custom.html","formatted_body":"that's the common <em>appropriate</em> use case, yeah","msgtype":"m.text"},"ts":1643138553692,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5go9kTjwBukMMKOq8fwE_OfeSpE1Ur2pRwt-U2R4pW8"},
{"content":{"body":"\"eternal\" seems to mean/imply \"recoverable after all references are lost\" (fair?)","msgtype":"m.text"},"ts":1643138671958,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$NOclLoscDPFOpWZgY2Cywcg1DSBm6Aey9pMgF6fH_ns"},
{"content":{"body":"Ben Newman (Apollo, @benjamn on GH): my claim is that there is no good reason to want to put such a brand in a WeakMap","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamn:matrix.org\">Ben Newman (Apollo, @benjamn on GH)</a>: my claim is that there is no good reason to want to put such a brand in a WeakMap","msgtype":"m.text"},"ts":1643138672226,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GnqZ5l4ff3U0SlzHGBxt8pMQR7iF3SGxbSxvMwh_Wfw"},
{"content":{"body":"at least not that i can think of offhand","msgtype":"m.text"},"ts":1643138686148,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X7YCJ2gVba_INOrsV0NiBwub4ltqqPjY1r8Xdei5hAc"},
{"content":{"body":"I'm uncomfortable with throwing \"good\" around like that","msgtype":"m.text"},"ts":1643138751419,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$sPIAsP9TRjruwNAkEb84yWFLnRXNEffSvbCpVzJ-zb8"},
{"content":{"body":"hm, i just got kicked off the call","msgtype":"m.text"},"ts":1643138753436,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FBdZdMwGtY1kLKcfiZ755wzlKmdPf_mvQjZcNYNRTK0"},
{"content":{"body":"Me too","msgtype":"m.text"},"ts":1643138757150,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$t4RpxIL-xsyecseGTvvImSci71DvqCGAuRRjKQyY-6c"},
{"content":{"body":"what did i miss?","msgtype":"m.text"},"ts":1643138759313,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QDV27abgi2cDGi3saR1ihpccu5eKLPp8Jqxx5YW9lQs"},
{"content":{"body":"ah k","msgtype":"m.text"},"ts":1643138765067,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Aj3Pc4DfCH-TaTSXjnPgIf9SWSOvwj6xj8UwUxpdY-U"},
{"content":{"body":"did the call just die?","msgtype":"m.text"},"ts":1643138779827,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$YWB0GFRjfnYJwXW6H2k4wAnfZJZbz_N31HPEZUWh7DY"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1643138807133,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$ZY-5J36hV6CMLhnzcnJOg0-l6dqxjQbbv9o8dWba6_w"},
{"content":{"body":"(it's back if you reconnect)","msgtype":"m.text"},"ts":1643138808892,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$hkrGGVl6umw3Uc9GtBWNILjDiJMfP2tJLY7aaAPisFg"},
{"content":{"body":" * Oh again","m.new_content":{"body":"Oh again","msgtype":"m.text"},"m.relates_to":{"event_id":"$D0sVIjXnEj1RogWvhCx63bezQBzrp_b7tbIKmXGJZ0c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643138837386,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_02I61bMDkLgdRjbcb4pAb-vc4j2GcVLgiWa81mKTf8"},
{"content":{"body":"let me put it a different way: the reason to want a registered symbol is that you want something which lives forever, for e.g. coordination across instances/consumers of a library. the reason you want to put symbols in a weakmap is that you want to hold something weakly - you have a symbol which is ephemeral, and you want to hold something else ephemerally. (Otherwise you could just use a Map.) these uses are directly opposed.","msgtype":"m.text"},"ts":1643139003364,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1kzAAHdXCUX2TzqtqAJ4z-HGHrPIbhaaUBlL89Xf3Qc"},
{"content":{"body":"I'm fine with never collecting registered symbols, as are V8 and Mozilla's engine, it sounds like","msgtype":"m.text"},"ts":1643139076912,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$2KpqWdGtNfsDUojfn6Qb40BUkxqTQf5lqhUioZb8zgA"},
{"content":{"body":"they are, quite literally, always reachable once registered, even if you've lost all references","msgtype":"m.text"},"ts":1643139092290,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$z1QP5LWrqhvCdeVP6PVggY_veuX38JcOsC9YSHyf3is"},
{"content":{"body":"bakkot: But you can also intentionally craft an object that should live forever and also place it in a weakmap. If you *want* to track a symbol in a way that is \"preferrably\" weak, you would have to write a lot of defensive code and have both a WeakMap and a Map.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: But you can also intentionally craft an object that should live forever and also place it in a weakmap. If you <em>want</em> to track a symbol in a way that is &quot;preferrably&quot; weak, you would have to write a lot of defensive code and have both a WeakMap and a Map.","msgtype":"m.text"},"ts":1643139164274,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DA-htoV-mQM4JZIAsGT5w9tN3ofWynjl-WjKJwIGzGo"},
{"content":{"body":"the \"optimization\" of collecting registered symbols anyway and then later returning a new reference if someone asks for them again with Symbol.for is simply unsound, IMO","msgtype":"m.text"},"ts":1643139183821,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$Hf6smTphrhE76fNdK6Bqyt3CdP1BngwvXrBgHmVtwsc"},
{"content":{"body":"it would be nice to hear about a JS engine that actually does that","msgtype":"m.text"},"ts":1643139195209,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$zj_-eSiClUwAMfP1UBQXUSvDkWZLF2XCexujrjHH3vU"},
{"content":{"body":"is someone from Apple on the call? msaboff ? does Safari actually collect registered symbols?","format":"org.matrix.custom.html","formatted_body":"is someone from Apple on the call? <a href=\"https://matrix.to/#/@msaboff:matrix.org\">msaboff</a> ? does Safari actually collect registered symbols?","msgtype":"m.text"},"ts":1643139271126,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$8q_MPjXz3IHqzjeEFQEkmfPUJke4YVHU7AIDdImf3XE"},
{"content":{"body":"rbuckton: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to _support_ it without needing to make it trivial","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to <em>support</em> it without needing to make it trivial","msgtype":"m.text"},"ts":1643139274296,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r4WflN3_3UQOqEGIyWuCPkZ-9XM39c0Fdm8u0_lnkH4"},
{"content":{"body":" * rbuckton: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to _support_ it without needing to make it trivial","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to <em>support</em> it without needing to make it trivial","m.new_content":{"body":"rbuckton: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to _support_ it without needing to make it trivial","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: my position is that the desire to weakly hold symbols which may or may not be registered is niche enough that it's sufficient for the language to <em>support</em> it without needing to make it trivial","msgtype":"m.text"},"m.relates_to":{"event_id":"$r4WflN3_3UQOqEGIyWuCPkZ-9XM39c0Fdm8u0_lnkH4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643139279087,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$o7nuLD793T-D25DnVQTJOAT7l-sGppre2qmLKmCP-J8"},
{"content":{"body":"Robin Ricard: can you add \"no preference, general support\"?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rricard:mozilla.org\">Robin Ricard</a>: can you add &quot;no preference, general support&quot;?","msgtype":"m.text"},"ts":1643139293878,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Hy1aoHyHPnCHlBBs4y713we5xR2M8s0FoUrbQBf8t0I"},
{"content":{"body":"XS does not collect any symbols (just stated by Peter H on the call)","msgtype":"m.text"},"ts":1643139316120,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$KX7pl6-NnrZQdqSiY1op__-yBEonRW6yCSeZplwXMtc"},
{"content":{"body":"i mean, i care, i like it","msgtype":"m.text"},"ts":1643139319642,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$yN8qT-rS54yGwhtW5Za1SL-bH7HRK6IuKPTdsP_PLio"},
{"content":{"body":"yulia: \"indifferent\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: &quot;indifferent&quot;","msgtype":"m.text"},"ts":1643139328731,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$pqhrOgFuD45MgG55-nfD57fq7R8jAHkYWYa9zj53BHY"},
{"content":{"body":"Ben Newman (Apollo, @benjamn on GH): why is that unsound?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamn:matrix.org\">Ben Newman (Apollo, @benjamn on GH)</a>: why is that unsound?","msgtype":"m.text"},"ts":1643139331423,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LAP746QqgtMdZo0ruuPXPKxHIn00JXgSQzljfjccEew"},
{"content":{"body":"changed wording","msgtype":"m.text"},"ts":1643139335620,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$ovD3Gb137ebirDYpe7Jy5GsesF9EznU1ItaRZaAK-Cg"},
{"content":{"body":"it happens with strings all the time","msgtype":"m.text"},"ts":1643139342844,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XbXNV7jGdTDgyCGTe1lPrjq0gJcQklezrNF4YeGMd6E"},
{"content":{"body":"and doubles, actually, in V8","msgtype":"m.text"},"ts":1643139356475,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Uadr1FWx5AEqZj--pGhx8X77sG4G-pBvz1xZMqs9yUw"},
{"content":{"body":"@shu because the reference shouldn't change in any semantically observable way, and the WeakMap question provides observability","msgtype":"m.text"},"ts":1643139372511,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$6S4rARGNCFwMVdac2FpKJxOWbd2g2nUYpGwt_lgWw5I"},
{"content":{"body":"strings aren't stored in [weak]maps/sets by reference though","msgtype":"m.text"},"ts":1643139387384,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$KBhjsO4t2-YkKSRMy-MHteie5UYSJ0SgeiYZjeEwloE"},
{"content":{"body":"they're stored by value","msgtype":"m.text"},"ts":1643139391822,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$-3qoeM3EmqjxAw_RpwKbfkub8PtnJh_8qNehRmCTeL8"},
{"content":{"body":"it's only unsound if WeakMaps can hold registered symbols","msgtype":"m.text"},"ts":1643139401236,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1rIgjQz3InLHlAkm-tROl64na10FfZTENEv-hZGe4hM"},
{"content":{"body":"strings can't be put into weak collections at all","msgtype":"m.text"},"ts":1643139402724,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GLqERtWxNhk1TzSNyBHSNnFe-Mw7A7pGAfRn6_POVPs"},
{"content":{"body":" * strings can't be put into weak collections at all","m.new_content":{"body":"strings can't be put into weak collections at all","msgtype":"m.text"},"m.relates_to":{"event_id":"$GLqERtWxNhk1TzSNyBHSNnFe-Mw7A7pGAfRn6_POVPs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643139412344,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$e1HjrSsd0d6mA2GTF5iMs3_UkUR1Jn3m_Naf5WPpFpM"},
{"content":{"body":"(and doing so does not prevent GC of the symbol)","msgtype":"m.text"},"ts":1643139413453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3JXIEjCni7JM4ywZsUHUzxgJQSvFb-7oExla9wXeOSA"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1643139419344,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WM_uCbcunK4e1k5gUr71lSg8Oy6Bo5waMpEA75hlqu4"},
{"content":{"body":"I'm saying it's unsound anyway, and this is just the first gotcha we've encountered","msgtype":"m.text"},"ts":1643139426287,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$A-s3jnkqHiG33kQERFDegW6th51F7eHMtI9cdjDLMkQ"},
{"content":{"body":"it's... not unsound anyway","msgtype":"m.text"},"ts":1643139433496,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6j9O2hRB2cfv_AipMMdCcS_j0Hw0EmCqdpta4VW1udc"},
{"content":{"body":"it's sound by accident, currently","msgtype":"m.text"},"ts":1643139441418,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$sSYLzVCnglrSlskV8d5Pdc63W1A0n8RiLAJEutavjmU"},
{"content":{"body":"wasn't an accident","msgtype":"m.text"},"ts":1643139454454,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EFSY3IciYmHGyN-CxxmhXyPLdaXFgs1iRRVGIzBuEjY"},
{"content":{"body":"that was definitely an intentional part of the design of the symbol registry","msgtype":"m.text"},"ts":1643139470982,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kX5N4fnW8IhkQYVpvWG8inXs1__heGiE_hQgzVe04kc"},
{"content":{"body":"yes, they *were* accidentally eternal before, when it was keyed by something else, like parse nodes or something?","format":"org.matrix.custom.html","formatted_body":"yes, they <em>were</em> accidentally eternal before, when it was keyed by something else, like parse nodes or something?","msgtype":"m.text"},"ts":1643139492146,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VD-jh_M0-x4Oq2YAIa15a5lVrE5Wp9LMyxS3FRvVN_0"},
{"content":{"body":"i have the screenshots if anyone needs them","msgtype":"m.text"},"ts":1643139514137,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$sydT5mNpvhqfu8rGKE1lox2yWev6jnQkoZb75q8nUJ8"},
{"content":{"body":"you're thinking of template tags","msgtype":"m.text"},"ts":1643139523211,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qbqaQO7TI33EBPGc2cxF6CZvhi1ZXG9hOOVc9Rw-R4c"},
{"content":{"body":"cc Robin Ricard ","format":"org.matrix.custom.html","formatted_body":"cc <a href=\"https://matrix.to/#/@rricard:mozilla.org\">Robin Ricard</a>","msgtype":"m.text"},"ts":1643139523548,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$AhXP5yKjyWmi7VhLkPo7UGD_U02ZzpmOGNVzLVfwKGQ"},
{"content":{"body":"oh, i am, bakkot correct","format":"org.matrix.custom.html","formatted_body":"oh, i am, <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> correct","msgtype":"m.text"},"ts":1643139533369,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vT5O4as8GJo-GM7T-eDQyv8EdBwS-5d0GvftNJYuIaQ"},
{"content":{"body":"thanks yulia, nicolo took them as well so we are good","msgtype":"m.text"},"ts":1643139715776,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$G9wg7NCAR67vRSyWURTI5ykaO5uBbg9x0FCvHYy3218"},
{"content":{"body":"catch the positive names?","msgtype":"m.text"},"ts":1643139810902,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$kAqBOertH-O9hbSO8n7IRVhoaotziT_vNcLl8kAQVQw"},
{"content":{"body":" * catch the positive names?","m.new_content":{"body":"catch the positive names?","msgtype":"m.text"},"m.relates_to":{"event_id":"$kAqBOertH-O9hbSO8n7IRVhoaotziT_vNcLl8kAQVQw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643139816243,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$HHfLoOSMe8-D7RYx6Cn4Mwt4EOgwcc70D7i1XXGskwM"},
{"content":{"body":"shu: \"We should do the same as others\" isn't quite the point, \"everyone else is doing something useful that we aren't\" is.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: &quot;We should do the same as others&quot; isn't quite the point, &quot;everyone else is doing something useful that we aren't&quot; is.","msgtype":"m.text"},"ts":1643140254430,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$3nmouavv1e9GVWVEVIOztmfe-rgtZ27P5VhbjBvjjtk"},
{"content":{"body":"TabAtkins: can i cast your own spell on you? isn't that a fully general argument for stdlib differences?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: can i cast your own spell on you? isn't that a fully general argument for stdlib differences?","msgtype":"m.text"},"ts":1643140356161,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Y4frRP8MOBwdnVWMLtzNgW9U6fLzzhtF7c7vU8vW-vw"},
{"content":{"body":"No, it's just pointing out that the argument wasn't just \"we should be following the bandwagon\".","msgtype":"m.text"},"ts":1643140392783,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$yWJ-FGQSfu5zTQi2hD5Gmqd0sGy3tPlXLKyRQL1h-R8"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1643140401438,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$a6jhS0o9K8e5OntDZjNG3xD_b0dbUWCT3x2ukGzcFy0"},
{"content":{"body":"i was responding to the narrower motivating story of \"even surma got tripped up\"","msgtype":"m.text"},"ts":1643140414342,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6v17zHbcddXvsvx7y2GNMnqceDbZxuBV64PWuFVVrvo"},
{"content":{"body":"The other lang's version of split() is just genuinely better, which is definitely part of why JS's version is so confusing. ^_^","msgtype":"m.text"},"ts":1643140442314,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$iUtQDtpTLIP5CxcKqBd6qOfbFiQQ9yOAGsdfZpI5hQk"},
{"content":{"body":"which isn't the same as \"i wish we had this other behavior but we don't\", it's \"i thought our behavior was X but it wasn't\"","msgtype":"m.text"},"ts":1643140447150,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$adx2iwJbbjhmJtCEgNioZa9jmHHMvleaPy-fMMkPoV8"},
{"content":{"body":"I will try to remember to ask my dad about the history of this next time I talk to him","msgtype":"m.text"},"ts":1643140494605,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0VPkMK8nQ-mINVstnBgnJfwnpX1X3ZjQ7kWEHVFnb6A"},
{"content":{"body":"Insofar as Surma would have been confused by Python (off-by-one versus the other langs), sure. But it's not clear from his particular complaint whether it was *just* familiarity or \"i'm confused this works differently entirely\"","format":"org.matrix.custom.html","formatted_body":"Insofar as Surma would have been confused by Python (off-by-one versus the other langs), sure. But it's not clear from his particular complaint whether it was <em>just</em> familiarity or &quot;i'm confused this works differently entirely&quot;","msgtype":"m.text"},"ts":1643140516455,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$VW7qSv4vWuiaoEkVjK1db6i0BkUm4G1_s9l0ZFdy5bw"},
{"content":{"body":"I'd like if we rename this splitn to `String.prototype.part` (or parts)","format":"org.matrix.custom.html","formatted_body":"I'd like if we rename this splitn to <code>String.prototype.part</code> (or parts)","msgtype":"m.text"},"ts":1643140546341,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$nsQWutvdx5nuQLSCjvTkbIInHFvjeP-mW1grlCYj4MU"},
{"content":{"body":" * I'd like if we rename this splitn to `String.prototype.part` (or parts)","format":"org.matrix.custom.html","formatted_body":" * I'd like if we rename this splitn to <code>String.prototype.part</code> (or parts)","m.new_content":{"body":"I'd like if we rename this splitn to `String.prototype.part` (or parts)","format":"org.matrix.custom.html","formatted_body":"I'd like if we rename this splitn to <code>String.prototype.part</code> (or parts)","msgtype":"m.text"},"m.relates_to":{"event_id":"$nsQWutvdx5nuQLSCjvTkbIInHFvjeP-mW1grlCYj4MU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643140554537,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$j5dkqUPGvYZ8FestBk1VhUYBZqILCLh81QTB8NZJI2Y"},
{"content":{"body":"Going for the `{remainder: true}` part and taking on Python's numbering semantics would defuse these complains, I think.","format":"org.matrix.custom.html","formatted_body":"Going for the <code>{remainder: true}</code> part and taking on Python's numbering semantics would defuse these complains, I think.","msgtype":"m.text"},"ts":1643140841913,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$i-HIdV6Gq8NcXv6aM6i6InJ53YS2NeioziPpStj_AFM"},
{"content":{"body":"I have an open issue about the possible confusion that Chip is talking about: https://github.com/lucacasonato/proposal-reversible-string-split/issues/6","msgtype":"m.text"},"ts":1643140859717,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3JysawWveKcqzDGK2WYvoyg1w6hdQbKzr41GTEhADLg"},
{"content":{"body":"So `.split(..., 2, ...)` always returns 2 bits between separators, you just get a *third* item with the remainder if you pass the flag. ","format":"org.matrix.custom.html","formatted_body":"So <code>.split(..., 2, ...)</code> always returns 2 bits between separators, you just get a <em>third</em> item with the remainder if you pass the flag.","msgtype":"m.text"},"ts":1643140884638,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$8ruGHVgk8vdnQoe0pdY4HQ03esWnVALjPM0_9d9sWwk"},
{"content":{"body":"> taking on Python's numbering semantics would defuse these complains, I think","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>taking on Python's numbering semantics would defuse these complains, I think</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1643140930052,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sFo4_tfYdDyl4GYDZW-0Ua8laRjfxtBmm07_XMjhZnM"},
{"content":{"body":"say more about what that means?","msgtype":"m.text"},"ts":1643140937143,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8xh6GWzWmt5i1Mpzam890WPW2wUfeXq9NwBG8wokPgA"},
{"content":{"body":"Luca Casonato: i invited you to tc39-transfer on github, so you can bounce your proposal repo there","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: i invited you to tc39-transfer on github, so you can bounce your proposal repo there","msgtype":"m.text"},"ts":1643141122203,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FiH9Cj_n8a5MAZpKs5LR1HW3G1dS3kZIUjfi0E8Ccgo"},
{"content":{"body":"bakkot: Well there was an \"and\" there that was pretty important.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: Well there was an &quot;and&quot; there that was pretty important.","msgtype":"m.text"},"ts":1643141174846,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$I2IQ5xL80edRkOxP9e6wnWvzHlYWWgy63_M6TJXUDxI"},
{"content":{"body":"The part after the \"and\" that you quoted was more of an \"(and, in effect, ...)\"","msgtype":"m.text"},"ts":1643141193611,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$wyyB7FPWZ8WY4kkjeXPUdIwY-poET8Jn73C1BUj2jz8"},
{"content":{"body":"> <@leobalter:matrix.org> I'd like if we rename this splitn to `String.prototype.part` (or parts)\n\nCould you add that to this issue? https://github.com/lucacasonato/proposal-reversible-string-split/issues/6","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nsQWutvdx5nuQLSCjvTkbIInHFvjeP-mW1grlCYj4MU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br>I'd like if we rename this splitn to <code>String.prototype.part</code> (or parts)</blockquote></mx-reply>Could you add that to this issue? https://github.com/lucacasonato/proposal-reversible-string-split/issues/6","m.relates_to":{"m.in_reply_to":{"event_id":"$nsQWutvdx5nuQLSCjvTkbIInHFvjeP-mW1grlCYj4MU"}},"msgtype":"m.text"},"ts":1643141259703,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$66jBmYXcI062s4R8efCOt3NUZx86ACF3YvbuDGmLu3g"},
{"content":{"body":"But basically, if we use a flag argument in .split(), I don't think we should significantly change the existing semantics/behavior of the proposal. `.split(..., 2)` should still always trigger (up to) 2 splits, with the option just controlling whether we get the remainder or not included in the array.","format":"org.matrix.custom.html","formatted_body":"But basically, if we use a flag argument in .split(), I don't think we should significantly change the existing semantics/behavior of the proposal. <code>.split(..., 2)</code> should still always trigger (up to) 2 splits, with the option just controlling whether we get the remainder or not included in the array.","msgtype":"m.text"},"ts":1643141312194,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$8VHCAAfzpg_4wlduckQ6yKPil-aOTYH7vu8z1tfVBeM"},
{"content":{"body":"That also avoids all the regex questions, since the answer remains \"act exactly as normal, just include the remainder as a final item\"","msgtype":"m.text"},"ts":1643141338745,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$SShwpJ1URhudqlOB68AEg5afKmFUYICtzmqrimFed1c"},
{"content":{"body":"(sounds like Luca Casonato got stage 1? :D)","format":"org.matrix.custom.html","formatted_body":"(sounds like <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> got stage 1? :D)","msgtype":"m.text"},"ts":1643141463745,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$h6YS1HN6V37KzEJ9NRiF_-e4pc7kI2vKyFR67f8a_gw"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1643141477136,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$tdv7cTc9QRzSUvBI2v5lbEvF3maKWyyjRbWl3AAqZFI"},
{"content":{"body":"> <@surma:matrix.org> (sounds like Luca Casonato got stage 1? :D)\n\nindeed! :D","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$h6YS1HN6V37KzEJ9NRiF_-e4pc7kI2vKyFR67f8a_gw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@surma:matrix.org\">@surma:matrix.org</a><br>(sounds like <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> got stage 1? :D)</blockquote></mx-reply>indeed! :D","m.relates_to":{"m.in_reply_to":{"event_id":"$h6YS1HN6V37KzEJ9NRiF_-e4pc7kI2vKyFR67f8a_gw"}},"msgtype":"m.text"},"ts":1643141543540,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$NbdvA5JBRTkcha0yxUWHHnGEAk2kF9n4g5tDlpzttZw"},
{"content":{"body":"> <@lucacasonato:matrix.org> Could you add that to this issue? https://github.com/lucacasonato/proposal-reversible-string-split/issues/6\n\nDone","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%2466jBmYXcI062s4R8efCOt3NUZx86ACF3YvbuDGmLu3g\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br>Could you add that to this issue? https://github.com/lucacasonato/proposal-reversible-string-split/issues/6</blockquote></mx-reply>Done","m.relates_to":{"m.in_reply_to":{"event_id":"$66jBmYXcI062s4R8efCOt3NUZx86ACF3YvbuDGmLu3g"}},"msgtype":"m.text"},"ts":1643141556668,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$KfqVORsiHWWcfZAg8-9GUlmqp0CuClB3ljrynnIRVKk"},
{"content":{"body":"> <@tabatkins:matrix.org> But basically, if we use a flag argument in .split(), I don't think we should significantly change the existing semantics/behavior of the proposal. `.split(..., 2)` should still always trigger (up to) 2 splits, with the option just controlling whether we get the remainder or not included in the array.\n\nDon't generally disagree with this, I just worry about discoverability here. If people already don't know about the second argument, how will they find a third argument?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8VHCAAfzpg_4wlduckQ6yKPil-aOTYH7vu8z1tfVBeM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>But basically, if we use a flag argument in .split(), I don't think we should significantly change the existing semantics/behavior of the proposal. <code>.split(..., 2)</code> should still always trigger (up to) 2 splits, with the option just controlling whether we get the remainder or not included in the array.</blockquote></mx-reply>Don't generally disagree with this, I just worry about discoverability here. If people already don't know about the second argument, how will they find a third argument?","m.relates_to":{"m.in_reply_to":{"event_id":"$8VHCAAfzpg_4wlduckQ6yKPil-aOTYH7vu8z1tfVBeM"}},"msgtype":"m.text"},"ts":1643141596435,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$TdHWfE8oPR_iXNz56OoQL1kDM_9r1xDNiKaDxU4Phvk"},
{"content":{"body":"If people already don't know about the second argument, how will they find a completely separate method?","msgtype":"m.text"},"ts":1643141620604,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$rF7qBXqFyu3a2nzUJHcOavW3AaebC0s31xWSKHKR2i0"},
{"content":{"body":"> <@tabatkins:matrix.org> If people already don't know about the second argument, how will they find a completely separate method?\n\nEditor autocompletions :-)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rF7qBXqFyu3a2nzUJHcOavW3AaebC0s31xWSKHKR2i0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>If people already don&#39;t know about the second argument, how will they find a completely separate method?</blockquote></mx-reply>Editor autocompletions :-)","m.relates_to":{"m.in_reply_to":{"event_id":"$rF7qBXqFyu3a2nzUJHcOavW3AaebC0s31xWSKHKR2i0"}},"msgtype":"m.text"},"ts":1643141634099,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$UdOghkvjeHO__oUCaOy69z0q3lA0Z3LfvZR0EigXKTA"},
{"content":{"body":"Editors often offer signature suggestions too ^_^","msgtype":"m.text"},"ts":1643141653618,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$zkrdVUto60pbxf8vX9b73MH3T5qhsExCMVK28uixn7Y"},
{"content":{"body":"> <@tabatkins:matrix.org> That also avoids all the regex questions, since the answer remains \"act exactly as normal, just include the remainder as a final item\"\n\nThis brings up the question of what our actual definition of N is - is it number of splits, or number of return values? If we continue expanding regexps capturing groups into the return values array when \"remainder\" is included, then we must use number of return values (non python behaviour). I'd argue that if we overload, then the overload should not support regexp separators.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SShwpJ1URhudqlOB68AEg5afKmFUYICtzmqrimFed1c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>That also avoids all the regex questions, since the answer remains &quot;act exactly as normal, just include the remainder as a final item&quot;</blockquote></mx-reply>This brings up the question of what our actual definition of N is - is it number of splits, or number of return values? If we continue expanding regexps capturing groups into the return values array when &quot;remainder&quot; is included, then we must use number of return values (non python behaviour). I'd argue that if we overload, then the overload should not support regexp separators.","m.relates_to":{"m.in_reply_to":{"event_id":"$SShwpJ1URhudqlOB68AEg5afKmFUYICtzmqrimFed1c"}},"msgtype":"m.text"},"ts":1643141781181,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$7LAU75pnk_Xf012L_xVtzgmIgoTKhoNwCbwk5Z3XIxo"},
{"content":{"body":" * \"eternal\" seems to mean/imply \"recoverable after all references are lost\"","m.new_content":{"body":"\"eternal\" seems to mean/imply \"recoverable after all references are lost\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$NOclLoscDPFOpWZgY2Cywcg1DSBm6Aey9pMgF6fH_ns","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643141815023,"senderName":"Ben Newman (Apollo, @benjamn on GH)","senderId":"@benjamn:matrix.org","id":"$jh7cysWqAIHG7GGre-qvJR-mpz3jKFos2YUQGCJB4rk"},
{"content":{"body":"Really, I dislike this capturing group expansion into the return value array behaviour. It significantly increases complexity","msgtype":"m.text"},"ts":1643141869289,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$kXhCSiihYdYB98xff6zRh6h2cKkmNhxaPUQ7uzoNNlY"},
{"content":{"body":"Ugggggh I didn't realize the N is *literally* \"length of the returned array\" even when regex capture groups are used, that's *worthless*.","format":"org.matrix.custom.html","formatted_body":"Ugggggh I didn't realize the N is <em>literally</em> &quot;length of the returned array&quot; even when regex capture groups are used, that's <em>worthless</em>.","msgtype":"m.text"},"ts":1643141941675,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$0O2llsxdWSzqbIjSS4s2D9G8hTJ2yiAQpR34aUYYDXo"},
{"content":{"body":"does anyone know who https://github.com/phohensee is, in relation to tc39?","msgtype":"m.text"},"ts":1643141967735,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gj9X7ypUcCvY37fztmI2EV52ug_GHDEfQYszUu9NenA"},
{"content":{"body":"> <@tabatkins:matrix.org> Ugggggh I didn't realize the N is *literally* \"length of the returned array\" even when regex capture groups are used, that's *worthless*.\n\nYou understand my frustration now? xD","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0O2llsxdWSzqbIjSS4s2D9G8hTJ2yiAQpR34aUYYDXo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Ugggggh I didn't realize the N is <em>literally</em> \"length of the returned array\" even when regex capture groups are used, that's <em>worthless</em>.</blockquote></mx-reply>You understand my frustration now? xD","m.relates_to":{"m.in_reply_to":{"event_id":"$0O2llsxdWSzqbIjSS4s2D9G8hTJ2yiAQpR34aUYYDXo"}},"msgtype":"m.text"},"ts":1643142169095,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$V5WaX3yvkGnqHjIreLwQ1voCCblkZjOhACFgRBl-TQk"},
{"content":{"body":"Yeah the currrent split behavior is just useless ","msgtype":"m.text"},"ts":1643142212844,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$3ULuiauZTAjTpT_GYov8sARJvRc7cVc4TeeqoRvilQg"},
{"content":{"body":"`\"\".split(sep, n)` === `\"\".split(sep).slice(0, n)` ","format":"org.matrix.custom.html","formatted_body":"<code>&quot;&quot;.split(sep, n)</code> === <code>&quot;&quot;.split(sep).slice(0, n)</code>","msgtype":"m.text"},"ts":1643142219601,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$D2yx92-q8VWGlKA8YmjdtZFIG0Xt7thdTbLAAdbEZZQ"},
{"content":{"body":"for n >= 0, i presume","msgtype":"m.text"},"ts":1643142270793,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d2czJQkEI-I2dD9eEuypHT3DcQQ8nIZDNknzfFVxozM"},
{"content":{"body":" * for n >= 0, i presume","m.new_content":{"body":"for n >= 0, i presume","msgtype":"m.text"},"m.relates_to":{"event_id":"$d2czJQkEI-I2dD9eEuypHT3DcQQ8nIZDNknzfFVxozM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643142273986,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PFhyX5nGrQ_nCbxNiz58rHCBlfIzZjzpCq4HAOiqq8A"}
]