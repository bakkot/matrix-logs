[
{"content":{"body":"```\nfunction safePromiseCapability() {\n  let { promise, resolve, reject } = Promise.withResolvers();\n  function safeResolve(val) {\n    Object.defineProperty(val, 'then', { configurable: true, value: void 0 });\n    resolve(val);\n    delete val.then;\n  }\n  return { promise, safeResolve, reject };\n}\n\nlet evilProto = { get then() { throw 'boom'; } };\n\nlet { promise, safeResolve } = safePromiseCapability();\nsafeResolve({ __proto__: evilProto, key: 'value' });\nconsole.log((await promise).key); // no boom\n```\nturns out we already have the \"safe promise resolve\" capability with no changes to the language","format":"org.matrix.custom.html","formatted_body":"<pre><code>function safePromiseCapability() {\n  let { promise, resolve, reject } = Promise.withResolvers();\n  function safeResolve(val) {\n    Object.defineProperty(val, 'then', { configurable: true, value: void 0 });\n    resolve(val);\n    delete val.then;\n  }\n  return { promise, safeResolve, reject };\n}\n\nlet evilProto = { get then() { throw 'boom'; } };\n\nlet { promise, safeResolve } = safePromiseCapability();\nsafeResolve({ __proto__: evilProto, key: 'value' });\nconsole.log((await promise).key); // no boom\n</code></pre>\n<p>turns out we already have the \"safe promise resolve\" capability with no changes to the language</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1754281393255,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LFgLl2Aq_q2JGOhQ_LbdeWEV5bvufl018fs_UyXo-hY"}
]