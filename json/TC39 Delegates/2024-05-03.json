[
{"content":{"body":"Hongbo is suggesting the iterator protocol has a high performance overhead (25x perf loss).  Do we know if this is cost is effectively mandated in the spec, or is this just a unfulfilled optimization opportunity in engines?\n\nhttps://www.moonbitlang.com/blog/js-support#benchmark-code-execution-speed-exceeds-javascript-by-25-times","m.mentions":{},"msgtype":"m.text"},"ts":1714725395790,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$i0qEujKlxqVd-TMhxsP33nhxOVhs9Kee-apHDkuRc3I"},
{"content":{"body":"My hope is that engines could optimize Array iteration, but I'm not sure about other cases","msgtype":"m.text"},"ts":1714728957697,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Mzmd3Cq2_4UMGNwUg3Vnct7cM3wNMQXVahiX3WGQHo8"},
{"content":{"body":"With something like iterator helpers, engines could theoretically optimize some parts of iteration knowing the shapes of the inputs and the whole of the graph of iteration operations. It's no small task, though, as it requires verifying that no intermediate steps are observable (proxies, user-defined iterators, patched methods, etc.). ","format":"org.matrix.custom.html","formatted_body":"With something like iterator helpers, engines could theoretically optimize some parts of iteration knowing the shapes of the inputs and the whole of the graph of iteration operations. It's no small task, though, as it requires verifying that no intermediate steps are observable (proxies, user-defined iterators, patched methods, etc.).","msgtype":"m.text"},"ts":1714729557326,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$obKgSVNY4ud0272RYC1IB5iGuJ6gKFtPIlDk1Hpu6Dk"},
{"content":{"body":"Engines brought up the overhead of the iteration protocol at the most recent TC39 meeting, as a source of hesitation for the pattern matching proposal's semantics","m.mentions":{},"msgtype":"m.text"},"ts":1714748365036,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RmHPuNtOAVejcs8ifxr4qLA6DYliUYFEeAk_4QpklwM"}
]