[
{"content":{"body":"and yes I expected to be called out for that one","m.mentions":{},"msgtype":"m.text"},"ts":1740009606506,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$2YAiFQLQVsAQbNiLVL9S9vzz2ZJJ8iviEHQDbLVuBHw"},
{"content":{"body":"counterpoint: i really want composite keys","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oTBqGwGZaxClHYT0C83jelYM_MYWMS6ys6ypkJ7LnJI"}},"msgtype":"m.text"},"ts":1740009607017,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DKSZvrJcq6uCfXsa5EKgat-XeD9mDyvCkwsNYeU--lY"},
{"content":{"body":"doesn't matter, we do the right thing","msgtype":"m.text"},"ts":1740009608676,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XxsmW6j9guCHJjd9CAf4ja1k1uA9Hwwh6my7Uiv7oOw"},
{"content":{"body":"i also want them, but i'm not sure why the two are linked","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DKSZvrJcq6uCfXsa5EKgat-XeD9mDyvCkwsNYeU--lY"}},"msgtype":"m.text"},"ts":1740009625900,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eTY7NI0A2DJGjW6FwI8BSX7Mqi277G0eMmUV_E6sHvk"},
{"content":{"body":"Manually building tries is a pain","m.mentions":{"user_ids":["@bakkot:matrix.org","@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DKSZvrJcq6uCfXsa5EKgat-XeD9mDyvCkwsNYeU--lY"}},"msgtype":"m.text"},"ts":1740009634486,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Nygc4z1Kof7qQ9Av-RLnd_VxH9UStB3MeV4alzKogz8"},
{"content":{"body":"this proposal is just composite keys","m.mentions":{},"msgtype":"m.text"},"ts":1740009638230,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KUsQkvtJuGHbJTZhCG8587UxLd2Ya-3zHLWY_9OM8yw"},
{"content":{"body":"that is the whole proposal","m.mentions":{},"msgtype":"m.text"},"ts":1740009644518,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CGqlE8fG9U9KZsnQtdfdBy9KEx9phoAE2irljZzi9UQ"},
{"content":{"body":"if I understand correctly","m.mentions":{},"msgtype":"m.text"},"ts":1740009647514,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n5PcMptBqejDm5qLyxyMPoMGuMpNr20-Vo7vcLxK9V4"},
{"content":{"body":"oh","m.mentions":{},"msgtype":"m.text"},"ts":1740009647689,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fIm2XVn9Pk-e5CK2PxBRn11uC44vF0JphUfsgKM63kg"},
{"content":{"body":"right, but can't it just, like, do the nested weakmap + a finalization-registered weakref, in the spec?","m.mentions":{},"msgtype":"m.text"},"ts":1740009674631,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BVL3jwQm5h0RnM5h6XM5NBa3_fM0QCHr1r5-gDSKpeo"},
{"content":{"body":"A goal of the presentation is for delegates to say \"yeah let's just do composite keys\", or \"let's do R&T\"","m.mentions":{},"msgtype":"m.text"},"ts":1740009678547,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$9nLUbTb-Jdu7YT51FFoiTgfHbwxv7BhLiH_3csjC8WA"},
{"content":{"body":"I can't bother my pretty head with `NaN` and `-0`","format":"org.matrix.custom.html","formatted_body":"I can't bother my pretty head with <code>NaN</code> and <code>-0</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740009679743,"senderName":"Jesse (TC39 ðŸ‡ºðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$bS9rRcBaK3vkAsvWtNapVgMUa0IyO3FKouOFZ0KUHQw"},
{"content":{"body":"then a composite key of the same object will never observably be a different object","m.mentions":{},"msgtype":"m.text"},"ts":1740009689392,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$cHTedO40PBn0-1LxUHNPLeFd7ZVAltwczFfBOOiXymo"},
{"content":{"body":"then you can't do a composite key of only primtiives","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BVL3jwQm5h0RnM5h6XM5NBa3_fM0QCHr1r5-gDSKpeo"}},"msgtype":"m.text"},"ts":1740009692122,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-dCHZ5RqpJNpMWsWMuZBkdMW3wbDRv5coPx6LkszkE8"},
{"content":{"body":"which is bad and dumb","m.mentions":{},"msgtype":"m.text"},"ts":1740009700318,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-Ko25-vDKtZ2yWvSH3X35gsI2VjZ0CWw6Zt0EUmn1aE"},
{"content":{"body":"have a parallel Map for that?","m.mentions":{},"msgtype":"m.text"},"ts":1740009702966,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sjas__ZLk3GuXWZDzSAzcbTc2EXhrWg8gpOcwkTB3Pc"},
{"content":{"body":"then you leak","m.mentions":{},"msgtype":"m.text"},"ts":1740009708725,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OmgETDpHpTQHeODF6gVmqgSRkDfbNHanzj5WltVl7Rc"},
{"content":{"body":"which is bad and dumb","m.mentions":{},"msgtype":"m.text"},"ts":1740009710656,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9L28q83zU0ghOW0VCN6IJvrAnJ2bDZUa5oKlIdXJnLk"},
{"content":{"body":"only primitives go in the Map","m.mentions":{},"msgtype":"m.text"},"ts":1740009715282,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8Vj-DrEnLtGU7PUfGsomRWuCyPTTjYhYzsGYvEaNHHM"},
{"content":{"body":"yeah that leaks","m.mentions":{},"msgtype":"m.text"},"ts":1740009723499,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$cg9dLjoI3SZNYKKE0HwoEY8sWHKg1JmIVeAuv7LM-44"},
{"content":{"body":"oh","m.mentions":{},"msgtype":"m.text"},"ts":1740009726068,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$veFN17MJ8qIkKek6bjAh_gFM2AcHeiuIsawEvgBsAFs"},
{"content":{"body":"hm","m.mentions":{},"msgtype":"m.text"},"ts":1740009734443,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Hn3d2e9EoaUcgyB3Z9D9elmbs76qJIa8Bg2-0eWXrc8"},
{"content":{"body":"this space is well-expored in userland","m.mentions":{},"msgtype":"m.text"},"ts":1740009736370,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WidR8LbZniN7MuCKgJjh_5TSbQE44jfuTcZS8ARS6sQ"},
{"content":{"body":"you can't ever collect those entries because they're forgable ","m.mentions":{},"msgtype":"m.text"},"ts":1740009741929,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$txvC3DXAiIvEyjH4-2bVde9i8PLZX4RN4-R1QeuA18I"},
{"content":{"body":"then i guess we need `===` overloaded","format":"org.matrix.custom.html","formatted_body":"then i guess we need <code>===</code> overloaded","m.mentions":{},"msgtype":"m.text"},"ts":1740009747118,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vAStO5JzctnrLliQjZWH-J_pLieldEPI8x3lY5IdnFk"},
{"content":{"body":"the links from the slides have a few different approaches","m.mentions":{},"msgtype":"m.text"},"ts":1740009750609,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zFX7C2kjsQe6W6Y27ElX2lVkPxXnr347SrsZMYVe0G0"},
{"content":{"body":"* this space is well-explored in userland","m.mentions":{},"m.new_content":{"body":"this space is well-explored in userland","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WidR8LbZniN7MuCKgJjh_5TSbQE44jfuTcZS8ARS6sQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740009767472,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xWCBsh9A3nI0su5S03glAOCcN00Vrx8T5IBMUSoXChI"},
{"content":{"body":"if you do the finalizationregistry thing, it does not leak if a composite key of only primitives become unreachable, even with a map, no?","m.mentions":{},"msgtype":"m.text"},"ts":1740009794874,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Bl1qCAeUNty5p0Ox1FC5bZamc_36zrYXg2R-dkmK20o"},
{"content":{"body":"is the implementor worry that it will slow down *all* `===` occurances","format":"org.matrix.custom.html","formatted_body":"is the implementor worry that it will slow down <em>all</em> <code>===</code> occurances","m.mentions":{},"msgtype":"m.text"},"ts":1740009852545,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$V6KjXOOSyFQ6_35ibTwWelVww69d_rjZH1ERMrPrpcA"},
{"content":{"body":"It has to, because the components of the composite key would always be forgeable, the composite of them is forgeable","m.mentions":{},"msgtype":"m.text"},"ts":1740009863561,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Tf31QF4IH0hrvlwMNyQ_Q8_YwZJdM31xx6dLG9y--yk"},
{"content":{"body":"Yeah, I defined a bunch of collections before Map was added to the language, where you brought your own contentEquals contentCompare, which I suppose is analogous to species.","m.mentions":{},"msgtype":"m.text"},"ts":1740009873774,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$HHHrKxRF_S5tz3XBq7iAsEpfvjhIPahNE5WnNJGTSzY"},
{"content":{"body":"> <@devsnek:matrix.org> is the implementor worry that it will slow down *all* `===` occurances\n\nI think that's the claim (in the past)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24V6KjXOOSyFQ6_35ibTwWelVww69d_rjZH1ERMrPrpcA\">In reply to</a><a href=\"https://matrix.to/#/%40devsnek%3Amatrix.org\">@devsnek:matrix.org</a><br />is the implementor worry that it will slow down <em>all</em> <code>===</code> occurances</blockquote></mx-reply>I think that&#39;s the claim (in the past)","m.relates_to":{"m.in_reply_to":{"event_id":"$V6KjXOOSyFQ6_35ibTwWelVww69d_rjZH1ERMrPrpcA"}},"msgtype":"m.text"},"ts":1740009873791,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AxGAiQ923RZZGsbjaqBKUAlFfKkpWu5AAmez4PThM2U"},
{"content":{"body":"* It has to leak, because the components of the composite key would always be forgeable, the composite of them is forgeable","m.mentions":{},"m.new_content":{"body":"It has to leak, because the components of the composite key would always be forgeable, the composite of them is forgeable","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Tf31QF4IH0hrvlwMNyQ_Q8_YwZJdM31xx6dLG9y--yk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740009882717,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NWjUPLhI14ikJc9uugmGOvW8SwcoozfKyeHA-RRsV8k"},
{"content":{"body":"I guess we could in principle say that a composite key of only primitives cannot be held weakly","m.mentions":{},"msgtype":"m.text"},"ts":1740009893727,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5EvjrjaGfRCVrILMKv0jRp6BShDUSm27TAtNn-H8z3s"},
{"content":{"body":"what is this a response to?","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Tf31QF4IH0hrvlwMNyQ_Q8_YwZJdM31xx6dLG9y--yk"}},"msgtype":"m.text"},"ts":1740009896105,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$w0V4WIoVUfpOh6NPjeTU4Wam28sxFNa2OnIs-v8j_eY"},
{"content":{"body":"and maybe that solves the problem?","m.mentions":{},"msgtype":"m.text"},"ts":1740009896933,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bRx-Wn2LFw1EWB53yGJNH1X0nkpD7A3dBEocH3unbm4"},
{"content":{"body":"oh right yes obviously","m.mentions":{},"msgtype":"m.text"},"ts":1740009916829,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$yXaoPolhY1Vuf71-byNBGAh2JoPFVJt3fx0Anr60yDQ"},
{"content":{"body":"that seems perfectly reasonable","m.mentions":{},"msgtype":"m.text"},"ts":1740009917925,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yrKujYBc-4pwfK4kCqjWqAxP20o3sabsUCExogkFXTo"},
{"content":{"body":"but what if it's an object ?","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5EvjrjaGfRCVrILMKv0jRp6BShDUSm27TAtNn-H8z3s"}},"msgtype":"m.text"},"ts":1740009926889,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$bDmg2c3BSAkbVKnU_m1QyjmM1ZDpu8hwWXFQnuUC1Kw"},
{"content":{"body":"(it makes an even stronger case for a built-in \"isWeakable\" predicate, ofc)","m.mentions":{},"msgtype":"m.text"},"ts":1740009932992,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9fY373ccyVaXr-aIKA2vHf4MbHknE7UO9_6CrBWn090"},
{"content":{"body":"I was expecting you to say \"this breaks the predicate to check when I can put something in a weakmap)","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yrKujYBc-4pwfK4kCqjWqAxP20o3sabsUCExogkFXTo"}},"msgtype":"m.text"},"ts":1740009939324,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dhCdv80ktJCUa6pWlUAZO5s5QwvK1__O4M3NIGquanM"},
{"content":{"body":"Oh there it is :)","m.mentions":{},"msgtype":"m.text"},"ts":1740009944949,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aS8BIA9TGZZbG2DcfbLOYxdYiVkAOkDrAbLF_9RxWk0"},
{"content":{"body":"I do not understand the question","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$bDmg2c3BSAkbVKnU_m1QyjmM1ZDpu8hwWXFQnuUC1Kw"}},"msgtype":"m.text"},"ts":1740009945839,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mk6P4s0xzTK7ALYemxDNINC0wECb2Jx7rzVQMWkBIl0"},
{"content":{"body":"* I was expecting you to say \"this breaks the predicate to check when I can put something in a weakmap\"","m.mentions":{},"m.new_content":{"body":"I was expecting you to say \"this breaks the predicate to check when I can put something in a weakmap\"","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dhCdv80ktJCUa6pWlUAZO5s5QwvK1__O4M3NIGquanM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740009953430,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$csL2-L1lq3MHgCqfRMWXCg1-6ChIVUY8izT_bPgiPkU"},
{"content":{"body":"having a non-weakable object is def weird too","m.mentions":{},"msgtype":"m.text"},"ts":1740009977153,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$09J1nMDaAxY8jd_ikHP0LHFwytruXK1QwdX8U07dXNM"},
{"content":{"body":"See above discussion. An object is currently expected to be usable as a weak map key","m.mentions":{},"msgtype":"m.text"},"ts":1740010006294,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HPOk3UqE2rbk9cq0qcWLoXxEgDp67MlCrjhcMYyKQ7c"},
{"content":{"body":"> <@ljharb:matrix.org> having a non-weakable object is def weird too\n\nno weirder than registered symbols","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%2409J1nMDaAxY8jd_ikHP0LHFwytruXK1QwdX8U07dXNM\">In reply to</a><a href=\"https://matrix.to/#/%40ljharb%3Amatrix.org\">@ljharb:matrix.org</a><br />having a non-weakable object is def weird too</blockquote></mx-reply>no weirder than registered symbols","m.relates_to":{"m.in_reply_to":{"event_id":"$09J1nMDaAxY8jd_ikHP0LHFwytruXK1QwdX8U07dXNM"}},"msgtype":"m.text"},"ts":1740010028410,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1x4BjOtUNia5kboBUH1v4u2nXDyZ2YtIiwPAS7dyy_4"},
{"content":{"body":"they're both differently weird. which is weirder in aggregate","m.mentions":{},"msgtype":"m.text"},"ts":1740010071311,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xgH77rHJGR0-qIlwvXaYCazTlb5qUe9Sv9lpDLSlkzs"},
{"content":{"body":"(this would also require the thing from the previous presentation where non-extensible objects could not get stamped with private fields, incidentally)","m.mentions":{},"msgtype":"m.text"},"ts":1740010099633,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r7PMZzb0orxtK6k2wPQjt1D2zguehm6zHx1Eei9gNmI"},
{"content":{"body":"ooooo composite keys would obviate `Array.prototype.uniqBy` ðŸ˜®","format":"org.matrix.custom.html","formatted_body":"ooooo composite keys would obviate <code data-md=\"`\">Array.prototype.uniqBy</code> ðŸ˜®","msgtype":"m.text"},"ts":1740010185628,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ESjNqvlB67rZJ6DRvVPUK74Hbqq-Wvd9PiReU7a2pwI"},
{"content":{"body":"god I need this","msgtype":"m.text"},"ts":1740010198208,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZN7gLdvVayR4VIpZu9iNQHFX_hX6_qhxxMNd-xVrZgA"},
{"content":{"body":"... would they?","m.mentions":{},"msgtype":"m.text"},"ts":1740010217665,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MPPwfGSJiLjcosFh2r_kVxQ-v5K9AcswJbZsXXZZTCM"},
{"content":{"body":"I feel like they'd make it better tbh","m.mentions":{},"msgtype":"m.text"},"ts":1740010222283,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CzP795RlpKXGxuPGYsu8Hgb2nwztXTov0hwY_CcEhkM"},
{"content":{"body":"well that was entirely coincidental","msgtype":"m.text"},"ts":1740010284322,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$GxaqxGOAF11JlRcwt3d9a99l5PUWbF2AvkIpVadBP-M"},
{"content":{"body":"whats the 4th form of equality?","m.mentions":{},"msgtype":"m.text"},"ts":1740010309304,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$xZrDOmGE6UUbpjN5ozLhLH851yR9iTkh6QQJV40A_bM"},
{"content":{"body":"`===`, `==`, `Object.is`, `SameValueZero`","format":"org.matrix.custom.html","formatted_body":"<code>===</code>, <code>==</code>, <code>Object.is</code>, <code>SameValueZero</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740010326118,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$52Umfn8UamPk1u0Al0bauFn1HvUz9aJmlDtAQRuVMl4"},
{"content":{"body":"ohh SameValueZero","m.mentions":{},"msgtype":"m.text"},"ts":1740010336198,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$5miNpXgJlxDofuQ-mXIl_rLRDnK4R_xVYbZwN5hLtPQ"},
{"content":{"body":"I was imagining that this would replace SameValueZero","m.mentions":{},"msgtype":"m.text"},"ts":1740010338691,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WQiifoEAhplscGtAKEtSjYKkrZjvOH6xLiJDhZOZNxo"},
{"content":{"body":"Also in `[].includes`?","format":"org.matrix.custom.html","formatted_body":"Also in <code>[].includes</code>?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$WQiifoEAhplscGtAKEtSjYKkrZjvOH6xLiJDhZOZNxo"}},"msgtype":"m.text"},"ts":1740010355573,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HeJsnH4hIZfBqdYvz3deOAt-8-BhEZHQ0qnfAmfm598"},
{"content":{"body":"I mean, yeah, if we're modifying existing APIs","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org","@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$HeJsnH4hIZfBqdYvz3deOAt-8-BhEZHQ0qnfAmfm598"}},"msgtype":"m.text"},"ts":1740010374126,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3Pt3vqWi4wWbKBgVCATW5BitWbLA81PBfPWTeHCMFGI"},
{"content":{"body":"shu: is it still held that `===` for r&t is too expensive?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: is it still held that <code>===</code> for r&amp;t is too expensive?","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"msgtype":"m.text"},"ts":1740010484056,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$a6JG-roH7jMyj2CFtgBxGFfDCSY7Z9ot8FhHQKSUMX8"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1740010492391,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZMsKvJGUE4LGpNfyb55Y1iH1frF4NT4i_0DKBMFGhpU"},
{"content":{"body":"ðŸ˜”","m.mentions":{},"msgtype":"m.text"},"ts":1740010504695,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$WvKw_loIiX6x7ncrW0d-ppcXFzQOhxQt9Y9rktgCCTA"},
{"content":{"body":"also reminder of the old https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey","m.mentions":{},"msgtype":"m.text"},"ts":1740010551545,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rqzr7cOfznV5pKswPFWgkiEXLVOrVyqC4f5GLzlWlNM"},
{"content":{"body":"these were `===` via interning (and requiring at least one weak component) instead of modifying collections","format":"org.matrix.custom.html","formatted_body":"these were <code>===</code> via interning (and requiring at least one weak component) instead of modifying collections","m.mentions":{},"msgtype":"m.text"},"ts":1740010584628,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4FvvZhEMjvuE7bn9OQZ42bkgrFqmqbMmm6KMPqBMs6Q"},
{"content":{"body":"but same goal","m.mentions":{},"msgtype":"m.text"},"ts":1740010588430,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FAav5vnVCT4QoRzfxp7YJrKNq-T8dQXzLgphQqabUdU"},
{"content":{"body":"also, phrasing these as \"composite keys\" makes it clear that you shouldn't be using these all over the place","m.mentions":{},"msgtype":"m.text"},"ts":1740010900197,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iFTaEKXp8qqtDdBgiicOeaGwGCrzMWWWt5C9YL7EP40"},
{"content":{"body":"e.g. a new Object.entries-like API would not return these","m.mentions":{},"msgtype":"m.text"},"ts":1740010915927,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a7zKyeUlGgtOkPyPW20Qv-NPhcobmEKI6xL2e8QY8AY"},
{"content":{"body":"if they are actually composite keys and composite keys only, is the recursive part of it needed?","m.mentions":{},"msgtype":"m.text"},"ts":1740010999444,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K6C9m10VhGyV67lyrnlcIg1RnI5tRD-vu5rFYz82o6o"},
{"content":{"body":"I would want it to, so I wouldn't have to manually flatten the results of my `.toKey` methods everywhere","format":"org.matrix.custom.html","formatted_body":"I would want it to, so I wouldn't have to manually flatten the results of my <code>.toKey</code> methods everywhere","m.mentions":{},"msgtype":"m.text"},"ts":1740011091576,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ba1gyz_ApqOGPjGs_9iK-9v1Du4-QULg9nO6M1SL01w"},
{"content":{"body":"fair enough","m.mentions":{},"msgtype":"m.text"},"ts":1740011162651,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qKLzCB3G-12QvdLJGJwjQpn15jYaa_M7GAzd-L8IoAE"},
{"content":{"body":"(and it's not like it's any slower to do it recursively vs me manually flattening. faster, probably, since you can have a fast path if I was using actually the same object)","m.mentions":{},"msgtype":"m.text"},"ts":1740011199658,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U-dVYwuyphRJTlQrMduVdSPIfpXUtjZRk8FYj3Wouqk"},
{"content":{"body":"* (and it's not like it's any slower to do it recursively vs me manually flattening. faster, probably, since you can have a fast path if I was using actually the same inner object)","m.mentions":{},"m.new_content":{"body":"(and it's not like it's any slower to do it recursively vs me manually flattening. faster, probably, since you can have a fast path if I was using actually the same inner object)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$U-dVYwuyphRJTlQrMduVdSPIfpXUtjZRk8FYj3Wouqk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740011211257,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GKPq4FGsnQ_qlgKCOVGz5fsv49o-wA8IE__LucqkG74"},
{"content":{"body":"libraries are allowed to have expectations and we're definitely allowed to break those expectations","m.mentions":{},"msgtype":"m.text"},"ts":1740011320363,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vjnCe4abOBLip-3U2xm9yzzCCwbDVL8uk7Zqzg7JZEo"},
{"content":{"body":"we added new `typeof`s!","format":"org.matrix.custom.html","formatted_body":"we added new <code>typeof</code>s!","m.mentions":{},"msgtype":"m.text"},"ts":1740011327382,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GHsfGRYrIx4MGH38-tJTL4bSDuZ1W6l21ljYTZlI1Vw"},
{"content":{"body":"that was *not good* for some minifiers","format":"org.matrix.custom.html","formatted_body":"that was <i data-md=\"*\">not good</i> for some minifiers","msgtype":"m.text"},"ts":1740011454047,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HxdJLx3daRowwVy9HwksA3w8puI2m56XP2VJ_nHiBRE"},
{"content":{"body":"but that was ok","m.mentions":{},"msgtype":"m.text"},"ts":1740011470008,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pb9Tj5Akvfkpghw2UHqFCfqB9u5ZMuzoTgPfivRRX14"},
{"content":{"body":"only because I fixed them promptly","msgtype":"m.text"},"ts":1740011493924,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Fk_hC1zF7EdmN-1PE3QRwDWGMpuI7QRFST0wvhWXc38"},
{"content":{"body":"I expect this would be less brutal than new typeof","m.mentions":{},"msgtype":"m.text"},"ts":1740011532000,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$9Es5vJuzGA2TdptQnmRcrtqu4qM20Jz9OZZsF-Duawg"},
{"content":{"body":"p sure the forever goodness of new primitives outweighs one person's minifier fixing effort tho","m.mentions":{},"msgtype":"m.text"},"ts":1740011533791,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qjC6YAqD99H2XeCLQNOlyyBlZPlRmJ3IkpXamietfjw"},
{"content":{"body":"Ashley Claymore: is there a repo for your r&t work? Is it just https://github.com/tc39/proposal-record-tuple?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: is there a repo for your r&amp;t work? Is it just https://github.com/tc39/proposal-record-tuple?","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"msgtype":"m.text"},"ts":1740011586458,"senderName":"rekmarks","senderId":"@rekmarks:matrix.org","id":"$73rSWlb9Ef2SbMr3Acb7PYcjK5PzEk99ZKRQHHxAQm8"},
{"content":{"body":"so, would <del>composite keys</del> this new vision of records normalize `-0` to `0` when using them in a map?","format":"org.matrix.custom.html","formatted_body":"so, would <del>composite keys</del> this new vision of records normalize <code>-0</code> to <code>0</code> when using them in a map?","m.mentions":{},"msgtype":"m.text"},"ts":1740011588003,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UAoTxIy2S9R5Eoy33S__OsGQSHT6cwdHfutkSus9IMg"},
{"content":{"body":"presumably yes?","m.mentions":{},"msgtype":"m.text"},"ts":1740011593462,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y-jqhBMcSqymPsEh5nHRJggf1gWrphNXvbniQMp7MaY"},
{"content":{"body":"could we have more help from notetakers?","m.mentions":{},"msgtype":"m.text"},"ts":1740011595122,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$f-zfcerK4iMwUQFctBOopCtJLK7qsU_bzmU6ufMjzh0"},
{"content":{"body":"I can help","m.mentions":{},"msgtype":"m.text"},"ts":1740011601765,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kJuM37ruKGlvpUiHbvvJ3ajaOw8u_-0Y4lq_jMb3n0k"},
{"content":{"body":"kind of annoying; that could be expensive. but I guess just don't have `-0`","format":"org.matrix.custom.html","formatted_body":"kind of annoying; that could be expensive. but I guess just don't have <code>-0</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740011606321,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0b6E2g8siGr4lJzDWUyr1GS-3uYT43-nVEbdRCVWBIw"},
{"content":{"body":"why would it? it'd just normalize during calculation of the hashcode itself, and then do comparison SameValueZero-wise","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$y-jqhBMcSqymPsEh5nHRJggf1gWrphNXvbniQMp7MaY"}},"msgtype":"m.text"},"ts":1740011642103,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QYqIz-sv3jpkRVQi96fLlipMzHwY4JMuP-BZIwLO6-c"},
{"content":{"body":"do we need a PoO?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$f-zfcerK4iMwUQFctBOopCtJLK7qsU_bzmU6ufMjzh0"}},"msgtype":"m.text"},"ts":1740011644374,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$mBGRzBbBI6I5L3x2lKYBLobqo9w1us-iR-nGDdaItjU"},
{"content":{"body":"no","m.mentions":{},"msgtype":"m.text"},"ts":1740011654577,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bczorvQqzxMfZrnkWg5_lHCJsagJWN53Zrka0en6bLA"},
{"content":{"body":"oh, yeah... because that's what maps do with scalars...","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QYqIz-sv3jpkRVQi96fLlipMzHwY4JMuP-BZIwLO6-c"}},"msgtype":"m.text"},"ts":1740011681710,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$H1F3ELT0Odn6nVolRyC4BvFR9Vwm0aNkS8PYmsaeWAY"},
{"content":{"body":"maybe we should just skip it here, though, since it'd be weird if the identity didn't actually match the first one that put it in","m.mentions":{},"msgtype":"m.text"},"ts":1740011709649,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SgYMxz9Nxz0HK8dGOE9SuQEPmg1qml1RQBdccbtfrsI"},
{"content":{"body":"Iiiiiiiii guess that would be ok?","m.mentions":{},"msgtype":"m.text"},"ts":1740011740239,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FDHv0xw_ywDCf7APiQc1N55uj-a-PDsdWzGU8hpa9Gk"},
{"content":{"body":"but in that case it would be better if we didn't normalize `-0`","format":"org.matrix.custom.html","formatted_body":"but in that case it would be better if we didn't normalize <code>-0</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740011758710,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eHRHKx2BKnFBwsT5QQdRcOapDzF22xutaubS3lZduXM"},
{"content":{"body":"too late for that though","m.mentions":{},"msgtype":"m.text"},"ts":1740011762313,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$g7O8mK3zE8qDybpQS6tEuasat5x2_d4FDlQjj875TQE"},
{"content":{"body":"PSA: The notes today are missing lots of summaries and conclusions. Please, speakers, make sure you record those while they're still fresh in your head. Take 5 minutes to save Samina & me thirty.","m.mentions":{},"msgtype":"m.text"},"ts":1740011781159,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$6h7rd0gGo_Gno3NbTh7hDDoXVmy3x7Y2DGmDwlNivsk"},
{"content":{"body":"I was exploring a slightly different design here: https://github.com/acutmore/proposal-keyby\nwhat I presented today needs a home (maybe the existing R&T repo?)","m.mentions":{"user_ids":["@rekmarks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$73rSWlb9Ef2SbMr3Acb7PYcjK5PzEk99ZKRQHHxAQm8"}},"msgtype":"m.text"},"ts":1740011807511,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$uykTv1m2aBiBwXL58tbrN1mYkV2K08sG7-FtvtvNfVI"},
{"content":{"body":"Is this James Snell speaking?","m.mentions":{},"msgtype":"m.text"},"ts":1740012627278,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$MlMLc-M6iq2y8iKt6w7mxtq7v6tf7jP2AUm9j25wKSE"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1740012642231,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$24g4R4yukUOj3hMJoMX98STXfqGQO32BiN10Tzp7aEI"},
{"content":{"body":"is implementation slowness the only thing holding back r&t `===` (and other operator overloads like decimal addition?)","format":"org.matrix.custom.html","formatted_body":"is implementation slowness the only thing holding back r&amp;t <code>===</code> (and other operator overloads like decimal addition?)","m.mentions":{},"msgtype":"m.text"},"ts":1740012788096,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$vLLXcQ9PBB3-Lg_AZkvN9aHc6G-H7UaV68g13nVGNa4"},
{"content":{"body":"the feedback also included the risk of changing existing JIT code","m.mentions":{},"msgtype":"m.text"},"ts":1740012827446,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$XimlPKWtIAe94i3zB8iIfTAbEWyzBXFAIMCziVZxpBk"},
{"content":{"body":"i.e. the one line spec change does not map to a one line c++ change","m.mentions":{},"msgtype":"m.text"},"ts":1740012848065,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8w8p71twWHeiQttEvD6KC90hhfMuOnyThuAOmnPSdA8"},
{"content":{"body":"usual complexity concerns if it incentivizes ever-more-complex interning schemes","m.mentions":{},"msgtype":"m.text"},"ts":1740012858276,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iMKMj7Cnx9f0_UI47dYsfrUORiX2kbfvY-hkF6YPSkA"},
{"content":{"body":"harder and harder to tune","m.mentions":{},"msgtype":"m.text"},"ts":1740012869870,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iLVr9KX62isjtrIK79-V_yxMzHFL-eEMAq1GExhDGP8"},
{"content":{"body":"(please nobody be concerned that the notes doc is no longer accessible; turns out hackmds are all fully indexed by google)","m.mentions":{},"msgtype":"m.text"},"ts":1740027898575,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KG586ubrdr9PCC6MsiQdItP_oPRxUWtGb2X-Kl40pow"},
{"content":{"body":"I trust that the notes doc will be made accessible again at some point?","m.mentions":{},"msgtype":"m.text"},"ts":1740037445371,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$gUN780j4K_uvVyHYdqmccBoeI_TtJB3JVKpWnPwT17w"},
{"content":{"body":"Hi, thank you for everyone's feedback, this is the problem-statement document of the proposal Number.isSafeNumeric. If there are any questions or suggestions, feel free to comment in the Github Issue. \n\nLink: https://github.com/Lxxyx/proposal-number-is-safe-numeric/issues/4\n\nChris de Almeida ","format":"org.matrix.custom.html","formatted_body":"<p>Hi, thank you for everyone's feedback, this is the problem-statement document of the proposal Number.isSafeNumeric. If there are any questions or suggestions, feel free to comment in the Github Issue.</p>\n<p>Link: https://github.com/Lxxyx/proposal-number-is-safe-numeric/issues/4</p>\n<p><a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a></p>\n","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"msgtype":"m.text"},"ts":1740038936500,"senderName":"ZiJian Liu","senderId":"@lxxyx:matrix.org","id":"$WbID2sG6nnDHMIEsxa1rOe2c8fvDug_gzAePZZSggYA"},
{"content":{"body":"what is the concrete implementation of `MV(str) is MV(F(MV(str)))`? Do you just have to check every possible \"worthy\"(?) serialization (e.g. scientific notation, `0.N` vs `.N`, etc...) of the floating point value?","msgtype":"m.text"},"ts":1740059305997,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$fFVHD7cPjI9eNQVBVG2x7959XWyZ_ia9UOZ1soNA2OM"},
{"content":{"body":"* what is the concrete implementation of `MV(str) is MV(F(MV(str)))`? Do you just have to check every possible \"worthy\"(?) serialization (e.g. unnormalized scientific notation, `0.N` vs `.N`, etc...) of the floating point value?","m.new_content":{"body":"what is the concrete implementation of `MV(str) is MV(F(MV(str)))`? Do you just have to check every possible \"worthy\"(?) serialization (e.g. unnormalized scientific notation, `0.N` vs `.N`, etc...) of the floating point value?","msgtype":"m.text"},"m.relates_to":{"event_id":"$fFVHD7cPjI9eNQVBVG2x7959XWyZ_ia9UOZ1soNA2OM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740059526489,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$iUOnYaKMZv4r_SZ3shsMo_yAomsx6ccZr1MZJZRx8VM"},
{"content":{"body":"1. MV(str) means mathematical value (aka the real number value) of the str, there is no specific implementation yet, just a conceptual statement, proving that the real number may change during string-number conversion.\n2. When a string is converted to a number, the Runtime can obtain the exact number value, and perhaps a comparison could be made at this point (this is my speculation and has not been verified). If there are better solutions, please let me know.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>MV(str) means mathematical value (aka the real number value) of the str, there is no specific implementation yet, just a conceptual statement, proving that the real number may change during string-number conversion.</li>\n<li>When a string is converted to a number, the Runtime can obtain the exact number value, and perhaps a comparison could be made at this point (this is my speculation and has not been verified). If there are better solutions, please let me know.</li>\n</ol>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$fFVHD7cPjI9eNQVBVG2x7959XWyZ_ia9UOZ1soNA2OM"}},"msgtype":"m.text"},"ts":1740060848606,"senderName":"ZiJian Liu","senderId":"@lxxyx:matrix.org","id":"$5ev8lm4CL79dwPVD_VIGnMT6wHxkiFIo5mT0MliYLZQ"},
{"content":{"body":"yeah I mean my point is that computers can't literally do MV(str) is MV(other str). (otherwise doubles wouldn't exist and we could all go home lol), so I imagine the only reasonable implementation to be a routine that switches through comparing different serializations depending on the format of the input.","msgtype":"m.text"},"ts":1740061005852,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$dMOXFwqW1NnxOZ36C8FiBIz6uriyWhH4bcD02t9kltI"},
{"content":{"body":"* yeah I mean my point is that computers can't literally do MV(str) is MV(other str) (otherwise floats wouldn't exist and we could all go home lol), so I imagine the only reasonable implementation to be a routine that switches through comparing different serializations depending on the format of the input.","m.new_content":{"body":"yeah I mean my point is that computers can't literally do MV(str) is MV(other str) (otherwise floats wouldn't exist and we could all go home lol), so I imagine the only reasonable implementation to be a routine that switches through comparing different serializations depending on the format of the input.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dMOXFwqW1NnxOZ36C8FiBIz6uriyWhH4bcD02t9kltI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740061045361,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$gKEg1fWAxlwvoL-Gsu86mQ9AjmtYQDU2x4LjDpW7ukM"},
{"content":{"body":"Thank you for the reply, yes, so this is pseudocode, not an actual implementation (just a convenient way to understand the problem, sorry for the confusion, I might need to make a special note about this formula)","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$dMOXFwqW1NnxOZ36C8FiBIz6uriyWhH4bcD02t9kltI"}},"msgtype":"m.text"},"ts":1740061121041,"senderName":"ZiJian Liu","senderId":"@lxxyx:matrix.org","id":"$Z33VoZesLiBgkbxsbuTC-zFgvy46z91teGiilzkXris"},
{"content":{"body":"no it's fine to discuss abstractly, I'm just asking the room how they would approach concrete implementation","msgtype":"m.text"},"ts":1740061184737,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$xFfZ9dwuEzkUZuiJNzhvFmXQ5Z6ZsuK8iIOO1K7Ai-k"},
{"content":{"body":"* yeah I mean my point is that computers can't literally do MV(a) is MV(b) (otherwise floats wouldn't exist and we could all go home lol), so I imagine the only reasonable implementation to be a routine that switches through comparing different serializations depending on the format of the input.","m.new_content":{"body":"yeah I mean my point is that computers can't literally do MV(a) is MV(b) (otherwise floats wouldn't exist and we could all go home lol), so I imagine the only reasonable implementation to be a routine that switches through comparing different serializations depending on the format of the input.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dMOXFwqW1NnxOZ36C8FiBIz6uriyWhH4bcD02t9kltI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740061401293,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$KLr6NaV5gzzziS7Z6AzfkzyWXCsPK78tSGMLzZGKBJ4"},
{"content":{"body":"I might have an internal representation of digit strings that would allow me to at least do an equality check","m.mentions":{},"msgtype":"m.text"},"ts":1740061836554,"senderName":"Jesse (TC39 ðŸ‡ºðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$GtHLzPnDBZFk1X7XDsojezWrNYphtD4qEcvK_t5mB0w"},
{"content":{"body":"so you'd first attempt to canonicalize the input I guess?","msgtype":"m.text"},"ts":1740061905547,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$0jL1acpFBemXEoGltoMkh0ntIfqSoyLl45JiJ6dFRbw"},
{"content":{"body":"What happened to yesterday's notes document? I get Access Denied trying to review it.","m.mentions":{},"msgtype":"m.text"},"ts":1740063510491,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$d68ZFzAFT_uoqCQ81mtGtb-6J11GTOE-QmxU4JmY6o0"},
{"content":{"body":"> <@devsnek:matrix.org> so you'd first attempt to canonicalize the input I guess?\n\nyeah that would be my approach. That's essentially what the decimal proposal polyfill does when giving a string as input","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0jL1acpFBemXEoGltoMkh0ntIfqSoyLl45JiJ6dFRbw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>so you&#39;d first attempt to canonicalize the input I guess?</blockquote></mx-reply>yeah that would be my approach. That's essentially what the decimal proposal polyfill does when giving a string as input","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0jL1acpFBemXEoGltoMkh0ntIfqSoyLl45JiJ6dFRbw"}},"msgtype":"m.text"},"ts":1740064083284,"senderName":"Jesse (TC39 ðŸ‡ºðŸ‡¸)","senderId":"@jesse:igalia.com","id":"$NiDsA94Fok2veTaTsUlYn7qmGdoYglb2ghY1cE1cBuw"},
{"content":{"body":"> <@waldemarh:matrix.org> What happened to yesterday's notes document? I get Access Denied trying to review it.\n\nhttps://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$KG586ubrdr9PCC6MsiQdItP_oPRxUWtGb2X-Kl40pow?via=matrix.org&via=mozilla.org&via=igalia.com","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$d68ZFzAFT_uoqCQ81mtGtb-6J11GTOE-QmxU4JmY6o0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br />What happened to yesterday's notes document? I get Access Denied trying to review it.</blockquote></mx-reply>https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$KG586ubrdr9PCC6MsiQdItP_oPRxUWtGb2X-Kl40pow?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com","m.relates_to":{"m.in_reply_to":{"event_id":"$d68ZFzAFT_uoqCQ81mtGtb-6J11GTOE-QmxU4JmY6o0"}},"msgtype":"m.text"},"ts":1740064386441,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$u0ZpkOsbwajZZjAO24BsiaTo3-oU48bG407YtvttL3c"},
{"content":{"body":"The top secret notes document link (and TCQ link) were leaked, presumably by being present in the hackmd schedule, which gets indexed by search engines.  We will share a new notes doc link on the reflector issue for the meeting.  Also perhaps a new TCQ link.","m.mentions":{},"msgtype":"m.text"},"ts":1740066142434,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$tA2qWSn0FFg5GnFUSDfeVC0kWDs8mxAYp9ZByq31vMc"},
{"content":{"body":"How do search engines find the hackmd document in the first place? Was it linked somewhere?","msgtype":"m.text"},"ts":1740066207999,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$c5rNgFlaPXdLYgMyiziYCUQCK54ydVL0j_TOSVMftnQ"},
{"content":{"body":"not sure, but one way is that the hackmd links are sometimes shared in these public matrix channels, which get logged and those pages get indexed","m.mentions":{},"msgtype":"m.text"},"ts":1740066345419,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Zm5uMXi3xMsgjx8JGkVOyLsD6Sds6hy-m05YoJGiYxQ"},
{"content":{"body":"the hackmd pages themselves are not really a problem to be accessible (except maybe that anyone can edit them) -- but the fact the notes doc and tcq links appeared on them is the bigger issue","m.mentions":{},"msgtype":"m.text"},"ts":1740066418601,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$c2QLCBKKlaLKocqhdZmDhbnoMZyo9RnINfwfuIdZZ1M"},
{"content":{"body":"new notes doc link is up on the reflector issue: https://github.com/tc39/Reflector/issues/547","m.mentions":{},"msgtype":"m.text"},"ts":1740071001100,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$J_TojBtGOphYgXJqzRf1awTuYFrIp2H8HVl9ewq1Vc0"},
{"content":{"body":"new TCQ link is up on the reflector issue as well","m.mentions":{},"msgtype":"m.text"},"ts":1740071810220,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$0hLLaUBJHcJRKe4FbqIccjdVB2scggrehSpRJn8gn_Q"}
]