[
{"content":{"body":"justingrant: More specifically for inputs, they should not only be iterators but should *eagerly consume* those inputs, in argument order, unless there's a good reason to not do so (like the iterator combinators). Again, WebIDL has a nice consistent model here so all web platform APIs get consistency for free.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@justingrant:matrix.org\">justingrant</a>: More specifically for inputs, they should not only be iterators but should <em>eagerly consume</em> those inputs, in argument order, unless there's a good reason to not do so (like the iterator combinators). Again, WebIDL has a nice consistent model here so all web platform APIs get consistency for free.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"justingrant: More specifically for inputs, they should not only be iterators but should *eagerly consume* those inputs, in argument order, unless there's a good reason to not do so (like the iterator combinators). Again, WebIDL has a nice consistent model here so all web platform APIs get consistency for free.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@justingrant:matrix.org\">justingrant</a>: More specifically for inputs, they should not only be iterators but should <em>eagerly consume</em> those inputs, in argument order, unless there's a good reason to not do so (like the iterator combinators). Again, WebIDL has a nice consistent model here so all web platform APIs get consistency for free.","mimetype":"text/html"}]},"ts":1644865112831,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$RltMZ10OllcW-cAzcqOx2k81WfIpVIMNucBu8_fYYoo"},
{"content":{"body":"Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it.","msgtype":"m.text","org.matrix.msc1767.text":"Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it."},"ts":1644865181598,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$V3aYhQKO2Jl0YcoOT43WRqSnDjsTS-n_PU9xBVQsmwY"},
{"content":{"body":"> <@tabatkins:matrix.org> Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it.\n\nYep, I don't have context about the reason, just forwarding what I heard from Frank: \n\n> It is much more complex to implement a function which take an iterable than take an arraylike, at least in v8.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$V3aYhQKO2Jl0YcoOT43WRqSnDjsTS-n_PU9xBVQsmwY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it.</blockquote></mx-reply><p>Yep, I don't have context about the reason, just forwarding what I heard from Frank:</p>\n<blockquote>\n<p>It is much more complex to implement a function which take an iterable than take an arraylike, at least in v8.</p>\n</blockquote>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$V3aYhQKO2Jl0YcoOT43WRqSnDjsTS-n_PU9xBVQsmwY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@tabatkins:matrix.org> Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it.\n\nYep, I don't have context about the reason, just forwarding what I heard from Frank: \n\n> It is much more complex to implement a function which take an iterable than take an arraylike, at least in v8.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$V3aYhQKO2Jl0YcoOT43WRqSnDjsTS-n_PU9xBVQsmwY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Curious that you have impl feedback that accepting an iterator in one part makes impl harder, since literally every single array-accepting function defined in webidl does it.</blockquote></mx-reply><p>Yep, I don't have context about the reason, just forwarding what I heard from Frank:</p>\n<blockquote>\n<p>It is much more complex to implement a function which take an iterable than take an arraylike, at least in v8.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1644870845206,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$AaMALEDwq7t9BIPJQNhMKEUxH3l9-RqszEaiVjrcx-c"}
]