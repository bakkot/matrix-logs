[
{"content":{"body":"Btw, re symbols, I'm still surprised no engine considers registered symbols separately from unique symbols, and simply implements them as a wrapped string. At that point there is no need to track instances of registered symbols and collect them, at least any more than roping the strings they wrap, and `Symbol.for` can simply recreate the value, `Symbol.keyFor` can unwrap the description, and comparing would match the subtype (registered symbol) + description value.","format":"org.matrix.custom.html","formatted_body":"Btw, re symbols, I'm still surprised no engine considers registered symbols separately from unique symbols, and simply implements them as a wrapped string. At that point there is no need to track instances of registered symbols and collect them, at least any more than roping the strings they wrap, and <code>Symbol.for</code> can simply recreate the value, <code>Symbol.keyFor</code> can unwrap the description, and comparing would match the subtype (registered symbol) + description value.","msgtype":"m.text"},"ts":1643246477794,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NT3Sj2YHGVOs5g8yvt2Cl19WOw9cM1ZfqvJ20MJg9xc"},
{"content":{"body":"if you want to talk more about the presentation from the KAIST research group yesterday, I've started a thread on the Reflector: https://github.com/tc39/Reflector/issues/417","msgtype":"m.text"},"ts":1643305971189,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XlzEApt-vOgfiYry_PxOYwI6mE8ORIaOuLfWjpYqXbQ"}
]