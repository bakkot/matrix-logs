[
{"content":{"body":"Are the meetings recording audio or video? Or is it just text transcripts?","m.mentions":{},"msgtype":"m.text"},"ts":1753793964709,"senderName":"styfle","senderId":"@styfle:matrix.org","id":"$wNbgK9MS9lDcpc-hOOsdByGvm1ENffdCDu-U6sSud9g"},
{"content":{"body":"Just transcripts ","msgtype":"m.text"},"ts":1753794003917,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fNe0dTJ4FDz3xiCgXNRkXgyE2jtXPxBivOvl8q5f-cw"},
{"content":{"body":"Yes, and my understanding is that individual presenters are welcome to ask the committee for permission to record their own presentations, but not the conversation about their presentation, and publish in their own venues. This happens rarely enough that I donâ€™t feel bad reminding seasoned delegates. :-)","m.mentions":{},"msgtype":"m.text"},"ts":1753799002715,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$L2oB8mcXHcc2CEyX05noYXH-boBQZYQ_jTAEQJ_bUN0"},
{"content":{"body":"@room we're starting in 7 mins!","m.mentions":{"room":true},"msgtype":"m.text"},"ts":1753808023142,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$SllcKJDwmNlqPJ90h4yosi1lVHU5gpV2kEnRARxKjCA"},
{"content":{"body":"Rich Hickey created Clojure, Rich Harris created Svelte","m.mentions":{},"msgtype":"m.text"},"ts":1753808945595,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$G1NvVHWNGT4bEqL5Ah542wsHbJAngti96DetH6LLBVI"},
{"content":{"body":"what if we just had an explicit \"IsProxy\"...","m.mentions":{},"msgtype":"m.text"},"ts":1753809594046,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8113syWPaqaei0xNAsLXNzyVs9zFQhE7FJttEI9N1-M"},
{"content":{"body":"I would also like to be able to tell if touching a random object in any way at all is going to have side effects","m.mentions":{},"msgtype":"m.text"},"ts":1753809607786,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WGCgNOAJakOrJ-8BBDDEsH_JEQRoCnqMq4xJBHhZK-g"},
{"content":{"body":"I think that's a capability I should be allowed to have","m.mentions":{},"msgtype":"m.text"},"ts":1753809615972,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$At17wdaK2JcdgZHN0Woda1JyheSjIrPIWVTHyziTHmQ"},
{"content":{"body":"@bakkot:matrix.org you'll still have accessors to worry about","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot</a> you&#39;ll still have accessors to worry about","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1753809665061,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Gs5rGtm5VYu7XrL6CWC0TnUayrMUlv6Vt-u0GO4P9EQ"},
{"content":{"body":"I can tell if a non-proxy has an accessor","m.mentions":{},"msgtype":"m.text"},"ts":1753809679172,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3eKfDIqLa_W2JlbtePaCJv0nx9dljFJhKTe5bbzqlpc"},
{"content":{"body":"Where did nicolo-ribaudo 's AsyncContext question go ??","format":"org.matrix.custom.html","formatted_body":"Where did <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> 's AsyncContext question go ??","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1753809805382,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$2RaTTtxPZCF_bD_xicz3XjFUUQ4leBBD_VpNboltuHI"},
{"content":{"body":"people can delete their own TCQ items","format":"org.matrix.custom.html","formatted_body":"people can delete their own TCQ items","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2RaTTtxPZCF_bD_xicz3XjFUUQ4leBBD_VpNboltuHI"}},"msgtype":"m.text"},"ts":1753809861415,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$X5gHtNX44a26Tu66GuYSfwxD32isuCrgtdcTitJmgZU"},
{"content":{"body":"I was interested in that question ;)","m.mentions":{},"msgtype":"m.text"},"ts":1753809879483,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$sxMPmjIWsn032gYL_LyWR4YtqR1WfcbYQloEaVckLE4"},
{"content":{"body":"you can always add it yourself","m.mentions":{},"msgtype":"m.text"},"ts":1753809923797,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_iVFlfKycBcqnW2TIT98G1miDz3-CBL-QByixXOJ6CM"},
{"content":{"body":"I was going to say \"Svelte will switch to AsyncContext rather than synchronously reading .then\", but probably svelte moving away from it in a few years means that we'll never be able to assume everybody updated anyway ","msgtype":"m.text"},"ts":1753809927407,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$O8UmGiiFM0wHxBz0_ConWGGo3Nolyxsnm4h7jaBcZnI"},
{"content":{"body":"you know _i'm_ gonna love a `Promise.isPromise`","format":"org.matrix.custom.html","formatted_body":"you know <em>i'm</em> gonna love a <code>Promise.isPromise</code>","m.mentions":{},"msgtype":"m.text"},"ts":1753810026327,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"},
{"content":{"body":"no lies detected","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"}},"msgtype":"m.text"},"ts":1753810050442,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Zq05QwuJ2zf_uiCe1GkyZdGKouV00kLEJr7b55wNQ_k"},
{"content":{"body":"styfle: I no longer have access to the private Vercel repos. Can you check if the AsyncLocalStroage polyfill I implemented for edge runtime usess a `.then` accessor?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@styfle:matrix.org\">styfle</a>: I no longer have access to the private Vercel repos. Can you check if the AsyncLocalStroage polyfill I implemented for edge runtime usess a <code>.then</code> accessor?","m.mentions":{"user_ids":["@styfle:matrix.org"]},"msgtype":"m.text"},"ts":1753810065483,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SpRiwrl7umN4K5ynEXFpOzKQ2_29znFLDqdd_dwf_P0"},
{"content":{"body":"Mathieu Hofman: `Symbol.unthenable ` is _another_ lookup","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: <code>Symbol.unthenable </code> is <em>another</em> lookup","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"msgtype":"m.text"},"ts":1753810320512,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3_APUMrBSMNXJKQzSQ-LetXYqYWlSwwJK-FqlTg0H6A"},
{"content":{"body":"that's the opposite of the point","m.mentions":{},"msgtype":"m.text"},"ts":1753810324917,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ebKCFt5dLslQ4mLalqi7u9mNaZTU73uIwZLterVGQco"},
{"content":{"body":"4 hours on the last day all for this topic!","m.mentions":{},"msgtype":"m.text"},"ts":1753810351846,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Qfg2yN7iYmsm0_9TOn_kMtSoZv0TWBNtkI1UtZWE5NM"},
{"content":{"body":"Right it'd require a non proxy check, and these to be non-configurable and non-writable, which is kinda meh","m.mentions":{},"msgtype":"m.text"},"ts":1753810370015,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NM1CRE32jY9nTHQU9YG8nXT0BzRI0Wd8LfT2oh5oBso"},
{"content":{"body":"just seems way worse than having an internal slot","m.mentions":{},"msgtype":"m.text"},"ts":1753810387999,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vqON5Mz5v-89PwnsnGAEAQNxKftv3f1e0TlZ33D4wmU"},
{"content":{"body":"* 4 hours on the last day all for this topic! React with ðŸ«  to vote in favour of this","m.mentions":{},"m.new_content":{"body":"4 hours on the last day all for this topic! React with ðŸ«  to vote in favour of this","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Qfg2yN7iYmsm0_9TOn_kMtSoZv0TWBNtkI1UtZWE5NM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810391660,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$6FfPmmec03D1tVUAslk5QrQai4ManYZsYIIfQqD2wgE"},
{"content":{"body":"I'd love a temp check on `Promise.isPromise` see if it'd be viable to bring as a proposal","format":"org.matrix.custom.html","formatted_body":"I'd love a temp check on <code>Promise.isPromise</code> see if it'd be viable to bring as a proposal","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"}},"msgtype":"m.text"},"ts":1753810415892,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$anL1J3OtjM2nn2jW-u3kdteXELxIoBtY-AoCvPpZgoQ"},
{"content":{"body":"Would it also have `Promise.isThenable` ?","format":"org.matrix.custom.html","formatted_body":"Would it also have <code>Promise.isThenable</code> ?","m.mentions":{},"msgtype":"m.text"},"ts":1753810452863,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$n04Oyg-mzI43-r8mNJeFVeXjm1wOcyv3iQE2tBHnYl0"},
{"content":{"body":"you can sort of build it already by adding a `.constructor` t othe object","format":"org.matrix.custom.html","formatted_body":"you can sort of build it already by adding a <code>.constructor</code> t othe object","m.mentions":{},"msgtype":"m.text"},"ts":1753810461958,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wDtoExz2HAteaZnnOuzJM9bdtN3p_Y-O7yCAMehhhEw"},
{"content":{"body":"* you can sort of build it already by adding a `.constructor` getter to the object and then `await`ing it","format":"org.matrix.custom.html","formatted_body":"* you can sort of build it already by adding a <code>.constructor</code> getter to the object and then <code>await</code>ing it","m.mentions":{},"m.new_content":{"body":"you can sort of build it already by adding a `.constructor` getter to the object and then `await`ing it","format":"org.matrix.custom.html","formatted_body":"you can sort of build it already by adding a <code>.constructor</code> getter to the object and then <code>await</code>ing it","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wDtoExz2HAteaZnnOuzJM9bdtN3p_Y-O7yCAMehhhEw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810471159,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zlBIrJDzN0SGMqGto-E1NDh1uMHal-iMT89tnlJa4mw"},
{"content":{"body":"so... would be nice to have something better than that","m.mentions":{},"msgtype":"m.text"},"ts":1753810478466,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$J8w1GBMP6SGAYYN-sTAOVLGfECquF1hEoKfODl2rGAQ"},
{"content":{"body":"except no one is doing that afaict","m.mentions":{},"msgtype":"m.text"},"ts":1753810486877,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Mm4AZb-Smc3T9bRINNS17YcwoRQ0WGO2XQA8f2M0iWo"},
{"content":{"body":"`assert(!Promise.isThenable({}))` would be a good first line of program code","format":"org.matrix.custom.html","formatted_body":"<code>assert(!Promise.isThenable({}))</code> would be a good first line of program code","m.mentions":{},"msgtype":"m.text"},"ts":1753810487258,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$71XkYFgOkB2sKbr0ijIpQ0nlUifxCE996gi-rMUJcgc"},
{"content":{"body":"To be clear I would use `Promise.isPromise` to build a safe `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"To be clear I would use <code>Promise.isPromise</code> to build a safe <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"msgtype":"m.text"},"ts":1753810591352,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$AzD4ZLZaUthBsapv54r3snLKbRv38M57GxoG3n2YrH0"},
{"content":{"body":"* To be clear I would use `Promise.isPromise` to build a safe userland `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"* To be clear I would use <code>Promise.isPromise</code> to build a safe userland <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"m.new_content":{"body":"To be clear I would use `Promise.isPromise` to build a safe userland `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"To be clear I would use <code>Promise.isPromise</code> to build a safe userland <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$AzD4ZLZaUthBsapv54r3snLKbRv38M57GxoG3n2YrH0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810598496,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$BROOQH4m9pc2hRDDx61nr0woyb7QlRCNbNCO0H420fI"},
{"content":{"body":"Why not `assert(!Object.getOwnProperty(Object.prototype, 'then'))` ?","format":"org.matrix.custom.html","formatted_body":"Why not <code>assert(!Object.getOwnProperty(Object.prototype, 'then'))</code> ?","m.mentions":{"user_ids":["@naugtur:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$71XkYFgOkB2sKbr0ijIpQ0nlUifxCE996gi-rMUJcgc"}},"msgtype":"m.text"},"ts":1753810662396,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$iWCSr0lXfT0xwgW6kKVrHOVRYs_Z5TNlX-uynjRq_dM"},
{"content":{"body":"what if we changed the `in` operator to return `false` if there is a nonwritable-nonconfigurable `undefined`-valued data property","format":"org.matrix.custom.html","formatted_body":"what if we changed the <code>in</code> operator to return <code>false</code> if there is a nonwritable-nonconfigurable <code>undefined</code>-valued data property","m.mentions":{},"msgtype":"m.text"},"ts":1753810737202,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VBrI6t0GfRR85fp5__g0d6daPkSRc1NsN2zq2k4H59k"},
{"content":{"body":"Whooooooops","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$G1NvVHWNGT4bEqL5Ah542wsHbJAngti96DetH6LLBVI"}},"msgtype":"m.text"},"ts":1753810751857,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$cD1v47hG04CDSbOyRb5tNf0FcD0ORoRwabAZV0IB5a8"},
{"content":{"body":"so that we could just make `Object.prototype.then` permanently undefined without breaking people doing `'then' in foo`","format":"org.matrix.custom.html","formatted_body":"so that we could just make <code>Object.prototype.then</code> permanently undefined without breaking people doing <code>'then' in foo</code>","m.mentions":{},"msgtype":"m.text"},"ts":1753810753712,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$At5hZa4_YmwAsHXO0ngm1qQ7jawC74g7WSMQTKXKHPE"},
{"content":{"body":"My idea was to be future-compatible with a situation when there's a change to then on prototypes being ignored when considering a thenable","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$iWCSr0lXfT0xwgW6kKVrHOVRYs_Z5TNlX-uynjRq_dM"}},"msgtype":"m.text"},"ts":1753810761294,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$atEiGe9Bv3KdKKwwuIxx496e-FUf7Bg2Xm-6-uhK7Tk"},
{"content":{"body":"my immediate instinct is that would break a ton of things in subtle ways","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$VBrI6t0GfRR85fp5__g0d6daPkSRc1NsN2zq2k4H59k"}},"msgtype":"m.text"},"ts":1753810784405,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FeGaW7C6_ff6w8U9_yczOHzp2WBBa4PFUjmeFKGt3dU"},
{"content":{"body":"The TCQ queue didn't advance for me","m.mentions":{},"msgtype":"m.text"},"ts":1753810797908,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$esE6nFDqg-eYgWaCd63oKXHRuhiD0eRbxs0JPfFzBig"},
{"content":{"body":"I bet it would be fine, that situation doesn't come up much","m.mentions":{},"msgtype":"m.text"},"ts":1753810798175,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$saBnm0ogU07wVeEFZG1S4KShaiTeO_FVjJBqWW4V6r0"},
{"content":{"body":"still?","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$esE6nFDqg-eYgWaCd63oKXHRuhiD0eRbxs0JPfFzBig"}},"msgtype":"m.text"},"ts":1753811399730,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$WmG4K47Q5kWQcfgRdU5ZU4sU0Q6ZQgcEp485tCxe5_k"},
{"content":{"body":"bakkot: did I capture your suggestion correctly regarding stack accessor being a closure? https://github.com/tc39/proposal-error-capturestacktrace/issues/1#issuecomment-3133528880","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: did I capture your suggestion correctly regarding stack accessor being a closure? https://github.com/tc39/proposal-error-capturestacktrace/issues/1#issuecomment-3133528880","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1753812597385,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$bfTtwnfzmmI2oARQzquWgIv0ZziOcYZ7JoFx2qzhWLg"},
{"content":{"body":"yup","m.mentions":{},"msgtype":"m.text"},"ts":1753812615818,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v_vTCpdLkUjN0vFQgVvu9D6byyGCzODEeanzDANMa0g"}
]