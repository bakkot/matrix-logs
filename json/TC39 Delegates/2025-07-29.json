[
{"content":{"body":"Are the meetings recording audio or video? Or is it just text transcripts?","m.mentions":{},"msgtype":"m.text"},"ts":1753793964709,"senderName":"styfle","senderId":"@styfle:matrix.org","id":"$wNbgK9MS9lDcpc-hOOsdByGvm1ENffdCDu-U6sSud9g"},
{"content":{"body":"Just transcripts ","msgtype":"m.text"},"ts":1753794003917,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fNe0dTJ4FDz3xiCgXNRkXgyE2jtXPxBivOvl8q5f-cw"},
{"content":{"body":"Yes, and my understanding is that individual presenters are welcome to ask the committee for permission to record their own presentations, but not the conversation about their presentation, and publish in their own venues. This happens rarely enough that I don’t feel bad reminding seasoned delegates. :-)","m.mentions":{},"msgtype":"m.text"},"ts":1753799002715,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$L2oB8mcXHcc2CEyX05noYXH-boBQZYQ_jTAEQJ_bUN0"},
{"content":{"body":"@room we're starting in 7 mins!","m.mentions":{"room":true},"msgtype":"m.text"},"ts":1753808023142,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$SllcKJDwmNlqPJ90h4yosi1lVHU5gpV2kEnRARxKjCA"},
{"content":{"body":"Rich Hickey created Clojure, Rich Harris created Svelte","m.mentions":{},"msgtype":"m.text"},"ts":1753808945595,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$G1NvVHWNGT4bEqL5Ah542wsHbJAngti96DetH6LLBVI"},
{"content":{"body":"what if we just had an explicit \"IsProxy\"...","m.mentions":{},"msgtype":"m.text"},"ts":1753809594046,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8113syWPaqaei0xNAsLXNzyVs9zFQhE7FJttEI9N1-M"},
{"content":{"body":"I would also like to be able to tell if touching a random object in any way at all is going to have side effects","m.mentions":{},"msgtype":"m.text"},"ts":1753809607786,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WGCgNOAJakOrJ-8BBDDEsH_JEQRoCnqMq4xJBHhZK-g"},
{"content":{"body":"I think that's a capability I should be allowed to have","m.mentions":{},"msgtype":"m.text"},"ts":1753809615972,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$At17wdaK2JcdgZHN0Woda1JyheSjIrPIWVTHyziTHmQ"},
{"content":{"body":"@bakkot:matrix.org you'll still have accessors to worry about","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot</a> you&#39;ll still have accessors to worry about","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1753809665061,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Gs5rGtm5VYu7XrL6CWC0TnUayrMUlv6Vt-u0GO4P9EQ"},
{"content":{"body":"I can tell if a non-proxy has an accessor","m.mentions":{},"msgtype":"m.text"},"ts":1753809679172,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3eKfDIqLa_W2JlbtePaCJv0nx9dljFJhKTe5bbzqlpc"},
{"content":{"body":"Where did nicolo-ribaudo 's AsyncContext question go ??","format":"org.matrix.custom.html","formatted_body":"Where did <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> 's AsyncContext question go ??","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1753809805382,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$2RaTTtxPZCF_bD_xicz3XjFUUQ4leBBD_VpNboltuHI"},
{"content":{"body":"people can delete their own TCQ items","format":"org.matrix.custom.html","formatted_body":"people can delete their own TCQ items","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2RaTTtxPZCF_bD_xicz3XjFUUQ4leBBD_VpNboltuHI"}},"msgtype":"m.text"},"ts":1753809861415,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$X5gHtNX44a26Tu66GuYSfwxD32isuCrgtdcTitJmgZU"},
{"content":{"body":"I was interested in that question ;)","m.mentions":{},"msgtype":"m.text"},"ts":1753809879483,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$sxMPmjIWsn032gYL_LyWR4YtqR1WfcbYQloEaVckLE4"},
{"content":{"body":"you can always add it yourself","m.mentions":{},"msgtype":"m.text"},"ts":1753809923797,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_iVFlfKycBcqnW2TIT98G1miDz3-CBL-QByixXOJ6CM"},
{"content":{"body":"I was going to say \"Svelte will switch to AsyncContext rather than synchronously reading .then\", but probably svelte moving away from it in a few years means that we'll never be able to assume everybody updated anyway ","msgtype":"m.text"},"ts":1753809927407,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$O8UmGiiFM0wHxBz0_ConWGGo3Nolyxsnm4h7jaBcZnI"},
{"content":{"body":"you know _i'm_ gonna love a `Promise.isPromise`","format":"org.matrix.custom.html","formatted_body":"you know <em>i'm</em> gonna love a <code>Promise.isPromise</code>","m.mentions":{},"msgtype":"m.text"},"ts":1753810026327,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"},
{"content":{"body":"no lies detected","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"}},"msgtype":"m.text"},"ts":1753810050442,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Zq05QwuJ2zf_uiCe1GkyZdGKouV00kLEJr7b55wNQ_k"},
{"content":{"body":"styfle: I no longer have access to the private Vercel repos. Can you check if the AsyncLocalStroage polyfill I implemented for edge runtime usess a `.then` accessor?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@styfle:matrix.org\">styfle</a>: I no longer have access to the private Vercel repos. Can you check if the AsyncLocalStroage polyfill I implemented for edge runtime usess a <code>.then</code> accessor?","m.mentions":{"user_ids":["@styfle:matrix.org"]},"msgtype":"m.text"},"ts":1753810065483,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SpRiwrl7umN4K5ynEXFpOzKQ2_29znFLDqdd_dwf_P0"},
{"content":{"body":"Mathieu Hofman: `Symbol.unthenable ` is _another_ lookup","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: <code>Symbol.unthenable </code> is <em>another</em> lookup","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"msgtype":"m.text"},"ts":1753810320512,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3_APUMrBSMNXJKQzSQ-LetXYqYWlSwwJK-FqlTg0H6A"},
{"content":{"body":"that's the opposite of the point","m.mentions":{},"msgtype":"m.text"},"ts":1753810324917,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ebKCFt5dLslQ4mLalqi7u9mNaZTU73uIwZLterVGQco"},
{"content":{"body":"4 hours on the last day all for this topic!","m.mentions":{},"msgtype":"m.text"},"ts":1753810351846,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Qfg2yN7iYmsm0_9TOn_kMtSoZv0TWBNtkI1UtZWE5NM"},
{"content":{"body":"Right it'd require a non proxy check, and these to be non-configurable and non-writable, which is kinda meh","m.mentions":{},"msgtype":"m.text"},"ts":1753810370015,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NM1CRE32jY9nTHQU9YG8nXT0BzRI0Wd8LfT2oh5oBso"},
{"content":{"body":"just seems way worse than having an internal slot","m.mentions":{},"msgtype":"m.text"},"ts":1753810387999,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vqON5Mz5v-89PwnsnGAEAQNxKftv3f1e0TlZ33D4wmU"},
{"content":{"body":"* 4 hours on the last day all for this topic! React with 🫠 to vote in favour of this","m.mentions":{},"m.new_content":{"body":"4 hours on the last day all for this topic! React with 🫠 to vote in favour of this","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Qfg2yN7iYmsm0_9TOn_kMtSoZv0TWBNtkI1UtZWE5NM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810391660,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$6FfPmmec03D1tVUAslk5QrQai4ManYZsYIIfQqD2wgE"},
{"content":{"body":"I'd love a temp check on `Promise.isPromise` see if it'd be viable to bring as a proposal","format":"org.matrix.custom.html","formatted_body":"I'd love a temp check on <code>Promise.isPromise</code> see if it'd be viable to bring as a proposal","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Yd7L-tma9uC70O-86VFvPh4nsS1v1-veLaidY5zKPn0"}},"msgtype":"m.text"},"ts":1753810415892,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$anL1J3OtjM2nn2jW-u3kdteXELxIoBtY-AoCvPpZgoQ"},
{"content":{"body":"Would it also have `Promise.isThenable` ?","format":"org.matrix.custom.html","formatted_body":"Would it also have <code>Promise.isThenable</code> ?","m.mentions":{},"msgtype":"m.text"},"ts":1753810452863,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$n04Oyg-mzI43-r8mNJeFVeXjm1wOcyv3iQE2tBHnYl0"},
{"content":{"body":"you can sort of build it already by adding a `.constructor` t othe object","format":"org.matrix.custom.html","formatted_body":"you can sort of build it already by adding a <code>.constructor</code> t othe object","m.mentions":{},"msgtype":"m.text"},"ts":1753810461958,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wDtoExz2HAteaZnnOuzJM9bdtN3p_Y-O7yCAMehhhEw"},
{"content":{"body":"* you can sort of build it already by adding a `.constructor` getter to the object and then `await`ing it","format":"org.matrix.custom.html","formatted_body":"* you can sort of build it already by adding a <code>.constructor</code> getter to the object and then <code>await</code>ing it","m.mentions":{},"m.new_content":{"body":"you can sort of build it already by adding a `.constructor` getter to the object and then `await`ing it","format":"org.matrix.custom.html","formatted_body":"you can sort of build it already by adding a <code>.constructor</code> getter to the object and then <code>await</code>ing it","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wDtoExz2HAteaZnnOuzJM9bdtN3p_Y-O7yCAMehhhEw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810471159,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zlBIrJDzN0SGMqGto-E1NDh1uMHal-iMT89tnlJa4mw"},
{"content":{"body":"so... would be nice to have something better than that","m.mentions":{},"msgtype":"m.text"},"ts":1753810478466,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$J8w1GBMP6SGAYYN-sTAOVLGfECquF1hEoKfODl2rGAQ"},
{"content":{"body":"except no one is doing that afaict","m.mentions":{},"msgtype":"m.text"},"ts":1753810486877,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Mm4AZb-Smc3T9bRINNS17YcwoRQ0WGO2XQA8f2M0iWo"},
{"content":{"body":"`assert(!Promise.isThenable({}))` would be a good first line of program code","format":"org.matrix.custom.html","formatted_body":"<code>assert(!Promise.isThenable({}))</code> would be a good first line of program code","m.mentions":{},"msgtype":"m.text"},"ts":1753810487258,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$71XkYFgOkB2sKbr0ijIpQ0nlUifxCE996gi-rMUJcgc"},
{"content":{"body":"To be clear I would use `Promise.isPromise` to build a safe `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"To be clear I would use <code>Promise.isPromise</code> to build a safe <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"msgtype":"m.text"},"ts":1753810591352,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$AzD4ZLZaUthBsapv54r3snLKbRv38M57GxoG3n2YrH0"},
{"content":{"body":"* To be clear I would use `Promise.isPromise` to build a safe userland `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"* To be clear I would use <code>Promise.isPromise</code> to build a safe userland <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"m.new_content":{"body":"To be clear I would use `Promise.isPromise` to build a safe userland `Promise.safeResolve` and `Promise.withSafeResolvers` that introduces an extra tick unless the objects is an unmodified native promise.","format":"org.matrix.custom.html","formatted_body":"To be clear I would use <code>Promise.isPromise</code> to build a safe userland <code>Promise.safeResolve</code> and <code>Promise.withSafeResolvers</code> that introduces an extra tick unless the objects is an unmodified native promise.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$AzD4ZLZaUthBsapv54r3snLKbRv38M57GxoG3n2YrH0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753810598496,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$BROOQH4m9pc2hRDDx61nr0woyb7QlRCNbNCO0H420fI"},
{"content":{"body":"Why not `assert(!Object.getOwnProperty(Object.prototype, 'then'))` ?","format":"org.matrix.custom.html","formatted_body":"Why not <code>assert(!Object.getOwnProperty(Object.prototype, 'then'))</code> ?","m.mentions":{"user_ids":["@naugtur:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$71XkYFgOkB2sKbr0ijIpQ0nlUifxCE996gi-rMUJcgc"}},"msgtype":"m.text"},"ts":1753810662396,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$iWCSr0lXfT0xwgW6kKVrHOVRYs_Z5TNlX-uynjRq_dM"},
{"content":{"body":"what if we changed the `in` operator to return `false` if there is a nonwritable-nonconfigurable `undefined`-valued data property","format":"org.matrix.custom.html","formatted_body":"what if we changed the <code>in</code> operator to return <code>false</code> if there is a nonwritable-nonconfigurable <code>undefined</code>-valued data property","m.mentions":{},"msgtype":"m.text"},"ts":1753810737202,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VBrI6t0GfRR85fp5__g0d6daPkSRc1NsN2zq2k4H59k"},
{"content":{"body":"Whooooooops","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$G1NvVHWNGT4bEqL5Ah542wsHbJAngti96DetH6LLBVI"}},"msgtype":"m.text"},"ts":1753810751857,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$cD1v47hG04CDSbOyRb5tNf0FcD0ORoRwabAZV0IB5a8"},
{"content":{"body":"so that we could just make `Object.prototype.then` permanently undefined without breaking people doing `'then' in foo`","format":"org.matrix.custom.html","formatted_body":"so that we could just make <code>Object.prototype.then</code> permanently undefined without breaking people doing <code>'then' in foo</code>","m.mentions":{},"msgtype":"m.text"},"ts":1753810753712,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$At5hZa4_YmwAsHXO0ngm1qQ7jawC74g7WSMQTKXKHPE"},
{"content":{"body":"My idea was to be future-compatible with a situation when there's a change to then on prototypes being ignored when considering a thenable","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$iWCSr0lXfT0xwgW6kKVrHOVRYs_Z5TNlX-uynjRq_dM"}},"msgtype":"m.text"},"ts":1753810761294,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$atEiGe9Bv3KdKKwwuIxx496e-FUf7Bg2Xm-6-uhK7Tk"},
{"content":{"body":"my immediate instinct is that would break a ton of things in subtle ways","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$VBrI6t0GfRR85fp5__g0d6daPkSRc1NsN2zq2k4H59k"}},"msgtype":"m.text"},"ts":1753810784405,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FeGaW7C6_ff6w8U9_yczOHzp2WBBa4PFUjmeFKGt3dU"},
{"content":{"body":"The TCQ queue didn't advance for me","m.mentions":{},"msgtype":"m.text"},"ts":1753810797908,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$esE6nFDqg-eYgWaCd63oKXHRuhiD0eRbxs0JPfFzBig"},
{"content":{"body":"I bet it would be fine, that situation doesn't come up much","m.mentions":{},"msgtype":"m.text"},"ts":1753810798175,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$saBnm0ogU07wVeEFZG1S4KShaiTeO_FVjJBqWW4V6r0"},
{"content":{"body":"still?","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$esE6nFDqg-eYgWaCd63oKXHRuhiD0eRbxs0JPfFzBig"}},"msgtype":"m.text"},"ts":1753811399730,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$WmG4K47Q5kWQcfgRdU5ZU4sU0Q6ZQgcEp485tCxe5_k"},
{"content":{"body":"bakkot: did I capture your suggestion correctly regarding stack accessor being a closure? https://github.com/tc39/proposal-error-capturestacktrace/issues/1#issuecomment-3133528880","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: did I capture your suggestion correctly regarding stack accessor being a closure? https://github.com/tc39/proposal-error-capturestacktrace/issues/1#issuecomment-3133528880","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1753812597385,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$bfTtwnfzmmI2oARQzquWgIv0ZziOcYZ7JoFx2qzhWLg"},
{"content":{"body":"yup","m.mentions":{},"msgtype":"m.text"},"ts":1753812615818,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v_vTCpdLkUjN0vFQgVvu9D6byyGCzODEeanzDANMa0g"},
{"content":{"body":"This is one of the reasons I pushed for `static {}` to be included in the same edition as private fields, so that they were more likely to be transpiled in the same step to avoid any intermediate static private fields.","format":"org.matrix.custom.html","formatted_body":"This is one of the reasons I pushed for <code>static {}</code> to be included in the same edition as private fields, so that they were more likely to be transpiled in the same step to avoid any intermediate static private fields.","m.mentions":{},"msgtype":"m.text"},"ts":1753813333652,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$P2kbhNMkews7kw7mxpWwIFlS8WOzoeuNG7akT_87zsg"},
{"content":{"body":"not that people *can* object to babel making changes...","format":"org.matrix.custom.html","formatted_body":"not that people <em>can</em> object to babel making changes...","m.mentions":{},"msgtype":"m.text"},"ts":1753813464907,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Hm7GGRQ0IQCGNMKDU1KTxmeGPe0jlVmMSWo-93w1vVQ"},
{"content":{"body":"I think TCQ is still on \"Non-extensible Applies to Private status update\"","m.mentions":{},"msgtype":"m.text"},"ts":1753813772783,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$57Ixa7G7VMzkFDrMy6a0mZ2xGvUW4mBZRLnUiAAO2kU"},
{"content":{"body":"https://github.com/whatwg/webidl/issues/1487","m.mentions":{},"msgtype":"m.text"},"ts":1753814414982,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LxOyNUwBislfQ9HAqgenPMjseiXWJrjhMaYD_c4srlc"},
{"content":{"body":"sorry for the TCQ hiccups everyone, we're taking note of every bug and issue and will finally have the chance to get all the fixes in by the next meeting thanks to the volunteers working on the fork ","m.mentions":{},"msgtype":"m.text"},"ts":1753814921054,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$RDt1sr94RPTW73qIsxH8Ptx6Y83eYyeTb-aW4pLQPSY"},
{"content":{"body":"Back on my notes reminder: also don't forget to go clean up your summaries and conclusions. If you spoke them, go in quick and make them into bulleted lists or otherwise clear and concise copy","m.mentions":{},"msgtype":"m.text"},"ts":1753815586807,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$oGXkP-xXG4vfEmgVT4eRZYwdsyYEYWMxythP1NIvuzc"},
{"content":{"body":"As far as remembering to record your summaries and conclusions, I'll start reminding individual speakers (privately) tomorrow.","m.mentions":{},"msgtype":"m.text"},"ts":1753815795423,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$tY7Z4WN2hlrQk4ajDbP2atT8v-YxlpAhUIR7Utkd8eE"},
{"content":{"body":"we are restarting","m.mentions":{},"msgtype":"m.text"},"ts":1753819125573,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$TOc-pLeyVCprreTwjmSbR-RomD6yDs0iDPiSMSec2No"},
{"content":{"body":"I can take notes","m.mentions":{},"msgtype":"m.text"},"ts":1753819272126,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$sqiSkR9fnIz12cSgZk6_o1ch2uY0qrqHRFJ2i4YMz40"},
{"content":{"body":"I could do the next 30 minutes, but then I'm off to sleep","m.mentions":{},"msgtype":"m.text"},"ts":1753819328764,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$GCRBdaMLudJ2jEK7c5eDzSk-6CXc9P69-VvMneojUGU"},
{"content":{"body":"Idea: note taking duty falls on the delegates in the timezone of the meeting","m.mentions":{"user_ids":["@naugtur:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$GCRBdaMLudJ2jEK7c5eDzSk-6CXc9P69-VvMneojUGU"}},"msgtype":"m.text"},"ts":1753819623188,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$oxx343gQAX2p3UGPrVl7CyjjdF_DTcBZDXDasmdEiR0"},
{"content":{"body":"Love the slides telling me I gave feedback way too late, sorry Michael","m.mentions":{},"msgtype":"m.text"},"ts":1753819706170,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$yG29TLp5YJ1fW3t0AGcmBZBHnmPf3t3tZQNMZt7sCh8"},
{"content":{"body":"* Love the slide telling me I gave feedback way too late, sorry Michael","m.mentions":{},"m.new_content":{"body":"Love the slide telling me I gave feedback way too late, sorry Michael","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$yG29TLp5YJ1fW3t0AGcmBZBHnmPf3t3tZQNMZt7sCh8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753819711782,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$xWYnSdFM1wuRHpmRpyDX-dhzAJ80EikeC8uDt4oINnM"},
{"content":{"body":"Steve Hicks I think your topic is better as a reply to mine","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@stephenhicks:matrix.org\">Steve Hicks</a> I think your topic is better as a reply to mine","m.mentions":{"user_ids":["@stephenhicks:matrix.org"]},"msgtype":"m.text"},"ts":1753819829480,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jInxOFquUQATPskI82gZN2x71YM2nQM4uI4vxbDSvEI"},
{"content":{"body":"Since it seems to be the same","m.mentions":{},"msgtype":"m.text"},"ts":1753819832771,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ddpZJxyGMzOvybjMGdvhEPlTevvcsOe8Bk5XBS7QM8o"},
{"content":{"body":"* Since it seems to be the same concern I had in the issue","m.mentions":{},"m.new_content":{"body":"Since it seems to be the same concern I had in the issue","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ddpZJxyGMzOvybjMGdvhEPlTevvcsOe8Bk5XBS7QM8o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753819849231,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BKx_WhSTrWoY3HP_6GROmwLTaL4J2Fgwzp47ch0ka1Q"},
{"content":{"body":"should we do a temp check on the two options?","m.mentions":{},"msgtype":"m.text"},"ts":1753820489142,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v9ZryWBYzDPkSIaBbtKQ_Wpb1cPo8nDOhhR8c8br894"},
{"content":{"body":"* should we do a temp check on the two options? (2 methods vs param)","m.mentions":{},"m.new_content":{"body":"should we do a temp check on the two options? (2 methods vs param)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$v9ZryWBYzDPkSIaBbtKQ_Wpb1cPo8nDOhhR8c8br894","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753820512753,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yK7vHSiwwODjwm7BcSbN649zJpIXQ-u8f3NwT6z3QxA"},
{"content":{"body":"A required param would also suffice for this.","m.mentions":{},"msgtype":"m.text"},"ts":1753820629268,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4UY7RqWu1qtKfpA6r997daFUAfX2tqsrBTsGMPRo7UI"},
{"content":{"body":"true, but if the param is required then it of forces it to be a string for ergonomics, and because options bags are supposed to be for optional options","m.mentions":{},"msgtype":"m.text"},"ts":1753820689138,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Lowa0ugyb6ar6YPWS2GBNCkyHL-mB9-5VukqTUymtK4"},
{"content":{"body":"* true, but if the param is required then it forces it to be a string for ergonomics, and because options bags are supposed to be for optional options","m.mentions":{},"m.new_content":{"body":"true, but if the param is required then it forces it to be a string for ergonomics, and because options bags are supposed to be for optional options","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Lowa0ugyb6ar6YPWS2GBNCkyHL-mB9-5VukqTUymtK4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753820694709,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$q_f5EwtDP8k4Z0ISdnvnm26JhFbQCHDn0QEb9OG-RNQ"},
{"content":{"body":"Sorry, I'm (badly) trying to be an impartial moderator","m.mentions":{},"msgtype":"m.text"},"ts":1753820784203,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$DL718qi05NLtS1cBRbOLjIqyNw6mvIe2d0s_MXgUGNQ"},
{"content":{"body":"Moderators are entitled to opinions! :P","m.mentions":{},"msgtype":"m.text"},"ts":1753820812589,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$MB95B9o94umAn3tyKK4WRglm7ir93_tGZytv9NLOY7s"},
{"content":{"body":"* true, but/and if the param is required then it forces it to be a string for ergonomics, and because options bags are supposed to be for optional options","m.mentions":{},"m.new_content":{"body":"true, but/and if the param is required then it forces it to be a string for ergonomics, and because options bags are supposed to be for optional options","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Lowa0ugyb6ar6YPWS2GBNCkyHL-mB9-5VukqTUymtK4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753820889761,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$p3oTnncOWNhHtvve8RjIem7IpL9YrvQRTO1weJVXVSA"},
{"content":{"body":"waldemar:  I really dislike the \"with remainder\" naming because it implies to me that it's like how `chunks` gives you a truncated final chunk even in the case that the input is longer than the chunk size (if it is not a multiple)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>:  I really dislike the \"with remainder\" naming because it implies to me that it's like how <code>chunks</code> gives you a truncated final chunk even in the case that the input is longer than the chunk size (if it is not a multiple)","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"ts":1753820914463,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PYtkc37PM2fohLxnZkLadvxYhlW2mC8rmaQ7wUJf5FU"},
{"content":{"body":"why wouldn't we make the default \"throw\"?","m.mentions":{},"msgtype":"m.text"},"ts":1753820985973,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$na1nfx6cY0bvAnq969UGMwZP6WrYY7tcJ07AD_UVVgs"},
{"content":{"body":"Michael Ficarra doesn't like throwing","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> doesn't like throwing","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1753821028122,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RJ5Qy_yGzCUP3x0NAku5BdbUMIFj-e49-xl0k8K85zA"},
{"content":{"body":"i love throwing","m.mentions":{},"msgtype":"m.text"},"ts":1753821089926,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SQqnQA5_ftbDtEeT42rCJm2A2AgEqoXI5le-SUhz4sA"},
{"content":{"body":"I'd very much prefer to make it required than do \"throw\"","m.mentions":{},"msgtype":"m.text"},"ts":1753821109756,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$m_9S10ahgOMvn6opTaj9oHIZd8pH5pFcJwGcnSgP8II"},
{"content":{"body":"Throw is an exception that depends on the shape of the input, rather than on how you are using the API","m.mentions":{},"msgtype":"m.text"},"ts":1753821121547,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JaNAMT6p4nSC_aALGb2m-cwhFiehlywPqcTNHF6hJ3o"},
{"content":{"body":"Can we do a TG5 study to help with this? Seems like something easy to write research questions for","m.mentions":{},"msgtype":"m.text"},"ts":1753821224117,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$Qv4edGzzk1DwAnTtSyNj0JewN4xWG5uMBzdSlmLscDE"},
{"content":{"body":"we have lots of exceptions that depend on the shape of the input? that's totally normal","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$JaNAMT6p4nSC_aALGb2m-cwhFiehlywPqcTNHF6hJ3o"}},"msgtype":"m.text"},"ts":1753821265117,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TDBQjPz4e_It0j-mz_61PzZzVooNLwJcUESCi_9nMQw"},
{"content":{"body":"same","m.mentions":{},"msgtype":"m.text"},"ts":1753821273026,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Vwzdhx3jqfnUorhkC4EeTJaRgE3YCfsKDyiIvf49nwo"},
{"content":{"body":"sorry...","m.mentions":{},"msgtype":"m.text"},"ts":1753821282696,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$MixB87YRvgOVj7y0MOa2LQpRwsVB-WBQ9oOMKZ5OCBk"},
{"content":{"body":"\"this input is too small to handle the outputs you asked for\" is a very normal case for throwing","m.mentions":{},"msgtype":"m.text"},"ts":1753821286694,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WjXDEBYqi5r1UREWYCtxfnpEDpK3ig-rerWJEGsNPqQ"},
{"content":{"body":"Well it doesn't mean that it's good -- it's for example common to forger that if you don't pass the second argument with .reduce it could throw, and you forget to test the empty array case","m.mentions":{},"msgtype":"m.text"},"ts":1753821364035,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$GRiS6gKBIwNlEnCwXLCpZ622oSR7DsLxRlUk9rY2tYg"},
{"content":{"body":"* Well it doesn't mean that it's good -- it's for example common to forget that if you don't pass the second argument with .reduce it could throw, and you forget to test the empty array case","m.mentions":{},"m.new_content":{"body":"Well it doesn't mean that it's good -- it's for example common to forget that if you don't pass the second argument with .reduce it could throw, and you forget to test the empty array case","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GRiS6gKBIwNlEnCwXLCpZ622oSR7DsLxRlUk9rY2tYg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753821369876,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pi1CbmyHAkmHx-_dQXosT6pvsCeXk2kmS26ULjMK-bk"},
{"content":{"body":"well, sure, but that's still the right behavior for that method","m.mentions":{},"msgtype":"m.text"},"ts":1753821404897,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xKalcSjFsjRTjS1VWmPfHEHbYnvTlhWhxct05xkuDXg"},
{"content":{"body":"bad inputs are a fact about the world and throwing on them is usually the best option","m.mentions":{},"msgtype":"m.text"},"ts":1753821451199,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7f2Sti2wMu3FHpx-oI9-s_51hDswoBY0futjm_Rb7Lk"},
{"content":{"body":"the problem isn't the API, it's the bad input","m.mentions":{},"msgtype":"m.text"},"ts":1753821460854,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PumLCQD9xqP0UhYa4THNw-w1heRU1n8bmhIdJegl0Yw"},
{"content":{"body":"here, you can hang it on your wall","format":"org.matrix.custom.html","formatted_body":"here, you can hang it on your wall","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yG29TLp5YJ1fW3t0AGcmBZBHnmPf3t3tZQNMZt7sCh8"}},"msgtype":"m.text"},"ts":1753821464579,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$RIk83cSMStzg_inhA4e2iJkTDq1c4ZJ08ndg7v06NA0"},
{"content":{"body":"we literally just advanced \"upsert\" to Stage 3, I don't think we have much of an appetite for renaming proposals","m.mentions":{},"msgtype":"m.text"},"ts":1753822659002,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$V0M5l9jZX9Gn5dnZHhGKI7GfB-HQ773TZpwE5hjq93Q"},
{"content":{"body":"that's why it's important to name your proposals appropriately (focusing on the problem statement) from the beginning","m.mentions":{},"msgtype":"m.text"},"ts":1753822685781,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TdQs4WQlZhK5_TJM2_kfW8KyA6VlhMXRkJW_WXHqq2E"},
{"content":{"body":"in fairness the problem statement here is also reduced from the original","m.mentions":{},"msgtype":"m.text"},"ts":1753822723320,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cFrL3ZdAkKFye9VcnPs2G08EeJhOfeWq3TkcHZgMMLs"},
{"content":{"body":"wasn't upsert reduced as well?","m.mentions":{},"msgtype":"m.text"},"ts":1753822736533,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$TYMUjd1fbcoDT0oANs07tLNxySJFBOq4i3GpHILjoaM"},
{"content":{"body":"true","m.mentions":{},"msgtype":"m.text"},"ts":1753822748344,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p-70DKQ7PdWgCFOUVTsMNKyypp5FhisacQYrVBChU14"},
{"content":{"body":"FYI we essentially agreed to drop `currency` https://github.com/tc39/proposal-measure/pull/44","format":"org.matrix.custom.html","formatted_body":"FYI we essentially agreed to drop <code>currency</code> https://github.com/tc39/proposal-measure/pull/44","m.mentions":{},"msgtype":"m.text"},"ts":1753823795908,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$Nmp8VbBG0h1P8fOcWPZ2K64Wo_2PJf07UUtVPUy8GQY"},
{"content":{"body":"(so the slides are technically up-to-date but don't quite reflect current thinking among those working on these ideas)","m.mentions":{},"msgtype":"m.text"},"ts":1753823825882,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$vdEsPSsy_AWcfzKSJ7-t2SNuzOxWS_Dgk44xcves4jA"},
{"content":{"body":"I am curious if anyone else shares my concern about this not being super well-motivated as a language feature","m.mentions":{},"msgtype":"m.text"},"ts":1753824644463,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0d1SU4mH3QPnfT3-lLtR1yZpPIJeUuDmKWtAlfceq3k"},
{"content":{"body":"About internal slots: the Temporal proposal looks at slots in order to choose a formatting code path in Intl.DateTimeFormat: https://tc39.es/proposal-temporal/#sec-temporal-handledatetimevalue","m.mentions":{},"msgtype":"m.text"},"ts":1753824747696,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$bFpGKIyP78j7HjMrSvlZLhs-dpNnFX6_JdjevaYRtow"},
{"content":{"body":"is that AO called on arguments, or just the receiver?","m.mentions":{},"msgtype":"m.text"},"ts":1753824811180,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DWnZhe8mUqxAi40QVXEURT94xza3rbllQNzo7zb9WeE"},
{"content":{"body":"I guess presumably arguments given it's DateTimeFormat","m.mentions":{},"msgtype":"m.text"},"ts":1753824820492,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4QkUX-0yjOWjdZG9MN8l0a1UC17xn0wFxlczYWrggBc"},
{"content":{"body":"And it looks like it reads the inner `[ISODate]` slot to figure out what to actually render","format":"org.matrix.custom.html","formatted_body":"And it looks like it reads the inner <code>[ISODate]</code> slot to figure out what to actually render","m.mentions":{},"msgtype":"m.text"},"ts":1753824836796,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$-vkqD23Jc6kBucYuauI0NF-RXbSebKa-DQoqlo37vjI"},
{"content":{"body":"i think we can just presuppose that internal slots aren't accessed on arguments of prototype methods","m.mentions":{},"msgtype":"m.text"},"ts":1753824838637,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_Ty59S_9YgQDI1-UR0eSMCCiZ4OSKZp8SWtJ7xf5hH0"},
{"content":{"body":"This is in `Intl.DateTimeFormat.prototype.format`, when passing a Temporal instance","format":"org.matrix.custom.html","formatted_body":"This is in <code>Intl.DateTimeFormat.prototype.format</code>, when passing a Temporal instance","m.mentions":{},"msgtype":"m.text"},"ts":1753824857165,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$M6eOYWdsERDS82V7iLtM0tJT8V0ynE8vGYT6anEZ39c"},
{"content":{"body":"but for a true slotted object, an implementation would presumably be able to have a fast path","m.mentions":{},"msgtype":"m.text"},"ts":1753824858668,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$et-iZFzBjnd_iJA3H1c6GmllXoHx2eDS8sh47tCOKP8"},
{"content":{"body":"I like the idea of having a precedent-setting example of the protocol needed by Intl, and also like having “big decimal”, such that “decimal” might strictly show up as a typed array view, as is consistent with uint64 being reified as bigint.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0d1SU4mH3QPnfT3-lLtR1yZpPIJeUuDmKWtAlfceq3k"}},"msgtype":"m.text"},"ts":1753824912110,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$ZDV6IIdAyZGPDvbp0kAbJ6JlKWZ-qL8yuvPgbxE5JYg"},
{"content":{"body":"IIRC, the champions proposed this shape for Intl.DTF so that we could use fast paths and avoid calling user code","m.mentions":{},"msgtype":"m.text"},"ts":1753824912167,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$YRa3MHmmoS1FbhFJa32uqeneuHeufseTh66kcwSPdkc"},
{"content":{"body":"the usual pattern in Temporal, which I assumed would extend to Intl.DTF, is to check for the slots but fall back to reading properties if the slots are not present https://tc39.es/proposal-temporal/#sec-temporal.plaindatetime.from","m.mentions":{},"msgtype":"m.text"},"ts":1753824968244,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bz-dUkN1KsOpuYoc7gRxvxC0-rjlXb3pCrJ_IDfaalE"},
{"content":{"body":"Thanks for noting that. It does suggest an impasse.","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YRa3MHmmoS1FbhFJa32uqeneuHeufseTh66kcwSPdkc"}},"msgtype":"m.text"},"ts":1753825008662,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$GuMMNWcJoNR4YVHLjZ8iSwzFYHsqPE-7MNUkNlQi18Y"},
{"content":{"body":"I’ll run this by Mark.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$bz-dUkN1KsOpuYoc7gRxvxC0-rjlXb3pCrJ_IDfaalE"}},"msgtype":"m.text"},"ts":1753825054988,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$77ZciFnMI92HhIAqYb8t75Pb-UCp_THUo-aqBggEu3Y"},
{"content":{"body":"We could have a built-in class *and* a same-shaped protocol, and fast-path the built-in one, yeah.","format":"org.matrix.custom.html","formatted_body":"We could have a built-in class <em>and</em> a same-shaped protocol, and fast-path the built-in one, yeah.","m.mentions":{},"msgtype":"m.text"},"ts":1753825148117,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ks3dSgXf4v-ynp9AipZQlV5TPB1gQ6MnOkSSCyxzkPA"},
{"content":{"body":"My intuition is that inspecting internal slots and falling back to properties would settle the issue for purposes of membrane transparency, but pending response from MarkM.","m.mentions":{},"msgtype":"m.text"},"ts":1753825242482,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$80r_aWT2NALwcrS6opL5OgOn6iG7YISjc-FkajcoVxc"},
{"content":{"body":"it's _technically_ not transparent in that you can take an instance of the built-in class and define own getters which make the observable properties different from the internal slots, and then a Proxy for that will not behave like the thing itself, but like... whatever","format":"org.matrix.custom.html","formatted_body":"it's <em>technically</em> not transparent in that you can take an instance of the built-in class and define own getters which make the observable properties different from the internal slots, and then a Proxy for that will not behave like the thing itself, but like... whatever","m.mentions":{},"msgtype":"m.text"},"ts":1753825264048,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bHgyti8GDbxinbpUStfJxiP9sYLQYriwk32MaJB4QcQ"},
{"content":{"body":"Aye. I’m still absorbing how far the goalpost of “practical” in “practical membrane transparency” can move. I suspect that this is practical.","m.mentions":{},"msgtype":"m.text"},"ts":1753825345099,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$_YE2U94q559zWsxZekrSgoJolmfqdGOgfd3cw8FWZ18"},
{"content":{"body":"might be worth extending Intl.DTF to do the same thing, if practical","m.mentions":{},"msgtype":"m.text"},"ts":1753825411929,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GRZsbN5GW2qkWrs3KPCou0fKQhazgg5ypvZ6GgjcYcs"},
{"content":{"body":"Could I use this to tell if I have a Proxy wrapped object?","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$80r_aWT2NALwcrS6opL5OgOn6iG7YISjc-FkajcoVxc"}},"msgtype":"m.text"},"ts":1753825457660,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4deMJ9T-sfKky7RacV1odbBz6u_MGdimw84tTY-8JyI"},
{"content":{"body":"Re: promise.then proposal suggestion about not impacting objects without a .then property","m.mentions":{},"msgtype":"m.text"},"ts":1753825475905,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$FBAzg6s67eA3WCnF1lIqd7KZ8M-YOb0jxj_lzedJw2E"},
{"content":{"body":"No, it would look like a plain object with the same shape but no internal slot","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4deMJ9T-sfKky7RacV1odbBz6u_MGdimw84tTY-8JyI"}},"msgtype":"m.text"},"ts":1753825497413,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LE6yB4Ift6PqMeFoqz7inzqdg144fotAh2QzQYo-Pqg"},
{"content":{"body":"It would look like a polyfilled version","m.mentions":{},"msgtype":"m.text"},"ts":1753825520493,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ui_caBJGt09xoQh0MYCAb19fFXf4eWiUUBGEbdp2ZkM"},
{"content":{"body":"Yah, but I could set an accessor for the field and see if it's accessed?","m.mentions":{},"msgtype":"m.text"},"ts":1753825523244,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ulMwJdRCciIuq1W64x-wVzo7bPbKRu-kcBCOxK5Dl30"},
{"content":{"body":"it would be accessed for both a proxy and a plain object","m.mentions":{},"msgtype":"m.text"},"ts":1753825538175,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wH6x-kjLNGOiJS6KaHNYdfPaFR-BBx68EsUWsL2kPJE"},
{"content":{"body":"this allows you to distinguish a Proxy for a Temporal object from a non-Proxy'd Temporal object","m.mentions":{},"msgtype":"m.text"},"ts":1753825555931,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e6zVuG1Mrv0QoZtPSxk9Msaue0td8vIPzUNxx3K0XfQ"},
{"content":{"body":"it does not allow you to identify arbitrary Proxies","m.mentions":{},"msgtype":"m.text"},"ts":1753825564239,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G9yYCA5B2xzV-sy0KgkScWy8ZJoroyGFQBVDhEYwBl4"},
{"content":{"body":"and all the methods which look at the slot on their `this` also distinguish a Proxy for a Temporal object from a non-Proxy'd Temporal object","format":"org.matrix.custom.html","formatted_body":"and all the methods which look at the slot on their <code>this</code> also distinguish a Proxy for a Temporal object from a non-Proxy'd Temporal object","m.mentions":{},"msgtype":"m.text"},"ts":1753825593220,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zOJtrvYonaoQIE9w5FAYDTcGhfPpuDOw10_Lr4eiC-s"},
{"content":{"body":"so it's not a new capability","m.mentions":{},"msgtype":"m.text"},"ts":1753825602456,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$t7s3lQ8jnPlwUI93WKLVAkpCFQrfF-aqcsbHQyEtr20"},
{"content":{"body":"Wouldn't the method invoke on it's target? Usually this is a throw when invoking on a non-instance directly.","m.mentions":{},"msgtype":"m.text"},"ts":1753825639156,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$T_4uhYK2w0xsx92ck1nTfih3opalysws6YYyucXuamE"},
{"content":{"body":"Justin Ridgewell could you maybe convert Jordan and my topics as replied to the current topic?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> could you maybe convert Jordan and my topics as replied to the current topic?","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"msgtype":"m.text"},"ts":1753825664276,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$M9hX1UmNmf5RoharQJTNEd1SpZY1JnzkQlshXXNh5s0"},
{"content":{"body":"right, and \"non-instance\" here includes \"proxy for an instance\"","m.mentions":{},"msgtype":"m.text"},"ts":1753825665752,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vGBw3QTVL61LuDsUWXa7QvC2bYOBqeiKyI3a5tV3yTk"},
{"content":{"body":"* Justin Ridgewell could you maybe convert Jordan and my topics as replies to the current topic?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> could you maybe convert Jordan and my topics as replies to the current topic?","m.mentions":{},"m.new_content":{"body":"Justin Ridgewell could you maybe convert Jordan and my topics as replies to the current topic?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> could you maybe convert Jordan and my topics as replies to the current topic?","m.mentions":{"user_ids":["@jridgewell:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$M9hX1UmNmf5RoharQJTNEd1SpZY1JnzkQlshXXNh5s0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753825671334,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$p1Apm-xFyDf6eHmfIzeJJmULoqfMB1s4tXVzYbgHPTM"},
{"content":{"body":"Done","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$M9hX1UmNmf5RoharQJTNEd1SpZY1JnzkQlshXXNh5s0"}},"msgtype":"m.text"},"ts":1753825698700,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$b9QcYLhgsFjkTEK86uRshmcxsJnVjV8__N3pmhDgE_4"},
{"content":{"body":"+1 to justin","m.mentions":{},"msgtype":"m.text"},"ts":1753826051351,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f31NDZK-ij_70B62E8h1dsUy3m-JOFSNKg1M0G9a3yY"},
{"content":{"body":"* +1 to justin, sigfig shrinkage only","m.mentions":{},"m.new_content":{"body":"+1 to justin, sigfig shrinkage only","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$f31NDZK-ij_70B62E8h1dsUy3m-JOFSNKg1M0G9a3yY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753826073027,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6Rn55wb-npvLm6Gai4ORbj310obkR-pVNxIeHoOkruk"},
{"content":{"body":"oh hm, that's also a good point for currency from waldemar, i now hold contradictory beliefs","m.mentions":{},"msgtype":"m.text"},"ts":1753826123506,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GZyNkjLFJJYyBRjehky8PfcLdOpm77SmJLqJNvsiYWw"}
]