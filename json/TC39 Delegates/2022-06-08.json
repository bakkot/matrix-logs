[
{"content":{"body":"so are we using the Igalia or the 8x8 Jitsi today? Rob Palmer ryzokuken ","format":"org.matrix.custom.html","formatted_body":"so are we using the Igalia or the 8x8 Jitsi today? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so are we using the Igalia or the 8x8 Jitsi today? Rob Palmer ryzokuken ","mimetype":"text/plain"},{"body":"so are we using the Igalia or the 8x8 Jitsi today? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>","mimetype":"text/html"}]},"ts":1654698171442,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rCL7R_kkOtkdsnYMiykAQQWFYBJ6KSAoxpJAT-wrSWc"},
{"content":{"body":"Igalia","msgtype":"m.text","org.matrix.msc1767.text":"Igalia"},"ts":1654698180128,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$gB6yGPPov7HyDSRB0XXwxyeyrs3pNxOSnlA1rC4ptoA"},
{"content":{"body":"k please comment on https://github.com/tc39/Reflector/issues/430","msgtype":"m.text","org.matrix.msc1767.text":"k please comment on https://github.com/tc39/Reflector/issues/430"},"ts":1654698200953,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6kVR1PBw6iqOk7EEyy1r3ltQk8h1c8eXMVHvLlVSb2I"},
{"content":{"body":"I suppose I could test if 8x8 has gotten better, but there's no way to load test without wasting everyone's time","msgtype":"m.text","org.matrix.msc1767.text":"I suppose I could test if 8x8 has gotten better, but there's no way to load test without wasting everyone's time"},"ts":1654698214126,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$szV0Foz1VV-V_0GqFQDdINYMl-TpAitFGZg2-PCz9nE"},
{"content":{"body":"Can we have this item first if it is possible?\n\n> `60m | Import Reflection status update & discussion | Guy Bedford & Luca Casonato`","format":"org.matrix.custom.html","formatted_body":"<p>Can we have this item first if it is possible?</p>\n<blockquote>\n<p><code>60m | Import Reflection status update &amp; discussion | Guy Bedford &amp; Luca Casonato</code></p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Can we have this item first if it is possible?\n\n> `60m | Import Reflection status update & discussion | Guy Bedford & Luca Casonato`","mimetype":"text/plain"},{"body":"<p>Can we have this item first if it is possible?</p>\n<blockquote>\n<p><code>60m | Import Reflection status update &amp; discussion | Guy Bedford &amp; Luca Casonato</code></p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1654698447408,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$auePuit5cufZ7qadyrDCpScgrTL2yCmXDAKw35E5E4I"},
{"content":{"body":"Let me check Jack Works ","format":"org.matrix.custom.html","formatted_body":"Let me check <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me check Jack Works ","mimetype":"text/plain"},{"body":"Let me check <a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>","mimetype":"text/html"}]},"ts":1654698467309,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rTO7Nk0Gp0WtYVFrdkhwRL0gExQh9b8nWjJ7BuyKcOc"},
{"content":{"body":"Works for me, but I am not sure if Guy is going to be there yet","msgtype":"m.text"},"ts":1654698525630,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$NeUJZ01D-jEjdOqLhD2NoGiUvXpM5gQQAgXUGJLLeWU"},
{"content":{"body":"And he really needs to be there","msgtype":"m.text"},"ts":1654698542733,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Hyalhc5uPicjnNRnmQiz_zy-79HkZ46-bpS04ywmsts"},
{"content":{"body":"Luca Casonato: could you ask Guy about their availability?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: could you ask Guy about their availability?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Luca Casonato: could you ask Guy about their availability?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: could you ask Guy about their availability?","mimetype":"text/html"}]},"ts":1654698607157,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$kCpwEmA9zv3AoVwoqTTflAK7jxIdwx2w0skXmNTNF-E"},
{"content":{"body":"I also would like to be there. Accelerating baby feeding. :-)","msgtype":"m.text","org.matrix.msc1767.text":"I also would like to be there. Accelerating baby feeding. :-)"},"ts":1654699684539,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$csWAqkGbbDThFoY-GfzliP0ZMT_FNEpBsNFBxWE8gb4"},
{"content":{"body":"looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?","msgtype":"m.text","org.matrix.msc1767.text":"looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?"},"ts":1654700111508,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kkCqJPPlCmRrBPsFXbPToGV6764iRcWNygEV5b3zcPI"},
{"content":{"body":" * looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?","m.new_content":{"body":"looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?","msgtype":"m.text","org.matrix.msc1767.text":"looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?"},"m.relates_to":{"event_id":"$kkCqJPPlCmRrBPsFXbPToGV6764iRcWNygEV5b3zcPI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * looks like it won't let anyone into the igalia jitsi until the \"conference has started\"? can we start that so people can join early?"},"ts":1654700135536,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gROT1--b9PlJ49rKqAPVHMff-ufZvXCjahshVYTmtBU"},
{"content":{"body":"We are starting plenary in 1 minute on the Igalia server","msgtype":"m.text","org.matrix.msc1767.text":"We are starting plenary in 1 minute on the Igalia server"},"ts":1654700396383,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$YQqS0hhDD1o7MjkWvadwhE7wYstiMuCcd2PIARe2Lbo"},
{"content":{"body":"hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in","msgtype":"m.text","org.matrix.msc1767.text":"hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in"},"ts":1654700832124,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yYruSr52pMQByykcmWMGExH1IQWy66s3E2mWxaQ-QtQ"},
{"content":{"body":" * hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in","m.new_content":{"body":"hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in","msgtype":"m.text","org.matrix.msc1767.text":"hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in"},"m.relates_to":{"event_id":"$yYruSr52pMQByykcmWMGExH1IQWy66s3E2mWxaQ-QtQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * hm, jitsi just booted me out; i had to completely disconnect and reconnect before it would let me back in"},"ts":1654700879938,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TS1PItgAmSX70xcmHxw00PKdUKySLuGRzQKt9q12-28"},
{"content":{"body":"> <@rbuckton:matrix.org> TS erases the `this` parameter currently. Some of these runtime semantics would actually be in conflict with TS (i.e., potentially disallowing `new F()`).\n\nTS already report error if `F` is declared as `F(this: X)`, so I don't understand how it could conflict with TS...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5wFdtwCBfVns_QHDiRFYhVjPLW2VO6-cZd755I9VYPk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>TS erases the <code>this</code> parameter currently. Some of these runtime semantics would actually be in conflict with TS (i.e., potentially disallowing <code>new F()</code>).</blockquote></mx-reply>TS already report error if <code>F</code> is declared as <code>F(this: X)</code>, so I don't understand how it could conflict with TS...","m.relates_to":{"m.in_reply_to":{"event_id":"$5wFdtwCBfVns_QHDiRFYhVjPLW2VO6-cZd755I9VYPk"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> TS erases the `this` parameter currently. Some of these runtime semantics would actually be in conflict with TS (i.e., potentially disallowing `new F()`).\n\nTS already report error if `F` is declared as `F(this: X)`, so I don't understand how it could conflict with TS...","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5wFdtwCBfVns_QHDiRFYhVjPLW2VO6-cZd755I9VYPk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>TS erases the <code>this</code> parameter currently. Some of these runtime semantics would actually be in conflict with TS (i.e., potentially disallowing <code>new F()</code>).</blockquote></mx-reply>TS already report error if <code>F</code> is declared as <code>F(this: X)</code>, so I don't understand how it could conflict with TS...","mimetype":"text/html"}]},"ts":1654701881487,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$OcHlDs50sJxwIBmngPWWac3RN2JYoAGpoIvCAEqq6Yo"},
{"content":{"body":"It strikes me that all the examples of regex patterns with catastrophic backtracking in this presentation are very contrived, doing things it would be very strange for a human to write, like `/(a+)*/`. Anyone know a good realistic case?","format":"org.matrix.custom.html","formatted_body":"It strikes me that all the examples of regex patterns with catastrophic backtracking in this presentation are very contrived, doing things it would be very strange for a human to write, like <code>/(a+)*/</code>. Anyone know a good realistic case?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It strikes me that all the examples of regex patterns with catastrophic backtracking in this presentation are very contrived, doing things it would be very strange for a human to write, like `/(a+)*/`. Anyone know a good realistic case?","mimetype":"text/plain"},{"body":"It strikes me that all the examples of regex patterns with catastrophic backtracking in this presentation are very contrived, doing things it would be very strange for a human to write, like <code>/(a+)*/</code>. Anyone know a good realistic case?","mimetype":"text/html"}]},"ts":1654701881668,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$HzbPrmUflXnm73xI99qM2yOnUb_qKTM7w71ftvqB4kI"},
{"content":{"body":"My old manager DOS'd all of Google with a catastrophic backtrack","msgtype":"m.text","org.matrix.msc1767.text":"My old manager DOS'd all of Google with a catastrophic backtrack"},"ts":1654701929935,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4-VNe1CJC_3TnQLXdE2IQsfGBm--k5YnHO5tuwKz_24"},
{"content":{"body":"> <@yulia:mozilla.org> oh, static methods with this is a bit weird? to me?\n\nYeah, it's weird, and easy to forget and make mistake. So `static foo(this) {}` at least self-document the weirdness and can protect the users if have proper runtime semantic.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$L-XuBnwj0ISgkp39zqlb8k-p8IB7DJKTaw1tjC1VKHE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>oh, static methods with this is a bit weird? to me? </blockquote></mx-reply>Yeah, it's weird, and easy to forget and make mistake. So <code>static foo(this) {}</code> at least self-document the weirdness and can protect the users if have proper runtime semantic.","m.relates_to":{"m.in_reply_to":{"event_id":"$L-XuBnwj0ISgkp39zqlb8k-p8IB7DJKTaw1tjC1VKHE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> oh, static methods with this is a bit weird? to me?\n\nYeah, it's weird, and easy to forget and make mistake. So `static foo(this) {}` at least self-document the weirdness and can protect the users if have proper runtime semantic.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$L-XuBnwj0ISgkp39zqlb8k-p8IB7DJKTaw1tjC1VKHE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>oh, static methods with this is a bit weird? to me? </blockquote></mx-reply>Yeah, it's weird, and easy to forget and make mistake. So <code>static foo(this) {}</code> at least self-document the weirdness and can protect the users if have proper runtime semantic.","mimetype":"text/html"}]},"ts":1654702023271,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$elWWdSTP9U1uNfSzMM1tF5bd9gYd2OqnGyN0JsnVXCI"},
{"content":{"body":"I ask more with the idea of making the motivation of the proposal stronger than as an objection.","msgtype":"m.text","org.matrix.msc1767.text":"I ask more with the idea of making the motivation of the proposal stronger than as an objection."},"ts":1654702040458,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$P3z_2cJLk6D84Y0ASJjdXlVze8YQN_I28yNfpcQbgE4"},
{"content":{"body":"cl/27372225","msgtype":"m.text","org.matrix.msc1767.text":"cl/27372225"},"ts":1654702158121,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$-eYmoyWesJv6nIFZnTu2JsrV8M4QOEmKnUMP9OOmO7c"},
{"content":{"body":"> <@jackworks:matrix.org> If TS emits `function f(this) {}`, it will fail when there is no `this`\n> But if TS emits `function f() {}`, it require TS to emit different code based on the type\n\nIf we have optional syntax `param?` also in JS (type annotation proposal has that syntax), we could solve that. Another option is allow `f(this = defaultValue)`.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Nbd4_HzUZHvltIBWGhzlB6YOAPorkmHcc9ADLFFZqbU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>If TS emits <code>function f(this) {}</code>, it will fail when there is no <code>this</code><br />But if TS emits <code>function f() {}</code>, it require TS to emit different code based on the type</blockquote></mx-reply>If we have optional syntax <code>param?</code> also in JS (type annotation proposal has that syntax), we could solve that. Another option is allow <code>f(this = defaultValue)</code>.","m.relates_to":{"m.in_reply_to":{"event_id":"$Nbd4_HzUZHvltIBWGhzlB6YOAPorkmHcc9ADLFFZqbU"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> If TS emits `function f(this) {}`, it will fail when there is no `this`\n> But if TS emits `function f() {}`, it require TS to emit different code based on the type\n\nIf we have optional syntax `param?` also in JS (type annotation proposal has that syntax), we could solve that. Another option is allow `f(this = defaultValue)`.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Nbd4_HzUZHvltIBWGhzlB6YOAPorkmHcc9ADLFFZqbU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>If TS emits <code>function f(this) {}</code>, it will fail when there is no <code>this</code><br />But if TS emits <code>function f() {}</code>, it require TS to emit different code based on the type</blockquote></mx-reply>If we have optional syntax <code>param?</code> also in JS (type annotation proposal has that syntax), we could solve that. Another option is allow <code>f(this = defaultValue)</code>.","mimetype":"text/html"}]},"ts":1654702164223,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Ts4Dqw7LBDYCRrrISjI0yYZLd3RCBzsRO8LB3YP_BXo"},
{"content":{"body":"> <@shuyuguo:matrix.org> that seems like circular reasoning. this is clearly *widening* the gap\n\nThat's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$hjx6H0GQ61EafzN_NC7q5T_N5BZnljlPu8TQphgUmEM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>that seems like circular reasoning. this is clearly <em>widening</em> the gap</blockquote></mx-reply>That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.","m.relates_to":{"m.in_reply_to":{"event_id":"$hjx6H0GQ61EafzN_NC7q5T_N5BZnljlPu8TQphgUmEM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> that seems like circular reasoning. this is clearly *widening* the gap\n\nThat's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$hjx6H0GQ61EafzN_NC7q5T_N5BZnljlPu8TQphgUmEM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>that seems like circular reasoning. this is clearly <em>widening</em> the gap</blockquote></mx-reply>That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.","mimetype":"text/html"}]},"ts":1654702442070,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Xrv4YuUj4CBZRFdfnILij7Su2mATbiADVBUaPEO1sLQ"},
{"content":{"body":"I kind of wish we had added support for atomic groups BEFORE making that decision about `\\p` atomicity","format":"org.matrix.custom.html","formatted_body":"I kind of wish we had added support for atomic groups BEFORE making that decision about <code>\\p</code> atomicity","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I kind of wish we had added support for atomic groups BEFORE making that decision about `\\p` atomicity","mimetype":"text/plain"},{"body":"I kind of wish we had added support for atomic groups BEFORE making that decision about <code>\\p</code> atomicity","mimetype":"text/html"}]},"ts":1654702565786,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$z4Nb-H5CIhXiXddtWBd2oKd4eKlcm6gHm4XaWUf5bs0"},
{"content":{"body":"because if this proposal fails to advance, what do we even do?","msgtype":"m.text","org.matrix.msc1767.text":"because if this proposal fails to advance, what do we even do?"},"ts":1654702585481,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9eMt6mO3Dc5K4s4E1VvwwIl3yRcZGlmrXMRc0CTYq3E"},
{"content":{"body":"Atomic groups aren't necessary for atomic behavior, they just make it more approachable","msgtype":"m.text","org.matrix.msc1767.text":"Atomic groups aren't necessary for atomic behavior, they just make it more approachable"},"ts":1654702634028,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zw0Ilhi-Ni0SfyM6rSWmlG8IDtt95i8sr0eku-8G2A4"},
{"content":{"body":"`/(?=(foo))\\1/` is atomic","format":"org.matrix.custom.html","formatted_body":"<code>/(?=(foo))\\1/</code> is atomic","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`/(?=(foo))\\1/` is atomic","mimetype":"text/plain"},{"body":"<code>/(?=(foo))\\1/</code> is atomic","mimetype":"text/html"}]},"ts":1654702672079,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$XOkQNHwwrvEDgLC7s4y-hKJGcadooDoM1yIswQp4Xlw"},
{"content":{"body":"> <@haxjs:matrix.org> That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.\n\ni'm not convinced atm of how any solution in the space of adding `this` as a parameter in plain JS can narrow the gap","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Xrv4YuUj4CBZRFdfnILij7Su2mATbiADVBUaPEO1sLQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.</blockquote></mx-reply>i'm not convinced atm of how any solution in the space of adding <code>this</code> as a parameter in plain JS can narrow the gap","m.relates_to":{"m.in_reply_to":{"event_id":"$Xrv4YuUj4CBZRFdfnILij7Su2mATbiADVBUaPEO1sLQ"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@haxjs:matrix.org> That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.\n\ni'm not convinced atm of how any solution in the space of adding `this` as a parameter in plain JS can narrow the gap","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Xrv4YuUj4CBZRFdfnILij7Su2mATbiADVBUaPEO1sLQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>That's why we at least need to explore the area (this is what stage 1 means? isn't it?), to figure out how we can narrow the gap. It's not easy, for example, TS and flow use same syntax but may be have different behavior in some edge cases. But we can't know it before we have the chance to put it on the table.</blockquote></mx-reply>i'm not convinced atm of how any solution in the space of adding <code>this</code> as a parameter in plain JS can narrow the gap","mimetype":"text/html"}]},"ts":1654702674588,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2aKrvo2wwZfgeDso94YIaeShbwsoALbcYchTzwxZ3ic"},
{"content":{"body":"https://blog.stevenlevithan.com/archives/mimic-atomic-groups","msgtype":"m.text","org.matrix.msc1767.text":"https://blog.stevenlevithan.com/archives/mimic-atomic-groups"},"ts":1654702773812,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NfpvMOM7DJ_D_WMEPTKra8ZSejv2f1fxwdVUsIYCIas"}
]