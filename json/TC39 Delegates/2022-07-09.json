[
{"content":{"body":"> <@bakkot:matrix.org> also Rust's methods are all on the Iterator trait\n\nI think I already commented that several times: Rust (and D) use iterator-like semantic, because these languages use value type semantic on iterator. So they don't suffer the reuse problem. And Rust have a very strong compiler which won't allow u reuse a iterator twice by default (you need to assign it to a separate var and with value type copy semantic, it give u a two iterator instances). Obviously JS do not have  that merits. (Even I really hope we could have value type one day, I very doubt we can have value type semantic iterator in JS.)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gMxp7U8PZERw9ddpdJ-djVfbiRVkJrDtiYbAbEe66pM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also Rust&#39;s methods are all on the Iterator trait</blockquote></mx-reply>I think I already commented that several times: Rust (and D) use iterator-like semantic, because these languages use value type semantic on iterator. So they don't suffer the reuse problem. And Rust have a very strong compiler which won't allow u reuse a iterator twice by default (you need to assign it to a separate var and with value type copy semantic, it give u a two iterator instances). Obviously JS do not have  that merits. (Even I really hope we could have value type one day, I very doubt we can have value type semantic iterator in JS.)","m.relates_to":{"m.in_reply_to":{"event_id":"$gMxp7U8PZERw9ddpdJ-djVfbiRVkJrDtiYbAbEe66pM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> also Rust's methods are all on the Iterator trait\n\nI think I already commented that several times: Rust (and D) use iterator-like semantic, because these languages use value type semantic on iterator. So they don't suffer the reuse problem. And Rust have a very strong compiler which won't allow u reuse a iterator twice by default (you need to assign it to a separate var and with value type copy semantic, it give u a two iterator instances). Obviously JS do not have  that merits. (Even I really hope we could have value type one day, I very doubt we can have value type semantic iterator in JS.)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gMxp7U8PZERw9ddpdJ-djVfbiRVkJrDtiYbAbEe66pM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also Rust&#39;s methods are all on the Iterator trait</blockquote></mx-reply>I think I already commented that several times: Rust (and D) use iterator-like semantic, because these languages use value type semantic on iterator. So they don't suffer the reuse problem. And Rust have a very strong compiler which won't allow u reuse a iterator twice by default (you need to assign it to a separate var and with value type copy semantic, it give u a two iterator instances). Obviously JS do not have  that merits. (Even I really hope we could have value type one day, I very doubt we can have value type semantic iterator in JS.)","mimetype":"text/html"}]},"ts":1657358359162,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$U6hTO-fCv-J9R-ASoIiHRyJw8Je70bOkKKziGzFcgdQ"},
{"content":{"body":"> <@ljharb:matrix.org> i'll fix the calendar, not sure where the current deadline event came from\n\nI guess it used the wrong timezone. :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Odj_Bxn-ebWDoL0zpI4u6Ub_W97b0bHZZeApK25wM8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i&#39;ll fix the calendar, not sure where the current deadline event came from</blockquote></mx-reply>I guess it used the wrong timezone. :)","m.relates_to":{"m.in_reply_to":{"event_id":"$3Odj_Bxn-ebWDoL0zpI4u6Ub_W97b0bHZZeApK25wM8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> i'll fix the calendar, not sure where the current deadline event came from\n\nI guess it used the wrong timezone. :)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Odj_Bxn-ebWDoL0zpI4u6Ub_W97b0bHZZeApK25wM8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i&#39;ll fix the calendar, not sure where the current deadline event came from</blockquote></mx-reply>I guess it used the wrong timezone. :)","mimetype":"text/html"}]},"ts":1657358432925,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$brIzcBZB1OZKz12xa3LqjStzj4VFPx0XaJ8gwZJlWuA"}
]