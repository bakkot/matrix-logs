[
{"content":{"body":"I’m sure this is excessively pedantic, but `compare(x, y) === 0` isn’t _always_ equivalent to `equals(x, y)` for inequal `x` and `y` that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate `equals` is just a good precedent to set.","format":"org.matrix.custom.html","formatted_body":"I’m sure this is excessively pedantic, but <code>compare(x, y) === 0</code> isn’t <em>always</em> equivalent to <code>equals(x, y)</code> for inequal <code>x</code> and <code>y</code> that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate <code>equals</code> is just a good precedent to set.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0AiIU5z_locdlkpeQwVQ3Zr-koALJdUMXZYb2_HWZhk"}},"msgtype":"m.text"},"ts":1761526463169,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$FJK0XnJ4R376p2EuYiCcY8bLRRm524posYemsnW-3G8"},
{"content":{"body":"* I’m sure this is excessively pedantic, but `compare(x, y) === 0` isn’t _always_ equivalent to `equals(x, y)` for inequal `x` and `y` that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate `equals` is just that it’s a good precedent to set.","format":"org.matrix.custom.html","formatted_body":"* I’m sure this is excessively pedantic, but <code>compare(x, y) === 0</code> isn’t <em>always</em> equivalent to <code>equals(x, y)</code> for inequal <code>x</code> and <code>y</code> that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate <code>equals</code> is just that it’s a good precedent to set.","m.mentions":{},"m.new_content":{"body":"I’m sure this is excessively pedantic, but `compare(x, y) === 0` isn’t _always_ equivalent to `equals(x, y)` for inequal `x` and `y` that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate `equals` is just that it’s a good precedent to set.","format":"org.matrix.custom.html","formatted_body":"I’m sure this is excessively pedantic, but <code>compare(x, y) === 0</code> isn’t <em>always</em> equivalent to <code>equals(x, y)</code> for inequal <code>x</code> and <code>y</code> that are of the same equivalence class (“rank”). So, apart from performance, another good reason for a separate <code>equals</code> is just that it’s a good precedent to set.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$FJK0XnJ4R376p2EuYiCcY8bLRRm524posYemsnW-3G8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761526491831,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$8p_809zxizPdHl4kkxwJbBDjAPG3-vw0vMemVAAv-Yk"},
{"content":{"body":"I'm good with that ","msgtype":"m.text"},"ts":1761526954261,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$Jn800qdt5NYJRAnwLPpv5pSQDtZMhfO48t8LdZvgicQ"},
{"content":{"body":"it is for TypedArrays specifically though","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$FJK0XnJ4R376p2EuYiCcY8bLRRm524posYemsnW-3G8"}},"msgtype":"m.text"},"ts":1761528711342,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5dO8cqjM3yvWTqwBiioQOLk7NS9n4fmCq-Oj-9vByqI"},
{"content":{"body":"but yes Temporal has `.equals` as well as `.compare` for (I think?) partly this reason","format":"org.matrix.custom.html","formatted_body":"but yes Temporal has <code>.equals</code> as well as <code>.compare</code> for (I think?) partly this reason","m.mentions":{},"msgtype":"m.text"},"ts":1761528739080,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1b53BmfKxSN36ERjjpo_K1M9xbhsMVlnp0G2k4T8jDs"}
]