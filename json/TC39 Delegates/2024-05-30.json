[
{"content":{"body":"What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable `.prototype` property? Possible? Incompatible?","format":"org.matrix.custom.html","formatted_body":"What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable <code>.prototype</code> property? Possible? Incompatible?","m.mentions":{},"msgtype":"m.text"},"ts":1717028349621,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$7TTzZ3TIC8VK6FtEMgxR7KB23PC-6Z5dHjQ3F3DVH88"},
{"content":{"body":"i don't think i've ever seen code touching the prototype field of a bound function","m.mentions":{},"msgtype":"m.text"},"ts":1717043344840,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$E7Y6su4X2vm9R0YUr88ETZjHefhPnvIvAnvX-Pqdb7c"},
{"content":{"body":"> <@keith_miller:matrix.org> What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable `.prototype` property? Possible? Incompatible?\n\nI actually have some code relying on that prototype property. Might be able to update.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7TTzZ3TIC8VK6FtEMgxR7KB23PC-6Z5dHjQ3F3DVH88?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@keith_miller:matrix.org\">@keith_miller:matrix.org</a><br />What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable <code>.prototype</code> property? Possible? Incompatible?</blockquote></mx-reply>I actually have some code relying on that prototype property. Might be able to update.","m.relates_to":{"m.in_reply_to":{"event_id":"$7TTzZ3TIC8VK6FtEMgxR7KB23PC-6Z5dHjQ3F3DVH88"}},"msgtype":"m.text"},"ts":1717054423971,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$T0Gnhz3xYARO6YbXHU1d0oXdYf2PBz6jVjrefist0_s"},
{"content":{"body":"Actually no we're good, we redefine the prototype property, and don't rely on one being present","msgtype":"m.text"},"ts":1717054886302,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$_CEtOyA5PDwGxMBRC29sKKuGbu1SPTbB0KAEswwtKD0"},
{"content":{"body":"I guess you're asking about making the property non-configurable, rather than removing it, right? this seems complicated to assess the web compatibility...","m.mentions":{},"msgtype":"m.text"},"ts":1717079333835,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ih90UNE2jsbJ0RZxiv_H_Ws1C-rimYxGMXch6yPzJns"},
{"content":{"body":"what's the motivation?","m.mentions":{},"msgtype":"m.text"},"ts":1717079337007,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8Jm-FzqxBu5SvohAUkRFJBGhXQX56Vyhfw_a6_zhgbQ"},
{"content":{"body":"Is there anything further that people would like to discuss about Signals in TC39? I don't have any big updates yet, but could go further into explanations of certain details or any questions that people have.","m.mentions":{},"msgtype":"m.text"},"ts":1717081250282,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VRwS0m7FtC5WyrsM50895I-fRBryUefmzxHn6LYLn7M"},
{"content":{"body":"> <@keith_miller:matrix.org> What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable `.prototype` property? Possible? Incompatible?\n\nes5-shim code may conflict with changing that, as well as npmjs.com/function-bind, but i haven’t dug into anything to look","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%247TTzZ3TIC8VK6FtEMgxR7KB23PC-6Z5dHjQ3F3DVH88\">In reply to</a> <a href=\"https://matrix.to/#/@keith_miller:matrix.org\">@keith_miller:matrix.org</a><br>What do people think the web compatibility story is likely to be for making bound functions no longer have a configurable <code>.prototype</code> property? Possible? Incompatible?</blockquote></mx-reply>es5-shim code may conflict with changing that, as well as npmjs.com/function-bind, but i haven’t dug into anything to look","m.relates_to":{"m.in_reply_to":{"event_id":"$7TTzZ3TIC8VK6FtEMgxR7KB23PC-6Z5dHjQ3F3DVH88"}},"msgtype":"m.text"},"ts":1717081575921,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HVEV6FR4qtnNWfhO-n4-ArPYndpRfxZEiKuKI6hIlGU"},
{"content":{"body":"Are any other runtimes working on implementations of RegExp Modifiers? It's now shipping in Chrome and Edge, though both use the same implementation in V8. I saw that SpiderMonkey now has a tracking issue, but cannot find one yet for JSC. ","m.mentions":{},"msgtype":"m.text"},"ts":1717089422874,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Zu52sohHo21bvpuNu0HZOR7wP9koxegilcUYdBXHbEM"},
{"content":{"body":"i may be misremembering but i thought JSC was first to ship","m.mentions":{},"msgtype":"m.text"},"ts":1717090520408,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8MrmIHSjjizpNP27KWR7rDJ1PV8-KyuIdKtt46ppvF0"},
{"content":{"body":"SM imports irregexp, so under the covers it's mostly the same implementation as Chrome and Edge.","m.mentions":{},"msgtype":"m.text"},"ts":1717090613300,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$5jGtPSVUwHI52Y2J-PJvHDXqBE9u3Vo7O10NUEWYI2g"},
{"content":{"body":"For SpiderMonkey I found https://bugzilla.mozilla.org/show_bug.cgi?id=1899813, which was only opened 3 hours ago","m.mentions":{},"msgtype":"m.text"},"ts":1717095547802,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$qY2OQMnDzJgLmqr8mKMoMRQdM8WHsi3iJLgL2T0VAkw"},
{"content":{"body":"I haven't yet found a tracking bug for JSC.","m.mentions":{},"msgtype":"m.text"},"ts":1717095717080,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rs6816EkHy2cFMVSvUwdt6noOZzhA4A_EcrFAPptzow"},
{"content":{"body":"http://npmjs.com/function-bind doesn't even seem to reference \"defineProperty\" so I think that would be fine. Ditto for https://github.com/es-shims/es5-shim/blob/5930e4ac2c4fce44866a000b2ea9704c349f5cf5/es5-shim.js#L241 but maybe I'm looking at the wrong thing?","m.mentions":{},"m.relates_to":{"event_id":"$HVEV6FR4qtnNWfhO-n4-ArPYndpRfxZEiKuKI6hIlGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$HVEV6FR4qtnNWfhO-n4-ArPYndpRfxZEiKuKI6hIlGU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1717097847020,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$fJLZs5vlXs54CwCmo1rQIhCRWyvO8dmZOdyv06rlBfc"},
{"content":{"body":"I don't think there's a JSC bug and I 95% sure we don't implement it","m.mentions":{},"msgtype":"m.text"},"ts":1717098253088,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$6w8LXit6ICTIwbINzO9oWsQcz8UMGZDw2MYiIMeNupI"},
{"content":{"body":" * I don't think there's a JSC bug for RegExp Modifiers and I 95% sure we don't implement it","m.mentions":{},"m.new_content":{"body":"I don't think there's a JSC bug for RegExp Modifiers and I 95% sure we don't implement it","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6w8LXit6ICTIwbINzO9oWsQcz8UMGZDw2MYiIMeNupI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1717098266322,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$GdZlb4EOeRUHRpCEBxx30DJUdrBuDXkpQHgBft3BsGk"}
]