[
{"content":{"body":"@shu We do a thing in SES that Mark calls “enablements” to compensate for the override mistake which may be of interest: We replace the non-writable property with a getter/setter pair. The prototype is still effectively frozen, but assignment-override works. We’d be delighted to be in touch.","msgtype":"m.text"},"ts":1693541195425,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ilDQrOi727lfOVYvSz5N95lSxcWtpVW5EyZxO-a82e0"},
{"content":{"body":"Kris Kowal: Yes, we considered taking this approach for `Iterator.prototype[Symbol.toStringTag]` because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: Yes, we considered taking this approach for <code>Iterator.prototype[Symbol.toStringTag]</code> because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable","msgtype":"m.text"},"ts":1693586865295,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WeTF7oB5FVFSPXEeoxHgQgztAU82o3x9PYeLKCKTBOE"}
]