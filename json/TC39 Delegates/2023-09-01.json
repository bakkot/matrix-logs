[
{"content":{"body":"@shu We do a thing in SES that Mark calls “enablements” to compensate for the override mistake which may be of interest: We replace the non-writable property with a getter/setter pair. The prototype is still effectively frozen, but assignment-override works. We’d be delighted to be in touch.","msgtype":"m.text"},"ts":1693541195425,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ilDQrOi727lfOVYvSz5N95lSxcWtpVW5EyZxO-a82e0"},
{"content":{"body":"Kris Kowal: Yes, we considered taking this approach for `Iterator.prototype[Symbol.toStringTag]` because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: Yes, we considered taking this approach for <code>Iterator.prototype[Symbol.toStringTag]</code> because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable","msgtype":"m.text"},"ts":1693586865295,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WeTF7oB5FVFSPXEeoxHgQgztAU82o3x9PYeLKCKTBOE"},
{"content":{"body":"this is interesting: https://twitter.com/webreflection/status/1697518069554299121 - isn't there some security thing around SAB that this seems to bypass via wasm?","msgtype":"m.text"},"ts":1693587064788,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MqNlEi0fE56pc1rR9-z8k4_cKqMGhl7TgcKRqxaB4X8"},
{"content":{"body":"that's always been the case (since COOP/COEP shipped)","msgtype":"m.text"},"ts":1693587259787,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K0v9g7sYbwF6M7D7rKEM6FUT-qTTzCdgn8kfx-haih4"},
{"content":{"body":"it's explicitly allowed, and wpt uses it in testing","msgtype":"m.text"},"ts":1693587268257,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nDkiKzF74ww5wulA-jmJtLy7_UzW0501RcMGnz2Tkn0"},
{"content":{"body":"the actual capability is the sharing of memory, not the SAB constructor. without COI you still can't postMessage the buffer across workers","msgtype":"m.text"},"ts":1693587292234,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-L-ewHdxesYsb5NZHK-KrWSQ9KuDOgI9yvyU_AoG1Xk"},
{"content":{"body":"the problem isn't getting a SAB, it's being able to share it to workers","msgtype":"m.text"},"ts":1693587294258,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gsWAqdOUfu8KZ7_KHkrWF2BYTjeIloWLCNhPxa6loxs"},
{"content":{"body":"see step 13.1.1 of https://html.spec.whatwg.org/#structuredserializeinternal","msgtype":"m.text"},"ts":1693587305686,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$s_bhS-wCgFILP2SgokKWvZIdpXatenX0PwcrHvIOb-Q"},
{"content":{"body":"this is my \"fault\" technically: https://github.com/whatwg/html/issues/4732#issuecomment-598470434","msgtype":"m.text"},"ts":1693587359074,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8o2dHkaIylocBJUsEV5hMvG3M2pruRAYep78yPyBgMQ"},
{"content":{"body":"but we did it for compat reasons for chrome users","msgtype":"m.text"},"ts":1693587373482,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ljjErSCUV7lyy4LAvvJdwgmxmlNkcuhlZlVpuQXJjmA"},
{"content":{"body":"> <@michaelficarra:matrix.org> Kris Kowal: Yes, we considered taking this approach for `Iterator.prototype[Symbol.toStringTag]` because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable\n\nI don’t think we’d recommend “enablements” as a general language compensation for override-mistake, but we do recommend replacing certain properties with accessors as a preparation for freezing a prototype in environments that freeze shared prototypes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$WeTF7oB5FVFSPXEeoxHgQgztAU82o3x9PYeLKCKTBOE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: Yes, we considered taking this approach for <code>Iterator.prototype[Symbol.toStringTag]</code> because of this exact issue with regenerator-runtime (see https://github.com/tc39/proposal-iterator-helpers/pull/213), but instead decided to just make the property writable</blockquote></mx-reply>I don’t think we’d recommend “enablements” as a general language compensation for override-mistake, but we do recommend replacing certain properties with accessors as a preparation for freezing a prototype in environments that freeze shared prototypes.","m.relates_to":{"m.in_reply_to":{"event_id":"$WeTF7oB5FVFSPXEeoxHgQgztAU82o3x9PYeLKCKTBOE"}},"msgtype":"m.text"},"ts":1693587393040,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$NTob1f7U09f7aQgTCOQ9CvcMw1oAA6ww7ef1RZRLXbA"},
{"content":{"body":"the original plan, was, in fact, to make SAB always available","msgtype":"m.text"},"ts":1693587542493,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HEEZkJgsOTxII7yXxPNQJZPu9FhZRRruAQxPIjpEFjA"},
{"content":{"body":"ah ok, thanks, that makes sense","msgtype":"m.text"},"ts":1693588548853,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7t-dKFlyR0LOUZ0aNi49tcS0RJdTnJWPvIWaq8y2kZg"},
{"content":{"body":"Stage 3 won't become a silver bullet for proposal changes.","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$9GWH4T8-Y5bwMVNzwv6vbh6i-rK02m5mgSJLRkMih8Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693590653335,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$yaCvcoXpuCZhoZZoDhP4HD_M8fDUx7Od6JhN7zhI7v0"},
{"content":{"body":"of course, changes can be made in response to implementation feedback","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$yaCvcoXpuCZhoZZoDhP4HD_M8fDUx7Od6JhN7zhI7v0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693593840713,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TYcr9Hi5RpHEYLTJYnxtJF05Mf2hSwyZdj5xsBg799o"},
{"content":{"body":"the point of this change is to catch necessary changes before we get to the point of implementation so we don't waste implementers' time, not to have an indicator of rock-solid stability","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$TYcr9Hi5RpHEYLTJYnxtJF05Mf2hSwyZdj5xsBg799o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693593914401,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LzyBj58oMkGmN9qd7Vrx-aB4GTPLdnuAcIJkhU-mgK0"},
{"content":{"body":"Huh, facilitating feature detection seems like a good thing…","msgtype":"m.text"},"ts":1693603691958,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AC4dgVyR4jCK1G4toblM5u1oulvfA3PhQoBYpAoNT_g"},
{"content":{"body":"(I saw parts of this controversy but never really followed along closely enough)","msgtype":"m.text"},"ts":1693603711144,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tu9ACo4SsTDwKT85CkqYo24BJARIfTpupViOPCSSM88"},
{"content":{"body":"I agree with Leo. Actually, HTML integration is already a requirement in practice, just randomly enforced by certain delegates (including me), and it has been this way for years ","format":"org.matrix.custom.html","formatted_body":"I agree with Leo. Actually, HTML integration is already a requirement in practice, just randomly enforced by certain delegates (including me), and it has been this way for years","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$LzyBj58oMkGmN9qd7Vrx-aB4GTPLdnuAcIJkhU-mgK0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693603807245,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$w_11Rmi2xF6BDBPywSHgAOXVOrZOIz5zEj1JkcBbWhk"},
{"content":{"body":"We should document this","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$w_11Rmi2xF6BDBPywSHgAOXVOrZOIz5zEj1JkcBbWhk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693603814064,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QO7BiCqVE9LJdpgDcXxdl3EvQ3ZHQ8Mh23xls5CZvME"},
{"content":{"body":"* I agree with Leo. Actually, HTML integration is already a Stage 3 requirement in practice, just randomly enforced by certain delegates (including me), and it has been this way for years","m.new_content":{"body":"I agree with Leo. Actually, HTML integration is already a Stage 3 requirement in practice, just randomly enforced by certain delegates (including me), and it has been this way for years","msgtype":"m.text"},"m.relates_to":{"event_id":"$w_11Rmi2xF6BDBPywSHgAOXVOrZOIz5zEj1JkcBbWhk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1693603832088,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Bw8gjzatymajM10PhY6WqVvz78HAp0y4a3Hw2GwNzv8"},
{"content":{"body":"It feels funny to have html be special but it just is","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$QO7BiCqVE9LJdpgDcXxdl3EvQ3ZHQ8Mh23xls5CZvME"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693603845382,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AktVP03vDI852gjrJbzTlUmt_iBeCikv-pCnvR6_Zbw"},
{"content":{"body":"I think that is why we have hesitated to document it so far","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$AktVP03vDI852gjrJbzTlUmt_iBeCikv-pCnvR6_Zbw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693603858332,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Lt0TRtYT2mXxPUDlH5rbeqtrPDmGj6rA3_5SH3M31T4"},
{"content":{"body":"littledan: I agree but I don't think it needs to be combined with my proposed process change","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: I agree but I don't think it needs to be combined with my proposed process change","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$Lt0TRtYT2mXxPUDlH5rbeqtrPDmGj6rA3_5SH3M31T4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693604006642,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6Oxcg0Eyo9ladOm3DdJZJJ5yq4oF9HNitBvkpsQvm7s"},
{"content":{"body":"as we saw at the last meeting, it is already hard for some delegates to understand the process change","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$6Oxcg0Eyo9ladOm3DdJZJJ5yq4oF9HNitBvkpsQvm7s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693604040040,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jz3gVOhosK4adYGtCw3AdHb_tuArStVSlr9Xvq2pc1c"},
{"content":{"body":"> <@michaelficarra:matrix.org> littledan: I agree but I don't think it needs to be combined with my proposed process change\n\nSure they are separate, maybe good for Leo to put this other point on the agenda for this meeting ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%246Oxcg0Eyo9ladOm3DdJZJJ5yq4oF9HNitBvkpsQvm7s\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: I agree but I don't think it needs to be combined with my proposed process change</blockquote></mx-reply>Sure they are separate, maybe good for Leo to put this other point on the agenda for this meeting","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":false,"m.in_reply_to":{"event_id":"$6Oxcg0Eyo9ladOm3DdJZJJ5yq4oF9HNitBvkpsQvm7s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693604044304,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C1436h3R2GcaOvmcjB_5jUv5mlxXIkPEJ4OW0Sv2PRI"},
{"content":{"body":"As far as I am concerned, HTML integration is already a requirement, just a poorly documented one, unlike your proposal which is a genuine change in how we work","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$C1436h3R2GcaOvmcjB_5jUv5mlxXIkPEJ4OW0Sv2PRI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693604087342,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BhrkSSG7D0bytWlXs_yr3HkHA2GCiH7offb6HnZPH0A"},
{"content":{"body":"process or no process my personal resolve going forward is i will block stage 3 on proposals where there's non-trivial amounts of semantics in the integration","m.relates_to":{"event_id":"$LLRwETsh9g4Okl4lWekhow9dRKExsachhmlFXJ2Ti64","is_falling_back":true,"m.in_reply_to":{"event_id":"$BhrkSSG7D0bytWlXs_yr3HkHA2GCiH7offb6HnZPH0A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1693604940318,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$utDNFabbef-H9aeXYgEkoz1PuEAKAevQd7_jLl98weU"},
{"content":{"body":" * process or no process my personal resolve going forward is i will block stage 3 on proposals where there's non-trivial amounts of semantics in the integration, and the integration is not yet done","format":"org.matrix.custom.html","formatted_body":" * process or no process my personal resolve going forward is i will block stage 3 on proposals where there's non-trivial amounts of semantics in the integration, and the integration is not yet done","m.new_content":{"body":"process or no process my personal resolve going forward is i will block stage 3 on proposals where there's non-trivial amounts of semantics in the integration, and the integration is not yet done","format":"org.matrix.custom.html","formatted_body":"process or no process my personal resolve going forward is i will block stage 3 on proposals where there's non-trivial amounts of semantics in the integration, and the integration is not yet done","msgtype":"m.text"},"m.relates_to":{"event_id":"$utDNFabbef-H9aeXYgEkoz1PuEAKAevQd7_jLl98weU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1693604956542,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NTm9sbZkEoSfyyg8c0exQQSVQENmcvx68WbMdvsXFX4"},
{"content":{"body":"eh, i guess arguably the right way to feature detect is `self.crossOriginIsolated`, not the existence of the SAB constructor","format":"org.matrix.custom.html","formatted_body":"eh, i guess arguably the right way to feature detect is <code>self.crossOriginIsolated</code>, not the existence of the SAB constructor","msgtype":"m.text"},"ts":1693609430015,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8arq2bccJfLJKP9sM7baRhkrttNpZ5EcvIlkuGVbatI"},
{"content":{"body":"> I can share that our tamper resistance mode is enabled by default\n\n😩","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>I can share that our tamper resistance mode is enabled by default</p>\n</blockquote>\n<p>😩</p>\n","msgtype":"m.text"},"ts":1693612302541,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kKZbFZlW5aM-aWCJ8KCjDdG-Vcw9qStA1AdBXyu7rBY"}
]