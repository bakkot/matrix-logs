[
{"content":{"body":"bakkot: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (`class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])` throws, eg)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (<code>class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])</code> throws, eg)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (`class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])` throws, eg)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (<code>class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])</code> throws, eg)","mimetype":"text/html"}]},"ts":1643822476351,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5_ewoQZELr-T687eAACppJWwxqlfnWjexIltZQPahWI"}
]