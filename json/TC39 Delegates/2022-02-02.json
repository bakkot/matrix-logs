[
{"content":{"body":"bakkot: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (`class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])` throws, eg)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (<code>class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])</code> throws, eg)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (`class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])` throws, eg)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: i wonder if it might be web compatible to remove the add/set calling in the Set/Map constructors, considering that anyone trying to override those in their subclass would throw (<code>class X extends Set { #x = []; add(v) { this.#x.push(v); } } new X(['a'])</code> throws, eg)","mimetype":"text/html"}]},"ts":1643822476351,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5_ewoQZELr-T687eAACppJWwxqlfnWjexIltZQPahWI"},
{"content":{"body":"I should of added unit tests to the deck https://docs.google.com/presentation/d/1-Hp4Qd0mmdufYCwI9fTdCxgt4xEHqE1mPfqRxzuzMvc/edit#slide=id.g10d8b1925be_0_0","msgtype":"m.text","org.matrix.msc1767.text":"I should of added unit tests to the deck https://docs.google.com/presentation/d/1-Hp4Qd0mmdufYCwI9fTdCxgt4xEHqE1mPfqRxzuzMvc/edit#slide=id.g10d8b1925be_0_0"},"ts":1643822805276,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$4Vzs8RNuyMaAQ1KMgZ68LBFFSOOSkcA7Uq5lELfwfV4"},
{"content":{"body":"ljharb: possibly; michael and I looked into it and even people who are subclassing Map usually also override the ctor","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: possibly; michael and I looked into it and even people who are subclassing Map usually also override the ctor","msgtype":"m.text"},"ts":1643822927347,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EnjmHbr-iDB-RBf54jTnc4MWqGu7f2KavknA50PSbro"},
{"content":{"body":"seems like it'd be a win for normal collection usage as well as potential future methods/subclassing","msgtype":"m.text","org.matrix.msc1767.text":"seems like it'd be a win for normal collection usage as well as potential future methods/subclassing"},"ts":1643822950415,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KKTWPDVuzdOop4VBWOfm1BKNCu6vvEkilsK1O3qv084"},
{"content":{"body":"and it's not just private fields; even in plain es6 style, if your `add` method depends on fields added by the constructor it's not going to work","format":"org.matrix.custom.html","formatted_body":"and it's not just private fields; even in plain es6 style, if your <code>add</code> method depends on fields added by the constructor it's not going to work","msgtype":"m.text"},"ts":1643822983786,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w80ow_3vUpRRJx69rCAdepFOliYYBEdgvfqnnNFwVbo"},
{"content":{"body":"no idea why we thought this was a good idea","msgtype":"m.text"},"ts":1643822992124,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GduJsL-BUtjQlMRv_wqtnnMBIWfrOfZghA-Fqr6g3-c"},
{"content":{"body":"https://twitter.com/basarat/status/557680386042765312","msgtype":"m.text","org.matrix.msc1767.text":"https://twitter.com/basarat/status/557680386042765312"},"ts":1643823538057,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$FHco56Xz757RjptGfxhu7PZzyK1lKH0iaMlmtlu--Gs"},
{"content":{"body":"I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784","format":"org.matrix.custom.html","formatted_body":"I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784","mimetype":"text/plain"},{"body":"I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784","mimetype":"text/html"}]},"ts":1643823752151,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$9epxy1d2h9ulbd7xl8hFEPP4MXCe2A-5EwdijNh1fHY"},
{"content":{"body":" * I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","format":"org.matrix.custom.html","formatted_body":" * I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","m.new_content":{"body":"I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","format":"org.matrix.custom.html","formatted_body":"I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","mimetype":"text/plain"},{"body":"I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$9epxy1d2h9ulbd7xl8hFEPP4MXCe2A-5EwdijNh1fHY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I upset shu when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","mimetype":"text/plain"},{"body":" * I upset <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> when I found out about this https://twitter.com/_shu/status/1362579124246646784 ðŸ˜…","mimetype":"text/html"}]},"ts":1643823941002,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$72-mmC3A0bTDk8hX6c8m_zBBLCr0yXmmrLI6x4KDEQk"},
{"content":{"body":"> even people who are subclassing Map usually also override the ctor\n\njust to back that up, here's\n- a WPT test: https://github.com/chromium/chromium/blob/596d50e6bfa4ec7824664645fc5422728092658e/third_party/blink/web_tests/external/wpt/webrtc/RTCPeerConnection-helper.js#L661\n- some code from w3c (respec): https://github.com/w3c/respec/blob/971a29796becb27759bd958c89aedba08ac2e222/src/core/utils.js#L725-L730\n\nand conversely, here's various bits of code which are _currently_ broken because of this behavior\n- in Firefox: https://github.com/mozilla/gecko-dev/blob/489e82dcc1e5afbe691ff3b1c982382914637e38/toolkit/components/extensions/ExtensionUtils.jsm#L142-L168\n- in moodle: https://github.com/moodle/moodle/blob/8885e22a0b56f503b685313d0ae3e581ecf0665b/lib/amd/src/local/reactive/statemanager.js#L673-L702\n- https://github.com/cowlicks/privacypossum/blob/a328104217e6bebc35ee48f9561255ef83c51c41/src/js/fakes.js#L7-L29\n\nand here's some which have explicitly had to work around it:\n- https://github.com/Katello/katello/blob/438351af3352088f3a8347ed1aaaf84dc3d2ae69/webpack/components/Table/TableHooks.js#L8-L9\n- https://github.com/Mintnoii/Vue-MintShop/blob/8f98a5258658c953d92d03ace4b0c199bd763b72/mintshop-server/node_modules/_mongoose%405.4.22%40mongoose/lib/types/map.js#L42-L50\n- https://github.com/peer-base/peer-base/blob/35166484f71e67c668f39982a8333099f2fd1b9e/src/common/peer-set.js#L4-L13","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>even people who are subclassing Map usually also override the ctor</p>\n</blockquote>\n<p>just to back that up, here's</p>\n<ul>\n<li>a WPT test: https://github.com/chromium/chromium/blob/596d50e6bfa4ec7824664645fc5422728092658e/third_party/blink/web_tests/external/wpt/webrtc/RTCPeerConnection-helper.js#L661</li>\n<li>some code from w3c (respec): https://github.com/w3c/respec/blob/971a29796becb27759bd958c89aedba08ac2e222/src/core/utils.js#L725-L730</li>\n</ul>\n<p>and conversely, here's various bits of code which are _currently_ broken because of this behavior</p>\n<ul>\n<li>in Firefox: https://github.com/mozilla/gecko-dev/blob/489e82dcc1e5afbe691ff3b1c982382914637e38/toolkit/components/extensions/ExtensionUtils.jsm#L142-L168</li>\n<li>in moodle: https://github.com/moodle/moodle/blob/8885e22a0b56f503b685313d0ae3e581ecf0665b/lib/amd/src/local/reactive/statemanager.js#L673-L702</li>\n<li>https://github.com/cowlicks/privacypossum/blob/a328104217e6bebc35ee48f9561255ef83c51c41/src/js/fakes.js#L7-L29</li>\n</ul>\n<p>and here's some which have explicitly had to work around it:</p>\n<ul>\n<li>https://github.com/Katello/katello/blob/438351af3352088f3a8347ed1aaaf84dc3d2ae69/webpack/components/Table/TableHooks.js#L8-L9</li>\n<li>https://github.com/Mintnoii/Vue-MintShop/blob/8f98a5258658c953d92d03ace4b0c199bd763b72/mintshop-server/node_modules/_mongoose%405.4.22%40mongoose/lib/types/map.js#L42-L50</li>\n<li>https://github.com/peer-base/peer-base/blob/35166484f71e67c668f39982a8333099f2fd1b9e/src/common/peer-set.js#L4-L13</li>\n</ul>\n","msgtype":"m.text"},"ts":1643827399691,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6ryLTJfe6TeJnoGtdeU1SN9xjFRqJ2_Z3Mo_MGnsfSo"},
{"content":{"body":"that said, this doesn't mean it would necessarily be web-compat to change the behavior at this point, since you _can_ make something which depends on it (e.g. a Set subclass which just filters out a particular kind of value)","format":"org.matrix.custom.html","formatted_body":"that said, this doesn't mean it would necessarily be web-compat to change the behavior at this point, since you <em>can</em> make something which depends on it (e.g. a Set subclass which just filters out a particular kind of value)","msgtype":"m.text"},"ts":1643827434939,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_J85rAxNSECqXrS1ubOPG7-GFLY1LEUgVV-yc6cSF5c"},
{"content":{"body":"btw we looked through examples of subclassing Set/Map for probably like 3 hours and I don't think we found a single example where the default constructor behaviour was useful","msgtype":"m.text","org.matrix.msc1767.text":"btw we looked through examples of subclassing Set/Map for probably like 3 hours and I don't think we found a single example where the default constructor behaviour was useful"},"ts":1643828180731,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_ft2TqSq7tDs1D5sHZBiEtVOJVJ9aMWz-kKG89fSW_s"},
{"content":{"body":"the first two links above are places it _would_ have been useful, they just didn't know it existed so they re-implemented it","format":"org.matrix.custom.html","formatted_body":"the first two links above are places it <em>would</em> have been useful, they just didn't know it existed so they re-implemented it","msgtype":"m.text"},"ts":1643828962626,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5sfd-Wz_gJvQV1gP4KNsI7bJDLZzwIURlBRuz8j6QTw"}
]