[
{"content":{"body":"I just stated the reason. The definition of \"informative\" is any text that can be removed without affecting the normative parts of the spec.","m.mentions":{},"msgtype":"m.text"},"ts":1739923207645,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$VfmqsnYohOy3bwy4VXtXOPpggZYyMID5wO45pT7k_rU"},
{"content":{"body":"An assert doesn't fall into that category if it can make a spec normatively inconsistent.","m.mentions":{},"msgtype":"m.text"},"ts":1739923234032,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$goO_bSMyul3kk92N3qGZUxPFhTBU_yhcsg6LVt4iZdE"},
{"content":{"body":"Informative text being incorrect seems like it definitionally means the spec is inconsistent.","m.mentions":{},"msgtype":"m.text"},"ts":1739923234749,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RRYCZC338QHgrAjiFezNNR8IAT4PfK31syq9lmzr0dE"},
{"content":{"body":"and assert failure does not make the spec normatively incorrect, it makes it incoherent. incorrect/correct as a category doesn't even arise because it's malformed","m.mentions":{},"msgtype":"m.text"},"ts":1739923252713,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gelN6amwOd0KXuwqtUpAxZD-TwSezFbtMLKS3nZ5_Uw"},
{"content":{"body":"this was very fast advancement for such a significant proposal","m.mentions":{},"msgtype":"m.text"},"ts":1739923274868,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tW_MYUZpB2pdWEtOImmTuUpnl1rvNKiZngxCvf3qTeM"},
{"content":{"body":"An Assertion is a statement that the asserted condition is the only possible state based on how the algorithm is used elsewhere in the specification. It is essentially informative because its absence would have no impact on the spec itself, so long as the spec is coherent.","m.mentions":{},"msgtype":"m.text"},"ts":1739923285136,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$J7xqOLx5L5AE2iJVPHi484e2SwCt-9z7hoTSJi8KYzk"},
{"content":{"body":"(I think that's a good thing -- we're able to act efficiently when it's a good idea)","m.mentions":{},"msgtype":"m.text"},"ts":1739923287226,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bgaU7XioYPJtJ30X1MAVzFBejQR-keDD_YkFyR7Ujnw"},
{"content":{"body":"Incorrect = malformed in my comment above.","m.mentions":{},"msgtype":"m.text"},"ts":1739923294438,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$91UT8VPcz3jI-srjGL2L7LM3Knv4pD0H62rccCXUNWw"},
{"content":{"body":"i see, well, its removal still doesn't affect the malformedness","m.mentions":{},"msgtype":"m.text"},"ts":1739923308598,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$L4QbIkSITlZLXc7wld-tEXVBzUirxx9kN57e2Tls_6k"},
{"content":{"body":"the spec remains malformed if the only removal is the assert","m.mentions":{},"msgtype":"m.text"},"ts":1739923318280,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9vvzRAXqgxrPbptPxNsyvDmG4y7pGvxsQdkQVl-UZ54"},
{"content":{"body":"Yes, it does, because the spec might become well-formed with removal of asserts.","m.mentions":{},"msgtype":"m.text"},"ts":1739923337078,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$OvW3Ln2NCgeY13foqFOl4XjJqr-AhyP6kibcJUGsiG0"},
{"content":{"body":"interestingly, the C++ standards committee is currently working through a similar epistemological debate, but at the level of assertions in source code -- should they execute? I heard they decided that the mode is determined by compiler flags (...a very different language philosophy from ours)","m.mentions":{},"msgtype":"m.text"},"ts":1739923377475,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AdQFtVlFZ_UZJqJ6HlCA2c5Tbnp7CL-b9hbcsr8li3I"},
{"content":{"body":"* interestingly, the C++ standards committee is currently working through a similar epistemological debate, but at the level of contracts in source code -- should they execute? I heard they decided that the mode is determined by compiler flags (...a very different language philosophy from ours)","m.mentions":{},"m.new_content":{"body":"interestingly, the C++ standards committee is currently working through a similar epistemological debate, but at the level of contracts in source code -- should they execute? I heard they decided that the mode is determined by compiler flags (...a very different language philosophy from ours)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$AdQFtVlFZ_UZJqJ6HlCA2c5Tbnp7CL-b9hbcsr8li3I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1739923389689,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$gq9bOMprve60UWfgFgQQQU8qO_8ONiCsw8_Ku1WfPrM"},
{"content":{"body":"excited to see immutable arraybuffers advancing. There are definitely a number of web API specs that will need to be updated to account for them. I mentioned Web Crypto crypto.randomValues() but BYOB ReadableStream is the other big one. That will need to be updated to reject immutable buffers on reader.read(buf). ","m.mentions":{},"msgtype":"m.text"},"ts":1739923412467,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$KQTL6ZuuVPD91U6CZmGM1ilGL65nj40yM4slKhSdMhA"},
{"content":{"body":"I plan to use compiler flags for whether to include spec asserts or not (I have none currently)","m.mentions":{},"m.relates_to":{"event_id":"$AdQFtVlFZ_UZJqJ6HlCA2c5Tbnp7CL-b9hbcsr8li3I","is_falling_back":true,"m.in_reply_to":{"event_id":"$AdQFtVlFZ_UZJqJ6HlCA2c5Tbnp7CL-b9hbcsr8li3I"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1739923425689,"senderName":"canadahonk","senderId":"@canadahonk:matrix.org","id":"$YusfN0IMbB11okg1HOctfc6EGywVhrPxOTTEU0y_ePo"},
{"content":{"body":"TextEncode encodeInto is another","m.mentions":{},"m.relates_to":{"event_id":"$KQTL6ZuuVPD91U6CZmGM1ilGL65nj40yM4slKhSdMhA","is_falling_back":true,"m.in_reply_to":{"event_id":"$KQTL6ZuuVPD91U6CZmGM1ilGL65nj40yM4slKhSdMhA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1739923461912,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$BK6ecL1xpd4EiwEUmQGDkPuCtc_bYHTQ4V0KefL8zrA"},
{"content":{"body":"i guess the nuance here is the assert tells a story about the intended property of the spec. if it doesn't hold, we say the spec is malformed in the sense that the intention doesn't hold. it could be brought back into well-formedness by changing the intent (which is necessarily not reflectable within the text, only tacit). more often, we don't change the intention doesn't change, and it turns out the there is a bug in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1739923501699,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$N4PXr6B4fhxSzQGXkASwN8wTAL0SjW_0x_vcXT3cE30"}
]