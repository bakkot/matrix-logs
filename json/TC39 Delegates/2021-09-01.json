[
{"content":{"body":"change-array-by-copy methods dropped from 10 to 4\nhttps://github.com/tc39/proposal-change-array-by-copy/issues/27","msgtype":"m.text"},"ts":1630503468472,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$KHs7w13trBcvft6MrwQWVLhq06kLkAF5wzbEgmYMUmM"},
{"content":{"body":"do we want to take notes for the \"Response to ECMA / LF Proposed Partnership | Michael Saboff\" item?","msgtype":"m.text"},"ts":1630504057167,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G9hGdpCKmvYFmV9F8GuSDPcWW7Hy4K9JUFbzMnQr6T0"},
{"content":{"body":"I'm never sure for the administrative rather than technical items","msgtype":"m.text"},"ts":1630504074207,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Xly-rwl9xTWg8eMZwrqeUBxPRbKuLoNuLlr-ACrn8GI"},
{"content":{"body":"yes, take notes, but we won't make them publish them publicly","msgtype":"m.text"},"ts":1630504214762,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$h0sp00SO_ubFCItHQBi-rXd2OiWTbHJls-U8IHVN8AU"},
{"content":{"body":"the jitsi is open - same passcode as yesterday","msgtype":"m.text"},"ts":1630504364375,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$dYryF5T5c8RU24tPNrIaX5d0bfpgd-tk_lUOcz4JSqw"},
{"content":{"body":"I also strongly support the \"safety value\" of permissive copyright agreements/forkability","msgtype":"m.text"},"ts":1630507452054,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$qQ1wUcgsxS4fJyF8w86ASPmQy3rjPMYEccz2YSDG80g"},
{"content":{"body":"just FYI here's the list of ecma members: https://www.ecma-international.org/about-ecma/members/","msgtype":"m.text"},"ts":1630507787242,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BElDsWD9ksLmwmaYmoPr15YWkrI4f2zXJqyNE5Pjuck"},
{"content":{"body":"ceil, floor, round, trunc, really?","msgtype":"m.text"},"ts":1630508931456,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$pSiowl1M4mxtXeGu6Gr9l-ZKSmZs52DdxieGBAIzljI"},
{"content":{"body":"I'd actually say that stage 1 shouldn't be about extending Math specifically, just about adding more math operations for bigints","msgtype":"m.text"},"ts":1630508951847,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3KGEjrbKMiVPITtwB0XKWdVOTc0yFJEtlLU462FW164"},
{"content":{"body":"\"bigint math\" indeed doesn't necessarily mean it has to be on `Math`","format":"org.matrix.custom.html","formatted_body":"&quot;bigint math&quot; indeed doesn't necessarily mean it has to be on <code>Math</code>","msgtype":"m.text"},"ts":1630508971082,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MQUsruOf51-X22g6SkoHctYaSINMHxBXunBSe2Tr3y4"},
{"content":{"body":"It could just be on `BigInt`","format":"org.matrix.custom.html","formatted_body":"It could just be on <code>BigInt</code>","msgtype":"m.text"},"ts":1630508984513,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$QyC6p7vi334bW3I03CQtIteeZSq2eDJM2FbGt2TI-hw"},
{"content":{"body":"the challenge there is, \"why are these things on Number too?\"","msgtype":"m.text"},"ts":1630508996939,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$isGKd1MjLWXlZhqU1qZZdJ--9Q7O1GOIWJ6ZwP5MZbE"},
{"content":{"body":" * the challenge there is, \"why aren't these things on Number too?\"","m.new_content":{"body":"the challenge there is, \"why aren't these things on Number too?\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$isGKd1MjLWXlZhqU1qZZdJ--9Q7O1GOIWJ6ZwP5MZbE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509001219,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WgSTgjd4n6BX9uLhmwanhsBdeEc5Xaj6FZxxbEJinNU"},
{"content":{"body":"iow, perhaps most of the Math methods belonged on Number, but here we are","msgtype":"m.text"},"ts":1630509015017,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$r4-OFzetu_i_z-2nXgtLTnqwwI-duRri3iK4pBBbnFM"},
{"content":{"body":"maybe we could later add aliases on `Number` ðŸ˜€ ","format":"org.matrix.custom.html","formatted_body":"maybe we could later add aliases on <code>Number</code> ðŸ˜€","msgtype":"m.text"},"ts":1630509021410,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rOAZ7dJNBFS6zFysE6TPoggQsgIkWbp0T40ujNNcDrg"},
{"content":{"body":"Also possible to introduce a separate global, i.e., `MathN` or `BigMath`, but I'd hate to have to do this over and over if we add more number types in the future.","format":"org.matrix.custom.html","formatted_body":"Also possible to introduce a separate global, i.e., <code>MathN</code> or <code>BigMath</code>, but I'd hate to have to do this over and over if we add more number types in the future.","msgtype":"m.text"},"ts":1630509052748,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wKKoPJfnR_nQPEMevuZ1AcrQPnVPPk5JSxpOdct4GD0"},
{"content":{"body":"It could be namespaced, `Math.BigInt.*`","format":"org.matrix.custom.html","formatted_body":"It could be namespaced, <code>Math.BigInt.*</code>","msgtype":"m.text"},"ts":1630509084229,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fYnk2aiQH06DVXnDM_91EmrmRIq4kUlzU7U-AxpRu50"},
{"content":{"body":"what about `mixedArrayWithNumbersAndBigInts.map(Math.abs)`?","format":"org.matrix.custom.html","formatted_body":"what about <code>mixedArrayWithNumbersAndBigInts.map(Math.abs)</code>?","msgtype":"m.text"},"ts":1630509097382,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Jvpwnle5PSqra2xF14YJX5GBRx4Qps2OGhK91jq7IUY"},
{"content":{"body":" * would have to be `Math.bigint.*` then, thanks to `Temporal.Now`","format":"org.matrix.custom.html","formatted_body":" * would have to be <code>Math.bigint.*</code> then, thanks to <code>Temporal.Now</code>","m.new_content":{"body":"would have to be `Math.bigint.*` then, thanks to `Temporal.Now`","format":"org.matrix.custom.html","formatted_body":"would have to be <code>Math.bigint.*</code> then, thanks to <code>Temporal.Now</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$qBMJJSd9txf4tGP-S87521cHfWFEAs6Uu5uiCPNJrZk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509109483,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wXG0YD45Bb9xefl70eyxySvZegDaZwx3A-mdhGYZfno"},
{"content":{"body":"wait, isn't it a namespace too?","msgtype":"m.text"},"ts":1630509123900,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$WMp3PopBqOLVH6vQ8odIJ_pRclhrnIpkn_tnVf1Qsy4"},
{"content":{"body":"lol nvm, i'm tired and confused myself","msgtype":"m.text"},"ts":1630509130637,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W6UD86re032CzCvS2AoaNOFMf94xCE33z6YnGHoqcyI"},
{"content":{"body":"so same capitalization","msgtype":"m.text"},"ts":1630509130674,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$Mz-_6dKvzrlyWC9BhSslbclb4YKeQIUmLiOngnYXlRE"},
{"content":{"body":"re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work.","format":"org.matrix.custom.html","formatted_body":"re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work.","msgtype":"m.text"},"ts":1630509281954,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$z7LPBSNd6l4LCkPSLjpcEhGomH7HxdpvierXzYh0pvI"},
{"content":{"body":" * re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min","format":"org.matrix.custom.html","formatted_body":" * re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min","m.new_content":{"body":"re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min","format":"org.matrix.custom.html","formatted_body":"re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min","msgtype":"m.text"},"m.relates_to":{"event_id":"$z7LPBSNd6l4LCkPSLjpcEhGomH7HxdpvierXzYh0pvI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509311194,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$q8RcDyr1IwytJV9S39hSOdeGOV_otcUOPSEZdU99Z8s"},
{"content":{"body":" * re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors i recall","format":"org.matrix.custom.html","formatted_body":" * re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors i recall","m.new_content":{"body":"re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors i recall","format":"org.matrix.custom.html","formatted_body":"re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors i recall","msgtype":"m.text"},"m.relates_to":{"event_id":"$z7LPBSNd6l4LCkPSLjpcEhGomH7HxdpvierXzYh0pvI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509324493,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uRpnY4JyTy1CD77eU3pmswiWRmC-U2-5iRVhsx61ncA"},
{"content":{"body":" * re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors that i recall","format":"org.matrix.custom.html","formatted_body":" * re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors that i recall","m.new_content":{"body":"re max/min, `1n < 3` works, so `Math.max(1n, 3)` should work. i see zero concern with \"mixing\" in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors that i recall","format":"org.matrix.custom.html","formatted_body":"re max/min, <code>1n &lt; 3</code> works, so <code>Math.max(1n, 3)</code> should work. i see zero concern with &quot;mixing&quot; in max/min, because there's no accidental precision loss, which was the only motivation for mixing errors that i recall","msgtype":"m.text"},"m.relates_to":{"event_id":"$z7LPBSNd6l4LCkPSLjpcEhGomH7HxdpvierXzYh0pvI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509362655,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8eZX6ocI3Wm8OtJu7lbTHvEzvAA8ceaPVG0_niQT6so"},
{"content":{"body":"I fully support \"maths operations for BigInts\", not so sure about the choice of functions listed here","msgtype":"m.text"},"ts":1630509405828,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9a_PNqRCvuZ0BK8D6GhozpcYeKQIJ97mDKY0ZZzWmi0"},
{"content":{"body":"yeah, +1 for excluding transcedentals","msgtype":"m.text"},"ts":1630509423605,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oDrYx92TB-bTITp3JGWYgMbt2B03Zy2SPkF9YbrdA1g"},
{"content":{"body":"support for some kind of NS instead of `bigMax` and `bigMin`","format":"org.matrix.custom.html","formatted_body":"support for some kind of NS instead of <code>bigMax</code> and <code>bigMin</code>","msgtype":"m.text"},"ts":1630509502742,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5OfKdAoJGevIGMJFCR3yEAOqc2Jmlex-NFo01DrW9qM"},
{"content":{"body":"though also, +1 for hashing out the exact list in stage 1","msgtype":"m.text"},"ts":1630509509027,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1P-s3IFRna8p4mPycjr3r9pZkq7Jv-XANmogUABajEw"},
{"content":{"body":"i don't know if it's bizarre that arbitrary precision math doesn't \"just work\"...","msgtype":"m.text"},"ts":1630509570105,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3CeF-6l4tbL6nXA_Eex-P9Gmj3Ti03JYTPWrIC5ptQk"},
{"content":{"body":"max/min isn't \"arbitrary precision\", it's a form of `>` and `<`","format":"org.matrix.custom.html","formatted_body":"max/min isn't &quot;arbitrary precision&quot;, it's a form of <code>&gt;</code> and <code>&lt;</code>","msgtype":"m.text"},"ts":1630509595247,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$X5DqOx8kdHd0bl1NrvyNFOjq6p2s3eSiB3R6shhOiXI"},
{"content":{"body":"if i can do `999999999999999999999999999999999999999999999999999999999999999n > 1`, why can't i put those in max or min?","format":"org.matrix.custom.html","formatted_body":"if i can do <code>999999999999999999999999999999999999999999999999999999999999999n &gt; 1</code>, why can't i put those in max or min?","msgtype":"m.text"},"ts":1630509618626,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hnFppUQqizHFjntwrlYRoOQPXXSuqidOrNWCTJnWarg"},
{"content":{"body":"> because there's no accidental precision loss\n\n`10000000000000000000000n < 10000000000000000000000.1`\n\n`> false`\n\nðŸ¤¨","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>because there's no accidental precision loss</p>\n</blockquote>\n<p><code>10000000000000000000000n &lt; 10000000000000000000000.1</code></p>\n<p><code>&gt; false</code></p>\n<p>ðŸ¤¨</p>\n","msgtype":"m.text"},"ts":1630509640241,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$ijiQcmFXbEV_4r6xjRqfMQVs-Jr2_0Ayyr-ogIQ3xtw"},
{"content":{"body":"ljharb: yes, my comment is about unqualified \"math\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: yes, my comment is about unqualified &quot;math&quot;","msgtype":"m.text"},"ts":1630509660873,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ASu5uWjaEjPZL-ZmkNzRF-pScTAjdq0VLBZfQYJIl8Q"},
{"content":{"body":"in that case the loss happens on the number creation, not part of the `<`","format":"org.matrix.custom.html","formatted_body":"in that case the loss happens on the number creation, not part of the <code>&lt;</code>","msgtype":"m.text"},"ts":1630509661063,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZF_lsIQD-QilZU_I_GHWiBQQUwZmLX8An5WfuXP2O8g"},
{"content":{"body":"You don't know the return type of `Math.min(x, y)` when `x` is a number and `y` is a bigint","format":"org.matrix.custom.html","formatted_body":"You don't know the return type of <code>Math.min(x, y)</code> when <code>x</code> is a number and <code>y</code> is a bigint","msgtype":"m.text"},"ts":1630509661465,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$B_jK0aQETKZ9gFWmt7OK3zfShxJeC-WgANGJis5O1jg"},
{"content":{"body":"I don't really think it's a problem in practice, but it's not like most people know the behavior off-hand","msgtype":"m.text"},"ts":1630509697181,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$tg1o2kwT6yQfZ1R4iFIdYdNQKWdoZdRowRW-91n331U"},
{"content":{"body":"nicolo-ribaudo: the return type is T, the type of your inputs - number if all numbers or non-numbers, bigint if all bigints, number or bigint if both","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: the return type is T, the type of your inputs - number if all numbers or non-numbers, bigint if all bigints, number or bigint if both","msgtype":"m.text"},"ts":1630509698934,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$L5plv1DA9FWJLflj--0wpyuoCpRNm2P3F7V7BhSpR2Y"},
{"content":{"body":"RangeError, surely?","msgtype":"m.text"},"ts":1630509704118,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fX3L_9ucSenENJoS0wc90BwDEqm-3_9X4gapgpqixo8"},
{"content":{"body":" * I don't really think it's a problem in practice, but it's not like most people know the behavior off-hand","m.new_content":{"body":"I don't really think it's a problem in practice, but it's not like most people know the behavior off-hand","msgtype":"m.text"},"m.relates_to":{"event_id":"$tg1o2kwT6yQfZ1R4iFIdYdNQKWdoZdRowRW-91n331U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509705488,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$zmza0cBY7yT362P3bwdhMpw7HURkJVUtcTqqno3YSY4"},
{"content":{"body":"I guess TypeError makes sense from one perspective","msgtype":"m.text"},"ts":1630509712464,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rnRwr_dVLPKk4DkHwc93mucEbtsrHLysEiQPqUfHHLo"},
{"content":{"body":"why would it be an error of any kind if `<` with them isn't","format":"org.matrix.custom.html","formatted_body":"why would it be an error of any kind if <code>&lt;</code> with them isn't","msgtype":"m.text"},"ts":1630509720250,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BiaQx8-dV1Zt9tZ7GUfw_QQPApODoRT9zE0Oz423bBs"},
{"content":{"body":" * why would it be an error of any kind if `<` with them isn't","format":"org.matrix.custom.html","formatted_body":" * why would it be an error of any kind if <code>&lt;</code> with them isn't","m.new_content":{"body":"why would it be an error of any kind if `<` with them isn't","format":"org.matrix.custom.html","formatted_body":"why would it be an error of any kind if <code>&lt;</code> with them isn't","msgtype":"m.text"},"m.relates_to":{"event_id":"$BiaQx8-dV1Zt9tZ7GUfw_QQPApODoRT9zE0Oz423bBs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509725554,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HBi73BCRAnlD8Ao_BVto6YP8cqjT-iRZWVpOtn9HRG4"},
{"content":{"body":"bigint/number mixing errors are about losing precision _by the mixing_. this is not a problem for max/min, just like it's not one for comparison.","format":"org.matrix.custom.html","formatted_body":"bigint/number mixing errors are about losing precision <em>by the mixing</em>. this is not a problem for max/min, just like it's not one for comparison.","msgtype":"m.text"},"ts":1630509737505,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gkH9_8wgnSHT0hdpwIm63HY28dt5FKWYkly0Hy3HLbE"},
{"content":{"body":" * bigint/number mixing errors are about losing precision _by the mixing_. this is not a problem for max/min, just like it's not one for comparison.","format":"org.matrix.custom.html","formatted_body":" * bigint/number mixing errors are about losing precision <em>by the mixing</em>. this is not a problem for max/min, just like it's not one for comparison.","m.new_content":{"body":"bigint/number mixing errors are about losing precision _by the mixing_. this is not a problem for max/min, just like it's not one for comparison.","format":"org.matrix.custom.html","formatted_body":"bigint/number mixing errors are about losing precision <em>by the mixing</em>. this is not a problem for max/min, just like it's not one for comparison.","msgtype":"m.text"},"m.relates_to":{"event_id":"$gkH9_8wgnSHT0hdpwIm63HY28dt5FKWYkly0Hy3HLbE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509754789,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Z2C5Y6qf3TBjjwK8eyt6jsas3LiHkuC0nMCKc7zO_Do"},
{"content":{"body":"ljharb: you can't `<` with 0 operands","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: you can't <code>&lt;</code> with 0 operands","msgtype":"m.text"},"ts":1630509755780,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$l4PFRenWKK9JhBCM6Zk8Hcpm1SiiIfQruzWMENFIYZk"},
{"content":{"body":"sure?","msgtype":"m.text"},"ts":1630509793572,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nRMRLUH493e0vfy2ah__DnN0i801Yf8ES8mkk9KMzzA"},
{"content":{"body":"so min/max with 0 arguments should do what?","msgtype":"m.text"},"ts":1630509815998,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-su6UTofHIOUm1cASyruBiVQsMs5vUK447E6-dJ6rPg"},
{"content":{"body":"`Math.max()` is `-Infinity`, `Math.max(x)` is `x`, and 2+ operands is where it's useful, and also where it matters","format":"org.matrix.custom.html","formatted_body":"<code>Math.max()</code> is <code>-Infinity</code>, <code>Math.max(x)</code> is <code>x</code>, and 2+ operands is where it's useful, and also where it matters","msgtype":"m.text"},"ts":1630509822396,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Ji_6h9qGdq0ZYHDel7YpN3ZCI_3S5oK3kWzrxdiowHI"},
{"content":{"body":"i don't see any issue with `Math.max(...x)` possibly returning either type. if you cared about that, you'd already be ensuring `x` has 2+ items.","format":"org.matrix.custom.html","formatted_body":"i don't see any issue with <code>Math.max(...x)</code> possibly returning either type. if you cared about that, you'd already be ensuring <code>x</code> has 2+ items.","msgtype":"m.text"},"ts":1630509852732,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HV5lpbwWI9fUZnoaU4CnsxTbBWVID8e36K5_MCl4PQ0"},
{"content":{"body":" * i don't see any issue with `Math.max(...x)` possibly returning either type. if you cared about that, you'd already be ensuring `x` has 1+ items.","format":"org.matrix.custom.html","formatted_body":" * i don't see any issue with <code>Math.max(...x)</code> possibly returning either type. if you cared about that, you'd already be ensuring <code>x</code> has 1+ items.","m.new_content":{"body":"i don't see any issue with `Math.max(...x)` possibly returning either type. if you cared about that, you'd already be ensuring `x` has 1+ items.","format":"org.matrix.custom.html","formatted_body":"i don't see any issue with <code>Math.max(...x)</code> possibly returning either type. if you cared about that, you'd already be ensuring <code>x</code> has 1+ items.","msgtype":"m.text"},"m.relates_to":{"event_id":"$HV5lpbwWI9fUZnoaU4CnsxTbBWVID8e36K5_MCl4PQ0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509883324,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6iZaFE-wxfNQVnXqWJrczY9ltj_TLwV6vJQ2PXhgD6I"},
{"content":{"body":"since bigint lacks an ultimate max/min value (infinity) it's nonsensical to put in < 1 items and expect a bigint back, no?","msgtype":"m.text"},"ts":1630509886801,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Yjn65XAwxLxG3AWvl1ZxCUbQoICB80oP33plHBFVJLU"},
{"content":{"body":"yes, so RangeError","msgtype":"m.text"},"ts":1630509906047,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jdkgEMi-YiowlRiBZxw1Y1FkdGYPTQ8KLHgy010-lOo"},
{"content":{"body":"if it were a bigint-only method, sure","msgtype":"m.text"},"ts":1630509917627,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9SA_j_5lAAI8ELdlIXkOTKqxNB4_5cvgdqC43nrFyNM"},
{"content":{"body":"but in this scenario it's a bigint and/or number method.","msgtype":"m.text"},"ts":1630509926119,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CyNYYuISWDKdYbjUUC84QoYb0hhUTBDKJuaQGghBeWA"},
{"content":{"body":"and it already doesn't throw an error, so it can't start now","msgtype":"m.text"},"ts":1630509932115,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EDrkbdDFp14Y7U4zwSbYYbkioe_dJI4b6Z4klpSKxXM"},
{"content":{"body":"and making a new method, that still mixes (because not allowing mixing here is ridiculous), only to throw an error on 0 items (or maybe to satisfy some type system-like mental model?), doesn't seem sufficiently motivated to me","msgtype":"m.text"},"ts":1630509968589,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fPDEavS86GaM-Ve_7lzmstRIhVRovP_-LpPgI9KceZg"},
{"content":{"body":" * and making a new method, that still mixes (because not allowing mixing here is ridiculous), only to throw an error on 0 items (or maybe to satisfy some type system-like mental model?), doesn't seem sufficiently motivated to me","m.new_content":{"body":"and making a new method, that still mixes (because not allowing mixing here is ridiculous), only to throw an error on 0 items (or maybe to satisfy some type system-like mental model?), doesn't seem sufficiently motivated to me","msgtype":"m.text"},"m.relates_to":{"event_id":"$fPDEavS86GaM-Ve_7lzmstRIhVRovP_-LpPgI9KceZg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630509983556,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aiPIHgoE10oZRykI4UOQHfCqIdp6ww7oNeSmuY0J6hY"},
{"content":{"body":"I'm leaning toward new methods on BigInt here","msgtype":"m.text"},"ts":1630509991710,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$e6bTl5JiUnirQg135_xwjKjNc3iCt9j3UKi_54-bL2o"},
{"content":{"body":"sqrt is easy I think, but it's the only obvious sometimes-irrational one which works","msgtype":"m.text"},"ts":1630510001393,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G9p7HCy1y0hET9AP-kH2wyTNF-9o5rHQUSOQB-Sa3HE"},
{"content":{"body":"and cbrt, of course","msgtype":"m.text"},"ts":1630510005798,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D1x4qbnOwM8hHMVCZ0F8Z5QyxUP7fYIuGPREfa60Xn4"},
{"content":{"body":"for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and `BigInt.max` allowing both seems odd.","format":"org.matrix.custom.html","formatted_body":"for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and <code>BigInt.max</code> allowing both seems odd.","msgtype":"m.text"},"ts":1630510020643,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0k70aap9oMAdnWZpSPn_J2iel9_8BpXkA0t56_Afw34"},
{"content":{"body":" * for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and `BigInt.max` allowing both seems odd.","format":"org.matrix.custom.html","formatted_body":" * for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and <code>BigInt.max</code> allowing both seems odd.","m.new_content":{"body":"for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and `BigInt.max` allowing both seems odd.","format":"org.matrix.custom.html","formatted_body":"for max and min specifically, i would be staunchly opposed to a bigint-only one. these methods only should allow mixing. and <code>BigInt.max</code> allowing both seems odd.","msgtype":"m.text"},"m.relates_to":{"event_id":"$0k70aap9oMAdnWZpSPn_J2iel9_8BpXkA0t56_Afw34","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510031655,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qtTt2slWOS0urgZoD-SnqFBE6ly66NAhhg2J1AGHyI8"},
{"content":{"body":"you can already sort a mixed array, right? ","msgtype":"m.text"},"ts":1630510068362,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$NpMP_Zim3purzTcFBsbgqYLu8ze2WypAv-dF_2UJEKA"},
{"content":{"body":"ljharb: the only reason to allow mixing is if you have a list which has both bigint and numbers, which you should not have and it is not clear to me that the language ought to have explicit support for","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: the only reason to allow mixing is if you have a list which has both bigint and numbers, which you should not have and it is not clear to me that the language ought to have explicit support for","msgtype":"m.text"},"ts":1630510086760,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1jECIAr2ObxfEEiUxkRSXrlZSWpDMHlpiP_z287b4Lw"},
{"content":{"body":"so then Max and Min is logical","msgtype":"m.text"},"ts":1630510091017,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$O_xnmoVcaqL7hUi-dffPe1kGDaDirePg1Uk6EHR8d9k"},
{"content":{"body":"i don't understand \"should not have\"","msgtype":"m.text"},"ts":1630510102434,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tiW7_ZlXm-BaKtmLk9ZbBm3Xo9GVa6P5vRv8pc_fkDI"},
{"content":{"body":"me neither, why should you not have mixed arrays?","msgtype":"m.text"},"ts":1630510116276,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$RVA5YsfeMCVQ9kf3AXEerCBA-2uAwCJqcLKKu5BO-J0"},
{"content":{"body":"sarahghp: are you referring to the default sort comparator? you can sort anything","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: are you referring to the default sort comparator? you can sort anything","msgtype":"m.text"},"ts":1630510117323,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$sptrHLjRRkkEU-dSmjVO4hMtV_Er0uUFnhlgzoqAObw"},
{"content":{"body":"Oh but I have some question about BigInt or Decimals in general","msgtype":"m.text"},"ts":1630510135605,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$zJ1WBrG1UdR8HyD0yYfBdsy3tmxKLqY6-AVse1IIt6w"},
{"content":{"body":" * also the language already has explicit support for it - `mixedArray.reduce((a, b) => a + b)` works fine, eg.","format":"org.matrix.custom.html","formatted_body":" * also the language already has explicit support for it - <code>mixedArray.reduce((a, b) =&gt; a + b)</code> works fine, eg.","m.new_content":{"body":"also the language already has explicit support for it - `mixedArray.reduce((a, b) => a + b)` works fine, eg.","format":"org.matrix.custom.html","formatted_body":"also the language already has explicit support for it - <code>mixedArray.reduce((a, b) =&gt; a + b)</code> works fine, eg.","msgtype":"m.text"},"m.relates_to":{"event_id":"$Dhud54wu5ATP83N7j1RhDk2ChHuOJ255VPuwh_7vG7s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510141897,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EmKOXFaOcTpnOHwPLEFRk2oekGFZTBddNugshI1JmKI"},
{"content":{"body":"what if I do `1m/3m`? Can I get a infinite precise decimal number to represent `1/3` in Math?","format":"org.matrix.custom.html","formatted_body":"what if I do <code>1m/3m</code>? Can I get a infinite precise decimal number to represent <code>1/3</code> in Math?","msgtype":"m.text"},"ts":1630510181020,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$RG2H4rj40gOwDuV-uvGHE5CbZmd5__jVNjkYW2OQvao"},
{"content":{"body":"Jack Works: that's an open question for the bigdecimal proposal","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: that's an open question for the bigdecimal proposal","msgtype":"m.text"},"ts":1630510204119,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$8JTPhnvojHqEnZrrsdVbjGl9hB0EC7FbZzNs4cjd6vQ"},
{"content":{"body":"but for decimal128 that's not as big as issue","msgtype":"m.text"},"ts":1630510215436,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$VomL4j023qHBVdum2mP4u7Vos6lDCRinVzDic-ItVmc"},
{"content":{"body":"or for fractions","msgtype":"m.text"},"ts":1630510223344,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$meRE7may19yeNdc583WMsulN_b3tNMIHTzGsIbRuKUA"},
{"content":{"body":"> <@michaelficarra:matrix.org> sarahghp: are you referring to the default sort comparator? you can sort anything\n\nI mean the default sort on array works, and so, as a practitioner, I would expect max and min to work as well. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sptrHLjRRkkEU-dSmjVO4hMtV_Er0uUFnhlgzoqAObw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: are you referring to the default sort comparator? you can sort anything</blockquote></mx-reply>I mean the default sort on array works, and so, as a practitioner, I would expect max and min to work as well.","m.relates_to":{"m.in_reply_to":{"event_id":"$sptrHLjRRkkEU-dSmjVO4hMtV_Er0uUFnhlgzoqAObw"}},"msgtype":"m.text"},"ts":1630510231998,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$Q8Zcn7NT_t8ygQWCsSKgeGo9R5l_0_kZUrdDCO0dsrQ"},
{"content":{"body":"the default sort on array uses strings","msgtype":"m.text"},"ts":1630510251527,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bI11O7zoltVWDmtqs23ZUqThJkzWt4o232Vp40w3Sto"},
{"content":{"body":"sounds like we need Fractions? syntax like `1/3r` ","format":"org.matrix.custom.html","formatted_body":"sounds like we need Fractions? syntax like <code>1/3r</code>","msgtype":"m.text"},"ts":1630510252796,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$3urkLx_r3Gm7gpFTegeLw1MBfIr8ROFGEs8_yvyjGJM"},
{"content":{"body":"that is, sorts by string order","msgtype":"m.text"},"ts":1630510263564,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fLp2tKfgXLtFSUR0ifA0-KlaGjEI-2myJWa0iKZqUyQ"},
{"content":{"body":"yeah, either fractions or decimal128 would avoid the 1/3 issue","msgtype":"m.text"},"ts":1630510271600,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$mzkog073hUsyha9_-Z7gt4n-_H26opUirWJNd3LRI5s"},
{"content":{"body":"yes I know why it works, but I am saying from DX not an internal reason why it would be expected to work","msgtype":"m.text"},"ts":1630510272291,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$v5d6Ze0EAW-p_bQl4oSSxcLg3JQ9opBaD7OcAEtJS4w"},
{"content":{"body":"but then there's other issues that bigdecimals solve... it's a complicated tradeoff","msgtype":"m.text"},"ts":1630510285113,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$0kIYfVYJdCkUnA47xZn095C06RMjmuIERSeaA9Mh8GI"},
{"content":{"body":" * yes I know why it works, but I am saying from DX not an internal reason why it would be expected to work","m.new_content":{"body":"yes I know why it works, but I am saying from DX not an internal reason why it would be expected to work","msgtype":"m.text"},"m.relates_to":{"event_id":"$v5d6Ze0EAW-p_bQl4oSSxcLg3JQ9opBaD7OcAEtJS4w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510285138,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$hVMl9xXhPh1mR3NoJ9kQi5gT5rJjGQefQ-NKm1dGjgc"},
{"content":{"body":"I do strongly think that a `bigSqrt` should truncate to a bigint rather than returning a number or decimal or anything","format":"org.matrix.custom.html","formatted_body":"I do strongly think that a <code>bigSqrt</code> should truncate to a bigint rather than returning a number or decimal or anything","msgtype":"m.text"},"ts":1630510325101,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D8lqQb3OWdzbDkuBszCbadYsDPjfLddrL-eviOUtVYA"},
{"content":{"body":"+1 for stage 1.","msgtype":"m.text"},"ts":1630510388843,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$BBEMozyf8_j4mC0sZLP5Eu3xhzqQhzkpdydefpVF5HE"},
{"content":{"body":"not sure we really need `bigMin/bigMax`, it seems `Infinity` is ok for empty... because the worst case is just throw TypeError so no need to have `bigMin/bigMax` if it also throw TypeError ðŸ˜‚","format":"org.matrix.custom.html","formatted_body":"not sure we really need <code>bigMin/bigMax</code>, it seems <code>Infinity</code> is ok for empty... because the worst case is just throw TypeError so no need to have <code>bigMin/bigMax</code> if it also throw TypeError ðŸ˜‚","msgtype":"m.text"},"ts":1630510424801,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Z2J_f83Ng081Q2cJAxOsIsOaMa2e4N-gGsMT-724dnQ"},
{"content":{"body":"always love to see improved math","msgtype":"m.text"},"ts":1630510427794,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$f4EZoNVlORsZsxRoixkgC_HTY_Pw_xnD5G0ckON2n7Y"},
{"content":{"body":"and for example, in 6.1.6.2.3 BigInt::exponentiate, it doesn't say what will happen if the result is too big to represent. Should the engine give a rounded/approximated result or should the engine throw a TypeError?","msgtype":"m.text"},"ts":1630510449413,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ZJrxLF0YoW18ZjOYdFRS1RdbdnkHZKcyotRyTO5GMVg"},
{"content":{"body":"> <@jackworks:matrix.org> and for example, in 6.1.6.2.3 BigInt::exponentiate, it doesn't say what will happen if the result is too big to represent. Should the engine give a rounded/approximated result or should the engine throw a TypeError?\n\nI suppose it should throw TypeError or OOM ??","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZJrxLF0YoW18ZjOYdFRS1RdbdnkHZKcyotRyTO5GMVg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>and for example, in 6.1.6.2.3 BigInt::exponentiate, it doesn&#39;t say what will happen if the result is too big to represent. Should the engine give a rounded/approximated result or should the engine throw a TypeError?</blockquote></mx-reply>I suppose it should throw TypeError or OOM ??","m.relates_to":{"m.in_reply_to":{"event_id":"$ZJrxLF0YoW18ZjOYdFRS1RdbdnkHZKcyotRyTO5GMVg"}},"msgtype":"m.text"},"ts":1630510496012,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$U3_L6R5BmjWTF3HNWgzbXAJWIxrOMxyMjCG04c-Kgbc"},
{"content":{"body":"RangeError","msgtype":"m.text"},"ts":1630510521320,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$gXe2gNs2SNEmA77_LlLB1iOk-_T4EqFLL1j_6Xse4Mk"},
{"content":{"body":"I think it currently OOMs","msgtype":"m.text"},"ts":1630510540536,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5J8G-Ra7TK8EkVJcwRqCoN9R19j1YXCqwGZcji4Hey8"},
{"content":{"body":"sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n[10n, 200].sort()\n> [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n[10n, 200].sort()\n&gt; [10n, 200]\n</code></pre>\n","msgtype":"m.text"},"ts":1630510548234,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Fd9TFgELBxmmxRNqvEFjEKQr9RHKRCq4Zcp63AK7iJs"},
{"content":{"body":"which, presumably we could fix","msgtype":"m.text"},"ts":1630510550539,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fkdq4L173jWVp9-xtHQTgUsFydcvm-7zkmPQJFIGhsc"},
{"content":{"body":" * which, presumably we could fix","m.new_content":{"body":"which, presumably we could fix","msgtype":"m.text"},"m.relates_to":{"event_id":"$Fkdq4L173jWVp9-xtHQTgUsFydcvm-7zkmPQJFIGhsc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510555194,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-SmH9dV4oVS6c6TishZ6UDLTVw-us5kHh3X5Gswr98s"},
{"content":{"body":"(could, not should)","msgtype":"m.text"},"ts":1630510557961,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pMF5vELF9M-PZU9u8bhsguqfPK8KNC8hhnBNrO8RJ4w"},
{"content":{"body":" * sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n> [10n, 200].sort()\n> Â [10n, 200]\n```\n```","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n&gt; [10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n<pre><code></code></pre>\n","m.new_content":{"body":"sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n> [10n, 200].sort()\n> Â [10n, 200]\n```\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n&gt; [10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n<pre><code></code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Fd9TFgELBxmmxRNqvEFjEKQr9RHKRCq4Zcp63AK7iJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510563342,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$c5gosLcfa3YfEHVVmS7ZDJe_7OOwumfgVYRrJU6jCwU"},
{"content":{"body":" * sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n> [10n, 200].sort()\n> Â [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n&gt; [10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n","m.new_content":{"body":"sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n> [10n, 200].sort()\n> Â [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n&gt; [10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Fd9TFgELBxmmxRNqvEFjEKQr9RHKRCq4Zcp63AK7iJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510571651,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uI6oywo-htGWsskn2Xqm0ZI5tr_6IRx68sBuP4-sFRU"},
{"content":{"body":"bakkot: implementations all throw RangeError exceptions. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: implementations all throw RangeError exceptions.","msgtype":"m.text"},"ts":1630510598622,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$18uTN0tzcU2fdrhaAF5EdtFhdQW-S47pqBlS_dhGHEQ"},
{"content":{"body":"Michael Ficarra: sort (without pass comparator) is always strange ðŸ˜‚","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: sort (without pass comparator) is always strange ðŸ˜‚","msgtype":"m.text"},"ts":1630510602101,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$I-Pd3I4JBOezMVU00FW-_jiPXCYW0vYc0X_EOfSS30s"},
{"content":{"body":"Rick Waldron: oh, huh, good to know","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: oh, huh, good to know","msgtype":"m.text"},"ts":1630510607162,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6Eo2BoPofFkCpySLSCvagg5a98afsEScfDhFIZPm-qs"},
{"content":{"body":"my recollection is evidently incorrect then","msgtype":"m.text"},"ts":1630510623034,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dMHzaSRxvs7KHIO7QVubvDgDCqUbE5YNcIkmC0VEEyY"},
{"content":{"body":"Michael Ficarra: in this case \"works\" stands for \"does not throw error\" ðŸ˜†. Since > < works/works on a mixed array too, I think it's an argument for why it's surprising when Math functions throw on BigInt","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: in this case &quot;works&quot; stands for &quot;does not throw error&quot; ðŸ˜†. Since &gt; &lt; works/works on a mixed array too, I think it's an argument for why it's surprising when Math functions throw on BigInt","msgtype":"m.text"},"ts":1630510628955,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$8TAFmesM_qf09n61kjVZq6pxZMeNWOeqJNfYhuC-0Fg"},
{"content":{"body":"bakkot: 262 specifies it. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: 262 specifies it.","msgtype":"m.text"},"ts":1630510634319,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$Tq1TWswaflnb3W2FTjolCU4VOdF-euCgA-P_2sTEWpk"},
{"content":{"body":"huh!","msgtype":"m.text"},"ts":1630510641314,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AIlZPw79aqlZFmuNsqyqgRTktS3oHiHVBJH2XHkOq2g"},
{"content":{"body":"https://tc39.es/ecma262/#sec-numeric-types","msgtype":"m.text"},"ts":1630510643770,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$IvxgSx8ww5PcM1S9KItgYseglqKmg_a67f7aWo-T9tk"},
{"content":{"body":"I did not think we ever specified what to do when you hit implementation limits","msgtype":"m.text"},"ts":1630510653718,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lC1AkQEwLCnOCJ97exW5TOd102sADG7fb0k7kQPmUgA"},
{"content":{"body":"T::exponentiate(x, y) -> T, may throw RangeError","msgtype":"m.text"},"ts":1630510659728,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$TcyUUnYOaZ4toCtV6LHm8nkcd-pUdIweV9TVeKQ6-Bg"},
{"content":{"body":"I thought we just assumed infinite memory etc","msgtype":"m.text"},"ts":1630510662254,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vYwihyiWPdI2hzYbIli_KzXKV7vHiAeMg2Thp9ZpZ3s"},
{"content":{"body":"TIL.","msgtype":"m.text"},"ts":1630510665495,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EvupRm7si6pgja9uGbaWLqZAfRuW-FPNBJaRwxEQVd0"},
{"content":{"body":"sarahghp: but `<` and `>` don't Tostring, I'm confused how this is related at all","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: but <code>&lt;</code> and <code>&gt;</code> don't Tostring, I'm confused how this is related at all","msgtype":"m.text"},"ts":1630510673968,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3gBIKjZXYLyRwpd8mKYUtvePqqeNzl_v4jGMk2Fa3K4"},
{"content":{"body":" * sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n[10n, 200].sort()\n> Â [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n[10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n","m.new_content":{"body":"sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n[10n, 200].sort()\n> Â [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n[10n, 200].sort()\n&gt; Â [10n, 200]\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Fd9TFgELBxmmxRNqvEFjEKQr9RHKRCq4Zcp63AK7iJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510743206,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Bj-HDAUPX2fkQyGR2xYTPPq3cXJgdPQ1g1vDMDVkW3I"},
{"content":{"body":" * sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n[10n, 200].sort()\n> [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n[10n, 200].sort()\n&gt; [10n, 200]\n</code></pre>\n","m.new_content":{"body":"sarahghp: I wouldn't call this \"working\":\n```\n[10n, 2].sort()\n> [10n, 2]\n[10n, 200].sort()\n> [10n, 200]\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: I wouldn't call this &quot;working&quot;:</p>\n<pre><code>[10n, 2].sort()\n&gt; [10n, 2]\n[10n, 200].sort()\n&gt; [10n, 200]\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Fd9TFgELBxmmxRNqvEFjEKQr9RHKRCq4Zcp63AK7iJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630510755056,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xTqzRDVG4WFOkK5QRvsygKuuGpAKYbiradWzqOHoenQ"},
{"content":{"body":"Michael Ficarra: I'm saying that from a practitioner perspective, given `[].sort()` and `<` and `>` work on mixed types, it is surprising that `max` and `min` do not. I do understand why it makes sense internally.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: I'm saying that from a practitioner perspective, given <code>[].sort()</code> and <code>&lt;</code> and <code>&gt;</code> work on mixed types, it is surprising that <code>max</code> and <code>min</code> do not. I do understand why it makes sense internally.","msgtype":"m.text"},"ts":1630510839772,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$04479erGd1dSNodjRlPar5tznRC15cUM7rEUxVb-sx4"},
{"content":{"body":"POO: can we get another note taker?","msgtype":"m.text"},"ts":1630511026867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r0W9DPUjEVEDKK8vBntSteYLFbHOlhetvNJv5hmcm4M"},
{"content":{"body":"I'm distracted currently","msgtype":"m.text"},"ts":1630511031045,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-43fXZ9_gdCiJscztaAMcga79F9c9o6b348eqw74yis"},
{"content":{"body":"missed most of Shu","msgtype":"m.text"},"ts":1630511041115,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZE_BIVCQP-K9GmawdvBMBPJHdFjQrl3lHnEFrnZMDzQ"},
{"content":{"body":"I can help until the break","msgtype":"m.text"},"ts":1630511047677,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SZN4sfDukgL_CGTokCF6EPOSNZdhQWEKRyaAC7lef78"},
{"content":{"body":"I can help","msgtype":"m.text"},"ts":1630511047806,"senderName":"Josh Blaney","senderId":"@joshbdev:matrix.org","id":"$UpGgOSPHhAchfpOwpM2vgsIhm2qb7rjIfSP3oh5leC8"},
{"content":{"body":"am I hearing someone's discord notifications lmao","msgtype":"m.text"},"ts":1630511192865,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$SiUrCP0zd7tWtuC1HOLJET7sGOgTNIrLDc60VIS6zhU"},
{"content":{"body":"I keep thinking I'm getting pinged","msgtype":"m.text"},"ts":1630511201882,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$ZpHd3LFypcOMCD3T2vkVgUyNvhUfwILQfnwun6bEFDM"},
{"content":{"body":"lol same","msgtype":"m.text"},"ts":1630511202196,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$zVZGEQLNNaIJj2g72aSi-XVF0AbeTfk7AYpiHzT1qpM"},
{"content":{"body":"same :)","msgtype":"m.text"},"ts":1630511213002,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$aMKSur6W_KHguy3KnLI5A7pqRpHDU4S6Vv9A4c0NeVg"},
{"content":{"body":"`Math.max(1, 1n)`?","format":"org.matrix.custom.html","formatted_body":"<code>Math.max(1, 1n)</code>?","msgtype":"m.text"},"ts":1630511332774,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$hHexpzJyphDkRIv9QOYlB4ib_kRSL5IkT3K8CPSx4eI"},
{"content":{"body":"Richard Gibson: first-wins, I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@gibson042:matrix.org\">Richard Gibson</a>: first-wins, I think","msgtype":"m.text"},"ts":1630511373009,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kQouQcKRzCF1SWWdnao_PjvoDJnnxfNJnANtb4dM9D4"},
{"content":{"body":"same for `Math.min`?","format":"org.matrix.custom.html","formatted_body":"same for <code>Math.min</code>?","msgtype":"m.text"},"ts":1630511434255,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5io6P82QXPPyk3LV_1YM_H0olPVuOHs-79c0SbnkeY0"},
{"content":{"body":"presumably","msgtype":"m.text"},"ts":1630511470251,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9r7JI3BpME6Hi0oFZWbVSfzwQZZAgq_u-Xr3QQITFiE"},
{"content":{"body":"it should be equivalent to \"stable-sort by `<`, then take the first element\"","format":"org.matrix.custom.html","formatted_body":"it should be equivalent to &quot;stable-sort by <code>&lt;</code>, then take the first element&quot;","msgtype":"m.text"},"ts":1630511507706,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6jT1LMiAt-shHJpgehPxaK8DQb0L9U_KHWuDrW6VQqY"},
{"content":{"body":"or, equivalently, a loop which does `if (cur > max) cur = max`","format":"org.matrix.custom.html","formatted_body":"or, equivalently, a loop which does <code>if (cur &gt; max) cur = max</code>","msgtype":"m.text"},"ts":1630511532906,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sTYw-ssk1WBSEWOlH7_FukDtscWYFzX_rh34jTEWU6w"},
{"content":{"body":"`max = cur`, surely","format":"org.matrix.custom.html","formatted_body":"<code>max = cur</code>, surely","msgtype":"m.text"},"ts":1630511725726,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5L5hYRtghdTK5dnYzRSy1_mrmO_SxUIuuXYbe5cucRU"},
{"content":{"body":"uhhh yeah that one","msgtype":"m.text"},"ts":1630511878081,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Zg6UAw16bvO_G4dfK8AjNmQntFSUHQn6ib0q5SmFr9E"},
{"content":{"body":"https://github.com/js-choi/proposal-bigint-math/issues/3","msgtype":"m.text"},"ts":1630511878471,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$DQeJXuk0MaBaj6RzX8rCQf0e8AsXyREk3wzD5lLxazQ"},
{"content":{"body":"shu: to expand on something ljharb said in the last remark, there's a lot of transitive code that depends on this pattern, but arguably there's also a lot that _should_ but does not yet, because they haven't realized it's a problem","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: to expand on something <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> said in the last remark, there's a lot of transitive code that depends on this pattern, but arguably there's also a lot that <em>should</em> but does not yet, because they haven't realized it's a problem","msgtype":"m.text"},"ts":1630512417555,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$qld-6db7NGje5ZxIOkb-A0XgoX4V57rNLIb8cSpBTBE"},
{"content":{"body":"(was going to put this as a reply on the queue, but we were out of time)","msgtype":"m.text"},"ts":1630512437874,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$D8cMMibOtjdceANOhI7CKe1pTqCz-PBhSm5u4vgudPs"},
{"content":{"body":"i hear you, and that helps convince me this is of higher importance","msgtype":"m.text"},"ts":1630512459702,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wxaqg1vOSL2GL6--42s5NVIRPs00tu-ng22JAp_hx94"},
{"content":{"body":"re \"holistic\": imo, pipeline + method extraction syntax + getIntrinsic would make for a much more ergonomic approach, on top of which perhaps a very ergonomic syntactic solution could be developed if it were warranted","msgtype":"m.text"},"ts":1630512487359,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zwbTn69sCjwAJdtCfTvrxx0DBMKCuyuw-KvMd8sHCW8"},
{"content":{"body":"but you know, what i hear is also not that this is _impossible_ today, just that it sucks to have to write","format":"org.matrix.custom.html","formatted_body":"but you know, what i hear is also not that this is <em>impossible</em> today, just that it sucks to have to write","msgtype":"m.text"},"ts":1630512501903,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QwFC5f7m0NgX2KXakGpuUeajs4dh2qNV424vKEbPn8Q"},
{"content":{"body":"very true","msgtype":"m.text"},"ts":1630512519949,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dMujtsJyJvVTK4J0N460nVN4Z9acOwYsUWbxURuTXXA"},
{"content":{"body":"altho CSP makes some of it impossible","msgtype":"m.text"},"ts":1630512526853,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$th6jitNbrJUCz8aU5aOd7uCr_w1anDbG_FXCwI5MKdM"},
{"content":{"body":"don't put that evil on me","msgtype":"m.text"},"ts":1630512544308,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WtL-RccZkeTFjyZJmTFNYevE5JF_Lzsh_rmWaz80DQo"},
{"content":{"body":" * altho CSP makes some of it impossible (but, \"make syntax-reachable intrinsics just be global\" would address that part)","m.new_content":{"body":"altho CSP makes some of it impossible (but, \"make syntax-reachable intrinsics just be global\" would address that part)","msgtype":"m.text"},"m.relates_to":{"event_id":"$th6jitNbrJUCz8aU5aOd7uCr_w1anDbG_FXCwI5MKdM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630512545876,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VpqoDuLH6-I1WI4ttz_UcZ6SeCJrnzgfUiAXmYKEzcU"},
{"content":{"body":"i want to remain not touching csp","msgtype":"m.text"},"ts":1630512561481,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oSaDXO10EtHnNT7F0NuVkbl9QfaKC87md32JaVSovKM"},
{"content":{"body":"ljharb: oh one thing i forgot to say was i probably don't want enumeration","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: oh one thing i forgot to say was i probably don't want enumeration","msgtype":"m.text"},"ts":1630512724917,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kE6_xq7SlXa7I_bUpMO9JgkscYtCxIrIC3ThS1gjYHU"},
{"content":{"body":"so preference from me is separate proposal there","msgtype":"m.text"},"ts":1630512746016,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$e6DROiXOypc9spoQmgCS80HxodOmvIwMqSFAZQ1Ipqs"},
{"content":{"body":"> <@ljharb:matrix.org> re \"holistic\": imo, pipeline + method extraction syntax + getIntrinsic would make for a much more ergonomic approach, on top of which perhaps a very ergonomic syntactic solution could be developed if it were warranted\n\nI plan to collaborate with you and hopefully HE Shi-Jun on a simple method-extraction proposal (https://github.com/js-choi/proposal-bind-operator/).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zwbTn69sCjwAJdtCfTvrxx0DBMKCuyuw-KvMd8sHCW8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>re &quot;holistic&quot;: imo, pipeline + method extraction syntax + getIntrinsic would make for a much more ergonomic approach, on top of which perhaps a very ergonomic syntactic solution could be developed if it were warranted</blockquote></mx-reply>I plan to collaborate with you and hopefully <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a> on a simple method-extraction proposal (https://github.com/js-choi/proposal-bind-operator/).","m.relates_to":{"m.in_reply_to":{"event_id":"$zwbTn69sCjwAJdtCfTvrxx0DBMKCuyuw-KvMd8sHCW8"}},"msgtype":"m.text"},"ts":1630512757674,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$eNSzCalG3WTY4I6TrKAavedMJuJgKdzyURcC4ZxIPuQ"},
{"content":{"body":"I plan to propose it next meeting. ","msgtype":"m.text"},"ts":1630512786310,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$-yipge0AGHzjyTqiOVyywkNvyyzmwePdfVAJ-dgsefU"},
{"content":{"body":"looking forward to it","msgtype":"m.text"},"ts":1630512877976,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$P45nASM2BZjOjr1m7hU0M1VARw9GgicrkUHELigoA0Y"},
{"content":{"body":"> <@shuyuguo:matrix.org> ljharb: oh one thing i forgot to say was i probably don't want enumeration\n\ni agree \"that preference\" means it should be a separate proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kE6_xq7SlXa7I_bUpMO9JgkscYtCxIrIC3ThS1gjYHU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: oh one thing i forgot to say was i probably don't want enumeration</blockquote></mx-reply>i agree &quot;that preference&quot; means it should be a separate proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$kE6_xq7SlXa7I_bUpMO9JgkscYtCxIrIC3ThS1gjYHU"}},"msgtype":"m.text"},"ts":1630512901551,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$l9XgypTCqAftLxbCPS9LB4zWamv8s9T0IvGQbBtt3Sw"},
{"content":{"body":"Do all the chairs have edit access to Reflector issues? I just learned of the HackMD for the agenda because it was left in the comments for the reflector issue and not put in the initial post as well.","msgtype":"m.text"},"ts":1630512952629,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$CT8fGA0Vzwwr297IBjV9M8qAsYLuSYbuoUpMwxu5rOc"},
{"content":{"body":"all the delegates do","msgtype":"m.text"},"ts":1630512974874,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bWD4hN6lqDR2q6JfQcoeM5RajjPFHchtWwWMWj3caEg"},
{"content":{"body":"i thought they didn't like posting it because it's usually under significant flux","msgtype":"m.text"},"ts":1630512979198,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mfVqNBuXk-p9o-xvvptai6JSKcH5tlv8tKwcoWMklJY"},
{"content":{"body":"it's a source of truth in the sense that that's the document they use to coordinate among themselves and to resolve rescheduling conflicts","msgtype":"m.text"},"ts":1630512999287,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-qoPMmwkUa5o_4-Rv7kugDKXvhXP0Z8KGrgXoNlwOzw"},
{"content":{"body":"note that some people may not like it if you edit their comments, so best to only do it with explicit permission; for the record everyone is always free to fix my typos, update URLs, add missing info, things like that, as long as it's correct :-p","msgtype":"m.text"},"ts":1630513020285,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Cj_pkmTtVzBty6AE7Ln-E5gjMIdo9MzPZu9BM-Ug1Oc"},
{"content":{"body":"i'm hearing in TDZ that it shoudl be trusted over the tcq, so I'm not sure","msgtype":"m.text"},"ts":1630513027353,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$eypwV0WBkzkQ5TIN-2OFpQGWwjGGok2xVp-z-c3ptLI"},
{"content":{"body":"it should be is my understanding","msgtype":"m.text"},"ts":1630513038919,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zjRVe1k4M4dYi89J191aTsdRB_p35kH1ZCDr1Pzu2sg"},
{"content":{"body":"i've only ever used TCQ as a source of \"what's happening now\"","msgtype":"m.text"},"ts":1630513042376,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LjY7qXmP3gZ-LX5rAlR6-CZvPxWMZNXcsozu1q25VsU"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1630513049758,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iaxRBcXzE8evGbTSP7k-FPHSbcOQFJKSaNuO0eAUFoI"},
{"content":{"body":" * i've only ever used TCQ as a source of \"what's happening now\", as opposed to relying on it to predict the future","m.new_content":{"body":"i've only ever used TCQ as a source of \"what's happening now\", as opposed to relying on it to predict the future","msgtype":"m.text"},"m.relates_to":{"event_id":"$LjY7qXmP3gZ-LX5rAlR6-CZvPxWMZNXcsozu1q25VsU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630513051277,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$06UjRs0aLIeVfaOtCLpihlcPKMwSUNNhkXz9Sm2hYfU"},
{"content":{"body":"TCQ hasn't been updated with the agenda items we will bring forward, will work on that","msgtype":"m.text"},"ts":1630513069225,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$NOlOMxUs_MS_dLV4TL1G4PEifrTeq7s0ZtrryHK-qeI"},
{"content":{"body":"bterlson: am i up next? i.e. is it possible to accommodate adam klein's constraint request? it was added pretty late so understandable if not","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: am i up next? i.e. is it possible to accommodate adam klein's constraint request? it was added pretty late so understandable if not","msgtype":"m.text"},"ts":1630513203952,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1QfoF_DF7fpa09AI8vGhyotC8ryXyq5ZJtCDmNlFDwQ"},
{"content":{"body":"checking","msgtype":"m.text"},"ts":1630513225019,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$Q3m9hzgcplBPgU1tTysF8S2cUJkvQUMjK8F3t50Hjjc"},
{"content":{"body":"shu: confirm you mean the fixed shape item?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: confirm you mean the fixed shape item?","msgtype":"m.text"},"ts":1630513288611,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$zNMXpER5w8kib7CDxRxERI-wx5dXY-to0IRM7EWKzfo"},
{"content":{"body":"i do, yes","msgtype":"m.text"},"ts":1630513295072,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sKLsJgW7smodNhyUVemYNw56n23gQ7lgznZtVbFo7Iw"},
{"content":{"body":"adam is unable to make 10-11 AM PT, so if we switch my two items to the last hour that resolves that. just not sure if possible","msgtype":"m.text"},"ts":1630513333565,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JBybDnrWdB8kcL_SVnRs7yiD_W6pXo2oBvacrtFKfcc"},
{"content":{"body":"shu in this case I'll need to sync with Caridy too as he should join for this discussion.","msgtype":"m.text"},"ts":1630513572092,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$x7bEXAvWuw6pZRdiGAuSdHQaCnD-vU_VTrQsoMt0_nw"},
{"content":{"body":"shu: I think we can make it work, plan to present 1100 PDT","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I think we can make it work, plan to present 1100 PDT","msgtype":"m.text"},"ts":1630513585047,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$n3xenGuAPobELLAJms9Xx7iv4DHiehZm51I5rZ_vDVk"},
{"content":{"body":" * shu:  in this case I'll need to sync with Caridy too as he should join for this discussion.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  in this case I'll need to sync with Caridy too as he should join for this discussion.","m.new_content":{"body":"shu:  in this case I'll need to sync with Caridy too as he should join for this discussion.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  in this case I'll need to sync with Caridy too as he should join for this discussion.","msgtype":"m.text"},"m.relates_to":{"event_id":"$x7bEXAvWuw6pZRdiGAuSdHQaCnD-vU_VTrQsoMt0_nw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630513587000,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$-a1eah_zwi5_aCEgQrRbJbfc-7y331e6RQ4MQDDWzvI"},
{"content":{"body":"leobalter: hopefully that will work for caridy?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: hopefully that will work for caridy?","msgtype":"m.text"},"ts":1630513601157,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$Y0Rd6y2w-e9uHVrD3gjLYGew15pcCJIYtpH6eA-6eac"},
{"content":{"body":"bterlson: I hope so, let me ping him","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: I hope so, let me ping him","msgtype":"m.text"},"ts":1630513635439,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$rVvsYNfiZYh3Kj1JL4esm5GeHbIJBxFmRtlbMl4yN24"},
{"content":{"body":"rbuckton: would you be able to present regexp at 1000 PDT?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: would you be able to present regexp at 1000 PDT?","msgtype":"m.text"},"ts":1630513639313,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$Gog2qzC2Lfb-Sy0qDeFLksczftOFmAfNyCz_4nW0ULE"},
{"content":{"body":"I understand we have overflow for this meeting, but in this case, and I'll miss discussing Jordan's topic \"Tightening host restrictions to improve testing\". I believe this relates to EcmaScript improvements/fixes and I'm biased to prefer that over new features, but my same bias also wants some of the Stage 1 features.","msgtype":"m.text"},"ts":1630513792638,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$TdAUORbKPps5d9H2IeR7YtQZwFx3i3IVOLBUlztUXA0"},
{"content":{"body":"time is unfair","msgtype":"m.text"},"ts":1630513795120,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$6iaGfv8v0Sf424GC_JOl9kQm6xcrjW3qeKfmiewsOmc"},
{"content":{"body":"The emerging plan is thus: 1:00 EDT RegExp feature parity rbuckton (with ljharb tightening host restrictions as backup in case Ron cannot present), 2:00 EDT fixed shape for objects shu, 2:45 small resizable buffers shu ","format":"org.matrix.custom.html","formatted_body":"The emerging plan is thus: 1:00 EDT RegExp feature parity <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> (with <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> tightening host restrictions as backup in case Ron cannot present), 2:00 EDT fixed shape for objects <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>, 2:45 small resizable buffers <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>","msgtype":"m.text"},"ts":1630513973069,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$qEkYofV3nBkFBwSTytVKNFlEB9VdYXqrTmJjaCrxPzQ"},
{"content":{"body":"will update TCQ in a few moments","msgtype":"m.text"},"ts":1630514001501,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$CQvXp6LC52gQUQtCnPSwid5G3TE_Qr6JAclxBi_-dx8"},
{"content":{"body":"great, thank you!","msgtype":"m.text"},"ts":1630514089248,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$T-cVm7SgifnDttFjhC4RWk0z-qfhjbdK4SdgwLIJSrQ"},
{"content":{"body":"sorry for last minute request","msgtype":"m.text"},"ts":1630514164916,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$881m4uJtWKbLKn7JOoAjr7Y1X1QK5mM7pB1xqKj8dxg"},
{"content":{"body":"TCQ is now updated. And HackMD","msgtype":"m.text"},"ts":1630514175786,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$1rTST9iOoXP6k1tD47HAerhYwLynJx0jY4wE3IIjhIA"},
{"content":{"body":"Next is Ron Buckton with RegExp Feature Parity","msgtype":"m.text"},"ts":1630514186312,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$qKFeUQBeenJmy-K1FztENKRDa4R5ypNl8BB1TzYLxHM"},
{"content":{"body":"please go to the reflector for the result from this morning's session","msgtype":"m.text"},"ts":1630514313889,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nuDXaTRDSTa_sCTjr5bmk8UAat29hUtVB-ocrsxQ7DY"},
{"content":{"body":"i will get dinner","msgtype":"m.text"},"ts":1630514388577,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nAR6dkazpAFKQfgnP7zO2vkH50ERIfMHaBdaqxwU1mA"}
]