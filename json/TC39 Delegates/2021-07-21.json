[
{"content":{"body":"I'm interested in adding a new [[Frozen]] slot on all objects, it's stronger than Object.freeze (let's call it Magic.freeze for now), spec object can opt-in to support this stronger frozen. The result is we will have a generalized method to freeze a native object (if they support this operation).\n\ne.g. you can still setDate on a Object.freeze(date), but you cannot do it on a Magic.freeze(date) object.","msgtype":"m.text"},"ts":1626834779415,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4_uh-CQjBlkU8nduytJn6VMqoFWbVeV5dIcnsuoqu54"},
{"content":{"body":"It can be a more powerful and generalized solution to cover the Freeze ArrayBuffer I presented before","msgtype":"m.text"},"ts":1626834833197,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xfUqx5UkMu_1BD7XWVNMHSkKmffhYbtZk6pVqcWvaS0"},
{"content":{"body":"Host are encouraged to support freezing internal state when it's meaningful. (e.g. Web URL class can support this, but DOM object should not)","msgtype":"m.text"},"ts":1626834906316,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$REiBztf8Zt1_FDU0-jlgCEY66c_6IKkSq5CJAqZgnjM"},
{"content":{"body":"Is this solution likely to be supported? If not I'll not spend time on preparing and presenting it","msgtype":"m.text"},"ts":1626834948547,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xMeXAxEnQCevEuSeQp3BplBrownL3dtRwkLL8aqAl7Q"},
{"content":{"body":"> <@jackworks:matrix.org> I'm interested in adding a new [[Frozen]] slot on all objects, it's stronger than Object.freeze (let's call it Magic.freeze for now), spec object can opt-in to support this stronger frozen. The result is we will have a generalized method to freeze a native object (if they support this operation).\n> \n> e.g. you can still setDate on a Object.freeze(date), but you cannot do it on a Magic.freeze(date) object.\n\nOr add a new integrity level that stronger than sealed and frozen in SetIntegrityLevel and provide a new API for it\n","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4_uh-CQjBlkU8nduytJn6VMqoFWbVeV5dIcnsuoqu54?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br />I'm interested in adding a new [[Frozen]] slot on all objects, it's stronger than Object.freeze (let's call it Magic.freeze for now), spec object can opt-in to support this stronger frozen. The result is we will have a generalized method to freeze a native object (if they support this operation).\n\ne.g. you can still setDate on a Object.freeze(date), but you cannot do it on a Magic.freeze(date) object.</blockquote></mx-reply>Or add a new integrity level that stronger than sealed and frozen in SetIntegrityLevel and provide a new API for it\n","m.relates_to":{"m.in_reply_to":{"event_id":"$4_uh-CQjBlkU8nduytJn6VMqoFWbVeV5dIcnsuoqu54"}},"msgtype":"m.text"},"ts":1626835275993,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$1uFYViOXqQaGqsQYDfOll_X9RidKaLmCtvbe07qCJf8"},
{"content":{"body":"I'm pretty skeptical that this can be made to work well (based on various goals raised by TC39 delegates)","msgtype":"m.text"},"ts":1626846487364,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$oG4aIXql_stjgq-n0oV_OZd_qZ4zn2O51115mW66x7o"},
{"content":{"body":"Well, I should think more about the opt-in part. Maybe that makes it OK","msgtype":"m.text"},"ts":1626846572109,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$rLMHyifkwy6df8IVy1uZ6VVEzfCanRifeuEzVD6QhZU"},
{"content":{"body":"Could you say more about the motivation?","msgtype":"m.text"},"ts":1626846602445,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$EXpzx6tHDZGDPlXWDl2miU7g5FnhISRBsKDr44Xh1_M"},
{"content":{"body":"I guess the simplest way to do this would be a protocol defining a method (possibly a symbol). Can you explain why you framed this as Magic.freeze(date) and not date.freeze()?","msgtype":"m.text"},"ts":1626846720874,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$iQSGSloFj39Bux59_M-JqglqZ8-cDyKDZ0TrF2FIlCs"},
{"content":{"body":"If the NEW freeze is an opt-in feature, how would the NEW freeze ended up being different with Object.freeze when new requirements apply? Broaden the scope of freeze is a breaking change. In that case adding new freeze support might still need a NEW NEW freeze.","msgtype":"m.text"},"ts":1626847040836,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$8oZxOtspcVX17tTtiL9pROIKNr_qGQaQlDp7J3pvFN8"},
{"content":{"body":"Well, there are lots of different constraints about such a feature beyond just web compatibility. For example, it should maybe be hookable for user-defined classes, and interaction with proxies and private fields should be defined","msgtype":"m.text"},"ts":1626847387725,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$TK3SOtqu2BpyYaG42By_QD_4CJ_sp6YUWlKnYqsYMnA"},
{"content":{"body":"Such an advanced freeze has been suggested as a replacement for records and tuples, which is probably a reason I am being too negative here, sorry. I think it would not make sense as a replacement because it wouldn't make the structural equality part of R&T work (since it would be weird for the identity of the value to change just because you Magic.freeze it). But it's OK for you to have that as a non-goal for this other feature (as long as it is not claimed to subsume R&T)","msgtype":"m.text"},"ts":1626847842246,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$iyp8T5XfCzAn-sY3CHolPbeERDlBlyEYXoSS_PWHEAc"},
{"content":{"body":"I really think that immutability needs to be part of the design of the class, and not bolted on later through some external function called on an instance. Temporal is an immutable replacement for date, and includes methods for changing one component without mutation, which are idiomatically done on date through mutation.","msgtype":"m.text"},"ts":1626849360611,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$xpVFKV1eXpRyUZoT-5kpB3SYC6H3HvE1YJCGpJ1aMco"},
{"content":{"body":"Another example is that Tuples are proposed with their array-by-copy methods, and they would seem somehow broken without them (or with the normal array mutation methods)","msgtype":"m.text"},"ts":1626849427686,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$PtBeZr7sFoa4fMF5t6yVM-DZBrWhMCX7R3TRK7IVC1c"},
{"content":{"body":"> <@dehrenberg:igalia.com> I really think that immutability needs to be part of the design of the class, and not bolted on later through some external function called on an instance. Temporal is an immutable replacement for date, and includes methods for changing one component without mutation, which are idiomatically done on date through mutation.\n\nYeah that make sense to me ðŸ‘€","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xpVFKV1eXpRyUZoT-5kpB3SYC6H3HvE1YJCGpJ1aMco?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">@dehrenberg:igalia.com</a><br />I really think that immutability needs to be part of the design of the class, and not bolted on later through some external function called on an instance. Temporal is an immutable replacement for date, and includes methods for changing one component without mutation, which are idiomatically done on date through mutation.</blockquote></mx-reply>Yeah that make sense to me ðŸ‘€","m.relates_to":{"m.in_reply_to":{"event_id":"$xpVFKV1eXpRyUZoT-5kpB3SYC6H3HvE1YJCGpJ1aMco"}},"msgtype":"m.text"},"ts":1626854263434,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rNR8g8bNdpxzdX1LhuS9xzMZkYwjTkdsVICclmZ5G2k"},
{"content":{"body":"Is the SES meeting collect the attendee every time like incubator call? Otherwise it will be always too late for me","msgtype":"m.text"},"ts":1626883402382,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lFoGoLpgUsL_4D9VvFmgzDaHIR_r5qG81OU_g1EqDIw"},
{"content":{"body":"i think the SES meetings are always at a fixed time because they usually have a fixed attendee list, whereas the incubator calls are re-scheduled each time because the attendee list is different each time","msgtype":"m.text"},"ts":1626884028218,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0QNS6OVzsKaATLOTVTIINiODOch6yjEnqONLwTVYRug"},
{"content":{"body":"> <@shuyuguo:matrix.org> i think the SES meetings are always at a fixed time because they usually have a fixed attendee list, whereas the incubator calls are re-scheduled each time because the attendee list is different each time\n\nOh ðŸ˜¢","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0QNS6OVzsKaATLOTVTIINiODOch6yjEnqONLwTVYRug?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />i think the SES meetings are always at a fixed time because they usually have a fixed attendee list, whereas the incubator calls are re-scheduled each time because the attendee list is different each time</blockquote></mx-reply>Oh ðŸ˜¢","m.relates_to":{"m.in_reply_to":{"event_id":"$0QNS6OVzsKaATLOTVTIINiODOch6yjEnqONLwTVYRug"}},"msgtype":"m.text"},"ts":1626884060684,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$i8jJcD8WXq1xUmKR9fm_WMUqJhZzRLlqhmFQZ2aYdnM"},
{"content":{"body":"but i'm not part of that group, please reach out to someone there about how to accommodate APAC delegates","msgtype":"m.text"},"ts":1626884185163,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HybFoHQ41U9WRqtFSiCK8gJ8pI2XU2YLUfpDJi6hzZw"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1626884354090,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dyAziGoeOjVXyqb9xN-33zujEGezYIb1c34xMZCw26A"},
{"content":{"body":"yeah, we could definitely move that meeting; it was moved previously to be more Europe-friendly. Probably email Kris Kowal for next steps here. It'd be great to have you in the calls--I think everyone in the group really likes your perspective on these topics.","msgtype":"m.text"},"ts":1626884428621,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$h_OqFX9yyDNTeVD2mYhuplaEtjWuJpiLexGYmS5G1n0"},
{"content":{"body":"(narrator: the time they chose was not very Europe-friendly)","msgtype":"m.text"},"ts":1626884443232,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$xi42my7RC-MLIbfMMfPpTjtcCiwjXLEnYTGjy15BnLA"},
{"content":{"body":"anyway I'll raise this at our meeting in half an hour","msgtype":"m.text"},"ts":1626884699560,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$YHgJxWIDmvxlLhdihAKWH85ZU9IY8tKiCScCsWcRlLg"}
]