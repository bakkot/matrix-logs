[
{"content":{"body":"as I missed the discussions about **ShadowRealm** yesterday, some async comments post reading the meeting notes.\n\n*For clarity and for the records, I no longer speak as a champion of the proposal, but as a regular delegate.*\n\nIt seems the only real blocker for Stage advancement is getting agreement from DOM vendors, which I agree. I don't think - and I hope I'm right - that stage 2.7 or stage 3 would change how DOM vendors would react or accept the proposal.\n\nThe challenge for DOM vendors to accept is having the design (resolved), tests (resolved), and **capacity for implementation**. \n\nI don't think DOM vendors would be able to prioritize or willing to implement it just for the sake of releasing a new feature. I believe this one is up to the champions finding sponsorship for the implementation. That's something I no longer control or can exercise much leverage.\n\nGiven all the facts and where we are at with ShadowRealm, offering funding for implementation of ShadowRealm is the best chance to get it accepted, and then yes, move it up to stages 3 and 4. This may still require vendors spending some cycles on review, but I think it's doable. \n\ncc ptomato dminor shu Michael Saboff ","format":"org.matrix.custom.html","formatted_body":"<p>as I missed the discussions about <strong>ShadowRealm</strong> yesterday, some async comments post reading the meeting notes.</p>\n<p><em>For clarity and for the records, I no longer speak as a champion of the proposal, but as a regular delegate.</em></p>\n<p>It seems the only real blocker for Stage advancement is getting agreement from DOM vendors, which I agree. I don't think - and I hope I'm right - that stage 2.7 or stage 3 would change how DOM vendors would react or accept the proposal.</p>\n<p>The challenge for DOM vendors to accept is having the design (resolved), tests (resolved), and <strong>capacity for implementation</strong>.</p>\n<p>I don't think DOM vendors would be able to prioritize or willing to implement it just for the sake of releasing a new feature. I believe this one is up to the champions finding sponsorship for the implementation. That's something I no longer control or can exercise much leverage.</p>\n<p>Given all the facts and where we are at with ShadowRealm, offering funding for implementation of ShadowRealm is the best chance to get it accepted, and then yes, move it up to stages 3 and 4. This may still require vendors spending some cycles on review, but I think it's doable.</p>\n<p>cc <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a> <a href=\"https://matrix.to/#/@dminor:mozilla.org\">dminor</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> <a href=\"https://matrix.to/#/@mlsaboff:matrix.org\">Michael Saboff</a></p>\n","m.mentions":{"user_ids":["@pchimento:igalia.com","@dminor:mozilla.org","@shuyuguo:matrix.org","@mlsaboff:matrix.org"]},"msgtype":"m.text"},"ts":1733272049368,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$XUpzzWZMjZrK0hzJEcD8GtKazhxIWvYSMqt0xULSt0Q"},
{"content":{"body":"it doesn’t, only immer’s maintainers","m.relates_to":{"event_id":"$TAdlU6FjI7A9CFX6NsRu1-NhOGsDD3O7Ig_cllTXZ9I","is_falling_back":true,"m.in_reply_to":{"event_id":"$4my-hzI_imscnHo-0llbiANWHmKBj6Iy2KKemqglAhU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733277707529,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MV61HWa1PDF7Qm8srqN_-V2rZd40NnKzbRBSk5OnqwQ"},
{"content":{"body":"I don't think the problem is capacity for implementation but rather that people remain unconvinced that ShadowRealm is a good idea for the web. In that case, even if the implementation of ShadowRealm was externally funded, there's no guarantee that patches would be reviewed and landed.","m.mentions":{},"msgtype":"m.text"},"ts":1733323001420,"senderName":"dminor","senderId":"@dminor:mozilla.org","id":"$GfMGMlWv5IWY8AMYd9rSv0UyVKPoKB3uAgKDlElizTs"},
{"content":{"body":"i unfortunately am likely gonna miss plenary today and tomorrow 😭\n\nbut something i wanted to just throw out there regarding error stacks\n\nrather than trying to standardize (or at least codify) what already exists, what if we created a new `Error.prototype.get standardizedStack` or something which we can build entirely from scratch (i.e. a uniform format across engines)?\n\nto be clear this wouldn't preclude engines from having their own `stack` that contains whatever details the engine wants to provide\n\ninstead it would give an opportunity for all of us to agree on at least some minimal meaning for \"what does a stack look like?\" and \"how do i get one?\"","format":"org.matrix.custom.html","formatted_body":"<p>i unfortunately am likely gonna miss plenary today and tomorrow 😭</p>\n<p>but something i wanted to just throw out there regarding error stacks</p>\n<p>rather than trying to standardize (or at least codify) what already exists, what if we created a new <code>Error.prototype.get standardizedStack</code> or something which we can build entirely from scratch (i.e. a uniform format across engines)?</p>\n<p>to be clear this wouldn't preclude engines from having their own <code>stack</code> that contains whatever details the engine wants to provide</p>\n<p>instead it would give an opportunity for all of us to agree on at least some minimal meaning for &quot;what does a stack look like?&quot; and &quot;how do i get one?&quot;</p>","msgtype":"m.text"},"ts":1733331524115,"senderName":"Devin Rousso","senderId":"@dcrousso:matrix.org","id":"$v5FLx-GM7u5eE-lQw8Ym0eGR_s_e9KLX9b3ElS27dHE"},
{"content":{"body":"is TLA considered harmful at this point","m.mentions":{},"msgtype":"m.text"},"ts":1733332076340,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$6Mnayk745-oENDljKFTYMC_0x8F9jzH8FV11ABs4dGQ"},
{"content":{"body":"🌏️🔫🧑‍🚀","m.mentions":{},"msgtype":"m.text"},"ts":1733332123524,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NUpg-v790qli2kUbWC1ynyOZK_clvmnTen9-b5HZrdQ"},
{"content":{"body":"you mean standardized string, or standardized structured dataa?","format":"org.matrix.custom.html","formatted_body":"you mean standardized string, or standardized structured dataa?","m.mentions":{"user_ids":["@dcrousso:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v5FLx-GM7u5eE-lQw8Ym0eGR_s_e9KLX9b3ElS27dHE"}},"msgtype":"m.text"},"ts":1733332176929,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$ojfZburpDOIe5Soe-gEFnNm0L3Xq6X9VmCzL1kpgPwA"},
{"content":{"body":"if the former, why?","m.mentions":{},"msgtype":"m.text"},"ts":1733332182571,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$iKAQro2unR7RaLg5zK43nzZoKnhMODV3whErWctyoAQ"},
{"content":{"body":" * you mean standardized string, or standardized structured data?","format":"org.matrix.custom.html","formatted_body":" * you mean standardized string, or standardized structured data?","m.mentions":{},"m.new_content":{"body":"you mean standardized string, or standardized structured data?","format":"org.matrix.custom.html","formatted_body":"you mean standardized string, or standardized structured data?","m.mentions":{"user_ids":["@dcrousso:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ojfZburpDOIe5Soe-gEFnNm0L3Xq6X9VmCzL1kpgPwA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733332191318,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$HrUpGEXcMdsGYDvpWYoxzb5C1bgo-EWhK53Z5l_uId0"},
{"content":{"body":"PSA: we will be ending for the day at the break.  no afternoon session today","m.mentions":{},"msgtype":"m.text"},"ts":1733332837873,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$FoHoptgN7HVbc9d6i7i5Wloij2qg4wam8JcmG843dCQ"},
{"content":{"body":"cf. https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3kN3Fbul5yr4xdcqDvHKLhEzv9fQrgow7d_JyqG48_c / https://matrixlogs.bakkot.com/TC39_Delegates/2024-12-03#L118\n> I want standard error stacks just so I can deny (read) access to the call stack in a standardised way","format":"org.matrix.custom.html","formatted_body":"<p>cf. https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3kN3Fbul5yr4xdcqDvHKLhEzv9fQrgow7d_JyqG48_c / https://matrixlogs.bakkot.com/TC39_Delegates/2024-12-03#L118</p>\n<blockquote>\n<p>I want standard error stacks just so I can deny (read) access to the call stack in a standardised way</p>\n</blockquote>\n","m.mentions":{"user_ids":["@dcrousso:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v5FLx-GM7u5eE-lQw8Ym0eGR_s_e9KLX9b3ElS27dHE"}},"msgtype":"m.text"},"ts":1733333340550,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$c6ghEJu_4BfdfuL_yoIjl9Uboo73Iz19keeGP6xrxNw"},
{"content":{"body":"Sorry I missed some of this. Is import.sync + source modules insufficient for Node.js? Or is evaluation not going to permitted in import.sync if you already have the source?","m.mentions":{},"msgtype":"m.text"},"ts":1733333571527,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$OpThjf_55uokU2x_ooTZAcxcz31_pu7vRilQfPgmTO4"},
{"content":{"body":"What's insufficient is if `import.sync(\"./a/file.js\")` throws for a non-already-imported file","format":"org.matrix.custom.html","formatted_body":"What's insufficient is if <code>import.sync(\"./a/file.js\")</code> throws for a non-already-imported file","m.mentions":{},"msgtype":"m.text"},"ts":1733333601348,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$I4RdBp8U_JicCA3u9sR74KTnxuByQKnwMdC9GDCpEM8"},
{"content":{"body":"I understand maintenance is also a concern, but I believe we went through years of cycles on how realm access would be good for the web. \n\nShadowRealm is the form that was proposed using direct feedback from vendors and it still resolves the business proposition.","m.mentions":{},"m.relates_to":{"event_id":"$GfMGMlWv5IWY8AMYd9rSv0UyVKPoKB3uAgKDlElizTs","is_falling_back":true,"m.in_reply_to":{"event_id":"$GfMGMlWv5IWY8AMYd9rSv0UyVKPoKB3uAgKDlElizTs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733333811777,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$IZJ1hxoQ8tvZMWTw5qxcxBguITUMUskxOoGuIX6yqzU"},
{"content":{"body":"we don't need to rediscuss this here, we can agree to disagree. It should be up to the champions to move the proposal forward.","m.mentions":{},"m.relates_to":{"event_id":"$GfMGMlWv5IWY8AMYd9rSv0UyVKPoKB3uAgKDlElizTs","is_falling_back":true,"m.in_reply_to":{"event_id":"$IZJ1hxoQ8tvZMWTw5qxcxBguITUMUskxOoGuIX6yqzU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733333875197,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$6MmpZOFHsUMCOXffNy8Ze0k-lMBq6YsuMSi-eywvTnI"},
{"content":{"body":"For what reason? Because it's not possible to know all the files users want to import? Otherwise the bundling pass could just gather all the imports and replace `import.sync(\"./a.js\");` with a prepass that exposes a bunch of `aSourceModule`s and does `import.sync(aSourceModule)`","format":"org.matrix.custom.html","formatted_body":"For what reason? Because it's not possible to know all the files users want to import? Otherwise the bundling pass could just gather all the imports and replace <code>import.sync(\"./a.js\");</code> with a prepass that exposes a bunch of <code>aSourceModule</code>s and does <code>import.sync(aSourceModule)</code>","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$I4RdBp8U_JicCA3u9sR74KTnxuByQKnwMdC9GDCpEM8"}},"msgtype":"m.text"},"ts":1733333979120,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$d7ZSSpdtu00szCyE8tApkrdDZ8I2gkBeeJU_5VBVnkQ"},
{"content":{"body":"There is no bundling pass in Node.js, it runs modules directly. The use cases for `import.meta.require(\"./a/file.js\")` is synchronous conditional loading, for example to only load a polyfill when running in Node.js and not when running in the browser","format":"org.matrix.custom.html","formatted_body":"There is no bundling pass in Node.js, it runs modules directly. The use cases for <code>import.meta.require(\"./a/file.js\")</code> is synchronous conditional loading, for example to only load a polyfill when running in Node.js and not when running in the browser","m.mentions":{},"msgtype":"m.text"},"ts":1733334129007,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tcqz0lBTSuE6ory8YSnIF3Wid3P5s_EoABSdiTvecT4"}
]