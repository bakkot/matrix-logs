[
{"content":{"body":"tcq is back! 🥳","msgtype":"m.text"},"ts":1626138386560,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P9o7odg_YrJqxq5rVvoBiTfsnY84xjbo3rCmCJ1IS9k"},
{"content":{"body":"Yes sorry about TCQ friends. Freak accident combined with paternity leave was a bad combo :-P","msgtype":"m.text"},"ts":1626138605201,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$OL7NJJwUdvUzOPgxG4QaCxBG5V54LfaoX2NNKnpkadM"},
{"content":{"body":"Can an admin update the Reflector link in the room description?","msgtype":"m.text"},"ts":1626138734011,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$owAD_tDkoniKsyArMg3RoH9IvBTM5k8oQUTT0vwN3fY"},
{"content":{"body":"https://github.com/tc39/Reflector/issues/380","msgtype":"m.text"},"ts":1626138734620,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4l00hUglRiBoAL0kzEwxQLaPjmaYSSwIKkKEyhN434U"},
{"content":{"body":"bterlson: Congrats on paternity!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: Congrats on paternity!","msgtype":"m.text"},"ts":1626138769901,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$n0LN5ckNZXiF2JeLadnYiLO5sGXCFKuedx0e5XWe0wM"},
{"content":{"body":"Does anyone know what the current status of archival is, in terms of whether we're managing to archive everything in our GitHub org, and how to access the archives?","msgtype":"m.text"},"ts":1626139247713,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$emywW9hrD-rIpIIE0dX6wckTVZbMUbLcBwWgdbXquLw"},
{"content":{"body":"why are there multiple JSON standards? I thought ECMA-404 was the \"canonical\" JSON standard but apparently IETF has its own JSON?","msgtype":"m.text"},"ts":1626140071785,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$h3umsVtB8wT9KHDUB47gU93KhGaIzwINOA0DhfMpBYQ"},
{"content":{"body":"everyone considers their own standard canonical!","msgtype":"m.text"},"ts":1626140124592,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$renZcpCMtMsiF0HNOOZmAIijgSluOYDO1Omt7IRe6xE"},
{"content":{"body":"well, let me rephrase, I thought JSON was TC39's domain...","msgtype":"m.text"},"ts":1626140159357,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$iKUxAuQYe7i0ly9dERT9_f9nvCvKMhPpA3JihBsLs9Q"},
{"content":{"body":"https://datatracker.ietf.org/doc/html/rfc8259 btw","msgtype":"m.text"},"ts":1626140164855,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$AVGTVkYXFtBe1FEGG_2U-CzNGKTfVrE9gRaTiTvdFc4"},
{"content":{"body":"a musical canon of standards / a round of JSON?","msgtype":"m.text"},"ts":1626140175574,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$JgxlP2Lte5w55Xfxfx7ucBkZMIXa9mOtGx8ARQloYSY"},
{"content":{"body":" * a musical canon of standards / a round of JSON?","m.new_content":{"body":"a musical canon of standards / a round of JSON?","msgtype":"m.text"},"m.relates_to":{"event_id":"$JgxlP2Lte5w55Xfxfx7ucBkZMIXa9mOtGx8ARQloYSY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626140202852,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AreR8YSPYsxfaTD5141eGGjESy-HGo1wPNKMp5xrEGU"},
{"content":{"body":"I see them as complimentary standards. ECMA402 is very conservative, describes syntax mechanically, doesn't add much editorial fluff or advisory information","msgtype":"m.text"},"ts":1626140249282,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$aBcFbcwq2-429SQGTMD8j88QciazK3h9dIo22GkxR1k"},
{"content":{"body":"wonder if there's any difference between the two standards: if the IETF standard is a subset/profile then I guess that's not _that_ unexpected.","format":"org.matrix.custom.html","formatted_body":"wonder if there's any difference between the two standards: if the IETF standard is a subset/profile then I guess that's not <em>that</em> unexpected.","msgtype":"m.text"},"ts":1626140253036,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$xAp54aP36fjxNQKEUlee1lOwsAQ7_JuhEqii0f3msiQ"},
{"content":{"body":"I use 8259 when I need to show people why it's a bad idea to use the complete grammar in ECMA-404","msgtype":"m.text"},"ts":1626140277016,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$b43HMNTAOulmZ1gYP4gUlW1GTnbQ9iaHJGQpIPpqCmM"},
{"content":{"body":" * I see them as complimentary standards. ECMA404 is very conservative, describes syntax mechanically, doesn't add much editorial fluff or advisory information","m.new_content":{"body":"I see them as complimentary standards. ECMA404 is very conservative, describes syntax mechanically, doesn't add much editorial fluff or advisory information","msgtype":"m.text"},"m.relates_to":{"event_id":"$aBcFbcwq2-429SQGTMD8j88QciazK3h9dIo22GkxR1k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626140286137,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$kJd45WQ0zNV7tRBMZeql9aAz85avEBjtErXVhCB-DxM"},
{"content":{"body":"JSON is cross language/platform :)","msgtype":"m.text"},"ts":1626140296203,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Ww-ZSeKck1BVlua19rlq2m-MtyBeF97grbGq1rruxc8"},
{"content":{"body":"e.g. if you expect precision greater than IEEE754 doubles, , you're going to have a bad time, and RFC8259 helpfully calls that out","msgtype":"m.text"},"ts":1626140333763,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$BDuVzYl492VwRg0xo3XuxA4LnWssFo4S0H1q8BT_RoY"},
{"content":{"body":"thanks for pointing out the differences. Is something on that published somewhere? (maybe you should write something, it'll be useful 🙈)","msgtype":"m.text"},"ts":1626140389187,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$5UcjsbubdaMC4EaqvCUlc5206zswqjG6h-3o-r4fZVY"},
{"content":{"body":"but I generally expected the IETF standard to be more... concise. This is definitely a fun data point!","msgtype":"m.text"},"ts":1626140433034,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$pJqDoeVBShwW8XETfQLsAWqGYeXIKupAlIVGZluMeAM"},
{"content":{"body":"the next IETF meeting (november 2021) is supposed to be in-person...","msgtype":"m.text"},"ts":1626140617212,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$x-j45x8o44n8FG8kkWAM7s6mvd7H8ftyCT72AAzKyiY"},
{"content":{"body":"You can ctrl+f rfc8259 for the phrase \"interoperable in the sense that\" to see the places where IETF suggested you avoid some corner of JSON","msgtype":"m.text"},"ts":1626140624653,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$h0a-KC9JUpeUtNzcDebMc3ec1BvjQl6gLMeQCDxZmho"},
{"content":{"body":"https://datatracker.ietf.org/doc/html/rfc8259#section-1.2 includes explicit reconciliation:\n> The reference to ECMA-404 in the previous sentence is normative, not with the usual meaning that implementors need to consult it in order to understand this document, but to emphasize that there are no inconsistencies in the definition of the term \"JSON text\" in any of its specifications... If there is a difference found between them, ECMA and the IETF will work together to update both documents.","format":"org.matrix.custom.html","formatted_body":"<p>https://datatracker.ietf.org/doc/html/rfc8259#section-1.2 includes explicit reconciliation:</p>\n<blockquote>\n<p>The reference to ECMA-404 in the previous sentence is normative, not with the usual meaning that implementors need to consult it in order to understand this document, but to emphasize that there are no inconsistencies in the definition of the term &quot;JSON text&quot; in any of its specifications... If there is a difference found between them, ECMA and the IETF will work together to update both documents.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1626140626187,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$F2SwaiXRYnCuX340QvtAc-V9kiJDd9NyWuTt_9KTHSI"},
{"content":{"body":"Yeah, JSON itself do not support specific type, there is always confusion/complain about int64","msgtype":"m.text"},"ts":1626140632802,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$pV6VMdjDMZ8OS7VG926Be4amujMmqILCFttwMXoOgI8"},
{"content":{"body":"> <@bterlson:matrix.org> You can ctrl+f rfc8259 for the phrase \"interoperable in the sense that\" to see the places where IETF suggested you avoid some corner of JSON\n\nneat, thanks!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$h0a-KC9JUpeUtNzcDebMc3ec1BvjQl6gLMeQCDxZmho?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">@bterlson:matrix.org</a><br>You can ctrl+f rfc8259 for the phrase &quot;interoperable in the sense that&quot; to see the places where IETF suggested you avoid some corner of JSON</blockquote></mx-reply>neat, thanks!","m.relates_to":{"m.in_reply_to":{"event_id":"$h0a-KC9JUpeUtNzcDebMc3ec1BvjQl6gLMeQCDxZmho"}},"msgtype":"m.text"},"ts":1626140679796,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rz0VvxotfgzBxYkBG6fT_7vhKqKua6HcUytELKQFdCM"},
{"content":{"body":"We also have the trouble of serialization of BigInt/Date/etc.","msgtype":"m.text"},"ts":1626140692424,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$mlMUyG-qVbIxpjrYkAqbYOBt5xEd1Dqsr4kd97acYgI"},
{"content":{"body":"HE Shi-Jun: what's wrong with ISO8601/RFC3339 for Date serialization?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: what's wrong with ISO8601/RFC3339 for Date serialization?","msgtype":"m.text"},"ts":1626140726113,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$MWX2gwHykD-sx2mvebGaEjfUe8BpnUwe3IeOHQUqJmI"},
{"content":{"body":"One problem we run in to is you need to know schema to know whether to treat a string value as a date value","msgtype":"m.text"},"ts":1626140749443,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$rZQ4zMiCGT4o9iO4xjGZWRFuITTB7MRSXWgAKyAxFGI"},
{"content":{"body":"The problem is you don't know whether it's a date value or string :playful:","msgtype":"m.text"},"ts":1626140769198,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ohlI-WkCn2dR-mbwvZCl_Q0Fak2YAqYZgl6_MxBcm6c"},
{"content":{"body":"implementations which detect date-like strings and convert to date types have been highly problematic in the past","msgtype":"m.text"},"ts":1626140778339,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$WPOpxkbyZbVR5qoFxFDSXWAFxhLCVlO0iUCwek8wyxM"},
{"content":{"body":"int64 has similar problems - there is no good option. You encode as a number literal and lose precision as the json document traverses a JS runtime. Or you encode as a string and you either need schema or users have to deal with converting to int64 themselves.","msgtype":"m.text"},"ts":1626140844772,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$tq8Uzdvsjo4Ub7ou6GMn43tCaNEGhxTNhJlnp-Mbpuk"},
{"content":{"body":" * int64 has similar problems - there is no good option. You encode as a number literal and lose precision as the json document traverses a JS runtime. Or you encode as a string and you either need schema or users have to deal with converting to int64 themselves.","m.new_content":{"body":"int64 has similar problems - there is no good option. You encode as a number literal and lose precision as the json document traverses a JS runtime. Or you encode as a string and you either need schema or users have to deal with converting to int64 themselves.","msgtype":"m.text"},"m.relates_to":{"event_id":"$tq8Uzdvsjo4Ub7ou6GMn43tCaNEGhxTNhJlnp-Mbpuk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626140857041,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$htyXWDupozMxhqNlxyvxKL-JUpBfjFaHhXC21vW0A1o"},
{"content":{"body":"Previously I wrote a JSON hint proposal ( https://gist.github.com/hax/5691ca8acdf9179e63043857cdc3616b ) to solve the problem in general , does anyone interest in that?","msgtype":"m.text"},"ts":1626140861042,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Ojkn-TGdRB2T2m5FBk4DKTrT1JmseANym63MvzwOImw"},
{"content":{"body":"> <@haxjs:matrix.org> Previously I wrote a JSON hint proposal ( https://gist.github.com/hax/5691ca8acdf9179e63043857cdc3616b ) to solve the problem in general , does anyone interest in that?\n\nthat does sound cool, thanks","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Ojkn-TGdRB2T2m5FBk4DKTrT1JmseANym63MvzwOImw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Previously I wrote a JSON hint proposal ( https://gist.github.com/hax/5691ca8acdf9179e63043857cdc3616b ) to solve the problem in general , does anyone interest in that?</blockquote></mx-reply>that does sound cool, thanks","m.relates_to":{"m.in_reply_to":{"event_id":"$Ojkn-TGdRB2T2m5FBk4DKTrT1JmseANym63MvzwOImw"}},"msgtype":"m.text"},"ts":1626140877683,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$X0NixWoG2NbtB8UVt1XdcmwPoYgWt1G8azxzcbo3dWA"},
{"content":{"body":"well I dunno what's so wrong assuming valid ISO8601 strings were dates? but I might be missing something here","msgtype":"m.text"},"ts":1626140913167,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$mHOxtzqNh30340VpvppM5fx9838xP33wPA06CChhP_s"},
{"content":{"body":"There are many problems 😁","msgtype":"m.text"},"ts":1626140937690,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$Uqh95VA8_mTJ45BuRaGjS9WRA2_ZG4q5YY96jwqxhkQ"},
{"content":{"body":"For example, performance - you are now attempting to parse every string field.","msgtype":"m.text"},"ts":1626140952895,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$DsbyMVr2rVR0o9X6uq0sf_NuGEQ4Hk56E2N5k3fXKWI"},
{"content":{"body":"well, I'm running a regex over every field","msgtype":"m.text"},"ts":1626140984397,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$85dvmMvEugKQRh_lJkz5Q-q5z_SNi8SbJCublJW4Zjs"},
{"content":{"body":"also, it can become unpredictable what the type of a field actually is - if I so happen to have data that matches the ISO8601 grammar, all of a sudden things are dates, but if not, its strings.","msgtype":"m.text"},"ts":1626140987258,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$2MQPHvARFzpkq5Mq15rcHQ5Z7JoK_pBoN32bVyr72N4"},
{"content":{"body":"and parsing if it matches the regex","msgtype":"m.text"},"ts":1626140994956,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$r5xUHxp1_NPKWijGU5TSkyFXy_tRxwtCBbqiSo_WVhM"},
{"content":{"body":"hm, that's fair. I guess you can assume strings and let users deal with things as they want","msgtype":"m.text"},"ts":1626141029066,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$qgL7JQ0A1r5jDPhS6MzkRREBqbIeTKZpiQiQCmqe4dM"},
{"content":{"body":"I think when you know schema, the practice is fine (we do it all the time in Azure), but it gets messy when dealing with schemaless json","msgtype":"m.text"},"ts":1626141043951,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$G_olB3POxyJGSjHQr2XAcqEh-hUjNersM-RT0p6-N5A"},
{"content":{"body":"sounds fair","msgtype":"m.text"},"ts":1626141091398,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$FxcbD0ncwQx53xQxMMeD0R8_ES1wwzR9sGrnEbByV64"},
{"content":{"body":"You should be able to know _where_ the dates are. Any combing through should be done explicitly by the user if needed...","format":"org.matrix.custom.html","formatted_body":"You should be able to know <em>where</em> the dates are. Any combing through should be done explicitly by the user if needed...","msgtype":"m.text"},"ts":1626141100621,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$jI203MJCiQdcej9r_SYHVb97x894MC-TN7Cvih8zURc"},
{"content":{"body":"yeah I think that's right","msgtype":"m.text"},"ts":1626141155642,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$zo223bylUEmYtij6leIJ9SG-0qen-zfNdLNc2eS7EfY"},
{"content":{"body":"Leo says he is stepping away and has no update","msgtype":"m.text"},"ts":1626142097093,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$sawZpC7-Nvf4ctA21Pg0UZ1mKYyw3u2RowuNS9tlWTw"},
{"content":{"body":"(for test262)","msgtype":"m.text"},"ts":1626142113711,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$6r0i1db9pDrmnlV42AdfK-PBD2BPlE0mvWPU-FQA_cY"},
{"content":{"body":" * Leo says he is stepping away for dinner and has no update","m.new_content":{"body":"Leo says he is stepping away for dinner and has no update","msgtype":"m.text"},"m.relates_to":{"event_id":"$sawZpC7-Nvf4ctA21Pg0UZ1mKYyw3u2RowuNS9tlWTw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626142138113,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$0A_52fZgGpvSJ4btEOOtX1_oZ54BPx0BZQu0bA5FMt8"}
]