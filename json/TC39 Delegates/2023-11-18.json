[
{"content":{"body":"hello, is there any syntax pro? I'm stuck on designing cover grammar","m.mentions":{},"msgtype":"m.text"},"ts":1700322956293,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5wbnIpA5FvBya6Cwjjcu5eu0PfFcax86Zgyz_lSFWU8"},
{"content":{"body":"Grammar:\n\n```\nMatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n```\n\nThis is ambiguous with ExpressionStatement, therefore I need a CoverExpressionStatementAndMatchStatement grammar","format":"org.matrix.custom.html","formatted_body":"<p>Grammar:</p>\n<pre><code>MatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n</code></pre>\n<p>This is ambiguous with ExpressionStatement, therefore I need a CoverExpressionStatementAndMatchStatement grammar</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700323087854,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BoqUHJqGms3bXHyee2Xhe8XCurZzL6HqA2y_9GRrCCc"},
{"content":{"body":" * Grammar:\n\n```\nMatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n```\n\nThis is ambiguous with ExpressionStatement (cannot decide `match (expr)` until see `{` or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar","format":"org.matrix.custom.html","formatted_body":" * <p>Grammar:</p>\n<pre><code>MatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n</code></pre>\n<p>This is ambiguous with ExpressionStatement (cannot decide <code>match (expr)</code> until see <code>{</code> or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar</p>\n","m.mentions":{},"m.new_content":{"body":"Grammar:\n\n```\nMatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n```\n\nThis is ambiguous with ExpressionStatement (cannot decide `match (expr)` until see `{` or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar","format":"org.matrix.custom.html","formatted_body":"<p>Grammar:</p>\n<pre><code>MatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n</code></pre>\n<p>This is ambiguous with ExpressionStatement (cannot decide <code>match (expr)</code> until see <code>{</code> or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BoqUHJqGms3bXHyee2Xhe8XCurZzL6HqA2y_9GRrCCc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700323112718,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$INCXvIUMj0Tma5gJJdtAz9lntvFm2_abf_w2FiVBPns"},
{"content":{"body":" * Grammar:\n\n```\nMatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n```\n\nThis is ambiguous with ExpressionStatement (cannot decide production for `match (expr)` until see `{` or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar","format":"org.matrix.custom.html","formatted_body":" * <p>Grammar:</p>\n<pre><code>MatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n</code></pre>\n<p>This is ambiguous with ExpressionStatement (cannot decide production for <code>match (expr)</code> until see <code>{</code> or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar</p>\n","m.mentions":{},"m.new_content":{"body":"Grammar:\n\n```\nMatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n```\n\nThis is ambiguous with ExpressionStatement (cannot decide production for `match (expr)` until see `{` or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar","format":"org.matrix.custom.html","formatted_body":"<p>Grammar:</p>\n<pre><code>MatchStatement: `match` [nLTh] `(` Expression `) [nLTh] `{ MatchStatementClauses `;` `}`\n</code></pre>\n<p>This is ambiguous with ExpressionStatement (cannot decide production for <code>match (expr)</code> until see <code>{</code> or any other token), therefore I need a CoverExpressionStatementAndMatchStatement grammar</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BoqUHJqGms3bXHyee2Xhe8XCurZzL6HqA2y_9GRrCCc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700323120540,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nYn84a8imGyxugjyp4PNptiVULeTjWJgt-W1ktMBkNM"},
{"content":{"body":"Now I have this cover grammar:\n\n```\nCoverExpressionStatementAndMatchStatement :\n    match [no LineTerminator here] Arguments \n```\n\nThis can cover the match head `match (a, b, c)` (where `,` is comma operator) and a call expression `match (a, b, c)` (where `,` is parameter separator). But I don't know how to use it in ExpressionStatement","format":"org.matrix.custom.html","formatted_body":"<p>Now I have this cover grammar:</p>\n<pre><code>CoverExpressionStatementAndMatchStatement :\n    match [no LineTerminator here] Arguments \n</code></pre>\n<p>This can cover the match head <code>match (a, b, c)</code> (where <code>,</code> is comma operator) and a call expression <code>match (a, b, c)</code> (where <code>,</code> is parameter separator). But I don't know how to use it in ExpressionStatement</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700323248809,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$K9NpWwgjaL72IphpOXXjWyu3oq4LL4kgXA6_ft5Z93U"},
{"content":{"body":"```\nMatchStatement :\n    CoverExpressionStatementAndMatchStatement [no LineTerminator here] `{ ` MatchStatementClauses `;` `}`\n```\n\nThis looks good to me for now","format":"org.matrix.custom.html","formatted_body":"<pre><code>MatchStatement :\n    CoverExpressionStatementAndMatchStatement [no LineTerminator here] `{ ` MatchStatementClauses `;` `}`\n</code></pre>\n<p>This looks good to me for now</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700323310684,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4nroXrF4M5pVDkamK00h4mZ6Uk6TRTFNeiIDo0cTUyM"},
{"content":{"body":"```\nExpressionStatement[Yield, Await] :\n        CoverExpressionStatementAndMatchStatement\n        (current definition)\n```\n\nThis one does not. It does not cover everything that can follow a CallExpression, like `match (expr) + 1` or `match(expr).prop`.","format":"org.matrix.custom.html","formatted_body":"<pre><code>ExpressionStatement[Yield, Await] :\n        CoverExpressionStatementAndMatchStatement\n        (current definition)\n</code></pre>\n<p>This one does not. It does not cover everything that can follow a CallExpression, like <code>match (expr) + 1</code> or <code>match(expr).prop</code>.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700323419384,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8H8HZxNx-AoxCGkwpxC2vd0_Kd-h9FF7VfAibqKLV8Q"},
{"content":{"body":"It looks like I need to add all expressions to this cover grammar (e.g. it can follow a `++` or `.x` or `[prop]` or `(...args`)) which is unrealistic.","format":"org.matrix.custom.html","formatted_body":"It looks like I need to add all expressions to this cover grammar (e.g. it can follow a <code>++</code> or <code>.x</code> or <code>[prop]</code> or <code>(...args</code>)) which is unrealistic.","m.mentions":{},"msgtype":"m.text"},"ts":1700323505982,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$WOaMn7VzS9ao9CzJ33LW4xM4MHxKW7PhK3XFCdEbfcg"}
]