[
{"content":{"body":"erights: During plenary you asked if there was anything outside of `export`/`export default` that would make the `Function.prototype.toString` of a class non-`eval`-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain `await` or `yield`, making it non-`eval`-able by default without having to wrap the string in something like an `\"async function * () { ... }\"` first. The context _outside_ of the `eval` itself is not sufficient to support `await` and `yield` on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: During plenary you asked if there was anything outside of <code>export</code>/<code>export default</code> that would make the <code>Function.prototype.toString</code> of a class non-<code>eval</code>-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain <code>await</code> or <code>yield</code>, making it non-<code>eval</code>-able by default without having to wrap the string in something like an <code>&quot;async function * () { ... }&quot;</code> first. The context <em>outside</em> of the <code>eval</code> itself is not sufficient to support <code>await</code> and <code>yield</code> on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","msgtype":"m.text"},"ts":1675301142237,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$f5OSV2cnG9vFZp2732XphlC3fx43fej7Rv_mwqqQiFY"},
{"content":{"body":"> <@ljharb:matrix.org> lol that is a previously unmentioned fourth option, i guess\n\nThis option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>lol that is a previously unmentioned fourth option, i guess</blockquote></mx-reply>This option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","m.relates_to":{"m.in_reply_to":{"event_id":"$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8"}},"msgtype":"m.text"},"ts":1675313635346,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Qj6X9emvKVFIqAvjGnO-6fQJVjF4C7yTiavlTKEv3hk"},
{"content":{"body":"> <@bakkot:matrix.org> do people in the decorator-before-export camp think that decorators should also come before the `return` when you're returning a class? as in\n> \n> ```\n> @dec\n> return class {}\n> ```\n\nsee https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>do people in the decorator-before-export camp think that decorators should also come before the <code>return</code> when you're returning a class? as in</p>\n<pre><code>@dec\nreturn class {}\n</code></pre>\n</blockquote></mx-reply>see https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","m.relates_to":{"m.in_reply_to":{"event_id":"$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY"}},"msgtype":"m.text"},"ts":1675314075331,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$c0cc-jUh0pzWcwdFGPWMUsZkayEoV17baUf2s1t90To"},
{"content":{"body":"Good morning, all.  Plenary begins in 26 minutes time.","msgtype":"m.text","org.matrix.msc1767.text":"Good morning, all.  Plenary begins in 26 minutes time."},"ts":1675348490990,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$r3sZyM-BRilAsFSReYe8qEzWggVIj6b5Hf--pa4tGNQ"},
{"content":{"body":"Please be aware that Import Assertions continuation is scheduled in the first (AM) slot (the final 60min)","msgtype":"m.text","org.matrix.msc1767.text":"Please be aware that Import Assertions continuation is scheduled in the first (AM) slot (the final 60min)"},"ts":1675348531403,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$10vE-cCNMsTA4YUWcv4g6yaap1jYP2yZj2fVb-_TtBw"},
{"content":{"body":"Have we started?","msgtype":"m.text"},"ts":1675350385946,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$sVkXtz20VzfzJxl7RPIcauG2YAcfet4zIaG8KqqfYiE"},
{"content":{"body":"HE Shi-Jun: yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: yes","msgtype":"m.text"},"ts":1675350422255,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KEmUViSJMTldnmlUVvE_SinxConn0YpIcz0z2rGUpP8"},
{"content":{"body":"I hear nothing... weird","msgtype":"m.text"},"ts":1675350437563,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$i0temL8qRW7_bl2Mxz6BIPHBPByclmQrz_g0W8OZYn0"},
{"content":{"body":"jitsi has some bugs...","msgtype":"m.text"},"ts":1675350452534,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5Vkd1Z7hQimzlBA1nnmX3sLaVIHuujpqxtrKXyPGT8A"},
{"content":{"body":"oh, so what can i do ? reconnect?","msgtype":"m.text"},"ts":1675350482416,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$6Mg8r958VdmLsMi6_2Sl8x53_ynKXYZGjEtJvYVr0dM"},
{"content":{"body":"yes, please refresh if you don't hear anything","msgtype":"m.text"},"ts":1675350566791,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$L_ihypN_TaqJION26DC0pyQUTlmcLI5f22AjMhTvZyU"},
{"content":{"body":"reconnect and now I see the screen.","msgtype":"m.text"},"ts":1675350569857,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$4y_2jivsFrgzStO24RI3DlodF8xnKNzlm4hfQ60lJ8s"},
{"content":{"body":"please wipe your browser site cache and restart the browser","msgtype":"m.text","org.matrix.msc1767.text":"please wipe your browser site cache and restart the browser"},"ts":1675350572113,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5I-0Yghv19sclpUy-3L-0aEsAybxRg8zR2PccWpYiXA"},
{"content":{"body":"Note, we can reuse the WHATWG infra spec (or copy it) for this editorial issue","msgtype":"m.text"},"ts":1675350807294,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$j8dpuGxeGRXqtwYBXm1vUzkOTBhXBuLoWkke22SEn1Q"},
{"content":{"body":"I agree with avoiding actual Maps (since it is annoying to check whether this leaks)","msgtype":"m.text"},"ts":1675350825011,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ce_Q3Lqg6am0LPQTMXMqtBNd6z8DgX5ttCjP38aIKdI"},
{"content":{"body":"infra spec is a little bit up in the air on this particular thing at the moment https://github.com/whatwg/infra/pull/451","msgtype":"m.text"},"ts":1675350897141,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$19DAp7IZGtJ_luYwNtklpY5mVSJGL158lA658R6ZEGw"},
{"content":{"body":"might be fixed by the time it's relevant","msgtype":"m.text"},"ts":1675350902561,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yiek5sGzrRDRgg6gAAayrUfHm3s5H_A4gMKExCUEpPA"},
{"content":{"body":"1. the `n`th run script should be able to virtualise the `n+1`th script (and all later scripts)\n2. the `n`th run script should be able to make itself safe from modifications made by the `n+1`th script (and all later scripts)","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>the <code>n</code>th run script should be able to virtualise the <code>n+1</code>th script (and all later scripts)</li>\n<li>the <code>n</code>th run script should be able to make itself safe from modifications made by the <code>n+1</code>th script (and all later scripts)</li>\n</ol>\n","msgtype":"m.text"},"ts":1675351028364,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uxCDpNVoIbkjnHi3w7k15wTzSgXHLyb2mpqciq0m3P0"},
{"content":{"body":"this design is consistent with those goals","msgtype":"m.text"},"ts":1675351047069,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1sL7rIyF7dbh4H8X5ht0qdGvV6g4DjVwGw6-MZjIK8o"},
{"content":{"body":"love how the notetakers have so little to correct that we're just falling over each other to put the names in","msgtype":"m.text"},"ts":1675351249423,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Qbw8uaAhYwcEf5PLM7Dz-gO4R_utkJpEwsggTUAWee8"},
{"content":{"body":"Justin Ridgewell: we don't want to add the hidden intrinsics to the global because almost nobody cares about them and they just add clutter","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: we don't want to add the hidden intrinsics to the global because almost nobody cares about them and they just add clutter","msgtype":"m.text"},"ts":1675351411895,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qip_DjMTsvrSKykEdHB65JEUxQXGPF-wlI4d2XCHqMo"},
{"content":{"body":"But they can be lazy loaded","msgtype":"m.text"},"ts":1675351431295,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ckEWwW_Z5kuGAlxkOniyue5kqK3jp5I71OFVJl-SUNk"},
{"content":{"body":"bakkot: WDYT my concrete alternative if you also do something similar?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: WDYT my concrete alternative if you also do something similar?","msgtype":"m.text"},"ts":1675351448707,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J-IW8CMqsNz8xoyH4CkQzU7MhCWNP5W5YJ7NTHAPEbY"},
{"content":{"body":"This trades lazy loading for eager, seems like he'll shoot himself in the foot to get this?","msgtype":"m.text"},"ts":1675351452356,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$TLxWo2cqjqe6Z_2beK4N_9MRzGxQFqrJv8iBD-zwiso"},
{"content":{"body":"we talked about that with some of the new hidden intrinsics in iterator-helpers and the whole committee wanted to not add  them","msgtype":"m.text"},"ts":1675351452920,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LCDu8zQfsIi18ncoTVuql1rG1qscHQBPALGyKK0bfG8"},
{"content":{"body":"Michael Ficarra: i like justin's suggestion actually","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i like justin's suggestion actually","msgtype":"m.text"},"ts":1675351462350,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m5MzT5INDQ5GrL3SkpHHlisoVKsOXeyjuXeGHb5kixA"},
{"content":{"body":"that means the only thing we need to add here is just the string iterator for all intrinsics","msgtype":"m.text"},"ts":1675351472276,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xZ_YSsqiGW78DmaipZrTcEuEnxuUXYgn1VsH66uCDSM"},
{"content":{"body":"like we gotta put them _somewhere_ if we agree to this use case","format":"org.matrix.custom.html","formatted_body":"like we gotta put them <em>somewhere</em> if we agree to this use case","msgtype":"m.text"},"ts":1675351487610,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mRoDGPEPE2_FdVbGgFe__ego9ZFNwZHpMvHFRSgKUhM"},
{"content":{"body":"shu: you pull them out of the `getIntrinsic` function","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: you pull them out of the <code>getIntrinsic</code> function","msgtype":"m.text"},"ts":1675351524918,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zrMUKmSn_6ndfKEJuaR-7JF1R-yiAZpjB886fDxTaeE"},
{"content":{"body":"my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","msgtype":"m.text"},"ts":1675351526567,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vBAO9J6K_9WYe9lNCKp3PAy5TiG7MNHOUCapVCcnGJY"},
{"content":{"body":" * my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","m.new_content":{"body":"my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","msgtype":"m.text"},"m.relates_to":{"event_id":"$vBAO9J6K_9WYe9lNCKp3PAy5TiG7MNHOUCapVCcnGJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675351540699,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vjONFn3Ulg3z0KefesOzetwaRjIguAUtwWP9yBdTl1M"},
{"content":{"body":"Please add your name, abbreviation and member organization  to today's minutes.","msgtype":"m.text"},"ts":1675351572559,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$1j8vv5SeGSBelZh7Yi4TIfXL_0irfieUe3NhFKlGhsI"},
{"content":{"body":"Michael Ficarra: i'm saying i do not want the getIntrinsic function","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i'm saying i do not want the getIntrinsic function","msgtype":"m.text"},"ts":1675351580699,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s1c26fFYzaLT0lxTWXdhpFnULHmDeh7u1LQiL84ZAzw"},
{"content":{"body":"only a getHiddenIntrinsic function","msgtype":"m.text"},"ts":1675351585181,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vLWC75fpYx8paGghaBOCjlC8tGm8n725gCbSM5BRRrU"},
{"content":{"body":"memory overhead of implementing `getIntrinsic` remains something v8 does not want","format":"org.matrix.custom.html","formatted_body":"memory overhead of implementing <code>getIntrinsic</code> remains something v8 does not want","msgtype":"m.text"},"ts":1675351603817,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$R98cF5_WM5bs6rOebfdRGXuYhRrYziYjyA79Q8AiUPo"},
{"content":{"body":"it makes it easier for us because, instead of grabbing a few dozen references up front (and having to know which refs to grab), we just grab the one","msgtype":"m.text"},"ts":1675351771981,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0"},
{"content":{"body":"i don't think that clears the bar for adding to the language given other constraints","msgtype":"m.text"},"ts":1675351811103,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EnoCjwxM3gj6Y3MSajcU2xPA5TIPa4bo1-guDdP7EQs"},
{"content":{"body":"that is, the niche use case thing","msgtype":"m.text"},"ts":1675351823372,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OJBzfkkL6aR310Roy8QJT_L6maNNYkPuoBcwNcb2Tzo"},
{"content":{"body":"but the hidden intrinsic use case thing sounds like an missing capability for the robustness people want","msgtype":"m.text"},"ts":1675351842388,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$07pzg7-dCXCV7PxJekMIPptGoVbQaWVwHY8QHV8YRPo"},
{"content":{"body":" * but the hidden intrinsic use case thing sounds like an missing capability for the robustness people want","m.new_content":{"body":"but the hidden intrinsic use case thing sounds like an missing capability for the robustness people want","msgtype":"m.text"},"m.relates_to":{"event_id":"$07pzg7-dCXCV7PxJekMIPptGoVbQaWVwHY8QHV8YRPo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675351849074,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KXYE24xoUAbchpY1Ov1UQbZpjdVuOqmrgoFFciJGmWs"},
{"content":{"body":"Sorry, what is the difference between `getIntrinsic` and just doing `globalThis.previouslyHiddenIntrinsic.prototype.foo`?","format":"org.matrix.custom.html","formatted_body":"Sorry, what is the difference between <code>getIntrinsic</code> and just doing <code>globalThis.previouslyHiddenIntrinsic.prototype.foo</code>?","msgtype":"m.text"},"ts":1675351888162,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$v96n2Ob8s4hEZKPlp16ew07J_BcpWyXwLnm1Nd2DzkQ"},
{"content":{"body":"You would have to grab 0 references if we add to the global, right?","msgtype":"m.text"},"ts":1675351911214,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$-k7RyvwmCuIj-hbD6er6LNowIYBebrwDqkLeAjW2fFw"},
{"content":{"body":"Just get it when you need it","msgtype":"m.text"},"ts":1675351916472,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$vFha72lFmTmVAlxrfXBUbNtas6wy39yVZ5dZCstvIT0"},
{"content":{"body":"Justin Ridgewell: no, because someone who has run after us may have replaced those","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: no, because someone who has run after us may have replaced those","msgtype":"m.text"},"ts":1675351932469,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$8_XlyqJ4fsPIWImNBmGGkZa3O2RQhg2kktWhFuM3uyk"},
{"content":{"body":"And the behavior would be the same as accessing via `getInrinsic('class.prototype.foo')`?","format":"org.matrix.custom.html","formatted_body":"And the behavior would be the same as accessing via <code>getInrinsic('class.prototype.foo')</code>?","msgtype":"m.text"},"ts":1675351934785,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$H7ZPydD2TGDM2LMJYODlRWSYChwV_bfBxwq5EcRuxg0"},
{"content":{"body":"But `getIntrinsic` can't return the original","format":"org.matrix.custom.html","formatted_body":"But <code>getIntrinsic</code> can't return the original","msgtype":"m.text"},"ts":1675351949705,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$JCP81W_k5EMjwGjLmeghdeBdo2Ti-j9PdgulmYSGPpQ"},
{"content":{"body":"`getIntrinsic` would return the original unless it itself had been patched, that's the point of it","format":"org.matrix.custom.html","formatted_body":"<code>getIntrinsic</code> would return the original unless it itself had been patched, that's the point of it","msgtype":"m.text"},"ts":1675351976358,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XL_rKkVkC05lCjXe4QLoyfK-MQPZrm4uLsTEj45WSWo"},
{"content":{"body":" * `getIntrinsic` would return the original unless it itself had been patched, that's the point of it","format":"org.matrix.custom.html","formatted_body":" * <code>getIntrinsic</code> would return the original unless it itself had been patched, that's the point of it","m.new_content":{"body":"`getIntrinsic` would return the original unless it itself had been patched, that's the point of it","format":"org.matrix.custom.html","formatted_body":"<code>getIntrinsic</code> would return the original unless it itself had been patched, that's the point of it","msgtype":"m.text"},"m.relates_to":{"event_id":"$XL_rKkVkC05lCjXe4QLoyfK-MQPZrm4uLsTEj45WSWo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675351985365,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Gxlz3-9mNDQFdush7skT6DwEkpbV6tw-JUbw0CcqD-o"},
{"content":{"body":"Yes, which was my point","msgtype":"m.text"},"ts":1675351987175,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$y2zFdmJWCv4s-EOjVtnGvOnhCSTzBkvss25RCjfYr3c"},
{"content":{"body":"what was your point then?","msgtype":"m.text"},"ts":1675351999941,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YV8KcAmqLLxTFgtrMCqhKn1u-8PLgqmDtAGDC18vqQI"},
{"content":{"body":"Either the property has been modified and both `getInrinsic` and `foo.bar.baz` wouldn't get the original, or it's not modified and both would get the original","format":"org.matrix.custom.html","formatted_body":"Either the property has been modified and both <code>getInrinsic</code> and <code>foo.bar.baz</code> wouldn't get the original, or it's not modified and both would get the original","msgtype":"m.text"},"ts":1675352014817,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$h37kruiN2vUvN2aVEtKNo8HunrvwkMpq82hYq-vkYJA"},
{"content":{"body":"What's the point of `getInrinsic` if we add hidden intrinsics to the global?","format":"org.matrix.custom.html","formatted_body":"What's the point of <code>getInrinsic</code> if we add hidden intrinsics to the global?","msgtype":"m.text"},"ts":1675352030116,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Mcxn3IagQILRjcwD58DosVPXCqBUYUgVXwkDmVB3uVI"},
{"content":{"body":"I don't understand what's added","msgtype":"m.text"},"ts":1675352036542,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$HwUlkR3KnLbJr9cRZXoQRk4xhWQD3KJd_h29pNtk6JQ"},
{"content":{"body":"if we have run first, we also have a reference to the \"unmodified\" `getIntrinsic`","format":"org.matrix.custom.html","formatted_body":"if we have run first, we also have a reference to the &quot;unmodified&quot; <code>getIntrinsic</code>","msgtype":"m.text"},"ts":1675352039194,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XgHbzpKm9aL1fMUGqfBwTQJkPBmhe9Kl3fQv788HCgI"},
{"content":{"body":"the scenario is:\n\n- we run, and cache `getIntrinsic`\n- some else runs, and messes with the environment\n- we run again, and need some original thing, which we get from our cached `getIntrinsic`","format":"org.matrix.custom.html","formatted_body":"<p>the scenario is:</p>\n<ul>\n<li>we run, and cache <code>getIntrinsic</code></li>\n<li>some else runs, and messes with the environment</li>\n<li>we run again, and need some original thing, which we get from our cached <code>getIntrinsic</code></li>\n</ul>\n","msgtype":"m.text"},"ts":1675352041845,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5LHktr7kaKprH5JfGKsyyRCBDhozmdAWnyCGc6a5cFM"},
{"content":{"body":" * the scenario is:\n\n- we run, and cache `getIntrinsic`\n- some else runs, and messes with the environment\n- we run again, and need some original thing, which we get from our cached `getIntrinsic`","format":"org.matrix.custom.html","formatted_body":" * <p>the scenario is:</p>\n<ul>\n<li>we run, and cache <code>getIntrinsic</code></li>\n<li>some else runs, and messes with the environment</li>\n<li>we run again, and need some original thing, which we get from our cached <code>getIntrinsic</code></li>\n</ul>\n","m.new_content":{"body":"the scenario is:\n\n- we run, and cache `getIntrinsic`\n- some else runs, and messes with the environment\n- we run again, and need some original thing, which we get from our cached `getIntrinsic`","format":"org.matrix.custom.html","formatted_body":"<p>the scenario is:</p>\n<ul>\n<li>we run, and cache <code>getIntrinsic</code></li>\n<li>some else runs, and messes with the environment</li>\n<li>we run again, and need some original thing, which we get from our cached <code>getIntrinsic</code></li>\n</ul>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$5LHktr7kaKprH5JfGKsyyRCBDhozmdAWnyCGc6a5cFM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675352049586,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GosSNd6ScLbdPjdeerDBE7WuM6m5R6nAS-fWfU86-6c"},
{"content":{"body":"right now, we have to cache everything we'll ever need in the first part","msgtype":"m.text"},"ts":1675352066756,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4jFI78bGYcKAhTSuLB8XR341JHcvi_ntapN1303g5XM"},
{"content":{"body":"But getIntrinsic can't get a modified value?","msgtype":"m.text"},"ts":1675352067114,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Qiti9d8aIWDej8g7hvtH7U2ioJjaw7s6rgrwUDcB1hs"},
{"content":{"body":"which is surprisingly tricky","msgtype":"m.text"},"ts":1675352069707,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4PFUe-GV_rQ00gg49CS9alwmwj0G8zuiLDdD2XUrZ1Y"},
{"content":{"body":"what does \"can't get a modified value\" mean?","msgtype":"m.text"},"ts":1675352081171,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e-LQuuFSB905sXvQBXXgGZGPozrN_jXDVPzN45AUntM"},
{"content":{"body":"Justin Ridgewell: I don't know what that means","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: I don't know what that means","msgtype":"m.text"},"ts":1675352083290,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BvDqDWtTWP3GlZEJunfhr1G0wNEU71MUL3ms4QyW8zA"},
{"content":{"body":"you don't *want* it to get a modified value","format":"org.matrix.custom.html","formatted_body":"you don't <em>want</em> it to get a modified value","msgtype":"m.text"},"ts":1675352084818,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2geBeMucUYMSpeeAEmHDIVKZpTSkurHZzYJNTJNoWIs"},
{"content":{"body":"and, just to reiterate -- you would want to be able to patch the cached values? is that right?","msgtype":"m.text"},"ts":1675352086216,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KR5Uv5GcTIn2IMqYj-ynZk1ZW6PDHBr8GcQ05JS43Fg"},
{"content":{"body":"question: where is the link of current slide?","msgtype":"m.text"},"ts":1675352087518,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$3pFV9yQBoH251tXCYMH0EGZ34Dzb4t4Js0tGhoLx-Iw"},
{"content":{"body":"or you would be patching the globals","msgtype":"m.text"},"ts":1675352090766,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$MVOSopCi1WnE-jTUwV8liZRni2vQpz0maJvd3_PglH4"},
{"content":{"body":"yulia: both patching the globals and patching the `getIntrinsic` function","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: both patching the globals and patching the <code>getIntrinsic</code> function","msgtype":"m.text"},"ts":1675352113910,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$FXESympYlEsokyKYFiI5U0KBboj6yXn-nQs1Ym9FTfs"},
{"content":{"body":"We do also patch sometimes but that's both trickier and not always necessary","msgtype":"m.text"},"ts":1675352128214,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fO9EsuiDlsdYDFSsthJ4pNVw2E5paUy2lIUs4Gdh54Q"},
{"content":{"body":"there are a lot fewer things that we need to patch than there are things that we need to _work_","format":"org.matrix.custom.html","formatted_body":"there are a lot fewer things that we need to patch than there are things that we need to <em>work</em>","msgtype":"m.text"},"ts":1675352143343,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zbqmmy8wcfsrXlAAPyW2Dafg0uFVxxSRWQM5fpRTKXs"},
{"content":{"body":"right so you want to control all access to for example Array.prototype.map","msgtype":"m.text"},"ts":1675352153327,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$B_oHPHkBq0-Vzcp-n3wvGLjB-Mbe_TK7uHODaLNLgdA"},
{"content":{"body":"yeah the things we patch is a much smaller set than the things we cache for protection","msgtype":"m.text"},"ts":1675352154996,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rB6g72EwTFtlpeBwVHWe67lFUpVgvnDprHFZvyle2y8"},
{"content":{"body":"> <@michaelficarra:matrix.org> Justin Ridgewell: I don't know what that means\n\n`Class.prototype.bar = null`, then `getInrinsic('class.prototype.bar')` can't return the original bar value","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BvDqDWtTWP3GlZEJunfhr1G0wNEU71MUL3ms4QyW8zA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: I don't know what that means</blockquote></mx-reply><code>Class.prototype.bar = null</code>, then <code>getInrinsic('class.prototype.bar')</code> can't return the original bar value","m.relates_to":{"m.in_reply_to":{"event_id":"$BvDqDWtTWP3GlZEJunfhr1G0wNEU71MUL3ms4QyW8zA"}},"msgtype":"m.text"},"ts":1675352161965,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BDcUwVJj98dq5Hsivhh9HHyUt4AUHztzubpWIq5psQI"},
{"content":{"body":"That's what I mean","msgtype":"m.text"},"ts":1675352164892,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$FDTL1IK0p-kFAOj1h6zIXYbFepZFpYv8QecFfBFsnDQ"},
{"content":{"body":"Well then what is the difference between just doing `Class.porototype.bar` when you need the value later?","format":"org.matrix.custom.html","formatted_body":"Well then what is the difference between just doing <code>Class.porototype.bar</code> when you need the value later?","msgtype":"m.text"},"ts":1675352183002,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$vC6QzVhhkk_61AAc4E3RO21zfJPrdz6Ye2klN-FjaRo"},
{"content":{"body":"Justin Ridgewell: why?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: why?","msgtype":"m.text"},"ts":1675352188762,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$E97jlp0R3aDXtcUoMRIqoRVDNU5S7JdOFSNu51KBgKs"},
{"content":{"body":"> <@michaelficarra:matrix.org> yeah the things we patch is a much smaller set than the things we cache for protection\n\nwould it be useful to have absolute access to a builtin","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rB6g72EwTFtlpeBwVHWe67lFUpVgvnDprHFZvyle2y8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>yeah the things we patch is a much smaller set than the things we cache for protection</blockquote></mx-reply>would it be useful to have absolute access to a builtin","m.relates_to":{"m.in_reply_to":{"event_id":"$rB6g72EwTFtlpeBwVHWe67lFUpVgvnDprHFZvyle2y8"}},"msgtype":"m.text"},"ts":1675352199900,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$-zm_LJe7b4VQqWOO8RMnC4vSoumPEVZUSmn3POG5jUE"},
{"content":{"body":"Justin Ridgewell: it could have been written to by someone else","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: it could have been written to by someone else","msgtype":"m.text"},"ts":1675352200298,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wOosnSIjsk3-8on6IuS4Zvo-XNaIwbDGHqRseLSz8ng"},
{"content":{"body":"Because that's the semantics that Jordan outlined today?!","msgtype":"m.text"},"ts":1675352205093,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$H7FTPsGu8QaEVwGnMiFM93UQq3lFyQNtfFAdgG60wJo"},
{"content":{"body":"yulia: like, for example, we had an annoying bug recently when some of our late-running code broke in a particular environment because the page had replaced the Response constructor with a version which was not spec-compliant","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: like, for example, we had an annoying bug recently when some of our late-running code broke in a particular environment because the page had replaced the Response constructor with a version which was not spec-compliant","msgtype":"m.text"},"ts":1675352207760,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z9L-2DGpo1Dq6MfibtudOLk9PtFZlmX5dkhKPSuKzK4"},
{"content":{"body":"we don't need to replace it","msgtype":"m.text"},"ts":1675352217211,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2I3K4_GEPE0ozWKCwC27gSIkF_kRV9jTuSPu9KsBtng"},
{"content":{"body":"but we do need to have the original one","msgtype":"m.text"},"ts":1675352223379,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5YgtQAnT8co7vP0glO9PCjPYuVI3_DWBRKqLeBEod4c"},
{"content":{"body":"right -- thats our use case, we always want the original","msgtype":"m.text"},"ts":1675352231824,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$MXpK-8UjQ3Y5lbnCG1uuzkx5tO-cFWM3wXM52g72RT4"},
{"content":{"body":"never the patched one","msgtype":"m.text"},"ts":1675352236335,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$5sJ7uzp9c53DhuqBMXL14fb-FV7JlZpaTSX5XQX7zOo"},
{"content":{"body":"> <@yulia:mozilla.org> would it be useful to have absolute access to a builtin\n\nif you mean undeniable access, no, in fact that would be very harmful","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-zm_LJe7b4VQqWOO8RMnC4vSoumPEVZUSmn3POG5jUE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>would it be useful to have absolute access to a builtin</blockquote></mx-reply>if you mean undeniable access, no, in fact that would be very harmful","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$-zm_LJe7b4VQqWOO8RMnC4vSoumPEVZUSmn3POG5jUE"}},"msgtype":"m.text"},"ts":1675352236640,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aWXfFbk6V1Ahk1c7RBU4Iw47CZnS-UjIENMVaNrH5Mg"},
{"content":{"body":"right, thats what i expected","msgtype":"m.text"},"ts":1675352248329,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$yGQzqNYCxP-KC5QLR_pe5yl-VMsfOtlEFhTz7wKaZ7Y"},
{"content":{"body":"(because we do patch some things)","msgtype":"m.text"},"ts":1675352250810,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EWPbvyM18oerM1z33-P145TQr1qvpYZJesqHKuZ5kKg"},
{"content":{"body":"so if users start using an undeniable access to array then the things that you do patch would be at risk","msgtype":"m.text"},"ts":1675352271562,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$wqCTVwJsrsTFrhx0mLWpT_yBnHKDh496fzgW6rO2-hM"},
{"content":{"body":"> <@yulia:mozilla.org> would it be useful to have absolute access to a builtin\n\n\"absolute\" meaning \"undeniable for later code on the page\"? no, that needs to be impossible","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-zm_LJe7b4VQqWOO8RMnC4vSoumPEVZUSmn3POG5jUE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>would it be useful to have absolute access to a builtin</blockquote></mx-reply>&quot;absolute&quot; meaning &quot;undeniable for later code on the page&quot;? no, that needs to be impossible","m.relates_to":{"m.in_reply_to":{"event_id":"$-zm_LJe7b4VQqWOO8RMnC4vSoumPEVZUSmn3POG5jUE"}},"msgtype":"m.text"},"ts":1675352271599,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8Nx0Uz2yR2Jyvo7eXdpk122hHYlPPz4o-ofeRdgmHXo"},
{"content":{"body":"right, undeniable access for later-running code is a non-starter","msgtype":"m.text"},"ts":1675352291727,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QCZ9OwOODGM2cN1Ht_LVF3WVFWFHcQ8iGAkwoCYG77c"},
{"content":{"body":"> <@jridgewell:matrix.org> Well then what is the difference between just doing `Class.porototype.bar` when you need the value later?\n\nin our case, the early-running doesn't always know what values we'll need later","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vC6QzVhhkk_61AAc4E3RO21zfJPrdz6Ye2klN-FjaRo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Well then what is the difference between just doing <code>Class.porototype.bar</code> when you need the value later?</blockquote></mx-reply>in our case, the early-running doesn't always know what values we'll need later","m.relates_to":{"m.in_reply_to":{"event_id":"$vC6QzVhhkk_61AAc4E3RO21zfJPrdz6Ye2klN-FjaRo"}},"msgtype":"m.text"},"ts":1675352342636,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$826PYhYtL3S1r1uFCX8qP2Ol9wEPDLC5dAOzPCZ2LwQ"},
{"content":{"body":"also, the size of the early-running code is more sensitive","msgtype":"m.text"},"ts":1675352357994,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dWkdYdbYSb2vU9gzgjRGWq5KrXBiKzHMQCLGdv4X4JQ"},
{"content":{"body":"(since it needs to be loaded sync, during page load)","msgtype":"m.text"},"ts":1675352363468,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5GpmFQimNsahH5uxhpCeeOdcI7mdd5W3vYcFh20IFcw"},
{"content":{"body":"I understand that, you call `getInrinsic('foo')` later on","format":"org.matrix.custom.html","formatted_body":"I understand that, you call <code>getInrinsic('foo')</code> later on","msgtype":"m.text"},"ts":1675352363577,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$_Kj26TqzYXilWglA8yVSIrcmgno8FXrBuDYo12yskJ4"},
{"content":{"body":"and just thinking out loud: the cached access would be for your code internally, not for the code that is used outside","msgtype":"m.text"},"ts":1675352367699,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$CHWhqprEmfcr7T2Q-vM72xc_kui8ZWmwm3gx2EkAWfA"},
{"content":{"body":"If the `Reflect` object was _actually_ about reflection, `Reflect.getIntrinsic()` would be a much better place than the global, IMO. I'd also prefer to see a `getIntrinsicNames()` function so as not to overload the return value of `getIntrinsic()`.","format":"org.matrix.custom.html","formatted_body":"If the <code>Reflect</code> object was <em>actually</em> about reflection, <code>Reflect.getIntrinsic()</code> would be a much better place than the global, IMO. I'd also prefer to see a <code>getIntrinsicNames()</code> function so as not to overload the return value of <code>getIntrinsic()</code>.","msgtype":"m.text"},"ts":1675352386204,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tR_sGxvXJMQc0LVNrYLQkWPQKDbrGB8rUFpoinQXlsA"},
{"content":{"body":"so we have two halves here: what you use internally, and what is used by other code externally that you want to patch (to make sure i have it right)","msgtype":"m.text"},"ts":1675352388015,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$rUVYOgdbO0xwMItg_ntfNPwbUQZwPLZ_orWatXkk29k"},
{"content":{"body":"yulia: yes, and sometimes those sets overlap","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: yes, and sometimes those sets overlap","msgtype":"m.text"},"ts":1675352433166,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$Fnwe1wFLoYaz9VaU0gNzoX-Q5k4cSLKOPCwl3xdFBsY"},
{"content":{"body":"yulia: right. the patching one isn't solved by this, but is also a much trickier thing to solve, I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: right. the patching one isn't solved by this, but is also a much trickier thing to solve, I think","msgtype":"m.text"},"ts":1675352453440,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PSw_yZADxN3mV6uQO_lR_WFm6gBdLArFtJ7lYwQjFks"},
{"content":{"body":"would they have access or knowledge of your cached getIntrinsic? because part of the risk is that getIntrinsic itself can be patched by later code right?","msgtype":"m.text"},"ts":1675352465118,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6ZgyRDFoyaDoJiTdU7ml0QcDazWR3qbZaqRj3JwYA5w"},
{"content":{"body":"any code which does patching will also need to patch `getIntrinsic` going forward, yes","format":"org.matrix.custom.html","formatted_body":"any code which does patching will also need to patch <code>getIntrinsic</code> going forward, yes","msgtype":"m.text"},"ts":1675352488832,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EXS3BloDAlqOFHnqazlzdO0hoYXFz6rUUswSG_-kIH4"},
{"content":{"body":"we have an in-house library for patching which has actually arrived at a pretty decent model; maybe we should propose adding it to the platform some time","msgtype":"m.text"},"ts":1675352503451,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$crivW9ZAg4AwwANl1vZwClFexyXdhOdPSquMv5O88TM"},
{"content":{"body":"i do think that this is a weird area right now, i just don't know exactly how to solve it because there are a few overlapping areas here","msgtype":"m.text"},"ts":1675352542408,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nzTPxOecQzo2J9M2WZfunEBgwJbbtSdhHaEl5a-LVuE"},
{"content":{"body":"i kind of like shu's suggestion, because then you don't have two but it opens hidden intrinsics","msgtype":"m.text"},"ts":1675352565854,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$CeBN4U-XtjlAxZxSS4CdzoX-j0PdmskQ_dfXacCSYAs"},
{"content":{"body":"I think they're probably separable problems yulia ","format":"org.matrix.custom.html","formatted_body":"I think they're probably separable problems <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>","msgtype":"m.text"},"ts":1675352575756,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$QBnKC9-mxEaAlirLtx0_6_hQ2mL3kLvFF9zyxEQg3s0"},
{"content":{"body":"i'm not contesting that","msgtype":"m.text"},"ts":1675352608258,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$SgsVFCMBaZyyCS97lQky3hctt5x_K7BEJ2bYokOKsvE"},
{"content":{"body":"shu's solution does very little for us in particular because we're not currently doing the \"traverse the whole global\" thing for performance reasons, though it would be good for JHD and SES I guess","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>'s solution does very little for us in particular because we're not currently doing the &quot;traverse the whole global&quot; thing for performance reasons, though it would be good for JHD and SES I guess","msgtype":"m.text"},"ts":1675352639993,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CQ2Fp0Jr3x9m86jPOLVB3dOETkAp_J7LSP8wRuE-KZs"},
{"content":{"body":"bakkot: but you've also contended that your use case is niche enough that it doesn't need to be in the language IIRC?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: but you've also contended that your use case is niche enough that it doesn't need to be in the language IIRC?","msgtype":"m.text"},"ts":1675352662067,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$yURdzpRauTtVF-VfQvarvVHGf6PH82-y5dUImhebvNc"},
{"content":{"body":"well, I would not champion this just for me","msgtype":"m.text"},"ts":1675352674109,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hIQumPl4uAxB4geIKVxUm9Mqd7OTHjprFU_i7G6SyOw"},
{"content":{"body":"I'm just saying if we add this I would definitely use it","msgtype":"m.text"},"ts":1675352680069,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bJlQwHkfvfd1W5mdI71vujdlDJl_wzw4A4VSzxtZM9s"},
{"content":{"body":"and it would eliminate... maybe 50% of the bug reports we get","msgtype":"m.text"},"ts":1675352702174,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Vp2DymXHI7S8r20sA4Csp1BwtbnvBU4rBSpja6uXrHA"},
{"content":{"body":"Did we reach the end of the slides?","msgtype":"m.text"},"ts":1675352720786,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PrSM5n73MP0aqY-cmSHUBehVkp9pYBMytbgvY_kTovs"},
{"content":{"body":"i don't really understand","msgtype":"m.text"},"ts":1675352721311,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$gvuGqaUZhUDVNgfUbSxLLO5VjZglgM4bvqT1IamfThA"},
{"content":{"body":"why don't you traverse the global and get rid of 50% of the bug reports?","msgtype":"m.text"},"ts":1675352731004,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$QW5EUysbVvYrbsfJMYzObnpCxO6vaElokicgehm7Ss4"},
{"content":{"body":"like the alternative i suggested is functionally equivalent","msgtype":"m.text"},"ts":1675352736358,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$YYGGzSwuUxahsmxSOilvAVykXiJXTnwH1PGXnniyaeQ"},
{"content":{"body":"because that's too slow to do during page load","msgtype":"m.text"},"ts":1675352740678,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IVsUbzrFpWiwTT-_I4pbVQ-J0xHJDFWfQnmcY1BPLCA"},
{"content":{"body":"shu: I don't think it's really that the use case is niche, just that it's currently very inconvenient today to be safe, so people decide to take the easier development and smaller file size trade-off","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I don't think it's really that the use case is niche, just that it's currently very inconvenient today to be safe, so people decide to take the easier development and smaller file size trade-off","msgtype":"m.text"},"ts":1675352742384,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$QvwsSwWVsW5uuvZ13kfb9QBPfA8Y6pURjx1IAYhUyvU"},
{"content":{"body":"except you're caching in user space instead of on every context","msgtype":"m.text"},"ts":1675352746862,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$sHbpRAAb_qOusauVcfykPlOq9v1AMmPraH4FXwNhico"},
{"content":{"body":"so... the hypothesis is if you externalize that cost during snapshot creation for v8 that's okay","msgtype":"m.text"},"ts":1675352764267,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$6irJOf9uXuI6csBX_iW77xLchTset3-aUBjgALFI1hU"},
{"content":{"body":" * because that's too slow to do during page load","m.new_content":{"body":"because that's too slow to do during page load","msgtype":"m.text"},"m.relates_to":{"event_id":"$IVsUbzrFpWiwTT-_I4pbVQ-J0xHJDFWfQnmcY1BPLCA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675352767075,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EW7MlVPSU9mUV2w2nRC057u3FPfZfDcn8_98vUNCoKM"},
{"content":{"body":" * so... the hypothesis is if you externalize that cost during snapshot creation for v8 that's okay","m.new_content":{"body":"so... the hypothesis is if you externalize that cost during snapshot creation for v8 that's okay","msgtype":"m.text"},"m.relates_to":{"event_id":"$6irJOf9uXuI6csBX_iW77xLchTset3-aUBjgALFI1hU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675352773354,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$oexMR3lbs-Gm6fGSgbgrlr9R1FcHNsGlGFbrMvO_m3A"},
{"content":{"body":"that's the idea!","msgtype":"m.text"},"ts":1675352778263,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$49BfUcJ6foeA-4RmPC9W342MkgvP_hZ7OooRKaedehY"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1675352781738,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$7Ee8t9qbXpL8Q9SJ0WRDtu3i_kOC_D2H1aRcjr9Zk9w"},
{"content":{"body":"nty","msgtype":"m.text"},"ts":1675352782967,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$TnMR0fIIpz2cTBaUzTpkRB5oY5kHK9-XGDhIrtyVB_4"},
{"content":{"body":"what i am getting lost on is what the advantage is here -- now you will patch in two places, and everyone who wants to patch will do so in two places. So you still need to run first, in any case","msgtype":"m.text"},"ts":1675352791763,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$-MraXUaoRaUDWCbQv73oXmGGbtmupLL8oDr1Hejpznw"},
{"content":{"body":"right, we will always need to run first","msgtype":"m.text"},"ts":1675352819707,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UxLCNjy3bN7sl0XIlfCNuktcVdW0Kz_mHTc7O5umPbs"},
{"content":{"body":"i know that this is a different use case but its impacted by this api","msgtype":"m.text"},"ts":1675352828648,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$sogHkwuJNVPpJ8mNTVSHwlnRMJWmTxKHb4aFlWu4QDs"},
{"content":{"body":"yulia: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0?via=matrix.org&via=igalia.com&via=mozilla.org","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org","msgtype":"m.text"},"ts":1675352834017,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$fW2K9E4b-gH-uIcpKRkW0sdRrTsBowuVo26_CyA6Dxg"},
{"content":{"body":"right now, our first-run code needs to know up front all of the things we will ever need, and cache them. this is both difficult to do and increases the cost of our first-run code, which is performance sensitive because it's running synchronously during page load.","msgtype":"m.text"},"ts":1675352875867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OSMiIa0zJcYdcxYLIm_pSCcDWSqZ_3BafrqiqnuJ-Vs"},
{"content":{"body":"so now you will cache by running first, but it feels like its almost an issue with layering where you want to be able to cascade definitions. don't know if that makes sense","msgtype":"m.text"},"ts":1675352875900,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$NyG6F3-tsJNREKWvyWUlK7JL0WZSfgVjibKLxZhHoDA"},
{"content":{"body":"yulia: I don't understand","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: I don't understand","msgtype":"m.text"},"ts":1675352909240,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$fWObxJiU-YzR8OvcBdMTvIpS4njl31cahDrCi-hAO24"},
{"content":{"body":"> <@michaelficarra:matrix.org> yulia: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0?via=matrix.org&via=igalia.com&via=mozilla.org\n\nsorry the matrix chat isn't clear on what is highlighted here. that adding hidden intrinsics to the global is clutter, is that right?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fW2K9E4b-gH-uIcpKRkW0sdRrTsBowuVo26_CyA6Dxg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org</blockquote></mx-reply>sorry the matrix chat isn't clear on what is highlighted here. that adding hidden intrinsics to the global is clutter, is that right?","m.relates_to":{"m.in_reply_to":{"event_id":"$fW2K9E4b-gH-uIcpKRkW0sdRrTsBowuVo26_CyA6Dxg"}},"msgtype":"m.text"},"ts":1675352913406,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Oeh3ALfWGDBZW-1ivxRDP-22UsAASmdZ5yYjrOBBEmc"},
{"content":{"body":"i wasn't thinking of adding it to the global honestly i was thinking of shu's suggestion of a limited subset of apis","msgtype":"m.text"},"ts":1675352929451,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nFZvGQa-lSHSJEMF6unxoZOfjpUxrlvYs20hd_6bKG0"},
{"content":{"body":"yulia: no, this:","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: no, this:","msgtype":"m.text"},"ts":1675352937348,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$9CsoN1OjvqCWHk8LFx82WtrHb9t5zt7HrZ2_H-qyAEg"},
{"content":{"body":"too bad, i can't see the slide (seems network is so bad)","msgtype":"m.text"},"ts":1675352946761,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$AOGRHYzyJJGuKfX6HMsh56asU6cwk6ZvE4-UisFRLqM"},
{"content":{"body":"yulia: it's the little green line on the left","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: it's the little green line on the left","msgtype":"m.text"},"ts":1675352953774,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$rsQfdVh4vROsYudefN9T9okXT_QH5s5Q-VQFLG-WWGo"},
{"content":{"body":"I see ","msgtype":"m.text"},"ts":1675352961854,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$vPF3kPsEXkPbSNRCl9Nm1z1i4OsRXpU_ozSu_wAtI0Q"},
{"content":{"body":"this is the caching case","msgtype":"m.text"},"ts":1675352972443,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ZZ9sCeOiel2zUoFmi1kvjP1pDTIDZQosIoNZ6KANiSc"},
{"content":{"body":"yes i agree there","msgtype":"m.text"},"ts":1675352978078,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$SM-OFBLHuQzekpndzItcRmDl9knTxO3ygdXUdUMYLoA"},
{"content":{"body":"I'm not seeing the slides, should I restart Jitsi?","msgtype":"m.text"},"ts":1675352981466,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$G2Tx3HnNe3ypPkMC5xwWMA9PaLQ-jdW9pYJfQhndXs8"},
{"content":{"body":"I can't see them either now","msgtype":"m.text","org.matrix.msc1767.text":"I can't see them either now"},"ts":1675352988376,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Nw9gPwwbaLFbCQhs6wAn0XBFz2aabn-rxrAxQmVJSec"},
{"content":{"body":"I just restarted and did not see them","msgtype":"m.text"},"ts":1675352992954,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cm0wFwjI30Zfn9Ij4b9Ib4DRN7JSRNWETILYApj8wZA"},
{"content":{"body":"I think the problem is on jordan's end","msgtype":"m.text"},"ts":1675352998667,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OdrhzQTwT7KHJsfy_z5z3H46drpnIr7VC3hQo4P5zHg"},
{"content":{"body":"I restarted but still can't see","msgtype":"m.text"},"ts":1675353001809,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$FI53dg_OA1pA9fM_Lr-uyGfj0j9d8ZXFiEa02Zlw1Lo"},
{"content":{"body":"I can see the slide now :)","msgtype":"m.text"},"ts":1675353067134,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$DhPw4gTXqltZwFH5HL30PbKYekMJ-v9GNr98exLzinE"},
{"content":{"body":"I think it was the \"toggle tile view\" at the bottom","msgtype":"m.text"},"ts":1675353078862,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$MGPL0v81qtZ2cbSpOrybtZne6K_0sGnUPEuQsyGRLMA"},
{"content":{"body":"We need a namespace for reflection api which not relate to Proxy :)","msgtype":"m.text"},"ts":1675353386931,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$fWBMoIH5Qib7vlYn8w0w-449TPypcDVMrH06NwYXGuQ"},
{"content":{"body":"The Reflect/Proxy trap correspondence was always sort of accidental/not the original intention, according to Dave Herman","msgtype":"m.text"},"ts":1675353396922,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$__hEF7MDS0KNf5NaDRrwcPMv01O56TXkOm7NJaWv3Hs"},
{"content":{"body":"I also like the idea of using the Reflect namespace","msgtype":"m.text"},"ts":1675353412053,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$q0Us3wfam6kldsjcQ8s6XBpmC61mvnmFYWAfF87eZ7E"},
{"content":{"body":"maybe `Introspect` ?","format":"org.matrix.custom.html","formatted_body":"maybe <code>Introspect</code> ?","msgtype":"m.text"},"ts":1675353420575,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$0lVfJrf4ZUYVhvPwdKYN3l7eIbHk3YdRv-HHYPjdOZI"},
{"content":{"body":"it's a great way to move forward with stratificaiton, as Shu's saying!","msgtype":"m.text"},"ts":1675353424005,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$m4JAJwW-3Jyo2US8UbVq75Sdnua0qgCmVORcLq1yigc"},
{"content":{"body":"> <@littledan:matrix.org> it's a great way to move forward with stratificaiton, as Shu's saying!\n\nyeah, that paper is great!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$m4JAJwW-3Jyo2US8UbVq75Sdnua0qgCmVORcLq1yigc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>it&#39;s a great way to move forward with stratificaiton, as Shu&#39;s saying!</blockquote></mx-reply>yeah, that paper is great!","m.relates_to":{"m.in_reply_to":{"event_id":"$m4JAJwW-3Jyo2US8UbVq75Sdnua0qgCmVORcLq1yigc"}},"msgtype":"m.text"},"ts":1675353445496,"senderName":"haxjs","senderId":"@haxjs:matrix.org","id":"$QOBJj3-txzF4RKvKBbnms6zX6jirmbvZSyChFG1JKb0"},
{"content":{"body":"If we do allow more than just proxy traps on `Reflect`, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","format":"org.matrix.custom.html","formatted_body":"If we do allow more than just proxy traps on <code>Reflect</code>, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","msgtype":"m.text"},"ts":1675353503451,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$OXRMRNeyjha6KG4TZAZBrC5X3Dwg79o7aLXmFpfgBDA"},
{"content":{"body":" * If we do allow more than just proxy traps on `Reflect`, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","format":"org.matrix.custom.html","formatted_body":" * If we do allow more than just proxy traps on <code>Reflect</code>, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","m.new_content":{"body":"If we do allow more than just proxy traps on `Reflect`, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","format":"org.matrix.custom.html","formatted_body":"If we do allow more than just proxy traps on <code>Reflect</code>, I'm more than happy for us to be very selective about what we add to it. It's just a waste to leave it so limited.","msgtype":"m.text"},"m.relates_to":{"event_id":"$OXRMRNeyjha6KG4TZAZBrC5X3Dwg79o7aLXmFpfgBDA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675353517057,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wIHOlueQ6NS3znTjHLoHuKrMcet-dqiweQuwC9Ei0jo"},
{"content":{"body":"For Node's memory concerns with eagerly grabbing intrinsics, isn't this just pushing the concern into V8 itself?","msgtype":"m.text"},"ts":1675353564101,"senderName":"jridgewell","senderId":"@jridgewell:matrix.org","id":"$A5bbWDX0N1DaxXLLQwJckpKeeK-EWWXnKCsz00jmHbc"},
{"content":{"body":"If V8 has to maintain the pointers to all of these intrinsic values for later retrieval, all those pointers still have to be maintained, just now by V8","msgtype":"m.text"},"ts":1675353606989,"senderName":"jridgewell","senderId":"@jridgewell:matrix.org","id":"$zd48C4UxNgJt19ou2TgmgIl_N5dMVL_VL1cF8AudWuI"},
{"content":{"body":"Justin Ridgewell: that's exactly the tradeoff","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: that's exactly the tradeoff","msgtype":"m.text"},"ts":1675353620438,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$Zu8O77N9xueljrpnigMFP2Xh9rwNngdShW8mTSSM8zU"},
{"content":{"body":"and what i said above, and bakkot confirmed","msgtype":"m.text"},"ts":1675353627070,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$5JuwHlh6o_GFveTQLxsfYY5L3R0ZCSfiIFjm_hXvN14"},
{"content":{"body":"that's not a tradeoff i want to make for _all_ webpages","format":"org.matrix.custom.html","formatted_body":"that's not a tradeoff i want to make for <em>all</em> webpages","msgtype":"m.text"},"ts":1675353636353,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$mXsKeVovhZaFTQ9FTOsUn-B1ES7bME3rtlghM3UlkDE"},
{"content":{"body":"and thus my alternative of just doing the hidden intrinsics","msgtype":"m.text"},"ts":1675353641538,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$vgLkU2VwcnKT9ocbgCfyr7fWi5FPXIfhlEB9v8BMMN0"},
{"content":{"body":"and continue to leave the burden of caching to userland programs that need the robustness, which is rare","msgtype":"m.text"},"ts":1675353652129,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$piA2NBW7hsfj4xyDaPQ81vYC29h6nnfEfEdrTYL6Xf8"},
{"content":{"body":"Ahh: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sHbpRAAb_qOusauVcfykPlOq9v1AMmPraH4FXwNhico?via=matrix.org&via=igalia.com&via=mozilla.org","msgtype":"m.text"},"ts":1675353673180,"senderName":"jridgewell","senderId":"@jridgewell:matrix.org","id":"$WJwBLKxrwG6WUiDGoUTeF8zvYZdLNSSOinQEwjzD3Z4"},
{"content":{"body":"man matrix copy/paste sucks","msgtype":"m.text"},"ts":1675353681567,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$QEZUTHc7CsBNzTjr1R6DIZfHEjXfoT3gegf1U9IPEhg"},
{"content":{"body":"Sorry, still trying to make breakfast so I'm missing a lot of the conversation","msgtype":"m.text"},"ts":1675353686103,"senderName":"jridgewell","senderId":"@jridgewell:matrix.org","id":"$vq_21ciUwTLgihjd1L89kVwLEqhobMEQqZnChqOjOME"},
{"content":{"body":"the iterator method is only for the cache-the-world use case as far as I'm aware; we would have no use for it","msgtype":"m.text"},"ts":1675353839472,"senderName":"michaelficarra","senderId":"@michaelficarra:matrix.org","id":"$XEvDnrduLwQSUhRQLlYKR834ezmr0DwiAopDw1m6Z8Q"},
{"content":{"body":"i have to drop for 30 minutes for mtg","msgtype":"m.text"},"ts":1675353911513,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$2SwEZaWbcxDLFcgGqNGDaPyyVZrVwH3Qm2bAX0-7iU0"},
{"content":{"body":"sorry, i need to be here for import assertions but i gotta drop","msgtype":"m.text"},"ts":1675353924164,"senderName":"shuyuguo","senderId":"@shuyuguo:matrix.org","id":"$n7lUvxysCBG9bTL3f4M44jh4zXydlS8V0RURvYAWnRY"},
{"content":{"body":"well, that is really too bad.... we could've shifted this around","msgtype":"m.text"},"ts":1675353940950,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HXIffmjC0QemjOxPzzV6wThQS7dOpP9_q7myBI21T5U"},
{"content":{"body":"we still maybe can","msgtype":"m.text"},"ts":1675353945409,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hMTejpZJFQXyg0hX97xFc9O1G8I-FikUFjoERK9RNpY"}
]