[
{"content":{"body":"erights: During plenary you asked if there was anything outside of `export`/`export default` that would make the `Function.prototype.toString` of a class non-`eval`-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain `await` or `yield`, making it non-`eval`-able by default without having to wrap the string in something like an `\"async function * () { ... }\"` first. The context _outside_ of the `eval` itself is not sufficient to support `await` and `yield` on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: During plenary you asked if there was anything outside of <code>export</code>/<code>export default</code> that would make the <code>Function.prototype.toString</code> of a class non-<code>eval</code>-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain <code>await</code> or <code>yield</code>, making it non-<code>eval</code>-able by default without having to wrap the string in something like an <code>&quot;async function * () { ... }&quot;</code> first. The context <em>outside</em> of the <code>eval</code> itself is not sufficient to support <code>await</code> and <code>yield</code> on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","msgtype":"m.text"},"ts":1675301142237,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$f5OSV2cnG9vFZp2732XphlC3fx43fej7Rv_mwqqQiFY"},
{"content":{"body":"> <@ljharb:matrix.org> lol that is a previously unmentioned fourth option, i guess\n\nThis option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>lol that is a previously unmentioned fourth option, i guess</blockquote></mx-reply>This option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","m.relates_to":{"m.in_reply_to":{"event_id":"$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8"}},"msgtype":"m.text"},"ts":1675313635346,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Qj6X9emvKVFIqAvjGnO-6fQJVjF4C7yTiavlTKEv3hk"},
{"content":{"body":"> <@bakkot:matrix.org> do people in the decorator-before-export camp think that decorators should also come before the `return` when you're returning a class? as in\n> \n> ```\n> @dec\n> return class {}\n> ```\n\nsee https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>do people in the decorator-before-export camp think that decorators should also come before the <code>return</code> when you're returning a class? as in</p>\n<pre><code>@dec\nreturn class {}\n</code></pre>\n</blockquote></mx-reply>see https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","m.relates_to":{"m.in_reply_to":{"event_id":"$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY"}},"msgtype":"m.text"},"ts":1675314075331,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$c0cc-jUh0pzWcwdFGPWMUsZkayEoV17baUf2s1t90To"},
{"content":{"body":"Good morning, all.  Plenary begins in 26 minutes time.","msgtype":"m.text","org.matrix.msc1767.text":"Good morning, all.  Plenary begins in 26 minutes time."},"ts":1675348490990,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$r3sZyM-BRilAsFSReYe8qEzWggVIj6b5Hf--pa4tGNQ"}
]