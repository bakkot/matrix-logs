[
{"content":{"body":"erights: During plenary you asked if there was anything outside of `export`/`export default` that would make the `Function.prototype.toString` of a class non-`eval`-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain `await` or `yield`, making it non-`eval`-able by default without having to wrap the string in something like an `\"async function * () { ... }\"` first. The context _outside_ of the `eval` itself is not sufficient to support `await` and `yield` on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: During plenary you asked if there was anything outside of <code>export</code>/<code>export default</code> that would make the <code>Function.prototype.toString</code> of a class non-<code>eval</code>-able given sufficient context for identifiers. I said no, but there is, to a degree. Any computed property name can contain <code>await</code> or <code>yield</code>, making it non-<code>eval</code>-able by default without having to wrap the string in something like an <code>&quot;async function * () { ... }&quot;</code> first. The context <em>outside</em> of the <code>eval</code> itself is not sufficient to support <code>await</code> and <code>yield</code> on their own. While this is unlikely to occur regularly, it is perfectly legal JS.","msgtype":"m.text"},"ts":1675301142237,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$f5OSV2cnG9vFZp2732XphlC3fx43fej7Rv_mwqqQiFY"},
{"content":{"body":"> <@ljharb:matrix.org> lol that is a previously unmentioned fourth option, i guess\n\nThis option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>lol that is a previously unmentioned fourth option, i guess</blockquote></mx-reply>This option was discussed in 2018, and I think it's not a good option because it just make the situation worse.","m.relates_to":{"m.in_reply_to":{"event_id":"$04D-bCcV6utwW0C8bkGL6HgcTjP2qR0PJHpfsIGq6y8"}},"msgtype":"m.text"},"ts":1675313635346,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Qj6X9emvKVFIqAvjGnO-6fQJVjF4C7yTiavlTKEv3hk"},
{"content":{"body":"> <@bakkot:matrix.org> do people in the decorator-before-export camp think that decorators should also come before the `return` when you're returning a class? as in\n> \n> ```\n> @dec\n> return class {}\n> ```\n\nsee https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>do people in the decorator-before-export camp think that decorators should also come before the <code>return</code> when you're returning a class? as in</p>\n<pre><code>@dec\nreturn class {}\n</code></pre>\n</blockquote></mx-reply>see https://github.com/tc39/proposal-decorators/issues/69#issuecomment-409474841","m.relates_to":{"m.in_reply_to":{"event_id":"$VdlThe8eVF91v3pfUjS762UyXw9bK_FRC-Aj6RL7ddY"}},"msgtype":"m.text"},"ts":1675314075331,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$c0cc-jUh0pzWcwdFGPWMUsZkayEoV17baUf2s1t90To"},
{"content":{"body":"Good morning, all.  Plenary begins in 26 minutes time.","msgtype":"m.text","org.matrix.msc1767.text":"Good morning, all.  Plenary begins in 26 minutes time."},"ts":1675348490990,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$r3sZyM-BRilAsFSReYe8qEzWggVIj6b5Hf--pa4tGNQ"},
{"content":{"body":"Please be aware that Import Assertions continuation is scheduled in the first (AM) slot (the final 60min)","msgtype":"m.text","org.matrix.msc1767.text":"Please be aware that Import Assertions continuation is scheduled in the first (AM) slot (the final 60min)"},"ts":1675348531403,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$10vE-cCNMsTA4YUWcv4g6yaap1jYP2yZj2fVb-_TtBw"},
{"content":{"body":"Have we started?","msgtype":"m.text"},"ts":1675350385946,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$sVkXtz20VzfzJxl7RPIcauG2YAcfet4zIaG8KqqfYiE"},
{"content":{"body":"HE Shi-Jun: yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: yes","msgtype":"m.text"},"ts":1675350422255,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KEmUViSJMTldnmlUVvE_SinxConn0YpIcz0z2rGUpP8"},
{"content":{"body":"I hear nothing... weird","msgtype":"m.text"},"ts":1675350437563,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$i0temL8qRW7_bl2Mxz6BIPHBPByclmQrz_g0W8OZYn0"},
{"content":{"body":"jitsi has some bugs...","msgtype":"m.text"},"ts":1675350452534,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5Vkd1Z7hQimzlBA1nnmX3sLaVIHuujpqxtrKXyPGT8A"},
{"content":{"body":"oh, so what can i do ? reconnect?","msgtype":"m.text"},"ts":1675350482416,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$6Mg8r958VdmLsMi6_2Sl8x53_ynKXYZGjEtJvYVr0dM"},
{"content":{"body":"yes, please refresh if you don't hear anything","msgtype":"m.text"},"ts":1675350566791,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$L_ihypN_TaqJION26DC0pyQUTlmcLI5f22AjMhTvZyU"},
{"content":{"body":"reconnect and now I see the screen.","msgtype":"m.text"},"ts":1675350569857,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$4y_2jivsFrgzStO24RI3DlodF8xnKNzlm4hfQ60lJ8s"},
{"content":{"body":"please wipe your browser site cache and restart the browser","msgtype":"m.text","org.matrix.msc1767.text":"please wipe your browser site cache and restart the browser"},"ts":1675350572113,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5I-0Yghv19sclpUy-3L-0aEsAybxRg8zR2PccWpYiXA"},
{"content":{"body":"Note, we can reuse the WHATWG infra spec (or copy it) for this editorial issue","msgtype":"m.text"},"ts":1675350807294,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$j8dpuGxeGRXqtwYBXm1vUzkOTBhXBuLoWkke22SEn1Q"},
{"content":{"body":"I agree with avoiding actual Maps (since it is annoying to check whether this leaks)","msgtype":"m.text"},"ts":1675350825011,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ce_Q3Lqg6am0LPQTMXMqtBNd6z8DgX5ttCjP38aIKdI"},
{"content":{"body":"infra spec is a little bit up in the air on this particular thing at the moment https://github.com/whatwg/infra/pull/451","msgtype":"m.text"},"ts":1675350897141,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$19DAp7IZGtJ_luYwNtklpY5mVSJGL158lA658R6ZEGw"},
{"content":{"body":"might be fixed by the time it's relevant","msgtype":"m.text"},"ts":1675350902561,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yiek5sGzrRDRgg6gAAayrUfHm3s5H_A4gMKExCUEpPA"},
{"content":{"body":"1. the `n`th run script should be able to virtualise the `n+1`th script (and all later scripts)\n2. the `n`th run script should be able to make itself safe from modifications made by the `n+1`th script (and all later scripts)","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>the <code>n</code>th run script should be able to virtualise the <code>n+1</code>th script (and all later scripts)</li>\n<li>the <code>n</code>th run script should be able to make itself safe from modifications made by the <code>n+1</code>th script (and all later scripts)</li>\n</ol>\n","msgtype":"m.text"},"ts":1675351028364,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uxCDpNVoIbkjnHi3w7k15wTzSgXHLyb2mpqciq0m3P0"},
{"content":{"body":"this design is consistent with those goals","msgtype":"m.text"},"ts":1675351047069,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1sL7rIyF7dbh4H8X5ht0qdGvV6g4DjVwGw6-MZjIK8o"},
{"content":{"body":"love how the notetakers have so little to correct that we're just falling over each other to put the names in","msgtype":"m.text"},"ts":1675351249423,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Qbw8uaAhYwcEf5PLM7Dz-gO4R_utkJpEwsggTUAWee8"},
{"content":{"body":"Justin Ridgewell: we don't want to add the hidden intrinsics to the global because almost nobody cares about them and they just add clutter","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: we don't want to add the hidden intrinsics to the global because almost nobody cares about them and they just add clutter","msgtype":"m.text"},"ts":1675351411895,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qip_DjMTsvrSKykEdHB65JEUxQXGPF-wlI4d2XCHqMo"},
{"content":{"body":"But they can be lazy loaded","msgtype":"m.text"},"ts":1675351431295,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ckEWwW_Z5kuGAlxkOniyue5kqK3jp5I71OFVJl-SUNk"},
{"content":{"body":"bakkot: WDYT my concrete alternative if you also do something similar?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: WDYT my concrete alternative if you also do something similar?","msgtype":"m.text"},"ts":1675351448707,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J-IW8CMqsNz8xoyH4CkQzU7MhCWNP5W5YJ7NTHAPEbY"},
{"content":{"body":"This trades lazy loading for eager, seems like he'll shoot himself in the foot to get this?","msgtype":"m.text"},"ts":1675351452356,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$TLxWo2cqjqe6Z_2beK4N_9MRzGxQFqrJv8iBD-zwiso"},
{"content":{"body":"we talked about that with some of the new hidden intrinsics in iterator-helpers and the whole committee wanted to not add  them","msgtype":"m.text"},"ts":1675351452920,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LCDu8zQfsIi18ncoTVuql1rG1qscHQBPALGyKK0bfG8"},
{"content":{"body":"Michael Ficarra: i like justin's suggestion actually","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i like justin's suggestion actually","msgtype":"m.text"},"ts":1675351462350,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m5MzT5INDQ5GrL3SkpHHlisoVKsOXeyjuXeGHb5kixA"},
{"content":{"body":"that means the only thing we need to add here is just the string iterator for all intrinsics","msgtype":"m.text"},"ts":1675351472276,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xZ_YSsqiGW78DmaipZrTcEuEnxuUXYgn1VsH66uCDSM"},
{"content":{"body":"like we gotta put them _somewhere_ if we agree to this use case","format":"org.matrix.custom.html","formatted_body":"like we gotta put them <em>somewhere</em> if we agree to this use case","msgtype":"m.text"},"ts":1675351487610,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mRoDGPEPE2_FdVbGgFe__ego9ZFNwZHpMvHFRSgKUhM"},
{"content":{"body":"shu: you pull them out of the `getIntrinsic` function","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: you pull them out of the <code>getIntrinsic</code> function","msgtype":"m.text"},"ts":1675351524918,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zrMUKmSn_6ndfKEJuaR-7JF1R-yiAZpjB886fDxTaeE"},
{"content":{"body":"my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","msgtype":"m.text"},"ts":1675351526567,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vBAO9J6K_9WYe9lNCKp3PAy5TiG7MNHOUCapVCcnGJY"},
{"content":{"body":" * my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","m.new_content":{"body":"my use case needs a direct way to access one, not an iterator for all of them - the retrieval use case","msgtype":"m.text"},"m.relates_to":{"event_id":"$vBAO9J6K_9WYe9lNCKp3PAy5TiG7MNHOUCapVCcnGJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675351540699,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vjONFn3Ulg3z0KefesOzetwaRjIguAUtwWP9yBdTl1M"},
{"content":{"body":"Please add your name, abbreviation and member organization  to today's minutes.","msgtype":"m.text"},"ts":1675351572559,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$1j8vv5SeGSBelZh7Yi4TIfXL_0irfieUe3NhFKlGhsI"},
{"content":{"body":"Michael Ficarra: i'm saying i do not want the getIntrinsic function","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i'm saying i do not want the getIntrinsic function","msgtype":"m.text"},"ts":1675351580699,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s1c26fFYzaLT0lxTWXdhpFnULHmDeh7u1LQiL84ZAzw"},
{"content":{"body":"only a getHiddenIntrinsic function","msgtype":"m.text"},"ts":1675351585181,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vLWC75fpYx8paGghaBOCjlC8tGm8n725gCbSM5BRRrU"},
{"content":{"body":"memory overhead of implementing `getIntrinsic` remains something v8 does not want","format":"org.matrix.custom.html","formatted_body":"memory overhead of implementing <code>getIntrinsic</code> remains something v8 does not want","msgtype":"m.text"},"ts":1675351603817,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$R98cF5_WM5bs6rOebfdRGXuYhRrYziYjyA79Q8AiUPo"},
{"content":{"body":"it makes it easier for us because, instead of grabbing a few dozen references up front (and having to know which refs to grab), we just grab the one","msgtype":"m.text"},"ts":1675351771981,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Pcs3JQA_VGGAUGQTC_tbJdbIdfADtHrhsW_y7VjanW0"},
{"content":{"body":"i don't think that clears the bar for adding to the language given other constraints","msgtype":"m.text"},"ts":1675351811103,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EnoCjwxM3gj6Y3MSajcU2xPA5TIPa4bo1-guDdP7EQs"}
]