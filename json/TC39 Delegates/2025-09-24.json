[
{"content":{"body":"I am fairly certain ESM in Node.js just isn‚Äôt optimized enough because [even require(esm) was 1.2x faster than import esm when it came out](https://github.com/nodejs/node/pull/51977#issuecomment-1995209126) ü§∑‚Äç‚ôÄÔ∏è","format":"org.matrix.custom.html","formatted_body":"I am fairly certain ESM in Node.js just isn‚Äôt optimized enough because <a href=\"https://github.com/nodejs/node/pull/51977#issuecomment-1995209126\">even require(esm) was 1.2x faster than import esm when it came out</a> ü§∑‚Äç‚ôÄÔ∏è","msgtype":"m.text"},"ts":1758673841789,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$oqpizpP9hJfNC6qd1rIHACwbBWO3482fPDhWNyOR_LY"},
{"content":{"body":"TCQ isn't showing a Queue for me","m.mentions":{},"msgtype":"m.text"},"ts":1758726366592,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$rvDBs7r-Euocq49pCW5Tqy2u_lPLpbbPBC_52a4i-cI"},
{"content":{"body":"oh, because the tab is too narrow.n m","m.mentions":{},"msgtype":"m.text"},"ts":1758726403247,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$9MhnAyq1BZVsquzq3TB6Hb2KcEGom-U6B4rRMXFx_WA"},
{"content":{"body":"* oh, because the tab is too narrow. nm","m.mentions":{},"m.new_content":{"body":"oh, because the tab is too narrow. nm","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$9MhnAyq1BZVsquzq3TB6Hb2KcEGom-U6B4rRMXFx_WA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758726406733,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$PhsdViruR_MHIQ1soyVFBCHhNUNLuQ-s6jx-LyXVWVM"},
{"content":{"body":"I'll add this to the agenda, but here are Ben's slides for the amount continuation: https://notes.igalia.com/p/2025-09-tc39-plenary-amount-continuation#/","m.mentions":{},"msgtype":"m.text"},"ts":1758726534352,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$_1hP9oZdQz2hx8Qg4ysLwqLOvd6CKHbZOPEwqtyI9rQ"},
{"content":{"body":"Ryan Cavanaugh: can you comment on https://github.com/tc39/notes/pull/382","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@searyanc:matrix.org\">Ryan Cavanaugh</a>: can you comment on https://github.com/tc39/notes/pull/382","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"msgtype":"m.text"},"ts":1758726609288,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$inK0F3gzR36PPsg9klx933XVA2P_IAenBqyTJTPXkVY"},
{"content":{"body":"we don't have an alias for you in the notes yet","m.mentions":{},"msgtype":"m.text"},"ts":1758726618453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ihMQXIPXKU28y5Htm3YSZJvu14ED83LgnmZFKkxsEiA"},
{"content":{"body":"Yeah I approved that earlier","m.mentions":{},"msgtype":"m.text"},"ts":1758726661424,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$1tfK_9hI366D4MKr8k0Ggcwbc7oXY6--COnK2__JlzY"},
{"content":{"body":"sorry, I mean, Rob had a comment about the choice of alias","m.mentions":{},"msgtype":"m.text"},"ts":1758726677822,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9Ihfa_523I1ZtMRCILS2bHOrydnFqI6cd0ip71x9qUM"},
{"content":{"body":"oh","m.mentions":{},"msgtype":"m.text"},"ts":1758726684016,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$P1YQdnHrada-c0lexO2YBzP6SrGfd80Ty76xSjpt4Tc"},
{"content":{"body":"done thanks","m.mentions":{},"msgtype":"m.text"},"ts":1758726768777,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY"},
{"content":{"body":"I've been wondering. Was the J a middle name? My money's on 'John'?","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726818412,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$pyc7lPvwtq3S_pto7h17KamWXzlYXdILjrrdFXNbyz0"},
{"content":{"body":"yep","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$pyc7lPvwtq3S_pto7h17KamWXzlYXdILjrrdFXNbyz0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726842876,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$7AQnk_jc2Tr5WehmUN3F0P-DqGco4QX6QjcIQ98FpJA"},
{"content":{"body":"Missed opportunity for your parents to call you Ryan JavaScript Cavanaugh","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$7AQnk_jc2Tr5WehmUN3F0P-DqGco4QX6QjcIQ98FpJA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726906567,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_i9TsIfmVyd88FSj5iRn-yjIXwBIrsmGZnig2vlawrE"},
{"content":{"body":"I am just going to say that technicalities did not stop Kim Dot Com.","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$_i9TsIfmVyd88FSj5iRn-yjIXwBIrsmGZnig2vlawrE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726981216,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$siv60Du0VV-DWg9FXyJDeCbPKzQ_VTg3D9dXbJFWLR8"},
{"content":{"body":"Where can I find the HTML amount proposal?","m.mentions":{},"msgtype":"m.text"},"ts":1758727373045,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"},
{"content":{"body":"\"there's a unit on the end so you need to strip out the unit before converting to a string\" hahaha if only our parseFloat actually worked like that","m.mentions":{},"msgtype":"m.text"},"ts":1758727569137,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d6tZSVohgs7ztlxxLDUFbKgm4M2ZNfYQBQQxhLorMNM"},
{"content":{"body":"Making a unit called \"e3\" just for funsies","m.mentions":{},"msgtype":"m.text"},"ts":1758727605341,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$uZLkbFQQzekH9dCHeEXBMkQoR9BCBBYCcMT9ZAYhRok"},
{"content":{"body":"there is no such proposal AFAIK","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"}},"msgtype":"m.text"},"ts":1758727677830,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$mDtgld4elEuTZYOQcKLKG7JD3oT_yNSjOGbF7J_givI"},
{"content":{"body":"Oh maybe I misunderstood. Is there a an HML amount that's going to proposed? What was the context here?","m.mentions":{},"msgtype":"m.text"},"ts":1758727872600,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$Bau8yfqOvUOOidPPe6h77sEUs5_LRsdh1vMAIu3Gbtw"},
{"content":{"body":"it was definitely good that BigInt was correctly pigeonholed by the name, people adopting it as a generic Integer would have been much much worse","m.mentions":{},"msgtype":"m.text"},"ts":1758727915371,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iEqimHJCrfw3VmcU5uiGLW6pi37djPxuXilo4x2RvHo"},
{"content":{"body":"that's fair, but since then we got complaints about a lack of adoption‚Ä¶","m.mentions":{},"msgtype":"m.text"},"ts":1758728033676,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw"},
{"content":{"body":"* that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all","m.mentions":{},"m.new_content":{"body":"that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758728053406,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OXZiCLfC9IgNOUtjy1gHhotS_JxerIzukx0wa0axhKs"},
{"content":{"body":"Lack of adoption was because the use cases it was for didn't actually end up happening that much, not because of the name","m.mentions":{},"msgtype":"m.text"},"ts":1758728056509,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XLfMjUQUXPoY1Zb1rWNxr4yeSF7JO2S9h-jKG8dU4ek"},
{"content":{"body":"engines would not have been happier if people started using it for the things they're currently doing, that would be worse","m.mentions":{},"msgtype":"m.text"},"ts":1758728068811,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-v_974ezr-3eMNFFU2RaVSaEfn5el94O_BMjvzaKP3A"},
{"content":{"body":"i'll agree it's not the best example here","m.mentions":{},"msgtype":"m.text"},"ts":1758728080635,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tst9aJq4SX-bT30MubU924CIgnNQDbEZ2ioQC-GiOms"},
{"content":{"body":"https://github.com/mozilla/explainers/blob/main/amount.md","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"}},"msgtype":"m.text"},"ts":1758728082163,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$5BEuEw06xrLzXt-o4GoVMGHrILtRUieB_-Y9faJ05O0"},
{"content":{"body":"(that said, it _is_ extremely useful for wasm interop so I'm still very glad we have it.)","format":"org.matrix.custom.html","formatted_body":"(that said, it <em>is</em> extremely useful for wasm interop so I'm still very glad we have it.)","m.mentions":{},"msgtype":"m.text"},"ts":1758728104079,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Y3RxIP6DmHO1P3FuqBOUKVmEURRGYmDBT3-7WFMHHpo"},
{"content":{"body":"Right now the idea is that you hover over it, and it shows a localized popup","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$5BEuEw06xrLzXt-o4GoVMGHrILtRUieB_-Y9faJ05O0"}},"msgtype":"m.text"},"ts":1758728111774,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RHf7ITzHpT3lZGCG1r-jnTPsG3BHsu4ZCfsxyGAPdsg"},
{"content":{"body":"Kind of like `<span title=...>...</span>`","format":"org.matrix.custom.html","formatted_body":"Kind of like <code>&lt;span title=...&gt;...&lt;/span&gt;</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758728122306,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ySRNFgr946ZNLKt-JM2AfK5PfTdWGhoCmCJNx__5N5k"},
{"content":{"body":"> <@ljharb:matrix.org> that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all\n\nEh, even with minimal adoption it's still a good primitive to have available. For the use cases it is used for it's very useful","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all</blockquote></mx-reply>Eh, even with minimal adoption it's still a good primitive to have available. For the use cases it is used for it's very useful","m.relates_to":{"m.in_reply_to":{"event_id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw"}},"msgtype":"m.text"},"ts":1758728182557,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$1GVOE3OhJItO-XtL_fvQbMskE_g1JiGvfrLJyUZvLfY"},
{"content":{"body":"It seems like you would only ever construct an `Amount` *right* before formatting a `number`","format":"org.matrix.custom.html","formatted_body":"It seems like you would only ever construct an <code>Amount</code> <em>right</em> before formatting a <code>number</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758728186333,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$y-_kI2JmugDy4EVPCXktH9to8zYAVHpmHRqTALKT5NE"},
{"content":{"body":"No, as soon as you want to add information to that number, so that you pass them around as a single unit","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$y-_kI2JmugDy4EVPCXktH9to8zYAVHpmHRqTALKT5NE"}},"msgtype":"m.text"},"ts":1758728205964,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y"},
{"content":{"body":"* No, as soon as you want to add information to that number, so that you pass them around as a single \"thing\"","m.mentions":{},"m.new_content":{"body":"No, as soon as you want to add information to that number, so that you pass them around as a single \"thing\"","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758728212093,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Gew3x9WOADczza16PQ0SdQjXtdlAmStQNEV2gURIEUw"},
{"content":{"body":"that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption","m.mentions":{"user_ids":["@jasnell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1GVOE3OhJItO-XtL_fvQbMskE_g1JiGvfrLJyUZvLfY"}},"msgtype":"m.text"},"ts":1758728221100,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms"},
{"content":{"body":"If it's right before, you can just pass the number to Intl as-is","m.mentions":{},"msgtype":"m.text"},"ts":1758728244301,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Nr96vhfOdCnzG0O1lMz3QwM_4ujM91EUPooDAz8U7zo"},
{"content":{"body":"oh jeeze the idea of people using this for representing JSON output from other languages which can represent values not representable by double or BigInt is... not appealing to me","m.mentions":{},"msgtype":"m.text"},"ts":1758728265828,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hDsBJ9133G5HRf396cc29XyNEXphv2RRpWE3l5v_87g"},
{"content":{"body":"How do you write code that handles an arbitrary Amount?","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y"}},"msgtype":"m.text"},"ts":1758728286805,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$PYlQ2BI97SH4vPppNML_eSS6_RfDNIrSS62G8KqkcQg"},
{"content":{"body":"Mostly passes it around as-is, as an opaque set of information","m.mentions":{},"msgtype":"m.text"},"ts":1758728385523,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hktsxNPYew25rN3HYmixDujS_xz_7xYAil5wlBMzRJs"},
{"content":{"body":"> <@ljharb:matrix.org> that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption\n\nFor decimal I can see that argument. Blocking things like record/tuple because of bigint adoption is like saying we won't sell oranges because no one eats the apples","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption</blockquote></mx-reply>For decimal I can see that argument. Blocking things like record/tuple because of bigint adoption is like saying we won't sell oranges because no one eats the apples","m.relates_to":{"m.in_reply_to":{"event_id":"$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms"}},"msgtype":"m.text"},"ts":1758728454412,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$ipdZY561qRwZbLoDbL0NXcQoddytZ0mafqzw8b5Yckw"},
{"content":{"body":"We already have a type that represents a value with an encoded number of significant digits and unit which you shouldn't do math on, it's `string`. Unless this can be sent natively over the wire it doesn't even help the case where you have a server \"Amount\" that the client should render in its own locale","format":"org.matrix.custom.html","formatted_body":"We already have a type that represents a value with an encoded number of significant digits and unit which you shouldn't do math on, it's <code>string</code>. Unless this can be sent natively over the wire it doesn't even help the case where you have a server \"Amount\" that the client should render in its own locale","m.mentions":{},"msgtype":"m.text"},"ts":1758728474312,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$SwkP7rQ82QXR1wW_F1evoQ49ppRKMv1w1pfzeTbp5lU"},
{"content":{"body":"that type represents many other things too tho, this would basically be a structured subset of what strings can do","m.mentions":{},"msgtype":"m.text"},"ts":1758728509160,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZMtw3HevMWJP-v5rYI6jHWkxY7i4L-vzywzs9cvu824"},
{"content":{"body":"The \"other things\" are what though?","m.mentions":{},"msgtype":"m.text"},"ts":1758728529080,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$TzE8MCxcaOGsZZf7gZ-AQVaD-0oF-a8HEW3g_NX_xrM"},
{"content":{"body":"But even decimal and bigint serve a sufficiently different use cases from each other that even that argument is tenuous. There are more use cases for decimal than bigint. I'm far less convinced about Amount","msgtype":"m.text"},"ts":1758728539024,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$p7qwoxvHc-yh8vcaec6VCXG_qWzW6H_ZX6JqImYXuHo"},
{"content":{"body":"prose/poetry, bytes, anything that's not a value?","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$TzE8MCxcaOGsZZf7gZ-AQVaD-0oF-a8HEW3g_NX_xrM"}},"msgtype":"m.text"},"ts":1758728578769,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UQcplfPk9bnqydlfDP4V9i7VZZn15-3zF-v3fNEI9rw"},
{"content":{"body":"oh I thought \"that type\" referred to Amount","m.mentions":{},"msgtype":"m.text"},"ts":1758728639836,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$gwx8THY_v0RcE_eXwIcDW6uQQftkLQ9xg58IibIPfp0"},
{"content":{"body":"sorry for the confusion","m.mentions":{},"msgtype":"m.text"},"ts":1758728731435,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9c2eoEtC2DwEfD3N6E-ut60SOWZt2H9bubRFjcHPgng"},
{"content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n+ checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<ul>\n<li>checking that the units match</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1758729102865,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n\n\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n\n\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729107492,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ehHLJ-eSyjQfnyyKnkwxwa0uKWVqVBaFQle1co_E8rU"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729141027,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8p5blAmWsuXq2H0Pi2mrv-M41365tXwle_NiKgnwSgM"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729185451,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$t14vQY5eaEtSXV-LFyQiQ1pT8TRQ3wakbsyGDnbszuU"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729193727,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$5lM1tXo4twy_Lcpl0UKNBnkKeQ9jLReLgom3jPWRCHg"},
{"content":{"body":"so then why bother removing it","m.mentions":{},"msgtype":"m.text"},"ts":1758729223405,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dY2pa7qhPatASo683U2rpPGrwlgAhoxTcAFO2_gDqWo"},
{"content":{"body":"That message was directed to those that prefer to remove it. I'm neutral","m.mentions":{},"msgtype":"m.text"},"ts":1758729255099,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7QR0LI_yhk5UNfvfWnPKiQHusWFM5fQ9y7rI0Z2lhJI"},
{"content":{"body":"waldemar Do you think we could finish the 0.00&co discussion on GitHub?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub?","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"ts":1758729337054,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aAgxFRIVG-vBrCxzFpDR5C0llUYcKnW6C4QTkr2a54o"},
{"content":{"body":"* waldemar Do you think we could finish the 0.00&co discussion on GitHub rather than now?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub rather than now?","m.mentions":{},"m.new_content":{"body":"waldemar Do you think we could finish the 0.00&co discussion on GitHub rather than now?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub rather than now?","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$aAgxFRIVG-vBrCxzFpDR5C0llUYcKnW6C4QTkr2a54o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729343512,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kqOIo5XAZAMubCAmUpiieq1nDnycJt9TVS2OtLp9HW0"},
{"content":{"body":"This feels like we're trying to create a new Array type that encodes which delimiter you should use when `toString`ing it (comma-separated, semicolon-separated, newline-terminated, etc).\n\nThat's not a new noun, it's just metadata attached to an existing primitivelike. Combining those into one new object isn't precedented in the language AFAICT?","format":"org.matrix.custom.html","formatted_body":"<p>This feels like we're trying to create a new Array type that encodes which delimiter you should use when <code>toString</code>ing it (comma-separated, semicolon-separated, newline-terminated, etc).</p>\n<p>That's not a new noun, it's just metadata attached to an existing primitivelike. Combining those into one new object isn't precedented in the language AFAICT?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1758729505471,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$eVHFLVdevdIZU7LBWOQFV_QTT0BljLkq5h4A2iGkn_I"},
{"content":{"body":"MDN has a page for the duck-type Iterator incidentally: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator","m.mentions":{},"msgtype":"m.text"},"ts":1758729649910,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lrfUrVTOond0MprIVN7fK7h5ojuEenIn30YB0Xz2EV4"},
{"content":{"body":"One difference cf. the given examples of protocol objects is that Amounts are more likely to persist, i.e. be stored by a user and used in potentially multiplayer places. So if we go that way, should we provide an `isAmount()` function somewhere?","msgtype":"m.text"},"ts":1758729907529,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$y3HzHHsgY4Tb17mD0qdPtRnCIFGfiwDMpQ_KZWE1FCA"},
{"content":{"body":"i'd prefer yes, but we don't have an \"is iterator result\" function or \"is regexp match object\", so there's not much precedent","m.mentions":{},"msgtype":"m.text"},"ts":1758729948777,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7WQZ-kVD5VGQGfiHBtHh8KdNYt7s-4upGG2cCQNMM6c"},
{"content":{"body":"Are either of those commonly stored, or just immediately used?","msgtype":"m.text"},"ts":1758730038559,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$5M-AS41hlHxWtA3O9BxC3PdlOcLpogNpyDZqjO4by5Q"},
{"content":{"body":"I think there is a difference in that those two things are just a work-around because we don't support multiple return values from functions","m.mentions":{},"msgtype":"m.text"},"ts":1758730107072,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$uOONsEAGdgkRz7xSBACI4CZvo4YsHz5O8FKnZIhtp-4"},
{"content":{"body":"* I think there is a difference in that those two things are just a workaround because we don't support multiple return values from functions","m.mentions":{},"m.new_content":{"body":"I think there is a difference in that those two things are just a workaround because we don't support multiple return values from functions","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$uOONsEAGdgkRz7xSBACI4CZvo4YsHz5O8FKnZIhtp-4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730113470,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_YwoGtzOSO65CXnfvyUbsQsCWj8SNyLao3OFmQYAZgY"},
{"content":{"body":"If we did those two object shapes would not exist","m.mentions":{},"msgtype":"m.text"},"ts":1758730127033,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ZlQgCr6eWti0buEXWdm5V7Hdku7M41qvmxoFzrDYc8g"},
{"content":{"body":"But we'd still have this proposal","m.mentions":{},"msgtype":"m.text"},"ts":1758730132475,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$msynJohoob6i0hVtz3S3AsXPPGI6v8DUqLlsfWdTY0A"},
{"content":{"body":"iterables, and to a lesser extent iterators, are very likely to be stored by a user and passed around","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$y3HzHHsgY4Tb17mD0qdPtRnCIFGfiwDMpQ_KZWE1FCA"}},"msgtype":"m.text"},"ts":1758730601987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4cKvk4ZALtngqXpm11bbcAX3wNATsmqaiXjqBnExNZ4"},
{"content":{"body":"one difference with iterables is that you often (usually, in fact) want other behavior too when making an iterable, e.g. you're making a Map and it just happens to also be iterable","m.mentions":{},"msgtype":"m.text"},"ts":1758730822194,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbVsTdDpPmDns8lNijWW5swWn4f3z5GCXdu9WlgVFTM"},
{"content":{"body":"And users very rarely write iterators by hand","m.mentions":{},"msgtype":"m.text"},"ts":1758730834789,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q"},
{"content":{"body":"* And users very rarely write iterators by hand, we provide utilities for that","m.mentions":{},"m.new_content":{"body":"And users very rarely write iterators by hand, we provide utilities for that","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730840946,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wXMgNI0FUB-7SUWpp2E1Y31jcTOfzeAQwqRy_uqiX-g"},
{"content":{"body":"* And users very rarely write iterators by hand, we provide utilities/factories for that","m.mentions":{},"m.new_content":{"body":"And users very rarely write iterators by hand, we provide utilities/factories for that","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730846741,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7Wp4kK0JY_lBZdXeLBfRutcKwZpd8NUlIaF26W7SGno"},
{"content":{"body":"this is probably less true for Amount. On the other hand, maybe it is not that rare? if you're representing some type of data, you might well want to e.g. provide arithmetic functions for that data.","m.mentions":{},"msgtype":"m.text"},"ts":1758730869751,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EAjb8WuS3W_vk8Guotws1IV3MNIQWbuMw4BpaaSsBc0"},
{"content":{"body":"If this is a protocol you might want to implement on other objects, that would be a strong reason not to have a constructor.","m.mentions":{},"msgtype":"m.text"},"ts":1758730890328,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gFYEXHsC7fHoQcVQa3OhVEGzxjnydrCI3hKa0JND7Hs"},
{"content":{"body":"i'm guessing that is rare though","m.mentions":{},"msgtype":"m.text"},"ts":1758730918406,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hIF-rCgxUAvp8dr2zaF6B3gh3cDJmZWEYHGZL99lg_c"},
{"content":{"body":"If it was a protocol, do you think there should no built-in utility to make it more reachable? e.g. `Number.prototype.toAmount(unit) = return { value: this, unit }`, without it being a class","format":"org.matrix.custom.html","formatted_body":"If it was a protocol, do you think there should no built-in utility to make it more reachable? e.g. <code>Number.prototype.toAmount(unit) = return { value: this, unit }</code>, without it being a class","m.mentions":{},"msgtype":"m.text"},"ts":1758731041770,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$gJDxpC7cGdY6zYtbPg6LOfjl4I6jSew8o-DQBJvhEGQ"}
]