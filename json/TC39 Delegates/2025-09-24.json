[
{"content":{"body":"I am fairly certain ESM in Node.js just isn‚Äôt optimized enough because [even require(esm) was 1.2x faster than import esm when it came out](https://github.com/nodejs/node/pull/51977#issuecomment-1995209126) ü§∑‚Äç‚ôÄÔ∏è","format":"org.matrix.custom.html","formatted_body":"I am fairly certain ESM in Node.js just isn‚Äôt optimized enough because <a href=\"https://github.com/nodejs/node/pull/51977#issuecomment-1995209126\">even require(esm) was 1.2x faster than import esm when it came out</a> ü§∑‚Äç‚ôÄÔ∏è","msgtype":"m.text"},"ts":1758673841789,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$oqpizpP9hJfNC6qd1rIHACwbBWO3482fPDhWNyOR_LY"},
{"content":{"body":"TCQ isn't showing a Queue for me","m.mentions":{},"msgtype":"m.text"},"ts":1758726366592,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$rvDBs7r-Euocq49pCW5Tqy2u_lPLpbbPBC_52a4i-cI"},
{"content":{"body":"oh, because the tab is too narrow.n m","m.mentions":{},"msgtype":"m.text"},"ts":1758726403247,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$9MhnAyq1BZVsquzq3TB6Hb2KcEGom-U6B4rRMXFx_WA"},
{"content":{"body":"* oh, because the tab is too narrow. nm","m.mentions":{},"m.new_content":{"body":"oh, because the tab is too narrow. nm","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$9MhnAyq1BZVsquzq3TB6Hb2KcEGom-U6B4rRMXFx_WA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758726406733,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$PhsdViruR_MHIQ1soyVFBCHhNUNLuQ-s6jx-LyXVWVM"},
{"content":{"body":"I'll add this to the agenda, but here are Ben's slides for the amount continuation: https://notes.igalia.com/p/2025-09-tc39-plenary-amount-continuation#/","m.mentions":{},"msgtype":"m.text"},"ts":1758726534352,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$_1hP9oZdQz2hx8Qg4ysLwqLOvd6CKHbZOPEwqtyI9rQ"},
{"content":{"body":"Ryan Cavanaugh: can you comment on https://github.com/tc39/notes/pull/382","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@searyanc:matrix.org\">Ryan Cavanaugh</a>: can you comment on https://github.com/tc39/notes/pull/382","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"msgtype":"m.text"},"ts":1758726609288,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$inK0F3gzR36PPsg9klx933XVA2P_IAenBqyTJTPXkVY"},
{"content":{"body":"we don't have an alias for you in the notes yet","m.mentions":{},"msgtype":"m.text"},"ts":1758726618453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ihMQXIPXKU28y5Htm3YSZJvu14ED83LgnmZFKkxsEiA"},
{"content":{"body":"Yeah I approved that earlier","m.mentions":{},"msgtype":"m.text"},"ts":1758726661424,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$1tfK_9hI366D4MKr8k0Ggcwbc7oXY6--COnK2__JlzY"},
{"content":{"body":"sorry, I mean, Rob had a comment about the choice of alias","m.mentions":{},"msgtype":"m.text"},"ts":1758726677822,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9Ihfa_523I1ZtMRCILS2bHOrydnFqI6cd0ip71x9qUM"},
{"content":{"body":"oh","m.mentions":{},"msgtype":"m.text"},"ts":1758726684016,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$P1YQdnHrada-c0lexO2YBzP6SrGfd80Ty76xSjpt4Tc"},
{"content":{"body":"done thanks","m.mentions":{},"msgtype":"m.text"},"ts":1758726768777,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY"},
{"content":{"body":"I've been wondering. Was the J a middle name? My money's on 'John'?","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726818412,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$pyc7lPvwtq3S_pto7h17KamWXzlYXdILjrrdFXNbyz0"},
{"content":{"body":"yep","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$pyc7lPvwtq3S_pto7h17KamWXzlYXdILjrrdFXNbyz0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726842876,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$7AQnk_jc2Tr5WehmUN3F0P-DqGco4QX6QjcIQ98FpJA"},
{"content":{"body":"Missed opportunity for your parents to call you Ryan JavaScript Cavanaugh","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$7AQnk_jc2Tr5WehmUN3F0P-DqGco4QX6QjcIQ98FpJA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726906567,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_i9TsIfmVyd88FSj5iRn-yjIXwBIrsmGZnig2vlawrE"},
{"content":{"body":"I am just going to say that technicalities did not stop Kim Dot Com.","m.mentions":{},"m.relates_to":{"event_id":"$ZZYPJKJ3drjpgICTYODd4vuyt8P2KGIUIFIYlHXEyIY","is_falling_back":true,"m.in_reply_to":{"event_id":"$_i9TsIfmVyd88FSj5iRn-yjIXwBIrsmGZnig2vlawrE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758726981216,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$siv60Du0VV-DWg9FXyJDeCbPKzQ_VTg3D9dXbJFWLR8"},
{"content":{"body":"Where can I find the HTML amount proposal?","m.mentions":{},"msgtype":"m.text"},"ts":1758727373045,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"},
{"content":{"body":"\"there's a unit on the end so you need to strip out the unit before converting to a string\" hahaha if only our parseFloat actually worked like that","m.mentions":{},"msgtype":"m.text"},"ts":1758727569137,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d6tZSVohgs7ztlxxLDUFbKgm4M2ZNfYQBQQxhLorMNM"},
{"content":{"body":"Making a unit called \"e3\" just for funsies","m.mentions":{},"msgtype":"m.text"},"ts":1758727605341,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$uZLkbFQQzekH9dCHeEXBMkQoR9BCBBYCcMT9ZAYhRok"},
{"content":{"body":"there is no such proposal AFAIK","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"}},"msgtype":"m.text"},"ts":1758727677830,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$mDtgld4elEuTZYOQcKLKG7JD3oT_yNSjOGbF7J_givI"},
{"content":{"body":"Oh maybe I misunderstood. Is there a an HML amount that's going to proposed? What was the context here?","m.mentions":{},"msgtype":"m.text"},"ts":1758727872600,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$Bau8yfqOvUOOidPPe6h77sEUs5_LRsdh1vMAIu3Gbtw"},
{"content":{"body":"it was definitely good that BigInt was correctly pigeonholed by the name, people adopting it as a generic Integer would have been much much worse","m.mentions":{},"msgtype":"m.text"},"ts":1758727915371,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iEqimHJCrfw3VmcU5uiGLW6pi37djPxuXilo4x2RvHo"},
{"content":{"body":"that's fair, but since then we got complaints about a lack of adoption‚Ä¶","m.mentions":{},"msgtype":"m.text"},"ts":1758728033676,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw"},
{"content":{"body":"* that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all","m.mentions":{},"m.new_content":{"body":"that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758728053406,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OXZiCLfC9IgNOUtjy1gHhotS_JxerIzukx0wa0axhKs"},
{"content":{"body":"Lack of adoption was because the use cases it was for didn't actually end up happening that much, not because of the name","m.mentions":{},"msgtype":"m.text"},"ts":1758728056509,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XLfMjUQUXPoY1Zb1rWNxr4yeSF7JO2S9h-jKG8dU4ek"},
{"content":{"body":"engines would not have been happier if people started using it for the things they're currently doing, that would be worse","m.mentions":{},"msgtype":"m.text"},"ts":1758728068811,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-v_974ezr-3eMNFFU2RaVSaEfn5el94O_BMjvzaKP3A"},
{"content":{"body":"i'll agree it's not the best example here","m.mentions":{},"msgtype":"m.text"},"ts":1758728080635,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tst9aJq4SX-bT30MubU924CIgnNQDbEZ2ioQC-GiOms"},
{"content":{"body":"https://github.com/mozilla/explainers/blob/main/amount.md","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$r3zdKbNmB13nMoZ1XIPljuD9F3aJYq3DyFEkFKczoo8"}},"msgtype":"m.text"},"ts":1758728082163,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$5BEuEw06xrLzXt-o4GoVMGHrILtRUieB_-Y9faJ05O0"},
{"content":{"body":"(that said, it _is_ extremely useful for wasm interop so I'm still very glad we have it.)","format":"org.matrix.custom.html","formatted_body":"(that said, it <em>is</em> extremely useful for wasm interop so I'm still very glad we have it.)","m.mentions":{},"msgtype":"m.text"},"ts":1758728104079,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Y3RxIP6DmHO1P3FuqBOUKVmEURRGYmDBT3-7WFMHHpo"},
{"content":{"body":"Right now the idea is that you hover over it, and it shows a localized popup","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$5BEuEw06xrLzXt-o4GoVMGHrILtRUieB_-Y9faJ05O0"}},"msgtype":"m.text"},"ts":1758728111774,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RHf7ITzHpT3lZGCG1r-jnTPsG3BHsu4ZCfsxyGAPdsg"},
{"content":{"body":"Kind of like `<span title=...>...</span>`","format":"org.matrix.custom.html","formatted_body":"Kind of like <code>&lt;span title=...&gt;...&lt;/span&gt;</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758728122306,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ySRNFgr946ZNLKt-JM2AfK5PfTdWGhoCmCJNx__5N5k"},
{"content":{"body":"> <@ljharb:matrix.org> that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all\n\nEh, even with minimal adoption it's still a good primitive to have available. For the use cases it is used for it's very useful","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />that's fair, but since then we got complaints about a lack of adoption, perhaps we shouldn't have added it at all</blockquote></mx-reply>Eh, even with minimal adoption it's still a good primitive to have available. For the use cases it is used for it's very useful","m.relates_to":{"m.in_reply_to":{"event_id":"$0I_cSvbV4-lqN4J9tAfEVl8Ie5W6vI5m72UplLXVTgw"}},"msgtype":"m.text"},"ts":1758728182557,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$1GVOE3OhJItO-XtL_fvQbMskE_g1JiGvfrLJyUZvLfY"},
{"content":{"body":"It seems like you would only ever construct an `Amount` *right* before formatting a `number`","format":"org.matrix.custom.html","formatted_body":"It seems like you would only ever construct an <code>Amount</code> <em>right</em> before formatting a <code>number</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758728186333,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$y-_kI2JmugDy4EVPCXktH9to8zYAVHpmHRqTALKT5NE"},
{"content":{"body":"No, as soon as you want to add information to that number, so that you pass them around as a single unit","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$y-_kI2JmugDy4EVPCXktH9to8zYAVHpmHRqTALKT5NE"}},"msgtype":"m.text"},"ts":1758728205964,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y"},
{"content":{"body":"* No, as soon as you want to add information to that number, so that you pass them around as a single \"thing\"","m.mentions":{},"m.new_content":{"body":"No, as soon as you want to add information to that number, so that you pass them around as a single \"thing\"","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758728212093,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Gew3x9WOADczza16PQ0SdQjXtdlAmStQNEV2gURIEUw"},
{"content":{"body":"that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption","m.mentions":{"user_ids":["@jasnell:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1GVOE3OhJItO-XtL_fvQbMskE_g1JiGvfrLJyUZvLfY"}},"msgtype":"m.text"},"ts":1758728221100,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms"},
{"content":{"body":"If it's right before, you can just pass the number to Intl as-is","m.mentions":{},"msgtype":"m.text"},"ts":1758728244301,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Nr96vhfOdCnzG0O1lMz3QwM_4ujM91EUPooDAz8U7zo"},
{"content":{"body":"oh jeeze the idea of people using this for representing JSON output from other languages which can represent values not representable by double or BigInt is... not appealing to me","m.mentions":{},"msgtype":"m.text"},"ts":1758728265828,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hDsBJ9133G5HRf396cc29XyNEXphv2RRpWE3l5v_87g"},
{"content":{"body":"How do you write code that handles an arbitrary Amount?","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tI-NoWkqqQ7JSU6LrQUfqdkOmeMAFNqmcbuw12Bbk4Y"}},"msgtype":"m.text"},"ts":1758728286805,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$PYlQ2BI97SH4vPppNML_eSS6_RfDNIrSS62G8KqkcQg"},
{"content":{"body":"Mostly passes it around as-is, as an opaque set of information","m.mentions":{},"msgtype":"m.text"},"ts":1758728385523,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hktsxNPYew25rN3HYmixDujS_xz_7xYAil5wlBMzRJs"},
{"content":{"body":"> <@ljharb:matrix.org> that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption\n\nFor decimal I can see that argument. Blocking things like record/tuple because of bigint adoption is like saying we won't sell oranges because no one eats the apples","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />that's also fine. but browsers have blocked decimal primitives (and record and tuple primitives) because bigint didn't get enough adoption</blockquote></mx-reply>For decimal I can see that argument. Blocking things like record/tuple because of bigint adoption is like saying we won't sell oranges because no one eats the apples","m.relates_to":{"m.in_reply_to":{"event_id":"$9flwb4I8JVOlsJfHZT6HAthDKehPzo-cz8GC33JQHms"}},"msgtype":"m.text"},"ts":1758728454412,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$ipdZY561qRwZbLoDbL0NXcQoddytZ0mafqzw8b5Yckw"},
{"content":{"body":"We already have a type that represents a value with an encoded number of significant digits and unit which you shouldn't do math on, it's `string`. Unless this can be sent natively over the wire it doesn't even help the case where you have a server \"Amount\" that the client should render in its own locale","format":"org.matrix.custom.html","formatted_body":"We already have a type that represents a value with an encoded number of significant digits and unit which you shouldn't do math on, it's <code>string</code>. Unless this can be sent natively over the wire it doesn't even help the case where you have a server \"Amount\" that the client should render in its own locale","m.mentions":{},"msgtype":"m.text"},"ts":1758728474312,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$SwkP7rQ82QXR1wW_F1evoQ49ppRKMv1w1pfzeTbp5lU"},
{"content":{"body":"that type represents many other things too tho, this would basically be a structured subset of what strings can do","m.mentions":{},"msgtype":"m.text"},"ts":1758728509160,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZMtw3HevMWJP-v5rYI6jHWkxY7i4L-vzywzs9cvu824"},
{"content":{"body":"The \"other things\" are what though?","m.mentions":{},"msgtype":"m.text"},"ts":1758728529080,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$TzE8MCxcaOGsZZf7gZ-AQVaD-0oF-a8HEW3g_NX_xrM"},
{"content":{"body":"But even decimal and bigint serve a sufficiently different use cases from each other that even that argument is tenuous. There are more use cases for decimal than bigint. I'm far less convinced about Amount","msgtype":"m.text"},"ts":1758728539024,"senderName":"James M Snell","senderId":"@jasnell:matrix.org","id":"$p7qwoxvHc-yh8vcaec6VCXG_qWzW6H_ZX6JqImYXuHo"},
{"content":{"body":"prose/poetry, bytes, anything that's not a value?","m.mentions":{"user_ids":["@searyanc:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$TzE8MCxcaOGsZZf7gZ-AQVaD-0oF-a8HEW3g_NX_xrM"}},"msgtype":"m.text"},"ts":1758728578769,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UQcplfPk9bnqydlfDP4V9i7VZZn15-3zF-v3fNEI9rw"},
{"content":{"body":"oh I thought \"that type\" referred to Amount","m.mentions":{},"msgtype":"m.text"},"ts":1758728639836,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$gwx8THY_v0RcE_eXwIcDW6uQQftkLQ9xg58IibIPfp0"},
{"content":{"body":"sorry for the confusion","m.mentions":{},"msgtype":"m.text"},"ts":1758728731435,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9c2eoEtC2DwEfD3N6E-ut60SOWZt2H9bubRFjcHPgng"},
{"content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n+ checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<ul>\n<li>checking that the units match</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1758729102865,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n\n\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n```\n\n\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729107492,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ehHLJ-eSyjQfnyyKnkwxwa0uKWVqVBaFQle1co_E8rU"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), { unit: amount1.unit, fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits) })\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729141027,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8p5blAmWsuXq2H0Pi2mrv-M41365tXwle_NiKgnwSgM"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), \n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729185451,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$t14vQY5eaEtSXV-LFyQiQ1pT8TRQ3wakbsyGDnbszuU"},
{"content":{"body":"* Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"* <p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"m.new_content":{"body":"Fwiw even with `.toNumber()` math is terrible to do.\n\n```js\nnew Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n```\n\n\\\\ + checking that the units match","format":"org.matrix.custom.html","formatted_body":"<p>Fwiw even with <code>.toNumber()</code> math is terrible to do.</p>\n<pre><code class=\"language-js\">new Amount(amount1.toNumber() + amount2.toNumber(), {\n  unit: amount1.unit,\n  fractionDigits: Math.min(amount1.fractionDigits, amount2.fractionDigits)\n})\n</code></pre>\n<p>\\ + checking that the units match</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SqWzYIYTjgo0pUKwddA_1VX4CRmoNuHlyr0R1KmSUe4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729193727,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$5lM1tXo4twy_Lcpl0UKNBnkKeQ9jLReLgom3jPWRCHg"},
{"content":{"body":"so then why bother removing it","m.mentions":{},"msgtype":"m.text"},"ts":1758729223405,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dY2pa7qhPatASo683U2rpPGrwlgAhoxTcAFO2_gDqWo"},
{"content":{"body":"That message was directed to those that prefer to remove it. I'm neutral","m.mentions":{},"msgtype":"m.text"},"ts":1758729255099,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7QR0LI_yhk5UNfvfWnPKiQHusWFM5fQ9y7rI0Z2lhJI"},
{"content":{"body":"waldemar Do you think we could finish the 0.00&co discussion on GitHub?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub?","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"ts":1758729337054,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aAgxFRIVG-vBrCxzFpDR5C0llUYcKnW6C4QTkr2a54o"},
{"content":{"body":"* waldemar Do you think we could finish the 0.00&co discussion on GitHub rather than now?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub rather than now?","m.mentions":{},"m.new_content":{"body":"waldemar Do you think we could finish the 0.00&co discussion on GitHub rather than now?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> Do you think we could finish the 0.00&amp;co discussion on GitHub rather than now?","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$aAgxFRIVG-vBrCxzFpDR5C0llUYcKnW6C4QTkr2a54o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758729343512,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kqOIo5XAZAMubCAmUpiieq1nDnycJt9TVS2OtLp9HW0"},
{"content":{"body":"This feels like we're trying to create a new Array type that encodes which delimiter you should use when `toString`ing it (comma-separated, semicolon-separated, newline-terminated, etc).\n\nThat's not a new noun, it's just metadata attached to an existing primitivelike. Combining those into one new object isn't precedented in the language AFAICT?","format":"org.matrix.custom.html","formatted_body":"<p>This feels like we're trying to create a new Array type that encodes which delimiter you should use when <code>toString</code>ing it (comma-separated, semicolon-separated, newline-terminated, etc).</p>\n<p>That's not a new noun, it's just metadata attached to an existing primitivelike. Combining those into one new object isn't precedented in the language AFAICT?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1758729505471,"senderName":"Ryan Cavanaugh","senderId":"@searyanc:matrix.org","id":"$eVHFLVdevdIZU7LBWOQFV_QTT0BljLkq5h4A2iGkn_I"},
{"content":{"body":"MDN has a page for the duck-type Iterator incidentally: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator","m.mentions":{},"msgtype":"m.text"},"ts":1758729649910,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lrfUrVTOond0MprIVN7fK7h5ojuEenIn30YB0Xz2EV4"},
{"content":{"body":"One difference cf. the given examples of protocol objects is that Amounts are more likely to persist, i.e. be stored by a user and used in potentially multiplayer places. So if we go that way, should we provide an `isAmount()` function somewhere?","msgtype":"m.text"},"ts":1758729907529,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$y3HzHHsgY4Tb17mD0qdPtRnCIFGfiwDMpQ_KZWE1FCA"},
{"content":{"body":"i'd prefer yes, but we don't have an \"is iterator result\" function or \"is regexp match object\", so there's not much precedent","m.mentions":{},"msgtype":"m.text"},"ts":1758729948777,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7WQZ-kVD5VGQGfiHBtHh8KdNYt7s-4upGG2cCQNMM6c"},
{"content":{"body":"Are either of those commonly stored, or just immediately used?","msgtype":"m.text"},"ts":1758730038559,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$5M-AS41hlHxWtA3O9BxC3PdlOcLpogNpyDZqjO4by5Q"},
{"content":{"body":"I think there is a difference in that those two things are just a work-around because we don't support multiple return values from functions","m.mentions":{},"msgtype":"m.text"},"ts":1758730107072,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$uOONsEAGdgkRz7xSBACI4CZvo4YsHz5O8FKnZIhtp-4"},
{"content":{"body":"* I think there is a difference in that those two things are just a workaround because we don't support multiple return values from functions","m.mentions":{},"m.new_content":{"body":"I think there is a difference in that those two things are just a workaround because we don't support multiple return values from functions","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$uOONsEAGdgkRz7xSBACI4CZvo4YsHz5O8FKnZIhtp-4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730113470,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_YwoGtzOSO65CXnfvyUbsQsCWj8SNyLao3OFmQYAZgY"},
{"content":{"body":"If we did those two object shapes would not exist","m.mentions":{},"msgtype":"m.text"},"ts":1758730127033,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ZlQgCr6eWti0buEXWdm5V7Hdku7M41qvmxoFzrDYc8g"},
{"content":{"body":"But we'd still have this proposal","m.mentions":{},"msgtype":"m.text"},"ts":1758730132475,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$msynJohoob6i0hVtz3S3AsXPPGI6v8DUqLlsfWdTY0A"},
{"content":{"body":"iterables, and to a lesser extent iterators, are very likely to be stored by a user and passed around","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$y3HzHHsgY4Tb17mD0qdPtRnCIFGfiwDMpQ_KZWE1FCA"}},"msgtype":"m.text"},"ts":1758730601987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4cKvk4ZALtngqXpm11bbcAX3wNATsmqaiXjqBnExNZ4"},
{"content":{"body":"one difference with iterables is that you often (usually, in fact) want other behavior too when making an iterable, e.g. you're making a Map and it just happens to also be iterable","m.mentions":{},"msgtype":"m.text"},"ts":1758730822194,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbVsTdDpPmDns8lNijWW5swWn4f3z5GCXdu9WlgVFTM"},
{"content":{"body":"And users very rarely write iterators by hand","m.mentions":{},"msgtype":"m.text"},"ts":1758730834789,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q"},
{"content":{"body":"* And users very rarely write iterators by hand, we provide utilities for that","m.mentions":{},"m.new_content":{"body":"And users very rarely write iterators by hand, we provide utilities for that","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730840946,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wXMgNI0FUB-7SUWpp2E1Y31jcTOfzeAQwqRy_uqiX-g"},
{"content":{"body":"* And users very rarely write iterators by hand, we provide utilities/factories for that","m.mentions":{},"m.new_content":{"body":"And users very rarely write iterators by hand, we provide utilities/factories for that","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OigO_vmbMLUCRMY3_2TMrDXWc-kkAUI2DaEB4BtKX0Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758730846741,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7Wp4kK0JY_lBZdXeLBfRutcKwZpd8NUlIaF26W7SGno"},
{"content":{"body":"this is probably less true for Amount. On the other hand, maybe it is not that rare? if you're representing some type of data, you might well want to e.g. provide arithmetic functions for that data.","m.mentions":{},"msgtype":"m.text"},"ts":1758730869751,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EAjb8WuS3W_vk8Guotws1IV3MNIQWbuMw4BpaaSsBc0"},
{"content":{"body":"If this is a protocol you might want to implement on other objects, that would be a strong reason not to have a constructor.","m.mentions":{},"msgtype":"m.text"},"ts":1758730890328,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gFYEXHsC7fHoQcVQa3OhVEGzxjnydrCI3hKa0JND7Hs"},
{"content":{"body":"i'm guessing that is rare though","m.mentions":{},"msgtype":"m.text"},"ts":1758730918406,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hIF-rCgxUAvp8dr2zaF6B3gh3cDJmZWEYHGZL99lg_c"},
{"content":{"body":"If it was a protocol, do you think there should no built-in utility to make it more reachable? e.g. `Number.prototype.toAmount(unit) = return { value: this, unit }`, without it being a class","format":"org.matrix.custom.html","formatted_body":"If it was a protocol, do you think there should no built-in utility to make it more reachable? e.g. <code>Number.prototype.toAmount(unit) = return { value: this, unit }</code>, without it being a class","m.mentions":{},"msgtype":"m.text"},"ts":1758731041770,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$gJDxpC7cGdY6zYtbPg6LOfjl4I6jSew8o-DQBJvhEGQ"},
{"content":{"body":"`return foo.toAmount('kg')` is about the same as `return { value: foo, unit: kg }` IMO, and the latter is easier to learn","format":"org.matrix.custom.html","formatted_body":"<code>return foo.toAmount('kg')</code> is about the same as <code>return { value: foo, unit: kg }</code> IMO, and the latter is easier to learn","m.mentions":{},"msgtype":"m.text"},"ts":1758731153216,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EBauz8SvuCUQ5MAyuPnzoIcLlkBjMWPVLLvp0tQQ224"},
{"content":{"body":"* `return foo.toAmount('kg')` is about the same as `return { value: foo, unit: 'kg' }` IMO, and the latter is easier to learn","format":"org.matrix.custom.html","formatted_body":"* <code>return foo.toAmount('kg')</code> is about the same as <code>return { value: foo, unit: 'kg' }</code> IMO, and the latter is easier to learn","m.mentions":{},"m.new_content":{"body":"`return foo.toAmount('kg')` is about the same as `return { value: foo, unit: 'kg' }` IMO, and the latter is easier to learn","format":"org.matrix.custom.html","formatted_body":"<code>return foo.toAmount('kg')</code> is about the same as <code>return { value: foo, unit: 'kg' }</code> IMO, and the latter is easier to learn","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$EBauz8SvuCUQ5MAyuPnzoIcLlkBjMWPVLLvp0tQQ224","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758731180682,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vEdvj9hEaQUoxnvZvjNR-tdO1fq3RG1UJWaY7hFqj7E"},
{"content":{"body":"so, probably no. but this opinion is not strongly held; if there's cases where making it more reachable actually does significantly improve usability I'm open to that","m.mentions":{},"msgtype":"m.text"},"ts":1758731241518,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jazErlbapyBTssmR5IzvyaDj7sSOlDxoN2MYNVyDgzo"},
{"content":{"body":"To me, `isAmount` seems like a much more important function than `toAmount`, if going the protocol route.","msgtype":"m.text"},"ts":1758731291158,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$pKAZqUaXFMH4nKniMGjJYsb7kB-eKEGMMsOIPS8D8UY"},
{"content":{"body":"I cannot imagine when you would want an `isAmount` function","format":"org.matrix.custom.html","formatted_body":"I cannot imagine when you would want an <code>isAmount</code> function","m.mentions":{},"msgtype":"m.text"},"ts":1758731304698,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FcMNsMbj1PHTtgoG4HsNx_3b0hJUtQGhqyrK6o0hKj0"},
{"content":{"body":"If we had this being just a protocol, the main reason to have this be very easily reachable is that it needs to be easier for people to create these objects rather than to separately pass the precision and the values to Intl formatters","m.mentions":{},"msgtype":"m.text"},"ts":1758731336072,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$xhWsrrRQB_K8cjGbm6yTnKR3IOLM8qGcX0mWaFb5DKw"},
{"content":{"body":"Since that's a common source of bugs","m.mentions":{},"msgtype":"m.text"},"ts":1758731340390,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$5Z_yckCjUGvxb1dtL5rZc-tWJAajzvgKdLW_ziTBbb0"},
{"content":{"body":"> <@bakkot:matrix.org> I cannot imagine when you would want an `isAmount` function\n\nHow else could I know that a string value of { value } is a numerical string?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FcMNsMbj1PHTtgoG4HsNx_3b0hJUtQGhqyrK6o0hKj0?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />I cannot imagine when you would want an <code>isAmount</code> function</blockquote></mx-reply>How else could I know that a string value of { value } is a numerical string?","m.relates_to":{"m.in_reply_to":{"event_id":"$FcMNsMbj1PHTtgoG4HsNx_3b0hJUtQGhqyrK6o0hKj0"}},"msgtype":"m.text"},"ts":1758731421433,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$VFnT8MW60r52OPLNt_qeWB_Z9OnS2XcCV2_PK7cizos"},
{"content":{"body":"why do you have a string value of `{ value }` whose provenance is not known to you?","format":"org.matrix.custom.html","formatted_body":"why do you have a string value of <code>{ value }</code> whose provenance is not known to you?","m.mentions":{},"msgtype":"m.text"},"ts":1758731451659,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z-xE1sw4DiLZhW8shNbVyCc6zkcXHH_5HBPKtkgxTzk"},
{"content":{"body":"> <@bakkot:matrix.org> why do you have a string value of `{ value }` whose provenance is not known to you?\n\nBecause of the interchange uses for Amount, when the value has come from elsewhere and I'd like to retain and represent it in a lossless way.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Z-xE1sw4DiLZhW8shNbVyCc6zkcXHH_5HBPKtkgxTzk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />why do you have a string value of <code>{ value }</code> whose provenance is not known to you?</blockquote></mx-reply>Because of the interchange uses for Amount, when the value has come from elsewhere and I'd like to retain and represent it in a lossless way.","m.relates_to":{"m.in_reply_to":{"event_id":"$Z-xE1sw4DiLZhW8shNbVyCc6zkcXHH_5HBPKtkgxTzk"}},"msgtype":"m.text"},"ts":1758732205874,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$XLHRRdNoO8xmsyYUj4Nq16DcZj65W-wqYcQuGKHvPxI"},
{"content":{"body":"in my experience interchange protocols are always either tagged with types or have out-of-band schemas","m.mentions":{},"msgtype":"m.text"},"ts":1758732250398,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DL23b029RTAKP-V9fD6Z_0DLm9wumAQV7MkzAAaB_eI"},
{"content":{"body":"you're not just taking an arbitrary collection of values and trying to interpret them","m.mentions":{},"msgtype":"m.text"},"ts":1758732302977,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gsbdCFETNMyoJEMg19aUk7qdMDAsXLBCriMVvmlzm7A"},
{"content":{"body":"that doesn't really work","m.mentions":{},"msgtype":"m.text"},"ts":1758732305217,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VmHprXyExkVWvwSSoaHJPBCwUni-JDkaDpP2p6AStt0"},
{"content":{"body":"ljharb: as far as I am aware you are literally the only person in the world who is of the opinion that the point of having a class in general is that other things can't pretend to be that thing","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: as far as I am aware you are literally the only person in the world who is of the opinion that the point of having a class in general is that other things can't pretend to be that thing","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1758733094612,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$605Mry6K1EMghVTf-kEuCxgNGZxCjNVRuGDEkM6OXT8"},
{"content":{"body":"that is a valid opinion but other people aren't generally going to assume that reason without you making the case for it","m.mentions":{},"msgtype":"m.text"},"ts":1758733121503,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3YSd7zb0OXtf0ZVNmv_il5Yq09Kx3I0xD97A7_FjPho"},
{"content":{"body":"i mean, everything with internal slots and everything with private fields qualifies","m.mentions":{},"msgtype":"m.text"},"ts":1758733124493,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Xv0BBuuKhqANb9v8SMV0ze3dtiGwRD96j7lpfS3_IMQ"},
{"content":{"body":"that's how every builtin in this language works, with a very short list of exceptions","m.mentions":{},"msgtype":"m.text"},"ts":1758733140536,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$P2in6ih3ghb2-qt2m38Z-xiR2XiUx-blZJf61wPWlaU"},
{"content":{"body":"there is a massive distinction between \"that is how it works\" and \"that is the point of it\"","m.mentions":{},"msgtype":"m.text"},"ts":1758733171601,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$t16wt_w1pwi8F__YkLJn3yyTfM53GgX6lNlx6oARANM"},
{"content":{"body":"fair enough","m.mentions":{},"msgtype":"m.text"},"ts":1758733273324,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SHwlp_py4ISdMejWv38tHKT_HkFuHhg4y2Lv28d8k4o"},
{"content":{"body":"that's something that comes with \"having a class\", regardless of hte point","m.mentions":{},"msgtype":"m.text"},"ts":1758733290989,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YwqsnebFZuyGcy_37Qeg5he_NX7ytQSY1Km_rSmG0PE"},
{"content":{"body":"if we're not using internal slots at all then there's no point having anything but a plain object, like an iterator result","m.mentions":{},"msgtype":"m.text"},"ts":1758733304320,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bVFdcDwrb2VvxTpldaTPL27Jnn2u524XRi5hx4zXIas"},
{"content":{"body":"the Iterator class doesn't use internal slots at all and is nevertheless extremely useful","m.mentions":{},"msgtype":"m.text"},"ts":1758733439397,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SA9mreKh_bqUC7CekFOBv3T9xkPtCS4G85U7OoaVkTQ"},
{"content":{"body":"fair, it's IteratorHelper that has the internal slots, but iterator's a bit of a special case in lots of ways","m.mentions":{},"msgtype":"m.text"},"ts":1758733601251,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$I9MfkUsiVgN8lSmtcZ-lE56h7G_GoUElAgSPcJCwX_g"},
{"content":{"body":"notably we don't have an IteratorResult class tho, and if there's no internal slots or helper methods, then Amount seems more like that than an iterator","m.mentions":{},"msgtype":"m.text"},"ts":1758733758816,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wS8-GHCn1c_JKDnRbpymdp5C7ur8VtP0iRFEhA7mBKY"},
{"content":{"body":"* notably we don't have an IteratorResult class tho, and if there's no internal slots or helper methods, then Amount seems more like that than a stateful iterator","m.mentions":{},"m.new_content":{"body":"notably we don't have an IteratorResult class tho, and if there's no internal slots or helper methods, then Amount seems more like that than a stateful iterator","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wS8-GHCn1c_JKDnRbpymdp5C7ur8VtP0iRFEhA7mBKY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758733769511,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CIumbmBYVQ8Q85Tu06tNKA2jzFpWT62IltLyGQU6rL4"},
{"content":{"body":"ok JS developers do often have lots of dependencies but hundreds of thousands of dependencies is probably not actually a thing","m.mentions":{},"msgtype":"m.text"},"ts":1758737088212,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AQcuLxu8hnCmSxUZwd_gF9Q1yHJG9chOI_s2YequaXs"},
{"content":{"body":"perhaps worth noting, many (most?) are transitive and unshipped","m.mentions":{},"msgtype":"m.text"},"ts":1758737288266,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$GHY4Q6rMfqQtUTfXYJoORTDZtgDHMmV3YwPhlURDkFU"},
{"content":{"body":"transitive I buy, unshipped I don't buy","m.mentions":{},"msgtype":"m.text"},"ts":1758737306309,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KuHs7FuBLOFAR40RhwE2zoSpdtaiQG_eAR6vnxsx2l8"},
{"content":{"body":"the static analysis developers are using is, unfortunately, still terrible","m.mentions":{},"msgtype":"m.text"},"ts":1758737321860,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FgJhFo6omDufarm8cGCp08xm9C0BD3J5_8cRgAd1bSA"},
{"content":{"body":"one of our applications, out of thousands of deps, only like 30 have code that actually end up in the shipped bundle","m.mentions":{},"msgtype":"m.text"},"ts":1758737340082,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$bxGqrJN77kInbEHOw2fUXKi6Sj2wD5Eq6QSUIT1n-bk"},
{"content":{"body":"I'm assuming we're only talking about actual deps, not dev deps","m.mentions":{},"msgtype":"m.text"},"ts":1758737359542,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yjRnx5HxEbM1_fKxzyyU9dGkNx93DBWVO7iYZUHHeJc"},
{"content":{"body":"certainly most dev deps do not end up contributing shipping code, with exception of like babel or webpack","m.mentions":{},"msgtype":"m.text"},"ts":1758737383626,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$puginAuQBnwAffoeuWVVolkBznIk7BGtA3sQnVs4Z24"},
{"content":{"body":"yes, the actual deps. esp when using batteries-included libraries/frameworks, a lot of unused stuff gets shaken out","m.mentions":{},"msgtype":"m.text"},"ts":1758737593290,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$sWRhpae9FvG3FWbhv1zcrG9mAec3cf2eD0CSakQevNI"},
{"content":{"body":"huh, that is very much not my experience","m.mentions":{},"msgtype":"m.text"},"ts":1758737684694,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$brM82FopbcFArZzsnWzaLKsxFC66HKkM2LO6aolBzpg"},
{"content":{"body":"Even if it's only on the order of hundreds, it still seems like an intractable problem to vet all of them for transitive problems.","m.mentions":{},"msgtype":"m.text"},"ts":1758737733618,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$MTuljDkNrJ9UKcvsXYkarKVDi8VCxuItSJrIB51ylg0"},
{"content":{"body":"That was certainly the least opportune moment for Google to insist I reauthenticate.","m.mentions":{},"msgtype":"m.text"},"ts":1758737733829,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$oSLv4WVr-KH6cwrt2Eup_vtKt-YSep_WZvgYMwWlbe0"},
{"content":{"body":"bold of you to authenticate in the first place","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oSLv4WVr-KH6cwrt2Eup_vtKt-YSep_WZvgYMwWlbe0"}},"msgtype":"m.text"},"ts":1758737747858,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$LjJKVBCyH6iqZGzLRYq6TlRnKkhyIX6_UGmPF1gDpnI"},
{"content":{"body":"The usefulness of Compartments also seems to depend on frozen globals. Does anyone deploy that at scale with lots of dependencies?","m.mentions":{},"msgtype":"m.text"},"ts":1758737851218,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$giOnPps6x3ITaEFLTYU1XMZnL-rvRHSHmRAE6O9o080"},
{"content":{"body":"I thought V8 had a bunch of optimizations for proxies.  Would love to hear for sure if this include JITing across the boundary.","m.mentions":{},"msgtype":"m.text"},"ts":1758737915998,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$F_sHXlmX3Q4Ro5fVGLFeGWEgUgtrWK0cV21dzxqhd-o"},
{"content":{"body":"The dependencies can still collude to e.g. exfiltrate data, but preventing single dependencies from exceeding their authority eliminates an entire class of attacks, e.g. the event-stream incident. Compromising multiple dependencies and shepherding them to conduct an attack is a higher bar that makes a practical difference for the security of applications with many dependencies (i.e. the common case).","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$MTuljDkNrJ9UKcvsXYkarKVDi8VCxuItSJrIB51ylg0"}},"msgtype":"m.text"},"ts":1758738103658,"senderName":"rekmarks","senderId":"@rekmarks:matrix.org","id":"$X4WU3v8qykXZCrKsLAO142KRzrN17w-7kClACq4BWjE"},
{"content":{"body":"Yeah -- I appreciate Kris's comment -- particularly the \"unknown\" aspect; ","m.mentions":{},"msgtype":"m.text"},"ts":1758738331426,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$cUVx3vvVP8qkqKvIu41QRqmFg6eg1Xcsb48vZnbJnko"},
{"content":{"body":"I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from everything else.","m.mentions":{},"msgtype":"m.text"},"ts":1758738403311,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$pT3_0xeRMoKlWHpJ34iQkQ0pQ1uqlgCPxM14ENPrgjI"},
{"content":{"body":"* I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened.","m.mentions":{},"m.new_content":{"body":"I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$pT3_0xeRMoKlWHpJ34iQkQ0pQ1uqlgCPxM14ENPrgjI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758738432797,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$ySmp1CRqfX6DkKc8M39YpvK2aH79xWIIJXvcMITWDFU"},
{"content":{"body":"* I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened much more aggressively.","m.mentions":{},"m.new_content":{"body":"I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened much more aggressively.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$pT3_0xeRMoKlWHpJ34iQkQ0pQ1uqlgCPxM14ENPrgjI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758738443795,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$Dzps15f9m3hl7H4lqkBawXQrgA660ElTjWSewK_cXR4"},
{"content":{"body":"What's the \"core web process\"?","m.mentions":{},"msgtype":"m.text"},"ts":1758738456579,"senderName":"rekmarks","senderId":"@rekmarks:matrix.org","id":"$FqR9k1qRAnfZpRm2Mdn0X7_aV9lr_l4LmGTZyqIL5G4"},
{"content":{"body":"* I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened much more aggressively. Why is that insufficient or intractable here?","m.mentions":{},"m.new_content":{"body":"I guess I'd propose an alternative question. The approach that's becoming increasingly common on the web is that the core web process is assumed to be compromised. Instead privileged things are isolated from the core web process and are hardened much more aggressively. Why is that insufficient or intractable here?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$pT3_0xeRMoKlWHpJ34iQkQ0pQ1uqlgCPxM14ENPrgjI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758738461490,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$9ScnifD6AtOCuP7d0OhdloKeDOMFpWHby7sdmyU-WTE"},
{"content":{"body":"The rendering process (JS/DOM)","m.mentions":{},"msgtype":"m.text"},"ts":1758738478012,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$YB_J7QcrQJgk_jwYMKm2oKdwQvcnjfrLuh_OgURcJo0"},
{"content":{"body":"because the bank login runs in the core web process","m.mentions":{"user_ids":["@keith_miller:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$pT3_0xeRMoKlWHpJ34iQkQ0pQ1uqlgCPxM14ENPrgjI"}},"msgtype":"m.text"},"ts":1758738493418,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FYAUmWosljJOecZ4UuKV95SD97yzBAWp25lRFR5adGM"},
{"content":{"body":"inherently","m.mentions":{},"msgtype":"m.text"},"ts":1758738500318,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$73AQHxhV3ghKkgHrPFIoZckv5JLu1FcVz2kERXlruAA"},
{"content":{"body":"or even just JS, V8 has a heap sandbox now within the renderer...","m.mentions":{},"msgtype":"m.text"},"ts":1758738504360,"senderName":"Olivier Fl√ºckiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$mhLOYN1Q6uSwNH3M6iKg2lAypxySntuRAn9I6p6xCiE"},
{"content":{"body":"I'm saying the same approach in JS. Not at the C++ layer","m.mentions":{},"msgtype":"m.text"},"ts":1758738526802,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$bVSYsn99soyFPcC8TaaURcHi34Q76R8c_WuB_W6FU0U"},
{"content":{"body":"I kind of doubt that you can feasibly move \"access to the DOM\" out of the root JS process","m.mentions":{},"msgtype":"m.text"},"ts":1758738577092,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IfF02TFrETcYsSkope_JULC0UgyWyhHgBceI2HkUOMg"},
{"content":{"body":"That's an analogy not what I'm actually proposing for sites. Although one could do it by origin isolating them.","m.mentions":{},"msgtype":"m.text"},"ts":1758738646381,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$6u_BXTgfz6huQp8BciB9P_ljzeH8_YDBJWwU_9mA1IQ"},
{"content":{"body":"This is just a small factoid, but hints at some of my personal worries: At least in SpiderMonkey we already have \"oops wrong realm\" objects that we're aware of, but have never fixed because it's been too low in our priority list (usually errors thrown that are from the wrong realm). \n\nI say this not yet really having made the conceptual leap from the previous module-global propsal to the current more compartment like yet. ","m.mentions":{},"msgtype":"m.text"},"ts":1758738710400,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$fPzjGzr2wRDibhjjmlEOaF4GsbPitiPTUrZnhpxMs9E"},
{"content":{"body":"* This is just a small factoid, but hints at some of my personal worries: At least in SpiderMonkey we already have \"oops wrong realm\" objects that we're aware of, but have never fixed because it's been too low in our priority list (usually errors thrown that are from the wrong realm). \n\nI say this not yet really having made the conceptual leap from the previous module-global propsal to the current more compartment like one","m.mentions":{},"m.new_content":{"body":"This is just a small factoid, but hints at some of my personal worries: At least in SpiderMonkey we already have \"oops wrong realm\" objects that we're aware of, but have never fixed because it's been too low in our priority list (usually errors thrown that are from the wrong realm). \n\nI say this not yet really having made the conceptual leap from the previous module-global propsal to the current more compartment like one","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$fPzjGzr2wRDibhjjmlEOaF4GsbPitiPTUrZnhpxMs9E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758738720112,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$IIt4iKS2xckm86S5ZH_d7AIn0zu1iblbNofvc1TkHbg"},
{"content":{"body":"I know at least some engines had some inconsistencies about the realms of iterator result objects at some point, possibly also the realms of promises for certain kinds of async functions","m.mentions":{},"msgtype":"m.text"},"ts":1758738766666,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$twCrDcuIcY66ZgdayXNEFEyZqCgZQ1dZpdhjq1oaiTM"},
{"content":{"body":"which, yes, I have usually avoided adding tests for these because I don't think we should usually care","m.mentions":{},"msgtype":"m.text"},"ts":1758738805957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nB4oi_ejME7sq62Gs9rPgCUxgwwY6bjQryWDuGBv4PU"},
{"content":{"body":"(And to colour in the rest of my allusion -- if we make mistakes around this, it turns into compartment violation security bug) ","m.mentions":{},"msgtype":"m.text"},"ts":1758738815880,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$2okPWgrfXz2-FLhepIW_Eoy3bQGOWCYtQQq8EARZJFc"},
{"content":{"body":"the current proposal does not involve having separate versions of Error or Promise or anything, so I don't think it ends up really mattering directly","m.mentions":{},"msgtype":"m.text"},"ts":1758738845713,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$u2Ro_XJjClU0pFvpvTGI8FetzqMc7KcqJX6ep5Ty1H8"},
{"content":{"body":"it's only Function (and friends) specifically which are different. not even their prototypes, just the ctor itself.","m.mentions":{},"msgtype":"m.text"},"ts":1758738863735,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9SSQsjhfWqDLvM5ulMJ-O7RYoMKnuoukbOOSsw27PQM"},
{"content":{"body":"the reason this is thought to be OK is because it is assumed that all the intrinsics are frozen (by something)","m.mentions":{},"msgtype":"m.text"},"ts":1758738892501,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qOn2rpRkQ3LYanXnY33DHdneYDnViRuXkugZ9VEMS94"},
{"content":{"body":"and also that any powerful intrinsics have not been provided to the compartment","m.mentions":{},"msgtype":"m.text"},"ts":1758738906532,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tShGFTK7OLPZv5izbD3lZW9I16SfzQpJZgrt4w1JZ7w"},
{"content":{"body":"That's nice at least. I'll be excited to read the updated readme so I can try to piece it together","m.mentions":{},"msgtype":"m.text"},"ts":1758738934258,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$TQVpdlh55UeaISVTuwSbQLEOMdQ4Ab5QAUEP3gxA_jA"},
{"content":{"body":"Yeah. Language level values like iterations and RangeError don't change ","format":"org.matrix.custom.html","formatted_body":"Yeah. Language level values like iterations and RangeError don't change","msgtype":"m.text"},"ts":1758738945652,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$4PTjPiV5HKG8-1b7VYfpMC5n1Uy51XvwTrVxt06kSAw"},
{"content":{"body":"* Yeah. Language level values like Iterators and RangeError don't change","m.new_content":{"body":"Yeah. Language level values like Iterators and RangeError don't change","msgtype":"m.text"},"m.relates_to":{"event_id":"$4PTjPiV5HKG8-1b7VYfpMC5n1Uy51XvwTrVxt06kSAw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758738957585,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$H2WoFyHATc05ILTme53m-PCE35O71wuQscQ9I-5cArE"},
{"content":{"body":"Compartments: `with {}` done right ","format":"org.matrix.custom.html","formatted_body":"Compartments: <code>with {}</code> done right","msgtype":"m.text"},"ts":1758739030029,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$SRi6si9rysd2KSnptuXEBFdbbou7X0YIEQ1aKIEPVb8"},
{"content":{"body":"I should say part of my previous topic is that wasm is increasingly moving in the direction of exposing information about modules to runtime: https://github.com/WebAssembly/js-types/blob/main/proposals/js-types/Overview.md","m.mentions":{},"msgtype":"m.text"},"ts":1758739429144,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pi-kwB3lJNMEJ5qLpOjTK_v4tfI9qsWca4p3jTq4WgE"},
{"content":{"body":"and this is good and allows you to do lots of useful things","m.mentions":{},"msgtype":"m.text"},"ts":1758739439119,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dbnQI1K2yDXKvIj4JYSXz-AZ3nuP9PgH_e1jtr-BobE"},
{"content":{"body":"We are very much in favor of also exposing more information on ModuleSource instances, like all the externally visible bindings.","m.mentions":{},"msgtype":"m.text"},"ts":1758739681707,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$UZ38ZVSyzQ3wBftEk6mue0FaxFQfKQI3W8hBu73DYQk"},
{"content":{"body":"Like, writing a bundler that uses ModuleSource to gather the static transitive dependencies of a module graph would greatly benefit from that analysis. Last updated 3 years ago https://github.com/tc39/proposal-compartments/blob/master/1-static-analysis.md","m.mentions":{},"msgtype":"m.text"},"ts":1758739740079,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$ogMDeFBcnOkfuWKTdoS6as_j_VF5Kk-ckVkBTY42uQc"},
{"content":{"body":"re: LLMs writing attacks: there's also the \"just have an LLM do the attack at runtime\" approach https://www.anthropic.com/news/detecting-countering-misuse-aug-2025#vibe-hacking-how-cybercriminals-used-claude-code-to-scale-a-data-extortion-operation","m.mentions":{},"msgtype":"m.text"},"ts":1758739849739,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$C0Ty9yr33QH4LTKxiAfDwUR1dOS-73d3KFbxMG9WtXg"},
{"content":{"body":"link to \"w3c amount\" ?","m.mentions":{},"msgtype":"m.text"},"ts":1758740098483,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$y35wlXmEPJqEJkBr42jbSZrcn86PZJbCPLhw3EwuGUg"},
{"content":{"body":"You mean https://github.com/mozilla/explainers/blob/main/amount.md?","m.mentions":{},"m.relates_to":{"event_id":"$y35wlXmEPJqEJkBr42jbSZrcn86PZJbCPLhw3EwuGUg","is_falling_back":true,"m.in_reply_to":{"event_id":"$y35wlXmEPJqEJkBr42jbSZrcn86PZJbCPLhw3EwuGUg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758740139801,"senderName":"keith_miller","senderId":"@keith_miller:matrix.org","id":"$wOUPcyRY-QNbJBWbw3m2L1cehKg1IOBhkMxAkAXBx2s"},
{"content":{"body":"looks like it","m.mentions":{},"m.relates_to":{"event_id":"$y35wlXmEPJqEJkBr42jbSZrcn86PZJbCPLhw3EwuGUg","is_falling_back":true,"m.in_reply_to":{"event_id":"$wOUPcyRY-QNbJBWbw3m2L1cehKg1IOBhkMxAkAXBx2s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758740211628,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$YmSjJfUaV358xLMt-0OCOhOHmLUI8l937AYDCf5ZYA4"},
{"content":{"body":"I think this is really the crux of it. The way I see it, it's mostly adding a \"terminating scope\" before evaluating code (including modules). We already have all the logic around to evaluate code in an existing scope stack.","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SRi6si9rysd2KSnptuXEBFdbbou7X0YIEQ1aKIEPVb8"}},"msgtype":"m.text"},"ts":1758740611787,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$B-kro2aoSv4gQt7UBz6xlKMp9HX5DtI1eithtIwXrt8"},
{"content":{"body":"bakkot: in my personal notes from the very end of the previous Amount continuation I have \"KG: In order to maintain invariants, it will be necessary to use internal slots.\" Did I misunderstand you there? Isn't that a clear indicator that a class is needed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: in my personal notes from the very end of the previous Amount continuation I have \"KG: In order to maintain invariants, it will be necessary to use internal slots.\" Did I misunderstand you there? Isn't that a clear indicator that a class is needed?","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1758740640199,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$6qCT19hr8TZ7v4WEeEcfBe6fIggdWqwGtbSruWPGeo4"},
{"content":{"body":"That is a claim WH made, not a position I advocate","m.mentions":{},"msgtype":"m.text"},"ts":1758740707555,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$81Y66kSGbBePlbSMyRUBml99pDXda4IJo16JV8Zu0g8"},
{"content":{"body":"it is not clear to me which invariants exist or whether consumers actually need to be able to rely on them; my inclination would be to answer the latter question in the negative","m.mentions":{},"msgtype":"m.text"},"ts":1758740739593,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N6WVjsliKarGxOix7y3uc6LnvdY_MotHiYj8_IXd2kg"},
{"content":{"body":"i am very skeptical that this is good; it can make things about the way you wrote the code be part of your observable API :-/","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$dbnQI1K2yDXKvIj4JYSXz-AZ3nuP9PgH_e1jtr-BobE"}},"msgtype":"m.text"},"ts":1758740793301,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Xd1NiOe_nkmHjCrm2MfGcdYNAa5XLqtd0wyiHzd9mIo"},
{"content":{"body":"the exports of code is always part of its observable API","m.mentions":{},"msgtype":"m.text"},"ts":1758740812996,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fg0itd3_euiEPMfCLgOFD7AvJa9plRGPABbH5tKLeO0"},
{"content":{"body":"oh sure, exposing metadata about existing observable things is great!","m.mentions":{},"msgtype":"m.text"},"ts":1758740826946,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$j-4IrBLr1aU5ZR___CoBPpa79zqnpRLomdgCC-6ZnxQ"},
{"content":{"body":"the imports less directly so but they're still pretty observable in practice","m.mentions":{},"msgtype":"m.text"},"ts":1758740829929,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2scC610W1JMOCdK0e-afeCBIeZqzkNkAXNapzjjqfBk"},
{"content":{"body":"i'm not super clear on how one would do that","m.mentions":{},"msgtype":"m.text"},"ts":1758740847676,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Ekgng2dUfpfSJaOCLDV-i3aORnHHtlJZgI2rTg6YD2M"},
{"content":{"body":"* i'm not super clear on how one would do that (from code, obv you can do it from dev tools etc)","m.mentions":{},"m.new_content":{"body":"i'm not super clear on how one would do that (from code, obv you can do it from dev tools etc)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Ekgng2dUfpfSJaOCLDV-i3aORnHHtlJZgI2rTg6YD2M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758740856847,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1pm2o59e2fOv9Z5qsEsF6R5wANdixVEuLG2rKBzXYm4"},
{"content":{"body":"and with Compartments as proposed imports would be very observable anyway because there is an `importHook`","format":"org.matrix.custom.html","formatted_body":"and with Compartments as proposed imports would be very observable anyway because there is an <code>importHook</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758740878723,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FXEE-ooZNbH7bD04K-GhJgKkUO5UE4hSLF2EBTN-kio"},
{"content":{"body":"that is true, and that is a concern i have for that part of the proposal","m.mentions":{},"msgtype":"m.text"},"ts":1758740915790,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FJpeZdAzD8-z7qk_BQKuYMmxrNKYik82hM4KbbvGqjk"},
{"content":{"body":"There are some funny things about ESM that bindings reflection does need to hide. You can‚Äôt just ship the import and export statements, because they entrain too many implementation details. We‚Äôve discussed this pretty hard at Module Harmony.","m.mentions":{},"msgtype":"m.text"},"ts":1758741016809,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$gJbKBHsuvB4TkOygH_tBs5BcTd0SklGROdYyrKrpVlQ"},
{"content":{"body":"It also has the downside that you cannot trivially create a proxy for another module by copying all the bindings from a module source to the virtual module source. But, that‚Äôs just a reality we have to live with.","m.mentions":{},"msgtype":"m.text"},"ts":1758741111479,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$mHFWTDICkdbG7gm-flv1H1uUYeSq-hB7x2djOTq0Mxs"},
{"content":{"body":"(Or not pursue virtual modules sources at all, to be clear, but they‚Äôd be useful for CJS migration, for one.)","m.mentions":{},"msgtype":"m.text"},"ts":1758741135605,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$cZHWxO9LtJQ7DLsHJPZXj8GpAP_XzBBaoAr42oFh_qc"},
{"content":{"body":"couldn't that be enabled without actually exposing the list? like, provide an opaque identifier that just represents the list","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mHFWTDICkdbG7gm-flv1H1uUYeSq-hB7x2djOTq0Mxs"}},"msgtype":"m.text"},"ts":1758741155727,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$04qOQwOHs4o6fFPBCJS3JUGocC-p2CYaV1_JHBzgAPU"},
{"content":{"body":"An Amount is not like a tuple. When receiving an Amount it would be problematic if the various fields such as digit counts and stored value were inconsistent with each other. So you don't want to do duck typing. There are various other ways to ensure the invariants.","m.mentions":{"user_ids":["@bradfordcsmith:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$6qCT19hr8TZ7v4WEeEcfBe6fIggdWqwGtbSruWPGeo4"}},"msgtype":"m.text"},"ts":1758741262824,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$Yn5SBwMrWFOqUDZt_NnUVW_nF5l5uYDG8u_z7BCDosc"},
{"content":{"body":"the agenda for the next meeting is available and ready for your topics to be added!  üòÄ\n\nhttps://github.com/tc39/agendas/blob/main/2025/11.md\n\nwe currently have ~15 hours of time available","m.mentions":{},"msgtype":"m.text"},"ts":1758748148626,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$R-rkLKtBJ2djvMVjVXo8Sso4TA_gQP-W4VzojE8XOK8"}
]