[
{"content":{"body":"why do the dataview methods default to big-endian ","msgtype":"m.text"},"ts":1685944406025,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P2JqUWSkv2De1dGhJPTrxHA86xUoqWbIYBZfHRXVTR8"},
{"content":{"body":"who is running JS on big-endian systems and why did we decide they should get the simpler form","msgtype":"m.text"},"ts":1685944455558,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OuAu5gG5qrKHwgGVoQwbiyuiQ2_DA_1f1hwYagoifk0"},
{"content":{"body":"sidebar: we should probably expose endianness as a constant somewhere","msgtype":"m.text"},"ts":1685944593893,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w-pDi6e2tOfvUrTm2070asltMiNGT-NoZgld-wCeRPE"},
{"content":{"body":"it is kind of unfortunate that it's implementation-defined but since it is we at least ought to let you test for it without having to write a value and read it back","msgtype":"m.text"},"ts":1685944620461,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v-VeMyNjZA4dwGg1HcbOnpMlnX179itlignOwfQQD0o"},
{"content":{"body":"> <@bakkot:matrix.org> who is running JS on big-endian systems and why did we decide they should get the simpler form\n\nInternet protocols??","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24OuAu5gG5qrKHwgGVoQwbiyuiQ2_DA_1f1hwYagoifk0\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>who is running JS on big-endian systems and why did we decide they should get the simpler form</blockquote></mx-reply>Internet protocols??","m.relates_to":{"m.in_reply_to":{"event_id":"$OuAu5gG5qrKHwgGVoQwbiyuiQ2_DA_1f1hwYagoifk0"}},"msgtype":"m.text"},"ts":1685955283510,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$aovKezc3RH_KTZv8ldcazXN_y2F5unU_-s7RntExJ3c"},
{"content":{"body":"> <@bakkot:matrix.org> it is kind of unfortunate that it's implementation-defined but since it is we at least ought to let you test for it without having to write a value and read it back\n\nSure but is there an actual (valid) use case for that?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24v-VeMyNjZA4dwGg1HcbOnpMlnX179itlignOwfQQD0o\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>it is kind of unfortunate that it's implementation-defined but since it is we at least ought to let you test for it without having to write a value and read it back</blockquote></mx-reply>Sure but is there an actual (valid) use case for that?","m.relates_to":{"m.in_reply_to":{"event_id":"$v-VeMyNjZA4dwGg1HcbOnpMlnX179itlignOwfQQD0o"}},"msgtype":"m.text"},"ts":1685955307755,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EyWHpfbJbFuHd2ImQQDt8j44BN_Nv6HZ-h-aH2SiGOc"},
{"content":{"body":"> <@littledan:matrix.org> Sure but is there an actual (valid) use case for that?\n\nif you're using DataView methods you need to be explicit about it ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EyWHpfbJbFuHd2ImQQDt8j44BN_Nv6HZ-h-aH2SiGOc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Sure but is there an actual (valid) use case for that?</blockquote></mx-reply>if you're using DataView methods you need to be explicit about it","m.relates_to":{"m.in_reply_to":{"event_id":"$EyWHpfbJbFuHd2ImQQDt8j44BN_Nv6HZ-h-aH2SiGOc"}},"msgtype":"m.text"},"ts":1685977806652,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hqr0SfH5Z1RztbnpCk__w_uSCBG-T4nEMWeGPkLQmhs"},
{"content":{"body":"since they don't fall back to the platform default","msgtype":"m.text"},"ts":1685977841408,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FgIL-wRlBVj3o8PQmiCoVuT-CXiWvAp78co0s_P2QUs"},
{"content":{"body":"bare `float64Array[x] = y` does fall back to the platform default, so if you write a value using that syntax and then want to read it with a DataView you need to know which endianness to specify for the DataView methods","format":"org.matrix.custom.html","formatted_body":"bare <code>float64Array[x] = y</code> does fall back to the platform default, so if you write a value using that syntax and then want to read it with a DataView you need to know which endianness to specify for the DataView methods","msgtype":"m.text"},"ts":1685977899410,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mRPmrPHGCuzczI92dkuKodSWRjCQPAFi-Agt5HOwVh4"},
{"content":{"body":"Sure but who is forcing you to use the DataView methods?","msgtype":"m.text"},"ts":1685993884217,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pUagkpTB4tquFG2ZUctYsrwK4LhBJIko9poVaqoxSrk"},
{"content":{"body":"lol is that a serious question? there's a reason dataview exists","msgtype":"m.text"},"ts":1685997175251,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f_AM5SeYJW5l2P6tTmZjcwONm_ySarnWmbK85cfhLXU"},
{"content":{"body":"Well, I don’t really see any particular logic to the system beyond, TypedArray is for when you want to use native endianness, and DataView is when you want explicit endianness","msgtype":"m.text"},"ts":1685998253457,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s6-FqYtM0lVVtSvzwl6Nul_G3AebX7I5LuFfFxyUVsc"},
{"content":{"body":"Unfortunately, DataView is not that orthogonal to other TypedArrays in its design. It’s also useful for heterogenous data like a serial protocol buffer, for which big-endian is indeed a great default, or an allocation arena for structs, where little-endian would be a great default.","msgtype":"m.text"},"ts":1685998901481,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JZE301Sap4OzpiUcKqVS_SeoWxoTHFbt56uNxdJG6FY"},
{"content":{"body":"Well, it’s unergonomic but can’t you superimpose different TypedArrays on top of the same arraybuffer to do that heterogeneous, native endian access?","msgtype":"m.text"},"ts":1685999205096,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KWFultzJy35yqqIYhKYO_BePv7UJrZDGfuWauAcLc7E"},
{"content":{"body":"If we enable more, it seems like ergonomics would be the motivation, right?","msgtype":"m.text"},"ts":1685999222134,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xNp_HiOr8RLawKLmDXbXXt_1ZMCbkVOwbv42VAC-8Rg"},
{"content":{"body":"You also need to superimpose your Uint64Array at 8 initial offsets, and do some math to choose.","msgtype":"m.text"},"ts":1685999514436,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$dRGfM2xIqnTpzezvy4nw_TLTPhcVcs-PghmLChIe-58"},
{"content":{"body":"So, yes, ergonomics.","msgtype":"m.text"},"ts":1685999527413,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$4To0griNa2RkXrnd-BmTEueeJR1gxUfAauQ7L7slp6A"},
{"content":{"body":"As opposed to contortion.","msgtype":"m.text"},"ts":1685999565097,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$BQcY8gIXdqnS-57FukpSpipE1HeEpVtuTeEFdv-zGmA"},
{"content":{"body":"So, sure, I have nothing against an ergonomics-motivated way to get at the platform endianness, for the sake of passing into the DataView methods","msgtype":"m.text"},"ts":1685999641614,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$liNqoXu4YFyujpe49jZXhkin7_QEEJfLcC65PR-RC3w"},
{"content":{"body":"*BigUint64Array","msgtype":"m.text"},"ts":1685999657649,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DupGZ-UXKHzOGggiOlyq3inqvmxO_wU-n91BDzyyd0g"},
{"content":{"body":"Also when you use that API please write a note to the poor implementers who did all the work and weren’t sure if it was useful","msgtype":"m.text"},"ts":1685999692318,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pNIB1MSvc0igVpaz1h3R6jWV7oO-2pfEv_trBVlHMIo"}
]