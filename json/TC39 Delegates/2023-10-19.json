[
{"content":{"body":"can anyone come up with an `x` and `y` where `Object.prototype.isPrototypeOf.call(x, y)` and `Object.prototype.isPrototypeOf.call(y, x)` are both `true`?","format":"org.matrix.custom.html","formatted_body":"can anyone come up with an <code>x</code> and <code>y</code> where <code>Object.prototype.isPrototypeOf.call(x, y)</code> and <code>Object.prototype.isPrototypeOf.call(y, x)</code> are both <code>true</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1697748732348,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_anxkpvV3KEfCeAQXi07lvHAADQ2RZCbfE1v7NKsxJc"},
{"content":{"body":" * can anyone come up with an `x` and `y` where `Object.prototype.isPrototypeOf.call(x, y)` and `Object.prototype.isPrototypeOf.call(y, x)` are both `true`, and `x !== y`?\n\nbecause i've got one in IE 8 that defies my understanding","format":"org.matrix.custom.html","formatted_body":" * <p>can anyone come up with an <code>x</code> and <code>y</code> where <code>Object.prototype.isPrototypeOf.call(x, y)</code> and <code>Object.prototype.isPrototypeOf.call(y, x)</code> are both <code>true</code>, and <code>x !== y</code>?</p>\n<p>because i've got one in IE 8 that defies my understanding</p>\n","m.mentions":{},"m.new_content":{"body":"can anyone come up with an `x` and `y` where `Object.prototype.isPrototypeOf.call(x, y)` and `Object.prototype.isPrototypeOf.call(y, x)` are both `true`, and `x !== y`?\n\nbecause i've got one in IE 8 that defies my understanding","format":"org.matrix.custom.html","formatted_body":"<p>can anyone come up with an <code>x</code> and <code>y</code> where <code>Object.prototype.isPrototypeOf.call(x, y)</code> and <code>Object.prototype.isPrototypeOf.call(y, x)</code> are both <code>true</code>, and <code>x !== y</code>?</p>\n<p>because i've got one in IE 8 that defies my understanding</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$_anxkpvV3KEfCeAQXi07lvHAADQ2RZCbfE1v7NKsxJc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697748761704,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fwGJIWDstU-edBS_bcAp_JLCNjRQRs8thaLp5yNIhlw"},
{"content":{"body":" * can anyone come up with an `x` and `y` (without using `Proxy`)where `Object.prototype.isPrototypeOf.call(x, y)` and `Object.prototype.isPrototypeOf.call(y, x)` are both `true`, and `x !== y`?\n\nbecause i've got one in IE 8 that defies my understanding","format":"org.matrix.custom.html","formatted_body":" * <p>can anyone come up with an <code>x</code> and <code>y</code> (without using <code>Proxy</code>)where <code>Object.prototype.isPrototypeOf.call(x, y)</code> and <code>Object.prototype.isPrototypeOf.call(y, x)</code> are both <code>true</code>, and <code>x !== y</code>?</p>\n<p>because i've got one in IE 8 that defies my understanding</p>\n","m.mentions":{},"m.new_content":{"body":"can anyone come up with an `x` and `y` (without using `Proxy`)where `Object.prototype.isPrototypeOf.call(x, y)` and `Object.prototype.isPrototypeOf.call(y, x)` are both `true`, and `x !== y`?\n\nbecause i've got one in IE 8 that defies my understanding","format":"org.matrix.custom.html","formatted_body":"<p>can anyone come up with an <code>x</code> and <code>y</code> (without using <code>Proxy</code>)where <code>Object.prototype.isPrototypeOf.call(x, y)</code> and <code>Object.prototype.isPrototypeOf.call(y, x)</code> are both <code>true</code>, and <code>x !== y</code>?</p>\n<p>because i've got one in IE 8 that defies my understanding</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$_anxkpvV3KEfCeAQXi07lvHAADQ2RZCbfE1v7NKsxJc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697749461787,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$go6Rqi_8r95k2qvLxTCD0DBVI_3JJ1VxPtWt1lw1bDo"},
{"content":{"body":"like, is it possible to legitimately construct a cycle with [[Prototype]] without \"spoofing\" the answer with proxies?","m.mentions":{},"msgtype":"m.text"},"ts":1697753188382,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dmK2gNwNZt_96GM83tjK6tSK42xaYYEu4lHsCzZO8aw"},
{"content":{"body":"i... hope not?","m.mentions":{},"msgtype":"m.text"},"ts":1697753190503,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Hc0Fr1r8SnyZ3KIxkCulXEUq_eWn7lQ5D-J740jFiZo"},
{"content":{"body":"OrdinarySetPrototypeOf checks for cycles so you can't do it as a user without exotics https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ordinarysetprototypeof","m.mentions":{},"msgtype":"m.text"},"ts":1697753345763,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p94NKgFy-IBKhpW9Vk7dhu-55CLi1s6wO6nCPGXCEpE"},
{"content":{"body":"but nothing strictly forbids a host from providing a pair of ordinary objects where each is the other's [[Prototype]]","m.mentions":{},"msgtype":"m.text"},"ts":1697753393353,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kC-6N-BwhXyoYnO92K4oWc3EWFzDi5qsSE9GfTxYC8E"},
{"content":{"body":"i feel like things would just iloop","m.mentions":{},"msgtype":"m.text"},"ts":1697753433064,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$i9Wh36r8f_2CR-Tl9zZQtIchoCrV1G748VnXHdhYBKk"},
{"content":{"body":"afaik v8 or other engines don't implement cycle checking everywhere we do a prototype walk, even as a debug assert","m.mentions":{},"msgtype":"m.text"},"ts":1697753463990,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sexFHF6RxTSBbAJcMImwf8JDImRLyLFLP6d9_ypWlGo"}
]