[
{"content":{"body":"I'd be happy to do a scrub session as well","m.mentions":{},"msgtype":"m.text"},"ts":1718175002151,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$DtwIcTlNnfk82UnHzzT0jhEJAuvI3lud_MdR6LPO4_E"},
{"content":{"body":"> <@shuyuguo:matrix.org> or was the scenario you were thinking of in u and v modes only?\n\nright, because of `IdentityEscape[UnicodeMode] :: [~UnicodeMode] |SourceCharacter| but not |UnicodeIDContinue|` (almost all character escapes are valid in legacy mode)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$OWDXIvubanGxkNRUbJAoCZyRFJem-sNnOX8HaTNxx1c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>or was the scenario you were thinking of in u and v modes only?</blockquote></mx-reply>right, because of <code>IdentityEscape[UnicodeMode] :: [~UnicodeMode] |SourceCharacter| but not |UnicodeIDContinue|</code> (almost all character escapes are valid in legacy mode)","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$OWDXIvubanGxkNRUbJAoCZyRFJem-sNnOX8HaTNxx1c"}},"msgtype":"m.text"},"ts":1718176186321,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$TFVgeoHAL_mFRmdgl7HjMOMp8w9ghjI5OjfWeHLXya0"},
{"content":{"body":"I just realised we'll have to figure out the PDF generation story also for the source maps spec 😭","m.mentions":{},"msgtype":"m.text"},"ts":1718179479809,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Z2_hzcxlB3t-8DBN4Fmgu2SgqWalJiYsoTPzF5LjSFs"},
{"content":{"body":"Oh actually just printing to PDF from Firefox is good enough","m.mentions":{},"msgtype":"m.text"},"ts":1718179655073,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hkDliciw-g6DtFAUmN0jqVTBANWLzU-58awnx-HRRuY"},
{"content":{"body":"yeah tell that to Ecma","msgtype":"m.text"},"ts":1718179894797,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$gsS6_xwh3TJ0nSfcjDzoHaTCV4SjXu3yD_W_5D0wU_w"},
{"content":{"body":"we'll all have until December to figure this out; it won't be until next meeting (at the absolute earliest) that we have something that we want to propose to TC39 to propose to the Ecma GA","m.mentions":{},"msgtype":"m.text"},"ts":1718180376320,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_fdojklAUAzuHrTOZ3cV59ohtVPCNd8EwEKzP91VFS0"},
{"content":{"body":"Is the link of slides of current topic available?","m.mentions":{},"msgtype":"m.text"},"ts":1718181185490,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$l-NBDN-pIxaJ76EV2_IbfYWzq4Lrcp54slao45yX4Xg"},
{"content":{"body":"hax (HE Shi-Jun) will ask the speaker to post them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a> will ask the speaker to post them","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"msgtype":"m.text"},"ts":1718181231106,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$BNfu6sjMJwgsuthSmKnuxA2XfBB6YYuk9QX18QQjWtU"},
{"content":{"body":"For the ShadowRealms topic, I've inserted the comment that I wanted to make in the notes, which was:\n\nI recommend applying the criterion, “ShadowRealms should contain the intersection of what’s in all conceivable environments”, which implies that they are missing everything to do with I/O [excluding import()], timers, DOM, etc. https://github.com/tc39/proposal-shadowrealm/issues/398#issuecomment-1939418911\n","m.mentions":{},"msgtype":"m.text"},"ts":1718182821369,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yWnSeodEqJzuNkrUQIzvy5za5z_E902N482209Bk7oc"},
{"content":{"body":"Bit-packing breaks down badly once concurrent threads are introduced. C++ found out about this the hard way.","m.mentions":{},"msgtype":"m.text"},"ts":1718182883061,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$0-2mzRHdtglMYOqibwPhQILCaqV2Nl04oa9bhKue_FE"},
{"content":{"body":"I agree with the set of things that are spec'd as Exposed=* that Igalia has put together--they seem to be following this principle already.","m.mentions":{},"msgtype":"m.text"},"ts":1718182907322,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$veWIr00dNLcNNpm94eS4wf0criaPo-86UWpE4y16Cco"},
{"content":{"body":"A key requirement is that writes to different variables must be independent.","m.mentions":{},"msgtype":"m.text"},"ts":1718182913696,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$Yb6IoVIXkWM2AKOR9LL6ZVzMTOssmDuvLSLeFCGpgBU"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> I just realised we'll have to figure out the PDF generation story also for the source maps spec 😭\n\ni got u bb 😘","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Z2_hzcxlB3t-8DBN4Fmgu2SgqWalJiYsoTPzF5LjSFs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>I just realised we&#39;ll have to figure out the PDF generation story also for the source maps spec 😭</blockquote></mx-reply>i got u bb 😘","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Z2_hzcxlB3t-8DBN4Fmgu2SgqWalJiYsoTPzF5LjSFs"}},"msgtype":"m.text"},"ts":1718186122811,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$x235UlQLRpXHk-f_3JAYhQXWBqQO03an-_2HQ3u5Oh0"},
{"content":{"body":"Does anyone want to volunteer to audit the PDF when it's ready? If a handful of volunteers took a few clauses each (just scrolling through and making sure there's no unfortunate page breaks mostly) then I'd feel a lot more confident with the final product","m.mentions":{},"msgtype":"m.text"},"ts":1718186220618,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$Eyb_AK2sEa2vCKM4j7CG4XEybGDcdM_obuyaDR0MkV8"},
{"content":{"body":"it's like 900 pages, my eyes keep glazing over","m.mentions":{},"msgtype":"m.text"},"ts":1718186239882,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$9caozJ6h1JE3vOGbREulanTFUOyfuK_sK-dC0lrMpQI"},
{"content":{"body":"@akirose:matrix.org I can take a look at it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40akirose%3Amatrix.org\">@Aki</a> I can take a look at it","msgtype":"m.text"},"ts":1718186454064,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4QpohdcGzh1HP8DSDGDSwOofTPN-gbu0dp391FQwL1U"},
{"content":{"body":"Michael Ficarra: cool, i'll let you know when it's ready","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: cool, i'll let you know when it's ready","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1718186491102,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$OL_H_Ue7w9A3gKNL2kJwOPubOQoN8N8QYuCXQtY5jKI"},
{"content":{"body":"I volunteer especially if you also want someone to look through 402","m.mentions":{},"msgtype":"m.text"},"ts":1718186497227,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$iW3om_WUMrQUbPnuq5qPZ19_y6zfNe57pWrZsIreLTY"},
{"content":{"body":"I'm pretty confident there isn't gonna be stuff randomly missing or cut off. readability is my priority now.","m.mentions":{},"msgtype":"m.text"},"ts":1718186522603,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$XpXEwywTjmbRWZ6QB6FLZPpT8ghQ9aH_A_LH1OqOGic"},
{"content":{"body":"ryzokuken (TC39 🇫🇮): yessss","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken (TC39 🇫🇮)</a>: yessss","m.mentions":{"user_ids":["@usharma:igalia.com"]},"msgtype":"m.text"},"ts":1718186539195,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$uXINv5XQOkBw9y1dH_kqBuZei4OUsvpamCDICxjaCp8"},
{"content":{"body":"could someone who's been in the zoom copy the slide link for the notes?","m.mentions":{},"msgtype":"m.text"},"ts":1718186539431,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZwMpNfrbasj9dURBuu5t5sziLw-SaG5_gNJEOEkdhv0"},
{"content":{"body":"yeah it's the finding random bits that *aren't* there that's the real hard part","format":"org.matrix.custom.html","formatted_body":"yeah it&#39;s the finding random bits that <i data-md=\"*\">aren&#39;t</i> there that&#39;s the real hard part","msgtype":"m.text"},"ts":1718186542850,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XaPUGmn5Fe3R6VL0XbMcqeFsga-3x6S5u2XvudqfYlo"},
{"content":{"body":"Can someone share Ben's slides? I have an older link but it's not these latest slides","m.mentions":{},"msgtype":"m.text"},"ts":1718186615479,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$p4HnRIT3FNfUMb0PClko2DuxMUZE8zD2DfLEShWG_xA"},
{"content":{"body":"The link was posted in zoom, but I wasn't in the call when it was posted","m.mentions":{},"msgtype":"m.text"},"ts":1718186631701,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$bdTdq2n0-mabuPhRR4ibE5oXHuTjl5xU920_2zI0cbc"},
{"content":{"body":"so joining now can't see it","m.mentions":{},"msgtype":"m.text"},"ts":1718186636134,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$l3WthHIAAu7NoufCiCarsQFSEJBbkbjUnlCUusDgvOA"},
{"content":{"body":"if someone who was already in zoom could share that would be great","m.mentions":{},"msgtype":"m.text"},"ts":1718186644811,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$VhmcwF7VQLh9sIY9Gq0TBMpiNAuI6TJIaDfwtyfWXtc"},
{"content":{"body":"https://docs.google.com/presentation/d/1WCdpcX4IpObi0CD1ftXA9QbZL5RSEGlYGXdqw3EfIdg/","m.mentions":{},"msgtype":"m.text"},"ts":1718186708875,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$O4kY4VzMLzYm7g9HXAZjo7PZYZKpKZHZcDaAaDau7lE"},
{"content":{"body":"thanks!","m.mentions":{},"msgtype":"m.text"},"ts":1718186713875,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$z2JiyYfhK8lekEzU-MnR5KpbL6BhSPLp1vuUOT9gbbk"},
{"content":{"body":"I was going to ask about the [US survey foot](https://www.nist.gov/pml/us-surveyfoot), but apparently that's being retired.","format":"org.matrix.custom.html","formatted_body":"I was going to ask about the <a href=\"https://www.nist.gov/pml/us-surveyfoot\">US survey foot</a>, but apparently that's being retired.","m.mentions":{},"msgtype":"m.text"},"ts":1718187476049,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$01gbSQ7oEV2WwHcYSqgVxtxCNmxmzxr4jod80pb_6KI"},
{"content":{"body":"It's definitely not in the units.xml, nor are any of the other historical survey feet that various countries have specified.","m.mentions":{},"msgtype":"m.text"},"ts":1718187508368,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$z1zcKV7T-qiIq80kBqNRHCFiZKjSF-dZQSdy0OlX0og"},
{"content":{"body":"@littledan:matrix.org I disagree that MDN is a good solution for discoverability of these values","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> I disagree that MDN is a good solution for discoverability of these values","msgtype":"m.text"},"ts":1718188495857,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$oAo79CLLkw1iC9SpAxIJ8KyaoPecp-egatnbHHLnkss"},
{"content":{"body":"> <@michaelficarra:matrix.org> @littledan:matrix.org I disagree that MDN is a good solution for discoverability of these values\n\nCan you elaborate on that?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oAo79CLLkw1iC9SpAxIJ8KyaoPecp-egatnbHHLnkss?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40littledan%3Amatrix.org\">@littledan</a> I disagree that MDN is a good solution for discoverability of these values</blockquote></mx-reply>Can you elaborate on that?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oAo79CLLkw1iC9SpAxIJ8KyaoPecp-egatnbHHLnkss"}},"msgtype":"m.text"},"ts":1718188513552,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GtIJgZQXzvtX9slAdb6LN8nraTLk-Rzsap7CgOaqPVc"},
{"content":{"body":"an l10n expert may have enough familiarity with cultural differences to know to describe a speed unit as a road travel speed or a volume unit as volume of gasoline, but your average developer might just see something more generic (which has no special handling in their locale) and use that","msgtype":"m.text"},"ts":1718188726053,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mQBEOGmIrxQLJElxWWv8iMMPn_LCujX1xyiN5pvchZI"},
{"content":{"body":"that's why I think this is great for l10n experts but I just don't see your average dev who has no interest in l10n being all that effective with it","msgtype":"m.text"},"ts":1718188783170,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZuvzxQDka_cbodcmRuVLOm_y1UdH4Lc-T6kjMeA8btI"},
{"content":{"body":"not without having read through 100s of possible special cases from all around the world","msgtype":"m.text"},"ts":1718188809597,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XwvmzywcFpWptJM0iSfSrlyq2sE8HMICfdrbijq3oHw"},
{"content":{"body":"it's hard for me to understand what sort of documentation or API shape might support them better.","m.mentions":{},"msgtype":"m.text"},"ts":1718188823868,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vjEQzFMqHoqD_x0RF8GvweHy9EkaK5c1-tADp4gL-yE"},
{"content":{"body":"for example, I may not think to describe a volume of milk differently than a volume of water because in the US they are measured the same, but in other locales that makes a difference","msgtype":"m.text"},"ts":1718188853564,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$GacYNN13VzE9mhYmdIVA0PJ1SD4I_MWOPEyOB4oaIYA"},
{"content":{"body":"exactly, I don't know the solution to make this more discoverable either","msgtype":"m.text"},"ts":1718188871645,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0sbgKg7QPggWelDpBnRuRVpNBXGt0awiUuc42QUsS7w"},
{"content":{"body":"In my experience people will use the wrong units or usage contexts, I don't think you can stop that. Luckily the units defined in `units.xml` are fairly limited, and most of them are different enough that people should spot problems fairly quickly. Things like piints and gallons are the exception here because the various types are close enough to be problematic in real world use.","format":"org.matrix.custom.html","formatted_body":"In my experience people will use the wrong units or usage contexts, I don't think you can stop that. Luckily the units defined in <code>units.xml</code> are fairly limited, and most of them are different enough that people should spot problems fairly quickly. Things like piints and gallons are the exception here because the various types are close enough to be problematic in real world use.","m.mentions":{},"msgtype":"m.text"},"ts":1718189192801,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$wYcLINvCKKUoVNyycsBpWKvlOnRHfv0A6N9l-QlhPy0"},
{"content":{"body":"> <@michaelficarra:matrix.org> for example, I may not think to describe a volume of milk differently than a volume of water because in the US they are measured the same, but in other locales that makes a difference\n\nidk about that, I think people tend to do it when designing interfaces...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GacYNN13VzE9mhYmdIVA0PJ1SD4I_MWOPEyOB4oaIYA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>for example, I may not think to describe a volume of milk differently than a volume of water because in the US they are measured the same, but in other locales that makes a difference</blockquote></mx-reply>idk about that, I think people tend to do it when designing interfaces...","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$GacYNN13VzE9mhYmdIVA0PJ1SD4I_MWOPEyOB4oaIYA"}},"msgtype":"m.text"},"ts":1718189275173,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$CY8YsVqnH9C8GKSoeH5yPcekO73QyrBgEZOCUHvjPss"},
{"content":{"body":"like if you're writing an app that sells milk across different locales, you might care about it","m.mentions":{},"msgtype":"m.text"},"ts":1718189298792,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$aIwpcDfqIJmakJLV-DlEb2iezq5tio-CMpmoHnToL38"},
{"content":{"body":"if you're writing a news article, you may not","msgtype":"m.text"},"ts":1718189322828,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$v9BNdAUJ8kbm08m6DziwGF2p5005YeOsnD_hDeQ7hSw"},
{"content":{"body":"> <@michaelficarra:matrix.org> if you're writing a news article, you may not\n\nYeah, but if you're writing a news article you'll measure things in Olympic swimming pools, whales, Wales, and other silliness. :-)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v9BNdAUJ8kbm08m6DziwGF2p5005YeOsnD_hDeQ7hSw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>if you&#39;re writing a news article, you may not</blockquote></mx-reply>Yeah, but if you're writing a news article you'll measure things in Olympic swimming pools, whales, Wales, and other silliness. :-)","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v9BNdAUJ8kbm08m6DziwGF2p5005YeOsnD_hDeQ7hSw"}},"msgtype":"m.text"},"ts":1718189408089,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$N4Vg91RdxjBUI5wpLg6N6LmEEX6_V2CR4SG4qHT8TMs"},
{"content":{"body":"\"libraries of Congress\" is a frequent one in the US...","msgtype":"m.text"},"ts":1718189452743,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F0smw2-Zpew-u-8IfFz_kq4jocdVMWRloZqm6i7FDCo"},
{"content":{"body":"> <@michaelficarra:matrix.org> if you're writing a news article, you may not\n\nsure but you'd most likely write a static article in a single language","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v9BNdAUJ8kbm08m6DziwGF2p5005YeOsnD_hDeQ7hSw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>if you&#39;re writing a news article, you may not</blockquote></mx-reply>sure but you'd most likely write a static article in a single language","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$v9BNdAUJ8kbm08m6DziwGF2p5005YeOsnD_hDeQ7hSw"}},"msgtype":"m.text"},"ts":1718189454795,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$_LFqIvBwbHyvNnNE4IsOH8YCpbTMlU3L6gx4_i1NP-k"},
{"content":{"body":"@usharma:igalia.com I don't think that's the direction new articles are moving. NYT very frequently has interactive visualisations to help tell the story. I would not be surprised if they are localising units in their articles.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40usharma%3Aigalia.com\">@ryzokuken (TC39 🇫🇮)</a> I don&#39;t think that&#39;s the direction new articles are moving. NYT very frequently has interactive visualisations to help tell the story. I would not be surprised if they are localising units in their articles.","msgtype":"m.text"},"ts":1718189922874,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$q62Wrk2oIqq4bMF6eJQsSbVpluYiwSnBWBsYOODeyYY"},
{"content":{"body":"Yeah, I really want ambient AbortSignal!","m.mentions":{},"msgtype":"m.text"},"ts":1718191023484,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$weosWaHx96NnEL1WGwng7--gTBomLbqjL2wp_obGLMI"},
{"content":{"body":"For the record, I'm very much opposed to it. It looks good on the surface, but has a terrible developer experience for anything more than the simplest base case","m.mentions":{},"msgtype":"m.text"},"ts":1718191090957,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Nc7voSOd0K-Y9VN_9qjOAE9MNmr9dKBgLGLpxOEmwog"},
{"content":{"body":"*** New agenda item ***\n\nPlease be aware a new item has been added to the end of the Agenda - last thing tomorrow.\n\n**Discard Bindings update or Stage 2** - by rbuckton \n\nhttps://github.com/tc39/agendas/pull/1634","format":"org.matrix.custom.html","formatted_body":"<p>*** New agenda item ***</p>\n<p>Please be aware a new item has been added to the end of the Agenda - last thing tomorrow.</p>\n<p><strong>Discard Bindings update or Stage 2</strong> - by <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a></p>\n<p>https://github.com/tc39/agendas/pull/1634</p>\n","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1718191129034,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$DBe-k5BFPeg5GZktBnfKnYbAMlSJLllA26fXtA-zCQk"},
{"content":{"body":"> <@rbuckton:matrix.org> For the record, I'm very much opposed to it. It looks good on the surface, but has a terrible developer experience for anything more than the simplest base case\n\nOk. But I really need some easy way to solve such simplest case ... It's really frustrating that debugging several hours and find that someone just forgotten to pass signal in some inner functions...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Nc7voSOd0K-Y9VN_9qjOAE9MNmr9dKBgLGLpxOEmwog?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>For the record, I&#39;m very much opposed to it. It looks good on the surface, but has a terrible developer experience for anything more than the simplest base case</blockquote></mx-reply>Ok. But I really need some easy way to solve such simplest case ... It's really frustrating that debugging several hours and find that someone just forgotten to pass signal in some inner functions...","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Nc7voSOd0K-Y9VN_9qjOAE9MNmr9dKBgLGLpxOEmwog"}},"msgtype":"m.text"},"ts":1718191210439,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$9LTQvXngpFvKe5H1ggq1o8QfRXStWaufMpn47ZDHE-E"},
{"content":{"body":"> <@haxjs:matrix.org> Ok. But I really need some easy way to solve such simplest case ... It's really frustrating that debugging several hours and find that someone just forgotten to pass signal in some inner functions...\n\nDebugging is even harder when transparent things you can't even trace cause issues in the other direction. Finding a forgotten parameter is easy in comparison.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9LTQvXngpFvKe5H1ggq1o8QfRXStWaufMpn47ZDHE-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Ok. But I really need some easy way to solve such simplest case ... It's really frustrating that debugging several hours and find that someone just forgotten to pass signal in some inner functions...</blockquote></mx-reply>Debugging is even harder when transparent things you can't even trace cause issues in the other direction. Finding a forgotten parameter is easy in comparison.","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9LTQvXngpFvKe5H1ggq1o8QfRXStWaufMpn47ZDHE-E"}},"msgtype":"m.text"},"ts":1718191292311,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-Y6rnzX0wjsM7YnQEhqMKJ2PIPHbg7r0LdJuWCiRrCQ"},
{"content":{"body":"Adding magical capabilities that do an end run around existing code is a great way to cause headaches for package authors who now start getting issues filed against them because they break unexpectedly where they worked fine before.","m.mentions":{},"msgtype":"m.text"},"ts":1718191825090,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YGXk8i0rRF0QPzZSql3wvJUGiBP4SoY--60R6waUD9M"},
{"content":{"body":"Filing issues or sending upstream PRs to packages to add support for cancellation is annoying, yes, but it allows those package authors to consider the ramifications of such a change.","m.mentions":{},"msgtype":"m.text"},"ts":1718191889961,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$o7GcFUXQn-FyQ1Ct74g2VP9iLE-g_aM5hE0bBUUeuaw"},
{"content":{"body":"I understand the risk, maybe we can find some way to allow package authors opt in such magic, for example, add special symbol to the objects/functions/classes to denote it.","m.mentions":{},"msgtype":"m.text"},"ts":1718192005168,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$KsS_qpUhrtjOzga_JlcnxSCuif2AhaVryKZBrNZ1cFE"},
{"content":{"body":"I think it's reasonable for someone to use an `AsyncContext` variable to establish their own magical transparent cancellation token, as it's on a case by case basis. I would still strongly discourage that practice, though. ","format":"org.matrix.custom.html","formatted_body":"I think it's reasonable for someone to use an <code>AsyncContext</code> variable to establish their own magical transparent cancellation token, as it's on a case by case basis. I would still strongly discourage that practice, though.","m.mentions":{},"msgtype":"m.text"},"ts":1718192193196,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cTPwUOEaLfqVnjrNfuvZrXC2uETePeFsIhlmQnL-1Lg"},
{"content":{"body":"> <@rbuckton:matrix.org> Debugging is even harder when transparent things you can't even trace cause issues in the other direction. Finding a forgotten parameter is easy in comparison.\n\n> Debugging is even harder when transparent things you can't even trace\n\nMaybe devtools could help show when Tasks get cancelled, and show the stack of what triggered the cancellation?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-Y6rnzX0wjsM7YnQEhqMKJ2PIPHbg7r0LdJuWCiRrCQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Debugging is even harder when transparent things you can't even trace cause issues in the other direction. Finding a forgotten parameter is easy in comparison.</blockquote></mx-reply><blockquote>\n<p>Debugging is even harder when transparent things you can't even trace</p>\n</blockquote>\n<p>Maybe devtools could help show when Tasks get cancelled, and show the stack of what triggered the cancellation?</p>\n","m.mentions":{"user_ids":["@rbuckton:matrix.org","@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$-Y6rnzX0wjsM7YnQEhqMKJ2PIPHbg7r0LdJuWCiRrCQ"}},"msgtype":"m.text"},"ts":1718192407655,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$PRz0Rs7AhN4ejpE2wirpROqJ0Qv3Tq5UPe3YVLEqErY"},
{"content":{"body":"I spoke out against transparent cancellation mechanisms when Yehuda suggested them back in ~2017. They overcomplicate everything but 1-1 cancellation interactions. ","m.mentions":{},"msgtype":"m.text"},"ts":1718192413450,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4DlqxGPPQtOcve11HB8kCPf57PjOjKx4iQzL-YcyoqQ"},
{"content":{"body":"> <@rbuckton:matrix.org> I think it's reasonable for someone to use an `AsyncContext` variable to establish their own magical transparent cancellation token, as it's on a case by case basis. I would still strongly discourage that practice, though.\n\nWe need some balance here, it's too annoying to pass params everywhere for the simple cases.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cTPwUOEaLfqVnjrNfuvZrXC2uETePeFsIhlmQnL-1Lg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I think it's reasonable for someone to use an <code>AsyncContext</code> variable to establish their own magical transparent cancellation token, as it's on a case by case basis. I would still strongly discourage that practice, though.</blockquote></mx-reply>We need some balance here, it's too annoying to pass params everywhere for the simple cases.","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$cTPwUOEaLfqVnjrNfuvZrXC2uETePeFsIhlmQnL-1Lg"}},"msgtype":"m.text"},"ts":1718192424304,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$jeN0nIpEGAPex7S11iLStdqfcYvHDPDD6-NUiD2x8oY"},
{"content":{"body":"I don't want cancellation to be the new `this`.","format":"org.matrix.custom.html","formatted_body":"I don't want cancellation to be the new <code>this</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1718192463992,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$w8xZgNekgSZks_DhlSWxHR0HsyLhv5yxPvN6zo43Fvo"},
{"content":{"body":"Everyone complains or is confused about `this` in JS.","format":"org.matrix.custom.html","formatted_body":"Everyone complains or is confused about <code>this</code> in JS.","m.mentions":{},"msgtype":"m.text"},"ts":1718192495298,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$QWusRobjSW1YNd4b12n7wrDU3jL5l5CcMmuDyFeAbUg"},
{"content":{"body":"What about other langauges? I remember swift have some implicit cancelation behavior?","m.mentions":{},"msgtype":"m.text"},"ts":1718192523000,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$MeGKCNbRAPAJnJWhXe8QnLrfcN54uTBmbAl_w-wOJeU"},
{"content":{"body":"I'm not terribly familiar with swift, so I couldn't say.","m.mentions":{},"msgtype":"m.text"},"ts":1718192558110,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$AAPco50Mt1XoMLbWE18qoZdci46ygWPXw_nNfM8yppQ"},
{"content":{"body":"> <@rbuckton:matrix.org> Everyone complains or is confused about `this` in JS.\n\nI don't think it's comparable. Actually `this` will not be passed to function implicitly ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QWusRobjSW1YNd4b12n7wrDU3jL5l5CcMmuDyFeAbUg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Everyone complains or is confused about <code>this</code> in JS.</blockquote></mx-reply>I don't think it's comparable. Actually <code>this</code> will not be passed to function implicitly ?","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QWusRobjSW1YNd4b12n7wrDU3jL5l5CcMmuDyFeAbUg"}},"msgtype":"m.text"},"ts":1718192634609,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$YoUxSz4MLHhWVoUYdUDWf8ztPudfsgOJw1A6j_19yRs"},
{"content":{"body":"It's comparable in that you have to do unique things to preserve or drop the `this` context in many cases.","format":"org.matrix.custom.html","formatted_body":"It's comparable in that you have to do unique things to preserve or drop the <code>this</code> context in many cases.","m.mentions":{},"msgtype":"m.text"},"ts":1718192784544,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$S9smhlaJ6qgGeX6tAEULPoEUbI22DT_rB7-ow783dYM"},
{"content":{"body":"Any sort of implicit or ambient control flow sounds like a debugging nightmare","msgtype":"m.text"},"ts":1718192787286,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$tXVtst8qgMXhRkMDXGRydUxCCpSQSkGqtOFgH0IbW0k"},
{"content":{"body":"Only global functions will get `this` implicitly ?... oh, non-strict functions...","format":"org.matrix.custom.html","formatted_body":"Only global functions will get <code>this</code> implicitly ?... oh, non-strict functions...","m.mentions":{},"msgtype":"m.text"},"ts":1718192791601,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$bZ2L00_uJquDaUTx1nOEl3UH9AC-EK1uufQv_tqS1Pw"},
{"content":{"body":"hax (HE Shi-Jun): you're proving my point. `this` is actually very complex.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a>: you're proving my point. <code>this</code> is actually very complex.","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"msgtype":"m.text"},"ts":1718192831617,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$OMzAZxB9VMtUhrTcZJNPZsiIRPtRqogYXRio4yJYQ5g"},
{"content":{"body":"But I just woke up, so maybe I should get caught up first","msgtype":"m.text"},"ts":1718192837710,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$-HfAiMZK_743aXGxOjR1juPKya_1U6cfmMo7ese3Ay0"},
{"content":{"body":"Passing an argument is not complex.","m.mentions":{},"msgtype":"m.text"},"ts":1718192845712,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ImwOkT9KEF1GwxxjHivbcXRX6lgsquAaeV4PlASAgb0"},
{"content":{"body":"Transparent cancellation is overoptimizing for the simplest case at the cost of the more complex cases that often have more need for an accurate and reliable cancellation mechanism.","m.mentions":{},"msgtype":"m.text"},"ts":1718192914995,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2CYNom_OTbdRyYQ6vmqY3xrqplKgVeZ1ohluoxh-ztc"},
{"content":{"body":"> <@rbuckton:matrix.org> hax (HE Shi-Jun): you're proving my point. `this` is actually very complex.\n\nI think the complexity is coming from inconsitant , not implicity itself. For example, in many languages, `fn()` equal to `this.fn()` in classes, and it seems ok to developers. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$OMzAZxB9VMtUhrTcZJNPZsiIRPtRqogYXRio4yJYQ5g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a>: you're proving my point. <code>this</code> is actually very complex.</blockquote></mx-reply>I think the complexity is coming from inconsitant , not implicity itself. For example, in many languages, <code>fn()</code> equal to <code>this.fn()</code> in classes, and it seems ok to developers.","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$OMzAZxB9VMtUhrTcZJNPZsiIRPtRqogYXRio4yJYQ5g"}},"msgtype":"m.text"},"ts":1718192920782,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$xKHu5yHzIGpeXo-raHHsFLic4XzyUGgUsTP5Ebld9jk"},
{"content":{"body":"Let's just introduce common lisp style \"special variables\" if we want to thread things through in an ambient fashion. /s","m.mentions":{},"msgtype":"m.text"},"ts":1718192934010,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$rVa3yuDd6JGIW95LiJF0jYHV7qEEwKSQLLp2ld7kzeY"},
{"content":{"body":"> <@haxjs:matrix.org> I think the complexity is coming from inconsitant , not implicity itself. For example, in many languages, `fn()` equal to `this.fn()` in classes, and it seems ok to developers.\n\nI'm not saying its a 1:1 parallel. I'm saying `this` confusion is a well known issue where simple cases seem fine, but the complex cases you run into are perilously close to the simple case.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xKHu5yHzIGpeXo-raHHsFLic4XzyUGgUsTP5Ebld9jk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>I think the complexity is coming from inconsitant , not implicity itself. For example, in many languages, <code>fn()</code> equal to <code>this.fn()</code> in classes, and it seems ok to developers.</blockquote></mx-reply>I'm not saying its a 1:1 parallel. I'm saying <code>this</code> confusion is a well known issue where simple cases seem fine, but the complex cases you run into are perilously close to the simple case.","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$xKHu5yHzIGpeXo-raHHsFLic4XzyUGgUsTP5Ebld9jk"}},"msgtype":"m.text"},"ts":1718193070939,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5YPsMcMWuYvxZFTxC-76pUERsxLAHdATuOCdApXA7oU"},
{"content":{"body":"> <@rbuckton:matrix.org> hax (HE Shi-Jun): you're proving my point. `this` is actually very complex.\n\nActually, when I research old JS, it seems as the JS 1.0 logic,  JS could choose `fn()` always use `fn.call(this)` semantic everywhere, and I find it could be consistent and no confusion. 😅","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$OMzAZxB9VMtUhrTcZJNPZsiIRPtRqogYXRio4yJYQ5g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">hax (HE Shi-Jun)</a>: you're proving my point. <code>this</code> is actually very complex.</blockquote></mx-reply>Actually, when I research old JS, it seems as the JS 1.0 logic,  JS could choose <code>fn()</code> always use <code>fn.call(this)</code> semantic everywhere, and I find it could be consistent and no confusion. 😅","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$OMzAZxB9VMtUhrTcZJNPZsiIRPtRqogYXRio4yJYQ5g"}},"msgtype":"m.text"},"ts":1718193154478,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$y8QizeOpLFMykRJomYeu8bQgptNfEtVL5quwLedShiI"},
{"content":{"body":"```js\nconst counter = { value: 0, increment() { return this.value++; } };\ncounter.increment(); // simple case\nsetTimeout(counter.increment, 250); // complex case\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const counter = { value: 0, increment() { return this.value++; } };\ncounter.increment(); // simple case\nsetTimeout(counter.increment, 250); // complex case\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718193160955,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$a1xubLd20m92FmZRhlqdJkHJ9isxbxN6Kafx_PcI9uA"},
{"content":{"body":"But back to cancellation. An opt-in mechanism is \"fine\", i.e. `fetch(url, { signal: \"inherit\" })`. But that means documenting that native API's should always require user opt-in. A native API designer might choose to ignore that and require opt-out, thus it's a slippery slope.","format":"org.matrix.custom.html","formatted_body":"But back to cancellation. An opt-in mechanism is \"fine\", i.e. <code>fetch(url, { signal: \"inherit\" })</code>. But that means documenting that native API's should always require user opt-in. A native API designer might choose to ignore that and require opt-out, thus it's a slippery slope.","m.mentions":{},"msgtype":"m.text"},"ts":1718193379475,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$s2PGQsH0vMW6IGNKfvnqGp7rNt4tUFOfWYLlKsP0ghM"},
{"content":{"body":"Duncan MacGregor: we do have that already: `String.prototype[Symbol.asyncIterator]`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aardvark179:matrix.org\">Duncan MacGregor</a>: we do have that already: <code>String.prototype[Symbol.asyncIterator]</code>","m.mentions":{"user_ids":["@aardvark179:matrix.org"]},"msgtype":"m.text"},"ts":1718194054738,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$w1qRdeMe8_8U5NNPeXD-ynyhYXUtZAT-uHDun-B68uU"},
{"content":{"body":" * Duncan MacGregor: we do have that already: `String.prototype[Symbol.iterator]`","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@aardvark179:matrix.org\">Duncan MacGregor</a>: we do have that already: <code>String.prototype[Symbol.iterator]</code>","m.mentions":{},"m.new_content":{"body":"Duncan MacGregor: we do have that already: `String.prototype[Symbol.iterator]`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aardvark179:matrix.org\">Duncan MacGregor</a>: we do have that already: <code>String.prototype[Symbol.iterator]</code>","m.mentions":{"user_ids":["@aardvark179:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w1qRdeMe8_8U5NNPeXD-ynyhYXUtZAT-uHDun-B68uU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718194181471,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$U6E87cbyXdVZgg2MfjUkdIsVpl2GXm8xTAiHV9ebRuk"},
{"content":{"body":"> <@rbuckton:matrix.org> But back to cancellation. An opt-in mechanism is \"fine\", i.e. `fetch(url, { signal: \"inherit\" })`. But that means documenting that native API's should always require user opt-in. A native API designer might choose to ignore that and require opt-out, thus it's a slippery slope.\n\nIf we have a simple and regular rule, I'm pretty optimistic that we can document it in https://w3ctag.github.io/design-principles/ and it will be generally followed. There's a lot of effort going into checking for this kind of API consistency these days (as we're seeing through pushback in proposals which don't lend themselves to that)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$s2PGQsH0vMW6IGNKfvnqGp7rNt4tUFOfWYLlKsP0ghM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>But back to cancellation. An opt-in mechanism is \"fine\", i.e. <code>fetch(url, { signal: \"inherit\" })</code>. But that means documenting that native API's should always require user opt-in. A native API designer might choose to ignore that and require opt-out, thus it's a slippery slope.</blockquote></mx-reply>If we have a simple and regular rule, I'm pretty optimistic that we can document it in https://w3ctag.github.io/design-principles/ and it will be generally followed. There's a lot of effort going into checking for this kind of API consistency these days (as we're seeing through pushback in proposals which don't lend themselves to that)","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$s2PGQsH0vMW6IGNKfvnqGp7rNt4tUFOfWYLlKsP0ghM"}},"msgtype":"m.text"},"ts":1718194239286,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bXD7RyfTWYC56MSKS82mi4QBUf6hrgPIon2FC4cfn1o"},
{"content":{"body":"> <@rbuckton:matrix.org> Passing an argument is not complex.\n\nit's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ImwOkT9KEF1GwxxjHivbcXRX6lgsquAaeV4PlASAgb0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Passing an argument is not complex.</blockquote></mx-reply>it's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ImwOkT9KEF1GwxxjHivbcXRX6lgsquAaeV4PlASAgb0"}},"msgtype":"m.text"},"ts":1718194415240,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$67aHUj-E2Ty0_KxHPOIMB8BF--EDolsgVQWqFiAVJyU"},
{"content":{"body":"(I actually think having an ambient AbortSignal will be helpful for web components generally, alongside Signals)","m.mentions":{},"msgtype":"m.text"},"ts":1718194458599,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$69ftl02UA8pohCuzW-VvCbPwrsbdnu46Zs529GLk24o"},
{"content":{"body":"> <@lucacasonato:matrix.org> Duncan MacGregor: we do have that already: `String.prototype[Symbol.iterator]`\n\nI must be asleep, I had forgotten that existed. :-) I'm not convinced it's really the thing you want because strings like `\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"[Symbol.iterator]()` returns more elements than you may have wanted.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w1qRdeMe8_8U5NNPeXD-ynyhYXUtZAT-uHDun-B68uU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><a href=\"https://matrix.to/#/@aardvark179:matrix.org\">Duncan MacGregor</a>: we do have that already: <code>String.prototype[Symbol.iterator]</code></blockquote></mx-reply>I must be asleep, I had forgotten that existed. :-) I'm not convinced it's really the thing you want because strings like <code>\"🏴󠁧󠁢󠁳󠁣󠁴󠁿\"[Symbol.iterator]()</code> returns more elements than you may have wanted.","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$w1qRdeMe8_8U5NNPeXD-ynyhYXUtZAT-uHDun-B68uU"}},"msgtype":"m.text"},"ts":1718194532210,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$Jh5rVYn3ezpnxtBEnYrmz4TyM3sI3Y_SxgY0o7XGCk0"},
{"content":{"body":"yeah - probably we also want string iteration on graphemes? :D","m.mentions":{},"msgtype":"m.text"},"ts":1718194563864,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$RTC9Ui8IMfPjR7PFPbBO_Yjauk5j7yn5pQC0r-XxQD8"},
{"content":{"body":"I think so yes.","m.mentions":{},"msgtype":"m.text"},"ts":1718194659400,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$ykNZIbvIUEVTgNSrRrKI53301EUTA8S6-O8DwLONS6A"},
{"content":{"body":"yup - we'd want string `.graphemes()` or something, and that's an intl API (Intl.Segmenter)","format":"org.matrix.custom.html","formatted_body":"yup - we'd want string <code>.graphemes()</code> or something, and that's an intl API (Intl.Segmenter)","m.mentions":{},"msgtype":"m.text"},"ts":1718194665720,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K3D68dW4cgsrKbH_O7NxcekkWyr7yh-hqkQcMghaFwc"},
{"content":{"body":" * yup - we'd want string `.graphemes()` or something, and that's an intl API (Intl.Segmenter) which makes it tricky to put on String.prototype","format":"org.matrix.custom.html","formatted_body":" * yup - we'd want string <code>.graphemes()</code> or something, and that's an intl API (Intl.Segmenter) which makes it tricky to put on String.prototype","m.mentions":{},"m.new_content":{"body":"yup - we'd want string `.graphemes()` or something, and that's an intl API (Intl.Segmenter) which makes it tricky to put on String.prototype","format":"org.matrix.custom.html","formatted_body":"yup - we'd want string <code>.graphemes()</code> or something, and that's an intl API (Intl.Segmenter) which makes it tricky to put on String.prototype","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$K3D68dW4cgsrKbH_O7NxcekkWyr7yh-hqkQcMghaFwc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718194688286,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$o8oX5rL6DWOxSKRJKzVArpkzkxa7bey3rHXrI2HYLZY"},
{"content":{"body":"Is that an intl API for historical reasons? Do graphemes alter with locale in some way I haven't considered?","m.mentions":{},"msgtype":"m.text"},"ts":1718194794374,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$2-bOfZKydi5IP_dtk8kA-3sW--WFu53FrQfuKVWI5MM"},
{"content":{"body":"they do","m.mentions":{},"msgtype":"m.text"},"ts":1718194813395,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$j6VmrFkCJim3eceb0-8hC_LjLFTUa3wah86tfXaAGN8"},
{"content":{"body":" * they do (i'm told)","m.mentions":{},"m.new_content":{"body":"they do (i'm told)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$j6VmrFkCJim3eceb0-8hC_LjLFTUa3wah86tfXaAGN8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718194820826,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wlWQlsghoaqsjdQ2w07U7MS1fBmDoEGswrrL8FWPQNk"},
{"content":{"body":"😱","m.mentions":{},"msgtype":"m.text"},"ts":1718194847007,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$vQTyBWVIeJ4SSyIE6jQz45pL0ICbOpdqtFfQQqnDh64"},
{"content":{"body":"otherwise we'd have probably had a string .graphemes proposal many years ago :-)","m.mentions":{},"msgtype":"m.text"},"ts":1718194908015,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TWak3rPTi3aIFxsWcB805rR7zJxSfQzPyYjbcDU02eU"},
{"content":{"body":"the definition of grapheme is complicated and changing a bit over time","m.mentions":{},"msgtype":"m.text"},"ts":1718194915129,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2ZvKgBqhGlxS5MdwyZbGng8-wkYM1vi66rTgom07OoQ"},
{"content":{"body":"I think it wasn't quite that graphemes were already defined in a locale-dependent way but rather that they might be in the future","m.mentions":{},"msgtype":"m.text"},"ts":1718194938255,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X_-qERLj2mZeUPKnpjJ1Ij1ZWBnk9yZc7Wjn1vFjSzs"},
{"content":{"body":"something something Indic scripts something","m.mentions":{},"msgtype":"m.text"},"ts":1718194978547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kFNBEeYFZeyT3RBPgiF1-Bw0VUQX50nWbFyUTP8gGDA"},
{"content":{"body":"> <@littledan:matrix.org> it's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.\n\n.NET does not have transparent cancellation, but developers still use `CancellationToken`. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use `AbortSignal` partly because it's to awkward to use due to its `EventTarget` usage. I _do_ use cancellation though (and `@esfx/async-canceltoken` can theoretically be used in place of an `AbortSignal` in DOM APIs)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$67aHUj-E2Ty0_KxHPOIMB8BF--EDolsgVQWqFiAVJyU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>it's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.</blockquote></mx-reply>.NET does not have transparent cancellation, but developers still use <code>CancellationToken</code>. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use <code>AbortSignal</code> partly because it's to awkward to use due to its <code>EventTarget</code> usage. I <em>do</em> use cancellation though (and <code>@esfx/async-canceltoken</code> can theoretically be used in place of an <code>AbortSignal</code> in DOM APIs)","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$67aHUj-E2Ty0_KxHPOIMB8BF--EDolsgVQWqFiAVJyU"}},"msgtype":"m.text"},"ts":1718195005576,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$o4XIBgzSbzwpYQ0r8lcSLVf0AjbLXJ5CssBVxIttou8"},
{"content":{"body":"> <@littledan:matrix.org> it's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.\n\n * .NET does not have transparent cancellation, but developers still use `CancellationToken`. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use `AbortSignal` partly because it's too awkward to use due to its `EventTarget` usage. I _do_ use cancellation though (and `@esfx/async-canceltoken` can theoretically be used in place of an `AbortSignal` in DOM APIs)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$67aHUj-E2Ty0_KxHPOIMB8BF--EDolsgVQWqFiAVJyU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>it's not about being complex or simple, it's more like \"will this actually be adopted\". This is the motivation for AsyncContext in general--it sometimes becomes a layering violation to pass things around and through. For example, UI frameworks tend to track the current component/\"owner\" implicitly in a similar way. It'd be too weird to ask pieces of the component to pass the enclosing component into various APIs as an argument, rather than doing it as a global.</blockquote></mx-reply> * .NET does not have transparent cancellation, but developers still use <code>CancellationToken</code>. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use <code>AbortSignal</code> partly because it's too awkward to use due to its <code>EventTarget</code> usage. I <em>do</em> use cancellation though (and <code>@esfx/async-canceltoken</code> can theoretically be used in place of an <code>AbortSignal</code> in DOM APIs)","m.mentions":{},"m.new_content":{"body":".NET does not have transparent cancellation, but developers still use `CancellationToken`. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use `AbortSignal` partly because it's too awkward to use due to its `EventTarget` usage. I _do_ use cancellation though (and `@esfx/async-canceltoken` can theoretically be used in place of an `AbortSignal` in DOM APIs)","format":"org.matrix.custom.html","formatted_body":".NET does not have transparent cancellation, but developers still use <code>CancellationToken</code>. I don't think it's as big of an adoption blocker as you're making it out to be? I don't use <code>AbortSignal</code> partly because it's too awkward to use due to its <code>EventTarget</code> usage. I <em>do</em> use cancellation though (and <code>@esfx/async-canceltoken</code> can theoretically be used in place of an <code>AbortSignal</code> in DOM APIs)","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$o4XIBgzSbzwpYQ0r8lcSLVf0AjbLXJ5CssBVxIttou8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718195018245,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PlRUO8QbQQzphYV_IZXnQxJ5Hxs2Ech3HJmfOO9mMfE"},
{"content":{"body":"hmm, if it doesn't vary by locale *now* then it seems like there still might be value in shipping an invariant one in the language, and if that changes in the future, we could let Intl replace that in situ like it does for toLocaleString?","format":"org.matrix.custom.html","formatted_body":"hmm, if it doesn't vary by locale <em>now</em> then it seems like there still might be value in shipping an invariant one in the language, and if that changes in the future, we could let Intl replace that in situ like it does for toLocaleString?","m.mentions":{},"msgtype":"m.text"},"ts":1718195020753,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$75X0lj8tWN4FyfnD_BYzCCPiLP3GjcIsabHuxExKIrU"},
{"content":{"body":"zip 🎉","m.mentions":{},"msgtype":"m.text"},"ts":1718195027242,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZB425Gh_zIZeV-_g8qnn7ITY_AlvZThmzrWPRzF4_14"},
{"content":{"body":"localized strings cannot be iterated on in a locale-independent way","m.mentions":{},"msgtype":"m.text"},"ts":1718195052479,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$mpKOo2NddxQSOfBpa7t5NDqIN1ROCD-PoigIkDrrbkQ"},
{"content":{"body":"FYI \"it should be fine to pass the cancel token explicitly\" was the argument that Domenic and I had in 2016 (where I was arguing that explicit passing is OK) which led him to withdraw cancel tokens from TC39.","m.mentions":{},"msgtype":"m.text"},"ts":1718195156520,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XiK3bP37eOLhJdZSQZEv4-pcP0HTiwmTK5XeQJCeaJM"},
{"content":{"body":"moving venues was a strange reaction to that argument, as it clearly didn't lead to implicit threading of cancel tokens... I think some misunderstandings happened around that issue.","m.mentions":{},"msgtype":"m.text"},"ts":1718195203243,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NQKqA-LWCzyhhFeD464N2_DR3Zfc995b8bGXksIRi64"},
{"content":{"body":"well, segmenter allows you to iterate on strings/segment them in many different ways beyond just graphemes","m.mentions":{},"msgtype":"m.text"},"ts":1718195218322,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$NSta9Qk2lkK4QpPFhJ2Ivvk1Q4OwMLtpyO4XDJrPIP4"},
{"content":{"body":"> <@usharma:igalia.com> well, segmenter allows you to iterate on strings/segment them in many different ways beyond just graphemes\n\nright, but if the only use case i have is to iterate on graphemes, can it be done in a locale-independent way?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NSta9Qk2lkK4QpPFhJ2Ivvk1Q4OwMLtpyO4XDJrPIP4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>well, segmenter allows you to iterate on strings/segment them in many different ways beyond just graphemes</blockquote></mx-reply>right, but if the only use case i have is to iterate on graphemes, can it be done in a locale-independent way?","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$NSta9Qk2lkK4QpPFhJ2Ivvk1Q4OwMLtpyO4XDJrPIP4"}},"msgtype":"m.text"},"ts":1718195240497,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$11TfGaV3ju2qB9QXHFGAufIzQdiWfbBidvUHphGoufM"},
{"content":{"body":"I believe there are edge cases ","m.mentions":{},"msgtype":"m.text"},"ts":1718195254762,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$9MFPtx_XW2_BLKYsOXhiGjE-R_XQKFauH7SrXpvdRLU"},
{"content":{"body":"but let me confirm that ","m.mentions":{},"msgtype":"m.text"},"ts":1718195274760,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$QjmL5eIkz4yt7RjPBl3QoeOqI-xqUyg-cOMmG_eCxnc"},
{"content":{"body":"> <@ljharb:matrix.org> right, but if the only use case i have is to iterate on graphemes, can it be done in a locale-independent way?\n\nin general, we very much do not expose the \"root locale\". But with graphemes probably any locale will do for now.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$11TfGaV3ju2qB9QXHFGAufIzQdiWfbBidvUHphGoufM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>right, but if the only use case i have is to iterate on graphemes, can it be done in a locale-independent way?</blockquote></mx-reply>in general, we very much do not expose the \"root locale\". But with graphemes probably any locale will do for now.","m.mentions":{"user_ids":["@ljharb:matrix.org","@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$11TfGaV3ju2qB9QXHFGAufIzQdiWfbBidvUHphGoufM"}},"msgtype":"m.text"},"ts":1718195278242,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jcRZwYFVZKmUunXgfnowroXGBaa9hh3pDJp5VORMP90"},
{"content":{"body":"the \"root locale\" is a synthetic construct in CLDR that doesn't correspond to anyplace, but other locales are expressed as a diff against it","m.mentions":{},"msgtype":"m.text"},"ts":1718195304677,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ClHko_ctUhsQx-olP0RDrgsO7E_UgJtgG3VDTuNUpXc"},
{"content":{"body":"> <@littledan:matrix.org> in general, we very much do not expose the \"root locale\". But with graphemes probably any locale will do for now.\n\n`und`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jcRZwYFVZKmUunXgfnowroXGBaa9hh3pDJp5VORMP90?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>in general, we very much do not expose the \"root locale\". But with graphemes probably any locale will do for now.</blockquote></mx-reply><code>und</code>","m.mentions":{"user_ids":["@littledan:matrix.org","@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$jcRZwYFVZKmUunXgfnowroXGBaa9hh3pDJp5VORMP90"}},"msgtype":"m.text"},"ts":1718195311913,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$Kr_6u8c75n-Lla8XLkVvAQYEy1uQXbtLHraA4a47_gE"},
{"content":{"body":"I think it _could_ work? Let me see what implementations think.","format":"org.matrix.custom.html","formatted_body":"I think it <em>could</em> work? Let me see what implementations think.","m.mentions":{},"msgtype":"m.text"},"ts":1718195334747,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$dEtEYuEpnCUpLhfMmu7TbPKuc_4CEDr3LXHI_MkV4Y4"},
{"content":{"body":"both `un` and `und` work here on FF","format":"org.matrix.custom.html","formatted_body":"both <code>un</code> and <code>und</code> work here on FF","m.mentions":{},"msgtype":"m.text"},"ts":1718195388446,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$LOYCgMZ62zA7JM4WkXjPc0KeAdPKrIpO4OV0fA0X5vI"},
{"content":{"body":"if it can work and not be in intl, i'd be happy to co-champion something like `.codePoints()`, `.codeUnits()`, and `.graphemes()` methods on String.prototype","format":"org.matrix.custom.html","formatted_body":"if it can work and not be in intl, i'd be happy to co-champion something like <code>.codePoints()</code>, <code>.codeUnits()</code>, and <code>.graphemes()</code> methods on String.prototype","m.mentions":{},"msgtype":"m.text"},"ts":1718195404499,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AON8346xZYNw4wCJjtErxFKxMYqPEorDJ4V74sh6rn0"},
{"content":{"body":"why not champion an Intl proposal if needed? ","m.mentions":{},"msgtype":"m.text"},"ts":1718195428409,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$F2lG8B4Jt_AcGY23cS-g63VqTeiulwS8xm_XEkOPhBE"},
{"content":{"body":" * if it can work and not be in intl, i'd be happy to co-champion something like `.codePoints()`, `.codeUnits()`, and `.graphemes()` methods on String.prototype. only reason i haven't years ago is that i thought it can't work","format":"org.matrix.custom.html","formatted_body":" * if it can work and not be in intl, i'd be happy to co-champion something like <code>.codePoints()</code>, <code>.codeUnits()</code>, and <code>.graphemes()</code> methods on String.prototype. only reason i haven't years ago is that i thought it can't work","m.mentions":{},"m.new_content":{"body":"if it can work and not be in intl, i'd be happy to co-champion something like `.codePoints()`, `.codeUnits()`, and `.graphemes()` methods on String.prototype. only reason i haven't years ago is that i thought it can't work","format":"org.matrix.custom.html","formatted_body":"if it can work and not be in intl, i'd be happy to co-champion something like <code>.codePoints()</code>, <code>.codeUnits()</code>, and <code>.graphemes()</code> methods on String.prototype. only reason i haven't years ago is that i thought it can't work","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$AON8346xZYNw4wCJjtErxFKxMYqPEorDJ4V74sh6rn0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718195430292,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Ebkuf36epSwuwOkqrvxtFV6VvL0PmRSAre7Tj9RyD5k"},
{"content":{"body":"we'd love to help out if we can 😄 ","m.mentions":{},"msgtype":"m.text"},"ts":1718195444784,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$s_ed4yUedq92pmtQ-hROtLrf1x6VVwMBxRE7xgZY4OQ"},
{"content":{"body":"I don't like `.graphemes` living outside Intl but the other two would be great and I would co-champion","format":"org.matrix.custom.html","formatted_body":"I don&#39;t like <code data-md=\"`\">.graphemes</code> living outside Intl but the other two would be great and I would co-champion","msgtype":"m.text"},"ts":1718195447827,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Pg1EG--C7FTx-hQv8vsN_-E_rPlig5L3FxohmJqrMpU"},
{"content":{"body":"i have Intl.Segmenter for that already. I need something that's in every environment, and ideally on String.prototype.","m.mentions":{},"msgtype":"m.text"},"ts":1718195449541,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CphfkkMegMYPb3kQKzDmMdCTXu9OnbENs99z_O1_Ir8"},
{"content":{"body":"ah, sure","m.mentions":{},"msgtype":"m.text"},"ts":1718195458365,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$ag24dozTPPu-e_OJlC6VTR2f2dTIKwBMwuooQBGJs-w"},
{"content":{"body":"> <@michaelficarra:matrix.org> I don't like `.graphemes` living outside Intl but the other two would be great and I would co-champion\n\nif it's not locale-dependent, why would it need to be inside intl?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Pg1EG--C7FTx-hQv8vsN_-E_rPlig5L3FxohmJqrMpU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I don't like <code data-md=\"`\">.graphemes</code> living outside Intl but the other two would be great and I would co-champion</blockquote></mx-reply>if it's not locale-dependent, why would it need to be inside intl?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Pg1EG--C7FTx-hQv8vsN_-E_rPlig5L3FxohmJqrMpU"}},"msgtype":"m.text"},"ts":1718195462131,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$x95Buqp7RNaE5jY9vgz0KVfd_iQv6-LYob19_jNk-4U"},
{"content":{"body":"@ljharb:matrix.org it is though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40ljharb%3Amatrix.org\">@ljharb</a> it is though","msgtype":"m.text"},"ts":1718195472224,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BdjMMQcLki9fd_V8ZSZpfg7f6nnonPtLEUIJVUWnWPI"},
{"content":{"body":"> <@usharma:igalia.com> both `un` and `und` work here on FF\n\nAre you sure? What is their .resolvedOptions().locale ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LOYCgMZ62zA7JM4WkXjPc0KeAdPKrIpO4OV0fA0X5vI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>both <code>un</code> and <code>und</code> work here on FF</blockquote></mx-reply>Are you sure? What is their .resolvedOptions().locale ?","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$LOYCgMZ62zA7JM4WkXjPc0KeAdPKrIpO4OV0fA0X5vI"}},"msgtype":"m.text"},"ts":1718195481716,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Un6Ri4zHxVK7o4hLsO2SRQaHCN4l9m3irhQt40CQhLI"},
{"content":{"body":"i thought that's what ujjwal was just saying it's not.","m.mentions":{},"msgtype":"m.text"},"ts":1718195488732,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LCKL_RouAC2LmoMz8hw2O7wqf6SqlSfKkLKjtTF9Cgs"},
{"content":{"body":"... where?","msgtype":"m.text"},"ts":1718195550472,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$avithcv6MCsYzCf9mtjMHE1sWUDcNlRWcM0ZrtbWbl8"},
{"content":{"body":"ah interesting, it's treating `\"und\"` as the JS value `undefined`","format":"org.matrix.custom.html","formatted_body":"ah interesting, it's treating <code>\"und\"</code> as the JS value <code>undefined</code>","m.mentions":{},"msgtype":"m.text"},"ts":1718195556525,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$eLsU0Stn4PzOp_3nXNeFDccHOseRmwgC2kLywtacylw"},
{"content":{"body":"by which I mean it's falling back to my system locale","m.mentions":{},"msgtype":"m.text"},"ts":1718195570691,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$XZd5g1oerX-DmEhzQkzYFp2MzSulds1pMeeqTbH9U2E"},
{"content":{"body":" * by which I mean it's falling back to my system locale (en-DK)","m.mentions":{},"m.new_content":{"body":"by which I mean it's falling back to my system locale (en-DK)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$XZd5g1oerX-DmEhzQkzYFp2MzSulds1pMeeqTbH9U2E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718195578920,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$8FbjlPZ1Xo2BZtkzFv200njtTCG8Ug-2OtNI5RkvMd0"},
{"content":{"body":"here: https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dEtEYuEpnCUpLhfMmu7TbPKuc_4CEDr3LXHI_MkV4Y4?via=matrix.org&via=mozilla.org&via=igalia.com\n\nbut that's still unconfirmed, and maybe isn't the case","m.mentions":{},"msgtype":"m.text"},"ts":1718195623065,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hk17Irt6bm_ngcLnfMaySvGhBGiwAf6NkiM_TpIVFv4"},
{"content":{"body":"yeah I'll recheck after today's session and let you know Michael ","m.mentions":{},"msgtype":"m.text"},"ts":1718195654496,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$1FIRNOReW8RLva7jsWdpcA6XxCx03akhc2bgfy4FB6I"},
{"content":{"body":"uhhh 🇹🇼","msgtype":"m.text"},"ts":1718195733766,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$7DQOvfb6ca0yCyzrfeIQVD6hRbwMNvpCjZhepe1OUx4"},
{"content":{"body":"http://unicode.org/L2/L2001/01322r-grapheme_cluster.htm","m.mentions":{},"msgtype":"m.text"},"ts":1718195821599,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sbJKOAqLA8e2wZhoKI1CI8y4iYErba-zZ8w3sSQc5nw"},
{"content":{"body":"that's super old, did the proposal ever land?","m.mentions":{},"msgtype":"m.text"},"ts":1718195842197,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dtlX8xqIJNi-VsVZejuSL7bqVMEeyogH6P0ur02229E"},
{"content":{"body":"yeah if that exists, then I'd be fine putting it on `String.prototype`","format":"org.matrix.custom.html","formatted_body":"yeah if that exists, then I&#39;d be fine putting it on <code data-md=\"`\">String.prototype</code>","msgtype":"m.text"},"ts":1718195918160,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kx6ABFg2MtVvc0thcK34O3HcnVw7xrvBdtvxzXtDpVg"},
{"content":{"body":"There's a follow up here https://www.unicode.org/L2/L2023/23140-graphemes-expectations.pdf","m.mentions":{},"msgtype":"m.text"},"ts":1718195942399,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$63VdfDZzI1hPQOAur-C1TQ66ua-_kenhxoeDqq_RCTo"},
{"content":{"body":"Does Intl/CLDR/etc. have something like an \"invariant\" locale (i.e., for machine readable formatting, not UI formatting)?","m.mentions":{},"msgtype":"m.text"},"ts":1718195949670,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$fcjUNmVewso3oLHc5Jc5kX0f_jwCyYiYty682zf7YXU"},
{"content":{"body":"> <@rbuckton:matrix.org> Does Intl/CLDR/etc. have something like an \"invariant\" locale (i.e., for machine readable formatting, not UI formatting)?\n\nyeah `und`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fcjUNmVewso3oLHc5Jc5kX0f_jwCyYiYty682zf7YXU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Does Intl/CLDR/etc. have something like an &quot;invariant&quot; locale (i.e., for machine readable formatting, not UI formatting)?</blockquote></mx-reply>yeah <code>und</code>","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$fcjUNmVewso3oLHc5Jc5kX0f_jwCyYiYty682zf7YXU"}},"msgtype":"m.text"},"ts":1718195960306,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$QyBvx_FpkwD8CSWMQsr2ZyO8C58Q4PAWrwKG-FiiB9c"},
{"content":{"body":"but apparently we handle it quite weirdly?","m.mentions":{},"msgtype":"m.text"},"ts":1718195972260,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$jC-AfgnACTULoth2HjyWCdRVObfoJQXeNEkK5HbvHQU"},
{"content":{"body":"> <@michaelficarra:matrix.org> uhhh 🇹🇼\n\nflags are always a single grapheme regardless of whether they render","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7DQOvfb6ca0yCyzrfeIQVD6hRbwMNvpCjZhepe1OUx4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>uhhh 🇹🇼</blockquote></mx-reply>flags are always a single grapheme regardless of whether they render","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7DQOvfb6ca0yCyzrfeIQVD6hRbwMNvpCjZhepe1OUx4"}},"msgtype":"m.text"},"ts":1718196006480,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$44ksJtqPc_QQ9PpXvVKdj4DroM9g3qiao6pTiJooAXs"},
{"content":{"body":"all nordic flags should be a ligature with a base flag","m.mentions":{},"msgtype":"m.text"},"ts":1718196062265,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$36Jh0iDmFgKE7OCb-kPXdx294X6VreZV_1kRG-a_cf0"},
{"content":{"body":"e.g. there is no `ww` flag but it's still one grapheme:\n```\n[...new Intl.Segmenter('en', {granularity:'grapheme'}).segment('\\u{1f1fc}\\u{1f1fc}')]\n```","format":"org.matrix.custom.html","formatted_body":"<p>e.g. there is no <code>ww</code> flag but it's still one grapheme:</p>\n<pre><code>[...new Intl.Segmenter('en', {granularity:'grapheme'}).segment('\\u{1f1fc}\\u{1f1fc}')]\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718196111384,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wQeLUAy1zaITpbGOODvK48QJl-CpjpBgBfZAUTBzdVY"},
{"content":{"body":"even regional flags like 🏴󠁧󠁢󠁷󠁬󠁳󠁿?","msgtype":"m.text"},"ts":1718196111897,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KEqALli3ISKNlaGs4phEYT3VamwsNMQcK3mHPV-_4xk"},
{"content":{"body":"```\n[...new Intl.Segmenter('en', {granularity:'grapheme'}).segment('🏴󠁧󠁢󠁷󠁬󠁳󠁿')].length\n```\n1","format":"org.matrix.custom.html","formatted_body":"<pre><code>[...new Intl.Segmenter('en', {granularity:'grapheme'}).segment('🏴󠁧󠁢󠁷󠁬󠁳󠁿')].length\n</code></pre>\n<p>1</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718196151971,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OQ8F-KF0UTAzRR4WFUC_JGfNSkNKepI0UZqYNtcWG9I"},
{"content":{"body":"https://unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table says\n> Do not break within emoji flag sequences. That is, do not break between regional indicator (RI) symbols if there is an odd number of RI characters before the break point.\n","format":"org.matrix.custom.html","formatted_body":"<p>https://unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table says</p>\n<blockquote>\n<p>Do not break within emoji flag sequences. That is, do not break between regional indicator (RI) symbols if there is an odd number of RI characters before the break point.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718196177041,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z9NuduuivJhylLoGPhSD20RnOsOB2DQ8fgc9p2tOfng"},
{"content":{"body":"and also\n> Do not break within emoji modifier sequences or emoji zwj sequences.\n\nwhich applies to regional flags, probably","format":"org.matrix.custom.html","formatted_body":"<p>and also</p>\n<blockquote>\n<p>Do not break within emoji modifier sequences or emoji zwj sequences.</p>\n</blockquote>\n<p>which applies to regional flags, probably</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718196268355,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bA4HFwf6odsAz3tc5vWrdLvaQjlMjf8g8VXJsF4oCbU"},
{"content":{"body":"though I don't know offhand whether something counts as a \"emoji zwj sequence\" if the sequence is not a recognized emoji","m.mentions":{},"msgtype":"m.text"},"ts":1718196303465,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TuKrMgbNx_bqMK7UMF9paKf0L5qtHCIH_tTA67QDg90"},
{"content":{"body":"it's only a ZWJ if there's intercalated ZWJs","msgtype":"m.text"},"ts":1718196331000,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$27TadqwNCPiDeWjuf0TqlyANLMew5Xg1bIyj1X2dq00"},
{"content":{"body":"I guess 🏴󠁧󠁢󠁷󠁬󠁳󠁿 is a emoji modifier sequence not a zwj sequence yes","m.mentions":{},"msgtype":"m.text"},"ts":1718196406950,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rhymlOMFcfhlWB3pJq3dc4I6Ru5BW0OYL8fw0uoIL1U"},
{"content":{"body":"> <@usharma:igalia.com> by which I mean it's falling back to my system locale (en-DK)\n\nright, this is generally what Intl does if you ask for a nonexistent locale","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XZd5g1oerX-DmEhzQkzYFp2MzSulds1pMeeqTbH9U2E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>by which I mean it&#39;s falling back to my system locale (en-DK)</blockquote></mx-reply>right, this is generally what Intl does if you ask for a nonexistent locale","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XZd5g1oerX-DmEhzQkzYFp2MzSulds1pMeeqTbH9U2E"}},"msgtype":"m.text"},"ts":1718196459610,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jL04fwMd5rhwq-qeQkSh9jP2Vh8X6X0N45YaUztpALw"},
{"content":{"body":"no, I tried another and it complained ","m.mentions":{},"msgtype":"m.text"},"ts":1718196479273,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$LU8p5TuBJyMXmay0OeW3RuPcA1_KtF1B31vBVRfRs_I"},
{"content":{"body":"try `(new Intl.NumberFormat(\"xyz\")).resolvedOptions().locale`, same thing","format":"org.matrix.custom.html","formatted_body":"try <code>(new Intl.NumberFormat(\"xyz\")).resolvedOptions().locale</code>, same thing","m.mentions":{},"msgtype":"m.text"},"ts":1718196485609,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HnumP4NjKu4bF4KSK2-IeIZaSjN0iIP9xyEshHOmK2c"},
{"content":{"body":"ah wait yes","m.mentions":{},"msgtype":"m.text"},"ts":1718196501106,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$ICbLrHlsjYIJuwIgWjvA6SW5kZpHArJ-WQ8yc9eaETg"},
{"content":{"body":"nvm it was failing for non 2-3 character long locales","m.mentions":{},"msgtype":"m.text"},"ts":1718196528656,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$z6miJggrNzi-uoES9uA13jBJOzy6aUfW4AdPhYLilAc"},
{"content":{"body":"🎉","m.mentions":{},"msgtype":"m.text"},"ts":1718196556189,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$haXMW63cGQlusJHjfQzdqDSG-IoMIWx666m1q8Xf1D0"},
{"content":{"body":"With `\"und\"` you're observing fallback to the system locale.","format":"org.matrix.custom.html","formatted_body":"With <code>\"und\"</code> you're observing fallback to the system locale.","m.mentions":{},"msgtype":"m.text"},"ts":1718196561766,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$V-2QfIe-5veeC0SHWidGGH-VFB5ByA-vhJL4zr4pde4"},
{"content":{"body":"Amusingly Safari's dev console doesn't handle deletion correctly with flags. \"🏴󠁧󠁢󠁳󠁣󠁴󠁿\" -> \"🏴󠁧󠁢󠁳󠁣󠁴\" -> \"🏴󠁧󠁢󠁳󠁣\" -> \"🏴󠁧󠁢󠁳\" …","m.mentions":{},"msgtype":"m.text"},"ts":1718196569352,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$wPcrEMTATfsQNTyzwWd77QdK0BLLKmb-a8QkW1P6I2c"},
{"content":{"body":"(deleted because my code was wrong)","m.mentions":{},"msgtype":"m.text"},"ts":1718196686266,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$se7rxDlD4belPKI8r_54nJwJYbLz2h5CIg4HDIpA-S0"},
{"content":{"body":"wait nic i want that link ","m.mentions":{},"msgtype":"m.text"},"ts":1718196693035,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$l6W9MPl0unJZ-VLdmFmj0bAWc8uTDVmNKU4GkvB7Ejk"},
{"content":{"body":"oh ok","m.mentions":{},"msgtype":"m.text"},"ts":1718196693651,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$bk9GcHAA6iN8Ij0lq-JXBg-LaRioGlfVS8Bwyzf_2PM"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Web/API","m.mentions":{},"m.relates_to":{"event_id":"$l6W9MPl0unJZ-VLdmFmj0bAWc8uTDVmNKU4GkvB7Ejk","is_falling_back":true,"m.in_reply_to":{"event_id":"$l6W9MPl0unJZ-VLdmFmj0bAWc8uTDVmNKU4GkvB7Ejk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1718196746366,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$2lRNLABtfl1rOl7KUEs0ajYe6b7ztNdvzeXKKNkrQjo"},
{"content":{"body":"as far as I can tell:\n- unicode has a locale-independent grapheme clustering algorithm\n- it recommends the use of CLDR's language-specific rules when available\n- CLDR does not appear to have implemented any such rules yet, from what I see https://cldr.unicode.org/development/development-process/design-proposals/grapheme-usage","format":"org.matrix.custom.html","formatted_body":"<p>as far as I can tell:</p>\n<ul>\n<li>unicode has a locale-independent grapheme clustering algorithm</li>\n<li>it recommends the use of CLDR's language-specific rules when available</li>\n<li>CLDR does not appear to have implemented any such rules yet, from what I see https://cldr.unicode.org/development/development-process/design-proposals/grapheme-usage</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718196755257,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4DqY_wpXbpZfoo325KsNTpAEMxNtsbLVj8qwZirUXeI"},
{"content":{"body":"ok so then we should definitely have a 402-enhanceable String.prototype method?","m.mentions":{},"msgtype":"m.text"},"ts":1718196784368,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VhAAOob_Yq_p6shJLyoCCFS-ExvM5crAZy5NX57erXw"},
{"content":{"body":" * ok so then we should definitely have a future-402-enhanceable String.prototype method?","m.mentions":{},"m.new_content":{"body":"ok so then we should definitely have a future-402-enhanceable String.prototype method?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VhAAOob_Yq_p6shJLyoCCFS-ExvM5crAZy5NX57erXw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718196790809,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v2pu81eRk0MLV7NLSIWLVYflrzoHpm3sf1vArMq3gmY"},
{"content":{"body":"I am not an Intl knower though, so that could be wrong","m.mentions":{},"msgtype":"m.text"},"ts":1718196805314,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YskJwJCzI5_5i6qsPJ91_sw4EV4rGkf1oiBSGimlV30"},
{"content":{"body":"> <@aardvark179:matrix.org> Is that an intl API for historical reasons? Do graphemes alter with locale in some way I haven't considered?\n\n\"ch\" is logically a single grapheme in the Latin transcription of many Slavic languages, and it seems likely to me that such tailorings will be added to CLDR at some point","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2-bOfZKydi5IP_dtk8kA-3sW--WFu53FrQfuKVWI5MM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aardvark179:matrix.org\">@aardvark179:matrix.org</a><br>Is that an intl API for historical reasons? Do graphemes alter with locale in some way I haven&#39;t considered?</blockquote></mx-reply>\"ch\" is logically a single grapheme in the Latin transcription of many Slavic languages, and it seems likely to me that such tailorings will be added to CLDR at some point","m.mentions":{"user_ids":["@aardvark179:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2-bOfZKydi5IP_dtk8kA-3sW--WFu53FrQfuKVWI5MM"}},"msgtype":"m.text"},"ts":1718196811893,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$Ta5rg8i_bAz2t05ASqsazzZv0rTKTMuCXKwY-WSQ80k"},
{"content":{"body":"> <@bakkot:matrix.org> as far as I can tell:\n> - unicode has a locale-independent grapheme clustering algorithm\n> - it recommends the use of CLDR's language-specific rules when available\n> - CLDR does not appear to have implemented any such rules yet, from what I see https://cldr.unicode.org/development/development-process/design-proposals/grapheme-usage\n\nlol that matches my understanding as of 2017","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4DqY_wpXbpZfoo325KsNTpAEMxNtsbLVj8qwZirUXeI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>as far as I can tell:</p>\n<ul>\n<li>unicode has a locale-independent grapheme clustering algorithm</li>\n<li>it recommends the use of CLDR's language-specific rules when available</li>\n<li>CLDR does not appear to have implemented any such rules yet, from what I see https://cldr.unicode.org/development/development-process/design-proposals/grapheme-usage</li>\n</ul>\n</blockquote></mx-reply>lol that matches my understanding as of 2017","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4DqY_wpXbpZfoo325KsNTpAEMxNtsbLVj8qwZirUXeI"}},"msgtype":"m.text"},"ts":1718196823446,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZT7pWFoT2lp8LsGuKbYNeawWBuZk9ET8dQxq3jvFqHs"},
{"content":{"body":"I think a 402 enhanceable method would be a good thing.","m.mentions":{},"msgtype":"m.text"},"ts":1718196885017,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$KqB8j53MFICU6b_eCDlHz5bMpFyVeXPswzSQPaj10BY"},
{"content":{"body":"folks on the queue, please include a topic description beyond just the letter. 🙏","m.mentions":{},"msgtype":"m.text"},"ts":1718196910014,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$eKZ_fkEbb8R35evoJf-6WaxXcgCxkEmoyL5eNnUuzvQ"},
{"content":{"body":"(technically all methods are 402-enhanceable, but ofc i meant one explicitly designed for that future purpose)","m.mentions":{},"msgtype":"m.text"},"ts":1718196916856,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6-16_Uj8vuU801j-NVd1fNOSs6IhyjvK1WMnrsS3iz4"},
{"content":{"body":"> <@softwarechris:matrix.org> folks on the queue, please include a topic description beyond just the letter. 🙏\n\nstill can't edit :-(","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eKZ_fkEbb8R35evoJf-6WaxXcgCxkEmoyL5eNnUuzvQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>folks on the queue, please include a topic description beyond just the letter. 🙏</blockquote></mx-reply>still can't edit :-(","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$eKZ_fkEbb8R35evoJf-6WaxXcgCxkEmoyL5eNnUuzvQ"}},"msgtype":"m.text"},"ts":1718196961397,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Idcd6w_5V6aBiic8KgZfdTvDdvp4crvnSy4xFgahgOc"},
{"content":{"body":"> <@usharma:igalia.com> yeah `und`\n\nIs `\"und\"` supposed to be the same regardless of system locale, or is the issue that `Intl` doesn't support that and treats it as an unknown locale?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QyBvx_FpkwD8CSWMQsr2ZyO8C58Q4PAWrwKG-FiiB9c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>yeah <code>und</code></blockquote></mx-reply>Is <code>\"und\"</code> supposed to be the same regardless of system locale, or is the issue that <code>Intl</code> doesn't support that and treats it as an unknown locale?","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QyBvx_FpkwD8CSWMQsr2ZyO8C58Q4PAWrwKG-FiiB9c"}},"msgtype":"m.text"},"ts":1718196963829,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Sedy8WpQAzW9gDkhrl34PUEnhCtpAPP8FeKMmBYW73o"},
{"content":{"body":"> <@ljharb:matrix.org> still can't edit :-(\n\nyou can add new, and I will rearrange","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Idcd6w_5V6aBiic8KgZfdTvDdvp4crvnSy4xFgahgOc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>still can't edit :-(</blockquote></mx-reply>you can add new, and I will rearrange","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Idcd6w_5V6aBiic8KgZfdTvDdvp4crvnSy4xFgahgOc"}},"msgtype":"m.text"},"ts":1718197048124,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fRJACZZQvUtOzLq0vUD0ZDXmVG2m_U-fyIqwSnpB57U"},
{"content":{"body":"thank you!","m.mentions":{},"msgtype":"m.text"},"ts":1718197091757,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$VjVojRTN3Wh3u91XNKTOyCH8Kv1ZzLWar4qThR_nZfM"},
{"content":{"body":"we already have a built-in ThrowTypeError function","m.mentions":{},"msgtype":"m.text"},"ts":1718197144846,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ie7FGB30LecZcxZnBCsXeNCZeL3CcMeBXbjZXBhfMzI"},
{"content":{"body":"(for `arguments.caller`)","format":"org.matrix.custom.html","formatted_body":"(for <code>arguments.caller</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1718197169496,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Adn-lmogPwf2k1L2PA2Y1KBxhRZX7eRiDHJK0lHOqUA"},
{"content":{"body":"asked about that on the queue","m.mentions":{},"msgtype":"m.text"},"ts":1718197189753,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jSBBMsGADYOSWCyqFoxYrxBk6_tLYtfP7NT6EYon4D0"},
{"content":{"body":"I'd really like to be able to use a locale-invariant `Intl.Collator` for sorting inputs reliably in, say, a compiler that runs on different systems all over the world...","format":"org.matrix.custom.html","formatted_body":"I'd really like to be able to use a locale-invariant <code>Intl.Collator</code> for sorting inputs reliably in, say, a compiler that runs on different systems all over the world...","m.mentions":{},"msgtype":"m.text"},"ts":1718197222520,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$e-e8I8j1JBomZbiNus3g3BF9no1JmySsmutm4K8SiIM"},
{"content":{"body":" * (for `Function.prototype.caller`)","format":"org.matrix.custom.html","formatted_body":" * (for <code>Function.prototype.caller</code>)","m.mentions":{},"m.new_content":{"body":"(for `Function.prototype.caller`)","format":"org.matrix.custom.html","formatted_body":"(for <code>Function.prototype.caller</code>)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Adn-lmogPwf2k1L2PA2Y1KBxhRZX7eRiDHJK0lHOqUA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718197237788,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NvS3M3lZxm3dJjByWCEpqMHWkFHwhyboYVd5_rrx4fs"},
{"content":{"body":"though, engines probably want a different error message for `Function.prototype.caller` vs these things","format":"org.matrix.custom.html","formatted_body":"though, engines probably want a different error message for <code>Function.prototype.caller</code> vs these things","m.mentions":{},"msgtype":"m.text"},"ts":1718197281585,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$J4YpFboBsCmcgofQ3YE2p3R6C5RXAl4uYAgJzMpw9x4"},
{"content":{"body":"Is there any precedent of sharing methods among several classes?","m.mentions":{},"msgtype":"m.text"},"ts":1718197351308,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$9nIWUonzb7KNIaWUhUgXfYZiicoVorDx9lcYB9PW29o"},
{"content":{"body":"Wouldn't `b.until(a)` be a better replacement for `a.since(b)`?","format":"org.matrix.custom.html","formatted_body":"Wouldn't <code>b.until(a)</code> be a better replacement for <code>a.since(b)</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1718197386341,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$bAYwwp5Q3t55Zeum-lFCuM97VKJ67lSfA_VduXz0xVU"},
{"content":{"body":"(no intermediate allocation)","m.mentions":{},"msgtype":"m.text"},"ts":1718197403605,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6AGunoZDqtjyLj5YPMVMp-BZXZMcc6FpnEKo5Cj7VqY"},
{"content":{"body":"> <@rbuckton:matrix.org> Is `\"und\"` supposed to be the same regardless of system locale, or is the issue that `Intl` doesn't support that and treats it as an unknown locale?\n\nunicode reserves `\"und\"`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Sedy8WpQAzW9gDkhrl34PUEnhCtpAPP8FeKMmBYW73o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Is <code>\"und\"</code> supposed to be the same regardless of system locale, or is the issue that <code>Intl</code> doesn't support that and treats it as an unknown locale?</blockquote></mx-reply>unicode reserves <code>\"und\"</code>","m.mentions":{"user_ids":["@rbuckton:matrix.org","@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Sedy8WpQAzW9gDkhrl34PUEnhCtpAPP8FeKMmBYW73o"}},"msgtype":"m.text"},"ts":1718197499275,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EjufHi6wFQvoGMu-8KaThEUGPyp73tSHm4Fti1IADgw"},
{"content":{"body":"> <@rbuckton:matrix.org> Is `\"und\"` supposed to be the same regardless of system locale, or is the issue that `Intl` doesn't support that and treats it as an unknown locale?\n\n * unicode reserves `\"und\"` for unknown","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Sedy8WpQAzW9gDkhrl34PUEnhCtpAPP8FeKMmBYW73o?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Is <code>\"und\"</code> supposed to be the same regardless of system locale, or is the issue that <code>Intl</code> doesn't support that and treats it as an unknown locale?</blockquote></mx-reply> * unicode reserves <code>\"und\"</code> for unknown","m.mentions":{},"m.new_content":{"body":"unicode reserves `\"und\"` for unknown","format":"org.matrix.custom.html","formatted_body":"unicode reserves <code>\"und\"</code> for unknown","m.mentions":{"user_ids":["@rbuckton:matrix.org","@usharma:igalia.com"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$EjufHi6wFQvoGMu-8KaThEUGPyp73tSHm4Fti1IADgw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718197512846,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jgTrjflsY0qPQAPtwM8RI5KJRo3JFLHSipT-dOMqujI"},
{"content":{"body":"or is `until` clamped?","format":"org.matrix.custom.html","formatted_body":"or is <code>until</code> clamped?","m.mentions":{},"msgtype":"m.text"},"ts":1718197513134,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DYiExgU7LNqIbq4P9rX7xYi0P2VPRRl8UULirNhinlM"},
{"content":{"body":"so yes it is the system locale I think","m.mentions":{},"msgtype":"m.text"},"ts":1718197522798,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JlRXrrUw96EaU6p6jwCPHpDjmZUSkfifHeWVV2SPnmM"},
{"content":{"body":"> <@bakkot:matrix.org> so yes it is the system locale I think\n\nThen that's definitely not what I want.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JlRXrrUw96EaU6p6jwCPHpDjmZUSkfifHeWVV2SPnmM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>so yes it is the system locale I think</blockquote></mx-reply>Then that's definitely not what I want.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$JlRXrrUw96EaU6p6jwCPHpDjmZUSkfifHeWVV2SPnmM"}},"msgtype":"m.text"},"ts":1718197534897,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BnNWr9BDI5fM15Ys7KSLPQVmip92SsOBDeE4gICJeFI"},
{"content":{"body":"> <@rbuckton:matrix.org> Wouldn't `b.until(a)` be a better replacement for `a.since(b)`?\n\nI think they are not equivalent, but I don't know exactly how. I suggest asking in the queue so that Philip can respond ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bAYwwp5Q3t55Zeum-lFCuM97VKJ67lSfA_VduXz0xVU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br />Wouldn't <code>b.until(a)</code> be a better replacement for <code>a.since(b)</code>?</blockquote></mx-reply>I think they are not equivalent, but I don't know exactly how. I suggest asking in the queue so that Philip can respond","m.relates_to":{"m.in_reply_to":{"event_id":"$bAYwwp5Q3t55Zeum-lFCuM97VKJ67lSfA_VduXz0xVU"}},"msgtype":"m.text"},"ts":1718197538471,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kUbp9KQkZZkAgIdlp_7dEuC_-hbaaV7SWutxPQ9j_vk"},
{"content":{"body":"Or maybe ryzokuken (TC39 🇫🇮): knows","format":"org.matrix.custom.html","formatted_body":"Or maybe <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken (TC39 🇫🇮)</a>: knows","msgtype":"m.text"},"ts":1718197548097,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$x4SOB8VDIohV-SnUtQZDC9J0ZlIIuBa8mOzevWpF_yw"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> I think they are not equivalent, but I don't know exactly how. I suggest asking in the queue so that Philip can respond\n\nIt's more of a curiosity than a concern.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kUbp9KQkZZkAgIdlp_7dEuC_-hbaaV7SWutxPQ9j_vk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>I think they are not equivalent, but I don't know exactly how. I suggest asking in the queue so that Philip can respond</blockquote></mx-reply>It's more of a curiosity than a concern.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$kUbp9KQkZZkAgIdlp_7dEuC_-hbaaV7SWutxPQ9j_vk"}},"msgtype":"m.text"},"ts":1718197562278,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ySVrF1ru3dI0C5dO_CQb2w_z-RPXpmAovWxvlJF-HvY"},
{"content":{"body":"ah, though apparently that isn't threaded through to browsers: https://github.com/tc39/ecma402/issues/885","m.mentions":{},"msgtype":"m.text"},"ts":1718197574071,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kwOSl0_Y9__RtJy3sCAZQUK_l4eKgnmk7m8hBdVvk7Q"},
{"content":{"body":"> <@bakkot:matrix.org> ah, though apparently that isn't threaded through to browsers: https://github.com/tc39/ecma402/issues/885\n\nyes this was a deliberate decision. Unicode recommends against exposing the root locale, and und isn't supposed to be interpreted as the root locale either.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kwOSl0_Y9__RtJy3sCAZQUK_l4eKgnmk7m8hBdVvk7Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>ah, though apparently that isn&#39;t threaded through to browsers: https://github.com/tc39/ecma402/issues/885</blockquote></mx-reply>yes this was a deliberate decision. Unicode recommends against exposing the root locale, and und isn't supposed to be interpreted as the root locale either.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$kwOSl0_Y9__RtJy3sCAZQUK_l4eKgnmk7m8hBdVvk7Q"}},"msgtype":"m.text"},"ts":1718197599032,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3mTXIsCIxj07B0FZASLZbFWbfdYip3FofHUyDb_jTGw"},
{"content":{"body":"> <@haxjs:matrix.org> Is there any precedent of sharing methods among several classes?\n\narguably those on %TypedArray.prototype%, %GeneratorPrototype%, etc.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9nIWUonzb7KNIaWUhUgXfYZiicoVorDx9lcYB9PW29o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>Is there any precedent of sharing methods among several classes?</blockquote></mx-reply>arguably those on %TypedArray.prototype%, %GeneratorPrototype%, etc.","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9nIWUonzb7KNIaWUhUgXfYZiicoVorDx9lcYB9PW29o"}},"msgtype":"m.text"},"ts":1718197601097,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$TUn6V1_v4qCE_CwM44KyWaYXtoreaY0UjGqqJrG3qCo"},
{"content":{"body":"> <@rbuckton:matrix.org> It's more of a curiosity than a concern.\n\nI'd be concerned if \"the intuitive workaround that people are likely to use is wrong\" :P","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ySVrF1ru3dI0C5dO_CQb2w_z-RPXpmAovWxvlJF-HvY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br />It's more of a curiosity than a concern.</blockquote></mx-reply>I'd be concerned if &quot;the intuitive workaround that people are likely to use is wrong&quot; :P","m.relates_to":{"m.in_reply_to":{"event_id":"$ySVrF1ru3dI0C5dO_CQb2w_z-RPXpmAovWxvlJF-HvY"}},"msgtype":"m.text"},"ts":1718197611642,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Vv6cFcGCVQU2YIOUBKmvUL-ddYGd6wyUH_PlcDyjByk"},
{"content":{"body":"From the temporal docs for `since()`","format":"org.matrix.custom.html","formatted_body":"From the temporal docs for <code>since()</code>","m.mentions":{},"msgtype":"m.text"},"ts":1718197867121,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nJR-YxGdMjIa8Klw482HiFubwu4ulvugHw6mKZgBU3E"},
{"content":{"body":"Per this, they should be equivalent?","m.mentions":{},"msgtype":"m.text"},"ts":1718197879318,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mzsqZ1EkFvhW4njjz4K2P_8x3OZVWMQyybYvhVmZZLo"},
{"content":{"body":" * Per this, they should be equivalent? If not, I'm curious what the outliers are.","m.mentions":{},"m.new_content":{"body":"Per this, they should be equivalent? If not, I'm curious what the outliers are.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mzsqZ1EkFvhW4njjz4K2P_8x3OZVWMQyybYvhVmZZLo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718197944803,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tsX9wKP9yyMGcyuU4VbayZF_axN0f6XzrFlvDcnwwJM"},
{"content":{"body":"`a.since(b)` and `a.until(b).negated()` are equivalent, but `a.since(b)` and `b.until(a)` are not","format":"org.matrix.custom.html","formatted_body":"<code>a.since(b)</code> and <code>a.until(b).negated()</code> are equivalent, but <code>a.since(b)</code> and <code>b.until(a)</code> are not","m.mentions":{},"msgtype":"m.text"},"ts":1718197961787,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$oA_Q5diQsg_t69hewD3sJYI4UQPkkaBoCcnP92wNo30"},
{"content":{"body":"ftr H - K have nothing on the queue","m.mentions":{},"msgtype":"m.text"},"ts":1718197981041,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$88-JSYgwR7I-pKOKjgAnJ9LAmKbDe5s_A_NHkat1brs"},
{"content":{"body":" * ftr C, and H - K, have nothing on the queue","m.mentions":{},"m.new_content":{"body":"ftr C, and H - K, have nothing on the queue","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$88-JSYgwR7I-pKOKjgAnJ9LAmKbDe5s_A_NHkat1brs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718197994337,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$odYP49MxFS5QefcjVF0k6yOr7yIDII0r45NbQwZYTqc"},
{"content":{"body":" * `a.since(b, opts)` and `a.until(b, opts).negated()` are equivalent, but `a.since(b, opts)` and `b.until(a, opts)` are not","format":"org.matrix.custom.html","formatted_body":" * <code>a.since(b, opts)</code> and <code>a.until(b, opts).negated()</code> are equivalent, but <code>a.since(b, opts)</code> and <code>b.until(a, opts)</code> are not","m.mentions":{},"m.new_content":{"body":"`a.since(b, opts)` and `a.until(b, opts).negated()` are equivalent, but `a.since(b, opts)` and `b.until(a, opts)` are not","format":"org.matrix.custom.html","formatted_body":"<code>a.since(b, opts)</code> and <code>a.until(b, opts).negated()</code> are equivalent, but <code>a.since(b, opts)</code> and <code>b.until(a, opts)</code> are not","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$oA_Q5diQsg_t69hewD3sJYI4UQPkkaBoCcnP92wNo30","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718198036776,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$nvKmeVmF5QOJhGp2ravTLzKPnlJKZchhcuta6EOhB1g"},
{"content":{"body":"Ah, the difference is in how the `opts` might be applied?","format":"org.matrix.custom.html","formatted_body":"Ah, the difference is in how the <code>opts</code> might be applied?","m.mentions":{},"msgtype":"m.text"},"ts":1718198063246,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nFDLsRGD4pXWe88Unt27QZam_kyiNp-8Tryi3ws6WBA"},
{"content":{"body":"right, starting point is always the receiver so e.g. with largestUnit: \"month\", March 31 to April 30 is P1M while April 30 to March 31 is -P30D","m.mentions":{},"msgtype":"m.text"},"ts":1718198324535,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$YIMeFJ6dc2RH3dWKO7r2PSNo9TwX5SH3Ff8AvzW35Pw"},
{"content":{"body":"Thank you, that really helps clarify things.","m.mentions":{},"msgtype":"m.text"},"ts":1718198390124,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$sRWjNHyWfjwhFeI0F927QbkHNc3t7OWzazeI81mMnVU"},
{"content":{"body":"> <@gibson042:matrix.org> right, starting point is always the receiver so e.g. with largestUnit: \"month\", March 31 to April 30 is P1M while April 30 to March 31 is -P30D\n\nThat makes sense, but feels odd. It makes me want some kind of normalization to occur, but I'm not sure I feel that strongly about it.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YIMeFJ6dc2RH3dWKO7r2PSNo9TwX5SH3Ff8AvzW35Pw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gibson042:matrix.org\">@gibson042:matrix.org</a><br>right, starting point is always the receiver so e.g. with largestUnit: &quot;month&quot;, March 31 to April 30 is P1M while April 30 to March 31 is -P30D</blockquote></mx-reply>That makes sense, but feels odd. It makes me want some kind of normalization to occur, but I'm not sure I feel that strongly about it.","m.mentions":{"user_ids":["@gibson042:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YIMeFJ6dc2RH3dWKO7r2PSNo9TwX5SH3Ff8AvzW35Pw"}},"msgtype":"m.text"},"ts":1718198484360,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VUk9wQXWRJ9kVnncW7tiiJIIeV6gZmTDK77c8zT2t0U"},
{"content":{"body":"I think as soon as you allow addition or subtraction of variable sized things like months you'll hit those odd corner cases.","m.mentions":{},"msgtype":"m.text"},"ts":1718198556729,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$5RlA2cGiNQJfA0kEsUB42YjKeIRhIUciDO8KwDHW7Fc"},
{"content":{"body":"Mostly because this is essentially \"date math\" but isn't as reliable as actual math.","m.mentions":{},"msgtype":"m.text"},"ts":1718198616222,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jttL-leRdkR3UtgiQOJrowKJqe3ThQygLLl502jIzE8"},
{"content":{"body":"Yeah, abandon all hope, there are no monoids here.","m.mentions":{},"msgtype":"m.text"},"ts":1718198697644,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$GUoROlGYTlzWOprARAiQBM5nStHTe1MYP61p0cj2Nwc"},
{"content":{"body":"I mean, normalization would make it consistent, i.e., swap left and right to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.","m.mentions":{},"msgtype":"m.text"},"ts":1718198703195,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$bCgdnQifbdY80Q0NtjN7XXm6zuf7P9fWRewKZYGu3Qs"},
{"content":{"body":" * I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.","m.mentions":{},"m.new_content":{"body":"I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$bCgdnQifbdY80Q0NtjN7XXm6zuf7P9fWRewKZYGu3Qs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718198836516,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YZTkd-GQNalufp1jFMyiHwKed0TfIkWwYU03SvLOfH8"},
{"content":{"body":"Could somebody re-explain me this comment? 😅 Do database use timezones that are not the timezones we are using in temporal?","m.mentions":{},"msgtype":"m.text"},"ts":1718199265490,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$va0Hd0QcjolQ0GCLb8c46TfnfYSt2gqx6440muOUWRY"},
{"content":{"body":" * Could somebody re-explain to me this comment? 😅 Do database use timezones that are not the timezones we are using in temporal?","m.mentions":{},"m.new_content":{"body":"Could somebody re-explain to me this comment? 😅 Do database use timezones that are not the timezones we are using in temporal?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$va0Hd0QcjolQ0GCLb8c46TfnfYSt2gqx6440muOUWRY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718199269581,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$eoVYWCRe-1prdl9S58-PqtiBbdTE2jXu9w5KJvdMLWs"},
{"content":{"body":" * Could somebody re-explain to me this comment? 😅 Do databases use timezones that are not the timezones we are using in temporal?","m.mentions":{},"m.new_content":{"body":"Could somebody re-explain to me this comment? 😅 Do databases use timezones that are not the timezones we are using in temporal?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$va0Hd0QcjolQ0GCLb8c46TfnfYSt2gqx6440muOUWRY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718199273473,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pfdegn2CAuEzvtO74Tr2y3fFLmtJDT1sZ61jYwXl920"},
{"content":{"body":"> <@rbuckton:matrix.org> I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.\n\nsuch normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):\n\n```\nTemporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"}); // => P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"}); // => -P2M\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bCgdnQifbdY80Q0NtjN7XXm6zuf7P9fWRewKZYGu3Qs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.</blockquote></mx-reply><p>such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):</p>\n<pre><code>Temporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"}); // =&gt; P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"}); // =&gt; -P2M\n</code></pre>\n","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$bCgdnQifbdY80Q0NtjN7XXm6zuf7P9fWRewKZYGu3Qs"}},"msgtype":"m.text"},"ts":1718199307363,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$wwUROR7UV-XSsfJCLU71HSVEIYJOj1UrOWpYukQG0Rc"},
{"content":{"body":"> <@rbuckton:matrix.org> I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.\n\n * such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):\n\n```\nTemporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"});\n// => P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"});\n// => -P2M\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bCgdnQifbdY80Q0NtjN7XXm6zuf7P9fWRewKZYGu3Qs?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I mean, normalization would make it consistent, i.e., swap left and right as necessary to ensure they are ordered, perform the necessary math, and then negate the results as needed for the given API and whether a swap occurred.</blockquote></mx-reply> * <p>such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):</p>\n<pre><code>Temporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"});\n// =&gt; P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"});\n// =&gt; -P2M\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):\n\n```\nTemporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"});\n// => P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"});\n// => -P2M\n```","format":"org.matrix.custom.html","formatted_body":"<p>such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):</p>\n<pre><code>Temporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", {largestUnit:\"months\"});\n// =&gt; P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", {largestUnit:\"months\"});\n// =&gt; -P2M\n</code></pre>\n","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wwUROR7UV-XSsfJCLU71HSVEIYJOj1UrOWpYukQG0Rc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718199326624,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$EzLkt22pRLbrFA2XLCvvj-5jTEu_CI1I5WvyobQ5CwU"},
{"content":{"body":"That discrepancy is desired?","m.mentions":{},"msgtype":"m.text"},"ts":1718199457379,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mlN0mW7qOt7nU-KpHHhMzVVRWqB1Pg9LarQO-RDeBh8"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1718199463949,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$zrh1sjgDqe1q4fzQt9IY_hFW6PgtD70KfnO3qnusZGs"},
{"content":{"body":"Why is it desirable?","m.mentions":{},"msgtype":"m.text"},"ts":1718199551278,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2-dS8al9n-VxGAoRZypBXHF9pRpGtJFhNBRGtXDoUQQ"},
{"content":{"body":"Re subtract, even Shu said that it's confusing to remove subtract","m.mentions":{},"msgtype":"m.text"},"ts":1718199667427,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ctzaXVzEorUWp6bkfdVmg0PdWFmJNEH9ACG2R4nlJHg"},
{"content":{"body":"And this \"size reduction\" request is coming from him","m.mentions":{},"msgtype":"m.text"},"ts":1718199692705,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_65LIS0ZUd8b0yttRO5QxQV8XYWQlGbRovKoG9wuyrc"},
{"content":{"body":" * Re subtract, even Shu said that it's confusing to remove subtract in his pre-written message to rob","m.mentions":{},"m.new_content":{"body":"Re subtract, even Shu said that it's confusing to remove subtract in his pre-written message to rob","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ctzaXVzEorUWp6bkfdVmg0PdWFmJNEH9ACG2R4nlJHg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718199702532,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$CBp1m_PizW00wBY3fCDrwgugZz-VO7j_p9ETdkK81dk"},
{"content":{"body":" * Re subtract, even Shu said that it's confusing to remove subtract in his pre-written message to Rob","m.mentions":{},"m.new_content":{"body":"Re subtract, even Shu said that it's confusing to remove subtract in his pre-written message to Rob","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ctzaXVzEorUWp6bkfdVmg0PdWFmJNEH9ACG2R4nlJHg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718199705545,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QsGE4zjD5n0_6ZRuNnfiPKsekJmxviuk3GWrJAcvvAU"},
{"content":{"body":"I sort of read into it as \"I understand if you want subtract\" but with an undertone of \"If you add it back, remove something else\" - maybe that's wrong?","m.mentions":{},"msgtype":"m.text"},"ts":1718199740709,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$8PuvfE7phRGDYnL49XYCzqMBr4s_kn1-GbxSXi2BuvY"},
{"content":{"body":"> <@jkup:matrix.org> I sort of read into it as \"I understand if you want subtract\" but with an undertone of \"If you add it back, remove something else\" - maybe that's wrong?\n\nI don't think that was necessarily the case","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8PuvfE7phRGDYnL49XYCzqMBr4s_kn1-GbxSXi2BuvY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jkup:matrix.org\">@jkup:matrix.org</a><br>I sort of read into it as &quot;I understand if you want subtract&quot; but with an undertone of &quot;If you add it back, remove something else&quot; - maybe that&#39;s wrong?</blockquote></mx-reply>I don't think that was necessarily the case","m.mentions":{"user_ids":["@jkup:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$8PuvfE7phRGDYnL49XYCzqMBr4s_kn1-GbxSXi2BuvY"}},"msgtype":"m.text"},"ts":1718199757854,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DAdHUb6gskglrntoVghc62-JxybC7mGcd4wsehZHCas"},
{"content":{"body":"We should look at O(n) reductions and not O(1)","m.mentions":{},"msgtype":"m.text"},"ts":1718199767849,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$NK1vPwFFIq_tjsu3neTNrbcA-UjEiXlHY98YHIJuIOw"},
{"content":{"body":"Would a .symmetricDifference instead of .subtract work, if the concern is hiding negative durations? (even though this should have been discussed in stage 2)","m.mentions":{},"msgtype":"m.text"},"ts":1718199895532,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$qhdeUtXdrUaHEXF6MrMMrx6iazoErWeigPqjlbr-g_A"},
{"content":{"body":"Oh, I guess `a.subtract(b).abs()`","format":"org.matrix.custom.html","formatted_body":"Oh, I guess <code>a.subtract(b).abs()</code>","m.mentions":{},"msgtype":"m.text"},"ts":1718200018479,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$q-SpOOcUcod144t5I0NmY8xSC3I3QBvo8bH3tLwQRo0"},
{"content":{"body":"I'm not convinced that making people use negative durations for their subtract replacement more frequently is the best educational device... I don't think that should be a goal","m.mentions":{},"msgtype":"m.text"},"ts":1718200019652,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$U4_OkR3uEVPKRQ2epIZziqe1VSlfiWu0K27vcywMy2o"},
{"content":{"body":"> <@rbuckton:matrix.org> Why is it desirable?\n\nbecause it maps to what people expect when doing calendar operations based on how constraining logic is asymmetric w.r.t to start-of-month vs. end-of-month (going forward, end-of-month to end-of-month has a zero \"days\" part, but going backward, doing the same thing would impose lossiness by producing the same result for adjacent inputs)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2-dS8al9n-VxGAoRZypBXHF9pRpGtJFhNBRGtXDoUQQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Why is it desirable?</blockquote></mx-reply>because it maps to what people expect when doing calendar operations based on how constraining logic is asymmetric w.r.t to start-of-month vs. end-of-month (going forward, end-of-month to end-of-month has a zero \"days\" part, but going backward, doing the same thing would impose lossiness by producing the same result for adjacent inputs)","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2-dS8al9n-VxGAoRZypBXHF9pRpGtJFhNBRGtXDoUQQ"}},"msgtype":"m.text"},"ts":1718200132872,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$JZKiky1nrfPsNRrC7-AqTwSUVjqOsJbx7DiUszFhp2Q"},
{"content":{"body":"Is the way humans think to use \"since\" for things in the past and \"until\" for things in the future?","m.mentions":{},"msgtype":"m.text"},"ts":1718200252962,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$4yeVrJm2RuvmqcP40vDHdP0RT4Bt-J-1JbfIncTg5NA"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1718200276490,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jnbvJIbgDS7-NZtr1yAqyv2M3XsI3Q26N1K1nC8wSQg"},
{"content":{"body":" * yes, i'd say so","m.mentions":{},"m.new_content":{"body":"yes, i'd say so","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$jnbvJIbgDS7-NZtr1yAqyv2M3XsI3Q26N1K1nC8wSQg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718200279029,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SJFGgeu15gM99_STARsS1RVt85pUkYtIdTt1PW86Ikg"},
{"content":{"body":" * yes, i'd say so (in english at least)","m.mentions":{},"m.new_content":{"body":"yes, i'd say so (in english at least)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$jnbvJIbgDS7-NZtr1yAqyv2M3XsI3Q26N1K1nC8wSQg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718200287762,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0_YH5sVj8D1Soj0OoVXY0Km9MM7X1mzf7FHSSZnPyOE"},
{"content":{"body":"I'd almost rather have `since` as I'm sure many users would be tripped up by `until` not being symmetric.","format":"org.matrix.custom.html","formatted_body":"I'd almost rather have <code>since</code> as I'm sure many users would be tripped up by <code>until</code> not being symmetric.","m.mentions":{},"msgtype":"m.text"},"ts":1718200358478,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lcNodriJUee5bi5DdhTmSdjJ-EtpV0d2bxo4h9VfA0U"},
{"content":{"body":"Somehow it's much harder for me to think about until than since but this is like... not a data point","m.mentions":{},"msgtype":"m.text"},"ts":1718200363465,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fsNBMIdkgh9Xc045y1HSz6l4a1h7pZwUwihH2yil4mo"},
{"content":{"body":" * such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):\n\n```\nTemporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", { largestUnit: \"months\" });\n// => P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", { largestUnit: \"months\" });\n// => -P2M\n```","format":"org.matrix.custom.html","formatted_body":" * <p>such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):</p>\n<pre><code>Temporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", { largestUnit: \"months\" });\n// =&gt; P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", { largestUnit: \"months\" });\n// =&gt; -P2M\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):\n\n```\nTemporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", { largestUnit: \"months\" });\n// => P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", { largestUnit: \"months\" });\n// => -P2M\n```","format":"org.matrix.custom.html","formatted_body":"<p>such normalization would not give desired results. actual example (runnable against the polyfill at https://tc39.es/proposal-temporal/ ):</p>\n<pre><code>Temporal.PlainDate.from(\"2024-06-30\").until(\"2024-08-31\", { largestUnit: \"months\" });\n// =&gt; P2M1D\nTemporal.PlainDate.from(\"2024-08-31\").until(\"2024-06-30\", { largestUnit: \"months\" });\n// =&gt; -P2M\n</code></pre>\n","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wwUROR7UV-XSsfJCLU71HSVEIYJOj1UrOWpYukQG0Rc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718200414702,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$otdkut-t8vmZBubOMwGOfQ8kbaJS4nGbwBwMCntWOTA"},
{"content":{"body":"Also, we said we don't want people to have to think about negative durations and now we are saying \"get a negative duration and then re-negate it\"?","m.mentions":{},"msgtype":"m.text"},"ts":1718200440209,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BBXRuzCfOqdv3wfEtEJqp48wWhtf8ks7YmKh1Zxmerk"},
{"content":{"body":"@nicolo-ribaudo:matrix.org many JS programmers are non-native speakers, so it kinda *is* a data point","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo</a> many JS programmers are non-native speakers, so it kinda <i data-md=\"*\">is</i> a data point","msgtype":"m.text"},"ts":1718200448482,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bi5taNywbu7acZINb51qN-iq3mTbamAH44MnV7rbtZM"},
{"content":{"body":" * Also, we said it's difficult for people to have to think about negative durations and now we are saying \"get a negative duration and then re-negate it\"?","m.mentions":{},"m.new_content":{"body":"Also, we said it's difficult for people to have to think about negative durations and now we are saying \"get a negative duration and then re-negate it\"?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BBXRuzCfOqdv3wfEtEJqp48wWhtf8ks7YmKh1Zxmerk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718200450204,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JQjCV9Q0GAELSe_KCqC-4xkq0-5kuxpf3bJnVMvPRo8"},
{"content":{"body":"Oh yeah I clearly remember a song we studied in middle school in my english classes that used \"since\" a lot 😂","m.mentions":{},"msgtype":"m.text"},"ts":1718200470869,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HEdVKWVHm4lLDF6EoVsQiGtmniGXLzW5wFRuoaT7zKc"},
{"content":{"body":"ljharb: I am confused; stage 2.7->3 is pro-forma on the basis of tests being present","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I am confused; stage 2.7-&gt;3 is pro-forma on the basis of tests being present","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1718200775158,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eao1Q-tiSsUmSVK6O8eGYcZzPRgRpQhk87JYD3tZfnc"},
{"content":{"body":"it is not about anything other than that","m.mentions":{},"msgtype":"m.text"},"ts":1718200779617,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Dc_8SO0VMTmIYJBGtxEIjEnMyHXdJ0sYKbxDMxXZJhc"},
{"content":{"body":" * ljharb: I am confused; stage 2.7->3 is pro-forma on the basis of sufficient tests being present","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I am confused; stage 2.7-&gt;3 is pro-forma on the basis of sufficient tests being present","m.mentions":{},"m.new_content":{"body":"ljharb: I am confused; stage 2.7->3 is pro-forma on the basis of sufficient tests being present","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I am confused; stage 2.7-&gt;3 is pro-forma on the basis of sufficient tests being present","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$eao1Q-tiSsUmSVK6O8eGYcZzPRgRpQhk87JYD3tZfnc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718200789651,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_VgR_2DWunSDHxXLzYcJ0FycA9XBYGuyUJ1tFRFbqbY"},
{"content":{"body":"Temporal has lots of tests","m.mentions":{},"msgtype":"m.text"},"ts":1718200795251,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pP_C9Y98d_wM7YLJb9QQ_LAoxsms2M7mRiuNlKq7Vck"},
{"content":{"body":"p sure it's not _just_ about tests","format":"org.matrix.custom.html","formatted_body":"p sure it's not <em>just</em> about tests","m.mentions":{},"msgtype":"m.text"},"ts":1718200825449,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$g_wgOH_56UnSy6JXgSf_RjT0F6-M-T7-3MTi_xwJmLY"},
{"content":{"body":"and either way this agenda item means its tests are no longer correct","m.mentions":{},"msgtype":"m.text"},"ts":1718200847645,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LiBQ3s7JUG6kHuV13bqcoRdyntFR4RFlPj0rERNb028"},
{"content":{"body":"all changes at stage 3 invalidate some tests and we don't normally bump things down, and in fact the champions have already done the work to make the changes to the tests for these proposed changes","m.mentions":{},"msgtype":"m.text"},"ts":1718200920057,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RNivM_TmXFnseXP9NQLBulRV3tp8JdDIDPWB8u2TYP4"},
{"content":{"body":"and certainly when 2.7 was introduced I understood it to be about tests","m.mentions":{},"msgtype":"m.text"},"ts":1718200937290,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0MVmyNAg80HNSncqGo6Xwp2Zs1iiEU1PcSv9l4-LVY4"},
{"content":{"body":"the purpose is\n\n> Testing and validation. Validate the design of the feature through the development of a rigorous and comprehensive test suite Develop spec-compliant prototypes to validate implementability, as necessary, or aid in test development\n\nand the entrance criteria for 3 is\n\n> The feature has sufficient testing and appropriate pre-implementation experience\n","format":"org.matrix.custom.html","formatted_body":"<p>the purpose is</p>\n<blockquote>\n<p>Testing and validation. Validate the design of the feature through the development of a rigorous and comprehensive test suite Develop spec-compliant prototypes to validate implementability, as necessary, or aid in test development</p>\n</blockquote>\n<p>and the entrance criteria for 3 is</p>\n<blockquote>\n<p>The feature has sufficient testing and appropriate pre-implementation experience</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718200967179,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DV0ttlCwjERAoxkSxU6A1hQmvpT4CzeHAa0jH5vESZk"},
{"content":{"body":"perhaps Michael Ficarra can speak more to this?","format":"org.matrix.custom.html","formatted_body":"perhaps <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> can speak more to this?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1718200983968,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HYfY1DuYx6Bph1sz-8vhlPTa56jMaADvnLhKL4YCN8Q"},
{"content":{"body":"and clearly it wasn't sufficient given the vast quantity of normative changes over almost every meeting in the last 4 years.","m.mentions":{},"msgtype":"m.text"},"ts":1718200986018,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Ap__L8BEtqKGayKhlK_COEwarZpbuhx9RVzrweHEqUA"},
{"content":{"body":"justingrant ptomato I'd definitely be interested in discussing declarative custom time zone behavior further.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@justingrant:matrix.org\">justingrant</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a> I'd definitely be interested in discussing declarative custom time zone behavior further.","m.mentions":{"user_ids":["@justingrant:matrix.org","@pchimento:igalia.com"]},"msgtype":"m.text"},"ts":1718201008260,"senderName":"leftmostcat (UTC-7)","senderId":"@leftmostcat:matrix.org","id":"$nhqIytFq24mqBPoZKqJBNVm9eGb-KAhkSTydH9jYPKQ"},
{"content":{"body":"> <@bakkot:matrix.org> and certainly when 2.7 was introduced I understood it to be about tests\n\nI agree. If we bump something down, it would be to Stage 2. There's no extra consensus-seeking step--that was very much a part of the process reform in the first place.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0MVmyNAg80HNSncqGo6Xwp2Zs1iiEU1PcSv9l4-LVY4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>and certainly when 2.7 was introduced I understood it to be about tests</blockquote></mx-reply>I agree. If we bump something down, it would be to Stage 2. There's no extra consensus-seeking step--that was very much a part of the process reform in the first place.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0MVmyNAg80HNSncqGo6Xwp2Zs1iiEU1PcSv9l4-LVY4"}},"msgtype":"m.text"},"ts":1718201026102,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zL2kXgM3VuAvEKWT2bpOSQxxD-qioAYAa-zezdp_eTY"},
{"content":{"body":"ok, then maybe stage 2 is the right call","m.mentions":{},"msgtype":"m.text"},"ts":1718201044855,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4ixbiFy2FNYg_NkIaTjTexNXN-LQyuJyTGAmVgTYxbY"},
{"content":{"body":"i mainly feel that stage 3 isn't appropriate for Temporal (and really hasn't been in a long time)","m.mentions":{},"msgtype":"m.text"},"ts":1718201070813,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$V2GLvBsVgd7YEyhaDdkOsZHa5dnrtCazsd3oPRiwiHA"},
{"content":{"body":"a big part of the discussion around 2.7 was admittedly my own stated opinion (but i wasn't alone) that \"3 means shippable\"","m.mentions":{},"msgtype":"m.text"},"ts":1718201097411,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DHOGdBauQJOxjFZIrxljT5SoUWhY-mhFRZz-al7q8K0"},
{"content":{"body":"temporal is not shippable yet.","m.mentions":{},"msgtype":"m.text"},"ts":1718201104360,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eBxIvErfWp9jzeWb1yQf396j078ROoncINiB-_7AXFo"},
{"content":{"body":"I think Temporal is in a similar state to Decorators: right now it deserves to be at Stage 3, though at some point in the past it might've met the criteria for a demotion and re-promotion.","m.mentions":{},"msgtype":"m.text"},"ts":1718201133899,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OYl7HnhL-JNX1AktqwBjGawsUEkotz2VSpNw7_ORGW0"},
{"content":{"body":"3 means appropriate to implement","m.mentions":{},"msgtype":"m.text"},"ts":1718201139236,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6Y5VeLNJ7wMnMVsdugjnyGAz7YxtZL5aUEDHOoILqgU"},
{"content":{"body":"Can we merge the since() and subtract() methods? And they check their receiver","m.mentions":{},"msgtype":"m.text"},"ts":1718201142704,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$FWWw_3rF0GOYjeoQuFvjm41L2gDKp6pzUKBUmOPPKKc"},
{"content":{"body":"implement !== ship unflagged and use in production","m.mentions":{},"msgtype":"m.text"},"ts":1718201182011,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8SoYIfdPtSlgkgQUVRJFdJPFDzCHQlEJs6_Wc5BPwI0"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Can we merge the since() and subtract() methods? And they check their receiver\n\nif Shu wanted us to merge random things, he would've said so","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FWWw_3rF0GOYjeoQuFvjm41L2gDKp6pzUKBUmOPPKKc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Can we merge the since() and subtract() methods? And they check their receiver</blockquote></mx-reply>if Shu wanted us to merge random things, he would've said so","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$FWWw_3rF0GOYjeoQuFvjm41L2gDKp6pzUKBUmOPPKKc"}},"msgtype":"m.text"},"ts":1718201189157,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$J0YIET0AymnbaJPvSmo-bAtiafGMbDEl-XlEsfnjjlo"},
{"content":{"body":"the intention was for 3 to mean the latter","m.mentions":{},"msgtype":"m.text"},"ts":1718201189286,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w4oGI1mlEn-PqGwdleqQIExQOmKL2EjB49F1LR4Pc5o"},
{"content":{"body":"> <@littledan:matrix.org> if Shu wanted us to merge random things, he would've said so\n\nI mean since with the sinces and subtract with the subtracts","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$J0YIET0AymnbaJPvSmo-bAtiafGMbDEl-XlEsfnjjlo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>if Shu wanted us to merge random things, he would've said so</blockquote></mx-reply>I mean since with the sinces and subtract with the subtracts","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$J0YIET0AymnbaJPvSmo-bAtiafGMbDEl-XlEsfnjjlo"}},"msgtype":"m.text"},"ts":1718201208086,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$-Q9SfTvzYCSADB_sg0hvfdKJewsidB0XtyvCzOafmNw"},
{"content":{"body":"To have ony one .since and one .subtract","m.mentions":{},"msgtype":"m.text"},"ts":1718201211420,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$mt8RTSqnmm1yPo-zKeiiqSgTgnSY1sp-hPBufgVMmqY"},
{"content":{"body":"Like for .valueOf","m.mentions":{},"msgtype":"m.text"},"ts":1718201214001,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$2MF5Ce1MJoPY9g-WrdF0Egk-cpLyGM6M6mv_TJdE--4"},
{"content":{"body":" * the intention was for 3 to mean the latter; perhaps the 2.7 PR should have tweaked the stage 3 wording better, but i didn't realize it said \"implement\".","m.mentions":{},"m.new_content":{"body":"the intention was for 3 to mean the latter; perhaps the 2.7 PR should have tweaked the stage 3 wording better, but i didn't realize it said \"implement\".","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w4oGI1mlEn-PqGwdleqQIExQOmKL2EjB49F1LR4Pc5o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718201277559,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$55AimQPYz38IQpEcmnHMjCib-q3nSvErJ6GfEGFrygc"},
{"content":{"body":"> <@ljharb:matrix.org> implement !== ship unflagged and use in production\n\nI don't think engines want us to be in charge of deciding whether they can ship an implementation they're happy with, once we've given the signal that it is ready to implement, so I don't think that's really a thing we can dictate","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8SoYIfdPtSlgkgQUVRJFdJPFDzCHQlEJs6_Wc5BPwI0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>implement !== ship unflagged and use in production</blockquote></mx-reply>I don't think engines want us to be in charge of deciding whether they can ship an implementation they're happy with, once we've given the signal that it is ready to implement, so I don't think that's really a thing we can dictate","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$8SoYIfdPtSlgkgQUVRJFdJPFDzCHQlEJs6_Wc5BPwI0"}},"msgtype":"m.text"},"ts":1718201466647,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$S65tNrAon9HDc1tyIke8ku7-jthQ14jmr5fP21NBA6Y"},
{"content":{"body":"it's not about \"in charge\", it's about the public signal","m.mentions":{},"msgtype":"m.text"},"ts":1718201478887,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Oei9Cs7picHbcaj5TkpUdS8pCJ3htRYJZojDX7awb4k"},
{"content":{"body":"a lot of the 2.7 discussion was about precisely that - that stage 3 sends the signal that it's ok to use it in production and that it's ok for it to be shipped unflagged. they can do whatever they want regardless, but the signal matters","m.mentions":{},"msgtype":"m.text"},"ts":1718201506646,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bcxGlNcMdc_CETq9IjRveYgJozLYW69eO-GzuHUqKXY"},
{"content":{"body":"and temporal has had an inaccurate signal for 4 years","m.mentions":{},"msgtype":"m.text"},"ts":1718201513781,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0JZsY4yQslJ2fgd1k1Ebh-wfd4_dRTGsZkqQB_GxEks"},
{"content":{"body":"the only signal relevant to whether you can use something in production is whether it is in the engines that you support","m.mentions":{},"msgtype":"m.text"},"ts":1718201545733,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AYWvU771vEt0ZxNFbyB6R2SG-HrL6Jb_MbzhN1fFr4I"},
{"content":{"body":"that's wildly incorrect, given the existence and usage of polyfills","m.mentions":{},"msgtype":"m.text"},"ts":1718201586608,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sN3SmfcdcGrk8gXvHvZB9APxfSWgMQYt1F2XIdOf9ls"},
{"content":{"body":"and, not every engine/implementation is always in this room. the stage is a signal to them, too.","m.mentions":{},"msgtype":"m.text"},"ts":1718201613584,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Lii8HxpwCoazNnXmPOtlxi0pontqlbh-ggOTySAjo4w"},
{"content":{"body":"you can use a polyfill for a feature which has never even been proposed if you want to? I don't know what the relevance of \"polyfills exist\" is to this","m.mentions":{},"msgtype":"m.text"},"ts":1718201636606,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xf-0QcWqG6wy_mO5sG3UZsfwHb1awuVAM-nKFUOiHZQ"},
{"content":{"body":"> <@jkup:matrix.org> I sort of read into it as \"I understand if you want subtract\" but with an undertone of \"If you add it back, remove something else\" - maybe that's wrong?\n\nno, didn't intend that subtext","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8PuvfE7phRGDYnL49XYCzqMBr4s_kn1-GbxSXi2BuvY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jkup:matrix.org\">@jkup:matrix.org</a><br>I sort of read into it as &quot;I understand if you want subtract&quot; but with an undertone of &quot;If you add it back, remove something else&quot; - maybe that&#39;s wrong?</blockquote></mx-reply>no, didn't intend that subtext","m.mentions":{"user_ids":["@jkup:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$8PuvfE7phRGDYnL49XYCzqMBr4s_kn1-GbxSXi2BuvY"}},"msgtype":"m.text"},"ts":1718202951870,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XmD5x2Sa2-_sjWLpFYN8iglzVFZpqTzZrGMQNvdeRqY"},
{"content":{"body":"the undertone was more like \"i understandable, on a case by case basis, if some should be added back. but if too many are added back then we have a problem again\"","m.mentions":{},"msgtype":"m.text"},"ts":1718202999220,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IOAv0Zcn3vQxfJyPA8RcWYi6vFBgDP7RQwSLqUzQ9vU"},
{"content":{"body":" * the undertone was more like \"it is understandable, on a case by case basis, if some should be added back. but if too many are added back then we have a problem again\"","m.mentions":{},"m.new_content":{"body":"the undertone was more like \"it is understandable, on a case by case basis, if some should be added back. but if too many are added back then we have a problem again\"","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IOAv0Zcn3vQxfJyPA8RcWYi6vFBgDP7RQwSLqUzQ9vU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718203006624,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$M_euHICTXytdlYC2Gwn-XXcQ82a3pn4l6pAAODV9K5M"},
{"content":{"body":"https://www.youtube.com/watch?v=hnpILIIo9ek","m.mentions":{},"msgtype":"m.text"},"ts":1718203511271,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$T1n0hCS59oUDa1PpNvLQqy0zyeabcVwz-TOocPiAiZo"},
{"content":{"body":"Or: head over to: https://tcq.staging.tcq-reloaded.tcq.ninja to see tcq-reloaded in action.","m.mentions":{},"msgtype":"m.text"},"ts":1718203530392,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$aUP6iudJ_yMbeXM7B5iS4aG0jnYBx2P8zupI8qTxVmU"},
{"content":{"body":"For those, that are interested, the PR is https://github.com/zalari/tcq/pull/7 , it is not persistent, i.e. whenever I redeploy, everything is gone, because I need to write additional adapters. Feedback on above PR is highly appreciated. I have no clue, what the perf requirements for TCQ are, it is a very small VM running on AWS Fargate.","m.mentions":{},"msgtype":"m.text"},"ts":1718203653289,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$aWUGCz5H4e24wLB0fDetQZM9UV8CYhJczlsS0aqZ8SY"},
{"content":{"body":"I have created a meeting -> https://tcq.staging.tcq-reloaded.tcq.ninja/meeting/gMqy for which, Rob Palmer davidenke and Chris de Almeida are chairs, so feel free to play around.","format":"org.matrix.custom.html","formatted_body":"I have created a meeting -&gt; https://tcq.staging.tcq-reloaded.tcq.ninja/meeting/gMqy for which, <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@davidenke:matrix.org\">davidenke</a> and <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a> are chairs, so feel free to play around.","m.mentions":{"user_ids":["@robpalme:matrix.org","@davidenke:matrix.org","@softwarechris:matrix.org"]},"msgtype":"m.text"},"ts":1718203889249,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$pJJdXVU4ynENHnQAcFGKV2Nol2EbRJVzYsq3oxQKl20"},
{"content":{"body":"for those of us walking to the FF speaker dinner from kamppi metro, meet at the South building entrance in like 10 minutes?","msgtype":"m.text"},"ts":1718204146240,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ATySCKsbETPKGt3H0mUcDdaAk3DaNS7oBolHlJbsYkk"},
{"content":{"body":"it's a 26min walk","msgtype":"m.text"},"ts":1718204216342,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$N0pXqQCi2hvxhbCOuz7AOuvE2YYD90i4ld6BlHskc5A"},
{"content":{"body":"> <@bakkot:matrix.org> you can use a polyfill for a feature which has never even been proposed if you want to? I don't know what the relevance of \"polyfills exist\" is to this\n\nweb compat makes them entirely relevant.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24xf-0QcWqG6wy_mO5sG3UZsfwHb1awuVAM-nKFUOiHZQ\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>you can use a polyfill for a feature which has never even been proposed if you want to? I don't know what the relevance of \"polyfills exist\" is to this</blockquote></mx-reply>web compat makes them entirely relevant.","m.relates_to":{"m.in_reply_to":{"event_id":"$xf-0QcWqG6wy_mO5sG3UZsfwHb1awuVAM-nKFUOiHZQ"}},"msgtype":"m.text"},"ts":1718204238126,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$g21_JwkUKjHN8PO3dRrT8O3pL5y3fzfyC7-Yu4-I3fs"},
{"content":{"body":"> <@shuyuguo:matrix.org> the undertone was more like \"i understandable, on a case by case basis, if some should be added back. but if too many are added back then we have a problem again\"\n\nWith the results today, are we in that “problem” state (not yet removing minus or since; not merging toJSON or valueOf yet)?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24IOAv0Zcn3vQxfJyPA8RcWYi6vFBgDP7RQwSLqUzQ9vU\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>the undertone was more like \"i understandable, on a case by case basis, if some should be added back. but if too many are added back then we have a problem again\"</blockquote></mx-reply>With the results today, are we in that “problem” state (not yet removing minus or since; not merging toJSON or valueOf yet)?","m.relates_to":{"m.in_reply_to":{"event_id":"$IOAv0Zcn3vQxfJyPA8RcWYi6vFBgDP7RQwSLqUzQ9vU"}},"msgtype":"m.text"},"ts":1718204528385,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fIVDCSst0yKzwgaD2uTkuV0I2-v0KoIfqIXgsBqRirY"},
{"content":{"body":"> <@littledan:matrix.org> With the results today, are we in that “problem” state (not yet removing minus or since; not merging toJSON or valueOf yet)?\n\ni'm working through the notes still, but by state you mean items A-L excluding D, E, and F?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fIVDCSst0yKzwgaD2uTkuV0I2-v0KoIfqIXgsBqRirY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>With the results today, are we in that “problem” state (not yet removing minus or since; not merging toJSON or valueOf yet)?</blockquote></mx-reply>i'm working through the notes still, but by state you mean items A-L excluding D, E, and F?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$fIVDCSst0yKzwgaD2uTkuV0I2-v0KoIfqIXgsBqRirY"}},"msgtype":"m.text"},"ts":1718204622704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RRhjGQNiGuGslNmq2MSSrUmaV8JOIwuaxODzoilCXus"},
{"content":{"body":"i imagine the only way to tell is to implement the removals and see, but on paper it looks like a big improvement","m.mentions":{},"msgtype":"m.text"},"ts":1718204690220,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$y1QyPRzSifN8mdSmAUNcoiP5jcEfBjiqrCZxIa2VWQw"},
{"content":{"body":"> <@shuyuguo:matrix.org> i'm working through the notes still, but by state you mean items A-L excluding D, E, and F?\n\nYes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24RRhjGQNiGuGslNmq2MSSrUmaV8JOIwuaxODzoilCXus\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i'm working through the notes still, but by state you mean items A-L excluding D, E, and F?</blockquote></mx-reply>Yes","m.relates_to":{"m.in_reply_to":{"event_id":"$RRhjGQNiGuGslNmq2MSSrUmaV8JOIwuaxODzoilCXus"}},"msgtype":"m.text"},"ts":1718204750560,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1Keinn03Qmi0-ax2cgSr3Gr5t8SDZAzhu_RPRrDEbv4"},
{"content":{"body":"> <@michaelficarra:matrix.org> for those of us walking to the FF speaker dinner from kamppi metro, meet at the South building entrance in like 10 minutes?\n\nWe already went past that","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ATySCKsbETPKGt3H0mUcDdaAk3DaNS7oBolHlJbsYkk?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br />for those of us walking to the FF speaker dinner from kamppi metro, meet at the South building entrance in like 10 minutes?</blockquote></mx-reply>We already went past that","m.relates_to":{"m.in_reply_to":{"event_id":"$ATySCKsbETPKGt3H0mUcDdaAk3DaNS7oBolHlJbsYkk"}},"msgtype":"m.text"},"ts":1718204868610,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$uApAFgu8OJtR77IYHfeJduihwba3fsV3Lhnykuqeu2w"},
{"content":{"body":"At the Fazer cafe now","msgtype":"m.text"},"ts":1718204878886,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$gP8cliC8SdfzNLcFEV6nmPjghAPHhU__1065sfBcXds"},
{"content":{"body":"It's on the walk there ","msgtype":"m.text"},"ts":1718204885051,"senderName":"ryzokuken (TC39 🇫🇮)","senderId":"@usharma:igalia.com","id":"$-RlwgJUZLFI7GEhCBBk43tgfEUlt3EnZ0qSMA5O45F4"},
{"content":{"body":"have a good dinner everyone","m.mentions":{},"msgtype":"m.text"},"ts":1718204921063,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$aVqXFE3FTLKzR5RQrkihyRRuBLvfbfiX1oNriLvdvDo"},
{"content":{"body":"> <@rbuckton:matrix.org> I'd almost rather have `since` as I'm sure many users would be tripped up by `until` not being symmetric.\n\nrbuckton: I'm not sure if this was later answered by anyone because there's a long scrollback that I wasn't keeping up with during the presentation; but `since` is equally asymmetric as `until` is","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lcNodriJUee5bi5DdhTmSdjJ-EtpV0d2bxo4h9VfA0U?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I'd almost rather have <code>since</code> as I'm sure many users would be tripped up by <code>until</code> not being symmetric.</blockquote></mx-reply><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: I'm not sure if this was later answered by anyone because there's a long scrollback that I wasn't keeping up with during the presentation; but <code>since</code> is equally asymmetric as <code>until</code> is","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$lcNodriJUee5bi5DdhTmSdjJ-EtpV0d2bxo4h9VfA0U"}},"msgtype":"m.text"},"ts":1718206846194,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$-MA6pIeWkW0zeIUz_vNswNuTcKdHn_IQsueNI9urKvw"},
{"content":{"body":"also, I'd have to double-check to make sure I'm 100% right about this, but `a.since(b)` is equal to `b.until(a)`; it's only if you pass `a.since(b, opts)` and `b.until(a, opts)` where `opts` is not the default, that they are asymmetric. the default options don't let you run into calendar math, and calendar math is where the asymmetry occurs","format":"org.matrix.custom.html","formatted_body":"also, I'd have to double-check to make sure I'm 100% right about this, but <code>a.since(b)</code> is equal to <code>b.until(a)</code>; it's only if you pass <code>a.since(b, opts)</code> and <code>b.until(a, opts)</code> where <code>opts</code> is not the default, that they are asymmetric. the default options don't let you run into calendar math, and calendar math is where the asymmetry occurs","m.mentions":{},"msgtype":"m.text"},"ts":1718206946700,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$R10WzOm_cmyIEsqoKTzvaq8ht2wwYLjX5buD10Zn_TY"},
{"content":{"body":"> <@pchimento:igalia.com> rbuckton: I'm not sure if this was later answered by anyone because there's a long scrollback that I wasn't keeping up with during the presentation; but `since` is equally asymmetric as `until` is\n\nYes, that's the reason I feel both should exist. They're individually asymmetric, but since and until are symmetric with each other. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-MA6pIeWkW0zeIUz_vNswNuTcKdHn_IQsueNI9urKvw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br /><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: I'm not sure if this was later answered by anyone because there's a long scrollback that I wasn't keeping up with during the presentation; but <code>since</code> is equally asymmetric as <code>until</code> is</blockquote></mx-reply>Yes, that's the reason I feel both should exist. They're individually asymmetric, but since and until are symmetric with each other.","m.relates_to":{"m.in_reply_to":{"event_id":"$-MA6pIeWkW0zeIUz_vNswNuTcKdHn_IQsueNI9urKvw"}},"msgtype":"m.text"},"ts":1718207927512,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CKnlcPPga6kV5CkOV7emd8zpSm4MWu6VpsMAA_u94FY"}
]