[
{"content":{"body":"> <@bakkot:matrix.org> also the \"just\" part of \"just created yourself\" can be dropped if you're willing to have it throw if the object has a `.then` property that the user put on it, which I think is a perfectly fine restriction; I updated my snippet to do that. as long as you know the object is one you created, even if you've since handed it out to a user (as in the Animation CVE in the repo) then you can rely on it not being a proxy and so the hasOwn check not triggering user code\n\nNot true, the user may have set the prototype to a proxy which would trap when not finding and own then","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_-7s7fqrYPOGNqt-ROz250l_Xz6h3vJgOrApcP66nhw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />also the \"just\" part of \"just created yourself\" can be dropped if you're willing to have it throw if the object has a <code>.then</code> property that the user put on it, which I think is a perfectly fine restriction; I updated my snippet to do that. as long as you know the object is one you created, even if you've since handed it out to a user (as in the Animation CVE in the repo) then you can rely on it not being a proxy and so the hasOwn check not triggering user code</blockquote></mx-reply>Not true, the user may have set the prototype to a proxy which would trap when not finding and own then","m.relates_to":{"m.in_reply_to":{"event_id":"$_-7s7fqrYPOGNqt-ROz250l_Xz6h3vJgOrApcP66nhw"}},"msgtype":"m.text"},"ts":1754459601793,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qCInRfH8uabDcu8Vaug8ObOq7H2U5ixbVNRE6KTY7f0"},
{"content":{"body":"* Not true, the user may have set the prototype to a proxy which would trap when not finding an own then","m.new_content":{"body":"> <@bakkot:matrix.org> also the \"just\" part of \"just created yourself\" can be dropped if you're willing to have it throw if the object has a `.then` property that the user put on it, which I think is a perfectly fine restriction; I updated my snippet to do that. as long as you know the object is one you created, even if you've since handed it out to a user (as in the Animation CVE in the repo) then you can rely on it not being a proxy and so the hasOwn check not triggering user code\n\nNot true, the user may have set the prototype to a proxy which would trap when not finding an own then","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_-7s7fqrYPOGNqt-ROz250l_Xz6h3vJgOrApcP66nhw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a><br />also the \"just\" part of \"just created yourself\" can be dropped if you're willing to have it throw if the object has a <code>.then</code> property that the user put on it, which I think is a perfectly fine restriction; I updated my snippet to do that. as long as you know the object is one you created, even if you've since handed it out to a user (as in the Animation CVE in the repo) then you can rely on it not being a proxy and so the hasOwn check not triggering user code</blockquote></mx-reply>Not true, the user may have set the prototype to a proxy which would trap when not finding an own then","msgtype":"m.text"},"m.relates_to":{"event_id":"$qCInRfH8uabDcu8Vaug8ObOq7H2U5ixbVNRE6KTY7f0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754459686133,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$MGSgzTU8A7uc3s4dPcMuDutQr-nCLpDNDfG0uyH1fjM"},
{"content":{"body":"At which step of that code would it trap?","msgtype":"m.text"},"ts":1754459714334,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bpmK6b2zVwKJCQ62pL1x0m6vgsx0q-Fdm8fBKYPL4-s"},
{"content":{"body":"In the animation case, the spec does/did `promiseCapability.resolve(this)`, with `this` being the animation instance that had previously been exposed to userland. Resolve does synchronously look up a `then` property, and knowing that the animation object isn't a proxy (having been brand checked) doesn't mean it can't trap a `x.Get('then')`","msgtype":"m.text"},"ts":1754459931959,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GJh25v8TIuAlcuHbqczZGcyoQCx7VrJClFWC1oXVQXc"},
{"content":{"body":"I don't see why `hasOwn` is relevant in this case","msgtype":"m.text"},"ts":1754459993236,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$B3l8Au1LEk3CVxj4hWfb1h3A-lW62gqYEB2JnvIJVjo"},
{"content":{"body":"The idea is that instead of .resolve you would use bakkot's implementation above ","format":"org.matrix.custom.html","formatted_body":"The idea is that instead of .resolve you would use <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a>'s implementation above ","msgtype":"m.text"},"ts":1754460010630,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$CmKqP08xfZfJmvadXqo_aHtn2Lp5gWSxZHtNL202mTw"}
]