[
{"content":{"body":"Ok, the Zoom is now running for the plenary.  Please could someone remote dial in so we can test AV.","m.mentions":{},"msgtype":"m.text"},"ts":1707241112395,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$OG-z8cRax8hft9bZRWHlVrTnGbI6MUNg5NCHr1J6u3s"},
{"content":{"body":"waiting for host to let me in","m.mentions":{},"msgtype":"m.text"},"ts":1707241169243,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$zFcr6Plq8KWaqyACgOTdjSuIn-7W9ND7uTfsi9pnEKE"},
{"content":{"body":"please add your name to the top of the meeting notes","m.mentions":{},"msgtype":"m.text"},"ts":1707242629060,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$qUJTZ614jvYj8FOGTSS68y-FHgRYxUJzDxP1RCACQ7c"},
{"content":{"body":"for people on the opposite side of the room, can you hear Rob over the PA ok?","m.mentions":{},"msgtype":"m.text"},"ts":1707242841480,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$782-PBYRePjQ7vPgEcKpjZtURiRQ11PByP11U0RINUY"},
{"content":{"body":"yep","m.mentions":{},"msgtype":"m.text"},"ts":1707242968925,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2bDdnoiqgbAssSexQFVQncOp2_HlXEV5aCmkCbzlJ6c"},
{"content":{"body":"splendid, thank you","m.mentions":{},"msgtype":"m.text"},"ts":1707242999151,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$OYr1VK_hOCJJGuhkfvHnsrpPY_K4JaljaofM8tzLJ5w"},
{"content":{"body":"FYI this is replay.io if people are wondering","m.mentions":{},"msgtype":"m.text"},"ts":1707243582095,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fZpDd7ayO5ipwxdeJ2u4BXOKBH72m0wIyotTyKhslAU"},
{"content":{"body":"Is it just me, or is the sound coming from the room very low? I had to turn up the volume on my speakers quiet high to hear, so I'm wondering if the gain on the microphones in the room is too low.","m.mentions":{},"msgtype":"m.text"},"ts":1707243600464,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YP8pkNt1CYU1HVje29YW7OwUxXyYmkcuHeAAQyqi-pE"},
{"content":{"body":"also I want to call the TC for WinterCG \"WinterTC\" :)","m.mentions":{},"msgtype":"m.text"},"ts":1707243602636,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bqIcig9GWYL52b69YKIPB-HOOXWQifSW3ry2PBUJZGA"},
{"content":{"body":"> <@rbuckton:matrix.org> Is it just me, or is the sound coming from the room very low? I had to turn up the volume on my speakers quiet high to hear, so I'm wondering if the gain on the microphones in the room is too low.\n\nnot just you","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YP8pkNt1CYU1HVje29YW7OwUxXyYmkcuHeAAQyqi-pE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Is it just me, or is the sound coming from the room very low? I had to turn up the volume on my speakers quiet high to hear, so I&#39;m wondering if the gain on the microphones in the room is too low.</blockquote></mx-reply>not just you","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YP8pkNt1CYU1HVje29YW7OwUxXyYmkcuHeAAQyqi-pE"}},"msgtype":"m.text"},"ts":1707243643193,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$teaQKODmdhvTrIRuGswWv962XaK3Bp3K0lkRMZnyEaM"},
{"content":{"body":"how would WinterCG standardisation in Ecma work? it's already in W3C","m.mentions":{},"msgtype":"m.text"},"ts":1707243688384,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw"},
{"content":{"body":"also super excited for Sentry to join!","m.mentions":{},"msgtype":"m.text"},"ts":1707243703347,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mjyp6fLL72tEX0VeDfnKGDSERHF6UqesKr3CYB0qDK8"},
{"content":{"body":"Yes!!","m.mentions":{},"msgtype":"m.text"},"ts":1707243729505,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$DXT8pAxqHJD919_fCn8buZHXSu2Cw5onziT-Ow7xsWg"},
{"content":{"body":"> <@michaelficarra:matrix.org> how would WinterCG standardisation in Ecma work? it's already in W3C\n\nsimilar to TC54 or Dart or C#: Technical development takes place in an open community forum (W3C WinterCG) and then the Ecma TC is responsible for reviewing, validating and standardizing just the parts of the work which are new APIs (and not upstreamed into other standards bodies), for example minimum common API, or a module-based raw socket API, etc.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>how would WinterCG standardisation in Ecma work? it&#39;s already in W3C</blockquote></mx-reply>similar to TC54 or Dart or C#: Technical development takes place in an open community forum (W3C WinterCG) and then the Ecma TC is responsible for reviewing, validating and standardizing just the parts of the work which are new APIs (and not upstreamed into other standards bodies), for example minimum common API, or a module-based raw socket API, etc.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw"}},"msgtype":"m.text"},"ts":1707243782887,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Eca9C7jSivtqmRiiI2w9gReqUbxuk9d4_HllzyTmdes"},
{"content":{"body":"we know why ","m.mentions":{},"msgtype":"m.text"},"ts":1707243822014,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$k5IPJ7FKvRzcT0wm94En6_SQe8vjlNK64uEeQyH_W0o"},
{"content":{"body":" * we know why _(reference to the ecma-262 access)_","format":"org.matrix.custom.html","formatted_body":" * we know why <em>(reference to the ecma-262 access)</em>","m.mentions":{},"m.new_content":{"body":"we know why _(reference to the ecma-262 access)_","format":"org.matrix.custom.html","formatted_body":"we know why <em>(reference to the ecma-262 access)</em>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$k5IPJ7FKvRzcT0wm94En6_SQe8vjlNK64uEeQyH_W0o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707243844934,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$_VbDvKzTLM-gv21oCqAyCqaNbWxnR26s5JpHXUxGAD0"},
{"content":{"body":"not sure if Ecma is the best host for that work if they want actual web support. It might be challenging for WinterCG. I'd be interested to know what might not be working at W3C.","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707243994177,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$5nDCSnEOKmVt2tnFw-hFd6-8PdJXvtenSZGgGOHzvLY"},
{"content":{"body":" * not sure if Ecma is the best host for that work if they want actual web support. It might be challenging for WinterCG. I'd be interested to know what may not be working at W3C.","format":"org.matrix.custom.html","formatted_body":" * not sure if Ecma is the best host for that work if they want actual web support. It might be challenging for WinterCG. I'd be interested to know what may not be working at W3C.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.new_content":{"body":"not sure if Ecma is the best host for that work if they want actual web support. It might be challenging for WinterCG. I'd be interested to know what may not be working at W3C.","format":"org.matrix.custom.html","formatted_body":"not sure if Ecma is the best host for that work if they want actual web support. It might be challenging for WinterCG. I'd be interested to know what may not be working at W3C.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$5nDCSnEOKmVt2tnFw-hFd6-8PdJXvtenSZGgGOHzvLY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707244008066,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$nQWOgDaLX4c5YKoW288C_ENTidqIIWh6z8Xh56lYtNI"},
{"content":{"body":"Rob Palmer: Can you have someone check either the mic gain in the room, or the input level of the room microphones to Zoom? I had to increase my volume to hear, which means if any other remote attendee speaks it will probably be far too loud. I think this is the source of the static remote attendees are hearing too. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: Can you have someone check either the mic gain in the room, or the input level of the room microphones to Zoom? I had to increase my volume to hear, which means if any other remote attendee speaks it will probably be far too loud. I think this is the source of the static remote attendees are hearing too.","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"msgtype":"m.text"},"ts":1707244056085,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8eQLIBLmBCgfQUbOm2qmZeJ09a_Vn3LvaHhiPxCGNeM"},
{"content":{"body":"Zoom doesn't let me fine tune volume for volume for individual participants","m.mentions":{},"msgtype":"m.text"},"ts":1707244093402,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$EtmzpIpsNMSioyNGdfscI-21M9_Zl2Lgiss-PUMvt_s"},
{"content":{"body":"AV technicians have recommended rebooting the room.  We will do that at the break.","m.mentions":{},"msgtype":"m.text"},"ts":1707244244871,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$MFBMmrXC5ljo7bGLwerBR1StYK5CBDXng_7O-LlshRA"},
{"content":{"body":"they did consider a W3C WG but opted for an Ecma TC instead, but I don't know how the discussion went","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$5nDCSnEOKmVt2tnFw-hFd6-8PdJXvtenSZGgGOHzvLY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244256874,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ry4-InveTGiyfIfkMC5bHKiaqlQj4fzuVYVsNeD0Pk4"},
{"content":{"body":"it seems the full mics are much louder than the lapel mics... ?","m.mentions":{},"msgtype":"m.text"},"ts":1707244388669,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$RXcbA-Nf9FFIfBza9dMWeJazqvdlmKcP17bg2Cl14jg"},
{"content":{"body":"I truly hope they work towards inclusive Web support","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$ry4-InveTGiyfIfkMC5bHKiaqlQj4fzuVYVsNeD0Pk4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244415804,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$wU4AcmvyHZXJF-iS8nQ361CCnaWNBDFTNSEnegNiJlk"},
{"content":{"body":"lapel mics are highly directional","m.mentions":{},"msgtype":"m.text"},"ts":1707244484432,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$FDZx62bXcLxH_CLZzRQurl4l19qxGRljHJ905LsHtqQ"},
{"content":{"body":"gotta be careful to point it directly at your mouth","m.mentions":{},"msgtype":"m.text"},"ts":1707244493472,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$RQTGV0LrxewBYrEzKVqw8BFmyPGmZ9DLX7my2SLxODI"},
{"content":{"body":"yeah I think you just need to basically eat them","m.mentions":{},"msgtype":"m.text"},"ts":1707244504506,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SEEThw9OccVNpwdKUWva2lzJjKuPBWDC-RRctmC8_gk"},
{"content":{"body":"😋","m.mentions":{},"msgtype":"m.text"},"ts":1707244515277,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$_i4sVWNFaI3ODTWxBDrqMABCsxCPY-i3prJ815HsNf4"},
{"content":{"body":"who is the Zoom host?","m.mentions":{},"msgtype":"m.text"},"ts":1707244515676,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw"},
{"content":{"body":"i am","m.mentions":{},"m.relates_to":{"event_id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw","is_falling_back":true,"m.in_reply_to":{"event_id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244535160,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$ReWlrQauuzbCS2yu-veH1n4-q5uRwpvNP_XibF392bk"},
{"content":{"body":"i'm trying to join in prep for sharing slides at some point. it says waiting for host to let me in","m.mentions":{},"m.relates_to":{"event_id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw","is_falling_back":true,"m.in_reply_to":{"event_id":"$ReWlrQauuzbCS2yu-veH1n4-q5uRwpvNP_XibF392bk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244544946,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9pm0kazu6kZmX6PN3z56IOIKfCumLBecbdgihYxEk_g"},
{"content":{"body":"i'm in now, thank you very much","m.mentions":{},"m.relates_to":{"event_id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw","is_falling_back":true,"m.in_reply_to":{"event_id":"$9pm0kazu6kZmX6PN3z56IOIKfCumLBecbdgihYxEk_g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244606361,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZdCYVtCqyqohTrmBG_-qfKRWXeYXW_9jgNGxT3hl1l8"},
{"content":{"body":"done. sorry about the delay, we have a few co-hosts adimitting people","m.mentions":{},"m.relates_to":{"event_id":"$oK8KoQ0ynOY9iOy_IJUtL2a6RzQTQ_4GGrHFQz4R0sw","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZdCYVtCqyqohTrmBG_-qfKRWXeYXW_9jgNGxT3hl1l8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244622520,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$j0izEyQ3ETSLr26BxgNFXJpk6JgMeEmbykXSpF_2QF4"},
{"content":{"body":"Rod, Duncan, Chris, Ujjwal and I are Zoom hosts and we must let people into the Zoom.","m.mentions":{},"msgtype":"m.text"},"ts":1707244633595,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$j9K8ObJSqikmIpUbgHUwKrH9Blfx3li6uWFTY3Y8XIc"},
{"content":{"body":"you can change that setting","m.mentions":{},"m.relates_to":{"event_id":"$j9K8ObJSqikmIpUbgHUwKrH9Blfx3li6uWFTY3Y8XIc","is_falling_back":true,"m.in_reply_to":{"event_id":"$j9K8ObJSqikmIpUbgHUwKrH9Blfx3li6uWFTY3Y8XIc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244659794,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$llQ6_1TtlQDmSAva4xrpK_PcSZ-yBX-NWIh1psJcVD4"},
{"content":{"body":"assuming that's undesirable","m.mentions":{},"m.relates_to":{"event_id":"$j9K8ObJSqikmIpUbgHUwKrH9Blfx3li6uWFTY3Y8XIc","is_falling_back":true,"m.in_reply_to":{"event_id":"$llQ6_1TtlQDmSAva4xrpK_PcSZ-yBX-NWIh1psJcVD4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244672260,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$gQVMw0QrsJwKkfOpB6qCm4RdUUMeltahKVpenJ_Z3qQ"},
{"content":{"body":"sorry, we can't. company policy.","m.mentions":{},"m.relates_to":{"event_id":"$j9K8ObJSqikmIpUbgHUwKrH9Blfx3li6uWFTY3Y8XIc","is_falling_back":true,"m.in_reply_to":{"event_id":"$gQVMw0QrsJwKkfOpB6qCm4RdUUMeltahKVpenJ_Z3qQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707244818814,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$ulXMIQciL3X5c_wOSHeAfRpgdkxloVpl_kjAJVX9QAo"},
{"content":{"body":"rbuckton: i set the mics gain to the maximum, is it better?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i set the mics gain to the maximum, is it better?","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1707245389912,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$cxO7CcqAZ3S0twWkQ5ukgWVaeAa_pbdTG-0vzM9O7jU"},
{"content":{"body":"It still sounds very quiet.","m.mentions":{},"msgtype":"m.text"},"ts":1707245422800,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ktwKq8J8MtksO-N4eFFbtHgQMH5ovJgGXKb6lX8qizE"},
{"content":{"body":"I don't think that changed anything. ","m.mentions":{},"msgtype":"m.text"},"ts":1707245433061,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zpVKcjdn5-KXr6c-0wL7CARPXDjevsJBvPLlmNpAlIg"},
{"content":{"body":"should check if the mic itself has a knob on it","m.mentions":{},"msgtype":"m.text"},"ts":1707245454156,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$8v8HashlovCkuq7ykZwBmkNQZAU37S4EfoAE1whTgFE"},
{"content":{"body":"lapel mics should be hold closer to the mouth...\n\nbtw, i have an extra mic here","m.mentions":{},"msgtype":"m.text"},"ts":1707245508100,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$iJuyAFcJAldCZ5JUGbk4yQomNDftJfM7T40GmLpxepc"},
{"content":{"body":"Shu's volume sounds good.","m.mentions":{},"msgtype":"m.text"},"ts":1707245552686,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YvsotRMUOFCb7uspVtK6ZrJrK8oBBbsxS8dqMomeRWc"},
{"content":{"body":"shu has a big mic","m.mentions":{},"msgtype":"m.text"},"ts":1707245579802,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$BSlUc8QOLcTNtKIMNhm0Pk6nRjaA6EemMXA_hmSJVr4"},
{"content":{"body":"littledan: how do you think we should track addressing your feedback? do you want to open issues?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: how do you think we should track addressing your feedback? do you want to open issues?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707245597255,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Sc6Q2sng4-Wp0wwp9liXf1rkJj_3MRYkdhCZfFD-zgQ"},
{"content":{"body":"Michael Ficarra: if the outcome of your topic was consensus, add that to the notes? we currently lack a conclusion/summary","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: if the outcome of your topic was consensus, add that to the notes? we currently lack a conclusion/summary","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1707245638106,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SWkehw2HwH_u3e73ohX4lKyRwibfZSUIMOSJu_JRWoo"},
{"content":{"body":"okay","m.mentions":{},"msgtype":"m.text"},"ts":1707245650717,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vEWKdl_3M28ZiBsbnlE_VOnjigh8Zq7Phv_OUBMAUeY"},
{"content":{"body":"Was the microphone off when Dan Minor was speaking? I couldn't hear what was said.","m.mentions":{},"msgtype":"m.text"},"ts":1707246328640,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$J3lAs70pN-pVyc5jQDlfnM-U8xjOVJ3ITeREmKFZyLQ"},
{"content":{"body":"I also can't hear Rob","m.mentions":{},"msgtype":"m.text"},"ts":1707246333747,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$W8SEhpLwG4Q0P60ueem44b_nGljvYRY0zUHmZ-YuJig"},
{"content":{"body":"stage 2 or 2.7?","m.mentions":{},"msgtype":"m.text"},"ts":1707246350820,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VxBlBK8cwiOjLShJoban7fTyt5ap30GbrTpWsqhlDE8"},
{"content":{"body":"2","m.mentions":{},"msgtype":"m.text"},"ts":1707246372347,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AAW0cRhmlBGlSYGlTtEeqmAYUDZ75Gn10dDKQzsFYGU"},
{"content":{"body":"IMO process-wise we *should* be using stages for these kinds of things","format":"org.matrix.custom.html","formatted_body":"IMO process-wise we <em>should</em> be using stages for these kinds of things","m.mentions":{},"msgtype":"m.text"},"ts":1707246391080,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9kfuBgUGJ0m_mAYy1RMvZh6nmDpwdbydVUi-tgsbQfw"},
{"content":{"body":"sorry for jumping out of turn","m.mentions":{},"msgtype":"m.text"},"ts":1707246558560,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$D2kWM5H97aj0jpgSsW1crYDVkTA8mIaupaF5xpl0Txw"},
{"content":{"body":"littledan: thanks for handling that clarification","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: thanks for handling that clarification","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707246559890,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TLeWiSRscaPdBQvSmY5i5nJ67essQyB8azxvcWoXuyE"},
{"content":{"body":"no, I appreciated it!","m.mentions":{},"msgtype":"m.text"},"ts":1707246569229,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$r1Z6E4BcBxMCBdCYpJwlreVDPpqPl1d6UdX7UDj2YvA"},
{"content":{"body":"> <@rbuckton:matrix.org> Was the microphone off when Dan Minor was speaking? I couldn't hear what was said.\n\nThe microphone was on, but maybe I didn't hold it close enough. It's one of the lapel mikes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$J3lAs70pN-pVyc5jQDlfnM-U8xjOVJ3ITeREmKFZyLQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Was the microphone off when Dan Minor was speaking? I couldn&#39;t hear what was said.</blockquote></mx-reply>The microphone was on, but maybe I didn't hold it close enough. It's one of the lapel mikes.","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$J3lAs70pN-pVyc5jQDlfnM-U8xjOVJ3ITeREmKFZyLQ"}},"msgtype":"m.text"},"ts":1707246622443,"senderName":"dminor","senderId":"@dminor:mozilla.org","id":"$iO1YFf_btZVzDg45lKLU2ZmNEjAn_pEAiKTJ_yPNYuQ"},
{"content":{"body":"Could you hear Michael Saboff?","m.mentions":{},"msgtype":"m.text"},"ts":1707246654474,"senderName":"dminor","senderId":"@dminor:mozilla.org","id":"$cOKi96dJwQaOWsLZ8xKYNOFZ_MeEV7446IkHlVIY8dQ"},
{"content":{"body":"I *thought* I could hear myself on the room speaker.","format":"org.matrix.custom.html","formatted_body":"I <em>thought</em> I could hear myself on the room speaker.","m.mentions":{},"msgtype":"m.text"},"ts":1707246713190,"senderName":"dminor","senderId":"@dminor:mozilla.org","id":"$qB-Mf77n5gebOE8_JU-Yox0cj2i9faQOjFVjvpUzHOU"},
{"content":{"body":"should we do a tutorial on how to use a lav mic","m.mentions":{},"msgtype":"m.text"},"ts":1707246721890,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30"},
{"content":{"body":"It seems like the lapel mics are turned down or aren't balanced properly with the handheld mics? lapel mics should be able to pick up your voice from 5-6 inches away (i.e., as if clipped onto the lapel or collar).","m.mentions":{},"msgtype":"m.text"},"ts":1707246731983,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6IOTcyuLEJNN2h6L6fyofQhfsnS3DybRzPoRZQzKqMY"},
{"content":{"body":"I recall addressing the specific case of advancing directly from 2 to 3 when introducing stage 2.7","m.mentions":{},"msgtype":"m.text"},"ts":1707246768714,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1QwsS-eoE_fFYd3m9vs2h1a31hAPDU0nohnhdiRr2fE"},
{"content":{"body":"the correct way it to where it on your lapel","m.mentions":{},"m.relates_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30","is_falling_back":true,"m.in_reply_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707246808506,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$E5Iya_dKeaJM43R0w9dIwde2qmokYPa2LBUwSA2r7uE"},
{"content":{"body":" * the correct way it to wear it on your lapel","format":"org.matrix.custom.html","formatted_body":" * the correct way it to wear it on your lapel","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.new_content":{"body":"the correct way it to wear it on your lapel","format":"org.matrix.custom.html","formatted_body":"the correct way it to wear it on your lapel","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$E5Iya_dKeaJM43R0w9dIwde2qmokYPa2LBUwSA2r7uE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707246817336,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$61ESJRPAuhpivNdhapF7IRxgHouV3H8DFCHRprhn2v8"},
{"content":{"body":"We have no rules forbidding advancing multiple stages in one meeting.  No need to introduce one now.","m.mentions":{},"msgtype":"m.text"},"ts":1707246827370,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$k36g9TvBciNMt-JnIKBSXBq_ExnJB1PKKKzRbiXZAe4"},
{"content":{"body":"you can attach them to hats/wigs too","m.mentions":{},"m.relates_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30","is_falling_back":true,"m.in_reply_to":{"event_id":"$E5Iya_dKeaJM43R0w9dIwde2qmokYPa2LBUwSA2r7uE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707246897899,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$eI99m6FtgZTFsUXsQZZt9p80CgyA7zPCHCRBeJ29C5M"},
{"content":{"body":" * the correct way is to wear it on your lapel","format":"org.matrix.custom.html","formatted_body":" * the correct way is to wear it on your lapel","m.mentions":{},"m.new_content":{"body":"the correct way is to wear it on your lapel","format":"org.matrix.custom.html","formatted_body":"the correct way is to wear it on your lapel","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$E5Iya_dKeaJM43R0w9dIwde2qmokYPa2LBUwSA2r7uE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707246943632,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$352jNxXBkMpKOkll2ZsQulv3u0tbgsfzmnzPMLzSbR8"},
{"content":{"body":"apparently yes, since I keep picking it up and talking into the antenna","m.relates_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30","is_falling_back":true,"m.in_reply_to":{"event_id":"$eI99m6FtgZTFsUXsQZZt9p80CgyA7zPCHCRBeJ29C5M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247149186,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$PdLZxRoqk_jz40C9RaORQa7RsKoIMB0wxICy_90e5-s"},
{"content":{"body":"the battery pack?","m.mentions":{},"m.relates_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30","is_falling_back":true,"m.in_reply_to":{"event_id":"$PdLZxRoqk_jz40C9RaORQa7RsKoIMB0wxICy_90e5-s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247323490,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cS8fBI7ZaCBrRQZ5coSEui1GhLONyYdYWKvqegkNwm0"},
{"content":{"body":"I am so happy the process document rewording was merged today","m.mentions":{},"msgtype":"m.text"},"ts":1707247374192,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VRESWHUyYRFXJD6kKOc65TyrBLN7XxojMCEklU3UHfQ"},
{"content":{"body":"it's great that you put so much work into clarifying things here!","m.mentions":{},"msgtype":"m.text"},"ts":1707247401547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NIyw65ff4kIQr0NqgTZatPZR9VarDDuoR_CvLZQE4tg"},
{"content":{"body":"😀 thanks","m.mentions":{},"msgtype":"m.text"},"ts":1707247436305,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lfn0_0tzFWZVRjMp9Z3cz8ZwkPjDz5qh6rx0q5CDBow"},
{"content":{"body":"the way we communicate, especially to the community, about our process is important","m.mentions":{},"msgtype":"m.text"},"ts":1707247449397,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$azuf3U33Xrj-ylhrxkjwcNiH3y9dItlbFhDSPfTPR7k"},
{"content":{"body":"I'm really happy about the shape of the API--it's a really intuitive extension","m.mentions":{},"msgtype":"m.text"},"ts":1707247582606,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zQVp7u2ONHOxFp8ep1t_7RmHc6b-krhLW6ptfBmZPrE"},
{"content":{"body":" * I'm really happy about the shape of the API for iterator sequencing--it's a really intuitive extension","m.mentions":{},"m.new_content":{"body":"I'm really happy about the shape of the API for iterator sequencing--it's a really intuitive extension","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$zQVp7u2ONHOxFp8ep1t_7RmHc6b-krhLW6ptfBmZPrE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707247591764,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XauCrQpPsGxCSm6ixcjunkMN0tdFy_ge4OJYF2IzXQQ"},
{"content":{"body":"The discussion was on an open GitHub thread + in recorded meetings and open WinterCG Matrix chats","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$wU4AcmvyHZXJF-iS8nQ361CCnaWNBDFTNSEnegNiJlk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247644834,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Fs_wZEWfTCeC-KvxPDE4ytANhpQb4Ie5vCSrsoynjUw"},
{"content":{"body":"it took place over many months","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$Fs_wZEWfTCeC-KvxPDE4ytANhpQb4Ie5vCSrsoynjUw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247654091,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h0BYXx1BkEA8KIuST3fiZ4i9JU488WGuBE6rnCCLZJA"},
{"content":{"body":"if put on the lapel it would be even quieter...","m.mentions":{},"m.relates_to":{"event_id":"$NuZKgDzCJNI-8aV2l00FZunWgFU073Ca6hJIZju4y30","is_falling_back":true,"m.in_reply_to":{"event_id":"$cS8fBI7ZaCBrRQZ5coSEui1GhLONyYdYWKvqegkNwm0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247657055,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$glh_eRvq2eFnKdWXyEaIKa2cGmHxhejQJb15YIElZyE"},
{"content":{"body":"there will definitely be interaction with W3C, and technical development will continue to be in the W3C CG","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$h0BYXx1BkEA8KIuST3fiZ4i9JU488WGuBE6rnCCLZJA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247675873,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qqabdHafI4PPaFc-frkBS7_L9C5b1Fgxg-QmDA_O-BI"},
{"content":{"body":"To summarize: Ecma is a very lightweight and agile place to publish a standard. Personally, I know how to work us through Ecma's processes. I understand W3C's process to involve a bunch of convincing people to approve a charter, repeatedly, which I don't feel like doing.","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$qqabdHafI4PPaFc-frkBS7_L9C5b1Fgxg-QmDA_O-BI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247750574,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zeLxjTbGN7U7tYHSWPHzDBh5lWrxT0X6LJ6ho5Ae1dE"},
{"content":{"body":"See this thread: https://github.com/wintercg/admin/issues/58","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$zeLxjTbGN7U7tYHSWPHzDBh5lWrxT0X6LJ6ho5Ae1dE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247783838,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OI2BYxuyiHJGqnH7rG55hN2Z3_jFjYtNtAahNfD2xHU"},
{"content":{"body":"Ecma is just an equally legitimate place to do work, and we will work to accommodate collaboration with everyone who wants to get involved","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$OI2BYxuyiHJGqnH7rG55hN2Z3_jFjYtNtAahNfD2xHU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247871564,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-xHuchknjkJWcwNYI20JbTNWaFKHtC3j1QHUQCvgAzE"},
{"content":{"body":"there's no consistent layering separation between Ecma and W3C 😄","m.mentions":{},"m.relates_to":{"event_id":"$cidqLs_Bito60teriDspdYlZId0gCGuIcHm8ZhQcsiw","is_falling_back":true,"m.in_reply_to":{"event_id":"$-xHuchknjkJWcwNYI20JbTNWaFKHtC3j1QHUQCvgAzE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707247894711,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bNjxQTOb8FRkPuvQARyZwU9K8ciyO8TwzvgXlEZa2kk"},
{"content":{"body":"rust Iterator.flatten: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten\nresults in GH code search: https://github.com/search?q=.flat%28+language%3ARust+&type=code","m.mentions":{},"msgtype":"m.text"},"ts":1707248078441,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$KvBeALMMu7tyZuv33Yi2bVW4Mr21JmOEmYSW7WI2miw"},
{"content":{"body":"variadic `Iterator.append` sounds great to me","format":"org.matrix.custom.html","formatted_body":"variadic <code>Iterator.append</code> sounds great to me","m.mentions":{},"msgtype":"m.text"},"ts":1707248282480,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8sRo08Zy09OCHfrG5z-dQZHP2kxZUGUfhiG-p2MtH78"},
{"content":{"body":"`distinct()` is essentially `distinctBy(x => x)`","format":"org.matrix.custom.html","formatted_body":"<code>distinct()</code> is essentially <code>distinctBy(x =&gt; x)</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707248472898,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$QK24NRQt51mb2Roo4oT7JxKPbp4eEiq38ec_z11MEVE"},
{"content":{"body":"I have a preference for comparator. Not every thing you would want to compare can be mapped into a natively comparable key.","m.mentions":{},"msgtype":"m.text"},"ts":1707248633316,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0_ERNhYINweH7TQkAwnZMOEXmKWJUNeN0_VZoVkqmfo"},
{"content":{"body":"doesn't the comparator require quadratic time instead of nlog(n)?","m.mentions":{},"msgtype":"m.text"},"ts":1707248669767,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Vf9uGNf5E4sxkklRSwpa0YGD1VPqliqfo7xEgl5_X-U"},
{"content":{"body":"a comparator of `(a, b) => boolean` isn't efficient, but a comparator of `{ equals(a, b), hash(a) }` is more efficient","format":"org.matrix.custom.html","formatted_body":"a comparator of <code>(a, b) =&gt; boolean</code> isn't efficient, but a comparator of <code>{ equals(a, b), hash(a) }</code> is more efficient","m.mentions":{},"msgtype":"m.text"},"ts":1707248720625,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$U1tuYrgEsPu33p-o93ZeqgzQafyoadtKRtim8qA6qU0"},
{"content":{"body":"about R&T: Sorry for it being stalled. Expect to see an update in committee some time this year.","m.mentions":{},"msgtype":"m.text"},"ts":1707248759801,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vPOkazc-SwRLtQR4JFl-CEySmc-r0P0Y5FREIy6ndKs"},
{"content":{"body":"Given the way `groupBy` works, along with the most straightforward userland implementation using a `Set`, it is hard for me to imagine something more complex than a mapper.","format":"org.matrix.custom.html","formatted_body":"Given the way <code>groupBy</code> works, along with the most straightforward userland implementation using a <code>Set</code>, it is hard for me to imagine something more complex than a mapper.","m.mentions":{},"msgtype":"m.text"},"ts":1707248891844,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$OykUKfem_huE6TcvZiUvrqiwJYkPrgWtTJu9kGlINv4"},
{"content":{"body":"let me rephrase - I can imagine it, but I am drawn to the mapper :)","m.mentions":{},"msgtype":"m.text"},"ts":1707248973271,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$v7n6hJAZNWSoD10OdLRrskgjTrB9aZYr-POxwXjdFhM"},
{"content":{"body":"rbuckton: Wait, how is that better than quadratic, still? Pairing a mapper with the comparator is *also* good for reducing the work in the comparator, but you still end up needing to compare everything to everything, no?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Wait, how is that better than quadratic, still? Pairing a mapper with the comparator is <em>also</em> good for reducing the work in the comparator, but you still end up needing to compare everything to everything, no?","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1707249019979,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$vEttahqdH4lAOZ6EqKjSMQooos5Esgb6BxuGkUuPS1U"},
{"content":{"body":"no, you make a hash set internally","m.mentions":{},"msgtype":"m.text"},"ts":1707249031912,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ALPFHGfmynXHBWsXGoraBCvuzCK-WZSQHbV4MFW5PH0"},
{"content":{"body":"I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":"<p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1707249037403,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$w1nHay2dWGJp0Ux3AFJoMZ0s0Vxv5YmtxeZe7ulSqTI"},
{"content":{"body":"Or are you imagining you only compare things that hash equal?","m.mentions":{},"msgtype":"m.text"},"ts":1707249038218,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Snw9wD4eEy5Pd7vYiT8UHjBYrF_HOxAus2p3pjlZ0Ws"},
{"content":{"body":" * I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":" * <p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":"<p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tif (!set.has(val) {\n\t\t\tset.add(val);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w1nHay2dWGJp0Ux3AFJoMZ0s0Vxv5YmtxeZe7ulSqTI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707249047696,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$qHg6nGZlcy6o0Q8ypWwB0A30u12-7yQ1Jbc1a1pNYJY"},
{"content":{"body":"the mapper would compare with `===` or possibly `Object.is`, so yes, you only compare things that hash equal","format":"org.matrix.custom.html","formatted_body":"the mapper would compare with <code>===</code> or possibly <code>Object.is</code>, so yes, you only compare things that hash equal","m.mentions":{},"msgtype":"m.text"},"ts":1707249066911,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tvSZEeTus96KzFfxQEv4wKqWiRx1jFssIdq06mUT6Hw"},
{"content":{"body":" * I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":" * <p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":"<p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w1nHay2dWGJp0Ux3AFJoMZ0s0Vxv5YmtxeZe7ulSqTI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707249067398,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$csuGeZvUdXwhpv3pK4lwlwUG83BRAf5lGyCkOFo7WRw"},
{"content":{"body":"i.e. the thing luca wrote","m.mentions":{},"msgtype":"m.text"},"ts":1707249075091,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X1pbn34JwIS_MRY_4x_eX4dccTtys1BiHRc6UCQcq-w"},
{"content":{"body":" * the mapper would compare with `===` [modulo NaN] or possibly `Object.is`, so yes, you only compare things that hash equal","format":"org.matrix.custom.html","formatted_body":" * the mapper would compare with <code>===</code> [modulo NaN] or possibly <code>Object.is</code>, so yes, you only compare things that hash equal","m.mentions":{},"m.new_content":{"body":"the mapper would compare with `===` [modulo NaN] or possibly `Object.is`, so yes, you only compare things that hash equal","format":"org.matrix.custom.html","formatted_body":"the mapper would compare with <code>===</code> [modulo NaN] or possibly <code>Object.is</code>, so yes, you only compare things that hash equal","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$tvSZEeTus96KzFfxQEv4wKqWiRx1jFssIdq06mUT6Hw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707249091392,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pSoHqOPWAyt-0EGkU-zN9GK_FgZidEP209-fiQpFcD0"},
{"content":{"body":" * I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped)) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":" * <p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped)) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:\n\n```\nfunction* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped)) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n```","format":"org.matrix.custom.html","formatted_body":"<p>I agree - a userland polyfill of this is trivial with a mapper, but less so with a comparator:</p>\n<pre><code>function* distinct(iter, map) {\n\tconst set = new Set();\n\tfor (const val of iter) {\n\t\tconst mapped = map(val); \t\n\t\tif (!set.has(mapped)) {\n\t\t\tset.add(mapped);\n\t\t\tyield val;\n\t\t}\n\t}\n}\n\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w1nHay2dWGJp0Ux3AFJoMZ0s0Vxv5YmtxeZe7ulSqTI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707249096576,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$iHKSFV188bdnluMGVsu67Nj9uza_BDdfCgYVX6lkrOs"},
{"content":{"body":"Examples of an equality comparator: https://esfx.js.org/esfx/api/equatable/equaler-interface.html#_esfx_equatable_Equaler_interface\nAnd its usage: https://esfx.js.org/esfx/api/collections-hashset/hashset.html#_esfx_collections_hashset_HashSet_class\n\nThis is essentially what implementations do under the covers for `Map`/`Set` anyways.","format":"org.matrix.custom.html","formatted_body":"<p>Examples of an equality comparator: https://esfx.js.org/esfx/api/equatable/equaler-interface.html#_esfx_equatable_Equaler_interface<br>And its usage: https://esfx.js.org/esfx/api/collections-hashset/hashset.html#_esfx_collections_hashset_HashSet_class</p>\n<p>This is essentially what implementations do under the covers for <code>Map</code>/<code>Set</code> anyways.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1707249098477,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8iUWr_kHH9KJcuGOcotpW_DnvhG0S5M-XZPN2XU2LBw"},
{"content":{"body":"one of these days we should do System.hash(value)","m.mentions":{},"msgtype":"m.text"},"ts":1707249114818,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI"},
{"content":{"body":"i thought shitposts go in TDZ :-p","m.mentions":{},"m.relates_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI","is_falling_back":true,"m.in_reply_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707249148974,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DYnw5Ph5DvbDsukXz0dCSjj_G6c3kYGGMWbtbPEmLKU"},
{"content":{"body":"this isn't a shitpost :(","m.mentions":{},"m.relates_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI","is_falling_back":true,"m.in_reply_to":{"event_id":"$DYnw5Ph5DvbDsukXz0dCSjj_G6c3kYGGMWbtbPEmLKU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707249165047,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$n1WT_C2vx50xGWh_WygbQxU-D6UGJNqkWkKKy4cCA0E"},
{"content":{"body":"> <@devsnek:matrix.org> one of these days we should do System.hash(value)\n\nHonestly, I'd love to have that. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>one of these days we should do System.hash(value)</blockquote></mx-reply>Honestly, I'd love to have that.","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI"}},"msgtype":"m.text"},"ts":1707249168548,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$d4VHTUiFKOdeO_ntkGt3LJ_MAfKvxHJYtrwQ1FwZxl4"},
{"content":{"body":"ah, there's tons of stuff on es-discuss from back in the day on why it's not an option, iirc","m.mentions":{},"m.relates_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI","is_falling_back":true,"m.in_reply_to":{"event_id":"$n1WT_C2vx50xGWh_WygbQxU-D6UGJNqkWkKKy4cCA0E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707249235367,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dsD1kH0nRemyXDhSyPO9YQQ5ssa0ifLz8QpxWBkXjtY"},
{"content":{"body":"altho maybe WeakRef and FinalizationRegistry changes the landscape there, not sure","m.mentions":{},"m.relates_to":{"event_id":"$QLvRbnhgy1j6APYKbTY2xnRcGumPsjcNBt4VJbyOiyI","is_falling_back":true,"m.in_reply_to":{"event_id":"$dsD1kH0nRemyXDhSyPO9YQQ5ssa0ifLz8QpxWBkXjtY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707249255233,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WU8x_KYRz4xW1xsRDa_UKvImM0BdutXFeJZdLE2UngA"},
{"content":{"body":"For some objects, its inefficient to convert the object into an existing comparable thing, or possibly even impossible to do so.","m.mentions":{},"msgtype":"m.text"},"ts":1707249261781,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Skmd7NNdBFzOjBKblgMdzRmeMt5OlaxtJmzLuNg5_O8"},
{"content":{"body":"A mapper seems more efficient when you only consider the comparison algorithm, but doesn't consider the cost of the actual `mapper` call. You are paying for both the comparison *and* serialization into a comparable format.","format":"org.matrix.custom.html","formatted_body":"A mapper seems more efficient when you only consider the comparison algorithm, but doesn't consider the cost of the actual <code>mapper</code> call. You are paying for both the comparison <em>and</em> serialization into a comparable format.","m.mentions":{},"msgtype":"m.text"},"ts":1707249361027,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$E_34hfQvFha-WFqLpaRcbZtQiNAPrD0LvBhLL1IfKGs"},
{"content":{"body":"An `{ equals(a, b), hash(v) }` comparator uses the object as-is and requires no serialization.","format":"org.matrix.custom.html","formatted_body":"An <code>{ equals(a, b), hash(v) }</code> comparator uses the object as-is and requires no serialization.","m.mentions":{},"msgtype":"m.text"},"ts":1707249395110,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Ead8Y8fe0D6uBpExv-z3iPvVYls7RQDOD51IZ2mL3qE"},
{"content":{"body":"> <@rbuckton:matrix.org> For some objects, its inefficient to convert the object into an existing comparable thing, or possibly even impossible to do so.\n\nWhat if we had something like https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Skmd7NNdBFzOjBKblgMdzRmeMt5OlaxtJmzLuNg5_O8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>For some objects, its inefficient to convert the object into an existing comparable thing, or possibly even impossible to do so.</blockquote></mx-reply>What if we had something like https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey?","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Skmd7NNdBFzOjBKblgMdzRmeMt5OlaxtJmzLuNg5_O8"}},"msgtype":"m.text"},"ts":1707249402818,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Wdo1VT3HK7gL2bv-0ycp6_plOUlcWddISirPXUVLo58"},
{"content":{"body":"you can't build custom collection types without something like hash","m.mentions":{},"msgtype":"m.text"},"ts":1707249448353,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$aL9nnQCuJWTsmdscFi6EIFupTv416IDSwpkJ_TwU7L4"},
{"content":{"body":"Maybe cheaper than serializing into a string, but you are still allocating a wrapper and stuffing values into it purely for comparison.","m.mentions":{},"msgtype":"m.text"},"ts":1707249452597,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jk7LXiMFMxJrRfW7xW1oy-z9jFWeixeSDqZDS6DtfHI"},
{"content":{"body":"Implementations are already using hash-based comparators for JS collections internally. ","m.mentions":{},"msgtype":"m.text"},"ts":1707249536888,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CsEHCW4WGgbvJJmP8h1HyIkbf1-02PP3-qwOlAAAg3k"},
{"content":{"body":"> <@devsnek:matrix.org> you can't build custom collection types without something like hash\n\nThough, a sufficient `hash` can be shimmed.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aL9nnQCuJWTsmdscFi6EIFupTv416IDSwpkJ_TwU7L4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>you can&#39;t build custom collection types without something like hash</blockquote></mx-reply>Though, a sufficient <code>hash</code> can be shimmed.","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aL9nnQCuJWTsmdscFi6EIFupTv416IDSwpkJ_TwU7L4"}},"msgtype":"m.text"},"ts":1707249557212,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$aXpipEV008F7okQW_eZNM1Fry-vXM-S7WYnNsNw0h7E"},
{"content":{"body":"a performant one?","m.mentions":{},"msgtype":"m.text"},"ts":1707249572010,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$GCEGWUbrZkwCdK-V--_wJHI6R9a2xius4Vu2PXgHAek"},
{"content":{"body":"> <@kriskowal:matrix.org> Though, a sufficient `hash` can be shimmed.\n\nNot a performant one.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aXpipEV008F7okQW_eZNM1Fry-vXM-S7WYnNsNw0h7E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Though, a sufficient <code>hash</code> can be shimmed.</blockquote></mx-reply>Not a performant one.","m.mentions":{"user_ids":["@kriskowal:matrix.org","@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aXpipEV008F7okQW_eZNM1Fry-vXM-S7WYnNsNw0h7E"}},"msgtype":"m.text"},"ts":1707249576763,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$UZ3Gd9DIl6yn9hLKoAH9vMOZSIOjxTbqK17_1k7maao"},
{"content":{"body":"yea ok","m.mentions":{},"msgtype":"m.text"},"ts":1707249583778,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$ullzuMfI1G8380mEgG_NK7vG0mZZLTirRoqVik4_844"},
{"content":{"body":"https://esfx.js.org/esfx/api/equatable.html#_esfx_equatable_rawHash_function_1_ is a `Object.hash(v)` like thing, but it has a lot of workarounds.","format":"org.matrix.custom.html","formatted_body":"https://esfx.js.org/esfx/api/equatable.html#_esfx_equatable_rawHash_function_1_ is a <code>Object.hash(v)</code> like thing, but it has a lot of workarounds.","m.mentions":{},"msgtype":"m.text"},"ts":1707249604648,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lEgqYvZDcNzI1OUIKESpsmFj6Ul2t8sedJaiJPYO95c"},
{"content":{"body":"I have to implement a string hashing algorithm for strings, and use weak maps for objects.","m.mentions":{},"msgtype":"m.text"},"ts":1707249617763,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LrCdUSmOfEMlwhduaZoEZa5dqFrckxqIBF9PQRfvpvc"},
{"content":{"body":"Or use NAPI and V8 internals.","m.mentions":{},"msgtype":"m.text"},"ts":1707249672152,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Vet0QbRA78TGakoY2Q-VU8jH5CIM5lNXBFy5RgULDt8"},
{"content":{"body":"wow this esfx repo is pure spaghetti ","m.mentions":{},"msgtype":"m.text"},"ts":1707249673362,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$7IglK7BnDwPNZ3WuiaDYIhXAxp29hFpqS2D1tdDSaXw"},
{"content":{"body":"> <@devsnek:matrix.org> wow this esfx repo is pure spaghetti\n\nIt's a bunch of individual building blocks.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7IglK7BnDwPNZ3WuiaDYIhXAxp29hFpqS2D1tdDSaXw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>wow this esfx repo is pure spaghetti </blockquote></mx-reply>It's a bunch of individual building blocks.","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7IglK7BnDwPNZ3WuiaDYIhXAxp29hFpqS2D1tdDSaXw"}},"msgtype":"m.text"},"ts":1707249714208,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ACrSqfPESLBuj1Bx23N-BNVZKpy20H1NUVbUAdZ3oEY"},
{"content":{"body":"ok so this depends on a native module","m.mentions":{},"msgtype":"m.text"},"ts":1707249730654,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$SDBCqSNNlYuQCz6IIg4ltjpNg0Pp8pwVyjKbQrShNyI"},
{"content":{"body":"We already have the Array unique proposal: https://github.com/tc39/proposal-array-unique","m.mentions":{},"msgtype":"m.text"},"ts":1707249753269,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$mhSm95VsvovAhBEYbJAqD8rKE_ik9rQgWS64oaQFog4"},
{"content":{"body":"> <@devsnek:matrix.org> ok so this depends on a native module\n\nDepends on environment. I have various fallbacks to support Node native, WASM, and pure JS implementations of hashing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SDBCqSNNlYuQCz6IIg4ltjpNg0Pp8pwVyjKbQrShNyI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>ok so this depends on a native module</blockquote></mx-reply>Depends on environment. I have various fallbacks to support Node native, WASM, and pure JS implementations of hashing","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SDBCqSNNlYuQCz6IIg4ltjpNg0Pp8pwVyjKbQrShNyI"}},"msgtype":"m.text"},"ts":1707249768513,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9D1u0WejSJunVU_pN3ccRSlZTpmx6RQPHp2Lzzez-gc"},
{"content":{"body":"> <@haxjs:matrix.org> We already have the Array unique proposal: https://github.com/tc39/proposal-array-unique\n\ntrue, this seems like it would subsume it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mhSm95VsvovAhBEYbJAqD8rKE_ik9rQgWS64oaQFog4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>We already have the Array unique proposal: https://github.com/tc39/proposal-array-unique</blockquote></mx-reply>true, this seems like it would subsume it","m.mentions":{"user_ids":["@haxjs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mhSm95VsvovAhBEYbJAqD8rKE_ik9rQgWS64oaQFog4"}},"msgtype":"m.text"},"ts":1707249806359,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nh9hf9vxmfAobSLRJnhXiVl_MqsQ7mHMKV273oXRsZM"},
{"content":{"body":"and goes to `GetIdentityHash` in v8","format":"org.matrix.custom.html","formatted_body":"and goes to <code>GetIdentityHash</code> in v8","m.mentions":{},"msgtype":"m.text"},"ts":1707249811521,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$iaQYyBO6fkpffoZNytS4G_9yfkQ_N3UdYY83tzftzAs"},
{"content":{"body":"this is what i wanna expose 🥲","m.mentions":{},"msgtype":"m.text"},"ts":1707249820532,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$BbO7eOGdQsQ69AsvgvLcWJVmDKVQNCBjyChFaXEjdnc"},
{"content":{"body":"I’m pretty sure the party line at Agoric for exposing such a `hash` is “no” because we care about determinism and enabling as much of the JavaScript ecosystem to continue to work in a deterministic virtualization.","format":"org.matrix.custom.html","formatted_body":"I’m pretty sure the party line at Agoric for exposing such a <code>hash</code> is “no” because we care about determinism and enabling as much of the JavaScript ecosystem to continue to work in a deterministic virtualization.","m.mentions":{},"msgtype":"m.text"},"ts":1707250082006,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bsp6cUcdafgP9qv8sJ9cU4pvPiHaFfe7arqMYSHp-ZU"},
{"content":{"body":"And regardless of our interests, those identity hashes are going to have to pay a price to not reveal memory layout. Thankfully, Go tells us about how to abuse AES machine instructions.","m.mentions":{},"msgtype":"m.text"},"ts":1707250153290,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$CU19yB5Fq9D_LYlSRtyb45HIWKq3SoGHY6P7qSfTRvU"},
{"content":{"body":"`{ equals(a, b), hash(v) }` would require no serialization, nor extra allocations in the form of a composite key. Most implementations of `hash` are just bitwise math on 32-bit integers, and we would have roughly the same efficiency that `Map` or `Set` already has since it already uses a similar mechanism.","format":"org.matrix.custom.html","formatted_body":"<code>{ equals(a, b), hash(v) }</code> would require no serialization, nor extra allocations in the form of a composite key. Most implementations of <code>hash</code> are just bitwise math on 32-bit integers, and we would have roughly the same efficiency that <code>Map</code> or <code>Set</code> already has since it already uses a similar mechanism.","m.mentions":{},"msgtype":"m.text"},"ts":1707250155082,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ObdyzSbIIU1iDdUOmRchU3rR7kYzrIBULFmGfiYMbhI"},
{"content":{"body":"Maybe an engine VM implementer can tell us about whether there exists an immutable value for every string that can safely reveal an identity.","m.mentions":{},"msgtype":"m.text"},"ts":1707250253769,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$tZFINWrHLD8DSQwEBnHXUTyFIyIbu87YUGWpnbHYPzY"},
{"content":{"body":"In my experience, its a bad idea to depend on determinism for non-cryptographic hashes, except within the same process. Many string hashing algorithms generate a random seed value when they're first used.","m.mentions":{},"msgtype":"m.text"},"ts":1707250262711,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$X2K1cZHYcjLHSSrehrR4sKdZLx2vv-0rofMDuVnJ-uc"},
{"content":{"body":"One that doesn’t require a content address, that is.","m.mentions":{},"msgtype":"m.text"},"ts":1707250268270,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$w1kyBpbKo-fPxB9EOttv6BOq-u-ZbSkSc5GqM594XSI"},
{"content":{"body":"> <@kriskowal:matrix.org> Maybe an engine VM implementer can tell us about whether there exists an immutable value for every string that can safely reveal an identity.\n\nString hashing usually isn't by address, its usually by algorithm. Addresses generally don't have good avalanche qualities, making them bad for hash table keys","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tZFINWrHLD8DSQwEBnHXUTyFIyIbu87YUGWpnbHYPzY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Maybe an engine VM implementer can tell us about whether there exists an immutable value for every string that can safely reveal an identity.</blockquote></mx-reply>String hashing usually isn't by address, its usually by algorithm. Addresses generally don't have good avalanche qualities, making them bad for hash table keys","m.mentions":{"user_ids":["@kriskowal:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tZFINWrHLD8DSQwEBnHXUTyFIyIbu87YUGWpnbHYPzY"}},"msgtype":"m.text"},"ts":1707250300113,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-epBK6WJh7j4JG8wyqe0IIuIfXOwU-qjGSUmpksyaSs"},
{"content":{"body":"For example, the esfx project I mentioned above uses XXHash64 to generate a non-cryptographic hash with good avalanche properties.","m.mentions":{},"msgtype":"m.text"},"ts":1707250347984,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$30fLMigR7QBWjMw3G-OqB395CPz-tcsz67BdksCGU60"},
{"content":{"body":"Object identity tends to be the area of concern, as you don't want to expose the address when determining identity. ","m.mentions":{},"msgtype":"m.text"},"ts":1707250423200,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ejzJX23zQXPYia0SLLUv9_0AfAYV_D6ssW6nfMqTMYw"},
{"content":{"body":"So you either use something like a monotonically increasing integer for each object allocated, or use a random number and just be aware that there could be collisions.","m.mentions":{},"msgtype":"m.text"},"ts":1707250606539,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tSNYvjACMHeCfHHYYWaBWgW_Gzlvqh8RLd3lTdSTKe4"},
{"content":{"body":"Or objects all have the same hash value (`0`), and you expect the end user to implement `{ hash(v) }` on the comparator if they want efficiency.","format":"org.matrix.custom.html","formatted_body":"Or objects all have the same hash value (<code>0</code>), and you expect the end user to implement <code>{ hash(v) }</code> on the comparator if they want efficiency.","m.mentions":{},"msgtype":"m.text"},"ts":1707250651577,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BN1yCGSV8jiwNxG3YZjAKRIwVH9-RrBdgpmXiiOBTt4"},
{"content":{"body":"Also, a composite key doesn't help if you want to compare strings with a different sensitivity, as you would need to normalize the string and that's not entirely reliable.","m.mentions":{},"msgtype":"m.text"},"ts":1707251079177,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$yvOUSF3wCZ1nF3oNuqMW_odSWtdwv0jeccshEeRgSOg"},
{"content":{"body":"You can avoid a lot of comparator work, too, if we just exposed a composite key structure that sorts lexicographically. Python leans on `key=` returning a tuple a *lot*.","format":"org.matrix.custom.html","formatted_body":"You can avoid a lot of comparator work, too, if we just exposed a composite key structure that sorts lexicographically. Python leans on <code>key=</code> returning a tuple a <em>lot</em>.","m.mentions":{},"msgtype":"m.text"},"ts":1707251089818,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$WCY5UGhw6DyZSFThGiZSFgj3h4GrjXl_Wp8pZ20wqWs"},
{"content":{"body":"oh lol, colliding composite key opinions","m.mentions":{},"msgtype":"m.text"},"ts":1707251101581,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$loxA_1kXQ7Ya9UFfiFwiUJn_PSv5E0x0Ia3jGD3sZJI"},
{"content":{"body":"yeah, normalization being unreliable or expensive is the big thing that pushes toward a comparator.","m.mentions":{},"msgtype":"m.text"},"ts":1707251137057,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$QNdm4Oaf4JZMbwijtmXBsrzctp54s7wTm2jtIFPRmWU"},
{"content":{"body":"I don't expect most developers are regularly thinking about unicode case folding or the pitfalls of normalizing Turkish ı/İ or German ß. `Intl.Collator` exists for a reason.","format":"org.matrix.custom.html","formatted_body":"I don't expect most developers are regularly thinking about unicode case folding or the pitfalls of normalizing Turkish ı/İ or German ß. <code>Intl.Collator</code> exists for a reason.","m.mentions":{},"msgtype":"m.text"},"ts":1707251387376,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$AvNoIVwT6J6s4wUudHfTZW4VO6CAepbqdwRkpLdStM0"},
{"content":{"body":"A comparator does not preclude the use of a composite key. It means that users can craft their own composite keys, or leverage a shared one that is coupled with an existing comparator it's paired with.","m.mentions":{},"msgtype":"m.text"},"ts":1707251558913,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$EBEdJuk8THS4Hj8A8wb2KPg4g0lm5SKVWGtwtUnXSik"},
{"content":{"body":" 📢📢📢 all, please note: significant updates to the schedule, as we have freed up time.  all overflow topics are now accounted for, but topics have moved, in some cases to a different day","m.mentions":{},"msgtype":"m.text"},"ts":1707253167161,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$XU9v-pQ5GZFIe2LCZfmSGmKyWavLipfI3jvksKzzHIA"},
{"content":{"body":"TCQ is still in the process of being updated, but the schedule is the source of truth atm","m.mentions":{},"msgtype":"m.text"},"ts":1707253192324,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$HMjYrhc3wVSvJa2qiGOFeIacDVwD_Xp21Dh4R7tqERU"},
{"content":{"body":"We believe we have solved the audio issues with remote participants hearing in-room folk using lapel mics by increasing the gain on the lapel units.  Please say if you still hear poor/quiet audio.","m.mentions":{},"msgtype":"m.text"},"ts":1707253621667,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$i8ne0MkQRW1w4jDhQJTH_WZCSVWmsBZwyyh0YNUAd5s"},
{"content":{"body":"we don't pick winners in TC39","m.mentions":{},"msgtype":"m.text"},"ts":1707253890065,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eJpZ6iGb-e_dKeACNQwVRpUkkNeuLk-jS3FDoy2NMXw"},
{"content":{"body":"we \"pave the cowpath\"","m.mentions":{},"msgtype":"m.text"},"ts":1707253933455,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SQC1XqzkCa4ypk751ORtKGSzaoyce64Xusuzya9ibWE"},
{"content":{"body":"I think the idea instead is that the option we're picking would most likely become the winner","m.mentions":{},"msgtype":"m.text"},"ts":1707253958090,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$LHqVRlMHWQltaDxU0e7wFIXOXOtwg6L0Tpg4ir6Hv1g"},
{"content":{"body":"due to the sheer pervasiveness of JS","m.mentions":{},"msgtype":"m.text"},"ts":1707253970474,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$PEVrjeddbT46ZqUqmnWbUgEF1D-8JQ3x8ovEuNBAmcY"},
{"content":{"body":"but that's not the whole story, obviously","m.mentions":{},"msgtype":"m.text"},"ts":1707253983400,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rJrGkCyBM5CWj43idRJc-wKVKPdBypOBZgW-WmUQiNc"},
{"content":{"body":"I think you two are saying the same thing, with 'pave the cowpath'?","msgtype":"m.text"},"ts":1707253998408,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$RPblmwb77aCyeGmtWVdihEkNejykvTjV6KJjapm_9fU"},
{"content":{"body":"there's the fact that ICU, which is the de-facto i18n library off the web is heavily involved","m.mentions":{},"msgtype":"m.text"},"ts":1707254024724,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$pfAN3J8wCEHjkqoQ-byra-Ri3mukiloWrVBV2xB3dHM"},
{"content":{"body":"\"if we build it, they will come\" is the exact opposite of \"pave the cowpath\"","m.mentions":{},"msgtype":"m.text"},"ts":1707254025799,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nYBDLlveGQnQPkG1SVHTWtJCmu6ShsUndiHXQGWW3rw"},
{"content":{"body":"yeah...","m.mentions":{},"msgtype":"m.text"},"ts":1707254090375,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OOLUqzzTUPkt56VjG6oIHvOlxFnqfO97W1WzC-ZEaMQ"},
{"content":{"body":"my employer would happily rewrite all of our translations for whatever is done here as long as it isn't completely outlandish ","m.mentions":{},"msgtype":"m.text"},"ts":1707254234141,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Izw76ue1cwVPiRYP12wC4k_2MKZuMyyObnizFHD1XII"},
{"content":{"body":"wait, so there was breakage due to a change in locale data or was it metadata that was changed without notice?","m.mentions":{},"msgtype":"m.text"},"ts":1707254388828,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$8XfLF4lW-Ko0VKiDRZEM7C0oZptI2O7pdvVXNrZ3DSY"},
{"content":{"body":"locale data","m.mentions":{},"msgtype":"m.text"},"ts":1707254440924,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$eJcND_1JVWNwHIYwXRuuPFhRfRQ5-WVANM01FDPQZ3k"},
{"content":{"body":"my bad. I had never really thought about the expression 'pave the cowpath' before and was interpreting it as 'tread the cowpath' 🤦‍♂️","msgtype":"m.text"},"ts":1707254472485,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$Ghb0swtxVvAGilSVgJwFGXIMUJdEmvl7yDfenGwZRdo"},
{"content":{"body":"shu: there is a diff between data and syntax. IMO they have been coherent when it comes to syntax changes, and structure. As for the data, it is meant to change as localization requirements change. I will categorize the incident that you mentioned as data changes.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: there is a diff between data and syntax. IMO they have been coherent when it comes to syntax changes, and structure. As for the data, it is meant to change as localization requirements change. I will categorize the incident that you mentioned as data changes.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"msgtype":"m.text"},"ts":1707254508736,"senderName":"caridy","senderId":"@caridy:matrix.org","id":"$tSO-xDhMNNaFqpuM9YJ_stlSxgFHZvq7xyNj9bWr0Oo"},
{"content":{"body":"> <@devsnek:matrix.org> my employer would happily rewrite all of our translations for whatever is done here as long as it isn't completely outlandish\n\nthis","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Izw76ue1cwVPiRYP12wC4k_2MKZuMyyObnizFHD1XII?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>my employer would happily rewrite all of our translations for whatever is done here as long as it isn&#39;t completely outlandish </blockquote></mx-reply>this","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Izw76ue1cwVPiRYP12wC4k_2MKZuMyyObnizFHD1XII"}},"msgtype":"m.text"},"ts":1707254525450,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7oUSRHQ_IjHyesa63avAic7_QohrudXcKTw2iTsxcMM"},
{"content":{"body":"caridy: it's accurate to categorize as data change, yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@caridy:matrix.org\">caridy</a>: it's accurate to categorize as data change, yes","m.mentions":{"user_ids":["@caridy:matrix.org"]},"msgtype":"m.text"},"ts":1707254536532,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JgKDepO2d6C8Mwg09ACTcex3qrnHen-dPCJuisjI6-c"},
{"content":{"body":"> <@littledan:matrix.org> this\n\nespecially if the multi-message format happens. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7oUSRHQ_IjHyesa63avAic7_QohrudXcKTw2iTsxcMM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>this</blockquote></mx-reply>especially if the multi-message format happens.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7oUSRHQ_IjHyesa63avAic7_QohrudXcKTw2iTsxcMM"}},"msgtype":"m.text"},"ts":1707254563778,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$l8qnNhAtN-Ih7ccKbC43aNIcxJqHEcnsOV5kkuM-yBA"},
{"content":{"body":"> <@littledan:matrix.org> this\n\n * especially if the multi-message format/api happens.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7oUSRHQ_IjHyesa63avAic7_QohrudXcKTw2iTsxcMM?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>this</blockquote></mx-reply> * especially if the multi-message format/api happens.","m.mentions":{},"m.new_content":{"body":"especially if the multi-message format/api happens.","format":"org.matrix.custom.html","formatted_body":"especially if the multi-message format/api happens.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$l8qnNhAtN-Ih7ccKbC43aNIcxJqHEcnsOV5kkuM-yBA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707254577175,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$tqVfWD1SvXcNWN59r7dWkHqmEXUR_RGs6C93l48EloE"},
{"content":{"body":"> <@devsnek:matrix.org> especially if the multi-message format/api happens.\n\nyeah, that's not part of this current proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$l8qnNhAtN-Ih7ccKbC43aNIcxJqHEcnsOV5kkuM-yBA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>especially if the multi-message format/api happens.</blockquote></mx-reply>yeah, that's not part of this current proposal","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$l8qnNhAtN-Ih7ccKbC43aNIcxJqHEcnsOV5kkuM-yBA"}},"msgtype":"m.text"},"ts":1707254586979,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AIjml8IBUnlUAqanR6_B-_INoMaKkJVDRacXOR0xxJY"},
{"content":{"body":"bakkot: MF2 has been used by mozilla (which developed it for about a decade now), and used internally to localize firefox, and other pieces of mozilla infrastructure as far as I can tell.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: MF2 has been used by mozilla (which developed it for about a decade now), and used internally to localize firefox, and other pieces of mozilla infrastructure as far as I can tell.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1707254753927,"senderName":"caridy","senderId":"@caridy:matrix.org","id":"$l-udyf7GBE1zOYDxfxUBgvgUJ9HdekmgUxlGrgxUWVM"},
{"content":{"body":"caridy: that's good context! if I think a few dozen more companies also use the syntax for a few years without complaint, that would be enough for me","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@caridy:matrix.org\">caridy</a>: that's good context! if I think a few dozen more companies also use the syntax for a few years without complaint, that would be enough for me","m.mentions":{"user_ids":["@caridy:matrix.org"]},"msgtype":"m.text"},"ts":1707254836648,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ah1d6wYJNjc6V1WCpnq6VIoNEZLOIUSSaQIOkW1b7U4"},
{"content":{"body":"the experience of a single company with a DSL is very much not sufficient to make me happy, though","m.mentions":{},"msgtype":"m.text"},"ts":1707254867687,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk"},
{"content":{"body":"bloomberg and salesforce also uses MF2 atm","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255013920,"senderName":"caridy","senderId":"@caridy:matrix.org","id":"$CEXGS2CP3BUnDCVE3nOLgP7gKl4Ru2QaaYBSe5wLGBQ"},
{"content":{"body":"that speaks to MF2's utility as a standardized format","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$CEXGS2CP3BUnDCVE3nOLgP7gKl4Ru2QaaYBSe5wLGBQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255180994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$aAbLhwRS8P4TgPJfmAIZD_CzYJpnFHKMGCS3R7kBLvk"},
{"content":{"body":"i still don't make the connection that speaks to the need for a parser in the stdlib","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$aAbLhwRS8P4TgPJfmAIZD_CzYJpnFHKMGCS3R7kBLvk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255198044,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3hfosW2WkNgCRC8XYkcMY4olVK5NzKknyERWFAFT-k0"},
{"content":{"body":"well, we're working on using it; it's not there yet","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$3hfosW2WkNgCRC8XYkcMY4olVK5NzKknyERWFAFT-k0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255209636,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$c4Vd8ZkkXGQnJFoev_V3KVlDiUYCJAG-MoP-2cZOq1o"},
{"content":{"body":"is the library too onerous to load, too bloated, etc?","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$c4Vd8ZkkXGQnJFoev_V3KVlDiUYCJAG-MoP-2cZOq1o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255232379,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8_vhQUnZZ1MDoBCm-JMmFi811Mo77Nm_Aufz9AeRkqs"},
{"content":{"body":"Shu, when you refer to \"parser\", is your concern resolved by Eemeli's use of ASTs instead?","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$8_vhQUnZZ1MDoBCm-JMmFi811Mo77Nm_Aufz9AeRkqs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255247955,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$84Ks1_vqCT0UXG0MEQxxyktGY7KCpfBQ1GYOqtLIWN4"},
{"content":{"body":"i don't know enough about the AST alternative to say","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$84Ks1_vqCT0UXG0MEQxxyktGY7KCpfBQ1GYOqtLIWN4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255274327,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qlOPVzw6iQcuirBLgmw_JsAC3hZOl-CkLy_sbmpy3tI"},
{"content":{"body":"> <@shuyuguo:matrix.org> is the library too onerous to load, too bloated, etc?\n\nHow do these concerns relate to, say, Iterator.append, etc?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8_vhQUnZZ1MDoBCm-JMmFi811Mo77Nm_Aufz9AeRkqs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>is the library too onerous to load, too bloated, etc?</blockquote></mx-reply>How do these concerns relate to, say, Iterator.append, etc?","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$8_vhQUnZZ1MDoBCm-JMmFi811Mo77Nm_Aufz9AeRkqs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255284474,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fBIB6VB89T-3UjQBjcR_R3vnrHZpi7r1lZlVSb9aoMw"},
{"content":{"body":"because the implementation and shipping cost for those as built-ins in the runtime are also small","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$fBIB6VB89T-3UjQBjcR_R3vnrHZpi7r1lZlVSb9aoMw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255313663,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C65-J5pL7nArHGcr4qZvTj7ANmRj5zfwc0Tp0ZvllzI"},
{"content":{"body":"Should our guiding principle be, \"don't propose libraries that are big, only libraries that are small\"?","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$C65-J5pL7nArHGcr4qZvTj7ANmRj5zfwc0Tp0ZvllzI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255314071,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pIWhfMgPJqmx0JrL-sBqjdLbt_emP5ADcXJ_f0XHtd0"},
{"content":{"body":"and their utility are broader","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$fBIB6VB89T-3UjQBjcR_R3vnrHZpi7r1lZlVSb9aoMw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255319763,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sm6iFDl7s8IALoDZaqUB37ikdZoUU9wRO2LCC5HE9v4"},
{"content":{"body":"DSLs are much harder to get right, and much more infectious, than APIs","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$sm6iFDl7s8IALoDZaqUB37ikdZoUU9wRO2LCC5HE9v4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255321340,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MD8UorOXfnEzlPoqkxqSxvLrwe9ECYWa5GhUCpRHtF0"},
{"content":{"body":"so our bar for adding new DSLs should be much (much much much) higher than our bar for adding new APIs","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$MD8UorOXfnEzlPoqkxqSxvLrwe9ECYWa5GhUCpRHtF0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255343283,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U2wdw2exz8ZIrMvKxoscephmbDZwn3RUBheVXi1Z3dU"},
{"content":{"body":"> <@littledan:matrix.org> Should our guiding principle be, \"don't propose libraries that are big, only libraries that are small\"?\n\nlibraries that are big and don't benefit from independent re-implementation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pIWhfMgPJqmx0JrL-sBqjdLbt_emP5ADcXJ_f0XHtd0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Should our guiding principle be, &quot;don&#39;t propose libraries that are big, only libraries that are small&quot;?</blockquote></mx-reply>libraries that are big and don't benefit from independent re-implementation","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$pIWhfMgPJqmx0JrL-sBqjdLbt_emP5ADcXJ_f0XHtd0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255358744,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6ju6QpWNEz-H872lEwxQC3X1hgqHNHnxgAUKRFrD44w"},
{"content":{"body":"> <@shuyuguo:matrix.org> and their utility are broader\n\ncould you elaborate?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sm6iFDl7s8IALoDZaqUB37ikdZoUU9wRO2LCC5HE9v4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>and their utility are broader</blockquote></mx-reply>could you elaborate?","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$sm6iFDl7s8IALoDZaqUB37ikdZoUU9wRO2LCC5HE9v4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255365403,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$1hGb6qUlK_mgY4XwJDL6UqZ10EiqLt7KXE_7TY4SwY8"},
{"content":{"body":"the big/small thing is not crucial imo","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$6ju6QpWNEz-H872lEwxQC3X1hgqHNHnxgAUKRFrD44w"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255376538,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qn6o9MJYI9JZeiHSkXBd4ugCzPh_PrFHyphv9LOjGG0"},
{"content":{"body":"i feel like localization is one of the most obvious things to put in a stdlib","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$1hGb6qUlK_mgY4XwJDL6UqZ10EiqLt7KXE_7TY4SwY8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255377051,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$0NrlbOGt05qWPvJ8TUKjsRemTGaEZLWpfZ2MZmBSxAU"},
{"content":{"body":"everyone needs it and its objectively better ","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$0NrlbOGt05qWPvJ8TUKjsRemTGaEZLWpfZ2MZmBSxAU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255397019,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$fp46b-6S6rUnhwX5y9Kdjco_HaZ2wJqG0exWESl74PY"},
{"content":{"body":"> <@usharma:igalia.com> could you elaborate?\n\nmy intuition is that the more programs will use iterator helpers as opposed to i18n?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1hGb6qUlK_mgY4XwJDL6UqZ10EiqLt7KXE_7TY4SwY8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>could you elaborate?</blockquote></mx-reply>my intuition is that the more programs will use iterator helpers as opposed to i18n?","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$1hGb6qUlK_mgY4XwJDL6UqZ10EiqLt7KXE_7TY4SwY8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255411046,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZZvhD9BToS4UrLJWOcnWSU-io0ntJJpeeTb63vj-yEY"},
{"content":{"body":"localization information and APIs, certainly; localization DSLs, much less obvious to me","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZZvhD9BToS4UrLJWOcnWSU-io0ntJJpeeTb63vj-yEY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255413219,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AiHOLiksUuMMMRDp8TJhmEBqOTjQXo5TYMqsTXdi3Ms"},
{"content":{"body":">  don't benefit from independent re-implementation\n\nThis is kinda curious... Which things do you think benefit from independent reimplementation? (I've heard Chrome people muse that it's generally a waste of time to do independent implementations.)","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>don't benefit from independent re-implementation</p>\n</blockquote>\n<p>This is kinda curious... Which things do you think benefit from independent reimplementation? (I've heard Chrome people muse that it's generally a waste of time to do independent implementations.)</p>\n","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$AiHOLiksUuMMMRDp8TJhmEBqOTjQXo5TYMqsTXdi3Ms"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255443195,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DegzCTxTBAK6rSNJ9ZRqpn3XH8zLoKI5NozgspJtCgY"},
{"content":{"body":"yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$AiHOLiksUuMMMRDp8TJhmEBqOTjQXo5TYMqsTXdi3Ms"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255443811,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$M-0S9mTnzmQHGrsOaXWgtfqKOlYsj-mFkB8fxPm0SSo"},
{"content":{"body":"i honestly still do not understand what we're losing if the guidance is \"use the library\"","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$M-0S9mTnzmQHGrsOaXWgtfqKOlYsj-mFkB8fxPm0SSo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255452740,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PzchmuYsC5zwj3-wmjDd6AvgYSYY0zy8GnuQOIg5gQs"},
{"content":{"body":"I don't think when comparing highly specific language APIs whose use is situational based on implementation choices and i18n primitives, I'd make the same conclusion","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$PzchmuYsC5zwj3-wmjDd6AvgYSYY0zy8GnuQOIg5gQs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255473091,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$ikNzp8eNphn00h9imHQdtwiyUij65KEKcMR0_SKunP8"},
{"content":{"body":" * yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing","format":"org.matrix.custom.html","formatted_body":" * yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.new_content":{"body":"yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing","format":"org.matrix.custom.html","formatted_body":"yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$M-0S9mTnzmQHGrsOaXWgtfqKOlYsj-mFkB8fxPm0SSo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707255481627,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$4VNg1rxrw8_a-ZB_bVjoHVXbkwO9N1Hlwhz9L_WUalI"},
{"content":{"body":"> <@devsnek:matrix.org> yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing\n\nmy understanding is that this proposal doesn't particularly expose new information","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$M-0S9mTnzmQHGrsOaXWgtfqKOlYsj-mFkB8fxPm0SSo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>yeah thats true i guess we could make a cldr/unicode/etc api and make people figure it out themselves, but why should people have to figure out such a universal thing</blockquote></mx-reply>my understanding is that this proposal doesn't particularly expose new information","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$M-0S9mTnzmQHGrsOaXWgtfqKOlYsj-mFkB8fxPm0SSo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255487032,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8noi-z2SmDtrfcVw5Y7ThnV2yVoOp29kwkpDgTCZHFo"},
{"content":{"body":"> <@shuyuguo:matrix.org> i honestly still do not understand what we're losing if the guidance is \"use the library\"\n\nyeah, the idea is a vision of the standard library having stuff for people already... it's sort of irreducible, and it doesn't really make sense for us to add unique, groupBy, etc if we aren't interested in that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PzchmuYsC5zwj3-wmjDd6AvgYSYY0zy8GnuQOIg5gQs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i honestly still do not understand what we&#39;re losing if the guidance is &quot;use the library&quot;</blockquote></mx-reply>yeah, the idea is a vision of the standard library having stuff for people already... it's sort of irreducible, and it doesn't really make sense for us to add unique, groupBy, etc if we aren't interested in that.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":false,"m.in_reply_to":{"event_id":"$PzchmuYsC5zwj3-wmjDd6AvgYSYY0zy8GnuQOIg5gQs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255510015,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5U4Ukf0oU-eGC17Peb27l3ICGlM19Cm2DRBBZgx2CZE"},
{"content":{"body":"i feel like all counter-arguments are conflating \"the world needs a message format\" and \"JS needs a new parser\"?","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$5U4Ukf0oU-eGC17Peb27l3ICGlM19Cm2DRBBZgx2CZE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255515435,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KLEDfJ6DMvwfDf0dqkqewsvtQEsJzT-wuW6enBchfqk"},
{"content":{"body":"also i no longer see updates in the thread view when new messages come in","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$KLEDfJ6DMvwfDf0dqkqewsvtQEsJzT-wuW6enBchfqk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255530588,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2mTdXdSvKcrFO__BjyLFHxz4p8xj8kcwbaNP-n0D5lo"},
{"content":{"body":"wtf","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$KLEDfJ6DMvwfDf0dqkqewsvtQEsJzT-wuW6enBchfqk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255531533,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$D0ynVTvpTRMiHd1xIVk68fT8MDtJe5IflLLhxSrmw-8"},
{"content":{"body":"petition to stop being a thread","m.mentions":{},"m.relates_to":{"event_id":"$vLeRCNqAqYZX2yIY8YZfPdkoAINDzBtQDeZ42JfXfYk","is_falling_back":true,"m.in_reply_to":{"event_id":"$D0ynVTvpTRMiHd1xIVk68fT8MDtJe5IflLLhxSrmw-8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255543162,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$L5fYAPMV1J14pwtDsYF_JxhiH2f37Eo7qE0s5ygSCAg"},
{"content":{"body":"littledan: i would argue that we do _not_ have an agreed-upon vision for how \"batteries included\" the stdlib ought to be","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i would argue that we do <em>not</em> have an agreed-upon vision for how \"batteries included\" the stdlib ought to be","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707255731858,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wSCtuI-I1VsNOuQLSZXS7PBGfFaD_fDYmm-wL-Fs4Ss"},
{"content":{"body":"the fact that `groupBy` and `unique` exist is because some champions decided to push for it","format":"org.matrix.custom.html","formatted_body":"the fact that <code>groupBy</code> and <code>unique</code> exist is because some champions decided to push for it","m.mentions":{},"msgtype":"m.text"},"ts":1707255747893,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x7nZ7rkG9WuJls0jWwswdzCzZJLyFz_uJP9UCBgJ8ho"},
{"content":{"body":"not because we are executing on a vision","m.mentions":{},"msgtype":"m.text"},"ts":1707255753127,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QlOVbHDERMyRO6tykeTnx72fdy17UxdSC3OibRj_M40"},
{"content":{"body":"also a whole new DSL is a much larger battery than iterator helpers","m.mentions":{},"msgtype":"m.text"},"ts":1707255763231,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AXPFcTW9Zsq1yShFue5EgxfmFvlqRcPEM66T_2j6a3A"},
{"content":{"body":"it's like a Tesla battery: large and single-purpose","m.mentions":{},"m.relates_to":{"event_id":"$AXPFcTW9Zsq1yShFue5EgxfmFvlqRcPEM66T_2j6a3A","is_falling_back":true,"m.in_reply_to":{"event_id":"$AXPFcTW9Zsq1yShFue5EgxfmFvlqRcPEM66T_2j6a3A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255879841,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eTkh_dFwMA8IU7_0WG54XVj6pTWn-0ZeFOb5C9-reLU"},
{"content":{"body":"> <@shuyuguo:matrix.org> littledan: i would argue that we do _not_ have an agreed-upon vision for how \"batteries included\" the stdlib ought to be\n\nYes, it seems that we don't have a shared vision--we should probably discuss that more generally somehow.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wSCtuI-I1VsNOuQLSZXS7PBGfFaD_fDYmm-wL-Fs4Ss?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i would argue that we do <em>not</em> have an agreed-upon vision for how \"batteries included\" the stdlib ought to be</blockquote></mx-reply>Yes, it seems that we don't have a shared vision--we should probably discuss that more generally somehow.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wSCtuI-I1VsNOuQLSZXS7PBGfFaD_fDYmm-wL-Fs4Ss"}},"msgtype":"m.text"},"ts":1707255883575,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$z1imMObOxrUCUq45QSe5CokArIyu7nrfolVNGjWHMAw"},
{"content":{"body":"if people stop buying Teslas, it's not that useful to have around anymore","m.mentions":{},"m.relates_to":{"event_id":"$AXPFcTW9Zsq1yShFue5EgxfmFvlqRcPEM66T_2j6a3A","is_falling_back":true,"m.in_reply_to":{"event_id":"$eTkh_dFwMA8IU7_0WG54XVj6pTWn-0ZeFOb5C9-reLU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255905052,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6ptDiZnnFrdsmNbjafzfUt3tGSnWf4ontDNI_51SFI0"},
{"content":{"body":"continuing the battery analogy, iterator helpers are like AAs lol","m.mentions":{},"m.relates_to":{"event_id":"$AXPFcTW9Zsq1yShFue5EgxfmFvlqRcPEM66T_2j6a3A","is_falling_back":true,"m.in_reply_to":{"event_id":"$6ptDiZnnFrdsmNbjafzfUt3tGSnWf4ontDNI_51SFI0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255920537,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6SI600sXKSBSHuEUV9KnEWGwB6FTgmq73o8ZVqY-l1w"},
{"content":{"body":"would be pretty nice if making the web localized was a blessed api you could use right off the bat, instead of something you have to build out of intl primitives or try to select a library for.","m.mentions":{},"msgtype":"m.text"},"ts":1707255950136,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$ZUWxjxOHavvLpJZJ5fhwaBJCTRw0FQWd7pyFzD5BZgs"},
{"content":{"body":"what is the downside to selecting a library","m.mentions":{},"msgtype":"m.text"},"ts":1707255985208,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Xtzn1YQc8XVetaBatVrDEdQdOxo6h7XHPy2LMuT3kw0"},
{"content":{"body":"I feel we're mostly in agreement on that point?","m.mentions":{},"m.relates_to":{"event_id":"$ZUWxjxOHavvLpJZJ5fhwaBJCTRw0FQWd7pyFzD5BZgs","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZUWxjxOHavvLpJZJ5fhwaBJCTRw0FQWd7pyFzD5BZgs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707255992908,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ibW2VCBJgCCSrglX1anWZyYs8iHOq-0S0H9uZHpiVrA"},
{"content":{"body":"is there a wealth of poor choices or something?","m.mentions":{},"msgtype":"m.text"},"ts":1707255998412,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Bx132Qb1fLmgUoKZhQXESSEHJVjEYBoL_etXIXgIJE8"},
{"content":{"body":"what is the point of this committee meeting and not disbanding? is it just to expose new fundamental capabilities to JS?","m.mentions":{},"msgtype":"m.text"},"ts":1707256011971,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lv9uyGjKZNAaRXoymGmd4oxsnyhDLrAVcMSts5cLajc"},
{"content":{"body":"I don't think people are saying l10n is not motivating","m.mentions":{},"m.relates_to":{"event_id":"$ZUWxjxOHavvLpJZJ5fhwaBJCTRw0FQWd7pyFzD5BZgs","is_falling_back":true,"m.in_reply_to":{"event_id":"$ibW2VCBJgCCSrglX1anWZyYs8iHOq-0S0H9uZHpiVrA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707256024957,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$OfOTWBhdtwKHkc7dPnIeNQB4_mpBqz5NcbenMJ9KfLE"},
{"content":{"body":"like, we're already avoiding defining too many new syntax features or things that involve primitive types, for reasons that I understand","m.mentions":{},"msgtype":"m.text"},"ts":1707256040326,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TjXV-2Anf3R8eVztPbYPGqsUhtrwflpl5sZignZrWJo"},
{"content":{"body":"and syntax?","m.mentions":{},"msgtype":"m.text"},"ts":1707256041513,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RnTNm3iC1V8rCxyfY59Z2yMGydZgZbL8kUnVkAzZkO8"},
{"content":{"body":"(it's been argued that we shouldn't add too much syntax, either)","m.mentions":{},"msgtype":"m.text"},"ts":1707256056405,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kTC4XC0BCouFYGJNqgGS1zmF4OUGp4aKOygU8NZRshY"},
{"content":{"body":"we're just not in agreement about whether we pick winners","m.mentions":{},"m.relates_to":{"event_id":"$ZUWxjxOHavvLpJZJ5fhwaBJCTRw0FQWd7pyFzD5BZgs","is_falling_back":true,"m.in_reply_to":{"event_id":"$OfOTWBhdtwKHkc7dPnIeNQB4_mpBqz5NcbenMJ9KfLE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707256060289,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$h4ZcrNn9IeAJqZUsPn8IaB9FuQaSxW6zi-OT4_espzc"},
{"content":{"body":"i understand the desire to standardize APIs","m.mentions":{},"msgtype":"m.text"},"ts":1707256187626,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TXBBpPTVDAadsluh5k3qTermHxwNmvTJ475Ope_36SQ"},
{"content":{"body":"why can't we just say \"this library is blessed\" again? i don't mean something like built-in modules, i just mean literally \"this package is blessed\"","m.mentions":{},"msgtype":"m.text"},"ts":1707256279455,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FVSTRT9VX4Kb_rq4NnjBav9TucQ-2GN9tqEd-oq7bXk"},
{"content":{"body":"loading is annoying?","m.mentions":{},"msgtype":"m.text"},"ts":1707256284445,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zQlPpTvcfXYmQEiV6AJXDmSVKwfvoNJnkThN0gmb2oA"},
{"content":{"body":"i think the argument is reductive in both directions","m.mentions":{},"msgtype":"m.text"},"ts":1707256391910,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$uLe1opc6miB-_O9Sgs3rSQ6VlxKmmN1Pl1bWDuQfcqY"},
{"content":{"body":"but i'd prefer to err on the side of doing things instead of doing nothing","m.mentions":{},"msgtype":"m.text"},"ts":1707256414813,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$ajxjpoHkJogVOpKlp4splzhec8KyRqW-XMBItQEnmQ8"},
{"content":{"body":"(1) Localization is easy to get wrong and hard to get right and we want to raise the bar for building a Multilingual Web\n(2) A full MF2 parser is a nontrivial amount of JS payload\n(3) The longer-term vision littledan mentioned","m.mentions":{},"msgtype":"m.text"},"ts":1707256490045,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$bVWnFEfPiyu733aRb1QRZdGEQij3tVxFUVT30ddz0ig"},
{"content":{"body":"(2) does not go away by making it part of your JS VM","m.mentions":{},"msgtype":"m.text"},"ts":1707256517252,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$e0X5y43JyfqM_9dVi3aX5kKE4lZMvWGVHswD3y-j2RQ"},
{"content":{"body":"Any chance of getting extra time for this, I don't think we're necessarily wrapping up in 5 mins?","m.mentions":{},"msgtype":"m.text"},"ts":1707256544708,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$yxRSnYJIZumN0sF1aMiD3o1q3Qw2harAlA7SdG-r05E"},
{"content":{"body":"also Zibi is making a great point here. It took Unicode years to gather the knowledge, experience and effort to nearly finish this effort.","m.mentions":{},"msgtype":"m.text"},"ts":1707256546247,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$hyRI5xa_0q1UU0gSfe7kUrtZgnGLRdSWlbBDtBrBTXE"},
{"content":{"body":"How long are we willing to wait for something else","m.mentions":{},"msgtype":"m.text"},"ts":1707256555378,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$wsmkq3cJ-ApreCAAZaCjQDGBcRPaVV-5bEaIFSu4XMA"},
{"content":{"body":"and who exactly are we expecting to come up with it","m.mentions":{},"msgtype":"m.text"},"ts":1707256570048,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$jN13qQQ-rGjuBgiHttwbWz5ErUIHFgoyGhfUXhUCHYI"},
{"content":{"body":"Every Intl proposal moves code from every individual web site (N-time download) into the browser (1-time download). That's a principle we've discussed at length in previous proposals.","m.mentions":{},"msgtype":"m.text"},"ts":1707256576157,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$k9VCv5wFRtCvYDkKXBtIMnCZOTSyhWQ2L3M5937lBHc"},
{"content":{"body":"i agree that is a thing we should solve","m.mentions":{},"msgtype":"m.text"},"ts":1707256646655,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kHN2m_UnTIFCcvi5gOYQkaHnGDlKuKccCo-DxEpDho4"},
{"content":{"body":"> <@shuyuguo:matrix.org> is there a wealth of poor choices or something?\n\nNot specifically in JavaScript, but over the years I've encountered a lot of localization systems which lack features which aren't needed in any of the most widely-used European languages. Plenty of developers end up unaware of i18n needs and do it \"ad hoc\" with systems based almost entirely on English syntax.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Bx132Qb1fLmgUoKZhQXESSEHJVjEYBoL_etXIXgIJE8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>is there a wealth of poor choices or something?</blockquote></mx-reply>Not specifically in JavaScript, but over the years I've encountered a lot of localization systems which lack features which aren't needed in any of the most widely-used European languages. Plenty of developers end up unaware of i18n needs and do it \"ad hoc\" with systems based almost entirely on English syntax.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Bx132Qb1fLmgUoKZhQXESSEHJVjEYBoL_etXIXgIJE8"}},"msgtype":"m.text"},"ts":1707256674398,"senderName":"leftmostcat (UTC-8)","senderId":"@leftmostcat:matrix.org","id":"$AI_1bMJ_i-ngNmioeIda-wv533V80Yrg87kLN-TP7Bs"},
{"content":{"body":"there are other ways to solve that distribution problem than to standardize into JS","m.mentions":{},"msgtype":"m.text"},"ts":1707256684233,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EBpus2knbXBaXx54UJEShWFwBP25bblAOfgiOXfShz0"},
{"content":{"body":"There's, I think, a bit of a discoverability problem. Making something part of the standard doesn't automatically let people know it exists, but I'd argue it's easier to stumble across it that way than when it's a library you have to search out and specifically add to your project.","m.mentions":{},"msgtype":"m.text"},"ts":1707256766972,"senderName":"leftmostcat (UTC-8)","senderId":"@leftmostcat:matrix.org","id":"$JtKV_xGkyqVN6sr6-EE2HvhtuSqKlLoa1pqop1LIWJg"},
{"content":{"body":"IMO that conflates discoverability and distribution with standardization. being a standard _can_ result in being more discoverable and _does_ have \"free\" distribution","format":"org.matrix.custom.html","formatted_body":"IMO that conflates discoverability and distribution with standardization. being a standard <em>can</em> result in being more discoverable and <em>does</em> have \"free\" distribution","m.mentions":{},"msgtype":"m.text"},"ts":1707256811424,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IMWByNxqOQgKEe0VCD595uv0Vq5-xSzzNHbsbJhQ68c"},
{"content":{"body":"but a standard exists for interoperable implementations","m.mentions":{},"msgtype":"m.text"},"ts":1707256816892,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CMiUFNFEa57qrBy4Q6MQC97VCrzeGQp4tHUeIb8bOZM"},
{"content":{"body":"if there is no value add from interoperable implementations and the value add is actually from \"blessing\"","m.mentions":{},"msgtype":"m.text"},"ts":1707256827519,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vOWMOFaswJaHIhsgNIuF-iIZ5GRwlZoXjnmAQEaTP24"},
{"content":{"body":"we should solve for discoverability and distribution directly","m.mentions":{},"msgtype":"m.text"},"ts":1707256835115,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_iL1vqwhkQTR3Tk9PyvvA38t5Ndx4Fh5YQrh5YlCynI"},
{"content":{"body":"littledan: I would describe it like \"momentum\": the bigger it is or the faster it is being adopted, the less time it will take to reach that confidence","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: I would describe it like \"momentum\": the bigger it is or the faster it is being adopted, the less time it will take to reach that confidence","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707256856090,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$gDp1vCOQNCEmm3eCcgQF6Mj5jFFcXOF9TQsGK8qu23A"},
{"content":{"body":"> <@michaelficarra:matrix.org> littledan: I would describe it like \"momentum\": the bigger it is or the faster it is being adopted, the less time it will take to reach that confidence\n\ngreat, let's keep going, what does momentum look like to you?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gDp1vCOQNCEmm3eCcgQF6Mj5jFFcXOF9TQsGK8qu23A?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: I would describe it like \"momentum\": the bigger it is or the faster it is being adopted, the less time it will take to reach that confidence</blockquote></mx-reply>great, let's keep going, what does momentum look like to you?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$gDp1vCOQNCEmm3eCcgQF6Mj5jFFcXOF9TQsGK8qu23A"}},"msgtype":"m.text"},"ts":1707256884082,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$A73KbhC_A1KNYHrdTATsCd4nDy2CBvTcNoHXAqu9Gjc"},
{"content":{"body":"API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2. It would benefit translators to converge on a single solution that is better than gettext.","m.mentions":{},"msgtype":"m.text"},"ts":1707256957188,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI"},
{"content":{"body":" * API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"m.new_content":{"body":"API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707256971220,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$bxV8Gb9HQsIEoECqRSE3K5kmjYGkLaSv8tPF3-te29k"},
{"content":{"body":"I can't predict the future, it could look like a lot of things","m.mentions":{},"m.relates_to":{"event_id":"$A73KbhC_A1KNYHrdTATsCd4nDy2CBvTcNoHXAqu9Gjc","is_falling_back":true,"m.in_reply_to":{"event_id":"$A73KbhC_A1KNYHrdTATsCd4nDy2CBvTcNoHXAqu9Gjc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707256983040,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6CBL49s4YlZZcKrIm_P_CbfK1yleS8VC-TbDerufHWk"},
{"content":{"body":"the room was also rebooted","m.mentions":{},"m.relates_to":{"event_id":"$i8ne0MkQRW1w4jDhQJTH_WZCSVWmsBZwyyh0YNUAd5s","is_falling_back":true,"m.in_reply_to":{"event_id":"$i8ne0MkQRW1w4jDhQJTH_WZCSVWmsBZwyyh0YNUAd5s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707256996463,"senderName":"Rodrigo Fernandez","senderId":"@rodfernandez:matrix.org","id":"$WuCb-cOqpigvDUo_boy26UkBm-qzoHrSe7kjSTi9lh8"},
{"content":{"body":"> <@jschoi:matrix.org> API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2. It would benefit translators to converge on a single solution (that is better than gettext).\n\nyes, this is a big reason why we are investing in this. It gives a clear point of centralization to follow industry standard best practice.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br>API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2. It would benefit translators to converge on a single solution (that is better than gettext).</blockquote></mx-reply>yes, this is a big reason why we are investing in this. It gives a clear point of centralization to follow industry standard best practice.","m.mentions":{"user_ids":["@jschoi:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI"}},"msgtype":"m.text"},"ts":1707257038878,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bs6mXrhewjClu4P6B_oQXz3OEfdrC3qExVm2ItmzLQs"},
{"content":{"body":"i think this is also a case where its extremely difficult to get it right, so having a lot of different solutions can imply that every individual solution is a bit worse ","m.mentions":{},"msgtype":"m.text"},"ts":1707257102850,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$DfeEiZTABFIfDQXPdJIBhoclVCaEy8r9G7FJczeoPkI"},
{"content":{"body":" * API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in Ecma-402. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"m.new_content":{"body":"API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in Ecma-402. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257113251,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$6GoI1hLR8K67Ri64hy0WM0ISyut38SiRu0DHqBWsfE0"},
{"content":{"body":"if there's ecosystem fragmentation, isn't that because no solution is strictly best, and we *shouldn't pick a winner from among them*?","format":"org.matrix.custom.html","formatted_body":"if there's ecosystem fragmentation, isn't that because no solution is strictly best, and we <em>shouldn't pick a winner from among them</em>?","m.mentions":{},"msgtype":"m.text"},"ts":1707257139651,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6t-VI-CLwBcb8qMqI_cq-bb--1H8eIuUDo6ATVLfCys"},
{"content":{"body":" * API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in ECMA-402. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"m.new_content":{"body":"API standardization also tries to solve ecosystem fragmentation, insofar that its ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in ECMA-402. It would benefit translators to converge on a single solution (that is better than gettext).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257155247,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Mr-bYrvbPfYxHvDzoveMhXy15X9lROY1dAgmVP5gJw8"},
{"content":{"body":"Maybe. That’s not the only possible cause of ecosystem fragmentation. They could also be accidents of history and inertia. But certainly sometimes it’s because the actual requirements vary a lot. It depends.","m.mentions":{},"msgtype":"m.text"},"ts":1707257244337,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$eiUA9hfNkunQ6PnMBCi-_YV2L-pxd7Tm3fj31zIv6T4"},
{"content":{"body":"So: Are the requirements of text localization homogenous enough such that a single solution can cover almost all of them well?","m.mentions":{},"msgtype":"m.text"},"ts":1707257268225,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2fJy9jRnJlrSZX2GUROWZEhlMA4q6q4XUDufqMP_hxM"},
{"content":{"body":"i think most (serious) localization systems are actually somewhat similar, especially in how they author data","m.mentions":{},"msgtype":"m.text"},"ts":1707257282872,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$MVNBH_YLnEM-YzdklUCY5bKm-NiSAWOELDGDZOM-N0I"},
{"content":{"body":"I am happy to believe that MF2 is in fact better than all the existing solutions, but if that's so, I'd expect that if there were a permissively licensed production-grade parser for the format, people would want to start using it widely","m.mentions":{},"msgtype":"m.text"},"ts":1707257306660,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LCIPAbYG41HYnuaI5zMuF7An_yi2wCWvI_kTT3N19Hg"},
{"content":{"body":" * Maybe. That’s not the only possible cause of ecosystem fragmentation. They could also be accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot. It depends.","m.mentions":{},"m.new_content":{"body":"Maybe. That’s not the only possible cause of ecosystem fragmentation. They could also be accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot. It depends.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$eiUA9hfNkunQ6PnMBCi-_YV2L-pxd7Tm3fj31zIv6T4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257309500,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$wXXItdMRQxdiXfahJOaFysQEZZK7JGRF8WR4JOOMQ_4"},
{"content":{"body":"and if we saw that happening, and none of those people were like \"oh actually I can't adopt this because of [reason]\", then it would be a good candidate for standardization","m.mentions":{},"msgtype":"m.text"},"ts":1707257329408,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d7jPGRrlvihmVh_XVY_I8hHQU1yKAEyVs607HDbUk-Q"},
{"content":{"body":" * Maybe. That’s not the only possible cause of ecosystem fragmentation. It can also be caused by accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot. It depends.","m.mentions":{},"m.new_content":{"body":"Maybe. That’s not the only possible cause of ecosystem fragmentation. It can also be caused by accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot. It depends.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$eiUA9hfNkunQ6PnMBCi-_YV2L-pxd7Tm3fj31zIv6T4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257359510,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$FLlVty9RV_qki17WkQwgdSTdMS262afOp5Sdsq0bPlQ"},
{"content":{"body":"> why can't we just say \"this library is blessed\" again? i don't mean something like built-in modules, i just mean literally \"this package is blessed\"\n\nshu on top of what I brought up before. I don't think we can move forward with efforts such as https://nordzilla.github.io/dom-l10n-draft-spec/ without a syntax.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>why can't we just say \"this library is blessed\" again? i don't mean something like built-in modules, i just mean literally \"this package is blessed\"</p>\n</blockquote>\n<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> on top of what I brought up before. I don't think we can move forward with efforts such as https://nordzilla.github.io/dom-l10n-draft-spec/ without a syntax.</p>\n","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"msgtype":"m.text"},"ts":1707257367075,"senderName":"zbraniecki","senderId":"@zbraniecki:matrix.org","id":"$CCShgymPyzm-WOTfgGSHn4v0iEAAV-vaBNs6D9iUOds"},
{"content":{"body":"Maybe TC39 can just resolve, as part of the conclusion, that we encourage people to experiment with this library?","m.mentions":{},"msgtype":"m.text"},"ts":1707257377918,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nge5c2trMkPMgDcLLlssbSAPUYhduhu3hOTJIBWk4Nk"},
{"content":{"body":"also people keep talking about syntax, but the data model is probably more significant (this comes up in the second half of the presentation)","m.mentions":{},"msgtype":"m.text"},"ts":1707257401721,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UjmPJWTKIdqQt4kh2vqT9yks40Oj3nptMI57b_7DnLs"},
{"content":{"body":" * Maybe. That’s not the only possible cause of ecosystem fragmentation. It can also be caused by accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot across applications. It depends.","m.mentions":{},"m.new_content":{"body":"Maybe. That’s not the only possible cause of ecosystem fragmentation. It can also be caused by accidents of history and inertia. But certainly, in some cases, it’s because their actual requirements vary a lot across applications. It depends.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$eiUA9hfNkunQ6PnMBCi-_YV2L-pxd7Tm3fj31zIv6T4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257420403,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$hp3plUqtHKDd5pXXFXWB2pbefzTHhtDzuSZ6VPpngvI"},
{"content":{"body":"if our conclusion is recommending a specific library then we've already picked a winner","m.mentions":{},"msgtype":"m.text"},"ts":1707257424330,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lepfrwBg7P35sAWdYFtZdMbOwYwKrvfL8bWPUDdKH3M"},
{"content":{"body":"> <@zbraniecki:matrix.org> > why can't we just say \"this library is blessed\" again? i don't mean something like built-in modules, i just mean literally \"this package is blessed\"\n> \n> shu on top of what I brought up before. I don't think we can move forward with efforts such as https://nordzilla.github.io/dom-l10n-draft-spec/ without a syntax.\n\ni got nothing against standardizing the syntax. i thought that's what Unicode consortium was doing already. did i misunderstand?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CCShgymPyzm-WOTfgGSHn4v0iEAAV-vaBNs6D9iUOds?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zbraniecki:matrix.org\">@zbraniecki:matrix.org</a><br><blockquote>\n<p>why can't we just say \"this library is blessed\" again? i don't mean something like built-in modules, i just mean literally \"this package is blessed\"</p>\n</blockquote>\n<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> on top of what I brought up before. I don't think we can move forward with efforts such as https://nordzilla.github.io/dom-l10n-draft-spec/ without a syntax.</p>\n</blockquote></mx-reply>i got nothing against standardizing the syntax. i thought that's what Unicode consortium was doing already. did i misunderstand?","m.mentions":{"user_ids":["@zbraniecki:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$CCShgymPyzm-WOTfgGSHn4v0iEAAV-vaBNs6D9iUOds"}},"msgtype":"m.text"},"ts":1707257438351,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$StNl7ka5HWXOwVxgMA1vR2sR3KtZBGyr4fAbUtQgwI4"},
{"content":{"body":" * if our conclusion is recommending a specific library then we've already picked a winner, so that objection shouldn't exist to the proposal afterwards","m.mentions":{},"m.new_content":{"body":"if our conclusion is recommending a specific library then we've already picked a winner, so that objection shouldn't exist to the proposal afterwards","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$lepfrwBg7P35sAWdYFtZdMbOwYwKrvfL8bWPUDdKH3M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257439803,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OWpX0kEtHQdg7vpHwiOAKjvpQFSrznW0-zkJ4IWsTOQ"},
{"content":{"body":"littledan: the data model can be similarly problematic, although less so if it's not the API surface since that layer of indirection can sometimes give us an out","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: the data model can be similarly problematic, although less so if it's not the API surface since that layer of indirection can sometimes give us an out","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707257464173,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$O59mAkFBQT9kbhZv2L9kG8bL9m5ke5QcH7k1bt8eyvA"},
{"content":{"body":" * So: Are the requirements of text localization, across applications, homogenous enough such that a single solution can cover (almost all?) applications well? Or are they heterogenous enough that we should let the ecosystem remain fragmented and different solutions continue to compete?","m.mentions":{},"m.new_content":{"body":"So: Are the requirements of text localization, across applications, homogenous enough such that a single solution can cover (almost all?) applications well? Or are they heterogenous enough that we should let the ecosystem remain fragmented and different solutions continue to compete?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$2fJy9jRnJlrSZX2GUROWZEhlMA4q6q4XUDufqMP_hxM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257477558,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$f9hvPnBbfWQG6qJUoYz5PqRq-U2LLokrGcjgwlmk56Y"},
{"content":{"body":"much easier to repair small flaws in a data model than a syntax, usually (though not always)","m.mentions":{},"msgtype":"m.text"},"ts":1707257504672,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ofT3fGsDd0OCgWu8j3yoOoWeZx6BZZWCpQLkwreRY8Y"},
{"content":{"body":"repair-by-addition, that is","m.mentions":{},"msgtype":"m.text"},"ts":1707257527127,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vbWXpbf36iVk3EGGxEDk7LQTqOBe6z1PL2lo5xvnwcg"},
{"content":{"body":"littledan: questions are not discouragement.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: questions are not discouragement.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707257641146,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qSm-UzmOsR7e-UncDuG7nW_9RkFrQDTCj8uZclzmels"},
{"content":{"body":"I disagree? sometimes they are?","m.mentions":{},"msgtype":"m.text"},"ts":1707257664938,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$j84SuIbY7oMH4tHPrLsk9oKYFzfKRjRW4Er3qa3Ef3o"},
{"content":{"body":"well, I think that depends on the person","m.mentions":{},"msgtype":"m.text"},"ts":1707257667848,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$D2O101Nqo6LncPUAXWJdHgE_c0pe7efr2CjBJ43xfow"},
{"content":{"body":"> <@ljharb:matrix.org> if our conclusion is recommending a specific library then we've already picked a winner, so that objection shouldn't exist to the proposal afterwards\n\nmy concern is different from bakkot's. i'm more easily convinced that there is value to picking a winner here but i have somewhat serious concerns about the mechanism of winner picking","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lepfrwBg7P35sAWdYFtZdMbOwYwKrvfL8bWPUDdKH3M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>if our conclusion is recommending a specific library then we&#39;ve already picked a winner, so that objection shouldn&#39;t exist to the proposal afterwards</blockquote></mx-reply>my concern is different from <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s. i'm more easily convinced that there is value to picking a winner here but i have somewhat serious concerns about the mechanism of winner picking","m.mentions":{"user_ids":["@ljharb:matrix.org","@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$lepfrwBg7P35sAWdYFtZdMbOwYwKrvfL8bWPUDdKH3M"}},"msgtype":"m.text"},"ts":1707257702187,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jTIXgke9srsZyOVhaasc7QozLjB1d9kU-UnljXMJyt8"},
{"content":{"body":"I wonder if it'd help to have a presentation explaining the design of the syntax and data model of MessageFormat v2 to plenary in more detail, including how learnings from other past formats were incorporated. Would people be interested in that?","m.mentions":{},"msgtype":"m.text"},"ts":1707257721496,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CdC5VmKVFCjDEtmtytkLf3LLQ9n2JHFT5encR0df2rA"},
{"content":{"body":"littledan while such a presentation would be interesting, it wouldn't do much for my concerns, which are about getting experience with the actual thing in practice before standardizing it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> while such a presentation would be interesting, it wouldn't do much for my concerns, which are about getting experience with the actual thing in practice before standardizing it","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707257768593,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xjgvoPflqTobcgY_VUY3xJRMKnLDGmkfFJgRjm5UIHc"},
{"content":{"body":"having past experience inform the design makes it more likely that the result will be good, but it does actually need to get used in the real world before we can be confident enough to fix the syntax in the language forever","m.mentions":{},"msgtype":"m.text"},"ts":1707257846758,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d68UNdAdEEZYYHkDc_XuJBkeSdDaUtXmLEjgWKd3m0s"},
{"content":{"body":" * having past experience inform the design makes it more likely that the result will be good, but it does actually need to get used in the real world before we can be confident enough to fix the syntax in the language forever (IMO)","m.mentions":{},"m.new_content":{"body":"having past experience inform the design makes it more likely that the result will be good, but it does actually need to get used in the real world before we can be confident enough to fix the syntax in the language forever (IMO)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$d68UNdAdEEZYYHkDc_XuJBkeSdDaUtXmLEjgWKd3m0s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707257854726,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yox-OTPcLRbveNLisvoLH64ZfDqnFaLrBiiGpVvF6FU"},
{"content":{"body":"littledan: i assume you're referring to dr. herman's presentation? (which i missed) or were there more","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i assume you're referring to dr. herman's presentation? (which i missed) or were there more","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"ts":1707257886205,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qlG83VEpTRUPsudqP9tpxrY8tVBINCX6p6Coz1RaLWQ"},
{"content":{"body":"> <@devsnek:matrix.org> i think most (serious) localization systems are actually somewhat similar, especially in how they author data\n\nThis does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars.) \n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MVNBH_YLnEM-YzdklUCY5bKm-NiSAWOELDGDZOM-N0I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i think most (serious) localization systems are actually somewhat similar, especially in how they author data</blockquote></mx-reply><p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation.</p>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$MVNBH_YLnEM-YzdklUCY5bKm-NiSAWOELDGDZOM-N0I"}},"msgtype":"m.text"},"ts":1707257892178,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$dfnxoS0fd6_90_Zb4Co0amiy6wloNT9nqREhcQaJAEI"},
{"content":{"body":"> <@ljharb:matrix.org> littledan: i assume you're referring to dr. herman's presentation? (which i missed) or were there more\n\nyes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qlG83VEpTRUPsudqP9tpxrY8tVBINCX6p6Coz1RaLWQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i assume you're referring to dr. herman's presentation? (which i missed) or were there more</blockquote></mx-reply>yes","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$qlG83VEpTRUPsudqP9tpxrY8tVBINCX6p6Coz1RaLWQ"}},"msgtype":"m.text"},"ts":1707257899975,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_9DQRFB65t5a1hXHwOflCxWcTwwr88E9jjT0-LSbp_8"},
{"content":{"body":"It wasn't referring to any comment from you towards Felienne or that area of work","m.mentions":{},"m.relates_to":{"event_id":"$_9DQRFB65t5a1hXHwOflCxWcTwwr88E9jjT0-LSbp_8","is_falling_back":true,"m.in_reply_to":{"event_id":"$_9DQRFB65t5a1hXHwOflCxWcTwwr88E9jjT0-LSbp_8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707257941905,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tkdNUNKR6SsdocC6MQDwA3uZ6ZGcWTtQYvHj3ZZdN4w"},
{"content":{"body":"> <@devsnek:matrix.org> i think most (serious) localization systems are actually somewhat similar, especially in how they author data\n\n * This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MVNBH_YLnEM-YzdklUCY5bKm-NiSAWOELDGDZOM-N0I?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i think most (serious) localization systems are actually somewhat similar, especially in how they author data</blockquote></mx-reply> * <p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation.</p>\n","m.mentions":{},"m.new_content":{"body":"This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation.","format":"org.matrix.custom.html","formatted_body":"<p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation.</p>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dfnxoS0fd6_90_Zb4Co0amiy6wloNT9nqREhcQaJAEI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707258100546,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$yqjSH0qfuvdavlDXa2P7ZdIUcWMcJYOvtLsHj4Yw5ZM"},
{"content":{"body":" * This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation/innovation.","format":"org.matrix.custom.html","formatted_body":" * <p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation/innovation.</p>\n","m.mentions":{},"m.new_content":{"body":"This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation/innovation.","format":"org.matrix.custom.html","formatted_body":"<p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation/variation/innovation.</p>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dfnxoS0fd6_90_Zb4Co0amiy6wloNT9nqREhcQaJAEI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707258149988,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$tjuUo_XdoJSKeR1jwITaN6PnREd1bUIYCFROrkUiyHI"},
{"content":{"body":" * This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation / variation / innovation.","format":"org.matrix.custom.html","formatted_body":" * <p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation / variation / innovation.</p>\n","m.mentions":{},"m.new_content":{"body":"This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation / variation / innovation.","format":"org.matrix.custom.html","formatted_body":"<p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of having translators converge on the same standard language across different applications (potentially) outweigh the cost of convergence preventing ecosystem fragmentation / variation / innovation.</p>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dfnxoS0fd6_90_Zb4Co0amiy6wloNT9nqREhcQaJAEI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707258157284,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$VybfDJ_qKG8somEkbdglHXjv-Gk-qDcrkcrSGJe1kNk"},
{"content":{"body":"https://github.com/tc39/proposal-arraybuffer-transfer/issues/12","m.mentions":{},"msgtype":"m.text"},"ts":1707258351014,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$psMLS_V8BMa0fj7NLHoJKrTL6oKjxYTfDgJttDqPrOU"},
{"content":{"body":"one mitigation with respect to the risk of TG5 fizzling out: Mikhail is on a tenure track :)","m.mentions":{},"msgtype":"m.text"},"ts":1707258451184,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8"},
{"content":{"body":" * API standardization also tries to solve ecosystem fragmentation, insofar that the ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in ECMA-402. It would benefit translators to converge, across organizations, on a single solution (that is better than gettext).","m.mentions":{},"m.new_content":{"body":"API standardization also tries to solve ecosystem fragmentation, insofar that the ecosystem has multiple solutions solving the same problem with difficult interoperability between solutions. I can see an anti-fragmentation justification for MessageFormat 2 in ECMA-402. It would benefit translators to converge, across organizations, on a single solution (that is better than gettext).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4kNgECFUV5xT6PvL7F9nL04bVRcbhC_RUrZLENfSgGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707258547438,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$61eEnbwKp9dGq39HcrZBI3e2O5592Fk3ZBMzSYsdgLM"},
{"content":{"body":"I believe he actually has tenure-equivalent status at UiB","m.mentions":{},"m.relates_to":{"event_id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8","is_falling_back":true,"m.in_reply_to":{"event_id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707258580108,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Q15EOfMGvbf6CnmCH8tTv-zdXE2oVQoFCqJZ17iBxsU"},
{"content":{"body":"sgtm","m.mentions":{},"m.relates_to":{"event_id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8","is_falling_back":true,"m.in_reply_to":{"event_id":"$Q15EOfMGvbf6CnmCH8tTv-zdXE2oVQoFCqJZ17iBxsU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707258610008,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cgOuorhtYAKTQ8mVvhko2AGUlmYK2e8KVeDyrLE9pXY"},
{"content":{"body":" * This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of reducing ecosystem fragmentation—having translators converge on the same standard language across different applications—potentially outweigh the cost of convergence preventing necessary ecosystem variation / innovation.","format":"org.matrix.custom.html","formatted_body":" * <p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of reducing ecosystem fragmentation—having translators converge on the same standard language across different applications—potentially outweigh the cost of convergence preventing necessary ecosystem variation / innovation.</p>\n","m.mentions":{},"m.new_content":{"body":"This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)\n\nThis homogeneity may make the benefit of reducing ecosystem fragmentation—having translators converge on the same standard language across different applications—potentially outweigh the cost of convergence preventing necessary ecosystem variation / innovation.","format":"org.matrix.custom.html","formatted_body":"<p>This does match my experience too; the requirements of text localization seem to be fairly homogenous across applications. (They do vary much more across human languages with very different grammars. But my assumption here is that all applications want to be able to localize their text to any living human language, so this versatility requirement is similar between applications.)</p>\n<p>This homogeneity may make the benefit of reducing ecosystem fragmentation—having translators converge on the same standard language across different applications—potentially outweigh the cost of convergence preventing necessary ecosystem variation / innovation.</p>\n","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dfnxoS0fd6_90_Zb4Co0amiy6wloNT9nqREhcQaJAEI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707258721942,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$3nEj25QfE09yb2Sni2yUOz0yjk4O7jCy4noPUgjRwF8"},
{"content":{"body":"yeap, the position I have is a permanent academic position, equivalent to tenure :)","m.mentions":{},"m.relates_to":{"event_id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8","is_falling_back":true,"m.in_reply_to":{"event_id":"$cgOuorhtYAKTQ8mVvhko2AGUlmYK2e8KVeDyrLE9pXY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707259852179,"senderName":"Mikhail Barash","senderId":"@mikbar-uib:matrix.org","id":"$xkLbnECwGccMeLe8QI_Q_krSvDY9HV78fAVP3YsloKc"},
{"content":{"body":"oops, well, congrats!","m.mentions":{},"m.relates_to":{"event_id":"$NabShAIiL8lp2aifkgvgcP0_BAeT9yd1SmWSrtRnty8","is_falling_back":true,"m.in_reply_to":{"event_id":"$xkLbnECwGccMeLe8QI_Q_krSvDY9HV78fAVP3YsloKc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1707260982580,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GFKbIMxz6qJxpgud62IPA4QZjPLFqAX4DKro9xHqolw"},
{"content":{"body":"Congrats on reaching this milestone to ptomato and all of the Temporal champions! The remaining editorial changes should unblock all implementations to proceed.","format":"org.matrix.custom.html","formatted_body":"Congrats on reaching this milestone to <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a> and all of the Temporal champions! The remaining editorial changes should unblock all implementations to proceed.","m.mentions":{"user_ids":["@pchimento:igalia.com"]},"msgtype":"m.text"},"ts":1707261031537,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$r44Mivkb8-wZM722jcGuYns1Ms9Yp2Zzm-3BfXLLzrA"},
{"content":{"body":"if implementers still feel blocked or like it's not ready yet: let's discuss your concerns","m.mentions":{},"msgtype":"m.text"},"ts":1707261100359,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3-Wq7fJSy3VXz9nPLT6mdColgggXcvu-YeLMa3iCjcA"},
{"content":{"body":"can someone let me in the zoom ?","m.mentions":{},"msgtype":"m.text"},"ts":1707261195917,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$fmji8TSZrjxcYV0WEx7FIU64cTzUXOtHUmWBG4fSlJs"},
{"content":{"body":"OT: I hope everyone is enjoying our San Diego office, wish I could have made it to be there.","msgtype":"m.text"},"ts":1707261257329,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$koe19Tl_FM9hWMEejK2EEpormVY_o27eKmMBl7hBJDo"},
{"content":{"body":"> <@mhofman:matrix.org> can someone let me in the zoom ?\n\nyou are showing as in the room.  all good?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fmji8TSZrjxcYV0WEx7FIU64cTzUXOtHUmWBG4fSlJs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>can someone let me in the zoom ?</blockquote></mx-reply>you are showing as in the room.  all good?","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$fmji8TSZrjxcYV0WEx7FIU64cTzUXOtHUmWBG4fSlJs"}},"msgtype":"m.text"},"ts":1707261283360,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Hi5pChhnYTQr3Rd99A1ELLx4p0RFvDZr6XHMshw9HtU"},
{"content":{"body":"> <@softwarechris:matrix.org> you are showing as in the room.  all good?\n\nYup someone let me in now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Hi5pChhnYTQr3Rd99A1ELLx4p0RFvDZr6XHMshw9HtU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>you are showing as in the room.  all good?</blockquote></mx-reply>Yup someone let me in now","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Hi5pChhnYTQr3Rd99A1ELLx4p0RFvDZr6XHMshw9HtU"}},"msgtype":"m.text"},"ts":1707261303423,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$r3ebXyFaVF0zrh-_LSxyH1Lxi2iOck1sC25X3md5RcE"},
{"content":{"body":"It's not just locks that need this, but also lock-free, concurrent algorithms that depend on CAS and spin-waiting.","m.mentions":{},"msgtype":"m.text"},"ts":1707261558892,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SN4CU2ys1sALHLl0o4mx3yr1adzcNRheLNBwUHWkBjY"},
{"content":{"body":"While not shared structs specific, I ran into this when working with the shared structs dev trial in an experiment with the TypeScript compiler.","m.mentions":{},"msgtype":"m.text"},"ts":1707261631572,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$oNBpXBK-5KXAnkH0Q_XqO_Np8uG0T2Y6omkaKakB52w"},
{"content":{"body":"By *this* I mean `Atomics.microwait()`.","format":"org.matrix.custom.html","formatted_body":"By <em>this</em> I mean <code>Atomics.microwait()</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1707261726724,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$k2EmAJO6mEyaaj18xHqLtl-fYYALOPY8mkb9a3OCCqU"},
{"content":{"body":" * By \"this\" I meant `Atomics.microwait()`.","format":"org.matrix.custom.html","formatted_body":" * By \"this\" I meant <code>Atomics.microwait()</code>.","m.mentions":{},"m.new_content":{"body":"By \"this\" I meant `Atomics.microwait()`.","format":"org.matrix.custom.html","formatted_body":"By \"this\" I meant <code>Atomics.microwait()</code>.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$k2EmAJO6mEyaaj18xHqLtl-fYYALOPY8mkb9a3OCCqU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707261735583,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cdw7y9zxNCmxRC11o6Oiv7aB3ioScMwaIFAvAbDLgFc"},
{"content":{"body":"are we gonna get an `Atomics.futex`","format":"org.matrix.custom.html","formatted_body":"are we gonna get an <code>Atomics.futex</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707262009426,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WOHoa4Nzx7tyzMKfEgM-JtP1Cml3rzzjqk1rvggAAEo"},
{"content":{"body":"Isn't that just `Atomics.compareExchange` and `Atomics.wait`? It's already a futex.","format":"org.matrix.custom.html","formatted_body":"Isn't that just <code>Atomics.compareExchange</code> and <code>Atomics.wait</code>? It's already a futex.","m.mentions":{},"msgtype":"m.text"},"ts":1707262035746,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$FdpreIQHTRz_MK53adrb4PhLuRrRX-DsaGKxwb24OZU"},
{"content":{"body":"ye","m.mentions":{},"msgtype":"m.text"},"ts":1707262051531,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$LzBQeTqmAze6i0eQzIOhfLQOVkz2tLRBK03nCG_wje8"},
{"content":{"body":"and then this proposal is the natural extension of that","m.mentions":{},"msgtype":"m.text"},"ts":1707262057699,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$7Yp677l5xaAfODEaJrESy9cIyx_Jf9aeIDbFfMvCloU"},
{"content":{"body":"srs question, could this just be an asm-like string pragma, for emscripten?","m.mentions":{},"msgtype":"m.text"},"ts":1707262085759,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oMZk_S3YY922nfF6i9c320W1VPuhbK4hIK5t0dOQpak"},
{"content":{"body":"well, given saboff's feedback, I am imagining a version which did the spin-plus-backoff-then-sleep thing internally","m.mentions":{},"msgtype":"m.text"},"ts":1707262090713,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$W13Xv5PmnQW40YwOKL9VYW63hMla-aMze9jHjvfVk7w"},
{"content":{"body":" * srs question, could this be an asm-like string pragma, for emscripten?","m.mentions":{},"m.new_content":{"body":"srs question, could this be an asm-like string pragma, for emscripten?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$oMZk_S3YY922nfF6i9c320W1VPuhbK4hIK5t0dOQpak","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707262099828,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ItQawly2bOnzA6cVr3wHpvZ2nWU7zHCDvtjJQ_PERbc"},
{"content":{"body":"wdym jordan","m.mentions":{},"msgtype":"m.text"},"ts":1707262100711,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Ad3QDcwrWmN30GN58AdbY8M2qHklkFbj565tidrK_1Q"},
{"content":{"body":"> <@ljharb:matrix.org> srs question, could this be an asm-like string pragma, for emscripten?\n\ncould... what be?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oMZk_S3YY922nfF6i9c320W1VPuhbK4hIK5t0dOQpak?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>srs question, could this be an asm-like string pragma, for emscripten?</blockquote></mx-reply>could... what be?","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oMZk_S3YY922nfF6i9c320W1VPuhbK4hIK5t0dOQpak"}},"msgtype":"m.text"},"ts":1707262102845,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wymRWmUZsv325vnapKYM_tXajRbX1eUC9hW4IavA03A"},
{"content":{"body":"like shu explained this as a hint to the CPU","m.mentions":{},"msgtype":"m.text"},"ts":1707262109874,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oc-DZrHsxLhqvhFCAg41etPjHjwltrvgGcqvxxdPe28"},
{"content":{"body":"so `\"spin 5\"` or something","format":"org.matrix.custom.html","formatted_body":"so <code>\"spin 5\"</code> or something","m.mentions":{},"msgtype":"m.text"},"ts":1707262116588,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wxitMYUrNcrwKC9jyzFyHKdB8VbSNqtgpDjxOA6dPwM"},
{"content":{"body":" * so `\"spin 5\";` or something","format":"org.matrix.custom.html","formatted_body":" * so <code>\"spin 5\";</code> or something","m.mentions":{},"m.new_content":{"body":"so `\"spin 5\";` or something","format":"org.matrix.custom.html","formatted_body":"so <code>\"spin 5\";</code> or something","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wxitMYUrNcrwKC9jyzFyHKdB8VbSNqtgpDjxOA6dPwM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707262120678,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OM8MbElx5Rv5NgbTriY547ozpvUYJFMXeaI5hkUnGxM"},
{"content":{"body":"a static no-op string, not in the spec, that gives a hint","m.mentions":{},"msgtype":"m.text"},"ts":1707262140874,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$83BCu3w_vqkE7xpUESOkJuaXZm2Yh6LsAHhIeAG0QkE"},
{"content":{"body":"(i'm assuming there's a reason why that wouldn't work but i don't know what it would be)","m.mentions":{},"msgtype":"m.text"},"ts":1707262158889,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yL1WxslfhWOGj5NYLnOyLGo3NbtJMUQrlddTGH12gaI"},
{"content":{"body":"like if the engine sees `\"spin 5\"` in a statement position, it emits a `yield` instruction?","format":"org.matrix.custom.html","formatted_body":"like if the engine sees <code>\"spin 5\"</code> in a statement position, it emits a <code>yield</code> instruction?","m.mentions":{},"msgtype":"m.text"},"ts":1707262176809,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$kFIbGdR3viRgGwopeydUuZ-IwEECHXYg_BtJggXOgxA"},
{"content":{"body":"I feel reluctant to bring this slide deck to my colleagues due to the controversial choice of font. What a rebel.","m.mentions":{},"msgtype":"m.text"},"ts":1707262177942,"senderName":"zbraniecki","senderId":"@zbraniecki:matrix.org","id":"$pzj10-i0MtbF_LnCDFEcTdf-HeZMBDTw0DO8nXOHJTA"},
{"content":{"body":"snek: yes, basically","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: yes, basically","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"ts":1707262229889,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vubG8SQhUQqVely1qysxXYgEG5BJu9lID_XYWMYwVOo"},
{"content":{"body":"i think like","m.mentions":{},"msgtype":"m.text"},"ts":1707262246667,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$YupCXL9IkRyyAv97xr0GjC3EYbAh7gPW2JJ2t67neNw"},
{"content":{"body":"technically yes that's a thing that could happen","m.mentions":{},"msgtype":"m.text"},"ts":1707262253365,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$qGDO9UjTnel7-NM6etmWOAyc0iSlJSYgPiBpvFNT7P8"},
{"content":{"body":"we make the language we can do whatever we want","m.mentions":{},"msgtype":"m.text"},"ts":1707262257473,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$bbH_8veckfiPAgQZnL1RpWsdwYZ7zxYAmfpSJVrC9x4"},
{"content":{"body":"right but i mean this wouldn't need to be in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1707262271450,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NdyiTahV_w8QshmSJsSRGgKYF3Mr7AAahdLocaWaUvk"},
{"content":{"body":"i don't think magic strings are generally a good pattern though","m.mentions":{},"msgtype":"m.text"},"ts":1707262273437,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$vX34L0i89uyW1ZoawOyb7HOwPMuN3QR1q94Frs2Ln8c"},
{"content":{"body":" * right but i mean this wouldn't need to be in the spec necessarily","m.mentions":{},"m.new_content":{"body":"right but i mean this wouldn't need to be in the spec necessarily","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$NdyiTahV_w8QshmSJsSRGgKYF3Mr7AAahdLocaWaUvk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707262276761,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$F1qWZGA6A1fE-8FeyXx4_5nMOD44TCbGNgPt2BIisgE"},
{"content":{"body":"oh sure, agreed","m.mentions":{},"msgtype":"m.text"},"ts":1707262278682,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yRf1mODj3-4HK8xK3EV_mjtFPnfUn9qQraalSKmAd9s"},
{"content":{"body":"was just kind of wondering out loud if that's all that's needed, a static marker","m.mentions":{},"msgtype":"m.text"},"ts":1707262292500,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6HSfo6uBDqkjF1MaEAPYTebK-qagC0rFU8QclkfAKJQ"},
{"content":{"body":" * was just kind of wondering out loud if that's all that's needed, a statically recognizable marker","m.mentions":{},"m.new_content":{"body":"was just kind of wondering out loud if that's all that's needed, a statically recognizable marker","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6HSfo6uBDqkjF1MaEAPYTebK-qagC0rFU8QclkfAKJQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707262300011,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BBkjM0cU9WifJvWXR9VfxHOzjOLdWPHS1NIvd01OMys"},
{"content":{"body":"i'm personally ok with Atomics being a bit of a weird area in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1707262358006,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$cl_gBcl8LapzsVbLH-4eGJOCrDy92Ucb93rhYPc6qPs"},
{"content":{"body":"atomics are kind of a weird area in every language","m.mentions":{},"msgtype":"m.text"},"ts":1707262365791,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$D176qfrsK1AVZjYOLrCYza-MKAmWpo6EUzq7S1bJstk"},
{"content":{"body":"The implementation of a `yield` instruction tends to be a bit more complicated than a static marker. You want some input to the instruction to allow some variance to the spin in the case you have two threads on two independent cores spinning at the same time in lock-step. It's not `\"spin 5\"` its more like `yieldIfNecessary(spinCount)`. You don't always yield. sometimes you sleep, and sometimes you do nothing, all to combat contention.","format":"org.matrix.custom.html","formatted_body":"The implementation of a <code>yield</code> instruction tends to be a bit more complicated than a static marker. You want some input to the instruction to allow some variance to the spin in the case you have two threads on two independent cores spinning at the same time in lock-step. It's not <code>\"spin 5\"</code> its more like <code>yieldIfNecessary(spinCount)</code>. You don't always yield. sometimes you sleep, and sometimes you do nothing, all to combat contention.","m.mentions":{},"msgtype":"m.text"},"ts":1707262583174,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$KkeAV8as08zubM2FT6RFNBtzzBEZCA5Y6ZhFD_-1MXE"},
{"content":{"body":"it could be `\"yield if necessary spinCount\"`","format":"org.matrix.custom.html","formatted_body":"it could be <code>\"yield if necessary spinCount\"</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707262619098,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$rIIwFYSX2SUBEh-PWzMSYoksZ_IUShibQ-jcZqyAgWc"},
{"content":{"body":"we make the rules","m.mentions":{},"msgtype":"m.text"},"ts":1707262628714,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$dycq2B7Yyi5aFsz54pipzBGwEvc_sCh8bSbhtJEWFpo"},
{"content":{"body":"but","m.mentions":{},"msgtype":"m.text"},"ts":1707262630036,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Xg8vbFmd2V_dD0DqclocxxLlQlaW4CWgXWyYoU2EuWA"},
{"content":{"body":"i don't want that","m.mentions":{},"msgtype":"m.text"},"ts":1707262631872,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$lvVh6g266-0JAA_ETyHC_1kbokm_39dcs7k13xjc6lE"},
{"content":{"body":"What is `spinCount` though?","format":"org.matrix.custom.html","formatted_body":"What is <code>spinCount</code> though?","m.mentions":{},"msgtype":"m.text"},"ts":1707262632449,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Rid17tRAQLSIiyH7rNXJAJwWELfOLmAzAAB4jaOMh1w"},
{"content":{"body":"a variable in scope","m.mentions":{},"msgtype":"m.text"},"ts":1707262637213,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$wRsWSRQk82ahe4kA2Yn2JzHWiVrjtA8_WZNotP2Lo2I"},
{"content":{"body":"idk","m.mentions":{},"msgtype":"m.text"},"ts":1707262638952,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Wta92xpAqoPklET_daWpxCVwaa_X1Yty_qfoGVJp09U"},
{"content":{"body":"That's terrible.","m.mentions":{},"msgtype":"m.text"},"ts":1707262641338,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LY02qnCAqJMRgkP_NzC2p7lQ6elOdTFgRDfHzQxmvxE"},
{"content":{"body":"yea","m.mentions":{},"msgtype":"m.text"},"ts":1707262644213,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$moR0dRMd5tN65tBvz8wDHPdVF50IWIrVOV3ev6QSxWE"},
{"content":{"body":"could make it a template literal 😄","m.mentions":{},"msgtype":"m.text"},"ts":1707262660043,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$d9Ord5wjfK3WrF1d3F7tHBvUTz9aabASZoXZAXlq3Ec"},
{"content":{"body":"`` `yield if necessary ${spinCount}` ``","format":"org.matrix.custom.html","formatted_body":"<code>`yield if necessary ${spinCount}`</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707262663908,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$nKP6RVt4tw2tcaUcv5wxyMYJ1esMjjSJ590BrrOmUe0"},
{"content":{"body":"i'd rather just have this on Atomics","m.mentions":{},"msgtype":"m.text"},"ts":1707262677184,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$4nz0OGVYQ6pLVBjeRqYCyHJ2xph8ncfU0Lmn6AR8Gxo"},
{"content":{"body":"Just call it `Atomics.microwait(spinCount)` and be done. Implementations can and will inline that into instructions.","format":"org.matrix.custom.html","formatted_body":"Just call it <code>Atomics.microwait(spinCount)</code> and be done. Implementations can and will inline that into instructions.","m.mentions":{},"msgtype":"m.text"},"ts":1707262677794,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$fOn3i89MR0W__dRi34y0LPG4tiNbBLudgGoUWE0aX9M"},
{"content":{"body":"ok the graph on the screen does not say \"goes up steadily\" to me","m.mentions":{},"msgtype":"m.text"},"ts":1707262884062,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w2C05dahXgUltu3afXWpDpQDZTNGCyxEJFyh8wOkXDk"},
{"content":{"body":"that says \"is used by exactly one popular package\"","m.mentions":{},"msgtype":"m.text"},"ts":1707262891891,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$exvsGZk9dquDZG8Q-0xFWxJj4-s5h-bE1EKLAmqJMZA"},
{"content":{"body":"It looks like 2 or 3 popular packages, and 1300 other packages.","m.mentions":{},"msgtype":"m.text"},"ts":1707263116921,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8As2uzp3QjUDXkw8LKS0smCpUxvQ5uAl8QXvvjtw108"},
{"content":{"body":"`async do { await cb() }`","format":"org.matrix.custom.html","formatted_body":"<code>async do { await cb() }</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707263166142,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1gD3hCYLFXgTCNWveLbwyRqp6lk6MkLUmWpshQVcunU"},
{"content":{"body":"what's up with do expressions these days","m.mentions":{},"msgtype":"m.text"},"ts":1707263180692,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$TV_AthvRqxBr402WFCkgrOtI_mp5tZM-inbUJ4qI5Ko"},
{"content":{"body":"we should do do expressions (and async do expressions :)","m.mentions":{},"msgtype":"m.text"},"ts":1707263184298,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$qUY9RlNMmfOULI-NUPW-kZDtkSxEiwQjBRAb1f_Refo"},
{"content":{"body":" * we should do do expressions (and async do expressions ):)","m.mentions":{},"m.new_content":{"body":"we should do do expressions (and async do expressions ):)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$qUY9RlNMmfOULI-NUPW-kZDtkSxEiwQjBRAb1f_Refo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707263188506,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$hKEPXdt7n-szvIpINfgcnABkcB3U4OoqXxie63tAQIw"},
{"content":{"body":" * we should do do expressions (and async do expressions) :)","m.mentions":{},"m.new_content":{"body":"we should do do expressions (and async do expressions) :)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$qUY9RlNMmfOULI-NUPW-kZDtkSxEiwQjBRAb1f_Refo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707263192071,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$WMSbz3H7dXIwxGeu5baYdXSpXH6m4QFV30_HQFtACRk"},
{"content":{"body":"I think the committee's time and my time is better spent on APIs than syntax","m.mentions":{},"msgtype":"m.text"},"ts":1707263200399,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wlAaZeBRUgTJVpCo9xy9b25fz5UeOnRdFedLJCp5m48"},
{"content":{"body":"so I am working on APIs rather than syntax","m.mentions":{},"msgtype":"m.text"},"ts":1707263204731,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BR3JwyRmvdacbQz7UcniueGcbTCnsaUu3VKz3CA-g3o"},
{"content":{"body":" * I think the committee's time and my time is better spent on APIs than syntax at the current margin","m.mentions":{},"m.new_content":{"body":"I think the committee's time and my time is better spent on APIs than syntax at the current margin","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$wlAaZeBRUgTJVpCo9xy9b25fz5UeOnRdFedLJCp5m48","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707263210610,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Wtre61Qn_OqBTgjCmMRnLl2TVjHAo2xVXZmJppPutGo"},
{"content":{"body":"we have so many syntax proposals","m.mentions":{},"msgtype":"m.text"},"ts":1707263214879,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8cileOsOXk9R8dYGEwzkQH5Wv8xNWHJwjdFbmS8HKKM"},
{"content":{"body":"is there a concrete API i can just read somewhere that has this pattern","m.mentions":{},"msgtype":"m.text"},"ts":1707263222030,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oC_T_oWMdX91sdGRTYruDdgdif4UrtXCYx1Ov3wQEQA"},
{"content":{"body":"the \"takes a callback and might throw sync, but otherwise async\"","m.mentions":{},"msgtype":"m.text"},"ts":1707263229377,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2Jwi11SOiGNgbcNOJNtPk_ARg0OV9BNT3cEPW5Dfn6I"},
{"content":{"body":"While I certainly hope `do {}` does eventually advance, I have some big concerns about `async do {}`","format":"org.matrix.custom.html","formatted_body":"While I certainly hope <code>do {}</code> does eventually advance, I have some big concerns about <code>async do {}</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707263245398,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TYsbeiWwSNbzNM6t10GhGyOezwLozO-RV4x-iYpGnaM"},
{"content":{"body":"async blocks are handy in rust","m.mentions":{},"msgtype":"m.text"},"ts":1707263258894,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$8_DJ6AoVU4kNRzrVFRZpn6c1b-y7GYg83KmeHShDqNI"},
{"content":{"body":"yeah, so nice","m.mentions":{},"msgtype":"m.text"},"ts":1707263263470,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$wCrv-QzEHmHfPO2fwvgZCDLQcUs_m7hHFG8QJaCYFJo"},
{"content":{"body":"It depends on what `do { return; }` does. If it actually causes a return from the containing function, then what do you do with `async do { return; }`. Does `async do` differ dramatically from `do` in this case? It obviously can't return from the containing function.","format":"org.matrix.custom.html","formatted_body":"It depends on what <code>do { return; }</code> does. If it actually causes a return from the containing function, then what do you do with <code>async do { return; }</code>. Does <code>async do</code> differ dramatically from <code>do</code> in this case? It obviously can't return from the containing function.","m.mentions":{},"msgtype":"m.text"},"ts":1707263347638,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7wViMWIxn0fSUpeUDehBF0wR9tlIGgcStDsikP1BvnM"},
{"content":{"body":"> <@shuyuguo:matrix.org> is there a concrete API i can just read somewhere that has this pattern\n\nNo, anything using WebIDL is pretty explicit that if you're returning a Promise, you always return a (possibly rejected) Promise; you never throw sync.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oC_T_oWMdX91sdGRTYruDdgdif4UrtXCYx1Ov3wQEQA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>is there a concrete API i can just read somewhere that has this pattern</blockquote></mx-reply>No, anything using WebIDL is pretty explicit that if you're returning a Promise, you always return a (possibly rejected) Promise; you never throw sync.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oC_T_oWMdX91sdGRTYruDdgdif4UrtXCYx1Ov3wQEQA"}},"msgtype":"m.text"},"ts":1707263389593,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$SMkl0Ig_Bwt1hCmnH3YKymxu690KPt5LZ2JB4Fp8Dl8"},
{"content":{"body":"And if `do {}` doesn't support `return`, `break`, or `continue`, it seems far lest interesting to me.","format":"org.matrix.custom.html","formatted_body":"And if <code>do {}</code> doesn't support <code>return</code>, <code>break</code>, or <code>continue</code>, it seems far lest interesting to me.","m.mentions":{},"msgtype":"m.text"},"ts":1707263391442,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HCN8nY7BZSj7RKRk_xKh914MKCyd7iXDFaj72xqSvo0"},
{"content":{"body":"> <@rbuckton:matrix.org> It depends on what `do { return; }` does. If it actually causes a return from the containing function, then what do you do with `async do { return; }`. Does `async do` differ dramatically from `do` in this case? It obviously can't return from the containing function.\n\n(syntax error, in current proposal)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7wViMWIxn0fSUpeUDehBF0wR9tlIGgcStDsikP1BvnM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>It depends on what <code>do { return; }</code> does. If it actually causes a return from the containing function, then what do you do with <code>async do { return; }</code>. Does <code>async do</code> differ dramatically from <code>do</code> in this case? It obviously can't return from the containing function.</blockquote></mx-reply>(syntax error, in current proposal)","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7wViMWIxn0fSUpeUDehBF0wR9tlIGgcStDsikP1BvnM"}},"msgtype":"m.text"},"ts":1707263398299,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2gGxblpTfgpEB8l9NLHENbc_cuQKrAsE1WjDb-OZrdU"},
{"content":{"body":"that is, `async do { return }` is syntax error","format":"org.matrix.custom.html","formatted_body":"that is, <code>async do { return }</code> is syntax error","m.mentions":{},"msgtype":"m.text"},"ts":1707263410370,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_owrlfVP_BsUPgNnNDbZps55Ijwxcn7cMYrVOD6Cmgk"},
{"content":{"body":"then i'm confused, if this is a bad pattern then... shouldn't we not add this","m.mentions":{},"msgtype":"m.text"},"ts":1707263410412,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2fUUZdbDfj5iluQ5ZipvQtpsS63bszJ3xurcXUIH7VA"},
{"content":{"body":"and `do { return }` returns from current function","format":"org.matrix.custom.html","formatted_body":"and <code>do { return }</code> returns from current function","m.mentions":{},"msgtype":"m.text"},"ts":1707263415781,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lVzAaCnyGMelm04cbQLMf3BQ-sNPopuGCpX-T30ur0A"},
{"content":{"body":"> <@bakkot:matrix.org> that says \"is used by exactly one popular package\"\n\nHalf of those p-try downloads come from Jest indeed","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$exvsGZk9dquDZG8Q-0xFWxJj4-s5h-bE1EKLAmqJMZA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>that says &quot;is used by exactly one popular package&quot;</blockquote></mx-reply>Half of those p-try downloads come from Jest indeed","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$exvsGZk9dquDZG8Q-0xFWxJj4-s5h-bE1EKLAmqJMZA"}},"msgtype":"m.text"},"ts":1707263431165,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$xGHp9VjK6HWenpvSStv2YBFEeUVcTKxJ1E_QstvZeiA"},
{"content":{"body":"> <@tabatkins:matrix.org> No, anything using WebIDL is pretty explicit that if you're returning a Promise, you always return a (possibly rejected) Promise; you never throw sync.\n\nyeah this conditionally synchronous kind of thing is similarly considered unkosher, at least according to the logic we all had around 2015","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SMkl0Ig_Bwt1hCmnH3YKymxu690KPt5LZ2JB4Fp8Dl8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>No, anything using WebIDL is pretty explicit that if you're returning a Promise, you always return a (possibly rejected) Promise; you never throw sync.</blockquote></mx-reply>yeah this conditionally synchronous kind of thing is similarly considered unkosher, at least according to the logic we all had around 2015","m.mentions":{"user_ids":["@tabatkins:matrix.org","@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SMkl0Ig_Bwt1hCmnH3YKymxu690KPt5LZ2JB4Fp8Dl8"}},"msgtype":"m.text"},"ts":1707263472328,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$x3ydXX7amIaUckAlF4IwLbAll-gToA3Vare-ogTEipg"},
{"content":{"body":"> <@shuyuguo:matrix.org> then i'm confused, if this is a bad pattern then... shouldn't we not add this\n\nIs this the Promise.try() discussion happening right now? It doesn't throw sync. It just *calls* the function sync, but still causes a rejected promise. (If the slides are still accurate.)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2fUUZdbDfj5iluQ5ZipvQtpsS63bszJ3xurcXUIH7VA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>then i&#39;m confused, if this is a bad pattern then... shouldn&#39;t we not add this</blockquote></mx-reply>Is this the Promise.try() discussion happening right now? It doesn't throw sync. It just <em>calls</em> the function sync, but still causes a rejected promise. (If the slides are still accurate.)","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2fUUZdbDfj5iluQ5ZipvQtpsS63bszJ3xurcXUIH7VA"}},"msgtype":"m.text"},"ts":1707263498033,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$pQyvv9f2QPQwWBz3pePpFIXBnb1o9-qM_iwcyd3OpN0"},
{"content":{"body":"I see similar pattern in some other libs, like nodejs perf.timerify()","m.mentions":{},"msgtype":"m.text"},"ts":1707263503552,"senderName":"hax (HE Shi-Jun)","senderId":"@haxjs:matrix.org","id":"$Nq9NBFfFcdVy1g66tiwCcz6e0hqT0Dpj10_VwjzcXbE"},
{"content":{"body":"(I'm not in the meeting, I'm just observing from chat.)","m.mentions":{},"msgtype":"m.text"},"ts":1707263506741,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$W1mKWzKT-QYmupV8sEgDLdBdLWiG2rUl5F3RGON1AbM"},
{"content":{"body":"> <@tabatkins:matrix.org> Is this the Promise.try() discussion happening right now? It doesn't throw sync. It just *calls* the function sync, but still causes a rejected promise. (If the slides are still accurate.)\n\nthat's the discussion yes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pQyvv9f2QPQwWBz3pePpFIXBnb1o9-qM_iwcyd3OpN0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Is this the Promise.try() discussion happening right now? It doesn't throw sync. It just <em>calls</em> the function sync, but still causes a rejected promise. (If the slides are still accurate.)</blockquote></mx-reply>that's the discussion yes","m.mentions":{"user_ids":["@tabatkins:matrix.org","@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$pQyvv9f2QPQwWBz3pePpFIXBnb1o9-qM_iwcyd3OpN0"}},"msgtype":"m.text"},"ts":1707263514024,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yr-NAzLMPRMwuCa_G0GccEOjxlJby0RMPY_i5vuZShU"},
{"content":{"body":"That means `async do {}` and `do {}` are wildly different things, and potentially a refactoring hazard. I'm not opposed to the capability that `async do {}` offers, but I wonder if it shouldn't use `do` in that case because it could be confusing.","format":"org.matrix.custom.html","formatted_body":"That means <code>async do {}</code> and <code>do {}</code> are wildly different things, and potentially a refactoring hazard. I'm not opposed to the capability that <code>async do {}</code> offers, but I wonder if it shouldn't use <code>do</code> in that case because it could be confusing.","m.mentions":{},"msgtype":"m.text"},"ts":1707263517393,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HzyddSnqLAFxvVNBuVxqQSHACwILsiceysQdGEU1Y3o"},
{"content":{"body":"> <@tabatkins:matrix.org> Is this the Promise.try() discussion happening right now? It doesn't throw sync. It just *calls* the function sync, but still causes a rejected promise. (If the slides are still accurate.)\n\nyeah the thing is that the use case has to do with something which might throw sync or return a promise... which is a situation that's not supposed to occur","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pQyvv9f2QPQwWBz3pePpFIXBnb1o9-qM_iwcyd3OpN0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Is this the Promise.try() discussion happening right now? It doesn't throw sync. It just <em>calls</em> the function sync, but still causes a rejected promise. (If the slides are still accurate.)</blockquote></mx-reply>yeah the thing is that the use case has to do with something which might throw sync or return a promise... which is a situation that's not supposed to occur","m.mentions":{"user_ids":["@tabatkins:matrix.org","@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$pQyvv9f2QPQwWBz3pePpFIXBnb1o9-qM_iwcyd3OpN0"}},"msgtype":"m.text"},"ts":1707263555875,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rpHY_8iI7EhYQtgawY0gS2p-LkJ01fRpgXIftIWY3Js"},
{"content":{"body":"TabAtkins: i know, but the _function_ throws sync","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: i know, but the <em>function</em> throws sync","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"ts":1707263556155,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZWUqNCAUjn7UQqYHOh0E1PImuDA0g1CulM-MMCPUI-I"},
{"content":{"body":"> <@rbuckton:matrix.org> That means `async do {}` and `do {}` are wildly different things, and potentially a refactoring hazard. I'm not opposed to the capability that `async do {}` offers, but I wonder if it shouldn't use `do` in that case because it could be confusing.\n\nI have been thinking about maybe `async {}` and `expr {}` or something yeah","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HzyddSnqLAFxvVNBuVxqQSHACwILsiceysQdGEU1Y3o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>That means <code>async do {}</code> and <code>do {}</code> are wildly different things, and potentially a refactoring hazard. I'm not opposed to the capability that <code>async do {}</code> offers, but I wonder if it shouldn't use <code>do</code> in that case because it could be confusing.</blockquote></mx-reply>I have been thinking about maybe <code>async {}</code> and <code>expr {}</code> or something yeah","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$HzyddSnqLAFxvVNBuVxqQSHACwILsiceysQdGEU1Y3o"}},"msgtype":"m.text"},"ts":1707263559969,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sN4oLtlhRQhZGMSjGmqJb8Fisf5UGSG42coieuBbh5I"},
{"content":{"body":"> <@shuyuguo:matrix.org> TabAtkins: i know, but the _function_ throws sync\n\nSure, but it might return sync too. You can just hand a synchronous function to this.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZWUqNCAUjn7UQqYHOh0E1PImuDA0g1CulM-MMCPUI-I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: i know, but the <em>function</em> throws sync</blockquote></mx-reply>Sure, but it might return sync too. You can just hand a synchronous function to this.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZWUqNCAUjn7UQqYHOh0E1PImuDA0g1CulM-MMCPUI-I"}},"msgtype":"m.text"},"ts":1707263595115,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$68Zp7vJ2HxV7SUWmMEz2pEVCDpOc3sDGCOEbZrOGH9o"},
{"content":{"body":"> <@bakkot:matrix.org> I have been thinking about maybe `async {}` and `expr {}` or something yeah\n\nwhat about `expr` and `asyncExpr`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sN4oLtlhRQhZGMSjGmqJb8Fisf5UGSG42coieuBbh5I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have been thinking about maybe <code>async {}</code> and <code>expr {}</code> or something yeah</blockquote></mx-reply>what about <code>expr</code> and <code>asyncExpr</code>","m.mentions":{"user_ids":["@bakkot:matrix.org","@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$sN4oLtlhRQhZGMSjGmqJb8Fisf5UGSG42coieuBbh5I"}},"msgtype":"m.text"},"ts":1707263600812,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$9hmSOGe_kKpZw6wrGYVhwBIabGJElvzprYl_9aY-iJY"},
{"content":{"body":"Promise construction seems to trip everybody up, so avoiding it I think is generally a win.","m.mentions":{},"msgtype":"m.text"},"ts":1707263604909,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$up3BlPkL-_2fY_DdGYenMwugmt0R1J1MVuJGqivlLTE"},
{"content":{"body":"> <@usharma:igalia.com> what about `expr` and `asyncExpr`\n\nI would prefer to never encounter a camelcase keyword","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9hmSOGe_kKpZw6wrGYVhwBIabGJElvzprYl_9aY-iJY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>what about <code>expr</code> and <code>asyncExpr</code></blockquote></mx-reply>I would prefer to never encounter a camelcase keyword","m.mentions":{"user_ids":["@usharma:igalia.com","@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9hmSOGe_kKpZw6wrGYVhwBIabGJElvzprYl_9aY-iJY"}},"msgtype":"m.text"},"ts":1707263620787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NXtxHDRWfrOAvpQysYLuoDTixevfQlew1GnhPGfWcbk"},
{"content":{"body":"But also: you might have a function in hand that you just don't know if it's sync or async, and want to consolidate your control flow into async","m.mentions":{},"msgtype":"m.text"},"ts":1707263622443,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$qCmUnIcF1BptGDHCSoWKURRocdml1PGYGH_dCXvBVA4"},
{"content":{"body":"we could both demonstrate the similarity and avoid the refactoring hazard","m.mentions":{},"msgtype":"m.text"},"ts":1707263625095,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$aB6JV-g75JI_BHhCQ7Y-MvJDe9z9qzMd42NPrhFLE4w"},
{"content":{"body":"> <@bakkot:matrix.org> I would prefer to never encounter a camelcase keyword\n\nhm okay fair","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NXtxHDRWfrOAvpQysYLuoDTixevfQlew1GnhPGfWcbk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I would prefer to never encounter a camelcase keyword</blockquote></mx-reply>hm okay fair","m.mentions":{"user_ids":["@bakkot:matrix.org","@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$NXtxHDRWfrOAvpQysYLuoDTixevfQlew1GnhPGfWcbk"}},"msgtype":"m.text"},"ts":1707263639063,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$D3p_qBa4ph7X6fyVAxZdrfE4QSPtqxR9Ghffp1QqKYM"},
{"content":{"body":"> <@tabatkins:matrix.org> But also: you might have a function in hand that you just don't know if it's sync or async, and want to consolidate your control flow into async\n\nright, snek just explained this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qCmUnIcF1BptGDHCSoWKURRocdml1PGYGH_dCXvBVA4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>But also: you might have a function in hand that you just don&#39;t know if it&#39;s sync or async, and want to consolidate your control flow into async</blockquote></mx-reply>right, <a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a> just explained this","m.mentions":{"user_ids":["@tabatkins:matrix.org","@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$qCmUnIcF1BptGDHCSoWKURRocdml1PGYGH_dCXvBVA4"}},"msgtype":"m.text"},"ts":1707263656600,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$T5zVh5Pz6DnqDFzMQWgIEc6zvlU1t_IygHIpeZRXU3I"},
{"content":{"body":"I was just wondering how we could mark both as related concepts while avoiding the double keyword issue","m.mentions":{},"msgtype":"m.text"},"ts":1707263673171,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$5ADICMPiBjw2kc1tVB5RtZLXaGf2RDbGPR5JWcyCgBk"},
{"content":{"body":"I see the need for the functionality of Promise.try, but I don't quite see why `Promise.try(callback)` is significantly better than `new Promise(resolve => resolve(callback()))`","format":"org.matrix.custom.html","formatted_body":"I see the need for the functionality of Promise.try, but I don't quite see why <code>Promise.try(callback)</code> is significantly better than <code>new Promise(resolve =&gt; resolve(callback()))</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707263680261,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$zAnP7L1C9fUE2GysZxdWDxtTHTAehQZmWan1ITcs-p8"},
{"content":{"body":"I'm just repeating what was in the slides when I read them this morning ^_^","m.mentions":{},"msgtype":"m.text"},"ts":1707263681667,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$oDoqJzGqXGymgy3m3lCyUmDb9FxAnZ7R2iJJyAyWq8E"},
{"content":{"body":"Bradford Smith: It's identical in functionality, it's just shorter.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: It's identical in functionality, it's just shorter.","m.mentions":{"user_ids":["@bradfordcsmith:matrix.org"]},"msgtype":"m.text"},"ts":1707263699388,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$UE5csW2LdkM0fwXW0VnOLKEcydXMLR_01IYHNA8X5Ig"},
{"content":{"body":"I am not convinced this comes up enough to need sugar","m.mentions":{},"msgtype":"m.text"},"ts":1707263711808,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3gnngphcft77jDVarwXeSRh7RBqNUI6J5YhQs__XQGk"},
{"content":{"body":"maybe it's just that I never try to be defensive against this case? if I ask for an async function and the user gives me a function which sycn throws, that's on them","m.mentions":{},"msgtype":"m.text"},"ts":1707263733875,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fpz1CONTXvgQJjQiVtrjKvurWGo3KoB9uFCIvcQ6OI4"},
{"content":{"body":"> <@usharma:igalia.com> I was just wondering how we could mark both as related concepts while avoiding the double keyword issue\n\nMy point was that they are only related at the surface level, and having too similar of a syntax is actually a detriment.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5ADICMPiBjw2kc1tVB5RtZLXaGf2RDbGPR5JWcyCgBk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>I was just wondering how we could mark both as related concepts while avoiding the double keyword issue</blockquote></mx-reply>My point was that they are only related at the surface level, and having too similar of a syntax is actually a detriment.","m.mentions":{"user_ids":["@usharma:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5ADICMPiBjw2kc1tVB5RtZLXaGf2RDbGPR5JWcyCgBk"}},"msgtype":"m.text"},"ts":1707263735448,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JyHV8lrkZSTKMp6JZzcTiMgFN9Y4mZFczqXdx_Bk1iI"},
{"content":{"body":"I would say it isn't just shorter, it expresses the intend better.","m.mentions":{},"msgtype":"m.text"},"ts":1707263741758,"senderName":"Duncan MacGregor","senderId":"@aardvark179:matrix.org","id":"$Rn5e6SBuCL427L33rjqxr3Ug5ieuUu8Gc9FTSByzkh0"},
{"content":{"body":"I wonder whether the intent might usually be expressed better by Promise.withResolvers + try/catch","m.mentions":{},"msgtype":"m.text"},"ts":1707263760871,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Lxsv2DJLlZe5NhBB_mAen2RUhEEOyWgD2Oj7D87VrkI"},
{"content":{"body":"i can't confidently say whether it comes up super often or not but i can't come up with any strong reason to be against it","m.mentions":{},"msgtype":"m.text"},"ts":1707263766171,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$CbQBrllZSD5Mj1aOhhiKg2xFpp10fKvDot9cgeO4oL4"},
{"content":{"body":"> <@tabatkins:matrix.org> Bradford Smith: It's identical in functionality, it's just shorter.\n\nI'm saying, it's not significantly shorter.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UE5csW2LdkM0fwXW0VnOLKEcydXMLR_01IYHNA8X5Ig?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br><a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: It's identical in functionality, it's just shorter.</blockquote></mx-reply>I'm saying, it's not significantly shorter.","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$UE5csW2LdkM0fwXW0VnOLKEcydXMLR_01IYHNA8X5Ig"}},"msgtype":"m.text"},"ts":1707263771071,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$sD8sGzQWyLjXEQb_gs6W5WdR-tX_mTwe2N3USLTw87M"},
{"content":{"body":"> <@devsnek:matrix.org> i can't confidently say whether it comes up super often or not but i can't come up with any strong reason to be against it\n\nI would like a higher bar than \"no strong reason not to do it\" for things to go in the language","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CbQBrllZSD5Mj1aOhhiKg2xFpp10fKvDot9cgeO4oL4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i can&#39;t confidently say whether it comes up super often or not but i can&#39;t come up with any strong reason to be against it</blockquote></mx-reply>I would like a higher bar than \"no strong reason not to do it\" for things to go in the language","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$CbQBrllZSD5Mj1aOhhiKg2xFpp10fKvDot9cgeO4oL4"}},"msgtype":"m.text"},"ts":1707263788678,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OVDBNaT-VIYI9yVhQN7c_MEDgDxj2iG4cO-10-cm_o0"},
{"content":{"body":"bakkot: I think the deal is that, for the *non*-throwing case, you can trivially consolidate both sync and async functions with `new Promise(f())`. But if `f` throws, then the sync version causes a throw, while the async causes a rejected promise.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I think the deal is that, for the <em>non</em>-throwing case, you can trivially consolidate both sync and async functions with <code>new Promise(f())</code>. But if <code>f</code> throws, then the sync version causes a throw, while the async causes a rejected promise.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1707263804030,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$j3ngBVeRUkxT2hoi1XSlclTL-2H0wACt_1H2wv7MHpU"},
{"content":{"body":"I guess that's what the consensus topic later is though","m.mentions":{},"msgtype":"m.text"},"ts":1707263804221,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$crThLNpkXpY7zeNoqEq-JYIVfQiiHDJ0awezeon3JWc"},
{"content":{"body":"yeah its more just how i approach it, especially with something as simple as this function","m.mentions":{},"msgtype":"m.text"},"ts":1707263836759,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$NEh0ntnwHubk1JYkZnaE0MVrMtw591vuQ2kdVfgI-qI"},
{"content":{"body":" * bakkot: I think the deal is that, for the _non_-throwing case, you can trivially consolidate both sync and async functions with `new Promise(f())` (or just `await f()`). But if `f` throws, then the sync version causes a throw, while the async causes a rejected promise.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I think the deal is that, for the <em>non</em>-throwing case, you can trivially consolidate both sync and async functions with <code>new Promise(f())</code> (or just <code>await f()</code>). But if <code>f</code> throws, then the sync version causes a throw, while the async causes a rejected promise.","m.mentions":{},"m.new_content":{"body":"bakkot: I think the deal is that, for the _non_-throwing case, you can trivially consolidate both sync and async functions with `new Promise(f())` (or just `await f()`). But if `f` throws, then the sync version causes a throw, while the async causes a rejected promise.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I think the deal is that, for the <em>non</em>-throwing case, you can trivially consolidate both sync and async functions with <code>new Promise(f())</code> (or just <code>await f()</code>). But if <code>f</code> throws, then the sync version causes a throw, while the async causes a rejected promise.","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$j3ngBVeRUkxT2hoi1XSlclTL-2H0wACt_1H2wv7MHpU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707263844097,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$vnmXttYWNVTNU21-AttvFJ0hDh1_jx-jMl-l4Ya8bHI"},
{"content":{"body":"i said nullary, not unary","m.mentions":{},"msgtype":"m.text"},"ts":1707263878132,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IFHc-VVthiG0B6tYbgu_VJqsQJSRmw7SJ9LjdMXa9UM"},
{"content":{"body":"this doesn't pass any arguments does it","m.mentions":{},"msgtype":"m.text"},"ts":1707263882422,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UxdQC7XOLk-db-BUmvxrSYu4lNzpu38M9f8AeKiznTU"},
{"content":{"body":"async context is happening? i thought mark was super against that","m.mentions":{},"msgtype":"m.text"},"ts":1707263892806,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$SjvrbwrJ2yA-A_glv-szRdtv2AYsIWA3IUsHFsISrdI"},
{"content":{"body":"Correct, nullary","m.mentions":{},"msgtype":"m.text"},"ts":1707263899059,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$G0bDzyRNHN8rYx87yKJqVPVNYZZ_POTPPl5vQmYXPz4"},
{"content":{"body":"That's also consistent with `setImmediate(cb, ...args)`","format":"org.matrix.custom.html","formatted_body":"That's also consistent with <code>setImmediate(cb, ...args)</code>","m.mentions":{},"msgtype":"m.text"},"ts":1707263908515,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WZMaJbzGSh-XFajnW5Ib54ksZtl-P6zogPvaQgZFDuI"},
{"content":{"body":"@bakkot: me","m.mentions":{},"msgtype":"m.text"},"ts":1707263919647,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zoF23DnVGWPwoncAg01scD8A-h-odxhJWYxUQXscvWY"},
{"content":{"body":"> <@devsnek:matrix.org> async context is happening? i thought mark was super against that\n\nit turned out it was fine","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SjvrbwrJ2yA-A_glv-szRdtv2AYsIWA3IUsHFsISrdI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>async context is happening? i thought mark was super against that</blockquote></mx-reply>it turned out it was fine","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SjvrbwrJ2yA-A_glv-szRdtv2AYsIWA3IUsHFsISrdI"}},"msgtype":"m.text"},"ts":1707263944612,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4ehQEiBLJftK36yLtC4iooSh0ThD9jEJLvosyp3cAT8"},
{"content":{"body":"> <@shuyuguo:matrix.org> i said nullary, not unary\n\nI mispoke, meant 0 params","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IFHc-VVthiG0B6tYbgu_VJqsQJSRmw7SJ9LjdMXa9UM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i said nullary, not unary</blockquote></mx-reply>I mispoke, meant 0 params","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$IFHc-VVthiG0B6tYbgu_VJqsQJSRmw7SJ9LjdMXa9UM"}},"msgtype":"m.text"},"ts":1707263953836,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$k3n9YOkIYs9C5XBRZXxkU2qrYsxItkidqJ0j-w94fPk"}
]