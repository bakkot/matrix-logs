[
{"content":{"body":"https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê `String.cooked` for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","format":"org.matrix.custom.html","formatted_body":"https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê <code>String.cooked</code> for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","msgtype":"m.text"},"ts":1635313549504,"senderName":"Hemanth H.M","senderId":"@hemanth.hm:matrix.org","id":"$O07D1vbHnpUaysufVH90fLuc5bXpsSdkvDMkJM1JEUE"},
{"content":{"body":" * https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê `String.cooked` for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","format":"org.matrix.custom.html","formatted_body":" * https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê <code>String.cooked</code> for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","m.new_content":{"body":"https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê `String.cooked` for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","format":"org.matrix.custom.html","formatted_body":"https://hackmd.io/PjvSgvS-Tj-nv3lJl5Dglg?view#1300-15002 15m | üïê <code>String.cooked</code> for Stage 1 will be at 13:00hrs or earlier? As we already covered Error Cause on Day-2","msgtype":"m.text"},"m.relates_to":{"event_id":"$O07D1vbHnpUaysufVH90fLuc5bXpsSdkvDMkJM1JEUE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635313566864,"senderName":"Hemanth H.M","senderId":"@hemanth.hm:matrix.org","id":"$e7skBJzgx90CdiwD8auLXLepBUbDBlXAnI__4rB74UI"},
{"content":{"body":"we are starting plenary now!","msgtype":"m.text"},"ts":1635325226066,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Q0z8wmHks9LWpZWRYf9ibew2wnWkk0PvFoBxBP5sWJ0"},
{"content":{"body":"Good morning everyone i'm already one scotch in","msgtype":"m.text"},"ts":1635325414302,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$1XZu753FrXKMmV5t5o5QHqXbJ7faxino0p8BmBwDc7Y"},
{"content":{"body":"seems like we should use stages but go straight to stage 2","msgtype":"m.text"},"ts":1635325679084,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$A_t_uklWwfPjO4L18VusCih7phvE2DUV9uXVJMYvgi4"},
{"content":{"body":"I'm happy to be a reviewer for 2->3","msgtype":"m.text"},"ts":1635325786162,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BcVds_Tr5Edm-1sOtZQe2hKewn9LI2aUxi6ru9bzp4w"},
{"content":{"body":"also support stage 2","msgtype":"m.text"},"ts":1635325789624,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Lk6xOjFLTQu8euJslAf2AxXngG4rI5pPex8qe_IU0p0"},
{"content":{"body":"wait, ask for reviewers!","msgtype":"m.text"},"ts":1635325805732,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ra5PvEaJ2FDEK0QqjJoUJVAiQJHNKTkoWZQPzolwheE"},
{"content":{"body":"my b thanks bakkot & yulia ","format":"org.matrix.custom.html","formatted_body":"my b thanks <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> &amp; <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>","msgtype":"m.text"},"ts":1635325967212,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$fNc7dNjqZeaibNbiGAFfb-pRs2DuaYDoKJsDPTeKdLY"},
{"content":{"body":"does anyone else see aki in the middle of the stream?","msgtype":"m.text"},"ts":1635326039526,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FxHesO3hehKw3rPI3_AB2Nx9d1dL-rVylGMnG1rahQ4"},
{"content":{"body":"oh yeah was just about to ask","msgtype":"m.text"},"ts":1635326040326,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fytxsEN0SFNFz2QNR_n4c_Kz-z2aN2EIsX0GiLaOnWw"},
{"content":{"body":"lol Jitsi just wants to make sure i'm on everyone's mind","msgtype":"m.text"},"ts":1635326058733,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$BJOhRsAS2ygdKBUQeoUoZfTWnPMACxPgJt5MibAJL9w"},
{"content":{"body":"why not just \"using\" and then the expression? why is \"using const void\" better?","msgtype":"m.text"},"ts":1635326526920,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KbXCfGKaBJ8R1XvDgLiI0DVWOJ89CGf4MgdcR170eQM"},
{"content":{"body":"waldemar: i'm going to delete your topic, if you re-add it to the queue i can move it back to the top.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: i'm going to delete your topic, if you re-add it to the queue i can move it back to the top.","msgtype":"m.text"},"ts":1635327256256,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$XvnMPWVvxkhqmcNq6w1ZheYIZd5rsIJ84U5F66zLKdU"},
{"content":{"body":"the `await` in a `for await` happens on the line with the `await`","format":"org.matrix.custom.html","formatted_body":"the <code>await</code> in a <code>for await</code> happens on the line with the <code>await</code>","msgtype":"m.text"},"ts":1635327354380,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tcQSY8OxkomWU_uUPDVHIWj3pNyOm5nZfG0iZ9Sa4rA"},
{"content":{"body":"it does not seem analalgous","msgtype":"m.text"},"ts":1635327357869,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$--YaRpqiJmXI1ZTynH6cfuFTL2oPchVxpiHDgm7qC3U"},
{"content":{"body":"agree, mathieu's point was that it was in the middle","msgtype":"m.text"},"ts":1635327400536,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PwCQSfVixUCc06VxdJLtQ6PqC7YIj4m6pCibLVNcMN8"},
{"content":{"body":"well it does affect control flow, it can throw","msgtype":"m.text"},"ts":1635327408258,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YIzKjcI19qWJR39DnuitT6jEncOwjvmzM1MbYAU0YvY"},
{"content":{"body":"correct me if i am wrong, but isn't this implicit resource management rather than explicit resource management?","msgtype":"m.text"},"ts":1635327648070,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$IdjC1bcB-fKxY-TRnKG696zH92XO1XyxSJOB2vp2COE"},
{"content":{"body":"the finally block is implicitly called","msgtype":"m.text"},"ts":1635327664145,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$-F-Cpw0khl5_JZ331kSGGkiHEPisKXRrq0DxkM9mUp0"},
{"content":{"body":"> <@michaelficarra:matrix.org> why not just \"using\" and then the expression? why is \"using const void\" better?\n\n`using (expr)` would be a problem, since that's a valid function call","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$KbXCfGKaBJ8R1XvDgLiI0DVWOJ89CGf4MgdcR170eQM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>why not just &quot;using&quot; and then the expression? why is &quot;using const void&quot; better?</blockquote></mx-reply><code>using (expr)</code> would be a problem, since that's a valid function call","m.relates_to":{"m.in_reply_to":{"event_id":"$KbXCfGKaBJ8R1XvDgLiI0DVWOJ89CGf4MgdcR170eQM"}},"msgtype":"m.text"},"ts":1635327669851,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8Tray4EyJBVI7fYUnpz5GRshIy0V7YEm2nv9mlThNmE"},
{"content":{"body":"> <@yulia:mozilla.org> correct me if i am wrong, but isn't this implicit resource management rather than explicit resource management?\n\nexactly! By reading the title, I'd expect a `free` function or something like that üòÖ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IdjC1bcB-fKxY-TRnKG696zH92XO1XyxSJOB2vp2COE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>correct me if i am wrong, but isn&#39;t this implicit resource management rather than explicit resource management?</blockquote></mx-reply>exactly! By reading the title, I'd expect a <code>free</code> function or something like that üòÖ","m.relates_to":{"m.in_reply_to":{"event_id":"$IdjC1bcB-fKxY-TRnKG696zH92XO1XyxSJOB2vp2COE"}},"msgtype":"m.text"},"ts":1635327706322,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$z-qbcqj0_w5q66pWluIUJb1iLQ6BrY98mK0SGhHPtuw"},
{"content":{"body":"aki i added my topic back so you can clear me","msgtype":"m.text"},"ts":1635327715479,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$xZXrTcFj-9loNI562xeLTfV2ZNY94uXWKU9EbFaL6mo"},
{"content":{"body":"yulia: well i guess it's explicitly queuing the disposal method up to be called at a different place","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: well i guess it's explicitly queuing the disposal method up to be called at a different place","msgtype":"m.text"},"ts":1635327740270,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cBhdmLk5RUbhsVZf09JxYvLJsT5gfrGgIsSWYk5BhjE"},
{"content":{"body":"implicit would be a destructor, imo","msgtype":"m.text"},"ts":1635327743926,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Rn9wLp7qaninc82Td-pbRP-FuEWSEbQhKEsqk-lJPcw"},
{"content":{"body":"erights makes some good points","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a> makes some good points","msgtype":"m.text"},"ts":1635327792485,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PB8Q6mlTxwlc0yut9D9N8B1khD8paB48WGCpNWUlwvE"},
{"content":{"body":"in both cases the disposal method is not explicitly stated by the programmer, but this is a nit","msgtype":"m.text"},"ts":1635327804117,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$VFC4Vd7DBikzCLX62fKec-O4TLcLeqF0upxUc079_0s"},
{"content":{"body":"its not a substantial criticism","msgtype":"m.text"},"ts":1635327810451,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$hunPj7vEAMx1Vgq92LmfvFZQWCMLHp1x62EqmGgzxGs"},
{"content":{"body":"what we have now is explicit, but that comes with the possibility that steps are missed especially during control flow, so i understand the goal here","msgtype":"m.text"},"ts":1635327854421,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$H0asJ6pSZxwpNsDUH8nYd-UzP1abU4tAMewBFU3oKsU"},
{"content":{"body":"is it possible to limit `using await` to\n- top of an async function\n- top of an async do expression\n\nto resolve the implicit interleaving point problem?","format":"org.matrix.custom.html","formatted_body":"<p>is it possible to limit <code>using await</code> to</p>\n<ul>\n<li>top of an async function</li>\n<li>top of an async do expression</li>\n</ul>\n<p>to resolve the implicit interleaving point problem?</p>\n","msgtype":"m.text"},"ts":1635327899394,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wTZLMRm6HUlzWULh-gXWvZWjCyEjWUKq3_MFyexftZ8"},
{"content":{"body":"Jack Works: not really, you need to do it in a loop body or lots of other places","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: not really, you need to do it in a loop body or lots of other places","msgtype":"m.text"},"ts":1635327930784,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pxcM2WwBkkjMfn4c_g65srDK5YHECWn6oHPLb_AxrOU"},
{"content":{"body":"what are some example of async disposal methods?","msgtype":"m.text"},"ts":1635327944921,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_p5UbTGBa6EAMH9Ziux9ecG8fAZJmIH2kueX_NlVlrw"},
{"content":{"body":"> <@bakkot:matrix.org> Jack Works: not really, you need to do it in a loop body or lots of other places\n\nmake sense","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pxcM2WwBkkjMfn4c_g65srDK5YHECWn6oHPLb_AxrOU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: not really, you need to do it in a loop body or lots of other places</blockquote></mx-reply>make sense","m.relates_to":{"m.in_reply_to":{"event_id":"$pxcM2WwBkkjMfn4c_g65srDK5YHECWn6oHPLb_AxrOU"}},"msgtype":"m.text"},"ts":1635327962204,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$abo5kbpaObH6QmDD3XwXVhf_5dlNxO-x7pNgO_Zq4oQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> what are some example of async disposal methods?\n\nclosing a network resource, for example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_p5UbTGBa6EAMH9Ziux9ecG8fAZJmIH2kueX_NlVlrw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>what are some example of async disposal methods?</blockquote></mx-reply>closing a network resource, for example","m.relates_to":{"m.in_reply_to":{"event_id":"$_p5UbTGBa6EAMH9Ziux9ecG8fAZJmIH2kueX_NlVlrw"}},"msgtype":"m.text"},"ts":1635327972221,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$a8Ph8fjcD77pwaNE_h7RZWZaK7G-PRtilZssEmMTWVs"},
{"content":{"body":"that's async?","msgtype":"m.text"},"ts":1635327981865,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$83KDm9HQpAYYYeogFK0jXBd5vgZfd_uE-x7O_3NuXdE"},
{"content":{"body":"> <@bakkot:matrix.org> Jack Works: not really, you need to do it in a loop body or lots of other places\n\ntop of a block?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pxcM2WwBkkjMfn4c_g65srDK5YHECWn6oHPLb_AxrOU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: not really, you need to do it in a loop body or lots of other places</blockquote></mx-reply>top of a block?","m.relates_to":{"m.in_reply_to":{"event_id":"$pxcM2WwBkkjMfn4c_g65srDK5YHECWn6oHPLb_AxrOU"}},"msgtype":"m.text"},"ts":1635328011300,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rY_FADW2GkcUCGFqm_zBMQmxXTmo-CJ20bRk2dr4yTQ"},
{"content":{"body":"I think of it as the `defer myVar.close()` in Golang","format":"org.matrix.custom.html","formatted_body":"I think of it as the <code>defer myVar.close()</code> in Golang","msgtype":"m.text"},"ts":1635328026267,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$qhyMkah4I6wUKqj8Sk5R3VChkDFEwuga8_THDEcWi7U"},
{"content":{"body":"so you'd close the file/socket async to avoid blocking","msgtype":"m.text"},"ts":1635328076646,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$75-ISEPwbaBzPcFvjt2spQxUmpIhqfP-D84ULip-69Y"},
{"content":{"body":"but you'd want to definitely do it once the block ends","msgtype":"m.text"},"ts":1635328089110,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$BESgD-22F_7m4IP3DgakEI7CN0KSrXb0kO6npllqCg4"},
{"content":{"body":"Michael Ficarra: top of a block works, but that's pretty much just `try using` again, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: top of a block works, but that's pretty much just <code>try using</code> again, right?","msgtype":"m.text"},"ts":1635328093515,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$be5cur0n90Zp54gk2usq8ZOXx_ESUIC1DnWU-lAZ_gI"},
{"content":{"body":"> <@shuyuguo:matrix.org> that's async?\n\nin node most of them are async","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$83KDm9HQpAYYYeogFK0jXBd5vgZfd_uE-x7O_3NuXdE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>that&#39;s async?</blockquote></mx-reply>in node most of them are async","m.relates_to":{"m.in_reply_to":{"event_id":"$83KDm9HQpAYYYeogFK0jXBd5vgZfd_uE-x7O_3NuXdE"}},"msgtype":"m.text"},"ts":1635328094202,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$32WtWgbRBZLAdd9nZskcslUtqL4sfcHWQGZq1dyrYSs"},
{"content":{"body":"actually why did we go away from `try using`?","format":"org.matrix.custom.html","formatted_body":"actually why did we go away from <code>try using</code>?","msgtype":"m.text"},"ts":1635328103481,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IGBU2124i5OGFOX5sw3NigFc21MtOVCiwIzesTHeB-E"},
{"content":{"body":"i see, thanks","msgtype":"m.text"},"ts":1635328104426,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ikgo5zbjLNfGtLFQYp5RjNoYTbKFou-3_kRB3hIuXNw"},
{"content":{"body":" bakkot  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","msgtype":"m.text"},"ts":1635328119284,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UPORXJIN7k3K52PP2szhZiyGExjM3_5nkXtu0zzgI9M"},
{"content":{"body":"> <@bakkot:matrix.org> Michael Ficarra: top of a block works, but that's pretty much just `try using` again, right?\n\nSGTM","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$be5cur0n90Zp54gk2usq8ZOXx_ESUIC1DnWU-lAZ_gI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: top of a block works, but that's pretty much just <code>try using</code> again, right?</blockquote></mx-reply>SGTM","m.relates_to":{"m.in_reply_to":{"event_id":"$be5cur0n90Zp54gk2usq8ZOXx_ESUIC1DnWU-lAZ_gI"}},"msgtype":"m.text"},"ts":1635328119753,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3NYVeG8i8KkF-ay2XINXwdCsXTTSVBgM3s7-Kc5SeSc"},
{"content":{"body":"> <@bakkot:matrix.org> actually why did we go away from `try using`?\n\napparently feedback from the incubator call","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IGBU2124i5OGFOX5sw3NigFc21MtOVCiwIzesTHeB-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>actually why did we go away from <code>try using</code>?</blockquote></mx-reply>apparently feedback from the incubator call","m.relates_to":{"m.in_reply_to":{"event_id":"$IGBU2124i5OGFOX5sw3NigFc21MtOVCiwIzesTHeB-E"}},"msgtype":"m.text"},"ts":1635328133247,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nkWlJor9r7QQH2lWpyGU2q7UmgeWZ9XOThwpurGafqQ"},
{"content":{"body":" *  bakkot  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","m.new_content":{"body":" bakkot  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>  I want to present this issue https://github.com/tc39/proposal-do-expressions/issues/75 to the committee to get a consensus of adding the restriction I proposed. How do you think?","msgtype":"m.text"},"m.relates_to":{"event_id":"$UPORXJIN7k3K52PP2szhZiyGExjM3_5nkXtu0zzgI9M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635328141902,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$1yX8MSt0SEHS3CNC2T1nmNhJnmwo7-H38IHiE76yqWU"},
{"content":{"body":"Jack Works: I'll bring it up next time I present; I don't think there's much reason to present it before then","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: I'll bring it up next time I present; I don't think there's much reason to present it before then","msgtype":"m.text"},"ts":1635328221114,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9CgeOqCrW9ZLhhOhaTiYQDViT61DLktGFfZ4HK_f0YY"},
{"content":{"body":"> <@bakkot:matrix.org> Jack Works: I'll bring it up next time I present; I don't think there's much reason to present it before then\n\nok I just want to have that restriction so I can continue to work on the typescript implementation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9CgeOqCrW9ZLhhOhaTiYQDViT61DLktGFfZ4HK_f0YY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: I'll bring it up next time I present; I don't think there's much reason to present it before then</blockquote></mx-reply>ok I just want to have that restriction so I can continue to work on the typescript implementation","m.relates_to":{"m.in_reply_to":{"event_id":"$9CgeOqCrW9ZLhhOhaTiYQDViT61DLktGFfZ4HK_f0YY"}},"msgtype":"m.text"},"ts":1635328279125,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$PWr1j1cYovx6h9FS-XsWTAfE81I1ahr1k4NUYcULLzE"},
{"content":{"body":"about 20 min remaining","msgtype":"m.text"},"ts":1635328420635,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$NflOKYI0k4eK6zPtwPBRoSKCH_g4eofv6LLT_FTSG4s"},
{"content":{"body":"I am confused about the `Disposable` container - how is `new Disposable(() => foo())` different from `({ [Symbol.dispose]() { foo() })` ?","format":"org.matrix.custom.html","formatted_body":"I am confused about the <code>Disposable</code> container - how is <code>new Disposable(() =&gt; foo())</code> different from <code>({ [Symbol.dispose]() { foo() })</code> ?","msgtype":"m.text"},"ts":1635328464775,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dKUBYBskX3d6K5aKR9QYZoaLOafVPMssO9_dCzCN41I"},
{"content":{"body":"@bakkot it takes iterables","msgtype":"m.text"},"ts":1635328534361,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dkw5v4lwy0PtOKSrvOmYlhsAgrHxXx_Ao130AnCc3Gs"},
{"content":{"body":"No difference I guess","msgtype":"m.text"},"ts":1635328543139,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Ck_MQj6vweJnsNL63BqCOX-V0zAgoo3IDdnCnWtg05U"},
{"content":{"body":"an iterable of disposables","msgtype":"m.text"},"ts":1635328546236,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$O0YqeRmAHSRcraLK2UnJWU6XGLTHDFS4ZjnMS2YJ2_c"},
{"content":{"body":"> <@michaelficarra:matrix.org> @bakkot it takes iterables\n\nIsn't `Disposable.from` take iterables instead of the constructor?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dkw5v4lwy0PtOKSrvOmYlhsAgrHxXx_Ao130AnCc3Gs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>@bakkot it takes iterables</blockquote></mx-reply>Isn't <code>Disposable.from</code> take iterables instead of the constructor?","m.relates_to":{"m.in_reply_to":{"event_id":"$dkw5v4lwy0PtOKSrvOmYlhsAgrHxXx_Ao130AnCc3Gs"}},"msgtype":"m.text"},"ts":1635328560727,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$a8Pcg-kEd8TrrLoPNHEOENFL0DRn-zCS23J0CC-UmJc"},
{"content":{"body":" * No difference I guess","m.new_content":{"body":"No difference I guess","msgtype":"m.text"},"m.relates_to":{"event_id":"$Ck_MQj6vweJnsNL63BqCOX-V0zAgoo3IDdnCnWtg05U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635328568436,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$RBqUAWAvSahzgP8ZR3FrJ2bwTRsu6b2yW-L5pbe1-XY"},
{"content":{"body":"Jack Works: yes that's right, was there a constructor too?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: yes that's right, was there a constructor too?","msgtype":"m.text"},"ts":1635328582844,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nFjLORUKyV5-CSk2xAUcfsZ2njnTarBopG7ecSO1nZI"},
{"content":{"body":"I guess it's for DX, `new Disposable(f)` is much easier to write than `({ [Symbol.dispose]: f })`","format":"org.matrix.custom.html","formatted_body":"I guess it's for DX, <code>new Disposable(f)</code> is much easier to write than <code>({ [Symbol.dispose]: f })</code>","msgtype":"m.text"},"ts":1635328655959,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rvQWO8O2ehCEuLGy3SGXMa3TpSJuL375rRT2DgowFto"},
{"content":{"body":"this example doesn't seem particularly problematic to me","msgtype":"m.text"},"ts":1635328723903,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UM8lQIC15aRdt9UvE4-7KxMxfV5A02FwMQEwaVREBwA"},
{"content":{"body":"oh oops i advanced the queue, misinterpreted what Waldemar meant by \"let's move on to the next one\"","msgtype":"m.text"},"ts":1635328841136,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$omWyB99DxVDPY5C6es_-68z73sJTX_SyW8yLd2nrfLc"},
{"content":{"body":"it's okay, I don't think anyone would begin talking before Waldemar is finished üòá","msgtype":"m.text"},"ts":1635328889035,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$7x4fssOH9dkwbVS4G3G_6sYSjBAz6hEPzrn55bLXB6Y"},
{"content":{"body":"wouldn't any implicit disposal solution make figuring out tail calls more difficult (for humans)?","msgtype":"m.text"},"ts":1635328945737,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eY6O_d4UafpdM-L66mMoOpQ7o27n6YDFq7uWZSN-MeY"},
{"content":{"body":"maybe in a world where tail calls matter","msgtype":"m.text"},"ts":1635328987211,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KDeinM9OfFybKQrdpdHYbXFvlMRGlP5R-KoR6prntaY"},
{"content":{"body":"Michael Ficarra made this same point the first time this proposal came up, IIRC","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> made this same point the first time this proposal came up, IIRC","msgtype":"m.text"},"ts":1635329417749,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vyRJn46Z-TpJdUKNAGT2iHlK_OL_upEkgoAqgvqw4aY"},
{"content":{"body":"i think RAII is so common new syntax is warranted, abusing for-of seems not great","msgtype":"m.text"},"ts":1635329494838,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-c41ZnQB6Dt51BrM9O9jyJVor6ISA0POo7IA1pHUw1E"},
{"content":{"body":"for reading anyway","msgtype":"m.text"},"ts":1635329503114,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VfZHsUSYt8lwfDFvV0_msOHHtG0xdzbpvelDbtRDXpI"},
{"content":{"body":"eh, I don't think it's an abuse of for-of","msgtype":"m.text"},"ts":1635329514191,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Hr-xzbmeSQdei_fxEFZdWwRGx-OthumTFw8Ma9Po7b0"},
{"content":{"body":"in the Scala world, they use `for` for everything and it works nicely for them","format":"org.matrix.custom.html","formatted_body":"in the Scala world, they use <code>for</code> for everything and it works nicely for them","msgtype":"m.text"},"ts":1635329534845,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$FupJmyYXXu4r0IRGOgw3PRohy4VrNSrL8wCiJZWBGpc"},
{"content":{"body":"(`for` in scala is like Haskell `do` notation)","format":"org.matrix.custom.html","formatted_body":"(<code>for</code> in scala is like Haskell <code>do</code> notation)","msgtype":"m.text"},"ts":1635329549284,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mulLzPyjU9HNcWasMQynom9nTd3BHGngSUe8uXSd5hQ"},
{"content":{"body":"that `for-of` trick is really cleaver","format":"org.matrix.custom.html","formatted_body":"that <code>for-of</code> trick is really cleaver","msgtype":"m.text"},"ts":1635329553902,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ZxJrtdCKwrQGVRwcjRrEt1kFxG1Toxw1-VLh2Z__Cps"},
{"content":{"body":"but in the JS world `for` is for iteration?","format":"org.matrix.custom.html","formatted_body":"but in the JS world <code>for</code> is for iteration?","msgtype":"m.text"},"ts":1635329560065,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C3USXNBiwbnTjbs8sTvziMJR_OBQoXwwdNaJqWGSYOI"},
{"content":{"body":"shu: not for-of, it's syntax for a protocol","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: not for-of, it's syntax for a protocol","msgtype":"m.text"},"ts":1635329581839,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JZOX1lkcA2PZu6AqOL0XKVPoMXy_sfyKixW2Kseg3o8"},
{"content":{"body":"we can use it to not wait for this proposal ship that might take years","msgtype":"m.text"},"ts":1635329586155,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jzxyaEizQIvAJUkMTf6VRu8Gpn0ozpo_BRsERbxNhOQ"},
{"content":{"body":"we disagree","msgtype":"m.text"},"ts":1635329588499,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kU-MYYnTkC96ubQf6T157SRWxcH0wBNDmjAJuPqW27E"},
{"content":{"body":"for-of _has_ a protocol, i would contend very few would understand it as syntax for protocols","format":"org.matrix.custom.html","formatted_body":"for-of <em>has</em> a protocol, i would contend very few would understand it as syntax for protocols","msgtype":"m.text"},"ts":1635329615950,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6RnII8N7tPJpC2MmQdfqbyRG_fFcQH195dEF_yGC52s"},
{"content":{"body":"it's syntax for iteration","msgtype":"m.text"},"ts":1635329623906,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vNu-nXC4vzvQaNNMUBJAdILkLp7K0R4QqtIzeH392NM"},
{"content":{"body":"yeah, we just disagree","msgtype":"m.text"},"ts":1635329693999,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KtGtPhH-GN3FhsbiR7IxhX8tSLDXrph_QG7rxK11-i0"},
{"content":{"body":"Michael Ficarra: tbf, the protocol literally uses \"Symbol.iterator\", so I feel like it's fair to say that it is for iteration","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: tbf, the protocol literally uses &quot;Symbol.iterator&quot;, so I feel like it's fair to say that it is for iteration","msgtype":"m.text"},"ts":1635329738153,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$O7gQ-AsGdpCI-gs_po-DhtPkb5QCqBJSZFM3IkrV6TQ"},
{"content":{"body":"that said, I also agree that this is a perfectly fine use of for-of","msgtype":"m.text"},"ts":1635329761794,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5tJFpWbVBSHFbG4P5nOkqZSYHmCmR7OhbaTTyZbwpss"},
{"content":{"body":"lots of languages use `for` like this","format":"org.matrix.custom.html","formatted_body":"lots of languages use <code>for</code> like this","msgtype":"m.text"},"ts":1635329767361,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CdotmH2_NnhIYzMOqu5X3KWLzsY9i8XBCLx76xg312s"},
{"content":{"body":"it's syntax for interacting with the iteration protocol, but \"iteration\" can mean many things","msgtype":"m.text"},"ts":1635329768056,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$omUoTVnmq_bwDtpoBKP0zh9xV1O1a4CK1VNtuAtkiAY"},
{"content":{"body":"why async is a fault? is there any articles I can know the reason? cc yulia ","format":"org.matrix.custom.html","formatted_body":"why async is a fault? is there any articles I can know the reason? cc <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>","msgtype":"m.text"},"ts":1635329773017,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QD_UoZTQECaA-XLZOnMk_ZcwaUwrVcpvvwhqKNzlymA"},
{"content":{"body":"yeah i strongly disagree with the opinion that async/await is a mistake","msgtype":"m.text"},"ts":1635329793151,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ttlqADibXESIn3LrQKsj-YzzVkX0kRCShgVzSD0tI2o"},
{"content":{"body":"we iterate over Maybe in our code all the time, and people don't typically think of that as \"iteration\"","msgtype":"m.text"},"ts":1635329796289,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lIbIl1bhWadeOAgSkWTZ9QbCM-xPf3heRJX4me2pXh0"},
{"content":{"body":"the bugs stem from, well, asynchrony, not the syntax","msgtype":"m.text"},"ts":1635329799371,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NnDQuWnpy7DlNb8Nvig--vQNho0a-sRDINR3cVcPMuw"},
{"content":{"body":"> <@jackworks:matrix.org> why async is a fault? is there any articles I can know the reason? cc yulia\n\nit is very tricky to determine a fire and forget bug with async await","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QD_UoZTQECaA-XLZOnMk_ZcwaUwrVcpvvwhqKNzlymA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>why async is a fault? is there any articles I can know the reason? cc <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a></blockquote></mx-reply>it is very tricky to determine a fire and forget bug with async await","m.relates_to":{"m.in_reply_to":{"event_id":"$QD_UoZTQECaA-XLZOnMk_ZcwaUwrVcpvvwhqKNzlymA"}},"msgtype":"m.text"},"ts":1635329835680,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$dc2uYmfdYSF_DQqQQ39_6UVX_C7f3aAwdLqORVO1CeU"},
{"content":{"body":"it is very difficult to find just from reading or from static analysis","msgtype":"m.text"},"ts":1635329847074,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$74t9H1u_mW1IQrkiLHjGz8K8QH9xYCmnLOXozAlYExQ"},
{"content":{"body":"but the comparison is with Promise handlers, right?","msgtype":"m.text"},"ts":1635329873388,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YYVj2tfUlUqnQ98LzJTanVkiUVRVJsg8Eo_YQylglBY"},
{"content":{"body":"which i feel like has to be harder","msgtype":"m.text"},"ts":1635329881314,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vnTNmKfc5GjRO1w7BA3_RW8ktY0dYVOYtL_RdQS4g1g"},
{"content":{"body":"https://github.com/mhofman/disposator","msgtype":"m.text"},"ts":1635329886475,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$gM5R-f-oLl4nru6Uf5txfUAsBfMX7NdoJ_5rwdpke8M"},
{"content":{"body":"the other issue with async await is the added viscosity to the language, and the reliance on unnecessarily writing code in a step wise fashion","msgtype":"m.text"},"ts":1635329898678,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$L45MbA4aAqOPT7PwLXg7sqs7FrQhoD5JA-NyRKKFNBc"},
{"content":{"body":"i think the space of async code is unsolved","msgtype":"m.text"},"ts":1635329911459,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$iyw70_-TmvRz4Jy6VDhtroZevVuy5Q3eZYitA9BGe84"},
{"content":{"body":"at least in javascript, this is easier in typed languages","msgtype":"m.text"},"ts":1635329922906,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cZl7cnJLKhbA_GR7OKiT1i9tXtk1VxhgHAkVqlWGDY0"},
{"content":{"body":"IMO the iterator approach is not particularly hard to read. Sure it takes a minute to understand why it actually works, but it's not obscure:\n```\nfor (const {using} of Disposable) {\n   const resource = using(getResource());\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>IMO the iterator approach is not particularly hard to read. Sure it takes a minute to understand why it actually works, but it's not obscure:</p>\n<pre><code>for (const {using} of Disposable) {\n   const resource = using(getResource());\n}\n</code></pre>\n","msgtype":"m.text"},"ts":1635329931523,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$L5ceEPG330LNunLx_FebWdhVcqNYbQ13iY0dwrcW580"},
{"content":{"body":"> <@yulia:mozilla.org> i think the space of async code is unsolved\n\nI sometimes think the knowledge that `async`/`await` was coming led to less investment in the spaces of Promises and Generators (in particular)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$iyw70_-TmvRz4Jy6VDhtroZevVuy5Q3eZYitA9BGe84?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>i think the space of async code is unsolved</blockquote></mx-reply>I sometimes think the knowledge that <code>async</code>/<code>await</code> was coming led to less investment in the spaces of Promises and Generators (in particular)","m.relates_to":{"m.in_reply_to":{"event_id":"$iyw70_-TmvRz4Jy6VDhtroZevVuy5Q3eZYitA9BGe84"}},"msgtype":"m.text"},"ts":1635329993099,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$0HVOZjemDz64HjBCFGW2r7qDb0tqg8Ko3DDOrMj1u6g"},
{"content":{"body":"rbuckton:  sorry i cam across strong there","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>:  sorry i cam across strong there","msgtype":"m.text"},"ts":1635330006695,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$k3Mvs2VeeWlu_0jje0moz_FITUcabUKWJrh5a8d8kTs"},
{"content":{"body":"> <@yulia:mozilla.org> it is very difficult to find just from reading or from static analysis\n\nhmm Isn't it save us from promise chain/callback hell? I think it actually improved the readability and static analysis","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$74t9H1u_mW1IQrkiLHjGz8K8QH9xYCmnLOXozAlYExQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>it is very difficult to find just from reading or from static analysis</blockquote></mx-reply>hmm Isn't it save us from promise chain/callback hell? I think it actually improved the readability and static analysis","m.relates_to":{"m.in_reply_to":{"event_id":"$74t9H1u_mW1IQrkiLHjGz8K8QH9xYCmnLOXozAlYExQ"}},"msgtype":"m.text"},"ts":1635330016385,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$SI1PkfpkxZOsZPjhP4dCpmg5CdHLadtbFPfSWp-8420"},
{"content":{"body":"I'm still looking for another reviewer","msgtype":"m.text"},"ts":1635330022772,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$OjBBNA8ktGBIvjpRuVHoVlPy0cjW4dt389mRqyyKH70"},
{"content":{"body":"i don't feel like *strongly* about this","format":"org.matrix.custom.html","formatted_body":"i don't feel like <em>strongly</em> about this","msgtype":"m.text"},"ts":1635330023408,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$i06kP5QD45Wg9ysvnrsQIgxuOWFEDambujmOVEvRuI0"},
{"content":{"body":"> <@jackworks:matrix.org> hmm Isn't it save us from promise chain/callback hell? I think it actually improved the readability and static analysis\n\nhow does it improve static analysis? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SI1PkfpkxZOsZPjhP4dCpmg5CdHLadtbFPfSWp-8420?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>hmm Isn't it save us from promise chain/callback hell? I think it actually improved the readability and static analysis</blockquote></mx-reply>how does it improve static analysis?","m.relates_to":{"m.in_reply_to":{"event_id":"$SI1PkfpkxZOsZPjhP4dCpmg5CdHLadtbFPfSWp-8420"}},"msgtype":"m.text"},"ts":1635330058660,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$vGaAK_OANozkSscxQEQard4Ikux2upqUQ5VG4RMN3bc"},
{"content":{"body":"like, over promises","msgtype":"m.text"},"ts":1635330078750,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cf3yQgs4R_FJ3bXDg8w5jX5gSbgdVSh8KGd1F6I_aKY"},
{"content":{"body":"> <@mhofman:matrix.org> IMO the iterator approach is not particularly hard to read. Sure it takes a minute to understand why it actually works, but it's not obscure:\n> ```\n> for (const {using} of Disposable) {\n>    const resource = using(getResource());\n> }\n> ```\n\nI still think that, while this is usable, it feels very easy to mistake what's going on here with normal iteration.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$L5ceEPG330LNunLx_FebWdhVcqNYbQ13iY0dwrcW580?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><p>IMO the iterator approach is not particularly hard to read. Sure it takes a minute to understand why it actually works, but it's not obscure:</p>\n<pre><code>for (const {using} of Disposable) {\n   const resource = using(getResource());\n}\n</code></pre>\n</blockquote></mx-reply>I still think that, while this is usable, it feels very easy to mistake what's going on here with normal iteration.","m.relates_to":{"m.in_reply_to":{"event_id":"$L5ceEPG330LNunLx_FebWdhVcqNYbQ13iY0dwrcW580"}},"msgtype":"m.text"},"ts":1635330090189,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HKYRii1C2YqX2v_iK0PAvVwBuBp_1-VxEn_U5ygAAe0"},
{"content":{"body":"it's syntax","msgtype":"m.text"},"ts":1635330090290,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5-KYuxbhGMRZWgr4WqKd4lYn0_GvmO-YXCRXFDudPyM"},
{"content":{"body":"it's more analyzable than promise handlers, which are just functions flowing places","msgtype":"m.text"},"ts":1635330099102,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YOJMeJd17tEjxU8mujuJVMxI8Q_NbIFRIx2KkxcXu-8"},
{"content":{"body":"> <@yulia:mozilla.org> rbuckton:  sorry i cam across strong there\n\nNot a problem, it wasn't my intent to characterize stage 2 in that way.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k3Mvs2VeeWlu_0jje0moz_FITUcabUKWJrh5a8d8kTs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>:  sorry i cam across strong there</blockquote></mx-reply>Not a problem, it wasn't my intent to characterize stage 2 in that way.","m.relates_to":{"m.in_reply_to":{"event_id":"$k3Mvs2VeeWlu_0jje0moz_FITUcabUKWJrh5a8d8kTs"}},"msgtype":"m.text"},"ts":1635330125502,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$1QWBlfXcIwMyTqhaX8a3SYxSYB1Yx5TgoewUYatYU0o"},
{"content":{"body":"right but you can also await non-promises","msgtype":"m.text"},"ts":1635330142676,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$jPVZ3KBuV5L30c5_7ywR2XOqDpMpnqWJEj2eFHgvlx4"},
{"content":{"body":"so you don't necessarily know anything about what you are awaiting","msgtype":"m.text"},"ts":1635330154163,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$7YclIMYqxZHA_381xYh7j83FxsIcWDYtMbSMP7AsLQE"},
{"content":{"body":"i think we're assuming different goals of the analysis","msgtype":"m.text"},"ts":1635330166456,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CV7SRMt3Q9l-k0BLGcafW1qhAe_V6DEiDzvPSvyVkyc"},
{"content":{"body":"i was referring to analyzing the conceptual control flow of the code","msgtype":"m.text"},"ts":1635330179262,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J65kIxyxWbjjvEFAJEXcOB0Fdv16DMlnbYVcnoQwAgs"},
{"content":{"body":"what would you like this analysis to answer?","msgtype":"m.text"},"ts":1635330218556,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uLj5Wf_zfhqH9XaqyvnqMVe6Y8BpEdQ97AC9VThJ6UA"},
{"content":{"body":"alright, i mean -- i use async await, my main point is that its highly bug prone","msgtype":"m.text"},"ts":1635330221046,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$zKkxYwOyM8bO5NX8saDz75yk9zSufaA0DUNDI3QPapI"},
{"content":{"body":"Aki: We advanced topics without getting another Stage 2 reviewer. Waldemar is still willing to review but I'm still missing a reviewer since it seems Yehuda is unavailable.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akirose:matrix.org\">Aki</a>: We advanced topics without getting another Stage 2 reviewer. Waldemar is still willing to review but I'm still missing a reviewer since it seems Yehuda is unavailable.","msgtype":"m.text"},"ts":1635330234626,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$C2b7IIzVeb7LlKIl8cj5AgNlK8nB8cM-V8ty6X6wAsc"},
{"content":{"body":"shit damn ","msgtype":"m.text"},"ts":1635330250470,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$ZIC7oGRFAA9DuI4gk9fkWTqFPUcnN2H8vKDaRwRRlK8"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1635330252233,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$5EqVLyWDIMt0Brx4NdfLHRlntt-8o5XkKEDJyzMN364"},
{"content":{"body":"yulia: i feel like that's categorically false, it was an improvement over the Promise handlers and callbacks before that","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i feel like that's categorically false, it was an improvement over the Promise handlers and callbacks before that","msgtype":"m.text"},"ts":1635330267091,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7sk61mzoucfHRXuflCyfWfqVQFf8qKLdR1IT1sDdk5s"},
{"content":{"body":"which were much _more_ bug prone","format":"org.matrix.custom.html","formatted_body":"which were much <em>more</em> bug prone","msgtype":"m.text"},"ts":1635330275798,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tXBzyCBpXmadqglSlzQbwsqLYUfdxvn9JmYfSgFfVn8"},
{"content":{"body":"the static analysis came up because this has been solved by typescript -- by introducing a promise type, its much easier to track async bugs","msgtype":"m.text"},"ts":1635330277918,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$JIchwU8jyjOtqdkJaAh4F50B4IDkL24TMejj1lE4ehU"},
{"content":{"body":"Can we add a topic to the agenda to bring this back up after the break?","msgtype":"m.text"},"ts":1635330279595,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cXfnbu7oQliUNnvi0SMyd05JY_TarsIOdT7k2yAJMeo"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1635330284484,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$kzDDjAyB1f_igpj8vDlsC023KLSrwB-bvjmkHah09RM"},
{"content":{"body":"if you're making a statement that the absolute bugproneness is still high, then i agree with that","msgtype":"m.text"},"ts":1635330297000,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UaTmwURbAu2vjT67yV45DpI7RxSgIUwxu-oQ0mABPiY"},
{"content":{"body":"but to characterize it as a \"mistake\" suggests to me that it was worse than the status quo before it","msgtype":"m.text"},"ts":1635330309524,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2L6xOowit3lDwb1Ah6vJvyX9f8BNgL8HZi2o6Sjlarg"},
{"content":{"body":"yulia: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a `yield` based on its input value. So we can't correctly type an async coroutine built using a generator.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a <code>yield</code> based on its input value. So we can't correctly type an async coroutine built using a generator.","msgtype":"m.text"},"ts":1635330345840,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$75xmHfl-kbJNR-W4KwGWBp5xNQ8ttvwM8WsAuGsOORY"},
{"content":{"body":" * yulia: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a `yield` based on its input value. So we can't correctly type an async coroutine built using a generator.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a <code>yield</code> based on its input value. So we can't correctly type an async coroutine built using a generator.","m.new_content":{"body":"yulia: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a `yield` based on its input value. So we can't correctly type an async coroutine built using a generator.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: If it were just generators/yield, TypeScript doesn't yet have a way to contextually type the result of a <code>yield</code> based on its input value. So we can't correctly type an async coroutine built using a generator.","msgtype":"m.text"},"m.relates_to":{"event_id":"$75xmHfl-kbJNR-W4KwGWBp5xNQ8ttvwM8WsAuGsOORY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635330367581,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0xfI2XWyF4WK0bBpG7cQepa5sUj3cvPydreviMQIdGg"},
{"content":{"body":"rbuckton: i didn't mean the generators yield pattern","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't mean the generators yield pattern","msgtype":"m.text"},"ts":1635330380937,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LF5S66hr72RFXg0dOiToTZ72GyAAJCjhmvWVkBxwE08"},
{"content":{"body":"i meant the async await pattern in typescript","msgtype":"m.text"},"ts":1635330387897,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KYIUQwU5fsZisOo_6NHpebuqLj6fXEqeiTtpk3oXLfI"},
{"content":{"body":"the reason i was saying mistake was because i think there was a design space before, that doesn't exist now that we have async await","msgtype":"m.text"},"ts":1635330451469,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$st-nAM7cNQwKJ9UcKLY5C01xQ9MwD17QxaEMe4_YdLQ"},
{"content":{"body":"i don't think we want to add yet another promise handling syntax","msgtype":"m.text"},"ts":1635330463277,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$5LIbNZPlszD5hZA_8UXG87cxVl1kvqBZqMHE7dGueiE"},
{"content":{"body":"that would likely be a waste","msgtype":"m.text"},"ts":1635330467444,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$gyG7IV5RpeCYoY-GTo0J6ogU9bk1ie-BHThB6SUZmlU"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1635330485470,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YvI5alOTH9p6Hf8PkA2QMRWL1_jDLZ4kYaIvO8m7BOg"},
{"content":{"body":"and my point around saying it was a mistake was related too \"stage 2 is agreed upon\" which i brought across too strongly","msgtype":"m.text"},"ts":1635330496779,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$mPOsTtHwbpZyEI82LZ74VWcRPIHg4Xu9KcNrvAJGstI"},
{"content":{"body":"i can understand being disappointed in not exploring closed avenues","msgtype":"m.text"},"ts":1635330510813,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rmBZB5clxPIYSEXEckRHKEa-6rJIJkGsw-DQMC2yNUY"},
{"content":{"body":"or, rather, not having any reason to anymore","msgtype":"m.text"},"ts":1635330518132,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ryLJ356SBxE8SnUx1oPPhwLKZMsFNqyrtk8J2uu5_60"},
{"content":{"body":"yep, thats what i have regrets about","msgtype":"m.text"},"ts":1635330534315,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$1VgskZR0D_JwR25ciMDcGF2aylqnK2e0p8z9-OcukVM"},
{"content":{"body":"but we're not a research language, so eh","msgtype":"m.text"},"ts":1635330540608,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hGquqgxFxx_3bVRjdU-6DPOp2Ab0J6BFx6XJQLwdI24"}
]