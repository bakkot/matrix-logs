[
{"content":{"body":"i understand the rationale, but i think it’d be better to catch as many things as possible before runtime even if we can’t catch them all.","msgtype":"m.text"},"ts":1701740516007,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nhzciDNwv4UIgryiUBm-ZpBx8nhRbvoHJaxj8kSANr4"},
{"content":{"body":"I think it just adds arbitrary complexity to the spec and to implementations, not to mention the additional overhead during parse and static semantics evaluation, for almost no gain. ","format":"org.matrix.custom.html","formatted_body":"I think it just adds arbitrary complexity to the spec and to implementations, not to mention the additional overhead during parse and static semantics evaluation, for almost no gain.","msgtype":"m.text"},"ts":1701742786518,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$p1ScosLvoJvZO5puHkgSls3JyhoBzCLhscbOeKS28Q4"},
{"content":{"body":"There's a long tail of things in JS that are syntactically valid, but otherwise incorrect, like `3()`, or `f() = 1`, or `null.x`. Banning those syntactically would significantly increase the complexity of both the existing specification text and new proposals. I'm not saying I'm opposed, just that I don't think the costs are worth the benefits.","format":"org.matrix.custom.html","formatted_body":"There's a long tail of things in JS that are syntactically valid, but otherwise incorrect, like <code>3()</code>, or <code>f() = 1</code>, or <code>null.x</code>. Banning those syntactically would significantly increase the complexity of both the existing specification text and new proposals. I'm not saying I'm opposed, just that I don't think the costs are worth the benefits.","m.mentions":{},"msgtype":"m.text"},"ts":1701743295924,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$1YzHOnjC-IvCm03EGXiQx2N_mU0iYjeTUdRaTEzrf6o"}
]