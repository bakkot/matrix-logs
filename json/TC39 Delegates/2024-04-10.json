[
{"content":{"body":"If you care about performance, it's a bad idea to feed external input into a deterministic hash function. That invites attacks such as Hash Flooding: https://en.wikipedia.org/wiki/Collision_attack#Hash_flooding","m.mentions":{},"msgtype":"m.text"},"ts":1712707263754,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$eSpQxYv3Q1Lqol9Z8Des0HKSKxVm1TfhD_ooVAz9YBg"},
{"content":{"body":"> <@waldemarh:matrix.org> If you care about performance, it's a bad idea to feed external input into a deterministic hash function. That invites attacks such as Hash Flooding: https://en.wikipedia.org/wiki/Collision_attack#Hash_flooding\n\nV8 rotates its hash function on boot, but at some point there was a security issue where, if you put some Maps in the startup snapshot (which Chrome doesn't do, but Node.js started doing at some point), it forgot to re-rotate them, causing a DOS risk of this form! Fixed by joyee :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eSpQxYv3Q1Lqol9Z8Des0HKSKxVm1TfhD_ooVAz9YBg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>If you care about performance, it&#39;s a bad idea to feed external input into a deterministic hash function. That invites attacks such as Hash Flooding: https://en.wikipedia.org/wiki/Collision_attack#Hash_flooding</blockquote></mx-reply>V8 rotates its hash function on boot, but at some point there was a security issue where, if you put some Maps in the startup snapshot (which Chrome doesn't do, but Node.js started doing at some point), it forgot to re-rotate them, causing a DOS risk of this form! Fixed by <a href=\"https://matrix.to/#/@qzhang:igalia.com\">joyee</a> :)","m.mentions":{"user_ids":["@waldemarh:matrix.org","@qzhang:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$eSpQxYv3Q1Lqol9Z8Des0HKSKxVm1TfhD_ooVAz9YBg"}},"msgtype":"m.text"},"ts":1712709626514,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jrqzhr8MDdS5_tXkZ8w8hHMyMtJhPHANUNpucFjMFr4"},
{"content":{"body":"I am not sure what we're supposed to get from Project Valhalla when primitives/value semantics has already been deemed not an option due to implementability issues","m.mentions":{},"m.relates_to":{"event_id":"$EJdRzZ-hWUSy1gmiXeEqq39C12CrL04y6FHFARpLTNc","is_falling_back":true,"m.in_reply_to":{"event_id":"$jbWZ-JIVp1jNFe2_Y0MmT1Qr38MeENTgdrrTG8BUXHU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1712713794096,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ngizBDi74Fk1aCt1n742uIOhPPpszInQKrZSj4kNFik"},
{"content":{"body":"if the question is class-based vs object-based immutable things, I think there's a lot of interest among JS developers in having easy-to-use mechanisms that aren't based on classes.","m.mentions":{},"m.relates_to":{"event_id":"$EJdRzZ-hWUSy1gmiXeEqq39C12CrL04y6FHFARpLTNc","is_falling_back":true,"m.in_reply_to":{"event_id":"$ngizBDi74Fk1aCt1n742uIOhPPpszInQKrZSj4kNFik"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1712713867105,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Mgbz80i1poFYbtJTILZ1AjPp7uP_uRyb5x9omv_kDHU"},
{"content":{"body":" * if the question is class-based vs object-based immutable things, I think there's a lot of interest among JS developers in having easy-to-use mechanisms for immutable data structures that don't force them to write classes","format":"org.matrix.custom.html","formatted_body":" * if the question is class-based vs object-based immutable things, I think there's a lot of interest among JS developers in having easy-to-use mechanisms for immutable data structures that don't force them to write classes","m.mentions":{},"m.new_content":{"body":"if the question is class-based vs object-based immutable things, I think there's a lot of interest among JS developers in having easy-to-use mechanisms for immutable data structures that don't force them to write classes","format":"org.matrix.custom.html","formatted_body":"if the question is class-based vs object-based immutable things, I think there's a lot of interest among JS developers in having easy-to-use mechanisms for immutable data structures that don't force them to write classes","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Mgbz80i1poFYbtJTILZ1AjPp7uP_uRyb5x9omv_kDHU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712713881072,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_Ndd3J0dx-HHnZfkep1EPTOm4DiJSWxBBb30nLohwtI"},
{"content":{"body":"> <@waldemarh:matrix.org> If you care about performance, it's a bad idea to feed external input into a deterministic hash function. That invites attacks such as Hash Flooding: https://en.wikipedia.org/wiki/Collision_attack#Hash_flooding\n\nPerformance and/or security. This is one of the reasons why I indicated non-determinism for string hashing between application restarts is a good thing, actually. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eSpQxYv3Q1Lqol9Z8Des0HKSKxVm1TfhD_ooVAz9YBg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>If you care about performance, it&#39;s a bad idea to feed external input into a deterministic hash function. That invites attacks such as Hash Flooding: https://en.wikipedia.org/wiki/Collision_attack#Hash_flooding</blockquote></mx-reply>Performance and/or security. This is one of the reasons why I indicated non-determinism for string hashing between application restarts is a good thing, actually.","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$eSpQxYv3Q1Lqol9Z8Des0HKSKxVm1TfhD_ooVAz9YBg"}},"msgtype":"m.text"},"ts":1712714042864,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nSm2egsQrnJbyV6fBcNRRhTGgLLjmGrU7PGh2ora_eU"},
{"content":{"body":"There's a lot of complexity with class-based immutable things, e.g., we'd need to use initializer list-based constructors, so if there's subclassing it's a totally different instantiation protocol. And if they're value types, it's even more complicated if we want to avoid any kind of global registries like we discussed with shared structs.","m.mentions":{},"m.relates_to":{"event_id":"$EJdRzZ-hWUSy1gmiXeEqq39C12CrL04y6FHFARpLTNc","is_falling_back":true,"m.in_reply_to":{"event_id":"$Mgbz80i1poFYbtJTILZ1AjPp7uP_uRyb5x9omv_kDHU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1712714070944,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EmbyAWNPuyWSONL_GRN1iEf5_SJnYtjZaT4Kb9CuBo4"}
]