[
{"content":{"body":"I just ran across a strange case while writing additional tests for RegExp Modifiers. I've found exactly two cases where `/\\b/u` and `/\\b/ui` disagree for the same character:\n- U+017f - ſ LATIN SMALL LETTER LONG S\n- U+212a - K KELVIN SIGN\n\nA quick test of the same patterns and inputs in C# shows no disagreement, so its not clear to me if this is expected or possibly a bug in `\\b`.","format":"org.matrix.custom.html","formatted_body":"<p>I just ran across a strange case while writing additional tests for RegExp Modifiers. I've found exactly two cases where <code>/\\b/u</code> and <code>/\\b/ui</code> disagree for the same character:</p>\n<ul>\n<li>U+017f - ſ LATIN SMALL LETTER LONG S</li>\n<li>U+212a - K KELVIN SIGN</li>\n</ul>\n<p>A quick test of the same patterns and inputs in C# shows no disagreement, so its not clear to me if this is expected or possibly a bug in <code>\\b</code>.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1707877284458,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jJd3PNLzEdx9yHWc7PJR5Mg_GlDJwvNDYBRHFujguf8"},
{"content":{"body":"possibly having to do with how Unicode case folding for those characters produces an ASCII character. It just seems strange to have something that is not considered a word character when preserving case, but is considered a word character when ignoring case.","m.mentions":{},"msgtype":"m.text"},"ts":1707877882602,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$US7Z2xHoCvkBR3jCMnv9yQJ7aM3TMwXisj8PARCDej4"},
{"content":{"body":"the original sin here is that `\\b` and `\\w` are not unicode-aware even in `u` mode","format":"org.matrix.custom.html","formatted_body":"the original sin here is that <code>\\b</code> and <code>\\w</code> are not unicode-aware even in <code>u</code> mode","m.mentions":{},"msgtype":"m.text"},"ts":1707878362495,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XLSMKOS8kXEy5CfNtd7STGyheUDo_JoVSJE0D5Z4OoU"},
{"content":{"body":"this behavior follows immediately from that: `U+017f` is not an ascii word character, but it case-folds to `s`, which is, and `i` means that the regex operates on case-folded characters","format":"org.matrix.custom.html","formatted_body":"this behavior follows immediately from that: <code>U+017f</code> is not an ascii word character, but it case-folds to <code>s</code>, which is, and <code>i</code> means that the regex operates on case-folded characters","m.mentions":{},"msgtype":"m.text"},"ts":1707878417275,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AUbcjY1mf_I9-xahmmp0fMqUJppXEFzwrQwg4zs3TMs"},
{"content":{"body":"the decision to make `\\b` and `\\w` not unicode-aware predates me, unfortunately, so I cannot tell you why this is. it does seem... bad.","format":"org.matrix.custom.html","formatted_body":"the decision to make <code>\\b</code> and <code>\\w</code> not unicode-aware predates me, unfortunately, so I cannot tell you why this is. it does seem... bad.","m.mentions":{},"msgtype":"m.text"},"ts":1707878442023,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sY7vq_95rzZFgRJRWq-a4jfcNuxStdVeC60BDPxjoGA"},
{"content":{"body":"(`\\d` too but that one matters a lot less.)","format":"org.matrix.custom.html","formatted_body":"(<code>\\d</code> too but that one matters a lot less.)","m.mentions":{},"msgtype":"m.text"},"ts":1707878455278,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$I6KETCbLsG_vjk7g4_BaJa2oTPY5NhY5H-51GFurg34"},
{"content":{"body":"Time to introduce a `w` flag for very very unicode?","format":"org.matrix.custom.html","formatted_body":"Time to introduce a <code>w</code> flag for very very unicode?","m.mentions":{},"msgtype":"m.text"},"ts":1707880749538,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$FW9pGfr7N2UoqiFYAMy_tgiIg3_iyfMW5IZ1irrXPzY"},
{"content":{"body":" * Time to introduce a `w` flag for very very unicode mode?","format":"org.matrix.custom.html","formatted_body":" * Time to introduce a <code>w</code> flag for very very unicode mode?","m.mentions":{},"m.new_content":{"body":"Time to introduce a `w` flag for very very unicode mode?","format":"org.matrix.custom.html","formatted_body":"Time to introduce a <code>w</code> flag for very very unicode mode?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$FW9pGfr7N2UoqiFYAMy_tgiIg3_iyfMW5IZ1irrXPzY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1707880816554,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$VO0c9SX6iRpkSzpfiv1-vpjjAIJpmqoOugSIDp2CSoE"},
{"content":{"body":"we actually did specifically discuss and reject the possibility of making `\\b` etc unicode-aware in `v`-mode https://github.com/tc39/notes/blob/2fccc7f7a38201354a007394ab867ec7b245b464/meetings/2021-08/aug-31.md#regexp-set-notation--properties-of-strings","format":"org.matrix.custom.html","formatted_body":"we actually did specifically discuss and reject the possibility of making <code>\\b</code> etc unicode-aware in <code>v</code>-mode https://github.com/tc39/notes/blob/2fccc7f7a38201354a007394ab867ec7b245b464/meetings/2021-08/aug-31.md#regexp-set-notation--properties-of-strings","m.mentions":{},"msgtype":"m.text"},"ts":1707881264670,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RFe-vZOYsJ9DcdUZWEYnJo7GLSaUEskJdo_aqFjOJpc"},
{"content":{"body":"> JRL: Also voicing support, I would not change these shorthands.\n\nI do not remember this","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>JRL: Also voicing support, I would not change these shorthands.</p>\n</blockquote>\n<p>I do not remember this</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1707886741840,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BJkaTpDy7LZOEXefnw5S53YOqmSYztGB_nuYeDwQ0wc"},
{"content":{"body":"I think waldemar's concern at the time was that changing `\\b`, `\\w`, and `\\d` shouldn't be tied to the mode that adds set notation. We'd need to opt in either with a new mode or a `{u}` suffix. Either are fine so long as the new mode could be included in the modifiers list, i.e., `\\b{u}` or `(?w:\\b)` (or whatever flag we'd use) would work for those cases.","format":"org.matrix.custom.html","formatted_body":"I think waldemar's concern at the time was that changing <code>\\b</code>, <code>\\w</code>, and <code>\\d</code> shouldn't be tied to the mode that adds set notation. We'd need to opt in either with a new mode or a <code>{u}</code> suffix. Either are fine so long as the new mode could be included in the modifiers list, i.e., <code>\\b{u}</code> or <code>(?w:\\b)</code> (or whatever flag we'd use) would work for those cases.","m.mentions":{},"msgtype":"m.text"},"ts":1707888709083,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$d1eGuiMjNzSkXBYUIG-bn-4MOeRkXXy2R9-9LRr1S6Q"}
]