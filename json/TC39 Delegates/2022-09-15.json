[
{"content":{"body":"> <@aclaymore:matrix.org> For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.\n\nI will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.</blockquote></mx-reply>I will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","m.relates_to":{"m.in_reply_to":{"event_id":"$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@aclaymore:matrix.org> For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.\n\nI will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.</blockquote></mx-reply>I will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","mimetype":"text/html"}]},"ts":1663202911682,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$waXXA7jV7UYKej7Eg9ZxD_J8Ol9ConZfsE6nCubOcF8"},
{"content":{"body":"no host again?","msgtype":"m.text","org.matrix.msc1767.text":"no host again?"},"ts":1663203430086,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aCyduP9j4YnkbC8NeWhQuRiq2AOJ0XIYwnPOHcN82bA"},
{"content":{"body":"Appears not","msgtype":"m.text","org.matrix.msc1767.text":"Appears not"},"ts":1663203529476,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$uEMWfgMfTG_lG4xzZNrcfwix-igxjFd3RePy7Qu-eXw"},
{"content":{"body":"I can start it,give me a few seconds","msgtype":"m.text"},"ts":1663203555375,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$e_Ssb53832FfaNI8VPP2VusuUolnH0Cu1c0bFRn7x_w"},
{"content":{"body":"I don't think it asked for the code","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it asked for the code"},"ts":1663203653865,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$m_-875Qzq5U2nGtsgkZh5nzX4vKl4zJzjhWUs6OPB-I"},
{"content":{"body":" * I don't think it asked for the code","m.new_content":{"body":"I don't think it asked for the code","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it asked for the code"},"m.relates_to":{"event_id":"$m_-875Qzq5U2nGtsgkZh5nzX4vKl4zJzjhWUs6OPB-I","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I don't think it asked for the code"},"ts":1663203665814,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Jf9HDkZ9i5flE3ccyvjNMAWs3G_eG_nyxa11xd7ctQM"},
{"content":{"body":"You may need to refresh now to get in","msgtype":"m.text"},"ts":1663203672237,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vYJo-6oNN7h-IwvaYyFmp9seqiB4wTk5E0CoKlbtaHE"},
{"content":{"body":"The meeting is started","msgtype":"m.text"},"ts":1663203677905,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Uqf9jRFgoGEqF5Gm3Hu_YoykB90VUZX0dBCHEvY6Zj8"},
{"content":{"body":"one second","msgtype":"m.text","org.matrix.msc1767.text":"one second"},"ts":1663204395814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Ypy3AvvjGNPGcWw63aDFxe2kAIV3uPOtWvupp6LbnVU"},
{"content":{"body":"audio issue, will be sorted in a moment","msgtype":"m.text","org.matrix.msc1767.text":"audio issue, will be sorted in a moment"},"ts":1663204426521,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$oDuO90DxILrS524LwWStfM_zNMDKNjTSVlVqtWVXB5Q"},
{"content":{"body":"Michael Ficarra: yes to your queue question, afaict","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: yes to your queue question, afaict","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Michael Ficarra: yes to your queue question, afaict","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: yes to your queue question, afaict","mimetype":"text/html"}]},"ts":1663205301292,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oQPLjvamyQbbVNcSLqFwVcLXTuyGeqhFSk3RYTNLvh4"},
{"content":{"body":"it is basically a const with some extra semantics","msgtype":"m.text","org.matrix.msc1767.text":"it is basically a const with some extra semantics"},"ts":1663205309652,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qK4q92AWy0ydCqFiDVGb1hg6m26eqwAo23HIoqiveZI"},
{"content":{"body":"I figured, but want to confirm","msgtype":"m.text","org.matrix.msc1767.text":"I figured, but want to confirm"},"ts":1663205320502,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KPq10wf1_5UBLeXU_Zusxuo7toSnAniWFOZA6DNNmcU"},
{"content":{"body":"const bindings can be closed over and don't ever *become* TDZ once they are bound, this is kind of the opposite of consts","format":"org.matrix.custom.html","formatted_body":"const bindings can be closed over and don't ever <em>become</em> TDZ once they are bound, this is kind of the opposite of consts","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"const bindings can be closed over and don't ever *become* TDZ once they are bound, this is kind of the opposite of consts","mimetype":"text/plain"},{"body":"const bindings can be closed over and don't ever <em>become</em> TDZ once they are bound, this is kind of the opposite of consts","mimetype":"text/html"}]},"ts":1663205350082,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Vc3cGbj8kCHGHRKwnIKk1700pK9YG3NmYwtwEZRZ6CM"},
{"content":{"body":"wait what","msgtype":"m.text","org.matrix.msc1767.text":"wait what"},"ts":1663205380994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cZl7s9UFhFyfUxDi2lfN5QD3xkUfdoZyx4n7dH3l4PA"},
{"content":{"body":"how can `using` _become_ TDZ?","format":"org.matrix.custom.html","formatted_body":"how can <code>using</code> <em>become</em> TDZ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"how can `using` _become_ TDZ?","mimetype":"text/plain"},{"body":"how can <code>using</code> <em>become</em> TDZ?","mimetype":"text/html"}]},"ts":1663205387832,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZjwEuRAqCM0h9Wyl1Ds1PFjIp653JZMT8z0gOGiwPVs"},
{"content":{"body":"after disposal I would assume that's what happens","msgtype":"m.text","org.matrix.msc1767.text":"after disposal I would assume that's what happens"},"ts":1663205416877,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Tasyqst4wBkRZi6t0M3inzhn2rHWqKRqF6qblqnRTqI"},
{"content":{"body":"what that would be crazy","msgtype":"m.text","org.matrix.msc1767.text":"what that would be crazy"},"ts":1663205428041,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$d2InehwGjwwalqXQvUaLdRB_ZWdAB19Q9QtNkHL99os"},
{"content":{"body":"does it just keep its current value?","msgtype":"m.text","org.matrix.msc1767.text":"does it just keep its current value?"},"ts":1663205431334,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qxPp2hROBm3dNZDwCRFQP4w1AUH0CeplV9zSwAYcMks"},
{"content":{"body":"i hope that doesn't happen, let me read spec draft again","msgtype":"m.text","org.matrix.msc1767.text":"i hope that doesn't happen, let me read spec draft again"},"ts":1663205433745,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hZTY6gf4I5ldC2iOS2LxvXqValFgcySwdTNJH8KBLBM"},
{"content":{"body":"it just calls @@dispose i thought","msgtype":"m.text","org.matrix.msc1767.text":"it just calls @@dispose i thought"},"ts":1663205437919,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wyUonAHTQ90yRC1sBZQpOdvPX62ywF_OBbi4t1xCvNI"},
{"content":{"body":"it doesn't do any binding magic","msgtype":"m.text","org.matrix.msc1767.text":"it doesn't do any binding magic"},"ts":1663205440868,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J6PtzWgs_D2LE95EgTG9CM4GxuaoJMSrLhjdMh1G-Ww"},
{"content":{"body":"it's probably more useful to developers to TDZ the binding","msgtype":"m.text","org.matrix.msc1767.text":"it's probably more useful to developers to TDZ the binding"},"ts":1663205480333,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Sg45x4hww2I3i0TWSb-7tgJ4t4-lBystSlMNRuvevCU"},
{"content":{"body":"doesn't `let` have this same syntactic quirk?","format":"org.matrix.custom.html","formatted_body":"doesn't <code>let</code> have this same syntactic quirk?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"doesn't `let` have this same syntactic quirk?","mimetype":"text/plain"},{"body":"doesn't <code>let</code> have this same syntactic quirk?","mimetype":"text/html"}]},"ts":1663205539682,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qyOdTVDVqiLe-wN4V0ft_e786RK1h6eCTgBoxWhagak"},
{"content":{"body":"i am strongly opposed uninitializing the binding after disposing","msgtype":"m.text","org.matrix.msc1767.text":"i am strongly opposed uninitializing the binding after disposing"},"ts":1663205545116,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3ZBroKoLoLJObGTE_C2nCaet6hDdxLeozeOmeAd3mv4"},
{"content":{"body":"i'm also pretty sure that's not what the current proposal does","msgtype":"m.text","org.matrix.msc1767.text":"i'm also pretty sure that's not what the current proposal does"},"ts":1663205563877,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KpG8RIb_IsZadtaZCso354zVWqsN3CSby4-bxfu9GDI"},
{"content":{"body":"this would be the first time we would move *to* a TDZ","format":"org.matrix.custom.html","formatted_body":"this would be the first time we would move <em>to</em> a TDZ","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"this would be the first time we would move *to* a TDZ","mimetype":"text/plain"},{"body":"this would be the first time we would move <em>to</em> a TDZ","mimetype":"text/html"}]},"ts":1663205565608,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$H91i--WzfrSl1s0i5kV-jyEFuEl0cE0uNvnUv5VD2B4"},
{"content":{"body":"we're still a memory-safe language so I don't really see why this is an important thing to do","msgtype":"m.text","org.matrix.msc1767.text":"we're still a memory-safe language so I don't really see why this is an important thing to do"},"ts":1663205578665,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1yHFLLMyup__lG0R12qJbf0QZRaGcLl8Z_Zfg33UwAw"},
{"content":{"body":"it would just discourage accidental use of something that's been disposed","msgtype":"m.text","org.matrix.msc1767.text":"it would just discourage accidental use of something that's been disposed"},"ts":1663205600272,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mY9svo1YX43YCHS92XPhmq73lBDJhTL_uKlvBDLoDrQ"},
{"content":{"body":"it would be easier to identify bugs","msgtype":"m.text","org.matrix.msc1767.text":"it would be easier to identify bugs"},"ts":1663205606588,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AKWuRrzvO-S7EprfeXL5gsKZMgNrCW0sZucqeTBlurU"},
{"content":{"body":"I think it's not unreasoable to move it to TDZ, it would prevent you from using a variable which is already meant to not be used anymore","msgtype":"m.text","org.matrix.msc1767.text":"I think it's not unreasoable to move it to TDZ, it would prevent you from using a variable which is already meant to not be used anymore"},"ts":1663205612896,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$9HyuXTarGv7vQkAPvLdpO-NCX7gwzkmPl-7GFLbwOyM"},
{"content":{"body":"it would complicate what little more hope we have of optimizing away TDZ","msgtype":"m.text","org.matrix.msc1767.text":"it would complicate what little more hope we have of optimizing away TDZ"},"ts":1663205625779,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$imLC6_Mjn8APMiaFcfVCtRTbfESopq9-7_L2HrGm5YY"},
{"content":{"body":"unless the disposal protocol is meant to be used on things that remain useful after disposal?","msgtype":"m.text","org.matrix.msc1767.text":"unless the disposal protocol is meant to be used on things that remain useful after disposal?"},"ts":1663205634925,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dgb7hU7Pfb-Op-k4x5-_C5JRr8VMv4Y_TXzfVesOh6c"},
{"content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"ts":1663205648463,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0"},
{"content":{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","format":"org.matrix.custom.html","formatted_body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","m.new_content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","mimetype":"text/plain"},{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","mimetype":"text/html"}]},"ts":1663205662375,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7MPHJO6JLic5xEry2nqTcl5JdySgtH3Fz4xWbKfjp_Q"},
{"content":{"body":"the bar for messing with bindings should be very high","msgtype":"m.text","org.matrix.msc1767.text":"the bar for messing with bindings should be very high"},"ts":1663205664855,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$11jwgGm04TasweFmA0c-BW1t_egOXGzA7wFdslWOW8A"},
{"content":{"body":"> <@littledan:matrix.org> the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };\n\nIMO this case is just not worth our design energy","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };</blockquote></mx-reply>IMO this case is just not worth our design energy","m.relates_to":{"m.in_reply_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };\n\nIMO this case is just not worth our design energy","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };</blockquote></mx-reply>IMO this case is just not worth our design energy","mimetype":"text/html"}]},"ts":1663205675979,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5qrgsUqUI8XDXVwym9lkoVusx87AkWOMR_K2qkxstps"},
{"content":{"body":"littledan: no? a closure could escape","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: no? a closure could escape","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"littledan: no? a closure could escape","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: no? a closure could escape","mimetype":"text/html"}]},"ts":1663205676074,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9AsscsswlewWWmS19LC8ZC656bfWcAIf1pXBl5iDauA"},
{"content":{"body":"oh, oops","msgtype":"m.text","org.matrix.msc1767.text":"oh, oops"},"ts":1663205690470,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UXDHXx3abIUzZ-AIn-4yf9PIdnPNDeF5EjafI7eN6GQ"},
{"content":{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","m.new_content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"ts":1663205699620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$M5doAzfNNS34thiTkVAxNVY9uexQaT_QNbmIy0tCV8g"},
{"content":{"body":"```js\n{\n  using db = getConnection()\n  setTimeout(() => db.query(\"...\"), 100);\n} // disposes the connection  \n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">{\n  using db = getConnection()\n  setTimeout(() =&gt; db.query(&quot;...&quot;), 100);\n} // disposes the connection  \n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\n{\n  using db = getConnection()\n  setTimeout(() => db.query(\"...\"), 100);\n} // disposes the connection  \n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">{\n  using db = getConnection()\n  setTimeout(() =&gt; db.query(&quot;...&quot;), 100);\n} // disposes the connection  \n</code></pre>\n","mimetype":"text/html"}]},"ts":1663205716305,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$OBJddq7BM0Ndyd8cJmcXv2ZAFaODUGwQvzgD56pa0vE"},
{"content":{"body":"why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":"why <em>do</em> we allow const there?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"why *do* we allow const there?","mimetype":"text/plain"},{"body":"why <em>do</em> we allow const there?","mimetype":"text/html"}]},"ts":1663205762086,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pLmUYQiJ81yPwFOPHvS3M64vBNVn44hrx7MQzDMe9FM"},
{"content":{"body":" * why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":" * why <em>do</em> we allow const there?","m.new_content":{"body":"why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":"why <em>do</em> we allow const there?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"why *do* we allow const there?","mimetype":"text/plain"},{"body":"why <em>do</em> we allow const there?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$pLmUYQiJ81yPwFOPHvS3M64vBNVn44hrx7MQzDMe9FM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * why *do* we allow const there?","mimetype":"text/plain"},{"body":" * why <em>do</em> we allow const there?","mimetype":"text/html"}]},"ts":1663205767040,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oW6P8AFWOSAs4lqHEnP2sXSi9cceu0anzCV15opwmz8"},
{"content":{"body":"it kind of seems like something that'd be web compatible to disallow, since it'd be unlikely someone ships that code","msgtype":"m.text","org.matrix.msc1767.text":"it kind of seems like something that'd be web compatible to disallow, since it'd be unlikely someone ships that code"},"ts":1663205781185,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TD6aIj98hSD0Cj1j-ksLKy5jYaGVjChBpDrpJ-hi_Ro"},
{"content":{"body":"moving it back into tdz is super weird","msgtype":"m.text","org.matrix.msc1767.text":"moving it back into tdz is super weird"},"ts":1663205785410,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8"},
{"content":{"body":"> <@shuyuguo:matrix.org> moving it back into tdz is super weird\n\npdz, \"permanent dead zone\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>moving it back into tdz is super weird</blockquote></mx-reply>pdz, &quot;permanent dead zone&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> moving it back into tdz is super weird\n\npdz, \"permanent dead zone\"","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>moving it back into tdz is super weird</blockquote></mx-reply>pdz, &quot;permanent dead zone&quot;","mimetype":"text/html"}]},"ts":1663205808178,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fBRzuHOlDIwwTPNzQrtqSjLVf7-UxsK4tXN5Ed5Vq6Y"},
{"content":{"body":"I guess implementers of the disposal protocol need to handle `use-after-dispose` anyway; moving to TDZ could help if it removed that need for them but it wouldn't","format":"org.matrix.custom.html","formatted_body":"I guess implementers of the disposal protocol need to handle <code>use-after-dispose</code> anyway; moving to TDZ could help if it removed that need for them but it wouldn't","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I guess implementers of the disposal protocol need to handle `use-after-dispose` anyway; moving to TDZ could help if it removed that need for them but it wouldn't","mimetype":"text/plain"},{"body":"I guess implementers of the disposal protocol need to handle <code>use-after-dispose</code> anyway; moving to TDZ could help if it removed that need for them but it wouldn't","mimetype":"text/html"}]},"ts":1663205833947,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vyouMHkR1lqM_Sb171f54AzR1WG8QIvr7unIojYQ7og"},
{"content":{"body":"Uhm right, it wouldn't because the disposable value can still escape even if the binding doesn't","msgtype":"m.text","org.matrix.msc1767.text":"Uhm right, it wouldn't because the disposable value can still escape even if the binding doesn't"},"ts":1663205872111,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wassN3y9Sl9vrUBhVB1t-uKOXb_5YclL9E8Ub7s0b7c"},
{"content":{"body":"You just have to reassign it to a variable","msgtype":"m.text","org.matrix.msc1767.text":"You just have to reassign it to a variable"},"ts":1663205880376,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$y8V4K71Uy5DnmSO1Mr38o7MZVvjZ0gN9ZCjgUvKCT4s"},
{"content":{"body":"poison pill the value 👿","msgtype":"m.text","org.matrix.msc1767.text":"poison pill the value 👿"},"ts":1663205930074,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9RkxS5RnbHzXIC1FnWB0JL-dFxFYz6dCHRf-JeiN2Mk"},
{"content":{"body":"who? what?","msgtype":"m.text","org.matrix.msc1767.text":"who? what?"},"ts":1663205966792,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZfTliSD_kiVqrorKvYqUEY1CfPOKD-JmySsuKrh79d4"},
{"content":{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"ts":1663205971855,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uvW02Sh1TLUZB5AS2xt37JnQDmYva35TmrFyMGqUkNE"},
{"content":{"body":" * you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":" * you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","m.new_content":{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$uvW02Sh1TLUZB5AS2xt37JnQDmYva35TmrFyMGqUkNE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":" * you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"ts":1663205975746,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B-DYdl7br9oMPj0Pf7U0tfykGYMEM2WRianlimCTQh0"},
{"content":{"body":"michael it sounds like you want a language that doesn't start with java and end with script","msgtype":"m.text","org.matrix.msc1767.text":"michael it sounds like you want a language that doesn't start with java and end with script"},"ts":1663206039840,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ccT6p6ScWSL7tYorhP_8ImXI_xjTJcVT2GxwfRLsAS4"},
{"content":{"body":"I really want to know whether it is ever reasonable to use a value after disposal","msgtype":"m.text","org.matrix.msc1767.text":"I really want to know whether it is ever reasonable to use a value after disposal"},"ts":1663206077946,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BKRbTz54tSZu8KRdrn9RrgRmaVW3QqUtvWGxUZ9KyhA"},
{"content":{"body":"or if our intent is that that is never appropriate","msgtype":"m.text","org.matrix.msc1767.text":"or if our intent is that that is never appropriate"},"ts":1663206088253,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$elmoomH0xrtmuxu2jgLkrQFTWhQwzNf5m2yTIvn6ThA"},
{"content":{"body":"a file handle could be reopened, or a DB connection?","msgtype":"m.text","org.matrix.msc1767.text":"a file handle could be reopened, or a DB connection?"},"ts":1663206109677,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$o-AvUPSdb_N6hQZUUX0Ra_6DxDnweC1VF0Ai57B8f2I"},
{"content":{"body":"i think it is reasonable","msgtype":"m.text","org.matrix.msc1767.text":"i think it is reasonable"},"ts":1663206110547,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cuMgmv92MWV5WfFtLrv9pvznNYO643yoVmO0WS1MEWY"},
{"content":{"body":"if it is not reasonable, we should do what we can to surface an error when that reuse happens","msgtype":"m.text","org.matrix.msc1767.text":"if it is not reasonable, we should do what we can to surface an error when that reuse happens"},"ts":1663206114926,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UcE_qol16UTn-hc5iF2vH8PZA4vTirxpsm4qx19uTOo"},
{"content":{"body":" * a file handle could be reopened, or a DB connection?","m.new_content":{"body":"a file handle could be reopened, or a DB connection?","msgtype":"m.text","org.matrix.msc1767.text":"a file handle could be reopened, or a DB connection?"},"m.relates_to":{"event_id":"$o-AvUPSdb_N6hQZUUX0Ra_6DxDnweC1VF0Ai57B8f2I","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * a file handle could be reopened, or a DB connection?"},"ts":1663206122548,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lgKfpXyRljntMuSfXuMz7XFsoLPeBoc0qvgRX_c4r6c"},
{"content":{"body":"RAII doesn't always mean \"irrevocably unusable\"","msgtype":"m.text","org.matrix.msc1767.text":"RAII doesn't always mean \"irrevocably unusable\""},"ts":1663206124322,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5ww3SSK4hOTv3SeXA1nIM-3Do4479WaQ03k0ibGsJgo"},
{"content":{"body":"sometimes you just piggyback on RAII scope to do things like locking mutexes","msgtype":"m.text","org.matrix.msc1767.text":"sometimes you just piggyback on RAII scope to do things like locking mutexes"},"ts":1663206133346,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NNrPrrBuzdJygeOu2Ka3tKlXnJSLYH6IDhueUUhnnXI"},
{"content":{"body":"or temporarily unlocking","msgtype":"m.text","org.matrix.msc1767.text":"or temporarily unlocking"},"ts":1663206136092,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1OdOJTdQAGSYGafNZnsC2G6C2HYCV1PxoAfm1VEyy8s"},
{"content":{"body":"I think it's OK that this is the responsibility of the implementer of the disposal protocol","msgtype":"m.text","org.matrix.msc1767.text":"I think it's OK that this is the responsibility of the implementer of the disposal protocol"},"ts":1663206138762,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VBlA8GbqsoF3H6xmwtgvSVL3HSNjvOjqyR74yhx7uQE"},
{"content":{"body":"those values remain usable","msgtype":"m.text","org.matrix.msc1767.text":"those values remain usable"},"ts":1663206140802,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Od_8RHTRb7rjKDUsPdxhP_dUHTfIoCSkNCLvbzc5nBE"},
{"content":{"body":"objects with casual state machines are normal. double return on an iterator, double close, &c","msgtype":"m.text","org.matrix.msc1767.text":"objects with casual state machines are normal. double return on an iterator, double close, &c"},"ts":1663206161074,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$P75raFiwKdbmZoscrjykyaTpBPnyTenJclOtmmnQWgU"},
{"content":{"body":"hey, I must have missed this slide!","msgtype":"m.text","org.matrix.msc1767.text":"hey, I must have missed this slide!"},"ts":1663206171219,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BqIJe9d5RgjatzmQ0ajMbe_uUfxnNLvUt0E0FS0ZnU0"},
{"content":{"body":"hot take: we should take everything in contextlib and explicitly avoid it","msgtype":"m.text","org.matrix.msc1767.text":"hot take: we should take everything in contextlib and explicitly avoid it"},"ts":1663206559191,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$h_sbI9qckWuwpLM6HaW7ltWo1QNyTmHNmDNzEf3pEWw"},
{"content":{"body":"we should normalize larger timeboxes for larger proposals","msgtype":"m.text","org.matrix.msc1767.text":"we should normalize larger timeboxes for larger proposals"},"ts":1663206795363,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v1ddmJA2WZeByGbLA_WA28jzdDq8T70fi3C8AQ7lElU"},
{"content":{"body":"I would be opposed to a timebox extension to discuss things we are not even considering at the moment","msgtype":"m.text","org.matrix.msc1767.text":"I would be opposed to a timebox extension to discuss things we are not even considering at the moment"},"ts":1663206997447,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-g6n0oM_AniIAYgIBDIadocHUB4RVAuxt6fTcQLi9Z4"},
{"content":{"body":"yeah error cause seems weird since you'd need to mutate the other exception. AggregateError seems correct","msgtype":"m.text","org.matrix.msc1767.text":"yeah error cause seems weird since you'd need to mutate the other exception. AggregateError seems correct"},"ts":1663207397430,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qMw8GXt7KAYPtitZ9t7RWwoFXi5LhHCaKF9T9wtU29w"},
{"content":{"body":"love me some AV issues","msgtype":"m.text","org.matrix.msc1767.text":"love me some AV issues"},"ts":1663207485268,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gYwGUzLTpPtHjsFZ3YEdwryUn_SVdEW2mJXURGL2Yjw"},
{"content":{"body":"> <@michaelficarra:matrix.org> I would be opposed to a timebox extension to discuss things we are not even considering at the moment\n\nIMO it is important that we give adequate time to this discussion, and most of that is on the proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-g6n0oM_AniIAYgIBDIadocHUB4RVAuxt6fTcQLi9Z4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I would be opposed to a timebox extension to discuss things we are not even considering at the moment</blockquote></mx-reply>IMO it is important that we give adequate time to this discussion, and most of that is on the proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$-g6n0oM_AniIAYgIBDIadocHUB4RVAuxt6fTcQLi9Z4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@michaelficarra:matrix.org> I would be opposed to a timebox extension to discuss things we are not even considering at the moment\n\nIMO it is important that we give adequate time to this discussion, and most of that is on the proposal","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-g6n0oM_AniIAYgIBDIadocHUB4RVAuxt6fTcQLi9Z4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I would be opposed to a timebox extension to discuss things we are not even considering at the moment</blockquote></mx-reply>IMO it is important that we give adequate time to this discussion, and most of that is on the proposal","mimetype":"text/html"}]},"ts":1663207496938,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QakRvheH_Z4Ddi7_VBTpoMqLso7YB9uTHMnc4hiCdd4"},
{"content":{"body":"(especially since this is for stage advancement, so it should be especially prioritized)","msgtype":"m.text","org.matrix.msc1767.text":"(especially since this is for stage advancement, so it should be especially prioritized)"},"ts":1663207517625,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1DYG-HRFk4t6CxyqpRMKQYJhmwHGzT1o6oxXT4l--KU"},
{"content":{"body":"I don't understand ljharb's comment about concurrent errors--is that explaining why this model does or doesn't make sense?","msgtype":"m.text","org.matrix.msc1767.text":"I don't understand ljharb's comment about concurrent errors--is that explaining why this model does or doesn't make sense?"},"ts":1663207592742,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zJdhAfle_nnTeW8Y73BOVh9XxNN245eyX4l3Rizzbeo"},
{"content":{"body":"also +1 to avoiding processing nested AggregateErrors by default","msgtype":"m.text","org.matrix.msc1767.text":"also +1 to avoiding processing nested AggregateErrors by default"},"ts":1663207626976,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$75guoSrTf-eqVBejme8DBtM7NMLjHHLr4NHxqX8Ln0o"},
{"content":{"body":"it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me.","msgtype":"m.text","org.matrix.msc1767.text":"it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me."},"ts":1663207634090,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KrF4rCrHb1Av4FPW3cHjq7TeLoMuAaru4BG27Z-s6CQ"},
{"content":{"body":"btw I still feel `using [x] = iterable` being valid is quite the footgun. Can someone explain why it is not?","format":"org.matrix.custom.html","formatted_body":"btw I still feel <code>using [x] = iterable</code> being valid is quite the footgun. Can someone explain why it is not?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"btw I still feel `using [x] = iterable` being valid is quite the footgun. Can someone explain why it is not?","mimetype":"text/plain"},{"body":"btw I still feel <code>using [x] = iterable</code> being valid is quite the footgun. Can someone explain why it is not?","mimetype":"text/html"}]},"ts":1663207638193,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rXInpykrLSEf6GRet0n3rYnx2FN11EPJz6ofE80ubvg"},
{"content":{"body":"that will usually throw immediately, no?","msgtype":"m.text","org.matrix.msc1767.text":"that will usually throw immediately, no?"},"ts":1663207655805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7wmOeb9xcOTyrSBAApmQ2mcxIUlTNc8mYPxtuaXWBmE"},
{"content":{"body":"because `using` will not be in scope?","format":"org.matrix.custom.html","formatted_body":"because <code>using</code> will not be in scope?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"because `using` will not be in scope?","mimetype":"text/plain"},{"body":"because <code>using</code> will not be in scope?","mimetype":"text/html"}]},"ts":1663207659641,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z8vx86WABewfNlr4te2SsDkOPvnDyr-axfX2deFdxu4"},
{"content":{"body":" * it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me.","m.new_content":{"body":"it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me.","msgtype":"m.text","org.matrix.msc1767.text":"it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me."},"m.relates_to":{"event_id":"$KrF4rCrHb1Av4FPW3cHjq7TeLoMuAaru4BG27Z-s6CQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it's replying to kevin's statement about using cause instead of AE. kevin claimed something akin to \"AE is for errors that occur at roughly the same time\", and i was adding that i think \"at the same time\" isn't part of the mental model for me."},"ts":1663207662095,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XwcIGk0-vA91xMAbzetxnNkNnfoHaQWU7t-tJY0f0U8"},
{"content":{"body":" * because `using` will not be in scope?","format":"org.matrix.custom.html","formatted_body":" * because <code>using</code> will not be in scope?","m.new_content":{"body":"because `using` will not be in scope?","format":"org.matrix.custom.html","formatted_body":"because <code>using</code> will not be in scope?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"because `using` will not be in scope?","mimetype":"text/plain"},{"body":"because <code>using</code> will not be in scope?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Z8vx86WABewfNlr4te2SsDkOPvnDyr-axfX2deFdxu4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * because `using` will not be in scope?","mimetype":"text/plain"},{"body":" * because <code>using</code> will not be in scope?","mimetype":"text/html"}]},"ts":1663207671636,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XoHH8ItqT_t7cb4W1xiu8t01pCrhlSyYeLonJ2WPlt8"},
{"content":{"body":"🤔 hmm, okay","msgtype":"m.text","org.matrix.msc1767.text":"🤔 hmm, okay"},"ts":1663207683775,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bPkgDLZn2bNX_rPKNDN5wDmKivYAdaVoKK7cNMpQBno"},
{"content":{"body":"`Array.prototype[Symbol.dispose] = () => {}`","format":"org.matrix.custom.html","formatted_body":"<code>Array.prototype[Symbol.dispose] = () =&gt; {}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Array.prototype[Symbol.dispose] = () => {}`","mimetype":"text/plain"},{"body":"<code>Array.prototype[Symbol.dispose] = () =&gt; {}</code>","mimetype":"text/html"}]},"ts":1663207717327,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$F3UrjHxH7vDm7Ae1BuAwW-LPz9PHjoBKW6BqQ--C9Mg"},
{"content":{"body":"I guess a linter would help catch the unbound reference as well","msgtype":"m.text","org.matrix.msc1767.text":"I guess a linter would help catch the unbound reference as well"},"ts":1663207728961,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4VdoQYORjGZ-658uyIuKA2mK0O03w79wRkWN_AMj86c"},
{"content":{"body":"Don't we have plenty of experience in other GC'd languages which do something like `using` but don't introduce such a new form of TDZ?","format":"org.matrix.custom.html","formatted_body":"Don't we have plenty of experience in other GC'd languages which do something like <code>using</code> but don't introduce such a new form of TDZ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Don't we have plenty of experience in other GC'd languages which do something like `using` but don't introduce such a new form of TDZ?","mimetype":"text/plain"},{"body":"Don't we have plenty of experience in other GC'd languages which do something like <code>using</code> but don't introduce such a new form of TDZ?","mimetype":"text/html"}]},"ts":1663207865818,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4avHxYHctQXfw6VkLY13TwWc7FHN0UQgnZxhqzMtqrE"},
{"content":{"body":"those languages don't create closures nearly as often","msgtype":"m.text","org.matrix.msc1767.text":"those languages don't create closures nearly as often"},"ts":1663207876231,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TAF6GtGWgJ4PD3VJYtFRHbORNSNClhKaVYxZMXeCcqA"},
{"content":{"body":"what is the new tdz, i missed it","msgtype":"m.text","org.matrix.msc1767.text":"what is the new tdz, i missed it"},"ts":1663207914730,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Lv0VUUk__9jQanuWhHipH8EPP-3Sl-ORfw8FWSUJuJw"},
{"content":{"body":"snek: scroll up, search for TDZ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: scroll up, search for TDZ","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"snek: scroll up, search for TDZ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: scroll up, search for TDZ","mimetype":"text/html"}]},"ts":1663207952120,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qB0ODSIlGTmjUWAx0gsFynP2gULYSu29Ow-gpb5fg3w"},
{"content":{"body":"> <@bakkot:matrix.org> those languages don't create closures nearly as often\n\nhuh, maybe we should go through this case-by-case","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TAF6GtGWgJ4PD3VJYtFRHbORNSNClhKaVYxZMXeCcqA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>those languages don&#39;t create closures nearly as often</blockquote></mx-reply>huh, maybe we should go through this case-by-case","m.relates_to":{"m.in_reply_to":{"event_id":"$TAF6GtGWgJ4PD3VJYtFRHbORNSNClhKaVYxZMXeCcqA"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> those languages don't create closures nearly as often\n\nhuh, maybe we should go through this case-by-case","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TAF6GtGWgJ4PD3VJYtFRHbORNSNClhKaVYxZMXeCcqA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>those languages don&#39;t create closures nearly as often</blockquote></mx-reply>huh, maybe we should go through this case-by-case","mimetype":"text/html"}]},"ts":1663207956455,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0Qg4Ph_UCFrNiepvczcnvxVplJzy-NLybCjEm0pTg4M"},
{"content":{"body":"> <@devsnek:matrix.org> what is the new tdz, i missed it\n\nit's that the `using` binding should *enter* a TDZ when the scope ends","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Lv0VUUk__9jQanuWhHipH8EPP-3Sl-ORfw8FWSUJuJw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>what is the new tdz, i missed it</blockquote></mx-reply>it's that the <code>using</code> binding should <em>enter</em> a TDZ when the scope ends","m.relates_to":{"m.in_reply_to":{"event_id":"$Lv0VUUk__9jQanuWhHipH8EPP-3Sl-ORfw8FWSUJuJw"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@devsnek:matrix.org> what is the new tdz, i missed it\n\nit's that the `using` binding should *enter* a TDZ when the scope ends","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Lv0VUUk__9jQanuWhHipH8EPP-3Sl-ORfw8FWSUJuJw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>what is the new tdz, i missed it</blockquote></mx-reply>it's that the <code>using</code> binding should <em>enter</em> a TDZ when the scope ends","mimetype":"text/html"}]},"ts":1663207970722,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Q_Aivgla1dMdUtEQ2QZrrHfK-s5JZAnOlFxqV6Hov5I"},
{"content":{"body":"like after the block executes it sets the binding to ~uninitialized~?","msgtype":"m.text","org.matrix.msc1767.text":"like after the block executes it sets the binding to ~uninitialized~?"},"ts":1663207999435,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$VGx8oitsu-UV43CARaO_9YXiWIyJ64ErDlE858F1X7c"},
{"content":{"body":"snek: current slide","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: current slide","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"snek: current slide","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: current slide","mimetype":"text/html"}]},"ts":1663208002853,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VIYjE1NuavyRhnwuyLgnonCMqeozA7XGOTQTC-ack9E"},
{"content":{"body":"i don't see slides","msgtype":"m.text","org.matrix.msc1767.text":"i don't see slides"},"ts":1663208007559,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$2MsKXS3XzGorOdfi_enY62-Uvic7Sn1EHuig68Tfqjs"},
{"content":{"body":"i wlll reload","msgtype":"m.text","org.matrix.msc1767.text":"i wlll reload"},"ts":1663208019574,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QYAOtI5WOfH6wvb8OBc05QtfrqDY0YbSo7WtXyxwOes"},
{"content":{"body":"ok i see","msgtype":"m.text","org.matrix.msc1767.text":"ok i see"},"ts":1663208037229,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$5wMgzgdTUvFrmDmlQWdcyiDcB8mtQEN2faCSkH5T18w"},
{"content":{"body":"console.group()/console.groupEnd()?","msgtype":"m.text","org.matrix.msc1767.text":"console.group()/console.groupEnd()?"},"ts":1663208047314,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$n01dFj8Ss_Ei2XcjEtlzqsNuxQgH7pKO487zWTYn40Q"},
{"content":{"body":"it's a fair point that it's weird to \"dispose\" of something and have it still be around - disposal implies chucking it into the trash forever","msgtype":"m.text","org.matrix.msc1767.text":"it's a fair point that it's weird to \"dispose\" of something and have it still be around - disposal implies chucking it into the trash forever"},"ts":1663208067280,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OCoIlZ8r7xrK1NOLlJqhegyyzKhu8D_sRvG7WDDps5k"},
{"content":{"body":"to be fair, the points are the slide are being made about the object reference, not the binding","msgtype":"m.text","org.matrix.msc1767.text":"to be fair, the points are the slide are being made about the object reference, not the binding"},"ts":1663208084300,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JUQFbT_VQaT1LA3slLLTukqFh_lc4SoRn8cyJ-lwhv4"},
{"content":{"body":"I agree with shu here; this isn't about freeing the memory","format":"org.matrix.custom.html","formatted_body":"I agree with <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> here; this isn't about freeing the memory","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I agree with shu here; this isn't about freeing the memory","mimetype":"text/plain"},{"body":"I agree with <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> here; this isn't about freeing the memory","mimetype":"text/html"}]},"ts":1663208085436,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Bg44sbj4oZMuzdGXCKoNm0jBF26EO5KDNyTmVyLPYCU"},
{"content":{"body":"This isn't C","msgtype":"m.text"},"ts":1663208095822,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$kY3AchNw1ngzBx8jzPWgT67VHIeaiFM5mqaapVTnd-U"},
{"content":{"body":" * to be fair, the points on the slide are being made about the object reference, not the binding","m.new_content":{"body":"to be fair, the points on the slide are being made about the object reference, not the binding","msgtype":"m.text","org.matrix.msc1767.text":"to be fair, the points on the slide are being made about the object reference, not the binding"},"m.relates_to":{"event_id":"$JUQFbT_VQaT1LA3slLLTukqFh_lc4SoRn8cyJ-lwhv4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * to be fair, the points on the slide are being made about the object reference, not the binding"},"ts":1663208106401,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1ZWv8JNdMSDjwvzIgDHrnNexZzFpDeQG900NLXHbaX0"},
{"content":{"body":"This is about the release of resources associated with an object","msgtype":"m.text"},"ts":1663208111430,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$O7p8BwhOBwmmeZuvd0HojZ_yZiKEUumRjbcjjs-b3ic"},
{"content":{"body":"this would be valid right? `using x = y(); let xEscape = x; setTimeout(() => consume(xEscape), 100)`","format":"org.matrix.custom.html","formatted_body":"this would be valid right? <code>using x = y(); let xEscape = x; setTimeout(() =&gt; consume(xEscape), 100)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"this would be valid right? `using x = y(); let xEscape = x; setTimeout(() => consume(xEscape), 100)`","mimetype":"text/plain"},{"body":"this would be valid right? <code>using x = y(); let xEscape = x; setTimeout(() =&gt; consume(xEscape), 100)</code>","mimetype":"text/html"}]},"ts":1663208117996,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$VPN0LX-R5h6Td14rx6ueRgunsLgce3UD0--8MTp7GvE"},
{"content":{"body":"What if I need disableable is a key in a map?","msgtype":"m.text","org.matrix.msc1767.text":"What if I need disableable is a key in a map?"},"ts":1663208118076,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$opKvSJusSea8X-GuVHhkpvD2Lqz90ssmeClzIJmnCJY"},
{"content":{"body":"I may need to clean the entry at a later point.","msgtype":"m.text","org.matrix.msc1767.text":"I may need to clean the entry at a later point."},"ts":1663208126824,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$mFe1eyVEwm-LHT7MCj99kg1tmTjSfWS-j2V4c0lRfJM"},
{"content":{"body":"snek: that is the point about introducing a const alias on the slide","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: that is the point about introducing a const alias on the slide","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"snek: that is the point about introducing a const alias on the slide","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: that is the point about introducing a const alias on the slide","mimetype":"text/html"}]},"ts":1663208145339,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hmNAMUGPICCP-LLqJpQC-k9sucAwoAqHAA5QpFFin8A"},
{"content":{"body":"Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","mimetype":"text/html"}]},"ts":1663208152213,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BgaKGdppu0eCtNU4ZhGeXxxp8ZjWFEGctkDgO8E3B7s"},
{"content":{"body":"ah i see yeah","msgtype":"m.text","org.matrix.msc1767.text":"ah i see yeah"},"ts":1663208155326,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$uWZNDHECdCZihzxUytCv06eLlm2fLP85gXiwb0FBXLs"},
{"content":{"body":" * Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","m.new_content":{"body":"Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$BgaKGdppu0eCtNU4ZhGeXxxp8ZjWFEGctkDgO8E3B7s","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Justin Ridgewell: would `const x = <expr>; using x;` work? or would you need like `using y = x;` and just not use the y","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: would <code>const x = &lt;expr&gt;; using x;</code> work? or would you need like <code>using y = x;</code> and just not use the y","mimetype":"text/html"}]},"ts":1663208183090,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gdJqaiaYzmGPfjmSX2ZtJ1vcu0zK48cnjuta66Jch-E"},
{"content":{"body":"IMO the burden of proof for use cases is on the other side; bakkot should explain what important errors are prevented by this TDZ (since it's a lot of extra work at multiple levels to provide this)","msgtype":"m.text","org.matrix.msc1767.text":"IMO the burden of proof for use cases is on the other side; bakkot should explain what important errors are prevented by this TDZ (since it's a lot of extra work at multiple levels to provide this)"},"ts":1663208206798,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7kRDjF4amGYQkeh0DikZqaxHAsKGXotAhmD8_Vh-rSc"},
{"content":{"body":"attempting to use a file handle after closing it","msgtype":"m.text","org.matrix.msc1767.text":"attempting to use a file handle after closing it"},"ts":1663208221564,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QU7fVOXsJFKAKyb9zg-JLROzM1051km1_-VosS5Ff-Y"},
{"content":{"body":"ljharb: just change the const to using, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: just change the const to using, right?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: just change the const to using, right?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: just change the const to using, right?","mimetype":"text/html"}]},"ts":1663208222094,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Q1UkefzpOLKtYh3ZXnRVkvBHEHqncAEA7mvYisyjlrU"},
{"content":{"body":"or literally anything else","msgtype":"m.text","org.matrix.msc1767.text":"or literally anything else"},"ts":1663208225293,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$R2wIKgyiLimFYEoPcWZ3QgimEVk_cnlobKArsN4E_SA"},
{"content":{"body":"well, IMO this error should be given to you by the file implementation","msgtype":"m.text","org.matrix.msc1767.text":"well, IMO this error should be given to you by the file implementation"},"ts":1663208255397,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o8gyKiWBc5rpbAFFOHrWWQcbsP2NmG_uJUTVY1JmqKM"},
{"content":{"body":"(as we've been discussing)","msgtype":"m.text","org.matrix.msc1767.text":"(as we've been discussing)"},"ts":1663208262291,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$eMXiWSNJpxKeCrWX2lZWhttakP7F3I1XxZyvJ_0M2ws"},
{"content":{"body":"i mean like if you need to use it as a key in the map, you'd just save it in a separate variable","m.relates_to":{"event_id":"$Q1UkefzpOLKtYh3ZXnRVkvBHEHqncAEA7mvYisyjlrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$Q1UkefzpOLKtYh3ZXnRVkvBHEHqncAEA7mvYisyjlrU"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"i mean like if you need to use it as a key in the map, you'd just save it in a separate variable"},"ts":1663208264425,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bD3u03Qoed7z79Q34f6rmSzZb4epgkwTmEXMz9CSXgs"},
{"content":{"body":"so I'm very confused about what I've been missing. Maybe there could be a utility class bulit-in which implements this \"casual state machine\" as Kris put it","msgtype":"m.text","org.matrix.msc1767.text":"so I'm very confused about what I've been missing. Maybe there could be a utility class bulit-in which implements this \"casual state machine\" as Kris put it"},"ts":1663208286707,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TqVp8pyzTz7y2Qm5iNZOiRg0ILO-HqihtMjJ21UC3Kc"},
{"content":{"body":"ljharb: then yes, that or the other way around `using x = <expr>; const y = x;`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: then yes, that or the other way around <code>using x = &lt;expr&gt;; const y = x;</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: then yes, that or the other way around `using x = <expr>; const y = x;`","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: then yes, that or the other way around <code>using x = &lt;expr&gt;; const y = x;</code>","mimetype":"text/html"}]},"ts":1663208323941,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$yE35Hdhpdtl8mgRNAVeNCmGIf_tk36iKeKMwXzFbnuM"},
{"content":{"body":"i think i am convinced that we should do TDZ","msgtype":"m.text","org.matrix.msc1767.text":"i think i am convinced that we should do TDZ"},"ts":1663208365050,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QYnHvZN-AAOUckanQvsLdqozi1LDmlIUzE4ix8lPSUw"}
]