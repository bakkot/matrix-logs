[
{"content":{"body":"> <@aclaymore:matrix.org> For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.\n\nI will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.</blockquote></mx-reply>I will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","m.relates_to":{"m.in_reply_to":{"event_id":"$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@aclaymore:matrix.org> For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.\n\nI will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kCN0T0gZ8WaPsB_pFmv1zYIOkI1Ubhn9g3QuyljQzLI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>For me it’s also that the bot is slower than the stenographer. For me to be of any use taking notes I have to add a 5-10 second delay to my audio. Which further means I can’t interact with what is happening.</blockquote></mx-reply>I will tweak the bot a little for this evening to make it more eager at the cost of being a little less accurate, which be a good tradeoff; we'll have to see.","mimetype":"text/html"}]},"ts":1663202911682,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$waXXA7jV7UYKej7Eg9ZxD_J8Ol9ConZfsE6nCubOcF8"},
{"content":{"body":"no host again?","msgtype":"m.text","org.matrix.msc1767.text":"no host again?"},"ts":1663203430086,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aCyduP9j4YnkbC8NeWhQuRiq2AOJ0XIYwnPOHcN82bA"},
{"content":{"body":"Appears not","msgtype":"m.text","org.matrix.msc1767.text":"Appears not"},"ts":1663203529476,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$uEMWfgMfTG_lG4xzZNrcfwix-igxjFd3RePy7Qu-eXw"},
{"content":{"body":"I can start it,give me a few seconds","msgtype":"m.text"},"ts":1663203555375,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$e_Ssb53832FfaNI8VPP2VusuUolnH0Cu1c0bFRn7x_w"},
{"content":{"body":"I don't think it asked for the code","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it asked for the code"},"ts":1663203653865,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$m_-875Qzq5U2nGtsgkZh5nzX4vKl4zJzjhWUs6OPB-I"},
{"content":{"body":" * I don't think it asked for the code","m.new_content":{"body":"I don't think it asked for the code","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it asked for the code"},"m.relates_to":{"event_id":"$m_-875Qzq5U2nGtsgkZh5nzX4vKl4zJzjhWUs6OPB-I","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I don't think it asked for the code"},"ts":1663203665814,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Jf9HDkZ9i5flE3ccyvjNMAWs3G_eG_nyxa11xd7ctQM"},
{"content":{"body":"You may need to refresh now to get in","msgtype":"m.text"},"ts":1663203672237,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vYJo-6oNN7h-IwvaYyFmp9seqiB4wTk5E0CoKlbtaHE"},
{"content":{"body":"The meeting is started","msgtype":"m.text"},"ts":1663203677905,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Uqf9jRFgoGEqF5Gm3Hu_YoykB90VUZX0dBCHEvY6Zj8"},
{"content":{"body":"one second","msgtype":"m.text","org.matrix.msc1767.text":"one second"},"ts":1663204395814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Ypy3AvvjGNPGcWw63aDFxe2kAIV3uPOtWvupp6LbnVU"},
{"content":{"body":"audio issue, will be sorted in a moment","msgtype":"m.text","org.matrix.msc1767.text":"audio issue, will be sorted in a moment"},"ts":1663204426521,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$oDuO90DxILrS524LwWStfM_zNMDKNjTSVlVqtWVXB5Q"},
{"content":{"body":"Michael Ficarra: yes to your queue question, afaict","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: yes to your queue question, afaict","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Michael Ficarra: yes to your queue question, afaict","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: yes to your queue question, afaict","mimetype":"text/html"}]},"ts":1663205301292,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oQPLjvamyQbbVNcSLqFwVcLXTuyGeqhFSk3RYTNLvh4"},
{"content":{"body":"it is basically a const with some extra semantics","msgtype":"m.text","org.matrix.msc1767.text":"it is basically a const with some extra semantics"},"ts":1663205309652,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qK4q92AWy0ydCqFiDVGb1hg6m26eqwAo23HIoqiveZI"},
{"content":{"body":"I figured, but want to confirm","msgtype":"m.text","org.matrix.msc1767.text":"I figured, but want to confirm"},"ts":1663205320502,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KPq10wf1_5UBLeXU_Zusxuo7toSnAniWFOZA6DNNmcU"},
{"content":{"body":"const bindings can be closed over and don't ever *become* TDZ once they are bound, this is kind of the opposite of consts","format":"org.matrix.custom.html","formatted_body":"const bindings can be closed over and don't ever <em>become</em> TDZ once they are bound, this is kind of the opposite of consts","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"const bindings can be closed over and don't ever *become* TDZ once they are bound, this is kind of the opposite of consts","mimetype":"text/plain"},{"body":"const bindings can be closed over and don't ever <em>become</em> TDZ once they are bound, this is kind of the opposite of consts","mimetype":"text/html"}]},"ts":1663205350082,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Vc3cGbj8kCHGHRKwnIKk1700pK9YG3NmYwtwEZRZ6CM"},
{"content":{"body":"wait what","msgtype":"m.text","org.matrix.msc1767.text":"wait what"},"ts":1663205380994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cZl7s9UFhFyfUxDi2lfN5QD3xkUfdoZyx4n7dH3l4PA"},
{"content":{"body":"how can `using` _become_ TDZ?","format":"org.matrix.custom.html","formatted_body":"how can <code>using</code> <em>become</em> TDZ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"how can `using` _become_ TDZ?","mimetype":"text/plain"},{"body":"how can <code>using</code> <em>become</em> TDZ?","mimetype":"text/html"}]},"ts":1663205387832,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZjwEuRAqCM0h9Wyl1Ds1PFjIp653JZMT8z0gOGiwPVs"},
{"content":{"body":"after disposal I would assume that's what happens","msgtype":"m.text","org.matrix.msc1767.text":"after disposal I would assume that's what happens"},"ts":1663205416877,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Tasyqst4wBkRZi6t0M3inzhn2rHWqKRqF6qblqnRTqI"},
{"content":{"body":"what that would be crazy","msgtype":"m.text","org.matrix.msc1767.text":"what that would be crazy"},"ts":1663205428041,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$d2InehwGjwwalqXQvUaLdRB_ZWdAB19Q9QtNkHL99os"},
{"content":{"body":"does it just keep its current value?","msgtype":"m.text","org.matrix.msc1767.text":"does it just keep its current value?"},"ts":1663205431334,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qxPp2hROBm3dNZDwCRFQP4w1AUH0CeplV9zSwAYcMks"},
{"content":{"body":"i hope that doesn't happen, let me read spec draft again","msgtype":"m.text","org.matrix.msc1767.text":"i hope that doesn't happen, let me read spec draft again"},"ts":1663205433745,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hZTY6gf4I5ldC2iOS2LxvXqValFgcySwdTNJH8KBLBM"},
{"content":{"body":"it just calls @@dispose i thought","msgtype":"m.text","org.matrix.msc1767.text":"it just calls @@dispose i thought"},"ts":1663205437919,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wyUonAHTQ90yRC1sBZQpOdvPX62ywF_OBbi4t1xCvNI"},
{"content":{"body":"it doesn't do any binding magic","msgtype":"m.text","org.matrix.msc1767.text":"it doesn't do any binding magic"},"ts":1663205440868,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J6PtzWgs_D2LE95EgTG9CM4GxuaoJMSrLhjdMh1G-Ww"},
{"content":{"body":"it's probably more useful to developers to TDZ the binding","msgtype":"m.text","org.matrix.msc1767.text":"it's probably more useful to developers to TDZ the binding"},"ts":1663205480333,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Sg45x4hww2I3i0TWSb-7tgJ4t4-lBystSlMNRuvevCU"},
{"content":{"body":"doesn't `let` have this same syntactic quirk?","format":"org.matrix.custom.html","formatted_body":"doesn't <code>let</code> have this same syntactic quirk?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"doesn't `let` have this same syntactic quirk?","mimetype":"text/plain"},{"body":"doesn't <code>let</code> have this same syntactic quirk?","mimetype":"text/html"}]},"ts":1663205539682,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qyOdTVDVqiLe-wN4V0ft_e786RK1h6eCTgBoxWhagak"},
{"content":{"body":"i am strongly opposed uninitializing the binding after disposing","msgtype":"m.text","org.matrix.msc1767.text":"i am strongly opposed uninitializing the binding after disposing"},"ts":1663205545116,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3ZBroKoLoLJObGTE_C2nCaet6hDdxLeozeOmeAd3mv4"},
{"content":{"body":"i'm also pretty sure that's not what the current proposal does","msgtype":"m.text","org.matrix.msc1767.text":"i'm also pretty sure that's not what the current proposal does"},"ts":1663205563877,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KpG8RIb_IsZadtaZCso354zVWqsN3CSby4-bxfu9GDI"},
{"content":{"body":"this would be the first time we would move *to* a TDZ","format":"org.matrix.custom.html","formatted_body":"this would be the first time we would move <em>to</em> a TDZ","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"this would be the first time we would move *to* a TDZ","mimetype":"text/plain"},{"body":"this would be the first time we would move <em>to</em> a TDZ","mimetype":"text/html"}]},"ts":1663205565608,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$H91i--WzfrSl1s0i5kV-jyEFuEl0cE0uNvnUv5VD2B4"},
{"content":{"body":"we're still a memory-safe language so I don't really see why this is an important thing to do","msgtype":"m.text","org.matrix.msc1767.text":"we're still a memory-safe language so I don't really see why this is an important thing to do"},"ts":1663205578665,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1yHFLLMyup__lG0R12qJbf0QZRaGcLl8Z_Zfg33UwAw"},
{"content":{"body":"it would just discourage accidental use of something that's been disposed","msgtype":"m.text","org.matrix.msc1767.text":"it would just discourage accidental use of something that's been disposed"},"ts":1663205600272,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mY9svo1YX43YCHS92XPhmq73lBDJhTL_uKlvBDLoDrQ"},
{"content":{"body":"it would be easier to identify bugs","msgtype":"m.text","org.matrix.msc1767.text":"it would be easier to identify bugs"},"ts":1663205606588,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AKWuRrzvO-S7EprfeXL5gsKZMgNrCW0sZucqeTBlurU"},
{"content":{"body":"I think it's not unreasoable to move it to TDZ, it would prevent you from using a variable which is already meant to not be used anymore","msgtype":"m.text","org.matrix.msc1767.text":"I think it's not unreasoable to move it to TDZ, it would prevent you from using a variable which is already meant to not be used anymore"},"ts":1663205612896,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$9HyuXTarGv7vQkAPvLdpO-NCX7gwzkmPl-7GFLbwOyM"},
{"content":{"body":"it would complicate what little more hope we have of optimizing away TDZ","msgtype":"m.text","org.matrix.msc1767.text":"it would complicate what little more hope we have of optimizing away TDZ"},"ts":1663205625779,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$imLC6_Mjn8APMiaFcfVCtRTbfESopq9-7_L2HrGm5YY"},
{"content":{"body":"unless the disposal protocol is meant to be used on things that remain useful after disposal?","msgtype":"m.text","org.matrix.msc1767.text":"unless the disposal protocol is meant to be used on things that remain useful after disposal?"},"ts":1663205634925,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dgb7hU7Pfb-Op-k4x5-_C5JRr8VMv4Y_TXzfVesOh6c"},
{"content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"ts":1663205648463,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0"},
{"content":{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","format":"org.matrix.custom.html","formatted_body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","m.new_content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };","mimetype":"text/plain"},{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };","mimetype":"text/html"}]},"ts":1663205662375,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7MPHJO6JLic5xEry2nqTcl5JdySgtH3Fz4xWbKfjp_Q"},
{"content":{"body":"the bar for messing with bindings should be very high","msgtype":"m.text","org.matrix.msc1767.text":"the bar for messing with bindings should be very high"},"ts":1663205664855,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$11jwgGm04TasweFmA0c-BW1t_egOXGzA7wFdslWOW8A"},
{"content":{"body":"> <@littledan:matrix.org> the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };\n\nIMO this case is just not worth our design energy","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };</blockquote></mx-reply>IMO this case is just not worth our design energy","m.relates_to":{"m.in_reply_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding` \\*/ } };\n\nIMO this case is just not worth our design energy","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding</code> */ } };</blockquote></mx-reply>IMO this case is just not worth our design energy","mimetype":"text/html"}]},"ts":1663205675979,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5qrgsUqUI8XDXVwym9lkoVusx87AkWOMR_K2qkxstps"},
{"content":{"body":"littledan: no? a closure could escape","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: no? a closure could escape","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"littledan: no? a closure could escape","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: no? a closure could escape","mimetype":"text/html"}]},"ts":1663205676074,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9AsscsswlewWWmS19LC8ZC656bfWcAIf1pXBl5iDauA"},
{"content":{"body":"oh, oops","msgtype":"m.text","org.matrix.msc1767.text":"oh, oops"},"ts":1663205690470,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UXDHXx3abIUzZ-AIn-4yf9PIdnPNDeF5EjafI7eN6GQ"},
{"content":{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","m.new_content":{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","format":"org.matrix.custom.html","formatted_body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":"the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6Hn2ZGvbNk4qOVjoLpZ-NM4pI8UFWRnnXtiRORE1Gs0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did `using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };`","mimetype":"text/plain"},{"body":" * the accidental use case would need to be from someone's disposal callback, so it'd only come up if you did <code>using x = {[Symbol.dispose]() { /* variable which is closed over that is also a using binding \\*/ } };</code>","mimetype":"text/html"}]},"ts":1663205699620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$M5doAzfNNS34thiTkVAxNVY9uexQaT_QNbmIy0tCV8g"},
{"content":{"body":"```js\n{\n  using db = getConnection()\n  setTimeout(() => db.query(\"...\"), 100);\n} // disposes the connection  \n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">{\n  using db = getConnection()\n  setTimeout(() =&gt; db.query(&quot;...&quot;), 100);\n} // disposes the connection  \n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\n{\n  using db = getConnection()\n  setTimeout(() => db.query(\"...\"), 100);\n} // disposes the connection  \n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">{\n  using db = getConnection()\n  setTimeout(() =&gt; db.query(&quot;...&quot;), 100);\n} // disposes the connection  \n</code></pre>\n","mimetype":"text/html"}]},"ts":1663205716305,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$OBJddq7BM0Ndyd8cJmcXv2ZAFaODUGwQvzgD56pa0vE"},
{"content":{"body":"why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":"why <em>do</em> we allow const there?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"why *do* we allow const there?","mimetype":"text/plain"},{"body":"why <em>do</em> we allow const there?","mimetype":"text/html"}]},"ts":1663205762086,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pLmUYQiJ81yPwFOPHvS3M64vBNVn44hrx7MQzDMe9FM"},
{"content":{"body":" * why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":" * why <em>do</em> we allow const there?","m.new_content":{"body":"why *do* we allow const there?","format":"org.matrix.custom.html","formatted_body":"why <em>do</em> we allow const there?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"why *do* we allow const there?","mimetype":"text/plain"},{"body":"why <em>do</em> we allow const there?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$pLmUYQiJ81yPwFOPHvS3M64vBNVn44hrx7MQzDMe9FM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * why *do* we allow const there?","mimetype":"text/plain"},{"body":" * why <em>do</em> we allow const there?","mimetype":"text/html"}]},"ts":1663205767040,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oW6P8AFWOSAs4lqHEnP2sXSi9cceu0anzCV15opwmz8"},
{"content":{"body":"it kind of seems like something that'd be web compatible to disallow, since it'd be unlikely someone ships that code","msgtype":"m.text","org.matrix.msc1767.text":"it kind of seems like something that'd be web compatible to disallow, since it'd be unlikely someone ships that code"},"ts":1663205781185,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TD6aIj98hSD0Cj1j-ksLKy5jYaGVjChBpDrpJ-hi_Ro"},
{"content":{"body":"moving it back into tdz is super weird","msgtype":"m.text","org.matrix.msc1767.text":"moving it back into tdz is super weird"},"ts":1663205785410,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8"},
{"content":{"body":"> <@shuyuguo:matrix.org> moving it back into tdz is super weird\n\npdz, \"permanent dead zone\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>moving it back into tdz is super weird</blockquote></mx-reply>pdz, &quot;permanent dead zone&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> moving it back into tdz is super weird\n\npdz, \"permanent dead zone\"","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S3MOn9CmiWyot6mlCG8f849bAjC1_KuHxAPOKDj-tA8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>moving it back into tdz is super weird</blockquote></mx-reply>pdz, &quot;permanent dead zone&quot;","mimetype":"text/html"}]},"ts":1663205808178,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fBRzuHOlDIwwTPNzQrtqSjLVf7-UxsK4tXN5Ed5Vq6Y"},
{"content":{"body":"I guess implementers of the disposal protocol need to handle `use-after-dispose` anyway; moving to TDZ could help if it removed that need for them but it wouldn't","format":"org.matrix.custom.html","formatted_body":"I guess implementers of the disposal protocol need to handle <code>use-after-dispose</code> anyway; moving to TDZ could help if it removed that need for them but it wouldn't","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I guess implementers of the disposal protocol need to handle `use-after-dispose` anyway; moving to TDZ could help if it removed that need for them but it wouldn't","mimetype":"text/plain"},{"body":"I guess implementers of the disposal protocol need to handle <code>use-after-dispose</code> anyway; moving to TDZ could help if it removed that need for them but it wouldn't","mimetype":"text/html"}]},"ts":1663205833947,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vyouMHkR1lqM_Sb171f54AzR1WG8QIvr7unIojYQ7og"},
{"content":{"body":"Uhm right, it wouldn't because the disposable value can still escape even if the binding doesn't","msgtype":"m.text","org.matrix.msc1767.text":"Uhm right, it wouldn't because the disposable value can still escape even if the binding doesn't"},"ts":1663205872111,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wassN3y9Sl9vrUBhVB1t-uKOXb_5YclL9E8Ub7s0b7c"},
{"content":{"body":"You just have to reassign it to a variable","msgtype":"m.text","org.matrix.msc1767.text":"You just have to reassign it to a variable"},"ts":1663205880376,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$y8V4K71Uy5DnmSO1Mr38o7MZVvjZ0gN9ZCjgUvKCT4s"},
{"content":{"body":"poison pill the value 👿","msgtype":"m.text","org.matrix.msc1767.text":"poison pill the value 👿"},"ts":1663205930074,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9RkxS5RnbHzXIC1FnWB0JL-dFxFYz6dCHRf-JeiN2Mk"},
{"content":{"body":"who? what?","msgtype":"m.text","org.matrix.msc1767.text":"who? what?"},"ts":1663205966792,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZfTliSD_kiVqrorKvYqUEY1CfPOKD-JmySsuKrh79d4"},
{"content":{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"ts":1663205971855,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uvW02Sh1TLUZB5AS2xt37JnQDmYva35TmrFyMGqUkNE"},
{"content":{"body":" * you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":" * you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","m.new_content":{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","format":"org.matrix.custom.html","formatted_body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":"you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$uvW02Sh1TLUZB5AS2xt37JnQDmYva35TmrFyMGqUkNE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * you can only `using` a revocable proxy, and disposal revokes it :-p","mimetype":"text/plain"},{"body":" * you can only <code>using</code> a revocable proxy, and disposal revokes it :-p","mimetype":"text/html"}]},"ts":1663205975746,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B-DYdl7br9oMPj0Pf7U0tfykGYMEM2WRianlimCTQh0"},
{"content":{"body":"michael it sounds like you want a language that doesn't start with java and end with script","msgtype":"m.text","org.matrix.msc1767.text":"michael it sounds like you want a language that doesn't start with java and end with script"},"ts":1663206039840,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ccT6p6ScWSL7tYorhP_8ImXI_xjTJcVT2GxwfRLsAS4"},
{"content":{"body":"I really want to know whether it is ever reasonable to use a value after disposal","msgtype":"m.text","org.matrix.msc1767.text":"I really want to know whether it is ever reasonable to use a value after disposal"},"ts":1663206077946,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BKRbTz54tSZu8KRdrn9RrgRmaVW3QqUtvWGxUZ9KyhA"},
{"content":{"body":"or if our intent is that that is never appropriate","msgtype":"m.text","org.matrix.msc1767.text":"or if our intent is that that is never appropriate"},"ts":1663206088253,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$elmoomH0xrtmuxu2jgLkrQFTWhQwzNf5m2yTIvn6ThA"},
{"content":{"body":"a file handle could be reopened, or a DB connection?","msgtype":"m.text","org.matrix.msc1767.text":"a file handle could be reopened, or a DB connection?"},"ts":1663206109677,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$o-AvUPSdb_N6hQZUUX0Ra_6DxDnweC1VF0Ai57B8f2I"},
{"content":{"body":"i think it is reasonable","msgtype":"m.text","org.matrix.msc1767.text":"i think it is reasonable"},"ts":1663206110547,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cuMgmv92MWV5WfFtLrv9pvznNYO643yoVmO0WS1MEWY"},
{"content":{"body":"if it is not reasonable, we should do what we can to surface an error when that reuse happens","msgtype":"m.text","org.matrix.msc1767.text":"if it is not reasonable, we should do what we can to surface an error when that reuse happens"},"ts":1663206114926,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UcE_qol16UTn-hc5iF2vH8PZA4vTirxpsm4qx19uTOo"},
{"content":{"body":" * a file handle could be reopened, or a DB connection?","m.new_content":{"body":"a file handle could be reopened, or a DB connection?","msgtype":"m.text","org.matrix.msc1767.text":"a file handle could be reopened, or a DB connection?"},"m.relates_to":{"event_id":"$o-AvUPSdb_N6hQZUUX0Ra_6DxDnweC1VF0Ai57B8f2I","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * a file handle could be reopened, or a DB connection?"},"ts":1663206122548,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lgKfpXyRljntMuSfXuMz7XFsoLPeBoc0qvgRX_c4r6c"},
{"content":{"body":"RAII doesn't always mean \"irrevocably unusable\"","msgtype":"m.text","org.matrix.msc1767.text":"RAII doesn't always mean \"irrevocably unusable\""},"ts":1663206124322,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5ww3SSK4hOTv3SeXA1nIM-3Do4479WaQ03k0ibGsJgo"},
{"content":{"body":"sometimes you just piggyback on RAII scope to do things like locking mutexes","msgtype":"m.text","org.matrix.msc1767.text":"sometimes you just piggyback on RAII scope to do things like locking mutexes"},"ts":1663206133346,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NNrPrrBuzdJygeOu2Ka3tKlXnJSLYH6IDhueUUhnnXI"},
{"content":{"body":"or temporarily unlocking","msgtype":"m.text","org.matrix.msc1767.text":"or temporarily unlocking"},"ts":1663206136092,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1OdOJTdQAGSYGafNZnsC2G6C2HYCV1PxoAfm1VEyy8s"},
{"content":{"body":"I think it's OK that this is the responsibility of the implementer of the disposal protocol","msgtype":"m.text","org.matrix.msc1767.text":"I think it's OK that this is the responsibility of the implementer of the disposal protocol"},"ts":1663206138762,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VBlA8GbqsoF3H6xmwtgvSVL3HSNjvOjqyR74yhx7uQE"},
{"content":{"body":"those values remain usable","msgtype":"m.text","org.matrix.msc1767.text":"those values remain usable"},"ts":1663206140802,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Od_8RHTRb7rjKDUsPdxhP_dUHTfIoCSkNCLvbzc5nBE"},
{"content":{"body":"objects with casual state machines are normal. double return on an iterator, double close, &c","msgtype":"m.text","org.matrix.msc1767.text":"objects with casual state machines are normal. double return on an iterator, double close, &c"},"ts":1663206161074,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$P75raFiwKdbmZoscrjykyaTpBPnyTenJclOtmmnQWgU"},
{"content":{"body":"hey, I must have missed this slide!","msgtype":"m.text","org.matrix.msc1767.text":"hey, I must have missed this slide!"},"ts":1663206171219,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BqIJe9d5RgjatzmQ0ajMbe_uUfxnNLvUt0E0FS0ZnU0"},
{"content":{"body":"hot take: we should take everything in contextlib and explicitly avoid it","msgtype":"m.text","org.matrix.msc1767.text":"hot take: we should take everything in contextlib and explicitly avoid it"},"ts":1663206559191,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$h_sbI9qckWuwpLM6HaW7ltWo1QNyTmHNmDNzEf3pEWw"},
{"content":{"body":"we should normalize larger timeboxes for larger proposals","msgtype":"m.text","org.matrix.msc1767.text":"we should normalize larger timeboxes for larger proposals"},"ts":1663206795363,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v1ddmJA2WZeByGbLA_WA28jzdDq8T70fi3C8AQ7lElU"},
{"content":{"body":"I would be opposed to a timebox extension to discuss things we are not even considering at the moment","msgtype":"m.text","org.matrix.msc1767.text":"I would be opposed to a timebox extension to discuss things we are not even considering at the moment"},"ts":1663206997447,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-g6n0oM_AniIAYgIBDIadocHUB4RVAuxt6fTcQLi9Z4"}
]