[
{"content":{"body":"shu, waldemar: Were you able to review the Async Explicit Resource Management proposal specification text?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>, <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: Were you able to review the Async Explicit Resource Management proposal specification text?","msgtype":"m.text"},"ts":1675176895416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BHocWY8Np73MJjm9aSIFC3j_rQqoffD9GJRBH4jlS30"},
{"content":{"body":"Plenary begins in T-minus 1 minute encounting.","msgtype":"m.text","org.matrix.msc1767.text":"Plenary begins in T-minus 1 minute encounting."},"ts":1675177134301,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ccX8kqnzGUOAMgSkiC_LC1TJC7WI7aMCYtwFfg9bWDw"},
{"content":{"body":"rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec","msgtype":"m.text"},"ts":1675177171595,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"},
{"content":{"body":"> <@shuyuguo:matrix.org> rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec\n\nThe rest of the spec text that isn't `using await` is the same as the sync-version prior to carving `AsyncDisposableStack` and @@asyncDispose out in the November plenary.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec</blockquote></mx-reply>The rest of the spec text that isn't <code>using await</code> is the same as the sync-version prior to carving <code>AsyncDisposableStack</code> and @@asyncDispose out in the November plenary.","m.relates_to":{"m.in_reply_to":{"event_id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"}},"msgtype":"m.text"},"ts":1675177334268,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7seefO6EbkmzSzBEsBZWFftHzPYLldZs_aVo8BnBKjg"},
{"content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"ts":1675177378908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"},
{"content":{"body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","m.new_content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"m.relates_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675177386414,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tWLT2mFjFfl2IWgQ7JZ8714cggyEMLnpOqL14NO0Hh8"},
{"content":{"body":"> <@shuyuguo:matrix.org> were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit\n\nNo. The `~async-dispose~` plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support `AsyncDisposableStack`. The only changes I've made aside from adding the `using await` syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit</blockquote></mx-reply>No. The <code>~async-dispose~</code> plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support <code>AsyncDisposableStack</code>. The only changes I've made aside from adding the <code>using await</code> syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","m.relates_to":{"m.in_reply_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"}},"msgtype":"m.text"},"ts":1675177518306,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4whKwOvKXch6-Dot2QDZ_eWBvkxGqGZMSD7y2SLrwCc"},
{"content":{"body":"cool, that makes sense","msgtype":"m.text"},"ts":1675177542706,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Dr_7vrVnSjwYgCr2fqiMOZoTu0v9Cg_2JHKOTybMS38"},
{"content":{"body":"I should clarify, there were minor changes to address Mathieu Hofman and erights concerns about any evaluated `using await` forcing an explicit `await` even if the initialized value is `null` or `undefined`, but that should be about it.","format":"org.matrix.custom.html","formatted_body":"I should clarify, there were minor changes to address <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> and <a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a> concerns about any evaluated <code>using await</code> forcing an explicit <code>await</code> even if the initialized value is <code>null</code> or <code>undefined</code>, but that should be about it.","msgtype":"m.text"},"ts":1675177604305,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YkjlJn1zDa4RugptM3APZFSvjO3cw-a6DpmnvGD5iUU"},
{"content":{"body":"hmm, it would be nice if `useGrouping` had a string specifier for all options so you could ignore that it also takes undefined/Booleans","format":"org.matrix.custom.html","formatted_body":"hmm, it would be nice if <code>useGrouping</code> had a string specifier for all options so you could ignore that it also takes undefined/Booleans","msgtype":"m.text"},"ts":1675177723654,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$I9gWNCaOhSGsfyA8mBkDZdpPpGu8TCRctz8_q3-Q6SE"},
{"content":{"body":"it doesn't currently have a `\"never\"` option, just `false`","format":"org.matrix.custom.html","formatted_body":"it doesn't currently have a <code>&quot;never&quot;</code> option, just <code>false</code>","msgtype":"m.text"},"ts":1675177745076,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nq6t73d93iflu_Gtg2Th2C_o-bXZ9YDCys21HOfUDHc"},
{"content":{"body":"Is Frank Tang here?  His agenda item is next.","msgtype":"m.text","org.matrix.msc1767.text":"Is Frank Tang here?  His agenda item is next."},"ts":1675178223189,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-HGTy59WsIMIN-4LIFdgtlqQKLoANqGbj-GFBv6kFNE"},
{"content":{"body":"bterlson:  Should TCQ have a \"Comment on topic\" action that implies no further commentary is necessary?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>:  Should TCQ have a &quot;Comment on topic&quot; action that implies no further commentary is necessary?","msgtype":"m.text"},"ts":1675178591615,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},
{"content":{"body":"Maybe action is the wrong term. Maybe \"queue item\"?","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178619670,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},
{"content":{"body":"It's more like a flag on the queue topic I would say (since it could be a reply or a new topic)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178751240,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},
{"content":{"body":"but yeah it could be added","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178765513,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},
{"content":{"body":"we could also just leave those comments here in Matrix and the chairs could read them aloud at their discretion","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179410147,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},
{"content":{"body":"adding \"EOM\" at the end seems like it's been a workable convention","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179441541,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},
{"content":{"body":"what \"optional\" and \"allow\" mean in the example?","msgtype":"m.text"},"ts":1675179506082,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"},
{"content":{"body":"yeah, the status quo is also not bad","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179527071,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nit could mean anything, it's just an example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply>it could mean anything, it's just an example","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179586613,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MM2rrnm80gq1z0Nkl13RIRpXlAMLcKrT0fagbialziM"},
{"content":{"body":"yeah, I just curious how to explain the example","msgtype":"m.text"},"ts":1675179661749,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$A1a6LfXLu74oO3-dKiQp2obD2xsL5IbZyDE8idwNxjY"},
{"content":{"body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments","format":"org.matrix.custom.html","formatted_body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179703690,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},
{"content":{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","m.in_reply_to":{"event_id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","mimetype":"text/html"}]},"ts":1675179733154,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},
{"content":{"body":"I don't understand if downgrade to stage 2 why not unship...","msgtype":"m.text"},"ts":1675179739810,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RG9wmHYCfyBu7ydnb8vv6jUUY7KZ4xwowS5lFOraSRs"},
{"content":{"body":"That's what I was going for rbuckton .  Just a lightweight mechanism to register feedback on the current topic","format":"org.matrix.custom.html","formatted_body":"That's what I was going for <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> .  Just a lightweight mechanism to register feedback on the current topic","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179740499,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},
{"content":{"body":"where you could use some basic emotes like 👍️ 👎️ etc","msgtype":"m.text","org.matrix.msc1767.text":"where you could use some basic emotes like 👍️ 👎️ etc"},"ts":1675179749546,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$vY89W5EkkOsgSc0mAUgj08qaBdU7JlwT_mZZ750nK5Y"},
{"content":{"body":"if we have a 👍️ react, we must also have a 💩","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179795312,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nHE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179830511,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"},
{"content":{"body":"Yeah, that's why I thought free text for it is still important so we don't fall down the emoji reaction rathole","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179840709,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},
{"content":{"body":"Not sure if I'd go as far as adding 👎️, since a negative reaction or concern is better represented as a topic.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179844269,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},
{"content":{"body":"That's a good point","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179900006,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},
{"content":{"body":"Plus we already have an emoji reaction thing that I don't think we've ever actually used correctly.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179910055,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},
{"content":{"body":"Maybe then just \"Support current topic\"","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179917559,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},
{"content":{"body":"> <@anthonybullard:matrix.org> Maybe then just \"Support current topic\"\n\nBasically, yes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">@anthonybullard:matrix.org</a><br>Maybe then just &quot;Support current topic&quot;</blockquote></mx-reply>Basically, yes.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":false,"m.in_reply_to":{"event_id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179946857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},
{"content":{"body":"One problem I can think of is that it goes against our very recent discussion about explicit support","msgtype":"m.text","org.matrix.msc1767.text":"One problem I can think of is that it goes against our very recent discussion about explicit support"},"ts":1675179960639,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$1WSc1eik5WgEuqGwCpvFxmJVgpqvxw5wJIgtN6Ndftc"},
{"content":{"body":"I guess it's still explicit though","msgtype":"m.text","org.matrix.msc1767.text":"I guess it's still explicit though"},"ts":1675179974282,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$k88cgLKPLOU9ysxe2e0KhW_mddqOiqDFrHrYLFwVVAI"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> HE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests\n\nthe example is to import a css module so i don't understand how a css module relate to fs access...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests</blockquote></mx-reply>the example is to import a css module so i don't understand how a css module relate to fs access...","m.relates_to":{"m.in_reply_to":{"event_id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"}},"msgtype":"m.text"},"ts":1675179978193,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ntqftxc6xfmlrEtXGTKRJCFxe3GoKnmnoJrhvYNO8xE"},
{"content":{"body":"Yeah, the example might have been meant to be written with a `.js` extension, or the runtime has special behavior","format":"org.matrix.custom.html","formatted_body":"Yeah, the example might have been meant to be written with a <code>.js</code> extension, or the runtime has special behavior","msgtype":"m.text"},"ts":1675180035361,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$MroF2jB3F5VtKklgGfgCofal93rroNCULO86VVqflZM"},
{"content":{"body":"it's for your imagination :D","msgtype":"m.text"},"ts":1675180050757,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$acvEJiM-HWmdh8B_jzIGJUQsL73wmjlIpY0LWLLOJSA"},
{"content":{"body":"maybe it disallow `@import \"https://....\"` in css? 😅","format":"org.matrix.custom.html","formatted_body":"maybe it disallow <code>@import &quot;https://....&quot;</code> in css? 😅","msgtype":"m.text"},"ts":1675180091629,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$fmS3BVu6j51ltRoVBzY_lmuRHfB8OMNlk96rXFBfM7k"},
{"content":{"body":"btw for folks less involved in this discussion, we have a response here: https://github.com/whatwg/html/issues/7233#issuecomment-1407049226","msgtype":"m.text"},"ts":1675180490730,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SRnvFdQU_o5Ns7NqyDmfzZZrMhTJD9hnEANa9AGGnxM"},
{"content":{"body":"I prefer status quo to adding reacts on the agenda item. I don't want negative reacts, and would rather positive reacts have SOME context.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181169863,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},
{"content":{"body":"\"the proposal is great EOM\" is better than a random thumb up IMO.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181225476,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},
{"content":{"body":"(I agree but could not resist showing agreement by a random thumb up)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181265790,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lhUv0U82PKXcyFhYGJTC1IUf339Ao2ZPHQFq8g9-Jhk"},
{"content":{"body":"shu: If you want to do a temperature check, state the question clearly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: If you want to do a temperature check, state the question clearly","msgtype":"m.text"},"ts":1675181406831,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Pnv2KAB4PEVLQUj4QxwFXX2KlA_5b9go5IHTCt3SDbE"},
{"content":{"body":"yes i will craft a question when we do it","msgtype":"m.text"},"ts":1675181415583,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_LF9Eeaj_j9CLTqVXPHaAhEkenkLBXwOd7sml-D9G7M"},
{"content":{"body":"the chairs have a recommended process for this now","msgtype":"m.text"},"ts":1675181415820,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3QvVIVfvlD7Ou33ZBy_vepw_YrEfm6Q3b0hbgNJczUU"},
{"content":{"body":"but i want to do it after justin's item","msgtype":"m.text"},"ts":1675181422994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hSpu5kGK_1pNAOQOotlHkf7fH_C_6Ejwcfxpe6KBRpM"},
{"content":{"body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of `assert`, add `with` keyword to replace it (i.e., `assert` as an alias to `with`), phase out `assert`/forbid via lint","format":"org.matrix.custom.html","formatted_body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of <code>assert</code>, add <code>with</code> keyword to replace it (i.e., <code>assert</code> as an alias to <code>with</code>), phase out <code>assert</code>/forbid via lint","msgtype":"m.text"},"ts":1675181432100,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zJSpVB94MCRVvNO1WrGz95okyp3IpeLynnr2Wbf6mVA"},
{"content":{"body":"Maybe we can just think of `assert` as a cast with implicit type coercion. (half j/k, half serious)","format":"org.matrix.custom.html","formatted_body":"Maybe we can just think of <code>assert</code> as a cast with implicit type coercion. (half j/k, half serious)","msgtype":"m.text"},"ts":1675181667638,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kki9MQ5GU9NIY0ET9oq7k6m_FjtGE-kY10KAahh_gNU"},
{"content":{"body":"yeah i honestly believe we have shoehorned ourselves into one particular meaning of \"assert\"","msgtype":"m.text"},"ts":1675181692359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FMkON5oi4-UkvinESfU2ZJ2I-tfEnHJJqDhutPs8KSw"},
{"content":{"body":"and are not being flexible","msgtype":"m.text"},"ts":1675181697902,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ABdyEzKHxeMMq5zc7bzHJuHANTtI5KnBx-1s4_fo9pc"}
]