[
{"content":{"body":"shu, waldemar: Were you able to review the Async Explicit Resource Management proposal specification text?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>, <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: Were you able to review the Async Explicit Resource Management proposal specification text?","msgtype":"m.text"},"ts":1675176895416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BHocWY8Np73MJjm9aSIFC3j_rQqoffD9GJRBH4jlS30"},
{"content":{"body":"Plenary begins in T-minus 1 minute encounting.","msgtype":"m.text","org.matrix.msc1767.text":"Plenary begins in T-minus 1 minute encounting."},"ts":1675177134301,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ccX8kqnzGUOAMgSkiC_LC1TJC7WI7aMCYtwFfg9bWDw"},
{"content":{"body":"rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec","msgtype":"m.text"},"ts":1675177171595,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"},
{"content":{"body":"> <@shuyuguo:matrix.org> rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec\n\nThe rest of the spec text that isn't `using await` is the same as the sync-version prior to carving `AsyncDisposableStack` and @@asyncDispose out in the November plenary.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec</blockquote></mx-reply>The rest of the spec text that isn't <code>using await</code> is the same as the sync-version prior to carving <code>AsyncDisposableStack</code> and @@asyncDispose out in the November plenary.","m.relates_to":{"m.in_reply_to":{"event_id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"}},"msgtype":"m.text"},"ts":1675177334268,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7seefO6EbkmzSzBEsBZWFftHzPYLldZs_aVo8BnBKjg"},
{"content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"ts":1675177378908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"},
{"content":{"body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","m.new_content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"m.relates_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675177386414,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tWLT2mFjFfl2IWgQ7JZ8714cggyEMLnpOqL14NO0Hh8"},
{"content":{"body":"> <@shuyuguo:matrix.org> were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit\n\nNo. The `~async-dispose~` plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support `AsyncDisposableStack`. The only changes I've made aside from adding the `using await` syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit</blockquote></mx-reply>No. The <code>~async-dispose~</code> plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support <code>AsyncDisposableStack</code>. The only changes I've made aside from adding the <code>using await</code> syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","m.relates_to":{"m.in_reply_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"}},"msgtype":"m.text"},"ts":1675177518306,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4whKwOvKXch6-Dot2QDZ_eWBvkxGqGZMSD7y2SLrwCc"},
{"content":{"body":"cool, that makes sense","msgtype":"m.text"},"ts":1675177542706,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Dr_7vrVnSjwYgCr2fqiMOZoTu0v9Cg_2JHKOTybMS38"},
{"content":{"body":"I should clarify, there were minor changes to address Mathieu Hofman and erights concerns about any evaluated `using await` forcing an explicit `await` even if the initialized value is `null` or `undefined`, but that should be about it.","format":"org.matrix.custom.html","formatted_body":"I should clarify, there were minor changes to address <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> and <a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a> concerns about any evaluated <code>using await</code> forcing an explicit <code>await</code> even if the initialized value is <code>null</code> or <code>undefined</code>, but that should be about it.","msgtype":"m.text"},"ts":1675177604305,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YkjlJn1zDa4RugptM3APZFSvjO3cw-a6DpmnvGD5iUU"},
{"content":{"body":"hmm, it would be nice if `useGrouping` had a string specifier for all options so you could ignore that it also takes undefined/Booleans","format":"org.matrix.custom.html","formatted_body":"hmm, it would be nice if <code>useGrouping</code> had a string specifier for all options so you could ignore that it also takes undefined/Booleans","msgtype":"m.text"},"ts":1675177723654,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$I9gWNCaOhSGsfyA8mBkDZdpPpGu8TCRctz8_q3-Q6SE"},
{"content":{"body":"it doesn't currently have a `\"never\"` option, just `false`","format":"org.matrix.custom.html","formatted_body":"it doesn't currently have a <code>&quot;never&quot;</code> option, just <code>false</code>","msgtype":"m.text"},"ts":1675177745076,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nq6t73d93iflu_Gtg2Th2C_o-bXZ9YDCys21HOfUDHc"},
{"content":{"body":"Is Frank Tang here?  His agenda item is next.","msgtype":"m.text","org.matrix.msc1767.text":"Is Frank Tang here?  His agenda item is next."},"ts":1675178223189,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-HGTy59WsIMIN-4LIFdgtlqQKLoANqGbj-GFBv6kFNE"}
]