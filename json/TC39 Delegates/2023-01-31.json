[
{"content":{"body":"shu, waldemar: Were you able to review the Async Explicit Resource Management proposal specification text?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>, <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: Were you able to review the Async Explicit Resource Management proposal specification text?","msgtype":"m.text"},"ts":1675176895416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BHocWY8Np73MJjm9aSIFC3j_rQqoffD9GJRBH4jlS30"},
{"content":{"body":"Plenary begins in T-minus 1 minute encounting.","msgtype":"m.text","org.matrix.msc1767.text":"Plenary begins in T-minus 1 minute encounting."},"ts":1675177134301,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ccX8kqnzGUOAMgSkiC_LC1TJC7WI7aMCYtwFfg9bWDw"},
{"content":{"body":"rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec","msgtype":"m.text"},"ts":1675177171595,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"},
{"content":{"body":"> <@shuyuguo:matrix.org> rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec\n\nThe rest of the spec text that isn't `using await` is the same as the sync-version prior to carving `AsyncDisposableStack` and @@asyncDispose out in the November plenary.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec</blockquote></mx-reply>The rest of the spec text that isn't <code>using await</code> is the same as the sync-version prior to carving <code>AsyncDisposableStack</code> and @@asyncDispose out in the November plenary.","m.relates_to":{"m.in_reply_to":{"event_id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"}},"msgtype":"m.text"},"ts":1675177334268,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7seefO6EbkmzSzBEsBZWFftHzPYLldZs_aVo8BnBKjg"},
{"content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"ts":1675177378908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"},
{"content":{"body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","m.new_content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"m.relates_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675177386414,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tWLT2mFjFfl2IWgQ7JZ8714cggyEMLnpOqL14NO0Hh8"},
{"content":{"body":"> <@shuyuguo:matrix.org> were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit\n\nNo. The `~async-dispose~` plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support `AsyncDisposableStack`. The only changes I've made aside from adding the `using await` syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit</blockquote></mx-reply>No. The <code>~async-dispose~</code> plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support <code>AsyncDisposableStack</code>. The only changes I've made aside from adding the <code>using await</code> syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","m.relates_to":{"m.in_reply_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"}},"msgtype":"m.text"},"ts":1675177518306,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4whKwOvKXch6-Dot2QDZ_eWBvkxGqGZMSD7y2SLrwCc"},
{"content":{"body":"cool, that makes sense","msgtype":"m.text"},"ts":1675177542706,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Dr_7vrVnSjwYgCr2fqiMOZoTu0v9Cg_2JHKOTybMS38"},
{"content":{"body":"I should clarify, there were minor changes to address Mathieu Hofman and erights concerns about any evaluated `using await` forcing an explicit `await` even if the initialized value is `null` or `undefined`, but that should be about it.","format":"org.matrix.custom.html","formatted_body":"I should clarify, there were minor changes to address <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> and <a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a> concerns about any evaluated <code>using await</code> forcing an explicit <code>await</code> even if the initialized value is <code>null</code> or <code>undefined</code>, but that should be about it.","msgtype":"m.text"},"ts":1675177604305,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YkjlJn1zDa4RugptM3APZFSvjO3cw-a6DpmnvGD5iUU"},
{"content":{"body":"hmm, it would be nice if `useGrouping` had a string specifier for all options so you could ignore that it also takes undefined/Booleans","format":"org.matrix.custom.html","formatted_body":"hmm, it would be nice if <code>useGrouping</code> had a string specifier for all options so you could ignore that it also takes undefined/Booleans","msgtype":"m.text"},"ts":1675177723654,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$I9gWNCaOhSGsfyA8mBkDZdpPpGu8TCRctz8_q3-Q6SE"},
{"content":{"body":"it doesn't currently have a `\"never\"` option, just `false`","format":"org.matrix.custom.html","formatted_body":"it doesn't currently have a <code>&quot;never&quot;</code> option, just <code>false</code>","msgtype":"m.text"},"ts":1675177745076,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nq6t73d93iflu_Gtg2Th2C_o-bXZ9YDCys21HOfUDHc"},
{"content":{"body":"Is Frank Tang here?  His agenda item is next.","msgtype":"m.text","org.matrix.msc1767.text":"Is Frank Tang here?  His agenda item is next."},"ts":1675178223189,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-HGTy59WsIMIN-4LIFdgtlqQKLoANqGbj-GFBv6kFNE"},
{"content":{"body":"bterlson:  Should TCQ have a \"Comment on topic\" action that implies no further commentary is necessary?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>:  Should TCQ have a &quot;Comment on topic&quot; action that implies no further commentary is necessary?","msgtype":"m.text"},"ts":1675178591615,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},
{"content":{"body":"Maybe action is the wrong term. Maybe \"queue item\"?","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178619670,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},
{"content":{"body":"It's more like a flag on the queue topic I would say (since it could be a reply or a new topic)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178751240,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},
{"content":{"body":"but yeah it could be added","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178765513,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},
{"content":{"body":"we could also just leave those comments here in Matrix and the chairs could read them aloud at their discretion","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179410147,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},
{"content":{"body":"adding \"EOM\" at the end seems like it's been a workable convention","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179441541,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},
{"content":{"body":"what \"optional\" and \"allow\" mean in the example?","msgtype":"m.text"},"ts":1675179506082,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"},
{"content":{"body":"yeah, the status quo is also not bad","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179527071,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nit could mean anything, it's just an example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply>it could mean anything, it's just an example","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179586613,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MM2rrnm80gq1z0Nkl13RIRpXlAMLcKrT0fagbialziM"},
{"content":{"body":"yeah, I just curious how to explain the example","msgtype":"m.text"},"ts":1675179661749,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$A1a6LfXLu74oO3-dKiQp2obD2xsL5IbZyDE8idwNxjY"},
{"content":{"body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments","format":"org.matrix.custom.html","formatted_body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179703690,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},
{"content":{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","m.in_reply_to":{"event_id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","mimetype":"text/html"}]},"ts":1675179733154,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},
{"content":{"body":"I don't understand if downgrade to stage 2 why not unship...","msgtype":"m.text"},"ts":1675179739810,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RG9wmHYCfyBu7ydnb8vv6jUUY7KZ4xwowS5lFOraSRs"},
{"content":{"body":"That's what I was going for rbuckton .  Just a lightweight mechanism to register feedback on the current topic","format":"org.matrix.custom.html","formatted_body":"That's what I was going for <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> .  Just a lightweight mechanism to register feedback on the current topic","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179740499,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},
{"content":{"body":"where you could use some basic emotes like 👍️ 👎️ etc","msgtype":"m.text","org.matrix.msc1767.text":"where you could use some basic emotes like 👍️ 👎️ etc"},"ts":1675179749546,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$vY89W5EkkOsgSc0mAUgj08qaBdU7JlwT_mZZ750nK5Y"},
{"content":{"body":"if we have a 👍️ react, we must also have a 💩","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179795312,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nHE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179830511,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"},
{"content":{"body":"Yeah, that's why I thought free text for it is still important so we don't fall down the emoji reaction rathole","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179840709,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},
{"content":{"body":"Not sure if I'd go as far as adding 👎️, since a negative reaction or concern is better represented as a topic.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179844269,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},
{"content":{"body":"That's a good point","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179900006,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},
{"content":{"body":"Plus we already have an emoji reaction thing that I don't think we've ever actually used correctly.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179910055,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},
{"content":{"body":"Maybe then just \"Support current topic\"","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179917559,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},
{"content":{"body":"> <@anthonybullard:matrix.org> Maybe then just \"Support current topic\"\n\nBasically, yes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">@anthonybullard:matrix.org</a><br>Maybe then just &quot;Support current topic&quot;</blockquote></mx-reply>Basically, yes.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":false,"m.in_reply_to":{"event_id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179946857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},
{"content":{"body":"One problem I can think of is that it goes against our very recent discussion about explicit support","msgtype":"m.text","org.matrix.msc1767.text":"One problem I can think of is that it goes against our very recent discussion about explicit support"},"ts":1675179960639,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$1WSc1eik5WgEuqGwCpvFxmJVgpqvxw5wJIgtN6Ndftc"},
{"content":{"body":"I guess it's still explicit though","msgtype":"m.text","org.matrix.msc1767.text":"I guess it's still explicit though"},"ts":1675179974282,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$k88cgLKPLOU9ysxe2e0KhW_mddqOiqDFrHrYLFwVVAI"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> HE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests\n\nthe example is to import a css module so i don't understand how a css module relate to fs access...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests</blockquote></mx-reply>the example is to import a css module so i don't understand how a css module relate to fs access...","m.relates_to":{"m.in_reply_to":{"event_id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"}},"msgtype":"m.text"},"ts":1675179978193,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ntqftxc6xfmlrEtXGTKRJCFxe3GoKnmnoJrhvYNO8xE"},
{"content":{"body":"Yeah, the example might have been meant to be written with a `.js` extension, or the runtime has special behavior","format":"org.matrix.custom.html","formatted_body":"Yeah, the example might have been meant to be written with a <code>.js</code> extension, or the runtime has special behavior","msgtype":"m.text"},"ts":1675180035361,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$MroF2jB3F5VtKklgGfgCofal93rroNCULO86VVqflZM"},
{"content":{"body":"it's for your imagination :D","msgtype":"m.text"},"ts":1675180050757,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$acvEJiM-HWmdh8B_jzIGJUQsL73wmjlIpY0LWLLOJSA"},
{"content":{"body":"maybe it disallow `@import \"https://....\"` in css? 😅","format":"org.matrix.custom.html","formatted_body":"maybe it disallow <code>@import &quot;https://....&quot;</code> in css? 😅","msgtype":"m.text"},"ts":1675180091629,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$fmS3BVu6j51ltRoVBzY_lmuRHfB8OMNlk96rXFBfM7k"},
{"content":{"body":"btw for folks less involved in this discussion, we have a response here: https://github.com/whatwg/html/issues/7233#issuecomment-1407049226","msgtype":"m.text"},"ts":1675180490730,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SRnvFdQU_o5Ns7NqyDmfzZZrMhTJD9hnEANa9AGGnxM"},
{"content":{"body":"I prefer status quo to adding reacts on the agenda item. I don't want negative reacts, and would rather positive reacts have SOME context.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181169863,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},
{"content":{"body":"\"the proposal is great EOM\" is better than a random thumb up IMO.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181225476,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},
{"content":{"body":"(I agree but could not resist showing agreement by a random thumb up)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181265790,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lhUv0U82PKXcyFhYGJTC1IUf339Ao2ZPHQFq8g9-Jhk"},
{"content":{"body":"shu: If you want to do a temperature check, state the question clearly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: If you want to do a temperature check, state the question clearly","msgtype":"m.text"},"ts":1675181406831,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Pnv2KAB4PEVLQUj4QxwFXX2KlA_5b9go5IHTCt3SDbE"},
{"content":{"body":"yes i will craft a question when we do it","msgtype":"m.text"},"ts":1675181415583,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_LF9Eeaj_j9CLTqVXPHaAhEkenkLBXwOd7sml-D9G7M"},
{"content":{"body":"the chairs have a recommended process for this now","msgtype":"m.text"},"ts":1675181415820,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3QvVIVfvlD7Ou33ZBy_vepw_YrEfm6Q3b0hbgNJczUU"},
{"content":{"body":"but i want to do it after justin's item","msgtype":"m.text"},"ts":1675181422994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hSpu5kGK_1pNAOQOotlHkf7fH_C_6Ejwcfxpe6KBRpM"},
{"content":{"body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of `assert`, add `with` keyword to replace it (i.e., `assert` as an alias to `with`), phase out `assert`/forbid via lint","format":"org.matrix.custom.html","formatted_body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of <code>assert</code>, add <code>with</code> keyword to replace it (i.e., <code>assert</code> as an alias to <code>with</code>), phase out <code>assert</code>/forbid via lint","msgtype":"m.text"},"ts":1675181432100,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zJSpVB94MCRVvNO1WrGz95okyp3IpeLynnr2Wbf6mVA"},
{"content":{"body":"Maybe we can just think of `assert` as a cast with implicit type coercion. (half j/k, half serious)","format":"org.matrix.custom.html","formatted_body":"Maybe we can just think of <code>assert</code> as a cast with implicit type coercion. (half j/k, half serious)","msgtype":"m.text"},"ts":1675181667638,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kki9MQ5GU9NIY0ET9oq7k6m_FjtGE-kY10KAahh_gNU"},
{"content":{"body":"yeah i honestly believe we have shoehorned ourselves into one particular meaning of \"assert\"","msgtype":"m.text"},"ts":1675181692359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FMkON5oi4-UkvinESfU2ZJ2I-tfEnHJJqDhutPs8KSw"},
{"content":{"body":"and are not being flexible","msgtype":"m.text"},"ts":1675181697902,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ABdyEzKHxeMMq5zc7bzHJuHANTtI5KnBx-1s4_fo9pc"},
{"content":{"body":"which is... a psychological thing, not a semantics thing","msgtype":"m.text"},"ts":1675181710983,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JAZLQoQBC1eP6yUPyhaCS6RkbNyrhdmlrbtfBdZGjBw"},
{"content":{"body":"Can whoever is typing mute?","msgtype":"m.text"},"ts":1675181733823,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hux_EMjjz7Xhf53HwQOS926FWszmjhXhVJzZtsNx4Co"},
{"content":{"body":"think that was me, sorry","msgtype":"m.text"},"ts":1675181754999,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zaAmxbr83RC_cAaL3MtrFS-cQ8K_B487k-kqb2HX8oE"},
{"content":{"body":"my understanding re process:\n\n> Withdrawing Proposals, Reverting to Earlier Stages, and Adopting Proposals\n\n> At any point in the process, a proposal champion may propose that a proposal be downgraded to an earlier stage or withdrawn. Consensus of the committee is necessary for these transitions. ","format":"org.matrix.custom.html","formatted_body":"<p>my understanding re process:</p>\n<blockquote>\n<p>Withdrawing Proposals, Reverting to Earlier Stages, and Adopting Proposals</p>\n</blockquote>\n<blockquote>\n<p>At any point in the process, a proposal champion may propose that a proposal be downgraded to an earlier stage or withdrawn. Consensus of the committee is necessary for these transitions.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1675181995290,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Bp4Xe55WWX13cVWgZ8pVicQf3BJQdvWGKcBDs7049kY"},
{"content":{"body":"that doesn't mean *only* a champion may propose it.","format":"org.matrix.custom.html","formatted_body":"that doesn't mean <em>only</em> a champion may propose it.","msgtype":"m.text"},"ts":1675182005449,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$thh7ti04yVGzodD7b7qRYv0TGrgA5FRitmRrgEAvuag"},
{"content":{"body":"anyone can propose any changes at any time, whether they achieve consensus or are procedurally valid is a separate thing.","msgtype":"m.text"},"ts":1675182034058,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d213Lnu_zzFkVDjE_5PGcThOlDCqOTwUoi2jTlQfYVY"},
{"content":{"body":"As a new delegate in a new member organization, is there a document I can read to learn more about in-band and out-of-band?","msgtype":"m.text"},"ts":1675182096037,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU"},
{"content":{"body":"my view is that a downgrade should have the champions involved. forcing something to stage 1 is what i am objecting to here. I find this very concerning","msgtype":"m.text"},"ts":1675182097411,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$9sVKwLx7VTwIbsxY-FMxD5V9rXFzedbYl97BwO6RH_A"},
{"content":{"body":"nothing can be forced because champions participate in consensus","msgtype":"m.text"},"ts":1675182108866,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gM2zIFFwRLXfVez_7ruUDUIlnn7Yg_9dfJvnqn9OYoA"},
{"content":{"body":"only *proposed*. which forces nothing.","format":"org.matrix.custom.html","formatted_body":"only <em>proposed</em>. which forces nothing.","msgtype":"m.text"},"ts":1675182118981,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ew7GyZEsN6BOHH82tBD0jDfsebymM-1yfl7fkrdBXYM"},
{"content":{"body":"yeah we just don't have consensus for re-opening IB/OOB","msgtype":"m.text"},"ts":1675182122192,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HCn0MNtLIGghmrsqhpMKkFaaQ4k7hLpTeY6_tqHFZfE"},
{"content":{"body":"yep, agreed. I am responding to what you were proposing and saying that it would be inappropriate. I am surprised it was brought up i guess?","msgtype":"m.text"},"ts":1675182139129,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6TZI7N606Y3d7X_MJuyUWINRBSmPIMTcJH3zZkDkzEk"},
{"content":{"body":"like, that is a huge leap","msgtype":"m.text"},"ts":1675182149543,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$_WBNKegilzOcMwefDmF7kAIqnaVAcOf0rceUdrwOq84"},
{"content":{"body":"wait what i said?","msgtype":"m.text"},"ts":1675182156749,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$c2uUdLran5RU0Ejn5T44z-jRIH0Q8D-6_U1IsZMwAsA"},
{"content":{"body":"sorry, no, what jordan said","msgtype":"m.text"},"ts":1675182165185,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$HUNq1VALDFqxZqGYHgcbZ8IxW3fWTWTAnWl10bNmQmM"},
{"content":{"body":"ah yes agreed, i was also surprised","msgtype":"m.text"},"ts":1675182172227,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VVpwYmSGfrVOrhsrGQ0U5OH702rP8Tcc9O_QccAS6Mk"},
{"content":{"body":"I don't think so, but you can add the terms to the glossary at https://github.com/tc39/how-we-work/blob/main/terminology.md","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182192907,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$a1WbRr9fz7WmziXmp96oNxVmhXcZ3BdL7Bm3KnHn0uU"},
{"content":{"body":"in this context, in-band means within the source text, specifically within the import declaration","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$a1WbRr9fz7WmziXmp96oNxVmhXcZ3BdL7Bm3KnHn0uU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182236542,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YTBSnUDmVC9o9SlIo0K0WtNOq5swaVDtsECVeeClt_I"},
{"content":{"body":"out-of-band would be things like HTTP headers, CLI flags, browser config, etc","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$YTBSnUDmVC9o9SlIo0K0WtNOq5swaVDtsECVeeClt_I"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182253269,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zZhyXSxT7xszKOezg45EbzkM6lvNlF40CxWEEpPQGPw"},
{"content":{"body":"OOB would be something like import maps: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$zZhyXSxT7xszKOezg45EbzkM6lvNlF40CxWEEpPQGPw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182389555,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$bEhARGE0gQ5tyXaRfSUR9Ba5LJxqcXxl4WoMASXrV04"},
{"content":{"body":"sorry i may have overreacted there","msgtype":"m.text"},"ts":1675182390696,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$fUBweo0EwaLmTHuc6wpuKgkPd9hjqR7WH5-yUz_GEco"},
{"content":{"body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$bEhARGE0gQ5tyXaRfSUR9Ba5LJxqcXxl4WoMASXrV04"},"rel_type":"m.thread"}},"ts":1675182513754,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o"},
{"content":{"body":" * So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":" * So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","m.new_content":{"body":"So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text"},"m.relates_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675182530267,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$_F-zOrMhw7zEJo34s66YfAZarqOktUFZJWEFW60tRzY"},
{"content":{"body":" * So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":" * So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","m.new_content":{"body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text"},"m.relates_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675182569725,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$KaEe6KEZk_LzgHepIZ6fscyg84SzqbPp-1VqP6DlklY"},
{"content":{"body":"yes, just like CSP and import maps","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182570691,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tUAXkhnZo9rEvHXl4PPPGrUUmj4FhwZshcInQqMpP5g"},
{"content":{"body":"Sounds good.  Adding these terms to the above document will be good practice for going through the process here","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$tUAXkhnZo9rEvHXl4PPPGrUUmj4FhwZshcInQqMpP5g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182596645,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$iPEMzYiVCL9ixTfgUpujOm8fPtO1aQEvA-VyMKM-2X8"},
{"content":{"body":"Anthony Bullard: PRs welcome","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">Anthony Bullard</a>: PRs welcome","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$iPEMzYiVCL9ixTfgUpujOm8fPtO1aQEvA-VyMKM-2X8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182622040,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BFIQ78FgxQ15RpJDWHTBFp7_l7cbfd3rupZgNAiuToo"},
{"content":{"body":"if we had a temperature check for using in eval, I would give it a 👍️","msgtype":"m.text"},"ts":1675183212635,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Tq1JFrrBvwnZA7QvB5dJLBZcnjYGNC8eLJ_Acj85Ah8"},
{"content":{"body":"but I don't feel strongly enough to even add a topic to TCQ","msgtype":"m.text"},"ts":1675183237031,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kgiztHY8ADssbOR1JCJc-36k_YgrIBV0kr4A7TaSpjs"},
{"content":{"body":"Yeah I feel like we could go either way on eval; it's fine to prohibit or support","msgtype":"m.text"},"ts":1675183350477,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wzDry8dW41fuY2s0ZQatu7mitIghl7GioEEfxgKhGkk"},
{"content":{"body":"I don't think most JS developers have internalized that they can use let at the top level of a direct eval","msgtype":"m.text"},"ts":1675183375667,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1nD-tcUpWLPJD1kXnh9EoWmsKptbLzzAw_fYCGAYRDE"},
{"content":{"body":"+1 to doing a temperature check","msgtype":"m.text"},"ts":1675183410504,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tw9Aka810rXqTcBZIWsfXudlTb6zFLzJfEz3TT3xdPU"},
{"content":{"body":"Anthony Bullard: in case you are looking for other stuff on tcq, maybe adding a temp check question isn't a bad idea... (i can help, i did  the original implementation of the temp check)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">Anthony Bullard</a>: in case you are looking for other stuff on tcq, maybe adding a temp check question isn't a bad idea... (i can help, i did  the original implementation of the temp check)","msgtype":"m.text"},"ts":1675183475526,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE"},
{"content":{"body":"Working on it","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$BFIQ78FgxQ15RpJDWHTBFp7_l7cbfd3rupZgNAiuToo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183533975,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$RuK2wz0jF2WcxxujoKlkc9ZySZ9PiMXVOWcWzWDQ7Tg"},
{"content":{"body":"Just trying to find a good reference for the term in-band","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$RuK2wz0jF2WcxxujoKlkc9ZySZ9PiMXVOWcWzWDQ7Tg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183546395,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$AIXTiSX6SagxEnIdN-BmZF0ZMtVqHu3jI_NDWoAlVzY"},
{"content":{"body":"I will reach out if I have any questions.  Haven't any took a peek at the repo yet","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183625835,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$EnxEc4iXvPQXO8CSRo1euJjLGdKtR7efDR6rQosHU0o"},
{"content":{"body":"is this being temp checked?","msgtype":"m.text"},"ts":1675183634355,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$U5uukHmYLFDkcHSuZIOVmLO9wVqJnGEA1rnZfA3huvI"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1675183649119,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ELCHFtxL5vLA3bEvyAIDOLsW-i4xGig-vsX7N347gDI"},
{"content":{"body":"Jack Works: yes, on TCQ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: yes, on TCQ","msgtype":"m.text"},"ts":1675183656950,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$QXfAI4DUlRBbp0vFpJows--5EAGO4llfoT67jE6Vp9o"},
{"content":{"body":"i can't see a vote UI, did I miss that?","msgtype":"m.text"},"ts":1675183677746,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0"},
{"content":{"body":"By the way, does the TCQ \"Log\" go anywhere?","msgtype":"m.text"},"ts":1675183695342,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$0ewDMUa4-78VRJ1mP3zOgYdjSsMPBIMxFOcL4FXnWoU"},
{"content":{"body":"> <@jackworks:matrix.org> i can't see a vote UI, did I miss that?\n\ntry reloading","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>i can&#39;t see a vote UI, did I miss that?</blockquote></mx-reply>try reloading","m.relates_to":{"m.in_reply_to":{"event_id":"$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0"}},"msgtype":"m.text"},"ts":1675183727054,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$abMCYlyXO1vyiD9HP0QAdmTOc4Yl5b9RG0wsTuHGuq0"},
{"content":{"body":"or there may be a bug","msgtype":"m.text"},"ts":1675183736543,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$qdzsvv-z3-vZtCIc1dx1DkfqgmlrEfKKNy55UnEfTyg"},
{"content":{"body":"I just refreshed and the temp check is gone now","msgtype":"m.text"},"ts":1675183744251,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NsnAoeqyi1ROgP1nj7_god00HkpDm2VrM4FJ_bbfEE0"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1675183762229,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$wSYmbSsVmJJe_RmAm6Qs_XPTno4XXxQI_KmQhU0je7A"},
{"content":{"body":"tried many time but see nothing","msgtype":"m.text"},"ts":1675183766539,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$aLlaTRn8B2nHs0fuUCWlEpjRfvQ6VTJkbpD3b2mqHRY"},
{"content":{"body":"😬","msgtype":"m.text"},"ts":1675183771756,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$eT_b7wMGwtG-oKRUBzPtct6jy6hdULrMuiwf4tJE0Zk"},
{"content":{"body":"current state","msgtype":"m.text"},"ts":1675183785242,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$N-fHx0Huf_6JvvmDU5MEzbUkLFtgUFcbIApI3gzlTj4"},
{"content":{"body":"It's gone for me as well after a refresh","msgtype":"m.text"},"ts":1675183786369,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$7CCDtyf0JDSgzrg-1BT91wj1s-VdY_LKw09h9Ofl8pc"},
{"content":{"body":"i support to reject `using` directly in eval","format":"org.matrix.custom.html","formatted_body":"i support to reject <code>using</code> directly in eval","msgtype":"m.text"},"ts":1675183790788,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$FNnYg6jh_KERmbEcNAc5FDY7TYB9FBD2gNX9pGlWuxI"},
{"content":{"body":"ill vote on your behalf jack","msgtype":"m.text"},"ts":1675183803460,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$a8uHoizmCV5qXruYJ8UHlgWNnYTF7dMniwgnsYDwF50"},
{"content":{"body":"why only ban await,not ban yield?","msgtype":"m.text"},"ts":1675183809701,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$PWpcMV6xv0WLmY-tFRTtiw_Z3LwPhtQAv30BLOI2q-U"},
{"content":{"body":"because there's the async `using await` ron will present later, i presume","format":"org.matrix.custom.html","formatted_body":"because there's the async <code>using await</code> ron will present later, i presume","msgtype":"m.text"},"ts":1675183828328,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Tld2vlqWFRZlPByi0o6eZUmzey-q-XrfvIJZWirxa7k"},
{"content":{"body":"ok. so if syntax is `async using`, no need to ban `await`?","format":"org.matrix.custom.html","formatted_body":"ok. so if syntax is <code>async using</code>, no need to ban <code>await</code>?","msgtype":"m.text"},"ts":1675183895662,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0"},
{"content":{"body":"🤷","msgtype":"m.text"},"ts":1675183913999,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bU1QyHQG_eWcX4y0-e6kA1UHu4LXrxAbBvddm8Oa8r8"},
{"content":{"body":"I would be happy to ban `yield` and for that matter also `undefined`, as long as we're banning stuff","format":"org.matrix.custom.html","formatted_body":"I would be happy to ban <code>yield</code> and for that matter also <code>undefined</code>, as long as we're banning stuff","msgtype":"m.text"},"ts":1675183943483,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY"},
{"content":{"body":"alright, if anyone wants to discuss anything from this meeting, i'll be around for the next hour. I won't make the afternoon session","msgtype":"m.text"},"ts":1675183948361,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LIUx2Zs8T3kyAdTiu7FUZDk6bO8kegGQJyhBvJoq92Q"},
{"content":{"body":"`{ using undefined = x } // oh no`","format":"org.matrix.custom.html","formatted_body":"<code>{ using undefined = x } // oh no</code>","msgtype":"m.text"},"ts":1675183961033,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eaenHUvOGlFmuYvAWMPFgKDQbDEklGxhX9xXv3AogD4"},
{"content":{"body":"I really hope we banned `let undefined` and `const undefined` in ES6 (only allow `var undefined` for webcompat). ","format":"org.matrix.custom.html","formatted_body":"I really hope we banned <code>let undefined</code> and <code>const undefined</code> in ES6 (only allow <code>var undefined</code> for webcompat).","msgtype":"m.text"},"ts":1675184081594,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ApWDSITvd0aF8w4ti_gCGD_BcXISQtdXS1VZYxrMXNc"},
{"content":{"body":"Michael Ficarra:  Any conventions on commits / branches for this repo that I'm not seeing?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>:  Any conventions on commits / branches for this repo that I'm not seeing?","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$AIXTiSX6SagxEnIdN-BmZF0ZMtVqHu3jI_NDWoAlVzY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184105760,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$1xrabmlyKsjYQjT8UpkAY5Xe8-TV6cFqX96e_Z2PRXU"},
{"content":{"body":"`const undefined` is banned because consts need a value :-p but `let undefined` works fine","format":"org.matrix.custom.html","formatted_body":"<code>const undefined</code> is banned because consts need a value :-p but <code>let undefined</code> works fine","msgtype":"m.text"},"ts":1675184115615,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AZcpuznFx_K1YPIVmKwlzW9S-6__P2Mdq3VH4SQA30M"},
{"content":{"body":"just not at the top level of scripts because it's a global non-configurable property","msgtype":"m.text"},"ts":1675184247061,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8"},
{"content":{"body":"Seems like there are not.  https://github.com/tc39/how-we-work/pull/127","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$1xrabmlyKsjYQjT8UpkAY5Xe8-TV6cFqX96e_Z2PRXU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184280733,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$6C-3bM9IbvYi8KCNcF0q5jR-ZvMidEnozv451iJeCVU"},
{"content":{"body":"Of course it's written in the one popular framework I haven't used in 5 years","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$EnxEc4iXvPQXO8CSRo1euJjLGdKtR7efDR6rQosHU0o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184501117,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$tedtefmezHMOXp7K7me4nXUNbkDEvRIuJz7BN94fhuY"},
{"content":{"body":"yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","msgtype":"m.text","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$tedtefmezHMOXp7K7me4nXUNbkDEvRIuJz7BN94fhuY"},"rel_type":"m.thread"}},"ts":1675184553424,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc"},
{"content":{"body":" * yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","m.new_content":{"body":"yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","msgtype":"m.text"},"m.relates_to":{"event_id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675184558207,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$XKGnclF36aXUzdB5shl8YrWSYEFh-LEjlCDkYHLGzrA"},
{"content":{"body":"temp check ui showing the question","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184696523,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$DCpjTp7NDoRXhu7Mrv2BxjtmMs2_l3NNjR47EE9drAc"},
{"content":{"body":"so, the chair would need to enter it","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$DCpjTp7NDoRXhu7Mrv2BxjtmMs2_l3NNjR47EE9drAc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184702515,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$kue-NwK8xSKx2faqqH1tFxJ3lKtnK3VjAU_UlOSx8eE"},
{"content":{"body":"right now non-chairs can't start a temp check","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$kue-NwK8xSKx2faqqH1tFxJ3lKtnK3VjAU_UlOSx8eE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184965041,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$rFVkpzjzrR1tRNhLneKHpo7TY4y6Vq1h4MemmCpkQNg"},
{"content":{"body":"Gotcha","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$rFVkpzjzrR1tRNhLneKHpo7TY4y6Vq1h4MemmCpkQNg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675185235385,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$mV0TtYQFuQcw_MvmdMIivOeP6XY7TpYHv5s4aUpOPws"},
{"content":{"body":"Let me fork, clone, and learn Vue real quick and hopefully we can have this ready for the Seattle meeting","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$mV0TtYQFuQcw_MvmdMIivOeP6XY7TpYHv5s4aUpOPws"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675185291238,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$o84W01s2pXHF1tzr5EkBlU4WcKfRycqWsf8weLZsGpE"},
{"content":{"body":"> <@bakkot:matrix.org> just not at the top level of scripts because it's a global non-configurable property\n\nThat would never be disposed, because it never goes out of scope.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>just not at the top level of scripts because it&#39;s a global non-configurable property</blockquote></mx-reply>That would never be disposed, because it never goes out of scope.","m.relates_to":{"m.in_reply_to":{"event_id":"$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8"}},"msgtype":"m.text"},"ts":1675186614658,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI"},
{"content":{"body":"> <@rbuckton:matrix.org> That would never be disposed, because it never goes out of scope.\n\nsorry, that was re: `let undefined` failing if you just type it in the console because it's attempting to redeclare a non-configurable global property, not about `using`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>That would never be disposed, because it never goes out of scope.</blockquote></mx-reply>sorry, that was re: <code>let undefined</code> failing if you just type it in the console because it's attempting to redeclare a non-configurable global property, not about <code>using</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI"}},"msgtype":"m.text"},"ts":1675186710561,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2ycPMZCWpKJAEsf0JsksZ9l95yxu9wIXuEptjN8GKuo"},
{"content":{"body":"Ah, my bad. ","msgtype":"m.text"},"ts":1675186776188,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$FxPMCS_EyRC3gN1-xGnwWYZfKF6nyrdYHNE98MGLRzY"},
{"content":{"body":"> <@haxjs:matrix.org> ok. so if syntax is `async using`, no need to ban `await`?\n\nWe might need to ban `async using` in other places instead. See https://tc39.es/ecma262/#prod-ForInOfStatement, which needs to ban `async  of` because `async of => {}` is a legal arrow. `async using` would potentially require a complex cover grammar to deal with similar cases.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>ok. so if syntax is <code>async using</code>, no need to ban <code>await</code>?</blockquote></mx-reply>We might need to ban <code>async using</code> in other places instead. See https://tc39.es/ecma262/#prod-ForInOfStatement, which needs to ban <code>async  of</code> because <code>async of =&gt; {}</code> is a legal arrow. <code>async using</code> would potentially require a complex cover grammar to deal with similar cases.","m.relates_to":{"m.in_reply_to":{"event_id":"$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0"}},"msgtype":"m.text"},"ts":1675187188735,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ztI1Enb67yxhQxipWyj1myPLrO9x4iSI_Nxdq3WMgCQ"},
{"content":{"body":"are there any contexts in which `async [no lineterminator here] using` is currently legal?","format":"org.matrix.custom.html","formatted_body":"are there any contexts in which <code>async [no lineterminator here] using</code> is currently legal?","msgtype":"m.text"},"ts":1675187302491,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$90gybmlJcoKhtMiDleWy57uu2CcNbNIK8Nu5lLgYb5c"},
{"content":{"body":"other than the horrible async arrow one","msgtype":"m.text"},"ts":1675187318801,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e2YM5PcFHRHO-yMScfG2S-VG2o8rnxTfMHKE7Ofkd0Q"},
{"content":{"body":"within double quotes!!!","msgtype":"m.text"},"ts":1675187341666,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ju3RX8Elj7vw2jl5a6NUrVhKMjGvq7XiVebSPzm6S-g"},
{"content":{"body":"or a regexp","msgtype":"m.text"},"ts":1675187348527,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk"},
{"content":{"body":"> <@bakkot:matrix.org> I would be happy to ban `yield` and for that matter also `undefined`, as long as we're banning stuff\n\nI'm less concerned about `yield` because I don't see a `using yield` declaration being a thing. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I would be happy to ban <code>yield</code> and for that matter also <code>undefined</code>, as long as we're banning stuff</blockquote></mx-reply>I'm less concerned about <code>yield</code> because I don't see a <code>using yield</code> declaration being a thing.","m.relates_to":{"m.in_reply_to":{"event_id":"$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY"}},"msgtype":"m.text"},"ts":1675187350116,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6xL4D8jbZE7aiLaHvoTSK9OUjwDOCvYoea4rBo6Y8II"},
{"content":{"body":"> <@littledan:matrix.org> or a regexp\n\nor a method name.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>or a regexp</blockquote></mx-reply>or a method name.","m.relates_to":{"m.in_reply_to":{"event_id":"$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk"}},"msgtype":"m.text"},"ts":1675187362929,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M5jowb-zLHVIqHZSgP9HyQkDcuWxtHfx9W8cqkzZtbw"},
{"content":{"body":"ah, yes, method names also","msgtype":"m.text"},"ts":1675187383821,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ENyC8fjuDt3d1jgENFC0KXun2TVGDEbT2ffUPXuCDEg"},
{"content":{"body":"I think the async arrow case is the only one likely to be problematic, but that one would be a problem, certainly","msgtype":"m.text"},"ts":1675187452310,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7Xl430q3oSkLwbuTTpgJTP1fbSOjpHLGuk0zt2iB0Wk"},
{"content":{"body":"Where as `using [no LineTerminator here] await` isn't legal anywhere outside of string/regexp literal contexts.","format":"org.matrix.custom.html","formatted_body":"Where as <code>using [no LineTerminator here] await</code> isn't legal anywhere outside of string/regexp literal contexts.","msgtype":"m.text"},"ts":1675187458502,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$IpL8fNMqq1oTNFKF5PYPdOK_qOVxZRj2LkdTNFVLTa4"},
{"content":{"body":"please don't make me write a bunch more string comparisons on every binding identifier parse :(","msgtype":"m.text"},"ts":1675187664440,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$O-vWP2cL85eoS7ATn9JYvOuFIRmGGMF4kfnvS72h6J4"},
{"content":{"body":"what about only the binding identifier parses in `using` declarations","format":"org.matrix.custom.html","formatted_body":"what about only the binding identifier parses in <code>using</code> declarations","msgtype":"m.text"},"ts":1675187689475,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_4A_FDZt8wi_XnzMId0YexksR59M_yKMZn1722stEYs"},
{"content":{"body":"cycles are precious and come dear","msgtype":"m.text"},"ts":1675187693267,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$seUkNm2BcOwIXPGIWHCN_2wzFRtPMzV9bIXR9iuWpV0"},
{"content":{"body":"i mean how many of those can there be","msgtype":"m.text"},"ts":1675187693986,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ik1xb8Jt1HVtYw4-ePi-tKZPgnC13I17n28_4S0nDuw"},
{"content":{"body":"that's a new feature so we can start with a lower bar","msgtype":"m.text"},"ts":1675187704835,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$j_o3CUxrJQUoo2TqpOnW-KgcwrFeOHp0nqpNS3Oc84A"},
{"content":{"body":"can't break people's expectations if we start super low!","msgtype":"m.text"},"ts":1675187723482,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vJOAodTZ6qB7OGPpg_lXDPFu1w9TQxdpjj0ZXt3ez-0"},
{"content":{"body":"https://www.w3.org/2023/01/pressrelease-w3c-le-launched.html.en","msgtype":"m.text","org.matrix.msc1767.text":"https://www.w3.org/2023/01/pressrelease-w3c-le-launched.html.en"},"ts":1675187732128,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$U7cVrZz9NkOUY9rZcg5w1S-H2KnJTZ20li0c5YKhyUA"},
{"content":{"body":"https://tc39.es/proposal-async-explicit-resource-management/#sec-suppressederror ","msgtype":"m.text"},"ts":1675188054129,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OfftCtzRVcJl4R9OFkJLE5qRSfajW7Wg242b-IBv6jU"},
{"content":{"body":" * waldemar: note i'm not talking about `suppressed`, which is the suppressed error, i'm talking about `error`, which is the cause of the suppression (re your queue item)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: note i'm not talking about <code>suppressed</code>, which is the suppressed error, i'm talking about <code>error</code>, which is the cause of the suppression (re your queue item)","m.new_content":{"body":"waldemar: note i'm not talking about `suppressed`, which is the suppressed error, i'm talking about `error`, which is the cause of the suppression (re your queue item)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: note i'm not talking about <code>suppressed</code>, which is the suppressed error, i'm talking about <code>error</code>, which is the cause of the suppression (re your queue item)","msgtype":"m.text"},"m.relates_to":{"event_id":"$Ky9244R1K_uFhnYvyZfbYDFSZAt6IuzShzo-9j9K9Fc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675188846063,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gzKGKOcY_tiO90RSw8V1UsmvbvnO3Xfx_nEvkUik4IU"},
{"content":{"body":"I should have clarified re: https://github.com/tc39/proposal-explicit-resource-management/pull/140 whether it requires consensus. Given the algorithm changes in ForBodyEvaluation and CreatePerIterationEnvironment are essentially no-ops, removing them has no observable effect on runtime semantics.","msgtype":"m.text"},"ts":1675188885508,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JbVrQBuZLRUsH9s7cj--iSNmFXMjUeOha7eJumajeyw"},
{"content":{"body":"am warming up to the option of prohibiting '.cause' on SuppressedErrors - I think it's a conceptual mismatch for SuppressedError ","msgtype":"m.text"},"ts":1675189147809,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$F2Xb_x8yEZSN0-ylFaEia3_feGTZ7cKcqQBv7haNEgY"},
{"content":{"body":"i'm still not clear on why it's not a cause when we all keep describing it as the thing that caused the suppression","msgtype":"m.text"},"ts":1675189174161,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KS37ZGSLcgombw1LoYhmiApuhGvjWGeiDl8UzNw8ePQ"},
{"content":{"body":"(i.e., read the options bag and throw if it's a present)","msgtype":"m.text"},"ts":1675189180908,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7K5Jpbe3gaME7ibKBA4WHKWfKe64425qziKAllw7SxM"},
{"content":{"body":"it doesn't cause the suppression - the use of the syntax causes the suppression","msgtype":"m.text"},"ts":1675189210602,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mT8_L1GdkMdVsIk6_0LGexNrhCTckp7IVOmSDqv5B5o"},
{"content":{"body":"in `using`, sure. but not necessarily in every use of SuppressedError","format":"org.matrix.custom.html","formatted_body":"in <code>using</code>, sure. but not necessarily in every use of SuppressedError","msgtype":"m.text"},"ts":1675189244682,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5iEhEveBGEYdpnYNiU1qsWpAd0TTIUgpIm25T1T9KeM"},
{"content":{"body":"that's the only use of SuppressedError","msgtype":"m.text"},"ts":1675189251737,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w44rWy3Yi4Qok9D5lf4Eht-jPdB6Aov7UxF5l87wBYU"},
{"content":{"body":"in the spec, but this is something users will use separately","msgtype":"m.text"},"ts":1675189269989,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NLTpvB2b8gsL0ehZ4ljjsoirwwtZhI3T_Satdt7L6xc"},
{"content":{"body":"ok but it is a mismatch for the only case it gets used in the spec, so it's bad fit","msgtype":"m.text"},"ts":1675189299658,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zX17NqH-jzLachihIuQAZuVhO2NcA657KE-nmd-tdfI"},
{"content":{"body":"even if users might do a different thing where it would get used in a different way","msgtype":"m.text"},"ts":1675189307850,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CFfTA3mHMgF9wv1ddEjFEmIvRik_Ac7GK8YrRBomhic"},
{"content":{"body":"ljharb: perhaps you're thinking of \"cause\" to mean \"caused mechanically the SuppressedError to be created and thrown\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: perhaps you're thinking of &quot;cause&quot; to mean &quot;caused mechanically the SuppressedError to be created and thrown&quot;","msgtype":"m.text"},"ts":1675189311122,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cLxTaiQiWbukH8vPmHLTMUJeqx6lcMiKQ7gLu4moTEI"},
{"content":{"body":"yes, that's what i'm thinking of","msgtype":"m.text"},"ts":1675189317990,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_Msx0oilfnFZHLZYPjcd1h3Dl-KMaerH8WwFl0cw_OY"},
{"content":{"body":"the cause is what caused the SuppressedError","msgtype":"m.text"},"ts":1675189325642,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ONH-2II9mz7qJoY1NQ_Uq69m3-6KOzo9RAJu0NEcq8A"},
{"content":{"body":"whereas waldemar and kevin (and myself) think of \"cause\" as, like, the conceptual reason of an error","msgtype":"m.text"},"ts":1675189340990,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z5MQHt1T2GpYwKiGA2wcW5Lf6o_OQ7JXvduwKr-PGco"},
{"content":{"body":"which in the case kevin mentioned is a SyntaxError, right?","msgtype":"m.text"},"ts":1675189341580,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d-dH_d-NxlR8Zirees3A1kSXzolLV6fN6G7JBWotTHc"},
{"content":{"body":"yes, what ron is saying right now","msgtype":"m.text"},"ts":1675189387993,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hyn_ELm4x5w3h8BLxgpcbVkxcU4H6M4GbwTZ9Rs7fa0"},
{"content":{"body":"it is not a linear relationship","msgtype":"m.text"},"ts":1675189391830,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MhiXhC7sEJ7XD-vMzU4neI3hBvIQEPzNBKtU16WNOa0"},
{"content":{"body":"the core disagreement i think is how do developers understand \"cause\"","msgtype":"m.text"},"ts":1675189416281,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8flW164pt4M4prn7OQcdJ_pkKFkjjK5x_lcY0oH_D9A"},
{"content":{"body":"is it this linear causality chain, or is it a simpler \"whatever effected it to be thrown mechanically\"","msgtype":"m.text"},"ts":1675189438193,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$j3uQVoaHniwNs5v0WUvS1O68RZtF5P8afs1z17vzb2A"},
{"content":{"body":"i would argue the latter","msgtype":"m.text"},"ts":1675189446693,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bHWcT4llBGO00A2iAkyckfLkhs8VWx3yX6uxc6vdWVE"},
{"content":{"body":"yeah so far we've had folks on both sides","msgtype":"m.text"},"ts":1675189471247,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OptTA5beSbTqLGfvnktFdsVjzr2PF80xYDExvd-7y_c"},
{"content":{"body":"I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"ts":1675189479169,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk"},
{"content":{"body":" * I think the only acceptable use for \"error\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":" * I think the only acceptable use for &quot;error&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","m.new_content":{"body":"I think the only acceptable use for \"error\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;error&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675189487987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HSYQZQrxpehRPtUYuumDbl3BA2hQ2bdg1j5yfh4KcGY"},
{"content":{"body":"I think the fact there is such disagreement is evidence of reusing `cause` being confusing.","format":"org.matrix.custom.html","formatted_body":"I think the fact there is such disagreement is evidence of reusing <code>cause</code> being confusing.","msgtype":"m.text"},"ts":1675189497432,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$V4D-MXSd4yMZ0Eh6JyD2vwbcR0yp0HMw41QTqxCoUGs"},
{"content":{"body":" * I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":" * I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","m.new_content":{"body":"I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675189497459,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UPwq0BJc0ToNBqXHaiqrLCy-ONWSNKLja4aH1Lq4ppU"},
{"content":{"body":"to be clear my core motivation here is \"it should not be possible to have an error that has two potential conceptual causes - .error and .cause\"","msgtype":"m.text"},"ts":1675189530326,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw"},
{"content":{"body":"there are some good argument being made that `.cause` may not be right to replace `.error`","format":"org.matrix.custom.html","formatted_body":"there are some good argument being made that <code>.cause</code> may not be right to replace <code>.error</code>","msgtype":"m.text"},"ts":1675189543684,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ifsFQiowK8Q675JETuyGlcQlgiWVzNsTPLECoDePuDs"},
{"content":{"body":"but that still doesn't mean it makes sense to have an error instance with all of cause/error/suppressed","msgtype":"m.text"},"ts":1675189559860,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Rjkn39_qoylzXN5oUIModcGVdwRKzEap81y9olxX9UI"},
{"content":{"body":"`error` is not the \"cause\", neither is `supressed` the \"cause\". My use of the term \"causes a suppression\" does not imply `cause` in this case, it implies the cause of a behavior.","format":"org.matrix.custom.html","formatted_body":"<code>error</code> is not the &quot;cause&quot;, neither is <code>supressed</code> the &quot;cause&quot;. My use of the term &quot;causes a suppression&quot; does not imply <code>cause</code> in this case, it implies the cause of a behavior.","msgtype":"m.text"},"ts":1675189587317,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mUbTPjmfSWwVSDMgra0j0nuVgWmlTylxO2vkDAAmF0w"},
{"content":{"body":"> <@ljharb:matrix.org> to be clear my core motivation here is \"it should not be possible to have an error that has two potential conceptual causes - .error and .cause\"\n\n`SuppressedError` _does_ have two conceptual causes. I'm more in favor of banning `cause` because it results in _three_ conceptual causes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>to be clear my core motivation here is &quot;it should not be possible to have an error that has two potential conceptual causes - .error and .cause&quot;</blockquote></mx-reply><code>SuppressedError</code> <em>does</em> have two conceptual causes. I'm more in favor of banning <code>cause</code> because it results in <em>three</em> conceptual causes.","m.relates_to":{"m.in_reply_to":{"event_id":"$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw"}},"msgtype":"m.text"},"ts":1675189632570,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2bKxCH6gROAwe8fbBvEQ6LxtjlGhFEIRfr8E4qSjm1U"},
{"content":{"body":"sure, i can accept that reframing","msgtype":"m.text"},"ts":1675189644661,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CaAOEYOFg2HHbHe-MIrqaCrbuRceVALPHPDW7nxKeGM"},
{"content":{"body":"My understanding is `cause` should be used by developers to specify the low-level \"cause\" of a high-level error. So `SuppressedError` is not the case.","format":"org.matrix.custom.html","formatted_body":"My understanding is <code>cause</code> should be used by developers to specify the low-level &quot;cause&quot; of a high-level error. So <code>SuppressedError</code> is not the case.","msgtype":"m.text"},"ts":1675189778549,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$cjgtbXMAiYJN_O6pDyh83ICVnZ02eS6cydUajGs2p_4"},
{"content":{"body":"shu: We don't use arguments.length, we generally use \"not present\" as in AOs.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: We don't use arguments.length, we generally use &quot;not present&quot; as in AOs.","msgtype":"m.text"},"ts":1675189935223,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2H6q_H6PVgYNnHhIcy8R-2SvUs6VEBzUYFaynkEGyPw"},
{"content":{"body":"no we actually check arguments length in some places","msgtype":"m.text"},"ts":1675189949763,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BMBgAFl-UB8dRlxIS-XDcQ5atNVxQnzq9Xs1yjYfYyQ"},
{"content":{"body":"like `Array#splice`","format":"org.matrix.custom.html","formatted_body":"like <code>Array#splice</code>","msgtype":"m.text"},"ts":1675189952140,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$n8H4PJR1iPMtsYjlBu9j0YSJo7M0B2Pxw4zp48xAQME"},
{"content":{"body":"it is cursed","msgtype":"m.text"},"ts":1675189954232,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2A3mj2wa_Q4FimrsvlpXAoRk7SazrDsDROPT358qGV4"},
{"content":{"body":"i hate it","msgtype":"m.text"},"ts":1675189955734,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$khKJrrWUqcJOP7HtPWa3x323sH2nrirqLOD_tldzGA8"},
{"content":{"body":"Ah. I was looking at reduce/reduceRight as an exemplar","msgtype":"m.text"},"ts":1675189985712,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CPigKBEkTxDgEryxB-SEQQ0Pb0riziW_LW88QFTJmvA"},
{"content":{"body":"tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","msgtype":"m.text"},"ts":1675190090068,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kEIH-vjS1J1127vVBOJLlhJQLJUxGoMFxaF4n8ugf4w"},
{"content":{"body":" * tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","m.new_content":{"body":"tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","msgtype":"m.text"},"m.relates_to":{"event_id":"$kEIH-vjS1J1127vVBOJLlhJQLJUxGoMFxaF4n8ugf4w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675190097980,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eryE6XL_jX_L_83xGX8ewlrQC8i934Z6DaRUan_7sJ8"},
{"content":{"body":"Seems a little odd to not support it silently. but maybe ok. Can't imagine people using this constructor directly very often","msgtype":"m.text"},"ts":1675190109327,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$vrB8iPLgfGCfMMp8j2Adq5jizn3kyGLMIrydOqpyF0Q"},
{"content":{"body":"yes the silent nop is weird","msgtype":"m.text"},"ts":1675190149253,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dRdPYmQCTKe-fbSj7nWk1OSCTr7Hwf69aNH_NII68To"},
{"content":{"body":"but also convinced it doesn't matter in practice","msgtype":"m.text"},"ts":1675190155461,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VMHieYF2dfFUQ_F35N3WuMQ5ABcN2cpyzWi9dPxx7AM"},
{"content":{"body":"Please could someone add a summary to the notes","msgtype":"m.text"},"ts":1675190169640,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY"},
{"content":{"body":"error conditions in error constructors are kind of painful","msgtype":"m.text"},"ts":1675190194407,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw"},
{"content":{"body":"Its the nature of the language. Even before `{ cause }` was supported anyone could pass that into an `Error` constructor without issue, they just wouldn't get the benefit.","format":"org.matrix.custom.html","formatted_body":"Its the nature of the language. Even before <code>{ cause }</code> was supported anyone could pass that into an <code>Error</code> constructor without issue, they just wouldn't get the benefit.","msgtype":"m.text"},"ts":1675190200526,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WdEnhBCr6Qx_v4brHlKukW0AiMdM-az1BtC-7a6AxeY"},
{"content":{"body":"I think I don't understand the result of removing InstallErrorCause, what's the difference?","msgtype":"m.text"},"ts":1675190208329,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$YCaDCx_Kll2sBXZju0le-CHLxSuQunsNk-g2-zkaGa0"},
{"content":{"body":"tru nuf","msgtype":"m.text"},"ts":1675190211344,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QsWSAJRvteD5Ixo2ju-rDHU_zxcykyOPhsJ_CqQsR3s"},
{"content":{"body":"> <@bakkot:matrix.org> error conditions in error constructors are kind of painful\n\nSee `new AggregateError()`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>error conditions in error constructors are kind of painful</blockquote></mx-reply>See <code>new AggregateError()</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw"}},"msgtype":"m.text"},"ts":1675190217426,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iS15HQNu91QMCR6b80K_PvRlS1xfzj-x2hF7_uUHOFM"},
{"content":{"body":"Only throws because `undefined` isn't iterable.","format":"org.matrix.custom.html","formatted_body":"Only throws because <code>undefined</code> isn't iterable.","msgtype":"m.text"},"ts":1675190229193,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$d_AcAK7gS4FmsQXvbjqb3irXlkl05Eushn19UKbqQZ8"},
{"content":{"body":"HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","msgtype":"m.text"},"ts":1675190263118,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8"},
{"content":{"body":"(compared to other native errors, most of which check for `undefined` for things like `message`).","format":"org.matrix.custom.html","formatted_body":"(compared to other native errors, most of which check for <code>undefined</code> for things like <code>message</code>).","msgtype":"m.text"},"ts":1675190265832,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JGpRJHuC5wVD7FLVyAcmvDZM26JQL8I-61wCtHciBdk"},
{"content":{"body":" * HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","m.new_content":{"body":"HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","msgtype":"m.text"},"m.relates_to":{"event_id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675190284595,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aXf1sksM893u84F3KRrWiZ1YL4KoPf1DZTw6f3ObzfI"},
{"content":{"body":"it's only relevant if you're attempting to construct a SuppressedError manually","msgtype":"m.text"},"ts":1675190299269,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$on4pfbCSdFD_lZdxQyIpE2Xaz4IHCLrDcmh6UPxKouQ"},
{"content":{"body":"> <@aclaymore:matrix.org> Please could someone add a summary to the notes\n\nbump...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>Please could someone add a summary to the notes</blockquote></mx-reply>bump...","m.relates_to":{"m.in_reply_to":{"event_id":"$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY"}},"msgtype":"m.text"},"ts":1675190310360,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8fJbT3rUXlatk8dd_ahp3KhyCvUE5huFzDFXHnMdbDs"},
{"content":{"body":"I primarily added `InstallErrorCause` to SuppressedError for consistency with other native errors. Not having it is not an issue to the proposal.","format":"org.matrix.custom.html","formatted_body":"I primarily added <code>InstallErrorCause</code> to SuppressedError for consistency with other native errors. Not having it is not an issue to the proposal.","msgtype":"m.text"},"ts":1675190318351,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$37kSC2XN7C4s_0mXyWnrSQZFCBO1oja7OmC-ZFj6o9w"},
{"content":{"body":"> <@bakkot:matrix.org> HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error\n\nok, it's a little weird to ignore `cause`, but i guess it's harmless?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error</blockquote></mx-reply>ok, it's a little weird to ignore <code>cause</code>, but i guess it's harmless?","m.relates_to":{"m.in_reply_to":{"event_id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8"}},"msgtype":"m.text"},"ts":1675190347779,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$VAzn5Q0C7Aqpf8kwm8tPX-p7VdECwQLF-gB--YewvPo"},
{"content":{"body":"Process question: Does the above change I mentioned in my update before the break need consensus?","format":"org.matrix.custom.html","formatted_body":"Process question: Does the above change I mentioned in my update before the break need consensus?","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$JbVrQBuZLRUsH9s7cj--iSNmFXMjUeOha7eJumajeyw"}}},"ts":1675190549745,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$8QJLbh0DE0hq3lBcf-64uKK9LznNnPtPe8eOAOOJzhE"},
{"content":{"body":"> <@rbuckton:matrix.org> I should have clarified re: https://github.com/tc39/proposal-explicit-resource-management/pull/140 whether it requires consensus. Given the algorithm changes in ForBodyEvaluation and CreatePerIterationEnvironment are essentially no-ops, removing them has no observable effect on runtime semantics.\n\n * Process question: Does the above change I mentioned in my update before the break need consensus?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JbVrQBuZLRUsH9s7cj--iSNmFXMjUeOha7eJumajeyw?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I should have clarified re: https://github.com/tc39/proposal-explicit-resource-management/pull/140 whether it requires consensus. Given the algorithm changes in ForBodyEvaluation and CreatePerIterationEnvironment are essentially no-ops, removing them has no observable effect on runtime semantics.</blockquote></mx-reply> * Process question: Does the above change I mentioned in my update before the break need consensus?","m.new_content":{"body":"Process question: Does the above change I mentioned in my update before the break need consensus?","format":"org.matrix.custom.html","formatted_body":"Process question: Does the above change I mentioned in my update before the break need consensus?","msgtype":"m.text"},"m.relates_to":{"event_id":"$8QJLbh0DE0hq3lBcf-64uKK9LznNnPtPe8eOAOOJzhE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675190560212,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$xGrR0pAiv0N7GLzsRQtKHf803dMXQEC7Yy_HeWYu7YU"},
{"content":{"body":"Oh, I forgot to mention we'll be cutting the next annual edition of the spec shortly","msgtype":"m.text"},"ts":1675190565224,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LK-fn47tRVo9CYa6LyxynSlQ0N_MXn0VNTipRYSfVD4"},
{"content":{"body":"oh yeah","msgtype":"m.text"},"ts":1675190584725,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bXlg7huUIcY8No0wQW8J8y3owoMkaYtgwdq16VlFpH4"},
{"content":{"body":"presumably after this week's stage 4s are merged","msgtype":"m.text"},"ts":1675190593588,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VEXxoQBtkwfSgMnp7Lsg09YDuoJlsbjbjzAMecoKVB0"},
{"content":{"body":"rbuckton: I generally think changes with no observable changes do not require consensus","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: I generally think changes with no observable changes do not require consensus","msgtype":"m.text"},"ts":1675190604639,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ILsxEdvLQI8hUfXgmItpns2lflK56p3GVYCogjCqTp4"},
{"content":{"body":"agree, if it's not observable then the only folks you may want to check with first are the editors :-)","msgtype":"m.text"},"ts":1675190643555,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XRjcu4BLrNyhSIa7iKgcrWeWhSR1_oZzDPBtJgGr23U"},
{"content":{"body":"other advantage of removing `cause` from SuppressedError - browsers don't have to figure out how to render it","format":"org.matrix.custom.html","formatted_body":"other advantage of removing <code>cause</code> from SuppressedError - browsers don't have to figure out how to render it","msgtype":"m.text"},"ts":1675190762658,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tVFG-Oe2v4IIpST_WoEJZwkcxksguXJnQ-isMxSSLwQ"},
{"content":{"body":"diverging paths bro","msgtype":"m.text"},"ts":1675190802117,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PvxW5IffDQsotRMJ4TaaO4ypiInEuuwWWQq8Pkpu2Sw"},
{"content":{"body":"a slider that has notches at each suppression point, that branches into a different slider","msgtype":"m.text"},"ts":1675190812763,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$P8gQdRgsQ1mUvQ8B8ePCU-s-tNqtzu1FmYhSA32vKqo"},
{"content":{"body":"ohhh maybe we did async generators wrong, I remember debating this around","msgtype":"m.text"},"ts":1675191106282,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ht3_kTIf5B3e84kT-W1QnQwfJgui9XHYLwm5KcZUAPM"},
{"content":{"body":"well, I think Kevin (zenparsing) had good reasons for all the details he chose","msgtype":"m.text"},"ts":1675191128192,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2w7Nq2a7gUBC9Rpm2MSkFfjBrrI3PlIIK84kxKe06HE"},
{"content":{"body":"ljharb: I created https://github.com/tc39/proposal-explicit-resource-management/issues/147 to track the consensus change to SuppressedError","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I created https://github.com/tc39/proposal-explicit-resource-management/issues/147 to track the consensus change to SuppressedError","msgtype":"m.text"},"ts":1675191185512,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZkYKMQk4U0EjEyIeLpxzX4p-_K79zWEQ5mPYOUAuujE"},
{"content":{"body":"rbuckton: ok, i'd already filed https://github.com/tc39/proposal-explicit-resource-management/pull/146 :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: ok, i'd already filed https://github.com/tc39/proposal-explicit-resource-management/pull/146 :-)","msgtype":"m.text"},"ts":1675191222021,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7ftQjR8KqgeANyidkjl4ho0CRIaJ_kANjQUhDk2zoR8"},
{"content":{"body":"Ah, I put together a PR as well. Thanks","msgtype":"m.text"},"ts":1675191286109,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zR5E4GVOgBN90BXhIkAn427u4KW08s1IpmmxBDWtpyw"},
{"content":{"body":"wait isn't it technically possible to do a reentrant .next() call with sync iterator helpers? (not sure what that would do but you can construct it)","msgtype":"m.text"},"ts":1675191320714,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PPbnhIOQjediizqUzyiR6bworwta_MScm56UTpc-cXE"},
{"content":{"body":"i definitely think it is","msgtype":"m.text"},"ts":1675191333027,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$65mr4YsVRYBW15efLD69GZL5bUqcAktiMXpuKk6J8AQ"},
{"content":{"body":"i was going to comment that but realized that wouldn't be the _consumer_ calling next twice, so it probably isn't relevant here","format":"org.matrix.custom.html","formatted_body":"i was going to comment that but realized that wouldn't be the <em>consumer</em> calling next twice, so it probably isn't relevant here","msgtype":"m.text"},"ts":1675191348843,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FCy2eferQBypuWfbpQSN5SmRutcdg3-V8w9lMxhTwR0"},
{"content":{"body":"it successfully nerdsniped me for a few minutes tho","msgtype":"m.text"},"ts":1675191365461,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rof3ewLKB29M2Y1hFxlXVEWwBVnKLQKzah2JUKBa2jo"},
{"content":{"body":"we could add an agenda section ahead of the other proposal-related items for demotions only","msgtype":"m.text"},"ts":1675192085015,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$pnMiLovJuTufplPhVQfggwRTywA6xTOP0FwSadoDlUs"},
{"content":{"body":"so that they are not only called out but also prioritised","msgtype":"m.text"},"ts":1675192101839,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hCeRoRVTt5pafUAfn1YrRjGmwuRT8Qgf06YsrIiZFjY"},
{"content":{"body":"why do we need a new section","msgtype":"m.text"},"ts":1675192158641,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$c4r-O1YTjq8tKNBWhc_OiSVaKgattukfoLUqIQBjKm8"},
{"content":{"body":"could just order it ahead of others by convention","msgtype":"m.text"},"ts":1675192168048,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Eu1wJEI54DWybVQYf6XxwLmpJjC9s2iWcfpgWNl0PS8"},
{"content":{"body":"as we order stuff by convention now","msgtype":"m.text"},"ts":1675192172135,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0HsL3kFY3DvUFE7JD1CYEU6a_qJs0KdKZwcSDZSBvGM"},
{"content":{"body":"i'd hope it's not so frequent that a section is needed ","msgtype":"m.text"},"ts":1675192179729,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GkuYLmN9JEaJo0CnvD5kB0N-wrv94b6jYO93z7wo4uA"},
{"content":{"body":"sure, we could change the ordering rules also","msgtype":"m.text"},"ts":1675192186545,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1nrJNYsfCWnFRYegXmZ-TsmmcRNdGvNVnhbWLv87cJQ"},
{"content":{"body":"they're just already complicated enough that they are often broken","msgtype":"m.text"},"ts":1675192199870,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xAZZZUYPjNStMw0TyXRkyS1Ph4JrLVg0G6JLZE21-sg"},
{"content":{"body":"> <@littledan:matrix.org> well, I think Kevin (zenparsing) had good reasons for all the details he chose\n\nas a historical note, one of the relevant details (`yield` being `yield await`) was decided in later and Kevin was in favor of a different option than we went with (in https://docs.google.com/presentation/d/1U6PivKbFO0YgoFlrYB82MtXf1ofCp1xSVOODOvranBM/edit#slide=id.g223fba4116_0_155 - he wanted option 2)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2w7Nq2a7gUBC9Rpm2MSkFfjBrrI3PlIIK84kxKe06HE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>well, I think Kevin (zenparsing) had good reasons for all the details he chose</blockquote></mx-reply>as a historical note, one of the relevant details (<code>yield</code> being <code>yield await</code>) was decided in later and Kevin was in favor of a different option than we went with (in https://docs.google.com/presentation/d/1U6PivKbFO0YgoFlrYB82MtXf1ofCp1xSVOODOvranBM/edit#slide=id.g223fba4116_0_155 - he wanted option 2)","m.relates_to":{"m.in_reply_to":{"event_id":"$2w7Nq2a7gUBC9Rpm2MSkFfjBrrI3PlIIK84kxKe06HE"}},"msgtype":"m.text"},"ts":1675192250616,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UVXIehRb-e9BNVmptJgYFzw7MgcVhRO9Z_hoRswX4EA"},
{"content":{"body":"yeah, I remember that discussion. I guess if we went the other way, then async generators would be more parallel by default.","msgtype":"m.text"},"ts":1675192526190,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Wwqb4xOsvd3Vqc--ErtlGXZK9llkc0RhK7hcSIqEDvM"},
{"content":{"body":"yeah, a little bit","msgtype":"m.text"},"ts":1675192535270,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hl5Z212Z1JIonTuVKmgg9IdTxnBE5pihRarJjOB8Dn8"},
{"content":{"body":"only if you `yield`'d a promise though","format":"org.matrix.custom.html","formatted_body":"only if you <code>yield</code>'d a promise though","msgtype":"m.text"},"ts":1675192541683,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PCnD0i02a5zHcpC2nsLyA989D_2c44L-0ctc2AmVbbY"},
{"content":{"body":"oh so it wouldn't quite be enough for the semantics you're proposing?","msgtype":"m.text"},"ts":1675192567730,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$108tZ_gRpynVBMpYOo99gLlzCA1qvClp7nbOw2NnlnQ"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1675192572496,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DMmzcLsokG9R4uK0Fxu9S64BovBB3_Zevb1Dtnq6AjY"},
{"content":{"body":"or, well, you _could_ get to the semantics I'm proposing, but you basically wouldn't be able to use the `await` syntax","format":"org.matrix.custom.html","formatted_body":"or, well, you <em>could</em> get to the semantics I'm proposing, but you basically wouldn't be able to use the <code>await</code> syntax","msgtype":"m.text"},"ts":1675192591661,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sRnbacOIU8qoHw5earzhBW89uScQHrQSMd_pqzKcZPU"},
{"content":{"body":"like in `map`, you wouldn't be able to do `for await (item of inner) yield fn(item)` because that would do at most one call to the underlying iterator at once (because `for await` is sequential)","format":"org.matrix.custom.html","formatted_body":"like in <code>map</code>, you wouldn't be able to do <code>for await (item of inner) yield fn(item)</code> because that would do at most one call to the underlying iterator at once (because <code>for await</code> is sequential)","msgtype":"m.text"},"ts":1675192659327,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$taa0JpyoqRp1sGbZZUpU-9Fc259U1h4Hcn5SK-JV8ig"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1675192709185,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$D4mueFNOISzFciaPAg_tvIV7yA_yJ81vz7UYDRMYqkw"},
{"content":{"body":"you'd have to do like `yield inner.next().then(p => p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value => { done: false, value}))`","format":"org.matrix.custom.html","formatted_body":"you'd have to do like <code>yield inner.next().then(p =&gt; p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value =&gt; { done: false, value}))</code>","msgtype":"m.text"},"ts":1675192722647,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hoXXOU3XsRo7VcBguqw_rerGVbuBQT4URuXyxoxmzu0"},
{"content":{"body":"which, like, not much point to having syntax at that point","msgtype":"m.text"},"ts":1675192735326,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lLbSndMJRscX2bkhVIw3rvz6l6kxg6eCdyxYC00Ju2E"},
{"content":{"body":"the iterator protocol is to scary to contemplate this","msgtype":"m.text"},"ts":1675192748715,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YFzus8xtf99KWl-RarscWMpd2XkgF-uzLoL5uls-z3I"},
{"content":{"body":" * you'd have to do like `yield inner.next().then(p => p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value => { done: false, value}))`","format":"org.matrix.custom.html","formatted_body":" * you'd have to do like <code>yield inner.next().then(p =&gt; p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value =&gt; { done: false, value}))</code>","m.new_content":{"body":"you'd have to do like `yield inner.next().then(p => p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value => { done: false, value}))`","format":"org.matrix.custom.html","formatted_body":"you'd have to do like <code>yield inner.next().then(p =&gt; p.done ? { done: true } : Promise.resolve(p.value).then(fn).then(value =&gt; { done: false, value}))</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$hoXXOU3XsRo7VcBguqw_rerGVbuBQT4URuXyxoxmzu0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675192748850,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1pavFczjoM075EVLbtr5rfMr2Ut5mkhABlQPe0YYJJ8"},
{"content":{"body":" * the iterator protocol is to scary to contemplate this","m.new_content":{"body":"the iterator protocol is to scary to contemplate this","msgtype":"m.text"},"m.relates_to":{"event_id":"$YFzus8xtf99KWl-RarscWMpd2XkgF-uzLoL5uls-z3I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675192753617,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wJ0XZLE0WUVDDgAE3edBQ7OZNFtpVipfnUcy7aFTNlk"},
{"content":{"body":"We definitely had conversations about another repo, I believe it exists.","msgtype":"m.text"},"ts":1675192821290,"senderName":"jasew","senderId":"@jasew:matrix.org","id":"$PVViVGxn-NpNmg0X38KMtiN6UkB6qAnkpkOfNUgrA34"},
{"content":{"body":"https://github.com/js-temporal/proposal-temporal-v2 I think","msgtype":"m.text"},"ts":1675192844517,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YkEi_HoJmc6mw46Zh1x_g9O_dWEOquUGLCvG36432IA"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1675192851027,"senderName":"jasew","senderId":"@jasew:matrix.org","id":"$slTI6hMKFakji4-BCDfZs4b-_asTyDia41rfRzN3EaE"},
{"content":{"body":"littledan: i didn't understand if philip was proposing _allowing_ truncation or _requiring_ truncation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i didn't understand if philip was proposing <em>allowing</em> truncation or <em>requiring</em> truncation","msgtype":"m.text"},"ts":1675193400791,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tIyOrcLa28Knl3VpGazgroFH61P0cogo6ZTHNJp-B68"},
{"content":{"body":"if requiring truncation to microsecond then there's no compat matrix, but that's still kinda weird?","msgtype":"m.text"},"ts":1675193414675,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ur5kDNvTVw2zAyH-Y5-9_DyFpxi35fNuEj7ePh7yI3A"},
{"content":{"body":"IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point.","msgtype":"m.text","org.matrix.msc1767.text":"IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point."},"ts":1675193582418,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$ss390LmbXwxZresa9hQyuo8CXikQJwjGiPGYDcMbZRc"},
{"content":{"body":" * IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point.","m.new_content":{"body":"IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point.","msgtype":"m.text","org.matrix.msc1767.text":"IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point."},"m.relates_to":{"event_id":"$ss390LmbXwxZresa9hQyuo8CXikQJwjGiPGYDcMbZRc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * IIUC, pdunkel's proposal was to underspecify the underlying data model and specifying the interface with nanoseconds so that implementations could change the data model in the future, it just being an implementation detail at that point."},"ts":1675193605728,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$59cDIMfbxHKieJ9Xug_6Hha7ioBSsWYnVyNErMr-a_U"},
{"content":{"body":"then that sounds like a compat matrix and i share dan's concerns","msgtype":"m.text"},"ts":1675193607758,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$F9GBVIr3DPtZlMKree1iensr1hy_Xxd7JE6LX41xWxk"},
{"content":{"body":"we remain unconvinced by the use cases","msgtype":"m.text"},"ts":1675193628939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lkUqSqwyRz3zX_9pWNcZXo-sRclENQGy6-o7GFPQap4"},
{"content":{"body":"for including precision higher than microseconds?","msgtype":"m.text","org.matrix.msc1767.text":"for including precision higher than microseconds?"},"ts":1675193656713,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$tr5xE705EY_xH605kshwCgXdWQ64pFJfMq8zBKNPvgk"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1675193665561,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yDsO2TvttcH3HnEaayqHY3g5o0SBTCUzKhT-NqxzKWY"},
{"content":{"body":"ryzokuken: longish discussion here https://github.com/tc39/proposal-temporal/issues/1700#issuecomment-896368225","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: longish discussion here https://github.com/tc39/proposal-temporal/issues/1700#issuecomment-896368225","msgtype":"m.text"},"ts":1675193753079,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MwwwRlvNHxkCJbfyxXf8QqHvs_akpsuRqI08A_SQmpE"},
{"content":{"body":"our previous position was \"maybe we can live with it\" but upon rediscussion and scoping out work for eventually shipping temporal, using int64s is something we really want","msgtype":"m.text"},"ts":1675193810690,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ItuWduDwhkOv4wpwZ8QSQO9Roh8RgtEeImRWlaK2v3Q"},
{"content":{"body":"> <@shuyuguo:matrix.org> littledan: i didn't understand if philip was proposing _allowing_ truncation or _requiring_ truncation\n\neither way it sounds like a bad idea?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tIyOrcLa28Knl3VpGazgroFH61P0cogo6ZTHNJp-B68?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i didn't understand if philip was proposing <em>allowing</em> truncation or <em>requiring</em> truncation</blockquote></mx-reply>either way it sounds like a bad idea?","m.relates_to":{"m.in_reply_to":{"event_id":"$tIyOrcLa28Knl3VpGazgroFH61P0cogo6ZTHNJp-B68"}},"msgtype":"m.text"},"ts":1675194257309,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TFbKHy9ozf39yid5OWjhrWpPOk5ZQY_xQ6GMqZHqiD0"},
{"content":{"body":"presumably requiring truncation would be to enable an evolution path which later doesn't require it (or requires non-truncation)","msgtype":"m.text"},"ts":1675194278372,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$blQitve53k0W-DJKQ6pdKfpbRIuuxUlkdpgJt6QbMLw"},
{"content":{"body":"i agree it's not a good idea","msgtype":"m.text"},"ts":1675194308977,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3Ydng9kJTmtoVUwMFZ2NpiLt3GvH62Q5O5dzbjkXRSg"},
{"content":{"body":"but i'm not gonna die on that hill if that's the compromise?","msgtype":"m.text"},"ts":1675194316963,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WOgop7O_w6LcxpGnTQLz4EQlRVAvwde1_iGNtyWW-sc"},
{"content":{"body":"how could ID be an initialism? what is the D?","msgtype":"m.text"},"ts":1675194734158,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Hf5hNMjoNtZl6_gPMIvEcd82tS9il_ortBmdMVfmE0g"},
{"content":{"body":"identity document","msgtype":"m.text"},"ts":1675194761926,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9suAkNyDDEUDbpVa0UDL8XjwgBXdEy2u7t3XYRLrlBw"},
{"content":{"body":"wow, TIL","msgtype":"m.text"},"ts":1675194772097,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kMZ81Jtpe8PZZlza8d4AxuC86bW42d8ShL90-vHvHVk"},
{"content":{"body":"but it's also that outside of programming, it is always `id` or `ID` and never `Id` (which is the freudian concept when at the start of a sentence)","format":"org.matrix.custom.html","formatted_body":"but it's also that outside of programming, it is always <code>id</code> or <code>ID</code> and never <code>Id</code> (which is the freudian concept when at the start of a sentence)","msgtype":"m.text"},"ts":1675194789312,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vF98GGfJdrGb5r9JzdF1dvT6RCE_ak0RPiGRKqPS0X0"},
{"content":{"body":"> <@shuyuguo:matrix.org> but i'm not gonna die on that hill if that's the compromise?\n\nsure, me neither","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$WOgop7O_w6LcxpGnTQLz4EQlRVAvwde1_iGNtyWW-sc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>but i&#39;m not gonna die on that hill if that&#39;s the compromise?</blockquote></mx-reply>sure, me neither","m.relates_to":{"m.in_reply_to":{"event_id":"$WOgop7O_w6LcxpGnTQLz4EQlRVAvwde1_iGNtyWW-sc"}},"msgtype":"m.text"},"ts":1675194824035,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AgOcAcOaM9II_CkTtp1VpVHC1sKCO-mDQ17Ga-hG-78"},
{"content":{"body":"in my experience `getElementById` is one of the most \"gross\" naming conventions i've heard folks complain about on the web behind XMLHttpRequest and \"referer\"","format":"org.matrix.custom.html","formatted_body":"in my experience <code>getElementById</code> is one of the most &quot;gross&quot; naming conventions i've heard folks complain about on the web behind XMLHttpRequest and &quot;referer&quot;","msgtype":"m.text"},"ts":1675194837245,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VOgf2jRrSseXBl2WcawFOGIvrab93YSsEggG7qOFGQ0"},
{"content":{"body":"i like Id","msgtype":"m.text"},"ts":1675194866878,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hfR2euMJNhKOrFw-0shUB1FfPDRkYgl51zAjBAWs7JE"},
{"content":{"body":"Id is consistent with DOM naming which is an environment this will be used. ","format":"org.matrix.custom.html","formatted_body":"Id is consistent with DOM naming which is an environment this will be used.","msgtype":"m.text"},"ts":1675194899520,"senderName":"jasew","senderId":"@jasew:matrix.org","id":"$ORQqgqoNlkmISx--iU2ssgnU48QrG_Lx8CELkS5lEZM"},
{"content":{"body":"afaik it's just the single function, unless there's more i missed","msgtype":"m.text"},"ts":1675194915278,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$id7hjjMUwSlgk-y65l8D7qZtQ-wnZsRakm1rUxWzd9k"},
{"content":{"body":"and nowadays folks use querySelector instead of the older getElementBy* functions","msgtype":"m.text"},"ts":1675194926690,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0-kpWXVgXOS2ixphUgd5pFFTjdtZt4lqF7HZis8kVxo"},
{"content":{"body":"IIRC, \"referer\" isn't a naming convention, per se, but a typo we are stuck with.","msgtype":"m.text"},"ts":1675194936154,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$i32BgOm9GpHjFQl2zR-rmUBP8vwZzlQJLcS7fUWasGw"},
{"content":{"body":"I'd always assumed it was an abbreviation for \"Id-entity\", not a titlecasing of \"ID\"","msgtype":"m.text"},"ts":1675194943438,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T_1MVQEjVbpt3qT25_Bzalx2rlx-MNv5FiHF-lrfYlM"},
{"content":{"body":" * I'd always assumed it was an abbreviation for \"Id-entity\", not a titlecasing of \"ID\"","m.new_content":{"body":"I'd always assumed it was an abbreviation for \"Id-entity\", not a titlecasing of \"ID\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$T_1MVQEjVbpt3qT25_Bzalx2rlx-MNv5FiHF-lrfYlM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675194961034,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rp2KcODPQ7svT-gY3APDKYzDoFFIDjj4HwSF9mkNjZk"},
{"content":{"body":"Michael Ficarra: I think it is","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: I think it is","msgtype":"m.text"},"ts":1675194968477,"senderName":"jasew","senderId":"@jasew:matrix.org","id":"$nculIQS4JWl9C11qdOQNO166-gL6J3Gx0s8_HVhKsfs"},
{"content":{"body":"it's also been part of the airbnb style guide for a long time (not a part i authored) and nobody's complained about the requirement, ftr https://github.com/airbnb/javascript#naming--Acronyms-and-Initialisms","msgtype":"m.text"},"ts":1675195098116,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$flBDsRaHaqVWojFbWC2FdG-42UZnEz7LNe23A8rccTU"},
{"content":{"body":"ljharb: that doesn't cover abbreviations like \"Id\" though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: that doesn't cover abbreviations like &quot;Id&quot; though","msgtype":"m.text"},"ts":1675195172436,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5y8JAxUfgYwdQaRYFQJ6hwSqwRPTRNXCgiuG4Mn4c74"},
{"content":{"body":"fair point, not even in the examples","msgtype":"m.text"},"ts":1675195190922,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TTWNeY3D7eVbQ_hicMqR0cSTEbWPf7fNRtUEdkj6fLc"},
{"content":{"body":"i don't think it's really an abbreviation at this point tho, any more than \"email\" is.","msgtype":"m.text"},"ts":1675195204928,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vm_sxeemknNu-N-XD_4NGyu0Ej_YTZVptO4B_5zLJaQ"},
{"content":{"body":"I mean, are you arguing that it's its own word now? Because that would have the same capitalisation","msgtype":"m.text"},"ts":1675195241683,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ig1xgOc1E61kRlGsUapw4rr7p62Pl6gS90FD36YO18k"},
{"content":{"body":"at any rate i feel very strongly against \"Id\" but \"identifier\" or \"code\" seem fine to me","msgtype":"m.text"},"ts":1675195249638,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$x_85lJG5wFEm96lPF7QWcYfd78p3Afn1ZztvchdyMaw"},
{"content":{"body":"sorry for jumping in outside of the queue","msgtype":"m.text"},"ts":1675195298803,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$w-degp3evrsNoXmuFqODlPdrQ4oytbYFHrsej6zoVy8"},
{"content":{"body":"Chris de Almeida: For the timezoneId/calendarId issue, see this thread https://github.com/tc39/proposal-temporal/issues/1808#issuecomment-1373987231","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: For the timezoneId/calendarId issue, see this thread https://github.com/tc39/proposal-temporal/issues/1808#issuecomment-1373987231","msgtype":"m.text"},"ts":1675195458889,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SQt2ZvVLxqiK1MO3ngROOGljCaNivKa9hLvKg7JSBsI"},
{"content":{"body":"(not sure what the most representative comment is, but scroll up and down from there)","msgtype":"m.text"},"ts":1675195475567,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$K_xJ2wluagikuXSf7o33m3q8h8q1F5xa5YHAwIOQqnI"},
{"content":{"body":"> <@ljharb:matrix.org> it's also been part of the airbnb style guide for a long time (not a part i authored) and nobody's complained about the requirement, ftr https://github.com/airbnb/javascript#naming--Acronyms-and-Initialisms\n\nmore relevant precedent I think is the w3c rules: https://w3ctag.github.io/design-principles/#casing-rules","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$flBDsRaHaqVWojFbWC2FdG-42UZnEz7LNe23A8rccTU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>it&#39;s also been part of the airbnb style guide for a long time (not a part i authored) and nobody&#39;s complained about the requirement, ftr https://github.com/airbnb/javascript#naming--Acronyms-and-Initialisms</blockquote></mx-reply>more relevant precedent I think is the w3c rules: https://w3ctag.github.io/design-principles/#casing-rules","m.relates_to":{"m.in_reply_to":{"event_id":"$flBDsRaHaqVWojFbWC2FdG-42UZnEz7LNe23A8rccTU"}},"msgtype":"m.text"},"ts":1675195610197,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6nJmMiruAFrpRzFx3z9FRJM2ivTiIh-ViEo5XLX6n7k"},
{"content":{"body":"Given the immediate context of \"timeZoneId\", I see the capitalization of \"Id\" as a result of using camelCase, and therefore completely fine.","msgtype":"m.text"},"ts":1675195635478,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$id5YUpKOJec9bSJ_Eq9QSh4S66P2rHerNiBJ2DSDMbM"},
{"content":{"body":"\"Initialisms in APIs:\tAll caps, except when the first word in a method or property, for example HTMLCollection, innerHTML, bgColor\"","msgtype":"m.text"},"ts":1675195641934,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$H9RY9zUJ8piiVYWeOLfUOmy8336H85qdDA6oZmBa7Ec"},
{"content":{"body":"`timeZoneId` is also something i dislike.","format":"org.matrix.custom.html","formatted_body":"<code>timeZoneId</code> is also something i dislike.","msgtype":"m.text"},"ts":1675195651890,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xQS7AOvR6iF9sX9sAzDYUmCsVBfBYnqsU7xPWVmHpTw"},
{"content":{"body":"but \"Id\" is not an initialism so","msgtype":"m.text"},"ts":1675195652930,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$V554j5JEx_Px69i44qQ7RmF3ns-fmDNF6ktkNP6FLEM"},
{"content":{"body":"and yes, but we're not bound by the w3c principles, and in this case i think they result in less clear names","msgtype":"m.text"},"ts":1675195668709,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_AjVu63aAj3ZHeFy1qzl5LRwWao9AbPEbj-JUkUDw10"},
{"content":{"body":"it specifically mentions `Id`","format":"org.matrix.custom.html","formatted_body":"it specifically mentions <code>Id</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it specifically mentions `Id`","mimetype":"text/plain"},{"body":"it specifically mentions <code>Id</code>","mimetype":"text/html"}]},"ts":1675195675035,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$EnjFeNsR9fgVbI1oqWQ79fyMEXYrAOg7h-2ycj6k-OA"},
{"content":{"body":"yes, i know w3c does","msgtype":"m.text"},"ts":1675195681979,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8rUpNLpZ7r-pu6tcel2MWN4q2VyiwEAOVIeJtedi3LU"},
{"content":{"body":"it doesn't change my opinion","msgtype":"m.text"},"ts":1675195687614,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$J7c9znlRWMOf1CMmkzV86FjbahBb0O0AklAp2No9yZs"},
{"content":{"body":"apologies, I just found out about this doc and was just exclaiming","msgtype":"m.text","org.matrix.msc1767.text":"apologies, I just found out about this doc and was just exclaiming"},"ts":1675195706532,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$UJGkoSr1TLYP_UkJz5jj_OoYNv4fJHveEBBQrJUe-_Y"},
{"content":{"body":"while I do not exactly consider myself _bound_ by these rules, I am not going to want to deviate them without very, very strong reason","format":"org.matrix.custom.html","formatted_body":"while I do not exactly consider myself <em>bound</em> by these rules, I am not going to want to deviate them without very, very strong reason","msgtype":"m.text"},"ts":1675195740151,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MidFFQBoY57dTiSPjEhF25kyZ5sWT1cYTbShgc0zGq4"},
{"content":{"body":"sure, a number of folks seem unwilling to provide consensus for `ID`. that's fine, but i'm not willing to provide it for `Id`.","format":"org.matrix.custom.html","formatted_body":"sure, a number of folks seem unwilling to provide consensus for <code>ID</code>. that's fine, but i'm not willing to provide it for <code>Id</code>.","msgtype":"m.text"},"ts":1675195774119,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SeokbIbwJxj0ZXVG8gp-E62dlXb4VznCJNsNiyptOj0"},
{"content":{"body":"but `identifier` and `code` seem perfectly workable","format":"org.matrix.custom.html","formatted_body":"but <code>identifier</code> and <code>code</code> seem perfectly workable","msgtype":"m.text"},"ts":1675195786521,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Sr7L4CMSggUT00dnwj94p5IKzQG3WMp292XeebBRPG0"},
{"content":{"body":"isn't that what they're named now","msgtype":"m.text"},"ts":1675195787421,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-oAQfRhuFVBrJZeDJDg7WvAM-DHqevl5ExfqwumaGpg"},
{"content":{"body":"either way, it's definitely a document that affects us more strongly than everything else I see so far","msgtype":"m.text","org.matrix.msc1767.text":"either way, it's definitely a document that affects us more strongly than everything else I see so far"},"ts":1675195790741,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$83P0Bh9F_pzF2Ra3m8JbOG9LNc5Ly8BalqRdOR3HnJw"},
{"content":{"body":"`Id` i mean","format":"org.matrix.custom.html","formatted_body":"<code>Id</code> i mean","msgtype":"m.text"},"ts":1675195792316,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WJ2LUG2XgKWYkjWKfho3TfES57O16LNpJH-a4glU9FQ"},
{"content":{"body":"the accessor is `.id` and the property is `.calendar`, and one proposal changes that to `.calendarId`. if there's already `.timeZoneId` then i missed it, and i can't prevent that one, obviously.","format":"org.matrix.custom.html","formatted_body":"the accessor is <code>.id</code> and the property is <code>.calendar</code>, and one proposal changes that to <code>.calendarId</code>. if there's already <code>.timeZoneId</code> then i missed it, and i can't prevent that one, obviously.","msgtype":"m.text"},"ts":1675195835287,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iO7uUxXlEDFuuIr6bPxZKOMFEXZOmoT5bLsPJstb8hY"},
{"content":{"body":"i don't hear an argument from you jordan","msgtype":"m.text"},"ts":1675195863455,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m_TdLZbiAiDmvQ15TYnWY9loh0CvDkd1fW6uy5Ydjlg"},
{"content":{"body":"i hear \"i don't like it\"","msgtype":"m.text"},"ts":1675195867590,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CXUF6LiGmnJjWjbPV4WXI_o5YYNewzqFyLSi6zbA1s4"},
{"content":{"body":"i find it confusing, and decades of complaints from random devs on irc/slack/etc complaining about the capitalization of the three things i mentioned reinforces my belief","msgtype":"m.text"},"ts":1675195908273,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$orUC-g600-WKcurpGyBinAURSRIEnv6J0G5LQz1R-VQ"},
{"content":{"body":"if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","format":"org.matrix.custom.html","formatted_body":"if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","mimetype":"text/plain"},{"body":"if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","mimetype":"text/html"}]},"ts":1675195910792,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$-hxgB4FZ-W-CfnDmEb4zyXebvxySLQR9_5Rgr3dh37A"},
{"content":{"body":" * if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","format":"org.matrix.custom.html","formatted_body":" * if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","m.new_content":{"body":"if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","format":"org.matrix.custom.html","formatted_body":"if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","mimetype":"text/plain"},{"body":"if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$-hxgB4FZ-W-CfnDmEb4zyXebvxySLQR9_5Rgr3dh37A","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * if `timeZoneId` already exists, that's an even compelling reason... I'd be against anything _other than_ `calendarId` in that case for internal consistency.","mimetype":"text/plain"},{"body":" * if <code>timeZoneId</code> already exists, that's an even compelling reason... I'd be against anything <em>other than</em> <code>calendarId</code> in that case for internal consistency.","mimetype":"text/html"}]},"ts":1675195916812,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$unNahMGyUppjG_gAbPklj-LWn91hOa73ctSz97LCZBA"},
{"content":{"body":"unless we also changed `timeZoneId` to match whatever else is chosen","format":"org.matrix.custom.html","formatted_body":"unless we also changed <code>timeZoneId</code> to match whatever else is chosen","msgtype":"m.text"},"ts":1675195933496,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bQGHKp806ZKrfw0ABRywD5Ksc3Uc10stQxzqLPkinHY"},
{"content":{"body":"> <@ljharb:matrix.org> i find it confusing, and decades of complaints from random devs on irc/slack/etc complaining about the capitalization of the three things i mentioned reinforces my belief\n\nis that really a problem lately with modern tooling/autocomplete?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$orUC-g600-WKcurpGyBinAURSRIEnv6J0G5LQz1R-VQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i find it confusing, and decades of complaints from random devs on irc/slack/etc complaining about the capitalization of the three things i mentioned reinforces my belief</blockquote></mx-reply>is that really a problem lately with modern tooling/autocomplete?","m.relates_to":{"m.in_reply_to":{"event_id":"$orUC-g600-WKcurpGyBinAURSRIEnv6J0G5LQz1R-VQ"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> i find it confusing, and decades of complaints from random devs on irc/slack/etc complaining about the capitalization of the three things i mentioned reinforces my belief\n\nis that really a problem lately with modern tooling/autocomplete?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$orUC-g600-WKcurpGyBinAURSRIEnv6J0G5LQz1R-VQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i find it confusing, and decades of complaints from random devs on irc/slack/etc complaining about the capitalization of the three things i mentioned reinforces my belief</blockquote></mx-reply>is that really a problem lately with modern tooling/autocomplete?","mimetype":"text/html"}]},"ts":1675195981422,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rH3zqvYpydoiS0IlMGyvpC2mLohlxOkNBxaY-ytKYcI"},
{"content":{"body":"yes, it's about readability","msgtype":"m.text"},"ts":1675196031154,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jH_u-WGT0vSN7BxYzYsam5kyG3YAwLrs1wzBGpJNkbE"},
{"content":{"body":"I really think `id` is the right name here","format":"org.matrix.custom.html","formatted_body":"I really think <code>id</code> is the right name here","msgtype":"m.text"},"ts":1675196063947,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fd42cBEu_u_sA2lA8AUmoJeq8y9XJCSCV4UdSavhsXw"},
{"content":{"body":"or `calendarId` etc","format":"org.matrix.custom.html","formatted_body":"or <code>calendarId</code> etc","msgtype":"m.text"},"ts":1675196073961,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1-r0J2u9DF9Xd3rWuuITTO5lwRgoJc-O8q0dV1NugUg"},
{"content":{"body":" * or `calendarId` etc","format":"org.matrix.custom.html","formatted_body":" * or <code>calendarId</code> etc","m.new_content":{"body":"or `calendarId` etc","format":"org.matrix.custom.html","formatted_body":"or <code>calendarId</code> etc","msgtype":"m.text"},"m.relates_to":{"event_id":"$1-r0J2u9DF9Xd3rWuuITTO5lwRgoJc-O8q0dV1NugUg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675196077333,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m-t6DV_lLZgOKI94u7zik8C71XnybakvlqgBNo0Aq5M"},
{"content":{"body":"I concur with `Id`. `Id` is not an initialism, its an abbreviation.","format":"org.matrix.custom.html","formatted_body":"I concur with <code>Id</code>. <code>Id</code> is not an initialism, its an abbreviation.","msgtype":"m.text"},"ts":1675196144126,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$NqYHPXMvQEQym16CyTjq3cWewYZ4iU0sxOtwYyRNiEo"},
{"content":{"body":"`ID` is like using `STATS` rather than `Stats` as the abbreviation for \"Statistics\"","format":"org.matrix.custom.html","formatted_body":"<code>ID</code> is like using <code>STATS</code> rather than <code>Stats</code> as the abbreviation for &quot;Statistics&quot;","msgtype":"m.text"},"ts":1675196251383,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-Mh89njv6IJ3LCtLFvugcYRoj6hdWyXrbzx7V9b-x18"},
{"content":{"body":"we need a reasonable argument for lone objections, i.e. \"i understand but disagree\"","msgtype":"m.text"},"ts":1675196361719,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$eu4Rfpp00lvg1-AFAyXtS8VpLfYpKNP09qvnkm23Yj8"},
{"content":{"body":"AFAICT _no other delegate_ considers jordan's objection here reasonable","format":"org.matrix.custom.html","formatted_body":"AFAICT <em>no other delegate</em> considers jordan's objection here reasonable","msgtype":"m.text"},"ts":1675196376645,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Y86E9FgnFOHMLI7m_nhGUpbVraNwf__bJdMZKvax9yA"},
{"content":{"body":"my argument is already stated: i think \"Id\" is confusing and i would prefer to avoid confusion","msgtype":"m.text"},"ts":1675196388054,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9cktrWvR9uw-C_NQq1jl6-mHe4Xx08wfo3NWSq8k7Y0"},
{"content":{"body":"so i really do not understand what more deliberation can get us","msgtype":"m.text"},"ts":1675196388811,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pUpp-Q8HVV5rKc-_VwT7BGZSzF0YOzAqOlBCP6haLm0"},
{"content":{"body":"that is not an argument!","msgtype":"m.text"},"ts":1675196395724,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JOshsI8QTNKLRq1wQyk-Rg4opCXTnppcsLM7iAdssIA"},
{"content":{"body":"that is \"i don't like it\"","msgtype":"m.text"},"ts":1675196401034,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jqQeMNFDgKl6gsYxlnvaheTykHuJaq5NNRUEISk781A"},
{"content":{"body":"Though I think Jordan was advocating for using `calendarIdentifier` and `timeZoneIdentifier` vs choosing `Id` or `ID`.","format":"org.matrix.custom.html","formatted_body":"Though I think Jordan was advocating for using <code>calendarIdentifier</code> and <code>timeZoneIdentifier</code> vs choosing <code>Id</code> or <code>ID</code>.","msgtype":"m.text"},"ts":1675196402454,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$XvNdlSUHhz9i6U43s47RWJVOUZ2rwQMVBtbFM_daTNU"},
{"content":{"body":"and sure we make decisions based on \"i don't like it\" all the time","msgtype":"m.text"},"ts":1675196410523,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MZ2i-7BeoEvic6Gm7n8z2gbSY4nlcUNEqxrp1KreIR0"},
{"content":{"body":"but this is so very clearly onesided","msgtype":"m.text"},"ts":1675196417934,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$P7FNN22N4PdPfoGQ7WId5RZBAjsv0u9bcNXw_1O1r2g"},
{"content":{"body":"and you are wasting time","msgtype":"m.text"},"ts":1675196419675,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4JWNasxPOOCj4ap32UtBPmg3CpZ1jbmgahBNCknresg"},
{"content":{"body":"`calendarId` is fine, please let's not waste more committee time on a capitalization debate","format":"org.matrix.custom.html","formatted_body":"<code>calendarId</code> is fine, please let's not waste more committee time on a capitalization debate","msgtype":"m.text"},"ts":1675196426896,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Wah_wOItq3XLO1TzudjsYBGBW_z5HRZOMmN75O36RWg"},
{"content":{"body":"which is, unfortunately, just another color to paint the bikeshed :(","msgtype":"m.text"},"ts":1675196428309,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ooNUjOI1Be-IiV21tEglmcQZUwitMJ0qyWcLNumCMXU"},
{"content":{"body":"This is a very poor reason to be a lone blocker","msgtype":"m.text"},"ts":1675196445670,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$_4Zh-tbXWr2phkk7IBD9fMCirIBPhUesAEkHB6XHLMs"},
{"content":{"body":"css should have been colour","m.relates_to":{"event_id":"$ooNUjOI1Be-IiV21tEglmcQZUwitMJ0qyWcLNumCMXU","is_falling_back":true,"m.in_reply_to":{"event_id":"$ooNUjOI1Be-IiV21tEglmcQZUwitMJ0qyWcLNumCMXU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675196450571,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8cjjirQbgFBPnrf42ocuVDC4IJChzuIVoaql53rNZjM"},
{"content":{"body":"i have a concrete next step here as well","msgtype":"m.text"},"ts":1675196485515,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XrC1gKaUS_1oxJUtUdlwGtwhDx8wZl2jJlEJfWtplTs"},
{"content":{"body":"so as to break the logjam: i remain convinced `calendarId` is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a _reasonable_ counterargument is given)","format":"org.matrix.custom.html","formatted_body":"so as to break the logjam: i remain convinced <code>calendarId</code> is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a <em>reasonable</em> counterargument is given)","msgtype":"m.text"},"ts":1675196556904,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t7-ejXD2PXRpEu6FduRwGuyPQ1-RkTFaal-NcZorMU0"},
{"content":{"body":" * so as to break the logjam: i remain convinced `calendarId` is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a _reasonable_ counterargument is given)","format":"org.matrix.custom.html","formatted_body":" * so as to break the logjam: i remain convinced <code>calendarId</code> is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a <em>reasonable</em> counterargument is given)","m.new_content":{"body":"so as to break the logjam: i remain convinced `calendarId` is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a _reasonable_ counterargument is given)","format":"org.matrix.custom.html","formatted_body":"so as to break the logjam: i remain convinced <code>calendarId</code> is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a <em>reasonable</em> counterargument is given)","msgtype":"m.text"},"m.relates_to":{"event_id":"$t7-ejXD2PXRpEu6FduRwGuyPQ1-RkTFaal-NcZorMU0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675196562941,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$H8aO5Yp2JZaWNWonYyPH-ld1hfrnWxDDWYtXzTHkWEg"},
{"content":{"body":"I hate `Id` and everyone that uses it is WRONG, but I've long since put down that sword and use it under duress","format":"org.matrix.custom.html","formatted_body":"I hate <code>Id</code> and everyone that uses it is WRONG, but I've long since put down that sword and use it under duress","msgtype":"m.text"},"ts":1675196661184,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$PcVYVb2qm_Nm5BKJdkuLwfx9CuquvBwlgtb5rZ9lM04"},
{"content":{"body":"calendarID > calendarId > calendarCode\nso if we can't have the first, then go to the 2nd","msgtype":"m.text"},"ts":1675196755032,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$AZ4z8WrSVILRQzHoYNYja07oxJ1q7Eh-w5Kyl5kh9LE"},
{"content":{"body":"In English, `ID` (as in, \"show me your ID\") is an initialism, not an abbreviation, for \"Identity Document\", https://en.wikipedia.org/wiki/Identity_document, if that matters.","format":"org.matrix.custom.html","formatted_body":"In English, <code>ID</code> (as in, &quot;show me your ID&quot;) is an initialism, not an abbreviation, for &quot;Identity Document&quot;, https://en.wikipedia.org/wiki/Identity_document, if that matters.","msgtype":"m.text"},"ts":1675196769137,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cUdax_H55N_KPS5bBCDQOwQxuFqQmUf5zwxbi-9HuYE"},
{"content":{"body":"> <@shuyuguo:matrix.org> so as to break the logjam: i remain convinced `calendarId` is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a _reasonable_ counterargument is given)\n\nso we’re just abandoning pretense of equality between browsers and non-browser participants of tc39?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24t7-ejXD2PXRpEu6FduRwGuyPQ1-RkTFaal-NcZorMU0\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>so as to break the logjam: i remain convinced <code>calendarId</code> is the right name, and i will ship with that name, as a willful violation if need be, (unless, of course, a <em>reasonable</em> counterargument is given)</blockquote></mx-reply>so we’re just abandoning pretense of equality between browsers and non-browser participants of tc39?","m.relates_to":{"m.in_reply_to":{"event_id":"$t7-ejXD2PXRpEu6FduRwGuyPQ1-RkTFaal-NcZorMU0"}},"msgtype":"m.text"},"ts":1675196785249,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Yuep_zYCtwWGzi-3SPMTbcrj2y2HazjRz0bjUC8bS-Y"},
{"content":{"body":"> <@rbuckton:matrix.org> In English, `ID` (as in, \"show me your ID\") is an initialism, not an abbreviation, for \"Identity Document\", https://en.wikipedia.org/wiki/Identity_document, if that matters.\n\nAnd Id is the abbreviation for Identifier or Identity","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24cUdax_H55N_KPS5bBCDQOwQxuFqQmUf5zwxbi-9HuYE\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>In English, <code>ID</code> (as in, &quot;show me your ID&quot;) is an initialism, not an abbreviation, for &quot;Identity Document&quot;, https://en.wikipedia.org/wiki/Identity_document, if that matters.</blockquote></mx-reply>And Id is the abbreviation for Identifier or Identity","m.relates_to":{"m.in_reply_to":{"event_id":"$cUdax_H55N_KPS5bBCDQOwQxuFqQmUf5zwxbi-9HuYE"}},"msgtype":"m.text"},"ts":1675196804432,"senderName":"pipobscure","senderId":"@pipobscure:matrix.org","id":"$e4aNvW6LpgVrYf0bFo5drV2UeMCWRjQhYDeK2SKBrB8"},
{"content":{"body":"It’s also the dual of ego.","msgtype":"m.text"},"ts":1675196847447,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$is19Uvy1pY0Cl7spWNmVrMvInwNEPVHJasIz1gqilPo"},
{"content":{"body":"Precisely. Though `id` is a psychological term. ","format":"org.matrix.custom.html","formatted_body":"Precisely. Though <code>id</code> is a psychological term.","msgtype":"m.text"},"ts":1675196847723,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Judx87hlxAq6ktHOjCmXiMkMi10CHDGzLOcfhXoKl54"},
{"content":{"body":"ljharb: not at all. i believe _some_ action is needed than continuing bikeshedding on the name","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: not at all. i believe <em>some</em> action is needed than continuing bikeshedding on the name","msgtype":"m.text"},"ts":1675196959940,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QkzSi04zefGz5n4jKhBlIJ6IOQGz9YvkRPxR_1fIpRA"},
{"content":{"body":"Unfortunately, `ID` vs `Id` is a very long-running debate. I lean on the side of `ID` makes sense if you're using SCREAMING_SNAKE_CASE (e.g., for constant values), because you are capitalizing every letter, while `Id` should be what you use for camelCase/PascalCase identifiers.","format":"org.matrix.custom.html","formatted_body":"Unfortunately, <code>ID</code> vs <code>Id</code> is a very long-running debate. I lean on the side of <code>ID</code> makes sense if you're using SCREAMING_SNAKE_CASE (e.g., for constant values), because you are capitalizing every letter, while <code>Id</code> should be what you use for camelCase/PascalCase identifiers.","msgtype":"m.text"},"ts":1675196977858,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$r5cU613vOtSMhlcxdx_nXQF9GtcIiZzyjEKZX_d4oeA"},
{"content":{"body":"and a perfectly reasonable option is “identifier or code”. Let’s just do one of those - i don’t want to argue about it either, but that doesn’t mean i want to concede.","msgtype":"m.text"},"ts":1675197001144,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$L_C_1-ItJUpb4Gy_bSQSJygoYNoDqJ4e8l-OOWPgCMI"},
{"content":{"body":"and if you think my trying to make progress on a name bikeshed is equivalent to discarding all non-browser participants' opinions, i don't know what to tell you","msgtype":"m.text"},"ts":1675197005695,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BnUTEFO09HE8BAE2C1j_m7wG9lpo6wY0xtVLAa3uWUQ"},
{"content":{"body":"i think that any claim of intending to ship a willful violation that disregards consensus is a dangerous precedent to set, and isn't worth buying a few weeks or months of a faster decision.","msgtype":"m.text"},"ts":1675197065563,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$etiGtQu6pw3cvIGsa8joO3_Sy9VS4erPrD6Ig3uLt_w"},
{"content":{"body":"does it matter that there's already precedent for `Id` in the spec?","format":"org.matrix.custom.html","formatted_body":"does it matter that there's already precedent for <code>Id</code> in the spec?","msgtype":"m.text"},"ts":1675197165303,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$bxV_Sk0oBv71tV6m2kPBL_PpgNNBMx_PlvSdvYpZ-xQ"},
{"content":{"body":"I would say yes. What is the precedent?","format":"org.matrix.custom.html","formatted_body":"I would say yes. What is the precedent?","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$bxV_Sk0oBv71tV6m2kPBL_PpgNNBMx_PlvSdvYpZ-xQ"}}},"ts":1675197192181,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Yt5ezvGd7p6-N3f58XkB_XrWpn_tehkt8allu7duQlo"},
{"content":{"body":"> <@softwarechris:matrix.org> does it matter that there's already precedent for `Id` in the spec?\n\n * I would say yes. What is the precedent?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bxV_Sk0oBv71tV6m2kPBL_PpgNNBMx_PlvSdvYpZ-xQ?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>does it matter that there's already precedent for <code>Id</code> in the spec?</blockquote></mx-reply> * I would say yes. What is the precedent?","m.new_content":{"body":"I would say yes. What is the precedent?","format":"org.matrix.custom.html","formatted_body":"I would say yes. What is the precedent?","msgtype":"m.text"},"m.relates_to":{"event_id":"$Yt5ezvGd7p6-N3f58XkB_XrWpn_tehkt8allu7duQlo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675197193842,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jzBl5fzZVeH6TrFGCNqS0x68LVSwAWE_aOBGD6aRQDY"},
{"content":{"body":"I didn't think there was any precedent in ECMA-262 or ECMA-402","msgtype":"m.text","org.matrix.msc1767.text":"I didn't think there was any precedent in ECMA-262 or ECMA-402"},"ts":1675197245487,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$8Ot4I1p7kHGrGwctFXHIQ6y7peZOVxk8DMPPEhCTBP0"},
{"content":{"body":"https://tc39.es/ecma262/#prod-SingleNameBinding","msgtype":"m.text"},"ts":1675197250268,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$9d90P2i6W_Qw15VERmuA6dhz1Zsk7Md8eUjigOwuQw4"},
{"content":{"body":"The current ECMA-262 spec uses `timeZoneIdentifier` in AO arguments.","format":"org.matrix.custom.html","formatted_body":"The current ECMA-262 spec uses <code>timeZoneIdentifier</code> in AO arguments.","msgtype":"m.text"},"ts":1675197257751,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ejmjo22DrxjSthOe-yXVnH7cgISDHRNJDx5j91HPstE"},
{"content":{"body":"`2. Let lhs be ? ResolveBinding(bindingId, environment).`","format":"org.matrix.custom.html","formatted_body":"<code>2. Let lhs be ? ResolveBinding(bindingId, environment).</code>","msgtype":"m.text"},"ts":1675197262199,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$gT8Eg0MHYacQioLhdg2_xJAYkOloYiw5l4Wy5u4L5mM"},
{"content":{"body":"`i. Set v to ? NamedEvaluation of Initializer with argument bindingId.`","format":"org.matrix.custom.html","formatted_body":"<code>i. Set v to ? NamedEvaluation of Initializer with argument bindingId.</code>","msgtype":"m.text"},"ts":1675197271702,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$CM8LCl1ctPc8k4o9-yJVUTJUjRUDgzUmn6FjbjZdtgA"},
{"content":{"body":"heh I don't think spec-internal things count","msgtype":"m.text"},"ts":1675197279546,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GuDVCYGX674WwKyG6W_-giC4E15urWAQ90gK_GLZlZ0"},
{"content":{"body":" * heh I don't think spec-internal things count","m.new_content":{"body":"heh I don't think spec-internal things count","msgtype":"m.text"},"m.relates_to":{"event_id":"$GuDVCYGX674WwKyG6W_-giC4E15urWAQ90gK_GLZlZ0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675197290678,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3VKreDVGcJrILgN3CEDPNgWY6AbIoz9E7twgYNjA9es"},
{"content":{"body":"Yeah, unfortunately I concur. The spec is inconsistent in naming in many places.","msgtype":"m.text"},"ts":1675197297117,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$_WGb2kLmpPbF2Ige-h4VXPnjDGabUQSvOunxoh-UAWw"},
{"content":{"body":"spec-internal names are terrible","msgtype":"m.text"},"ts":1675197347454,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ay6LEZ4gDNILQKfziUMp6OfSZYTmRbdcWf8KGJYu-no"},
{"content":{"body":"lots of single-letter variables, I think in at least one place with both `_C_` and `_c_` in the same algorithm","format":"org.matrix.custom.html","formatted_body":"lots of single-letter variables, I think in at least one place with both <code>_C_</code> and <code>_c_</code> in the same algorithm","msgtype":"m.text"},"ts":1675197366853,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fqf25P-VpJfw8seDTeJuu9VDmU9D-b1dIpBvibWzH0A"},
{"content":{"body":"If it helps, not only does the DOM use `Id` capitalization, so does NodeJS.","format":"org.matrix.custom.html","formatted_body":"If it helps, not only does the DOM use <code>Id</code> capitalization, so does NodeJS.","msgtype":"m.text"},"ts":1675197409693,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$yhOSMj4UneMEB5MTJT7-gsCyx9sVO1CdeCqmQyKfjjs"},
{"content":{"body":"https://nodejs.org/dist/latest-v19.x/docs/api/async_hooks.html#async_hooksexecutionasyncid","msgtype":"m.text"},"ts":1675197443037,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2hx1N-0XXtpmN5AwEqoOHPikQY8CgZlb_JhWoFHUPnQ"},
{"content":{"body":"sure... `Id` convention is fairly standard in many languages and libs","format":"org.matrix.custom.html","formatted_body":"sure... <code>Id</code> convention is fairly standard in many languages and libs","msgtype":"m.text"},"ts":1675197480816,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$s60i7EVhSniRLORly9AqlisM1YNLePCP3MphDn6IkYQ"},
{"content":{"body":"> <@ljharb:matrix.org> i think that any claim of intending to ship a willful violation that disregards consensus is a dangerous precedent to set, and isn't worth buying a few weeks or months of a faster decision.\n\nif only i believed that a sensible compromise was possible. but practically speaking there is definitely time, chrome isn't going to ship in a few weeks or even months","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$etiGtQu6pw3cvIGsa8joO3_Sy9VS4erPrD6Ig3uLt_w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i think that any claim of intending to ship a willful violation that disregards consensus is a dangerous precedent to set, and isn&#39;t worth buying a few weeks or months of a faster decision.</blockquote></mx-reply>if only i believed that a sensible compromise was possible. but practically speaking there is definitely time, chrome isn't going to ship in a few weeks or even months","m.relates_to":{"m.in_reply_to":{"event_id":"$etiGtQu6pw3cvIGsa8joO3_Sy9VS4erPrD6Ig3uLt_w"}},"msgtype":"m.text"},"ts":1675197481315,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Jh9RwtcARH8q7OScoPkysXdAECIkGthouSV9wH2gkjs"},
{"content":{"body":"so the two largest JS ecosystem conventions use `Id` fairly consistently.","format":"org.matrix.custom.html","formatted_body":"so the two largest JS ecosystem conventions use <code>Id</code> fairly consistently.","msgtype":"m.text"},"ts":1675197512526,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$NT1VH_P-N7KyJV_GHIHBpQbi_in1p3vIB8NFEcZga-A"},
{"content":{"body":"i can temper my response as \"by shipping time, if there isn't consensus, i'm going to ship `calendarId` instead of let that block shipping Temporal\"","format":"org.matrix.custom.html","formatted_body":"i can temper my response as &quot;by shipping time, if there isn't consensus, i'm going to ship <code>calendarId</code> instead of let that block shipping Temporal&quot;","msgtype":"m.text"},"ts":1675197563775,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8zmGdIUEtXFqzaqtbl42sbzpuK_40zNj0J2IaGL86Aw"},
{"content":{"body":"NodeJS isn't _entirely_ consistent on how they handle initialisms, but `Id` seems fairly consistent.","format":"org.matrix.custom.html","formatted_body":"NodeJS isn't <em>entirely</em> consistent on how they handle initialisms, but <code>Id</code> seems fairly consistent.","msgtype":"m.text"},"ts":1675197577893,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9Exv76q_PsGSdMqXIv16FLQ8JGtwJdk5yYwWsp4fZss"},
{"content":{"body":"> <@rbuckton:matrix.org> If it helps, not only does the DOM use `Id` capitalization, so does NodeJS.\n\nYeah @rbuckton that was my argument, the ecosystem (whether web or server side) are already using that capitalisation, theres quite large precedent for it already.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24yhOSMj4UneMEB5MTJT7-gsCyx9sVO1CdeCqmQyKfjjs\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>If it helps, not only does the DOM use <code>Id</code> capitalization, so does NodeJS.</blockquote></mx-reply>Yeah @rbuckton that was my argument, the ecosystem (whether web or server side) are already using that capitalisation, theres quite large precedent for it already.","m.relates_to":{"m.in_reply_to":{"event_id":"$yhOSMj4UneMEB5MTJT7-gsCyx9sVO1CdeCqmQyKfjjs"}},"msgtype":"m.text"},"ts":1675197619972,"senderName":"jasew","senderId":"@jasew:matrix.org","id":"$hy9OkTFqs5xVDQZcRd6UofxJsoeGRjW59NGqpNqLHO8"},
{"content":{"body":"it does seem like a foregone conclusion doesn't it?  I must say I have a hard time understanding the controversy","msgtype":"m.text"},"ts":1675198095580,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$nTBqPh-VFV-ONK0fp6PFxJorTpFI4LDJz15U1DBqDEo"},
{"content":{"body":"cleaning up the notes, I'm just sort of shocked how reasonable we all sound, and how we're making clear logical arguments on all sides. I sometimes get caught up in the emotions in the moment and lose track of that! And it's been amazing to work with the transcriptionist--when I was helping with notes, there was so little to fix.","msgtype":"m.text"},"ts":1675198210020,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_MV6cnRnhyK3Fc-OEGRCfFKQ0GZ64Cg835wLN7CxxYk"},
{"content":{"body":"like, how do we all make such interesting coherent comments improvised? We're pretty good!","msgtype":"m.text"},"ts":1675198254297,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TCkuyriaez4slxdiOj1zJJIOXUrUSTimZMKA01auZDo"},
{"content":{"body":"I was wondering how it must feel like to transcribe a meeting like ours","msgtype":"m.text","org.matrix.msc1767.text":"I was wondering how it must feel like to transcribe a meeting like ours"},"ts":1675198311312,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$SeIbQHYSIZ8-tHREwhuUZ4KEQ5LyRGl5j3hjC5DVjQM"},
{"content":{"body":"with no context whatsoever","msgtype":"m.text","org.matrix.msc1767.text":"with no context whatsoever"},"ts":1675198316580,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$sW6duai4vJ8PJywduruuxQO_3xX0r6zeU0xI3htA5jA"},
{"content":{"body":"well, I think they were reading our corrections and getting better over the course of the meeting","msgtype":"m.text"},"ts":1675198463105,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PTklLHuq_rBDuhgEp99WioSdbWBiXQfd1VjNrSMhMmk"},
{"content":{"body":"anyway it'd be great to get more feedback from everyone, especially people correcting notes, on the transcriptionists this time","msgtype":"m.text"},"ts":1675198490793,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$m-kKmehS7jR-mveyfgjRifjyZWMgXc1-u0HTnWIr2c8"},
{"content":{"body":"i appreciate the tempering","m.relates_to":{"event_id":"$8zmGdIUEtXFqzaqtbl42sbzpuK_40zNj0J2IaGL86Aw","is_falling_back":true,"m.in_reply_to":{"event_id":"$8zmGdIUEtXFqzaqtbl42sbzpuK_40zNj0J2IaGL86Aw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675198522598,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$md4HhOiKL9xRfxm5peACx-4_Snhs0T27QYcAqiqgbZk"},
{"content":{"body":"my feedback is that I love the transcriptionists","msgtype":"m.text"},"ts":1675198572781,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4heMYlIF7FwC0DdY9g6DApot4uysqZpkDwc7uWyprEE"},
{"content":{"body":"notes require much less work to fix, and also I don't have to run the bot","msgtype":"m.text"},"ts":1675198584265,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uKT7VTEFcpKWy3bs8DbfRmAMXe3TBSXC5zuqM3_KsXM"},
{"content":{"body":"it's so much better. there's always going to be tiny things to polish but none of that detracts from how much better the experience is with the transcriptionist.","msgtype":"m.text"},"ts":1675198618486,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Zkb3nDm1UEGNb2MFgznz1lyCctdYYbuWCqNVcIg1Tcg"},
{"content":{"body":"> <@pipobscure:matrix.org> And Id is the abbreviation for Identifier or Identity\n\nAt least wikipedia article also use ID as the abbr for identifier or identity ( https://en.wikipedia.org/wiki/Identifier )","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$e4aNvW6LpgVrYf0bFo5drV2UeMCWRjQhYDeK2SKBrB8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@pipobscure:matrix.org\">@pipobscure:matrix.org</a><br>And Id is the abbreviation for Identifier or Identity</blockquote></mx-reply>At least wikipedia article also use ID as the abbr for identifier or identity ( https://en.wikipedia.org/wiki/Identifier )","m.relates_to":{"m.in_reply_to":{"event_id":"$e4aNvW6LpgVrYf0bFo5drV2UeMCWRjQhYDeK2SKBrB8"}},"msgtype":"m.text"},"ts":1675199486497,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$IUZeo3uks7n-CRdRBtzml9M_jLyLLPXsNp1vQKUrqIs"},
{"content":{"body":"re: notes, I do hope we can fix up the linebreaks before publishing","msgtype":"m.text"},"ts":1675201716193,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cptJJm71wQMz3UKu2iwJ7OyFQjBoyPY5-j1aXFs7WwE"},
{"content":{"body":"that's the main thing I would want to change","msgtype":"m.text"},"ts":1675201725724,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tIT8zyxtjhoHKEDzTaoFTps70qf92njvP31EY7fWfq4"}
]