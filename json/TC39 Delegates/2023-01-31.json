[
{"content":{"body":"shu, waldemar: Were you able to review the Async Explicit Resource Management proposal specification text?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>, <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: Were you able to review the Async Explicit Resource Management proposal specification text?","msgtype":"m.text"},"ts":1675176895416,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BHocWY8Np73MJjm9aSIFC3j_rQqoffD9GJRBH4jlS30"},
{"content":{"body":"Plenary begins in T-minus 1 minute encounting.","msgtype":"m.text","org.matrix.msc1767.text":"Plenary begins in T-minus 1 minute encounting."},"ts":1675177134301,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ccX8kqnzGUOAMgSkiC_LC1TJC7WI7aMCYtwFfg9bWDw"},
{"content":{"body":"rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec","msgtype":"m.text"},"ts":1675177171595,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"},
{"content":{"body":"> <@shuyuguo:matrix.org> rbuckton: i didn't have a chance to review the whole thing, but i did look at the `using await` sections of the draft spec\n\nThe rest of the spec text that isn't `using await` is the same as the sync-version prior to carving `AsyncDisposableStack` and @@asyncDispose out in the November plenary.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i didn't have a chance to review the whole thing, but i did look at the <code>using await</code> sections of the draft spec</blockquote></mx-reply>The rest of the spec text that isn't <code>using await</code> is the same as the sync-version prior to carving <code>AsyncDisposableStack</code> and @@asyncDispose out in the November plenary.","m.relates_to":{"m.in_reply_to":{"event_id":"$dOINAA1a_PoyvWIVYp0pBz652-NbT7F4y_qQuQ9B_sE"}},"msgtype":"m.text"},"ts":1675177334268,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7seefO6EbkmzSzBEsBZWFftHzPYLldZs_aVo8BnBKjg"},
{"content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"ts":1675177378908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"},
{"content":{"body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":" * were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","m.new_content":{"body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit","format":"org.matrix.custom.html","formatted_body":"were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit","msgtype":"m.text"},"m.relates_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675177386414,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tWLT2mFjFfl2IWgQ7JZ8714cggyEMLnpOqL14NO0Hh8"},
{"content":{"body":"> <@shuyuguo:matrix.org> were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the `~async-dispose~` hint and awaiting disposable resources with that hint on block exit\n\nNo. The `~async-dispose~` plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support `AsyncDisposableStack`. The only changes I've made aside from adding the `using await` syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>were there changes to using await? it looked like an exact mirror of the sync case, except plumbing through the <code>~async-dispose~</code> hint and awaiting disposable resources with that hint on block exit</blockquote></mx-reply>No. The <code>~async-dispose~</code> plumbing was there when you reviewed Explicit Resource Management prior to Stage 3 since I'd left it in to support <code>AsyncDisposableStack</code>. The only changes I've made aside from adding the <code>using await</code> syntax were to incorporate editorial feedback that I already received on the sync version of the proposal since creating https://github.com/tc39/ecma262/pull/3000, so that the spec text shared between the two remains consistent.","m.relates_to":{"m.in_reply_to":{"event_id":"$bn_nmrRJv1W-Ay6On6sQdzmZuJ-KQJCIZCkUErs0jGI"}},"msgtype":"m.text"},"ts":1675177518306,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$4whKwOvKXch6-Dot2QDZ_eWBvkxGqGZMSD7y2SLrwCc"},
{"content":{"body":"cool, that makes sense","msgtype":"m.text"},"ts":1675177542706,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Dr_7vrVnSjwYgCr2fqiMOZoTu0v9Cg_2JHKOTybMS38"},
{"content":{"body":"I should clarify, there were minor changes to address Mathieu Hofman and erights concerns about any evaluated `using await` forcing an explicit `await` even if the initialized value is `null` or `undefined`, but that should be about it.","format":"org.matrix.custom.html","formatted_body":"I should clarify, there were minor changes to address <a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a> and <a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a> concerns about any evaluated <code>using await</code> forcing an explicit <code>await</code> even if the initialized value is <code>null</code> or <code>undefined</code>, but that should be about it.","msgtype":"m.text"},"ts":1675177604305,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$YkjlJn1zDa4RugptM3APZFSvjO3cw-a6DpmnvGD5iUU"},
{"content":{"body":"hmm, it would be nice if `useGrouping` had a string specifier for all options so you could ignore that it also takes undefined/Booleans","format":"org.matrix.custom.html","formatted_body":"hmm, it would be nice if <code>useGrouping</code> had a string specifier for all options so you could ignore that it also takes undefined/Booleans","msgtype":"m.text"},"ts":1675177723654,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$I9gWNCaOhSGsfyA8mBkDZdpPpGu8TCRctz8_q3-Q6SE"},
{"content":{"body":"it doesn't currently have a `\"never\"` option, just `false`","format":"org.matrix.custom.html","formatted_body":"it doesn't currently have a <code>&quot;never&quot;</code> option, just <code>false</code>","msgtype":"m.text"},"ts":1675177745076,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nq6t73d93iflu_Gtg2Th2C_o-bXZ9YDCys21HOfUDHc"},
{"content":{"body":"Is Frank Tang here?  His agenda item is next.","msgtype":"m.text","org.matrix.msc1767.text":"Is Frank Tang here?  His agenda item is next."},"ts":1675178223189,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-HGTy59WsIMIN-4LIFdgtlqQKLoANqGbj-GFBv6kFNE"},
{"content":{"body":"bterlson:  Should TCQ have a \"Comment on topic\" action that implies no further commentary is necessary?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>:  Should TCQ have a &quot;Comment on topic&quot; action that implies no further commentary is necessary?","msgtype":"m.text"},"ts":1675178591615,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},
{"content":{"body":"Maybe action is the wrong term. Maybe \"queue item\"?","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178619670,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},
{"content":{"body":"It's more like a flag on the queue topic I would say (since it could be a reply or a new topic)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$7tc0FBeu6Bw5X9S6DqBrOUy2bnBZChX-pkidKb9j20s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178751240,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},
{"content":{"body":"but yeah it could be added","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$X7IflyIT7KkK3OScgUvD9BxV8Xm1zg_a8OtKKGxEjuA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675178765513,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},
{"content":{"body":"we could also just leave those comments here in Matrix and the chairs could read them aloud at their discretion","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$5_BUho00kX6mhtdj8V-cszDnDq7gEQqSHJb0gMGW7_4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179410147,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},
{"content":{"body":"adding \"EOM\" at the end seems like it's been a workable convention","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$i35YfscX89bgoqFMfN-IZLG28io52GBVo4watJt6JyI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179441541,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},
{"content":{"body":"what \"optional\" and \"allow\" mean in the example?","msgtype":"m.text"},"ts":1675179506082,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"},
{"content":{"body":"yeah, the status quo is also not bad","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$dQ4Sk2mvwiUDI0L1HLUNDGfKd43Aurf0ycHSyzYBMZA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179527071,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nit could mean anything, it's just an example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply>it could mean anything, it's just an example","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179586613,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MM2rrnm80gq1z0Nkl13RIRpXlAMLcKrT0fagbialziM"},
{"content":{"body":"yeah, I just curious how to explain the example","msgtype":"m.text"},"ts":1675179661749,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$A1a6LfXLu74oO3-dKiQp2obD2xsL5IbZyDE8idwNxjY"},
{"content":{"body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments","format":"org.matrix.custom.html","formatted_body":"Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$TlqUmTjBG1WPA6y4RAMKAFviEtG-lzxlbPq1UdygXvc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179703690,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},
{"content":{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","m.in_reply_to":{"event_id":"$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> Would be interesting if you could just 👍️ the current topic, since we often get a lot of `+1 <eom>` comments\n\n\"react to current topic\" as opposed to reply, I guess","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PY_TqKGYfMEpoYlggbqTPiuGGtRA8VmvH_vfAUEjo9Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Would be interesting if you could just 👍️ the current topic, since we often get a lot of <code>+1 &lt;eom&gt;</code> comments</blockquote></mx-reply>&quot;react to current topic&quot; as opposed to reply, I guess","mimetype":"text/html"}]},"ts":1675179733154,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},
{"content":{"body":"I don't understand if downgrade to stage 2 why not unship...","msgtype":"m.text"},"ts":1675179739810,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RG9wmHYCfyBu7ydnb8vv6jUUY7KZ4xwowS5lFOraSRs"},
{"content":{"body":"That's what I was going for rbuckton .  Just a lightweight mechanism to register feedback on the current topic","format":"org.matrix.custom.html","formatted_body":"That's what I was going for <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> .  Just a lightweight mechanism to register feedback on the current topic","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$4W0xSQZ-rNslbpE8lpbcncxkpqh1GZFdBYNWbhOeVxE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179740499,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},
{"content":{"body":"where you could use some basic emotes like 👍️ 👎️ etc","msgtype":"m.text","org.matrix.msc1767.text":"where you could use some basic emotes like 👍️ 👎️ etc"},"ts":1675179749546,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$vY89W5EkkOsgSc0mAUgj08qaBdU7JlwT_mZZ750nK5Y"},
{"content":{"body":"if we have a 👍️ react, we must also have a 💩","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$kPR-2YZb_TulC8wXuPJ4Rz2IxFWN4RgEHD6oX3kJCcA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179795312,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},
{"content":{"body":"> <@haxjs:matrix.org> what \"optional\" and \"allow\" mean in the example?\n\nHE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what &quot;optional&quot; and &quot;allow&quot; mean in the example?</blockquote></mx-reply><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests","m.relates_to":{"m.in_reply_to":{"event_id":"$w3fQD6LVDHJM5kccamdhbJsNMfbL3cW7FhU6VrYLEZE"}},"msgtype":"m.text"},"ts":1675179830511,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"},
{"content":{"body":"Yeah, that's why I thought free text for it is still important so we don't fall down the emoji reaction rathole","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$NxwZzFViG5BNhAKL40XRZWcDZr5NOfykjv9exy9cjKo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179840709,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},
{"content":{"body":"Not sure if I'd go as far as adding 👎️, since a negative reaction or concern is better represented as a topic.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$FcgMOiVuBbURL9tFQ1Dblx-_VL7Q79WcFZ6Wh-yFVoM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179844269,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},
{"content":{"body":"That's a good point","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$O6oo6Pp9dsFBm2AFIOguS_tzgPJlSief3BI1FNV8-GQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179900006,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},
{"content":{"body":"Plus we already have an emoji reaction thing that I don't think we've ever actually used correctly.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$03hs2cEmXQq7jJg2I3dmjOiDzfphdErhi0PRoQb-wiA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179910055,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},
{"content":{"body":"Maybe then just \"Support current topic\"","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$aoko8oQhL3PE7MgfcYM8-lbkf3RV24_fgZ-j_bKK3rM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179917559,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},
{"content":{"body":"> <@anthonybullard:matrix.org> Maybe then just \"Support current topic\"\n\nBasically, yes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">@anthonybullard:matrix.org</a><br>Maybe then just &quot;Support current topic&quot;</blockquote></mx-reply>Basically, yes.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":false,"m.in_reply_to":{"event_id":"$O4-7ImQqm-3kWgeX2DQSkgnJCwbJjSm9xQES2VhKfvU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675179946857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},
{"content":{"body":"One problem I can think of is that it goes against our very recent discussion about explicit support","msgtype":"m.text","org.matrix.msc1767.text":"One problem I can think of is that it goes against our very recent discussion about explicit support"},"ts":1675179960639,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$1WSc1eik5WgEuqGwCpvFxmJVgpqvxw5wJIgtN6Ndftc"},
{"content":{"body":"I guess it's still explicit though","msgtype":"m.text","org.matrix.msc1767.text":"I guess it's still explicit though"},"ts":1675179974282,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$k88cgLKPLOU9ysxe2e0KhW_mddqOiqDFrHrYLFwVVAI"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> HE Shi-Jun:  You could imagine that in a runtime like Deno, Node.js, or others, `allow` could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests\n\nthe example is to import a css module so i don't understand how a css module relate to fs access...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>:  You could imagine that in a runtime like Deno, Node.js, or others, <code>allow</code> could restrict permissions when importing a certain library. So you could give the library file-system access, but not access to make network requests</blockquote></mx-reply>the example is to import a css module so i don't understand how a css module relate to fs access...","m.relates_to":{"m.in_reply_to":{"event_id":"$TMlGFcHMH3zWyvvrWPfIwa3IpKOns2gmePDop7Ut3QY"}},"msgtype":"m.text"},"ts":1675179978193,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ntqftxc6xfmlrEtXGTKRJCFxe3GoKnmnoJrhvYNO8xE"},
{"content":{"body":"Yeah, the example might have been meant to be written with a `.js` extension, or the runtime has special behavior","format":"org.matrix.custom.html","formatted_body":"Yeah, the example might have been meant to be written with a <code>.js</code> extension, or the runtime has special behavior","msgtype":"m.text"},"ts":1675180035361,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$MroF2jB3F5VtKklgGfgCofal93rroNCULO86VVqflZM"},
{"content":{"body":"it's for your imagination :D","msgtype":"m.text"},"ts":1675180050757,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$acvEJiM-HWmdh8B_jzIGJUQsL73wmjlIpY0LWLLOJSA"},
{"content":{"body":"maybe it disallow `@import \"https://....\"` in css? 😅","format":"org.matrix.custom.html","formatted_body":"maybe it disallow <code>@import &quot;https://....&quot;</code> in css? 😅","msgtype":"m.text"},"ts":1675180091629,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$fmS3BVu6j51ltRoVBzY_lmuRHfB8OMNlk96rXFBfM7k"},
{"content":{"body":"btw for folks less involved in this discussion, we have a response here: https://github.com/whatwg/html/issues/7233#issuecomment-1407049226","msgtype":"m.text"},"ts":1675180490730,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SRnvFdQU_o5Ns7NqyDmfzZZrMhTJD9hnEANa9AGGnxM"},
{"content":{"body":"I prefer status quo to adding reacts on the agenda item. I don't want negative reacts, and would rather positive reacts have SOME context.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZVWkmB5pH3wu-fBa7Nkv0ABHlJs-dtsqiwbOE2nj8Zo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181169863,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},
{"content":{"body":"\"the proposal is great EOM\" is better than a random thumb up IMO.","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$sFf_SyjgN-FKTgMcWT2X0Z4X_W0LlzFf0S0tUCajY3Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181225476,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},
{"content":{"body":"(I agree but could not resist showing agreement by a random thumb up)","m.relates_to":{"event_id":"$vOCCmWK1FGAceMVgn4V-ivh88sLUlRdHZ1rp7ERAn4A","is_falling_back":true,"m.in_reply_to":{"event_id":"$iXxdVULTU3geGHbftKTXPkDB8IQTUr-D-qqznm6VvU8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675181265790,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lhUv0U82PKXcyFhYGJTC1IUf339Ao2ZPHQFq8g9-Jhk"},
{"content":{"body":"shu: If you want to do a temperature check, state the question clearly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: If you want to do a temperature check, state the question clearly","msgtype":"m.text"},"ts":1675181406831,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Pnv2KAB4PEVLQUj4QxwFXX2KlA_5b9go5IHTCt3SDbE"},
{"content":{"body":"yes i will craft a question when we do it","msgtype":"m.text"},"ts":1675181415583,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_LF9Eeaj_j9CLTqVXPHaAhEkenkLBXwOd7sml-D9G7M"},
{"content":{"body":"the chairs have a recommended process for this now","msgtype":"m.text"},"ts":1675181415820,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3QvVIVfvlD7Ou33ZBy_vepw_YrEfm6Q3b0hbgNJczUU"},
{"content":{"body":"but i want to do it after justin's item","msgtype":"m.text"},"ts":1675181422994,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hSpu5kGK_1pNAOQOotlHkf7fH_C_6Ejwcfxpe6KBRpM"},
{"content":{"body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of `assert`, add `with` keyword to replace it (i.e., `assert` as an alias to `with`), phase out `assert`/forbid via lint","format":"org.matrix.custom.html","formatted_body":"We discussed this internally and one of our suggestions matches what @shu just said. Change semantics of <code>assert</code>, add <code>with</code> keyword to replace it (i.e., <code>assert</code> as an alias to <code>with</code>), phase out <code>assert</code>/forbid via lint","msgtype":"m.text"},"ts":1675181432100,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zJSpVB94MCRVvNO1WrGz95okyp3IpeLynnr2Wbf6mVA"},
{"content":{"body":"Maybe we can just think of `assert` as a cast with implicit type coercion. (half j/k, half serious)","format":"org.matrix.custom.html","formatted_body":"Maybe we can just think of <code>assert</code> as a cast with implicit type coercion. (half j/k, half serious)","msgtype":"m.text"},"ts":1675181667638,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kki9MQ5GU9NIY0ET9oq7k6m_FjtGE-kY10KAahh_gNU"},
{"content":{"body":"yeah i honestly believe we have shoehorned ourselves into one particular meaning of \"assert\"","msgtype":"m.text"},"ts":1675181692359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FMkON5oi4-UkvinESfU2ZJ2I-tfEnHJJqDhutPs8KSw"},
{"content":{"body":"and are not being flexible","msgtype":"m.text"},"ts":1675181697902,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ABdyEzKHxeMMq5zc7bzHJuHANTtI5KnBx-1s4_fo9pc"},
{"content":{"body":"which is... a psychological thing, not a semantics thing","msgtype":"m.text"},"ts":1675181710983,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JAZLQoQBC1eP6yUPyhaCS6RkbNyrhdmlrbtfBdZGjBw"},
{"content":{"body":"Can whoever is typing mute?","msgtype":"m.text"},"ts":1675181733823,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hux_EMjjz7Xhf53HwQOS926FWszmjhXhVJzZtsNx4Co"},
{"content":{"body":"think that was me, sorry","msgtype":"m.text"},"ts":1675181754999,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zaAmxbr83RC_cAaL3MtrFS-cQ8K_B487k-kqb2HX8oE"},
{"content":{"body":"my understanding re process:\n\n> Withdrawing Proposals, Reverting to Earlier Stages, and Adopting Proposals\n\n> At any point in the process, a proposal champion may propose that a proposal be downgraded to an earlier stage or withdrawn. Consensus of the committee is necessary for these transitions. ","format":"org.matrix.custom.html","formatted_body":"<p>my understanding re process:</p>\n<blockquote>\n<p>Withdrawing Proposals, Reverting to Earlier Stages, and Adopting Proposals</p>\n</blockquote>\n<blockquote>\n<p>At any point in the process, a proposal champion may propose that a proposal be downgraded to an earlier stage or withdrawn. Consensus of the committee is necessary for these transitions.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1675181995290,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Bp4Xe55WWX13cVWgZ8pVicQf3BJQdvWGKcBDs7049kY"},
{"content":{"body":"that doesn't mean *only* a champion may propose it.","format":"org.matrix.custom.html","formatted_body":"that doesn't mean <em>only</em> a champion may propose it.","msgtype":"m.text"},"ts":1675182005449,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$thh7ti04yVGzodD7b7qRYv0TGrgA5FRitmRrgEAvuag"},
{"content":{"body":"anyone can propose any changes at any time, whether they achieve consensus or are procedurally valid is a separate thing.","msgtype":"m.text"},"ts":1675182034058,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d213Lnu_zzFkVDjE_5PGcThOlDCqOTwUoi2jTlQfYVY"},
{"content":{"body":"As a new delegate in a new member organization, is there a document I can read to learn more about in-band and out-of-band?","msgtype":"m.text"},"ts":1675182096037,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU"},
{"content":{"body":"my view is that a downgrade should have the champions involved. forcing something to stage 1 is what i am objecting to here. I find this very concerning","msgtype":"m.text"},"ts":1675182097411,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$9sVKwLx7VTwIbsxY-FMxD5V9rXFzedbYl97BwO6RH_A"},
{"content":{"body":"nothing can be forced because champions participate in consensus","msgtype":"m.text"},"ts":1675182108866,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gM2zIFFwRLXfVez_7ruUDUIlnn7Yg_9dfJvnqn9OYoA"},
{"content":{"body":"only *proposed*. which forces nothing.","format":"org.matrix.custom.html","formatted_body":"only <em>proposed</em>. which forces nothing.","msgtype":"m.text"},"ts":1675182118981,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ew7GyZEsN6BOHH82tBD0jDfsebymM-1yfl7fkrdBXYM"},
{"content":{"body":"yeah we just don't have consensus for re-opening IB/OOB","msgtype":"m.text"},"ts":1675182122192,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HCn0MNtLIGghmrsqhpMKkFaaQ4k7hLpTeY6_tqHFZfE"},
{"content":{"body":"yep, agreed. I am responding to what you were proposing and saying that it would be inappropriate. I am surprised it was brought up i guess?","msgtype":"m.text"},"ts":1675182139129,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6TZI7N606Y3d7X_MJuyUWINRBSmPIMTcJH3zZkDkzEk"},
{"content":{"body":"like, that is a huge leap","msgtype":"m.text"},"ts":1675182149543,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$_WBNKegilzOcMwefDmF7kAIqnaVAcOf0rceUdrwOq84"},
{"content":{"body":"wait what i said?","msgtype":"m.text"},"ts":1675182156749,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$c2uUdLran5RU0Ejn5T44z-jRIH0Q8D-6_U1IsZMwAsA"},
{"content":{"body":"sorry, no, what jordan said","msgtype":"m.text"},"ts":1675182165185,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$HUNq1VALDFqxZqGYHgcbZ8IxW3fWTWTAnWl10bNmQmM"},
{"content":{"body":"ah yes agreed, i was also surprised","msgtype":"m.text"},"ts":1675182172227,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VVpwYmSGfrVOrhsrGQ0U5OH702rP8Tcc9O_QccAS6Mk"},
{"content":{"body":"I don't think so, but you can add the terms to the glossary at https://github.com/tc39/how-we-work/blob/main/terminology.md","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182192907,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$a1WbRr9fz7WmziXmp96oNxVmhXcZ3BdL7Bm3KnHn0uU"},
{"content":{"body":"in this context, in-band means within the source text, specifically within the import declaration","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$a1WbRr9fz7WmziXmp96oNxVmhXcZ3BdL7Bm3KnHn0uU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182236542,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YTBSnUDmVC9o9SlIo0K0WtNOq5swaVDtsECVeeClt_I"},
{"content":{"body":"out-of-band would be things like HTTP headers, CLI flags, browser config, etc","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$YTBSnUDmVC9o9SlIo0K0WtNOq5swaVDtsECVeeClt_I"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182253269,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zZhyXSxT7xszKOezg45EbzkM6lvNlF40CxWEEpPQGPw"},
{"content":{"body":"OOB would be something like import maps: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$zZhyXSxT7xszKOezg45EbzkM6lvNlF40CxWEEpPQGPw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182389555,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$bEhARGE0gQ5tyXaRfSUR9Ba5LJxqcXxl4WoMASXrV04"},
{"content":{"body":"sorry i may have overreacted there","msgtype":"m.text"},"ts":1675182390696,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$fUBweo0EwaLmTHuc6wpuKgkPd9hjqR7WH5-yUz_GEco"},
{"content":{"body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$bEhARGE0gQ5tyXaRfSUR9Ba5LJxqcXxl4WoMASXrV04"},"rel_type":"m.thread"}},"ts":1675182513754,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o"},
{"content":{"body":" * So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":" * So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","m.new_content":{"body":"So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically the configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text"},"m.relates_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675182530267,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$_F-zOrMhw7zEJo34s66YfAZarqOktUFZJWEFW60tRzY"},
{"content":{"body":" * So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":" * So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","m.new_content":{"body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","format":"org.matrix.custom.html","formatted_body":"So basically with OOB configuration of the behavior happens outside of the ECMAScript source but is applied within the execution of said source?","msgtype":"m.text"},"m.relates_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675182569725,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$KaEe6KEZk_LzgHepIZ6fscyg84SzqbPp-1VqP6DlklY"},
{"content":{"body":"yes, just like CSP and import maps","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$snHAnkO1QY5ACbOUgx-p15enHRtK4tX3FplHdwPCM0o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182570691,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tUAXkhnZo9rEvHXl4PPPGrUUmj4FhwZshcInQqMpP5g"},
{"content":{"body":"Sounds good.  Adding these terms to the above document will be good practice for going through the process here","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$tUAXkhnZo9rEvHXl4PPPGrUUmj4FhwZshcInQqMpP5g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182596645,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$iPEMzYiVCL9ixTfgUpujOm8fPtO1aQEvA-VyMKM-2X8"},
{"content":{"body":"Anthony Bullard: PRs welcome","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">Anthony Bullard</a>: PRs welcome","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$iPEMzYiVCL9ixTfgUpujOm8fPtO1aQEvA-VyMKM-2X8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675182622040,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BFIQ78FgxQ15RpJDWHTBFp7_l7cbfd3rupZgNAiuToo"},
{"content":{"body":"if we had a temperature check for using in eval, I would give it a 👍️","msgtype":"m.text"},"ts":1675183212635,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Tq1JFrrBvwnZA7QvB5dJLBZcnjYGNC8eLJ_Acj85Ah8"},
{"content":{"body":"but I don't feel strongly enough to even add a topic to TCQ","msgtype":"m.text"},"ts":1675183237031,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kgiztHY8ADssbOR1JCJc-36k_YgrIBV0kr4A7TaSpjs"},
{"content":{"body":"Yeah I feel like we could go either way on eval; it's fine to prohibit or support","msgtype":"m.text"},"ts":1675183350477,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wzDry8dW41fuY2s0ZQatu7mitIghl7GioEEfxgKhGkk"},
{"content":{"body":"I don't think most JS developers have internalized that they can use let at the top level of a direct eval","msgtype":"m.text"},"ts":1675183375667,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1nD-tcUpWLPJD1kXnh9EoWmsKptbLzzAw_fYCGAYRDE"},
{"content":{"body":"+1 to doing a temperature check","msgtype":"m.text"},"ts":1675183410504,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tw9Aka810rXqTcBZIWsfXudlTb6zFLzJfEz3TT3xdPU"},
{"content":{"body":"Anthony Bullard: in case you are looking for other stuff on tcq, maybe adding a temp check question isn't a bad idea... (i can help, i did  the original implementation of the temp check)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">Anthony Bullard</a>: in case you are looking for other stuff on tcq, maybe adding a temp check question isn't a bad idea... (i can help, i did  the original implementation of the temp check)","msgtype":"m.text"},"ts":1675183475526,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE"},
{"content":{"body":"Working on it","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$BFIQ78FgxQ15RpJDWHTBFp7_l7cbfd3rupZgNAiuToo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183533975,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$RuK2wz0jF2WcxxujoKlkc9ZySZ9PiMXVOWcWzWDQ7Tg"},
{"content":{"body":"Just trying to find a good reference for the term in-band","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$RuK2wz0jF2WcxxujoKlkc9ZySZ9PiMXVOWcWzWDQ7Tg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183546395,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$AIXTiSX6SagxEnIdN-BmZF0ZMtVqHu3jI_NDWoAlVzY"},
{"content":{"body":"I will reach out if I have any questions.  Haven't any took a peek at the repo yet","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675183625835,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$EnxEc4iXvPQXO8CSRo1euJjLGdKtR7efDR6rQosHU0o"},
{"content":{"body":"is this being temp checked?","msgtype":"m.text"},"ts":1675183634355,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$U5uukHmYLFDkcHSuZIOVmLO9wVqJnGEA1rnZfA3huvI"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1675183649119,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ELCHFtxL5vLA3bEvyAIDOLsW-i4xGig-vsX7N347gDI"},
{"content":{"body":"Jack Works: yes, on TCQ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: yes, on TCQ","msgtype":"m.text"},"ts":1675183656950,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$QXfAI4DUlRBbp0vFpJows--5EAGO4llfoT67jE6Vp9o"},
{"content":{"body":"i can't see a vote UI, did I miss that?","msgtype":"m.text"},"ts":1675183677746,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0"},
{"content":{"body":"By the way, does the TCQ \"Log\" go anywhere?","msgtype":"m.text"},"ts":1675183695342,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$0ewDMUa4-78VRJ1mP3zOgYdjSsMPBIMxFOcL4FXnWoU"},
{"content":{"body":"> <@jackworks:matrix.org> i can't see a vote UI, did I miss that?\n\ntry reloading","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>i can&#39;t see a vote UI, did I miss that?</blockquote></mx-reply>try reloading","m.relates_to":{"m.in_reply_to":{"event_id":"$kjZpT43vgLPnO_EBlmuxtSx111l9bw6I5m6okCQ2Gr0"}},"msgtype":"m.text"},"ts":1675183727054,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$abMCYlyXO1vyiD9HP0QAdmTOc4Yl5b9RG0wsTuHGuq0"},
{"content":{"body":"or there may be a bug","msgtype":"m.text"},"ts":1675183736543,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$qdzsvv-z3-vZtCIc1dx1DkfqgmlrEfKKNy55UnEfTyg"},
{"content":{"body":"I just refreshed and the temp check is gone now","msgtype":"m.text"},"ts":1675183744251,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NsnAoeqyi1ROgP1nj7_god00HkpDm2VrM4FJ_bbfEE0"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1675183762229,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$wSYmbSsVmJJe_RmAm6Qs_XPTno4XXxQI_KmQhU0je7A"},
{"content":{"body":"tried many time but see nothing","msgtype":"m.text"},"ts":1675183766539,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$aLlaTRn8B2nHs0fuUCWlEpjRfvQ6VTJkbpD3b2mqHRY"},
{"content":{"body":"😬","msgtype":"m.text"},"ts":1675183771756,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$eT_b7wMGwtG-oKRUBzPtct6jy6hdULrMuiwf4tJE0Zk"},
{"content":{"body":"current state","msgtype":"m.text"},"ts":1675183785242,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$N-fHx0Huf_6JvvmDU5MEzbUkLFtgUFcbIApI3gzlTj4"},
{"content":{"body":"It's gone for me as well after a refresh","msgtype":"m.text"},"ts":1675183786369,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$7CCDtyf0JDSgzrg-1BT91wj1s-VdY_LKw09h9Ofl8pc"},
{"content":{"body":"i support to reject `using` directly in eval","format":"org.matrix.custom.html","formatted_body":"i support to reject <code>using</code> directly in eval","msgtype":"m.text"},"ts":1675183790788,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$FNnYg6jh_KERmbEcNAc5FDY7TYB9FBD2gNX9pGlWuxI"},
{"content":{"body":"ill vote on your behalf jack","msgtype":"m.text"},"ts":1675183803460,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$a8uHoizmCV5qXruYJ8UHlgWNnYTF7dMniwgnsYDwF50"},
{"content":{"body":"why only ban await,not ban yield?","msgtype":"m.text"},"ts":1675183809701,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$PWpcMV6xv0WLmY-tFRTtiw_Z3LwPhtQAv30BLOI2q-U"},
{"content":{"body":"because there's the async `using await` ron will present later, i presume","format":"org.matrix.custom.html","formatted_body":"because there's the async <code>using await</code> ron will present later, i presume","msgtype":"m.text"},"ts":1675183828328,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Tld2vlqWFRZlPByi0o6eZUmzey-q-XrfvIJZWirxa7k"},
{"content":{"body":"ok. so if syntax is `async using`, no need to ban `await`?","format":"org.matrix.custom.html","formatted_body":"ok. so if syntax is <code>async using</code>, no need to ban <code>await</code>?","msgtype":"m.text"},"ts":1675183895662,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0"},
{"content":{"body":"🤷","msgtype":"m.text"},"ts":1675183913999,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bU1QyHQG_eWcX4y0-e6kA1UHu4LXrxAbBvddm8Oa8r8"},
{"content":{"body":"I would be happy to ban `yield` and for that matter also `undefined`, as long as we're banning stuff","format":"org.matrix.custom.html","formatted_body":"I would be happy to ban <code>yield</code> and for that matter also <code>undefined</code>, as long as we're banning stuff","msgtype":"m.text"},"ts":1675183943483,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY"},
{"content":{"body":"alright, if anyone wants to discuss anything from this meeting, i'll be around for the next hour. I won't make the afternoon session","msgtype":"m.text"},"ts":1675183948361,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LIUx2Zs8T3kyAdTiu7FUZDk6bO8kegGQJyhBvJoq92Q"},
{"content":{"body":"`{ using undefined = x } // oh no`","format":"org.matrix.custom.html","formatted_body":"<code>{ using undefined = x } // oh no</code>","msgtype":"m.text"},"ts":1675183961033,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eaenHUvOGlFmuYvAWMPFgKDQbDEklGxhX9xXv3AogD4"},
{"content":{"body":"I really hope we banned `let undefined` and `const undefined` in ES6 (only allow `var undefined` for webcompat). ","format":"org.matrix.custom.html","formatted_body":"I really hope we banned <code>let undefined</code> and <code>const undefined</code> in ES6 (only allow <code>var undefined</code> for webcompat).","msgtype":"m.text"},"ts":1675184081594,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ApWDSITvd0aF8w4ti_gCGD_BcXISQtdXS1VZYxrMXNc"},
{"content":{"body":"Michael Ficarra:  Any conventions on commits / branches for this repo that I'm not seeing?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>:  Any conventions on commits / branches for this repo that I'm not seeing?","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$AIXTiSX6SagxEnIdN-BmZF0ZMtVqHu3jI_NDWoAlVzY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184105760,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$1xrabmlyKsjYQjT8UpkAY5Xe8-TV6cFqX96e_Z2PRXU"},
{"content":{"body":"`const undefined` is banned because consts need a value :-p but `let undefined` works fine","format":"org.matrix.custom.html","formatted_body":"<code>const undefined</code> is banned because consts need a value :-p but <code>let undefined</code> works fine","msgtype":"m.text"},"ts":1675184115615,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AZcpuznFx_K1YPIVmKwlzW9S-6__P2Mdq3VH4SQA30M"},
{"content":{"body":"just not at the top level of scripts because it's a global non-configurable property","msgtype":"m.text"},"ts":1675184247061,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8"},
{"content":{"body":"Seems like there are not.  https://github.com/tc39/how-we-work/pull/127","m.relates_to":{"event_id":"$Yxs5Qn1lST9ApFOJ1FilfxhifAW85Kglz3WRMCiBCrU","is_falling_back":true,"m.in_reply_to":{"event_id":"$1xrabmlyKsjYQjT8UpkAY5Xe8-TV6cFqX96e_Z2PRXU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184280733,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$6C-3bM9IbvYi8KCNcF0q5jR-ZvMidEnozv451iJeCVU"},
{"content":{"body":"Of course it's written in the one popular framework I haven't used in 5 years","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$EnxEc4iXvPQXO8CSRo1euJjLGdKtR7efDR6rQosHU0o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184501117,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$tedtefmezHMOXp7K7me4nXUNbkDEvRIuJz7BN94fhuY"},
{"content":{"body":"yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","msgtype":"m.text","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$tedtefmezHMOXp7K7me4nXUNbkDEvRIuJz7BN94fhuY"},"rel_type":"m.thread"}},"ts":1675184553424,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc"},
{"content":{"body":" * yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","m.new_content":{"body":"yulia:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>:  Temp check question would be adding an item to the queue for a temp check, but the temp check ui also displaying the question?","msgtype":"m.text"},"m.relates_to":{"event_id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675184558207,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$XKGnclF36aXUzdB5shl8YrWSYEFh-LEjlCDkYHLGzrA"},
{"content":{"body":"temp check ui showing the question","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$ukVCqXfOPoXfHsKy51uqZ-1Y5agMvDGcBMy2vkm_8vc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184696523,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$DCpjTp7NDoRXhu7Mrv2BxjtmMs2_l3NNjR47EE9drAc"},
{"content":{"body":"so, the chair would need to enter it","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$DCpjTp7NDoRXhu7Mrv2BxjtmMs2_l3NNjR47EE9drAc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184702515,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$kue-NwK8xSKx2faqqH1tFxJ3lKtnK3VjAU_UlOSx8eE"},
{"content":{"body":"right now non-chairs can't start a temp check","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$kue-NwK8xSKx2faqqH1tFxJ3lKtnK3VjAU_UlOSx8eE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675184965041,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$rFVkpzjzrR1tRNhLneKHpo7TY4y6Vq1h4MemmCpkQNg"},
{"content":{"body":"Gotcha","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$rFVkpzjzrR1tRNhLneKHpo7TY4y6Vq1h4MemmCpkQNg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675185235385,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$mV0TtYQFuQcw_MvmdMIivOeP6XY7TpYHv5s4aUpOPws"},
{"content":{"body":"Let me fork, clone, and learn Vue real quick and hopefully we can have this ready for the Seattle meeting","m.relates_to":{"event_id":"$RqHxj_00Kx4jco-yK4N6eqOXsTUv2hzriqvpVWY2JZE","is_falling_back":true,"m.in_reply_to":{"event_id":"$mV0TtYQFuQcw_MvmdMIivOeP6XY7TpYHv5s4aUpOPws"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1675185291238,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$o84W01s2pXHF1tzr5EkBlU4WcKfRycqWsf8weLZsGpE"},
{"content":{"body":"> <@bakkot:matrix.org> just not at the top level of scripts because it's a global non-configurable property\n\nThat would never be disposed, because it never goes out of scope.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>just not at the top level of scripts because it&#39;s a global non-configurable property</blockquote></mx-reply>That would never be disposed, because it never goes out of scope.","m.relates_to":{"m.in_reply_to":{"event_id":"$qsL6Ilu2tkc852bi7P5SRQyh_m_QMe3IAUvJ54ErGj8"}},"msgtype":"m.text"},"ts":1675186614658,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI"},
{"content":{"body":"> <@rbuckton:matrix.org> That would never be disposed, because it never goes out of scope.\n\nsorry, that was re: `let undefined` failing if you just type it in the console because it's attempting to redeclare a non-configurable global property, not about `using`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>That would never be disposed, because it never goes out of scope.</blockquote></mx-reply>sorry, that was re: <code>let undefined</code> failing if you just type it in the console because it's attempting to redeclare a non-configurable global property, not about <code>using</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$TSNEfX3EDY49j16fDSbAQQQqYI-eOwWARabl6PSd5aI"}},"msgtype":"m.text"},"ts":1675186710561,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2ycPMZCWpKJAEsf0JsksZ9l95yxu9wIXuEptjN8GKuo"},
{"content":{"body":"Ah, my bad. ","msgtype":"m.text"},"ts":1675186776188,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$FxPMCS_EyRC3gN1-xGnwWYZfKF6nyrdYHNE98MGLRzY"},
{"content":{"body":"> <@haxjs:matrix.org> ok. so if syntax is `async using`, no need to ban `await`?\n\nWe might need to ban `async using` in other places instead. See https://tc39.es/ecma262/#prod-ForInOfStatement, which needs to ban `async  of` because `async of => {}` is a legal arrow. `async using` would potentially require a complex cover grammar to deal with similar cases.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>ok. so if syntax is <code>async using</code>, no need to ban <code>await</code>?</blockquote></mx-reply>We might need to ban <code>async using</code> in other places instead. See https://tc39.es/ecma262/#prod-ForInOfStatement, which needs to ban <code>async  of</code> because <code>async of =&gt; {}</code> is a legal arrow. <code>async using</code> would potentially require a complex cover grammar to deal with similar cases.","m.relates_to":{"m.in_reply_to":{"event_id":"$9YTJ7_nnK8tIPpE6YyDJY-_cej2b2CMZ2IFNc2_09R0"}},"msgtype":"m.text"},"ts":1675187188735,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ztI1Enb67yxhQxipWyj1myPLrO9x4iSI_Nxdq3WMgCQ"},
{"content":{"body":"are there any contexts in which `async [no lineterminator here] using` is currently legal?","format":"org.matrix.custom.html","formatted_body":"are there any contexts in which <code>async [no lineterminator here] using</code> is currently legal?","msgtype":"m.text"},"ts":1675187302491,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$90gybmlJcoKhtMiDleWy57uu2CcNbNIK8Nu5lLgYb5c"},
{"content":{"body":"other than the horrible async arrow one","msgtype":"m.text"},"ts":1675187318801,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e2YM5PcFHRHO-yMScfG2S-VG2o8rnxTfMHKE7Ofkd0Q"},
{"content":{"body":"within double quotes!!!","msgtype":"m.text"},"ts":1675187341666,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ju3RX8Elj7vw2jl5a6NUrVhKMjGvq7XiVebSPzm6S-g"},
{"content":{"body":"or a regexp","msgtype":"m.text"},"ts":1675187348527,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk"},
{"content":{"body":"> <@bakkot:matrix.org> I would be happy to ban `yield` and for that matter also `undefined`, as long as we're banning stuff\n\nI'm less concerned about `yield` because I don't see a `using yield` declaration being a thing. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I would be happy to ban <code>yield</code> and for that matter also <code>undefined</code>, as long as we're banning stuff</blockquote></mx-reply>I'm less concerned about <code>yield</code> because I don't see a <code>using yield</code> declaration being a thing.","m.relates_to":{"m.in_reply_to":{"event_id":"$_2OlVAcQmdpjfoIiGO-_WLpHcfu32VQwDRf1gIJeVEY"}},"msgtype":"m.text"},"ts":1675187350116,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$6xL4D8jbZE7aiLaHvoTSK9OUjwDOCvYoea4rBo6Y8II"},
{"content":{"body":"> <@littledan:matrix.org> or a regexp\n\nor a method name.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>or a regexp</blockquote></mx-reply>or a method name.","m.relates_to":{"m.in_reply_to":{"event_id":"$VK1CV07tPFbU5jdq1lxHPq1JMhlwXZI3UnapT4-cKfk"}},"msgtype":"m.text"},"ts":1675187362929,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M5jowb-zLHVIqHZSgP9HyQkDcuWxtHfx9W8cqkzZtbw"},
{"content":{"body":"ah, yes, method names also","msgtype":"m.text"},"ts":1675187383821,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ENyC8fjuDt3d1jgENFC0KXun2TVGDEbT2ffUPXuCDEg"},
{"content":{"body":"I think the async arrow case is the only one likely to be problematic, but that one would be a problem, certainly","msgtype":"m.text"},"ts":1675187452310,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7Xl430q3oSkLwbuTTpgJTP1fbSOjpHLGuk0zt2iB0Wk"},
{"content":{"body":"Where as `using [no LineTerminator here] await` isn't legal anywhere outside of string/regexp literal contexts.","format":"org.matrix.custom.html","formatted_body":"Where as <code>using [no LineTerminator here] await</code> isn't legal anywhere outside of string/regexp literal contexts.","msgtype":"m.text"},"ts":1675187458502,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$IpL8fNMqq1oTNFKF5PYPdOK_qOVxZRj2LkdTNFVLTa4"},
{"content":{"body":"please don't make me write a bunch more string comparisons on every binding identifier parse :(","msgtype":"m.text"},"ts":1675187664440,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$O-vWP2cL85eoS7ATn9JYvOuFIRmGGMF4kfnvS72h6J4"},
{"content":{"body":"what about only the binding identifier parses in `using` declarations","format":"org.matrix.custom.html","formatted_body":"what about only the binding identifier parses in <code>using</code> declarations","msgtype":"m.text"},"ts":1675187689475,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_4A_FDZt8wi_XnzMId0YexksR59M_yKMZn1722stEYs"},
{"content":{"body":"cycles are precious and come dear","msgtype":"m.text"},"ts":1675187693267,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$seUkNm2BcOwIXPGIWHCN_2wzFRtPMzV9bIXR9iuWpV0"},
{"content":{"body":"i mean how many of those can there be","msgtype":"m.text"},"ts":1675187693986,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ik1xb8Jt1HVtYw4-ePi-tKZPgnC13I17n28_4S0nDuw"},
{"content":{"body":"that's a new feature so we can start with a lower bar","msgtype":"m.text"},"ts":1675187704835,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$j_o3CUxrJQUoo2TqpOnW-KgcwrFeOHp0nqpNS3Oc84A"},
{"content":{"body":"can't break people's expectations if we start super low!","msgtype":"m.text"},"ts":1675187723482,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vJOAodTZ6qB7OGPpg_lXDPFu1w9TQxdpjj0ZXt3ez-0"},
{"content":{"body":"https://www.w3.org/2023/01/pressrelease-w3c-le-launched.html.en","msgtype":"m.text","org.matrix.msc1767.text":"https://www.w3.org/2023/01/pressrelease-w3c-le-launched.html.en"},"ts":1675187732128,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$U7cVrZz9NkOUY9rZcg5w1S-H2KnJTZ20li0c5YKhyUA"},
{"content":{"body":"https://tc39.es/proposal-async-explicit-resource-management/#sec-suppressederror ","msgtype":"m.text"},"ts":1675188054129,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OfftCtzRVcJl4R9OFkJLE5qRSfajW7Wg242b-IBv6jU"},
{"content":{"body":" * waldemar: note i'm not talking about `suppressed`, which is the suppressed error, i'm talking about `error`, which is the cause of the suppression (re your queue item)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: note i'm not talking about <code>suppressed</code>, which is the suppressed error, i'm talking about <code>error</code>, which is the cause of the suppression (re your queue item)","m.new_content":{"body":"waldemar: note i'm not talking about `suppressed`, which is the suppressed error, i'm talking about `error`, which is the cause of the suppression (re your queue item)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: note i'm not talking about <code>suppressed</code>, which is the suppressed error, i'm talking about <code>error</code>, which is the cause of the suppression (re your queue item)","msgtype":"m.text"},"m.relates_to":{"event_id":"$Ky9244R1K_uFhnYvyZfbYDFSZAt6IuzShzo-9j9K9Fc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675188846063,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gzKGKOcY_tiO90RSw8V1UsmvbvnO3Xfx_nEvkUik4IU"},
{"content":{"body":"I should have clarified re: https://github.com/tc39/proposal-explicit-resource-management/pull/140 whether it requires consensus. Given the algorithm changes in ForBodyEvaluation and CreatePerIterationEnvironment are essentially no-ops, removing them has no observable effect on runtime semantics.","msgtype":"m.text"},"ts":1675188885508,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JbVrQBuZLRUsH9s7cj--iSNmFXMjUeOha7eJumajeyw"},
{"content":{"body":"am warming up to the option of prohibiting '.cause' on SuppressedErrors - I think it's a conceptual mismatch for SuppressedError ","msgtype":"m.text"},"ts":1675189147809,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$F2Xb_x8yEZSN0-ylFaEia3_feGTZ7cKcqQBv7haNEgY"},
{"content":{"body":"i'm still not clear on why it's not a cause when we all keep describing it as the thing that caused the suppression","msgtype":"m.text"},"ts":1675189174161,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KS37ZGSLcgombw1LoYhmiApuhGvjWGeiDl8UzNw8ePQ"},
{"content":{"body":"(i.e., read the options bag and throw if it's a present)","msgtype":"m.text"},"ts":1675189180908,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7K5Jpbe3gaME7ibKBA4WHKWfKe64425qziKAllw7SxM"},
{"content":{"body":"it doesn't cause the suppression - the use of the syntax causes the suppression","msgtype":"m.text"},"ts":1675189210602,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mT8_L1GdkMdVsIk6_0LGexNrhCTckp7IVOmSDqv5B5o"},
{"content":{"body":"in `using`, sure. but not necessarily in every use of SuppressedError","format":"org.matrix.custom.html","formatted_body":"in <code>using</code>, sure. but not necessarily in every use of SuppressedError","msgtype":"m.text"},"ts":1675189244682,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5iEhEveBGEYdpnYNiU1qsWpAd0TTIUgpIm25T1T9KeM"},
{"content":{"body":"that's the only use of SuppressedError","msgtype":"m.text"},"ts":1675189251737,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w44rWy3Yi4Qok9D5lf4Eht-jPdB6Aov7UxF5l87wBYU"},
{"content":{"body":"in the spec, but this is something users will use separately","msgtype":"m.text"},"ts":1675189269989,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NLTpvB2b8gsL0ehZ4ljjsoirwwtZhI3T_Satdt7L6xc"},
{"content":{"body":"ok but it is a mismatch for the only case it gets used in the spec, so it's bad fit","msgtype":"m.text"},"ts":1675189299658,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zX17NqH-jzLachihIuQAZuVhO2NcA657KE-nmd-tdfI"},
{"content":{"body":"even if users might do a different thing where it would get used in a different way","msgtype":"m.text"},"ts":1675189307850,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CFfTA3mHMgF9wv1ddEjFEmIvRik_Ac7GK8YrRBomhic"},
{"content":{"body":"ljharb: perhaps you're thinking of \"cause\" to mean \"caused mechanically the SuppressedError to be created and thrown\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: perhaps you're thinking of &quot;cause&quot; to mean &quot;caused mechanically the SuppressedError to be created and thrown&quot;","msgtype":"m.text"},"ts":1675189311122,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cLxTaiQiWbukH8vPmHLTMUJeqx6lcMiKQ7gLu4moTEI"},
{"content":{"body":"yes, that's what i'm thinking of","msgtype":"m.text"},"ts":1675189317990,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_Msx0oilfnFZHLZYPjcd1h3Dl-KMaerH8WwFl0cw_OY"},
{"content":{"body":"the cause is what caused the SuppressedError","msgtype":"m.text"},"ts":1675189325642,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ONH-2II9mz7qJoY1NQ_Uq69m3-6KOzo9RAJu0NEcq8A"},
{"content":{"body":"whereas waldemar and kevin (and myself) think of \"cause\" as, like, the conceptual reason of an error","msgtype":"m.text"},"ts":1675189340990,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z5MQHt1T2GpYwKiGA2wcW5Lf6o_OQ7JXvduwKr-PGco"},
{"content":{"body":"which in the case kevin mentioned is a SyntaxError, right?","msgtype":"m.text"},"ts":1675189341580,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d-dH_d-NxlR8Zirees3A1kSXzolLV6fN6G7JBWotTHc"},
{"content":{"body":"yes, what ron is saying right now","msgtype":"m.text"},"ts":1675189387993,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hyn_ELm4x5w3h8BLxgpcbVkxcU4H6M4GbwTZ9Rs7fa0"},
{"content":{"body":"it is not a linear relationship","msgtype":"m.text"},"ts":1675189391830,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MhiXhC7sEJ7XD-vMzU4neI3hBvIQEPzNBKtU16WNOa0"},
{"content":{"body":"the core disagreement i think is how do developers understand \"cause\"","msgtype":"m.text"},"ts":1675189416281,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8flW164pt4M4prn7OQcdJ_pkKFkjjK5x_lcY0oH_D9A"},
{"content":{"body":"is it this linear causality chain, or is it a simpler \"whatever effected it to be thrown mechanically\"","msgtype":"m.text"},"ts":1675189438193,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$j3uQVoaHniwNs5v0WUvS1O68RZtF5P8afs1z17vzb2A"},
{"content":{"body":"i would argue the latter","msgtype":"m.text"},"ts":1675189446693,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bHWcT4llBGO00A2iAkyckfLkhs8VWx3yX6uxc6vdWVE"},
{"content":{"body":"yeah so far we've had folks on both sides","msgtype":"m.text"},"ts":1675189471247,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OptTA5beSbTqLGfvnktFdsVjzr2PF80xYDExvd-7y_c"},
{"content":{"body":"I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"ts":1675189479169,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk"},
{"content":{"body":" * I think the only acceptable use for \"error\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":" * I think the only acceptable use for &quot;error&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","m.new_content":{"body":"I think the only acceptable use for \"error\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;error&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675189487987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HSYQZQrxpehRPtUYuumDbl3BA2hQ2bdg1j5yfh4KcGY"},
{"content":{"body":"I think the fact there is such disagreement is evidence of reusing `cause` being confusing.","format":"org.matrix.custom.html","formatted_body":"I think the fact there is such disagreement is evidence of reusing <code>cause</code> being confusing.","msgtype":"m.text"},"ts":1675189497432,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$V4D-MXSd4yMZ0Eh6JyD2vwbcR0yp0HMw41QTqxCoUGs"},
{"content":{"body":" * I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":" * I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","m.new_content":{"body":"I think the only acceptable use for \"cause\" is \"we hit an error condition because of a prior error condition\", and that is _not_ what it means here - here it is \"we had an error, and then a different error which would prevent surfacing the first one\"","format":"org.matrix.custom.html","formatted_body":"I think the only acceptable use for &quot;cause&quot; is &quot;we hit an error condition because of a prior error condition&quot;, and that is <em>not</em> what it means here - here it is &quot;we had an error, and then a different error which would prevent surfacing the first one&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$TMUg_G1aYqKpqLn2n6DVUtfy2ynwPpUf5JzwdfL3kWk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675189497459,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UPwq0BJc0ToNBqXHaiqrLCy-ONWSNKLja4aH1Lq4ppU"},
{"content":{"body":"to be clear my core motivation here is \"it should not be possible to have an error that has two potential conceptual causes - .error and .cause\"","msgtype":"m.text"},"ts":1675189530326,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw"},
{"content":{"body":"there are some good argument being made that `.cause` may not be right to replace `.error`","format":"org.matrix.custom.html","formatted_body":"there are some good argument being made that <code>.cause</code> may not be right to replace <code>.error</code>","msgtype":"m.text"},"ts":1675189543684,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ifsFQiowK8Q675JETuyGlcQlgiWVzNsTPLECoDePuDs"},
{"content":{"body":"but that still doesn't mean it makes sense to have an error instance with all of cause/error/suppressed","msgtype":"m.text"},"ts":1675189559860,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Rjkn39_qoylzXN5oUIModcGVdwRKzEap81y9olxX9UI"},
{"content":{"body":"`error` is not the \"cause\", neither is `supressed` the \"cause\". My use of the term \"causes a suppression\" does not imply `cause` in this case, it implies the cause of a behavior.","format":"org.matrix.custom.html","formatted_body":"<code>error</code> is not the &quot;cause&quot;, neither is <code>supressed</code> the &quot;cause&quot;. My use of the term &quot;causes a suppression&quot; does not imply <code>cause</code> in this case, it implies the cause of a behavior.","msgtype":"m.text"},"ts":1675189587317,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mUbTPjmfSWwVSDMgra0j0nuVgWmlTylxO2vkDAAmF0w"},
{"content":{"body":"> <@ljharb:matrix.org> to be clear my core motivation here is \"it should not be possible to have an error that has two potential conceptual causes - .error and .cause\"\n\n`SuppressedError` _does_ have two conceptual causes. I'm more in favor of banning `cause` because it results in _three_ conceptual causes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>to be clear my core motivation here is &quot;it should not be possible to have an error that has two potential conceptual causes - .error and .cause&quot;</blockquote></mx-reply><code>SuppressedError</code> <em>does</em> have two conceptual causes. I'm more in favor of banning <code>cause</code> because it results in <em>three</em> conceptual causes.","m.relates_to":{"m.in_reply_to":{"event_id":"$vCCddxYTnM0bS1xceiq_T1HtSJSR_dDvyu5ZnD0mvPw"}},"msgtype":"m.text"},"ts":1675189632570,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2bKxCH6gROAwe8fbBvEQ6LxtjlGhFEIRfr8E4qSjm1U"},
{"content":{"body":"sure, i can accept that reframing","msgtype":"m.text"},"ts":1675189644661,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CaAOEYOFg2HHbHe-MIrqaCrbuRceVALPHPDW7nxKeGM"},
{"content":{"body":"My understanding is `cause` should be used by developers to specify the low-level \"cause\" of a high-level error. So `SuppressedError` is not the case.","format":"org.matrix.custom.html","formatted_body":"My understanding is <code>cause</code> should be used by developers to specify the low-level &quot;cause&quot; of a high-level error. So <code>SuppressedError</code> is not the case.","msgtype":"m.text"},"ts":1675189778549,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$cjgtbXMAiYJN_O6pDyh83ICVnZ02eS6cydUajGs2p_4"},
{"content":{"body":"shu: We don't use arguments.length, we generally use \"not present\" as in AOs.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: We don't use arguments.length, we generally use &quot;not present&quot; as in AOs.","msgtype":"m.text"},"ts":1675189935223,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2H6q_H6PVgYNnHhIcy8R-2SvUs6VEBzUYFaynkEGyPw"},
{"content":{"body":"no we actually check arguments length in some places","msgtype":"m.text"},"ts":1675189949763,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BMBgAFl-UB8dRlxIS-XDcQ5atNVxQnzq9Xs1yjYfYyQ"},
{"content":{"body":"like `Array#splice`","format":"org.matrix.custom.html","formatted_body":"like <code>Array#splice</code>","msgtype":"m.text"},"ts":1675189952140,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$n8H4PJR1iPMtsYjlBu9j0YSJo7M0B2Pxw4zp48xAQME"},
{"content":{"body":"it is cursed","msgtype":"m.text"},"ts":1675189954232,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2A3mj2wa_Q4FimrsvlpXAoRk7SazrDsDROPT358qGV4"},
{"content":{"body":"i hate it","msgtype":"m.text"},"ts":1675189955734,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$khKJrrWUqcJOP7HtPWa3x323sH2nrirqLOD_tldzGA8"},
{"content":{"body":"Ah. I was looking at reduce/reduceRight as an exemplar","msgtype":"m.text"},"ts":1675189985712,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CPigKBEkTxDgEryxB-SEQQ0Pb0riziW_LW88QFTJmvA"},
{"content":{"body":"tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","msgtype":"m.text"},"ts":1675190090068,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kEIH-vjS1J1127vVBOJLlhJQLJUxGoMFxaF4n8ugf4w"},
{"content":{"body":" * tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","m.new_content":{"body":"tbc I'm fine with the status quo also but very mildly prefer removing InstallErrorCause","msgtype":"m.text"},"m.relates_to":{"event_id":"$kEIH-vjS1J1127vVBOJLlhJQLJUxGoMFxaF4n8ugf4w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675190097980,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eryE6XL_jX_L_83xGX8ewlrQC8i934Z6DaRUan_7sJ8"},
{"content":{"body":"Seems a little odd to not support it silently. but maybe ok. Can't imagine people using this constructor directly very often","msgtype":"m.text"},"ts":1675190109327,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$vrB8iPLgfGCfMMp8j2Adq5jizn3kyGLMIrydOqpyF0Q"},
{"content":{"body":"yes the silent nop is weird","msgtype":"m.text"},"ts":1675190149253,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dRdPYmQCTKe-fbSj7nWk1OSCTr7Hwf69aNH_NII68To"},
{"content":{"body":"but also convinced it doesn't matter in practice","msgtype":"m.text"},"ts":1675190155461,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VMHieYF2dfFUQ_F35N3WuMQ5ABcN2cpyzWi9dPxx7AM"},
{"content":{"body":"Please could someone add a summary to the notes","msgtype":"m.text"},"ts":1675190169640,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY"},
{"content":{"body":"error conditions in error constructors are kind of painful","msgtype":"m.text"},"ts":1675190194407,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw"},
{"content":{"body":"Its the nature of the language. Even before `{ cause }` was supported anyone could pass that into an `Error` constructor without issue, they just wouldn't get the benefit.","format":"org.matrix.custom.html","formatted_body":"Its the nature of the language. Even before <code>{ cause }</code> was supported anyone could pass that into an <code>Error</code> constructor without issue, they just wouldn't get the benefit.","msgtype":"m.text"},"ts":1675190200526,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WdEnhBCr6Qx_v4brHlKukW0AiMdM-az1BtC-7a6AxeY"},
{"content":{"body":"I think I don't understand the result of removing InstallErrorCause, what's the difference?","msgtype":"m.text"},"ts":1675190208329,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$YCaDCx_Kll2sBXZju0le-CHLxSuQunsNk-g2-zkaGa0"},
{"content":{"body":"tru nuf","msgtype":"m.text"},"ts":1675190211344,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QsWSAJRvteD5Ixo2ju-rDHU_zxcykyOPhsJ_CqQsR3s"},
{"content":{"body":"> <@bakkot:matrix.org> error conditions in error constructors are kind of painful\n\nSee `new AggregateError()`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>error conditions in error constructors are kind of painful</blockquote></mx-reply>See <code>new AggregateError()</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$XkRe4Qp6IDeTNFi0bCE4O7hA_mT63UNUVOwEK43ZFGw"}},"msgtype":"m.text"},"ts":1675190217426,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iS15HQNu91QMCR6b80K_PvRlS1xfzj-x2hF7_uUHOFM"},
{"content":{"body":"Only throws because `undefined` isn't iterable.","format":"org.matrix.custom.html","formatted_body":"Only throws because <code>undefined</code> isn't iterable.","msgtype":"m.text"},"ts":1675190229193,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$d_AcAK7gS4FmsQXvbjqb3irXlkl05Eushn19UKbqQZ8"},
{"content":{"body":"HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","msgtype":"m.text"},"ts":1675190263118,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8"},
{"content":{"body":"(compared to other native errors, most of which check for `undefined` for things like `message`).","format":"org.matrix.custom.html","formatted_body":"(compared to other native errors, most of which check for <code>undefined</code> for things like <code>message</code>).","msgtype":"m.text"},"ts":1675190265832,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$JGpRJHuC5wVD7FLVyAcmvDZM26JQL8I-61wCtHciBdk"},
{"content":{"body":" * HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","m.new_content":{"body":"HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error","msgtype":"m.text"},"m.relates_to":{"event_id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675190284595,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aXf1sksM893u84F3KRrWiZ1YL4KoPf1DZTw6f3ObzfI"},
{"content":{"body":"it's only relevant if you're attempting to construct a SuppressedError manually","msgtype":"m.text"},"ts":1675190299269,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$on4pfbCSdFD_lZdxQyIpE2Xaz4IHCLrDcmh6UPxKouQ"},
{"content":{"body":"> <@aclaymore:matrix.org> Please could someone add a summary to the notes\n\nbump...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>Please could someone add a summary to the notes</blockquote></mx-reply>bump...","m.relates_to":{"m.in_reply_to":{"event_id":"$Owb-qEsL2yNJfsAxBEwvI7p9_x54QNVAQNGS48pPNiY"}},"msgtype":"m.text"},"ts":1675190310360,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8fJbT3rUXlatk8dd_ahp3KhyCvUE5huFzDFXHnMdbDs"},
{"content":{"body":"I primarily added `InstallErrorCause` to SuppressedError for consistency with other native errors. Not having it is not an issue to the proposal.","format":"org.matrix.custom.html","formatted_body":"I primarily added <code>InstallErrorCause</code> to SuppressedError for consistency with other native errors. Not having it is not an issue to the proposal.","msgtype":"m.text"},"ts":1675190318351,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$37kSC2XN7C4s_0mXyWnrSQZFCBO1oja7OmC-ZFj6o9w"},
{"content":{"body":"> <@bakkot:matrix.org> HE Shi-Jun: the consequence of removing InstallErrorCause is, the `options` parameter is ignored, so if you do `new SuppressedError('foo', null, null, { cause })` the `cause` property is not read or installed on the resulting error\n\nok, it's a little weird to ignore `cause`, but i guess it's harmless?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: the consequence of removing InstallErrorCause is, the <code>options</code> parameter is ignored, so if you do <code>new SuppressedError('foo', null, null, { cause })</code> the <code>cause</code> property is not read or installed on the resulting error</blockquote></mx-reply>ok, it's a little weird to ignore <code>cause</code>, but i guess it's harmless?","m.relates_to":{"m.in_reply_to":{"event_id":"$k-ziV3zTOT0XpChoWpRLrZ2_vuuJlkP5JacCazB-3L8"}},"msgtype":"m.text"},"ts":1675190347779,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$VAzn5Q0C7Aqpf8kwm8tPX-p7VdECwQLF-gB--YewvPo"}
]