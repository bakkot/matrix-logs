[
{"content":{"body":"shu: the JS0/JSSugar presentation is already making some waves for sure.  This video and its comments might be useful to ingest for feedback:\n\nhttps://youtu.be/onCHSujPlfg?si=76ar9kWMy-GmI-JJ","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: the JS0/JSSugar presentation is already making some waves for sure.  This video and its comments might be useful to ingest for feedback:</p>\n<p>https://youtu.be/onCHSujPlfg?si=76ar9kWMy-GmI-JJ</p>","msgtype":"m.text"},"ts":1729729122783,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$p9NmAUiLIq3bHJwjW2qIWGyfQYpA23h-fYYtdVV4MUw"},
{"content":{"body":"There seems to be some confusion from the slides on what JS0 is, with some suggesting it‚Äôs a new bytecode format for engines. üòÇ","msgtype":"m.text"},"ts":1729729186858,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$_1PSMQ4c8sT0-5HKPL_BS-irx-EtebTv7NwftVPenYw"},
{"content":{"body":"sigh","m.mentions":{},"msgtype":"m.text"},"ts":1729735068903,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gmTP5dH5NlS_U2kp4Rezl_bHOPE541Sx6W435aV1zq4"},
{"content":{"body":"it's in the slides...","m.mentions":{},"msgtype":"m.text"},"ts":1729735071802,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5rjhYkWckLGZThFjepj6-0vr42AYbXXp0UEfS5ls1L0"},
{"content":{"body":"> <@devsnek:matrix.org> I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser internals?\n\nthose components can have bugs, and those bugs can lead to RCE or data corruption or whatever","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LE_RB-sAd2OzBJO-tau6OBlTMzNk3XPuzP_QKrWN-ko?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>I feel like I don&#39;t quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new &quot;is null or undefined&quot; op. isn&#39;t this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser internals?</blockquote></mx-reply>those components can have bugs, and those bugs can lead to RCE or data corruption or whatever","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$LE_RB-sAd2OzBJO-tau6OBlTMzNk3XPuzP_QKrWN-ko"}},"msgtype":"m.text"},"ts":1729735126034,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PH4Applr6u410qferyXfG8fDlFylo70_z9MYfDPyJ9E"},
{"content":{"body":"I know. I was actually surprised at how people have reacted to it","msgtype":"m.text"},"ts":1729735131022,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$DhyTtz1dfPg2BslK4PvlvvPhTz4DU_4M-GOxeHPhmsY"},
{"content":{"body":"it's hard to have any actual discussion if people are riding the outrage wave","m.mentions":{},"msgtype":"m.text"},"ts":1729735163799,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ocINf4-fH5pWbXuiyY0cjZwVNRM_h3C52nZ2vfjSpk8"},
{"content":{"body":"Anthony Bullard: if you've watched that video, can you summarize if there're any useful signals? i'd rather save myself the stress","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@anthonybullard:matrix.org\">Anthony Bullard</a>: if you've watched that video, can you summarize if there're any useful signals? i'd rather save myself the stress","m.mentions":{"user_ids":["@anthonybullard:matrix.org"]},"msgtype":"m.text"},"ts":1729735247435,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$W93MJ8mvC_MngcKWbrFsnBZwXY3uwETPhnuV9y9ER6U"},
{"content":{"body":"To be clear, the creator here was going off an unsympathetic article discussing it and the slides with no talk track.  And he is generally ambivalent towards JS particularly the tooling - which this proposal would lean into","msgtype":"m.text"},"ts":1729735265397,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$bnGnkSLjGwRoEKF_7bD7SQ5dmzY3JeOdG4aD1_MhnKM"},
{"content":{"body":"My main takeaway:  people are worried about two main things - a further increase in the role of tooling in the JS ecosystem (an already complex landscape), and the impact that pushing desugaring into the packaging layer will have on bundle sizes.","msgtype":"m.text"},"ts":1729735377387,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$dRjP0_WKGIqSFhoIyNSBTq3hTYJbfdjhNLPwNOHHs5A"},
{"content":{"body":"Also debugging is always a talking point with this (compilation/transpilation) as many source map tools in practice are found wanting.","msgtype":"m.text"},"ts":1729735460134,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$DxwSaycn7yGsrhOAFWKU9_m86hzA-Na7x-40DQnO_To"},
{"content":{"body":"Lastly, there is for many a philosophical objection to a official separation of the language into a superset for users willing/able to leverage these tools and those people who just want to write JS and run it.  Relatedly, some disgruntlement on how all this is necessary for a nominally interpreted language.","msgtype":"m.text"},"ts":1729735576889,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$-lSz9p2Bs8Pn6Nvz7SDn5rF-dvDaz3gRWe2O6iSUIGk"},
{"content":{"body":"thanks for your thoughts","m.mentions":{},"msgtype":"m.text"},"ts":1729735588255,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ntSC6zOQ9DGVBymenr0eiIlmGaNovWwQXGqNci6ps7w"},
{"content":{"body":"I sympathize with some of these, but understand the broader context that you are approaching this from.","msgtype":"m.text"},"ts":1729735633152,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$xlfNUEvqjZ8F0G2FFlbL3-r8F9YAOR3SfdftJbi34u4"},
{"content":{"body":"there is a definitely disconnect with JS-that-i-grew-up-with and JS-in-the-world-today, and i also feel bad that JS-that-i-grew-up-with and how many people learned to is no longer the use case being solved for","m.mentions":{},"msgtype":"m.text"},"ts":1729735702222,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zoR-jDTLTBVpRyBmWfoRsjUpUad-3u3elCvqnH4zqa0"},
{"content":{"body":"I‚Äôve been trying to convince some delegates to be proactive and discuss these proposals (at the appropriate time) with hese massively influential creators and have a discussion early","msgtype":"m.text"},"ts":1729735716543,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$FIcTB9pTeh5yY12W9ctzNw2WS6HlCBh13XhBuemIRhY"},
{"content":{"body":"oh i don't know if that's a good idea","m.mentions":{},"msgtype":"m.text"},"ts":1729735728650,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z8UZmT6ATBMG29F8WrcmwqhXB-28zol68C7IwDKj034"},
{"content":{"body":"you think we should actively engage influencers?","m.mentions":{},"msgtype":"m.text"},"ts":1729735735325,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DwElCzq5JKStgMxSa26wd41uUaePoTPlmtqE8Dl3RBs"},
{"content":{"body":"Absolutely. If we don‚Äôt explain and contextualize early, they and there audience can take the narrative in any direction","msgtype":"m.text"},"ts":1729735780193,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$zq7Os-VQvjrtKIr8CTqcbfL9B2LYKLjFhCq5aOumY20"},
{"content":{"body":"And poison the well so to speak ","format":"org.matrix.custom.html","formatted_body":"And poison the well so to speak","msgtype":"m.text"},"ts":1729735806358,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$UdQ7y2-kV8bE5AoS9H_Qb3EXqHl9m12CGq-do7rlfGk"},
{"content":{"body":"but we aren't a direct democracy","m.mentions":{},"msgtype":"m.text"},"ts":1729735820516,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$thfSDE-U4xC0ubX7FUWU3qAa-pK3cCjcyre8tgjBRjg"},
{"content":{"body":"They don‚Äôt have decision making power","msgtype":"m.text"},"ts":1729735835875,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$70-lzW0QlVz4DKLPRyNV1-B1qKLiAk-GA-g6c_2FLkU"},
{"content":{"body":"We should just say ‚Äúthis is what we are actually talking about doing and why‚Äù","msgtype":"m.text"},"ts":1729735863002,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$D99NIKK51fVC5vLwZJ1rTk_kdfWc0u1lxt4tciojgD8"},
{"content":{"body":"good luck getting people to also volunteer time for PR, i guess","m.mentions":{},"msgtype":"m.text"},"ts":1729735879305,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MkxGMtCVBLJqTUZM9MOhJJRMmvkxNA7CiDMsYBCmfF4"},
{"content":{"body":"But I can understand why that may not be desirable for some delegates and in some cases","msgtype":"m.text"},"ts":1729735891345,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$qzqPuFL_G_r0yJio1QdgdsfyQ5IPvcr2TpADzCU68yY"},
{"content":{"body":"For sure, you are way too busy for that","msgtype":"m.text"},"ts":1729735911498,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$NiZbAIxdQsNX9ThrW6jufpZoFt0k7cYrEaiUGZzSGBY"},
{"content":{"body":"Maybe having a comms role within the committee , or at least an official protocol around it, is a good idea?","msgtype":"m.text"},"ts":1729735958868,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$T2fa2zqs08A260nXF-1pknWQZRW6wdjvHV0strPGbP8"},
{"content":{"body":"Axel Rauschmeyer has been running TC39‚Äôs entire PR division solo pro bono for a while. A useful email address to have. ","format":"org.matrix.custom.html","formatted_body":"Axel Rauschmeyer has been running TC39‚Äôs entire PR division solo pro bono for a while. A useful email address to have.","msgtype":"m.text"},"ts":1729743165774,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$3KdPXY4GYhNukFnzcy6DSNI1jyWVdwgY_JPQ6leC5Eo"},
{"content":{"body":"> <@shuyuguo:matrix.org> those components can have bugs, and those bugs can lead to RCE or data corruption or whatever\n\ni mean the parsing and bytecode generation step is theoretically pure, no? like if you could generate an RCE with a change to it, you could also generate an RCE with a specially crafted input without that change.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PH4Applr6u410qferyXfG8fDlFylo70_z9MYfDPyJ9E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>those components can have bugs, and those bugs can lead to RCE or data corruption or whatever</blockquote></mx-reply>i mean the parsing and bytecode generation step is theoretically pure, no? like if you could generate an RCE with a change to it, you could also generate an RCE with a specially crafted input without that change.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$PH4Applr6u410qferyXfG8fDlFylo70_z9MYfDPyJ9E"}},"msgtype":"m.text"},"ts":1729748813740,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$7HODw_LLhO68v9P5TlwjJM8nKNtmUORwMq6vN1QvEm4"},
{"content":{"body":"> <@shuyuguo:matrix.org> good luck getting people to also volunteer time for PR, i guess\n\nTC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MkxGMtCVBLJqTUZM9MOhJJRMmvkxNA7CiDMsYBCmfF4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>good luck getting people to also volunteer time for PR, i guess</blockquote></mx-reply>TC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$MkxGMtCVBLJqTUZM9MOhJJRMmvkxNA7CiDMsYBCmfF4"}},"msgtype":"m.text"},"ts":1729775250305,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wN7Pp34SW3VclxAJJoKAyaX7l7YMbnxvDJdiFAMqzlk"},
{"content":{"body":"I think we need to examine some more concrete proposals and how they are affected by the concerns raised in the JSSugar presentation. I don't think we actually have a lot of non-trivial sugar proposals coming up [if the trivial ones like void aren't considered have a lot of cost]--mostly it's just pattern matching and extractors. So let's go deeper into examining that one and see how these concerns are related.","m.mentions":{},"msgtype":"m.text"},"ts":1729775385746,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Eb_NbZSXp8-pqcqZOkBTPWq1nvCgJTAxZTh8fWZbFPU"},
{"content":{"body":"The biggest problem I heard with extractors was that array destructuring is slow. What if we can change the semantics of array destructuring to always do the original iteration semantics if it's given an actual Array? That would make it much easier to optimize.","m.mentions":{},"msgtype":"m.text"},"ts":1729775439524,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zq6VlmDP6sPqvJ_Rij2IPgFiIMbwZNPsztZpPZ7jjJY"},
{"content":{"body":"(tbd if that is web-compatible)","m.mentions":{},"msgtype":"m.text"},"ts":1729775447788,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FNTybPI6SNw6_ZL6d0kGBiBMf0chaHNlFTmVEPyrcWg"},
{"content":{"body":"we also need to strengthen critical analysis of proposals in general, if people feel like we're letting things through which aren't worth it. Such proposals probably shouldn't be included in sugar either. I hope TG5 can help, though past efforts have held themselves to a very high level of scientific rigor, preventing them from drawing conclusions.","m.mentions":{},"msgtype":"m.text"},"ts":1729775562005,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3YPPxTOdr0PMJhovB0XOv7pz3-iVN9AUbmuR6rXgHOg"},
{"content":{"body":"> <@littledan:matrix.org> The biggest problem I heard with extractors was that array destructuring is slow. What if we can change the semantics of array destructuring to always do the original iteration semantics if it's given an actual Array? That would make it much easier to optimize.\n\nWhat does \"original iteration semantics\" mean here? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zq6VlmDP6sPqvJ_Rij2IPgFiIMbwZNPsztZpPZ7jjJY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br />The biggest problem I heard with extractors was that array destructuring is slow. What if we can change the semantics of array destructuring to always do the original iteration semantics if it's given an actual Array? That would make it much easier to optimize.</blockquote></mx-reply>What does &quot;original iteration semantics&quot; mean here?","m.relates_to":{"m.in_reply_to":{"event_id":"$zq6VlmDP6sPqvJ_Rij2IPgFiIMbwZNPsztZpPZ7jjJY"}},"msgtype":"m.text"},"ts":1729775819883,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$EpjNb1kXCPzzpBSN31jydUVKrSAbOhoq3awMk6I8jrk"},
{"content":{"body":"> <@rbuckton:matrix.org> What does \"original iteration semantics\" mean here?\n\nI mean, the behavior of the original Array.prototype[Symbol.iterator] and %ArrayIterator%.prototype.next","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EpjNb1kXCPzzpBSN31jydUVKrSAbOhoq3awMk6I8jrk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>What does \"original iteration semantics\" mean here?</blockquote></mx-reply>I mean, the behavior of the original Array.prototype[Symbol.iterator] and %ArrayIterator%.prototype.next","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$EpjNb1kXCPzzpBSN31jydUVKrSAbOhoq3awMk6I8jrk"}},"msgtype":"m.text"},"ts":1729775954913,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ri1c_jTfVV5-tuzaZ5PmWHrYLYtPDbZXTFwHxadaYsk"},
{"content":{"body":"i.e. the ES5 downleveling semantics","m.mentions":{},"msgtype":"m.text"},"ts":1729775963523,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$stiPoNPciPTZT1V-hx8CJovwYCBTrphtjcCA2TbmrfU"},
{"content":{"body":"so it'd check IsArray and branch to that, otherwise eagerly convert it to an array and do the same","m.mentions":{},"msgtype":"m.text"},"ts":1729775983100,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$e6NpcGj8m6qgU4mdKPkHz0Cgzm3pVQqJp_mejMf9t28"},
{"content":{"body":" * so it'd check IsArray and branch to that, otherwise eagerly convert it to an array (via the actual iteration protocol) and do the same","m.mentions":{},"m.new_content":{"body":"so it'd check IsArray and branch to that, otherwise eagerly convert it to an array (via the actual iteration protocol) and do the same","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$e6NpcGj8m6qgU4mdKPkHz0Cgzm3pVQqJp_mejMf9t28","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729776007592,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RIhmQb_p6xkUtgCuTitx2oHwiuBRkO6p8aMaxREN6XM"},
{"content":{"body":"(we'd only do this for destructuring, and leave for-of loops intact)","m.mentions":{},"msgtype":"m.text"},"ts":1729776024955,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1KUSNoaa9qF8-yohwDlZk9YZ8LlC_oq67qZIoimidSs"},
{"content":{"body":"so the hard part will be checking web compatibility. (I hope we can avoid getting stuck like the recent Mozilla species investigation, finding a non-answer and not feeling like it's worth it to allocate resources to keep going.)","m.mentions":{},"msgtype":"m.text"},"ts":1729776085840,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1lNGwDdyo0-phRI0UbESQGMPNoSXK9U575UV3VJKMMo"},
{"content":{"body":"any thoughts on that idea?","m.mentions":{},"msgtype":"m.text"},"ts":1729776380653,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WO1-XUtnfKeqYhjOkltgszCP4LDtoHwp1hbfpQ_Og9I"},
{"content":{"body":"not sure why we'd special-case destructuring and not all other uses of the iteration protocol","m.mentions":{},"msgtype":"m.text"},"ts":1729778332347,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G50hhjM16lYxu7mBtut3GDeCYmQ8FnJL_ueA0uluuuQ"},
{"content":{"body":"but I would be happy to make array iteration special, in whatever way","m.mentions":{},"msgtype":"m.text"},"ts":1729778352686,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4foU6Jyo9TkNmww9sanpan2qKtxsb9-qoCImCyaoLrQ"},
{"content":{"body":"well, this is a simpler use case of it, with no early return, and especially easy to implement an eager conversion function for the slow path without changing semantics. But yeah I'd be happy to generalize it to all iteration if we find that that's web-compatible","m.mentions":{},"msgtype":"m.text"},"ts":1729778403664,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$z-NwcW88F8tOGz7SQqSxtxkYdYrcYkxFGJxtsXKNEgc"},
{"content":{"body":"arguably we already special-cased it for the default subclass constructor, so...","m.mentions":{},"msgtype":"m.text"},"ts":1729778420087,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Rcs1-7Cc7ktx3KPfXnWpzIwD-kGVxv27ZMiFP3QhiV0"},
{"content":{"body":"> <@bakkot:matrix.org> not sure why we'd special-case destructuring and not all other uses of the iteration protocol\n\nhow do you feel about special-casing random cases of iteration when it's especially easy/useful/proven to be web-compatible? does it seem too unprincipled?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$G50hhjM16lYxu7mBtut3GDeCYmQ8FnJL_ueA0uluuuQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>not sure why we&#39;d special-case destructuring and not all other uses of the iteration protocol</blockquote></mx-reply>how do you feel about special-casing random cases of iteration when it's especially easy/useful/proven to be web-compatible? does it seem too unprincipled?","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$G50hhjM16lYxu7mBtut3GDeCYmQ8FnJL_ueA0uluuuQ"}},"msgtype":"m.text"},"ts":1729779337914,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PY5q63PSiFW1pGrQwvENMGnyg3dQPBuZj5pkVcfopO0"},
{"content":{"body":"eh... it's not that I'm opposed on principle, but in practice, I would be kinda surprised if those random cases are web-compat and other cases aren't, and if we're going to run the risk of trying it seems a shame not to get all the wins we can","m.mentions":{},"msgtype":"m.text"},"ts":1729779415977,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p3Vy1UQe4I-FPfmRaxacnOlJF-z_YkaYTSVtgvSjmtk"},
{"content":{"body":"fair, yeah let's see if we can do it","m.mentions":{},"msgtype":"m.text"},"ts":1729779444450,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dKcZ6GWnFN8TAu-9EsYGqxYr3-o8KBlTIuxdIOGIBMc"},
{"content":{"body":"> <@littledan:matrix.org> I mean, the behavior of the original Array.prototype[Symbol.iterator] and %ArrayIterator%.prototype.next\n\nI don't understand why this can't be a transparent optimization when the [Symbol.Iterator] function === %Array.prototype.values% ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ri1c_jTfVV5-tuzaZ5PmWHrYLYtPDbZXTFwHxadaYsk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I mean, the behavior of the original Array.prototype[Symbol.iterator] and %ArrayIterator%.prototype.next</blockquote></mx-reply>I don't understand why this can't be a transparent optimization when the [Symbol.Iterator] function === %Array.prototype.values% ?","m.mentions":{"user_ids":["@littledan:matrix.org","@rbuckton:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ri1c_jTfVV5-tuzaZ5PmWHrYLYtPDbZXTFwHxadaYsk"}},"msgtype":"m.text"},"ts":1729781293758,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HoI8ykqI-_c2FkKr-XNqebfH4BYZRRq9qDtPRbZvd7g"},
{"content":{"body":"In general, if we know that the iterator making function is an intrinsic, we know what behavior the iterator will have and it doesn't need to actually be created if the spec itself is doing the iterating, no?","m.mentions":{},"msgtype":"m.text"},"ts":1729781460101,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$rpNyXzfD6mnYVsW750iJrdaGIKlQ8QV9thAOercDahQ"},
{"content":{"body":"I mean sure we can spell it out in the spec, but that wouldn't be observable, and usually we don't spell out things that are unobservable optimizations","m.mentions":{},"msgtype":"m.text"},"ts":1729781526803,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$fjR_vbG24uYDu24zC79Rg7rS4wfPdWFxUHJdvbSIwiI"},
{"content":{"body":"the proposal would be to change the spec so that implementations don't have to do the quite complicated bookkeeping to ensure that all the array iterator machinery is intac","m.mentions":{},"msgtype":"m.text"},"ts":1729784075348,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FuR5LOjDtFm7twqgPL3I_pibZ5uptvRgortuiwLtBbk"},
{"content":{"body":" * the proposal would be to change the spec so that implementations don't have to do the quite complicated bookkeeping to ensure that all the array iterator machinery is intact","m.mentions":{},"m.new_content":{"body":"the proposal would be to change the spec so that implementations don't have to do the quite complicated bookkeeping to ensure that all the array iterator machinery is intact","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$FuR5LOjDtFm7twqgPL3I_pibZ5uptvRgortuiwLtBbk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729784076528,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nhPCc-ferPk-KkbP3NeqwhcUM2B4WXdNUvFONpEEetc"},
{"content":{"body":" * the proposal would be to change the spec so that implementations don't have to do the quite complicated bookkeeping to ensure that all the array iterator machinery is intact before they can do that optimization","m.mentions":{},"m.new_content":{"body":"the proposal would be to change the spec so that implementations don't have to do the quite complicated bookkeeping to ensure that all the array iterator machinery is intact before they can do that optimization","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$FuR5LOjDtFm7twqgPL3I_pibZ5uptvRgortuiwLtBbk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729784083281,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$COdD5NzMY5DFuJkwWE08ipBUs6osj83nlao44JAnIDk"},
{"content":{"body":"\"it is ok for this to be uselessly complicated because a sufficiently smart engine could make it fast anyway\" is not that compelling of an argument","m.mentions":{},"msgtype":"m.text"},"ts":1729784125312,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QHAqdxyok3K6K1ZFcoU6sMyUE0V7YQQqASTShpt42mo"},
{"content":{"body":"if you're just writing an interpreter that sort of optimization is fairly easy but once you're trying to do codegen it gets pretty complicated","m.mentions":{},"msgtype":"m.text"},"ts":1729784194029,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WRtqx9kMmF5BwTlP63VghYp5EQ_GxTmPlhdziP24HDA"},
{"content":{"body":"also this optimization has the cool property that you can also implement it in a desugaring (with a small support library). And you have to desugar destructuring if you want to, e.g., implement extractors in a transpiler.","m.mentions":{},"msgtype":"m.text"},"ts":1729784331668,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-S6Y08vFLu_sUSXshtUnEtx-z9xBeKgSDUkaPC1tJSY"},
{"content":{"body":"and you have to check for two things: whether Array.prototype[Symbol.iterator] is the original value, and whether %ArrayIteratorPrototype%.next is the original value","m.mentions":{},"msgtype":"m.text"},"ts":1729784382983,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4QpNetdcTsVQFqaBts5OdtKhv9NFnSUfzuHObBczzwg"},
{"content":{"body":"it's not free to maintain a bit in advance for this check","m.mentions":{},"msgtype":"m.text"},"ts":1729784399338,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$c54iu9ZVWTOKGaZY5b5qbqswYHvQG_Nwl6OK15uUvFc"},
{"content":{"body":"> <@littledan:matrix.org> TC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.\n\ni strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers to on social media. is that really what you're saying?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wN7Pp34SW3VclxAJJoKAyaX7l7YMbnxvDJdiFAMqzlk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>TC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.</blockquote></mx-reply>i strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers to on social media. is that really what you're saying?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wN7Pp34SW3VclxAJJoKAyaX7l7YMbnxvDJdiFAMqzlk"}},"msgtype":"m.text"},"ts":1729787290061,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tYt0kpdQGm47Ylc_VX3Nsjm1pak6EjWUN1XGtG0mJ6A"},
{"content":{"body":"> <@littledan:matrix.org> TC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.\n\n * i strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers on social media. is that really what you're saying?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wN7Pp34SW3VclxAJJoKAyaX7l7YMbnxvDJdiFAMqzlk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>TC39 and web standards are all about broad consensus-building. We don't really have a private back room where deals can be made that don't align with the rest of the JavaScript community, because we are all part of it and listening to each other. If one person doesn't have time for some parts of this consensus-building, then they can work with other allies/co-champions to help explain things broadly. I haven't watched any of the videos but I agree with a lot of the points of criticism that have been raised, including Anthony's summary above.</blockquote></mx-reply> * i strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers on social media. is that really what you're saying?","m.mentions":{},"m.new_content":{"body":"i strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers on social media. is that really what you're saying?","format":"org.matrix.custom.html","formatted_body":"i strongly disagree that broad consensus building at the level of committee delegates itself (on the order of 40 people) is somehow the same kind of work as broadcasting with influencers on social media. is that really what you're saying?","m.mentions":{"user_ids":["@littledan:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$tYt0kpdQGm47Ylc_VX3Nsjm1pak6EjWUN1XGtG0mJ6A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729787327117,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NbKKflDctvkZ4opFWiSvwuE29EoS1a4cWlO8DZw9BLY"},
{"content":{"body":"and we definitionally have a back room. people on twitter and youtube comments can't come and break consensus in tc39!","m.mentions":{},"msgtype":"m.text"},"ts":1729787509203,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IhW64J-0wtVfS6G8-4wfCujl7vGWj4QRz9WpNKYgTfw"},
{"content":{"body":"they can't break consensus, but it's all the same broader conversation, and points of view from outside of committee can influence committee members. We purposely operate in the open.","m.mentions":{},"msgtype":"m.text"},"ts":1729788648718,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6IPa_AP6hOf9eRHws6g5YebBkHFx-TegPxzqL1hNEfY"},
{"content":{"body":"\"broad consensus-building\" doesn't mean everyone in that broad group vetoes things. As Michael Saboff has pointed out, consensus doesn't always mean this veto-driven thing that we do.","m.mentions":{},"msgtype":"m.text"},"ts":1729788724502,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QB6BkQ63TricAUGyUA39T6n7zW-CSOmBRTbzUmsGuSk"},
{"content":{"body":"i'm still unclear what you're getting at","m.mentions":{},"msgtype":"m.text"},"ts":1729789169272,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_4Uit2SHeWLwTnPVNvfxMA7misEPbq3RCtIOfZLUwqg"},
{"content":{"body":"we're not running public campaigns for proposals","m.mentions":{},"msgtype":"m.text"},"ts":1729789198411,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$I0kIs66_Fg2EuJK6oZXjc-NU2HpJ310JRldfMQZIk8M"},
{"content":{"body":"i'm assuming you don't assume private fields were a giant mistake given the negative public reaction","m.mentions":{},"msgtype":"m.text"},"ts":1729789266975,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oj0mjZh055WywP0HbcogTVmb75ioGNb1QDa1cn3sKnI"},
{"content":{"body":" * i'm assuming you don't think private fields were a giant mistake given the negative public reaction","m.mentions":{},"m.new_content":{"body":"i'm assuming you don't think private fields were a giant mistake given the negative public reaction","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$oj0mjZh055WywP0HbcogTVmb75ioGNb1QDa1cn3sKnI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729789271558,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Kz_IQdOiR08JIEe6WUsVMUcIT8tPTU5DEB85VaUUZb4"},
{"content":{"body":"yeah that's a good example of where we definitely did have a public conversation with mixed views from outside and we drew a conclusion in committee. I'm not talking about external groups having a veto, but I did make a specific effort to explain outwardly what it was about, and work with non-committee-members and people doing public-facing communication/education.","m.mentions":{},"msgtype":"m.text"},"ts":1729789376698,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vAC-Vyg9dGDmY0OQHDQCeXD3TCEnG4CdymYRPnLOX5o"},
{"content":{"body":"I don't think all proposal champions need to do this, but it's good to have people in the coalition working on a proposal who want to interact with people outside of committee.","m.mentions":{},"msgtype":"m.text"},"ts":1729789426126,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$VNV1-SVKl8evgYbZ7-QP7e0iRctHzjT37BbC83t0YSs"},
{"content":{"body":"it's a normal activity for TC39. But there are lots of normal activities that only a subset of us do, because there's just so much to do.","m.mentions":{},"msgtype":"m.text"},"ts":1729789458074,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lFbtNzIglGQAAuONcP5iBRJR92ajEA13OBFdmcuO0dc"},
{"content":{"body":"private fields took longer because we made an honest attempt to understand and engage with this external feedback. It was frustrating for me at the time, but I think we should continue to do that (though maybe somehow timeboxed where it makes sense)","m.mentions":{},"msgtype":"m.text"},"ts":1729789546348,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OhgGUfLYt39IltpRycBqv7QLLJp9v26CUplh_QmobNo"},
{"content":{"body":"i think we drew pretty different conclusions from that episode","m.mentions":{},"msgtype":"m.text"},"ts":1729789733865,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3xrku1dYMw57AaIaUz23iMfBs3aT_9p2EU_reH_--eY"},
{"content":{"body":"and i disagree that it should be a normal activity for tc39","m.mentions":{},"msgtype":"m.text"},"ts":1729789745832,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$falYWMhiWKsRNc0AxfzqDIFwI5uJG-OlYVMNYj7HMa0"},
{"content":{"body":"there's the abstract problem of \"developer signal\" which _should_ be a normal activity for tc39","format":"org.matrix.custom.html","formatted_body":"there's the abstract problem of \"developer signal\" which <em>should</em> be a normal activity for tc39","m.mentions":{},"msgtype":"m.text"},"ts":1729789763012,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LpOhKXMenCP9h1wLIj1rJDkfSwqNRwGXEzR9tdbNNzg"},
{"content":{"body":"but this particular form of it, most definitely not","m.mentions":{},"msgtype":"m.text"},"ts":1729789768420,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_KByuukxJHa-2sbkgktSdI7njJoeFLCtqwsaZiVMJ78"},
{"content":{"body":"Yeah I think we can leave this as, we agree that we want to get developer signals. I didn‚Äôt mean to make a bigger point than that.","msgtype":"m.text"},"ts":1729789897173,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$40SLDdcd5WSqbQaG_nP8S77e2MFkXh0mraF3al7z4B8"},
{"content":{"body":"> <@littledan:matrix.org> and you have to check for two things: whether Array.prototype[Symbol.iterator] is the original value, and whether %ArrayIteratorPrototype%.next is the original value\n\nIf people mess with `%ArrayIteratorPrototype%.next` I'd say they immediately lose rights to any optimization","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4QpNetdcTsVQFqaBts5OdtKhv9NFnSUfzuHObBczzwg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>and you have to check for two things: whether Array.prototype[Symbol.iterator] is the original value, and whether %ArrayIteratorPrototype%.next is the original value</blockquote></mx-reply>If people mess with <code>%ArrayIteratorPrototype%.next</code> I'd say they immediately lose rights to any optimization","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4QpNetdcTsVQFqaBts5OdtKhv9NFnSUfzuHObBczzwg"}},"msgtype":"m.text"},"ts":1729796385453,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$yrNwk4iR0FV7qauyW7fQ4iKsSp3TOeyItewfd4COGXI"},
{"content":{"body":"> <@mhofman:matrix.org> If people mess with `%ArrayIteratorPrototype%.next` I'd say they immediately lose rights to any optimization\n\nbut... do they retain rights to have that messing-with be respected by iteration? I'd say no","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yrNwk4iR0FV7qauyW7fQ4iKsSp3TOeyItewfd4COGXI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>If people mess with <code>%ArrayIteratorPrototype%.next</code> I'd say they immediately lose rights to any optimization</blockquote></mx-reply>but... do they retain rights to have that messing-with be respected by iteration? I'd say no","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yrNwk4iR0FV7qauyW7fQ4iKsSp3TOeyItewfd4COGXI"}},"msgtype":"m.text"},"ts":1729796830096,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nDaX1WGCBkJGs4NwAzb9rwnYLyXqRTis5T0a-I3CTxs"},
{"content":{"body":"the extra work that engines would have to do would be to retain those rights. and that's not trivial.","m.mentions":{},"msgtype":"m.text"},"ts":1729796844555,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5674J7b7lO8mvEEcbKako_E6OZPcpKwTPFgXD3dz-es"},
{"content":{"body":"I wonder if we could freeze array iterator instances and make `%AIP%. next` non-writable, non-configurable","format":"org.matrix.custom.html","formatted_body":"I wonder if we could freeze array iterator instances and make <code>%AIP%. next</code> non-writable, non-configurable","msgtype":"m.text"},"ts":1729797098414,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TQrHR-NY7BgdO10okfP5fV0h-q2-qn74O4aTCevnNK4"},
{"content":{"body":"> <@littledan:matrix.org> but... do they retain rights to have that messing-with be respected by iteration? I'd say no\n\nI mean we'd be changing the semantics. If someone overwrites `%ArrayIteratorPrototype%.next` to observe every array iteration, I think it's their expectation it'd work given how we currently specified it. Would that break someone is another question. So yeah I suppose that is where you need a normative / observable change if that's something you want to stop supporting.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nDaX1WGCBkJGs4NwAzb9rwnYLyXqRTis5T0a-I3CTxs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>but... do they retain rights to have that messing-with be respected by iteration? I'd say no</blockquote></mx-reply>I mean we'd be changing the semantics. If someone overwrites <code>%ArrayIteratorPrototype%.next</code> to observe every array iteration, I think it's their expectation it'd work given how we currently specified it. Would that break someone is another question. So yeah I suppose that is where you need a normative / observable change if that's something you want to stop supporting.","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nDaX1WGCBkJGs4NwAzb9rwnYLyXqRTis5T0a-I3CTxs"}},"msgtype":"m.text"},"ts":1729797422298,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$x5Hml2xNBeCPU7TKaadMIU-2AvJfDZ_z9Jpift0bqWk"},
{"content":{"body":"Of course frozen intrinsics would solve all this mess ;) Once the environment is locked down, your optimizer would know what it can permanently rely on or not.","m.mentions":{},"msgtype":"m.text"},"ts":1729797511941,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$BlOAEkzEpB0KKtsbt5fcpcZ6CZcQ0kCa-s0xLc--7nA"},
{"content":{"body":"> <@mhofman:matrix.org> I mean we'd be changing the semantics. If someone overwrites `%ArrayIteratorPrototype%.next` to observe every array iteration, I think it's their expectation it'd work given how we currently specified it. Would that break someone is another question. So yeah I suppose that is where you need a normative / observable change if that's something you want to stop supporting.\n\nyeah, this is an observable change, the question is whether this would break any actual reasonable and widely-deployed program. We don't give people the ability to observe object destructuring, and we shouldn't add that; this is more of an accidental capability IMO.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$x5Hml2xNBeCPU7TKaadMIU-2AvJfDZ_z9Jpift0bqWk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I mean we'd be changing the semantics. If someone overwrites <code>%ArrayIteratorPrototype%.next</code> to observe every array iteration, I think it's their expectation it'd work given how we currently specified it. Would that break someone is another question. So yeah I suppose that is where you need a normative / observable change if that's something you want to stop supporting.</blockquote></mx-reply>yeah, this is an observable change, the question is whether this would break any actual reasonable and widely-deployed program. We don't give people the ability to observe object destructuring, and we shouldn't add that; this is more of an accidental capability IMO.","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$x5Hml2xNBeCPU7TKaadMIU-2AvJfDZ_z9Jpift0bqWk"}},"msgtype":"m.text"},"ts":1729797641725,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3cXW7079nwS7J3li4AHtjoZWlfkBssRE1QY4pt8e8TM"},
{"content":{"body":"> <@mhofman:matrix.org> Of course frozen intrinsics would solve all this mess ;) Once the environment is locked down, your optimizer would know what it can permanently rely on or not.\n\nwe are not operating in a frozen intrinsics world; even if we're there sometimes, we need extractors to be reasonably efficient outside of that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BlOAEkzEpB0KKtsbt5fcpcZ6CZcQ0kCa-s0xLc--7nA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>Of course frozen intrinsics would solve all this mess ;) Once the environment is locked down, your optimizer would know what it can permanently rely on or not.</blockquote></mx-reply>we are not operating in a frozen intrinsics world; even if we're there sometimes, we need extractors to be reasonably efficient outside of that.","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BlOAEkzEpB0KKtsbt5fcpcZ6CZcQ0kCa-s0xLc--7nA"}},"msgtype":"m.text"},"ts":1729797687363,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$A2co_h7K3ZJGFJ0aiK52FeT0E3HZSs1KTHQ8ZbMIUB4"},
{"content":{"body":"But it'd be such a nice carrot for the environment to move to frozen intrinsics if there was a perf benefit to gain from it.","m.mentions":{},"msgtype":"m.text"},"ts":1729797802312,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$jVWr1fyGRnqxhJO6ioJ2Utvc-GQS4UM5kazveeR7PPk"},
{"content":{"body":"that doesn't seem like a great reason by itself to not do this sort of integrity enhancement for array iteration (or just destructuring) if it's otherwise web-compatible.","m.mentions":{},"msgtype":"m.text"},"ts":1729797842282,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$d74T9mxB__pG4NYrKysqTekHW21eU_ysRY0o-JRQWM8"},
{"content":{"body":"Oh sure one doesn't prevent the other. But in general, I would be hopeful that frozen object and frozen intrinsics should allow engines to do some optimizations instead of making things slower (as it seems to be the case currently). We hear stories of people liking hardened environments but being unhappy with the performance impact, which is a blocker for adoption in production.","m.mentions":{},"msgtype":"m.text"},"ts":1729802557614,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$OUMbprHVOZlUH2ZpRZX7rkWa7VdycnRJRnzIY06bbP4"},
{"content":{"body":" * Oh sure one doesn't prevent the other. But in general, I would be hopeful that frozen objects and frozen intrinsics should allow engines to do some optimizations instead of making things slower (as it seems to be the case currently). We hear stories of people liking hardened environments for the integrity guarantees, but being unhappy with the performance impact, which is a blocker for adoption in production.","m.mentions":{},"m.new_content":{"body":"Oh sure one doesn't prevent the other. But in general, I would be hopeful that frozen objects and frozen intrinsics should allow engines to do some optimizations instead of making things slower (as it seems to be the case currently). We hear stories of people liking hardened environments for the integrity guarantees, but being unhappy with the performance impact, which is a blocker for adoption in production.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OUMbprHVOZlUH2ZpRZX7rkWa7VdycnRJRnzIY06bbP4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729802586554,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$fj2BhGOUXXYNWSlNjLTSjUnau6GOx6qTKf44IhROuMw"},
{"content":{"body":" * Oh sure one doesn't prevent the other. But in general, I would be hopeful that frozen objects and frozen intrinsics should allow engines to do some optimizations instead of making things slower (as it seems to be the case currently). We hear stories of people liking hardened environments for the integrity guarantees, but being unhappy with the performance impact, which is a blocker for adoption in production in some cases.","m.mentions":{},"m.new_content":{"body":"Oh sure one doesn't prevent the other. But in general, I would be hopeful that frozen objects and frozen intrinsics should allow engines to do some optimizations instead of making things slower (as it seems to be the case currently). We hear stories of people liking hardened environments for the integrity guarantees, but being unhappy with the performance impact, which is a blocker for adoption in production in some cases.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OUMbprHVOZlUH2ZpRZX7rkWa7VdycnRJRnzIY06bbP4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729802605788,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$_jDjWWtGvKpmAFGAQDV_OqoSnSvglf0nBMMdZlWNJj4"},
{"content":{"body":"> <@littledan:matrix.org> well, this is a simpler use case of it, with no early return, and especially easy to implement an eager conversion function for the slow path without changing semantics. But yeah I'd be happy to generalize it to all iteration if we find that that's web-compatible\n\nI mentioned this in Tokyo, I want to spec the fast path like we did with `await`. Just turn it into `arr[i]` access internally","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24z-NwcW88F8tOGz7SQqSxtxkYdYrcYkxFGJxtsXKNEgc\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>well, this is a simpler use case of it, with no early return, and especially easy to implement an eager conversion function for the slow path without changing semantics. But yeah I'd be happy to generalize it to all iteration if we find that that's web-compatible</blockquote></mx-reply>I mentioned this in Tokyo, I want to spec the fast path like we did with <code>await</code>. Just turn it into <code>arr[i]</code> access internally","m.relates_to":{"m.in_reply_to":{"event_id":"$z-NwcW88F8tOGz7SQqSxtxkYdYrcYkxFGJxtsXKNEgc"}},"msgtype":"m.text"},"ts":1729810570336,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Q-9aN_QSS4tF3LMvybVlVFgv9hHqS2exLh5RKr-JNN0"},
{"content":{"body":"> <@jridgewell:matrix.org> I mentioned this in Tokyo, I want to spec the fast path like we did with `await`. Just turn it into `arr[i]` access internally\n\nYeah that‚Äôs what I‚Äôm saying","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24Q-9aN_QSS4tF3LMvybVlVFgv9hHqS2exLh5RKr-JNN0\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I mentioned this in Tokyo, I want to spec the fast path like we did with <code>await</code>. Just turn it into <code>arr[i]</code> access internally</blockquote></mx-reply>Yeah that‚Äôs what I‚Äôm saying","m.relates_to":{"m.in_reply_to":{"event_id":"$Q-9aN_QSS4tF3LMvybVlVFgv9hHqS2exLh5RKr-JNN0"}},"msgtype":"m.text"},"ts":1729810928945,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Fr_ii6er5-rA6EmMizDlvg3UqKLUa3RIJTfarsMW0yQ"}
]