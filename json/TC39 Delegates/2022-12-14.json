[
{"content":{"body":"Mathieu Hofman: did you have a proof of concept for the object reference leak for `Error.prepareStackTrace`? i'm trying to write a counterexample and am not sure how it's possible, actually","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: did you have a proof of concept for the object reference leak for <code>Error.prepareStackTrace</code>? i'm trying to write a counterexample and am not sure how it's possible, actually","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Mathieu Hofman: did you have a proof of concept for the object reference leak for `Error.prepareStackTrace`? i'm trying to write a counterexample and am not sure how it's possible, actually","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: did you have a proof of concept for the object reference leak for <code>Error.prepareStackTrace</code>? i'm trying to write a counterexample and am not sure how it's possible, actually","mimetype":"text/html"}]},"ts":1671045273963,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rsFhScI9et8NOBW9DLZmDU720xmmi4g5EEXnWwsg37M"},
{"content":{"body":"because wrapped functions (in both directions) throw fresh TypeErrors if the wrapped function throws, the fresh TypeErrors don't have outside stacks anyway","msgtype":"m.text","org.matrix.msc1767.text":"because wrapped functions (in both directions) throw fresh TypeErrors if the wrapped function throws, the fresh TypeErrors don't have outside stacks anyway"},"ts":1671045317452,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s7aA_wi8N4MIk3ch9Mzgxb8s__rH8voVEAShl7f_3j8"},
{"content":{"body":"as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation","msgtype":"m.text","org.matrix.msc1767.text":"as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation"},"ts":1671045408112,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3Eoc5Jt92khEXJMTXsAuxwRxiK0jZ4hVvhwm9iISUhM"},
{"content":{"body":" * as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation","m.new_content":{"body":"as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation","msgtype":"m.text","org.matrix.msc1767.text":"as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation"},"m.relates_to":{"event_id":"$3Eoc5Jt92khEXJMTXsAuxwRxiK0jZ4hVvhwm9iISUhM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation"},"ts":1671045469620,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$V-yWeh6-TUe_pglNfST9glR7I78tvTznY6wPJ4CiagU"},
{"content":{"body":"if, for DX reasons, we start wanting to stitch together .stacks even through the fresh error creation, then this may become a problem","msgtype":"m.text","org.matrix.msc1767.text":"if, for DX reasons, we start wanting to stitch together .stacks even through the fresh error creation, then this may become a problem"},"ts":1671045499689,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9gHhENKRqqrizVCSewgMwixwodGPEPIHrGREgmsKYjI"},
{"content":{"body":"> <@shuyuguo:matrix.org> as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation\n\nHuh? How so?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Eoc5Jt92khEXJMTXsAuxwRxiK0jZ4hVvhwm9iISUhM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>as specced today it doesn&#39;t seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation</blockquote></mx-reply>Huh? How so?","m.relates_to":{"m.in_reply_to":{"event_id":"$3Eoc5Jt92khEXJMTXsAuxwRxiK0jZ4hVvhwm9iISUhM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> as specced today it doesn't seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation\n\nHuh? How so?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Eoc5Jt92khEXJMTXsAuxwRxiK0jZ4hVvhwm9iISUhM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>as specced today it doesn&#39;t seem to me like we can ever get striped stacks at all, just because of how it falls out of the fresh error creation</blockquote></mx-reply>Huh? How so?","mimetype":"text/html"}]},"ts":1671045606863,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v3c-VZ2IYtohCsovIQv_MrYHhJjp7THmOoOuWzDvb0s"},
{"content":{"body":"how do you get a striped stack?","msgtype":"m.text","org.matrix.msc1767.text":"how do you get a striped stack?"},"ts":1671045618448,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Iz5M74-i3Ovkvv6Qh2zb9MnvA2P2eG7PC9t3yRJm988"},
{"content":{"body":"sorry, more specifically, how do you get a striped `.stack`?","format":"org.matrix.custom.html","formatted_body":"sorry, more specifically, how do you get a striped <code>.stack</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sorry, more specifically, how do you get a striped `.stack`?","mimetype":"text/plain"},{"body":"sorry, more specifically, how do you get a striped <code>.stack</code>?","mimetype":"text/html"}]},"ts":1671045631714,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KtNS4eGS1T7zvk1IDhlVDyo9HnnKy0swChfSfVOC2Qs"},
{"content":{"body":"where should i throw a `new Error()` to get a striped `.stack`?","format":"org.matrix.custom.html","formatted_body":"where should i throw a <code>new Error()</code> to get a striped <code>.stack</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"where should i throw a `new Error()` to get a striped `.stack`?","mimetype":"text/plain"},{"body":"where should i throw a <code>new Error()</code> to get a striped <code>.stack</code>?","mimetype":"text/html"}]},"ts":1671045652269,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cH9YeXxSRrAq7b0MktT6mEayqG_3ftTyXb3gR7vJfow"},
{"content":{"body":"(you can clearly get striped execution stacks, i'm just talking about the observable `.stack` thing v8 does)","format":"org.matrix.custom.html","formatted_body":"(you can clearly get striped execution stacks, i'm just talking about the observable <code>.stack</code> thing v8 does)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(you can clearly get striped execution stacks, i'm just talking about the observable `.stack` thing v8 does)","mimetype":"text/plain"},{"body":"(you can clearly get striped execution stacks, i'm just talking about the observable <code>.stack</code> thing v8 does)","mimetype":"text/html"}]},"ts":1671045713070,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$B3ovQq1xVhU_f_5O2PiGRPnAYEqDy3r3kB4rQqlOdjM"},
{"content":{"body":"from https://v8.dev/docs/stack-trace-api I don't understand why the `.stack` wouldn't contain at least function names that are striped","format":"org.matrix.custom.html","formatted_body":"from https://v8.dev/docs/stack-trace-api I don't understand why the <code>.stack</code> wouldn't contain at least function names that are striped","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"from https://v8.dev/docs/stack-trace-api I don't understand why the `.stack` wouldn't contain at least function names that are striped","mimetype":"text/plain"},{"body":"from https://v8.dev/docs/stack-trace-api I don't understand why the <code>.stack</code> wouldn't contain at least function names that are striped","mimetype":"text/html"}]},"ts":1671045803172,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$q30tszAjVhlQRV55znFQXe34Lul26ZFynyy9RN4IyuQ"},
{"content":{"body":"because of step 11 here: https://tc39.es/proposal-shadowrealm/#sec-ordinary-wrapped-function-call","msgtype":"m.text","org.matrix.msc1767.text":"because of step 11 here: https://tc39.es/proposal-shadowrealm/#sec-ordinary-wrapped-function-call"},"ts":1671045820571,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TgSAK-UPtpMp_R2V8Fg0dPJ6T_-qs8gO6yYqxsA20QE"},
{"content":{"body":"any time you call a wrapped function, there's an implicit try-catch around it, and you throw a *new* `TypeError`","format":"org.matrix.custom.html","formatted_body":"any time you call a wrapped function, there's an implicit try-catch around it, and you throw a <em>new</em> <code>TypeError</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"any time you call a wrapped function, there's an implicit try-catch around it, and you throw a *new* `TypeError`","mimetype":"text/plain"},{"body":"any time you call a wrapped function, there's an implicit try-catch around it, and you throw a <em>new</em> <code>TypeError</code>","mimetype":"text/html"}]},"ts":1671045852220,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kATzuYB_AMEMsdxOnUC_rjo2rKNhoShIokvYLX2FHGo"},
{"content":{"body":"and that new `TypeError` doesn't have the `.stack` of the original error","format":"org.matrix.custom.html","formatted_body":"and that new <code>TypeError</code> doesn't have the <code>.stack</code> of the original error","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and that new `TypeError` doesn't have the `.stack` of the original error","mimetype":"text/plain"},{"body":"and that new <code>TypeError</code> doesn't have the <code>.stack</code> of the original error","mimetype":"text/html"}]},"ts":1671045862359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8AHWIWSILVF5SEEwmpsyPJ-t4pXH2Dnkd11BRgga5jI"},
{"content":{"body":"like, this is the same reason for the `.message` normative change, because that was also just disappeared","format":"org.matrix.custom.html","formatted_body":"like, this is the same reason for the <code>.message</code> normative change, because that was also just disappeared","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like, this is the same reason for the `.message` normative change, because that was also just disappeared","mimetype":"text/plain"},{"body":"like, this is the same reason for the <code>.message</code> normative change, because that was also just disappeared","mimetype":"text/html"}]},"ts":1671045887657,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YZeE6HRGQkRXSEA30grhvyWCqrSlVqQj6SzHryOMMgE"},
{"content":{"body":"that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped","msgtype":"m.text","org.matrix.msc1767.text":"that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped"},"ts":1671045890091,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WJoW7cewcYIofO5Ml7CA8XARFTJySAUbRuFwQUJcS8k"},
{"content":{"body":" * that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped","m.new_content":{"body":"that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped","msgtype":"m.text","org.matrix.msc1767.text":"that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped"},"m.relates_to":{"event_id":"$WJoW7cewcYIofO5Ml7CA8XARFTJySAUbRuFwQUJcS8k","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * that's not what we've been talking about; this is immediately when the error is thrown, if you observe its .stack, you can see it's striped"},"ts":1671045898329,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3GpIVDvskAuBEa7w9bnJw3NnaL70xBoqAPqFoPcSbhg"},
{"content":{"body":"*before* it crosses any boundaries","format":"org.matrix.custom.html","formatted_body":"<em>before</em> it crosses any boundaries","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"*before* it crosses any boundaries","mimetype":"text/plain"},{"body":"<em>before</em> it crosses any boundaries","mimetype":"text/html"}]},"ts":1671045906892,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$G6O-lATo-2ad56-5ntTzQtOemH3qC9LaTbLOP-Ljd1I"},
{"content":{"body":"wait what","msgtype":"m.text","org.matrix.msc1767.text":"wait what"},"ts":1671045914755,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UOa7IWuL7nDn8Cq3oUdmM6X66AC8PZHaEhce6a0XMHo"},
{"content":{"body":"I'm not claiming this is a reference leak","msgtype":"m.text","org.matrix.msc1767.text":"I'm not claiming this is a reference leak"},"ts":1671045921344,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9Vpb4JhdFuGo0ftUyjHS12Adr8JritAkq-fnVOEU0Eo"},
{"content":{"body":"but this is what the presentation last meeting was about","msgtype":"m.text","org.matrix.msc1767.text":"but this is what the presentation last meeting was about"},"ts":1671045926575,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$oxfQuSWPyJphTfkAP9Ly2H6EhhRh4SIkJVcwNjoZeLM"},
{"content":{"body":"like you do `/* inside of a deep striped stack context */ try { throw new Error() } catch (e) { console.log(e) }`","format":"org.matrix.custom.html","formatted_body":"like you do <code>/* inside of a deep striped stack context */ try { throw new Error() } catch (e) { console.log(e) }</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like you do `/* inside of a deep striped stack context */ try { throw new Error() } catch (e) { console.log(e) }`","mimetype":"text/plain"},{"body":"like you do <code>/* inside of a deep striped stack context */ try { throw new Error() } catch (e) { console.log(e) }</code>","mimetype":"text/html"}]},"ts":1671045967035,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$anm3LJmNMATcIwipiM1uTQhMroLsIkrhgM2oqz8shQw"},
{"content":{"body":"rather than catching after you've moved out into a different place","msgtype":"m.text","org.matrix.msc1767.text":"rather than catching after you've moved out into a different place"},"ts":1671045977232,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Gpfio3iB-RrddfJJKBpHtdxyOVbcHSCxCIUfjipglhw"},
{"content":{"body":"if you did that in conjunction with patching `prepareStackTrace`, that's where any hypothetical reference leak would be","format":"org.matrix.custom.html","formatted_body":"if you did that in conjunction with patching <code>prepareStackTrace</code>, that's where any hypothetical reference leak would be","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if you did that in conjunction with patching `prepareStackTrace`, that's where any hypothetical reference leak would be","mimetype":"text/plain"},{"body":"if you did that in conjunction with patching <code>prepareStackTrace</code>, that's where any hypothetical reference leak would be","mimetype":"text/html"}]},"ts":1671046005262,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZxznnK3BAQ4zKtGd_z9PQ9kMMjWRHo-7OvHpssCXPhQ"},
{"content":{"body":"ah, right","msgtype":"m.text","org.matrix.msc1767.text":"ah, right"},"ts":1671046109885,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Rtx_o5nSwBUIeePPaLo_UA4xvrCG3uBUGK7_W9eBA_c"},
{"content":{"body":"i guess v8's current implementation with its \"context switching\" (what it calls global scopes) is preventing any striped stacks from showing up at all","msgtype":"m.text","org.matrix.msc1767.text":"i guess v8's current implementation with its \"context switching\" (what it calls global scopes) is preventing any striped stacks from showing up at all"},"ts":1671046181512,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lKNayxqvzh2T-oJSG9pBcDTfBwah2Rt0hlMf-Hsjg38"},
{"content":{"body":"i wonder what it does for iframes","msgtype":"m.text","org.matrix.msc1767.text":"i wonder what it does for iframes"},"ts":1671046184594,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pwqRweOhOOqsNoqBlYJ43YaSDMgLTMVA7okZMDOGW74"},
{"content":{"body":"like, in either direction","msgtype":"m.text","org.matrix.msc1767.text":"like, in either direction"},"ts":1671046193295,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xnGIXisTWd3fY_OXwbd9zsVZOLZSTIykn8udXPBkQZ0"},
{"content":{"body":"hm, iframes display the striped stacks fine","msgtype":"m.text","org.matrix.msc1767.text":"hm, iframes display the striped stacks fine"},"ts":1671046562726,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9oHbJggJKkJemyJlSphkNZtefnHXjt3RRFzEBLgQtAk"},
{"content":{"body":"sorry for the noise, i need to investigate further","msgtype":"m.text","org.matrix.msc1767.text":"sorry for the noise, i need to investigate further"},"ts":1671046572787,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mdipq-x29UyZOw00fCQIfGgZtvO5uArrGwZwY6lKamU"},
{"content":{"body":"well, only same-origin iframes can call each other's functions, so it's not really a same-origin-model barrier, just a \"context switch\"","msgtype":"m.text","org.matrix.msc1767.text":"well, only same-origin iframes can call each other's functions, so it's not really a same-origin-model barrier, just a \"context switch\""},"ts":1671046583533,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jgJq4nX56Sgnldu8faPtulQh44spPzko4Tfkt1d2Pk8"},
{"content":{"body":"right, i imagine an origin nonce or something isn't being passed","msgtype":"m.text","org.matrix.msc1767.text":"right, i imagine an origin nonce or something isn't being passed"},"ts":1671046621502,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IKVeevnqAmwtNuuQGb3KAiuR0-5KrYHm4u949wsHpQk"},
{"content":{"body":"ah doh, it's just d8 being buggy and forgetting the set the same security token as the incubator realm","msgtype":"m.text","org.matrix.msc1767.text":"ah doh, it's just d8 being buggy and forgetting the set the same security token as the incubator realm"},"ts":1671047991117,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$y8uopgbG5X9uV6avofN6_vOD_jdS3Hco7vPHhMuyIyg"},
{"content":{"body":"sorry for all the confusion","msgtype":"m.text","org.matrix.msc1767.text":"sorry for all the confusion"},"ts":1671047993334,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4RRpQpy38pIGdkrXGZgqYGoFJT-g6_JcoJ1Fv5nnuc4"},
{"content":{"body":"shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","mimetype":"text/html"}]},"ts":1671054091509,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$OpjhaclCqsFkVI9jTROfe6bCtD9kuFqAgWT5-3bFVpg"},
{"content":{"body":" * shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","m.new_content":{"body":"shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$OpjhaclCqsFkVI9jTROfe6bCtD9kuFqAgWT5-3bFVpg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * shu: I'm not sure where the confusion stemmed from by as littledan said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:\n\n```\nconst child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n```","mimetype":"text/plain"},{"body":" * <p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I'm not sure where the confusion stemmed from by as <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> said, just creating an error inside the shadow realm and observing its stack there is the issue. Here is a potential example:</p>\n<pre><code>const child = new ShadowRealm();\nchild.evaluate(`\nconst originalPrepare = Error.prepareStackTrace;\nError.prepareStackTrace = function(error, structuredStackTrace) {\n  for (const callSite of structuredStackTrace) {\n    console.log(callSite.getFunctionName(), callSite.getFunction());\n  }\n  return originalPrepare(error, structuredStackTrace);\n});\n`);\nconst getStack = child.evaluate(`function() {\n  try { null.error } catch (e) { return e.stack; }\n}`);\nconsole.log(getStack());\n</code></pre>\n","mimetype":"text/html"}]},"ts":1671054157387,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$0OBpZglTSeHM2Ay7oODOA0JxQLNPH1unJLKHzwyacKQ"},
{"content":{"body":"Mathieu Hofman: the confusion was my not observing any striped stacks in practice, which turned out to be an implementation issue with the `d8` testing shell","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: the confusion was my not observing any striped stacks in practice, which turned out to be an implementation issue with the <code>d8</code> testing shell","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Mathieu Hofman: the confusion was my not observing any striped stacks in practice, which turned out to be an implementation issue with the `d8` testing shell","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: the confusion was my not observing any striped stacks in practice, which turned out to be an implementation issue with the <code>d8</code> testing shell","mimetype":"text/html"}]},"ts":1671054240707,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Tiv3PHjCgmz1nV2rLL2nawoTtHZN_QAI2pJo7i1pi0c"}
]