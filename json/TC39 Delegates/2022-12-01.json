[
{"content":{"body":"what is the last item scheduled for today?","msgtype":"m.text","org.matrix.msc1767.text":"what is the last item scheduled for today?"},"ts":1669885241942,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SKwtAnOQSvfQfJUj9Gqn2xLNAYCtqt6-sydJ1ALpCj0"},
{"content":{"body":"ShadowRealm","msgtype":"m.text","org.matrix.msc1767.text":"ShadowRealm"},"ts":1669885439268,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$y5E3gzpAyeax4v0RLeLoIy092hJzBEYV8xt47LUYylE"},
{"content":{"body":"but it may move slightly if time magically opens up","msgtype":"m.text","org.matrix.msc1767.text":"but it may move slightly if time magically opens up"},"ts":1669885460889,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$lqY46smShcXJOsaBLu2J2tVOmccO-MW82oBqN4ZDoLY"},
{"content":{"body":"i should like to be present for shadowrealms but tbqh i don't know if i'll be able to stay awake until then","msgtype":"m.text","org.matrix.msc1767.text":"i should like to be present for shadowrealms but tbqh i don't know if i'll be able to stay awake until then"},"ts":1669885519833,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zsli2mD5NASGhefcQ4Fm1yYC5-hWWp8CNQnv3_2HWt8"},
{"content":{"body":" * can someone let me in to the meet? Rob Palmer ryzokuken bterlson ","format":"org.matrix.custom.html","formatted_body":" * can someone let me in to the meet? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>","m.new_content":{"body":"can someone let me in to the meet? Rob Palmer ryzokuken bterlson ","format":"org.matrix.custom.html","formatted_body":"can someone let me in to the meet? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"can someone let me in to the meet? Rob Palmer ryzokuken bterlson ","mimetype":"text/plain"},{"body":"can someone let me in to the meet? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$ywQV3Kc7PDcls_AwM02jI8PGl4qve8qDpk3LBapW3z4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * can someone let me in to the meet? Rob Palmer ryzokuken bterlson ","mimetype":"text/plain"},{"body":" * can someone let me in to the meet? <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>","mimetype":"text/html"}]},"ts":1669885723504,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5ayyhPmLXFt4m1PHM4X5lV1SsPo0kHeoZneQn8Q_3c8"},
{"content":{"body":"bakkot: can you add `amazing iterator` -> `async iterator`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: can you add <code>amazing iterator</code> -&gt; <code>async iterator</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: can you add `amazing iterator` -> `async iterator`?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: can you add <code>amazing iterator</code> -&gt; <code>async iterator</code>?","mimetype":"text/html"}]},"ts":1669885782465,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$-s_idU7fjT8gbFEaA8uwgVL6Qi9aZQnwadCfNbmkpO8"},
{"content":{"body":"bterlson: advance queue?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: advance queue?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bterlson: advance queue?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: advance queue?","mimetype":"text/html"}]},"ts":1669886341217,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t57efosA3vYaR4FeLGIGGcSrwweXMpkTj3qsOUTMv8Y"},
{"content":{"body":"As Michael Saboff said, please add your name, abbreviation and organization to today's meeting notes.  Link here:  https://github.com/tc39/Reflector/issues/446","msgtype":"m.text","org.matrix.msc1767.text":"As Michael Saboff said, please add your name, abbreviation and organization to today's meeting notes.  Link here:  https://github.com/tc39/Reflector/issues/446"},"ts":1669886597533,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$FSbrElhu12M_2OliOwAxAA-mzU1kFELmb20U9ouZPxw"},
{"content":{"body":"Please could everyone avoid sharing direct URLs to our notes or meeting URLs in this publicly logged room.  These are all linked from the Reflector post so that they are kept private.","msgtype":"m.text","org.matrix.msc1767.text":"Please could everyone avoid sharing direct URLs to our notes or meeting URLs in this publicly logged room.  These are all linked from the Reflector post so that they are kept private."},"ts":1669886681614,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$SNOwQ_L3Ofe1_-XzEh_hB_tza_m_EmZNJ0F9XE60wyA"},
{"content":{"body":"already 15 min ahead!","msgtype":"m.text","org.matrix.msc1767.text":"already 15 min ahead!"},"ts":1669886915651,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$iNHOaVoaf_pYE-qmNOIIn4DBcwz7blIm-n_RcqAeD6E"},
{"content":{"body":"Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","format":"org.matrix.custom.html","formatted_body":"Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","mimetype":"text/plain"},{"body":"Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","mimetype":"text/html"}]},"ts":1669887467951,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$CCPP7y3jG4xAVl-N3D-qYmPOeZ38G6SMSx8EqsI5h20"},
{"content":{"body":" * Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","format":"org.matrix.custom.html","formatted_body":" * Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","m.new_content":{"body":"Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","format":"org.matrix.custom.html","formatted_body":"Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","mimetype":"text/plain"},{"body":"Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$CCPP7y3jG4xAVl-N3D-qYmPOeZ38G6SMSx8EqsI5h20","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Wouldn't this be also the first time, that we would have a ~_keyword_~operator being extended / giving a `.` ? `await` is not a normal function but sth. _magical_ like `delete`?","mimetype":"text/plain"},{"body":" * Wouldn't this be also the first time, that we would have a ~<em>keyword</em>~operator being extended / giving a <code>.</code> ? <code>await</code> is not a normal function but sth. <em>magical</em> like <code>delete</code>?","mimetype":"text/html"}]},"ts":1669887478172,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$lMVXBz38k3tq5QC-QTwOkE0UVddV70hAhyrc8cebxiA"},
{"content":{"body":"no, we have `new.target`","format":"org.matrix.custom.html","formatted_body":"no, we have <code>new.target</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"no, we have `new.target`","mimetype":"text/plain"},{"body":"no, we have <code>new.target</code>","mimetype":"text/html"}]},"ts":1669887494029,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$P6MVumub0OoJ8EBTTqVhcTyYdo5hlxl9qP5dyjeD9SU"},
{"content":{"body":"and `super.whatever`","format":"org.matrix.custom.html","formatted_body":"and <code>super.whatever</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `super.whatever`","mimetype":"text/plain"},{"body":"and <code>super.whatever</code>","mimetype":"text/html"}]},"ts":1669887496649,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0md2TFkVmgP9O6VpFwMO-cxzq0dRT5AYuSrVeI1WUCQ"},
{"content":{"body":"and `import.meta`","format":"org.matrix.custom.html","formatted_body":"and <code>import.meta</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `import.meta`","mimetype":"text/plain"},{"body":"and <code>import.meta</code>","mimetype":"text/html"}]},"ts":1669887504849,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ZniHmUqt6gaTlAvqDsJgJg_ej_RbXHQYwE6eYBoN-KU"},
{"content":{"body":"metaproperties are already A Thing","msgtype":"m.text","org.matrix.msc1767.text":"metaproperties are already A Thing"},"ts":1669887509365,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$h-KNanArJdMFwWajEXGwMywrKy9595-QZlBUAnQD3Ak"},
{"content":{"body":"`super.whatever` is used like a magical function and `new.target` is a magical property. `import.meta` a magical global.","format":"org.matrix.custom.html","formatted_body":"<code>super.whatever</code> is used like a magical function and <code>new.target</code> is a magical property. <code>import.meta</code> a magical global.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`super.whatever` is used like a magical function and `new.target` is a magical property. `import.meta` a magical global.","mimetype":"text/plain"},{"body":"<code>super.whatever</code> is used like a magical function and <code>new.target</code> is a magical property. <code>import.meta</code> a magical global.","mimetype":"text/html"}]},"ts":1669887601298,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$QS_MWqtGJ7fqjlDgT0q5yRHqJteS3Q3zmcB7g4WTWkU"},
{"content":{"body":"speaking of research -- anyone wanna take over running that call?","msgtype":"m.text","org.matrix.msc1767.text":"speaking of research -- anyone wanna take over running that call?"},"ts":1669887621431,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ihCMrRS8RQ0MK3e7r4L-mnUhAGOeclCE78Z2cw7oHNM"},
{"content":{"body":"I can relate to the idea of hiding Promises, but it would come at the cost of having - IMO - at the cost of another magical thing, that we do not have so far.","msgtype":"m.text","org.matrix.msc1767.text":"I can relate to the idea of hiding Promises, but it would come at the cost of having - IMO - at the cost of another magical thing, that we do not have so far."},"ts":1669887731843,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$ONMHelhbSq7SQuAIb7Wd1sr53j-0C-hRhbJ876DwvF4"},
{"content":{"body":" * `super.whatever` is used like a _magical_ **function** and `new.target` is a _magical_ **property**. `import.meta` a _magical_ **global**.","format":"org.matrix.custom.html","formatted_body":" * <code>super.whatever</code> is used like a <em>magical</em> <strong>function</strong> and <code>new.target</code> is a <em>magical</em> <strong>property</strong>. <code>import.meta</code> a <em>magical</em> <strong>global</strong>.","m.new_content":{"body":"`super.whatever` is used like a _magical_ **function** and `new.target` is a _magical_ **property**. `import.meta` a _magical_ **global**.","format":"org.matrix.custom.html","formatted_body":"<code>super.whatever</code> is used like a <em>magical</em> <strong>function</strong> and <code>new.target</code> is a <em>magical</em> <strong>property</strong>. <code>import.meta</code> a <em>magical</em> <strong>global</strong>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`super.whatever` is used like a _magical_ **function** and `new.target` is a _magical_ **property**. `import.meta` a _magical_ **global**.","mimetype":"text/plain"},{"body":"<code>super.whatever</code> is used like a <em>magical</em> <strong>function</strong> and <code>new.target</code> is a <em>magical</em> <strong>property</strong>. <code>import.meta</code> a <em>magical</em> <strong>global</strong>.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$QS_MWqtGJ7fqjlDgT0q5yRHqJteS3Q3zmcB7g4WTWkU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `super.whatever` is used like a _magical_ **function** and `new.target` is a _magical_ **property**. `import.meta` a _magical_ **global**.","mimetype":"text/plain"},{"body":" * <code>super.whatever</code> is used like a <em>magical</em> <strong>function</strong> and <code>new.target</code> is a <em>magical</em> <strong>property</strong>. <code>import.meta</code> a <em>magical</em> <strong>global</strong>.","mimetype":"text/html"}]},"ts":1669887817048,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$ChOcVNRjqrE3BJ0ixnu6oJlwvg0wkM1V_EJKqM2q-VA"},
{"content":{"body":"it could be an `awaitAll` keyword and it'd be the same","format":"org.matrix.custom.html","formatted_body":"it could be an <code>awaitAll</code> keyword and it'd be the same","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it could be an `awaitAll` keyword and it'd be the same","mimetype":"text/plain"},{"body":"it could be an <code>awaitAll</code> keyword and it'd be the same","mimetype":"text/html"}]},"ts":1669887880090,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OEYzACDEhhpjVWbBsAXYbgeC23glepN5LLqcCsDvyg8"},
{"content":{"body":"we have issues with sound in the room?","msgtype":"m.text","org.matrix.msc1767.text":"we have issues with sound in the room?"},"ts":1669887884490,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LiJuDyg7rRjgH07ey473nZi3sCZxXCs1YcmtnLKrDDA"},
{"content":{"body":"`await.all` isn't magical, it's just a way to nest keywords under keyords in this case","format":"org.matrix.custom.html","formatted_body":"<code>await.all</code> isn't magical, it's just a way to nest keywords under keyords in this case","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`await.all` isn't magical, it's just a way to nest keywords under keyords in this case","mimetype":"text/plain"},{"body":"<code>await.all</code> isn't magical, it's just a way to nest keywords under keyords in this case","mimetype":"text/html"}]},"ts":1669887898460,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Gwfe0Td5hbFb-ueJ5JooVayV7jPah8xDa5718RXWNmo"},
{"content":{"body":"`await.all [a, b, c]` just doesn't seem that different from `await Promise.all([a, b, c])` to me","format":"org.matrix.custom.html","formatted_body":"<code>await.all [a, b, c]</code> just doesn't seem that different from <code>await Promise.all([a, b, c])</code> to me","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`await.all [a, b, c]` just doesn't seem that different from `await Promise.all([a, b, c])` to me","mimetype":"text/plain"},{"body":"<code>await.all [a, b, c]</code> just doesn't seem that different from <code>await Promise.all([a, b, c])</code> to me","mimetype":"text/html"}]},"ts":1669887898678,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_QbnqFsiMDtvR0DXT0KzkxdANm3viN0S87U2sMmmaOo"},
{"content":{"body":"async/await isn't about hiding promises. It's about taking continuation passing style code and allowing you to write it as linear code so that you can maintain the benefit of existing control flow constructs like `continue`/`break`/`return`/`yield`.","format":"org.matrix.custom.html","formatted_body":"async/await isn't about hiding promises. It's about taking continuation passing style code and allowing you to write it as linear code so that you can maintain the benefit of existing control flow constructs like <code>continue</code>/<code>break</code>/<code>return</code>/<code>yield</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"async/await isn't about hiding promises. It's about taking continuation passing style code and allowing you to write it as linear code so that you can maintain the benefit of existing control flow constructs like `continue`/`break`/`return`/`yield`.","mimetype":"text/plain"},{"body":"async/await isn't about hiding promises. It's about taking continuation passing style code and allowing you to write it as linear code so that you can maintain the benefit of existing control flow constructs like <code>continue</code>/<code>break</code>/<code>return</code>/<code>yield</code>.","mimetype":"text/html"}]},"ts":1669887900480,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$N-aAfAdkX6JIM5PrGj8meMt6FSckS9iuL7Dnk1pQjvE"},
{"content":{"body":"what is being highlighted right now is the issue of breaking consistency in a language -- new developers will have a hard time keeping two things in mind","msgtype":"m.text","org.matrix.msc1767.text":"what is being highlighted right now is the issue of breaking consistency in a language -- new developers will have a hard time keeping two things in mind"},"ts":1669887920890,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$J1FXXQieKU1PDrZLHwRybmZcsdkwHlFZUQd0Kxw4T1E"},
{"content":{"body":"> <@bakkot:matrix.org> `await.all [a, b, c]` just doesn't seem that different from `await Promise.all([a, b, c])` to me\n\nsure, i do the latter all the time, but in my experience devs in fact consider those quite different, and avoid the latter in favor of `await a; await b; await c` *constantly*","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_QbnqFsiMDtvR0DXT0KzkxdANm3viN0S87U2sMmmaOo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>await.all [a, b, c]</code> just doesn't seem that different from <code>await Promise.all([a, b, c])</code> to me</blockquote></mx-reply>sure, i do the latter all the time, but in my experience devs in fact consider those quite different, and avoid the latter in favor of <code>await a; await b; await c</code> <em>constantly</em>","m.relates_to":{"m.in_reply_to":{"event_id":"$_QbnqFsiMDtvR0DXT0KzkxdANm3viN0S87U2sMmmaOo"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> `await.all [a, b, c]` just doesn't seem that different from `await Promise.all([a, b, c])` to me\n\nsure, i do the latter all the time, but in my experience devs in fact consider those quite different, and avoid the latter in favor of `await a; await b; await c` *constantly*","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_QbnqFsiMDtvR0DXT0KzkxdANm3viN0S87U2sMmmaOo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>await.all [a, b, c]</code> just doesn't seem that different from <code>await Promise.all([a, b, c])</code> to me</blockquote></mx-reply>sure, i do the latter all the time, but in my experience devs in fact consider those quite different, and avoid the latter in favor of <code>await a; await b; await c</code> <em>constantly</em>","mimetype":"text/html"}]},"ts":1669887930278,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kPI4LV90bAIGVyYHLd1ABAxz07VvcTaW9LFA8vBrNQ4"},
{"content":{"body":"I would question teaching async/await before promises for this reason","msgtype":"m.text","org.matrix.msc1767.text":"I would question teaching async/await before promises for this reason"},"ts":1669887931280,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$TTbpwvLUc8cwxPtpx3tR-DgVNfxjIQmRGRakpPFT_60"},
{"content":{"body":"i don't think the solution here is syntax","msgtype":"m.text","org.matrix.msc1767.text":"i don't think the solution here is syntax"},"ts":1669887945867,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$dkK4ZojjbauNReuAi6x4IJheIdXmDv1P2KUC7cy50LA"},
{"content":{"body":"In other words, is there so far any `await`-like thing with a `.`?","format":"org.matrix.custom.html","formatted_body":"In other words, is there so far any <code>await</code>-like thing with a <code>.</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"In other words, is there so far any `await`-like thing with a `.`?","mimetype":"text/plain"},{"body":"In other words, is there so far any <code>await</code>-like thing with a <code>.</code>?","mimetype":"text/html"}]},"ts":1669887960430,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$YtpbcIs7SdEkMQNiiHEeFrN-HB7zvEMIfpUCUCwXhDA"},
{"content":{"body":"Christian Ulbrich: no, in that respect it'd be something new, but almost every new syntax feature has that :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: no, in that respect it'd be something new, but almost every new syntax feature has that :-)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Christian Ulbrich: no, in that respect it'd be something new, but almost every new syntax feature has that :-)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: no, in that respect it'd be something new, but almost every new syntax feature has that :-)","mimetype":"text/html"}]},"ts":1669887978765,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IiZjFgJbIVp-lpX-oylhrUt6IzJ2Hlu2Nj0ZVDoN8YA"},
{"content":{"body":"yulia: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.","mimetype":"text/html"}]},"ts":1669887990645,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W4uxag6ifnX-x1R6BlKjwzLvUeUb436mro5wV9L7pwA"},
{"content":{"body":"DevMo has a great example of how to do promises in sequence via Array.prototype.reduce","msgtype":"m.text","org.matrix.msc1767.text":"DevMo has a great example of how to do promises in sequence via Array.prototype.reduce"},"ts":1669887993799,"senderName":"Alex Vincent","senderId":"@alex.vincent:matrix.org","id":"$IcJeapBsP0r3Ymv55JkhsfViVvX8KEQGoFeb4rX2lr4"},
{"content":{"body":"ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?","mimetype":"text/html"}]},"ts":1669887996953,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI"},
{"content":{"body":"> <@ljharb:matrix.org> yulia: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.\n\nthe ergonomics issue is relying on learners to make its poinit","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$W4uxag6ifnX-x1R6BlKjwzLvUeUb436mro5wV9L7pwA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.</blockquote></mx-reply>the ergonomics issue is relying on learners to make its poinit","m.relates_to":{"m.in_reply_to":{"event_id":"$W4uxag6ifnX-x1R6BlKjwzLvUeUb436mro5wV9L7pwA"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> yulia: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.\n\nthe ergonomics issue is relying on learners to make its poinit","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$W4uxag6ifnX-x1R6BlKjwzLvUeUb436mro5wV9L7pwA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i totally agree this doesn't fix the education problem. to me it's fixing an ergonomics problem.</blockquote></mx-reply>the ergonomics issue is relying on learners to make its poinit","mimetype":"text/html"}]},"ts":1669888006696,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$uYCGWswMebrEnY0p93AHesVcAPo27R7qQoG8lQnWCRo"},
{"content":{"body":"\"wanting to avoid `Promise`\" seems like a problem we should not be trying to solve for them","format":"org.matrix.custom.html","formatted_body":"&quot;wanting to avoid <code>Promise</code>&quot; seems like a problem we should not be trying to solve for them","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"\"wanting to avoid `Promise`\" seems like a problem we should not be trying to solve for them","mimetype":"text/plain"},{"body":"&quot;wanting to avoid <code>Promise</code>&quot; seems like a problem we should not be trying to solve for them","mimetype":"text/html"}]},"ts":1669888008438,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MNONUz20_awS_NNFAtnHW_puLm4UN21nybcvD74GuR8"},
{"content":{"body":"you just did so as well","msgtype":"m.text","org.matrix.msc1767.text":"you just did so as well"},"ts":1669888009924,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Uo-TMgMDnfiLi5WgWX1NIOoNRttHRLfqyCc60EoOjGQ"},
{"content":{"body":"I imagine `for await all` would take a lot of pressure off of `await.all`.","format":"org.matrix.custom.html","formatted_body":"I imagine <code>for await all</code> would take a lot of pressure off of <code>await.all</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I imagine `for await all` would take a lot of pressure off of `await.all`.","mimetype":"text/plain"},{"body":"I imagine <code>for await all</code> would take a lot of pressure off of <code>await.all</code>.","mimetype":"text/html"}]},"ts":1669888015423,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SyzItsKPNLNV4AE5P_pFwVOOa4bkir6_NJlWnnZCtAM"},
{"content":{"body":"i don't agree that this is a solution","msgtype":"m.text","org.matrix.msc1767.text":"i don't agree that this is a solution"},"ts":1669888017868,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$i7eJqJSy25zEnu8yq9OInncYIQkVI8wh3ynCHVvMsI0"},
{"content":{"body":"> <@bakkot:matrix.org> ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?\n\nmy experience is that most of the time they don't need to be serial, and that they didn't want to deal with the ceremony of Promise.all","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?</blockquote></mx-reply>my experience is that most of the time they don't need to be serial, and that they didn't want to deal with the ceremony of Promise.all","m.relates_to":{"m.in_reply_to":{"event_id":"$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?\n\nmy experience is that most of the time they don't need to be serial, and that they didn't want to deal with the ceremony of Promise.all","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?</blockquote></mx-reply>my experience is that most of the time they don't need to be serial, and that they didn't want to deal with the ceremony of Promise.all","mimetype":"text/html"}]},"ts":1669888022745,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$O1ckWwczuMwCAsdP_NY6BWZ0BlC0T-E6AVqYLxOTPvw"},
{"content":{"body":"Motivate a change to \"unconfuse\" developers from Promises by adding a totally new syntax, should be well-thought of.","msgtype":"m.text","org.matrix.msc1767.text":"Motivate a change to \"unconfuse\" developers from Promises by adding a totally new syntax, should be well-thought of."},"ts":1669888032974,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$ed7PtAbyieRMiKcxYapK0bmYO7huU3bfZE_--5uyuG8"},
{"content":{"body":"> <@bakkot:matrix.org> ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?\n\nthis rings true to me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?</blockquote></mx-reply>this rings true to me","m.relates_to":{"m.in_reply_to":{"event_id":"$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> ljharb I definitely see people do `await a; await b; await c` over `await Promise.all` but I have generally assumed it was because of thinking serially rather than because of wanting to avoid `Promise`?\n\nthis rings true to me","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$54mO1i_0z6KMrmTF-c0_1UbKFQ_4-zm7zuIpv5KK8yI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> I definitely see people do <code>await a; await b; await c</code> over <code>await Promise.all</code> but I have generally assumed it was because of thinking serially rather than because of wanting to avoid <code>Promise</code>?</blockquote></mx-reply>this rings true to me","mimetype":"text/html"}]},"ts":1669888033824,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FuuGG3abA7HI77BqofG9JjqkvfYFMa9DUW6T2RcjBTc"},
{"content":{"body":"i reckon beginners are not at a place that _would_ reach for parallel combinators but for a more discoverable way to do so, like syntax, or something","format":"org.matrix.custom.html","formatted_body":"i reckon beginners are not at a place that <em>would</em> reach for parallel combinators but for a more discoverable way to do so, like syntax, or something","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i reckon beginners are not at a place that _would_ reach for parallel combinators but for a more discoverable way to do so, like syntax, or something","mimetype":"text/plain"},{"body":"i reckon beginners are not at a place that <em>would</em> reach for parallel combinators but for a more discoverable way to do so, like syntax, or something","mimetype":"text/html"}]},"ts":1669888080795,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$52HxCpxoxX2v36rnGseo_Ytbl5PEkN6msaSc2Ha_I5w"},
{"content":{"body":"they're just not at a place to reason about things in parallel","msgtype":"m.text","org.matrix.msc1767.text":"they're just not at a place to reason about things in parallel"},"ts":1669888088880,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oXv0gCTL5P6GdBvBtjnHRexYRjnWQrHsrTZSiUjE9Zk"},
{"content":{"body":"Concerning the hiding motivation, it actually is a problem that have all the time with junior developers, they already do not know, that they are using promises...","msgtype":"m.text","org.matrix.msc1767.text":"Concerning the hiding motivation, it actually is a problem that have all the time with junior developers, they already do not know, that they are using promises..."},"ts":1669888101279,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$oiR9Xci5F0Y65r_KtvuAyEYeZgixBeNAfk21yVC65nY"},
{"content":{"body":"I agree with Yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","format":"org.matrix.custom.html","formatted_body":"I agree with Yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I agree with Yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","mimetype":"text/plain"},{"body":"I agree with Yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","mimetype":"text/html"}]},"ts":1669888129535,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JLgrmkklCNjyiMI3OzJNry31xRNNrNCvjUU8vRIyWUk"},
{"content":{"body":"if the main problem is await all, should we only add `await.all` without `await.race` and others? Or even just introduce a special syntax (eg. `await* promises`)?","format":"org.matrix.custom.html","formatted_body":"if the main problem is await all, should we only add <code>await.all</code> without <code>await.race</code> and others? Or even just introduce a special syntax (eg. <code>await* promises</code>)?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if the main problem is await all, should we only add `await.all` without `await.race` and others? Or even just introduce a special syntax (eg. `await* promises`)?","mimetype":"text/plain"},{"body":"if the main problem is await all, should we only add <code>await.all</code> without <code>await.race</code> and others? Or even just introduce a special syntax (eg. <code>await* promises</code>)?","mimetype":"text/html"}]},"ts":1669888151153,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Zffun1aqA2ZsQQb_tYl9mZOBT0jrlQoBpV2wMj8Brus"},
{"content":{"body":"first we must teach one of the First Mistakes -- the existence of the microtask queue","msgtype":"m.text","org.matrix.msc1767.text":"first we must teach one of the First Mistakes -- the existence of the microtask queue"},"ts":1669888155358,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nyaruZ-MsiAtaKmdh87W5hDi2maEUMV2g0y6O1_aQPA"},
{"content":{"body":"shu: The whole Playwright API is heavily _async_...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: The whole Playwright API is heavily <em>async</em>...","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: The whole Playwright API is heavily _async_...","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: The whole Playwright API is heavily <em>async</em>...","mimetype":"text/html"}]},"ts":1669888162678,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$XBDbYrU9DzVcqICcN7T8F-HDgDPPQ9S2A2ZlMIXQZnc"},
{"content":{"body":"Christian Ulbrich: sorry what's the context of that comment? i don't know what that means","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: sorry what's the context of that comment? i don't know what that means","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Christian Ulbrich: sorry what's the context of that comment? i don't know what that means","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@christianulbrich:matrix.org\">Christian Ulbrich</a>: sorry what's the context of that comment? i don't know what that means","mimetype":"text/html"}]},"ts":1669888188922,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DSMkBhlwcX5T8gRj2YN1kYKYCW2Q8mI_AEwFwYt2AVk"},
{"content":{"body":" * I agree with @yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","format":"org.matrix.custom.html","formatted_body":" * I agree with @yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","m.new_content":{"body":"I agree with @yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","format":"org.matrix.custom.html","formatted_body":"I agree with @yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I agree with @yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","mimetype":"text/plain"},{"body":"I agree with @yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$JLgrmkklCNjyiMI3OzJNry31xRNNrNCvjUU8vRIyWUk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I agree with @yulia that promises should be taught before async/await. I agree with rbuckton that the latter is not to hide the former.","mimetype":"text/plain"},{"body":" * I agree with @yulia that promises should be taught before async/await. I agree with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> that the latter is not to hide the former.","mimetype":"text/html"}]},"ts":1669888207352,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$j2e00usAwr5h8y5zV35a7VWRRWS58VP-3DxQMQxq6Qw"},
{"content":{"body":"> <@haxjs:matrix.org> if the main problem is await all, should we only add `await.all` without `await.race` and others? Or even just introduce a special syntax (eg. `await* promises`)?\n\nthat would still be better than the status quo, but i think that'd be an unfortunate inconsistency","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Zffun1aqA2ZsQQb_tYl9mZOBT0jrlQoBpV2wMj8Brus?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>if the main problem is await all, should we only add <code>await.all</code> without <code>await.race</code> and others? Or even just introduce a special syntax (eg. <code>await* promises</code>)?</blockquote></mx-reply>that would still be better than the status quo, but i think that'd be an unfortunate inconsistency","m.relates_to":{"m.in_reply_to":{"event_id":"$Zffun1aqA2ZsQQb_tYl9mZOBT0jrlQoBpV2wMj8Brus"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@haxjs:matrix.org> if the main problem is await all, should we only add `await.all` without `await.race` and others? Or even just introduce a special syntax (eg. `await* promises`)?\n\nthat would still be better than the status quo, but i think that'd be an unfortunate inconsistency","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Zffun1aqA2ZsQQb_tYl9mZOBT0jrlQoBpV2wMj8Brus?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>if the main problem is await all, should we only add <code>await.all</code> without <code>await.race</code> and others? Or even just introduce a special syntax (eg. <code>await* promises</code>)?</blockquote></mx-reply>that would still be better than the status quo, but i think that'd be an unfortunate inconsistency","mimetype":"text/html"}]},"ts":1669888266460,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zLfw7Db3hQbWhMsFtolcxp7wNvOaGPvlOGR1pCpkLfk"},
{"content":{"body":"\"do nothing\" is always an option.","msgtype":"m.text","org.matrix.msc1767.text":"\"do nothing\" is always an option."},"ts":1669888303848,"senderName":"Alex Vincent","senderId":"@alex.vincent:matrix.org","id":"$xovkRj5u_vJPc1z7AXLSltC5DjQ9vuRqeWvD0D735ck"},
{"content":{"body":"ljharb: if syntax, there is no inconsistency?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: if syntax, there is no inconsistency?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: if syntax, there is no inconsistency?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: if syntax, there is no inconsistency?","mimetype":"text/html"}]},"ts":1669888306985,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$3YqLwXyGcpa6EZHBy6oB38QZ8GxLhPuWO6WTsGacCC4"},
{"content":{"body":"the inconsistency would be 3 of the promise combinators lacking syntax, but 1 having it","msgtype":"m.text","org.matrix.msc1767.text":"the inconsistency would be 3 of the promise combinators lacking syntax, but 1 having it"},"ts":1669888357597,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7xvxBgq8OJYSI8Qtf38QlGw63eTdKmqpBSktiegneUY"},
{"content":{"body":"I mean, if 80% usage of combinators is just Promsie.all, is it ok to only add syntax for it?","msgtype":"m.text","org.matrix.msc1767.text":"I mean, if 80% usage of combinators is just Promsie.all, is it ok to only add syntax for it?"},"ts":1669888521091,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$k2-Qh3VURmoy059zSqAp2pcsYy7gx7Ns9fkrpJ-oRX8"},
{"content":{"body":"should we only add a subset of + - * /, because some of them get more usage than the others?","msgtype":"m.text","org.matrix.msc1767.text":"should we only add a subset of + - * /, because some of them get more usage than the others?"},"ts":1669888695628,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AGEq7R29ZTG0dvmh2p62lCh1jT4yLUgaKVR476WPNmQ"},
{"content":{"body":"i remain adamant that consistency is important for learnability of a language, 20% is a pretty big chunk, but i think we are  just pulling numbers from the air right now. ","msgtype":"m.text","org.matrix.msc1767.text":"i remain adamant that consistency is important for learnability of a language, 20% is a pretty big chunk, but i think we are  just pulling numbers from the air right now. "},"ts":1669888725317,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$v3_HrjlZTBUokfgywxuluXuRNwnXkD4-FB_eLx_8pzg"},
{"content":{"body":"> <@yulia:mozilla.org> speaking of research -- anyone wanna take over running that call?\n\nSad to see you cannot attend ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ihCMrRS8RQ0MK3e7r4L-mnUhAGOeclCE78Z2cw7oHNM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br />speaking of research -- anyone wanna take over running that call?</blockquote></mx-reply>Sad to see you cannot attend","m.relates_to":{"m.in_reply_to":{"event_id":"$ihCMrRS8RQ0MK3e7r4L-mnUhAGOeclCE78Z2cw7oHNM"}},"msgtype":"m.text"},"ts":1669888802228,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qdHfhLlsjvdOD5mpmmC11ov-EZSUN-54_HqUrqbdJq0"},
{"content":{"body":"> <@jackworks:matrix.org> Sad to see you cannot attend\n\nwanna take over?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qdHfhLlsjvdOD5mpmmC11ov-EZSUN-54_HqUrqbdJq0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>Sad to see you cannot attend</blockquote></mx-reply>wanna take over?","m.relates_to":{"m.in_reply_to":{"event_id":"$qdHfhLlsjvdOD5mpmmC11ov-EZSUN-54_HqUrqbdJq0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> Sad to see you cannot attend\n\nwanna take over?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qdHfhLlsjvdOD5mpmmC11ov-EZSUN-54_HqUrqbdJq0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>Sad to see you cannot attend</blockquote></mx-reply>wanna take over?","mimetype":"text/html"}]},"ts":1669888817478,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Etl6-uGoLuXC9Gn7NpEOuYR9LwMSCL_mIkdwIq2l7n8"},
{"content":{"body":"you can bug felienne","msgtype":"m.text","org.matrix.msc1767.text":"you can bug felienne"},"ts":1669888838941,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ixYVwLnSFaAFDSdyW3yd3GoRh16P9T1i3rlQsx2DibI"},
{"content":{"body":"or we can go without a research call for a while","msgtype":"m.text","org.matrix.msc1767.text":"or we can go without a research call for a while"},"ts":1669888855202,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$l1QNR57hDLQkZuztsdqFgHvmGftywO4zqPTkCNoNRyo"},
{"content":{"body":"bterlson: it'd be really helpful to plan my sleep if the hackmd could be updated with an estimated plan for the rest of the day 🙏","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: it'd be really helpful to plan my sleep if the hackmd could be updated with an estimated plan for the rest of the day 🙏","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bterlson: it'd be really helpful to plan my sleep if the hackmd could be updated with an estimated plan for the rest of the day 🙏","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: it'd be really helpful to plan my sleep if the hackmd could be updated with an estimated plan for the rest of the day 🙏","mimetype":"text/html"}]},"ts":1669889405658,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$E0sI4Ftt0JmmtJm7WjFsPkqbaRZgGab8LWMq3eB-rVQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> they're just not at a place to reason about things in parallel\n\nSounds true. For beginners they need to be taught to be aware of parallel. But for me, I sometimes drop parallelism because I'm lazy to write Promise.all()","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oXv0gCTL5P6GdBvBtjnHRexYRjnWQrHsrTZSiUjE9Zk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />they're just not at a place to reason about things in parallel</blockquote></mx-reply>Sounds true. For beginners they need to be taught to be aware of parallel. But for me, I sometimes drop parallelism because I'm lazy to write Promise.all()","m.relates_to":{"m.in_reply_to":{"event_id":"$oXv0gCTL5P6GdBvBtjnHRexYRjnWQrHsrTZSiUjE9Zk"}},"msgtype":"m.text"},"ts":1669889442349,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$JqYC68V1zc8X-iF2IuQ2SThfda7BOOsx9zBv6d7Kw_c"},
{"content":{"body":"ljharb: hackmd is constantly kept as up to date as we can make it - as we approach the end of the meeting it generally becomes more reliable as uncertainty decreases","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: hackmd is constantly kept as up to date as we can make it - as we approach the end of the meeting it generally becomes more reliable as uncertainty decreases","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: hackmd is constantly kept as up to date as we can make it - as we approach the end of the meeting it generally becomes more reliable as uncertainty decreases","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: hackmd is constantly kept as up to date as we can make it - as we approach the end of the meeting it generally becomes more reliable as uncertainty decreases","mimetype":"text/html"}]},"ts":1669889495547,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Ru0CvZwDOlbPV9_9R8_xBUiARW686kEMnYjEz6UAgGA"},
{"content":{"body":"I think Promise.all is the tip of the lazy iceberg. To go from lazy about parallelism to rigorous usually means converting a for loop to a map, or accumulating an array of promises in a for loop.","msgtype":"m.text","org.matrix.msc1767.text":"I think Promise.all is the tip of the lazy iceberg. To go from lazy about parallelism to rigorous usually means converting a for loop to a map, or accumulating an array of promises in a for loop."},"ts":1669889506447,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$r1S0qD2Bu4tPM0b2puMraQmAJMWyxL5LmoXFI-hR2g4"},
{"content":{"body":"thanks, appreciate whatever you can do!","m.relates_to":{"event_id":"$Ru0CvZwDOlbPV9_9R8_xBUiARW686kEMnYjEz6UAgGA","is_falling_back":true,"m.in_reply_to":{"event_id":"$Ru0CvZwDOlbPV9_9R8_xBUiARW686kEMnYjEz6UAgGA"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"thanks, appreciate whatever you can do!"},"ts":1669889510966,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WuTEVlbDjaInjf8YfV4KZo_podGz5jEeD9gSgq7jPRQ"},
{"content":{"body":"Jack Works: have you tried to use editor abbreviations?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: have you tried to use editor abbreviations?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: have you tried to use editor abbreviations?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: have you tried to use editor abbreviations?","mimetype":"text/html"}]},"ts":1669889552391,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FQAPabBoa-Z4uqSX9mVfRBIZPwdIjN8_yHw-9LGXCfo"},
{"content":{"body":"> <@alex.vincent:matrix.org> \"do nothing\" is always an option.\n\nI'm prepared and think it's ok if the committee dont like this idea ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xovkRj5u_vJPc1z7AXLSltC5DjQ9vuRqeWvD0D735ck?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@alex.vincent:matrix.org\">@alex.vincent:matrix.org</a><br />&quot;do nothing&quot; is always an option.</blockquote></mx-reply>I'm prepared and think it's ok if the committee dont like this idea","m.relates_to":{"m.in_reply_to":{"event_id":"$xovkRj5u_vJPc1z7AXLSltC5DjQ9vuRqeWvD0D735ck"}},"msgtype":"m.text"},"ts":1669889556005,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$t00ciCkt8tw2-0TZiURe0hNz_iFLiSWycjkqVXPbuPI"},
{"content":{"body":"like this seems like an easier problem to solve than through the language","msgtype":"m.text","org.matrix.msc1767.text":"like this seems like an easier problem to solve than through the language"},"ts":1669889573268,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9qDBkCyTtOni5No47l-WlR2dy5sUBpbtnzoS_DMJnYw"},
{"content":{"body":"A much bolder improvement would be parallel for await loops.","msgtype":"m.text","org.matrix.msc1767.text":"A much bolder improvement would be parallel for await loops."},"ts":1669889595633,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5yPoKgO_ORed9B5xOUThmvfKVSSMwvmZ-f4TUZPsgMQ"},
{"content":{"body":"> <@ljharb:matrix.org> should we only add a subset of + - * /, because some of them get more usage than the others?\n\nOOT: imo some operators (| & %) do not deserve a single character operator because they're not used so often (than || &&)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AGEq7R29ZTG0dvmh2p62lCh1jT4yLUgaKVR476WPNmQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />should we only add a subset of + - * /, because some of them get more usage than the others?</blockquote></mx-reply>OOT: imo some operators (| &amp; %) do not deserve a single character operator because they're not used so often (than || &amp;&amp;)","m.relates_to":{"m.in_reply_to":{"event_id":"$AGEq7R29ZTG0dvmh2p62lCh1jT4yLUgaKVR476WPNmQ"}},"msgtype":"m.text"},"ts":1669889712807,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0"},
{"content":{"body":"> <@jackworks:matrix.org> OOT: imo some operators (| & %) do not deserve a single character operator because they're not used so often (than || &&)\n\nAs someone that does a fair amount of bit twiddling, I disagree","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>OOT: imo some operators (| &amp; %) do not deserve a single character operator because they're not used so often (than || &amp;&amp;)</blockquote></mx-reply>As someone that does a fair amount of bit twiddling, I disagree","m.relates_to":{"m.in_reply_to":{"event_id":"$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> OOT: imo some operators (| & %) do not deserve a single character operator because they're not used so often (than || &&)\n\nAs someone that does a fair amount of bit twiddling, I disagree","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>OOT: imo some operators (| &amp; %) do not deserve a single character operator because they're not used so often (than || &amp;&amp;)</blockquote></mx-reply>As someone that does a fair amount of bit twiddling, I disagree","mimetype":"text/html"}]},"ts":1669889758712,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$yc6kCsD9XaKaNUIT_prjyCGa69O4CM6qtm_l-xUHHwA"},
{"content":{"body":"> <@jackworks:matrix.org> OOT: imo some operators (| & %) do not deserve a single character operator because they're not used so often (than || &&)\n\nK&R’s Regret. They got to bitwise first.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>OOT: imo some operators (| &amp; %) do not deserve a single character operator because they're not used so often (than || &amp;&amp;)</blockquote></mx-reply>K&amp;R’s Regret. They got to bitwise first.","m.relates_to":{"m.in_reply_to":{"event_id":"$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> OOT: imo some operators (| & %) do not deserve a single character operator because they're not used so often (than || &&)\n\nK&R’s Regret. They got to bitwise first.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZTJibaTbzShqntBnwpAEtz8cG4nX1wX38jtfDLovjl0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>OOT: imo some operators (| &amp; %) do not deserve a single character operator because they're not used so often (than || &amp;&amp;)</blockquote></mx-reply>K&amp;R’s Regret. They got to bitwise first.","mimetype":"text/html"}]},"ts":1669889785074,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$q9YBnUjLxy9zlHML7URAHW_u23xP4i3WMEytsbqk7yk"},
{"content":{"body":"I would like 10 minutes of plenary time to discuss an additional question regarding Intl NumberFormat v3. I have added a slide at the end of the deck I used on Tuesday","msgtype":"m.text","org.matrix.msc1767.text":"I would like 10 minutes of plenary time to discuss an additional question regarding Intl NumberFormat v3. I have added a slide at the end of the deck I used on Tuesday"},"ts":1669889792906,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$0Jd-3FYhVNj8NFcn6Ct69nHChTHWYB8Lp7BDOXOaph4"},
{"content":{"body":"> <@yulia:mozilla.org> wanna take over?\n\nI have little knowledge about how to do research... I can join the meeting but I don't think I can take the charge 👀","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Etl6-uGoLuXC9Gn7NpEOuYR9LwMSCL_mIkdwIq2l7n8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br />wanna take over?</blockquote></mx-reply>I have little knowledge about how to do research... I can join the meeting but I don't think I can take the charge 👀","m.relates_to":{"m.in_reply_to":{"event_id":"$Etl6-uGoLuXC9Gn7NpEOuYR9LwMSCL_mIkdwIq2l7n8"}},"msgtype":"m.text"},"ts":1669889802360,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fvsOKpWjfD4AGsx2pMgb3qqXpGyjR6jWkN9haUgCOFU"},
{"content":{"body":"sffc: have you proposed strings for the eras anywhere?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: have you proposed strings for the eras anywhere?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sffc: have you proposed strings for the eras anywhere?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: have you proposed strings for the eras anywhere?","mimetype":"text/html"}]},"ts":1669889813843,"senderName":"apaprocki","senderId":"@apaprocki:matrix.org","id":"$njuMe0Z6fV_LFstaExFJjkmhqum19mLIrP_38na7GJ4"},
{"content":{"body":"i think the only person who really knows what they are doing is felienne","msgtype":"m.text","org.matrix.msc1767.text":"i think the only person who really knows what they are doing is felienne"},"ts":1669889826777,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$iUY3ThRbGsTqBxCyb2NP1RAVv0by73LBMMPaYl_zduo"},
{"content":{"body":"i know how to confirm my priors and ignore counter evidence","msgtype":"m.text","org.matrix.msc1767.text":"i know how to confirm my priors and ignore counter evidence"},"ts":1669889953014,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IqVq1Cws9wQLUfyIzULWs9eFTRany37livQk0R8_q9s"},
{"content":{"body":"> <@shuyuguo:matrix.org> Jack Works: have you tried to use editor abbreviations?\n\nOh","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FQAPabBoa-Z4uqSX9mVfRBIZPwdIjN8_yHw-9LGXCfo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br /><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: have you tried to use editor abbreviations?</blockquote></mx-reply>Oh","m.relates_to":{"m.in_reply_to":{"event_id":"$FQAPabBoa-Z4uqSX9mVfRBIZPwdIjN8_yHw-9LGXCfo"}},"msgtype":"m.text"},"ts":1669889972216,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ggsiPuIOqHTbznaKZ9GN8LX6KkdXAqINcCmBNQSHcZA"},
{"content":{"body":"One of the main pain point is when I'm using for...of loop and I want to use await in the loop body","msgtype":"m.text"},"ts":1669890055921,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$uHqBpU-evub6k6gZPu1jheJrMcXt5Xcr_KdCgBlaA-U"},
{"content":{"body":"> <@shuyuguo:matrix.org> i know how to confirm my priors and ignore counter evidence\n\nsounds like ✨science✨","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IqVq1Cws9wQLUfyIzULWs9eFTRany37livQk0R8_q9s?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i know how to confirm my priors and ignore counter evidence</blockquote></mx-reply>sounds like ✨science✨","m.relates_to":{"m.in_reply_to":{"event_id":"$IqVq1Cws9wQLUfyIzULWs9eFTRany37livQk0R8_q9s"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> i know how to confirm my priors and ignore counter evidence\n\nsounds like ✨science✨","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IqVq1Cws9wQLUfyIzULWs9eFTRany37livQk0R8_q9s?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i know how to confirm my priors and ignore counter evidence</blockquote></mx-reply>sounds like ✨science✨","mimetype":"text/html"}]},"ts":1669890057975,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$OxOCygKArplZOQL4XG_6Wnm5yNgIW3TzJxxjEGNtSII"},
{"content":{"body":"apaprocki: All context and work on this should be available on the proposal repository; e.g. https://github.com/FrankYFTang/proposal-intl-era-monthcode/issues/1 ... my colleague Manish has a proposal that has been presented to CLDR. There is still room to evolve before they are written down. Would like your feedback if interested!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@apaprocki:matrix.org\">apaprocki</a>: All context and work on this should be available on the proposal repository; e.g. https://github.com/FrankYFTang/proposal-intl-era-monthcode/issues/1 ... my colleague Manish has a proposal that has been presented to CLDR. There is still room to evolve before they are written down. Would like your feedback if interested!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"apaprocki: All context and work on this should be available on the proposal repository; e.g. https://github.com/FrankYFTang/proposal-intl-era-monthcode/issues/1 ... my colleague Manish has a proposal that has been presented to CLDR. There is still room to evolve before they are written down. Would like your feedback if interested!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@apaprocki:matrix.org\">apaprocki</a>: All context and work on this should be available on the proposal repository; e.g. https://github.com/FrankYFTang/proposal-intl-era-monthcode/issues/1 ... my colleague Manish has a proposal that has been presented to CLDR. There is still room to evolve before they are written down. Would like your feedback if interested!","mimetype":"text/html"}]},"ts":1669890065970,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$5yb6f7sDZU0xzrBMAloAKUSC-GCKiPUdanXojg8FkoA"},
{"content":{"body":"> <@jackworks:matrix.org> One of the main pain point is when I'm using for...of loop and I want to use await in the loop body\n\nDoes anyone have the same feeling about this? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uHqBpU-evub6k6gZPu1jheJrMcXt5Xcr_KdCgBlaA-U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br />One of the main pain point is when I'm using for...of loop and I want to use await in the loop body</blockquote></mx-reply>Does anyone have the same feeling about this?","m.relates_to":{"m.in_reply_to":{"event_id":"$uHqBpU-evub6k6gZPu1jheJrMcXt5Xcr_KdCgBlaA-U"}},"msgtype":"m.text"},"ts":1669890069575,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$JnkU_6l7ExwPQ6-KaheNGj3oYbxPeGs7SGUSpaJS8XU"},
{"content":{"body":"slides aren't showing on meet","msgtype":"m.text","org.matrix.msc1767.text":"slides aren't showing on meet"},"ts":1669890153369,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$plUflyQehD7xnsa7EpbqCRvcs_Fetnhi5U28Zb2yuYI"},
{"content":{"body":"blank screen","msgtype":"m.text","org.matrix.msc1767.text":"blank screen"},"ts":1669890156497,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$UmgsVxI9RsHZZvB2V1ZpKotKx9s-ZsWoPbSYdtIWnLg"},
{"content":{"body":" * blank screen","m.new_content":{"body":"blank screen","msgtype":"m.text","org.matrix.msc1767.text":"blank screen"},"m.relates_to":{"event_id":"$UmgsVxI9RsHZZvB2V1ZpKotKx9s-ZsWoPbSYdtIWnLg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * blank screen"},"ts":1669890159421,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$IvUNL88hbfV1_oTMXum4iAnfE8aL84UdKjJMMhlLyrI"},
{"content":{"body":"I can't see the slide","msgtype":"m.text","org.matrix.msc1767.text":"I can't see the slide"},"ts":1669890166644,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$53UbH_i78OBANL_zM2fytyH1WKUtSsq3p_qaWlEQ_iU"},
{"content":{"body":"* you don't need to understand what membrane is to know the motivation of this proposal","msgtype":"m.text"},"ts":1669890379071,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nzdigCA5ouTHLjU2hsrMO9eaDUevDl5P8iAI7EduLFM"},
{"content":{"body":"TLDR: we have tons of revocable Proxies and we need to revoke them in an ergonomic way. ","msgtype":"m.text"},"ts":1669890417910,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qsyyW3ColusTq3948CCF0XPo8QAEJJiuxTCcweTwiVM"},
{"content":{"body":"I mean you kind of do if you've never encountered proxy revocation before (I merely know that it's a thing that exists that I've not needed to investigate to any depth)","msgtype":"m.text","org.matrix.msc1767.text":"I mean you kind of do if you've never encountered proxy revocation before (I merely know that it's a thing that exists that I've not needed to investigate to any depth)"},"ts":1669890508974,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$3F-xlbakOpqvNJH84v8ofAbZvo-8zeLI0yFcvmGINJM"},
{"content":{"body":"today:\n\n```js\nfor (const p of proxiesToRevoke) revokerMap.get(p)()\n```\n\nYou need to store tons of revoker functions and call them one by one","format":"org.matrix.custom.html","formatted_body":"<p>today:</p>\n<pre><code class=\"language-js\">for (const p of proxiesToRevoke) revokerMap.get(p)()\n</code></pre>\n<p>You need to store tons of revoker functions and call them one by one</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"today:\n\n```js\nfor (const p of proxiesToRevoke) revokerMap.get(p)()\n```\n\nYou need to store tons of revoker functions and call them one by one","mimetype":"text/plain"},{"body":"<p>today:</p>\n<pre><code class=\"language-js\">for (const p of proxiesToRevoke) revokerMap.get(p)()\n</code></pre>\n<p>You need to store tons of revoker functions and call them one by one</p>\n","mimetype":"text/html"}]},"ts":1669890609993,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qg61ee5wKlrMfuGQbr4ueXrk6390a3M4jvRIiwYuBE8"},
{"content":{"body":"I'm curious if `DisposableStack` can help here, either:\n```js\nconst { proxy, revoke } = Proxy.revocable(...);\nstack.defer(revoke);\nreturn proxy;\n\n// later\n\nstack.dispose(); // mass revocation\n```\n\nOr make the return value of `Proxy.revocable` itself a disposable.","format":"org.matrix.custom.html","formatted_body":"<p>I'm curious if <code>DisposableStack</code> can help here, either:</p>\n<pre><code class=\"language-js\">const { proxy, revoke } = Proxy.revocable(...);\nstack.defer(revoke);\nreturn proxy;\n\n// later\n\nstack.dispose(); // mass revocation\n</code></pre>\n<p>Or make the return value of <code>Proxy.revocable</code> itself a disposable.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm curious if `DisposableStack` can help here, either:\n```js\nconst { proxy, revoke } = Proxy.revocable(...);\nstack.defer(revoke);\nreturn proxy;\n\n// later\n\nstack.dispose(); // mass revocation\n```\n\nOr make the return value of `Proxy.revocable` itself a disposable.","mimetype":"text/plain"},{"body":"<p>I'm curious if <code>DisposableStack</code> can help here, either:</p>\n<pre><code class=\"language-js\">const { proxy, revoke } = Proxy.revocable(...);\nstack.defer(revoke);\nreturn proxy;\n\n// later\n\nstack.dispose(); // mass revocation\n</code></pre>\n<p>Or make the return value of <code>Proxy.revocable</code> itself a disposable.</p>\n","mimetype":"text/html"}]},"ts":1669890716121,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$uIx6SzeangseA6ES7xZoS9cMPsjH_dGUOEMt1cRua3w"},
{"content":{"body":"Cannot help.","msgtype":"m.text","org.matrix.msc1767.text":"Cannot help."},"ts":1669890779252,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$bcR-naOSYgL5FIU1Ck3hGpRk-zirhuJSkj2QjcxfOMQ"},
{"content":{"body":"Proxy does not have a prototype to store @@disposable","msgtype":"m.text","org.matrix.msc1767.text":"Proxy does not have a prototype to store @@disposable"},"ts":1669890800847,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QGkXo8IkABjKzBgX-E5vB7hHG4fmMxa5ttblzsFOZLU"},
{"content":{"body":"I'm not sure how I see how","msgtype":"m.text","org.matrix.msc1767.text":"I'm not sure how I see how"},"ts":1669890812420,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rDQdvHM_MVXLPDCeq-UjUkjKGRKpzVOixpFZHHvBHkM"},
{"content":{"body":"the confusing name of `defer` aside, that seems like it'd work","format":"org.matrix.custom.html","formatted_body":"the confusing name of <code>defer</code> aside, that seems like it'd work","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the confusing name of `defer` aside, that seems like it'd work","mimetype":"text/plain"},{"body":"the confusing name of <code>defer</code> aside, that seems like it'd work","mimetype":"text/html"}]},"ts":1669890857438,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KymEVhD5zOvGYGlSSjvX6veKEVXc1sair4GcKM_2DYU"},
{"content":{"body":"Is the memory argument really so strong?","msgtype":"m.text","org.matrix.msc1767.text":"Is the memory argument really so strong?"},"ts":1669890871104,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$ukRx3QvvbJWJGapyhKRIk7hCCsb_A0gcy9FoGw1p-wg"},
{"content":{"body":"I don't think we need to determine whether DisposableStack would be sufficient today","msgtype":"m.text","org.matrix.msc1767.text":"I don't think we need to determine whether DisposableStack would be sufficient today"},"ts":1669890939872,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5OscCHv-xOJm-94ngqAbLnEpaSdQuFVSTI9gC3ocOBk"},
{"content":{"body":"this can reach stage 1 and later we don't advance to stage 2 because we realise DisposableStack is a fine solution","msgtype":"m.text","org.matrix.msc1767.text":"this can reach stage 1 and later we don't advance to stage 2 because we realise DisposableStack is a fine solution"},"ts":1669890957745,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5YKai_qs99CA27mf4N4sXxwwsRhP8rMFQcEPmNltLKY"},
{"content":{"body":"has never _revoked_ a proxy, why would I? I want all of them to go through **my** _proxy_ :)","format":"org.matrix.custom.html","formatted_body":"has never <em>revoked</em> a proxy, why would I? I want all of them to go through <strong>my</strong> <em>proxy</em> :)","msgtype":"m.emote","org.matrix.msc1767.message":[{"body":"has never _revoked_ a proxy, why would I? I want all of them to go through **my** _proxy_ :)","mimetype":"text/plain"},{"body":"has never <em>revoked</em> a proxy, why would I? I want all of them to go through <strong>my</strong> <em>proxy</em> :)","mimetype":"text/html"}]},"ts":1669890968411,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$kP9AxHGAkXNOCyTptixu3Jf4_RTm1Xd3bav0lU66x2U"},
{"content":{"body":"> <@jackworks:matrix.org> Proxy does not have a prototype to store @@disposable\n\nDisposableStack defer still could work","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QGkXo8IkABjKzBgX-E5vB7hHG4fmMxa5ttblzsFOZLU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>Proxy does not have a prototype to store @@disposable</blockquote></mx-reply>DisposableStack defer still could work","m.relates_to":{"m.in_reply_to":{"event_id":"$QGkXo8IkABjKzBgX-E5vB7hHG4fmMxa5ttblzsFOZLU"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> Proxy does not have a prototype to store @@disposable\n\nDisposableStack defer still could work","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QGkXo8IkABjKzBgX-E5vB7hHG4fmMxa5ttblzsFOZLU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>Proxy does not have a prototype to store @@disposable</blockquote></mx-reply>DisposableStack defer still could work","mimetype":"text/html"}]},"ts":1669891032529,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$26Yr0p1jZHHge7RqvmBdWI6kUkyOHt439K1tZD9GanY"},
{"content":{"body":"And I meant that its not the proxy that is disposable, but the `{ proxy, revoke }` object","format":"org.matrix.custom.html","formatted_body":"And I meant that its not the proxy that is disposable, but the <code>{ proxy, revoke }</code> object","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And I meant that its not the proxy that is disposable, but the `{ proxy, revoke }` object","mimetype":"text/plain"},{"body":"And I meant that its not the proxy that is disposable, but the <code>{ proxy, revoke }</code> object","mimetype":"text/html"}]},"ts":1669891069649,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$U5F0XD-MtilfSHjW0ZSHSInR-PxUzha6AXZ7yvq1_Ac"},
{"content":{"body":"I think DisposableStack could work, but the proposed api seems much easy to use.","msgtype":"m.text","org.matrix.msc1767.text":"I think DisposableStack could work, but the proposed api seems much easy to use."},"ts":1669891110478,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$iPNfirc0qS0U38xt5zLM5BrcJGU86v9cRZoabjXCHx0"},
{"content":{"body":"I also had the https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal in mind...","msgtype":"m.text","org.matrix.msc1767.text":"I also had the https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal in mind..."},"ts":1669891146432,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$jOX0sBUE8CvsCEKnxQDq_xtGUAUTGLLqTEn3GmlDrTg"},
{"content":{"body":"yeah, cross realm seems a requirement of this proposal?","msgtype":"m.text","org.matrix.msc1767.text":"yeah, cross realm seems a requirement of this proposal?"},"ts":1669891231056,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$7lyo8VjYiQIhhjByT2tTKmB6LfEYUd_A9pHFGNmBXTw"},
{"content":{"body":"I think wrapped revokers could also be optimized in theory, but would any engine realistically perform all these optimizations?","msgtype":"m.text","org.matrix.msc1767.text":"I think wrapped revokers could also be optimized in theory, but would any engine realistically perform all these optimizations?"},"ts":1669891274405,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$ftuncockKu715jVV52tF-1TOE99FuuvkbDi905eHXVU"},
{"content":{"body":"Proxies now have some heavy uses... they are used by recent Vue3 and libs implementing _immutability_.","format":"org.matrix.custom.html","formatted_body":"Proxies now have some heavy uses... they are used by recent Vue3 and libs implementing <em>immutability</em>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Proxies now have some heavy uses... they are used by recent Vue3 and libs implementing _immutability_.","mimetype":"text/plain"},{"body":"Proxies now have some heavy uses... they are used by recent Vue3 and libs implementing <em>immutability</em>.","mimetype":"text/html"}]},"ts":1669891340804,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$DBZSuDhulDeLIDgMj_Ke_6Azmb9F7jpfBIm3KyZaMUI"},
{"content":{"body":"I still wonder though, whether they are actually _revoking_ their Proxies...","format":"org.matrix.custom.html","formatted_body":"I still wonder though, whether they are actually <em>revoking</em> their Proxies...","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I still wonder though, whether they are actually _revoking_ their Proxies...","mimetype":"text/plain"},{"body":"I still wonder though, whether they are actually <em>revoking</em> their Proxies...","mimetype":"text/html"}]},"ts":1669891365271,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$GyR0kXcABejhGhr8HLWYHN7H6MQ3AzpXkpW-Qn152Yk"},
{"content":{"body":"Not sure whether Vue3/Mobx use revoke...","msgtype":"m.text","org.matrix.msc1767.text":"Not sure whether Vue3/Mobx use revoke..."},"ts":1669891379966,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$jEp8pGsAsakrP6omk7jqfIH20yIOxG5LYm9Hgl1-N7c"},
{"content":{"body":"hard to disagree with shu here as my point above was that I've never actually _used_ a Proxy, let alone thought about revoking one","format":"org.matrix.custom.html","formatted_body":"hard to disagree with shu here as my point above was that I've never actually <em>used</em> a Proxy, let alone thought about revoking one","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hard to disagree with shu here as my point above was that I've never actually _used_ a Proxy, let alone thought about revoking one","mimetype":"text/plain"},{"body":"hard to disagree with shu here as my point above was that I've never actually <em>used</em> a Proxy, let alone thought about revoking one","mimetype":"text/html"}]},"ts":1669891381605,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$eyS6tS0ljXyJL1q67wyT3uFk8QSPgOnUA01WZboUlxo"},
{"content":{"body":"you may not have used one directly, but lots of libraries / frameworks do leverage them under the hood","msgtype":"m.text","org.matrix.msc1767.text":"you may not have used one directly, but lots of libraries / frameworks do leverage them under the hood"},"ts":1669891418829,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$68PHGLuhLUCJGk1WdZy5WWGrrDz3r2U1CPgw2r2Q5QA"},
{"content":{"body":"(not that I'm objecting to anything :P my point above was that without membranes, there isn't an obvious context of usage)","msgtype":"m.text","org.matrix.msc1767.text":"(not that I'm objecting to anything :P my point above was that without membranes, there isn't an obvious context of usage)"},"ts":1669891425110,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$gr8d2s3LkFNhLke25t1ZD8gejRcGgPCZePhWPV2vZlI"},
{"content":{"body":"> <@haxjs:matrix.org> yeah, cross realm seems a requirement of this proposal?\n\ndon't know maybe we need ask caridy ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7lyo8VjYiQIhhjByT2tTKmB6LfEYUd_A9pHFGNmBXTw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>yeah, cross realm seems a requirement of this proposal?</blockquote></mx-reply>don't know maybe we need ask <a href=\"https://matrix.to/#/@caridy:matrix.org\">caridy</a>","m.relates_to":{"m.in_reply_to":{"event_id":"$7lyo8VjYiQIhhjByT2tTKmB6LfEYUd_A9pHFGNmBXTw"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@haxjs:matrix.org> yeah, cross realm seems a requirement of this proposal?\n\ndon't know maybe we need ask caridy ","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7lyo8VjYiQIhhjByT2tTKmB6LfEYUd_A9pHFGNmBXTw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>yeah, cross realm seems a requirement of this proposal?</blockquote></mx-reply>don't know maybe we need ask <a href=\"https://matrix.to/#/@caridy:matrix.org\">caridy</a>","mimetype":"text/html"}]},"ts":1669891456925,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$a8cQq7hu4ubmTRVUBIbIQdXwe3yFhKZxzR-Mgllwioo"},
{"content":{"body":"I would like to see usage trackers from web browsers (which do not cover the usages in non browser environments)","msgtype":"m.text","org.matrix.msc1767.text":"I would like to see usage trackers from web browsers (which do not cover the usages in non browser environments)"},"ts":1669891464280,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$TK5teQnQAakWD1wp1pip--hPZbHbkDyGdMdtVQdPTYc"},
{"content":{"body":"> <@rbuckton:matrix.org> And I meant that its not the proxy that is disposable, but the `{ proxy, revoke }` object\n\noh that works.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$U5F0XD-MtilfSHjW0ZSHSInR-PxUzha6AXZ7yvq1_Ac?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>And I meant that its not the proxy that is disposable, but the <code>{ proxy, revoke }</code> object</blockquote></mx-reply>oh that works.","m.relates_to":{"m.in_reply_to":{"event_id":"$U5F0XD-MtilfSHjW0ZSHSInR-PxUzha6AXZ7yvq1_Ac"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> And I meant that its not the proxy that is disposable, but the `{ proxy, revoke }` object\n\noh that works.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$U5F0XD-MtilfSHjW0ZSHSInR-PxUzha6AXZ7yvq1_Ac?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>And I meant that its not the proxy that is disposable, but the <code>{ proxy, revoke }</code> object</blockquote></mx-reply>oh that works.","mimetype":"text/html"}]},"ts":1669891482797,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$RFFnqaX6IWX1ZvSK2hjlxcDvEPy9U7Z-S79JkyFi_Pc"},
{"content":{"body":"Membranes are just a mental model around Proxies. Their are many use cases for Proxies, it does not matter, whether they are actually membranes. ","msgtype":"m.text","org.matrix.msc1767.text":"Membranes are just a mental model around Proxies. Their are many use cases for Proxies, it does not matter, whether they are actually membranes. "},"ts":1669891505022,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$NIqGaActke3onPdLzcrjb6O02nKZsUBabNrgpt0nc5E"},
{"content":{"body":" * I would like to see usage numbers from web browsers (which do not cover the usages in non browser environments)","m.new_content":{"body":"I would like to see usage numbers from web browsers (which do not cover the usages in non browser environments)","msgtype":"m.text","org.matrix.msc1767.text":"I would like to see usage numbers from web browsers (which do not cover the usages in non browser environments)"},"m.relates_to":{"event_id":"$TK5teQnQAakWD1wp1pip--hPZbHbkDyGdMdtVQdPTYc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I would like to see usage numbers from web browsers (which do not cover the usages in non browser environments)"},"ts":1669891538513,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$lWhkRvt9zDSmeP5y7wk4yxIM0ZDd0ym3dh42E2ig728"},
{"content":{"body":" * Membranes are just a mental model around Proxies. There are many use cases for Proxies, it does not matter, whether they are actually membranes. ","m.new_content":{"body":"Membranes are just a mental model around Proxies. There are many use cases for Proxies, it does not matter, whether they are actually membranes. ","msgtype":"m.text","org.matrix.msc1767.text":"Membranes are just a mental model around Proxies. There are many use cases for Proxies, it does not matter, whether they are actually membranes. "},"m.relates_to":{"event_id":"$NIqGaActke3onPdLzcrjb6O02nKZsUBabNrgpt0nc5E","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Membranes are just a mental model around Proxies. There are many use cases for Proxies, it does not matter, whether they are actually membranes. "},"ts":1669891575320,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$3NtK3gXO2quu5eWPzuMaMb17FfKoa2MPW3w79rFJ0gE"},
{"content":{"body":"Vue is proxying objects to implement immutability?","msgtype":"m.text","org.matrix.msc1767.text":"Vue is proxying objects to implement immutability?"},"ts":1669891669097,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$to_x-4LApyZBV2D9A3LqjwpXwDcUF2GouU5kWjD2n-c"},
{"content":{"body":"they expect this to be performant?","msgtype":"m.text","org.matrix.msc1767.text":"they expect this to be performant?"},"ts":1669891672347,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9h8r0HE58P8Cxd0cGlcOKfeaTJ2o4_NfzXgZmuu8sG4"},
{"content":{"body":"@shu They use it to implement reactivity.","msgtype":"m.text","org.matrix.msc1767.text":"@shu They use it to implement reactivity."},"ts":1669891701351,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$59h_z6OIs2bx8pHjaiU-DcEclg8VfZ3lO3umjuqOnGs"},
{"content":{"body":"> <@shuyuguo:matrix.org> Vue is proxying objects to implement immutability?\n\nNot immutablitity, but use proxy for reactivity","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$to_x-4LApyZBV2D9A3LqjwpXwDcUF2GouU5kWjD2n-c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>Vue is proxying objects to implement immutability?</blockquote></mx-reply>Not immutablitity, but use proxy for reactivity","m.relates_to":{"m.in_reply_to":{"event_id":"$to_x-4LApyZBV2D9A3LqjwpXwDcUF2GouU5kWjD2n-c"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> Vue is proxying objects to implement immutability?\n\nNot immutablitity, but use proxy for reactivity","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$to_x-4LApyZBV2D9A3LqjwpXwDcUF2GouU5kWjD2n-c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>Vue is proxying objects to implement immutability?</blockquote></mx-reply>Not immutablitity, but use proxy for reactivity","mimetype":"text/html"}]},"ts":1669891720205,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$unqD5AzXSzjshoWyK4pC6Hma5I37enfxoG6--cGW_MQ"},
{"content":{"body":"I have skimmed through the source, looks like they never revoke them.","msgtype":"m.text","org.matrix.msc1767.text":"I have skimmed through the source, looks like they never revoke them."},"ts":1669891751665,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$DaQ4nm_EKa4wju8xV2Oq9iC7ijMriuRXjc7QK_Iu3Aw"},
{"content":{"body":"interesting, i see","msgtype":"m.text","org.matrix.msc1767.text":"interesting, i see"},"ts":1669891759362,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QiAbO91IIoU5YpgqehCIlkGawxgttL8A3BL6Klq00JI"},
{"content":{"body":"```js\nconst disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1669891772124,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oG3fVkrHU41u_kmEuw_tJ6f0MrLqn8vPkn_ejBPB600"},
{"content":{"body":"so do we have a non-theoretical go-to use case of revocation then?","msgtype":"m.text","org.matrix.msc1767.text":"so do we have a non-theoretical go-to use case of revocation then?"},"ts":1669891895477,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$-Na_ifuNalzbiXIVN8lXISVMQKHfWRibf07YcFR2n2E"},
{"content":{"body":"rkirsling: So far not, because at least Vue, does not seem to use _revocation_","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a>: So far not, because at least Vue, does not seem to use <em>revocation</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"rkirsling: So far not, because at least Vue, does not seem to use _revocation_","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a>: So far not, because at least Vue, does not seem to use <em>revocation</em>","mimetype":"text/html"}]},"ts":1669891939075,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$MVgwiXTA5J-JaJkqkMsaae_BJuX0G9k4fQoyfn5pcbk"},
{"content":{"body":"Jack Works: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already","mimetype":"text/html"}]},"ts":1669891948029,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$3cFFgZaMK5-ttqb5VHEN3lx4oqhMZZ033hsPgzbazUI"},
{"content":{"body":"> <@jackworks:matrix.org> ```js\n> const disposable = new DisposableStack()\n> function createProxy() {\n>     const {proxy, revoke} = Proxy.revocable(...)\n>     disposable.defer(revoke)\n>     return proxy\n>     // at this point, revoke only hold by the DisposableStack.\n>     // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n> }\n> ```\n\nI mean, something like `new Proxy(target, handlers, { revocationStack: disposables })` might be feasible, but prefer this approach in general","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oG3fVkrHU41u_kmEuw_tJ6f0MrLqn8vPkn_ejBPB600?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><pre><code class=\"language-js\">const disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n</code></pre>\n</blockquote></mx-reply>I mean, something like <code>new Proxy(target, handlers, { revocationStack: disposables })</code> might be feasible, but prefer this approach in general","m.relates_to":{"m.in_reply_to":{"event_id":"$oG3fVkrHU41u_kmEuw_tJ6f0MrLqn8vPkn_ejBPB600"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> ```js\n> const disposable = new DisposableStack()\n> function createProxy() {\n>     const {proxy, revoke} = Proxy.revocable(...)\n>     disposable.defer(revoke)\n>     return proxy\n>     // at this point, revoke only hold by the DisposableStack.\n>     // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n> }\n> ```\n\nI mean, something like `new Proxy(target, handlers, { revocationStack: disposables })` might be feasible, but prefer this approach in general","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oG3fVkrHU41u_kmEuw_tJ6f0MrLqn8vPkn_ejBPB600?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><pre><code class=\"language-js\">const disposable = new DisposableStack()\nfunction createProxy() {\n    const {proxy, revoke} = Proxy.revocable(...)\n    disposable.defer(revoke)\n    return proxy\n    // at this point, revoke only hold by the DisposableStack.\n    // engine can GC `revoke` and knowing the Proxy is being revoked after the DisposableStack disposes\n}\n</code></pre>\n</blockquote></mx-reply>I mean, something like <code>new Proxy(target, handlers, { revocationStack: disposables })</code> might be feasible, but prefer this approach in general","mimetype":"text/html"}]},"ts":1669891950266,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$G_d7KsbP5OvO8agDh3z9HVpVkQ-G6zGM7I6EOOrcqIg"},
{"content":{"body":"> <@mhofman:matrix.org> Jack Works: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already\n\nthe [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3cFFgZaMK5-ttqb5VHEN3lx4oqhMZZ033hsPgzbazUI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already</blockquote></mx-reply>the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right","m.relates_to":{"m.in_reply_to":{"event_id":"$3cFFgZaMK5-ttqb5VHEN3lx4oqhMZZ033hsPgzbazUI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@mhofman:matrix.org> Jack Works: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already\n\nthe [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3cFFgZaMK5-ttqb5VHEN3lx4oqhMZZ033hsPgzbazUI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: according to the definition of liveness, clearing out the proxy target is not necessary, as the target's identity would be unobservable to the program through the proxy already</blockquote></mx-reply>the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right","mimetype":"text/html"}]},"ts":1669892031065,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4qENkHtU6oBw90ts6LTYGxKcRPxApia8z2oupc9L5SE"},
{"content":{"body":"> <@rkirsling:matrix.org> so do we have a non-theoretical go-to use case of revocation then?\n\nmembranes are not theoretical","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-Na_ifuNalzbiXIVN8lXISVMQKHfWRibf07YcFR2n2E?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling:matrix.org</a><br>so do we have a non-theoretical go-to use case of revocation then?</blockquote></mx-reply>membranes are not theoretical","m.relates_to":{"m.in_reply_to":{"event_id":"$-Na_ifuNalzbiXIVN8lXISVMQKHfWRibf07YcFR2n2E"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rkirsling:matrix.org> so do we have a non-theoretical go-to use case of revocation then?\n\nmembranes are not theoretical","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-Na_ifuNalzbiXIVN8lXISVMQKHfWRibf07YcFR2n2E?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling:matrix.org</a><br>so do we have a non-theoretical go-to use case of revocation then?</blockquote></mx-reply>membranes are not theoretical","mimetype":"text/html"}]},"ts":1669892041183,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qRYHZlA-oXKdYuXf0avfkOMbt4J8vIgf9RQBWpdSo34"},
{"content":{"body":"> <@jackworks:matrix.org> the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right\n\nbut if the proxy is revoked, the proxy handler would never be invoked with the target anymore","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4qENkHtU6oBw90ts6LTYGxKcRPxApia8z2oupc9L5SE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right</blockquote></mx-reply>but if the proxy is revoked, the proxy handler would never be invoked with the target anymore","m.relates_to":{"m.in_reply_to":{"event_id":"$4qENkHtU6oBw90ts6LTYGxKcRPxApia8z2oupc9L5SE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right\n\nbut if the proxy is revoked, the proxy handler would never be invoked with the target anymore","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4qENkHtU6oBw90ts6LTYGxKcRPxApia8z2oupc9L5SE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>the [[ProxyHandler]] might get access to [[ProxyTarget]] when the internal slot is called right</blockquote></mx-reply>but if the proxy is revoked, the proxy handler would never be invoked with the target anymore","mimetype":"text/html"}]},"ts":1669892106039,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Bte_49wh-uAJTTXeutYskIM3rdxckVgjj7RInnsyxJY"},
{"content":{"body":"An editor note might suffice to make it clear that once revoked, the proxy target's identity will no longer be observable by the program through the handler / proxy","msgtype":"m.text","org.matrix.msc1767.text":"An editor note might suffice to make it clear that once revoked, the proxy target's identity will no longer be observable by the program through the handler / proxy"},"ts":1669892237053,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$8U6CO_EpHrjJFkeTeWRxB7NKIIiaIb_MaYXdvBpCd80"},
{"content":{"body":"Thanks bterlson!! 👏","format":"org.matrix.custom.html","formatted_body":"Thanks <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>!! 👏","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Thanks bterlson!! 👏","mimetype":"text/plain"},{"body":"Thanks <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>!! 👏","mimetype":"text/html"}]},"ts":1669892267031,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$7efOhEDRMsoOuNTn1M7Oj07AiJ6jAQvSo_GnuK0Qmcc"},
{"content":{"body":"We will resume at 13:00 (62mins time)","msgtype":"m.text","org.matrix.msc1767.text":"We will resume at 13:00 (62mins time)"},"ts":1669892341405,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$UtExUS88rpRaOQI6ZI1UZpQ-vjwyHGtmr3bA3vqKHuI"},
{"content":{"body":"I _assume_ that SalesForce' whole [LightningLocker](https://developer.salesforce.com/docs/component-library/documentation/en/lwc/lwc.security_locker_service) stuff being based on Proxies, they are also using _revocation_","format":"org.matrix.custom.html","formatted_body":"I <em>assume</em> that SalesForce' whole <a href=\"https://developer.salesforce.com/docs/component-library/documentation/en/lwc/lwc.security_locker_service\">LightningLocker</a> stuff being based on Proxies, they are also using <em>revocation</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I _assume_ that SalesForce' whole [LightningLocker](https://developer.salesforce.com/docs/component-library/documentation/en/lwc/lwc.security_locker_service) stuff being based on Proxies, they are also using _revocation_","mimetype":"text/plain"},{"body":"I <em>assume</em> that SalesForce' whole <a href=\"https://developer.salesforce.com/docs/component-library/documentation/en/lwc/lwc.security_locker_service\">LightningLocker</a> stuff being based on Proxies, they are also using <em>revocation</em>","mimetype":"text/html"}]},"ts":1669892354084,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$BJs1lxaZbRteySw_L0G39UNa6tG1vabLKMpRs0BZZ70"},
{"content":{"body":"if anyone here is on the typescript team and needs something to do over lunch I have a small QoL PR https://github.com/microsoft/TypeScript/pull/51457","msgtype":"m.text","org.matrix.msc1767.text":"if anyone here is on the typescript team and needs something to do over lunch I have a small QoL PR https://github.com/microsoft/TypeScript/pull/51457"},"ts":1669892375045,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Bb4bDw1IqNqZZRQpXJSTH3iqSIvS-kxB6gGbO-f4-I4"},
{"content":{"body":"I'm realising now that I have a LOT of tests to write for iterator helpers in test262...","msgtype":"m.text","org.matrix.msc1767.text":"I'm realising now that I have a LOT of tests to write for iterator helpers in test262..."},"ts":1669892400400,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Di8IcTf5vhcfUkGacqNJkAAJhASldjyhWT1BUBCojjU"},
{"content":{"body":"btw, link to the thread asking for a TG3 chair that I mentioned: https://github.com/tc39/Reflector/issues/450","msgtype":"m.text","org.matrix.msc1767.text":"btw, link to the thread asking for a TG3 chair that I mentioned: https://github.com/tc39/Reflector/issues/450"},"ts":1669892420527,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WF53Sa5k8tFfQhvItxusiFec4J-YLuObHxJ2rmv5R3k"},
{"content":{"body":"yeah set methods will be fun too","msgtype":"m.text","org.matrix.msc1767.text":"yeah set methods will be fun too"},"ts":1669892425309,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nJD77-DMFW5qmxvsn8HyK8jvGo3_nIDIRY1Sk_OhzEw"},
{"content":{"body":"🙏 hopefully a helpful community member will just do it before I get around to it","msgtype":"m.text","org.matrix.msc1767.text":"🙏 hopefully a helpful community member will just do it before I get around to it"},"ts":1669892477848,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3ZBQzBFfoCxYdVuqjT8q1sdIb4dG1ROmhHT4IZIXClE"},
{"content":{"body":"i'm going to sleep because i'm sick and exhausted, but for Resource Management, i still think https://github.com/tc39/proposal-explicit-resource-management/issues/102 is not resolved, and i think any stage 3 for it needs to be conditional on coming to consensus on that. i hope my absence won't mean my concerns are overlooked (assuming that it otherwise would get stage 3, ofc)","msgtype":"m.text","org.matrix.msc1767.text":"i'm going to sleep because i'm sick and exhausted, but for Resource Management, i still think https://github.com/tc39/proposal-explicit-resource-management/issues/102 is not resolved, and i think any stage 3 for it needs to be conditional on coming to consensus on that. i hope my absence won't mean my concerns are overlooked (assuming that it otherwise would get stage 3, ofc)"},"ts":1669892905177,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Wlnk0lXLNqgXHeYBdieDrEIQ0m9o1w66D1qMijgZarQ"},
{"content":{"body":"ljharb: is there a summary of your concern?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: is there a summary of your concern?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: is there a summary of your concern?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: is there a summary of your concern?","mimetype":"text/html"}]},"ts":1669892993565,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IhDi1dC1SWCFoUPdffnZb-gYqFG6waNTf6Prg3rFGBI"},
{"content":{"body":"or can ron characterize it accurately?","msgtype":"m.text","org.matrix.msc1767.text":"or can ron characterize it accurately?"},"ts":1669893003048,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K0cg1VMh4majR8cQ0ffHrjiyMwuX7JDF1zd7FUYyTSc"},
{"content":{"body":"IIRC, it's in regards to argument ordering of the `adopt` method, and thus it's existence entirely","format":"org.matrix.custom.html","formatted_body":"IIRC, it's in regards to argument ordering of the <code>adopt</code> method, and thus it's existence entirely","msgtype":"m.text"},"ts":1669893212072,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0bPCVf0RBKVG5TqhPHcKAOO18HVYhnCvicsAYjicxAI"},
{"content":{"body":"I can add a note to the slides to call this out","msgtype":"m.text","org.matrix.msc1767.text":"I can add a note to the slides to call this out"},"ts":1669893330291,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0cLiWCfpeOGvlFU6Of0pokKIBj0dtEhghXehJkLZnCc"},
{"content":{"body":"great, thanks","msgtype":"m.text","org.matrix.msc1767.text":"great, thanks"},"ts":1669893428812,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hame-3FLUhr1g61Qy2mFHgxqBDJmg4oEfj1oeyp24pk"},
{"content":{"body":"I missed a key point in my presentation:  when we revoke a proxy, the _underlying slots_ are nullified, but the _proxy itself_ remains part of the object graph it lives in.  You can't do anything with the proxy, but it's still there because (probably) something else refers to it.  The revocation of an object graph, and of proxies pointing to it, means the original objects in that object graph can be gc'd.  The proxies themselves are still reachable ","format":"org.matrix.custom.html","formatted_body":"I missed a key point in my presentation:  when we revoke a proxy, the <em>underlying slots</em> are nullified, but the <em>proxy itself</em> remains part of the object graph it lives in.  You can't do anything with the proxy, but it's still there because (probably) something else refers to it.  The revocation of an object graph, and of proxies pointing to it, means the original objects in that object graph can be gc'd.  The proxies themselves are still reachable","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I missed a key point in my presentation:  when we revoke a proxy, the _underlying slots_ are nullified, but the _proxy itself_ remains part of the object graph it lives in.  You can't do anything with the proxy, but it's still there because (probably) something else refers to it.  The revocation of an object graph, and of proxies pointing to it, means the original objects in that object graph can be gc'd.  The proxies themselves are still reachable ","mimetype":"text/plain"},{"body":"I missed a key point in my presentation:  when we revoke a proxy, the <em>underlying slots</em> are nullified, but the <em>proxy itself</em> remains part of the object graph it lives in.  You can't do anything with the proxy, but it's still there because (probably) something else refers to it.  The revocation of an object graph, and of proxies pointing to it, means the original objects in that object graph can be gc'd.  The proxies themselves are still reachable","mimetype":"text/html"}]},"ts":1669893715824,"senderName":"Alex Vincent","senderId":"@alex.vincent:matrix.org","id":"$zhuzezMziR-TW4mOjjh8Uxd4IZQuXfb4qyAE-zFRln8"}
]