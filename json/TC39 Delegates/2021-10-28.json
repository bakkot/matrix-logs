[
{"content":{"body":"Sorry all for being late to reply to Temporal-related posts above. Was so relieved to be done with my 15 mins of fame this morning that I forgot to check the delegates channel afterwards. ðŸ˜„ I'll add a few notes and replies now.\n\n ","msgtype":"m.text"},"ts":1635379360400,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$2a9TWGhXpz3FZxVSNgph4trV5mWWPAg8uXlDXEOWkEY"},
{"content":{"body":"> <@pchimento:igalia.com> bterlson: is the remaining point for Temporal already on the list of overflow topics for tomorrow or should I request that somewhere in particular?\n\nI didn't see a response to this so I went ahead and added Temporal to the overflow section in the HackMD page. If this was wrong, please feel free to revert and let us know about the correct process. Thanks!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GEgMcKlJjVgEEzwYDSsZUp4aFnNsftyW_l8y_SyZCGI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br><a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: is the remaining point for Temporal already on the list of overflow topics for tomorrow or should I request that somewhere in particular?</blockquote></mx-reply>I didn't see a response to this so I went ahead and added Temporal to the overflow section in the HackMD page. If this was wrong, please feel free to revert and let us know about the correct process. Thanks!","m.relates_to":{"m.in_reply_to":{"event_id":"$GEgMcKlJjVgEEzwYDSsZUp4aFnNsftyW_l8y_SyZCGI"}},"msgtype":"m.text"},"ts":1635379572316,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$oAePZPSKPOPvVQGv43i9NdoLa-3cqDPbm0wmk5tf6pQ"},
{"content":{"body":"> <@ljharb:matrix.org> and nobody disputes that temporal's problem space is a hellish nightmare\n\nFinally, we've found an invariant we can all agree with! ðŸ˜„","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NnV3Mm3XeNL_XEeruiwGBIJSvec8iEvTw_Et3P_w9Aw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>and nobody disputes that temporal&#39;s problem space is a hellish nightmare</blockquote></mx-reply>Finally, we've found an invariant we can all agree with! ðŸ˜„","m.relates_to":{"m.in_reply_to":{"event_id":"$NnV3Mm3XeNL_XEeruiwGBIJSvec8iEvTw_Et3P_w9Aw"}},"msgtype":"m.text"},"ts":1635379884153,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$zkDopF9BKUv-wy8oPFlzxByETwSzYilIQWhU-3C-mOc"},
{"content":{"body":"> <@ljharb:matrix.org> it can be very hard to figure out what one did wrong with APIs like this, at any experience level. good error messages help but aren't always sufficient.\n\nSpeaking of error messages, one suggestion I'd have for the committee: a standardized way for the spec to provide hints to implementers about error messages, and guidelines for proposal authors for when to provide those hints in the spec. Proposal authors (especially if the proposal's polyfill gets a lot of use) have a lot of tribal knowledge about the requirements for error messages, but AFAIK there's not really an \"official\" way to convey that knowledge to implementers. Nor is there a requirement that proposal authors think through the \"how are users likely to misuse this API and what should the error message say to help them?\" problem.  I don't think that implementers should be required to use any particular error message, but IMO having more clarity and consistency in error messages across implementations seems like a good idea, both to help users and to avoid inevitable churn from bug reports asking to improve error messages after the implementation ships. Also, implementers may not have insight into the kinds of bugs that users will run into, so they may not be in the best position to write the most helpful error message text without getting those bug reports.\n\nI'm not proposing any specific solution, but did want to highlight the problem and see if there was any existing prior art on the committee around this issue. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$P8n9S8D_FWz5x0USQbr5LM5KSbwojvFFxKs2cMSJuOM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>it can be very hard to figure out what one did wrong with APIs like this, at any experience level. good error messages help but aren&#39;t always sufficient.</blockquote></mx-reply><p>Speaking of error messages, one suggestion I'd have for the committee: a standardized way for the spec to provide hints to implementers about error messages, and guidelines for proposal authors for when to provide those hints in the spec. Proposal authors (especially if the proposal's polyfill gets a lot of use) have a lot of tribal knowledge about the requirements for error messages, but AFAIK there's not really an &quot;official&quot; way to convey that knowledge to implementers. Nor is there a requirement that proposal authors think through the &quot;how are users likely to misuse this API and what should the error message say to help them?&quot; problem.  I don't think that implementers should be required to use any particular error message, but IMO having more clarity and consistency in error messages across implementations seems like a good idea, both to help users and to avoid inevitable churn from bug reports asking to improve error messages after the implementation ships. Also, implementers may not have insight into the kinds of bugs that users will run into, so they may not be in the best position to write the most helpful error message text without getting those bug reports.</p>\n<p>I'm not proposing any specific solution, but did want to highlight the problem and see if there was any existing prior art on the committee around this issue.</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$P8n9S8D_FWz5x0USQbr5LM5KSbwojvFFxKs2cMSJuOM"}},"msgtype":"m.text"},"ts":1635380414162,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$t5hr-6iloaV4CESQSakCnG857_Sbdgvt9bZgUl2-3r8"},
{"content":{"body":"> <@waldemarh:matrix.org> I'm not saying that the options bag should be optional. But if you pass an options bag without a smallestUnit, then round should be the identity.\n\nWe'll plan to spend our overflow time tomorrow focusing on this question. Reading the replies above, I believe that there are three possible solutions:\n\n1. `.round({})` is allowed (and does nothing), but `.round()` throws.\n2. Both are accepted and do nothing.\n3. Both throw.\n\nThe current Temporal Stage 3 proposal uses (3). There were two reasons the champions selected (3): first, because it's a no-op and likely a programmer bug, and second for defense against typos in the property name like `.round({smalestUnit: 'second'})` which would be treated the same as `.round({})`.  (Sadly there's no typo defense for optional property names without breaking extensibility, but our opinion was that preventing at least some bugs was better than preventing no bugs.)\n\nOne request I'll relay from ptomato: this proposal is already in Stage 3, so we'd ask for there to be a really persuasive case to change the existing plan of record. The default should be that we stick with what's already been approved, because we really want to get this API shipped soon!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tWwDvs38e33EnV93jzBNcjungw3mZM7OfN5E6Dj8Bsk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>I&#39;m not saying that the options bag should be optional. But if you pass an options bag without a smallestUnit, then round should be the identity.</blockquote></mx-reply><p>We'll plan to spend our overflow time tomorrow focusing on this question. Reading the replies above, I believe that there are three possible solutions:</p>\n<ol>\n<li><code>.round({})</code> is allowed (and does nothing), but <code>.round()</code> throws.</li>\n<li>Both are accepted and do nothing.</li>\n<li>Both throw.</li>\n</ol>\n<p>The current Temporal Stage 3 proposal uses (3). There were two reasons the champions selected (3): first, because it's a no-op and likely a programmer bug, and second for defense against typos in the property name like <code>.round({smalestUnit: 'second'})</code> which would be treated the same as <code>.round({})</code>.  (Sadly there's no typo defense for optional property names without breaking extensibility, but our opinion was that preventing at least some bugs was better than preventing no bugs.)</p>\n<p>One request I'll relay from <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: this proposal is already in Stage 3, so we'd ask for there to be a really persuasive case to change the existing plan of record. The default should be that we stick with what's already been approved, because we really want to get this API shipped soon!</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$tWwDvs38e33EnV93jzBNcjungw3mZM7OfN5E6Dj8Bsk"}},"msgtype":"m.text"},"ts":1635381370484,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$ibI7_EYlpjIO3_56d_LLPVVlFruGLYhN_ENTCDs7gec"},
{"content":{"body":"> > shu : is ftang in the loop for all these normative changes and bug fixes?\n> ptomato: yes, he found most of them, but I am pretty sure he read the slides as well. I'll double check at the next Temporal meeting\n\nWe also implemented the following process: \n* PRs that affect the spec text are marked with a `spec-text` label in GH https://github.com/tc39/proposal-temporal/pulls?q=is%3Apr+label%3Aspec-text\n* PRs that don't affect the spec (e.g. changes to docs, polyfill, tests, build tools hell, etc.) are marked `no-spec-text`\n* PR authors who forget to put the right label on (prime suspect: me, usually!) will be publicly embarrassed and a maintainer will quickly add the right label.\n\nI'll leave it to Frank and other implementers to say whether it's actually been helpful in cutting down the noise, but anecdotally I've been hearing fewer complaints since we started doing this so ðŸ¤·.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<blockquote>\n<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> : is ftang in the loop for all these normative changes and bug fixes?<br><a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: yes, he found most of them, but I am pretty sure he read the slides as well. I'll double check at the next Temporal meeting</p>\n</blockquote>\n</blockquote>\n<p>We also implemented the following process:</p>\n<ul>\n<li>PRs that affect the spec text are marked with a <code>spec-text</code> label in GH https://github.com/tc39/proposal-temporal/pulls?q=is%3Apr+label%3Aspec-text</li>\n<li>PRs that don't affect the spec (e.g. changes to docs, polyfill, tests, build tools hell, etc.) are marked <code>no-spec-text</code></li>\n<li>PR authors who forget to put the right label on (prime suspect: me, usually!) will be publicly embarrassed and a maintainer will quickly add the right label.</li>\n</ul>\n<p>I'll leave it to Frank and other implementers to say whether it's actually been helpful in cutting down the noise, but anecdotally I've been hearing fewer complaints since we started doing this so ðŸ¤·.</p>\n","msgtype":"m.text"},"ts":1635382045854,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$ex1KFd9XmrFDFLzOVfjSMOY8_YvnbjbDDKCD9eEF6Tk"},
{"content":{"body":"spec 13.5.1.2 RS: delete operation","msgtype":"m.text"},"ts":1635391950688,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Lf2mjAhDULANU1_mwhPNulag3tT3s9t7u_QqX7TI0Hc"},
{"content":{"body":"what does it mean by delete binding?","msgtype":"m.text"},"ts":1635391962885,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wHfQ-6l6gBuIC553zEeS24GnOrkb-pN4N-hOcRunPj8"},
{"content":{"body":"```js\nvar a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">var a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n</code></pre>\n","msgtype":"m.text"},"ts":1635391975387,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$K68-vp67c5srq_Pa4fczheWInoPHs44e7GxcD0oO4KY"},
{"content":{"body":"I tried this but `z` didn't throw","format":"org.matrix.custom.html","formatted_body":"I tried this but <code>z</code> didn't throw","msgtype":"m.text"},"ts":1635391986121,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$2QEHWsl5izLB4f4PPZnWdHEZF4vL0iTsM0OLsST72AI"},
{"content":{"body":"IIUC var declaration is not deletable (except in eval mode), so a is actually still reachable in z.","msgtype":"m.text"},"ts":1635393828494,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$pkQr8aEusd7qfr4dGwKD3u2w6A3yNYX4Ky9LMUk58Cw"},
{"content":{"body":"https://tc39.es/ecma262/#sec-globaldeclarationinstantiation 16.1.7 step 17, defined as `Perform ? env.CreateGlobalVarBinding(vn, false).`. the second parameter of `CreateGlobalVarBinding` defines if the binding is deletable.","format":"org.matrix.custom.html","formatted_body":"https://tc39.es/ecma262/#sec-globaldeclarationinstantiation 16.1.7 step 17, defined as <code>Perform ? env.CreateGlobalVarBinding(vn, false).</code>. the second parameter of <code>CreateGlobalVarBinding</code> defines if the binding is deletable.","msgtype":"m.text"},"ts":1635393943096,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$CxMn_Ey-tcfM1lZce34oK4WN0wAoBYQqmcEzTElh5nU"},
{"content":{"body":"I got it. \n\n```js\na = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n```","format":"org.matrix.custom.html","formatted_body":"<p>I got it.</p>\n<pre><code class=\"language-js\">a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n</code></pre>\n","msgtype":"m.text"},"ts":1635394102059,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UHw1qxx-YJkMbmG5591oJgvU3gqbbNAyuGeYtiK9RZQ"},
{"content":{"body":"this will throw","msgtype":"m.text"},"ts":1635394104247,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$c9p3kIgMq5KMOuAnGuYhwZkqIdmXlqmgjb4Zs7ZJkcg"},
{"content":{"body":"plenary will start in... 12 mins","msgtype":"m.text"},"ts":1635410896269,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$xf0VHLmtLMNrZGXdRU0w_TAEJHmQG99JFn5tmtbd8mY"},
{"content":{"body":"can someone remind me what the motivation for boxes is","msgtype":"m.text"},"ts":1635412120334,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X8PulT7XlLzfTfHmW_dJfrtGxpXdvIKUDBJf0VXGnec"},
{"content":{"body":"allow to keep mutable object in record/tuple","msgtype":"m.text"},"ts":1635412139857,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$B581Hq9Z4GG14fx_qSBA3-qQtgXSb2LZdOy6dxhQmXc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1635412148617,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$vJPNRzFuVTyNCtojWfsotAVAngljMPGEW99ksOujzVA"},
{"content":{"body":"not just mutable, but also objects like functions","msgtype":"m.text"},"ts":1635412156967,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$f0AgT-eM_8ViPDAcBTXyCzXDHrY-wNNpaHCUOEPn2R4"},
{"content":{"body":"if you can put a box in a record, you have already given up on the \"records are deeply immutable\" goal, so what benefit does the box have?","msgtype":"m.text"},"ts":1635412204962,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1BGjSLz_0GT3LvieEoFoQ1DsVxWPCM84Qe89CFxx2ew"},
{"content":{"body":"Boxes are imutable. They are similar to having a Symbol","msgtype":"m.text"},"ts":1635412267692,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$mPfzemeHKQkP20DJxsHEmFVVDQ5aUPIC-HG9ZsvizVE"},
{"content":{"body":"and that symbol can be used to look up an object","msgtype":"m.text"},"ts":1635412276891,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$F1qaAdsA4YKpzbLcg0EmfLOtAumomw7_OS9qRwA1Z_I"},
{"content":{"body":"that seems to be a technical point","msgtype":"m.text"},"ts":1635412288484,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NyyDADk_e4Xsn1PzrnMD48d_KHRg3BuY1Ny2dAPld9k"},
{"content":{"body":"conceptually it's to link the immutable to a mutable thing, right?","msgtype":"m.text"},"ts":1635412299494,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SFYLpRGWCLKjRxWJY6TFixyGLpsqNxprIRv3ejKh0Ag"},
{"content":{"body":"they can be used to look up an object without any other facilities","msgtype":"m.text"},"ts":1635412309437,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$judi4jDUm0rSGIpsNKR6nKGPeIacAJYOiEwTg-u3qIk"},
{"content":{"body":"that sure does not sound like they are immutable to me","msgtype":"m.text"},"ts":1635412318890,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GLJltjfryyXDfDBck0Y-ItReng4EHPGCHCdFx0f_9rw"},
{"content":{"body":"like, they give access to mutability","msgtype":"m.text"},"ts":1635412328792,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-4_UiZJ6z4jkpm6zIg_HJLzzFpgYCp4ZnTH8nTG8yHQ"},
{"content":{"body":"they're immutable in the sense that `const` is constant","format":"org.matrix.custom.html","formatted_body":"they're immutable in the sense that <code>const</code> is constant","msgtype":"m.text"},"ts":1635412368852,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m9xsQ4lmOelswnK0HXFCZnAtZkztiBcFf4HWacXt20U"},
{"content":{"body":"There are a lot of use case that require expressing an immutable structure with mutable exit points","msgtype":"m.text"},"ts":1635412457291,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$0K3dpCtBEAEGtpX1DqqfE6QdbzF55OBxhl-hn9sAa6M"},
{"content":{"body":"They give an explicit signal when leaving the immutable part of the \"graph\"","msgtype":"m.text"},"ts":1635412460005,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$86T2UcGJqz1KKS08hdrE2CddRRh_Zud-6POywl2A3gM"},
{"content":{"body":"Mathieu Hofman: right, but just putting an object in the record is already an immutable structure with mutable exit points","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: right, but just putting an object in the record is already an immutable structure with mutable exit points","msgtype":"m.text"},"ts":1635412480038,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zHNPKRyndZOE9jGGllGOjrbwyYiFU9UDkxqarV90NsM"},
{"content":{"body":"how is \"and then this value is not a primitive\" not already an explicit signal?","msgtype":"m.text"},"ts":1635412495063,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk"},
{"content":{"body":"like, that is currently already how you distinguish between the mutable and the immutable stuff","msgtype":"m.text"},"ts":1635412520712,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mtn8eRWCwAjqrZzySt_DreXZVwHnMxGQiWUTd_rQxMw"},
{"content":{"body":" Is there a reason this can't be solved using `Symbol` and `Map`?","format":"org.matrix.custom.html","formatted_body":"Is there a reason this can't be solved using <code>Symbol</code> and <code>Map</code>?","msgtype":"m.text"},"ts":1635412529601,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dOyte7YHQ3HIdEy9Zech3Lmh5tqUiebGW8UkkNCFVQc"},
{"content":{"body":"well, weakmaps i guess","msgtype":"m.text"},"ts":1635412547957,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$El3FLA2Kai_OgIHXgp8m0alL1U8d6hjxSjwkTNbqyWY"},
{"content":{"body":"but i thought the R&T champions have gone back and forth on Box vs that approach","msgtype":"m.text"},"ts":1635412563054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$v1vVD8caIKOGP1d-zkQSOZLuzcNv1bh7VHDk7BAMvTU"},
{"content":{"body":"> <@bakkot:matrix.org> how is \"and then this value is not a primitive\" not already an explicit signal?\n\nbecause you can't put non primitives inside records and tuples.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>how is &quot;and then this value is not a primitive&quot; not already an explicit signal?</blockquote></mx-reply>because you can't put non primitives inside records and tuples.","m.relates_to":{"m.in_reply_to":{"event_id":"$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk"}},"msgtype":"m.text"},"ts":1635412564167,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HXWSmhZVkJ8U-_ofdTaXeqlWMwULFWZTZj_jzwCTcvI"},
{"content":{"body":"i forget the outcome","msgtype":"m.text"},"ts":1635412568510,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K6UgxRJyI1-5ZBTNWtt0hs7tWWcHDhjSnG2TDlCloto"},
{"content":{"body":"Mathieu Hofman: yes, but that's a design choice they made, which they now seek to introduce a new exit point for via a new primitive whose sole purpose is to wrap an Object","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: yes, but that's a design choice they made, which they now seek to introduce a new exit point for via a new primitive whose sole purpose is to wrap an Object","msgtype":"m.text"},"ts":1635412590457,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3VDhBhMLS9-1eMtEbq4K2Cg2KyAGoVOw8HtwmTsy-9U"},
{"content":{"body":"seems... unnecessary, is how i read bakkot's point","format":"org.matrix.custom.html","formatted_body":"seems... unnecessary, is how i read <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s point","msgtype":"m.text"},"ts":1635412598678,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q4DHaSiP7Bsc3z3mkmjWgNa3skFYiaEY6H9n-O47rAo"},
{"content":{"body":"There is a long discussion on why implicitly allowing objects inside records/tuples is not feasible","msgtype":"m.text"},"ts":1635412622178,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$TowEyMiQDJcdoNhj2kXN-t5k_f0m4Ndzy-796TxI_Us"},
{"content":{"body":"main one being it's a footgun","msgtype":"m.text"},"ts":1635412640488,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$sXXmtXYMZzT0EFZ9NcDUP0FESQOMz0T37S2_fto3xfM"},
{"content":{"body":"why is this less a footgun?","msgtype":"m.text"},"ts":1635412659299,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BEfG_55uxZOg-sUWhDE4iJXhJMLnlUiy0RmcXDaSHyU"},
{"content":{"body":"because you need to explicitly wrap the object","msgtype":"m.text"},"ts":1635412680814,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$0THBj3e6I-dEdl289H4ZIHDJGGAOdC6vgvoDRL4MOV0"},
{"content":{"body":"you can't mistakenly put something mutable in your immutable structure","msgtype":"m.text"},"ts":1635412705474,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$C4CXHHnk5LOt3BwfoPpN695U86cYU6A04ht2UojRf5w"},
{"content":{"body":"but unless you're constructing all values inline, you could get a box already via a variable, no?","msgtype":"m.text"},"ts":1635412727093,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PniNg4fKJ5mAhWXTtrG5kf1uYpoYcBXdf__gzSa0F14"},
{"content":{"body":"`const tuple = #[getFoo()]`","format":"org.matrix.custom.html","formatted_body":"<code>const tuple = #[getFoo()]</code>","msgtype":"m.text"},"ts":1635412739271,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$7WHMRHipEzQK9Cw2I5XvAtJ_nNNRutlHpmzxNUXz8Ng"},
{"content":{"body":"`getFoo()` can return boxes, no?","format":"org.matrix.custom.html","formatted_body":"<code>getFoo()</code> can return boxes, no?","msgtype":"m.text"},"ts":1635412753428,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4WkEKTwd1frvDAA3wOOQlT417KpKBkxzURY1J3fZKlU"},
{"content":{"body":"it can, but you may not always know what it returns","msgtype":"m.text"},"ts":1635412772383,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ"},
{"content":{"body":"well yes, that's the point","msgtype":"m.text"},"ts":1635412779759,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RkiY-uDWNcCpDLwqAOXLCv-mBAQWQXTqlFYDE2kKWE0"},
{"content":{"body":"if it returns boxes, then `#[getFoo()]` is conceptually not deeply immutable","format":"org.matrix.custom.html","formatted_body":"if it returns boxes, then <code>#[getFoo()]</code> is conceptually not deeply immutable","msgtype":"m.text"},"ts":1635412793866,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cWyZ42tOoIBH3qptGM0by_Tj5bVm-l66XSxPssCzY28"},
{"content":{"body":"but you don't know if `getFoo()` returns boxes or not","format":"org.matrix.custom.html","formatted_body":"but you don't know if <code>getFoo()</code> returns boxes or not","msgtype":"m.text"},"ts":1635412802927,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ihm9uXOAaUNDk0iGHv-mzVvKPtGrMXwFaDE-0apZf8U"},
{"content":{"body":"so you don't know if `#[getFoo()]` is really deeply immutable without exit points or not","format":"org.matrix.custom.html","formatted_body":"so you don't know if <code>#[getFoo()]</code> is really deeply immutable without exit points or not","msgtype":"m.text"},"ts":1635412816544,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$h4HlZ4aD8KqEaRyMG0_30otcsHRrdGqZaWHBj8XZFc8"},
{"content":{"body":"The only way you get immutability is via a function call, like `ObjectPlaceholder.unwrap(myBox)`: it's a function call that returns a mutable thing","format":"org.matrix.custom.html","formatted_body":"The only way you get immutability is via a function call, like <code>ObjectPlaceholder.unwrap(myBox)</code>: it's a function call that returns a mutable thing","msgtype":"m.text"},"ts":1635412829902,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$yEke8ovWvJB32n0n8UN_gV5RAg5KeZ-eofUvk8TgIOU"},
{"content":{"body":"Exactly as if you would have a symbol representing an object, white a side symbol->Object map","msgtype":"m.text"},"ts":1635412842859,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$anL8jfKSlw2pFNhvNjQYaPZ-PBmKETQpVY5GgXyC7sg"},
{"content":{"body":" * Exactly as if you would have a symbol representing an object, white a side symbol->Object map","m.new_content":{"body":"Exactly as if you would have a symbol representing an object, white a side symbol->Object map","msgtype":"m.text"},"m.relates_to":{"event_id":"$anL8jfKSlw2pFNhvNjQYaPZ-PBmKETQpVY5GgXyC7sg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635412852896,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bqwRrFlAchEbEqDVpXTU8ldJAN64nY9HwWDM70akDqQ"},
{"content":{"body":"> <@mhofman:matrix.org> it can, but you may not always know what it returns\n\nwe cannot always know a function returning any type of thing, in that sense?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>it can, but you may not always know what it returns</blockquote></mx-reply>we cannot always know a function returning any type of thing, in that sense?","m.relates_to":{"m.in_reply_to":{"event_id":"$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ"}},"msgtype":"m.text"},"ts":1635412877925,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$7Q-taILuCS_Cgte_BXyNSEJ81zbHgIfdOa_T1dkY1cg"},
{"content":{"body":"boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a` #[type: 'user data', data: whatever]`","format":"org.matrix.custom.html","formatted_body":"boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a<code> #[type: 'user data', data: whatever]</code>","msgtype":"m.text"},"ts":1635412980404,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE"},
{"content":{"body":"i missed the use case","msgtype":"m.text"},"ts":1635413012139,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8"},
{"content":{"body":"is it like taint tracking?","msgtype":"m.text"},"ts":1635413017224,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FWkFmXgNCyN0tFzQ281u9lj34bw3UNRY9EskI28-pH4"},
{"content":{"body":"> <@bakkot:matrix.org> boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a` #[type: 'user data', data: whatever]`\n\nThey can be leveraged to build that thing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a<code> #[type: 'user data', data: whatever]</code></blockquote></mx-reply>They can be leveraged to build that thing","m.relates_to":{"m.in_reply_to":{"event_id":"$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE"}},"msgtype":"m.text"},"ts":1635413097594,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$B_u_BLkxaUbm25Z8v5E415VH-g0IyxpmBxWeTRzC_8M"},
{"content":{"body":"I outlined it in the primitive issue","msgtype":"m.text"},"ts":1635413112304,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$tXPxqChMA1drJJTr-0lC6lk4uMFIUkH4OkhMyqvcPI0"},
{"content":{"body":"> <@shuyuguo:matrix.org> i missed the use case\n\nIt basically similar use case of marking exit points where value in the exit points can be any value (primitive or object)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i missed the use case</blockquote></mx-reply>It basically similar use case of marking exit points where value in the exit points can be any value (primitive or object)","m.relates_to":{"m.in_reply_to":{"event_id":"$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8"}},"msgtype":"m.text"},"ts":1635413137483,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$CjAMrc2LYWXKwCrprFKeA0W8pXJDSghPcwH_GXMW7Po"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1635413154939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hJ-RUDRjrSpKEoMvqoCiGB2jy0FrtUeZ1WPMmfFA6yY"},
{"content":{"body":"and ObjectPlaceholder doesn't work for that only because it can't contain primitives","msgtype":"m.text"},"ts":1635413174319,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BvmMBxXREDOjZzF6HkNZMHziUSpE4ScrKe4-6CT7sa0"},
{"content":{"body":"https://github.com/tc39/proposal-record-tuple/issues/258#issuecomment-940639809","msgtype":"m.text"},"ts":1635413180983,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$hq-TJwAMLvN9iF_uc2ev23n_9wCxot5b7pqOnynelz4"},
{"content":{"body":"I'm annoyed that it's `ObjectPlaceholder`, but the reply in TCQ was to address why an explicit exit marking is valuable","format":"org.matrix.custom.html","formatted_body":"I'm annoyed that it's <code>ObjectPlaceholder</code>, but the reply in TCQ was to address why an explicit exit marking is valuable","msgtype":"m.text"},"ts":1635413221877,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$WEfHTyCZjNruJpQSB4-bfCyXe29X96tJ4Rnp4uOqxVI"},
{"content":{"body":"The primitive issue could be solved by another layer of object, do I understand that correct?","msgtype":"m.text"},"ts":1635413313168,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM"},
{"content":{"body":"I am still really confused by what boxes are for","msgtype":"m.text"},"ts":1635413321045,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZcJZzl8QNTd0RDdWmfEA8xCK_EgLSlB2Hljx1LBwb1U"},
{"content":{"body":"is there an explainer somewhere?","msgtype":"m.text"},"ts":1635413336717,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20"},
{"content":{"body":"> <@haxjs:matrix.org> The primitive issue could be solved by another layer of object, do I understand that correct?\n\nYes, or `#{ isObject: boolean, value: primitive | placeholder }`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>The primitive issue could be solved by another layer of object, do I understand that correct?</blockquote></mx-reply>Yes, or <code>#{ isObject: boolean, value: primitive | placeholder }</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM"}},"msgtype":"m.text"},"ts":1635413345773,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RNJrfGzo8BMRB8cD-BXT15emLuja8qVeI-4e25Zs1J0"},
{"content":{"body":"specifically, the advantage of boxes vs just putting objects directly in the graph, and having \"it is not a primitive\" be the explicit exit point","msgtype":"m.text"},"ts":1635413389823,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw"},
{"content":{"body":"But there's no need for that?","msgtype":"m.text"},"ts":1635413441059,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SCmsIbNB-XQk0n_DV0JUTO8nYhz0cUZtukYW5K_dGMU"},
{"content":{"body":"I havne't seen a justification for why we should prevent primitives directly in Box","msgtype":"m.text"},"ts":1635413460046,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho"},
{"content":{"body":"> <@bakkot:matrix.org> is there an explainer somewhere?\n\nWe have a short usage example at https://github.com/tc39/proposal-record-tuple#box (which uses `Box` as the name)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>is there an explainer somewhere?</blockquote></mx-reply>We have a short usage example at https://github.com/tc39/proposal-record-tuple#box (which uses <code>Box</code> as the name)","m.relates_to":{"m.in_reply_to":{"event_id":"$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20"}},"msgtype":"m.text"},"ts":1635413460852,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jTzWY8USz2Z1YdjqrTUg8BDWPIX8C31TxMYrQp688l4"},
{"content":{"body":"that does not explain the motivation over just putting objects directly in the record","msgtype":"m.text"},"ts":1635413493419,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA"},
{"content":{"body":"> <@bakkot:matrix.org> specifically, the advantage of boxes vs just putting objects directly in the graph, and having \"it is not a primitive\" be the explicit exit point\n\nI remember the author of scala.js prefer just putting objects :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>specifically, the advantage of boxes vs just putting objects directly in the graph, and having &quot;it is not a primitive&quot; be the explicit exit point</blockquote></mx-reply>I remember the author of scala.js prefer just putting objects :)","m.relates_to":{"m.in_reply_to":{"event_id":"$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw"}},"msgtype":"m.text"},"ts":1635413522470,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$bd3NoE18cJdMhTxKyPFN9Px3BeMfA8vAo30uFDUd4dU"},
{"content":{"body":"> <@jridgewell:matrix.org> I havne't seen a justification for why we should prevent primitives directly in Box\n\nmaybe it looks more \"clear\" ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I havne&#39;t seen a justification for why we should prevent primitives directly in Box</blockquote></mx-reply>maybe it looks more &quot;clear&quot; ?","m.relates_to":{"m.in_reply_to":{"event_id":"$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho"}},"msgtype":"m.text"},"ts":1635413549707,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_nkdjphy-3HZLip0MiW5xqp2Wyh4at7owFMLp5Q_20E"},
{"content":{"body":"> <@bakkot:matrix.org> that does not explain the motivation over just putting objects directly in the record\n\nOk, I always interpret \"why we need placeholders\" as \"why just primitives isn't enough\" ðŸ˜…\n\nWe have https://github.com/tc39/proposal-record-tuple/issues/206 where we discussed about explicit/implicit boxing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>that does not explain the motivation over just putting objects directly in the record</blockquote></mx-reply><p>Ok, I always interpret &quot;why we need placeholders&quot; as &quot;why just primitives isn't enough&quot; ðŸ˜…</p>\n<p>We have https://github.com/tc39/proposal-record-tuple/issues/206 where we discussed about explicit/implicit boxing</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA"}},"msgtype":"m.text"},"ts":1635413565504,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$WEcLX1DjheTdiSYXQSL7ijZIxCe8L5wNrEuTnH4AyiM"},
{"content":{"body":"nicolo-ribaudo: again, the question is \"why have boxes at all, vs just putting things in the graph directly\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: again, the question is &quot;why have boxes at all, vs just putting things in the graph directly&quot;","msgtype":"m.text"},"ts":1635413635950,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$k048ysQG-M-Izw-ZxqmW4PSEGpV3iMF2mYFPciaGfMk"},
{"content":{"body":"that issue presupposes the existence of boxes","msgtype":"m.text"},"ts":1635413642856,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RbnJl0stv_uKmmVdnt58KLYzf1itmYvjF1DCmdkqzkQ"},
{"content":{"body":"Could we split objectplaceholder/box into further proposal? Consdier it could be implemented by symbol as weakmap keys?","msgtype":"m.text"},"ts":1635413651473,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$lXrWbzpzWCkk_VIjqT2jLcYSd2-KuCultwZAlc5BCSk"},
{"content":{"body":"CompositeKeys for Maps is a key use case for Tuples, which i think a lot of people will want","msgtype":"m.text"},"ts":1635413711640,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$z2znj4SGeq-MP_R7Nn1e0J9SxqkPFqRh6YDPUSlPHm0"},
{"content":{"body":"So I don't think this is a niche use-case, to want objects in Tuples","msgtype":"m.text"},"ts":1635413723009,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4"},
{"content":{"body":"right, but again, my question is \"why not just put objects in tuples, instead of having boxes\"","msgtype":"m.text"},"ts":1635413742233,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU"},
{"content":{"body":"> <@bakkot:matrix.org> right, but again, my question is \"why not just put objects in tuples, instead of having boxes\"\n\ngood question. actually I also think maybe it's much fit for js? consider other similar languages also choose that way?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>right, but again, my question is &quot;why not just put objects in tuples, instead of having boxes&quot;</blockquote></mx-reply>good question. actually I also think maybe it's much fit for js? consider other similar languages also choose that way?","m.relates_to":{"m.in_reply_to":{"event_id":"$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU"}},"msgtype":"m.text"},"ts":1635413795129,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$sv583a0LQTeVh2izH44W2KuzZ_w9fQhuF0aqM8dFo_E"},
{"content":{"body":"> <@aclaymore:matrix.org> So I don't think this is a niche use-case, to want objects in Tuples\n\nthis is probably the underlying question","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>So I don&#39;t think this is a niche use-case, to want objects in Tuples</blockquote></mx-reply>this is probably the underlying question","m.relates_to":{"m.in_reply_to":{"event_id":"$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4"}},"msgtype":"m.text"},"ts":1635414076193,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Pbkt8eGCszSMTbTKdIFQ5clMHdjuCRniDzvofz-Fib0"},
{"content":{"body":"do the R&T champions think mutable exit points is common? if so, then why not bakkot's suggestion? if not, then why not symbols (technical problems notwithstanding)","format":"org.matrix.custom.html","formatted_body":"do the R&amp;T champions think mutable exit points is common? if so, then why not <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s suggestion? if not, then why not symbols (technical problems notwithstanding)","msgtype":"m.text"},"ts":1635414119209,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TUeorYwvNBVZ8DNTcTIqea3KZhTxA5U5fKvaosXMMvw"},
{"content":{"body":"so far i've heard one argument against \"why not bakkot's suggestion\" is the need for _primitive_ mutable exit points as well","format":"org.matrix.custom.html","formatted_body":"so far i've heard one argument against &quot;why not <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s suggestion&quot; is the need for <em>primitive</em> mutable exit points as well","msgtype":"m.text"},"ts":1635414171894,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$H2Vr7p3KpX6RKhPa6riCtX-F5ljW12G0rtNCv2JAL84"},
{"content":{"body":"but then again the current solution also doesn't admit that","msgtype":"m.text"},"ts":1635414181148,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$G9ZwK2YwM7EjUuys_rnNDN9Dlgb1DNxyymCIDe9Cmc8"},
{"content":{"body":"As I mentioned, there are a lot of issues with direct objects inside primitives. One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it. The other is the same security concern as how to \"dereference\" an ObjectPlaceholder. Existing code assumes that if something is a primitive, it doesn't contain object which represent authority. It would break a lot of deployed membranes and SES.","msgtype":"m.text"},"ts":1635414225069,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$YVJ297qqRdaa59R5lBkwp3QkiskyiysgCy3a_bReMCM"},
{"content":{"body":"Maybe we need two things: Tuple (which could include object directly) and PrimitiveTuple","msgtype":"m.text"},"ts":1635414232421,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$AU0Mx6wL9eraHmd5SKu034Urb2L0hFcn0d1oM-ZlY3E"},
{"content":{"body":"Mathieu Hofman: i remain baffled by the footgun argument","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: i remain baffled by the footgun argument","msgtype":"m.text"},"ts":1635414261542,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$D6ktShdTuZudQD4CI_u4IcK7tzIhkBF-b-05UYOwKJU"},
{"content":{"body":"if it's common, you're asking people to look up incantations to do what they want","msgtype":"m.text"},"ts":1635414270483,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ"},
{"content":{"body":"The other programming experience may not support footgun argument. Though JS may be have something special I don't know...","msgtype":"m.text"},"ts":1635414321854,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RPEnkgjS6l-2J8XmLhMqdWTvLOnSqBltJgEitkL72Bk"},
{"content":{"body":"> One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it\n\nBoxes don't really help that, since `#[foo()]` may or may not be a box and so may or may not be mutable. Also boxes are super complicated so it seems like there's at least as much possibility for footguns there\n\n> Existing code assumes that if something is a primitive, it doesn't contain object which represent authority.\n\nBut boxes _are_ primitives which contain objects; this argument confuses me","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it</p>\n</blockquote>\n<p>Boxes don't really help that, since <code>#[foo()]</code> may or may not be a box and so may or may not be mutable. Also boxes are super complicated so it seems like there's at least as much possibility for footguns there</p>\n<blockquote>\n<p>Existing code assumes that if something is a primitive, it doesn't contain object which represent authority.</p>\n</blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n","msgtype":"m.text"},"ts":1635414339209,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_OTxuaC_ZjyZ9HPcJn5BRWgJ3-zx9qhZZBUxjqMcZT4"},
{"content":{"body":"> <@shuyuguo:matrix.org> if it's common, you're asking people to look up incantations to do what they want\n\nI'm not following","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>if it&#39;s common, you&#39;re asking people to look up incantations to do what they want</blockquote></mx-reply>I'm not following","m.relates_to":{"m.in_reply_to":{"event_id":"$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ"}},"msgtype":"m.text"},"ts":1635414357502,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$b1wJ6ys2f-lNPJqev4FLzAXobCYp1uH7NYkENEtt8Ig"},
{"content":{"body":"Yeah, I remember the author of scala.js also point out some footgun of using Box in the issue.","msgtype":"m.text"},"ts":1635414393766,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$BXM2FRFlxs1D9HP3NOvBIpAWtlMYnoXr-NBkC2V_Kbc"},
{"content":{"body":"if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i'm not too convinced that you've avoided any footguns","msgtype":"m.text"},"ts":1635414412216,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg"},
{"content":{"body":"So I am also not sure whether box could really solve the \"footguns\" of object in tuples.","msgtype":"m.text"},"ts":1635414439029,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$WKUJO3pB3jn6NC4y0Ribp58K_sX8jOv4uJ65Gd1QF1Q"},
{"content":{"body":"+ what's already been said about not knowing the return type of `foo()`","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>what's already been said about not knowing the return type of <code>foo()</code></li>\n</ul>\n","msgtype":"m.text"},"ts":1635414452113,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Sg9XCzxVNGTZm_6XY8XPTRagfa62BWQ5Qm4TnHPBZYw"},
{"content":{"body":"> But boxes _are_ primitives which contain objects; this argument confuses me\n\nBut you need access to the `ObjectPlaceholder` to get to the content, so they are not a risk on their own","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n</blockquote>\n<p>But you need access to the <code>ObjectPlaceholder</code> to get to the content, so they are not a risk on their own</p>\n","msgtype":"m.text"},"ts":1635414461712,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM"},
{"content":{"body":"lol why does element convert `+` to a single bullet point list","format":"org.matrix.custom.html","formatted_body":"lol why does element convert <code>+</code> to a single bullet point list","msgtype":"m.text"},"ts":1635414463853,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$W_yGWaDKmoHzttivjpLWD-DQld3sl_jOP25KrAzRuJs"},
{"content":{"body":"> <@mhofman:matrix.org> > But boxes _are_ primitives which contain objects; this argument confuses me\n> \n> But you need access to the `ObjectPlaceholder` to get to the content, so they are not a risk on their own\n\neventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n</blockquote>\n<p>But you need access to the <code>ObjectPlaceholder</code> to get to the content, so they are not a risk on their own</p>\n</blockquote></mx-reply>eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.","m.relates_to":{"m.in_reply_to":{"event_id":"$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM"}},"msgtype":"m.text"},"ts":1635414505795,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA"},
{"content":{"body":"> <@shuyuguo:matrix.org> if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i'm not too convinced that you've avoided any footguns\n\nAt least they've thought of it and the incantation is an explicit marker in the code","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i&#39;m not too convinced that you&#39;ve avoided any footguns</blockquote></mx-reply>At least they've thought of it and the incantation is an explicit marker in the code","m.relates_to":{"m.in_reply_to":{"event_id":"$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg"}},"msgtype":"m.text"},"ts":1635414520706,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$jGCnYvx9Gn1719gsbqTYYtxexTsE7Jqvs-eBXj6X4wc"},
{"content":{"body":"https://github.com/rbuckton/proposal-regexp-features/issues/2","msgtype":"m.text"},"ts":1635414581849,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$46H3EGlAMl7PK_blvnj65URY5X2ugfhU7vMpUjwlu34"},
{"content":{"body":"Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global weakmap registry\"","msgtype":"m.text"},"ts":1635414585861,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0"},
{"content":{"body":" * Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"","m.new_content":{"body":"Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635414659063,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$czz3tS3N7d_9haQ9ppiQbfZt5Y3-JXwCeq-9CrnA2d8"},
{"content":{"body":"i would still like to know the \"how common a use case do you expect mutable exit points to be\" question","msgtype":"m.text"},"ts":1635414679219,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"},
{"content":{"body":"> <@haxjs:matrix.org> eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.\n\nI did not see any footgun in that example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.</blockquote></mx-reply>I did not see any footgun in that example","m.relates_to":{"m.in_reply_to":{"event_id":"$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA"}},"msgtype":"m.text"},"ts":1635414742000,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y"},
{"content":{"body":"> <@shuyuguo:matrix.org> i would still like to know the \"how common a use case do you expect mutable exit points to be\" question\n\nWe initially didn't consider it, but after some users come up with the question \"why only primitives?\" (https://github.com/tc39/proposal-record-tuple/issues/31) we have started talking about it and found that users would love to be able to store objects because many things are not representable as immutable (for example, everything that comes from the dom)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i would still like to know the &quot;how common a use case do you expect mutable exit points to be&quot; question</blockquote></mx-reply>We initially didn't consider it, but after some users come up with the question &quot;why only primitives?&quot; (https://github.com/tc39/proposal-record-tuple/issues/31) we have started talking about it and found that users would love to be able to store objects because many things are not representable as immutable (for example, everything that comes from the dom)","m.relates_to":{"m.in_reply_to":{"event_id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"}},"msgtype":"m.text"},"ts":1635414813871,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$sIkRRLnJyb__NQko75Odnxxc2mzOC4jJBTKKiKH4tXQ"},
{"content":{"body":"> <@mhofman:matrix.org> I did not see any footgun in that example\n\nActually in the thread there are some code example to deal with box conditionally and have bugs, which seems a signal of footgun.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I did not see any footgun in that example</blockquote></mx-reply>Actually in the thread there are some code example to deal with box conditionally and have bugs, which seems a signal of footgun.","m.relates_to":{"m.in_reply_to":{"event_id":"$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y"}},"msgtype":"m.text"},"ts":1635414835663,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_Q7h6gq7yCyI1t4oTzkPP8Mked4281gaTn8sGWe4sEs"},
{"content":{"body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"}}},"ts":1635414852170,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$beWRmmYvQranxWV9s_fC40bGKuUvFdOo9FxEhjSjI_0"},
{"content":{"body":"> <@shuyuguo:matrix.org> i would still like to know the \"how common a use case do you expect mutable exit points to be\" question\n\n * Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i would still like to know the \"how common a use case do you expect mutable exit points to be\" question</blockquote></mx-reply> * Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","m.new_content":{"body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","msgtype":"m.text"},"m.relates_to":{"event_id":"$beWRmmYvQranxWV9s_fC40bGKuUvFdOo9FxEhjSjI_0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635414866382,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$l3RFct48Tz_OsHZBUhRdJ_jh6dX5rTAZPFYX_WoB32g"},
{"content":{"body":"> <@mhofman:matrix.org> Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"\n\nSeeing it explained this way would be illuminating.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>Basically ObjectPlaceholder is a standardized &quot;Symbol as weakmap key + global (per realm) weakmap registry&quot;</blockquote></mx-reply>Seeing it explained this way would be illuminating.","m.relates_to":{"m.in_reply_to":{"event_id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0"}},"msgtype":"m.text"},"ts":1635414868295,"senderName":"erights","senderId":"@erights:matrix.org","id":"$cRvG5vIK9bSFaACAakITXivvcwDLX7P59f4RzkbZrvA"},
{"content":{"body":"okay, thanks for the anecdotes","msgtype":"m.text"},"ts":1635414955527,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5bhwoTwzhT4ZL66S_ueKHlg0xtoYJq3v--VmjO-3V2o"},
{"content":{"body":"I have extremely strong reservations about making this be per-realm just for agoric's use case.","msgtype":"m.text"},"ts":1635415018885,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"},
{"content":{"body":"> <@bakkot:matrix.org> I have extremely strong reservations about making this be per-realm just for agoric's use case.\n\nThis is not just for agoric's use case, this is for any cross realm membranes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have extremely strong reservations about making this be per-realm just for agoric&#39;s use case.</blockquote></mx-reply>This is not just for agoric's use case, this is for any cross realm membranes","m.relates_to":{"m.in_reply_to":{"event_id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"}},"msgtype":"m.text"},"ts":1635415048768,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$oSBKQpSbNq1dTTtrYRukFqWhvkyqYx7pEEji_t9Y0Ds"},
{"content":{"body":"shu: the original need for boxes came up from framework authors, the ability to reference functions (handlers) in R&T seems essential if they want to be able to use R&T instead of objects","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: the original need for boxes came up from framework authors, the ability to reference functions (handlers) in R&amp;T seems essential if they want to be able to use R&amp;T instead of objects","msgtype":"m.text"},"ts":1635415063721,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$HF8MXQ8I4FV7SfkIXp_fLv5HACobx7NCept1z9ztziU"},
{"content":{"body":"same with dom elements","msgtype":"m.text"},"ts":1635415071476,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$0MR5ud_9g05i4Uf7pRoyLpjoJ8ow11bfpM5la8OnOFY"},
{"content":{"body":"> <@bakkot:matrix.org> I have extremely strong reservations about making this be per-realm just for agoric's use case.\n\nit's ses use cases if i understand correctly...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have extremely strong reservations about making this be per-realm just for agoric&#39;s use case.</blockquote></mx-reply>it's ses use cases if i understand correctly...","m.relates_to":{"m.in_reply_to":{"event_id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"}},"msgtype":"m.text"},"ts":1635415073048,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ccS8ZNgmoOT6dSPak3rBI6q9Hl1U3Ks3PDFCRgHEd10"},
{"content":{"body":"ok, same comment but with \"just for existing cross realm membranes\"","msgtype":"m.text"},"ts":1635415073579,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DacB8rzwlGaw_-ycy04nwgqi1328LdD8r5wHdt9dJjk"},
{"content":{"body":"actually for agoric, it's not a problem if an ObjectPlaceholder can only be created explicitely","msgtype":"m.text"},"ts":1635415085877,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$4A-hX6w-Mr6IlZ6bI4K3Z5llO8lvRK9X2mhbVDE69Xc"},
{"content":{"body":"so we will end 35 minutes early in the morning?","msgtype":"m.text"},"ts":1635415090756,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$IAn1JjYpLLAmSOQvZQhN1s07b-0Vt0xl-Och_iA-VUM"},
{"content":{"body":"+1 to bakkot ","format":"org.matrix.custom.html","formatted_body":"+1 to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>","msgtype":"m.text"},"ts":1635415097379,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CW5VskIrZoZuFTOmVYAwTSefimmG9ihPfPIVkUkxdpg"},
{"content":{"body":"and by \"framework authors\", is it react, or multiple frameworks?","msgtype":"m.text"},"ts":1635415119498,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PRlON_fsQyqbjZRClMDyjnsLOBuMdLzcqd1g4YDuAi4"},
{"content":{"body":"react and many react-like frameworks I guess ðŸ˜…","msgtype":"m.text"},"ts":1635415188479,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$jS04Benwvc5dnm4hdKlomfgV9Z6toxt7eSeCi7-hwXs"},
{"content":{"body":"to clarify my +1: i personally would give mid-weight to frameworks' need, especially if it extends beyond just one, and would give no weight to membrane enablement","msgtype":"m.text"},"ts":1635415234217,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_XZudGHiLBnXjMGiaOb0KNI_W-8LHxmAtvfzWFeSDTs"},
{"content":{"body":"\"we will add it because it exists elsewhere\" is such a terrible argument","msgtype":"m.text"},"ts":1635415239568,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$g000ozO3AtaNYAGD6VIrInsMSjtIud7BvsVY0pHOjRI"},
{"content":{"body":"yeah especially with regexes becauses everyone in the world has just copied Perl, which put everything anyone ever thought of into their regexes","msgtype":"m.text"},"ts":1635415267291,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$C7gkTFbjTLmOwZd_q8gw99djfd9LgEnFd35hG25WJzc"},
{"content":{"body":"> <@shuyuguo:matrix.org> to clarify my +1: i personally would give mid-weight to frameworks' need, especially if it extends beyond just one, and would give no weight to membrane enablement\n\nThis is not enablement, this is actually breaking security expectations of exiting deployments","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_XZudGHiLBnXjMGiaOb0KNI_W-8LHxmAtvfzWFeSDTs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>to clarify my +1: i personally would give mid-weight to frameworks&#39; need, especially if it extends beyond just one, and would give no weight to membrane enablement</blockquote></mx-reply>This is not enablement, this is actually breaking security expectations of exiting deployments","m.relates_to":{"m.in_reply_to":{"event_id":"$_XZudGHiLBnXjMGiaOb0KNI_W-8LHxmAtvfzWFeSDTs"}},"msgtype":"m.text"},"ts":1635415281581,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$DxQeFOa3tpfxiAiffKMo-U-SbgAIQQ6Lk82Z06CRgRE"},
{"content":{"body":"but side tables (again, with the symbol technical issues notwithstanding) also work for agoric, right?","msgtype":"m.text"},"ts":1635415328363,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ig6kQfPop-lgWO6H0TGmOOdIetRDUF-b-_AQy8R2QqA"},
{"content":{"body":"\"I'd have to remember this `(?=\\R?\\z)` pattern\" isn't much different than \"I'd have to remember the difference between \\z and \\Z\", except the former reads easier","format":"org.matrix.custom.html","formatted_body":"&quot;I'd have to remember this <code>(?=\\R?\\z)</code> pattern&quot; isn't much different than &quot;I'd have to remember the difference between \\z and \\Z&quot;, except the former reads easier","msgtype":"m.text"},"ts":1635415338518,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Lcrty6INYB_5283RZKOlVaXOMd2S4E3DrWQCOUVSeFE"},
{"content":{"body":"One way to avoid the footgun of storing object in tuples maybe, make it explicitly, not by \"box\", but by \"key\"? for example only special key could store object: #{a: 1, &onclick: ()=>{} }","msgtype":"m.text"},"ts":1635415344181,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$1F69L1738ZT_yoRMGfyA9aRlf0jl8FK0w6XIpWv3hQw"},
{"content":{"body":"For the JSX use case, my first thought was: so R&T should be compared by value, _but_ treat all box as the same, otherwise it's not likely to speedup vdom based frameworks because most people don't write \"useCallback\" for their callback then the JSX record will always !==, Then the framework has to do the old classic diff algorithm and gain nothing from adopting record and tuple. ","msgtype":"m.text"},"ts":1635415406397,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$9z3vby7mGNWQ6w_H6GE8LkeIK0S5I7hi6IjzY772T1c"},
{"content":{"body":"The main issue with symbol and side tables is being able to detect and target where the exit points are. It becomes an ergonomics issue of using them","msgtype":"m.text"},"ts":1635415418406,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qKg9yQtYTjRgMW-g9Xm4T5hVqyynOJq_OgTpgpvOTeo"},
{"content":{"body":"Jack Works: R&T is not likely to speed up vdom at all in any world","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: R&amp;T is not likely to speed up vdom at all in any world","msgtype":"m.text"},"ts":1635415430721,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1qqEAU_rcLzbXJSlo1OMWCmUCsqokcoEJHmyWSkJ3v8"},
{"content":{"body":"At the end of this session I've scheduled 5mins to discuss this clarification to the agenda deadline rule that Jordan talked about in this channel a week or so ago\n\n  https://github.com/tc39/agendas/commit/d2ef80976759f763eaf621b851479753e29b081c#diff-0b87e2fc7748588525a23909f36542c8244da7bf86fe1e93ee9715e549f7944b","msgtype":"m.text"},"ts":1635415442656,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$WxdG6ZafpeA3gbqV_AbbUTgJ_g6qAaeDV60H_XiMy5w"},
{"content":{"body":"> <@shuyuguo:matrix.org> Jack Works: R&T is not likely to speed up vdom at all in any world\n\nI know. Just my first thought when I see that use case. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1qqEAU_rcLzbXJSlo1OMWCmUCsqokcoEJHmyWSkJ3v8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br /><a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: R&amp;T is not likely to speed up vdom at all in any world</blockquote></mx-reply>I know. Just my first thought when I see that use case. ","m.relates_to":{"m.in_reply_to":{"event_id":"$1qqEAU_rcLzbXJSlo1OMWCmUCsqokcoEJHmyWSkJ3v8"}},"msgtype":"m.text"},"ts":1635415472109,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$eDZ7HMHfE1OMKtgB4tVQ2j7PM1do6zh2JkGyospPXx4"},
{"content":{"body":"that seems like the best possible fix!","msgtype":"m.text"},"ts":1635415590548,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q3T06OyDzCHajgylpzZoG46tZByZqR01mikY8Fks9a8"},
{"content":{"body":"And I have another question. Months ago, Record and Tuple decides to use Symbols as WeakMap keys as the solution of storing objects. Why we have Box now? ","msgtype":"m.text"},"ts":1635415635635,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$uzoAaSPMNISM85K4IhHXzq4Bb241vOlmTyl80NP_UvM"},
{"content":{"body":"Because we found opposition against symbols as weakmap keys because of registered symbols (wich could never be collected)","msgtype":"m.text"},"ts":1635415687924,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$p6eVz4pfqoZLITKWL86v-AZqx_dp8kS-zrhtuPFV-74"},
{"content":{"body":"Is that really a problem? ","msgtype":"m.text"},"ts":1635415715991,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dyDF8RGW2ps88gghwt_S0FS_um-38Vm7ggrGkIyfmLk"},
{"content":{"body":"Set object on the global this can get the same result","msgtype":"m.text"},"ts":1635415735663,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$7-PJM7qmbUIJJ8-uVoFHUligchAi675PPcWnEMSk224"},
{"content":{"body":"2 main reasons:\n- Leaking issues with well-known and registered symbols\n- Box is an explicit marker of intent, where symbol can be just other data. You don't need knowledge about the structure to understand what it means","format":"org.matrix.custom.html","formatted_body":"<p>2 main reasons:</p>\n<ul>\n<li>Leaking issues with well-known and registered symbols</li>\n<li>Box is an explicit marker of intent, where symbol can be just other data. You don't need knowledge about the structure to understand what it means</li>\n</ul>\n","msgtype":"m.text"},"ts":1635415748261,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$CI5I0i02ttckUylHorQ0MCvdXNiTxS6b7d0dfAstndE"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Because we found opposition against symbols as weakmap keys because of registered symbols (wich could never be collected)\n\nwhat is registed symbols?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$p6eVz4pfqoZLITKWL86v-AZqx_dp8kS-zrhtuPFV-74?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Because we found opposition against symbols as weakmap keys because of registered symbols (wich could never be collected)</blockquote></mx-reply>what is registed symbols?","m.relates_to":{"m.in_reply_to":{"event_id":"$p6eVz4pfqoZLITKWL86v-AZqx_dp8kS-zrhtuPFV-74"}},"msgtype":"m.text"},"ts":1635415753393,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$VSZxitb4XdMxtNiXN11VoWL2sImaM2w2pvUzg4n_sZY"},
{"content":{"body":"> <@jackworks:matrix.org> Set object on the global this can get the same result\n\nNo, because the global can still be collected (when it's realm is collected)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7-PJM7qmbUIJJ8-uVoFHUligchAi675PPcWnEMSk224?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>Set object on the global this can get the same result</blockquote></mx-reply>No, because the global can still be collected (when it's realm is collected)","m.relates_to":{"m.in_reply_to":{"event_id":"$7-PJM7qmbUIJJ8-uVoFHUligchAi675PPcWnEMSk224"}},"msgtype":"m.text"},"ts":1635415753650,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QsM0-sHZuZG9dEORU90CReFm7YKvw1NPPYMQESgn4BU"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> No, because the global can still be collected (when it's realm is collected)\n\nBut WeakMap itself can be collected too","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QsM0-sHZuZG9dEORU90CReFm7YKvw1NPPYMQESgn4BU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br />No, because the global can still be collected (when it's realm is collected)</blockquote></mx-reply>But WeakMap itself can be collected too","m.relates_to":{"m.in_reply_to":{"event_id":"$QsM0-sHZuZG9dEORU90CReFm7YKvw1NPPYMQESgn4BU"}},"msgtype":"m.text"},"ts":1635415774590,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$m0UMGzCBVN4TwJGrZJ5jKLDfcgOqyAjVUvrBIXZ60gY"},
{"content":{"body":"> <@haxjs:matrix.org> what is registed symbols?\n\n`Symbol.for()`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VSZxitb4XdMxtNiXN11VoWL2sImaM2w2pvUzg4n_sZY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>what is registed symbols?</blockquote></mx-reply><code>Symbol.for()</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$VSZxitb4XdMxtNiXN11VoWL2sImaM2w2pvUzg4n_sZY"}},"msgtype":"m.text"},"ts":1635415776821,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$H7ADT4CjP4haqeCidMZ3gtInVFKUIOg0-JECcSWC7mg"},
{"content":{"body":"> <@jackworks:matrix.org> But WeakMap itself can be collected too\n\n(I made the same point in the past, it wasn't me who didn't want symbols as weakmap keys ðŸ˜…)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$m0UMGzCBVN4TwJGrZJ5jKLDfcgOqyAjVUvrBIXZ60gY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>But WeakMap itself can be collected too</blockquote></mx-reply>(I made the same point in the past, it wasn't me who didn't want symbols as weakmap keys ðŸ˜…)","m.relates_to":{"m.in_reply_to":{"event_id":"$m0UMGzCBVN4TwJGrZJ5jKLDfcgOqyAjVUvrBIXZ60gY"}},"msgtype":"m.text"},"ts":1635415827225,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$nOMbXhr011yh8d_5tecpqe72CoRwIHCafWV5HcgoL6A"},
{"content":{"body":"Sorry I don't understand leaking issues, is there any link to explain that?","msgtype":"m.text"},"ts":1635415838213,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_rS4vqjhSw00pHYC1q8ojtHiekLx7-x5c9LAKT4_oBQ"},
{"content":{"body":"Oh so is that means the Symbols as WeakMap key proposal is dead? ","msgtype":"m.text"},"ts":1635415874250,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$JgNwLwv9Z1tgwiY0djlOHpUo-Kx4VjuLnoCPxuZY9w8"},
{"content":{"body":"https://github.com/tc39/ecma262/issues/1194","msgtype":"m.text"},"ts":1635415887117,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$-ivr5rAFoc4BwhagcX68NIoXh5d6M3PruplS248WaiY"},
{"content":{"body":"so why not throw type error if weakmap meet a registed symbol?","msgtype":"m.text"},"ts":1635415941845,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_TAA9GtibH81WJQNEVhPrt25-2m9KJreo8VAXtJbhjo"},
{"content":{"body":"If Box / ObjectPlaceholder exists, there is no need for symbols as weakmap keys, and the same semantics can be accomplished by creating a box of an empty meaningless object","msgtype":"m.text"},"ts":1635415951122,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Wq9qdkHztyykXLcXaYBJ8_BQ4jf8cz79_71aZssLdgs"},
{"content":{"body":" * so why not throw type error if weakmap meet a registed symbol?","m.new_content":{"body":"so why not throw type error if weakmap meet a registed symbol?","msgtype":"m.text"},"m.relates_to":{"event_id":"$_TAA9GtibH81WJQNEVhPrt25-2m9KJreo8VAXtJbhjo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635415952578,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$2XOq08P1D9ymHyt_5Exe9mD2K7dp-gwHfF77zsAGGYU"},
{"content":{"body":"> <@haxjs:matrix.org> so why not throw type error if weakmap meet a registed symbol?\n\nthere is opposition to that because it'd require users to understand the difference between registered and unique symbols","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_TAA9GtibH81WJQNEVhPrt25-2m9KJreo8VAXtJbhjo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>so why not throw type error if weakmap meet a registed symbol?</blockquote></mx-reply>there is opposition to that because it'd require users to understand the difference between registered and unique symbols","m.relates_to":{"m.in_reply_to":{"event_id":"$_TAA9GtibH81WJQNEVhPrt25-2m9KJreo8VAXtJbhjo"}},"msgtype":"m.text"},"ts":1635416034829,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NihlU03SY5JUtcPvuSjJJC8WfmrJB0wRBdOGb1h7Ops"},
{"content":{"body":"> <@mhofman:matrix.org> If Box / ObjectPlaceholder exists, there is no need for symbols as weakmap keys, and the same semantics can be accomplished by creating a box of an empty meaningless object\n\nExactly, they are two alternatives that unlock the same unsecases","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Wq9qdkHztyykXLcXaYBJ8_BQ4jf8cz79_71aZssLdgs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>If Box / ObjectPlaceholder exists, there is no need for symbols as weakmap keys, and the same semantics can be accomplished by creating a box of an empty meaningless object</blockquote></mx-reply>Exactly, they are two alternatives that unlock the same unsecases","m.relates_to":{"m.in_reply_to":{"event_id":"$Wq9qdkHztyykXLcXaYBJ8_BQ4jf8cz79_71aZssLdgs"}},"msgtype":"m.text"},"ts":1635416041088,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Pv-2p2IFTqgEgCTAdZJrLPDwvIhX7ddBZz6FzUDoUFI"},
{"content":{"body":"MM gave a great summary","msgtype":"m.text"},"ts":1635416049444,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$MA4DRNC7r2vtT4IellYnXvDpW5S7d7x4l50jqJoDtIY"},
{"content":{"body":"So R&T is the only use case for that? ","msgtype":"m.text"},"ts":1635416053029,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$yIAxy7IV3pXZdog0EoXTtztFQ8wya00H79_GyzyVz_g"},
{"content":{"body":"> <@mhofman:matrix.org> there is opposition to that because it'd require users to understand the difference between registered and unique symbols\n\ngood point, though I don't think it's a big problem, if symbol as weakmap is mainly used to implement box as low-level mechanism.  ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NihlU03SY5JUtcPvuSjJJC8WfmrJB0wRBdOGb1h7Ops?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>there is opposition to that because it'd require users to understand the difference between registered and unique symbols</blockquote></mx-reply>good point, though I don't think it's a big problem, if symbol as weakmap is mainly used to implement box as low-level mechanism.","m.relates_to":{"m.in_reply_to":{"event_id":"$NihlU03SY5JUtcPvuSjJJC8WfmrJB0wRBdOGb1h7Ops"}},"msgtype":"m.text"},"ts":1635416128342,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$CT9XxREmHueymxRA19fl1IvIUk7y2Iv0Jqvg--vzEgs"},
{"content":{"body":"> <@jackworks:matrix.org> So R&T is the only use case for that?\n\ndefinitely not, `ShadowRealm` based membranes are also a primitive in weakmap use case, but as I mention just above, you can accomplish the same with Box","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yIAxy7IV3pXZdog0EoXTtztFQ8wya00H79_GyzyVz_g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>So R&amp;T is the only use case for that? </blockquote></mx-reply>definitely not, <code>ShadowRealm</code> based membranes are also a primitive in weakmap use case, but as I mention just above, you can accomplish the same with Box","m.relates_to":{"m.in_reply_to":{"event_id":"$yIAxy7IV3pXZdog0EoXTtztFQ8wya00H79_GyzyVz_g"}},"msgtype":"m.text"},"ts":1635416148116,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$76VQDIA7r0-56dfLVPYmu4PHWZvRlhI7_BVFMlLZwFM"},
{"content":{"body":"i don't hate this proposal, but also this seems like one of those things which ~zero people are going to use until after they get the CVE","msgtype":"m.text"},"ts":1635416244858,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lIMXoB9-qaSUGxGnGQpAxA442lLAPoLIHFlohclOsco"},
{"content":{"body":"LOL","msgtype":"m.text"},"ts":1635416301781,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$TIxkgi_KH4ds5yNHV_BtiyPUhr22sh-c4LZLds6RGbM"},
{"content":{"body":"regexes are already too complicated for most people to figure out if they're going to have catastrophic backtracking and this proposal proposes to solve that by making them more complicated","msgtype":"m.text"},"ts":1635416311484,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mFqbOXdJsqMSQCpbAQygm1cvK21maaJGsnXHQyy1ykc"},
{"content":{"body":"so tbh I feel like the \"so then they had to rewrite without a regex\" is not so bad","msgtype":"m.text"},"ts":1635416330629,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HxAJsLNxX_lBq6S4wmle85hrcPKw2ijkO5AxR7xmcs4"},
{"content":{"body":"Alt: research how to teach regexp systematically","msgtype":"m.text"},"ts":1635416354439,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rp60UFkNpYO1HDLb7Q6x9pXT_eAYc4a4IBzcXEWQ1bw"},
{"content":{"body":"> <@bakkot:matrix.org> i don't hate this proposal, but also this seems like one of those things which ~zero people are going to use until after they get the CVE\n\neven they get CVE, I guess they will not use feature but just write a special function to trim end newlines...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lIMXoB9-qaSUGxGnGQpAxA442lLAPoLIHFlohclOsco?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>i don&#39;t hate this proposal, but also this seems like one of those things which ~zero people are going to use until after they get the CVE</blockquote></mx-reply>even they get CVE, I guess they will not use feature but just write a special function to trim end newlines...","m.relates_to":{"m.in_reply_to":{"event_id":"$lIMXoB9-qaSUGxGnGQpAxA442lLAPoLIHFlohclOsco"}},"msgtype":"m.text"},"ts":1635416360518,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$2B6Oasize81EpW0JpUiCX7t7DGO1DLJRPxQOqxu0hXU"},
{"content":{"body":"For Waldemar's question: It's impl defined? If it sees `\\n++$`, and that didn't match, the impl can advance 100k chars, then restart trying","format":"org.matrix.custom.html","formatted_body":"For Waldemar's question: It's impl defined? If it sees <code>\\n++$</code>, and that didn't match, the impl can advance 100k chars, then restart trying","msgtype":"m.text"},"ts":1635416490488,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$GpuvlrtNsZmOWlvm431tWdYPNvReSI7NHLKJdWBdAkU"},
{"content":{"body":"I hate how all these regexp proposals are phrased in terms of a feature and not a problem we're trying to solve","msgtype":"m.text"},"ts":1635416833619,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Fiq_Bh7KdngOuZApoP_KQp5B-WngXPFHAxZJs56ED6E"},
{"content":{"body":"I'm fine for stage 1 for looking into catastrophic backtracking issues, but not okay with committing to this solution, which is how I know it will be mistaken","msgtype":"m.text"},"ts":1635416873112,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cmYdxUR3EUuLsZpwgHyXpblsvSlVPfahEeCtfqvejFk"},
{"content":{"body":"The atomic operators appears to be a new \"middle\" counting type.","msgtype":"m.text"},"ts":1635417006106,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$uj9YSiq9f8rqyEYdIZF5h2IBpqjrc8jB7azjoJfTkHw"},
{"content":{"body":"A greedy non-backtracking type.","msgtype":"m.text"},"ts":1635417022766,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$VSAeYUBm1bnaoBYcNHeC_s-T1BjiYROum4Up5OoOoEM"},
{"content":{"body":"The description of backtracking was too terse. Does \"(?>...) will not backtrack in the event of a failed match\" mean that it turns off backtracking internally only when going into or out of the group?","msgtype":"m.text"},"ts":1635417052070,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$YxNXd6z16Izv678UemkzzMRHy_mXe986Uy9sctv1SCc"},
{"content":{"body":"When does backtracking reset for ++?","msgtype":"m.text"},"ts":1635417061768,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$VZcwqp_bHLwDkJVnOnBmRPGRQoqTMmRR1UW9zP6RaYE"},
{"content":{"body":"For the example /[\\r\\n]+$/, using the non-greedy quantifier (/[\\r\\n]+?$/) also solves the O(N^2) case.","format":"org.matrix.custom.html","formatted_body":"For the example /[\\r\\n]+$/, using the non-greedy quantifier (/[\\r\\n]+?$/) also solves the O(N^2) case.","msgtype":"m.text"},"ts":1635417098376,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$idRhYKeucWwTDs2TTt5FgWaYb5H8a2lbXj7JB8ffQaI"},
{"content":{"body":"A fair amount of the regexp problem space is a known quantity given the broad adoption across multiple languages and runtimes. The biggest issue with catastrophic backtracking is that its not an easy to solve problem. Perl has a significant amount of additional backtracking control verbs over what I've proposed. ","msgtype":"m.text"},"ts":1635417106225,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$m9PiDJXxwuLUChjnajwnNm_BD8wWmyPrcbCp1MaM9SA"},
{"content":{"body":"What is going on in the 100,000 newlines example? Both backtracking and nonbacktracking should be O(nÂ²) if the description is correct. However, such a huge difference in running time means something else is going on.","msgtype":"m.text"},"ts":1635417164657,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$xstaUPwMUbIjOia-qUZxKjAuCoLbK0Fn5akY2rVGZVs"},
{"content":{"body":"Most of which I would consider to be \"far to complex\" to add to the language.","msgtype":"m.text"},"ts":1635417174146,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7UdqaDaEyGrCmjtbqPFP4Og3OzeIVNI5kokHkKLwuGs"},
{"content":{"body":"My concern is that the developer doesn't understand the full implications of the backtracking control.  It is an implementation detail (currently shared among most implementations), that they likely get wrong.","msgtype":"m.text"},"ts":1635417205998,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$_Ekd818C4e1qrVE0DHXXnDL-3fOkm7nwEUfeYaNwu0U"},
{"content":{"body":"Typo: Does \"(?>...) will not backtrack in the event of a failed match\" mean that it turns off backtracking internally or only when going into or out of the group?","msgtype":"m.text"},"ts":1635417234767,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$v3Onxf6At7plnZAMor70hlUB57Suq3SKd4dK1q_A-sE"},
{"content":{"body":"It would have to be just for that group.","msgtype":"m.text"},"ts":1635417279538,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$-rHftCeSTfYZN9o9guyVsOCsNxa1EgZYRnBn9dRyzXs"},
{"content":{"body":"What happens if you have something like /a*(?>...)/? Does the ?> lock in the first time it fails and not try some other match with a different number of a's?","msgtype":"m.text"},"ts":1635417341767,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$B_BVZM5p9GtztYXjwz71PqXK7YtnhzyMgXPe0UY6yeE"},
{"content":{"body":"how would we even go about specifying the backtracking control if we don't specify the regexp evaluation mechanics?","msgtype":"m.text"},"ts":1635417357914,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mFVoyaT_uoL_xZevBHvLbWWznJP4nJMiVwCY0ziFMVI"},
{"content":{"body":"We do specify RegExp evaluation semantics","msgtype":"m.text"},"ts":1635417432224,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2xRvGqGYC5kivMwqImrpcE7HYXm3lumS3yrteWLB4FM"},
{"content":{"body":"rbuckton: and those semantics necessitate catastrophic backtracking today?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: and those semantics necessitate catastrophic backtracking today?","msgtype":"m.text"},"ts":1635417454594,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vOp9_WfOmtn0jorW9ZZyRnkZkMLWn8xXpMWZ-rZgmXU"},
{"content":{"body":"Quantifiers are specified here: https://tc39.es/ecma262/#sec-runtime-semantics-repeatmatcher-abstract-operation","msgtype":"m.text"},"ts":1635417456206,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$_al5uU9v6Bzf8hJWmLX_0P0E9tSBTMzRKA1FK36mU-A"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1635417456750,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hbXau-xl1W366oylTsu30vwwTSwRg4kBQkPB8ti21Q4"},
{"content":{"body":"The trailing ? is really {0.1} and therefore it should backtrack, but not the (?>...) itself.  I think this requires saving the state of the (?>...) for the trailing ? backtracking.","msgtype":"m.text"},"ts":1635417485425,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$tR8RdXNL57wbDUHgR37N1WiYLJ5BZjAL7XJe-N8Ektw"},
{"content":{"body":"we specify as-if semantics, which does not correspond to what engines actually do","msgtype":"m.text"},"ts":1635417487386,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U6r27-io4FDjXT3Ur7NSBvtqaHd9gi1XwrnxvxFtvNo"},
{"content":{"body":"exactly, so I again ask how we would specify this feature","msgtype":"m.text"},"ts":1635417519688,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XqAVxrqT_6rpBbpkgRCobuePXDTepB0hJmHuJfwq5tk"},
{"content":{"body":"we do not currently put _any_ execution time constraints on regex performance","format":"org.matrix.custom.html","formatted_body":"we do not currently put <em>any</em> execution time constraints on regex performance","msgtype":"m.text"},"ts":1635417535793,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$whFae7VlaN0BOfQAC4mnApmL9AeRxyrzpvq3K94NutI"},
{"content":{"body":"exactly, so I again ask how we would specify this feature","msgtype":"m.text"},"ts":1635417573546,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PdTq3b2a3CRXf0px6qcHK_GptSj3fMTz9cr3cV9Bwdw"},
{"content":{"body":"> <@msaboff:matrix.org> For the example /[\\r\\n]+$/, using the non-greedy quantifier (/[\\r\\n]+?$/) also solves the O(N^2) case.\n\nIt's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$idRhYKeucWwTDs2TTt5FgWaYb5H8a2lbXj7JB8ffQaI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br>For the example /[\\r\\n]+$/, using the non-greedy quantifier (/[\\r\\n]+?$/) also solves the O(N^2) case.</blockquote></mx-reply>It's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.","m.relates_to":{"m.in_reply_to":{"event_id":"$idRhYKeucWwTDs2TTt5FgWaYb5H8a2lbXj7JB8ffQaI"}},"msgtype":"m.text"},"ts":1635417579259,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$8MPD7fybHBS0Pg8f6Ffi0GOo0SbzklEavK-cWN6tpNY"},
{"content":{"body":"Michael Ficarra: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","msgtype":"m.text"},"ts":1635417624580,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$p-YcZabuA1RJAOX5PGDJrnWzklAqtH9y_8WIrtnZa_o"},
{"content":{"body":"> <@waldemarh:matrix.org> It's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.\n\nThe impl can advance beyond the non-match","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8MPD7fybHBS0Pg8f6Ffi0GOo0SbzklEavK-cWN6tpNY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>It's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.</blockquote></mx-reply>The impl can advance beyond the non-match","m.relates_to":{"m.in_reply_to":{"event_id":"$8MPD7fybHBS0Pg8f6Ffi0GOo0SbzklEavK-cWN6tpNY"}},"msgtype":"m.text"},"ts":1635417649844,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QHm1yDthQkXI9clQRsnspjzNyieUQWAcPrpfBZOwJxQ"},
{"content":{"body":" * Michael Ficarra: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","m.new_content":{"body":"Michael Ficarra: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Specifying Possessive would likely be the similar to specifying Greedy in RepeatMatcher.","msgtype":"m.text"},"m.relates_to":{"event_id":"$p-YcZabuA1RJAOX5PGDJrnWzklAqtH9y_8WIrtnZa_o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635417656396,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WdvJygPmLbXUblYuIIAJYap44yDXn35_4Fi5n5It7hI"},
{"content":{"body":"Huh?","msgtype":"m.text"},"ts":1635417667083,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$kETfFA8HfzsSHloRLmmOzX_9b0IcdUlqlJf0rbdzTwU"},
{"content":{"body":"It doesn't have to check index 1, 2, 3, 4, etc","msgtype":"m.text"},"ts":1635417674283,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$sVoAm0Jsg624DYo1vJ_SKXkaNbperG0qkt_hNdr17rA"},
{"content":{"body":"> <@waldemarh:matrix.org> It's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.\n\nIn the non-greedy case, I don't  think you back track each character.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8MPD7fybHBS0Pg8f6Ffi0GOo0SbzklEavK-cWN6tpNY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>It's a failed match, so greedy or nongreedy shouldn't make any difference â€” they both must check all possibilities, they just do it in the opposite order. Of course that assumes no hidden implementation optimizations that somehow apply to one and not the other.</blockquote></mx-reply>In the non-greedy case, I don't  think you back track each character.","m.relates_to":{"m.in_reply_to":{"event_id":"$8MPD7fybHBS0Pg8f6Ffi0GOo0SbzklEavK-cWN6tpNY"}},"msgtype":"m.text"},"ts":1635417685538,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$nu34aYGEFnHlLXfEIfoF1rxFJA6XIi7sUoPLNS5sqto"},
{"content":{"body":"In order to get a non-match, it must check all possible lengths of [/r/n]+. ","msgtype":"m.text"},"ts":1635417690092,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$NwteDiepwaE7bi9W3DlBOyqWLV2UBIWiiuGyEMTG6JU"},
{"content":{"body":"It tried 100k chars, didn't match, advance 100k chars","msgtype":"m.text"},"ts":1635417694511,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$qFFBOzqGKG9sf2fuBLrfJF2PLZE2qVjk1-86W6V2wM0"},
{"content":{"body":"That's what I was asking Ron about.","msgtype":"m.text"},"ts":1635417717768,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$1XSUm6TgUyru-RQWFuOaZJnsa5DDShc_YKGOR4d2I7Q"},
{"content":{"body":"The answer I got at the meeting was that it would retry for each starting index.","msgtype":"m.text"},"ts":1635417742245,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$fg4WGDjRQxpd3IzL-ew87IFkzx5HkdoqhSRquszaEdQ"},
{"content":{"body":"If that's not what it's doing, then what it is doing needs to be described better.","msgtype":"m.text"},"ts":1635417771132,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$fenedpFep2GZIVJTO_aAd2d8pjECDufA_9eTKKZ75k4"},
{"content":{"body":"I will expand on the proposal for a future meeting, with more details on matching behavior (and possibly a prospective spec) to clarify matching behavior.","msgtype":"m.text"},"ts":1635417835352,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HTEjmw-RqWrVlpJRtcappPbha1VBR-hM8alXOHkrZZM"},
{"content":{"body":"The other alternative is that there is some secret optimization that triggers based on regular expression minutiae, and the ++ version just happens to trigger the secret optimization even though it should still be O(nÂ²). If that's the case, then an implementation could choose to apply the same optimization to the original version too.","msgtype":"m.text"},"ts":1635417907376,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$ePqbaKwqwxHN21yVeLUXJRa5c5qKb4LScP9uDM5Ra_U"},
{"content":{"body":"fwiw V8 implemented an explicit opt in \"linear mode\" via a flag","msgtype":"m.text"},"ts":1635417932939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PEb7LOdG95momQ4wUj2gJRSyUtiux_s2JqYJGYS2BLM"},
{"content":{"body":"but experiment didn't pan out","msgtype":"m.text"},"ts":1635417939385,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JsNYw90fxmFEv2FLiXgrpGPXJUjYfNU6ysvg2t5E_eQ"},
{"content":{"body":"among other things, the technical challenges to performantly switch between modes were many and difficult to solve","msgtype":"m.text"},"ts":1635417955802,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q4rWJP8HVQV4G4nzcP6S_g9h1K-SMI7QXJBJBfmMwbc"},
{"content":{"body":" * fwiw V8 implemented an explicit opt in \"linear mode\" via a flag","m.new_content":{"body":"fwiw V8 implemented an explicit opt in \"linear mode\" via a flag","msgtype":"m.text"},"m.relates_to":{"event_id":"$PEb7LOdG95momQ4wUj2gJRSyUtiux_s2JqYJGYS2BLM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635417971230,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XJNcEaBvSBBFytyteWzKiViCJ-4_Nb-VWJJv5GixXl8"},
{"content":{"body":"oh interesting, I didn't even consider the possible implementation difficulties for this feature","msgtype":"m.text"},"ts":1635417994050,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$OWZnv_ajxinwzARc9k6r0tEeD8WMUaiI9Pw8A2rcZNo"},
{"content":{"body":"(but i also don't know any more details, not my area of expertise)","msgtype":"m.text"},"ts":1635418005908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QolZ5sdp0ICRM8l3Fag53LEvPw9wJuYrLrKJTMvkbRI"},
{"content":{"body":"does v8 currently have someone working specifically on the regex engine you could float this by?","msgtype":"m.text"},"ts":1635418032700,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P87ChPqXfQfqQ8XabRkvWSp_KkCnpOJ-oBkP-xJ5G9M"},
{"content":{"body":"irregexp is in maintenance mode, but we have someone who knows enough to add new features","msgtype":"m.text"},"ts":1635418051152,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JpwOEEN2NAzStKDSJpg6iV8o3Lwzkwo7A59WBJQZaa8"},
{"content":{"body":"i will certainly float this by them","msgtype":"m.text"},"ts":1635418054328,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1WhfO1IdCErCeiS1CF79zfJSAjtrysJ71qC1wDY-eKU"},
{"content":{"body":"someone is... playing music?","msgtype":"m.text"},"ts":1635418119609,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mWbrbNKuFSkT6DEiVIOuOqPDQyrSudCnUjUe-1XXqaE"},
{"content":{"body":"is that just me hearing this","msgtype":"m.text"},"ts":1635418122753,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3xY0qgjI0WjxaYU0yMB3GSRE3j0Yl37DURSIyrUBWVo"},
{"content":{"body":"Justin Ridgewell: ^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: ^","msgtype":"m.text"},"ts":1635418130921,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Hg314keM-1VJkJuGnh8wtZecJj0LTgLxXgayXgJ35qQ"},
{"content":{"body":"_funky_ music","format":"org.matrix.custom.html","formatted_body":"<em>funky</em> music","msgtype":"m.text"},"ts":1635418135683,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$vF5vpuFLLgSjdd_TdAkn1Xu3tB9u7VqQaIOSN9vuS30"},
{"content":{"body":"I'm muted?","msgtype":"m.text"},"ts":1635418146220,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$w8MF3MzntmirNa8NmCuqqJXFSX-QKP6_DaIcWKEWuwQ"},
{"content":{"body":"> <@msaboff:matrix.org> In the non-greedy case, I don't  think you back track each character.\n\nI checked in JSC and /[\\r\\n]+$/ takes 11 seconds and /[\\r\\n]+?$/ takes 7 seconds.  Looks like /[\\r\\n]+$/ is O(2n^2) and /[\\r\\n]+?$/ is O(n^2).  So still n^2.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nu34aYGEFnHlLXfEIfoF1rxFJA6XIi7sUoPLNS5sqto?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br>In the non-greedy case, I don't  think you back track each character.</blockquote></mx-reply>I checked in JSC and /[\\r\\n]+$/ takes 11 seconds and /[\\r\\n]+?$/ takes 7 seconds.  Looks like /[\\r\\n]+$/ is O(2n^2) and /[\\r\\n]+?$/ is O(n^2).  So still n^2.","m.relates_to":{"m.in_reply_to":{"event_id":"$nu34aYGEFnHlLXfEIfoF1rxFJA6XIi7sUoPLNS5sqto"}},"msgtype":"m.text"},"ts":1635418152920,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$nJs4OF3C7G0xJinptXaSHLLofHcXI8Xchs7utjaoAPc"},
{"content":{"body":"> <@jridgewell:matrix.org> I'm muted?\n\nnow you are","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$w8MF3MzntmirNa8NmCuqqJXFSX-QKP6_DaIcWKEWuwQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I&#39;m muted?</blockquote></mx-reply>now you are","m.relates_to":{"m.in_reply_to":{"event_id":"$w8MF3MzntmirNa8NmCuqqJXFSX-QKP6_DaIcWKEWuwQ"}},"msgtype":"m.text"},"ts":1635418163381,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4SjtpzSytof9qOQ8Fr_BzLyXEQRv83yEr17wyElUbvQ"},
{"content":{"body":"I'm assuming a chair muted you","msgtype":"m.text"},"ts":1635418176644,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HZMFvsWl9Pdq-hCss9_mbb40t7N5NlcURdcwTya6mwM"},
{"content":{"body":"Oh, but I've got no music.","msgtype":"m.text"},"ts":1635418183526,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$0i1rvpJ8wBgqiCn10_duXClqkFCd8J_yTQObjjLWu4Q"},
{"content":{"body":"now someone is doing dishes","msgtype":"m.text"},"ts":1635418209733,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y8buUGiqbVCJkzbNTQBMTVlrO3tp9UrqFjebbR_qm-s"},
{"content":{"body":"strange, maybe Jitsi was misattributing the noise to you","msgtype":"m.text"},"ts":1635418209742,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0ulpdzT-BlK8jknKUs_Qg3uZLaj2UhYREJdw2Zp1PwA"},
{"content":{"body":"is someone cooking now","msgtype":"m.text"},"ts":1635418217304,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nBXeqXhBiWS1DHLZQS9erLfsFsYXk6ePgnTAVnT-ofs"},
{"content":{"body":"Breakfast?","msgtype":"m.text"},"ts":1635418227322,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$h6vBGX1OPfrjj484RI3bjv2aAZk2WMwGKbqInCk0dfg"},
{"content":{"body":"sounds like dishwasher","msgtype":"m.text"},"ts":1635418230051,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bVJWfoH0_OKxUhVPSb6UkRm1-a25ANIi-h4BFbR3UYs"},
{"content":{"body":"loading dishwasher rather","msgtype":"m.text"},"ts":1635418236761,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YAuUIgMJfBgX1xy8yMQ9SZipf0YG_QBAnphwG1T85pg"},
{"content":{"body":"it was sarahghp muted you Sarah ðŸ˜€ ","format":"org.matrix.custom.html","formatted_body":"it was <a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a> muted you Sarah ðŸ˜€","msgtype":"m.text"},"ts":1635418268134,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$JjhtNRcAgt0MnQYvrcQMsZ2FPKYUk_qaLjwFrB7-H2c"},
{"content":{"body":"The kitchen is closed!","msgtype":"m.text"},"ts":1635418282986,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$Ihi5W11hRAxYN1maVxq0y-qBKwWx4X5OgVgwbdVpSzc"},
{"content":{"body":"no more dishes for you ðŸ˜› ","msgtype":"m.text"},"ts":1635418292811,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$pmiwAzo5o6Kvg2RWlwf2SgyX2wxwiGoJxYRyvNMqU6w"},
{"content":{"body":" * no more dishes for you ðŸ˜› ","m.new_content":{"body":"no more dishes for you ðŸ˜› ","msgtype":"m.text"},"m.relates_to":{"event_id":"$pmiwAzo5o6Kvg2RWlwf2SgyX2wxwiGoJxYRyvNMqU6w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635418300138,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$NYm_z0c-GDXOjugCT7-qI37IE7pyjfX2nEA33pArO_w"},
{"content":{"body":"I'm so sorry. I never explicitly unmuted, so I dunno. It was unloading.","msgtype":"m.text"},"ts":1635418425482,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$OGgI4RDoJ8vLv4tFPfK36gLZ0IfcyhMMsH-UA0ir8p0"},
{"content":{"body":"BTW wasm CSP was promoted from phase 1 to phase 3 (implementation phase) two days ago https://github.com/WebAssembly/meetings/blob/main/main/2021/CG-10-26.md (notes are not published yet)","msgtype":"m.text"},"ts":1635419256911,"senderName":"Sergey Rubanov","senderId":"@chicoxyzzy:matrix.org","id":"$NZGmgsQXXk6UReebAEuQc1TamtLr1_Jmj2t1QzBqNhU"},
{"content":{"body":"did I miss \"Agenda deadline rule clarification\"?","msgtype":"m.text"},"ts":1635419397957,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$gGI7SkFMdFmRKVktycPtvddzp0lwQI75D1qhuj_2Z-k"},
{"content":{"body":"no, we haven't done that yet","msgtype":"m.text"},"ts":1635419409230,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8HWDXeUDmX0yiMIyv1ivAl4fF92tFA6rYzGxR1eH968"},
{"content":{"body":"Are there still plans to have a CoC Committee update?","msgtype":"m.text"},"ts":1635420172638,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Rdlc_uyXd9645LHytrnrj5wDjeEe8gDxrDbs0cWu4HI"},
{"content":{"body":"jschoi: most likely not, unfortunately.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: most likely not, unfortunately.","msgtype":"m.text"},"ts":1635420794840,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$ZS3lVm960HcVcOl11WUXiPcXGNqP18sooGDI9DrQ0wo"},
{"content":{"body":"> <@michaelficarra:matrix.org> did I miss \"Agenda deadline rule clarification\"?\n\nno - I'll do it first thing after the break","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gGI7SkFMdFmRKVktycPtvddzp0lwQI75D1qhuj_2Z-k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>did I miss &quot;Agenda deadline rule clarification&quot;?</blockquote></mx-reply>no - I'll do it first thing after the break","m.relates_to":{"m.in_reply_to":{"event_id":"$gGI7SkFMdFmRKVktycPtvddzp0lwQI75D1qhuj_2Z-k"}},"msgtype":"m.text"},"ts":1635421343412,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$sIpbeAgKdZmKBgNRIMtrvWyjhbZPvheS1gwP_BXrty0"},
{"content":{"body":"(or Jordan can!)","msgtype":"m.text"},"ts":1635421407487,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$9CFUpDnr7RUf-gHciNERG3to-oQMth_7zg7OJGbz6q0"},
{"content":{"body":"we are starting in 1 minute","msgtype":"m.text"},"ts":1635422381243,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$3DrY07X7q4Z9P18iXX9V8cvAFGP2bsYE5x1_6BBmv10"},
{"content":{"body":"Auto-merge bot for TC39 org members","msgtype":"m.text"},"ts":1635422554096,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$IbIVESnG9LAj81Dvm50UhMVAmdCDmbDsN-ck2GZU2i0"},
{"content":{"body":"Rob Palmer: i would like the opportunity to discuss evaluator attributes still, there's a reason it was a schedule constraint","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: i would like the opportunity to discuss evaluator attributes still, there's a reason it was a schedule constraint","msgtype":"m.text"},"ts":1635422607971,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-AenfmMnnjSO2Cq3sd4Wzqu5YjaRTO0XTA7eY1YMrnk"},
{"content":{"body":"you can just merge your own PRs","msgtype":"m.text"},"ts":1635422663327,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xpsTuKwHtweNB3G9LxbsoFg7NzJTGadKyim84KO89kc"},
{"content":{"body":"don't need a bot","msgtype":"m.text"},"ts":1635422665161,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ReH8h7aX1WyArUW_Kazg_hV7EWOYllObinw3XJIc3xM"},
{"content":{"body":"Ahh","msgtype":"m.text"},"ts":1635422680031,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$H7nAnC_P2JFUC0IFAoJVbN4134zi8-N-KgPprC6KUD4"},
{"content":{"body":"I feel like it's painfully obvious that a PR is sufficient for this requirement","msgtype":"m.text"},"ts":1635422818977,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KxcpZj9idrtR9K41xYfBVvsnH66k57LlUNkdityTvRI"},
{"content":{"body":"Slides for next presentation are at https://docs.google.com/presentation/d/1MShu-uA_gz1LDpmlckQ9Wgsb0ZLylYV0QWZBnsTAOGk/edit?usp=sharing.","msgtype":"m.text"},"ts":1635422856858,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$CUghGIWrH3WEhezWzXoIq4w7ZZ9N-2W6ABA7BTqeVNk"},
{"content":{"body":"the history of the agenda repo is just \"Update\"","msgtype":"m.text"},"ts":1635422884573,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Z0TtnrdHuaEBLd90oQOSmXxpRbpyS4Sc7lore2JTXwo"},
{"content":{"body":"Rob Palmer: I can try to give a brief CoC update as well, whenever","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: I can try to give a brief CoC update as well, whenever","msgtype":"m.text"},"ts":1635422922523,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uo4HO0PmIRCqwQkPBXLR9MgLQRzukBxoAypTgvQUUno"},
{"content":{"body":" * Rob Palmer: I can try to give a brief CoC update as well, whenever","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: I can try to give a brief CoC update as well, whenever","m.new_content":{"body":"Rob Palmer: I can try to give a brief CoC update as well, whenever","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: I can try to give a brief CoC update as well, whenever","msgtype":"m.text"},"m.relates_to":{"event_id":"$uo4HO0PmIRCqwQkPBXLR9MgLQRzukBxoAypTgvQUUno","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635422936405,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_8SS4apS1xijFrLIH0SUXjf1OY1AUiZ_kmbGy4TYclc"},
{"content":{"body":"> <@ljharb:matrix.org> Rob Palmer: i would like the opportunity to discuss evaluator attributes still, there's a reason it was a schedule constraint\n\nwe have 10 mins at the end - Guy suggested it too","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-AenfmMnnjSO2Cq3sd4Wzqu5YjaRTO0XTA7eY1YMrnk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: i would like the opportunity to discuss evaluator attributes still, there's a reason it was a schedule constraint</blockquote></mx-reply>we have 10 mins at the end - Guy suggested it too","m.relates_to":{"m.in_reply_to":{"event_id":"$-AenfmMnnjSO2Cq3sd4Wzqu5YjaRTO0XTA7eY1YMrnk"}},"msgtype":"m.text"},"ts":1635422969055,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$nwNkFtTHnopgP5cNDN4OoL79C2GBEpf2rmVlc_z5WJs"},
{"content":{"body":"I completely disagree with the point on the slide that `identity` could ever be clearer than `x => x`","format":"org.matrix.custom.html","formatted_body":"I completely disagree with the point on the slide that <code>identity</code> could ever be clearer than <code>x =&gt; x</code>","msgtype":"m.text"},"ts":1635423085486,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6Y3g7ueZz1sk5ZHwYqPP8wIyuFdXsjTBWRaIgMPT15U"},
{"content":{"body":"extremely strong +1","msgtype":"m.text"},"ts":1635423136129,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yf6AlDJqRdPmswoEvFTW6wfENVdJa5oMZwAmv9NkE9g"},
{"content":{"body":"i disagree more strongly with `constant(x)` over `() => x`","format":"org.matrix.custom.html","formatted_body":"i disagree more strongly with <code>constant(x)</code> over <code>() =&gt; x</code>","msgtype":"m.text"},"ts":1635423142361,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VKT6fKuVVf9bMo4bxCNKY6q8hTd_QzBh9-223JSPknM"},
{"content":{"body":"shu: it'd be `x => () => x`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: it'd be <code>x =&gt; () =&gt; x</code>","msgtype":"m.text"},"ts":1635423167980,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Y5jsFOV_869yFe4D1h_JxTXgyVaM_rMh4mQKOCHdjLk"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1635423180436,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E2ld7TlErBY-p-qLABQ4uLi5O6RWSKufTfuGCJvSlLg"},
{"content":{"body":"that wouldn't be what constant(x) returns","msgtype":"m.text"},"ts":1635423185000,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-I-PvfXq9XHeOmf5bve7lD13k3b_Ax2o0oYehDmu57s"},
{"content":{"body":"that's how you would define constant","msgtype":"m.text"},"ts":1635423187688,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qxdwTbeEOnUqb6twuLUVcrpBbwNovnqqQJUOH2H7pMY"},
{"content":{"body":"no I mean that'd be `constant`","format":"org.matrix.custom.html","formatted_body":"no I mean that'd be <code>constant</code>","msgtype":"m.text"},"ts":1635423193808,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Yleaa0PLNFjGIAviIBwMQSsNy1qsGN9VvmmrI0z4KTM"},
{"content":{"body":" * no I mean that'd be `constant`","format":"org.matrix.custom.html","formatted_body":" * no I mean that'd be <code>constant</code>","m.new_content":{"body":"no I mean that'd be `constant`","format":"org.matrix.custom.html","formatted_body":"no I mean that'd be <code>constant</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$Yleaa0PLNFjGIAviIBwMQSsNy1qsGN9VvmmrI0z4KTM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635423203827,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2q0ZZuEkZGugBDOIQfrlUmHHT0BOKX6GsjaXDCuuQvA"},
{"content":{"body":"right but instead of `constant(x)` you should write `() => x`, is the point","format":"org.matrix.custom.html","formatted_body":"right but instead of <code>constant(x)</code> you should write <code>() =&gt; x</code>, is the point","msgtype":"m.text"},"ts":1635423219085,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6TKM7lSlF92T0RNNkKfZzYqbqeSgOWHGQvH6ORnJZLg"},
{"content":{"body":"oh I see what you mean, you mean replacing that whole expression with the arrow","msgtype":"m.text"},"ts":1635423220732,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jHfa6WntnGuo_CixxGe8nkw6Vm2bgzgYgsDpt681ozU"},
{"content":{"body":" * oh I see what you mean, you mean replacing that whole expression with the arrow","m.new_content":{"body":"oh I see what you mean, you mean replacing that whole expression with the arrow","msgtype":"m.text"},"m.relates_to":{"event_id":"$jHfa6WntnGuo_CixxGe8nkw6Vm2bgzgYgsDpt681ozU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635423230504,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$t2c-IIyf6KjCH09BxFlEh7YGB9OMqmStODPtfFrjzNI"},
{"content":{"body":"... what's a \"fluture\"?","msgtype":"m.text"},"ts":1635423289097,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NIEZRBHX72oHsySqYzuEIyC-RsTRzWG2FB09mKUvf90"},
{"content":{"body":"fantasyland promise","msgtype":"m.text"},"ts":1635423308155,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SgsRgQhy9G5gW8yqhtgGIQcQexRZIadrSY7Kxj-nmyM"},
{"content":{"body":"i have certainly made a `thunk` helper that is `x => () => x`, but i don't think that needs to be in the language","format":"org.matrix.custom.html","formatted_body":"i have certainly made a <code>thunk</code> helper that is <code>x =&gt; () =&gt; x</code>, but i don't think that needs to be in the language","msgtype":"m.text"},"ts":1635423308953,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PxdJLYB_cg6Rp3cCRP3nElR9pat84W_70z6f0yJ4lOY"},
{"content":{"body":"I don't think this needs to be in the language","msgtype":"m.text"},"ts":1635423374791,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$MgKja_e9XhCysZkjV0j2lf9qb9jhAhEw8fWyLjEicRw"},
{"content":{"body":"`uncurryThis` should be though","format":"org.matrix.custom.html","formatted_body":"<code>uncurryThis</code> should be though","msgtype":"m.text"},"ts":1635423412660,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P3X283bFlcNqoNpPVRpxdrwlUGGGc1PBPxXaJLsmy4o"},
{"content":{"body":"and I could see `flow`, maybe","format":"org.matrix.custom.html","formatted_body":"and I could see <code>flow</code>, maybe","msgtype":"m.text"},"ts":1635423418053,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$t-a67baxpmDP3NqQXU3-Aq3pqSH4-F31Jxox_p-neTM"},
{"content":{"body":"`flow` (function composition) is interesting, but I think it being single-parameter makes it kinda awkward for JS","format":"org.matrix.custom.html","formatted_body":"<code>flow</code> (function composition) is interesting, but I think it being single-parameter makes it kinda awkward for JS","msgtype":"m.text"},"ts":1635423427166,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bC08G8tNp4m-FoFhPl_ThSfUxw0PkbZ5h46uuv4RqIM"},
{"content":{"body":"`once`, also","format":"org.matrix.custom.html","formatted_body":"<code>once</code>, also","msgtype":"m.text"},"ts":1635423427482,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ls0VuHKIzK24jcIn89woOvi2JWl0uC0SpcRlZtG2JqA"},
{"content":{"body":"once is great, I write once all the time","msgtype":"m.text"},"ts":1635423442794,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ulxXYb37VZsJl_QBihUKDlrvmHOqEl7dqmHfLYjN-0E"},
{"content":{"body":"how... can we specify debounce?","msgtype":"m.text"},"ts":1635423446389,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BJrEb-hRvxNLFdGZkFdUZJd-x-lMHIu7-9QEdDpm5EA"},
{"content":{"body":"and it's annoying","msgtype":"m.text"},"ts":1635423448004,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DptXEzwly6PHIj92R9wOH7pj9rvBGnC8YnJQ2xAWloM"},
{"content":{"body":"`debounce` and `throttle` don't work without time though, which probably don't belong in JS","format":"org.matrix.custom.html","formatted_body":"<code>debounce</code> and <code>throttle</code> don't work without time though, which probably don't belong in JS","msgtype":"m.text"},"ts":1635423450553,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vYQNztelTOTxAI6xn7w-Vz85Gq2mCJScN7MphFWR5oo"},
{"content":{"body":"yeah these can't be in 262","msgtype":"m.text"},"ts":1635423456560,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zHQlNzPLN99DO_5QRRwUO9UzPuYUP9NE2kR9ytdBpxU"},
{"content":{"body":"HTML would probably add them if you asked them to though","msgtype":"m.text"},"ts":1635423490047,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MUGJmfybO8pPdEvl_IY5awbm8IY5B-cZQHHvVSuHPSg"},
{"content":{"body":"I'm thinking these should be split into separate proposals because many of them *clearly* don't stand on their own","format":"org.matrix.custom.html","formatted_body":"I'm thinking these should be split into separate proposals because many of them <em>clearly</em> don't stand on their own","msgtype":"m.text"},"ts":1635423491054,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CVgg19rgaU5DGUmNEhT9H4M6wqe1c3Gg1PMorOHn0TU"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1635423505234,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$BmYmOgk4DanDu87IJzSK7aWEWEYfyXUr3T-VhEAay4s"},
{"content":{"body":"i don't think we should encourage this kind of approach to proposals -- we should work with concrete problem statements rather than giving an arbitrary blank check on \"we will add function helpers\"","msgtype":"m.text"},"ts":1635423569349,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Wda25-luzSMMWllt3K0G9tc9EXRhIuU_MlyLe4NjaaE"},
{"content":{"body":"+1 to more scoped problem statement","msgtype":"m.text"},"ts":1635423600562,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DDkQLh-v4fk-eDSnazivXurmTmHxI8fyK7p_n6JGV4E"},
{"content":{"body":"yeah, I like really lightweight proposals","msgtype":"m.text"},"ts":1635423704737,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OkfSYTXddRMaFWEOnk5VC1Ga44W4pCUmF-6rpC6VAmk"},
{"content":{"body":"like, `flow` and `flowAsync` belong in the same proposal, but neither obviously belongs in the same proposal as `uncurryThis` or `once`","format":"org.matrix.custom.html","formatted_body":"like, <code>flow</code> and <code>flowAsync</code> belong in the same proposal, but neither obviously belongs in the same proposal as <code>uncurryThis</code> or <code>once</code>","msgtype":"m.text"},"ts":1635423722231,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6H7n4yZbDiHSt2AiRoiMaTpzp-PHx5sKKCYtfhaZwuc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1635423728076,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$mqSvpKDWOg3BdOXlzagdXgwqmqp-6YQlzb4cnYIbxwQ"},
{"content":{"body":"I don't want to talk though","msgtype":"m.text"},"ts":1635423731486,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aydIFWIFMb4PtQOH4Ljviy_zxzE5kcSQH3poYsqG30o"},
{"content":{"body":"someone maybe could put this on the queue","msgtype":"m.text"},"ts":1635423742000,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gTul6xsfLLz6h5TnlG5vZiSgRvH7AffuIbPwiCy06vc"},
{"content":{"body":"ptomato: you ready for temporal overflow in a few mins?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: you ready for temporal overflow in a few mins?","msgtype":"m.text"},"ts":1635424007011,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$sP9JNPCh9rZrlTSF6XAQuT6iuMR2aLv6n0s5TI9uBgM"},
{"content":{"body":"Over the break I read and reread RepeatMatcher, but I don't think I'm incorrect in my understanding of backtracking. For `/\\n+$/.test(\"\\n\".repeat(100_000) + \"b\")` we end up in a stack 100,001 calls to RepeatMatcher deep before we (a) fail to match an `\\n` and then (b) fail to match the end of the buffer. We then unwind the stack, attempting to match the end of the buffer for each entry on the stack. This means we test for `$` at offset 100,000, then at 99,999, then 99,998, etc. until we fail at offset 0 (matching no `\\n` characters).\n\nNow that this has failed, we advance to the next index in RegExpBuiltInExec, and do it all over again.","format":"org.matrix.custom.html","formatted_body":"<p>Over the break I read and reread RepeatMatcher, but I don't think I'm incorrect in my understanding of backtracking. For <code>/\\n+$/.test(&quot;\\n&quot;.repeat(100_000) + &quot;b&quot;)</code> we end up in a stack 100,001 calls to RepeatMatcher deep before we (a) fail to match an <code>\\n</code> and then (b) fail to match the end of the buffer. We then unwind the stack, attempting to match the end of the buffer for each entry on the stack. This means we test for <code>$</code> at offset 100,000, then at 99,999, then 99,998, etc. until we fail at offset 0 (matching no <code>\\n</code> characters).</p>\n<p>Now that this has failed, we advance to the next index in RegExpBuiltInExec, and do it all over again.</p>\n","msgtype":"m.text"},"ts":1635424046171,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O16A0mtLjRySHL0bl06btbfoptTmJ8qjp5HYmFizmJY"},
{"content":{"body":"> <@bterlson:matrix.org> ptomato: you ready for temporal overflow in a few mins?\n\njustingrant: ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$sP9JNPCh9rZrlTSF6XAQuT6iuMR2aLv6n0s5TI9uBgM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bterlson:matrix.org\">@bterlson:matrix.org</a><br><a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: you ready for temporal overflow in a few mins?</blockquote></mx-reply><a href=\"https://matrix.to/#/@justingrant:matrix.org\">justingrant</a>: ?","m.relates_to":{"m.in_reply_to":{"event_id":"$sP9JNPCh9rZrlTSF6XAQuT6iuMR2aLv6n0s5TI9uBgM"}},"msgtype":"m.text"},"ts":1635424068568,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$I3cEo3S3Y3Tt1NicW0mjPGear5NYVHqokb-UPrZCJjk"},
{"content":{"body":"Yep!","msgtype":"m.text"},"ts":1635424114999,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$_NwRir3mm0-CS9tn9-IAQ5RtZ6zT-svu4IUHJaDuNng"},
{"content":{"body":"@ptomato should be on shortly","msgtype":"m.text"},"ts":1635424132579,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$940eDiy0PvViPah_BOslyGaRG5spXt_ONBToCTNBzDY"},
{"content":{"body":"I'm presenting today (only 2 slides)","msgtype":"m.text"},"ts":1635424155337,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$93R4gMjZ2NBYxoIPhTuynJxn0-x24KnQO7uMJvE6Gik"},
{"content":{"body":"rbuckton: The spec doesn't mandate that you implement in that way if it's not observable","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: The spec doesn't mandate that you implement in that way if it's not observable","msgtype":"m.text"},"ts":1635424167992,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$twY-ekWqfsm649NIkf35SAC3gIH4QLmsOyJzNjs8pW8"},
{"content":{"body":"Jack Works: you have some music in the background","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: you have some music in the background","msgtype":"m.text"},"ts":1635424180313,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$T_X4pUxyGs0JKNFp6b1N-sIEylho6_8RNWDjHMgwCLU"},
{"content":{"body":"Michael Ficarra: True, but my point is that backtracking retries the pattern to the right of the quantifier for each possible choice of repeated `\\n` characters, starting with the largest.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: True, but my point is that backtracking retries the pattern to the right of the quantifier for each possible choice of repeated <code>\\n</code> characters, starting with the largest.","msgtype":"m.text"},"ts":1635424248924,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$zU7LLxMIW2iLt2SSDoPOhLyue8l2pGewU8QLwB-OWtQ"},
{"content":{"body":"There are possible optimizations if the remaining pattern is a fixed length set of characters, if the Atom being repeated could not be matched by the continuation, but a regexp can easily be crafted that breaks those optimizations.","msgtype":"m.text"},"ts":1635424372398,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CfWI77ufufk3mqWskegGfFzZQzMqnDekdf36RPmWrbo"},
{"content":{"body":"rbuckton: so you're saying any implementation of a JS regexp matcher today necessarily has catastrophic backtracking?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: so you're saying any implementation of a JS regexp matcher today necessarily has catastrophic backtracking?","msgtype":"m.text"},"ts":1635424428248,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$J_ZZKVYLqBdFS_6v3w-Z6XxoSqxiaMR94kqU2qrZ8WE"},
{"content":{"body":"Why would we block time-related functions. We have to have time-awareness in JS for `Atomics.wait` or `Atomics.waitAsync`. I think a `Promise.delay` polyfill could be built purely on top of `waitAsync` without depending on the DOM Timers API.","format":"org.matrix.custom.html","formatted_body":"Why would we block time-related functions. We have to have time-awareness in JS for <code>Atomics.wait</code> or <code>Atomics.waitAsync</code>. I think a <code>Promise.delay</code> polyfill could be built purely on top of <code>waitAsync</code> without depending on the DOM Timers API.","msgtype":"m.text"},"ts":1635424452501,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5F92U0sX9ujWGj0Hpql0FHIRCUcHj81KVzICUe_6xvs"},
{"content":{"body":"doesn't Atomics only wait for something in another thread to make a change in a SAB?","msgtype":"m.text"},"ts":1635424496236,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$toVT0s6LW0mZ6uccclhpt_bvkzkj9KPeFJemVK5o2iw"},
{"content":{"body":"there's a timeout","msgtype":"m.text"},"ts":1635424505496,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$POn1S5gkMV29d5dxe8lmKAChNBx-hKc765VJaJYS504"},
{"content":{"body":" * doesn't Atomics only wait for something in another thread to make a change in a SAB? that's not involving time","m.new_content":{"body":"doesn't Atomics only wait for something in another thread to make a change in a SAB? that's not involving time","msgtype":"m.text"},"m.relates_to":{"event_id":"$toVT0s6LW0mZ6uccclhpt_bvkzkj9KPeFJemVK5o2iw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424505872,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EaF-bWwnIzl4s_lGT1xyZBeJbvisEOJfy6muafvBn3g"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1635424507893,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DzW7YQy6rORGskDbqP-TQqHabEXTWnfeTrCcETRIuEI"},
{"content":{"body":"erights: the timeout in Atomics.wait isn't an issue?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: the timeout in Atomics.wait isn't an issue?","msgtype":"m.text"},"ts":1635424525059,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bFuq9-rS4CXZhvSfvif4_b3nUU_zqdjDQCI_cyO3hVg"},
{"content":{"body":"You can use `Atomics.wait` to emulate `sleep` in NodeJS or in a Web Worker.","format":"org.matrix.custom.html","formatted_body":"You can use <code>Atomics.wait</code> to emulate <code>sleep</code> in NodeJS or in a Web Worker.","msgtype":"m.text"},"ts":1635424542775,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cj-2dDdce6e7d6jSJtEM_UwZbo3EBWNZ6m9Csx_lbiQ"},
{"content":{"body":"my concern isn't any SES concern to be clear","msgtype":"m.text"},"ts":1635424556070,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oj_MjBpUYaKUei1Ut5SXl0gACFb6FN2AiYrJUWJzheQ"},
{"content":{"body":"i don't think the value add is enough to add more fairly heavyweight hooks to the spec to queue tasks","msgtype":"m.text"},"ts":1635424573425,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xxkLmOriXIvAYsxKpQATKxQ0XqCaFUx7QwiW83kBUAE"},
{"content":{"body":"if we want these just add these to html","msgtype":"m.text"},"ts":1635424578702,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$MWuyz_YHuOmIjkahnslDLF6lpaGDCw1vuHa-ekWDKqw"},
{"content":{"body":"have node implement them","msgtype":"m.text"},"ts":1635424585166,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7gYa9o9zGp1Jtt4rNnw05oqOzOzqMpEmzVtFBRhbwLE"},
{"content":{"body":"Atomics.wait's timeout is special in that the waiting thread is literally blocked","msgtype":"m.text"},"ts":1635424648204,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$23Ln0ca8kdaRkInOBNDNXbPkNd3UGGtJcwJgkE6Z8ds"},
{"content":{"body":"Atomics.waitAsync's timeout is more analogous","msgtype":"m.text"},"ts":1635424659025,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Btlh3KljxOxDiooiGJ0DfNG6HlvFCSGeZir6DzW4r6M"},
{"content":{"body":"IMO, I'm not too enthusiastic about `debounce`/`throttle`, as a purpose-built solution can be more flexible (sliding windows, minimum/maximum delays, etc.)","format":"org.matrix.custom.html","formatted_body":"IMO, I'm not too enthusiastic about <code>debounce</code>/<code>throttle</code>, as a purpose-built solution can be more flexible (sliding windows, minimum/maximum delays, etc.)","msgtype":"m.text"},"ts":1635424672388,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$knje_rkEOZTH7ypbFMUhCoblU2OjjQji3FJUyqtYSyk"},
{"content":{"body":" * Why would we block time-related functions? We have to have time-awareness in JS for `Atomics.wait` or `Atomics.waitAsync`. I think a `Promise.delay` polyfill could be built purely on top of `waitAsync` without depending on the DOM Timers API.","format":"org.matrix.custom.html","formatted_body":" * Why would we block time-related functions? We have to have time-awareness in JS for <code>Atomics.wait</code> or <code>Atomics.waitAsync</code>. I think a <code>Promise.delay</code> polyfill could be built purely on top of <code>waitAsync</code> without depending on the DOM Timers API.","m.new_content":{"body":"Why would we block time-related functions? We have to have time-awareness in JS for `Atomics.wait` or `Atomics.waitAsync`. I think a `Promise.delay` polyfill could be built purely on top of `waitAsync` without depending on the DOM Timers API.","format":"org.matrix.custom.html","formatted_body":"Why would we block time-related functions? We have to have time-awareness in JS for <code>Atomics.wait</code> or <code>Atomics.waitAsync</code>. I think a <code>Promise.delay</code> polyfill could be built purely on top of <code>waitAsync</code> without depending on the DOM Timers API.","msgtype":"m.text"},"m.relates_to":{"event_id":"$5F92U0sX9ujWGj0Hpql0FHIRCUcHj81KVzICUe_6xvs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424698779,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$75hqQ2Zbe4-ylqxmYvKx4JbTa_IdWwZdetuf0XsC_Ko"},
{"content":{"body":"good to know","msgtype":"m.text"},"ts":1635424704586,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qEeZg8fZxEFPS0a3ZFdvg3REMeSYGR2pHWTZ0f3nbCM"},
{"content":{"body":"with throttle, most use cases run the function after the window, but some want to silently drop instead, so to standardize we'd have to have a way to allow both","msgtype":"m.text"},"ts":1635424705724,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sWHPA5B5KMJ5ijyQtTl5wqkaqDIMM5a7bdR5nYtpC8A"},
{"content":{"body":" * with throttle, most use cases run the function after the window, but some want to silently drop instead, so to standardize we'd have to have a way to allow both","m.new_content":{"body":"with throttle, most use cases run the function after the window, but some want to silently drop instead, so to standardize we'd have to have a way to allow both","msgtype":"m.text"},"m.relates_to":{"event_id":"$sWHPA5B5KMJ5ijyQtTl5wqkaqDIMM5a7bdR5nYtpC8A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424724080,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kEcDgE9FzucGENAADM2UCSXcYpFAUqENYIwPnHnf7cw"},
{"content":{"body":"lack of standardization in existing methods is arguably a good reason to have it in the platform","msgtype":"m.text"},"ts":1635424761388,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kncIYmXkkE7oJjK7WLotBEJHz2na6ZVKCVrmGDNgP5g"},
{"content":{"body":"what's the chance that Temporal is bug-free by the time it hits stage 4? 0? I think 0.","msgtype":"m.text"},"ts":1635424784228,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LYvD4LxkzydGtx4zOKny3O3Bm9SDr_j0Z00ocPwnqD0"},
{"content":{"body":"Michael Ficarra: Is it not true that given the features we have and the semantics we want (e.g. best match), you can craft a regexp with \"catastrophic\" behavior, and doing that pattern non-catastrophically would result in observably different semantics in some cases? I thought I learned this at one point.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Is it not true that given the features we have and the semantics we want (e.g. best match), you can craft a regexp with &quot;catastrophic&quot; behavior, and doing that pattern non-catastrophically would result in observably different semantics in some cases? I thought I learned this at one point.","msgtype":"m.text"},"ts":1635424788826,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$r8YV_popPVTn6jf2zjkyKftAjZgJgq97Xlbc86C2psA"},
{"content":{"body":"i don't think any userland implementation i've seen commonly used implements the drop use case. but someone asked about it in a chatroom just the other day","msgtype":"m.text"},"ts":1635424804211,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Qy_JzPGIQD4DHMzHCmKuhaNkAI4U2h20xbURPX60LJo"},
{"content":{"body":"bterlson: I'm not sure. I want to know this.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: I'm not sure. I want to know this.","msgtype":"m.text"},"ts":1635424829210,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$6y3PUYDhTkuWrBNQrKeW2l1jOyrqHHOQfK6rVoiqXUw"},
{"content":{"body":"you can absolutely craft a regex that hangs v8 but not spidermonkey, and have been able to for many years; not sure if that's the question","msgtype":"m.text"},"ts":1635424862313,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ckO7WuC8i9jp06qZAlxW3c1qU-5yB-mk-Pn9r16w3pg"},
{"content":{"body":" * you can absolutely craft a regex that hangs v8 but not spidermonkey, and have been able to for many years","m.new_content":{"body":"you can absolutely craft a regex that hangs v8 but not spidermonkey, and have been able to for many years","msgtype":"m.text"},"m.relates_to":{"event_id":"$ckO7WuC8i9jp06qZAlxW3c1qU-5yB-mk-Pn9r16w3pg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424867942,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f1FksT5IlqtZhV_BQtT1nHgC6zifzOPHGUcq9Cmo_qo"},
{"content":{"body":" * you can absolutely craft a regex that hangs v8 but not spidermonkey, and have been able to for many years; not sure if that's the question","m.new_content":{"body":"you can absolutely craft a regex that hangs v8 but not spidermonkey, and have been able to for many years; not sure if that's the question","msgtype":"m.text"},"m.relates_to":{"event_id":"$ckO7WuC8i9jp06qZAlxW3c1qU-5yB-mk-Pn9r16w3pg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424884848,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$G_z9eSdjNrET0j4ueTf0iqLnLvMZiBRMQ0QcWlRTno0"},
{"content":{"body":"ljharb: not talking about existing implementations, talking about theoretical implementations","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: not talking about existing implementations, talking about theoretical implementations","msgtype":"m.text"},"ts":1635424894598,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ris4lEbe4Kpqriv8PV0VUkW0103S9I3obLXbY-8hpIU"},
{"content":{"body":"how can that be possible","msgtype":"m.text"},"ts":1635424894992,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$eamqyapTi1DEKZWh7BzHUxj4Z3ibr-wNdif5kwOaNjE"},
{"content":{"body":"SM switched to irregexp","msgtype":"m.text"},"ts":1635424898425,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_fAj4GpInq0zbdfktzrEkRvGS_Ja0zy5VCXmaoufSIY"},
{"content":{"body":"oh maybe it hangs spidermonkey now, i haven't checked","msgtype":"m.text"},"ts":1635424904046,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zWFXnJsaoqayseIR4i4-eS89X6DQn5Lx9g6KJUX1O7Y"},
{"content":{"body":" * oh maybe it hangs spidermonkey now, i haven't checked","m.new_content":{"body":"oh maybe it hangs spidermonkey now, i haven't checked","msgtype":"m.text"},"m.relates_to":{"event_id":"$zWFXnJsaoqayseIR4i4-eS89X6DQn5Lx9g6KJUX1O7Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635424910785,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sCrMGRVBLURFIGeCc5386pi-0wdYkaTV2LzB01XdLFs"},
{"content":{"body":"I feel like I read something recently about an engine which after a while switches to an implementation which is slower in common cases but guaranteed not to be catastrophic","msgtype":"m.text"},"ts":1635424940694,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0qYKBKCS8XTnpxLOcPC9T_s6cvyXc7DMwIy1soDlldg"},
{"content":{"body":"but maybe that was not JS","msgtype":"m.text"},"ts":1635424944187,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$S7JHUCqZq75TWnlgw919K2G02WOonRStxkNy2SSHISU"},
{"content":{"body":"that's what linear mode turned out to be, but we're not going to ship it","msgtype":"m.text"},"ts":1635424975746,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NV0ZBP1VJbTfr-3Obw8yK5mvuvhZz-6BmLejOJSRslU"},
{"content":{"body":"not sure if you're thinking of linear mode","msgtype":"m.text"},"ts":1635424980513,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m2jYaV_YNmKvc5_tpWH21yxOLOaIApLY5l-l8UP2wq8"},
{"content":{"body":"oh, got it","msgtype":"m.text"},"ts":1635424982997,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q1aZh9GzfkXd2SUgSXjLBhfCag2bewkAV1VAycsdc2E"},
{"content":{"body":"probably am","msgtype":"m.text"},"ts":1635424985691,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9cYO8_Rjx-_q3k64P99GCiADdGPTP6qOXhMH4VzREGw"},
{"content":{"body":"it was an intern project to add a new flag that opts into a linear only, no backtracking regexp engine","msgtype":"m.text"},"ts":1635425020592,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K26vMCivbXmlGc9LtsGSt5lYrsNsJHlqnmn5gEHOoeo"},
{"content":{"body":"I also think that's only true in theory with like infinite memory, and also might not work with e.g. backrefs or other non-regular features?","msgtype":"m.text"},"ts":1635425025283,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$UtihUMhCjB7BgfNNH5a2bNjESAVrD0rlmJo7fCAJsFU"},
{"content":{"body":"> <@ljharb:matrix.org> oh maybe it hangs spidermonkey now, i haven't checked\n\noh that would be weird, we use v8's regexp engine","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zWFXnJsaoqayseIR4i4-eS89X6DQn5Lx9g6KJUX1O7Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>oh maybe it hangs spidermonkey now, i haven&#39;t checked</blockquote></mx-reply>oh that would be weird, we use v8's regexp engine","m.relates_to":{"m.in_reply_to":{"event_id":"$zWFXnJsaoqayseIR4i4-eS89X6DQn5Lx9g6KJUX1O7Y"}},"msgtype":"m.text"},"ts":1635425036343,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$PwcyfyRiPdzCAOssCxjacLxkUuc-_OAOx3zsRFocoY0"},
{"content":{"body":"(or without preserving ES best match semantics)","msgtype":"m.text"},"ts":1635425036978,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$BS2Zk6gnN6lGTI5oMsZUaQHqtk-9Kyeqb7w7WYOL51E"},
{"content":{"body":"Best match isn't the issue","msgtype":"m.text"},"ts":1635425053384,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Qvvqc6OVLzhOVOvSEY6eJyR2n2XsV1_18pdhAs92BFs"},
{"content":{"body":"It's just the backreferences and unbounded look-arounds","msgtype":"m.text"},"ts":1635425065944,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$IlYZgzq0QMfVq9dg99J7PdzXuPTwG5wsVulbkG2OHuY"},
{"content":{"body":"It's not possible to implement all the required features without using a backtrack impl","msgtype":"m.text"},"ts":1635425083757,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$qVg7N9svW8TZpC-LIS9wi5M_IdTK5QzDtr4FTBbJhzg"},
{"content":{"body":"So everyone implements a backtrack impl","msgtype":"m.text"},"ts":1635425092277,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kx-T9h_w9jkGqG-EAQBLC1pDd7KeUCkE0zbmCfZb_L4"},
{"content":{"body":"thank you Justin Ridgewell that's what I was expecting","format":"org.matrix.custom.html","formatted_body":"thank you <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> that's what I was expecting","msgtype":"m.text"},"ts":1635425136838,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_Y40tTiVdQ74zY0fKIqUpRr2uqbbsKwIyYnx8s0b4YI"},
{"content":{"body":"https://v8.dev/blog/non-backtracking-regexp","msgtype":"m.text"},"ts":1635425528319,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EAiYlfdws5NFdCjFxaQlgnPnZpH8_wPenc1KdmLsB0o"},
{"content":{"body":"found the article I was thinking of","msgtype":"m.text"},"ts":1635425533533,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4dATR76_4l1WWqD7DYi1kDbpLkJc3ZOOF0E0e8m35Q4"},
{"content":{"body":"relevantly, it only works in the absence of backrefs and lookarounds","msgtype":"m.text"},"ts":1635425570835,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$et0s-XQwFTkRoqUHEqVINfZp1Z9wvL8FvdMv-fSOf28"},
{"content":{"body":"that engine could support backreferences with better average performance than irrgexp but they want to keep it separate","msgtype":"m.text"},"ts":1635425705210,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$2zg4maYcU8LF4AHXFoQYbJGhP_SEpANN36Jp6XZSE-s"},
{"content":{"body":"Just making sure: Thereâ€™s going to be a call for incubator topics at the end of the plenary, right?","msgtype":"m.text"},"ts":1635425769984,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$rYNTemFUpzeqp_ONDd5IVyQ-E5AU7p0ijgRBPkSzT1g"},
{"content":{"body":"should be, yes","msgtype":"m.text"},"ts":1635425809621,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yj3rajHvD-INuqr3W_RZgqdQT8grTaGkwHIWOcNKuWc"},
{"content":{"body":"ljharb: technically i could have Object.prototype.smallestUnit","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: technically i could have Object.prototype.smallestUnit","msgtype":"m.text"},"ts":1635425828386,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sxdXzSVeOxEFMfCGfz5E9kny8sgjEgjmHflbWr0NDIs"},
{"content":{"body":"in that case `{}` wouldn't be an empty object","format":"org.matrix.custom.html","formatted_body":"in that case <code>{}</code> wouldn't be an empty object","msgtype":"m.text"},"ts":1635425883475,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9341LdRVUR3W8pYd_3DUy-4b364O5PTkvtpvqN7vq9M"},
{"content":{"body":"i think we're using `{}` here to mean \"an object for which a Get() of all relevant properties returns undefined\", or similar","format":"org.matrix.custom.html","formatted_body":"i think we're using <code>{}</code> here to mean &quot;an object for which a Get() of all relevant properties returns undefined&quot;, or similar","msgtype":"m.text"},"ts":1635425917776,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$J1PM9heXGV9DbTOuWw096-VQAgH_ALfkbThO2_VNjKY"},
{"content":{"body":"(`{ x: 1 }` would be an empty object wrt Temporal, eg)","format":"org.matrix.custom.html","formatted_body":"(<code>{ x: 1 }</code> would be an empty object wrt Temporal, eg)","msgtype":"m.text"},"ts":1635425938435,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$l8tNBevVMSrjRcze4GI09_YYHyLVv-OhBMpk1CiWVrw"},
{"content":{"body":"i mean it's not an empty object","msgtype":"m.text"},"ts":1635425957473,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$D_I74s8vb7bKNM01NxuRvNn4BxgcbUcaL3gHSOJjU4Y"},
{"content":{"body":"it's an object without the property, sure","msgtype":"m.text"},"ts":1635425965340,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$T_RFa1HDxd3V5e4uTZ4nWhFLQgfox0T957ukKNJ-InY"},
{"content":{"body":"\"an object empty of relevant temporal properties\" is the case we're talking about, it's just longer to say","msgtype":"m.text"},"ts":1635425991128,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Or5jZJTCYN-hzVbGK8GxeNtj_CGUVA9Lvzwh5mPn48I"},
{"content":{"body":"ljharb: i feel very strongly in the opinion that wasm use cases at the boundary *are* JS use cases","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: i feel very strongly in the opinion that wasm use cases at the boundary <em>are</em> JS use cases","msgtype":"m.text"},"ts":1635426976079,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$99R7i6oLrppqUw24rtqifOqzvBF3FsQ1YmdgDQiodCU"},
{"content":{"body":"as is the case here","msgtype":"m.text"},"ts":1635426979694,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gK_CdDLfHWOGQxY-PM4kW4CXpzv1VvvcvI6275HmjrQ"},
{"content":{"body":"it is clear that folks who are invested in wasm feel that way","msgtype":"m.text"},"ts":1635427013295,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ty9RYEs5a6RyecwSwt2JiYod1SGuMSscCUgkB2r_2ws"},
{"content":{"body":" * it is clear that folks who are invested in wasm feel that way","m.new_content":{"body":"it is clear that folks who are invested in wasm feel that way","msgtype":"m.text"},"m.relates_to":{"event_id":"$ty9RYEs5a6RyecwSwt2JiYod1SGuMSscCUgkB2r_2ws","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635427014509,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5qAFiY0MozPLz8FQiIDdSODMrCGmEzOLM-0CD7SBKa4"},
{"content":{"body":"that's a gross mischaracterization","msgtype":"m.text"},"ts":1635427049811,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9BFa9k3XNmVBEtjFy5XrMik-N11oTPaOw9QOG1ZazeU"},
{"content":{"body":"do we take notes on COC report?","msgtype":"m.text"},"ts":1635427064644,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wAajX3Z6mUUuExPs1JrdLKBRk5EPjW4B85HRXplE0uA"},
{"content":{"body":"I assume no?","msgtype":"m.text"},"ts":1635427067358,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xIGWaYI6eSTo97QVHYmOEDCNI7FpMm0-iAH2-XyC8Ww"},
{"content":{"body":"\"folks who are invested\" are like... several large multinational corporations with lots of product teams devoted to it?","msgtype":"m.text"},"ts":1635427069663,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uZYS94ih6Kp50B6EuLg13VGpoSPQ9P6OyJMlif5Ou2U"},
{"content":{"body":"> <@ljharb:matrix.org> erights: the timeout in Atomics.wait isn't an issue?\n\nI thought there is no time in the ES spec until I see this `Atomics.wait`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bFuq9-rS4CXZhvSfvif4_b3nUU_zqdjDQCI_cyO3hVg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@erights:matrix.org\">erights</a>: the timeout in Atomics.wait isn't an issue?</blockquote></mx-reply>I thought there is no time in the ES spec until I see this <code>Atomics.wait</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$bFuq9-rS4CXZhvSfvif4_b3nUU_zqdjDQCI_cyO3hVg"}},"msgtype":"m.text"},"ts":1635427075452,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Ok3YvpGcrUreesJY_GJmKFsBBjeRXVXWzpD2o5NhYiw"},
{"content":{"body":"so it's not like a fringe group on the internet","msgtype":"m.text"},"ts":1635427078697,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Hoy8h7mUsTz_bFCp1s6hivM7BCAyPjQ7ViARZdkqi0c"},
{"content":{"body":"sure, no such \"fringeness\" was implied","msgtype":"m.text"},"ts":1635427233200,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hRBAyqb1Z44WDQ8oD0qnTr70-adXtQTCwhdx1a9HvsM"},
{"content":{"body":"bakkot: high-level notes are fine, probably best not to include discussion of specific moderation actions","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: high-level notes are fine, probably best not to include discussion of specific moderation actions","msgtype":"m.text"},"ts":1635427271908,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FXe4hPdKHVWkX2mPtcQ-waVJx20bt5DrlYHMWIc7MAM"},
{"content":{"body":"ljharb: feel free to redact notes, we have a verbatim transcript as usual atm","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: feel free to redact notes, we have a verbatim transcript as usual atm","msgtype":"m.text"},"ts":1635427288434,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XUklULeCCZIr6A59kmpbtUC5w5uiHQq2C-8RR7MqsKk"},
{"content":{"body":"cool, will do","msgtype":"m.text"},"ts":1635427295911,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$S2D0EYvCkawjOMUEQmawdjWapOmvTNk8fAkBTUCmfVA"},
{"content":{"body":"Pipe group wants a pipe incubator call for bikeshedding the topic token.","msgtype":"m.text"},"ts":1635427365935,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$x2Ii0x-Sv8tOH9ZY1LD0oqv8xBaiGuWA4eS0PfquMGI"},
{"content":{"body":"don't forget to review the notes!","msgtype":"m.text"},"ts":1635427870020,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$G0Iv38Pi7XpWsvHu9FBFUB22EIQV5s3i9d4lA2xHXdQ"},
{"content":{"body":"happy end of plenary everyone, now go to sleep","msgtype":"m.text"},"ts":1635429911633,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$YMeVavC9um1WIo7OG4Mx6aW0hGhkhtRrgU94aRY7L7k"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1635429916117,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$2wdyHWfPduEeF-Qbp9YJJhROeCWdKxVnb_Z7wdOOgks"},
{"content":{"body":"> <@michaelficarra:matrix.org> don't forget to review the notes!\n\nFor anyone new to note-taking. I've been using https://rogueamoeba.com/audiohijack/ so I can pause/re-wind/jump-to-live the audio using global hotkeys. Which I've found makes bot-helping much less stressful.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$G0Iv38Pi7XpWsvHu9FBFUB22EIQV5s3i9d4lA2xHXdQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>don&#39;t forget to review the notes!</blockquote></mx-reply>For anyone new to note-taking. I've been using https://rogueamoeba.com/audiohijack/ so I can pause/re-wind/jump-to-live the audio using global hotkeys. Which I've found makes bot-helping much less stressful.","m.relates_to":{"m.in_reply_to":{"event_id":"$G0Iv38Pi7XpWsvHu9FBFUB22EIQV5s3i9d4lA2xHXdQ"}},"msgtype":"m.text"},"ts":1635430197123,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$F_BywSYXUOwz4Ih8c2XRWhaNdhnre99H1kLLGgwGcGA"},
{"content":{"body":"I did start trying to put something together with the WebAudio apis that could add a delay that I could use on windows but didn't get it to work with routing between different apps and outputs","msgtype":"m.text"},"ts":1635430265269,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$Fo5uoNl07Pbey-igHAUwB8cF698Iy_Lr-jsh-fJPCPU"},
{"content":{"body":"everytime I did a google for 'windows audio buffer delay utility' I just got results for how to fix my audio delay issues. Not introduce one on purpose","msgtype":"m.text"},"ts":1635430297666,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$UKrn3Y1KpkR3Da8vPR3G0JWplDak2RHZgCyfVKLaE70"}
]