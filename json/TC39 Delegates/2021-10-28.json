[
{"content":{"body":"Sorry all for being late to reply to Temporal-related posts above. Was so relieved to be done with my 15 mins of fame this morning that I forgot to check the delegates channel afterwards. ðŸ˜„ I'll add a few notes and replies now.\n\n ","msgtype":"m.text"},"ts":1635379360400,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$2a9TWGhXpz3FZxVSNgph4trV5mWWPAg8uXlDXEOWkEY"},
{"content":{"body":"> <@pchimento:igalia.com> bterlson: is the remaining point for Temporal already on the list of overflow topics for tomorrow or should I request that somewhere in particular?\n\nI didn't see a response to this so I went ahead and added Temporal to the overflow section in the HackMD page. If this was wrong, please feel free to revert and let us know about the correct process. Thanks!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GEgMcKlJjVgEEzwYDSsZUp4aFnNsftyW_l8y_SyZCGI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br><a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a>: is the remaining point for Temporal already on the list of overflow topics for tomorrow or should I request that somewhere in particular?</blockquote></mx-reply>I didn't see a response to this so I went ahead and added Temporal to the overflow section in the HackMD page. If this was wrong, please feel free to revert and let us know about the correct process. Thanks!","m.relates_to":{"m.in_reply_to":{"event_id":"$GEgMcKlJjVgEEzwYDSsZUp4aFnNsftyW_l8y_SyZCGI"}},"msgtype":"m.text"},"ts":1635379572316,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$oAePZPSKPOPvVQGv43i9NdoLa-3cqDPbm0wmk5tf6pQ"},
{"content":{"body":"> <@ljharb:matrix.org> and nobody disputes that temporal's problem space is a hellish nightmare\n\nFinally, we've found an invariant we can all agree with! ðŸ˜„","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NnV3Mm3XeNL_XEeruiwGBIJSvec8iEvTw_Et3P_w9Aw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>and nobody disputes that temporal&#39;s problem space is a hellish nightmare</blockquote></mx-reply>Finally, we've found an invariant we can all agree with! ðŸ˜„","m.relates_to":{"m.in_reply_to":{"event_id":"$NnV3Mm3XeNL_XEeruiwGBIJSvec8iEvTw_Et3P_w9Aw"}},"msgtype":"m.text"},"ts":1635379884153,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$zkDopF9BKUv-wy8oPFlzxByETwSzYilIQWhU-3C-mOc"},
{"content":{"body":"> <@ljharb:matrix.org> it can be very hard to figure out what one did wrong with APIs like this, at any experience level. good error messages help but aren't always sufficient.\n\nSpeaking of error messages, one suggestion I'd have for the committee: a standardized way for the spec to provide hints to implementers about error messages, and guidelines for proposal authors for when to provide those hints in the spec. Proposal authors (especially if the proposal's polyfill gets a lot of use) have a lot of tribal knowledge about the requirements for error messages, but AFAIK there's not really an \"official\" way to convey that knowledge to implementers. Nor is there a requirement that proposal authors think through the \"how are users likely to misuse this API and what should the error message say to help them?\" problem.  I don't think that implementers should be required to use any particular error message, but IMO having more clarity and consistency in error messages across implementations seems like a good idea, both to help users and to avoid inevitable churn from bug reports asking to improve error messages after the implementation ships. Also, implementers may not have insight into the kinds of bugs that users will run into, so they may not be in the best position to write the most helpful error message text without getting those bug reports.\n\nI'm not proposing any specific solution, but did want to highlight the problem and see if there was any existing prior art on the committee around this issue. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$P8n9S8D_FWz5x0USQbr5LM5KSbwojvFFxKs2cMSJuOM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>it can be very hard to figure out what one did wrong with APIs like this, at any experience level. good error messages help but aren&#39;t always sufficient.</blockquote></mx-reply><p>Speaking of error messages, one suggestion I'd have for the committee: a standardized way for the spec to provide hints to implementers about error messages, and guidelines for proposal authors for when to provide those hints in the spec. Proposal authors (especially if the proposal's polyfill gets a lot of use) have a lot of tribal knowledge about the requirements for error messages, but AFAIK there's not really an &quot;official&quot; way to convey that knowledge to implementers. Nor is there a requirement that proposal authors think through the &quot;how are users likely to misuse this API and what should the error message say to help them?&quot; problem.  I don't think that implementers should be required to use any particular error message, but IMO having more clarity and consistency in error messages across implementations seems like a good idea, both to help users and to avoid inevitable churn from bug reports asking to improve error messages after the implementation ships. Also, implementers may not have insight into the kinds of bugs that users will run into, so they may not be in the best position to write the most helpful error message text without getting those bug reports.</p>\n<p>I'm not proposing any specific solution, but did want to highlight the problem and see if there was any existing prior art on the committee around this issue.</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$P8n9S8D_FWz5x0USQbr5LM5KSbwojvFFxKs2cMSJuOM"}},"msgtype":"m.text"},"ts":1635380414162,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$t5hr-6iloaV4CESQSakCnG857_Sbdgvt9bZgUl2-3r8"},
{"content":{"body":"> <@waldemarh:matrix.org> I'm not saying that the options bag should be optional. But if you pass an options bag without a smallestUnit, then round should be the identity.\n\nWe'll plan to spend our overflow time tomorrow focusing on this question. Reading the replies above, I believe that there are three possible solutions:\n\n1. `.round({})` is allowed (and does nothing), but `.round()` throws.\n2. Both are accepted and do nothing.\n3. Both throw.\n\nThe current Temporal Stage 3 proposal uses (3). There were two reasons the champions selected (3): first, because it's a no-op and likely a programmer bug, and second for defense against typos in the property name like `.round({smalestUnit: 'second'})` which would be treated the same as `.round({})`.  (Sadly there's no typo defense for optional property names without breaking extensibility, but our opinion was that preventing at least some bugs was better than preventing no bugs.)\n\nOne request I'll relay from ptomato: this proposal is already in Stage 3, so we'd ask for there to be a really persuasive case to change the existing plan of record. The default should be that we stick with what's already been approved, because we really want to get this API shipped soon!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tWwDvs38e33EnV93jzBNcjungw3mZM7OfN5E6Dj8Bsk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">@waldemarh:matrix.org</a><br>I&#39;m not saying that the options bag should be optional. But if you pass an options bag without a smallestUnit, then round should be the identity.</blockquote></mx-reply><p>We'll plan to spend our overflow time tomorrow focusing on this question. Reading the replies above, I believe that there are three possible solutions:</p>\n<ol>\n<li><code>.round({})</code> is allowed (and does nothing), but <code>.round()</code> throws.</li>\n<li>Both are accepted and do nothing.</li>\n<li>Both throw.</li>\n</ol>\n<p>The current Temporal Stage 3 proposal uses (3). There were two reasons the champions selected (3): first, because it's a no-op and likely a programmer bug, and second for defense against typos in the property name like <code>.round({smalestUnit: 'second'})</code> which would be treated the same as <code>.round({})</code>.  (Sadly there's no typo defense for optional property names without breaking extensibility, but our opinion was that preventing at least some bugs was better than preventing no bugs.)</p>\n<p>One request I'll relay from <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: this proposal is already in Stage 3, so we'd ask for there to be a really persuasive case to change the existing plan of record. The default should be that we stick with what's already been approved, because we really want to get this API shipped soon!</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$tWwDvs38e33EnV93jzBNcjungw3mZM7OfN5E6Dj8Bsk"}},"msgtype":"m.text"},"ts":1635381370484,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$ibI7_EYlpjIO3_56d_LLPVVlFruGLYhN_ENTCDs7gec"},
{"content":{"body":"> > shu : is ftang in the loop for all these normative changes and bug fixes?\n> ptomato: yes, he found most of them, but I am pretty sure he read the slides as well. I'll double check at the next Temporal meeting\n\nWe also implemented the following process: \n* PRs that affect the spec text are marked with a `spec-text` label in GH https://github.com/tc39/proposal-temporal/pulls?q=is%3Apr+label%3Aspec-text\n* PRs that don't affect the spec (e.g. changes to docs, polyfill, tests, build tools hell, etc.) are marked `no-spec-text`\n* PR authors who forget to put the right label on (prime suspect: me, usually!) will be publicly embarrassed and a maintainer will quickly add the right label.\n\nI'll leave it to Frank and other implementers to say whether it's actually been helpful in cutting down the noise, but anecdotally I've been hearing fewer complaints since we started doing this so ðŸ¤·.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<blockquote>\n<p><a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> : is ftang in the loop for all these normative changes and bug fixes?<br><a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: yes, he found most of them, but I am pretty sure he read the slides as well. I'll double check at the next Temporal meeting</p>\n</blockquote>\n</blockquote>\n<p>We also implemented the following process:</p>\n<ul>\n<li>PRs that affect the spec text are marked with a <code>spec-text</code> label in GH https://github.com/tc39/proposal-temporal/pulls?q=is%3Apr+label%3Aspec-text</li>\n<li>PRs that don't affect the spec (e.g. changes to docs, polyfill, tests, build tools hell, etc.) are marked <code>no-spec-text</code></li>\n<li>PR authors who forget to put the right label on (prime suspect: me, usually!) will be publicly embarrassed and a maintainer will quickly add the right label.</li>\n</ul>\n<p>I'll leave it to Frank and other implementers to say whether it's actually been helpful in cutting down the noise, but anecdotally I've been hearing fewer complaints since we started doing this so ðŸ¤·.</p>\n","msgtype":"m.text"},"ts":1635382045854,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$ex1KFd9XmrFDFLzOVfjSMOY8_YvnbjbDDKCD9eEF6Tk"},
{"content":{"body":"spec 13.5.1.2 RS: delete operation","msgtype":"m.text"},"ts":1635391950688,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Lf2mjAhDULANU1_mwhPNulag3tT3s9t7u_QqX7TI0Hc"},
{"content":{"body":"what does it mean by delete binding?","msgtype":"m.text"},"ts":1635391962885,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wHfQ-6l6gBuIC553zEeS24GnOrkb-pN4N-hOcRunPj8"},
{"content":{"body":"```js\nvar a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">var a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n</code></pre>\n","msgtype":"m.text"},"ts":1635391975387,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$K68-vp67c5srq_Pa4fczheWInoPHs44e7GxcD0oO4KY"},
{"content":{"body":"I tried this but `z` didn't throw","format":"org.matrix.custom.html","formatted_body":"I tried this but <code>z</code> didn't throw","msgtype":"m.text"},"ts":1635391986121,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$2QEHWsl5izLB4f4PPZnWdHEZF4vL0iTsM0OLsST72AI"},
{"content":{"body":"IIUC var declaration is not deletable (except in eval mode), so a is actually still reachable in z.","msgtype":"m.text"},"ts":1635393828494,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$pkQr8aEusd7qfr4dGwKD3u2w6A3yNYX4Ky9LMUk58Cw"},
{"content":{"body":"https://tc39.es/ecma262/#sec-globaldeclarationinstantiation 16.1.7 step 17, defined as `Perform ? env.CreateGlobalVarBinding(vn, false).`. the second parameter of `CreateGlobalVarBinding` defines if the binding is deletable.","format":"org.matrix.custom.html","formatted_body":"https://tc39.es/ecma262/#sec-globaldeclarationinstantiation 16.1.7 step 17, defined as <code>Perform ? env.CreateGlobalVarBinding(vn, false).</code>. the second parameter of <code>CreateGlobalVarBinding</code> defines if the binding is deletable.","msgtype":"m.text"},"ts":1635393943096,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$CxMn_Ey-tcfM1lZce34oK4WN0wAoBYQqmcEzTElh5nU"},
{"content":{"body":"I got it. \n\n```js\na = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n```","format":"org.matrix.custom.html","formatted_body":"<p>I got it.</p>\n<pre><code class=\"language-js\">a = '1'\ndelete a;\nfunction z() { 'use strict'; a }\nz()\n</code></pre>\n","msgtype":"m.text"},"ts":1635394102059,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UHw1qxx-YJkMbmG5591oJgvU3gqbbNAyuGeYtiK9RZQ"},
{"content":{"body":"this will throw","msgtype":"m.text"},"ts":1635394104247,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$c9p3kIgMq5KMOuAnGuYhwZkqIdmXlqmgjb4Zs7ZJkcg"},
{"content":{"body":"plenary will start in... 12 mins","msgtype":"m.text"},"ts":1635410896269,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$xf0VHLmtLMNrZGXdRU0w_TAEJHmQG99JFn5tmtbd8mY"},
{"content":{"body":"can someone remind me what the motivation for boxes is","msgtype":"m.text"},"ts":1635412120334,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X8PulT7XlLzfTfHmW_dJfrtGxpXdvIKUDBJf0VXGnec"},
{"content":{"body":"allow to keep mutable object in record/tuple","msgtype":"m.text"},"ts":1635412139857,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$B581Hq9Z4GG14fx_qSBA3-qQtgXSb2LZdOy6dxhQmXc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1635412148617,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$vJPNRzFuVTyNCtojWfsotAVAngljMPGEW99ksOujzVA"},
{"content":{"body":"not just mutable, but also objects like functions","msgtype":"m.text"},"ts":1635412156967,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$f0AgT-eM_8ViPDAcBTXyCzXDHrY-wNNpaHCUOEPn2R4"},
{"content":{"body":"if you can put a box in a record, you have already given up on the \"records are deeply immutable\" goal, so what benefit does the box have?","msgtype":"m.text"},"ts":1635412204962,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1BGjSLz_0GT3LvieEoFoQ1DsVxWPCM84Qe89CFxx2ew"},
{"content":{"body":"Boxes are imutable. They are similar to having a Symbol","msgtype":"m.text"},"ts":1635412267692,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$mPfzemeHKQkP20DJxsHEmFVVDQ5aUPIC-HG9ZsvizVE"},
{"content":{"body":"and that symbol can be used to look up an object","msgtype":"m.text"},"ts":1635412276891,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$F1qaAdsA4YKpzbLcg0EmfLOtAumomw7_OS9qRwA1Z_I"},
{"content":{"body":"that seems to be a technical point","msgtype":"m.text"},"ts":1635412288484,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NyyDADk_e4Xsn1PzrnMD48d_KHRg3BuY1Ny2dAPld9k"},
{"content":{"body":"conceptually it's to link the immutable to a mutable thing, right?","msgtype":"m.text"},"ts":1635412299494,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SFYLpRGWCLKjRxWJY6TFixyGLpsqNxprIRv3ejKh0Ag"},
{"content":{"body":"they can be used to look up an object without any other facilities","msgtype":"m.text"},"ts":1635412309437,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$judi4jDUm0rSGIpsNKR6nKGPeIacAJYOiEwTg-u3qIk"},
{"content":{"body":"that sure does not sound like they are immutable to me","msgtype":"m.text"},"ts":1635412318890,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GLJltjfryyXDfDBck0Y-ItReng4EHPGCHCdFx0f_9rw"},
{"content":{"body":"like, they give access to mutability","msgtype":"m.text"},"ts":1635412328792,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-4_UiZJ6z4jkpm6zIg_HJLzzFpgYCp4ZnTH8nTG8yHQ"},
{"content":{"body":"they're immutable in the sense that `const` is constant","format":"org.matrix.custom.html","formatted_body":"they're immutable in the sense that <code>const</code> is constant","msgtype":"m.text"},"ts":1635412368852,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m9xsQ4lmOelswnK0HXFCZnAtZkztiBcFf4HWacXt20U"},
{"content":{"body":"There are a lot of use case that require expressing an immutable structure with mutable exit points","msgtype":"m.text"},"ts":1635412457291,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$0K3dpCtBEAEGtpX1DqqfE6QdbzF55OBxhl-hn9sAa6M"},
{"content":{"body":"They give an explicit signal when leaving the immutable part of the \"graph\"","msgtype":"m.text"},"ts":1635412460005,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$86T2UcGJqz1KKS08hdrE2CddRRh_Zud-6POywl2A3gM"},
{"content":{"body":"Mathieu Hofman: right, but just putting an object in the record is already an immutable structure with mutable exit points","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: right, but just putting an object in the record is already an immutable structure with mutable exit points","msgtype":"m.text"},"ts":1635412480038,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zHNPKRyndZOE9jGGllGOjrbwyYiFU9UDkxqarV90NsM"},
{"content":{"body":"how is \"and then this value is not a primitive\" not already an explicit signal?","msgtype":"m.text"},"ts":1635412495063,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk"},
{"content":{"body":"like, that is currently already how you distinguish between the mutable and the immutable stuff","msgtype":"m.text"},"ts":1635412520712,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mtn8eRWCwAjqrZzySt_DreXZVwHnMxGQiWUTd_rQxMw"},
{"content":{"body":" Is there a reason this can't be solved using `Symbol` and `Map`?","format":"org.matrix.custom.html","formatted_body":"Is there a reason this can't be solved using <code>Symbol</code> and <code>Map</code>?","msgtype":"m.text"},"ts":1635412529601,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dOyte7YHQ3HIdEy9Zech3Lmh5tqUiebGW8UkkNCFVQc"},
{"content":{"body":"well, weakmaps i guess","msgtype":"m.text"},"ts":1635412547957,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$El3FLA2Kai_OgIHXgp8m0alL1U8d6hjxSjwkTNbqyWY"},
{"content":{"body":"but i thought the R&T champions have gone back and forth on Box vs that approach","msgtype":"m.text"},"ts":1635412563054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$v1vVD8caIKOGP1d-zkQSOZLuzcNv1bh7VHDk7BAMvTU"},
{"content":{"body":"> <@bakkot:matrix.org> how is \"and then this value is not a primitive\" not already an explicit signal?\n\nbecause you can't put non primitives inside records and tuples.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>how is &quot;and then this value is not a primitive&quot; not already an explicit signal?</blockquote></mx-reply>because you can't put non primitives inside records and tuples.","m.relates_to":{"m.in_reply_to":{"event_id":"$9NVeb1lfD1Fhnj3ubcJ-W5BZi59JqgzKIRtx9GLtCgk"}},"msgtype":"m.text"},"ts":1635412564167,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$HXWSmhZVkJ8U-_ofdTaXeqlWMwULFWZTZj_jzwCTcvI"},
{"content":{"body":"i forget the outcome","msgtype":"m.text"},"ts":1635412568510,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K6UgxRJyI1-5ZBTNWtt0hs7tWWcHDhjSnG2TDlCloto"},
{"content":{"body":"Mathieu Hofman: yes, but that's a design choice they made, which they now seek to introduce a new exit point for via a new primitive whose sole purpose is to wrap an Object","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: yes, but that's a design choice they made, which they now seek to introduce a new exit point for via a new primitive whose sole purpose is to wrap an Object","msgtype":"m.text"},"ts":1635412590457,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3VDhBhMLS9-1eMtEbq4K2Cg2KyAGoVOw8HtwmTsy-9U"},
{"content":{"body":"seems... unnecessary, is how i read bakkot's point","format":"org.matrix.custom.html","formatted_body":"seems... unnecessary, is how i read <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s point","msgtype":"m.text"},"ts":1635412598678,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q4DHaSiP7Bsc3z3mkmjWgNa3skFYiaEY6H9n-O47rAo"},
{"content":{"body":"There is a long discussion on why implicitly allowing objects inside records/tuples is not feasible","msgtype":"m.text"},"ts":1635412622178,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$TowEyMiQDJcdoNhj2kXN-t5k_f0m4Ndzy-796TxI_Us"},
{"content":{"body":"main one being it's a footgun","msgtype":"m.text"},"ts":1635412640488,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$sXXmtXYMZzT0EFZ9NcDUP0FESQOMz0T37S2_fto3xfM"},
{"content":{"body":"why is this less a footgun?","msgtype":"m.text"},"ts":1635412659299,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BEfG_55uxZOg-sUWhDE4iJXhJMLnlUiy0RmcXDaSHyU"},
{"content":{"body":"because you need to explicitly wrap the object","msgtype":"m.text"},"ts":1635412680814,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$0THBj3e6I-dEdl289H4ZIHDJGGAOdC6vgvoDRL4MOV0"},
{"content":{"body":"you can't mistakenly put something mutable in your immutable structure","msgtype":"m.text"},"ts":1635412705474,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$C4CXHHnk5LOt3BwfoPpN695U86cYU6A04ht2UojRf5w"},
{"content":{"body":"but unless you're constructing all values inline, you could get a box already via a variable, no?","msgtype":"m.text"},"ts":1635412727093,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PniNg4fKJ5mAhWXTtrG5kf1uYpoYcBXdf__gzSa0F14"},
{"content":{"body":"`const tuple = #[getFoo()]`","format":"org.matrix.custom.html","formatted_body":"<code>const tuple = #[getFoo()]</code>","msgtype":"m.text"},"ts":1635412739271,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$7WHMRHipEzQK9Cw2I5XvAtJ_nNNRutlHpmzxNUXz8Ng"},
{"content":{"body":"`getFoo()` can return boxes, no?","format":"org.matrix.custom.html","formatted_body":"<code>getFoo()</code> can return boxes, no?","msgtype":"m.text"},"ts":1635412753428,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4WkEKTwd1frvDAA3wOOQlT417KpKBkxzURY1J3fZKlU"},
{"content":{"body":"it can, but you may not always know what it returns","msgtype":"m.text"},"ts":1635412772383,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ"},
{"content":{"body":"well yes, that's the point","msgtype":"m.text"},"ts":1635412779759,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RkiY-uDWNcCpDLwqAOXLCv-mBAQWQXTqlFYDE2kKWE0"},
{"content":{"body":"if it returns boxes, then `#[getFoo()]` is conceptually not deeply immutable","format":"org.matrix.custom.html","formatted_body":"if it returns boxes, then <code>#[getFoo()]</code> is conceptually not deeply immutable","msgtype":"m.text"},"ts":1635412793866,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cWyZ42tOoIBH3qptGM0by_Tj5bVm-l66XSxPssCzY28"},
{"content":{"body":"but you don't know if `getFoo()` returns boxes or not","format":"org.matrix.custom.html","formatted_body":"but you don't know if <code>getFoo()</code> returns boxes or not","msgtype":"m.text"},"ts":1635412802927,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ihm9uXOAaUNDk0iGHv-mzVvKPtGrMXwFaDE-0apZf8U"},
{"content":{"body":"so you don't know if `#[getFoo()]` is really deeply immutable without exit points or not","format":"org.matrix.custom.html","formatted_body":"so you don't know if <code>#[getFoo()]</code> is really deeply immutable without exit points or not","msgtype":"m.text"},"ts":1635412816544,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$h4HlZ4aD8KqEaRyMG0_30otcsHRrdGqZaWHBj8XZFc8"},
{"content":{"body":"The only way you get immutability is via a function call, like `ObjectPlaceholder.unwrap(myBox)`: it's a function call that returns a mutable thing","format":"org.matrix.custom.html","formatted_body":"The only way you get immutability is via a function call, like <code>ObjectPlaceholder.unwrap(myBox)</code>: it's a function call that returns a mutable thing","msgtype":"m.text"},"ts":1635412829902,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$yEke8ovWvJB32n0n8UN_gV5RAg5KeZ-eofUvk8TgIOU"},
{"content":{"body":"Exactly as if you would have a symbol representing an object, white a side symbol->Object map","msgtype":"m.text"},"ts":1635412842859,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$anL8jfKSlw2pFNhvNjQYaPZ-PBmKETQpVY5GgXyC7sg"},
{"content":{"body":" * Exactly as if you would have a symbol representing an object, white a side symbol->Object map","m.new_content":{"body":"Exactly as if you would have a symbol representing an object, white a side symbol->Object map","msgtype":"m.text"},"m.relates_to":{"event_id":"$anL8jfKSlw2pFNhvNjQYaPZ-PBmKETQpVY5GgXyC7sg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635412852896,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bqwRrFlAchEbEqDVpXTU8ldJAN64nY9HwWDM70akDqQ"},
{"content":{"body":"> <@mhofman:matrix.org> it can, but you may not always know what it returns\n\nwe cannot always know a function returning any type of thing, in that sense?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>it can, but you may not always know what it returns</blockquote></mx-reply>we cannot always know a function returning any type of thing, in that sense?","m.relates_to":{"m.in_reply_to":{"event_id":"$qC3cvHqIKA2mF6McT2miEfktXWT-ILmhBxBzHAphLrQ"}},"msgtype":"m.text"},"ts":1635412877925,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$7Q-taILuCS_Cgte_BXyNSEJ81zbHgIfdOa_T1dkY1cg"},
{"content":{"body":"boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a` #[type: 'user data', data: whatever]`","format":"org.matrix.custom.html","formatted_body":"boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a<code> #[type: 'user data', data: whatever]</code>","msgtype":"m.text"},"ts":1635412980404,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE"},
{"content":{"body":"i missed the use case","msgtype":"m.text"},"ts":1635413012139,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8"},
{"content":{"body":"is it like taint tracking?","msgtype":"m.text"},"ts":1635413017224,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FWkFmXgNCyN0tFzQ281u9lj34bw3UNRY9EskI28-pH4"},
{"content":{"body":"> <@bakkot:matrix.org> boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a` #[type: 'user data', data: whatever]`\n\nThey can be leveraged to build that thing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>boxes do not seem like a good fit for the thing justin is discussing? it seems like you would just want a<code> #[type: 'user data', data: whatever]</code></blockquote></mx-reply>They can be leveraged to build that thing","m.relates_to":{"m.in_reply_to":{"event_id":"$Z06voy694r_0bas-GMx1hC7hC7gRZHUCa8z7LKc5VdE"}},"msgtype":"m.text"},"ts":1635413097594,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$B_u_BLkxaUbm25Z8v5E415VH-g0IyxpmBxWeTRzC_8M"},
{"content":{"body":"I outlined it in the primitive issue","msgtype":"m.text"},"ts":1635413112304,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$tXPxqChMA1drJJTr-0lC6lk4uMFIUkH4OkhMyqvcPI0"},
{"content":{"body":"> <@shuyuguo:matrix.org> i missed the use case\n\nIt basically similar use case of marking exit points where value in the exit points can be any value (primitive or object)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i missed the use case</blockquote></mx-reply>It basically similar use case of marking exit points where value in the exit points can be any value (primitive or object)","m.relates_to":{"m.in_reply_to":{"event_id":"$02dzNq3ROe348A9iDw8O1csgySramHJvsrgBKKpHVZ8"}},"msgtype":"m.text"},"ts":1635413137483,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$CjAMrc2LYWXKwCrprFKeA0W8pXJDSghPcwH_GXMW7Po"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1635413154939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hJ-RUDRjrSpKEoMvqoCiGB2jy0FrtUeZ1WPMmfFA6yY"},
{"content":{"body":"and ObjectPlaceholder doesn't work for that only because it can't contain primitives","msgtype":"m.text"},"ts":1635413174319,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BvmMBxXREDOjZzF6HkNZMHziUSpE4ScrKe4-6CT7sa0"},
{"content":{"body":"https://github.com/tc39/proposal-record-tuple/issues/258#issuecomment-940639809","msgtype":"m.text"},"ts":1635413180983,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$hq-TJwAMLvN9iF_uc2ev23n_9wCxot5b7pqOnynelz4"},
{"content":{"body":"I'm annoyed that it's `ObjectPlaceholder`, but the reply in TCQ was to address why an explicit exit marking is valuable","format":"org.matrix.custom.html","formatted_body":"I'm annoyed that it's <code>ObjectPlaceholder</code>, but the reply in TCQ was to address why an explicit exit marking is valuable","msgtype":"m.text"},"ts":1635413221877,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$WEfHTyCZjNruJpQSB4-bfCyXe29X96tJ4Rnp4uOqxVI"},
{"content":{"body":"The primitive issue could be solved by another layer of object, do I understand that correct?","msgtype":"m.text"},"ts":1635413313168,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM"},
{"content":{"body":"I am still really confused by what boxes are for","msgtype":"m.text"},"ts":1635413321045,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZcJZzl8QNTd0RDdWmfEA8xCK_EgLSlB2Hljx1LBwb1U"},
{"content":{"body":"is there an explainer somewhere?","msgtype":"m.text"},"ts":1635413336717,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20"},
{"content":{"body":"> <@haxjs:matrix.org> The primitive issue could be solved by another layer of object, do I understand that correct?\n\nYes, or `#{ isObject: boolean, value: primitive | placeholder }`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>The primitive issue could be solved by another layer of object, do I understand that correct?</blockquote></mx-reply>Yes, or <code>#{ isObject: boolean, value: primitive | placeholder }</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$F7ojw_J4aawfVkvVYy1FXNWZYIsnxmtOEG0Rx_xYdNM"}},"msgtype":"m.text"},"ts":1635413345773,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RNJrfGzo8BMRB8cD-BXT15emLuja8qVeI-4e25Zs1J0"},
{"content":{"body":"specifically, the advantage of boxes vs just putting objects directly in the graph, and having \"it is not a primitive\" be the explicit exit point","msgtype":"m.text"},"ts":1635413389823,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw"},
{"content":{"body":"But there's no need for that?","msgtype":"m.text"},"ts":1635413441059,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$SCmsIbNB-XQk0n_DV0JUTO8nYhz0cUZtukYW5K_dGMU"},
{"content":{"body":"I havne't seen a justification for why we should prevent primitives directly in Box","msgtype":"m.text"},"ts":1635413460046,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho"},
{"content":{"body":"> <@bakkot:matrix.org> is there an explainer somewhere?\n\nWe have a short usage example at https://github.com/tc39/proposal-record-tuple#box (which uses `Box` as the name)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>is there an explainer somewhere?</blockquote></mx-reply>We have a short usage example at https://github.com/tc39/proposal-record-tuple#box (which uses <code>Box</code> as the name)","m.relates_to":{"m.in_reply_to":{"event_id":"$7JD6sGMfMaDnnpbkkof5JPih9pcxyYEEv8jQLL7RW20"}},"msgtype":"m.text"},"ts":1635413460852,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jTzWY8USz2Z1YdjqrTUg8BDWPIX8C31TxMYrQp688l4"},
{"content":{"body":"that does not explain the motivation over just putting objects directly in the record","msgtype":"m.text"},"ts":1635413493419,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA"},
{"content":{"body":"> <@bakkot:matrix.org> specifically, the advantage of boxes vs just putting objects directly in the graph, and having \"it is not a primitive\" be the explicit exit point\n\nI remember the author of scala.js prefer just putting objects :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>specifically, the advantage of boxes vs just putting objects directly in the graph, and having &quot;it is not a primitive&quot; be the explicit exit point</blockquote></mx-reply>I remember the author of scala.js prefer just putting objects :)","m.relates_to":{"m.in_reply_to":{"event_id":"$f1j5w-ycxQOEq0qnPxrr-D0k2Sm4XVsP84W2bx4nfGw"}},"msgtype":"m.text"},"ts":1635413522470,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$bd3NoE18cJdMhTxKyPFN9Px3BeMfA8vAo30uFDUd4dU"},
{"content":{"body":"> <@jridgewell:matrix.org> I havne't seen a justification for why we should prevent primitives directly in Box\n\nmaybe it looks more \"clear\" ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I havne&#39;t seen a justification for why we should prevent primitives directly in Box</blockquote></mx-reply>maybe it looks more &quot;clear&quot; ?","m.relates_to":{"m.in_reply_to":{"event_id":"$Xx5D7kL46mVGQ2flvl6ID5q1CaC4hW_s6XsVAQ7n_ho"}},"msgtype":"m.text"},"ts":1635413549707,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_nkdjphy-3HZLip0MiW5xqp2Wyh4at7owFMLp5Q_20E"},
{"content":{"body":"> <@bakkot:matrix.org> that does not explain the motivation over just putting objects directly in the record\n\nOk, I always interpret \"why we need placeholders\" as \"why just primitives isn't enough\" ðŸ˜…\n\nWe have https://github.com/tc39/proposal-record-tuple/issues/206 where we discussed about explicit/implicit boxing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>that does not explain the motivation over just putting objects directly in the record</blockquote></mx-reply><p>Ok, I always interpret &quot;why we need placeholders&quot; as &quot;why just primitives isn't enough&quot; ðŸ˜…</p>\n<p>We have https://github.com/tc39/proposal-record-tuple/issues/206 where we discussed about explicit/implicit boxing</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$JnybHS3d2EJFoRg8qzLBFsciQQcejwFzMws_eb2FaNA"}},"msgtype":"m.text"},"ts":1635413565504,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$WEcLX1DjheTdiSYXQSL7ijZIxCe8L5wNrEuTnH4AyiM"},
{"content":{"body":"nicolo-ribaudo: again, the question is \"why have boxes at all, vs just putting things in the graph directly\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: again, the question is &quot;why have boxes at all, vs just putting things in the graph directly&quot;","msgtype":"m.text"},"ts":1635413635950,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$k048ysQG-M-Izw-ZxqmW4PSEGpV3iMF2mYFPciaGfMk"},
{"content":{"body":"that issue presupposes the existence of boxes","msgtype":"m.text"},"ts":1635413642856,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RbnJl0stv_uKmmVdnt58KLYzf1itmYvjF1DCmdkqzkQ"},
{"content":{"body":"Could we split objectplaceholder/box into further proposal? Consdier it could be implemented by symbol as weakmap keys?","msgtype":"m.text"},"ts":1635413651473,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$lXrWbzpzWCkk_VIjqT2jLcYSd2-KuCultwZAlc5BCSk"},
{"content":{"body":"CompositeKeys for Maps is a key use case for Tuples, which i think a lot of people will want","msgtype":"m.text"},"ts":1635413711640,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$z2znj4SGeq-MP_R7Nn1e0J9SxqkPFqRh6YDPUSlPHm0"},
{"content":{"body":"So I don't think this is a niche use-case, to want objects in Tuples","msgtype":"m.text"},"ts":1635413723009,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4"},
{"content":{"body":"right, but again, my question is \"why not just put objects in tuples, instead of having boxes\"","msgtype":"m.text"},"ts":1635413742233,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU"},
{"content":{"body":"> <@bakkot:matrix.org> right, but again, my question is \"why not just put objects in tuples, instead of having boxes\"\n\ngood question. actually I also think maybe it's much fit for js? consider other similar languages also choose that way?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>right, but again, my question is &quot;why not just put objects in tuples, instead of having boxes&quot;</blockquote></mx-reply>good question. actually I also think maybe it's much fit for js? consider other similar languages also choose that way?","m.relates_to":{"m.in_reply_to":{"event_id":"$e1BVNCaQ0Bx4_x3P6w7O2W93RiF-96KIvqr7mmfbFqU"}},"msgtype":"m.text"},"ts":1635413795129,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$sv583a0LQTeVh2izH44W2KuzZ_w9fQhuF0aqM8dFo_E"},
{"content":{"body":"> <@aclaymore:matrix.org> So I don't think this is a niche use-case, to want objects in Tuples\n\nthis is probably the underlying question","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>So I don&#39;t think this is a niche use-case, to want objects in Tuples</blockquote></mx-reply>this is probably the underlying question","m.relates_to":{"m.in_reply_to":{"event_id":"$yQHzhx4eebSsld4TaNsUbZVDEEGpA-xg3tWMl0M-3R4"}},"msgtype":"m.text"},"ts":1635414076193,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Pbkt8eGCszSMTbTKdIFQ5clMHdjuCRniDzvofz-Fib0"},
{"content":{"body":"do the R&T champions think mutable exit points is common? if so, then why not bakkot's suggestion? if not, then why not symbols (technical problems notwithstanding)","format":"org.matrix.custom.html","formatted_body":"do the R&amp;T champions think mutable exit points is common? if so, then why not <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s suggestion? if not, then why not symbols (technical problems notwithstanding)","msgtype":"m.text"},"ts":1635414119209,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TUeorYwvNBVZ8DNTcTIqea3KZhTxA5U5fKvaosXMMvw"},
{"content":{"body":"so far i've heard one argument against \"why not bakkot's suggestion\" is the need for _primitive_ mutable exit points as well","format":"org.matrix.custom.html","formatted_body":"so far i've heard one argument against &quot;why not <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>'s suggestion&quot; is the need for <em>primitive</em> mutable exit points as well","msgtype":"m.text"},"ts":1635414171894,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$H2Vr7p3KpX6RKhPa6riCtX-F5ljW12G0rtNCv2JAL84"},
{"content":{"body":"but then again the current solution also doesn't admit that","msgtype":"m.text"},"ts":1635414181148,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$G9ZwK2YwM7EjUuys_rnNDN9Dlgb1DNxyymCIDe9Cmc8"},
{"content":{"body":"As I mentioned, there are a lot of issues with direct objects inside primitives. One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it. The other is the same security concern as how to \"dereference\" an ObjectPlaceholder. Existing code assumes that if something is a primitive, it doesn't contain object which represent authority. It would break a lot of deployed membranes and SES.","msgtype":"m.text"},"ts":1635414225069,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$YVJ297qqRdaa59R5lBkwp3QkiskyiysgCy3a_bReMCM"},
{"content":{"body":"Maybe we need two things: Tuple (which could include object directly) and PrimitiveTuple","msgtype":"m.text"},"ts":1635414232421,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$AU0Mx6wL9eraHmd5SKu034Urb2L0hFcn0d1oM-ZlY3E"},
{"content":{"body":"Mathieu Hofman: i remain baffled by the footgun argument","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: i remain baffled by the footgun argument","msgtype":"m.text"},"ts":1635414261542,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$D6ktShdTuZudQD4CI_u4IcK7tzIhkBF-b-05UYOwKJU"},
{"content":{"body":"if it's common, you're asking people to look up incantations to do what they want","msgtype":"m.text"},"ts":1635414270483,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ"},
{"content":{"body":"The other programming experience may not support footgun argument. Though JS may be have something special I don't know...","msgtype":"m.text"},"ts":1635414321854,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RPEnkgjS6l-2J8XmLhMqdWTvLOnSqBltJgEitkL72Bk"},
{"content":{"body":"> One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it\n\nBoxes don't really help that, since `#[foo()]` may or may not be a box and so may or may not be mutable. Also boxes are super complicated so it seems like there's at least as much possibility for footguns there\n\n> Existing code assumes that if something is a primitive, it doesn't contain object which represent authority.\n\nBut boxes _are_ primitives which contain objects; this argument confuses me","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>One was it's a footgun, and a user might mistakenly put mutable data where they didn't expect it</p>\n</blockquote>\n<p>Boxes don't really help that, since <code>#[foo()]</code> may or may not be a box and so may or may not be mutable. Also boxes are super complicated so it seems like there's at least as much possibility for footguns there</p>\n<blockquote>\n<p>Existing code assumes that if something is a primitive, it doesn't contain object which represent authority.</p>\n</blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n","msgtype":"m.text"},"ts":1635414339209,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_OTxuaC_ZjyZ9HPcJn5BRWgJ3-zx9qhZZBUxjqMcZT4"},
{"content":{"body":"> <@shuyuguo:matrix.org> if it's common, you're asking people to look up incantations to do what they want\n\nI'm not following","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>if it&#39;s common, you&#39;re asking people to look up incantations to do what they want</blockquote></mx-reply>I'm not following","m.relates_to":{"m.in_reply_to":{"event_id":"$k5jWodZ9lwrtOq4jhJo1EC4t7EDDf8Mwfm6f0LdjPyQ"}},"msgtype":"m.text"},"ts":1635414357502,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$b1wJ6ys2f-lNPJqev4FLzAXobCYp1uH7NYkENEtt8Ig"},
{"content":{"body":"Yeah, I remember the author of scala.js also point out some footgun of using Box in the issue.","msgtype":"m.text"},"ts":1635414393766,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$BXM2FRFlxs1D9HP3NOvBIpAWtlMYnoXr-NBkC2V_Kbc"},
{"content":{"body":"if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i'm not too convinced that you've avoided any footguns","msgtype":"m.text"},"ts":1635414412216,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg"},
{"content":{"body":"So I am also not sure whether box could really solve the \"footguns\" of object in tuples.","msgtype":"m.text"},"ts":1635414439029,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$WKUJO3pB3jn6NC4y0Ribp58K_sX8jOv4uJ65Gd1QF1Q"},
{"content":{"body":"+ what's already been said about not knowing the return type of `foo()`","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>what's already been said about not knowing the return type of <code>foo()</code></li>\n</ul>\n","msgtype":"m.text"},"ts":1635414452113,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Sg9XCzxVNGTZm_6XY8XPTRagfa62BWQ5Qm4TnHPBZYw"},
{"content":{"body":"> But boxes _are_ primitives which contain objects; this argument confuses me\n\nBut you need access to the `ObjectPlaceholder` to get to the content, so they are not a risk on their own","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n</blockquote>\n<p>But you need access to the <code>ObjectPlaceholder</code> to get to the content, so they are not a risk on their own</p>\n","msgtype":"m.text"},"ts":1635414461712,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM"},
{"content":{"body":"lol why does element convert `+` to a single bullet point list","format":"org.matrix.custom.html","formatted_body":"lol why does element convert <code>+</code> to a single bullet point list","msgtype":"m.text"},"ts":1635414463853,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$W_yGWaDKmoHzttivjpLWD-DQld3sl_jOP25KrAzRuJs"},
{"content":{"body":"> <@mhofman:matrix.org> > But boxes _are_ primitives which contain objects; this argument confuses me\n> \n> But you need access to the `ObjectPlaceholder` to get to the content, so they are not a risk on their own\n\neventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><blockquote>\n<p>But boxes <em>are</em> primitives which contain objects; this argument confuses me</p>\n</blockquote>\n<p>But you need access to the <code>ObjectPlaceholder</code> to get to the content, so they are not a risk on their own</p>\n</blockquote></mx-reply>eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.","m.relates_to":{"m.in_reply_to":{"event_id":"$u_CuCtW9TsDmK9ztyrVS1RXk_4CLtTIGHHntZucB3GM"}},"msgtype":"m.text"},"ts":1635414505795,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA"},
{"content":{"body":"> <@shuyuguo:matrix.org> if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i'm not too convinced that you've avoided any footguns\n\nAt least they've thought of it and the incantation is an explicit marker in the code","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>if wanting objects-as-mutable-exit-points-in-records is a common use case, i assure you people will do what they want to do, and just look up the incantation to do that. in that light, i&#39;m not too convinced that you&#39;ve avoided any footguns</blockquote></mx-reply>At least they've thought of it and the incantation is an explicit marker in the code","m.relates_to":{"m.in_reply_to":{"event_id":"$CDYsCPjSkMPzuhcXsEXsB4o1WbGi9rOCYet6O9Un8pg"}},"msgtype":"m.text"},"ts":1635414520706,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$jGCnYvx9Gn1719gsbqTYYtxexTsE7Jqvs-eBXj6X4wc"},
{"content":{"body":"https://github.com/rbuckton/proposal-regexp-features/issues/2","msgtype":"m.text"},"ts":1635414581849,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$46H3EGlAMl7PK_blvnj65URY5X2ugfhU7vMpUjwlu34"},
{"content":{"body":"Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global weakmap registry\"","msgtype":"m.text"},"ts":1635414585861,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0"},
{"content":{"body":" * Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"","m.new_content":{"body":"Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635414659063,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$czz3tS3N7d_9haQ9ppiQbfZt5Y3-JXwCeq-9CrnA2d8"},
{"content":{"body":"i would still like to know the \"how common a use case do you expect mutable exit points to be\" question","msgtype":"m.text"},"ts":1635414679219,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"},
{"content":{"body":"> <@haxjs:matrix.org> eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.\n\nI did not see any footgun in that example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>eventually developer would like to write some conditional logic and it could cause footgun in some way... as the author of scal.js shows.</blockquote></mx-reply>I did not see any footgun in that example","m.relates_to":{"m.in_reply_to":{"event_id":"$QPIqRCjbrh-AWGWVo9kDLwCmUOCVGrQLT2qtogszbfA"}},"msgtype":"m.text"},"ts":1635414742000,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y"},
{"content":{"body":"> <@shuyuguo:matrix.org> i would still like to know the \"how common a use case do you expect mutable exit points to be\" question\n\nWe initially didn't consider it, but after some users come up with the question \"why only primitives?\" (https://github.com/tc39/proposal-record-tuple/issues/31) we have started talking about it and found that users would love to be able to store objects because many things are not representable as immutable (for example, everything that comes from the dom)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i would still like to know the &quot;how common a use case do you expect mutable exit points to be&quot; question</blockquote></mx-reply>We initially didn't consider it, but after some users come up with the question &quot;why only primitives?&quot; (https://github.com/tc39/proposal-record-tuple/issues/31) we have started talking about it and found that users would love to be able to store objects because many things are not representable as immutable (for example, everything that comes from the dom)","m.relates_to":{"m.in_reply_to":{"event_id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"}},"msgtype":"m.text"},"ts":1635414813871,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$sIkRRLnJyb__NQko75Odnxxc2mzOC4jJBTKKiKH4tXQ"},
{"content":{"body":"> <@mhofman:matrix.org> I did not see any footgun in that example\n\nActually in the thread there are some code example to deal with box conditionally and have bugs, which seems a signal of footgun.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I did not see any footgun in that example</blockquote></mx-reply>Actually in the thread there are some code example to deal with box conditionally and have bugs, which seems a signal of footgun.","m.relates_to":{"m.in_reply_to":{"event_id":"$eEcLyqWjoLA9B0qDtWk2blwPl3OZipHXYEWodAoyd3Y"}},"msgtype":"m.text"},"ts":1635414835663,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$_Q7h6gq7yCyI1t4oTzkPP8Mked4281gaTn8sGWe4sEs"},
{"content":{"body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA"}}},"ts":1635414852170,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$beWRmmYvQranxWV9s_fC40bGKuUvFdOo9FxEhjSjI_0"},
{"content":{"body":"> <@shuyuguo:matrix.org> i would still like to know the \"how common a use case do you expect mutable exit points to be\" question\n\n * Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$YjCyIXvJzCj0bUQ62yW7mfy7Pv7ydrj2Nm_EtijD9yA?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i would still like to know the \"how common a use case do you expect mutable exit points to be\" question</blockquote></mx-reply> * Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","m.new_content":{"body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","format":"org.matrix.custom.html","formatted_body":"Agoric has discovered a strong need for records/tuples in order to make sure a Proxy can't be used to interleave code while traversing an apparently inert (deeply frozen) object. All these records do need to contain exit points (proxies/references to remote objects)","msgtype":"m.text"},"m.relates_to":{"event_id":"$beWRmmYvQranxWV9s_fC40bGKuUvFdOo9FxEhjSjI_0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635414866382,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$l3RFct48Tz_OsHZBUhRdJ_jh6dX5rTAZPFYX_WoB32g"},
{"content":{"body":"> <@mhofman:matrix.org> Basically ObjectPlaceholder is a standardized \"Symbol as weakmap key + global (per realm) weakmap registry\"\n\nSeeing it explained this way would be illuminating.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>Basically ObjectPlaceholder is a standardized &quot;Symbol as weakmap key + global (per realm) weakmap registry&quot;</blockquote></mx-reply>Seeing it explained this way would be illuminating.","m.relates_to":{"m.in_reply_to":{"event_id":"$GvXmpYNaXvEiIsMk2NCkm6FSB0pPZrUsVVqSdaPWRi0"}},"msgtype":"m.text"},"ts":1635414868295,"senderName":"erights","senderId":"@erights:matrix.org","id":"$cRvG5vIK9bSFaACAakITXivvcwDLX7P59f4RzkbZrvA"},
{"content":{"body":"okay, thanks for the anecdotes","msgtype":"m.text"},"ts":1635414955527,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5bhwoTwzhT4ZL66S_ueKHlg0xtoYJq3v--VmjO-3V2o"},
{"content":{"body":"I have extremely strong reservations about making this be per-realm just for agoric's use case.","msgtype":"m.text"},"ts":1635415018885,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"},
{"content":{"body":"> <@bakkot:matrix.org> I have extremely strong reservations about making this be per-realm just for agoric's use case.\n\nThis is not just for agoric's use case, this is for any cross realm membranes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have extremely strong reservations about making this be per-realm just for agoric&#39;s use case.</blockquote></mx-reply>This is not just for agoric's use case, this is for any cross realm membranes","m.relates_to":{"m.in_reply_to":{"event_id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"}},"msgtype":"m.text"},"ts":1635415048768,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$oSBKQpSbNq1dTTtrYRukFqWhvkyqYx7pEEji_t9Y0Ds"},
{"content":{"body":"shu: the original need for boxes came up from framework authors, the ability to reference functions (handlers) in R&T seems essential if they want to be able to use R&T instead of objects","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: the original need for boxes came up from framework authors, the ability to reference functions (handlers) in R&amp;T seems essential if they want to be able to use R&amp;T instead of objects","msgtype":"m.text"},"ts":1635415063721,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$HF8MXQ8I4FV7SfkIXp_fLv5HACobx7NCept1z9ztziU"},
{"content":{"body":"same with dom elements","msgtype":"m.text"},"ts":1635415071476,"senderName":"Robin Ricard","senderId":"@rricard:mozilla.org","id":"$0MR5ud_9g05i4Uf7pRoyLpjoJ8ow11bfpM5la8OnOFY"},
{"content":{"body":"> <@bakkot:matrix.org> I have extremely strong reservations about making this be per-realm just for agoric's use case.\n\nit's ses use cases if i understand correctly...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have extremely strong reservations about making this be per-realm just for agoric&#39;s use case.</blockquote></mx-reply>it's ses use cases if i understand correctly...","m.relates_to":{"m.in_reply_to":{"event_id":"$44PifhroIUd1uuAt8S_OBPIIRcZm8_9ASHV2mMbqLZw"}},"msgtype":"m.text"},"ts":1635415073048,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$ccS8ZNgmoOT6dSPak3rBI6q9Hl1U3Ks3PDFCRgHEd10"},
{"content":{"body":"ok, same comment but with \"just for existing cross realm membranes\"","msgtype":"m.text"},"ts":1635415073579,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DacB8rzwlGaw_-ycy04nwgqi1328LdD8r5wHdt9dJjk"},
{"content":{"body":"actually for agoric, it's not a problem if an ObjectPlaceholder can only be created explicitely","msgtype":"m.text"},"ts":1635415085877,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$4A-hX6w-Mr6IlZ6bI4K3Z5llO8lvRK9X2mhbVDE69Xc"},
{"content":{"body":"so we will end 35 minutes early in the morning?","msgtype":"m.text"},"ts":1635415090756,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$IAn1JjYpLLAmSOQvZQhN1s07b-0Vt0xl-Och_iA-VUM"},
{"content":{"body":"+1 to bakkot ","format":"org.matrix.custom.html","formatted_body":"+1 to <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>","msgtype":"m.text"},"ts":1635415097379,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CW5VskIrZoZuFTOmVYAwTSefimmG9ihPfPIVkUkxdpg"},
{"content":{"body":"and by \"framework authors\", is it react, or multiple frameworks?","msgtype":"m.text"},"ts":1635415119498,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PRlON_fsQyqbjZRClMDyjnsLOBuMdLzcqd1g4YDuAi4"},
{"content":{"body":"react and many react-like frameworks I guess ðŸ˜…","msgtype":"m.text"},"ts":1635415188479,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$jS04Benwvc5dnm4hdKlomfgV9Z6toxt7eSeCi7-hwXs"}
]