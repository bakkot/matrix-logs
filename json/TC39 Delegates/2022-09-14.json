[
{"content":{"body":"Sorry, off-topic, but could we do a quick test if showing my slides works?","msgtype":"m.text","org.matrix.msc1767.text":"Sorry, off-topic, but could we do a quick test if showing my slides works?"},"ts":1663116720408,"senderName":"Axel Rauschmayer (self-employed)","senderId":"@rauschma:matrix.org","id":"$AvYiYy4RLZ91NaVi43HvDA5_1ln020bX4QlGhtWRBPo"},
{"content":{"body":"Is the video conference live?","msgtype":"m.text","org.matrix.msc1767.text":"Is the video conference live?"},"ts":1663116948880,"senderName":"Robert Pamely","senderId":"@rpamely:matrix.org","id":"$bkTWMagiyV379Hc0S-zBtEwL0UjnwyoNcRRsutTNkN0"},
{"content":{"body":"I see waiting for host","msgtype":"m.text","org.matrix.msc1767.text":"I see waiting for host"},"ts":1663116960815,"senderName":"Robert Pamely","senderId":"@rpamely:matrix.org","id":"$6HOrfv1N2u3u8RhH3kG4wspdc_sI5LmL85dqKgxPJ3k"},
{"content":{"body":"it is not started yet","msgtype":"m.text","org.matrix.msc1767.text":"it is not started yet"},"ts":1663116967453,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$nXJ4xl_jfTh3kpdkRlqiyUBmJv2hdYxqHOh0MCYE1vs"},
{"content":{"body":"Me too. We need a host, yes.","msgtype":"m.text","org.matrix.msc1767.text":"Me too. We need a host, yes."},"ts":1663116968860,"senderName":"Axel Rauschmayer (self-employed)","senderId":"@rauschma:matrix.org","id":"$SckTCqM7geybdUPwnlKM41Q4INfeI4B0lIJAietwfm8"},
{"content":{"body":"waiting for an igalian to do so :)","msgtype":"m.text","org.matrix.msc1767.text":"waiting for an igalian to do so :)"},"ts":1663116973793,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$kppxGmMtLs_PpGehJQzIENpjQRkL7hTQRYoA0oj0oMA"},
{"content":{"body":"ok thanks Brian","msgtype":"m.text","org.matrix.msc1767.text":"ok thanks Brian"},"ts":1663116975185,"senderName":"Robert Pamely","senderId":"@rpamely:matrix.org","id":"$d6ePgdnEJJoreXd1X7UOPdlrNi4_y6uNnHFRklpwn2E"},
{"content":{"body":"Hehe","msgtype":"m.text","org.matrix.msc1767.text":"Hehe"},"ts":1663116985301,"senderName":"Axel Rauschmayer (self-employed)","senderId":"@rauschma:matrix.org","id":"$vKQm8qgDyhDgTACLOj_D1uQsjOA4Wvs7cFU73yP1ukI"},
{"content":{"body":"> <@rauschma:matrix.org> Sorry, off-topic, but could we do a quick test if showing my slides works?\n\nvery on-topic! :D top tip: sometimes have to restart the browser if only just given permission to share screen for the first time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AvYiYy4RLZ91NaVi43HvDA5_1ln020bX4QlGhtWRBPo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rauschma:matrix.org\">@rauschma:matrix.org</a><br>Sorry, off-topic, but could we do a quick test if showing my slides works?</blockquote></mx-reply>very on-topic! :D top tip: sometimes have to restart the browser if only just given permission to share screen for the first time","m.relates_to":{"m.in_reply_to":{"event_id":"$AvYiYy4RLZ91NaVi43HvDA5_1ln020bX4QlGhtWRBPo"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rauschma:matrix.org> Sorry, off-topic, but could we do a quick test if showing my slides works?\n\nvery on-topic! :D top tip: sometimes have to restart the browser if only just given permission to share screen for the first time","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AvYiYy4RLZ91NaVi43HvDA5_1ln020bX4QlGhtWRBPo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rauschma:matrix.org\">@rauschma:matrix.org</a><br>Sorry, off-topic, but could we do a quick test if showing my slides works?</blockquote></mx-reply>very on-topic! :D top tip: sometimes have to restart the browser if only just given permission to share screen for the first time","mimetype":"text/html"}]},"ts":1663117156969,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$0Cus1acFqdWhiB5AGeWhSvO6Bf9C9LLs103nzdvjbRg"},
{"content":{"body":"Yeah, already did that (the screen sharing background helps with testing).","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, already did that (the screen sharing background helps with testing)."},"ts":1663117194648,"senderName":"Axel Rauschmayer (self-employed)","senderId":"@rauschma:matrix.org","id":"$hlKJcVJl4KlldcNlwWN06QM9AVqWz2OBANrz2hwDHyE"},
{"content":{"body":"I guess you can try screen sharing now?","msgtype":"m.text"},"ts":1663117299974,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$n1zVSPKELHGvhoSha2CMUvX8v3Uco0nH6uXznD15LYU"},
{"content":{"body":"Are we ready to get started?","msgtype":"m.text"},"ts":1663117775378,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3EtZbQo_6MUtH1lylHCiL9AO4I8g178PZHYbswBptbY"},
{"content":{"body":"haven't we already started?","msgtype":"m.text","org.matrix.msc1767.text":"haven't we already started?"},"ts":1663117793949,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8dk7Ial0POYkKg2-6PuAiEyaIDFG-xffQ3PnRqhvJXc"},
{"content":{"body":"we have in fact already started","msgtype":"m.text","org.matrix.msc1767.text":"we have in fact already started"},"ts":1663117812621,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jRNEjIvH3aTQp1-kch_ulB7Ut2zK8Q1Vm8RemIIRMwo"},
{"content":{"body":"axel has been presenting for like 5 minutes","msgtype":"m.text","org.matrix.msc1767.text":"axel has been presenting for like 5 minutes"},"ts":1663117814245,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$LOp1IxY3SjuafVF1HaShth7u1iofO3pK7HgfSVEtYwU"},
{"content":{"body":"Oh! A problem on my end","msgtype":"m.text"},"ts":1663118050513,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QMk_l9fZPrXs-w-gCErTjiu5jhsEUREGOY_NMGt8ul8"},
{"content":{"body":"what is meant by \"a wrapping API\" here?","msgtype":"m.text","org.matrix.msc1767.text":"what is meant by \"a wrapping API\" here?"},"ts":1663118141141,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$iBB5AnDOq0vhp_7CvmCl77FthQeT-d48-yPU7PNv-Qw"},
{"content":{"body":"isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","format":"org.matrix.custom.html","formatted_body":"isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/plain"},{"body":"isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/html"}]},"ts":1663118189962,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v_VJHHNpdsyR2_LUGUtdueGQzI2a0J3x4ypWk8nyCxE"},
{"content":{"body":"something like Jquery","msgtype":"m.text","org.matrix.msc1767.text":"something like Jquery"},"ts":1663118190022,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sxegiA-sTy798tlFnY10h3HkXeKDWfj3oVfPGSRWpfw"},
{"content":{"body":" * isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","format":"org.matrix.custom.html","formatted_body":" * isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","m.new_content":{"body":"isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","format":"org.matrix.custom.html","formatted_body":"isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/plain"},{"body":"isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$v_VJHHNpdsyR2_LUGUtdueGQzI2a0J3x4ypWk8nyCxE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * isn't `Iterable.from()` already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/plain"},{"body":" * isn't <code>Iterable.from()</code> already a wrapping API? it's just that most builtin iterators are/will be pre-wrapped","mimetype":"text/html"}]},"ts":1663118205948,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AItZbVD2Ckn90TFsAwqCmzivc3wwgJrrvEQD29U8uiE"},
{"content":{"body":"where you do `$(document.querySelectorAll(...))` and then get a new thing that has a bunch of helper functions","format":"org.matrix.custom.html","formatted_body":"where you do <code>$(document.querySelectorAll(...))</code> and then get a new thing that has a bunch of helper functions","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"where you do `$(document.querySelectorAll(...))` and then get a new thing that has a bunch of helper functions","mimetype":"text/plain"},{"body":"where you do <code>$(document.querySelectorAll(...))</code> and then get a new thing that has a bunch of helper functions","mimetype":"text/html"}]},"ts":1663118215701,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Nr1OldnyTeijepdyuLJ9onMjENeP9avNixlyUARl4UY"},
{"content":{"body":"how is that different than what we do?","msgtype":"m.text","org.matrix.msc1767.text":"how is that different than what we do?"},"ts":1663118256034,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$GmDFy_qOHOTMGPJNwjK90VOau4F1rQbvKeQxqbymIso"},
{"content":{"body":"you don't need to wrap most of the time","msgtype":"m.text","org.matrix.msc1767.text":"you don't need to wrap most of the time"},"ts":1663118270536,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3nwQSvKxs1cXCglU67AfTPoEdlDOJpNOzP92mdaokTI"},
{"content":{"body":"A real example of \"wrapping API\"","msgtype":"m.text","org.matrix.msc1767.text":"A real example of \"wrapping API\""},"ts":1663118271132,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$bhRThqdoQfCKl_8IwvgZdG3eJVswC8RnfqsFFxKmfp0"},
{"content":{"body":"Emitter proposal","msgtype":"m.text","org.matrix.msc1767.text":"Emitter proposal"},"ts":1663118277528,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$TA2uARKPu07p_8-p07qdDZtEYykdqho9qz5yPEC5bOg"},
{"content":{"body":"https://github.com/tc39/proposal-emitter","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-emitter"},"ts":1663118286464,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$PqHKbs3IhOhpm-mdXdkFjz11a6uMTyRPfzPlhRr7afg"},
{"content":{"body":"like if you do `map.values().filter()` there's no explicit wrapper","format":"org.matrix.custom.html","formatted_body":"like if you do <code>map.values().filter()</code> there's no explicit wrapper","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like if you do `map.values().filter()` there's no explicit wrapper","mimetype":"text/plain"},{"body":"like if you do <code>map.values().filter()</code> there's no explicit wrapper","mimetype":"text/html"}]},"ts":1663118287751,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BD6NzkFlXIVOXgqUkTb8TJ6cRGOgLALmWij0uhX9pvo"},
{"content":{"body":"right, builtins are \"pre-wrapped\"","msgtype":"m.text","org.matrix.msc1767.text":"right, builtins are \"pre-wrapped\""},"ts":1663118296238,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jmzS0rTugu9FuaL09Muly5q_C2zUp2vQ3QotvTpFmZ8"},
{"content":{"body":"(or some better way to describe it)","msgtype":"m.text","org.matrix.msc1767.text":"(or some better way to describe it)"},"ts":1663118301717,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iZPEGTvgWlVKLNB3H0l0JHCPZ9p3lT7HaLcAAoDcyYQ"},
{"content":{"body":"yeah, that's kinda my mental model","msgtype":"m.text","org.matrix.msc1767.text":"yeah, that's kinda my mental model"},"ts":1663118306372,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_B3TKsAeqMQljbobXaSPzyDTiOR_ULqattN0ZqpT8iM"},
{"content":{"body":"Emitter proposal also use function style.","msgtype":"m.text","org.matrix.msc1767.text":"Emitter proposal also use function style."},"ts":1663118342724,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$NIilqzg_gP1zdmHhQiQ5zZnTqWo2T9ecUJTIDo22U1c"},
{"content":{"body":"```js\nconst { on, map, filter, run } = Emitter\n\nrun(\n  on(document, 'click')\n, filter(ev => ev.target.tagName === 'BUTTON')\n, map(ev => ({ x: ev.clientX, y: ev.clientY }))\n, coords => console.log(coords)\n)\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const { on, map, filter, run } = Emitter\n\nrun(\n  on(document, 'click')\n, filter(ev =&gt; ev.target.tagName === 'BUTTON')\n, map(ev =&gt; ({ x: ev.clientX, y: ev.clientY }))\n, coords =&gt; console.log(coords)\n)\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst { on, map, filter, run } = Emitter\n\nrun(\n  on(document, 'click')\n, filter(ev => ev.target.tagName === 'BUTTON')\n, map(ev => ({ x: ev.clientX, y: ev.clientY }))\n, coords => console.log(coords)\n)\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const { on, map, filter, run } = Emitter\n\nrun(\n  on(document, 'click')\n, filter(ev =&gt; ev.target.tagName === 'BUTTON')\n, map(ev =&gt; ({ x: ev.clientX, y: ev.clientY }))\n, coords =&gt; console.log(coords)\n)\n</code></pre>\n","mimetype":"text/html"}]},"ts":1663118386254,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$In-UxLrzLUjWgsuUHEXC6j9b-Wk7IJ_LTQaFhHh6Sd8"},
{"content":{"body":"that's applicative style, no?","msgtype":"m.text","org.matrix.msc1767.text":"that's applicative style, no?"},"ts":1663118400822,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lGkhzQvHSX_Ogq9vE3BuzgxfX2ladxW6E4m0JmOOcS8"},
{"content":{"body":"Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/html"}]},"ts":1663118504112,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9kBktQ21qkGRso0BVTUUFSmJ6rLXXfbgorhlYkN8v9E"},
{"content":{"body":" * Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","m.new_content":{"body":"Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$9kBktQ21qkGRso0BVTUUFSmJ6rLXXfbgorhlYkN8v9E","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Axel Rauschmayer (self-employed): re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: re builtin modules, pending that proposal advancing, short answer is no, not in the cards (shu's queue item covers this also)","mimetype":"text/html"}]},"ts":1663118520434,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ai5yygwqpqShLw000l5LZcqfYMaZr3ExBijfeI2E-rE"},
{"content":{"body":"it's iterable ONCE, which is the important point","msgtype":"m.text","org.matrix.msc1767.text":"it's iterable ONCE, which is the important point"},"ts":1663118604999,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$o5qHnnzWOcON9jkah_0y2WDa5fDyq1w-MONuYxMP-u8"},
{"content":{"body":"iterators are kind of lying by implementing Symbol.iterator","msgtype":"m.text","org.matrix.msc1767.text":"iterators are kind of lying by implementing Symbol.iterator"},"ts":1663118668590,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$91sB9D-ANcjAevegPU2FuYVrwOchnVHtaH72jypxmCU"},
{"content":{"body":"snek: wait, you are in favor of using iterable helper functions as Axel proposed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: wait, you are in favor of using iterable helper functions as Axel proposed?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"snek: wait, you are in favor of using iterable helper functions as Axel proposed?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>: wait, you are in favor of using iterable helper functions as Axel proposed?","mimetype":"text/html"}]},"ts":1663118725274,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SgqMLsqcS2jcqIFw1jIdho4mxnrIHvjLaiWM7PgAvqg"},
{"content":{"body":"shu: no I think they were saying iterator helpers as functions (conditional on pipe operator)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: no I think they were saying iterator helpers as functions (conditional on pipe operator)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: no I think they were saying iterator helpers as functions (conditional on pipe operator)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: no I think they were saying iterator helpers as functions (conditional on pipe operator)","mimetype":"text/html"}]},"ts":1663118768988,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$IlHDQXYN0lSiQqNeZjgxkFzI3DSOORFjvyObrz4-bYg"},
{"content":{"body":"we need a better word than \"functions\" here","msgtype":"m.text","org.matrix.msc1767.text":"we need a better word than \"functions\" here"},"ts":1663118786246,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6C0M0t8NDXe84T8WELlqDPP7yyyBnGedKSRq4elfZeo"},
{"content":{"body":"non-this-value-users","msgtype":"m.text","org.matrix.msc1767.text":"non-this-value-users"},"ts":1663118806547,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XNsz_R_eOmmaVHwrkPPpoxPvb7Z0gRvaVbpMzubgbrk"},
{"content":{"body":"\"standalone functions\" vs \"methods\" imo","msgtype":"m.text","org.matrix.msc1767.text":"\"standalone functions\" vs \"methods\" imo"},"ts":1663118829894,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qcHVxHpkXyGJskeVNW3v0jajXZ2veI6VPp0N_vc21iI"},
{"content":{"body":"yes that's good","msgtype":"m.text","org.matrix.msc1767.text":"yes that's good"},"ts":1663118961016,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TuJOuh8G6eaosHsKYh1GdZqlOvc-a2YEI3VPJCEsjVI"},
{"content":{"body":"Axel Rauschmayer (self-employed): for clarity; consensus typically means \"some explicit yes's and no explicit no's\" and does not imply or require universal enthusiasm :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: for clarity; consensus typically means &quot;some explicit yes's and no explicit no's&quot; and does not imply or require universal enthusiasm :-)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Axel Rauschmayer (self-employed): for clarity; consensus typically means \"some explicit yes's and no explicit no's\" and does not imply or require universal enthusiasm :-)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a>: for clarity; consensus typically means &quot;some explicit yes's and no explicit no's&quot; and does not imply or require universal enthusiasm :-)","mimetype":"text/html"}]},"ts":1663119065767,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LkknzBMbtDb4fHCAjQHdTXtMdytyTU5jDHnW3Klrqw8"},
{"content":{"body":"I'm primarily in favor of the standalone function approach because its more flexible and is composable with third-party packages without the need for prototype patching (which is obviously bad). Yes that puts more of a dependency on pipeline, but I think pipeline can advance once the topic variable issue is addressed.","msgtype":"m.text","org.matrix.msc1767.text":"I'm primarily in favor of the standalone function approach because its more flexible and is composable with third-party packages without the need for prototype patching (which is obviously bad). Yes that puts more of a dependency on pipeline, but I think pipeline can advance once the topic variable issue is addressed."},"ts":1663119132296,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$o1jkJ7fREvQZ2f3OL6zO6mFNp5Zo_K6mqPkM4AdtoBo"},
{"content":{"body":"to be clear i was concerned about wasting work on consensus, not work on spec text ","msgtype":"m.text","org.matrix.msc1767.text":"to be clear i was concerned about wasting work on consensus, not work on spec text "},"ts":1663119273333,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$MmnwK8k-J6MV0ZdPoCQP-X_uMDhiQqnXb9fiFBznqqc"},
{"content":{"body":"oh god, a superclass of all collection types would be as bad an idea as Object.prototype already is","msgtype":"m.text","org.matrix.msc1767.text":"oh god, a superclass of all collection types would be as bad an idea as Object.prototype already is"},"ts":1663119359961,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WqE4f3cc0Bgyj4mGJU-ZS4F9ICc4a7tbfwvKvlyIcws"},
{"content":{"body":"haha oh no please no","msgtype":"m.text","org.matrix.msc1767.text":"haha oh no please no"},"ts":1663119392117,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fQ_mjT3b_s1bopdSUWjsFPhktj48iECcCqcpTjO9hKg"},
{"content":{"body":"`class TCPConnection extends Collection`","format":"org.matrix.custom.html","formatted_body":"<code>class TCPConnection extends Collection</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`class TCPConnection extends Collection`","mimetype":"text/plain"},{"body":"<code>class TCPConnection extends Collection</code>","mimetype":"text/html"}]},"ts":1663119397721,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$PEs9_RHgBwG_hoVJXrEnOlFLWP5uS5EzWDkcMp2B_8c"},
{"content":{"body":"we could just call it `FragileBaseClass`","format":"org.matrix.custom.html","formatted_body":"we could just call it <code>FragileBaseClass</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"we could just call it `FragileBaseClass`","mimetype":"text/plain"},{"body":"we could just call it <code>FragileBaseClass</code>","mimetype":"text/html"}]},"ts":1663119409655,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Uo3DIHMCqfEbzUtEU8Zp2xCVOyvkIDUeduoq-WoSvYY"},
{"content":{"body":"oh wait sorry wrong channel","msgtype":"m.text","org.matrix.msc1767.text":"oh wait sorry wrong channel"},"ts":1663119412134,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f-Rz94oGV8LWjQQkyYa5aEdSJInhL7ukDj54VIV42Rw"},
{"content":{"body":"why do so many people have this same bad idea?","msgtype":"m.text","org.matrix.msc1767.text":"why do so many people have this same bad idea?"},"ts":1663119418591,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fDNpiIUNAB4jsWkBaYTUyR8jNwYHDZ9uKXwIyZafhGE"},
{"content":{"body":"ecosystem can/does have chaining-style via wrapping. And given the limited number of helper methods I'm still more likely to reach for 3rd-party.","msgtype":"m.text","org.matrix.msc1767.text":"ecosystem can/does have chaining-style via wrapping. And given the limited number of helper methods I'm still more likely to reach for 3rd-party."},"ts":1663119440824,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BbfIlnHFETZ7G2iwfGbXngsm_qi8n1XCRIxkPz44BoY"},
{"content":{"body":"rbuckton: we have plans to add a lot more","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: we have plans to add a lot more","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"rbuckton: we have plans to add a lot more","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: we have plans to add a lot more","mimetype":"text/html"}]},"ts":1663119525171,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xXKKIyHvLwG-AftS_EeAyXzq19irLm3g7RMqCyYLJrQ"},
{"content":{"body":"remember the current proposal is what we consider \"minimal\"","msgtype":"m.text","org.matrix.msc1767.text":"remember the current proposal is what we consider \"minimal\""},"ts":1663119534091,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uqtUR82SXDHL4MryHGkwOisTXYB7496AI43qAd3vLr0"},
{"content":{"body":"so many more","msgtype":"m.text","org.matrix.msc1767.text":"so many more"},"ts":1663119549708,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MDctoPrgvIERJo0xdc-jnavM9ytezQ9TpEOqDzX0Mac"},
{"content":{"body":"okay not *that* many","format":"org.matrix.custom.html","formatted_body":"okay not <em>that</em> many","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"okay not *that* many","mimetype":"text/plain"},{"body":"okay not <em>that</em> many","mimetype":"text/html"}]},"ts":1663119559966,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$P2XJs21qPrczF6UvrAY_ond-NFlrBHGbVw-hIEKHwk8"},
{"content":{"body":"i closed a lot of issues/prs for more methods","msgtype":"m.text","org.matrix.msc1767.text":"i closed a lot of issues/prs for more methods"},"ts":1663119562349,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$lNsadKWXbgRJhyM1O1TYc3oRHRqvzewuOroxJqaIy5o"},
{"content":{"body":"like a dozen?","msgtype":"m.text","org.matrix.msc1767.text":"like a dozen?"},"ts":1663119562885,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mjeKbMmAZnOuNX8vqFtiYQG77Z7Sh12GG-_J0TUL8Bk"},
{"content":{"body":" * i closed a lot of issues/prs for more methods","m.new_content":{"body":"i closed a lot of issues/prs for more methods","msgtype":"m.text","org.matrix.msc1767.text":"i closed a lot of issues/prs for more methods"},"m.relates_to":{"event_id":"$lNsadKWXbgRJhyM1O1TYc3oRHRqvzewuOroxJqaIy5o","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * i closed a lot of issues/prs for more methods"},"ts":1663119571645,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$c_Q_aMpa7ZwOlYWaPLi3tpL3vX_rzNu79LdArxbpWC0"},
{"content":{"body":"https://github.com/tc39/proposal-iterator-helpers/issues?q=is%3Aissue+is%3Aclosed+label%3A%22good+follow-on+proposal%22","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-iterator-helpers/issues?q=is%3Aissue+is%3Aclosed+label%3A%22good+follow-on+proposal%22"},"ts":1663119620064,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U2s8QpX5tHAjRGI7HTXTBvDkDVK0G7JPeekJk4EqWH8"},
{"content":{"body":"But until you do, and as long as there is an iterator helper I need that isn't in that list, I'm still bouncing between methods and functions. _Until we have pipeline_, but if we have pipeline I'd still rather have functions.","format":"org.matrix.custom.html","formatted_body":"But until you do, and as long as there is an iterator helper I need that isn't in that list, I'm still bouncing between methods and functions. <em>Until we have pipeline</em>, but if we have pipeline I'd still rather have functions.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But until you do, and as long as there is an iterator helper I need that isn't in that list, I'm still bouncing between methods and functions. _Until we have pipeline_, but if we have pipeline I'd still rather have functions.","mimetype":"text/plain"},{"body":"But until you do, and as long as there is an iterator helper I need that isn't in that list, I'm still bouncing between methods and functions. <em>Until we have pipeline</em>, but if we have pipeline I'd still rather have functions.","mimetype":"text/html"}]},"ts":1663119632669,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TH_8e3lO2t0q70_Q6j7bcemO8Kpj9jKYwHpt7WRrNcQ"},
{"content":{"body":"we have 15 min underflow during this session, we might want to just let this topic go over by 15 min?","msgtype":"m.text","org.matrix.msc1767.text":"we have 15 min underflow during this session, we might want to just let this topic go over by 15 min?"},"ts":1663119758160,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$McvutAMFUA1RpRquDUDggD_-SDmCEfECJbMMpd48nxk"},
{"content":{"body":"especially given that this presenter is an invited expert, it would be nice to be more lenient with the timebox","msgtype":"m.text","org.matrix.msc1767.text":"especially given that this presenter is an invited expert, it would be nice to be more lenient with the timebox"},"ts":1663119788051,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rUd-ph2LVGxCJT0EDIj4SeZn1bqZ3BMzaZR0JYCrjrI"},
{"content":{"body":"I don't think these functions would be global, correct Axel Rauschmayer (self-employed) ?","format":"org.matrix.custom.html","formatted_body":"I don't think these functions would be global, correct <a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a> ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't think these functions would be global, correct Axel Rauschmayer (self-employed) ?","mimetype":"text/plain"},{"body":"I don't think these functions would be global, correct <a href=\"https://matrix.to/#/@rauschma:matrix.org\">Axel Rauschmayer (self-employed)</a> ?","mimetype":"text/html"}]},"ts":1663119810136,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$cvf5-pe3ii3hHIfLYYheoInjFOb4g8ERvioHDl66b-0"},
{"content":{"body":"I'm assuming they would be in a global namespace, like Math","msgtype":"m.text","org.matrix.msc1767.text":"I'm assuming they would be in a global namespace, like Math"},"ts":1663119821854,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$pfTlLUqSsk-AjBIgWvmXW-LD2qpdFs_6xbSo-EdKG08"},
{"content":{"body":"what would we call it tho - \"Iterable\" isn't a \"thing\", it's a trait","msgtype":"m.text","org.matrix.msc1767.text":"what would we call it tho - \"Iterable\" isn't a \"thing\", it's a trait"},"ts":1663119839089,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$l4PSRoCYlBElpIwCbyXY64-OILQ5zRYWYdTUbqifztg"},
{"content":{"body":"I have all of these as functions (`@esfx/iter-fn` and `@esfx/async-iter-fn`), and wrapping via a `Query` class (`@esfx/iter-query` and `@esfx/async-iter-query`). All of these are iterable (multi-shot if source returns a new itererator each time, single shot if the source returns the same iterator each time).","format":"org.matrix.custom.html","formatted_body":"I have all of these as functions (<code>@esfx/iter-fn</code> and <code>@esfx/async-iter-fn</code>), and wrapping via a <code>Query</code> class (<code>@esfx/iter-query</code> and <code>@esfx/async-iter-query</code>). All of these are iterable (multi-shot if source returns a new itererator each time, single shot if the source returns the same iterator each time).","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have all of these as functions (`@esfx/iter-fn` and `@esfx/async-iter-fn`), and wrapping via a `Query` class (`@esfx/iter-query` and `@esfx/async-iter-query`). All of these are iterable (multi-shot if source returns a new itererator each time, single shot if the source returns the same iterator each time).","mimetype":"text/plain"},{"body":"I have all of these as functions (<code>@esfx/iter-fn</code> and <code>@esfx/async-iter-fn</code>), and wrapping via a <code>Query</code> class (<code>@esfx/iter-query</code> and <code>@esfx/async-iter-query</code>). All of these are iterable (multi-shot if source returns a new itererator each time, single shot if the source returns the same iterator each time).","mimetype":"text/html"}]},"ts":1663119875280,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$A2G1KCEaUF2PY3oLcBdIAnopnS0fZjkHIv41JcE5AG8"},
{"content":{"body":"to be fair, iterators aren't a thing either, but the helpers proposal makes a *wrapped* iterator A Thing, via `Iterator.from`","format":"org.matrix.custom.html","formatted_body":"to be fair, iterators aren't a thing either, but the helpers proposal makes a <em>wrapped</em> iterator A Thing, via <code>Iterator.from</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"to be fair, iterators aren't a thing either, but the helpers proposal makes a *wrapped* iterator A Thing, via `Iterator.from`","mimetype":"text/plain"},{"body":"to be fair, iterators aren't a thing either, but the helpers proposal makes a <em>wrapped</em> iterator A Thing, via <code>Iterator.from</code>","mimetype":"text/html"}]},"ts":1663119877135,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$f_mwUOI1nMkfNWH-SOM4otMUXqU6wVV7P0nfFNSU-QE"},
{"content":{"body":"That's a great point, but is there a concern with there being a global for the trait?","msgtype":"m.text","org.matrix.msc1767.text":"That's a great point, but is there a concern with there being a global for the trait?"},"ts":1663119885237,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$A_ErNphxIEdVXPm525ijF-CAzYCY2cC38SAnvEi_pxc"},
{"content":{"body":"it's just weird","msgtype":"m.text","org.matrix.msc1767.text":"it's just weird"},"ts":1663119894448,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$74bDyQ9oZejLUcNp461ysObGaD5HrejHQ1B9AnfZCGg"},
{"content":{"body":"because wrapping iterators makes sense; wrapping iterables i'm not sure does","msgtype":"m.text","org.matrix.msc1767.text":"because wrapping iterators makes sense; wrapping iterables i'm not sure does"},"ts":1663119905113,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1yov-UCHCCDo5pyIAAJDIRsLCeaG8FFd3eaRK_UORkA"},
{"content":{"body":"`Iterable.from(set)` wouldn't be a Set, for example","format":"org.matrix.custom.html","formatted_body":"<code>Iterable.from(set)</code> wouldn't be a Set, for example","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Iterable.from(set)` wouldn't be a Set, for example","mimetype":"text/plain"},{"body":"<code>Iterable.from(set)</code> wouldn't be a Set, for example","mimetype":"text/html"}]},"ts":1663119915832,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uAzsuZk49DQPl5ewKKsd7TsLHJJ2FG5Nr5HH-4GnZ2M"},
{"content":{"body":" * `Iterable.from(set)` wouldn't be a Set, for example","format":"org.matrix.custom.html","formatted_body":" * <code>Iterable.from(set)</code> wouldn't be a Set, for example","m.new_content":{"body":"`Iterable.from(set)` wouldn't be a Set, for example","format":"org.matrix.custom.html","formatted_body":"<code>Iterable.from(set)</code> wouldn't be a Set, for example","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Iterable.from(set)` wouldn't be a Set, for example","mimetype":"text/plain"},{"body":"<code>Iterable.from(set)</code> wouldn't be a Set, for example","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$uAzsuZk49DQPl5ewKKsd7TsLHJJ2FG5Nr5HH-4GnZ2M","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `Iterable.from(set)` wouldn't be a Set, for example","mimetype":"text/plain"},{"body":" * <code>Iterable.from(set)</code> wouldn't be a Set, for example","mimetype":"text/html"}]},"ts":1663119918602,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sldHlOy83BxZAHEkFPX9THZt7LBrPptACTbVMtXFzvw"},
{"content":{"body":"And if you do `Iterator.from(x).map()`, `Query.from(x).map()` is pretty much the same.","format":"org.matrix.custom.html","formatted_body":"And if you do <code>Iterator.from(x).map()</code>, <code>Query.from(x).map()</code> is pretty much the same.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And if you do `Iterator.from(x).map()`, `Query.from(x).map()` is pretty much the same.","mimetype":"text/plain"},{"body":"And if you do <code>Iterator.from(x).map()</code>, <code>Query.from(x).map()</code> is pretty much the same.","mimetype":"text/html"}]},"ts":1663119920752,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$AK6AgaCUVpcbR1ywF9kSe5UMtAeyBwj644IhkUaMsWY"},
{"content":{"body":"I agree, but that is kind of the way that Rust traits get compiled down","msgtype":"m.text","org.matrix.msc1767.text":"I agree, but that is kind of the way that Rust traits get compiled down"},"ts":1663119927677,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$aF6927ABkdM9z_fv8ytKiqzq_Gs1YF6tRw8BHuEtOF8"},
{"content":{"body":"C#'s IEnumerable is reusable (I believe), but that has super weird performance implications","msgtype":"m.text","org.matrix.msc1767.text":"C#'s IEnumerable is reusable (I believe), but that has super weird performance implications"},"ts":1663119981104,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qaH1qHQDqfTWcoI3SDde5uswLWq5uww9VIcbgg0wFJ4"},
{"content":{"body":" * C#'s IEnumerable is reusable (I believe), but that has super weird performance implications","m.new_content":{"body":"C#'s IEnumerable is reusable (I believe), but that has super weird performance implications","msgtype":"m.text","org.matrix.msc1767.text":"C#'s IEnumerable is reusable (I believe), but that has super weird performance implications"},"m.relates_to":{"event_id":"$qaH1qHQDqfTWcoI3SDde5uswLWq5uww9VIcbgg0wFJ4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * C#'s IEnumerable is reusable (I believe), but that has super weird performance implications"},"ts":1663119990756,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WnJdIGIUmuPSRmwHyU4YTx8h-5lxgHPmohUowzQKFBU"},
{"content":{"body":"No, it's an Iterable, like the name of the namespace - not that class or type, but a type that implements that trait","msgtype":"m.text","org.matrix.msc1767.text":"No, it's an Iterable, like the name of the namespace - not that class or type, but a type that implements that trait"},"ts":1663119992913,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$T0LheEemu3kUbW_uXjINXTIjjTxilLAAb44nPM7RhAM"},
{"content":{"body":"JS doesn't have a type system like that tho","msgtype":"m.text","org.matrix.msc1767.text":"JS doesn't have a type system like that tho"},"ts":1663120013363,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BbIR6nTVXsIsVmEFsGjiMTAViHOq-jbFLj_lY7Et4Vs"},
{"content":{"body":"It would be strange for functions in Iterable namespace to return a Set","msgtype":"m.text","org.matrix.msc1767.text":"It would be strange for functions in Iterable namespace to return a Set"},"ts":1663120023613,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$daiTspu2UTU0m-RJP4ARXPFDlBLLah_EKpBlHv_77Ro"},
{"content":{"body":"i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make `for..of` reusable, you wrap it in a function that you call multiple times.","format":"org.matrix.custom.html","formatted_body":"i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make <code>for..of</code> reusable, you wrap it in a function that you call multiple times.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make `for..of` reusable, you wrap it in a function that you call multiple times.","mimetype":"text/plain"},{"body":"i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make <code>for..of</code> reusable, you wrap it in a function that you call multiple times.","mimetype":"text/html"}]},"ts":1663120030928,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$JaP9zIR-zZllkXwoWK3dIZupx_cfZCJIHTCtjyTOVy0"},
{"content":{"body":"it would also be strange for them to return things that are not reusable","msgtype":"m.text","org.matrix.msc1767.text":"it would also be strange for them to return things that are not reusable"},"ts":1663120037612,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rLek7Zfrm5SolOh8TXPz6Solci6IRGSZND6nSYZDSCk"},
{"content":{"body":"I wish this proposal hadn't conflated using the function style with the change to iterables; using functions is a reasonable request, but operating on iterables is not","msgtype":"m.text","org.matrix.msc1767.text":"I wish this proposal hadn't conflated using the function style with the change to iterables; using functions is a reasonable request, but operating on iterables is not"},"ts":1663120041983,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-wSAdJqbHy5c7hc0v2V6iqs9TbcQh58Q3AxMfrP4tFc"},
{"content":{"body":"> <@devsnek:matrix.org> i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make `for..of` reusable, you wrap it in a function that you call multiple times.\n\nnow the `for..of` is not relevant itself, you could be manually consuming an iterator or you could be using a generator or whatever, you just end up with a nice abstraction boundary of a function. this was also a big point with `Number.range` if anyone remembers that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JaP9zIR-zZllkXwoWK3dIZupx_cfZCJIHTCtjyTOVy0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make <code>for..of</code> reusable, you wrap it in a function that you call multiple times.</blockquote></mx-reply>now the <code>for..of</code> is not relevant itself, you could be manually consuming an iterator or you could be using a generator or whatever, you just end up with a nice abstraction boundary of a function. this was also a big point with <code>Number.range</code> if anyone remembers that.","m.relates_to":{"m.in_reply_to":{"event_id":"$JaP9zIR-zZllkXwoWK3dIZupx_cfZCJIHTCtjyTOVy0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@devsnek:matrix.org> i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make `for..of` reusable, you wrap it in a function that you call multiple times.\n\nnow the `for..of` is not relevant itself, you could be manually consuming an iterator or you could be using a generator or whatever, you just end up with a nice abstraction boundary of a function. this was also a big point with `Number.range` if anyone remembers that.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JaP9zIR-zZllkXwoWK3dIZupx_cfZCJIHTCtjyTOVy0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i was going to mention this on the queue but how we explained reusability in the past is via functions. for example how do you make <code>for..of</code> reusable, you wrap it in a function that you call multiple times.</blockquote></mx-reply>now the <code>for..of</code> is not relevant itself, you could be manually consuming an iterator or you could be using a generator or whatever, you just end up with a nice abstraction boundary of a function. this was also a big point with <code>Number.range</code> if anyone remembers that.","mimetype":"text/html"}]},"ts":1663120093207,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$7MBKtunf_2QkhuOScmIPkMSXBNxBLY0xJPysWL4Uu8w"},
{"content":{"body":"you could extend iterator.prototype and have `FancyIterator.from(thing).fancyMethod()` etc","format":"org.matrix.custom.html","formatted_body":"you could extend iterator.prototype and have <code>FancyIterator.from(thing).fancyMethod()</code> etc","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you could extend iterator.prototype and have `FancyIterator.from(thing).fancyMethod()` etc","mimetype":"text/plain"},{"body":"you could extend iterator.prototype and have <code>FancyIterator.from(thing).fancyMethod()</code> etc","mimetype":"text/html"}]},"ts":1663120093510,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TAVVaZxl54lg7kgu0VoMOBZU2WqCIowVna2JAIRM110"},
{"content":{"body":"seems fine","msgtype":"m.text","org.matrix.msc1767.text":"seems fine"},"ts":1663120094750,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5XZm0cGpqSTf7TBFkjurzXbRFdOV5za8B_KzXQbAkRg"},
{"content":{"body":"re shu 's queue item - `function filter(iterable, filterer) { return Iterator.from(iterable[Symbol.iterator]()).filter(filterer); }` i think?","format":"org.matrix.custom.html","formatted_body":"re <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> 's queue item - <code>function filter(iterable, filterer) { return Iterator.from(iterable[Symbol.iterator]()).filter(filterer); }</code> i think?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"re shu 's queue item - `function filter(iterable, filterer) { return Iterator.from(iterable[Symbol.iterator]()).filter(filterer); }` i think?","mimetype":"text/plain"},{"body":"re <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> 's queue item - <code>function filter(iterable, filterer) { return Iterator.from(iterable[Symbol.iterator]()).filter(filterer); }</code> i think?","mimetype":"text/html"}]},"ts":1663120101723,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Y-xS40woVIeJ88EKg6syQ-LJ40iw25l7iej82wcvbWo"},
{"content":{"body":"I agree with that Michael Ficarra .  I wish static methods or namespaced sets of functions are a better approach - and much better when we get pipes","format":"org.matrix.custom.html","formatted_body":"I agree with that <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> .  I wish static methods or namespaced sets of functions are a better approach - and much better when we get pipes","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I agree with that Michael Ficarra .  I wish static methods or namespaced sets of functions are a better approach - and much better when we get pipes","mimetype":"text/plain"},{"body":"I agree with that <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> .  I wish static methods or namespaced sets of functions are a better approach - and much better when we get pipes","mimetype":"text/html"}]},"ts":1663120113434,"senderName":"Anthony Bullard","senderId":"@anthonybullard:matrix.org","id":"$R3fZyU-VpV7xSwMJvnxCVsqZq2Fw747BTQ2WiZwpyks"},
{"content":{"body":"I could imagine a `Query.use(...fns)` that returns something that mixes in a bunch of functions as methods that can then be used for chaining, i.e.:\n\n```js\n// built-in \nQuery.from(ar).map()// filter(), etc.\n\nconst MyQuery = Query.use(groupBy, join, groupJoin);\nMyQuery.from(ar).groupBy() // join(), etc.\n```","format":"org.matrix.custom.html","formatted_body":"<p>I could imagine a <code>Query.use(...fns)</code> that returns something that mixes in a bunch of functions as methods that can then be used for chaining, i.e.:</p>\n<pre><code class=\"language-js\">// built-in \nQuery.from(ar).map()// filter(), etc.\n\nconst MyQuery = Query.use(groupBy, join, groupJoin);\nMyQuery.from(ar).groupBy() // join(), etc.\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I could imagine a `Query.use(...fns)` that returns something that mixes in a bunch of functions as methods that can then be used for chaining, i.e.:\n\n```js\n// built-in \nQuery.from(ar).map()// filter(), etc.\n\nconst MyQuery = Query.use(groupBy, join, groupJoin);\nMyQuery.from(ar).groupBy() // join(), etc.\n```","mimetype":"text/plain"},{"body":"<p>I could imagine a <code>Query.use(...fns)</code> that returns something that mixes in a bunch of functions as methods that can then be used for chaining, i.e.:</p>\n<pre><code class=\"language-js\">// built-in \nQuery.from(ar).map()// filter(), etc.\n\nconst MyQuery = Query.use(groupBy, join, groupJoin);\nMyQuery.from(ar).groupBy() // join(), etc.\n</code></pre>\n","mimetype":"text/html"}]},"ts":1663120124729,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DK5hqRhD2c0OnMoGYfFhOYer4yLJe-qiKtqMHUxr1Lg"},
{"content":{"body":"but also, the language has had built-in `Array.prototype.map` forever while underscore had `_.groupBy` or whatever, and that was fine; the ecosystem things don't necessarily need to look like built-in things","format":"org.matrix.custom.html","formatted_body":"but also, the language has had built-in <code>Array.prototype.map</code> forever while underscore had <code>_.groupBy</code> or whatever, and that was fine; the ecosystem things don't necessarily need to look like built-in things","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but also, the language has had built-in `Array.prototype.map` forever while underscore had `_.groupBy` or whatever, and that was fine; the ecosystem things don't necessarily need to look like built-in things","mimetype":"text/plain"},{"body":"but also, the language has had built-in <code>Array.prototype.map</code> forever while underscore had <code>_.groupBy</code> or whatever, and that was fine; the ecosystem things don't necessarily need to look like built-in things","mimetype":"text/html"}]},"ts":1663120146016,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fis-63V4mU3OHdixQyIPWifETdvx68WrX48Bv3E6IPY"},
{"content":{"body":"(to shu's point)","msgtype":"m.text","org.matrix.msc1767.text":"(to shu's point)"},"ts":1663120149102,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N-hq27TCKtVSQ5OGtY3U-NbKfwEtc2u8C6gBy5Oq0QU"}
]