[
{"content":{"body":"Draft Schedule is up on the Reflector: https://github.com/tc39/Reflector/issues/545","m.mentions":{},"msgtype":"m.text"},"ts":1733151579008,"senderName":"ryzokuken 🇷🇸","senderId":"@usharma:igalia.com","id":"$6WE-IOVQ5ZS-bXsMSLmm-FYCOnRkc-Hu-H-2YaLXqAw"},
{"content":{"body":"The meeting begins in 1 minute!!!","m.mentions":{},"msgtype":"m.text"},"ts":1733158709533,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$RNAveXcHyfVp-bNdrc8ZOWE_tfVtkCCwDICqI6skEVk"},
{"content":{"body":"FYI we still don't have a TCQ link","msgtype":"m.text"},"ts":1733158849545,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$W0K11StZ6mpFy-1KWGDETUr0CnvS-3Q6RHE-uTcYfnE"},
{"content":{"body":"If Google meet is stuck on \"Getting ready... You'll be able to join in just a moment\", is it a problem on my side?","m.mentions":{},"msgtype":"m.text"},"ts":1733159003929,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk"},
{"content":{"body":"https://tcq.app/meeting/RKti","m.mentions":{},"msgtype":"m.text"},"ts":1733159007659,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t3BRxREA4PLHjU0Be8_zM2F-BRQ1EAqJvPYPlsjsjIA"},
{"content":{"body":"probably, there's a bunch of us in it","m.mentions":{},"m.relates_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk","is_falling_back":true,"m.in_reply_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733159019836,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$A1fiGRjvF96pQLigJ_lFtGvgZDRLQmP2OfhcTe5ZUyA"},
{"content":{"body":"Ok thanks, time to restart everything","m.mentions":{},"m.relates_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk","is_falling_back":true,"m.in_reply_to":{"event_id":"$A1fiGRjvF96pQLigJ_lFtGvgZDRLQmP2OfhcTe5ZUyA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733159050051,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$A-2wI8ycdIleSW5gNqZI4whhC8OS3R6B2Wqn_HH9zE0"},
{"content":{"body":"Chairs, last minute change. It seems like I will be the one presenting the TG4 status report","m.mentions":{},"msgtype":"m.text"},"ts":1733159568157,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1c4QanLmCV-9m7Rzo11v_JkaT3QlmadAfyfWfwEW6Rw"},
{"content":{"body":"I like Samina’s idea to have a liaison from TC39 to IETF, analogous to our close relationship with W3C and Unicode. Is anyone interested in playing this role?","msgtype":"m.text"},"ts":1733161201142,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WgnXYMdeU_uc71q7t-7lBraFKBfAfgRzZQQG_bv3tW8"},
{"content":{"body":"In the past, I think 2021, Mathew Miller was the liaison contact from  tc39","m.mentions":{},"msgtype":"m.text"},"ts":1733161532045,"senderName":"saminahusain","senderId":"@saminahusain:matrix.org","id":"$LEM-bI1ubwiFmyLuJ2z7IGxqgsMI4lvUkEhfh_wQPWU"},
{"content":{"body":"sorry, I forgot to add to the agenda constraints that I'm not available the first hour today","m.mentions":{},"msgtype":"m.text"},"ts":1733161794455,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xkLGVGVbvDC4gPtjt9E2x98V830vjAYIEl1J1ZSmeS0"},
{"content":{"body":"hope we can get to my iterator closing topic after that","m.mentions":{},"msgtype":"m.text"},"ts":1733161819099,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DJ48y_lDU3jE8XOT6ZRKfrWjNKiTv4N4w0BSe0aaF0E"},
{"content":{"body":"Did Chris change which diff he's showing?","m.mentions":{},"msgtype":"m.text"},"ts":1733162057645,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$AwdeBtsIQLVMzbFZ7RvsZ-EosOcj6ROI2mNTvSjEyUA"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1733162086548,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$m69ssTGvD1W71MdvC36HEckqb6XV-B9D3KXlCDO-PZU"},
{"content":{"body":"whoever is doing notes right now, please refer to https://github.com/tc39/notes/blob/main/delegates.txt for abbreviations, don't just make something up","msgtype":"m.text"},"ts":1733162255768,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qasNQE8axIpt_an-mUxu9G6UNdQZjNIgpwSsf5GttmA"},
{"content":{"body":"@eemeli:mozilla.org please add a link to the slides in the notes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli</a> please add a link to the slides in the notes","msgtype":"m.text"},"ts":1733163332849,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA"},
{"content":{"body":"I always assumed the motivation on this proposal was about ergonomics and not really about performance","m.mentions":{},"msgtype":"m.text"},"ts":1733163750844,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$TfMs_ifguFqfq9KxdVLToWgyDtfs2v8v2Ni3NASyEhI"},
{"content":{"body":" * I always assumed the motivation for this proposal was about ergonomics and not really about performance","m.mentions":{},"m.new_content":{"body":"I always assumed the motivation for this proposal was about ergonomics and not really about performance","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$TfMs_ifguFqfq9KxdVLToWgyDtfs2v8v2Ni3NASyEhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733163757172,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SVD0HFTxO4xWfN87yx4YaHYw3pFO3iFinEmplSik4GM"},
{"content":{"body":"> <@michaelficarra:matrix.org> @eemeli:mozilla.org please add a link to the slides in the notes\n\nThere were no slides. The presented material was the readme of the proposal repo.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli</a> please add a link to the slides in the notes</blockquote></mx-reply>There were no slides. The presented material was the readme of the proposal repo.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA"}},"msgtype":"m.text"},"ts":1733164056120,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$cEyAmrq4qaiLNrB90laJpTaWcCbOF13Rq5zfckobdRI"},
{"content":{"body":"https://github.com/eemeli/proposal-intl-currency-display-choices","m.mentions":{},"msgtype":"m.text"},"ts":1733164106775,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$kvGs0rKSIIbFyd4U0A5ND98HlX4qtWtcKHuEJpyWI0s"},
{"content":{"body":"We don't throw when you mutate a Map while iterating. I'd almost rather `getOrInsertComputed` just overwrites the key, whether it was set or deleted during the callback. If you want full locking, you can implement it yourself?","format":"org.matrix.custom.html","formatted_body":"We don't throw when you mutate a Map while iterating. I'd almost rather <code>getOrInsertComputed</code> just overwrites the key, whether it was set or deleted during the callback. If you want full locking, you can implement it yourself?","m.mentions":{},"msgtype":"m.text"},"ts":1733164191544,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DhKB3A2A-Q3kx9RzE2eiNgf1TQH-Au86svqvU-L6vAk"},
{"content":{"body":"rbuckton: that IS my understanding of the non-throwing approach","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: that IS my understanding of the non-throwing approach","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1733164210744,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lCTTDujNV74bIgy3qTBczWoTd4rWYdeTlVBCMrzKLIs"},
{"content":{"body":"is it not?","m.mentions":{},"msgtype":"m.text"},"ts":1733164211704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tvKHmc7e6ZDhgoeYaKo4xAmFLMnAJ_YMzBTVgFKjdh4"},
{"content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people ","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733164301742,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY"},
{"content":{"body":" * the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":" * <p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"m.new_content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164315553,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mX76qdPp8l8RLYPl2WYSNFWECQgkqiXJFhw_pnkJiKo"},
{"content":{"body":"I dislike these names but I have no constructive suggestion","m.mentions":{},"msgtype":"m.text"},"ts":1733164325426,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ijMwVoXHVDTmUvar5RuCMLqkDxe_7-tfkv_mY3rDrLs"},
{"content":{"body":"I personally prefer `getOrAdd`/`getOrCreate`, but I've been too busy over the last few weeks to comment on the issue :/","format":"org.matrix.custom.html","formatted_body":"I personally prefer <code>getOrAdd</code>/<code>getOrCreate</code>, but I've been too busy over the last few weeks to comment on the issue :/","m.mentions":{},"msgtype":"m.text"},"ts":1733164369647,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gfHUYNyzhQ5WxWN1icAF3xz_Lk8Y-bQ1qAum8qLSIfE"},
{"content":{"body":"bakkot: option 3 would basically be \"actual upsert\"?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"?","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1733164382763,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PaWJjQKLpkM3_0lSa6yGiX_yJsL9JHdqQRwPrpPOAjY"},
{"content":{"body":" * bakkot: option 3 would basically be \"actual upsert\"? or is that something else","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"? or is that something else","m.mentions":{},"m.new_content":{"body":"bakkot: option 3 would basically be \"actual upsert\"? or is that something else","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"? or is that something else","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PaWJjQKLpkM3_0lSa6yGiX_yJsL9JHdqQRwPrpPOAjY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164396343,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GfmJMOX6yceBxGR04E8gBNZeTcONtYZAFE55S-OPwSU"},
{"content":{"body":"no","m.mentions":{},"msgtype":"m.text"},"ts":1733164405049,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q6Km4pWBzLuPl9qSopUtS91h5Iwm1-tJQTvQ3vAy1kw"},
{"content":{"body":"we're accounting for mutation during the callback","m.mentions":{},"msgtype":"m.text"},"ts":1733164416429,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aGNP485KfvEU87W0mTSdeoIF-TRkmflHW_8fsGcahAs"},
{"content":{"body":"not passing new values to the callback","m.mentions":{},"msgtype":"m.text"},"ts":1733164420165,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mEM6uyztYxS5_1o4_fUDtVNMDJ4fYwtTEJHsgub76Bw"},
{"content":{"body":"ah k","m.mentions":{},"msgtype":"m.text"},"ts":1733164433660,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1jLc9QEGp-0jKQF7uqREaJca9j25FgxiKykZSt7NumM"},
{"content":{"body":" * the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":" * <p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"m.new_content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164514071,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E7OKUcMmEBNaPyxTKIK3ymHvM3QmxX6OSMvugnosuPU"},
{"content":{"body":"Regarding the naming, neither of these methods are actually an \"upsert\", which normally consists of either \"updating an existing value\" or \"inserting a new value\", hence the portmanteau of \"update\" and \"insert\". ","m.mentions":{},"msgtype":"m.text"},"ts":1733164543363,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$3UQJTnvcHeR4jZDWt4bUOtQjihdcxrJ_qZ0cROehQdY"},
{"content":{"body":"University of Bergen's students have written a tutorial on `upsert` proposal prototype implementations in SpiderMonkey and V8. The current preliminary (rough) draft is available here: https://github.com/bldl/emplace-spidermonkey . It currently lacks the description of the implementation in V8; this will be added soon. ","format":"org.matrix.custom.html","formatted_body":"University of Bergen's students have written a tutorial on <code>upsert</code> proposal prototype implementations in SpiderMonkey and V8. The current preliminary (rough) draft is available here: https://github.com/bldl/emplace-spidermonkey . It currently lacks the description of the implementation in V8; this will be added soon.","m.mentions":{},"msgtype":"m.text"},"ts":1733165112149,"senderName":"Mikhail Barash","senderId":"@mikbar-uib:matrix.org","id":"$zM18s8YzwExxgI2kR76vZejKeT05vhoxDAow8NVbJY0"},
{"content":{"body":"https://github.com/tc39/proposal-is-error/issues/7","m.mentions":{},"msgtype":"m.text"},"ts":1733165250897,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PbZMBKGQdnuy0THfCgThI4-WrVl4-2oXGDg9i4jwc3w"},
{"content":{"body":"chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up above the other items on the agenda","m.mentions":{},"msgtype":"m.text"},"ts":1733165272013,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-RwldF1TA5JKkPFG4knlzpqI5qBXdFdpVwQDB7wbxh0"},
{"content":{"body":" * chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up with the already-presented items on the agenda","m.mentions":{},"m.new_content":{"body":"chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up with the already-presented items on the agenda","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$-RwldF1TA5JKkPFG4knlzpqI5qBXdFdpVwQDB7wbxh0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733165287265,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$710q9eSm3UaxPD7n4vc6CnN35RmVk4eVUni2D8mvDD4"},
{"content":{"body":"ljharb: reminder to record your summary/conclusion","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: reminder to record your summary/conclusion","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1733166004429,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$35myskPiGqRWG3lXithpRqInzs7hz8Dv9ieu7vLJNOQ"},
{"content":{"body":"bakkot: see 👆🏻","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: see 👆🏻","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1733166027138,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$yvVPAb2KDBI8dfy1mjNNmHaGxAr7hxGmf3X2O8RuIhM"},
{"content":{"body":"You can get an AsyncContext candy","m.mentions":{},"msgtype":"m.text"},"ts":1733166084594,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$g1sSp7pX054o4pAhlX0hAKn-lSPdHLsD6_2K3sbLg_g"}
]