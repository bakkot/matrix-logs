[
{"content":{"body":"Draft Schedule is up on the Reflector: https://github.com/tc39/Reflector/issues/545","m.mentions":{},"msgtype":"m.text"},"ts":1733151579008,"senderName":"ryzokuken 🇷🇸","senderId":"@usharma:igalia.com","id":"$6WE-IOVQ5ZS-bXsMSLmm-FYCOnRkc-Hu-H-2YaLXqAw"},
{"content":{"body":"The meeting begins in 1 minute!!!","m.mentions":{},"msgtype":"m.text"},"ts":1733158709533,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$RNAveXcHyfVp-bNdrc8ZOWE_tfVtkCCwDICqI6skEVk"},
{"content":{"body":"FYI we still don't have a TCQ link","msgtype":"m.text"},"ts":1733158849545,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$W0K11StZ6mpFy-1KWGDETUr0CnvS-3Q6RHE-uTcYfnE"},
{"content":{"body":"If Google meet is stuck on \"Getting ready... You'll be able to join in just a moment\", is it a problem on my side?","m.mentions":{},"msgtype":"m.text"},"ts":1733159003929,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk"},
{"content":{"body":"https://tcq.app/meeting/RKti","m.mentions":{},"msgtype":"m.text"},"ts":1733159007659,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t3BRxREA4PLHjU0Be8_zM2F-BRQ1EAqJvPYPlsjsjIA"},
{"content":{"body":"probably, there's a bunch of us in it","m.mentions":{},"m.relates_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk","is_falling_back":true,"m.in_reply_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733159019836,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$A1fiGRjvF96pQLigJ_lFtGvgZDRLQmP2OfhcTe5ZUyA"},
{"content":{"body":"Ok thanks, time to restart everything","m.mentions":{},"m.relates_to":{"event_id":"$HJOWOueHZQU2MsZ1X6TKQNhlR0IYqDhpUJ3IyoUo5bk","is_falling_back":true,"m.in_reply_to":{"event_id":"$A1fiGRjvF96pQLigJ_lFtGvgZDRLQmP2OfhcTe5ZUyA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733159050051,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$A-2wI8ycdIleSW5gNqZI4whhC8OS3R6B2Wqn_HH9zE0"},
{"content":{"body":"Chairs, last minute change. It seems like I will be the one presenting the TG4 status report","m.mentions":{},"msgtype":"m.text"},"ts":1733159568157,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1c4QanLmCV-9m7Rzo11v_JkaT3QlmadAfyfWfwEW6Rw"},
{"content":{"body":"I like Samina’s idea to have a liaison from TC39 to IETF, analogous to our close relationship with W3C and Unicode. Is anyone interested in playing this role?","msgtype":"m.text"},"ts":1733161201142,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WgnXYMdeU_uc71q7t-7lBraFKBfAfgRzZQQG_bv3tW8"},
{"content":{"body":"In the past, I think 2021, Mathew Miller was the liaison contact from  tc39","m.mentions":{},"msgtype":"m.text"},"ts":1733161532045,"senderName":"saminahusain","senderId":"@saminahusain:matrix.org","id":"$LEM-bI1ubwiFmyLuJ2z7IGxqgsMI4lvUkEhfh_wQPWU"},
{"content":{"body":"sorry, I forgot to add to the agenda constraints that I'm not available the first hour today","m.mentions":{},"msgtype":"m.text"},"ts":1733161794455,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xkLGVGVbvDC4gPtjt9E2x98V830vjAYIEl1J1ZSmeS0"},
{"content":{"body":"hope we can get to my iterator closing topic after that","m.mentions":{},"msgtype":"m.text"},"ts":1733161819099,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DJ48y_lDU3jE8XOT6ZRKfrWjNKiTv4N4w0BSe0aaF0E"},
{"content":{"body":"Did Chris change which diff he's showing?","m.mentions":{},"msgtype":"m.text"},"ts":1733162057645,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$AwdeBtsIQLVMzbFZ7RvsZ-EosOcj6ROI2mNTvSjEyUA"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1733162086548,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$m69ssTGvD1W71MdvC36HEckqb6XV-B9D3KXlCDO-PZU"},
{"content":{"body":"whoever is doing notes right now, please refer to https://github.com/tc39/notes/blob/main/delegates.txt for abbreviations, don't just make something up","msgtype":"m.text"},"ts":1733162255768,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qasNQE8axIpt_an-mUxu9G6UNdQZjNIgpwSsf5GttmA"},
{"content":{"body":"@eemeli:mozilla.org please add a link to the slides in the notes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli</a> please add a link to the slides in the notes","msgtype":"m.text"},"ts":1733163332849,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA"},
{"content":{"body":"I always assumed the motivation on this proposal was about ergonomics and not really about performance","m.mentions":{},"msgtype":"m.text"},"ts":1733163750844,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$TfMs_ifguFqfq9KxdVLToWgyDtfs2v8v2Ni3NASyEhI"},
{"content":{"body":" * I always assumed the motivation for this proposal was about ergonomics and not really about performance","m.mentions":{},"m.new_content":{"body":"I always assumed the motivation for this proposal was about ergonomics and not really about performance","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$TfMs_ifguFqfq9KxdVLToWgyDtfs2v8v2Ni3NASyEhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733163757172,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SVD0HFTxO4xWfN87yx4YaHYw3pFO3iFinEmplSik4GM"},
{"content":{"body":"> <@michaelficarra:matrix.org> @eemeli:mozilla.org please add a link to the slides in the notes\n\nThere were no slides. The presented material was the readme of the proposal repo.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli</a> please add a link to the slides in the notes</blockquote></mx-reply>There were no slides. The presented material was the readme of the proposal repo.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$AJcHpG9hWkO4ogZttzPZonrlKBxbCo4M-jKgDoGg_EA"}},"msgtype":"m.text"},"ts":1733164056120,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$cEyAmrq4qaiLNrB90laJpTaWcCbOF13Rq5zfckobdRI"},
{"content":{"body":"https://github.com/eemeli/proposal-intl-currency-display-choices","m.mentions":{},"msgtype":"m.text"},"ts":1733164106775,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$kvGs0rKSIIbFyd4U0A5ND98HlX4qtWtcKHuEJpyWI0s"},
{"content":{"body":"We don't throw when you mutate a Map while iterating. I'd almost rather `getOrInsertComputed` just overwrites the key, whether it was set or deleted during the callback. If you want full locking, you can implement it yourself?","format":"org.matrix.custom.html","formatted_body":"We don't throw when you mutate a Map while iterating. I'd almost rather <code>getOrInsertComputed</code> just overwrites the key, whether it was set or deleted during the callback. If you want full locking, you can implement it yourself?","m.mentions":{},"msgtype":"m.text"},"ts":1733164191544,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DhKB3A2A-Q3kx9RzE2eiNgf1TQH-Au86svqvU-L6vAk"},
{"content":{"body":"rbuckton: that IS my understanding of the non-throwing approach","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: that IS my understanding of the non-throwing approach","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1733164210744,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lCTTDujNV74bIgy3qTBczWoTd4rWYdeTlVBCMrzKLIs"},
{"content":{"body":"is it not?","m.mentions":{},"msgtype":"m.text"},"ts":1733164211704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tvKHmc7e6ZDhgoeYaKo4xAmFLMnAJ_YMzBTVgFKjdh4"},
{"content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people ","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733164301742,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY"},
{"content":{"body":" * the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":" * <p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"m.new_content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164315553,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mX76qdPp8l8RLYPl2WYSNFWECQgkqiXJFhw_pnkJiKo"},
{"content":{"body":"I dislike these names but I have no constructive suggestion","m.mentions":{},"msgtype":"m.text"},"ts":1733164325426,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ijMwVoXHVDTmUvar5RuCMLqkDxe_7-tfkv_mY3rDrLs"},
{"content":{"body":"I personally prefer `getOrAdd`/`getOrCreate`, but I've been too busy over the last few weeks to comment on the issue :/","format":"org.matrix.custom.html","formatted_body":"I personally prefer <code>getOrAdd</code>/<code>getOrCreate</code>, but I've been too busy over the last few weeks to comment on the issue :/","m.mentions":{},"msgtype":"m.text"},"ts":1733164369647,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gfHUYNyzhQ5WxWN1icAF3xz_Lk8Y-bQ1qAum8qLSIfE"},
{"content":{"body":"bakkot: option 3 would basically be \"actual upsert\"?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"?","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1733164382763,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PaWJjQKLpkM3_0lSa6yGiX_yJsL9JHdqQRwPrpPOAjY"},
{"content":{"body":" * bakkot: option 3 would basically be \"actual upsert\"? or is that something else","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"? or is that something else","m.mentions":{},"m.new_content":{"body":"bakkot: option 3 would basically be \"actual upsert\"? or is that something else","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: option 3 would basically be \"actual upsert\"? or is that something else","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PaWJjQKLpkM3_0lSa6yGiX_yJsL9JHdqQRwPrpPOAjY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164396343,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GfmJMOX6yceBxGR04E8gBNZeTcONtYZAFE55S-OPwSU"},
{"content":{"body":"no","m.mentions":{},"msgtype":"m.text"},"ts":1733164405049,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q6Km4pWBzLuPl9qSopUtS91h5Iwm1-tJQTvQ3vAy1kw"},
{"content":{"body":"we're accounting for mutation during the callback","m.mentions":{},"msgtype":"m.text"},"ts":1733164416429,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aGNP485KfvEU87W0mTSdeoIF-TRkmflHW_8fsGcahAs"},
{"content":{"body":"not passing new values to the callback","m.mentions":{},"msgtype":"m.text"},"ts":1733164420165,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mEM6uyztYxS5_1o4_fUDtVNMDJ4fYwtTEJHsgub76Bw"},
{"content":{"body":"ah k","m.mentions":{},"msgtype":"m.text"},"ts":1733164433660,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1jLc9QEGp-0jKQF7uqREaJca9j25FgxiKykZSt7NumM"},
{"content":{"body":" * the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":" * <p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"m.new_content":{"body":"the four options:\n\n```\n// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n```\n\nsounds like people like option 2 (which I'm also happy with)","format":"org.matrix.custom.html","formatted_body":"<p>the four options:</p>\n<pre><code>// common prefix\nif (map.has(key)) return key;\nlet value = callback(key);\n\n// option 1\nif (map.has(key)) throw;\nmap.set(key, value);\nreturn value;\n\n// option 2\nmap.set(key, value);\nreturn value;\n\n// option 3 (not proposed)\nif (map.has(key)) return map.get(key);\nmap.set(key, value);\nreturn value;\n\n// option 4 (not proposed): change `Map.prototype.set` to check if we're currently in a `getOrInsertComputed` for this map\n</code></pre>\n<p>sounds like people like option 2 (which I'm also happy with)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZsjT8lHi_5g6WFvCNXZfXCdnyUvEwPH_hEOEi1JaLDY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733164514071,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E7OKUcMmEBNaPyxTKIK3ymHvM3QmxX6OSMvugnosuPU"},
{"content":{"body":"Regarding the naming, neither of these methods are actually an \"upsert\", which normally consists of either \"updating an existing value\" or \"inserting a new value\", hence the portmanteau of \"update\" and \"insert\". ","m.mentions":{},"msgtype":"m.text"},"ts":1733164543363,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$3UQJTnvcHeR4jZDWt4bUOtQjihdcxrJ_qZ0cROehQdY"},
{"content":{"body":"University of Bergen's students have written a tutorial on `upsert` proposal prototype implementations in SpiderMonkey and V8. The current preliminary (rough) draft is available here: https://github.com/bldl/emplace-spidermonkey . It currently lacks the description of the implementation in V8; this will be added soon. ","format":"org.matrix.custom.html","formatted_body":"University of Bergen's students have written a tutorial on <code>upsert</code> proposal prototype implementations in SpiderMonkey and V8. The current preliminary (rough) draft is available here: https://github.com/bldl/emplace-spidermonkey . It currently lacks the description of the implementation in V8; this will be added soon.","m.mentions":{},"msgtype":"m.text"},"ts":1733165112149,"senderName":"Mikhail Barash","senderId":"@mikbar-uib:matrix.org","id":"$zM18s8YzwExxgI2kR76vZejKeT05vhoxDAow8NVbJY0"},
{"content":{"body":"https://github.com/tc39/proposal-is-error/issues/7","m.mentions":{},"msgtype":"m.text"},"ts":1733165250897,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PbZMBKGQdnuy0THfCgThI4-WrVl4-2oXGDg9i4jwc3w"},
{"content":{"body":"chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up above the other items on the agenda","m.mentions":{},"msgtype":"m.text"},"ts":1733165272013,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-RwldF1TA5JKkPFG4knlzpqI5qBXdFdpVwQDB7wbxh0"},
{"content":{"body":" * chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up with the already-presented items on the agenda","m.mentions":{},"m.new_content":{"body":"chairs: can you make sure my \"iterator helpers close receiver on argument validation failure (10m, Kevin Gibbons)\" topic doesn't get lost? currently it's up with the already-presented items on the agenda","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$-RwldF1TA5JKkPFG4knlzpqI5qBXdFdpVwQDB7wbxh0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733165287265,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$710q9eSm3UaxPD7n4vc6CnN35RmVk4eVUni2D8mvDD4"},
{"content":{"body":"ljharb: reminder to record your summary/conclusion","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: reminder to record your summary/conclusion","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1733166004429,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$35myskPiGqRWG3lXithpRqInzs7hz8Dv9ieu7vLJNOQ"},
{"content":{"body":"bakkot: see 👆🏻","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: see 👆🏻","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1733166027138,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$yvVPAb2KDBI8dfy1mjNNmHaGxAr7hxGmf3X2O8RuIhM"},
{"content":{"body":"You can get an AsyncContext candy","m.mentions":{},"msgtype":"m.text"},"ts":1733166084594,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$g1sSp7pX054o4pAhlX0hAKn-lSPdHLsD6_2K3sbLg_g"},
{"content":{"body":"Plenary resumes in one minute!","m.mentions":{},"msgtype":"m.text"},"ts":1733169523486,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$f4nZFXXmJaG5OPaAWfzUv43qH6eVwoSqpKRqHFewYNk"},
{"content":{"body":"Can we get the transcriptioner to disable automatic-newline?","m.mentions":{},"msgtype":"m.text"},"ts":1733170122184,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$o6kyNdVZj1wjDm0dJbmQRQ7QcJ0NBTUi2pPuYGjTkKA"},
{"content":{"body":"how bad is it? should I file a POO?","m.mentions":{},"msgtype":"m.text"},"ts":1733170143388,"senderName":"ryzokuken 🇷🇸","senderId":"@usharma:igalia.com","id":"$BeBnHsHb7Dbpq7i_ZmytwQbO8bqkH5cVN-UZy7qNYHU"},
{"content":{"body":"It's just annoying","m.mentions":{},"msgtype":"m.text"},"ts":1733170156131,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$so1j8VavQpvVwORpKx_45ticZ32ag_AbgeL3CCxkf3c"},
{"content":{"body":"Because if I add a newline anywhere then the line is too short and looks  bad","m.mentions":{},"msgtype":"m.text"},"ts":1733170167092,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ijl4kwk7ypVfdbuCEkguVtrBnqZqbk4d8onQhijnXJI"},
{"content":{"body":"(also more than one space after a period)","m.mentions":{},"msgtype":"m.text"},"ts":1733170168109,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$A-WfR-rjktE6J3zo59ZS44DoSwWya7MjWDCS9SCA4_s"},
{"content":{"body":"This note taker is very good","m.mentions":{},"msgtype":"m.text"},"ts":1733170814479,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_PyCyahGrQKy8vGG0U0-WifylHgWG4vhp7grZ3zEnf8"},
{"content":{"body":"They are even adding parentheses in function calls","m.mentions":{},"msgtype":"m.text"},"ts":1733170819831,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$XHk_wwAtYEpRu7hctPllNkE2eZap4xY642eRfeYcFZY"},
{"content":{"body":"The results of the temp check are \"we should flip a coin\"","m.mentions":{},"msgtype":"m.text"},"ts":1733172193211,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$U4NO36zZ0_5dLCoRtOSh_w_Z4ZKQ_4mPJgUaOmxHqkg"},
{"content":{"body":"I can't speak but note:","m.mentions":{},"msgtype":"m.text"},"ts":1733172334586,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JuKmWXEFj0VnqNb5tKxD2IdWqEoSRZAHHuTK2rCm1Qo"},
{"content":{"body":"My concern is that reuse promotes weird corner cases","m.mentions":{},"msgtype":"m.text"},"ts":1733172340228,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$yZhFwU0yny5VjfOAf4eq3SzxtCQ3KagyzRDeiL1xEK8"},
{"content":{"body":"htis means can't implement concat with a generator","m.mentions":{},"msgtype":"m.text"},"ts":1733172348242,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo"},
{"content":{"body":"i.e., accessors, proxies, etc.","m.mentions":{},"msgtype":"m.text"},"ts":1733172358944,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$_usrQG7SSZcwdIsKDMTFhkCLrlA9XbXRuyy4zwRLRKc"},
{"content":{"body":" * this means you can't implement concat with a generator","m.mentions":{},"m.new_content":{"body":"this means you can't implement concat with a generator","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733172358948,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Dva4bZvVN-Or2c5RC1x5xXEbx5fA5wXYarU-8qjT61E"},
{"content":{"body":"yeah i'm confused by the flipped polarity","m.mentions":{},"msgtype":"m.text"},"ts":1733172365578,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6mWNmqm3bgVcqXPxmjXzaWcX2ub3YGDcdd-_Eu-ToEA"},
{"content":{"body":"why are agoric folks okay with concat doing reuse?","m.mentions":{},"msgtype":"m.text"},"ts":1733172377927,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$r5EMn3xR5L9Z0ijDlfiSn2f8tpHWF5Uo5DAmCYgA86U"},
{"content":{"body":"> <@bakkot:matrix.org> this means you can't implement concat with a generator\n\n```js\nfunction* concat(...iterators) {\n  for (const it of iterators) yield* it;\n}\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>this means you can&#39;t implement concat with a generator</blockquote></mx-reply><pre><code class=\"language-js\">function* concat(...iterators) {\n  for (const it of iterators) yield* it;\n}\n</code></pre>\n","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo"}},"msgtype":"m.text"},"ts":1733172383975,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$yK6jLlnk6Wn2xKNz-8Oz9yJCE-X2gbFcw6gpaOkcXtI"},
{"content":{"body":"Since yield re-uses","m.mentions":{},"msgtype":"m.text"},"ts":1733172389253,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$X4ebz35l-dFWaR6Vy801aO9mW2s_uSuxgNgbUCKGxfE"},
{"content":{"body":" * Since yield* re-uses","m.mentions":{},"m.new_content":{"body":"Since yield* re-uses","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$X4ebz35l-dFWaR6Vy801aO9mW2s_uSuxgNgbUCKGxfE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733172394907,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Bpl_ru5_8iqmqp30PPovCg8HT3CD5ChqVeXS72_wTL0"},
{"content":{"body":"ah, true","m.mentions":{},"msgtype":"m.text"},"ts":1733172398161,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IPD4PgDEnTmzBlCwXbsi41n5WMKE0W5332C-EBBxsj4"},
{"content":{"body":"oh i see","m.mentions":{},"msgtype":"m.text"},"ts":1733172401877,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$A-QHX9j5pFbUQLKo3RSOXghtK2f5s0xofVqiQ5cVsfk"},
{"content":{"body":"ok then i am indifferent","m.mentions":{},"msgtype":"m.text"},"ts":1733172414865,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6dBGjJojBDQoDnaihP6P2P81ZSdKjhmTas215kpnM4s"},
{"content":{"body":"> <@bakkot:matrix.org> this means you can't implement concat with a generator\n\nIf we don't reuse, we can use a generator but not `yield*`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>this means you can&#39;t implement concat with a generator</blockquote></mx-reply>If we don't reuse, we can use a generator but not <code>yield*</code>","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$yWSKi16iy91TTVXlhROjJlHRfLNCrgDDltKpzhR-nVo"}},"msgtype":"m.text"},"ts":1733172415483,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0FE-Oy2Ndg88YIFAmTcMjCz9G0PZvD7me5wpsU-y1O0"},
{"content":{"body":"though `return` is trickier","format":"org.matrix.custom.html","formatted_body":"though <code>return</code> is trickier","m.mentions":{},"msgtype":"m.text"},"ts":1733172427329,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fbk-qeFqlEFqzcBi9SwWPy7XQPA1uJ-DYEBX33YS-y8"},
{"content":{"body":" * though `return` is a little trickier","format":"org.matrix.custom.html","formatted_body":" * though <code>return</code> is a little trickier","m.mentions":{},"m.new_content":{"body":"though `return` is a little trickier","format":"org.matrix.custom.html","formatted_body":"though <code>return</code> is a little trickier","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Fbk-qeFqlEFqzcBi9SwWPy7XQPA1uJ-DYEBX33YS-y8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733172439302,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$04aiQX1R8vV7B87OxLgqZgDTffuMKrnc9qU548zEuvU"},
{"content":{"body":"```js\nfunction* concat(...iterators) {\n  for (const it of iterators) \n    for (const el of it)\n      yield el;\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">function* concat(...iterators) {\n  for (const it of iterators) \n    for (const el of it)\n      yield el;\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733172445454,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$TpS7vplkSZ2qZpc0LbkTcxA7qRnOsUqs-7IzKIvyfyc"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Since yield* re-uses\n\n(except in JSC and LibJS)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24X4ebz35l-dFWaR6Vy801aO9mW2s_uSuxgNgbUCKGxfE\">In reply to</a><a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo:matrix.org</a><br />Since yield* re-uses</blockquote></mx-reply>(except in JSC and LibJS)","m.relates_to":{"m.in_reply_to":{"event_id":"$X4ebz35l-dFWaR6Vy801aO9mW2s_uSuxgNgbUCKGxfE"}},"msgtype":"m.text"},"ts":1733173207739,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$aM5AESrel7uNIxSgarh6yEpZr4ahmFE5XZEGnv2aEsg"},
{"content":{"body":"https://github.com/tc39/proposal-shadowrealm/issues/393","m.mentions":{},"msgtype":"m.text"},"ts":1733173324143,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$oiSUbO5hf8AUnWga03Nq3bn6N_n5phgczSRsZzM2Zqg"},
{"content":{"body":"waldemar There is also random which is technically I. I guess the actual principle is \"web APIs don't expose I/O other than what is already exposed by ECMAScript itself\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> There is also random which is technically I. I guess the actual principle is \"web APIs don't expose I/O other than what is already exposed by ECMAScript itself\"","m.mentions":{"user_ids":["@waldemarh:matrix.org"]},"msgtype":"m.text"},"ts":1733174277274,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$f5kzwD7A5IYWfS_jGbwKyVhTwXIjE4M6dqXcc2HdH34"},
{"content":{"body":"brother i don't know of any API that doesn't allocate memory","m.mentions":{},"msgtype":"m.text"},"ts":1733174933762,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0UFzQBwoyefW6XP4ac9d7jdakMwfSDgg0_TQphDbmQM"},
{"content":{"body":"> <@shuyuguo:matrix.org> brother i don't know of any API that doesn't allocate memory\n\n`destroy()`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0UFzQBwoyefW6XP4ac9d7jdakMwfSDgg0_TQphDbmQM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>brother i don&#39;t know of any API that doesn&#39;t allocate memory</blockquote></mx-reply><code>destroy()</code>","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0UFzQBwoyefW6XP4ac9d7jdakMwfSDgg0_TQphDbmQM"}},"msgtype":"m.text"},"ts":1733175045063,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$8Dgmm1skkyEKLzzx8LvD_EIILhla5HuKQgDU15lbEhI"},
{"content":{"body":"where do you think the stack space needed to push the frames to make the call comes from?","m.mentions":{},"msgtype":"m.text"},"ts":1733175064838,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wGULwnAIau5KFGBTxiEmhJ8Cd5o3Otpy1UUcqeYcgV8"},
{"content":{"body":"lol","m.mentions":{},"msgtype":"m.text"},"ts":1733175079205,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$PMEPKSSJ0l4bhWpBM1q5NnzIFEeLXpUCwDqBfKBwvdM"},
{"content":{"body":"should we consider elaborating on stage 3 acceptance criteria re: tests being merged?","m.mentions":{},"msgtype":"m.text"},"ts":1733175184049,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$3fqef5dthRqH17A_qG1RwE_HLRRY_-FClp2o1qccSwM"},
{"content":{"body":"Chris de Almeida: i honestly thought that was already the case","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: i honestly thought that was already the case","m.mentions":{"user_ids":["@softwarechris:matrix.org"]},"msgtype":"m.text"},"ts":1733175204809,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$u1xORiBcTuPRAklfLWz2OR5kEOImnPcUJRkGyLJiFGs"},
{"content":{"body":"it's hand-wavy","m.mentions":{},"msgtype":"m.text"},"ts":1733175212091,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$5WHX-9oVh4ysPzzOWeAghpfRmWCcWIFNpGhXWe00tJI"},
{"content":{"body":"like what's the point of having tests that are floating out there but not merged","m.mentions":{},"msgtype":"m.text"},"ts":1733175214948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iH5GUshHHDAe9AV7BFFz-TAIKOQcKldJdHbm3qmL3Zc"},
{"content":{"body":"> The feature has sufficient testing and appropriate pre-implementation experience","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>The feature has sufficient testing and appropriate pre-implementation experience</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733175216814,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$uBHamf9F6Rkux9-UzegheKPcrHtsJiJX1K5YkAS_4Hc"},
{"content":{"body":"sorry, i meant i thought it was the case that being merged is a necessary condition for being considered \"sufficient testing\"","m.mentions":{},"msgtype":"m.text"},"ts":1733175242203,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UaGjFUG8B10SvEKW_1svlPQW8hDktn3065acDc0Vyy8"},
{"content":{"body":"not just that some tests were written, somewhere","m.mentions":{},"msgtype":"m.text"},"ts":1733175249927,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$P8s96p_Klp7BANPuMgaxmAIzJkmNik7e6fJILBsMc4A"},
{"content":{"body":"I understand; the question is, would it help to make the text more explicit?","m.mentions":{},"msgtype":"m.text"},"ts":1733175282361,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$jtoLDD2IuJtnaQrv-8c6eK2juORKx24IaLQ1mF7N8E4"},
{"content":{"body":"i think we've generally considered merging a requirement","m.mentions":{},"msgtype":"m.text"},"ts":1733175293875,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Z1CZWy3_hFpwihJLnXLI_dCDbFnd5vF9aRn2ZPT5fc0"},
{"content":{"body":"but we also don't usually block advancements on procedural things that are unambiguous - we usually grant conditional advancement pending that thing","m.mentions":{},"msgtype":"m.text"},"ts":1733175318184,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W_hf4BjZj7Kc2z-5AAkkeTLELjo53E-maS7ePvJ2Jjw"},
{"content":{"body":" * but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing","m.mentions":{},"m.new_content":{"body":"but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$W_hf4BjZj7Kc2z-5AAkkeTLELjo53E-maS7ePvJ2Jjw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733175331932,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NScKI0zmFeWSKUhNs2Gi850h__K9ySRcqU-VBFg9Lig"},
{"content":{"body":" * but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing (a PR review, a PR merge, etc)","m.mentions":{},"m.new_content":{"body":"but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing (a PR review, a PR merge, etc)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$W_hf4BjZj7Kc2z-5AAkkeTLELjo53E-maS7ePvJ2Jjw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733175373063,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$23j834b_vOpSNAx7BKsBojKonTKo2m7uSwpycUJ-hgI"},
{"content":{"body":" * but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing (a PR review, a PR merge, resolving an open question between known stakeholders, etc)","m.mentions":{},"m.new_content":{"body":"but we also don't usually block advancements on procedural things whose completion is unambiguous - we usually grant conditional advancement pending that thing (a PR review, a PR merge, resolving an open question between known stakeholders, etc)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$W_hf4BjZj7Kc2z-5AAkkeTLELjo53E-maS7ePvJ2Jjw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733175383887,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fnpLEjTKu3fIR0GrOR_yEpjNplc_aOgT6Xpx_eKTtW8"},
{"content":{"body":"generally speaking, is the status quo that tests have been merged before asking for stage 3?  ","m.mentions":{},"msgtype":"m.text"},"ts":1733175611670,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$cZ034iCAHNGY_-nLXY4zRPWlSemfyR7GsiLHgVeK4hw"},
{"content":{"body":"for non-large proposals, yes.","m.mentions":{},"msgtype":"m.text"},"ts":1733175621522,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lM3G0Wdqg8kG2_HSzWBT7nG0g3HBf-AAMc2304YOXFM"},
{"content":{"body":" * for non-large proposals, yes, i believe so","m.mentions":{},"m.new_content":{"body":"for non-large proposals, yes, i believe so","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$lM3G0Wdqg8kG2_HSzWBT7nG0g3HBf-AAMc2304YOXFM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733175647907,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ywQMeRzFRxBv1B2_bkrtqmX_rnXovhKlWJ3Nrb-CUA0"},
{"content":{"body":"i think how much leniency we give definitely will vary case-by-case. in the particular case of ShadowRealms, it got to stage 3 the first time on that promise that the integration work will be done, and the ball got dropped","m.mentions":{},"msgtype":"m.text"},"ts":1733175739749,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yQQnynMnddnYswjEO2KbOsRVqOoJ8eKqNMNW0A6HSrw"},
{"content":{"body":"ptomato I am happy to open an issue about crypto.subtle somewhere if you'd like. is the shadowrealm proposal the right place for that kind of bikeshedding issue? also if you want to just look at it without bothering with an issue that's fine","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a> I am happy to open an issue about crypto.subtle somewhere if you'd like. is the shadowrealm proposal the right place for that kind of bikeshedding issue? also if you want to just look at it without bothering with an issue that's fine","m.mentions":{"user_ids":["@pchimento:igalia.com"]},"msgtype":"m.text"},"ts":1733176366154,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tiEneg9d2xT9kYQ9TTJ-C9fPMiDh9U6w87129CSV3cM"},
{"content":{"body":"> <@bakkot:matrix.org> ptomato I am happy to open an issue about crypto.subtle somewhere if you'd like. is the shadowrealm proposal the right place for that kind of bikeshedding issue? also if you want to just look at it without bothering with an issue that's fine\n\nthanks! in proposal-shadowrealm is fine, but if you don't want to bother with an issue that's also fine; I've got it on my todo list","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tiEneg9d2xT9kYQ9TTJ-C9fPMiDh9U6w87129CSV3cM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a> I am happy to open an issue about crypto.subtle somewhere if you'd like. is the shadowrealm proposal the right place for that kind of bikeshedding issue? also if you want to just look at it without bothering with an issue that's fine</blockquote></mx-reply>thanks! in proposal-shadowrealm is fine, but if you don't want to bother with an issue that's also fine; I've got it on my todo list","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tiEneg9d2xT9kYQ9TTJ-C9fPMiDh9U6w87129CSV3cM"}},"msgtype":"m.text"},"ts":1733177448879,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$1hAxGHwhJi8xeHxkKUWh5WP_ZY3pqs2YyWIV-Tn0Emg"},
{"content":{"body":"dminor: mozilla doesn't usually bother with standards-positions on TC39 proposals, yeah? https://github.com/mozilla/standards-positions/issues/1133","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dminor:mozilla.org\">dminor</a>: mozilla doesn't usually bother with standards-positions on TC39 proposals, yeah? https://github.com/mozilla/standards-positions/issues/1133","m.mentions":{"user_ids":["@dminor:mozilla.org"]},"msgtype":"m.text"},"ts":1733177619271,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gk-GMegarJkC7wyluuDUQAMuxMxpVD5lGU1g8DuCKA0"}
]