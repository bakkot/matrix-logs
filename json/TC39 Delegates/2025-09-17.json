[
{"content":{"body":"I don't think anyone will ever be able to top `XMLHttpRequest`. It has uppercase and pascal case. Not to mention its not related to XML at all. ðŸ˜‚","format":"org.matrix.custom.html","formatted_body":"I don't think anyone will ever be able to top <code>XMLHttpRequest</code>. It has uppercase and pascal case. Not to mention its not related to XML at all. ðŸ˜‚","m.mentions":{},"msgtype":"m.text"},"ts":1758068961745,"senderName":"styfle","senderId":"@styfle:matrix.org","id":"$u8JJOhN5_XbyWjvCu5enaXH11zFvHRsUCHls5fIGLPE"},
{"content":{"body":"Ah, so you have not heard of SpOnGebObcAsE.","m.mentions":{"user_ids":["@styfle:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$u8JJOhN5_XbyWjvCu5enaXH11zFvHRsUCHls5fIGLPE"}},"msgtype":"m.text"},"ts":1758079179607,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$oNlUutBjJpku3DnpXP7o6VuzHEVTiznN_0fWCzUXDSA"},
{"content":{"body":"Ah, well, an argument can be made that XMLHttpRequest is worse.","m.mentions":{},"msgtype":"m.text"},"ts":1758079213254,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$b4qoSu-trtHyxVv6Ov6nNtLHW_GMzbfVgQsHZfv5_a8"},
{"content":{"body":"> <@michaelficarra:matrix.org> I am concerned about some proposals going for Stage 1 at the upcoming meeting with a particular API name as the proposal name. *Please* don't do this. Proposals should be named after the problem they're solving, not the champion's assumed or preferred solution at the time of presenting for Stage 1.\n\nI have one of those, but I really can't imagine another name given the isError and isArray precedent. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S__KzjbQ5g_hr6JyTvg-AqcRv7fYIxNBees5zIF9w_E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br />I am concerned about some proposals going for Stage 1 at the upcoming meeting with a particular API name as the proposal name. <i data-md=\"*\">Please</i> don&#39;t do this. Proposals should be named after the problem they&#39;re solving, not the champion&#39;s assumed or preferred solution at the time of presenting for Stage 1.</blockquote></mx-reply>I have one of those, but I really can't imagine another name given the isError and isArray precedent.","m.relates_to":{"m.in_reply_to":{"event_id":"$S__KzjbQ5g_hr6JyTvg-AqcRv7fYIxNBees5zIF9w_E"}},"msgtype":"m.text"},"ts":1758094097287,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$plLdxlut2u1aq6s1eSdRrx1r8P7yphUPNZnjBed1oH8"},
{"content":{"body":"I guess promise predicate would be another option.","msgtype":"m.text"},"ts":1758094141335,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$YwXXc1l7KPr_MYIdhy7kAz-yQH0-qmobtgUrfMMfGuc"},
{"content":{"body":"* I guess promise predicate would be an option for the proposal name","m.new_content":{"body":"I guess promise predicate would be an option for the proposal name","msgtype":"m.text"},"m.relates_to":{"event_id":"$YwXXc1l7KPr_MYIdhy7kAz-yQH0-qmobtgUrfMMfGuc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758094215663,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$2-PerF7nUyUILlLS4acsn8hdQKOSoK9roKv2IaIgi5U"},
{"content":{"body":"> <@mhofman:matrix.org> I have one of those, but I really can't imagine another name given the isError and isArray precedent. \n\nI suggested some names in the issue I opened https://github.com/mhofman/proposal-is-promise/issues/4","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$plLdxlut2u1aq6s1eSdRrx1r8P7yphUPNZnjBed1oH8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br />I have one of those, but I really can't imagine another name given the isError and isArray precedent.</blockquote></mx-reply>I suggested some names in the issue I opened https://github.com/mhofman/proposal-is-promise/issues/4","m.relates_to":{"m.in_reply_to":{"event_id":"$plLdxlut2u1aq6s1eSdRrx1r8P7yphUPNZnjBed1oH8"}},"msgtype":"m.text"},"ts":1758112330308,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$r3qbhX62VQ6wfIWk5GvAhWNI99LkE_7A4bYaH3cvjas"},
{"content":{"body":"I also opened an issue about how I think isPromise isn't actually the best name for the API, which reinforces my point about the proposal name https://github.com/mhofman/proposal-is-promise/issues/3","format":"org.matrix.custom.html","formatted_body":"I also opened an issue about how I think isPromise isn&#39;t actually the best name for the API, which reinforces my point about the proposal name https://github.com/mhofman/proposal-is-promise/issues/3","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$plLdxlut2u1aq6s1eSdRrx1r8P7yphUPNZnjBed1oH8"}},"msgtype":"m.text"},"ts":1758117734450,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Hci6Xg0kn_gOSPsx37OMHg8ayQ9Y9FBeMHs9ffhbgYk"},
{"content":{"body":"I mean, I'm not sure how much more generic one would have been able to make a proposal that was initially about whether or not something was a promise. If the proposal ends up significantly genericizing, that's just something unpredictable.","m.mentions":{},"msgtype":"m.text"},"ts":1758125389490,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$jz_2Flr0d9ByThh68rSeU-leKzrLRCiq7g0GtTPtd-4"},
{"content":{"body":"Read the motivation for the proposal in the README. It's about detecting whether the value is treated specially by `await`. `isPromise` is clearly an assumption about how we would do that.","format":"org.matrix.custom.html","formatted_body":"Read the motivation for the proposal in the README. It&#39;s about detecting whether the value is treated specially by <code data-md=\"`\">await</code>. <code data-md=\"`\">isPromise</code> is clearly an assumption about how we would do that.","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$jz_2Flr0d9ByThh68rSeU-leKzrLRCiq7g0GtTPtd-4"}},"msgtype":"m.text"},"ts":1758125901407,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2dESQOGFSt89vrxakuvDvkCm43uaMsLN5duQCImTXMY"},
{"content":{"body":"I mean, sure, but also I think it's a *very* reasonable assumption that \"`await` cares about promises\"","format":"org.matrix.custom.html","formatted_body":"I mean, sure, but also I think it's a <em>very</em> reasonable assumption that \"<code>await</code> cares about promises\"","m.mentions":{},"msgtype":"m.text"},"ts":1758125933502,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$D4T4bQrxQvYAO9eerltjx2P3aEPEBlw4P_EWVsnCKiU"},
{"content":{"body":"(in some way)","m.mentions":{},"msgtype":"m.text"},"ts":1758125937407,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$juoq5KKxlskBBtuseteUhK7kHXEyD-CMBUMs3R7xkuQ"},
{"content":{"body":"I'm also not trying to pick on @mhofman:matrix.org or this proposal in particular. At the time of writing my original complaint, I hadn't even read the proposal.","format":"org.matrix.custom.html","formatted_body":"I&#39;m also not trying to pick on <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@Mathieu Hofman</a> or this proposal in particular. At the time of writing my original complaint, I hadn&#39;t even read the proposal.","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"msgtype":"m.text"},"ts":1758125950641,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SpZIoE7zcv6PtzKxuuWqICJVpZ6mqtHRa48axdWcgXM"}
]