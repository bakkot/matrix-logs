[
{"content":{"body":"right","msgtype":"m.text"},"ts":1675817116712,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$COCvHv65eDTuR8QC2Lb6IuU0rbpyg88OnC-wd162zn4"},
{"content":{"body":"Can we just fix the override mistake? If we introduce a \"freeze mode\" that doesn't trigger the override mistake for some intrinsics, I'd like this behavior to not be exotic, and be applicable to non intrinsics. One avenue I've been toying with is an options bag to `Object.freeze` that would allow setting such mode on the object and have the `OrdinarySetWithOwnDescriptor` check for that mode. I think changing 2.1 to something like this would be enough: `If ownDesc.[[Writable]] is false and O.[[FrozenWithoutOverrideMistake]] is true, return false.`","format":"org.matrix.custom.html","formatted_body":"Can we just fix the override mistake? If we introduce a &quot;freeze mode&quot; that doesn't trigger the override mistake for some intrinsics, I'd like this behavior to not be exotic, and be applicable to non intrinsics. One avenue I've been toying with is an options bag to <code>Object.freeze</code> that would allow setting such mode on the object and have the <code>OrdinarySetWithOwnDescriptor</code> check for that mode. I think changing 2.1 to something like this would be enough: <code>If ownDesc.[[Writable]] is false and O.[[FrozenWithoutOverrideMistake]] is true, return false.</code>","msgtype":"m.text"},"ts":1675817952608,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$t-DwttygOxSDYgNNV3qDlEYs0NZe-vJvMTp0mztr8co"}
]