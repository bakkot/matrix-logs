[
{"content":{"body":"> <@rkirsling:matrix.org> omg it's yusukesuzuki\n\n:) Yeah, I'll go to Tokyo meeting.\n","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DzQnWTE4radBkNR-h5mXKC69_UGCUMsZVRJ736nVC48?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">@rkirsling:matrix.org</a><br>omg it's <a href=\"https://matrix.to/#/@yusukesuzuki:matrix.org\">yusukesuzuki</a></blockquote></mx-reply>:) Yeah, I'll go to Tokyo meeting.","m.mentions":{"user_ids":["@rkirsling:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DzQnWTE4radBkNR-h5mXKC69_UGCUMsZVRJ736nVC48"}},"msgtype":"m.text"},"ts":1726122693449,"senderName":"yusukesuzuki","senderId":"@yusukesuzuki:matrix.org","id":"$Mtccm7er0USaJPpnVoIiQlWp6e8JRF2O12EeOdsoT6A"},
{"content":{"body":"ljharb: what're the topics for discussion that needs 60m for https://github.com/tc39/proposal-dataview-get-set-uint8clamped?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: what're the topics for discussion that needs 60m for https://github.com/tc39/proposal-dataview-get-set-uint8clamped?","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1726152234086,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Xl1P1O3fFxcJL8K_G0WlESNAAU0Qfdnw4mcbGW7YNfQ"},
{"content":{"body":"the same thing we talked about last time - adding the get method, whether as an alias or not","msgtype":"m.text"},"ts":1726153425811,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UNMWHkZXoksTNAbttEHZiJ4omMq0Nx5IXK0WtTUsGAw"},
{"content":{"body":"* the same thing we talked about last time - adding the get method, whether as an alias or not. obv i hope I’m grossly overestimating the timebox :-)","m.new_content":{"body":"the same thing we talked about last time - adding the get method, whether as an alias or not. obv i hope I’m grossly overestimating the timebox :-)","msgtype":"m.text"},"m.relates_to":{"event_id":"$UNMWHkZXoksTNAbttEHZiJ4omMq0Nx5IXK0WtTUsGAw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1726153513934,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lS7QMnsTzaV6JRUXmRoLoM8vgieTp3RpyjNL8osISvs"},
{"content":{"body":"_consensus by talking until when everybody else is exhausted_","msgtype":"m.text"},"ts":1726153544071,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7_6Ss8n6lnJsIbJeK_5x6fq4dHVeoQV2kwJie880t3Q"},
{"content":{"body":" * _consensus by talking until when everybody else is exhausted_","format":"org.matrix.custom.html","formatted_body":" * <em>consensus by talking until when everybody else is exhausted</em>","m.mentions":{},"m.new_content":{"body":"_consensus by talking until when everybody else is exhausted_","format":"org.matrix.custom.html","formatted_body":"<em>consensus by talking until when everybody else is exhausted</em>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$7_6Ss8n6lnJsIbJeK_5x6fq4dHVeoQV2kwJie880t3Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1726153556039,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hXTYydQ-fLmWrYubV21ShY0bjRba0Q11W32xq5MBR_g"},
{"content":{"body":"> <@ljharb:matrix.org> the same thing we talked about last time - adding the get method, whether as an alias or not. obv i hope I’m grossly overestimating the timebox :-)\n\ni'm very skeptical there is 60 minutes of productive discussion","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UNMWHkZXoksTNAbttEHZiJ4omMq0Nx5IXK0WtTUsGAw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>the same thing we talked about last time - adding the get method, whether as an alias or not. obv i hope I’m grossly overestimating the timebox :-)</blockquote></mx-reply>i'm very skeptical there is 60 minutes of productive discussion","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$UNMWHkZXoksTNAbttEHZiJ4omMq0Nx5IXK0WtTUsGAw"}},"msgtype":"m.text"},"ts":1726154536678,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gdMBS8_0Pxfk8Z_IT5U6QUMAYWv9Wnui3moE88xYGsw"},
{"content":{"body":"i think we should be respectful of scheduled time and go with a good faith estimate","m.mentions":{},"msgtype":"m.text"},"ts":1726154578342,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WABKSKhjeVgwTAbxw9xmZdJR-AaaSlvjT_Oqy2q25wc"},
{"content":{"body":"like we could all be reserving 90mins just in case","m.mentions":{},"msgtype":"m.text"},"ts":1726154586335,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qAdRgDyCVf7V3QJ2Q0PBMWQcYFqV263MrRQIAhzKmak"},
{"content":{"body":"but we shouldn't","m.mentions":{},"msgtype":"m.text"},"ts":1726154588223,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Q6Bm1BIlqElou4JhTVwUV5rv774uSEJgZB0J4sQZUlo"},
{"content":{"body":"it is a good faith estimate.","msgtype":"m.text"},"ts":1726154694663,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$W03FlP3BYxjtlsBDxJlYtTLt5tc56crNDPfem3gJot4"},
{"content":{"body":"you just said you're hopeful that you're \"grossly overestimating\"?","m.mentions":{},"msgtype":"m.text"},"ts":1726154772523,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xOh1L1E2mHcc67zXA5dFxZETcayR5GTBWUypu9zv4cc"},
{"content":{"body":"hopeful doesn’t mean that I’m certain that’s the case. It’s just optimism.","msgtype":"m.text"},"ts":1726154788695,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$18Gbz6Xm6L5KGl9tbQTWcYZ8veEdXKodR4A55_ZhiRw"},
{"content":{"body":"okay, i'll retract \"good faith\", i mean something like not estimating for worst case, but for average case","m.mentions":{},"msgtype":"m.text"},"ts":1726154833201,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0SCtFiXcCCK-aHLKYebUDEghuEZGWiSESx_LxPrfbUI"},
{"content":{"body":"i mean worst case is that we overflow 60m, which I’m concerned about doing.","msgtype":"m.text"},"ts":1726154914875,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GZLh8tRy95qZ85TSruR-NLKmsJ4U35c9Q6vsnzV9iSY"},
{"content":{"body":"then i'll come back to the original question, what are the discussion topics here that'll take that amount of time? is there new info and arguments re: adding the get method?","m.mentions":{},"msgtype":"m.text"},"ts":1726154971614,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oH8Ex0slD1yF5O0oP-XZ_XR6KPTOAmH2xIKitqK16AU"},
{"content":{"body":"if the chairs need more time, they can reach out to me or whoever else, and ask to reduce timeboxes - I’m not sure why it’s a big issue at this point","msgtype":"m.text"},"ts":1726154975482,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Y7HYxjscD3oYKWgUYfhuD6c42DKLND5ueKrW4J2KKTI"},
{"content":{"body":"no new info, but i want us to get to a decision this plenary.","msgtype":"m.text"},"ts":1726154995581,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DsprfspeATyPumkqkxV4JJ_pJ1L9GeqjRRUvbVL4XHk"},
{"content":{"body":"new info would probably make it a much shorter discussion.","msgtype":"m.text"},"ts":1726155014836,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5-ak2_uP5jn3jSdctd1gVZ_GYhrJTg0oprqOk8vs2ow"},
{"content":{"body":"it's *a* issue for me because i want plenary time to be productive","format":"org.matrix.custom.html","formatted_body":"it's <em>a</em> issue for me because i want plenary time to be productive","m.mentions":{},"msgtype":"m.text"},"ts":1726155163160,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$04dsGm_7J40JwQYfNw-JXunDIt_TVvkFjCq1yov4W8M"},
{"content":{"body":"I am excited for `emplace` but dminor you may want to consider a larger timebox","format":"org.matrix.custom.html","formatted_body":"I am excited for <code>emplace</code> but <a href=\"https://matrix.to/#/@dminor:mozilla.org\">dminor</a> you may want to consider a larger timebox","m.mentions":{"user_ids":["@dminor:mozilla.org"]},"msgtype":"m.text"},"ts":1726160404895,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zhwe0Ohm3AauML8VWPwC_c5_NLQEKSFcAXSCuj-v0Ls"},
{"content":{"body":"I do think there's room for 60 minutes of productive discussion on that topic, given the size of the design space","m.mentions":{},"msgtype":"m.text"},"ts":1726160420553,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Qn-hGP3-ySt34BGyOOCsNn7pFvKb2LF2Mvn-vWJpgcI"},
{"content":{"body":"personally I like the direction you've proposed; I would call it `getOrInit` and then have a separate `.compute((k, v, isPresent) => newV)` function for doing the insert-or-update pattern (possibly in a follow-on proposal)","format":"org.matrix.custom.html","formatted_body":"personally I like the direction you've proposed; I would call it <code>getOrInit</code> and then have a separate <code>.compute((k, v, isPresent) =&gt; newV)</code> function for doing the insert-or-update pattern (possibly in a follow-on proposal)","m.mentions":{},"msgtype":"m.text"},"ts":1726160577181,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Rw_4BfC5Qa0TeyDHcUqHYipKwWymQWA15OBhuv8HIZ8"},
{"content":{"body":"the fact that `getOrInit` does not require you to create a throwaway object/closure makes it a lot more appealing than the thing currently in the proposal","format":"org.matrix.custom.html","formatted_body":"the fact that <code>getOrInit</code> does not require you to create a throwaway object/closure makes it a lot more appealing than the thing currently in the proposal","m.mentions":{},"msgtype":"m.text"},"ts":1726160606930,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NETNT7V22z3AkyGKpUughe_a1gMBFSXLGEdqhv6_J14"},
{"content":{"body":"I might suggest `getOrAdd` and `addOrUpdate`. \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","format":"org.matrix.custom.html","formatted_body":"I might suggest <code>getOrAdd</code> and <code>addOrUpdate</code>. \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","m.mentions":{},"msgtype":"m.text"},"ts":1726166725119,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$BJ-QXbs3O8c_0h5kL0YZbE1mWGAXXJsjDum0cPRdi-4"},
{"content":{"body":" * I might suggest `getOrAdd` (or `getOrInsert`) and `addOrUpdate` (or `setOrUpdate`). \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","format":"org.matrix.custom.html","formatted_body":" * I might suggest <code>getOrAdd</code> (or <code>getOrInsert</code>) and <code>addOrUpdate</code> (or <code>setOrUpdate</code>). \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","m.mentions":{},"m.new_content":{"body":"I might suggest `getOrAdd` (or `getOrInsert`) and `addOrUpdate` (or `setOrUpdate`). \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","format":"org.matrix.custom.html","formatted_body":"I might suggest <code>getOrAdd</code> (or <code>getOrInsert</code>) and <code>addOrUpdate</code> (or <code>setOrUpdate</code>). \"init\" seems like the wrong term since this isn't initialization, per se. \"compute\" is also a fairly overloaded term.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BJ-QXbs3O8c_0h5kL0YZbE1mWGAXXJsjDum0cPRdi-4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1726166852496,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$GMiA9mhmxSYKl5_0idCqPlj1QQVW-lB8WHO92SotSvA"},
{"content":{"body":"Or, for the insert-or-update pattern, `ensure` is a term I regularly use for functions using this pattern.","format":"org.matrix.custom.html","formatted_body":"Or, for the insert-or-update pattern, <code>ensure</code> is a term I regularly use for functions using this pattern.","m.mentions":{},"msgtype":"m.text"},"ts":1726167075208,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SeUgPwEr4gJcHaOOT8RvTOvoEZUWO9EuYrJD7lK4Q54"},
{"content":{"body":" * `ensure` is also a term I regularly use for functions using this pattern.","format":"org.matrix.custom.html","formatted_body":" * <code>ensure</code> is also a term I regularly use for functions using this pattern.","m.mentions":{},"m.new_content":{"body":"`ensure` is also a term I regularly use for functions using this pattern.","format":"org.matrix.custom.html","formatted_body":"<code>ensure</code> is also a term I regularly use for functions using this pattern.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SeUgPwEr4gJcHaOOT8RvTOvoEZUWO9EuYrJD7lK4Q54","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1726167099323,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O4D2lXBAmjH_sgRCWFbIdb6fw0f0b4gie8p6f7MHhkw"},
{"content":{"body":"`getOrInsert` works just as well for me, but isn't it initialization? it's taking something which previously didn't exist (a mapping for a specific key) and causing it to exist. ","format":"org.matrix.custom.html","formatted_body":"<code>getOrInsert</code> works just as well for me, but isn't it initialization? it's taking something which previously didn't exist (a mapping for a specific key) and causing it to exist.","m.mentions":{},"msgtype":"m.text"},"ts":1726171072441,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4odHrXCKtiv038RcZK0_mq7RhO88zgMj-MZnrYQSw0M"},
{"content":{"body":"`compute` I was just copying from Java's method of the same name","format":"org.matrix.custom.html","formatted_body":"<code>compute</code> I was just copying from Java's method of the same name","m.mentions":{},"msgtype":"m.text"},"ts":1726171136459,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5EtbcLvt9tG4J_pVETrPdv28O4A6e6eN1CxhGnxAjp4"},
{"content":{"body":"haskell has `alter` which... is basically as generic as possible","format":"org.matrix.custom.html","formatted_body":"haskell has <code>alter</code> which... is basically as generic as possible","m.mentions":{},"msgtype":"m.text"},"ts":1726171242332,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hUPK6dSsti4yXqXqwR9Fw-vqT0_TMOiQnoFwW1kENAA"}
]