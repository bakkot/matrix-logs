[
{"content":{"body":"> <@softwarechris:matrix.org>  `Source Phase Imports for Stage 3 (cont’d from Day 1)` has been added to the schedule as the final item tomorrow\n\nI will not be available in the afternoon tomorfow, per my previously specified scheduling constraint. Given the only blocking concern is one I raised, it would be better if I'm able to be part of that discussion. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br /><code>Source Phase Imports for Stage 3 (cont’d from Day 1)</code> has been added to the schedule as the final item tomorrow</blockquote></mx-reply>I will not be available in the afternoon tomorfow, per my previously specified scheduling constraint. Given the only blocking concern is one I raised, it would be better if I'm able to be part of that discussion.","m.relates_to":{"m.in_reply_to":{"event_id":"$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE"}},"msgtype":"m.text"},"ts":1684197193098,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SKi3UCl21LYajM_sTsHRrOM9X2l4OtG2rr7dexcjleg"},
{"content":{"body":"* I will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion. ","m.new_content":{"body":"> <@softwarechris:matrix.org>  `Source Phase Imports for Stage 3 (cont’d from Day 1)` has been added to the schedule as the final item tomorrow\n\nI will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a><br /><code>Source Phase Imports for Stage 3 (cont’d from Day 1)</code> has been added to the schedule as the final item tomorrow</blockquote></mx-reply>I will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion.","msgtype":"m.text"},"m.relates_to":{"event_id":"$SKi3UCl21LYajM_sTsHRrOM9X2l4OtG2rr7dexcjleg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684197249012,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tFiiV1mTTOAw_VQKVfzA7MvfWKRIYNWwCbk8rDdbI5s"},
{"content":{"body":"rbuckton: Understood.  I'm sorry, your constraint didn't mention source phase imports, and thus wasn't considered in the scheduling of the continuation.  The time slot for the continuation was the only possible time/day for this item.  I'll defer to guybedford and Luca Casonato for how they wish to proceed.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Understood.  I'm sorry, your constraint didn't mention source phase imports, and thus wasn't considered in the scheduling of the continuation.  The time slot for the continuation was the only possible time/day for this item.  I'll defer to <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> and <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> for how they wish to proceed.","msgtype":"m.text"},"ts":1684197638237,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$zuaQkXWK4_vGMPfnLBU-t0qhXAbCNnpQXwZfNvhMhxM"},
{"content":{"body":"littledan: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period","msgtype":"m.text"},"ts":1684218698906,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U"},
{"content":{"body":"I've been running a regex on the notes post meeting to fix up the added line breaks and multiple spaces, we can keep doing this if they can't adjust their setting. (Just as an FYI)","msgtype":"m.text"},"ts":1684219432121,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$JFP6JCLwfbw16RdnWk3NEbLPd93ueL3rSgfsUGCUYqc"},
{"content":{"body":"Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?","msgtype":"m.text"},"ts":1684224642947,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0"},
{"content":{"body":"> <@ljharb:matrix.org> littledan: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period\n\nYes they are working on this (we are in touch by email)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period</blockquote></mx-reply>Yes they are working on this (we are in touch by email)","m.relates_to":{"m.in_reply_to":{"event_id":"$bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U"}},"msgtype":"m.text"},"ts":1684235994971,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$N1GLzagk4qSAtLyoxxdbWr3vJp2G5bA1Tl8z6eOqaF8"},
{"content":{"body":"> <@lucacasonato:matrix.org> Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?\n\nconflicts with KKL's constraint and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?</blockquote></mx-reply>conflicts with KKL's constraint and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","m.relates_to":{"m.in_reply_to":{"event_id":"$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0"}},"msgtype":"m.text"},"ts":1684239770060,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE"},
{"content":{"body":"> <@lucacasonato:matrix.org> Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?\n\n * conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?</blockquote></mx-reply> * conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","m.new_content":{"body":"conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","msgtype":"m.text"},"m.relates_to":{"event_id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684239788890,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$N1dQ8aVckv7YkkFdKiCD2CLSr4YVoYZVph3pr8WZ9pk"},
{"content":{"body":"Plenary begins in 5 mins!!!","msgtype":"m.text"},"ts":1684248868298,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$RFLTYmquIrSnyfYlkwgf9ZVSZhoufA8K4uglsNeP5rE"},
{"content":{"body":"chairs: I don't know why I put 45 minutes for float16array, 15 is probably plenty","msgtype":"m.text"},"ts":1684248881623,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8XylZMfHl4WiNs2lnGg3MUorYEitPVWZvwRCLk4bwps"},
{"content":{"body":"if we end up having 15 minutes somewhere I am happy to do it wheenever","msgtype":"m.text"},"ts":1684248897957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QnuIqScfL8khkoqzYpm7uhDCA-GHn1e1z86mbMFkUP8"},
{"content":{"body":"I think stage 4 is always \"pending final integration tweaks\"","msgtype":"m.text"},"ts":1684249522565,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EmwRMM9i47WhSmGYUawZFklb4J4C_4AXRECoB7ZndAc"},
{"content":{"body":"thanks -- I've updated it in the schedule at hackmd","msgtype":"m.text"},"ts":1684249525948,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$dBXI1Drj0dfZz07Bx9RaTuK8VEYy4ACGzvQxvm5dbUs"},
{"content":{"body":"the PR is open, I've reviewed it, and only had minor editorial feedback, nothing that would prevent it from advancing","msgtype":"m.text"},"ts":1684249590576,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1vdLP5-F3kjk_FqZWZHyG2y46Ij7RIe0YHmJL7eqJrE"},
{"content":{"body":"Sorry I need to drop due to a medical issue for my partner","msgtype":"m.text"},"ts":1684249622547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$p1iNdhV9z2dTY7G96iWNP3aSJcJhjcbUlOdiB2857eA"},
{"content":{"body":"if others could take notes that would be great","msgtype":"m.text"},"ts":1684249627580,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pjtpna4d_WC3Txmndb9jzr4u2otAgOyUwxIY9xzdPTE"},
{"content":{"body":"> <@softwarechris:matrix.org> conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)\n\nI'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)</blockquote></mx-reply>I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.","m.relates_to":{"m.in_reply_to":{"event_id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE"}},"msgtype":"m.text"},"ts":1684249814706,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs"},
{"content":{"body":"OK, back","msgtype":"m.text"},"ts":1684249861489,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$F4R7PPpfNVlwn90UQhFO0-32yCJ_xpSP0h77P32lDF0"},
{"content":{"body":"> <@rbuckton:matrix.org> I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.\n\nI do not think my presence is critical, though I would love to be present to support the champions. I do not contest the requested changes (or any of the considered options with regard to syntax). Chip will be present to represent Agoric in general.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.</blockquote></mx-reply>I do not think my presence is critical, though I would love to be present to support the champions. I do not contest the requested changes (or any of the considered options with regard to syntax). Chip will be present to represent Agoric in general.","m.relates_to":{"m.in_reply_to":{"event_id":"$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs"}},"msgtype":"m.text"},"ts":1684250025926,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7Kh2ieHmoZF_h_ba9dHRS3Z4QxWKqggFnaS84mj5Tfk"},
{"content":{"body":"Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?","msgtype":"m.text"},"ts":1684250079925,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"},
{"content":{"body":"merges https://github.com/tc39/proposal-array-grouping/pull/52 adding a warning to the README","msgtype":"m.emote"},"ts":1684250156704,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QiVKQPBEWN1A2fRu-CAnL4bafQGr6Egj6IacPyozDDY"},
{"content":{"body":"Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?","msgtype":"m.text"},"ts":1684250262706,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk"},
{"content":{"body":"I'll also state that https://github.com/tc39/proposal-import-reflection/pull/45 addresses my concern. While it is unfortunate that the `import.<phase>()` format doesn't use a verb for the method name, doing so would break symmetry with the `import <phase>` static syntax, so I'm not quite so concerned (for example, `import instance mod from \"url\"` could have a dynamic version named `import.instantiate(url)`, but that would break the symmetry that ljharb prefers).","format":"org.matrix.custom.html","formatted_body":"I'll also state that https://github.com/tc39/proposal-import-reflection/pull/45 addresses my concern. While it is unfortunate that the <code>import.&lt;phase&gt;()</code> format doesn't use a verb for the method name, doing so would break symmetry with the <code>import &lt;phase&gt;</code> static syntax, so I'm not quite so concerned (for example, <code>import instance mod from &quot;url&quot;</code> could have a dynamic version named <code>import.instantiate(url)</code>, but that would break the symmetry that <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> prefers).","msgtype":"m.text"},"ts":1684250304081,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WLrZvLLM_FBlFN5F3qgfZw9T7ECrePlkUtpIvHxLAjw"},
{"content":{"body":"> <@tolmasky:matrix.org> Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?\n\nno, you have to use Reflect.construct i believe","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk\">In reply to</a> <a href=\"https://matrix.to/#/@tolmasky:matrix.org\">@tolmasky:matrix.org</a><br>Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?</blockquote></mx-reply>no, you have to use Reflect.construct i believe","m.relates_to":{"m.in_reply_to":{"event_id":"$BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk"}},"msgtype":"m.text"},"ts":1684250392127,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tFfxMbwyFHjo_Nw5NcBU4NrKQXp5hQjMq50PujL5qEc"},
{"content":{"body":"> <@tolmasky:matrix.org> Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?\n\n * you have to use Reflect.construct i believe if you support pre-class syntax engines","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk\">In reply to</a> <a href=\"https://matrix.to/#/@tolmasky:matrix.org\">@tolmasky:matrix.org</a><br>Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?</blockquote></mx-reply> * you have to use Reflect.construct i believe if you support pre-class syntax engines","m.new_content":{"body":"you have to use Reflect.construct i believe if you support pre-class syntax engines","msgtype":"m.text"},"m.relates_to":{"event_id":"$tFfxMbwyFHjo_Nw5NcBU4NrKQXp5hQjMq50PujL5qEc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684250408731,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B27LaFUmIaDemNkIUU7N3E7fXOkUY9XmFXljb-llvF4"},
{"content":{"body":"But that has side-effects, or can have side effects, right","msgtype":"m.text"},"ts":1684250437517,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$Ehj8qgZ9A2B_zd5O14YYYyvqynDpGkCTRWtkX-rwwqg"},
{"content":{"body":"https://github.com/tc39/ecma402/wiki/Proposal-and-PR-Progress-Tracking#stage-3","msgtype":"m.text"},"ts":1684250513435,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$KI7auQE6sX8Eh7wwz9mxAQO0HKaxbvUYDBpUJrx-sGc"},
{"content":{"body":"Francisco Tolmasky: yeah, there's no way to *just* test for `[[Construct]]`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">Francisco Tolmasky</a>: yeah, there's no way to <em>just</em> test for <code>[[Construct]]</code>","msgtype":"m.text"},"ts":1684251057082,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$H1fi5rTTDWug3hmg3AOjpVAGYPi6x9RNOebfiNWQH6o"},
{"content":{"body":"Michael Ficarra: Is that because class X extends Tested_Value { } also has side-effects (perhaps by having the prototype key be a getter or something)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Is that because class X extends Tested_Value { } also has side-effects (perhaps by having the prototype key be a getter or something)","msgtype":"m.text"},"ts":1684251109089,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$RLX86cfMuv6W4xiulLAEceeimQqAwUVXOJfUHFVKH8I"},
{"content":{"body":"yeah, I think just the prototype getter","msgtype":"m.text"},"ts":1684251244396,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ExNzChoFEKrpSuRIDYJJ0lSktj8vtWeD56x9UJBfk_s"},
{"content":{"body":"> <@softwarechris:matrix.org> Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?\n\nI also need to confirm that Chip is willing and able to stand in for me. Please stand by.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?</blockquote></mx-reply>I also need to confirm that Chip is willing and able to stand in for me. Please stand by.","m.relates_to":{"m.in_reply_to":{"event_id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"}},"msgtype":"m.text"},"ts":1684251453237,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5qD1jsmy1PAvNjHrsp3DghwB54j4eFfrY-NL6lSbXtM"},
{"content":{"body":"if we have a check mark, we might as well make that check link to the anchor where the urgent info is discussed","msgtype":"m.text"},"ts":1684251591832,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ho1dv-D6Oq0fb51jL608hCTxwZx6fidEtRiaaHlizDM"},
{"content":{"body":"prefer not to have a new col on the proposals table that is usually empty, but not a big deal if col is narrow","msgtype":"m.text"},"ts":1684251654430,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Va6z4agduLuAwQXaqSx4pJU35WPWeBzvzqqI1wDeJi0"},
{"content":{"body":"I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth","msgtype":"m.text"},"ts":1684251833514,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g"},
{"content":{"body":"proposal links to the readme and readme documents seems like the right balance","msgtype":"m.text"},"ts":1684251850187,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XpnQ-eL6isTEdiJQ5UIF4niHQdIud4Q7Jt9J4yhLE5M"},
{"content":{"body":"but I also don't care very much","msgtype":"m.text"},"ts":1684251854416,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QhNtVdgUkYDC3Hepkn2X9UPZlg0S_zdqkNZIbGDNrfg"},
{"content":{"body":"Kris Kowal: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂","msgtype":"m.text"},"ts":1684251859893,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds"},
{"content":{"body":" * proposals table links to the readme and readme documents seems like the right balance","m.new_content":{"body":"proposals table links to the readme and readme documents seems like the right balance","msgtype":"m.text"},"m.relates_to":{"event_id":"$XpnQ-eL6isTEdiJQ5UIF4niHQdIud4Q7Jt9J4yhLE5M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684251868976,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cPofDc759mqd8Sfty6xzndqHG7MnazNSuwNA00P3-9M"},
{"content":{"body":"> <@bakkot:matrix.org> I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth\n\nIs the proposals list currently auto-generated?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth</blockquote></mx-reply>Is the proposals list currently auto-generated?","m.relates_to":{"m.in_reply_to":{"event_id":"$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g"}},"msgtype":"m.text"},"ts":1684251884544,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QjjRbGMAg44e61r-Go0O3TKysNAL-E69JmBPaAVJsak"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1684251895739,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$giOCW798Eg9zU3nUTsGf4Z5bDn6L6gWTVWcF6xOh69I"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1684251903265,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$2hya487XSC2GOSuWHymVUHTUdr0Hyj_0U1bCineCJoY"},
{"content":{"body":"no, and it's missing things as such","msgtype":"m.text"},"ts":1684251917318,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$_CkW7f0j_Z4--DS_OF3sjbkq5n4csHei9TeDULQutgk"},
{"content":{"body":"oh, I think to some extent, yeah","msgtype":"m.text"},"ts":1684251923996,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$IWDQCs-rW-1f1FWsN9TmVVC5Tye1mpX79vCBDFO1xhg"},
{"content":{"body":"for example the \"last presentation\" column is pretty outdated","msgtype":"m.text"},"ts":1684251932432,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SCWOrnEooMa7ud0pzpdHy1lcBo5gd9Egc2QlkXQ_4Fs"},
{"content":{"body":"the website picks up the dataset from the dataset repo","msgtype":"m.text"},"ts":1684251935102,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$raxioq6AQAnHMnAQomJ_uG7qWZtDbTTg2J6P4wDM5rw"},
{"content":{"body":"The summary is for major points raised; people keep dictating the conclusion and calling it the summary. It's OK if we don't have summaries, if people don't want to capture this information.","msgtype":"m.text"},"ts":1684252065482,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Mb5ChIq-vOk2J5Tr3ZW_vpr8c2tsJ5LYZitaZiCCs-A"},
{"content":{"body":"the idea of the summary is to make a shorter version of the lengthy discussion above, so we capture more than just the conclusion","msgtype":"m.text"},"ts":1684252097520,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hSzAoMf47cOR2ZrN6C7oETF5RttLMT13v222QnN0Eso"},
{"content":{"body":"of course dictating the conclusion is a really good practice and we should keep doing it!","msgtype":"m.text"},"ts":1684252106368,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_queN8d1gw7Sj56viFm2DyYkXVFHXsUr9AJvsisrYQg"},
{"content":{"body":"Francisco Tolmasky: I did it, but you're not gonna like it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">Francisco Tolmasky</a>: I did it, but you're not gonna like it","msgtype":"m.text"},"ts":1684252122838,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TH7dcwNqtRD7_MW7o8HvKm7yRf3wWxWqsSJbQa-mnLQ"},
{"content":{"body":"`let isConstructor = (a) => { if (a == null) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }, () => {}) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>let isConstructor = (a) =&gt; { if (a == null) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }, () =&gt; {}) } catch { return false; } return true; }</code>","msgtype":"m.text"},"ts":1684252154745,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1684252185878,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pTFjZBqDQYlUek2v_HYF5LAJ49v9st4ezGEOWlUafSg"},
{"content":{"body":"Why wouldn't I like it? I love it!","msgtype":"m.text"},"ts":1684252192995,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$JOB-culqOAD86p5UPFHK-3Sh1lSYzJ3E5Z0QwDwYE7k"},
{"content":{"body":"i assume that only works with a native finally tho?","msgtype":"m.text"},"ts":1684252196472,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$swA-HHODmKgEMW9-kaIMNj1oz6PrKOMSRTW3o6J6NBY"},
{"content":{"body":"> <@softwarechris:matrix.org> Kris Kowal: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂\n\nI’ve confirmed with Chip that you can ignore my constraint! Thanks.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂</blockquote></mx-reply>I’ve confirmed with Chip that you can ignore my constraint! Thanks.","m.relates_to":{"m.in_reply_to":{"event_id":"$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds"}},"msgtype":"m.text"},"ts":1684252228524,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$U8F4RqQXqbO-Lb-xlb2xnG30a3QSfXkozYov-BNk8T8"},
{"content":{"body":"thanks Kris!  I think the Weds option may work better for all involved, but waiting on Luca + Guy to proceed","msgtype":"m.text"},"ts":1684252296128,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$wrIClFVviUamWXI9sPRJTbcS8HxeaZw7DFLlMqDUnyY"},
{"content":{"body":"> <@softwarechris:matrix.org> Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?\n\nyes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?</blockquote></mx-reply>yes","m.relates_to":{"m.in_reply_to":{"event_id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"}},"msgtype":"m.text"},"ts":1684252403355,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$AhUbvSujRTJ253rmnbg5ZclZwcKzatLbuQ_i40pyzkQ"},
{"content":{"body":"sorry, responded to wrong message","msgtype":"m.text"},"ts":1684252435464,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$sFSUVfQ00g2gEeZ2Me0aqw5ebM_EKSK03zkhDhf8lLA"},
{"content":{"body":"yes to **wed**","format":"org.matrix.custom.html","formatted_body":"yes to <strong>wed</strong>","msgtype":"m.text"},"ts":1684252440627,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1p4FkkLBeuAmn-h_K7kt0Ic6ysDtCrnl99fJr1RptHs"},
{"content":{"body":"ok, perfect!  thank you!","msgtype":"m.text"},"ts":1684252447149,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$778pTT1Nrh2NQ22ZLcUIxPO8FdghJx9Ont7_YNs9zas"},
{"content":{"body":"this has the added benefit of offering double the available time (40 mins now instead of 20m)","msgtype":"m.text"},"ts":1684252659369,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$s2ztVROPOF5K73-fXbsA7ETyGS0sLsC7ufG-hTjInT8"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684252752462,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tQh6qMSOiUk5fUcPhqW7ZEtebxIr3KkRMVNJSP7U4RA"},
{"content":{"body":"`Source Phase Imports for Stage 3 (cont'd from Day 1)` will be Weds afternoon","format":"org.matrix.custom.html","formatted_body":"<code>Source Phase Imports for Stage 3 (cont'd from Day 1)</code> will be Weds afternoon","msgtype":"m.text"},"ts":1684252790871,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$n5M4L6euvJBMbM83TBsHFLRfQPo9fTMKilTHWi6XPps"},
{"content":{"body":"waldemar I just tested this code with the _current_ proposal, and it alerts `5` as expected:\n```js\nfunction minusTwo({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v - 2)\n    },\n    get() {\n      return get.call(this) + 2;\n    }\n  }\t\n}\n\nfunction timesFour({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v * 4)\n    },\n    get() {\n      return get.call(this) / 4;\n    }\n  }\t\n}\n\nclass Foo {\n  @minusTwo @timesFour accessor bar = 5;\n}\n\nconst foo = new Foo();\n\nfoo.bar = 5;\t\nalert(`Serializing and de-serializing 5 yields ${foo.bar}`)\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> I just tested this code with the <em>current</em> proposal, and it alerts <code>5</code> as expected:</p>\n<pre><code class=\"language-js\">function minusTwo({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v - 2)\n    },\n    get() {\n      return get.call(this) + 2;\n    }\n  }\t\n}\n\nfunction timesFour({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v * 4)\n    },\n    get() {\n      return get.call(this) / 4;\n    }\n  }\t\n}\n\nclass Foo {\n  @minusTwo @timesFour accessor bar = 5;\n}\n\nconst foo = new Foo();\n\nfoo.bar = 5;\t\nalert(`Serializing and de-serializing 5 yields ${foo.bar}`)\n</code></pre>\n","msgtype":"m.text"},"ts":1684252972213,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aK8g2u3ROBj_KQR2VUUTJ3SNi9HJTAGpLPVQyzN56GI"},
{"content":{"body":"( https://babeljs.io/repl#?browsers=ie%2010&build=&builtIns=false&corejs=3.21&spec=false&loose=true&code_lz=GYVwdgxgLglg9mABAWxmEBnAKgdzgCgG9EMBTKAGkQHNzEBfASkUIChFEAnckTpNjhzJR8AN2YDBQ8gDoIAQwA2i_FAAWMDFVGIAtIgBMjdoPoUTHWiIkXB3KLyRW5Sles3MA1IYDct-ib0AJCsAaygkLAIiLDIpBgAYnC8RCTkVFYMNhz2jiy2wmLZUmlQLsqqGlqIOgBUiAAsxlJmtlb4xVK5fDSyChXuGMwA9I1-LYEhYRCK8hgYiElw-RwAAqjo2HiIq7HxSbyI8hAQ8RhwnIgARvKXALyIAKx-0wgYUIjAcMsPYKQ4i2-HT84W-Mhu9yePhCSlInBEAAMAMpwmBKGAALzQ1COYAAJog8aRdGROGjFJjsU9EABPGCkRR4hYAEkIXzg4Nu9ARjCAA&debug=false&forceAllTransforms=false&modules=commonjs&shippedProposals=false&circleciRepo=&evaluate=true&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=env%2Cstage-2&prettier=false&targets=&version=7.21.8&externalPlugins=&assumptions=%7B%7D )","msgtype":"m.text"},"ts":1684253005037,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jPB0SIOCSYvJqn77Gbx9m0pGm_AotUSn7GdqbaL3Pxg"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253012852,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-mheYUMeKjXqfGqoFJPB9PTCIJifQjBY_YnOR3Q5Xks"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253024186,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lVp9IbmBbvJ9q6Z7TeKq0GbP6Jw07D6jNvJeUqWRshY"},
{"content":{"body":"ljharb: Outermost to innermost feels counterintuitive but if you think about the setters as successively wrapping each other, this is the natural order to fall out","msgtype":"m.text"},"ts":1684253255983,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qRBl_-iNdhu3riXrknIGj0i6HeDSRJDVgxdeD6_ccYE"},
{"content":{"body":"so the wrapping is what happens inner to outer","msgtype":"m.text"},"ts":1684253279879,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0HHnp_EiCsE3kBqsS73lxd-lu2D8Kp7LSMkIizAUGr8"},
{"content":{"body":"ljharb: it'd need a queue, which is a very different design","msgtype":"m.text"},"ts":1684253392924,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$gMfV-kYiA9oGZmQsOf2uUGoSWyablfkADwXXGwEB3Kk"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1684253421126,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EMswXC2mwHgLm5zwbpP-OmHOErt87xvQgbOKtCri5Gk"},
{"content":{"body":"a different design for who? spec/implementations, decorator authors, or decorator users?","msgtype":"m.text"},"ts":1684253421238,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WN1GAYuaJ4-zO4KOA-7VsV3opLfGFP5DVsfUNbexYGY"},
{"content":{"body":"for the proposal itself","msgtype":"m.text"},"ts":1684253425948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kqUaNqa29HoGaJS1m1CnUAF7st12hW-zkJSjc4YMWN0"},
{"content":{"body":"I think the order of setters is correct, because this would be how it'd behave if you manually wrapped a class method","msgtype":"m.text"},"ts":1684253428939,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$R7OkcbdJRTfgl2M-u4OAi-B9GL0UXnzPKF5SNJG1b3Y"},
{"content":{"body":"for all stakeholders you list","msgtype":"m.text"},"ts":1684253444216,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lgZkRPduXbC5oR83Yz9kYJ2K4XAC4tFdnU6jn6YOVa8"},
{"content":{"body":"Also, the order of getters is correct (as discussed earlier)","msgtype":"m.text"},"ts":1684253446884,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$fSXIjSVg-KxBRXahZg2Grk6_9naax7rEIURz91uro9M"},
{"content":{"body":"This issue is complex... I'm not sure I fully understand the issue and the consequences of each solution... ","msgtype":"m.text"},"ts":1684253473190,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$AHf-U3G7EttzRSkf912vB7pkai-tzZgbOHgyd_MX-YM"},
{"content":{"body":"like, i don't think of any use case for multiple decorators, legacy or standard, is \"accumulate into a list, which is evaluated (setters, getters, initializers) in order later\"","msgtype":"m.text"},"ts":1684253499265,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zY3HNq6BmRhOXjy2tfLJsYcsRlVYOykixaTSxrmD5MI"},
{"content":{"body":"if that is the model you think it ought to be, that's a redesign","msgtype":"m.text"},"ts":1684253515232,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TXUlQD7fkewmfZm3yemXa64tGzxP3C0MGH71JyJE_9Q"},
{"content":{"body":"`const timesTwo = x => x * 2; const minusFour = x => x - 4; const wrapped = x => minusFour(timesTwo(x));` is what i'd expect","format":"org.matrix.custom.html","formatted_body":"<code>const timesTwo = x =&gt; x * 2; const minusFour = x =&gt; x - 4; const wrapped = x =&gt; minusFour(timesTwo(x));</code> is what i'd expect","msgtype":"m.text"},"ts":1684253589585,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YQJeyQM0ig-LN2kRePV8V10ig-Ra-G_5kyY8jSmXr7U"},
{"content":{"body":"IOW, mental model of decorators is _replacement_, so if you want multiple decorators to apply, you need to make a new wrapper that calls the old one","format":"org.matrix.custom.html","formatted_body":"IOW, mental model of decorators is <em>replacement</em>, so if you want multiple decorators to apply, you need to make a new wrapper that calls the old one","msgtype":"m.text"},"ts":1684253590704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$00leRTirGb5_mULmKffEq1Lgd2W-dqW8UKdSN48ztJs"},
{"content":{"body":"As littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":"As littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","msgtype":"m.text"},"ts":1684253593713,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aLsxPb-rJ974tOM0Q8iv7x26Pk_czvL2Fe49_5gqxc8"},
{"content":{"body":" * Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":" * Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","m.new_content":{"body":"Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":"Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$aLsxPb-rJ974tOM0Q8iv7x26Pk_czvL2Fe49_5gqxc8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253604493,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$t5o3O8hptoQMJ1PaaaRDVq46GV_GoSATgak3j0CUySM"},
{"content":{"body":"it sounds like your mental model of decorators is _linear list of hooks_","format":"org.matrix.custom.html","formatted_body":"it sounds like your mental model of decorators is <em>linear list of hooks</em>","msgtype":"m.text"},"ts":1684253616885,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QEP7U4i-caxP15GYT6M3dCjYrhTuSpRk7AAeAxNwFec"},
{"content":{"body":"which is not what it is","msgtype":"m.text"},"ts":1684253618960,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1ODFLxBXSNbsdTC60ND2_IVL-wIh3ke1fhYlW7-eZXY"},
{"content":{"body":"Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter","format":"org.matrix.custom.html","formatted_body":"Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter","msgtype":"m.text"},"ts":1684253673778,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fd-RThuVJU5cbdV-_z6WzbnBAZetcu1bpzysYPIGv20"},
{"content":{"body":"eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce this limitation, imo.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce this limitation, imo.","msgtype":"m.text"},"ts":1684253685353,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kc0NI2CXQtHaFDgoTWO3WqDv9U96nXCUFTth3ED5eJs"},
{"content":{"body":" * eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","m.new_content":{"body":"eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","msgtype":"m.text"},"m.relates_to":{"event_id":"$kc0NI2CXQtHaFDgoTWO3WqDv9U96nXCUFTth3ED5eJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253694172,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$alDoGXtDq-wHX9IR4nPQAgZ8i605biGeogAuOL6ljOg"},
{"content":{"body":"Also chairs I'm travelling and I don't have a good connection, if when it's my turin in TCQ I don't reply please let other people go ahead","msgtype":"m.text"},"ts":1684253714258,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LK2jRxiayy8SnDYXxzPXLhbIjq-YT7liZEq_qkgrcqw"},
{"content":{"body":" * Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","format":"org.matrix.custom.html","formatted_body":" * Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","m.new_content":{"body":"Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","format":"org.matrix.custom.html","formatted_body":"Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","msgtype":"m.text"},"m.relates_to":{"event_id":"$fd-RThuVJU5cbdV-_z6WzbnBAZetcu1bpzysYPIGv20","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253740175,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$l2K77qB9TGR9l7eRyyv4PKdyoWd-DSiUyHFIQNaA4GA"},
{"content":{"body":" * Also chairs I'm travelling and I don't have a good connection, if when it's my turn in TCQ I don't reply please let other people go ahead","m.new_content":{"body":"Also chairs I'm travelling and I don't have a good connection, if when it's my turn in TCQ I don't reply please let other people go ahead","msgtype":"m.text"},"m.relates_to":{"event_id":"$LK2jRxiayy8SnDYXxzPXLhbIjq-YT7liZEq_qkgrcqw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253756651,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hsup7nab3pruPTsDAvJ2lS7FPPrLZ3rsq24Wym-m5JU"},
{"content":{"body":"nicolo-ribaudo: Would an `init()` change the order of the calls?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Would an <code>init()</code> change the order of the calls?","msgtype":"m.text"},"ts":1684253810451,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y"},
{"content":{"body":"Like, it seem the same as if we just `inits.reverse()` in the spec?","format":"org.matrix.custom.html","formatted_body":"Like, it seem the same as if we just <code>inits.reverse()</code> in the spec?","msgtype":"m.text"},"ts":1684253857437,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$J767gZ06LV1k-NVrTBh8fAVmq1FCj1PEEI88kmb0pDg"},
{"content":{"body":"> <@jridgewell:matrix.org> nicolo-ribaudo: Would an `init()` change the order of the calls?\n\nHaving\n```js\ninit(v) {\n  nextInit(v * 2)\n}\n```\nwould allow having the same order of function calls as `set()` _and_ the same order of transforms","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Would an <code>init()</code> change the order of the calls?</blockquote></mx-reply><p>Having</p>\n<pre><code class=\"language-js\">init(v) {\n  nextInit(v * 2)\n}\n</code></pre>\n<p>would allow having the same order of function calls as <code>set()</code> <em>and</em> the same order of transforms</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y"}},"msgtype":"m.text"},"ts":1684253884365,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis"},
{"content":{"body":"We'd still have a queue of decorator inits that need to run in some order.","msgtype":"m.text"},"ts":1684253885298,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Wm2h9OH9EB00QkYceNW8k11KlStmxGQRUit5MwKGAaU"},
{"content":{"body":"Because it transforms the parameter rather than the return value","msgtype":"m.text"},"ts":1684253893955,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7M2bS8LpJtBtlpQPimAcFOwgSL6uQMYjbeSDbw3L7qU"},
{"content":{"body":" * Because it transforms the input parameter rather than the return value","m.new_content":{"body":"Because it transforms the input parameter rather than the return value","msgtype":"m.text"},"m.relates_to":{"event_id":"$7M2bS8LpJtBtlpQPimAcFOwgSL6uQMYjbeSDbw3L7qU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253899150,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$YfJn5kFHXaksaplKDEq_fPcdBRlPDDp8awBKI3-ZIj8"},
{"content":{"body":"I don't think that's the case?","msgtype":"m.text"},"ts":1684253969134,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$I-MoflQn6-xLZ9Iv34SsiwUYeeZ6zalxKH1TyHYo8Nc"},
{"content":{"body":"The reason set order happens is because there's a defined starting point (the thing that's exposed to the user of the class)","msgtype":"m.text"},"ts":1684254026583,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$HPNprgl2OlwoylZaxfxUK-271DVSkPI11A12vHEug9o"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Having\n> ```js\n> init(v) {\n>   nextInit(v * 2)\n> }\n> ```\n> would allow having the same order of function calls as `set()` _and_ the same order of transforms\n\nYou would need to be sure to call `nextInit` with `this`, or you'd end up with an error.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br><p>Having</p>\n<pre><code class=\"language-js\">init(v) {\n  nextInit(v * 2)\n}\n</code></pre>\n<p>would allow having the same order of function calls as <code>set()</code> <em>and</em> the same order of transforms</p>\n</blockquote></mx-reply>You would need to be sure to call <code>nextInit</code> with <code>this</code>, or you'd end up with an error.","m.relates_to":{"m.in_reply_to":{"event_id":"$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis"}},"msgtype":"m.text"},"ts":1684254030460,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cOTgeA5M_hy5mD8lKk_KtLPeRa9RQWN62G5CL643h0o"},
{"content":{"body":"Well you already have that requirement with `set` and `get`","format":"org.matrix.custom.html","formatted_body":"Well you already have that requirement with <code>set</code> and <code>get</code>","msgtype":"m.text"},"ts":1684254047589,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pOc82RKobDQMW1HYiNtuW_5RtruzppgOVg9--aRmv3g"},
{"content":{"body":"Yes, but you don't with `init` currently.","format":"org.matrix.custom.html","formatted_body":"Yes, but you don't with <code>init</code> currently.","msgtype":"m.text"},"ts":1684254082578,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$B1EPKBGG_7f87VAxhmS6eT-_5u9NafL-6vFoShhhH6U"},
{"content":{"body":"The `init` isn't exposed to the user, so there's not a defined order","format":"org.matrix.custom.html","formatted_body":"The <code>init</code> isn't exposed to the user, so there's not a defined order","msgtype":"m.text"},"ts":1684254093711,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$InhvZT0RWArbsqiK1LvV-if_8d0eakWB6xGVf1yj4Ec"},
{"content":{"body":"As I understand it, engines didn't want to thunkify the initializer.","msgtype":"m.text"},"ts":1684254127915,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mcoF_buCHnVFuc9CLMcSyvjpH5OISgJ83w4Tu7uuQpg"},
{"content":{"body":"i don't quite remember the exact pushback","msgtype":"m.text"},"ts":1684254208951,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s9Mkt1FRchduZvTKq5nWlJGlmL8pcQsfz0xr5gOZOF4"},
{"content":{"body":"oh, like, per-field, we don't want a per-field initializer function","msgtype":"m.text"},"ts":1684254248887,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs"},
{"content":{"body":"> <@shuyuguo:matrix.org> oh, like, per-field, we don't want a per-field initializer function\n\nYep, that's it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>oh, like, per-field, we don&#39;t want a per-field initializer function</blockquote></mx-reply>Yep, that's it","m.relates_to":{"m.in_reply_to":{"event_id":"$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs"}},"msgtype":"m.text"},"ts":1684254261126,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Tm5FDSnRDXD5YFumTgpFQ3AxLXxM6rDVojSVUI2VMEI"},
{"content":{"body":"Every decorated field would need to have its own initializer function with my proposal","msgtype":"m.text"},"ts":1684254280255,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$DBTNzb3wfFRW_X5e9RncAQ4sBJy62oSnrN1kYI03jpU"},
{"content":{"body":"Suggestion for fuller explanation: Decompose what happens into individual `Object.defineProperty()` calls in the order they would execute.","format":"org.matrix.custom.html","formatted_body":"Suggestion for fuller explanation: Decompose what happens into individual <code>Object.defineProperty()</code> calls in the order they would execute.","msgtype":"m.text"},"ts":1684254470867,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Suggestion for fuller explanation: Decompose what happens into individual `Object.defineProperty()` calls in the order they would execute.\n\nIIRC, and from implementation, only a single defineProperty is called at the end. You need to show how the wrapping occurs, and step through the wrapped functions.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Suggestion for fuller explanation: Decompose what happens into individual <code>Object.defineProperty()</code> calls in the order they would execute.</blockquote></mx-reply>IIRC, and from implementation, only a single defineProperty is called at the end. You need to show how the wrapping occurs, and step through the wrapped functions.","m.relates_to":{"m.in_reply_to":{"event_id":"$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70"}},"msgtype":"m.text"},"ts":1684254621814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$KQMdTN3XKJ9LKSjE6e_IRHqG88R26BG2xasgjv4E_Xg"},
{"content":{"body":"ljharb: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then `[Symbol.metadata]` must be defined due to syntax, not dynamic evaluation.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then <code>[Symbol.metadata]</code> must be defined due to syntax, not dynamic evaluation.","msgtype":"m.text"},"ts":1684255224335,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs"},
{"content":{"body":"shu:\n\n```\nclass A {}","format":"org.matrix.custom.html","formatted_body":"<p>shu:</p>\n<pre><code>class A {}\n</code></pre>\n","msgtype":"m.text"},"ts":1684255237252,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$j0y67h_4QZjsuBZBB10KfhIDGtOJYXPBjBPkicRFIWs"},
{"content":{"body":" * shu:\n\n```\nclass A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n```","format":"org.matrix.custom.html","formatted_body":" * <p>shu:</p>\n<pre><code>class A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n</code></pre>\n","m.new_content":{"body":"shu:\n\n```\nclass A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n```","format":"org.matrix.custom.html","formatted_body":"<p>shu:</p>\n<pre><code>class A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$j0y67h_4QZjsuBZBB10KfhIDGtOJYXPBjBPkicRFIWs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684255252519,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GRlaTKCdKKACqN7vWBBgyq0AUIfN578PgRIhITqd8Ew"},
{"content":{"body":"yes, okay, ","msgtype":"m.text"},"ts":1684255259054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q1xFg-HaEJnTa0Av602MlCAtDTNfoM4YvppyINsVIG4"},
{"content":{"body":"> <@rbuckton:matrix.org> ljharb: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then `[Symbol.metadata]` must be defined due to syntax, not dynamic evaluation.\n\ntrue, but that means that decorated classes *now* will suddenly start getting a metadata object","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then <code>[Symbol.metadata]</code> must be defined due to syntax, not dynamic evaluation.</blockquote></mx-reply>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object","m.relates_to":{"m.in_reply_to":{"event_id":"$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs"}},"msgtype":"m.text"},"ts":1684255260379,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1684255261403,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-aKox-pi0_POAFG2khbVDKCdPsiKpEHhxtxxFMeAn1E"},
{"content":{"body":"> <@ljharb:matrix.org> true, but that means that decorated classes *now* will suddenly start getting a metadata object\n\nAre there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our users.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object</blockquote></mx-reply>Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our users.","m.relates_to":{"m.in_reply_to":{"event_id":"$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k"}},"msgtype":"m.text"},"ts":1684255452165,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$B_3kZF7j-aeufBep_R-NZ4KQBuXMngt1F6qcmodPoI0"}
]