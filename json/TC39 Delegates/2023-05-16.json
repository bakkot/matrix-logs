[
{"content":{"body":"> <@softwarechris:matrix.org>  `Source Phase Imports for Stage 3 (cont’d from Day 1)` has been added to the schedule as the final item tomorrow\n\nI will not be available in the afternoon tomorfow, per my previously specified scheduling constraint. Given the only blocking concern is one I raised, it would be better if I'm able to be part of that discussion. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br /><code>Source Phase Imports for Stage 3 (cont’d from Day 1)</code> has been added to the schedule as the final item tomorrow</blockquote></mx-reply>I will not be available in the afternoon tomorfow, per my previously specified scheduling constraint. Given the only blocking concern is one I raised, it would be better if I'm able to be part of that discussion.","m.relates_to":{"m.in_reply_to":{"event_id":"$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE"}},"msgtype":"m.text"},"ts":1684197193098,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SKi3UCl21LYajM_sTsHRrOM9X2l4OtG2rr7dexcjleg"},
{"content":{"body":"* I will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion. ","m.new_content":{"body":"> <@softwarechris:matrix.org>  `Source Phase Imports for Stage 3 (cont’d from Day 1)` has been added to the schedule as the final item tomorrow\n\nI will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$yrxa-8DMXUBJEJjki5OiMilk_DnH7vn3jznG7cXUilE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a><br /><code>Source Phase Imports for Stage 3 (cont’d from Day 1)</code> has been added to the schedule as the final item tomorrow</blockquote></mx-reply>I will not be available in the afternoon tomorrow, per my previously specified scheduling constraint. Given the main concern is one I raised, it would be better if I'm able to be part of that discussion.","msgtype":"m.text"},"m.relates_to":{"event_id":"$SKi3UCl21LYajM_sTsHRrOM9X2l4OtG2rr7dexcjleg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684197249012,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$tFiiV1mTTOAw_VQKVfzA7MvfWKRIYNWwCbk8rDdbI5s"},
{"content":{"body":"rbuckton: Understood.  I'm sorry, your constraint didn't mention source phase imports, and thus wasn't considered in the scheduling of the continuation.  The time slot for the continuation was the only possible time/day for this item.  I'll defer to guybedford and Luca Casonato for how they wish to proceed.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: Understood.  I'm sorry, your constraint didn't mention source phase imports, and thus wasn't considered in the scheduling of the continuation.  The time slot for the continuation was the only possible time/day for this item.  I'll defer to <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> and <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> for how they wish to proceed.","msgtype":"m.text"},"ts":1684197638237,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$zuaQkXWK4_vGMPfnLBU-t0qhXAbCNnpQXwZfNvhMhxM"},
{"content":{"body":"littledan: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period","msgtype":"m.text"},"ts":1684218698906,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U"},
{"content":{"body":"I've been running a regex on the notes post meeting to fix up the added line breaks and multiple spaces, we can keep doing this if they can't adjust their setting. (Just as an FYI)","msgtype":"m.text"},"ts":1684219432121,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$JFP6JCLwfbw16RdnWk3NEbLPd93ueL3rSgfsUGCUYqc"},
{"content":{"body":"Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?","msgtype":"m.text"},"ts":1684224642947,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0"},
{"content":{"body":"> <@ljharb:matrix.org> littledan: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period\n\nYes they are working on this (we are in touch by email)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: it'd be great if we could ask the stenographer tomorrow to bump up their line length to as close to infinity as possible, and also to autocorrect any multiple spaces down into one, including after a period</blockquote></mx-reply>Yes they are working on this (we are in touch by email)","m.relates_to":{"m.in_reply_to":{"event_id":"$bh2hNiDokgtkW3XBItjI9D2SLvocXWVTn6IlK-l6T3U"}},"msgtype":"m.text"},"ts":1684235994971,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$N1GLzagk4qSAtLyoxxdbWr3vJp2G5bA1Tl8z6eOqaF8"},
{"content":{"body":"> <@lucacasonato:matrix.org> Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?\n\nconflicts with KKL's constraint and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?</blockquote></mx-reply>conflicts with KKL's constraint and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","m.relates_to":{"m.in_reply_to":{"event_id":"$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0"}},"msgtype":"m.text"},"ts":1684239770060,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE"},
{"content":{"body":"> <@lucacasonato:matrix.org> Chris de Almeida: any chance we can proceed on thu (in the afternoon overflow)?\n\n * conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HgU5ZuGY3rwiP4pFJ3jIMlRS2LYC3dwTC2nBFJ_9Ik0?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br><a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>: any chance we can proceed on thu (in the afternoon overflow)?</blockquote></mx-reply> * conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","m.new_content":{"body":"conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","format":"org.matrix.custom.html","formatted_body":"conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)","msgtype":"m.text"},"m.relates_to":{"event_id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684239788890,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$N1dQ8aVckv7YkkFdKiCD2CLSr4YVoYZVph3pr8WZ9pk"},
{"content":{"body":"Plenary begins in 5 mins!!!","msgtype":"m.text"},"ts":1684248868298,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$RFLTYmquIrSnyfYlkwgf9ZVSZhoufA8K4uglsNeP5rE"},
{"content":{"body":"chairs: I don't know why I put 45 minutes for float16array, 15 is probably plenty","msgtype":"m.text"},"ts":1684248881623,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8XylZMfHl4WiNs2lnGg3MUorYEitPVWZvwRCLk4bwps"},
{"content":{"body":"if we end up having 15 minutes somewhere I am happy to do it wheenever","msgtype":"m.text"},"ts":1684248897957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QnuIqScfL8khkoqzYpm7uhDCA-GHn1e1z86mbMFkUP8"},
{"content":{"body":"I think stage 4 is always \"pending final integration tweaks\"","msgtype":"m.text"},"ts":1684249522565,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EmwRMM9i47WhSmGYUawZFklb4J4C_4AXRECoB7ZndAc"},
{"content":{"body":"thanks -- I've updated it in the schedule at hackmd","msgtype":"m.text"},"ts":1684249525948,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$dBXI1Drj0dfZz07Bx9RaTuK8VEYy4ACGzvQxvm5dbUs"},
{"content":{"body":"the PR is open, I've reviewed it, and only had minor editorial feedback, nothing that would prevent it from advancing","msgtype":"m.text"},"ts":1684249590576,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1vdLP5-F3kjk_FqZWZHyG2y46Ij7RIe0YHmJL7eqJrE"},
{"content":{"body":"Sorry I need to drop due to a medical issue for my partner","msgtype":"m.text"},"ts":1684249622547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$p1iNdhV9z2dTY7G96iWNP3aSJcJhjcbUlOdiB2857eA"},
{"content":{"body":"if others could take notes that would be great","msgtype":"m.text"},"ts":1684249627580,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pjtpna4d_WC3Txmndb9jzr4u2otAgOyUwxIY9xzdPTE"},
{"content":{"body":"> <@softwarechris:matrix.org> conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)\n\nI'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>conflicts with KKL's constraint (unavailable Thursday) and JGT's constraint (although it appears JGT constraint is satisfied if it's the 13:00-13:30 slot)</blockquote></mx-reply>I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.","m.relates_to":{"m.in_reply_to":{"event_id":"$q_QjpW_DvJIQlJGc4PB1WzHmKQZ_cyfryCKIcpObLkE"}},"msgtype":"m.text"},"ts":1684249814706,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs"},
{"content":{"body":"OK, back","msgtype":"m.text"},"ts":1684249861489,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$F4R7PPpfNVlwn90UQhFO0-32yCJ_xpSP0h77P32lDF0"},
{"content":{"body":"> <@rbuckton:matrix.org> I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.\n\nI do not think my presence is critical, though I would love to be present to support the champions. I do not contest the requested changes (or any of the considered options with regard to syntax). Chip will be present to represent Agoric in general.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I'm reaching out to others on my team to see if someone can be present for the overflow topic this afternoon. Unfortunately, I'm giving a talk in the afternoon that couldn't be rescheduled.</blockquote></mx-reply>I do not think my presence is critical, though I would love to be present to support the champions. I do not contest the requested changes (or any of the considered options with regard to syntax). Chip will be present to represent Agoric in general.","m.relates_to":{"m.in_reply_to":{"event_id":"$dLxFF1Xe7NGEG7VRaXajZQkGzlV0BUVlNDGiIuTbGPs"}},"msgtype":"m.text"},"ts":1684250025926,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7Kh2ieHmoZF_h_ba9dHRS3Z4QxWKqggFnaS84mj5Tfk"},
{"content":{"body":"Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?","msgtype":"m.text"},"ts":1684250079925,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"},
{"content":{"body":"merges https://github.com/tc39/proposal-array-grouping/pull/52 adding a warning to the README","msgtype":"m.emote"},"ts":1684250156704,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QiVKQPBEWN1A2fRu-CAnL4bafQGr6Egj6IacPyozDDY"},
{"content":{"body":"Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?","msgtype":"m.text"},"ts":1684250262706,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk"},
{"content":{"body":"I'll also state that https://github.com/tc39/proposal-import-reflection/pull/45 addresses my concern. While it is unfortunate that the `import.<phase>()` format doesn't use a verb for the method name, doing so would break symmetry with the `import <phase>` static syntax, so I'm not quite so concerned (for example, `import instance mod from \"url\"` could have a dynamic version named `import.instantiate(url)`, but that would break the symmetry that ljharb prefers).","format":"org.matrix.custom.html","formatted_body":"I'll also state that https://github.com/tc39/proposal-import-reflection/pull/45 addresses my concern. While it is unfortunate that the <code>import.&lt;phase&gt;()</code> format doesn't use a verb for the method name, doing so would break symmetry with the <code>import &lt;phase&gt;</code> static syntax, so I'm not quite so concerned (for example, <code>import instance mod from &quot;url&quot;</code> could have a dynamic version named <code>import.instantiate(url)</code>, but that would break the symmetry that <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> prefers).","msgtype":"m.text"},"ts":1684250304081,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WLrZvLLM_FBlFN5F3qgfZw9T7ECrePlkUtpIvHxLAjw"},
{"content":{"body":"> <@tolmasky:matrix.org> Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?\n\nno, you have to use Reflect.construct i believe","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk\">In reply to</a> <a href=\"https://matrix.to/#/@tolmasky:matrix.org\">@tolmasky:matrix.org</a><br>Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?</blockquote></mx-reply>no, you have to use Reflect.construct i believe","m.relates_to":{"m.in_reply_to":{"event_id":"$BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk"}},"msgtype":"m.text"},"ts":1684250392127,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tFfxMbwyFHjo_Nw5NcBU4NrKQXp5hQjMq50PujL5qEc"},
{"content":{"body":"> <@tolmasky:matrix.org> Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?\n\n * you have to use Reflect.construct i believe if you support pre-class syntax engines","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24BM62-dmZoObTnUzlFy9t99gSKHTTHHKT0yIDDIcPYpk\">In reply to</a> <a href=\"https://matrix.to/#/@tolmasky:matrix.org\">@tolmasky:matrix.org</a><br>Is the best (only?) way to observer IsConstructor in client code to do IsConstructor = X => { try { class extends X { } } catch (e) { return e instanceof TypeError } return true } ?</blockquote></mx-reply> * you have to use Reflect.construct i believe if you support pre-class syntax engines","m.new_content":{"body":"you have to use Reflect.construct i believe if you support pre-class syntax engines","msgtype":"m.text"},"m.relates_to":{"event_id":"$tFfxMbwyFHjo_Nw5NcBU4NrKQXp5hQjMq50PujL5qEc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684250408731,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B27LaFUmIaDemNkIUU7N3E7fXOkUY9XmFXljb-llvF4"},
{"content":{"body":"But that has side-effects, or can have side effects, right","msgtype":"m.text"},"ts":1684250437517,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$Ehj8qgZ9A2B_zd5O14YYYyvqynDpGkCTRWtkX-rwwqg"},
{"content":{"body":"https://github.com/tc39/ecma402/wiki/Proposal-and-PR-Progress-Tracking#stage-3","msgtype":"m.text"},"ts":1684250513435,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$KI7auQE6sX8Eh7wwz9mxAQO0HKaxbvUYDBpUJrx-sGc"},
{"content":{"body":"Francisco Tolmasky: yeah, there's no way to *just* test for `[[Construct]]`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">Francisco Tolmasky</a>: yeah, there's no way to <em>just</em> test for <code>[[Construct]]</code>","msgtype":"m.text"},"ts":1684251057082,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$H1fi5rTTDWug3hmg3AOjpVAGYPi6x9RNOebfiNWQH6o"},
{"content":{"body":"Michael Ficarra: Is that because class X extends Tested_Value { } also has side-effects (perhaps by having the prototype key be a getter or something)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Is that because class X extends Tested_Value { } also has side-effects (perhaps by having the prototype key be a getter or something)","msgtype":"m.text"},"ts":1684251109089,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$RLX86cfMuv6W4xiulLAEceeimQqAwUVXOJfUHFVKH8I"},
{"content":{"body":"yeah, I think just the prototype getter","msgtype":"m.text"},"ts":1684251244396,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ExNzChoFEKrpSuRIDYJJ0lSktj8vtWeD56x9UJBfk_s"},
{"content":{"body":"> <@softwarechris:matrix.org> Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?\n\nI also need to confirm that Chip is willing and able to stand in for me. Please stand by.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?</blockquote></mx-reply>I also need to confirm that Chip is willing and able to stand in for me. Please stand by.","m.relates_to":{"m.in_reply_to":{"event_id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"}},"msgtype":"m.text"},"ts":1684251453237,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5qD1jsmy1PAvNjHrsp3DghwB54j4eFfrY-NL6lSbXtM"},
{"content":{"body":"if we have a check mark, we might as well make that check link to the anchor where the urgent info is discussed","msgtype":"m.text"},"ts":1684251591832,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ho1dv-D6Oq0fb51jL608hCTxwZx6fidEtRiaaHlizDM"},
{"content":{"body":"prefer not to have a new col on the proposals table that is usually empty, but not a big deal if col is narrow","msgtype":"m.text"},"ts":1684251654430,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Va6z4agduLuAwQXaqSx4pJU35WPWeBzvzqqI1wDeJi0"},
{"content":{"body":"I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth","msgtype":"m.text"},"ts":1684251833514,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g"},
{"content":{"body":"proposal links to the readme and readme documents seems like the right balance","msgtype":"m.text"},"ts":1684251850187,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XpnQ-eL6isTEdiJQ5UIF4niHQdIud4Q7Jt9J4yhLE5M"},
{"content":{"body":"but I also don't care very much","msgtype":"m.text"},"ts":1684251854416,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QhNtVdgUkYDC3Hepkn2X9UPZlg0S_zdqkNZIbGDNrfg"},
{"content":{"body":"Kris Kowal: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂","msgtype":"m.text"},"ts":1684251859893,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds"},
{"content":{"body":" * proposals table links to the readme and readme documents seems like the right balance","m.new_content":{"body":"proposals table links to the readme and readme documents seems like the right balance","msgtype":"m.text"},"m.relates_to":{"event_id":"$XpnQ-eL6isTEdiJQ5UIF4niHQdIud4Q7Jt9J4yhLE5M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684251868976,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cPofDc759mqd8Sfty6xzndqHG7MnazNSuwNA00P3-9M"},
{"content":{"body":"> <@bakkot:matrix.org> I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth\n\nIs the proposals list currently auto-generated?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />I mildly prefer not to have this in the proposals table just so that there are not multiple sources of truth</blockquote></mx-reply>Is the proposals list currently auto-generated?","m.relates_to":{"m.in_reply_to":{"event_id":"$nYcPsRufDpoDq0J7Q6tG1jskmTvqAI20-jdOvH7wL-g"}},"msgtype":"m.text"},"ts":1684251884544,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QjjRbGMAg44e61r-Go0O3TKysNAL-E69JmBPaAVJsak"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1684251895739,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$giOCW798Eg9zU3nUTsGf4Z5bDn6L6gWTVWcF6xOh69I"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1684251903265,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$2hya487XSC2GOSuWHymVUHTUdr0Hyj_0U1bCineCJoY"},
{"content":{"body":"no, and it's missing things as such","msgtype":"m.text"},"ts":1684251917318,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$_CkW7f0j_Z4--DS_OF3sjbkq5n4csHei9TeDULQutgk"},
{"content":{"body":"oh, I think to some extent, yeah","msgtype":"m.text"},"ts":1684251923996,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$IWDQCs-rW-1f1FWsN9TmVVC5Tye1mpX79vCBDFO1xhg"},
{"content":{"body":"for example the \"last presentation\" column is pretty outdated","msgtype":"m.text"},"ts":1684251932432,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SCWOrnEooMa7ud0pzpdHy1lcBo5gd9Egc2QlkXQ_4Fs"},
{"content":{"body":"the website picks up the dataset from the dataset repo","msgtype":"m.text"},"ts":1684251935102,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$raxioq6AQAnHMnAQomJ_uG7qWZtDbTTg2J6P4wDM5rw"},
{"content":{"body":"The summary is for major points raised; people keep dictating the conclusion and calling it the summary. It's OK if we don't have summaries, if people don't want to capture this information.","msgtype":"m.text"},"ts":1684252065482,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Mb5ChIq-vOk2J5Tr3ZW_vpr8c2tsJ5LYZitaZiCCs-A"},
{"content":{"body":"the idea of the summary is to make a shorter version of the lengthy discussion above, so we capture more than just the conclusion","msgtype":"m.text"},"ts":1684252097520,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hSzAoMf47cOR2ZrN6C7oETF5RttLMT13v222QnN0Eso"},
{"content":{"body":"of course dictating the conclusion is a really good practice and we should keep doing it!","msgtype":"m.text"},"ts":1684252106368,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_queN8d1gw7Sj56viFm2DyYkXVFHXsUr9AJvsisrYQg"},
{"content":{"body":"Francisco Tolmasky: I did it, but you're not gonna like it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">Francisco Tolmasky</a>: I did it, but you're not gonna like it","msgtype":"m.text"},"ts":1684252122838,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TH7dcwNqtRD7_MW7o8HvKm7yRf3wWxWqsSJbQa-mnLQ"},
{"content":{"body":"`let isConstructor = (a) => { if (a == null) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }, () => {}) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>let isConstructor = (a) =&gt; { if (a == null) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }, () =&gt; {}) } catch { return false; } return true; }</code>","msgtype":"m.text"},"ts":1684252154745,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1684252185878,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pTFjZBqDQYlUek2v_HYF5LAJ49v9st4ezGEOWlUafSg"},
{"content":{"body":"Why wouldn't I like it? I love it!","msgtype":"m.text"},"ts":1684252192995,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$JOB-culqOAD86p5UPFHK-3Sh1lSYzJ3E5Z0QwDwYE7k"},
{"content":{"body":"i assume that only works with a native finally tho?","msgtype":"m.text"},"ts":1684252196472,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$swA-HHODmKgEMW9-kaIMNj1oz6PrKOMSRTW3o6J6NBY"},
{"content":{"body":"> <@softwarechris:matrix.org> Kris Kowal: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂\n\nI’ve confirmed with Chip that you can ignore my constraint! Thanks.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: we may be able to move it to Wednesday though.  please hold.  apologies for the disarray -- tough shuffling with constraints 🙂</blockquote></mx-reply>I’ve confirmed with Chip that you can ignore my constraint! Thanks.","m.relates_to":{"m.in_reply_to":{"event_id":"$fmMBtXZ00zm5n3PPvxKamJMIf3vECdi02qsWN98iMds"}},"msgtype":"m.text"},"ts":1684252228524,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$U8F4RqQXqbO-Lb-xlb2xnG30a3QSfXkozYov-BNk8T8"},
{"content":{"body":"thanks Kris!  I think the Weds option may work better for all involved, but waiting on Luca + Guy to proceed","msgtype":"m.text"},"ts":1684252296128,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$wrIClFVviUamWXI9sPRJTbcS8HxeaZw7DFLlMqDUnyY"},
{"content":{"body":"> <@softwarechris:matrix.org> Luca Casonato: guybedford --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?\n\nyes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br><a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> --- it appears the Thursday slot at 13:00 will work, per KKL's blessing there.  sound good?</blockquote></mx-reply>yes","m.relates_to":{"m.in_reply_to":{"event_id":"$DqKD3K-ARjbUNme4itrkuw73jg6kz9xeEbSmkzQnNt4"}},"msgtype":"m.text"},"ts":1684252403355,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$AhUbvSujRTJ253rmnbg5ZclZwcKzatLbuQ_i40pyzkQ"},
{"content":{"body":"sorry, responded to wrong message","msgtype":"m.text"},"ts":1684252435464,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$sFSUVfQ00g2gEeZ2Me0aqw5ebM_EKSK03zkhDhf8lLA"},
{"content":{"body":"yes to **wed**","format":"org.matrix.custom.html","formatted_body":"yes to <strong>wed</strong>","msgtype":"m.text"},"ts":1684252440627,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1p4FkkLBeuAmn-h_K7kt0Ic6ysDtCrnl99fJr1RptHs"},
{"content":{"body":"ok, perfect!  thank you!","msgtype":"m.text"},"ts":1684252447149,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$778pTT1Nrh2NQ22ZLcUIxPO8FdghJx9Ont7_YNs9zas"},
{"content":{"body":"this has the added benefit of offering double the available time (40 mins now instead of 20m)","msgtype":"m.text"},"ts":1684252659369,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$s2ztVROPOF5K73-fXbsA7ETyGS0sLsC7ufG-hTjInT8"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }) } catch { return false; } return true; }</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684252752462,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tQh6qMSOiUk5fUcPhqW7ZEtebxIr3KkRMVNJSP7U4RA"},
{"content":{"body":"`Source Phase Imports for Stage 3 (cont'd from Day 1)` will be Weds afternoon","format":"org.matrix.custom.html","formatted_body":"<code>Source Phase Imports for Stage 3 (cont'd from Day 1)</code> will be Weds afternoon","msgtype":"m.text"},"ts":1684252790871,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$n5M4L6euvJBMbM83TBsHFLRfQPo9fTMKilTHWi6XPps"},
{"content":{"body":"waldemar I just tested this code with the _current_ proposal, and it alerts `5` as expected:\n```js\nfunction minusTwo({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v - 2)\n    },\n    get() {\n      return get.call(this) + 2;\n    }\n  }\t\n}\n\nfunction timesFour({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v * 4)\n    },\n    get() {\n      return get.call(this) / 4;\n    }\n  }\t\n}\n\nclass Foo {\n  @minusTwo @timesFour accessor bar = 5;\n}\n\nconst foo = new Foo();\n\nfoo.bar = 5;\t\nalert(`Serializing and de-serializing 5 yields ${foo.bar}`)\n```","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> I just tested this code with the <em>current</em> proposal, and it alerts <code>5</code> as expected:</p>\n<pre><code class=\"language-js\">function minusTwo({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v - 2)\n    },\n    get() {\n      return get.call(this) + 2;\n    }\n  }\t\n}\n\nfunction timesFour({ set, get }) {\n  return {\n    set(v) {\n      set.call(this, v * 4)\n    },\n    get() {\n      return get.call(this) / 4;\n    }\n  }\t\n}\n\nclass Foo {\n  @minusTwo @timesFour accessor bar = 5;\n}\n\nconst foo = new Foo();\n\nfoo.bar = 5;\t\nalert(`Serializing and de-serializing 5 yields ${foo.bar}`)\n</code></pre>\n","msgtype":"m.text"},"ts":1684252972213,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aK8g2u3ROBj_KQR2VUUTJ3SNi9HJTAGpLPVQyzN56GI"},
{"content":{"body":"( https://babeljs.io/repl#?browsers=ie%2010&build=&builtIns=false&corejs=3.21&spec=false&loose=true&code_lz=GYVwdgxgLglg9mABAWxmEBnAKgdzgCgG9EMBTKAGkQHNzEBfASkUIChFEAnckTpNjhzJR8AN2YDBQ8gDoIAQwA2i_FAAWMDFVGIAtIgBMjdoPoUTHWiIkXB3KLyRW5Sles3MA1IYDct-ib0AJCsAaygkLAIiLDIpBgAYnC8RCTkVFYMNhz2jiy2wmLZUmlQLsqqGlqIOgBUiAAsxlJmtlb4xVK5fDSyChXuGMwA9I1-LYEhYRCK8hgYiElw-RwAAqjo2HiIq7HxSbyI8hAQ8RhwnIgARvKXALyIAKx-0wgYUIjAcMsPYKQ4i2-HT84W-Mhu9yePhCSlInBEAAMAMpwmBKGAALzQ1COYAAJog8aRdGROGjFJjsU9EABPGCkRR4hYAEkIXzg4Nu9ARjCAA&debug=false&forceAllTransforms=false&modules=commonjs&shippedProposals=false&circleciRepo=&evaluate=true&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=env%2Cstage-2&prettier=false&targets=&version=7.21.8&externalPlugins=&assumptions=%7B%7D )","msgtype":"m.text"},"ts":1684253005037,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jPB0SIOCSYvJqn77Gbx9m0pGm_AotUSn7GdqbaL3Pxg"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; }</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253012852,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-mheYUMeKjXqfGqoFJPB9PTCIJifQjBY_YnOR3Q5Xks"},
{"content":{"body":" * `const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };`","format":"org.matrix.custom.html","formatted_body":" * <code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };</code>","m.new_content":{"body":"`const isConstructor = (a) => { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };`","format":"org.matrix.custom.html","formatted_body":"<code>const isConstructor = (a) =&gt; { if (Object(a) !== a) { return false; } try { Promise.prototype.finally.call({ constructor: { [Symbol.species]: a }, then(){} }); } catch { return false; } return true; };</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$mXjOXvHmUbRnlp33RIGnFgVPFFapzNeYpgjEbt5-Lds","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253024186,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lVp9IbmBbvJ9q6Z7TeKq0GbP6Jw07D6jNvJeUqWRshY"},
{"content":{"body":"ljharb: Outermost to innermost feels counterintuitive but if you think about the setters as successively wrapping each other, this is the natural order to fall out","msgtype":"m.text"},"ts":1684253255983,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qRBl_-iNdhu3riXrknIGj0i6HeDSRJDVgxdeD6_ccYE"},
{"content":{"body":"so the wrapping is what happens inner to outer","msgtype":"m.text"},"ts":1684253279879,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0HHnp_EiCsE3kBqsS73lxd-lu2D8Kp7LSMkIizAUGr8"},
{"content":{"body":"ljharb: it'd need a queue, which is a very different design","msgtype":"m.text"},"ts":1684253392924,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$gMfV-kYiA9oGZmQsOf2uUGoSWyablfkADwXXGwEB3Kk"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1684253421126,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EMswXC2mwHgLm5zwbpP-OmHOErt87xvQgbOKtCri5Gk"},
{"content":{"body":"a different design for who? spec/implementations, decorator authors, or decorator users?","msgtype":"m.text"},"ts":1684253421238,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WN1GAYuaJ4-zO4KOA-7VsV3opLfGFP5DVsfUNbexYGY"},
{"content":{"body":"for the proposal itself","msgtype":"m.text"},"ts":1684253425948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kqUaNqa29HoGaJS1m1CnUAF7st12hW-zkJSjc4YMWN0"},
{"content":{"body":"I think the order of setters is correct, because this would be how it'd behave if you manually wrapped a class method","msgtype":"m.text"},"ts":1684253428939,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$R7OkcbdJRTfgl2M-u4OAi-B9GL0UXnzPKF5SNJG1b3Y"},
{"content":{"body":"for all stakeholders you list","msgtype":"m.text"},"ts":1684253444216,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lgZkRPduXbC5oR83Yz9kYJ2K4XAC4tFdnU6jn6YOVa8"},
{"content":{"body":"Also, the order of getters is correct (as discussed earlier)","msgtype":"m.text"},"ts":1684253446884,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$fSXIjSVg-KxBRXahZg2Grk6_9naax7rEIURz91uro9M"},
{"content":{"body":"This issue is complex... I'm not sure I fully understand the issue and the consequences of each solution... ","msgtype":"m.text"},"ts":1684253473190,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$AHf-U3G7EttzRSkf912vB7pkai-tzZgbOHgyd_MX-YM"},
{"content":{"body":"like, i don't think of any use case for multiple decorators, legacy or standard, is \"accumulate into a list, which is evaluated (setters, getters, initializers) in order later\"","msgtype":"m.text"},"ts":1684253499265,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zY3HNq6BmRhOXjy2tfLJsYcsRlVYOykixaTSxrmD5MI"},
{"content":{"body":"if that is the model you think it ought to be, that's a redesign","msgtype":"m.text"},"ts":1684253515232,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TXUlQD7fkewmfZm3yemXa64tGzxP3C0MGH71JyJE_9Q"},
{"content":{"body":"`const timesTwo = x => x * 2; const minusFour = x => x - 4; const wrapped = x => minusFour(timesTwo(x));` is what i'd expect","format":"org.matrix.custom.html","formatted_body":"<code>const timesTwo = x =&gt; x * 2; const minusFour = x =&gt; x - 4; const wrapped = x =&gt; minusFour(timesTwo(x));</code> is what i'd expect","msgtype":"m.text"},"ts":1684253589585,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YQJeyQM0ig-LN2kRePV8V10ig-Ra-G_5kyY8jSmXr7U"},
{"content":{"body":"IOW, mental model of decorators is _replacement_, so if you want multiple decorators to apply, you need to make a new wrapper that calls the old one","format":"org.matrix.custom.html","formatted_body":"IOW, mental model of decorators is <em>replacement</em>, so if you want multiple decorators to apply, you need to make a new wrapper that calls the old one","msgtype":"m.text"},"ts":1684253590704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$00leRTirGb5_mULmKffEq1Lgd2W-dqW8UKdSN48ztJs"},
{"content":{"body":"As littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":"As littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","msgtype":"m.text"},"ts":1684253593713,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aLsxPb-rJ974tOM0Q8iv7x26Pk_czvL2Fe49_5gqxc8"},
{"content":{"body":" * Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":" * Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","m.new_content":{"body":"Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for `@A @B x`, setting traverses `-> A -> B -> x`, and getting traverses `<- A <- B <- x`.","format":"org.matrix.custom.html","formatted_body":"Similar to what @littldan said, decorators are like layers. You pass a value down through the layers when setting, and bring it back up through the layers when getting. So for <code>@A @B x</code>, setting traverses <code>-&gt; A -&gt; B -&gt; x</code>, and getting traverses <code>&lt;- A &lt;- B &lt;- x</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$aLsxPb-rJ974tOM0Q8iv7x26Pk_czvL2Fe49_5gqxc8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253604493,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$t5o3O8hptoQMJ1PaaaRDVq46GV_GoSATgak3j0CUySM"},
{"content":{"body":"it sounds like your mental model of decorators is _linear list of hooks_","format":"org.matrix.custom.html","formatted_body":"it sounds like your mental model of decorators is <em>linear list of hooks</em>","msgtype":"m.text"},"ts":1684253616885,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QEP7U4i-caxP15GYT6M3dCjYrhTuSpRk7AAeAxNwFec"},
{"content":{"body":"which is not what it is","msgtype":"m.text"},"ts":1684253618960,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1ODFLxBXSNbsdTC60ND2_IVL-wIh3ke1fhYlW7-eZXY"},
{"content":{"body":"Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter","format":"org.matrix.custom.html","formatted_body":"Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter","msgtype":"m.text"},"ts":1684253673778,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fd-RThuVJU5cbdV-_z6WzbnBAZetcu1bpzysYPIGv20"},
{"content":{"body":"eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce this limitation, imo.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce this limitation, imo.","msgtype":"m.text"},"ts":1684253685353,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kc0NI2CXQtHaFDgoTWO3WqDv9U96nXCUFTth3ED5eJs"},
{"content":{"body":" * eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","m.new_content":{"body":"eemeli: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: yes, there are a lot of use cases for multiple decorators on an item. far too many to introduce that limitation, imo.","msgtype":"m.text"},"m.relates_to":{"event_id":"$kc0NI2CXQtHaFDgoTWO3WqDv9U96nXCUFTth3ED5eJs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253694172,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$alDoGXtDq-wHX9IR4nPQAgZ8i605biGeogAuOL6ljOg"},
{"content":{"body":"Also chairs I'm travelling and I don't have a good connection, if when it's my turin in TCQ I don't reply please let other people go ahead","msgtype":"m.text"},"ts":1684253714258,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LK2jRxiayy8SnDYXxzPXLhbIjq-YT7liZEq_qkgrcqw"},
{"content":{"body":" * Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","format":"org.matrix.custom.html","formatted_body":" * Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","m.new_content":{"body":"Note that the _order of operations_ is different from _order of function calls_. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","format":"org.matrix.custom.html","formatted_body":"Note that the <em>order of operations</em> is different from <em>order of function calls</em>. Setters change the value before passing it to the next setter, while getters replace it after that it has been received by the next getter (so same order of function calls implies opposite order of transforms)","msgtype":"m.text"},"m.relates_to":{"event_id":"$fd-RThuVJU5cbdV-_z6WzbnBAZetcu1bpzysYPIGv20","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253740175,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$l2K77qB9TGR9l7eRyyv4PKdyoWd-DSiUyHFIQNaA4GA"},
{"content":{"body":" * Also chairs I'm travelling and I don't have a good connection, if when it's my turn in TCQ I don't reply please let other people go ahead","m.new_content":{"body":"Also chairs I'm travelling and I don't have a good connection, if when it's my turn in TCQ I don't reply please let other people go ahead","msgtype":"m.text"},"m.relates_to":{"event_id":"$LK2jRxiayy8SnDYXxzPXLhbIjq-YT7liZEq_qkgrcqw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253756651,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hsup7nab3pruPTsDAvJ2lS7FPPrLZ3rsq24Wym-m5JU"},
{"content":{"body":"nicolo-ribaudo: Would an `init()` change the order of the calls?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Would an <code>init()</code> change the order of the calls?","msgtype":"m.text"},"ts":1684253810451,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y"},
{"content":{"body":"Like, it seem the same as if we just `inits.reverse()` in the spec?","format":"org.matrix.custom.html","formatted_body":"Like, it seem the same as if we just <code>inits.reverse()</code> in the spec?","msgtype":"m.text"},"ts":1684253857437,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$J767gZ06LV1k-NVrTBh8fAVmq1FCj1PEEI88kmb0pDg"},
{"content":{"body":"> <@jridgewell:matrix.org> nicolo-ribaudo: Would an `init()` change the order of the calls?\n\nHaving\n```js\ninit(v) {\n  nextInit(v * 2)\n}\n```\nwould allow having the same order of function calls as `set()` _and_ the same order of transforms","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: Would an <code>init()</code> change the order of the calls?</blockquote></mx-reply><p>Having</p>\n<pre><code class=\"language-js\">init(v) {\n  nextInit(v * 2)\n}\n</code></pre>\n<p>would allow having the same order of function calls as <code>set()</code> <em>and</em> the same order of transforms</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$QdSV6a7NdbHWv3A0DcgF_ELUFrL-XPhuw0YFELTG88Y"}},"msgtype":"m.text"},"ts":1684253884365,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis"},
{"content":{"body":"We'd still have a queue of decorator inits that need to run in some order.","msgtype":"m.text"},"ts":1684253885298,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Wm2h9OH9EB00QkYceNW8k11KlStmxGQRUit5MwKGAaU"},
{"content":{"body":"Because it transforms the parameter rather than the return value","msgtype":"m.text"},"ts":1684253893955,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7M2bS8LpJtBtlpQPimAcFOwgSL6uQMYjbeSDbw3L7qU"},
{"content":{"body":" * Because it transforms the input parameter rather than the return value","m.new_content":{"body":"Because it transforms the input parameter rather than the return value","msgtype":"m.text"},"m.relates_to":{"event_id":"$7M2bS8LpJtBtlpQPimAcFOwgSL6uQMYjbeSDbw3L7qU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684253899150,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$YfJn5kFHXaksaplKDEq_fPcdBRlPDDp8awBKI3-ZIj8"},
{"content":{"body":"I don't think that's the case?","msgtype":"m.text"},"ts":1684253969134,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$I-MoflQn6-xLZ9Iv34SsiwUYeeZ6zalxKH1TyHYo8Nc"},
{"content":{"body":"The reason set order happens is because there's a defined starting point (the thing that's exposed to the user of the class)","msgtype":"m.text"},"ts":1684254026583,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$HPNprgl2OlwoylZaxfxUK-271DVSkPI11A12vHEug9o"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Having\n> ```js\n> init(v) {\n>   nextInit(v * 2)\n> }\n> ```\n> would allow having the same order of function calls as `set()` _and_ the same order of transforms\n\nYou would need to be sure to call `nextInit` with `this`, or you'd end up with an error.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br><p>Having</p>\n<pre><code class=\"language-js\">init(v) {\n  nextInit(v * 2)\n}\n</code></pre>\n<p>would allow having the same order of function calls as <code>set()</code> <em>and</em> the same order of transforms</p>\n</blockquote></mx-reply>You would need to be sure to call <code>nextInit</code> with <code>this</code>, or you'd end up with an error.","m.relates_to":{"m.in_reply_to":{"event_id":"$-yzblcI1T4ldDzEPMDblBEu7y_hc-wWPqp9HLBAuSis"}},"msgtype":"m.text"},"ts":1684254030460,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cOTgeA5M_hy5mD8lKk_KtLPeRa9RQWN62G5CL643h0o"},
{"content":{"body":"Well you already have that requirement with `set` and `get`","format":"org.matrix.custom.html","formatted_body":"Well you already have that requirement with <code>set</code> and <code>get</code>","msgtype":"m.text"},"ts":1684254047589,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pOc82RKobDQMW1HYiNtuW_5RtruzppgOVg9--aRmv3g"},
{"content":{"body":"Yes, but you don't with `init` currently.","format":"org.matrix.custom.html","formatted_body":"Yes, but you don't with <code>init</code> currently.","msgtype":"m.text"},"ts":1684254082578,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$B1EPKBGG_7f87VAxhmS6eT-_5u9NafL-6vFoShhhH6U"},
{"content":{"body":"The `init` isn't exposed to the user, so there's not a defined order","format":"org.matrix.custom.html","formatted_body":"The <code>init</code> isn't exposed to the user, so there's not a defined order","msgtype":"m.text"},"ts":1684254093711,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$InhvZT0RWArbsqiK1LvV-if_8d0eakWB6xGVf1yj4Ec"},
{"content":{"body":"As I understand it, engines didn't want to thunkify the initializer.","msgtype":"m.text"},"ts":1684254127915,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mcoF_buCHnVFuc9CLMcSyvjpH5OISgJ83w4Tu7uuQpg"},
{"content":{"body":"i don't quite remember the exact pushback","msgtype":"m.text"},"ts":1684254208951,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s9Mkt1FRchduZvTKq5nWlJGlmL8pcQsfz0xr5gOZOF4"},
{"content":{"body":"oh, like, per-field, we don't want a per-field initializer function","msgtype":"m.text"},"ts":1684254248887,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs"},
{"content":{"body":"> <@shuyuguo:matrix.org> oh, like, per-field, we don't want a per-field initializer function\n\nYep, that's it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>oh, like, per-field, we don&#39;t want a per-field initializer function</blockquote></mx-reply>Yep, that's it","m.relates_to":{"m.in_reply_to":{"event_id":"$R5yiaohY1Twkanv0meCGSCcWUc7GGuUUR8KQwLM_iLs"}},"msgtype":"m.text"},"ts":1684254261126,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Tm5FDSnRDXD5YFumTgpFQ3AxLXxM6rDVojSVUI2VMEI"},
{"content":{"body":"Every decorated field would need to have its own initializer function with my proposal","msgtype":"m.text"},"ts":1684254280255,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$DBTNzb3wfFRW_X5e9RncAQ4sBJy62oSnrN1kYI03jpU"},
{"content":{"body":"Suggestion for fuller explanation: Decompose what happens into individual `Object.defineProperty()` calls in the order they would execute.","format":"org.matrix.custom.html","formatted_body":"Suggestion for fuller explanation: Decompose what happens into individual <code>Object.defineProperty()</code> calls in the order they would execute.","msgtype":"m.text"},"ts":1684254470867,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Suggestion for fuller explanation: Decompose what happens into individual `Object.defineProperty()` calls in the order they would execute.\n\nIIRC, and from implementation, only a single defineProperty is called at the end. You need to show how the wrapping occurs, and step through the wrapped functions.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Suggestion for fuller explanation: Decompose what happens into individual <code>Object.defineProperty()</code> calls in the order they would execute.</blockquote></mx-reply>IIRC, and from implementation, only a single defineProperty is called at the end. You need to show how the wrapping occurs, and step through the wrapped functions.","m.relates_to":{"m.in_reply_to":{"event_id":"$klDMThW3OuG_nG2SVQISqNwKsESSp5jR-NGR0a_xp70"}},"msgtype":"m.text"},"ts":1684254621814,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$KQMdTN3XKJ9LKSjE6e_IRHqG88R26BG2xasgjv4E_Xg"},
{"content":{"body":"ljharb: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then `[Symbol.metadata]` must be defined due to syntax, not dynamic evaluation.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then <code>[Symbol.metadata]</code> must be defined due to syntax, not dynamic evaluation.","msgtype":"m.text"},"ts":1684255224335,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs"},
{"content":{"body":"shu:\n\n```\nclass A {}","format":"org.matrix.custom.html","formatted_body":"<p>shu:</p>\n<pre><code>class A {}\n</code></pre>\n","msgtype":"m.text"},"ts":1684255237252,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$j0y67h_4QZjsuBZBB10KfhIDGtOJYXPBjBPkicRFIWs"},
{"content":{"body":" * shu:\n\n```\nclass A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n```","format":"org.matrix.custom.html","formatted_body":" * <p>shu:</p>\n<pre><code>class A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n</code></pre>\n","m.new_content":{"body":"shu:\n\n```\nclass A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n```","format":"org.matrix.custom.html","formatted_body":"<p>shu:</p>\n<pre><code>class A {}\nclass B extends A {} // gets A[symbol.metadata], goes to F.prototype\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$j0y67h_4QZjsuBZBB10KfhIDGtOJYXPBjBPkicRFIWs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684255252519,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GRlaTKCdKKACqN7vWBBgyq0AUIfN578PgRIhITqd8Ew"},
{"content":{"body":"yes, okay, ","msgtype":"m.text"},"ts":1684255259054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$q1xFg-HaEJnTa0Av602MlCAtDTNfoM4YvppyINsVIG4"},
{"content":{"body":"> <@rbuckton:matrix.org> ljharb: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then `[Symbol.metadata]` must be defined due to syntax, not dynamic evaluation.\n\ntrue, but that means that decorated classes *now* will suddenly start getting a metadata object","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: only assigning due to dynamic evaluation seems the opposite of what implementers want. IIRC, for the class to have a stable shape resulting from its declaration, then <code>[Symbol.metadata]</code> must be defined due to syntax, not dynamic evaluation.</blockquote></mx-reply>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object","m.relates_to":{"m.in_reply_to":{"event_id":"$DFJutKRNhnIYOCMfI1eB4Mm7ay4ROuZvDzkCnTlYPWs"}},"msgtype":"m.text"},"ts":1684255260379,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1684255261403,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-aKox-pi0_POAFG2khbVDKCdPsiKpEHhxtxxFMeAn1E"},
{"content":{"body":"> <@ljharb:matrix.org> true, but that means that decorated classes *now* will suddenly start getting a metadata object\n\nAre there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our users.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object</blockquote></mx-reply>Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our users.","m.relates_to":{"m.in_reply_to":{"event_id":"$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k"}},"msgtype":"m.text"},"ts":1684255452165,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$B_3kZF7j-aeufBep_R-NZ4KQBuXMngt1F6qcmodPoI0"},
{"content":{"body":"> <@ljharb:matrix.org> true, but that means that decorated classes *now* will suddenly start getting a metadata object\n\n * Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our (TS) users.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object</blockquote></mx-reply> * Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our (TS) users.","m.new_content":{"body":"Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our (TS) users.","format":"org.matrix.custom.html","formatted_body":"Are there any shipping implementations of native decorators where that would be a problem? TS and Babel have downlevel implementations, but since this is only recently shipping I have less of a concern for this being a problem for our (TS) users.","msgtype":"m.text"},"m.relates_to":{"event_id":"$B_3kZF7j-aeufBep_R-NZ4KQBuXMngt1F6qcmodPoI0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684255545951,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ybNn5BxokOM9tb9L774GHpQlD6XUU3BgksrSrkjDBeo"},
{"content":{"body":"Babel's implementation requires users to explicitly specify the date of the TC39 meeting (YYYY-MM) that they want Babel to comply with (there were too many changes to do otherwise 😬), so I'm not concerned of this type of breaking changes","msgtype":"m.text"},"ts":1684255610407,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$TjIinkDLKjuWE7I_fZJ5B0NExVXwsQy8SKw925ma2LE"},
{"content":{"body":"I think the error rate was particularly high in the second hour of the morning, and ljharb noted similarly. I contacted Duane, the owner of the captioning service, and the person who was on during that time block won’t end up repeating for the rest of this meeting; it will be shared by the same two people so they should be able to learn and improve over time. Please be like ljharb and send me any feedback about the notes so I can collect it and ensure it reaches the transcription service.","msgtype":"m.text"},"ts":1684259710904,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$w1j9V7pjUJsVW2myPo6ORb9Rhdjt4JAaQOmMovRntCY"},
{"content":{"body":"> <@ljharb:matrix.org> true, but that means that decorated classes *now* will suddenly start getting a metadata object\n\nHonestly I've been thinking of the decorators proposal as work-in-progress until the metadata part is done. So to me this isn't as much of a case of changing what is already out there.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>true, but that means that decorated classes <em>now</em> will suddenly start getting a metadata object</blockquote></mx-reply>Honestly I've been thinking of the decorators proposal as work-in-progress until the metadata part is done. So to me this isn't as much of a case of changing what is already out there.","m.relates_to":{"m.in_reply_to":{"event_id":"$eunRUDk1gbeo4msiDE4ElPq6e2rrbUr2pcT-5NtKf1k"}},"msgtype":"m.text"},"ts":1684259915123,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$m5W5j8qWIM7JYkgDmqUk2jaUSuIjTidKjT4YtG6yifM"},
{"content":{"body":"Plenary is restarting... now","msgtype":"m.text"},"ts":1684259984232,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pu_YSVuRpk7d7YaYwmHfzVdWbJC9oZF7dKccQD4iooI"},
{"content":{"body":"About this presentation, I'd sort of like to discuss both topics together before drawing a conclusion","msgtype":"m.text"},"ts":1684260236582,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wlx083SQ7oE-iA76F591BHNbSPjR6mDRa84TqnxRydQ"},
{"content":{"body":"fine to discuss one first in between of course, just for concluding","msgtype":"m.text"},"ts":1684260255249,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wlbEwwvRqTWhEN7-A8oGCG2_XPytTYykqPMWafaG730"},
{"content":{"body":"It seems option 1 is more consistent to current iterator behavior?","msgtype":"m.text"},"ts":1684260475066,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$JyGg9Jr2lEIwvBA-czxervy2W0dtPB33QPPHpXlzUjc"},
{"content":{"body":"I believe the transcription quality is higher this time than last time","msgtype":"m.text"},"ts":1684260578173,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JqwpzoqR1WkuufMJT10m4WJ9PGt8tux-N2QznJ4VGnA"},
{"content":{"body":"littledan: \"with fallback only on undefined\" - do you mean and _not_ null? Symbol.iterator uses undefined or null","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: &quot;with fallback only on undefined&quot; - do you mean and <em>not</em> null? Symbol.iterator uses undefined or null","msgtype":"m.text"},"ts":1684260967446,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n-xENLe7KS3s6H3HZqoOtImWktnwD2sqmRSmJBfClHQ"},
{"content":{"body":"(because it goes via GetMethod)","msgtype":"m.text"},"ts":1684260973823,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XsuPRz5EM5pHC_XN4OmA-qz0EFsPv6aiEiJzIgCVeI4"},
{"content":{"body":"Aren't iterators always supposed to meet the requirement that `myIterator[Symbol.iterator]() === myIterator` ? Doing this fallback at all seems weird to me.","format":"org.matrix.custom.html","formatted_body":"Aren't iterators always supposed to meet the requirement that <code>myIterator[Symbol.iterator]() === myIterator</code> ? Doing this fallback at all seems weird to me.","msgtype":"m.text"},"ts":1684261082638,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$GYMQcmDKmLGa7Di_-qkglcYjICBfgkHVQiBG6b4Agv8"},
{"content":{"body":"Bradford Smith: nothing in the language expresses that requirement today, and user-implemented iterators IME usually don't","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: nothing in the language expresses that requirement today, and user-implemented iterators IME usually don't","msgtype":"m.text"},"ts":1684261243765,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LYll8XIRO8gqTs7r-GqK-iEwEBGIA8HL9ivReV5B9IQ"},
{"content":{"body":"and the main place this fallback comes up is in `Iterator.from`, which is specifically for taking a userland iterator and getting something which inherits from Iterator.prototype; we want to accept the user iterators people are writing today","format":"org.matrix.custom.html","formatted_body":"and the main place this fallback comes up is in <code>Iterator.from</code>, which is specifically for taking a userland iterator and getting something which inherits from Iterator.prototype; we want to accept the user iterators people are writing today","msgtype":"m.text"},"ts":1684261289384,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YnA2aCxqxW88o3psA7tItPqrd7qBr81HV70RNo8LcDc"},
{"content":{"body":"> <@bakkot:matrix.org> littledan: \"with fallback only on undefined\" - do you mean and _not_ null? Symbol.iterator uses undefined or null\n\nOops yeah my mistake for trying to correct notes and participate at the same time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$n-xENLe7KS3s6H3HZqoOtImWktnwD2sqmRSmJBfClHQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: \"with fallback only on undefined\" - do you mean and <em>not</em> null? Symbol.iterator uses undefined or null</blockquote></mx-reply>Oops yeah my mistake for trying to correct notes and participate at the same time","m.relates_to":{"m.in_reply_to":{"event_id":"$n-xENLe7KS3s6H3HZqoOtImWktnwD2sqmRSmJBfClHQ"}},"msgtype":"m.text"},"ts":1684261316103,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$iqWO8wyyqWO4KFhfRgHW8Y0RSjo-uUH1FqiqaYqPlb4"},
{"content":{"body":"Interesting. I'm pretty sure closure-compiler's transpilatoin of for-of and similar things relies on `myIterator[Symbol.iterator]() === myIterator`","format":"org.matrix.custom.html","formatted_body":"Interesting. I'm pretty sure closure-compiler's transpilatoin of for-of and similar things relies on <code>myIterator[Symbol.iterator]() === myIterator</code>","msgtype":"m.text"},"ts":1684261320320,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Muyled3JI0lyoqUCdkFd9JBistY4Tbl4itIbC77qAQM"},
{"content":{"body":"I don't think we check for a `next()` method","format":"org.matrix.custom.html","formatted_body":"I don't think we check for a <code>next()</code> method","msgtype":"m.text"},"ts":1684261336967,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$fqP33SKahe7fhBZ8d97HfRu_oXr8bFKOBQSvTmCJV98"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Aren't iterators always supposed to meet the requirement that `myIterator[Symbol.iterator]() === myIterator` ? Doing this fallback at all seems weird to me.\n\nwell yeah we're talking about iterables (anyway that is more a convention than a requirement)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GYMQcmDKmLGa7Di_-qkglcYjICBfgkHVQiBG6b4Agv8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Aren't iterators always supposed to meet the requirement that <code>myIterator[Symbol.iterator]() === myIterator</code> ? Doing this fallback at all seems weird to me.</blockquote></mx-reply>well yeah we're talking about iterables (anyway that is more a convention than a requirement)","m.relates_to":{"m.in_reply_to":{"event_id":"$GYMQcmDKmLGa7Di_-qkglcYjICBfgkHVQiBG6b4Agv8"}},"msgtype":"m.text"},"ts":1684261354992,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$enZqqTwEcFBGX3w7fkpbFqVHymk3XjU8q8WVMHn26ds"},
{"content":{"body":"Bradford Smith: for-of takes iterables, not iterators, so I don't think it comes up?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: for-of takes iterables, not iterators, so I don't think it comes up?","msgtype":"m.text"},"ts":1684261377946,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KKFR7Ko6r8uc_QHat1Cl23UVgtX-jaPZREuELDX4tBo"},
{"content":{"body":"like the way you work with iterators is always \"call the Symbol.iterator method, and then call `next` on the result\"","format":"org.matrix.custom.html","formatted_body":"like the way you work with iterators is always &quot;call the Symbol.iterator method, and then call <code>next</code> on the result&quot;","msgtype":"m.text"},"ts":1684261396075,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8E91whcixE7TkZIB4Ar3gY0jAi0PTuPPssqPi9iAO-Y"},
{"content":{"body":"I thought it was a requirement that all iterators are also iterables","msgtype":"m.text"},"ts":1684261399144,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$an1WYg7q26FDWyXbEmyZmoo6kCyHcgr1yB88AhTCKxI"},
{"content":{"body":"nothing depends on or expresses that requirement","msgtype":"m.text"},"ts":1684261422727,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mDPmiTDDXnUpBX7nmtdeQ6Gan_AMRR5e44iiwIC2p-k"},
{"content":{"body":"Michael Ficarra: Not sure I explained myself clear, I expect we can define a protocol which only have accessors which returns normal value, for example `obj[ProtocolA.x] // normal value`. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: Not sure I explained myself clear, I expect we can define a protocol which only have accessors which returns normal value, for example <code>obj[ProtocolA.x] // normal value</code>.","msgtype":"m.text"},"ts":1684261525900,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$yJggZuzdm4E6lLkVcNILxG2TZZkq4ty9kYUED-SWei0"},
{"content":{"body":"So then `Iterator.from(x)` first tries to treat`x` as an iterable, then falls back to treating it as an iterator, which doesn","format":"org.matrix.custom.html","formatted_body":"So then <code>Iterator.from(x)</code> first tries to treat<code>x</code> as an iterable, then falls back to treating it as an iterator, which doesn","msgtype":"m.text"},"ts":1684261559886,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$5n96ddhN9DDafxwILve_JYCvS4S3XlqoDeAJsoszDuk"},
{"content":{"body":" * So then `Iterator.from(x)` first tries to treat`x` as an iterable, then falls back to treating it as an iterator, which doesn't happen to have a `Symbol.iterator`","format":"org.matrix.custom.html","formatted_body":" * So then <code>Iterator.from(x)</code> first tries to treat<code>x</code> as an iterable, then falls back to treating it as an iterator, which doesn't happen to have a <code>Symbol.iterator</code>","m.new_content":{"body":"So then `Iterator.from(x)` first tries to treat`x` as an iterable, then falls back to treating it as an iterator, which doesn't happen to have a `Symbol.iterator`","format":"org.matrix.custom.html","formatted_body":"So then <code>Iterator.from(x)</code> first tries to treat<code>x</code> as an iterable, then falls back to treating it as an iterator, which doesn't happen to have a <code>Symbol.iterator</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$5n96ddhN9DDafxwILve_JYCvS4S3XlqoDeAJsoszDuk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684261576033,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$VlSev2GDJ1RdcdrNMnDbIzPgFS4OXrV7FwLr5-lLSiE"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1684261746514,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vKolysRMlqrNu2LtCr4hcUtUugzGhg6QUheWc2BYopM"},
{"content":{"body":"all the iterators _in the language_ (and the web platform / node, and those produced by generators) have the property that `myIterator[Symbol.iterator]() === myIterator`, so that should work for everything","format":"org.matrix.custom.html","formatted_body":"all the iterators <em>in the language</em> (and the web platform / node, and those produced by generators) have the property that <code>myIterator[Symbol.iterator]() === myIterator</code>, so that should work for everything","msgtype":"m.text"},"ts":1684261799438,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$70g9L-k1zsQKTJ92qpGLJXydX8vlQFfQbb37VLPr5WU"},
{"content":{"body":"unless you go out of your way to make an iterator which _does_ have a `Symbol.iterator` which is not just `this`, in which case, that's on you","format":"org.matrix.custom.html","formatted_body":"unless you go out of your way to make an iterator which <em>does</em> have a <code>Symbol.iterator</code> which is not just <code>this</code>, in which case, that's on you","msgtype":"m.text"},"ts":1684261813564,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IkofcXQnEPbLPHGIxrUQi-Z9cLeXpIUnQfblRWEQZno"},
{"content":{"body":"I will support failing early if we can \"fix\" `let [] = {[Symbol.iterator](){return {}} }` case...","format":"org.matrix.custom.html","formatted_body":"I will support failing early if we can &quot;fix&quot; <code>let [] = {[Symbol.iterator](){return {}} }</code> case...","msgtype":"m.text"},"ts":1684262031331,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$xHvOFMONDGzU57kya-o9mFVMVHBCoxrUSfVObeSy6Lo"},
{"content":{"body":"I think option 2 not closing is actually pretty bad","msgtype":"m.text"},"ts":1684262359404,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gx5UQ0tIuHoCkMyD80cSPF_NqKTUvPsJL45e-hdiA6E"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1684262382383,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6FSjxcOV3mxoCDJl0GZiRGJdeXYVmigUcELm-luR8PI"},
{"content":{"body":"a little bad anyway","msgtype":"m.text"},"ts":1684262385303,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$r4u7RBSiIbtH-xHGp9OAl4YQ7IFHCh6KEbh-T4LwzCw"},
{"content":{"body":"bakkot: but it never \"opens\" either","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: but it never &quot;opens&quot; either","msgtype":"m.text"},"ts":1684262616903,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$excaVcY3w_CoeonAncZ0UQ2QZsxEIsTGhiyQ2deUkt4"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1684262631513,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pH1jHn07qnoSibDnGA45j6Dk0n_Kl-d-ZKNygTjJBUI"},
{"content":{"body":"at least in the case that you're passing a multiple-shot-iterator","msgtype":"m.text"},"ts":1684262644014,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4Bc10e25If5Pefsm-XkpEjI1D7b-UcJ5w2fTYb_O8KA"},
{"content":{"body":" * at least in the case that you're passing a multiple-shot iterable","m.new_content":{"body":"at least in the case that you're passing a multiple-shot iterable","msgtype":"m.text"},"m.relates_to":{"event_id":"$4Bc10e25If5Pefsm-XkpEjI1D7b-UcJ5w2fTYb_O8KA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684262649256,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-mIXfSMVQ8Q5YKI-FW8Xgpv_AQ8r8XBHtczmK53C2vM"},
{"content":{"body":"but not in the case that you're passing an iterator:\n```\nfunction* gen(){ yield 0; }\nlet it = gen();\n[] = it; // close gen\nconsole.log(it.next().done); // true\n```","format":"org.matrix.custom.html","formatted_body":"<p>but not in the case that you're passing an iterator:</p>\n<pre><code>function* gen(){ yield 0; }\nlet it = gen();\n[] = it; // close gen\nconsole.log(it.next().done); // true\n</code></pre>\n","msgtype":"m.text"},"ts":1684262731787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a4QE0SDVeANZ0SgX3nL30peRXfP2ultBxTnEvgdXpeE"},
{"content":{"body":"it is weird for the \"close gen\" thing to happen if you have `[x] = it` but not `[] = it`","format":"org.matrix.custom.html","formatted_body":"it is weird for the &quot;close gen&quot; thing to happen if you have <code>[x] = it</code> but not <code>[] = it</code>","msgtype":"m.text"},"ts":1684262749156,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G37RSASaVcL7YIdsXzM3Ck9ey92f71O3pvZy0OD6b8U"},
{"content":{"body":"why? if it hasn't touched it why would it need to close it","msgtype":"m.text"},"ts":1684262760896,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v-n1nMlImNTme0rbGQQLiWnJTdWIB4Xv67WTZTz_3OM"},
{"content":{"body":"> <@ljharb:matrix.org> why? if it hasn't touched it why would it need to close it\n\nConsistency with pattern matching? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v-n1nMlImNTme0rbGQQLiWnJTdWIB4Xv67WTZTz_3OM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>why? if it hasn&#39;t touched it why would it need to close it</blockquote></mx-reply>Consistency with pattern matching?","m.relates_to":{"m.in_reply_to":{"event_id":"$v-n1nMlImNTme0rbGQQLiWnJTdWIB4Xv67WTZTz_3OM"}},"msgtype":"m.text"},"ts":1684262812536,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$H2omujTw0S0tghVnxnYoJvcRS4966q2q6gsYcpMqir4"},
{"content":{"body":"A pattern like `[]` is exhaustive, thus will close the iterator.","format":"org.matrix.custom.html","formatted_body":"A pattern like <code>[]</code> is exhaustive, thus will close the iterator.","msgtype":"m.text"},"ts":1684262830256,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7rShP2cxp4woYaa70FnNuzZzugk0_nEHQIK3kgcaLD8"},
{"content":{"body":"pattern matching is still stage 1 and i would assume it would just follow whatever is decided here","msgtype":"m.text"},"ts":1684262833945,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$S-oA78vZg79uKjRmCszryZV6Idy8vU9E-fhh024e1NY"},
{"content":{"body":" * A match pattern like `[]` is exhaustive, thus will close the iterator.","format":"org.matrix.custom.html","formatted_body":" * A match pattern like <code>[]</code> is exhaustive, thus will close the iterator.","m.new_content":{"body":"A match pattern like `[]` is exhaustive, thus will close the iterator.","format":"org.matrix.custom.html","formatted_body":"A match pattern like <code>[]</code> is exhaustive, thus will close the iterator.","msgtype":"m.text"},"m.relates_to":{"event_id":"$7rShP2cxp4woYaa70FnNuzZzugk0_nEHQIK3kgcaLD8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684262835443,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$mGkEkMoCHlQbwaH2EggF6TdYGKl6znNMLbyud3k_SvI"},
{"content":{"body":"ah, hmm","msgtype":"m.text"},"ts":1684262844354,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zv1DyMgQ3nGqn7m4EydoHjARxw-APitKAkamOZNDLJc"},
{"content":{"body":"> <@ljharb:matrix.org> pattern matching is still stage 1 and i would assume it would just follow whatever is decided here\n\nIt can't if array patterns are exhaustive","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S-oA78vZg79uKjRmCszryZV6Idy8vU9E-fhh024e1NY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>pattern matching is still stage 1 and i would assume it would just follow whatever is decided here</blockquote></mx-reply>It can't if array patterns are exhaustive","m.relates_to":{"m.in_reply_to":{"event_id":"$S-oA78vZg79uKjRmCszryZV6Idy8vU9E-fhh024e1NY"}},"msgtype":"m.text"},"ts":1684262872386,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$E4893PrwRJU4ZL3UKjv2QR2oMK816KYUtTsTgcLfm7o"},
{"content":{"body":"My main feeling is, it doesn't seem worth it to change existing things, and 3 and 4 both seem reasonable to me","msgtype":"m.text"},"ts":1684262891658,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$i85V2D8lqH_5JKI3L5u7Rp5QWItQih46bNp8HPsfLOs"},
{"content":{"body":"yeah that kind of falls out of the weirdness of having destructuring not be exhaustive by default, and pattern matching be by default","msgtype":"m.text"},"ts":1684262891793,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Flw8tE0O_cwxdgDywS5yOt-LDh8O4NR-O36X3GvmNF0"},
{"content":{"body":"That said, a match pattern of `[]` will call `next()` at least once","format":"org.matrix.custom.html","formatted_body":"That said, a match pattern of <code>[]</code> will call <code>next()</code> at least once","msgtype":"m.text"},"ts":1684262908069,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9dQEnErZPKy5dsRDpVgj0uN-ZxhITAOMlqO12JSVh2o"},
{"content":{"body":"ah yes, that's true","msgtype":"m.text"},"ts":1684262918006,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eyiUQsNkgVRf7mEkq-J7hH-5K11cyPTT8OOU1kWfZ6M"},
{"content":{"body":"Actually, I honestly don't know if pattern matching informs whether empty array destructuring patterns should close. There's enough of a difference that we could go either way.","msgtype":"m.text"},"ts":1684262976584,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iBF6bcB7dfnyifpYvLVWK3QT9ItMbfxdZ5mLD80KsFE"},
{"content":{"body":"Sorry, could anyone write a simple example to explain the observable diff between option 2 and 3?","msgtype":"m.text"},"ts":1684263271918,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$t6F2jvEHngqI7GcJhrQ-w7hLXSgkXH2JOvMJUxI8YgY"},
{"content":{"body":"(fwiw i don't think the animal names are necessarily consistent across users)","msgtype":"m.text"},"ts":1684263276794,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$C2tdaQwI25U_AjROsDFtTDgL7FE7J7Pf7MB0edV1WXc"},
{"content":{"body":" * (fwiw i don't think the animal names are necessarily consistent across users, but i haven't tested thoroughly)","m.new_content":{"body":"(fwiw i don't think the animal names are necessarily consistent across users, but i haven't tested thoroughly)","msgtype":"m.text"},"m.relates_to":{"event_id":"$C2tdaQwI25U_AjROsDFtTDgL7FE7J7Pf7MB0edV1WXc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684263291748,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TB8lNbjuM_b3-mqrBA6vzsbprEZiPyFd2cJRFeA80mE"},
{"content":{"body":"principle: always be vibin'","msgtype":"m.text"},"ts":1684263298307,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pfMckvSSiaxL_1d5XG93jQqc0SDsEFE5qOofYgmJsJQ"},
{"content":{"body":"can someone who maintains TCQ make it so the reply / new topic / clarifying question / PoO buttons take effect immediately when pressed and then you can enter the topic later?","msgtype":"m.text"},"ts":1684263923892,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$s9F5OMbw06iZbA-4gTXSRelaHmQMbPNlvISkPIk6qIw"},
{"content":{"body":"I'm tired of writing out a topic in the reply just for us to move on :-(","msgtype":"m.text"},"ts":1684263935803,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_10t_poPubKozgqLGx9jF_ubJuwNYSyaaTUtQi3EMPs"},
{"content":{"body":"bakkot: https://github.com/search?q=language%3Ajavascript+grouptoobject&type=code","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: https://github.com/search?q=language%3Ajavascript+grouptoobject&amp;type=code","msgtype":"m.text"},"ts":1684263969756,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_Ba_A5YrjBKeeZ3NRPX6YWjbVBaEFBqHQjvxjXFKEuw"},
{"content":{"body":"sorry I meant as a property name specifically","msgtype":"m.text"},"ts":1684264009874,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UDGYAw1Zhm0zqI-pDBtTuhikc_L4aDBlx2XXvB7ChCs"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1684264010623,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5UxECDQ7_bS-h2t4qV8dVGxqGbWiLk7nmLSo5mQUvsk"},
{"content":{"body":"I see one or two there","msgtype":"m.text"},"ts":1684264016544,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JQJe6oY5Cj05rFi0tDLZZ6BBPY9zn6WSZ5iFLsYP09g"},
{"content":{"body":" * I see one or two there which are properties","m.new_content":{"body":"I see one or two there which are properties","msgtype":"m.text"},"m.relates_to":{"event_id":"$JQJe6oY5Cj05rFi0tDLZZ6BBPY9zn6WSZ5iFLsYP09g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684264021368,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wTawL5eXJ3EHfPlIgoRfosToJg1SITQeHrMowOmiczU"},
{"content":{"body":"someone claimed \"group\" was sufficiently obscure? what?","msgtype":"m.text"},"ts":1684264037491,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$M7Z2qyFS-yeWWiZTyWYjCYxvvuh5JBsLlphooP18IZY"},
{"content":{"body":"> <@ljharb:matrix.org> bakkot: https://github.com/search?q=language%3Ajavascript+grouptoobject&type=code\n\nI see two or three obj.groupToObject and prototype.groupToObject ... 😅","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_Ba_A5YrjBKeeZ3NRPX6YWjbVBaEFBqHQjvxjXFKEuw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: https://github.com/search?q=language%3Ajavascript+grouptoobject&amp;type=code</blockquote></mx-reply>I see two or three obj.groupToObject and prototype.groupToObject ... 😅","m.relates_to":{"m.in_reply_to":{"event_id":"$_Ba_A5YrjBKeeZ3NRPX6YWjbVBaEFBqHQjvxjXFKEuw"}},"msgtype":"m.text"},"ts":1684264062349,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$NgPJ2khRJdw0femygubwkxkzHBIYLjrcwc7x6hY-LIs"},
{"content":{"body":"in there i see `Group.prototype.toObject` but no `prototype.groupToObject`?","format":"org.matrix.custom.html","formatted_body":"in there i see <code>Group.prototype.toObject</code> but no <code>prototype.groupToObject</code>?","msgtype":"m.text"},"ts":1684264077267,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jiGpjrRm3g8HbLZXF6ukfrQatc--UbmrtCYBN51jvW0"},
{"content":{"body":"either way only 64 results on github is astonishingly rare","msgtype":"m.text"},"ts":1684264085298,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Na0rUkj1P_FBNs2GgF6QZMbnCcOuzlx4dJQoa1o2a6k"},
{"content":{"body":"yo i have an idea","msgtype":"m.text"},"ts":1684264136523,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$J6l31ycPnp8c4n_tOHFj8rNPoJYK2kqoZ3vensnMmUA"},
{"content":{"body":"What about the static methods? No need to worry the web compat issue.","msgtype":"m.text"},"ts":1684264144218,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Z2zyz0i4L2Tm0rXsNh9yP82TR8JOxH42KGNvgbn_s7U"},
{"content":{"body":"in this particular case I'm fine with static methods","msgtype":"m.text"},"ts":1684264159487,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4z73kFP1oYzDQmvlEAoB3N9FwMstOWUumVytWKh4KXI"},
{"content":{"body":"but I can imagine having other methods in the future","msgtype":"m.text"},"ts":1684264167581,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p2UnqK2_0SoR4Pf5kHjwu0QCWvMez-zxBjuXPtYZXTE"},
{"content":{"body":"e.g. I would really like a \"sortBy\"","msgtype":"m.text"},"ts":1684264173180,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$t9_adl0A1z1xEsPh1KKu6b3Tcom4cnoEDQaozp5gAGU"},
{"content":{"body":"even though it unfortunately cannot be called that probably","msgtype":"m.text"},"ts":1684264180477,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RBWT3RQkFIxuECyruhsEX6jolYYVLERcu25Ktl7XylY"},
{"content":{"body":"and it would be a huge shame for that to be static","msgtype":"m.text"},"ts":1684264187746,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w7uMeM_k1HJ3FKkqnrsgyu27E9mWLvg5b7ZK47uVprU"},
{"content":{"body":"what if we change the identifier grammar such that there's some prefix of code units that doesn't parse for assignments and only parse for get (might need runtime errors too i guess)","msgtype":"m.text"},"ts":1684264210547,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5H_H6X05wGga52R067xVdlNC-UeA2aN4MdMTlCtNNV8"},
{"content":{"body":" * what if we change the <del>identifier</del> property name grammar such that there's some prefix of code units that doesn't parse for assignments and only parse for get (might need runtime errors too i guess)","format":"org.matrix.custom.html","formatted_body":" * what if we change the <del>identifier</del> property name grammar such that there's some prefix of code units that doesn't parse for assignments and only parse for get (might need runtime errors too i guess)","m.new_content":{"body":"what if we change the <del>identifier</del> property name grammar such that there's some prefix of code units that doesn't parse for assignments and only parse for get (might need runtime errors too i guess)","format":"org.matrix.custom.html","formatted_body":"what if we change the <del>identifier</del> property name grammar such that there's some prefix of code units that doesn't parse for assignments and only parse for get (might need runtime errors too i guess)","msgtype":"m.text"},"m.relates_to":{"event_id":"$5H_H6X05wGga52R067xVdlNC-UeA2aN4MdMTlCtNNV8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684264234795,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TDfm_cE3C_SnCuOaWSJxUkupmGI_c9WdKksCLrcgLyg"},
{"content":{"body":"Would it be possible to add it inside iterable helpers?","msgtype":"m.text"},"ts":1684264309663,"senderName":"Willian Martins","senderId":"@wmartins:matrix.org","id":"$NLlVPtqlviXg-3sMGLan6Wquh9q6QGO40rGf-ndd6T8"},
{"content":{"body":"> <@wmartins:matrix.org> Would it be possible to add it inside iterable helpers?\n\nAs I understand, it will be a different proposal, might have differnt semantic.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NLlVPtqlviXg-3sMGLan6Wquh9q6QGO40rGf-ndd6T8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@wmartins:matrix.org\">@wmartins:matrix.org</a><br>Would it be possible to add it inside iterable helpers?</blockquote></mx-reply>As I understand, it will be a different proposal, might have differnt semantic.","m.relates_to":{"m.in_reply_to":{"event_id":"$NLlVPtqlviXg-3sMGLan6Wquh9q6QGO40rGf-ndd6T8"}},"msgtype":"m.text"},"ts":1684264343823,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$15hT8C83QqGR8WshxD6X5Brc9aM89LBvWQa9EsfbPcs"},
{"content":{"body":"Wouldn't it be `Object.groupBy()` since it returns an object?","format":"org.matrix.custom.html","formatted_body":"Wouldn't it be <code>Object.groupBy()</code> since it returns an object?","msgtype":"m.text"},"ts":1684264345491,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Qeb66wK75RIuAYuIssaHz9Nu8Lkn5MeGnEvSZ6alucE"},
{"content":{"body":"yeah i actually was thinking that too","msgtype":"m.text"},"ts":1684264363077,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xpSZvlCDRIeXdPLp2WshEs2evAF1ZvJjlDlhgz9YPBE"},
{"content":{"body":"Willian Martins: no, we cannot fit a possibly infinite structure into a finite structure","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@wmartins:matrix.org\">Willian Martins</a>: no, we cannot fit a possibly infinite structure into a finite structure","msgtype":"m.text"},"ts":1684264386437,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bjJvKUJtCJwOkQFTiS8LrnBiFZ6ZZjhdBjH-Ufxbh-g"},
{"content":{"body":"https://github.com/tc39/proposal-array-grouping/issues/51#issuecomment-1372786948","msgtype":"m.text"},"ts":1684264396841,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VXZVtYRXSU3fzcYzQMskoHz61GOQc6XkViG3PdG89qc"},
{"content":{"body":"That makes sense. Thanks!","msgtype":"m.text"},"ts":1684264420768,"senderName":"Willian Martins","senderId":"@wmartins:matrix.org","id":"$iV_W0jj5g14zuLGliDElca63p5YI2C6uWGxKf-KKUpQ"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Wouldn't it be `Object.groupBy()` since it returns an object?\n\nthat's what's in the PR, yeah: https://github.com/tc39/proposal-array-grouping/pull/47","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Qeb66wK75RIuAYuIssaHz9Nu8Lkn5MeGnEvSZ6alucE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Wouldn't it be <code>Object.groupBy()</code> since it returns an object?</blockquote></mx-reply>that's what's in the PR, yeah: https://github.com/tc39/proposal-array-grouping/pull/47","m.relates_to":{"m.in_reply_to":{"event_id":"$Qeb66wK75RIuAYuIssaHz9Nu8Lkn5MeGnEvSZ6alucE"}},"msgtype":"m.text"},"ts":1684264422174,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U2UWhxN86aeHqKEmvrwu0Du1KhnaCkYHYRuCNZ1-vd0"},
{"content":{"body":"was something else proposed? I missed it if so","msgtype":"m.text"},"ts":1684264436594,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6WHUoLRL8W0aGFuqKTZsBNlLuOgEdNypIdFv25Lso6Y"},
{"content":{"body":"i think a few of us just misspoke and said \"Array.groupBy\"","msgtype":"m.text"},"ts":1684264612123,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$iuwXaIF8CJ_iAZz_Hyepqq2PU1tjPiV6dGItGd4RPR0"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1684264622846,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DGyHAWhfZVqcOzQKAFlUwMFgOePXWwmY928HI2ZZX7k"},
{"content":{"body":"There are already some stage 1 proposals of Array.prototype methods. For example Array.prototype.unique","msgtype":"m.text"},"ts":1684264624443,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Cy-6S0Fs8k2DwxJV942n6rwroQX46b9cn2khXjdShSQ"},
{"content":{"body":"the stage 3 proposal list isn't huge, it shouldn't take long to go through them","msgtype":"m.text"},"ts":1684264735968,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rQ0at5S1uCnVJRK232RriNPvopwxX-wGkZKYOxal2KM"},
{"content":{"body":"https://github.com/tc39/proposals#stage-3","msgtype":"m.text"},"ts":1684264749441,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$8jR83SCXn-wxzc8_GI-XvATTsJQVKFOf2jkl1UYKSMg"},
{"content":{"body":"hey saminahusain !","format":"org.matrix.custom.html","formatted_body":"hey <a href=\"https://matrix.to/#/@saminahusain:matrix.org\">saminahusain</a> !","msgtype":"m.text"},"ts":1684264932004,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$sN6ZxQ4Vy1vXNiFUtjQz2rSlAgzlBZ-meGhkOh01eDI"},
{"content":{"body":"Could someone with admin rights give Samina the Custom(10) rights to post here?","msgtype":"m.text"},"ts":1684264959807,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PUutqSi8Ep_3A_vlMqFESY2GDc4TQQkFDX1w4jzm6M4"},
{"content":{"body":"Ok, thanks","msgtype":"m.text"},"ts":1684265056624,"senderName":"saminahusain","senderId":"@saminahusain:matrix.org","id":"$nVQynnguz308szpaugYRQcgJEOoLVr0BT1BnDF3VX28"},
{"content":{"body":"fwiw the group PR has been rebased: https://github.com/tc39/proposal-array-grouping/pull/47 spec is here: https://raw.githack.com/tc39/proposal-array-grouping/static-method/index.html","msgtype":"m.text"},"ts":1684265136290,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vnOaUNDpjEzhBvD1bt0qeFRPUjX2Bcxyh0SkUw0zhbo"},
{"content":{"body":"> <@ljharb:matrix.org> i think a few of us just misspoke and said \"Array.groupBy\"\n\nYup, I meant `Object.groupBy`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$iuwXaIF8CJ_iAZz_Hyepqq2PU1tjPiV6dGItGd4RPR0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i think a few of us just misspoke and said &quot;Array.groupBy&quot;</blockquote></mx-reply>Yup, I meant <code>Object.groupBy</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$iuwXaIF8CJ_iAZz_Hyepqq2PU1tjPiV6dGItGd4RPR0"}},"msgtype":"m.text"},"ts":1684265183840,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kxHhtgBU3GFsepTddEU4pp2UZZX6R3pye7oPtYLRHL8"},
{"content":{"body":"does anyone know how to say \"if a List has at least one item\" in spec?","msgtype":"m.text"},"ts":1684267153269,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$SfiMHVGYThE2DpTb4uDEz_6oOH1lgy6GlLVnEHTpPvY"},
{"content":{"body":" * does anyone know how to say \"if a List has at least one element\" in spec?","m.new_content":{"body":"does anyone know how to say \"if a List has at least one element\" in spec?","msgtype":"m.text"},"m.relates_to":{"event_id":"$SfiMHVGYThE2DpTb4uDEz_6oOH1lgy6GlLVnEHTpPvY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684267159866,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$sJtMaQSBii3vIAoXMq6rAktuLEygqPgojagqa44IGZk"},
{"content":{"body":"does that statement work?","msgtype":"m.text"},"ts":1684267164092,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$86CTYiU10ksEWuWZA6zrekLc7_tFJ8gqVWyQeDa0zkU"},
{"content":{"body":"\"if a List is not empty\"?","msgtype":"m.text"},"ts":1684267218060,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NQpoSDxAsviTljeWMSD6RMzulVStuVOBPkEk-Y6AaQc"},
{"content":{"body":"we're at time so i need to hop off","msgtype":"m.text"},"ts":1684267261164,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FFGgUCvTHuo6W7JYdDZmJPn3WJX-iPCg9sHvPnmx_JI"},
{"content":{"body":"yeah you want \"is not empty\"","msgtype":"m.text"},"ts":1684267334408,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VZ72Qu6DhGDRdxv94xImwCCT6H3f7j4scaQ19_S9MMs"},
{"content":{"body":"pzuraq: might want to ask these questions in #tc39-editors:matrix.org next time","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: might want to ask these questions in <a href=\"https://matrix.to/#/#tc39-editors:matrix.org\">#tc39-editors:matrix.org</a> next time","msgtype":"m.text"},"ts":1684267360333,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0PtWq5gBC0jI84DM34ygiWInMpR7IloRlTjzGA7J8SA"},
{"content":{"body":"what is happening","msgtype":"m.text"},"ts":1684267437299,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BBuqqLiLQJY6dZtf3aOGQVO6rNRtV6lYXb_X4mFasac"},
{"content":{"body":"are we, as tc39 delegates, able to confer IPR protection by forming a TG?","msgtype":"m.text"},"ts":1684267454217,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IJwV_3WCtOa77Xrskfn8mZaW-6N0OD_GL8meUPC9fGc"},
{"content":{"body":"I had to step away and did not capture speakers for the last few minutes","msgtype":"m.text"},"ts":1684267460635,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U0DLR2cWDjLuBmgjW8ScR6ySWYQmGTFmXXzPoBdKvnA"},
{"content":{"body":"like that's cool if we are","msgtype":"m.text"},"ts":1684267461748,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$b71ZvMHqw7_qz1R8I754qIyuwemphPyk5pU-kVKvcG0"},
{"content":{"body":"please could people edit that into the notes","msgtype":"m.text"},"ts":1684267467234,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$njxXMQYvVNOyi53k66-9zwC1exnPNEihOd_ucbyjYEo"},
{"content":{"body":"if you remember who said what","msgtype":"m.text"},"ts":1684267469934,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AE8nm7_5Vd82kn0nNivcClwfpOh1dCXpsL553OfkIa8"},
{"content":{"body":"littledan: Since you fit this into a shorter time slot, you could bring this back as overflow later in this meeting for TG4 creation consensus.  ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: Since you fit this into a shorter time slot, you could bring this back as overflow later in this meeting for TG4 creation consensus.","msgtype":"m.text"},"ts":1684267530094,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$GOY3wHTQCt34TNs3bhIrDmNXG8JaQ_OOcuPDJvnNcIY"},
{"content":{"body":"littledan: we will also have to assign chairs and (when we get approval for a new document) assign an editor group","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: we will also have to assign chairs and (when we get approval for a new document) assign an editor group","msgtype":"m.text"},"ts":1684267558473,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$RfxFcoY2l3KH13nt9WIU1k0aC-kHLDZIss9V75_4W6Q"},
{"content":{"body":"> <@shuyuguo:matrix.org> are we, as tc39 delegates, able to confer IPR protection by forming a TG?\n\nIf we create the TG, I think we can.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IJwV_3WCtOa77Xrskfn8mZaW-6N0OD_GL8meUPC9fGc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>are we, as tc39 delegates, able to confer IPR protection by forming a TG?</blockquote></mx-reply>If we create the TG, I think we can.","m.relates_to":{"m.in_reply_to":{"event_id":"$IJwV_3WCtOa77Xrskfn8mZaW-6N0OD_GL8meUPC9fGc"}},"msgtype":"m.text"},"ts":1684267567551,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$FSk-TxGl0LzgMVI40RsyAzc9o7XNvvxiT0UqASajAH8"},
{"content":{"body":"msaboff: how does the transfer of the existing source maps document work?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@msaboff:matrix.org\">msaboff</a>: how does the transfer of the existing source maps document work?","msgtype":"m.text"},"ts":1684267607188,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xKsTLOVOp8qUXMbUh7SvywnHtnQDt4GNO5FbcECpxc4"},
{"content":{"body":"or is the idea that we start with safeguarding newly produced IP by forming a new TG within which to produce new IP, then do the transfer and merge later with the existing doc?","msgtype":"m.text"},"ts":1684267642981,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6BhSIodopsI8GAYpntpiqPYwZb0SRdhC8KZCpoCg8XQ"},
{"content":{"body":"Not totolly sure, but if all the participants are Ecma members it should be straightforward .","msgtype":"m.text"},"ts":1684267667613,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$WyrQwP0LsFD5WlPSg8seonUpVtkyVrtTRIxxyEjmLA4"},
{"content":{"body":" * Not totally sure, but if all the participants are Ecma members it should be straightforward .","m.new_content":{"body":"Not totally sure, but if all the participants are Ecma members it should be straightforward .","msgtype":"m.text"},"m.relates_to":{"event_id":"$WyrQwP0LsFD5WlPSg8seonUpVtkyVrtTRIxxyEjmLA4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684267673650,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$L4DxYT4XPn5QFl2-WDHVC6lN_wFlJATUAvS9Cn6lMoc"},
{"content":{"body":"yeah the doc was written by Mozilla + Google so it should be fine","msgtype":"m.text"},"ts":1684267688209,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QD48iUz2K--GrbcoQ1ccsTybseEDBv8e6T_Hj42SuH4"},
{"content":{"body":"huh, interesting","msgtype":"m.text"},"ts":1684267688218,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2CHXpgrVcr0uwb8oYovfZfgAO-z9Exu26aoeWDQHXJ4"},
{"content":{"body":"that's cool","msgtype":"m.text"},"ts":1684267696510,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GLzh_zvMuo93UL9GiTysPM0vLqRoNe-UUkpXJKEXQcg"},
{"content":{"body":"I'm vaguely sympathetic with the idea that we shouldn't jump straight into making a TG prematurely, but at the same time, adopting liberal IPR policy isn't the \"too fast\" part--it's really the only option for a modern open standard IMO.","msgtype":"m.text"},"ts":1684267772054,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tPxmtOrMPbNdt4zd8Ltfohrsh_ND_G-WEjE-buujPGM"},
{"content":{"body":"> <@msaboff:matrix.org> littledan: Since you fit this into a shorter time slot, you could bring this back as overflow later in this meeting for TG4 creation consensus.\n\nThanks, yeah, I'd like to do this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GOY3wHTQCt34TNs3bhIrDmNXG8JaQ_OOcuPDJvnNcIY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: Since you fit this into a shorter time slot, you could bring this back as overflow later in this meeting for TG4 creation consensus.</blockquote></mx-reply>Thanks, yeah, I'd like to do this","m.relates_to":{"m.in_reply_to":{"event_id":"$GOY3wHTQCt34TNs3bhIrDmNXG8JaQ_OOcuPDJvnNcIY"}},"msgtype":"m.text"},"ts":1684267788409,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$W_NqxyZxud33Hu---A9sh1JMiRK2DOc3dlga4kPIeMc"}
]