[
{"content":{"body":"> <@robpalme:matrix.org> Do you know of any concrete cases where frozen objects are slower than u frozen objects in V8? We investigated this 3 years ago and found nothing useful. Links to bugs or repros would be useful.\n\nhere's a rather stark example:\n```\nconst unfrozen = Array.from({ length: 10000 }, (_, i) => i);\nconst frozen = Object.freeze([...unfrozen]);\nfn = arr => arr.slice().concat(\"FIN\");\nlet result;\n\nresult = fn(unfrozen); // 10.787 ops/ms\nresult = fn(frozen); // 1.427 ops/ms\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$KmtELUjkeFi5JS6t6ph-O_psLQapOsq-QiIr6HXrkzI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br>Do you know of any concrete cases where frozen objects are slower than u frozen objects in V8? We investigated this 3 years ago and found nothing useful. Links to bugs or repros would be useful.</blockquote></mx-reply><p>here's a rather stark example:</p>\n<pre><code>const unfrozen = Array.from({ length: 10000 }, (_, i) =&gt; i);\nconst frozen = Object.freeze([...unfrozen]);\nfn = arr =&gt; arr.slice().concat(\"FIN\");\nlet result;\n\nresult = fn(unfrozen); // 10.787 ops/ms\nresult = fn(frozen); // 1.427 ops/ms\n</code></pre>\n","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$KmtELUjkeFi5JS6t6ph-O_psLQapOsq-QiIr6HXrkzI"}},"msgtype":"m.text"},"ts":1729910171554,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$-htDILiIwmugPwDgAXFyo__wx7PJXF4iBbRvsmT-xeU"},
{"content":{"body":"Looks like JS Conf announced dates for next year. Not sure how it fits in our plenary calendar.\nhttps://openjsf.org/blog/why-attend-jsconf-na-2025","msgtype":"m.text"},"ts":1729947009421,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qN_hPv1-JRE6pAKRHnR9WccJ9EcLlTdoxRZJ1ORbdnw"}
]