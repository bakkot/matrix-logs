[
{"content":{"body":"morning all","msgtype":"m.text"},"ts":1684335664024,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Nz-OWnH-ReNkn4NkZWkXqBnYpIedfId6FwTxueM5TSc"},
{"content":{"body":"and/or whatever time it is","msgtype":"m.text"},"ts":1684335666933,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bC4ZOEe3IVMdeP2d8MulaqXIq4z9s_YtQzhHBRzXN54"},
{"content":{"body":"Plenary is starting now!","msgtype":"m.text"},"ts":1684335668917,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$S056QRgSmirgwR9SWlzhHR90hogM4GjV9q_UsOrlnVQ"},
{"content":{"body":"Please join to find out if TC39 will approve ES2023","msgtype":"m.text"},"ts":1684335684730,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$a7dkQCX_984ff_YzlXC1CHm6GvaAi1D-O06CvKpxnrE"},
{"content":{"body":"I hope it gets approved 😬","msgtype":"m.text"},"ts":1684335713731,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Z_5PHsVX5DJkvfx-zY7IL7HltTYyDzkQDa6Ur3CvePs"},
{"content":{"body":"please vote yes 🥺","msgtype":"m.text"},"ts":1684335740562,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pJ9csxcMHU0tChcy5l5nOHw0003YMbiqJsXfO28EQrU"},
{"content":{"body":"Frank's comments are generally talking in terms of various absolutes which I think are too strong","msgtype":"m.text"},"ts":1684337704178,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vpOnULCFL_vw5b533hwfO5fR3AY03wS_lT6d7yc8mfM"},
{"content":{"body":"we need to clean up the notes for the conclusion of ZDT stage 1","msgtype":"m.text"},"ts":1684338683992,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$LQHu3I3t9IigwPBecM7wt1113wJlMdIYgkIJyG8Mw6A"},
{"content":{"body":"I wrote a conclusion right under the heading; now writing main points","msgtype":"m.text"},"ts":1684338704221,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SvGYtNlfWmEU4Ca2P7KlXzQmm9yxrOzf6phMDZIYBxU"},
{"content":{"body":"(not deleting the raw notes just yet)","msgtype":"m.text"},"ts":1684338709186,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mtLsI5SSz9xOIoqegO2i2YOHKz8GhluUzTQ8-5zAAQI"},
{"content":{"body":"ptomato: Is there any risk that zone date time formatting might require a temporal constructor to close over host data? At Agoric, we’ve enjoyed the separability of now() from temporal constructors and hope for that trend to continue.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: Is there any risk that zone date time formatting might require a temporal constructor to close over host data? At Agoric, we’ve enjoyed the separability of now() from temporal constructors and hope for that trend to continue.","msgtype":"m.text"},"ts":1684338750849,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$HlxyL7nNp2w61SKFZ6fRBAuPWuYQbE6rEBTQEThfZE0"},
{"content":{"body":"thanks for your hard work on the notes, Dan!  really appreciate it.  time at a premium today, so needed to  move","msgtype":"m.text"},"ts":1684338771502,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$unUvF1NFJfYZk2tIP5XBOOQnH5TWfRV5VXspdu3AVxI"},
{"content":{"body":"> <@kriskowal:matrix.org> ptomato: Is there any risk that zone date time formatting might require a temporal constructor to close over host data? At Agoric, we’ve enjoyed the separability of now() from temporal constructors and hope for that trend to continue.\n\nI think this is safe, Temporal constructors still don't close over any host data. FWIW you can currently already format `Temporal.ZonedDateTime` with its `toLocaleString` method; you just can't cache the expensive operations by creating a formatter object to format multiple `ZonedDateTime`, and you can't `formatRange` or `formatToParts`, so that's what this proposal is solving.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HlxyL7nNp2w61SKFZ6fRBAuPWuYQbE6rEBTQEThfZE0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br><a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: Is there any risk that zone date time formatting might require a temporal constructor to close over host data? At Agoric, we’ve enjoyed the separability of now() from temporal constructors and hope for that trend to continue.</blockquote></mx-reply>I think this is safe, Temporal constructors still don't close over any host data. FWIW you can currently already format <code>Temporal.ZonedDateTime</code> with its <code>toLocaleString</code> method; you just can't cache the expensive operations by creating a formatter object to format multiple <code>ZonedDateTime</code>, and you can't <code>formatRange</code> or <code>formatToParts</code>, so that's what this proposal is solving.","m.relates_to":{"m.in_reply_to":{"event_id":"$HlxyL7nNp2w61SKFZ6fRBAuPWuYQbE6rEBTQEThfZE0"}},"msgtype":"m.text"},"ts":1684338981376,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$OztePwdElR0kLF06QtjQCRo0WaAPdat-TkaY_5--7s8"},
{"content":{"body":"`Intl.DateTimeFormat` does close over host data, because if you construct it without a `timeZone` parameter then it internally assumes the host's current time zone, but that's a long-preexisting problem and I'm assuming you're not referring to that","format":"org.matrix.custom.html","formatted_body":"<code>Intl.DateTimeFormat</code> does close over host data, because if you construct it without a <code>timeZone</code> parameter then it internally assumes the host's current time zone, but that's a long-preexisting problem and I'm assuming you're not referring to that","msgtype":"m.text"},"ts":1684338990097,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$JwiACizYvA93F9LzA_N0eqtzULNjyCE9uB_A-9yfOp4"},
{"content":{"body":"my preferred solution would actually remove that closing over host data in the case of ZonedDateTime. (in other cases, it wouldn't be web-compatible to change that)","msgtype":"m.text"},"ts":1684339055275,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$byVqdi2JmjO9Fcu86QKsNQer9Z0DVsr5CK4Kvt3yEP4"},
{"content":{"body":"I do not like \"eliminates the need for developers to understand higher-order functions\" as a motivation for design decisions","msgtype":"m.text"},"ts":1684339684828,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6Pw-SDxitEuLtaAp4ZMyPYdSuYm9r5CsjpeNQrIphj4"},
{"content":{"body":"I really really do not like it","msgtype":"m.text"},"ts":1684339688078,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ErdKz3eMCWQxnh6zNH5fpTWY3UFvhvZYAGSyMp3HkZo"},
{"content":{"body":"I think we should avoid subclassing AsyncSnapshot... it's confusing for these examples","msgtype":"m.text"},"ts":1684339700021,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_aNTMhqA-sms9v1nCqZRHyvJtIS2qeKkAGat8eaFoRk"},
{"content":{"body":"this is a has-a relation, not a is-a","msgtype":"m.text"},"ts":1684339711643,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DCJ3JWajKmRFRb3EjPNYXG2fVhOuhSwHovjAUP64M6U"},
{"content":{"body":"```\nconst snapshot = new AsyncSnapshot();\nsnapshot.run(cb, arg1, arg2);\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>const snapshot = new AsyncSnapshot();\nsnapshot.run(cb, arg1, arg2);\n</code></pre>\n","msgtype":"m.text"},"ts":1684339778161,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$pjXxDnAPPSU144YTlII7Jgvjz4FtLNxdgux2qSAjjT8"},
{"content":{"body":"That's how I would normally use it.","msgtype":"m.text"},"ts":1684339785467,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$EYRrdDrLLcH8A4tgNdz6XMWtv3vSyQm0B8FcokuqKMc"},
{"content":{"body":"Do you have the Task attribution link? I don't know the scope of this api.","msgtype":"m.text"},"ts":1684340896056,"senderName":"Willian Martins","senderId":"@wmartins:matrix.org","id":"$i5iOBw1ssmSh_ev0mAGw3vKVDF_RGhNWyBRhSxX3hQs"},
{"content":{"body":"https://docs.google.com/document/d/1_m-h9_KgDMddTS2OFP0CShr4zjU-C-up64DwCrCfBo4/edit#heading=h.pny1oyazzdg0","msgtype":"m.text"},"ts":1684340908760,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$iMWtf9VbQkmlXdDXiRLOLqPElE1dsZoBeZ4kdUvBl6Q"},
{"content":{"body":"https://bit.ly/task-attribution   friendly link","msgtype":"m.text"},"ts":1684340943241,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$vYLbHWRWb3xKAlbLamgUNbufF3-Ttsr0O5_iOmdFxS0"},
{"content":{"body":"Termination is https://github.com/tc39/proposal-async-context/issues/52","msgtype":"m.text"},"ts":1684341048980,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$xsHQVrVJYRye225fX-P-Pjzs87716L-QttC5P5Bmbns"},
{"content":{"body":"It's still WIP, and not proposed to be added yet","msgtype":"m.text"},"ts":1684341055333,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$HGdfZXR27mgVFsGbHuud3m3WvTIzr_33VWyRn1tLLsc"},
{"content":{"body":"https://notes.igalia.com/p/TWx5MikWg","msgtype":"m.text"},"ts":1684342234224,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$QTRmjVHBWM9Nl6rSt5zV_bYfMKCvhouVamhK4liGM6I"},
{"content":{"body":"> <@usharma:igalia.com> https://notes.igalia.com/p/TWx5MikWg\n\nI think that's not visible publicly","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QTRmjVHBWM9Nl6rSt5zV_bYfMKCvhouVamhK4liGM6I?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>https://notes.igalia.com/p/TWx5MikWg</blockquote></mx-reply>I think that's not visible publicly","m.relates_to":{"m.in_reply_to":{"event_id":"$QTRmjVHBWM9Nl6rSt5zV_bYfMKCvhouVamhK4liGM6I"}},"msgtype":"m.text"},"ts":1684342259970,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$VfR4fCyixAkJcznHudpuDvR1DibJNGO4RZg4hYIb0tc"},
{"content":{"body":"> <@abotella:igalia.com> I think that's not visible publicly\n\nShould be fixed now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VfR4fCyixAkJcznHudpuDvR1DibJNGO4RZg4hYIb0tc?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br />I think that's not visible publicly</blockquote></mx-reply>Should be fixed now","m.relates_to":{"m.in_reply_to":{"event_id":"$VfR4fCyixAkJcznHudpuDvR1DibJNGO4RZg4hYIb0tc"}},"msgtype":"m.text"},"ts":1684344242236,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$MWmEjL4bVTZXdPYDbH-hGacSLd7NASO_dBPDlQcnnzs"},
{"content":{"body":"There's a reason why the W3C broke off from IETF--to not deal with this bureaucracy. (And then WHATWG broke off from W3C for the same reason...)","msgtype":"m.text"},"ts":1684347273797,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$A_mpgrs6SDEddoDs0As7kI9I3l5UWE7q9_312gLWQ3c"},
{"content":{"body":"We don't realize how lucky we are bureaucracy-wise!","msgtype":"m.text"},"ts":1684347293810,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lUUhD4nCy1xw94N_o_wxoMZ70iyMWC1mptqhFN6rpJE"},
{"content":{"body":"\"You are now DAC, the do anything committee\"","msgtype":"m.text"},"ts":1684347368117,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$By_HNMKKJcUxIkjOb9g4drbeb2_lf28w50flDq-0D-M"},
{"content":{"body":"it's oddly non-bureaucratic in certain ways as well.. IETF WGs are `mailing list all the things` and consensus, no voting, no memberships, etc","format":"org.matrix.custom.html","formatted_body":"it's oddly non-bureaucratic in certain ways as well.. IETF WGs are <code>mailing list all the things</code> and consensus, no voting, no memberships, etc","msgtype":"m.text"},"ts":1684347478025,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$rNzI9C4svdo-2M6RV9hrbIb2sLISVY8S858gmr_wXnA"},
{"content":{"body":"the default state of being is no bureaucracy; these organisations do this to themselves","msgtype":"m.text"},"ts":1684347492593,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2O89D-a8vFYWgw9CCfYGBcg6sPVjy5t6T20wcKCebz8"},
{"content":{"body":"but IESG gatekeeping...","msgtype":"m.text"},"ts":1684347502364,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$WuPZhVfXQIyrTaePR_28O5Kj-VSe-hbRILa204r8-9o"},
{"content":{"body":"chipmorningstar and I’ve been ruminating a procedural question regarding the staging process. It’s our understanding that a canonicalization proposal must be preceded by a beatification proposal. Did we miss something?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@chipmorningstar:matrix.org\">chipmorningstar</a> and I’ve been ruminating a procedural question regarding the staging process. It’s our understanding that a canonicalization proposal must be preceded by a beatification proposal. Did we miss something?","msgtype":"m.text"},"ts":1684348957265,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$EtdvLyw5Glwf90MLlZdtpYKKEbsxAYtGhM3CLB7WcqA"},
{"content":{"body":"the syntax of IANA time zone identifiers:\n> Use only valid POSIX file name components (i.e., the parts of names other than `/`). Do not use the file name components `.` and `..`. Within a file name component, use only ASCII letters, `.`, `-` and `_`. Do not use digits, as that might create an ambiguity with POSIX TZ strings. A file name component must not exceed 14 characters or start with `-`.","format":"org.matrix.custom.html","formatted_body":"<p>the syntax of IANA time zone identifiers:</p>\n<blockquote>\n<p>Use only valid POSIX file name components (i.e., the parts of names other than <code>/</code>). Do not use the file name components <code>.</code> and <code>..</code>. Within a file name component, use only ASCII letters, <code>.</code>, <code>-</code> and <code>_</code>. Do not use digits, as that might create an ambiguity with POSIX TZ strings. A file name component must not exceed 14 characters or start with <code>-</code>.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1684349066442,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$n6246KV6TXda-kzTnR07vwThVdmC2yLNH88D61zYatU"},
{"content":{"body":"(but then there are a few legacy aliases in the TZDB that don't follow these rules)","msgtype":"m.text"},"ts":1684349175137,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$73MCRD16pXyjrI8rDjYM4p3GM6gC0RuXiHSwcaXC7LE"},
{"content":{"body":"I like `Promise.create`!","format":"org.matrix.custom.html","formatted_body":"I like <code>Promise.create</code>!","msgtype":"m.text"},"ts":1684350320860,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xYPyyYDyvYlQB3dgDkI2TJFUNJHyjUcPgeLb96Izft8"},
{"content":{"body":"creat pls","msgtype":"m.text"},"ts":1684350338986,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oytDLsGHLt4GXgLvErCRAvaCi40l5jD9q20IB2PaCYE"},
{"content":{"body":"But `Promise.create` will have very different api with `Object.create`?","format":"org.matrix.custom.html","formatted_body":"But <code>Promise.create</code> will have very different api with <code>Object.create</code>?","msgtype":"m.text"},"ts":1684350411050,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$QVDyJfU82zQgE9cj4IjBus4nbwJCNME3vMum7Dz79_U"},
{"content":{"body":"... so?","msgtype":"m.text"},"ts":1684350425187,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xkzIPn9_-lqw86IkIxUGRwJJfGDQjKaQcjw4CoTtnz8"},
{"content":{"body":"`Promise.create` does have baked in anti-bikeshedding...","format":"org.matrix.custom.html","formatted_body":"<code>Promise.create</code> does have baked in anti-bikeshedding...","msgtype":"m.text"},"ts":1684350449539,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$6YulJHOCv9Ad7oXhIr1lJfo5-dE36BqZ0vTIMJvRTxY"},
{"content":{"body":"I expect the same method name would have similar api.","msgtype":"m.text"},"ts":1684350457786,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$vclE1w8118ig1xhpzyFefLUgAOujPOLfPDnsUGmavng"},
{"content":{"body":"i regret to inform you there are only a few good english words","msgtype":"m.text"},"ts":1684350485519,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IoYn5vNqa1wSMm73IsQTMebwOfvovloJe6G4Rkcpevo"},
{"content":{"body":"what. `Promise.embiggen` is a perfectly cromulent option","format":"org.matrix.custom.html","formatted_body":"what. <code>Promise.embiggen</code> is a perfectly cromulent option","msgtype":"m.text"},"ts":1684350515258,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$xsaNYe2zgKQHT0AfO739pb3y_j8BPNYkyYbPoI0w1k4"},
{"content":{"body":"Promise.deconstructed","msgtype":"m.text"},"ts":1684350517536,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$KjsQ0L5W8IG4BjPZyL_nKH9T7xMmkasdPjAQnQce-HI"},
{"content":{"body":"Promise.unpacked","msgtype":"m.text"},"ts":1684350524051,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Eg4Jo_PZ_P9AS3H5knOfHaBrgbKkBGzuxb6EcK0fNH4"},
{"content":{"body":"hey hey hey take it to TDZ","msgtype":"m.text"},"ts":1684350528776,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dRTh5YmG6kCLeRfKRnAfaPA7iftTwWGpOZavAPt_EZg"},
{"content":{"body":"> <@pchimento:igalia.com> what. `Promise.embiggen` is a perfectly cromulent option\n\nwinner right here","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xsaNYe2zgKQHT0AfO739pb3y_j8BPNYkyYbPoI0w1k4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br>what. <code>Promise.embiggen</code> is a perfectly cromulent option</blockquote></mx-reply>winner right here","m.relates_to":{"m.in_reply_to":{"event_id":"$xsaNYe2zgKQHT0AfO739pb3y_j8BPNYkyYbPoI0w1k4"}},"msgtype":"m.text"},"ts":1684350539136,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$wTiiMeFZ-70R_RuG64MrVEr8IB9xDiqFBJsmCLwmMQQ"},
{"content":{"body":"Personally I prefer Promise.deferred ","msgtype":"m.text"},"ts":1684350539619,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$giy0gsXyW1Q-74YiSxR7MAlUiChTkVlmdlUfoo2PjJs"},
{"content":{"body":"Ditto, I want `deferred`","format":"org.matrix.custom.html","formatted_body":"Ditto, I want <code>deferred</code>","msgtype":"m.text"},"ts":1684350628488,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ZclUrQ9GatTYbWyaxyFVEtLNEA3WL9dSeQ9hQob1-WE"},
{"content":{"body":"Rejection is resolution.","msgtype":"m.text"},"ts":1684350638649,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qu_k8Nepw0iNi7J4psVfohEhr1aujOKRPT_Z0-P4ff8"},
{"content":{"body":"https://github.com/tc39/proposal-promise-with-resolvers/issues/2","msgtype":"m.text"},"ts":1684350652665,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$BM1mSjxYELBx00iGEr6fZvpnPc7w_jVwAIS1nZQoJt0"},
{"content":{"body":"bikeshedding thread ☝️","msgtype":"m.text"},"ts":1684350660427,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$eNhdIv5Ibks645JpwCcn1VKbv0iYR08XUAAQr06eiOk"},
{"content":{"body":"The precedent is strong: https://github.com/tc39/proposal-promise-with-resolvers/issues/2#issuecomment-1483909052","msgtype":"m.text"},"ts":1684350666759,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$XqdHi406QOpSABE9MSHGdGUZ8ujMIOYmVf5q57BNVlg"},
{"content":{"body":"It's always misunderstanding what \"resolve\" means in the community","msgtype":"m.text"},"ts":1684350677702,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$RedQiAo4AOvBYv16JaR62mV4JdRhbugoS0XntdFRQcY"},
{"content":{"body":"ljharb: Indeed! Resolve can defer, fulfill, or reject!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Indeed! Resolve can defer, fulfill, or reject!","msgtype":"m.text"},"ts":1684350694423,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Lcnsq7qSxZ-hZGtKIDOGjeNUEyFHxf-nUDtsFbIyi44"},
{"content":{"body":"preference for `embiggen` but will settle for `deferred`","format":"org.matrix.custom.html","formatted_body":"preference for <code>embiggen</code> but will settle for <code>deferred</code>","msgtype":"m.text"},"ts":1684350708260,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$fpIOOHo-nBQ5ImQJu7Ox8RYi0dMyoD1b9O57Hk62ykI"},
{"content":{"body":"we need to resolve the meaning of resolve","msgtype":"m.text"},"ts":1684350713250,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$DJ6AWKeBiwbFLeXktHqz2w0Fs2h6GWk17L7HhrqRlOE"},
{"content":{"body":"lol i suppose it could be \"fulfillers\" or something","msgtype":"m.text"},"ts":1684350726190,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gKKYx_JHunhuBlGZ5-5ASpJDZZarp7nT2Ly9RTuugOo"},
{"content":{"body":"Resolve, fulfill and other promising terminology is clarified in [States and Fates.](https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md)","format":"org.matrix.custom.html","formatted_body":"Resolve, fulfill and other promising terminology is clarified in <a href=\"https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md\">States and Fates.</a>","msgtype":"m.text"},"ts":1684350730753,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$49GvXAf6bCTXHnML2DH28-7RW6B7qR_HD_iC7dvNlt8"},
{"content":{"body":"`Promise.unwrap`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.unwrap</code>","msgtype":"m.text"},"ts":1684350754829,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$N8TOmtf9E1cnxwV29N0Bn964gwI0ko7RWco__eLzDI8"},
{"content":{"body":"I’m not even sure how far back `Q.defer()` goes. It may have gone back to Q from Tyler Close’s Waterken, but it may have started with my work.","format":"org.matrix.custom.html","formatted_body":"I’m not even sure how far back <code>Q.defer()</code> goes. It may have gone back to Q from Tyler Close’s Waterken, but it may have started with my work.","msgtype":"m.text"},"ts":1684350782157,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$4WA1ATxSkP_0wSjj2crJyDwMTxzKUVJ8V3tp5xx2_TU"},
{"content":{"body":"My reasoning was that `Q.defer() => Deferred`","format":"org.matrix.custom.html","formatted_body":"My reasoning was that <code>Q.defer() =&gt; Deferred</code>","msgtype":"m.text"},"ts":1684350803147,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VgMjHbl_Jf1Xj3On7j1thKnWXbz-W280VoDvqyV2eig"},
{"content":{"body":"> <@softwarechris:matrix.org> preference for `embiggen` but will settle for `deferred`\n\nI guess many non-native speakers (like me) don't know the word...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fpIOOHo-nBQ5ImQJu7Ox8RYi0dMyoD1b9O57Hk62ykI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>preference for <code>embiggen</code> but will settle for <code>deferred</code></blockquote></mx-reply>I guess many non-native speakers (like me) don't know the word...","m.relates_to":{"m.in_reply_to":{"event_id":"$fpIOOHo-nBQ5ImQJu7Ox8RYi0dMyoD1b9O57Hk62ykI"}},"msgtype":"m.text"},"ts":1684350813147,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg"},
{"content":{"body":"> <@softwarechris:matrix.org> preference for `embiggen` but will settle for `deferred`\n\n * I guess many non-native speakers (like me) don't know the word `embiggen`...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fpIOOHo-nBQ5ImQJu7Ox8RYi0dMyoD1b9O57Hk62ykI?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>preference for <code>embiggen</code> but will settle for <code>deferred</code></blockquote></mx-reply> * I guess many non-native speakers (like me) don't know the word <code>embiggen</code>...","m.new_content":{"body":"I guess many non-native speakers (like me) don't know the word `embiggen`...","format":"org.matrix.custom.html","formatted_body":"I guess many non-native speakers (like me) don't know the word <code>embiggen</code>...","msgtype":"m.text"},"m.relates_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684350832136,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$c9pnW97zdhTsQutCnEgM9pfBeaR_zRcIKp2YteVEkSI"},
{"content":{"body":"IIRC, JQuery started with `defer` as well","format":"org.matrix.custom.html","formatted_body":"IIRC, JQuery started with <code>defer</code> as well","msgtype":"m.text"},"ts":1684350838387,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CcJqUZotRx4kQCpcwbEs4HSdaKha0bYbvdbO0PD2Ba8"},
{"content":{"body":"`Promise.withLifecycle`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.withLifecycle</code>","msgtype":"m.text"},"ts":1684350848747,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$WyRN92jNXtsjVhTAgLwznNnCppLsOaBE1AlW-S81Nk4"},
{"content":{"body":"(It's a joke from The Simpsons, it's not an actual English word)","msgtype":"m.text"},"ts":1684350850747,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Og_og6LdFmbcJq7l-2j4M3VZtMlKPQWIIpLHHkOTIik"},
{"content":{"body":"it's not a real word, it's a Simpsons reference (that's kind of become a real word)","m.relates_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg","is_falling_back":true,"m.in_reply_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684350853632,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oETWAZ_4JAyBqETksqzDTW3T6xk8XVKRfsv_sD1E06A"},
{"content":{"body":"it is an actual english word _now_","format":"org.matrix.custom.html","formatted_body":"it is an actual english word <em>now</em>","msgtype":"m.text"},"ts":1684350874896,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E7_SgHj8PmvvHTPIF2Nncp7tQzhxt_fSLtzcefgX8B8"},
{"content":{"body":"It does indeed go back to Tyler Close’s Waterken ref_send/web_send library https://waterken.sourceforge.net/web_send/","msgtype":"m.text"},"ts":1684350890584,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fEdsUvogUR0EPfICOVnaIL8K7T3NaAFdyRt8mxUf3-E"},
{"content":{"body":"https://www.merriam-webster.com/dictionary/embiggen\n\n:)\n\nhttps://www.merriam-webster.com/dictionary/cromulent\n\n:(","msgtype":"m.text"},"ts":1684350904964,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$8WuPTKlzqVZ9aq5VL4zUzzoZD2YFE7yU4fsBRI2-puY"},
{"content":{"body":"> <@robpalme:matrix.org> Resolve, fulfill and other promising terminology is clarified in [States and Fates.](https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md)\n\nUnfortunately some libraries (like jQuery) not follow it many years","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$49GvXAf6bCTXHnML2DH28-7RW6B7qR_HD_iC7dvNlt8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br>Resolve, fulfill and other promising terminology is clarified in <a href=\"https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md\">States and Fates.</a></blockquote></mx-reply>Unfortunately some libraries (like jQuery) not follow it many years","m.relates_to":{"m.in_reply_to":{"event_id":"$49GvXAf6bCTXHnML2DH28-7RW6B7qR_HD_iC7dvNlt8"}},"msgtype":"m.text"},"ts":1684350933795,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$qqR_VkAbrIMNw_dbhpKEdWVBQMeItFBXHvOkRdB_o9U"},
{"content":{"body":"i declare shenanigans","m.relates_to":{"event_id":"$8WuPTKlzqVZ9aq5VL4zUzzoZD2YFE7yU4fsBRI2-puY","is_falling_back":true,"m.in_reply_to":{"event_id":"$8WuPTKlzqVZ9aq5VL4zUzzoZD2YFE7yU4fsBRI2-puY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684350960541,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Haz2jZ3uhhYBGOPNhHvxAgM3if0bAN0w-G0OgrGvEXw"},
{"content":{"body":"From the reading I've done, it seems like the ecosystem migration from `.defer()` to `new Promise` was due to the executor being safer as it could capture an unexpected exception and reject the promise. That meant that `new Promise` was a _better_ API for the more common use cases, not that `.defer()` in and of itself was a _bad_ API.","format":"org.matrix.custom.html","formatted_body":"From the reading I've done, it seems like the ecosystem migration from <code>.defer()</code> to <code>new Promise</code> was due to the executor being safer as it could capture an unexpected exception and reject the promise. That meant that <code>new Promise</code> was a <em>better</em> API for the more common use cases, not that <code>.defer()</code> in and of itself was a <em>bad</em> API.","msgtype":"m.text"},"ts":1684350962637,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$U0Qxwf8FNCd2WmpfUPVy7o0YQYhSWeASu3mQYPLR_dM"},
{"content":{"body":"Waterken’s use of defer() goes back to 2004.","msgtype":"m.text"},"ts":1684350990127,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$dQCHAozvhKrWN_ItzfbuXsMnTN8A6_4spCTmZ66-Puo"},
{"content":{"body":"I kinda liked `Promise.capability`, but possibly only because I'm familiar with that name from the spec using it","format":"org.matrix.custom.html","formatted_body":"I kinda liked <code>Promise.capability</code>, but possibly only because I'm familiar with that name from the spec using it","msgtype":"m.text"},"ts":1684350993257,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wZsz_f8hHSRqlg0g9rgqZQBcf-7b4siE2vJsYAcE340"},
{"content":{"body":"So it seems like this almost exactly matches how `.defer()` was used in Q and JQuery.","format":"org.matrix.custom.html","formatted_body":"So it seems like this almost exactly matches how <code>.defer()</code> was used in Q and JQuery.","msgtype":"m.text"},"ts":1684350994087,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$sgCAtfYDAkzRRcljZF1sRA-xIQ1KYieLqBKDseeghZc"},
{"content":{"body":"(`Promise.withResolvers` also seems fine)","format":"org.matrix.custom.html","formatted_body":"(<code>Promise.withResolvers</code> also seems fine)","msgtype":"m.text"},"ts":1684351047845,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Cn3x7rXNUJXWwVHrkgG1cH9QXgjClDH5SuCB_PWW6Yk"},
{"content":{"body":"in jquery the promise itself had resolve and reject methods on it","msgtype":"m.text"},"ts":1684351050746,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tO_sjUtubQ82ot3_ZlWcVfdeKNQrChc3XREaky7zSWI"},
{"content":{"body":"(`Promise.defer` seems somewhat less fine)","format":"org.matrix.custom.html","formatted_body":"(<code>Promise.defer</code> seems somewhat less fine)","msgtype":"m.text"},"ts":1684351054388,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fZUn-gokrXBiA8P2qsmqmRaUujcjBu1n2lyf9hlJRgQ"},
{"content":{"body":" * in jquery the promise itself had resolve and reject methods on it, so i don't think that's a match","m.new_content":{"body":"in jquery the promise itself had resolve and reject methods on it, so i don't think that's a match","msgtype":"m.text"},"m.relates_to":{"event_id":"$tO_sjUtubQ82ot3_ZlWcVfdeKNQrChc3XREaky7zSWI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684351055864,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VSfd4bbJhDkuXac-CwaFKwEN-5Ri9g6MTMcebVJLbeg"},
{"content":{"body":"`defer` implies something time-based to me, akin to `setTimeout`","format":"org.matrix.custom.html","formatted_body":"<code>defer</code> implies something time-based to me, akin to <code>setTimeout</code>","msgtype":"m.text"},"ts":1684351062447,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qDsimrr-V2vsFR6X9KLrMhfUayFEBpxafsa7SKiNq6U"},
{"content":{"body":"let's do `Promise.bikeshed`","format":"org.matrix.custom.html","formatted_body":"let's do <code>Promise.bikeshed</code>","msgtype":"m.text"},"ts":1684351065481,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$kngPM_v_lxVIPI-qqcmSioywws7I_BN9BGGpJNb69p4"},
{"content":{"body":"@bakkot `Promise.caps` would be more apropos. The original idea is that the read-cap and write-cap could be distributed to different parties.","format":"org.matrix.custom.html","formatted_body":"@bakkot <code>Promise.caps</code> would be more apropos. The original idea is that the read-cap and write-cap could be distributed to different parties.","msgtype":"m.text"},"ts":1684351073388,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$TvKUoS-Mm1LIILJ7RdHBKJXdskUiI2Yca-WgLr_Nujc"},
{"content":{"body":"\"cap\" reads to me as a hat, not short for \"capability\" :-p","msgtype":"m.text"},"ts":1684351087951,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$h4bjiYG40rQUSWX79xu-Fv6sKU9BSRGekGJxswLaeaY"},
{"content":{"body":"And I'm probably not the only one that's called the same functionality `defer` or `deferred` in my own code and in npm packages (i.e., https://www.npmjs.com/package/@esfx/async-deferred though that exports a class called `Deferred`)","format":"org.matrix.custom.html","formatted_body":"And I'm probably not the only one that's called the same functionality <code>defer</code> or <code>deferred</code> in my own code and in npm packages (i.e., https://www.npmjs.com/package/@esfx/async-deferred though that exports a class called <code>Deferred</code>)","msgtype":"m.text"},"ts":1684351088219,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ImPWUWh33O04Vcw2cEeNBaKZbZuMuZdsIgBC2oWotNU"},
{"content":{"body":"`cap` means `lie` actually","format":"org.matrix.custom.html","formatted_body":"<code>cap</code> means <code>lie</code> actually","msgtype":"m.text"},"ts":1684351098140,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BxKqcyropyhB2UFGMss4JvOauNk2klqxfwHxTyM5OKI"},
{"content":{"body":"nope https://npmjs.com/promise-deferred","m.relates_to":{"event_id":"$ImPWUWh33O04Vcw2cEeNBaKZbZuMuZdsIgBC2oWotNU","is_falling_back":true,"m.in_reply_to":{"event_id":"$ImPWUWh33O04Vcw2cEeNBaKZbZuMuZdsIgBC2oWotNU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684351102155,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YddxirYjSKMDSJjZN90DLdAtUJREfqZXh_1aJCjVFnM"},
{"content":{"body":"> <@ljharb:matrix.org> \"cap\" reads to me as a hat, not short for \"capability\" :-p\n\nno cap","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$h4bjiYG40rQUSWX79xu-Fv6sKU9BSRGekGJxswLaeaY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>&quot;cap&quot; reads to me as a hat, not short for &quot;capability&quot; :-p</blockquote></mx-reply>no cap","m.relates_to":{"m.in_reply_to":{"event_id":"$h4bjiYG40rQUSWX79xu-Fv6sKU9BSRGekGJxswLaeaY"}},"msgtype":"m.text"},"ts":1684351103639,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$ETE5-DENZJeH7nQ7NsrQ_bywU1TnbS-mn-pVB3wRZ0A"},
{"content":{"body":" * `cap` means \"lie\" actually","format":"org.matrix.custom.html","formatted_body":" * <code>cap</code> means &quot;lie&quot; actually","m.new_content":{"body":"`cap` means \"lie\" actually","format":"org.matrix.custom.html","formatted_body":"<code>cap</code> means &quot;lie&quot; actually","msgtype":"m.text"},"m.relates_to":{"event_id":"$BxKqcyropyhB2UFGMss4JvOauNk2klqxfwHxTyM5OKI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684351105281,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GOk4Pb5NxcIVWrMiCDQ8lra3X-MDgxJBr5j3elB_dkE"},
{"content":{"body":"FALSE.  it's a real word","m.relates_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg","is_falling_back":true,"m.in_reply_to":{"event_id":"$oETWAZ_4JAyBqETksqzDTW3T6xk8XVKRfsv_sD1E06A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684351108940,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$o-uA27wLay-bB_A1MRi0_N5Ok6rkFJmUH9ViC4o6cJA"},
{"content":{"body":"> <@rbuckton:matrix.org> And I'm probably not the only one that's called the same functionality `defer` or `deferred` in my own code and in npm packages (i.e., https://www.npmjs.com/package/@esfx/async-deferred though that exports a class called `Deferred`)\n\nNot the distinction I beg :-)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ImPWUWh33O04Vcw2cEeNBaKZbZuMuZdsIgBC2oWotNU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>And I'm probably not the only one that's called the same functionality <code>defer</code> or <code>deferred</code> in my own code and in npm packages (i.e., https://www.npmjs.com/package/@esfx/async-deferred though that exports a class called <code>Deferred</code>)</blockquote></mx-reply>Not the distinction I beg :-)","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$ImPWUWh33O04Vcw2cEeNBaKZbZuMuZdsIgBC2oWotNU"}},"msgtype":"m.text"},"ts":1684351118303,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mwn8g0Yo__GF4ZNkWNOU0aJx533qgOQ4y637GiVfqtM"},
{"content":{"body":"stop gatekeeping","m.relates_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg","is_falling_back":true,"m.in_reply_to":{"event_id":"$o-uA27wLay-bB_A1MRi0_N5Ok6rkFJmUH9ViC4o6cJA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684351118323,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$IKg10-oLfHHu01rG8Tv48TkAWmYGThNN69uRPq3GQhk"},
{"content":{"body":"`Promise.gatekeep`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.gatekeep</code>","m.relates_to":{"event_id":"$XpwdBYRpBrKeiM96j3rcq0zcdqJVZXHt8KEBYI6bHJg","is_falling_back":true,"m.in_reply_to":{"event_id":"$IKg10-oLfHHu01rG8Tv48TkAWmYGThNN69uRPq3GQhk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684351128675,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$mtI3Sb6nff6R1T4vVOG4naFZhXMdL4E4D9f9E1AZqGQ"},
{"content":{"body":"If we end up going with defer, ideas for alternative names for https://github.com/tc39/proposal-defer-import-eval/ are welcome :P","msgtype":"m.text"},"ts":1684351145790,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1nNirV9NYSuF1pLQkXG1zbxoL-1OpNeKuH_DYJTb_fU"},
{"content":{"body":"see that's the normal thing that `defer` means","format":"org.matrix.custom.html","formatted_body":"see that's the normal thing that <code>defer</code> means","msgtype":"m.text"},"ts":1684351174171,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lW9PZ7jx8SGOuTlJz_OWkxYt2NhEJNoyW1qpgxB_QIc"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> no cap\n\nfrfr","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ETE5-DENZJeH7nQ7NsrQ_bywU1TnbS-mn-pVB3wRZ0A?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>no cap</blockquote></mx-reply>frfr","m.relates_to":{"m.in_reply_to":{"event_id":"$ETE5-DENZJeH7nQ7NsrQ_bywU1TnbS-mn-pVB3wRZ0A"}},"msgtype":"m.text"},"ts":1684351181128,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7e2lSDVdqcNbBboEvIQT_2pFFVidHQJdiNu_8grnHB4"},
{"content":{"body":"I am supportive of Promise.withResolvers(), and failing that, Promise.defer(). Of others I can be convinced. Really, just want the darn feature already.","msgtype":"m.text"},"ts":1684351186581,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$P_ZO33mjD_lPbd6QjBkMolBbhNEQDpbFv-uwcN_nTeU"},
{"content":{"body":"we should reserve the use of `defer` for its standard usage and find a different name here","format":"org.matrix.custom.html","formatted_body":"we should reserve the use of <code>defer</code> for its standard usage and find a different name here","msgtype":"m.text"},"ts":1684351189397,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$71ApGncjciQ98pSD2sP2YsODiIzxeLwWYGb3HI8FP4c"},
{"content":{"body":" * we should reserve the use of `defer` for its standard English usage and find a different name here","format":"org.matrix.custom.html","formatted_body":" * we should reserve the use of <code>defer</code> for its standard English usage and find a different name here","m.new_content":{"body":"we should reserve the use of `defer` for its standard English usage and find a different name here","format":"org.matrix.custom.html","formatted_body":"we should reserve the use of <code>defer</code> for its standard English usage and find a different name here","msgtype":"m.text"},"m.relates_to":{"event_id":"$71ApGncjciQ98pSD2sP2YsODiIzxeLwWYGb3HI8FP4c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684351198735,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7cTrUK1ScYwda3edHF6KklO81jjYWp8ZmnpOwBppxIo"},
{"content":{"body":"NB: it was part of the ES promise proposal at one point, and was called `deferred`","format":"org.matrix.custom.html","formatted_body":"NB: it was part of the ES promise proposal at one point, and was called <code>deferred</code>","msgtype":"m.text"},"ts":1684351218069,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$c0x_3P9T-dDLH57ohcObhZTFLD-wKJmNmuVOg6V-0ZY"},
{"content":{"body":"`Promise.deconstruct`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.deconstruct</code>","msgtype":"m.text"},"ts":1684351225202,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$4s0Cy35DvO7ksf0mBJxJMZFB80ao_YBoMaavoc-WyZE"},
{"content":{"body":"that sounds like undoing what the Promise constructor does","msgtype":"m.text"},"ts":1684351246030,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$2BqleBYamJVyWVjz5MMamv5Z6A0EWB3SJTy1ZVg4Kpo"},
{"content":{"body":"Was I the only person who thought the plan was to have `import.source` for both static and dynamic import?","format":"org.matrix.custom.html","formatted_body":"Was I the only person who thought the plan was to have <code>import.source</code> for both static and dynamic import?","msgtype":"m.text"},"ts":1684351263733,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$XsaYw41gC_rPw6qrHk0PQVJug7nz8qgqTvHxIUaqruM"},
{"content":{"body":"well -- `Deferred` is the object returned from `Promise.defer()`","format":"org.matrix.custom.html","formatted_body":"well -- <code>Deferred</code> is the object returned from <code>Promise.defer()</code>","msgtype":"m.text"},"ts":1684351270802,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$5DGA9VUmRtbLbiMsCZuLB_w5GwW6eZexgdhYVAJjV9k"},
{"content":{"body":"I thought part of the point was to fix syntax ambiguity.","msgtype":"m.text"},"ts":1684351288058,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$C85je4bWN1l78Zdw7_X43PLZggv6G2MazwR6zVJULVM"},
{"content":{"body":"no, i thought the same","m.relates_to":{"event_id":"$XsaYw41gC_rPw6qrHk0PQVJug7nz8qgqTvHxIUaqruM","is_falling_back":true,"m.in_reply_to":{"event_id":"$XsaYw41gC_rPw6qrHk0PQVJug7nz8qgqTvHxIUaqruM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684351302480,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VFOk-evRmJEIIBO7dKaFdG0ianVwYNdXq7RSvtuEwuM"},
{"content":{"body":"> <@pchimento:igalia.com> that sounds like undoing what the Promise constructor does\n\nwell, that'd be `Promise.destruct` 😳","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2BqleBYamJVyWVjz5MMamv5Z6A0EWB3SJTy1ZVg4Kpo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br>that sounds like undoing what the Promise constructor does</blockquote></mx-reply>well, that'd be <code>Promise.destruct</code> 😳","m.relates_to":{"m.in_reply_to":{"event_id":"$2BqleBYamJVyWVjz5MMamv5Z6A0EWB3SJTy1ZVg4Kpo"}},"msgtype":"m.text"},"ts":1684351339825,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$mX6Owa9-uw4oRhY1luyOYf9jjHAFLfIuPWijCgROQgs"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1684351353996,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$9R-i28S_2MLLXc4TJe4EkMAhXUdBbQ_1Jv4SKs8_PeY"},
{"content":{"body":"`Promise.gozer`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.gozer</code>","msgtype":"m.text"},"ts":1684351378815,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0lKHlmHQUBoBmW8YXaeTyU4SbLCNXA2mNE48Z0GLUxY"},
{"content":{"body":"> Derrida describes the task of deconstruction as the identification of metaphysics of presence. Metaphysics of presence is the desire for immediate access to meaning, the privileging of presence over absence.\n\nhalf-joking here, but why not","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Derrida describes the task of deconstruction as the identification of metaphysics of presence. Metaphysics of presence is the desire for immediate access to meaning, the privileging of presence over absence.</p>\n</blockquote>\n<p>half-joking here, but why not</p>\n","msgtype":"m.text"},"ts":1684351444363,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$nFztW5x12iSoUMnJbqyQAGwhZN1OfsxbSefqzHYw5EE"},
{"content":{"body":"I like meta method :)","msgtype":"m.text"},"ts":1684351495413,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$FFWY1FwtNPL9SXFNuKBcZsaI8YIZac4SVFeD9yMGcg4"},
{"content":{"body":"Most `.withX` methods I've seen generally don't behave this way either. I normally expect it to mean \"the same thing, but with something changed\" or \"this thing plus that other thing\", such as `date.withCalendar` in Temporal: https://tc39.es/proposal-temporal/docs/plaindate.html#withCalendar","format":"org.matrix.custom.html","formatted_body":"Most <code>.withX</code> methods I've seen generally don't behave this way either. I normally expect it to mean &quot;the same thing, but with something changed&quot; or &quot;this thing plus that other thing&quot;, such as <code>date.withCalendar</code> in Temporal: https://tc39.es/proposal-temporal/docs/plaindate.html#withCalendar","msgtype":"m.text"},"ts":1684351510181,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SJtFXWgzpcRg35KL6RAYQhwROAY2GHc8orWnd0A-GmM"},
{"content":{"body":"`Promise.meta.url`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.meta.url</code>","msgtype":"m.text"},"ts":1684351529847,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$WNbAa8IqaclsFD4IgN6eOY5mfs_MevmNk08IQBWnMIo"},
{"content":{"body":"or `with` on Array.prototype for that matter","format":"org.matrix.custom.html","formatted_body":"or <code>with</code> on Array.prototype for that matter","msgtype":"m.text"},"ts":1684351531691,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fT-4EPsx9zgiODvc_y4kTecn7EI7GKjognxe5fDFu6g"},
{"content":{"body":"ljharb: just do `import source a from 'b'; const from = a;`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: just do <code>import source a from 'b'; const from = a;</code>","msgtype":"m.text"},"ts":1684351607975,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fCnwLDCn6jEliKrKk5l-78wSJBDKGdM0-yK5e61MWJY"},
{"content":{"body":"or `import source { default as from } from 'b';`, sure. but it's awkward","format":"org.matrix.custom.html","formatted_body":"or <code>import source { default as from } from 'b';</code>, sure. but it's awkward","msgtype":"m.text"},"ts":1684351653373,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$QOEyIHxi1mWs_jq3tR6EJN3RYCEdTRvnzf3m4zLAIvA"},
{"content":{"body":"wait what that shouldn't work","msgtype":"m.text"},"ts":1684351671329,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T0qRs7fhLBqN2GpUKWWKSBYID4WZ_N5hBDdJnvCYGbI"},
{"content":{"body":"the unicode escape should be the same","msgtype":"m.text"},"ts":1684351678840,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qaScF0yicWAjAqpL7EZeJ3o9VE7uDD-JO0k6d1BKSMw"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1684351679012,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$y2zGtAXtwf315zuCnnxDEyQGkrQBxCnskHHXs1hlM94"},
{"content":{"body":"I think Luca is wrong here","msgtype":"m.text"},"ts":1684351683381,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$L1eyG56fQ0qX2zPhnxu0aheSflmkPQlQl6UfA9q9FCQ"},
{"content":{"body":"The spec right now uses \"source text matched by\"","msgtype":"m.text"},"ts":1684351695629,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$v3m-7LlAmMl2SOmgBHQ_xttWE1g46AhA2FZx2-ppgsk"},
{"content":{"body":"For the restriction","msgtype":"m.text"},"ts":1684351702621,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LmF7an47063QvnXfLNbvifJ3UoH8_kbiWiy5MguuuFg"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1684351726925,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TS2PHly0repz0a2keRdkKCQPrr6fiNibXWOGbxxhVSI"},
{"content":{"body":"> <@bakkot:matrix.org> or `with` on Array.prototype for that matter\n\nbut I think this is only really true for instance methods","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fT-4EPsx9zgiODvc_y4kTecn7EI7GKjognxe5fDFu6g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>or <code>with</code> on Array.prototype for that matter</blockquote></mx-reply>but I think this is only really true for instance methods","m.relates_to":{"m.in_reply_to":{"event_id":"$fT-4EPsx9zgiODvc_y4kTecn7EI7GKjognxe5fDFu6g"}},"msgtype":"m.text"},"ts":1684351735934,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sI5yqTr-LcubQ7VBtgIBivfsdhP15Vf6vTIIfreoB7o"},
{"content":{"body":"static methods are a different beast","msgtype":"m.text"},"ts":1684351739818,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gqx7gKbbPRJrejI3RpLcXt5DibdLsNXJ7TWkBDmK1Fs"},
{"content":{"body":"I don't think it's likely to be confusing","msgtype":"m.text"},"ts":1684351746872,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3jMV9SmxiKZKTES6GIguVIf6qqIlU0xwmi5Bcw5Y4rc"},
{"content":{"body":"> <@michaelficarra:matrix.org> why?\n\nTbh the reason is that he asked me how to do it and I didn't think about a lookahead restriction 😅","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TS2PHly0repz0a2keRdkKCQPrr6fiNibXWOGbxxhVSI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br />why?</blockquote></mx-reply>Tbh the reason is that he asked me how to do it and I didn't think about a lookahead restriction 😅","m.relates_to":{"m.in_reply_to":{"event_id":"$TS2PHly0repz0a2keRdkKCQPrr6fiNibXWOGbxxhVSI"}},"msgtype":"m.text"},"ts":1684351754490,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$nBFqaMVf0CJYHm1Gz2WBiaIDmZxqLyuUgEST2C7i9e0"},
{"content":{"body":"Have we considered source phase imports and export declarations? i.e., do we have to do\n```js\nimport source x from \"y\";\nexport { x };\n```\nbut can't do\n```js\nexport source x from \"y\";\n```\n?","format":"org.matrix.custom.html","formatted_body":"<p>Have we considered source phase imports and export declarations? i.e., do we have to do</p>\n<pre><code class=\"language-js\">import source x from &quot;y&quot;;\nexport { x };\n</code></pre>\n<p>but can't do</p>\n<pre><code class=\"language-js\">export source x from &quot;y&quot;;\n</code></pre>\n<p>?</p>\n","msgtype":"m.text"},"ts":1684351759226,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gdqDmA0EWC9NXVR7cFwVTNIOGrqEJbKizGG5yXGWQ1c"},
{"content":{"body":"that seems reasonable to do","msgtype":"m.text"},"ts":1684351774917,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5Brv-MjYl0izCaNySj4cl9tT8WcA3L9CbMHvQbHUL-c"},
{"content":{"body":"nicolo-ribaudo: we should def change it, that is something I would bring up during editorial review","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: we should def change it, that is something I would bring up during editorial review","msgtype":"m.text"},"ts":1684351780840,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vIViexupdaxVO6XF-qhYi-B1NSca8gD9O556ofbUwKY"},
{"content":{"body":"> <@rbuckton:matrix.org> Have we considered source phase imports and export declarations? i.e., do we have to do\n> ```js\n> import source x from \"y\";\n> export { x };\n> ```\n> but can't do\n> ```js\n> export source x from \"y\";\n> ```\n> ?\n\nI think it should be supported, but `export x from \"x\"` is currently invalid too","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gdqDmA0EWC9NXVR7cFwVTNIOGrqEJbKizGG5yXGWQ1c?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br /><p>Have we considered source phase imports and export declarations? i.e., do we have to do</p>\n<pre><code class=\"language-js\">import source x from &quot;y&quot;;\nexport { x };\n</code></pre>\n<p>but can't do</p>\n<pre><code class=\"language-js\">export source x from &quot;y&quot;;\n</code></pre>\n<p>?</p>\n</blockquote></mx-reply>I think it should be supported, but <code>export x from &quot;x&quot;</code> is currently invalid too","m.relates_to":{"m.in_reply_to":{"event_id":"$gdqDmA0EWC9NXVR7cFwVTNIOGrqEJbKizGG5yXGWQ1c"}},"msgtype":"m.text"},"ts":1684351792343,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$TfHePSp8e-xsPEVFLaQUmkLJRSym_JJIP6C02_zKnkk"},
{"content":{"body":"precedent: await.all ?","msgtype":"m.text"},"ts":1684351815801,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Xl7Faa1eUiQPX8Z9LY6SnQmyTCIRfQwAEH8No4eQ4dM"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> I think it should be supported, but `export x from \"x\"` is currently invalid too\n\nYes, but you *can* do `export { default as x } from \"x\";`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TfHePSp8e-xsPEVFLaQUmkLJRSym_JJIP6C02_zKnkk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>I think it should be supported, but <code>export x from \"x\"</code> is currently invalid too</blockquote></mx-reply>Yes, but you <em>can</em> do <code>export { default as x } from &quot;x&quot;;</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$TfHePSp8e-xsPEVFLaQUmkLJRSym_JJIP6C02_zKnkk"}},"msgtype":"m.text"},"ts":1684351819561,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VtYQzZGeQKJa_teJNX1_tS7n85RLFXcRDAr0NX8L2Wc"},
{"content":{"body":"> <@haxjs:matrix.org> precedent: await.all ?\n\nWell that proposal didn't go very well last time it was presented if I recall correctly ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Xl7Faa1eUiQPX8Z9LY6SnQmyTCIRfQwAEH8No4eQ4dM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br />precedent: await.all ?</blockquote></mx-reply>Well that proposal didn't go very well last time it was presented if I recall correctly","m.relates_to":{"m.in_reply_to":{"event_id":"$Xl7Faa1eUiQPX8Z9LY6SnQmyTCIRfQwAEH8No4eQ4dM"}},"msgtype":"m.text"},"ts":1684351839668,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$pZGSv-dCTZKFBz0iI7KiVIU9pz3Dh2stgSBbRdwn_MM"},
{"content":{"body":"`super.foo` and `super.foo()` are unrelated","format":"org.matrix.custom.html","formatted_body":"<code>super.foo</code> and <code>super.foo()</code> are unrelated","msgtype":"m.text"},"ts":1684351844117,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AhtD7W_UPmA1NMOF3aZUnJmwXEr1KZFJGmUNPdlmlaU"},
{"content":{"body":"to each other","msgtype":"m.text"},"ts":1684351851981,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NI6Wj0DpOj51bmQ6YZNskn8O-dEQhZ1SFwXrZfeWZyU"},
{"content":{"body":"those are very related!","msgtype":"m.text"},"ts":1684351855957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$07OOcsHPumkR11nW_KfjdvkZWA_WdZrrYII91k3ZoKk"},
{"content":{"body":"Which is why I brought up the topic, if we did want `export source { default as x } from \"y\"`, then wouldn't we want `import source { default as x } from \"y\"`?","format":"org.matrix.custom.html","formatted_body":"Which is why I brought up the topic, if we did want <code>export source { default as x } from &quot;y&quot;</code>, then wouldn't we want <code>import source { default as x } from &quot;y&quot;</code>?","msgtype":"m.text"},"ts":1684351872104,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$LYp7cqydeJc9mcBZvhHPuTEuoF745Y1K2GJBONEiI9c"},
{"content":{"body":"Yeah I agree we should support the export from, it was even included in some slides I presented at some point I think ","msgtype":"m.text"},"ts":1684351907744,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$YhLVSO7fvHE2bzSXidwTatJhMlZJ6E4CbzbUEaH-ne0"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Well that proposal didn't go very well last time it was presented if I recall correctly\n\nyeah, so it's not the precednet , just similar tries...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pZGSv-dCTZKFBz0iI7KiVIU9pz3Dh2stgSBbRdwn_MM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Well that proposal didn't go very well last time it was presented if I recall correctly</blockquote></mx-reply>yeah, so it's not the precednet , just similar tries...","m.relates_to":{"m.in_reply_to":{"event_id":"$pZGSv-dCTZKFBz0iI7KiVIU9pz3Dh2stgSBbRdwn_MM"}},"msgtype":"m.text"},"ts":1684351909795,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$J6MoeEb7myX8gNqc4VJIFX2Gf9p_WkGqdpPumsNMTBs"},
{"content":{"body":"Maybe in the slides I presented on Monday","msgtype":"m.text"},"ts":1684351917183,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ov5mSDkpay2yzXFy4iI3kYTgU9ixxvfdoNp3NltY9pg"},
{"content":{"body":" * Which is why I brought up the topic. If we did want `export source { default as x } from \"y\"`, then wouldn't we want `import source { default as x } from \"y\"`?","format":"org.matrix.custom.html","formatted_body":" * Which is why I brought up the topic. If we did want <code>export source { default as x } from &quot;y&quot;</code>, then wouldn't we want <code>import source { default as x } from &quot;y&quot;</code>?","m.new_content":{"body":"Which is why I brought up the topic. If we did want `export source { default as x } from \"y\"`, then wouldn't we want `import source { default as x } from \"y\"`?","format":"org.matrix.custom.html","formatted_body":"Which is why I brought up the topic. If we did want <code>export source { default as x } from &quot;y&quot;</code>, then wouldn't we want <code>import source { default as x } from &quot;y&quot;</code>?","msgtype":"m.text"},"m.relates_to":{"event_id":"$LYp7cqydeJc9mcBZvhHPuTEuoF745Y1K2GJBONEiI9c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684351924588,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2bifdyssMtYrvCGlrk5mG1eXvb4V2fmul5pe05ijz-8"},
{"content":{"body":"i dislike `import.source` in static imports personally","format":"org.matrix.custom.html","formatted_body":"i dislike <code>import.source</code> in static imports personally","msgtype":"m.text"},"ts":1684351941887,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ev98GNg62nA-9muRoqw_-gvQs_m1m0HuQaAetVmc3pY"},
{"content":{"body":"it's treating symmetry between static and dynamic forms as a goal, whereas that's just a \"nice to have\" constraint imo","msgtype":"m.text"},"ts":1684351955473,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RLrTAZ76He18WOva7znX_pNvUshroRrlA5F_LZiWzA4"},
{"content":{"body":"Strongly favor the proposal as presented today.","msgtype":"m.text"},"ts":1684351969482,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fR6sHbvvqlQvDspTuU8U1HOaGa0GXwacW3voTzms5X8"},
{"content":{"body":"the goal, as Guy said, is to have something that's nice to type, so people will type it, and get the nice static analysis guarantees from bundlers and toolings","msgtype":"m.text"},"ts":1684351980986,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iMETe5lAQXMtc3fqXy02XFD83urSS5wQ1J7g2PbDyUU"},
{"content":{"body":" * the goal, as Guy said, is to have something that's nice to type, so people will type it, and get the nice static analysis guarantees from bundlers and tooling","m.new_content":{"body":"the goal, as Guy said, is to have something that's nice to type, so people will type it, and get the nice static analysis guarantees from bundlers and tooling","msgtype":"m.text"},"m.relates_to":{"event_id":"$iMETe5lAQXMtc3fqXy02XFD83urSS5wQ1J7g2PbDyUU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684351984216,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kpLSjv0DVyJvdwAVH9NNNMWdvOKCszcK_mHB8C59Uyw"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1684352009173,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ml9zpBiFGeLw_oWXz4PQ65I-L7SbQldAm3PHxDiV5S4"},
{"content":{"body":"i'm not sure `import source` and `import.source` are meaningfully different to type tho, and they're identical for static analysis","format":"org.matrix.custom.html","formatted_body":"i'm not sure <code>import source</code> and <code>import.source</code> are meaningfully different to type tho, and they're identical for static analysis","msgtype":"m.text"},"ts":1684352023312,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9_c_I9u7R0I1jTl9KvyGeEsrKcbxaLHmRosbYL2H1iU"},
{"content":{"body":"obv if folks just straight up find it icky then that matters","msgtype":"m.text"},"ts":1684352038208,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NsthOuqbKIKQkKjoUE01xi3t_iIK__qyXDiMoWLO3h0"},
{"content":{"body":"it does give some ick, tbf","msgtype":"m.text"},"ts":1684352054040,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$MA-rpWgpOHld_-WZIQbT_sA1evEHHazT1xOhE0atogM"},
{"content":{"body":"I do find the `.` as indicative of dynamic.","format":"org.matrix.custom.html","formatted_body":"I do find the <code>.</code> as indicative of dynamic.","msgtype":"m.text"},"ts":1684352057480,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$AOvctQTq3did10puXHjGYoH5eKZhXV0j1bNNk9bKBWM"},
{"content":{"body":"We discussed LR1 in https://github.com/tc39/notes/blob/ace580d512db32624bd74b843e0d9757278753cd/meetings/2017-11/nov-29.md?plain=1#L303","msgtype":"m.text"},"ts":1684352059035,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2eAYlytZroYhHifyxUqkA1KijkWN7rbSCGUa6TQJovM"},
{"content":{"body":"yeah to be clear i'm purely talking about subjective ickiness","msgtype":"m.text"},"ts":1684352059764,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t5h6X0dJJRcJB7ynZI2ui5tCItW0xhbnf0Ir6fuHw6I"},
{"content":{"body":"I find it ugly, but I don't have any technical reason against it","msgtype":"m.text"},"ts":1684352065200,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ZyBnD58hNAjY4Jee8sB5qgueW8Ef1_aNbIvJdPCb-ZQ"},
{"content":{"body":"and i'm perfectly content to accept that a number of folks find it icky :-) i just want to be clear in that case that that's the rationale, nothing technical","msgtype":"m.text"},"ts":1684352087147,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GZZvy_urVVH7UiQZWA561rDeq1UCZwDmPLLnhs4008s"},
{"content":{"body":"> <@shuyuguo:matrix.org> it's treating symmetry between static and dynamic forms as a goal, whereas that's just a \"nice to have\" constraint imo\n\nThis is actually a huge improvement for bundlers","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$RLrTAZ76He18WOva7znX_pNvUshroRrlA5F_LZiWzA4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>it&#39;s treating symmetry between static and dynamic forms as a goal, whereas that&#39;s just a &quot;nice to have&quot; constraint imo</blockquote></mx-reply>This is actually a huge improvement for bundlers","m.relates_to":{"m.in_reply_to":{"event_id":"$RLrTAZ76He18WOva7znX_pNvUshroRrlA5F_LZiWzA4"}},"msgtype":"m.text"},"ts":1684352108219,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$fPhNLZ35tIPqVw4PUhdTjaye-B8-FEfuseBqy75oO_4"},
{"content":{"body":"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$a5LIDdkHQL28xkgFoGx8emGNcVNOEI4BejJWms32dG8?via=matrix.org&via=igalia.com&via=mozilla.org","msgtype":"m.text"},"ts":1684352125537,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$xQmuHNlKlI_kqr5O3rj43YjAwogdbHx32LalAvJNHK0"},
{"content":{"body":"> <@jridgewell:matrix.org> This is actually a huge improvement for bundlers\n\noh interesting, so you're pro `import.source` in the static form?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fPhNLZ35tIPqVw4PUhdTjaye-B8-FEfuseBqy75oO_4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>This is actually a huge improvement for bundlers</blockquote></mx-reply>oh interesting, so you're pro <code>import.source</code> in the static form?","m.relates_to":{"m.in_reply_to":{"event_id":"$fPhNLZ35tIPqVw4PUhdTjaye-B8-FEfuseBqy75oO_4"}},"msgtype":"m.text"},"ts":1684352127939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vO8ymt06JOzZlXmzpgcsXIFpjFwrq6ER2OJjwuivKjk"},
{"content":{"body":"> <@jridgewell:matrix.org> This is actually a huge improvement for bundlers\n\nWhy do bundlers prefer a dot over a space?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fPhNLZ35tIPqVw4PUhdTjaye-B8-FEfuseBqy75oO_4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br />This is actually a huge improvement for bundlers</blockquote></mx-reply>Why do bundlers prefer a dot over a space?","m.relates_to":{"m.in_reply_to":{"event_id":"$fPhNLZ35tIPqVw4PUhdTjaye-B8-FEfuseBqy75oO_4"}},"msgtype":"m.text"},"ts":1684352133595,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$lVk_PKpG18M0ROViw2rPJDveKbuiz5t5LCRtPUSsyMY"},
{"content":{"body":"likei understand `import.static` for the _dynamic_ change is a big improvement for bundlers","format":"org.matrix.custom.html","formatted_body":"likei understand <code>import.static</code> for the <em>dynamic</em> change is a big improvement for bundlers","msgtype":"m.text"},"ts":1684352155143,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$H6j05ZJIFOK6BhLghi0mX-xbx9J17MMxkHVRJhRVcvQ"},
{"content":{"body":"No preference on whether dot or space, just the syntatic requirement","msgtype":"m.text"},"ts":1684352158759,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2vMnlvXa42y8xmNPYIryud95cspIo9jyWsqpCAna9uo"},
{"content":{"body":" * likei understand `import.static` for the _dynamic_ form is a big improvement for bundlers","format":"org.matrix.custom.html","formatted_body":" * likei understand <code>import.static</code> for the <em>dynamic</em> form is a big improvement for bundlers","m.new_content":{"body":"likei understand `import.static` for the _dynamic_ form is a big improvement for bundlers","format":"org.matrix.custom.html","formatted_body":"likei understand <code>import.static</code> for the <em>dynamic</em> form is a big improvement for bundlers","msgtype":"m.text"},"m.relates_to":{"event_id":"$H6j05ZJIFOK6BhLghi0mX-xbx9J17MMxkHVRJhRVcvQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684352159189,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qbtno1cUEh-5TpsqlyJTxMHUeOZQzfXZY1zc3J2Fa_4"},
{"content":{"body":"why is it an improvement in the static case?","msgtype":"m.text"},"ts":1684352170465,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$o_SSwpk6ySxqmdAoeCwk45B82wG0lCOLs0vX-H1RkQE"},
{"content":{"body":"being syntactic is a huge improvement for linters too :-)","msgtype":"m.text"},"ts":1684352181989,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wpYuwct-hQK3-KsEwfS5SADD54-kJNkPUMuy0tKOcuo"},
{"content":{"body":"It prevents accidental deoptimizations","msgtype":"m.text"},"ts":1684352183048,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ztxrubuCqkAz8ANF7yyln5h87MxFiMbEBBJ1OpQDMBI"},
{"content":{"body":"what?","msgtype":"m.text"},"ts":1684352190544,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Naq9iUCAO64JIMIwt7CncWxxg0wT060TZmFIVTxdUKs"},
{"content":{"body":"how can a static `import` deopt?","format":"org.matrix.custom.html","formatted_body":"how can a static <code>import</code> deopt?","msgtype":"m.text"},"ts":1684352208799,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tBuo6l8ZZzmpkowdLLpavuGV9kedzwkm4Qfub5tmMjE"},
{"content":{"body":"Having a dynamic `import(\"foo.js\", attributesComputedAtRuntime)` would cause us to add a lot of extra code to handle phase imports","format":"org.matrix.custom.html","formatted_body":"Having a dynamic <code>import(&quot;foo.js&quot;, attributesComputedAtRuntime)</code> would cause us to add a lot of extra code to handle phase imports","msgtype":"m.text"},"ts":1684352220831,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$E3U_-ckjYJVLQeuO3u5ZGtakXjZ3_ZknEbDFSxyFYV4"},
{"content":{"body":"I think you're talking past each other","msgtype":"m.text"},"ts":1684352228573,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TgVRtnSVcDe3dXveMtFnj3VYHaeNtKGByqfBJwxihJQ"},
{"content":{"body":"yes, that's the... dynamic case","msgtype":"m.text"},"ts":1684352231789,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RltKuirYuLTS7zrY7567RsOOrrRKPEkkRaHBiBQmkc0"},
{"content":{"body":"i am asking, how does `import.source` help the _static_ case","format":"org.matrix.custom.html","formatted_body":"i am asking, how does <code>import.source</code> help the <em>static</em> case","msgtype":"m.text"},"ts":1684352242922,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wJjD-f2UfE6YRNqrpzxFfDfrClysmXLNBQqteJIaMog"},
{"content":{"body":"Static import can't depot, only the dynamic case","msgtype":"m.text"},"ts":1684352244662,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$aj7jw0eFs7IPNVUz7-rM-6dry-HiDiGRbWGm1Pjs6tE"},
{"content":{"body":"Oh, I thought you were reference the static syntax in dynamic import","msgtype":"m.text"},"ts":1684352259811,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$xR8zDGLKTLiueAYoSfnIMoBP2k1XOxyojFLzbmFvIKI"},
{"content":{"body":"yes, so... again, how does `import.source` help bundlers in the _static_ import case","format":"org.matrix.custom.html","formatted_body":"yes, so... again, how does <code>import.source</code> help bundlers in the <em>static</em> import case","msgtype":"m.text"},"ts":1684352266438,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jACtwy4r3jGXOs78Sgn3QZV9uwcVd3gs95gtEYbVrEM"},
{"content":{"body":"It doesn't","msgtype":"m.text"},"ts":1684352279504,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$icvZC-4kPrSL8Ujk2gsv2NOlAJg-0aCOgFORnXgmEVg"},
{"content":{"body":"okay, that matches my intuition, thanks","msgtype":"m.text"},"ts":1684352296572,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$A5REpBl8eUjl39xrjtRt3w1CQ6AUJ621apASDnNem1Q"},
{"content":{"body":"I don't think anybody has made a case for `import.source` in the decl form other than \"it matches\", which is not strong IMO","format":"org.matrix.custom.html","formatted_body":"I don't think anybody has made a case for <code>import.source</code> in the decl form other than &quot;it matches&quot;, which is not strong IMO","msgtype":"m.text"},"ts":1684352328585,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2c2-I7Kz8UaOxOcv_xyfCLwJIzQjIZOPKJgiN5KQUrw"},
{"content":{"body":"Who made the +1 reply that we just went through?","msgtype":"m.text"},"ts":1684352357091,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$augu-A6HmZEcSVz9MHx4wSIAU17qfsBVpKp6ZEQX54E"},
{"content":{"body":"> <@michaelficarra:matrix.org> I don't think anybody has made a case for `import.source` in the decl form other than \"it matches\", which is not strong IMO\n\nit avoids an ambiguity here, is the other reason","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$2c2-I7Kz8UaOxOcv_xyfCLwJIzQjIZOPKJgiN5KQUrw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I don't think anybody has made a case for <code>import.source</code> in the decl form other than \"it matches\", which is not strong IMO</blockquote></mx-reply>it avoids an ambiguity here, is the other reason","m.relates_to":{"m.in_reply_to":{"event_id":"$2c2-I7Kz8UaOxOcv_xyfCLwJIzQjIZOPKJgiN5KQUrw"}},"msgtype":"m.text"},"ts":1684352387595,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zShO7FhPbEFC31WSKyV-_phztISvsRo_poHqIFI7P3c"},
{"content":{"body":"Note `import.source` also help to solve `import source \\n from` ambiguity for module declarations (`module source {}`). ","format":"org.matrix.custom.html","formatted_body":"Note <code>import.source</code> also help to solve <code>import source \\n from</code> ambiguity for module declarations (<code>module source {}</code>).","msgtype":"m.text"},"ts":1684352407948,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$UZuJnzaGX9I7izzAwrMEXiZ_G0Qt8ZvNbgHiXC0pqLM"},
{"content":{"body":"bakkot: not an actual ambiguity, an imagined one","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: not an actual ambiguity, an imagined one","msgtype":"m.text"},"ts":1684352424415,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BiCM813Libxf7y7ziA5yIVdpeCbVn7we3_YJWs1H5xU"},
{"content":{"body":"I completely agree with Guy here, we don't need to worry about future syntax for this","msgtype":"m.text"},"ts":1684352503619,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rG_LIqIy8aOpvOkq0QRgowh3WRLPoOdZ3MLEXjU3_iA"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1684352509296,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KXLmmiai2-7wHyDJD50gXtSi3NNyEQ36j-5g_SDHLaw"},
{"content":{"body":"apologies for creating the confusion about `from`","format":"org.matrix.custom.html","formatted_body":"apologies for creating the confusion about <code>from</code>","msgtype":"m.text"},"ts":1684352510346,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GTHgA7kjC1uYR2Zz8sbvp0Bq3SO1mgyjroACpw450fk"},
{"content":{"body":"> <@softwarechris:matrix.org> NB: it was part of the ES promise proposal at one point, and was called `deferred`\n\nI’m not suggesting that `Promise.defer` should be preferred based on historical precedent, but Mark originally proposed `defer` https://web.archive.org/web/20160404122250/http://wiki.ecmascript.org/doku.php?id=strawman:concurrency#q.defer","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$c0x_3P9T-dDLH57ohcObhZTFLD-wKJmNmuVOg6V-0ZY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>NB: it was part of the ES promise proposal at one point, and was called <code>deferred</code></blockquote></mx-reply>I’m not suggesting that <code>Promise.defer</code> should be preferred based on historical precedent, but Mark originally proposed <code>defer</code> https://web.archive.org/web/20160404122250/http://wiki.ecmascript.org/doku.php?id=strawman:concurrency#q.defer","m.relates_to":{"m.in_reply_to":{"event_id":"$c0x_3P9T-dDLH57ohcObhZTFLD-wKJmNmuVOg6V-0ZY"}},"msgtype":"m.text"},"ts":1684352826701,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qpvV_1rHtxE4BhW3SymFPhn3UkFqky07XMRHj_3jwiA"},
{"content":{"body":"If the concern around `import source from from` being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., `import x from <module_ref>` (with the literal `<>` characters), so there would be no ambiguity.","format":"org.matrix.custom.html","formatted_body":"If the concern around <code>import source from from</code> being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., <code>import x from &lt;module_ref&gt;</code> (with the literal <code>&lt;&gt;</code> characters), so there would be no ambiguity.","msgtype":"m.text"},"ts":1684352829875,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dEY19FXFj3i-16m1d5Zv0H3O1hFdjusJv1aUA7HJjDE"},
{"content":{"body":" * If the concern around `import source from from` is it being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., `import x from <module_ref>` (with the literal `<>` characters), so there would be no ambiguity.","format":"org.matrix.custom.html","formatted_body":" * If the concern around <code>import source from from</code> is it being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., <code>import x from &lt;module_ref&gt;</code> (with the literal <code>&lt;&gt;</code> characters), so there would be no ambiguity.","m.new_content":{"body":"If the concern around `import source from from` is it being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., `import x from <module_ref>` (with the literal `<>` characters), so there would be no ambiguity.","format":"org.matrix.custom.html","formatted_body":"If the concern around <code>import source from from</code> is it being ambiguous with module declarations, we could consider an alternate syntax for importing those declarations as well. i.e., <code>import x from &lt;module_ref&gt;</code> (with the literal <code>&lt;&gt;</code> characters), so there would be no ambiguity.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dEY19FXFj3i-16m1d5Zv0H3O1hFdjusJv1aUA7HJjDE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684352844621,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iqZW5642QKm8KIxf_LvYoJM6dz6KXRsDm9XP8z_rSSg"},
{"content":{"body":"what? we already ban `let`","format":"org.matrix.custom.html","formatted_body":"what? we already ban <code>let</code>","msgtype":"m.text"},"ts":1684352857171,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$GXrztJlFfsrunqvTtpyRljcPxWBaJmHVMjpIfwM-UWU"},
{"content":{"body":"> <@kriskowal:matrix.org> I’m not suggesting that `Promise.defer` should be preferred based on historical precedent, but Mark originally proposed `defer` https://web.archive.org/web/20160404122250/http://wiki.ecmascript.org/doku.php?id=strawman:concurrency#q.defer\n\nright -- I clarified after this  Promise.defer() -> Object Deferred ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$qpvV_1rHtxE4BhW3SymFPhn3UkFqky07XMRHj_3jwiA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>I’m not suggesting that <code>Promise.defer</code> should be preferred based on historical precedent, but Mark originally proposed <code>defer</code> https://web.archive.org/web/20160404122250/http://wiki.ecmascript.org/doku.php?id=strawman:concurrency#q.defer</blockquote></mx-reply>right -- I clarified after this  Promise.defer() -&gt; Object Deferred","m.relates_to":{"m.in_reply_to":{"event_id":"$qpvV_1rHtxE4BhW3SymFPhn3UkFqky07XMRHj_3jwiA"}},"msgtype":"m.text"},"ts":1684352978029,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$blzbtTMIMSL_c9d5bFXHypvE-epW1g0G_ldruwJZbfI"},
{"content":{"body":"Not a huge fan of `import.source x from \"y\"`, to be honest. I understand its an option, but I'd rather not break that glass unless we need to.","format":"org.matrix.custom.html","formatted_body":"Not a huge fan of <code>import.source x from &quot;y&quot;</code>, to be honest. I understand its an option, but I'd rather not break that glass unless we need to.","msgtype":"m.text"},"ts":1684352999686,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$RzUsDFBfsAZU_wVckaaUnk0jQuhEtlZDqLT5khtDAZ0"},
{"content":{"body":"And it seems we don’t need to.","msgtype":"m.text"},"ts":1684353013825,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lwEDqXp2S9UGdbQcnxjLiurEBfVhm87yZ3q99XFmvN8"},
{"content":{"body":"Sorry, what would be the meaning of `export source ...`?","format":"org.matrix.custom.html","formatted_body":"Sorry, what would be the meaning of <code>export source ...</code>?","msgtype":"m.text"},"ts":1684353023611,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$XNy4fH8LWnBLw8jaFYtyPTJ4xcliII2fa1OGrPExitY"},
{"content":{"body":"> <@rbuckton:matrix.org> Not a huge fan of `import.source x from \"y\"`, to be honest. I understand its an option, but I'd rather not break that glass unless we need to.\n\nYeah, I'm generally convinced that pseudo properties will be weird outside of expression context (exactly the reason why it's normal for dynamic import)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$RzUsDFBfsAZU_wVckaaUnk0jQuhEtlZDqLT5khtDAZ0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Not a huge fan of <code>import.source x from \"y\"</code>, to be honest. I understand its an option, but I'd rather not break that glass unless we need to.</blockquote></mx-reply>Yeah, I'm generally convinced that pseudo properties will be weird outside of expression context (exactly the reason why it's normal for dynamic import)","m.relates_to":{"m.in_reply_to":{"event_id":"$RzUsDFBfsAZU_wVckaaUnk0jQuhEtlZDqLT5khtDAZ0"}},"msgtype":"m.text"},"ts":1684353036588,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2XYj6lkUo6ZvBs3o9LBfqmbO6a7NohxZ9eQiYzwff1U"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Sorry, what would be the meaning of `export source ...`?\n\n`export source foo from 'path'`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XNy4fH8LWnBLw8jaFYtyPTJ4xcliII2fa1OGrPExitY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Sorry, what would be the meaning of <code>export source ...</code>?</blockquote></mx-reply><code>export source foo from 'path'</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$XNy4fH8LWnBLw8jaFYtyPTJ4xcliII2fa1OGrPExitY"}},"msgtype":"m.text"},"ts":1684353048812,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tbQlZ_3G-bxTEIKflfcAlljCrbFpU5a3Xyx-Av3-sTQ"},
{"content":{"body":"So I like the \"break glass\" mental model","msgtype":"m.text"},"ts":1684353054269,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hpIhWOEgdId6JOZHzuID9S8bG_PeUUnfSDz2XT6iBu8"},
{"content":{"body":"let isn't reserved in *strict* mode either btw","format":"org.matrix.custom.html","formatted_body":"let isn't reserved in <em>strict</em> mode either btw","msgtype":"m.text"},"ts":1684353087045,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$11QM6pnUSCBmvnjxPKm2gVSnnb7lSirmgLRnx54XRdY"},
{"content":{"body":"> <@ljharb:matrix.org> `export source foo from 'path'`\n\nSo, it's a way to re-export the source of some other module?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tbQlZ_3G-bxTEIKflfcAlljCrbFpU5a3Xyx-Av3-sTQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><code>export source foo from 'path'</code></blockquote></mx-reply>So, it's a way to re-export the source of some other module?","m.relates_to":{"m.in_reply_to":{"event_id":"$tbQlZ_3G-bxTEIKflfcAlljCrbFpU5a3Xyx-Av3-sTQ"}},"msgtype":"m.text"},"ts":1684353087182,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$eLXm5RNcopg8HrcONng1PG5au1LJXOICEmixv9_pcdM"},
{"content":{"body":"I can see it now, someone writes a prettier or dprint rule to format code as `import .source x from \"y\"` so it looks less like an expression.","format":"org.matrix.custom.html","formatted_body":"I can see it now, someone writes a prettier or dprint rule to format code as <code>import .source x from &quot;y&quot;</code> so it looks less like an expression.","msgtype":"m.text"},"ts":1684353089815,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$XSv-JfmPWcob0MkcojVQ2uwwtfGVDxYSDC9U1RMIe1E"},
{"content":{"body":"> <@michaelficarra:matrix.org> what? we already ban `let`\n\nWe really should also ban `from` as identifier in ES6 😅","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GXrztJlFfsrunqvTtpyRljcPxWBaJmHVMjpIfwM-UWU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>what? we already ban <code>let</code></blockquote></mx-reply>We really should also ban <code>from</code> as identifier in ES6 😅","m.relates_to":{"m.in_reply_to":{"event_id":"$GXrztJlFfsrunqvTtpyRljcPxWBaJmHVMjpIfwM-UWU"}},"msgtype":"m.text"},"ts":1684353103974,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$LD1MJoXjigmqLmLKhqmt-AGdAJOesXV6tNJeaR33TsA"},
{"content":{"body":"and `as`","format":"org.matrix.custom.html","formatted_body":"and <code>as</code>","msgtype":"m.text"},"ts":1684353163004,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cyC7IjoyBSJLwhn6PVddMo2jD142PWDXL9VExRHV4Aw"},
{"content":{"body":"`import { as as as } ....`","format":"org.matrix.custom.html","formatted_body":"<code>import { as as as } ....</code>","msgtype":"m.text"},"ts":1684353178235,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WSexg1i7GDi1s12rN1cbwXjR-q0f9d9a8NEcgSNQsdI"},
{"content":{"body":"> <@haxjs:matrix.org> We really should also ban `from` as identifier in ES6 😅\n\nNooo. I actually have a package that exports a function of that name.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LD1MJoXjigmqLmLKhqmt-AGdAJOesXV6tNJeaR33TsA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>We really should also ban <code>from</code> as identifier in ES6 😅</blockquote></mx-reply>Nooo. I actually have a package that exports a function of that name.","m.relates_to":{"m.in_reply_to":{"event_id":"$LD1MJoXjigmqLmLKhqmt-AGdAJOesXV6tNJeaR33TsA"}},"msgtype":"m.text"},"ts":1684353185700,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PURzuuqaJxmeUL8DVwv0emc87TkaQrrnxsYUQ6IUOBk"},
{"content":{"body":"> <@haxjs:matrix.org> We really should also ban `from` as identifier in ES6 😅\n\n * Nooo. I actually have a package that exports a function with that name.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LD1MJoXjigmqLmLKhqmt-AGdAJOesXV6tNJeaR33TsA?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>We really should also ban <code>from</code> as identifier in ES6 😅</blockquote></mx-reply> * Nooo. I actually have a package that exports a function with that name.","m.new_content":{"body":"Nooo. I actually have a package that exports a function with that name.","format":"org.matrix.custom.html","formatted_body":"Nooo. I actually have a package that exports a function with that name.","msgtype":"m.text"},"m.relates_to":{"event_id":"$PURzuuqaJxmeUL8DVwv0emc87TkaQrrnxsYUQ6IUOBk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684353191944,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$aNnOOMY6SrmHNsZOHpYmvaONZVgON3s7mMqy3yOqbFU"},
{"content":{"body":"need stage 3 reviewers for `Promise.embiggen()` -- any volunteers?","format":"org.matrix.custom.html","formatted_body":"need stage 3 reviewers for <code>Promise.embiggen()</code> -- any volunteers?","msgtype":"m.text"},"ts":1684353251247,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$s435eE5R1oi_-O4wVdEuAk1fjA0ts4WDBMbQsh4e21w"},
{"content":{"body":"e.g., \n```js\nimport { from } from \"@esfx/iterable-query\";\n\nconst res = from([a, b, c]).filter(predicate).groupBy(keySelector).toArray();\n```","format":"org.matrix.custom.html","formatted_body":"<p>e.g.,</p>\n<pre><code class=\"language-js\">import { from } from &quot;@esfx/iterable-query&quot;;\n\nconst res = from([a, b, c]).filter(predicate).groupBy(keySelector).toArray();\n</code></pre>\n","msgtype":"m.text"},"ts":1684353265540,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$e3EqE3J2p9YW3XN1UF37KdM1bIDtnq4D3SiSauGjvFc"},
{"content":{"body":"`Promise.source.from()`","format":"org.matrix.custom.html","formatted_body":"<code>Promise.source.from()</code>","msgtype":"m.text"},"ts":1684353279518,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$FMYO75GPMcWUtFgYPP39NO8Q_n41rk3BBajpIPVMvjg"},
{"content":{"body":"> <@rbuckton:matrix.org> Nooo. I actually have a package that exports a function with that name.\n\nI mean, `import {from} from module` might ok, but `import from from \"from\"` really a mess :P","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PURzuuqaJxmeUL8DVwv0emc87TkaQrrnxsYUQ6IUOBk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Nooo. I actually have a package that exports a function with that name.</blockquote></mx-reply>I mean, <code>import {from} from module</code> might ok, but <code>import from from &quot;from&quot;</code> really a mess :P","m.relates_to":{"m.in_reply_to":{"event_id":"$PURzuuqaJxmeUL8DVwv0emc87TkaQrrnxsYUQ6IUOBk"}},"msgtype":"m.text"},"ts":1684353300319,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$g_yM7Z3RRzcE3ynA_ZXBQvhiEMQ4LOPVFALE_8i53tc"},
{"content":{"body":"> <@softwarechris:matrix.org> need stage 3 reviewers for `Promise.embiggen()` -- any volunteers?\n\ndo a formal call after this topic","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$s435eE5R1oi_-O4wVdEuAk1fjA0ts4WDBMbQsh4e21w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>need stage 3 reviewers for <code>Promise.embiggen()</code> -- any volunteers?</blockquote></mx-reply>do a formal call after this topic","m.relates_to":{"m.in_reply_to":{"event_id":"$s435eE5R1oi_-O4wVdEuAk1fjA0ts4WDBMbQsh4e21w"}},"msgtype":"m.text"},"ts":1684353335863,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$-DrsoODYlBUTj1RY-9Wy812rbrQAUz59I9eCvnwtI5Q"},
{"content":{"body":"yeah, might not have time do it tomorrow ","msgtype":"m.text"},"ts":1684353363471,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ulOb2DjoJoZEQk71aQ7_lSigLOLfpnv4HcuZ9QXld3Q"},
{"content":{"body":" * yeah, might not have time -- can do it tomorrow ","m.new_content":{"body":"yeah, might not have time -- can do it tomorrow ","msgtype":"m.text"},"m.relates_to":{"event_id":"$ulOb2DjoJoZEQk71aQ7_lSigLOLfpnv4HcuZ9QXld3Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684353371407,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$x5GM7fEBs8XGMIzmDtbhPCoP5MGRrvKtONU8vxsYbxM"},
{"content":{"body":"I mean, `in` is a pseudo-keyword in `for-in` (and an actual keyword)","format":"org.matrix.custom.html","formatted_body":"I mean, <code>in</code> is a pseudo-keyword in <code>for-in</code> (and an actual keyword)","msgtype":"m.text"},"ts":1684353406740,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DSmeTfQ2sw9GZfSqp93LbBNs4tUktYkaUlPfOh56kjc"},
{"content":{"body":"I mean, you don't need quorum to assign stage 3 reviewers","msgtype":"m.text"},"ts":1684353675743,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HbsTYYnml8bJMg9BeG7qxKjwkcTHhNLYPU2iLo6sbso"},
{"content":{"body":"doesn't hurt to ask","msgtype":"m.text"},"ts":1684353683665,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$df1rK5VxMLOzUsPsPgyA9DVaz5UBIuuqAITGsiGBs04"},
{"content":{"body":"quorum is not even a concept we have","msgtype":"m.text"},"ts":1684353755187,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9jER4eChPHmKRcPhvEZMK89hAQuZQjadiZvGPV__9Dk"},
{"content":{"body":"eh, we kind of do","msgtype":"m.text"},"ts":1684353771780,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$AbiGZEz583-ySII9_t51jxYXfLMV8_Oh0tVG4ItqZA8"},
{"content":{"body":"on the last meeting day, when people are trickling in in the morning, we often delay the meeting a few minutes until we reach quorum","msgtype":"m.text"},"ts":1684353799710,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$8KnqU-_kfxjpQ1bbdQrPZ008XTcnvXu2gmP6wjuWmyU"},
{"content":{"body":"\"consensus by locking everyone else out of the room\"","msgtype":"m.text"},"ts":1684353802265,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$y_RNYWyY7EkIvxAin6FgLik1S8Dc7wfWNKkDXinjCqs"},
{"content":{"body":"everyone is always late on Thursday morning","msgtype":"m.text"},"ts":1684353813011,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KtTd5XfiTLjgFR-UcMVQOoK9AhvamXiP2Dn2m8BGXM0"},
{"content":{"body":"too much drinking Wednesday night","msgtype":"m.text"},"ts":1684353829251,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$l-bKSq8iAiiUWEadHY3-oxxf6Xsh-q0Y3N9icvO0wMc"},
{"content":{"body":"fair, quorum is not a process formalism we have, but it is a norm we operate by where we kinda know who the core stakeholders are and don't pull a fast one when they aren't present","msgtype":"m.text"},"ts":1684353891131,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4a7tzZEQCOOkJ8uvQz6ytXCouCvnYRzIBIh201uFsME"},
{"content":{"body":"> <@shuyuguo:matrix.org> fair, quorum is not a process formalism we have, but it is a norm we operate by where we kinda know who the core stakeholders are and don't pull a fast one when they aren't present\n\nand this norm is enforced by, if the stakeholder is present at the next meeting, they can say, \"hey, you pulled a fast one!\" and it's kinda undone. But this process is very infrequently applied and definitely has a 1-meeting time limit.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4a7tzZEQCOOkJ8uvQz6ytXCouCvnYRzIBIh201uFsME?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>fair, quorum is not a process formalism we have, but it is a norm we operate by where we kinda know who the core stakeholders are and don&#39;t pull a fast one when they aren&#39;t present</blockquote></mx-reply>and this norm is enforced by, if the stakeholder is present at the next meeting, they can say, &quot;hey, you pulled a fast one!&quot; and it's kinda undone. But this process is very infrequently applied and definitely has a 1-meeting time limit.","m.relates_to":{"m.in_reply_to":{"event_id":"$4a7tzZEQCOOkJ8uvQz6ytXCouCvnYRzIBIh201uFsME"}},"msgtype":"m.text"},"ts":1684354338586,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SLYcc1MPIXbMDqqmV_k1YgHbC473ZV2p9iMr7S0qidw"},
{"content":{"body":"> <@softwarechris:matrix.org> need stage 3 reviewers for `Promise.embiggen()` -- any volunteers?\n\nHappy to do it… because I already did it.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$s435eE5R1oi_-O4wVdEuAk1fjA0ts4WDBMbQsh4e21w?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br>need stage 3 reviewers for <code>Promise.embiggen()</code> -- any volunteers?</blockquote></mx-reply>Happy to do it… because I already did it.","m.relates_to":{"m.in_reply_to":{"event_id":"$s435eE5R1oi_-O4wVdEuAk1fjA0ts4WDBMbQsh4e21w"}},"msgtype":"m.text"},"ts":1684354397108,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2ZCfRdls4OzeVXKqEHDRvR2UH-qkpg1xXOJExbOt4Aw"},
{"content":{"body":"Can we add a continuation topic to the agenda for Array grouping?","msgtype":"m.text"},"ts":1684355570914,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0huztt1XQuX6H7neawLfpa2Hbxa-ULTpGZDuAc2cRws"},
{"content":{"body":"I can be backup presenter if needed, but I thought ljharb was going to present","msgtype":"m.text"},"ts":1684355587859,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$K62CrStUryp8Sp-CFy9HHacEA-J8KLnweuQTnhVfGw0"},
{"content":{"body":"ah good call, i thought the overflow item was already there. the PR has been rebased so i'd love to present it","msgtype":"m.text"},"ts":1684357243016,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NC9lgufkXWQhEQ0tqr0RKlbkwzeu-RvNmm_ZLOAZ1QA"},
{"content":{"body":"How long do you need? We miscounted before so we may well run into the afternoon session. ","format":"org.matrix.custom.html","formatted_body":"How long do you need? We miscounted before so we may well run into the afternoon session.","msgtype":"m.text"},"ts":1684357458794,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$ELGQJOvHQw-cMA046dDYsXsenz8jAAnefjoDUogmLsw"},
{"content":{"body":"I think we should expect to go into the afternoon session. I don't want to be rushed in the source maps topic either.","msgtype":"m.text"},"ts":1684357749522,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5_IZgfH9sB795mCI-EQnnA6-VY5qE4mi4zKLYNHj9t4"},
{"content":{"body":"is it an important goal for others to avoid the afternoon session tomorrow?","msgtype":"m.text"},"ts":1684357766149,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hRmPBa90ohIgAFT1eA8Osyerz5ZkAFUCHvg4fAhkV20"},
{"content":{"body":"> <@robpalme:matrix.org> How long do you need? We miscounted before so we may well run into the afternoon session.\n\nideally 2 minutes, realistically 15 is a good goal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ELGQJOvHQw-cMA046dDYsXsenz8jAAnefjoDUogmLsw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br>How long do you need? We miscounted before so we may well run into the afternoon session.</blockquote></mx-reply>ideally 2 minutes, realistically 15 is a good goal","m.relates_to":{"m.in_reply_to":{"event_id":"$ELGQJOvHQw-cMA046dDYsXsenz8jAAnefjoDUogmLsw"}},"msgtype":"m.text"},"ts":1684358719290,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yhK_Ya4mWsA_ouW1QzgzwmTNaeqlWikPF_Q47SDipcg"},
{"content":{"body":"Let's say 15mins then. ","format":"org.matrix.custom.html","formatted_body":"Let's say 15mins then.","msgtype":"m.text"},"ts":1684358913701,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$dwsDZCPk58yimx5iH3WWBHbBqkEanqgmMHR6FWdEZAY"},
{"content":{"body":"https://hackmd.io/d88UqzA8TFaKRdjY3t8vyQ\nschedule updated. please take a look and lmk if any concerns","msgtype":"m.text"},"ts":1684360450768,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$QuZvECgaVHDRsF7mj1F3N1KMVuaU3d5LH-tiVa3xCR8"}
]