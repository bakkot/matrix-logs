[
{"content":{"body":"another heads up for delegates, about Temporal. we got another spec bug report from two implementors today, and while investigating that one, Justin found another spec bug. I've added the fixes to the slides that I will present on Wednesday, but again since they are late additions, we understand if delegates will need more time to consider them.","msgtype":"m.text"},"ts":1635210105760,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$vPYTbLonGxfWb-QIjD_nF5U3pkub22MLo2-JWzwJh44"},
{"content":{"body":"Was there no CoC Committee update in the first session? It was on the agenda, but I didnâ€™t hear any update and itâ€™s not in the notes.","msgtype":"m.text"},"ts":1635217546358,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2qjjrrRNGQ-8gHn7V2SrQM6fvUqthW8ow6fXO98J61A"},
{"content":{"body":"No, I think the plan was to have it later. ","msgtype":"m.text"},"ts":1635237829592,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$45WzQSg1PjEUZenUIpcNYbCNeIdW2QafIXuBj6tlriI"},
{"content":{"body":"The Halloween edition of TC39 plenary will begin in 3 mins.","msgtype":"m.text"},"ts":1635238658797,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$K6L0rFHlM2dUYs5lEWkyZOkULTMMh8OYecs5FdDbEpU"},
{"content":{"body":"ðŸ‘»","msgtype":"m.text"},"ts":1635238778301,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$h93PHUy_f3cI9xH7tJVHEhBJz7IOvNmlDJspS8X2nvc"},
{"content":{"body":"I forget it every time: I don't have to fill the form every day, right?","msgtype":"m.text"},"ts":1635239009357,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$C_UzTgaeHATlsumk0Rd2QyLRmhn7KCKVGjdot57LeEY"},
{"content":{"body":" * I forget it every time: I don't have to fill the form every day, right?","m.new_content":{"body":"I forget it every time: I don't have to fill the form every day, right?","msgtype":"m.text"},"m.relates_to":{"event_id":"$C_UzTgaeHATlsumk0Rd2QyLRmhn7KCKVGjdot57LeEY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635239015229,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$k4-39DL2GK1zJxuis73OxkBKbHyYnIz2MhRkS_NiIjo"},
{"content":{"body":"correct, nicolo - we keep the same password","msgtype":"m.text"},"ts":1635239086934,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$9nDYDZIWvkRCeJH1bXWkx2mGNAQohOi5ZGASxy2zBG8"},
{"content":{"body":"we just need each attendee to fill it in once","msgtype":"m.text"},"ts":1635239097777,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$QxPcrN1vlLWAzfanbW4lurzX7g9uyw9dq80IdPUV_A4"},
{"content":{"body":"Ok thanks!","msgtype":"m.text"},"ts":1635239104355,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$O27UC-x2bsAxH-9LqUlfUddWUOfcFLOCPZVuYvTIDDA"},
{"content":{"body":"(I had to do it twice because if you don't open matrix in a new window or save the info, you can't get back to it ðŸ™ˆ)","msgtype":"m.text"},"ts":1635239419199,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$JMg4viyhwyln1WUd01wrtP1xZ7sjkiElMxyF5UlXB70"},
{"content":{"body":"oh hi Surma ","format":"org.matrix.custom.html","formatted_body":"oh hi <a href=\"https://matrix.to/#/@surma:matrix.org\">Surma</a>","msgtype":"m.text"},"ts":1635239791928,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$bGqsVaF1CsDdjgzqxdKhsH7fn6JJRlOZZsh-1K7yhiw"},
{"content":{"body":"ðŸ‘‹ Tierney Cyren ","format":"org.matrix.custom.html","formatted_body":"ðŸ‘‹ <a href=\"https://matrix.to/#/@bitandbang:matrix.org\">Tierney Cyren</a>","msgtype":"m.text"},"ts":1635239816696,"senderName":"Surma","senderId":"@surma:matrix.org","id":"$0mZumMpS7nhD2u6RF5rSoklcspT6i04kErtm3b5RKZY"},
{"content":{"body":"glad to see you here :)","msgtype":"m.text"},"ts":1635239831246,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$kviB88wZEqaRHvsry-s7DiYz9dYZ8LZuZuJ3UlYYCH4"},
{"content":{"body":"ðŸ‘‹hello","msgtype":"m.text"},"ts":1635239937194,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$jWO4aASQQS999I61aArw7qMEzUgQbvqg_zqtp7jBjQw"},
{"content":{"body":"for the notes: frank said 3 PRs, but I can't figure out what the third one was","msgtype":"m.text"},"ts":1635240028557,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Tbc3__AHQ8ar6rXlaDXRKg12UkpRN6Ttih_Za7QFi3I"},
{"content":{"body":"anyone know?","msgtype":"m.text"},"ts":1635240030481,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eappg_fZxRJiBZ8sCiapWAHcWdkqs_C8ONQ7akG3hCI"},
{"content":{"body":"That looked like it worked.","msgtype":"m.text"},"ts":1635240032697,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$2aZ6JJCz25mG8v8JzCREbz4yaKbkLtFHOmbmbP95AKA"},
{"content":{"body":"there was the non-continuous weekend one and the annex A one and then a third one","msgtype":"m.text"},"ts":1635240041480,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3WnGRjtDMzTtddU3ohXx85AAs2fRuvtpXOMBxYFJBkg"},
{"content":{"body":"\"canonical\"?","msgtype":"m.text"},"ts":1635240079898,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$H8EpyQ6ncHFLH_yGuAPSMrKc-FHYnaQjNTxlobCc08Q"},
{"content":{"body":"ah yes thanks","msgtype":"m.text"},"ts":1635240086687,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p_cZrhpWDZmFzwid4hGV0EX9GrCQcJYJ5EY3MNcBpns"},
{"content":{"body":"queue may be confused https://gc.gy/285b32a5-6cd1-4c10-9e9a-8a300f754897.png","msgtype":"m.text"},"ts":1635240202818,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$SYmT9-4kRd7-7kNrnegaTFaxuPVwr22F-A0bF7YdPH4"},
{"content":{"body":"an engine could probably do nice stack traces like that itself, no need to include pos in the error","msgtype":"m.text"},"ts":1635240417041,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$CdKF-7EvuUkJIrmNlum0ALxC93SyS1BIYZ9lkjq5In4"},
{"content":{"body":"shu: raw returns some magic object that tells json.stringify to use the string as source instead of a string","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: raw returns some magic object that tells json.stringify to use the string as source instead of a string","msgtype":"m.text"},"ts":1635240632232,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$coeyEZ0h6d8NwlQo5UP_q2suwPC3FKim5L_qcAp4HKg"},
{"content":{"body":"In the cases where I have needed position information in JSON, I've generally had to rely on something like the TypeScript parser and AST, even in a purely JS project. My use cases so far have been fairly niche, such as doing minor updates to an existing JSON file while preserving the source formatting (usually for JSON files intended to be both human and machine readable such as package.json).","msgtype":"m.text"},"ts":1635240659641,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$MlXurv4jQH8kyrMM4giwiLconla3DKQNavjQ3A2ijus"},
{"content":{"body":"syg: right now, JSON.stringify of an object without a `toString` is guaranteed to do the thing you expect absent a reviver, but if the symbol is shared that's no longer true","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@syg:mozilla.org\">syg</a>: right now, JSON.stringify of an object without a <code>toString</code> is guaranteed to do the thing you expect absent a reviver, but if the symbol is shared that's no longer true","msgtype":"m.text"},"ts":1635241182422,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BjhfGUh7X4GLCLzEMIPGLTodzzPALQfWNhQmhIQs3EA"},
{"content":{"body":"Michael Ficarra: I am strongly opposed to having the marker be an object with a symbol here because it implies that the engine will need to do a lookup on every object","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: I am strongly opposed to having the marker be an object with a symbol here because it implies that the engine will need to do a lookup on every object","msgtype":"m.text"},"ts":1635241575404,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XnQ1usJkSfmF32aw7MDb0hXydyazB2QE_s3YlQkKtAI"},
{"content":{"body":"which is observable","msgtype":"m.text"},"ts":1635241583948,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hwo6yTjSIsRRr_VuufeMbPD2rcVk2C-ogpYShyw5H8I"},
{"content":{"body":"it's simpler in the sense of \"fewer kinds of object in the language\", true, but not in terms of \"how much observable behavior there is\", and the second thing seems like the thing we should be minimizing most of the time","msgtype":"m.text"},"ts":1635241613114,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_02MrDiKXUUuaPjF5BBcKGjA7LMnZRwk9tJxZ0cCt20"},
{"content":{"body":"bakkot: fair point","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: fair point","msgtype":"m.text"},"ts":1635241697197,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NmiqZ2DnUlw0SZajM7EXxy-PjBHKjt8rAlRdSj3tArI"},
{"content":{"body":"that's a good point","msgtype":"m.text"},"ts":1635241744438,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$I73n2aTt_8rgUWZB-eWV5tt1xtg8kgkBrRTrYTIVCoc"},
{"content":{"body":"though i don't think a particular problem for performance in the common case","msgtype":"m.text"},"ts":1635241756282,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oO4x5S-l8NLZ3E340hen_3eWoJe_LDGbtgY2w7RVIu4"},
{"content":{"body":"bakkot: how do we ensure these exotic marked objects don't usefully escape the callback?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: how do we ensure these exotic marked objects don't usefully escape the callback?","msgtype":"m.text"},"ts":1635241758605,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2ahxFh_x5a2dAwQHCE4n5OXDo8QOft505rFMUlmRPZo"},
{"content":{"body":"you don't","msgtype":"m.text"},"ts":1635241771682,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$jlxDpIjMncouu_A9A2FUBewNpEsEsMDTXN_fXjHDEDE"},
{"content":{"body":"is the value of the slot fresh?","msgtype":"m.text"},"ts":1635241779045,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wmrllBva2mwXUJFPZ03AUdQhn9x1eLHhPqANQgGRcdk"},
{"content":{"body":"oh you mean per-invocation","msgtype":"m.text"},"ts":1635241808564,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$pNLcm283TIr6zEcQ6_pj-3343VdGiEPInfStQ_xGdx4"},
{"content":{"body":"in terms of spec language you could say its `{[[Index]]: n, [[String]]: s}`","format":"org.matrix.custom.html","formatted_body":"in terms of spec language you could say its <code>{[[Index]]: n, [[String]]: s}</code>","msgtype":"m.text"},"ts":1635241828599,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$o7oU1l3Z2cOtef7TTCghTuhcY23mgYWjChwWq8zOEk4"},
{"content":{"body":"and expect that index back","msgtype":"m.text"},"ts":1635241848056,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$DoP0OZRrGjvLRMVi_N2nvqK4w4XO8FBjI9hRS65wpgs"},
{"content":{"body":"or you could expect the whole object i guess","msgtype":"m.text"},"ts":1635241855002,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$VUf-_-g3vrqY9rTlt_EJYwUo-EOKQGky-o033O0R4bY"},
{"content":{"body":"cuz it has identity","msgtype":"m.text"},"ts":1635241857873,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$F8liOYqkxvVcCDEhwFD4rntnSC00mP8bLz7rR0D7Jhg"},
{"content":{"body":"Michael Ficarra: you can't ensure they don't escape, but like devsnek says you have a field which indicates which invocation it is","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: you can't ensure they don't escape, but like devsnek says you have a field which indicates which invocation it is","msgtype":"m.text"},"ts":1635241934216,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1tNoEquab5FfMywtnJG8WyPjRLpVFpNaK78Q89VQA08"},
{"content":{"body":"s/field/internal slot/","msgtype":"m.text"},"ts":1635241945301,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qMdzdy7Qq0wtRPlF7OUQpEPxwHQzTZV3oGDlrR8MiLs"},
{"content":{"body":"> <@bakkot:matrix.org> syg: right now, JSON.stringify of an object without a `toString` is guaranteed to do the thing you expect absent a reviver, but if the symbol is shared that's no longer true\n\nis that something that's generally depended upon?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BjhfGUh7X4GLCLzEMIPGLTodzzPALQfWNhQmhIQs3EA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@syg:mozilla.org\">syg</a>: right now, JSON.stringify of an object without a <code>toString</code> is guaranteed to do the thing you expect absent a reviver, but if the symbol is shared that's no longer true</blockquote></mx-reply>is that something that's generally depended upon?","m.relates_to":{"m.in_reply_to":{"event_id":"$BjhfGUh7X4GLCLzEMIPGLTodzzPALQfWNhQmhIQs3EA"}},"msgtype":"m.text"},"ts":1635241948336,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hD5aXLy1FHiY-5_QQb-EGVPZp-SlOnpv2qVyqMw2Pq4"},
{"content":{"body":"```js\nlet thing;\nlet raw = (v) => {\n  thing = { v };\n  return thing;\n};\nconst result = callback(key, value, { raw });\nif (thing && result === thing) {\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">let thing;\nlet raw = (v) =&gt; {\n  thing = { v };\n  return thing;\n};\nconst result = callback(key, value, { raw });\nif (thing &amp;&amp; result === thing) {\n</code></pre>\n","msgtype":"m.text"},"ts":1635241961243,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$WDEMs8y100SiqjFVP-C0kJmqWGr8d2S4foyfcJFUO-4"},
{"content":{"body":"okay I mean a counter is just a fresh value, so I'm fine with that","msgtype":"m.text"},"ts":1635241968816,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BecRWEpT_BQ0LPErm6Zl0_Gl3Yoc_IZfPZ6ZmT9VmHE"},
{"content":{"body":"like, wouldn't the new guidance be \"here's another hook we need, if you hook into it, well, you get hook behavior\"","msgtype":"m.text"},"ts":1635241975095,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bOPR90CsqAL0CdLH1B53ZbA7MfXk4jsGqbITD30o31I"},
{"content":{"body":"and stringify encounters an object with this slot holding a different value than for the current invocation it can throw","msgtype":"m.text"},"ts":1635241975098,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EE02szJREw4PlQmWOHyX55CHahZpW_i3aQ9BI0_wxqY"},
{"content":{"body":"what happens if you call raw multiple times in one callback","msgtype":"m.text"},"ts":1635241983030,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$6QUiL8mgqL9WS5XV1Lz5RtSWK2UplVtFHW7xoSX_qoc"},
{"content":{"body":" * and stringify encounters an object with this slot holding a different value than for the current invocation it can throw","m.new_content":{"body":"and stringify encounters an object with this slot holding a different value than for the current invocation it can throw","msgtype":"m.text"},"m.relates_to":{"event_id":"$EE02szJREw4PlQmWOHyX55CHahZpW_i3aQ9BI0_wxqY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635241985811,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eidKoHzisLtk4Q7Z7ja1dc5H1qSrEP2ZbjQGnMNdafM"},
{"content":{"body":"devsnek: same index","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: same index","msgtype":"m.text"},"ts":1635241994277,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$QULd51S5A085eHH-4K7E0GHxZGzZX6lfpVT1sVSjSaM"},
{"content":{"body":"i feel like that should work, you could compose a sub-object","msgtype":"m.text"},"ts":1635241995893,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$aytIaakA3ggXIS8dYYZAAkpHUhABjSH7GFPXackiADM"},
{"content":{"body":"Tbh I would expect the argument to `raw` to always be a string","format":"org.matrix.custom.html","formatted_body":"Tbh I would expect the argument to <code>raw</code> to always be a string","msgtype":"m.text"},"ts":1635242025596,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$e0lF_gJNbRQTpg-0Er3TovlQPADOeDLfp1XPYXabDPI"},
{"content":{"body":"Otherwise it's not raw","msgtype":"m.text"},"ts":1635242028879,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$jKkXI29wNkDoUsDaPDsx1WmUCo1IJ5y-FPNQbrKr5hk"},
{"content":{"body":"no i mean like","msgtype":"m.text"},"ts":1635242034446,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$78U0LbdESGC4ZgukRJ43YDDvjj697gWiSoyZq1Uarmk"},
{"content":{"body":"`(key, value, { raw }) => ({ a: raw(foo), b: raw(bar) })`","format":"org.matrix.custom.html","formatted_body":"<code>(key, value, { raw }) =&gt; ({ a: raw(foo), b: raw(bar) })</code>","msgtype":"m.text"},"ts":1635242056910,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$2GLUDnDwhf3zoPgpJqiuB9EAFVNm4fAJvV874O9h-G4"},
{"content":{"body":"uh ok, that makes sense","msgtype":"m.text"},"ts":1635242072225,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RwAExtEc-u9BroUQVuEXi0cgYhg7fmIoaj3PfM_dirc"}
]