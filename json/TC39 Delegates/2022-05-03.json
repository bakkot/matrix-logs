[
{"content":{"body":"> <@shuyuguo:matrix.org> i meant May 6 9:00 - 10:00 PT, 1 hour later\n\nNo worries; I can make that too. Thanks for arranging!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24rfAtysWvYWhUjtG2-UbR_0j_0W4a6qwkiOBlTpgol7Y\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i meant May 6 9:00 - 10:00 PT, 1 hour later</blockquote></mx-reply>No worries; I can make that too. Thanks for arranging!","m.relates_to":{"m.in_reply_to":{"event_id":"$rfAtysWvYWhUjtG2-UbR_0j_0W4a6qwkiOBlTpgol7Y"}},"msgtype":"m.text"},"ts":1651583495580,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$aDQPV8vLrvgjF5y9CqnTrCrq0UARfnzWDespaLFP32I"},
{"content":{"body":"`Array(Math.pow(2, 32) - 1).concat(1)` throws a RangeError about \"too large\" in node; in Safari it throws an OOM RangeError; in FF it seems to just hang. the spec seems to say it should throw a TypeError (https://tc39.es/ecma262/#sec-array.prototype.concat step 5.b.iii). am i reading it right? if so i can make a test262 test for it.","format":"org.matrix.custom.html","formatted_body":"<code>Array(Math.pow(2, 32) - 1).concat(1)</code> throws a RangeError about &quot;too large&quot; in node; in Safari it throws an OOM RangeError; in FF it seems to just hang. the spec seems to say it should throw a TypeError (https://tc39.es/ecma262/#sec-array.prototype.concat step 5.b.iii). am i reading it right? if so i can make a test262 test for it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Array(Math.pow(2, 32) - 1).concat(1)` throws a RangeError about \"too large\" in node; in Safari it throws an OOM RangeError; in FF it seems to just hang. the spec seems to say it should throw a TypeError (https://tc39.es/ecma262/#sec-array.prototype.concat step 5.b.iii). am i reading it right? if so i can make a test262 test for it.","mimetype":"text/plain"},{"body":"<code>Array(Math.pow(2, 32) - 1).concat(1)</code> throws a RangeError about &quot;too large&quot; in node; in Safari it throws an OOM RangeError; in FF it seems to just hang. the spec seems to say it should throw a TypeError (https://tc39.es/ecma262/#sec-array.prototype.concat step 5.b.iii). am i reading it right? if so i can make a test262 test for it.","mimetype":"text/html"}]},"ts":1651616090385,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9sTVliy4z0qXKJa1k21O3zq-aaKIj0bPuo3LKUyC6R0"},
{"content":{"body":"that's not my reading","msgtype":"m.text","org.matrix.msc1767.text":"that's not my reading"},"ts":1651616570245,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$c4Cfkr5kH-hJvIK3hcRXHKu9kWQTrTs2aUnvvjFFp2g"},
{"content":{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that length, even without an implementation-defined OOM error","format":"org.matrix.custom.html","formatted_body":"OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that length, even without an implementation-defined OOM error","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that length, even without an implementation-defined OOM error","mimetype":"text/plain"},{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that length, even without an implementation-defined OOM error","mimetype":"text/html"}]},"ts":1651616601508,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RP2a7YjLCNCwtpB7_9mWt-hM8R1nnkiZsPa4xZL2SnY"},
{"content":{"body":"so Safari is certainly allowed to throw an OOM","msgtype":"m.text","org.matrix.msc1767.text":"so Safari is certainly allowed to throw an OOM"},"ts":1651616614576,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$F98dTKRYtkwqp4YS-w-P_c0m6nuhN3aG5MMswNDnsGU"},
{"content":{"body":"as for FF hanging, that's fine too, i think, from a compliance perspective","msgtype":"m.text","org.matrix.msc1767.text":"as for FF hanging, that's fine too, i think, from a compliance perspective"},"ts":1651616638652,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QeQTslF0n5Z8s0VcOK6fAgZMOYsy1p5gHqwgtC7f3OU"},
{"content":{"body":"it might be undesirable to hang, but i don't think that's breaking compliance with the spec","msgtype":"m.text","org.matrix.msc1767.text":"it might be undesirable to hang, but i don't think that's breaking compliance with the spec"},"ts":1651616659213,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$e1RR2YnuoaeFjoP3Ui-cS54CAU7qUIBlRdH90x1z1Jc"},
{"content":{"body":"a test262 here test can test that either a TypeError or an OOM RangeError is thrown, i'd think","msgtype":"m.text","org.matrix.msc1767.text":"a test262 here test can test that either a TypeError or an OOM RangeError is thrown, i'd think"},"ts":1651616712997,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3roeCIDxFHkKV652pIscvQC0HRwlm2kpw9PkY9msi1s"},
{"content":{"body":"actually i'm not sure implementation-defined OOM errors are required to be `RangeError`s or can be anything","format":"org.matrix.custom.html","formatted_body":"actually i'm not sure implementation-defined OOM errors are required to be <code>RangeError</code>s or can be anything","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"actually i'm not sure implementation-defined OOM errors are required to be `RangeError`s or can be anything","mimetype":"text/plain"},{"body":"actually i'm not sure implementation-defined OOM errors are required to be <code>RangeError</code>s or can be anything","mimetype":"text/html"}]},"ts":1651616741992,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4m8kZ-Z4KHzuj0VUs1HzKhMhdF_3YFpyO2tUdaN2pUo"},
{"content":{"body":"so maybe the test is just that it must throw _something_","format":"org.matrix.custom.html","formatted_body":"so maybe the test is just that it must throw <em>something</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so maybe the test is just that it must throw _something_","mimetype":"text/plain"},{"body":"so maybe the test is just that it must throw <em>something</em>","mimetype":"text/html"}]},"ts":1651616748949,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iOF35dvnRjx8QIx85X_F2uFNDgVN9GngCyS1sWlY24I"},
{"content":{"body":" * OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","format":"org.matrix.custom.html","formatted_body":" * OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","m.new_content":{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","format":"org.matrix.custom.html","formatted_body":"OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","mimetype":"text/plain"},{"body":"OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$RP2a7YjLCNCwtpB7_9mWt-hM8R1nnkiZsPa4xZL2SnY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * OOMs are implementation-defined and can really happen anywhere. the spec says a `TypeError` should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","mimetype":"text/plain"},{"body":" * OOMs are implementation-defined and can really happen anywhere. the spec says a <code>TypeError</code> should be thrown for lengths that exceed that value, even without an implementation-defined OOM error","mimetype":"text/html"}]},"ts":1651616875264,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vYdqvOWx9TgDhwKav5e11ooHieVmhT7K5j41kMfNmrc"}
]