[
{"content":{"body":"why is `WeakRef.prototype.constructor` normative optional? https://tc39.es/ecma262/#sec-weak-ref.prototype.constructor","format":"org.matrix.custom.html","formatted_body":"why is <code>WeakRef.prototype.constructor</code> normative optional? https://tc39.es/ecma262/#sec-weak-ref.prototype.constructor","msgtype":"m.text"},"ts":1637264141988,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$vnUGEWrUpyd9cinN6uYeI8ENLBu9Q7JckSs1HEhW_Dc"},
{"content":{"body":"SES IIRC?","msgtype":"m.text"},"ts":1637264174396,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6uNWTlkWgLhkTQ7PhUOLbl9PusPDNWpH3ivBNy8ZL5I"},
{"content":{"body":"how so? I could see WeakRef itself being normative optional, but what is the point of shipping a WeakRef whose prototype does not have a `constructor` property?","format":"org.matrix.custom.html","formatted_body":"how so? I could see WeakRef itself being normative optional, but what is the point of shipping a WeakRef whose prototype does not have a <code>constructor</code> property?","msgtype":"m.text"},"ts":1637264599397,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$afMIW8-vzjMgeiGz-9zYM0CJDwFndDkz-p2HYRx36Bk"},
{"content":{"body":"and I don't see discussion at https://github.com/tc39/ecma262/pull/2089 other than \"we're adding inline normative optional spec text\" from yulia in the PR description without further explanation","format":"org.matrix.custom.html","formatted_body":"and I don't see discussion at https://github.com/tc39/ecma262/pull/2089 other than &quot;we're adding inline normative optional spec text&quot; from <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> in the PR description without further explanation","msgtype":"m.text"},"ts":1637264712978,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$xVzGjhAwEm0_v6jnoVSaizM29sGR6HqtXbK7vBosVe4"},
{"content":{"body":"The motivation is that it can be removed so you wouldn't be able to create a new WeakRef from an instance. Aka sharing an instance to observe the liveness of one object doesn't allow you start observing the liveness of any object.","msgtype":"m.text"},"ts":1637264970455,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$fCuztAUHyeQAACnMYimpChCgdBk8f2SVTzoEhPnLUMs"}
]