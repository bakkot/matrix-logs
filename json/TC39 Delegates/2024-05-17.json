[
{"content":{"body":"rbuckton: (or anyone else who is a grammar expert): i don't understand the `await using` cover grammar","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: (or anyone else who is a grammar expert): i don't understand the <code>await using</code> cover grammar","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1715981498198,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NakkUfCxCyMY0QZsnp056KMxlE7ibatYf4bVNWi4C_A"},
{"content":{"body":"the stage 3 spec draft has this:","m.mentions":{},"msgtype":"m.text"},"ts":1715981548479,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$V-i_pfZwKx7TrMOhhB-TuV7pWi05bpf6xpS3y0HZx9U"},
{"content":{"body":"CoverAwaitExpressionAndAwaitUsingDeclarationHead and AwaitExpression are exactly the same. how can you refine a grammar with the same grammar?","m.mentions":{},"msgtype":"m.text"},"ts":1715981597892,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$o54HuQFiIAgMJ2_7Gu0UGd5E36GRHZHLPK5Etx3FSPM"},
{"content":{"body":"the intention must've been that `await using x` in StatementItemList position is parsed in its entire 3 tokens by AwaitUsingDeclaration instead of the first 2 tokens by AwaitExpression, but i don't think you can express that by having a cover grammar for the first two tokens only","format":"org.matrix.custom.html","formatted_body":"the intention must've been that <code>await using x</code> in StatementItemList position is parsed in its entire 3 tokens by AwaitUsingDeclaration instead of the first 2 tokens by AwaitExpression, but i don't think you can express that by having a cover grammar for the first two tokens only","m.mentions":{},"msgtype":"m.text"},"ts":1715981906988,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K1V0tsIOh1X4Ewf4GakZ3JHoTZoZgLzHB_ReNXtq3YQ"},
{"content":{"body":"i don't know how else to express this though","m.mentions":{},"msgtype":"m.text"},"ts":1715981911387,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9CX4TQWldT5hQuf556Bxjacf5tbworoRxoN3OWIagvw"},
{"content":{"body":"or wait, is that how cover grammars work?","m.mentions":{},"msgtype":"m.text"},"ts":1715981941242,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$11NIyzXJb8hKOOmzlcaOavimjgYlp_HDNDEWviur8Cw"},
{"content":{"body":"It works the same way as `CoverCallExpressionAndAsyncArrowHead`, which refines to `CallMemberExpression` (which is identical)","format":"org.matrix.custom.html","formatted_body":"It works the same way as <code>CoverCallExpressionAndAsyncArrowHead</code>, which refines to <code>CallMemberExpression</code> (which is identical)","m.mentions":{},"msgtype":"m.text"},"ts":1715982151272,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$oCQA8Bzp-b6BqTHTW8zvd-ZmxJO0kLvfDOmD79BozqU"},
{"content":{"body":"The difference is that you can parse the cover in places you can't parse AwaitExpression on its own, such as `await using x`. `await using` isn't a legal AwaitExpression if an identifier follows it on the same line, but its parse can be reused for AwaitUsingDeclaration","format":"org.matrix.custom.html","formatted_body":"The difference is that you can parse the cover in places you can't parse AwaitExpression on its own, such as <code>await using x</code>. <code>await using</code> isn't a legal AwaitExpression if an identifier follows it on the same line, but its parse can be reused for AwaitUsingDeclaration","m.mentions":{},"msgtype":"m.text"},"ts":1715982410299,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CVWOzMoXtat3EwhouRJHNonbMeYJtP91yWdlk0zhDdI"},
{"content":{"body":"Just like `async(x)` is a valid call expression as long as it's not followed by a `=>`","format":"org.matrix.custom.html","formatted_body":"Just like <code>async(x)</code> is a valid call expression as long as it's not followed by a <code>=&gt;</code>","m.mentions":{},"msgtype":"m.text"},"ts":1715982481138,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$RrcWTK9wyW8PVIQ3TmwbIR64pbmX-A33uHQDCv5OaRA"},
{"content":{"body":" * Just like `async(x)` is a valid call expression as long as it's not followed by a `=>` (or any other illegal token)","format":"org.matrix.custom.html","formatted_body":" * Just like <code>async(x)</code> is a valid call expression as long as it's not followed by a <code>=&gt;</code> (or any other illegal token)","m.mentions":{},"m.new_content":{"body":"Just like `async(x)` is a valid call expression as long as it's not followed by a `=>` (or any other illegal token)","format":"org.matrix.custom.html","formatted_body":"Just like <code>async(x)</code> is a valid call expression as long as it's not followed by a <code>=&gt;</code> (or any other illegal token)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$RrcWTK9wyW8PVIQ3TmwbIR64pbmX-A33uHQDCv5OaRA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1715982492114,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$eUKtxkPccHILcQ9CwZFyPm4ac1KhpkmNTjBlpGjoeBg"},
{"content":{"body":"oh huh, i see","m.mentions":{},"msgtype":"m.text"},"ts":1715982500009,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DWVdzRvqTxowQKpIFGNe834htnZ8XVf6k_sZAsEaggo"},
{"content":{"body":"The cover is essentially eagerly parsing out the syntax. Some covers allow more tokens than what any single refinement might use, but that isn't always the case.","m.mentions":{},"msgtype":"m.text"},"ts":1715982582176,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nxtRyXz30nKB0sf7cTD0BWotf010eEk9ZXG4qnoamO4"}
]