[
{"content":{"body":"> <@rbuckton:matrix.org> If you can close/dispose a source, functions that receive the closed token can use more efficency code paths, and registrations that would have introduced closures can be skipped. A source that is left open instead of canceling/closing results in closures holding references to closed over values far longer than necessary. IIRC, AbortSignal doesn't even clean up user code registrations when aborted since user code registrations are event based\n\nyeah, I always write `signal.addEventListener('abort', f, { signal, once: true })`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$r0Cum-H75NpcerFThRCWZFsXt3Gq_GVP3ccU-jMKS-U\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>If you can close&#47;dispose a source, functions that receive the closed token can use more efficency code paths, and registrations that would have introduced closures can be skipped. A source that is left open instead of canceling&#47;closing results in closures holding references to closed over values far longer than necessary. IIRC, AbortSignal doesn&#39;t even clean up user code registrations when aborted since user code registrations are event based</blockquote></mx-reply>yeah, I always write <code>signal.addEventListener('abort', f, { signal, once: true })</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$r0Cum-H75NpcerFThRCWZFsXt3Gq_GVP3ccU-jMKS-U"}},"msgtype":"m.text"},"ts":1717784635652,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$XHKwj0lDv3kBSt-KuxysuGkn9DdXVMY-zaUf3xn2aEE"}
]