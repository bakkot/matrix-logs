[
{"content":{"body":"reviewing accessor in the decorator proposal","msgtype":"m.text","org.matrix.msc1767.text":"reviewing accessor in the decorator proposal"},"ts":1644124164650,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$6ShU4JcIglYr4jL06P0pAJ3h2ZCDC_kq0YBB6DIMVgE"},
{"content":{"body":"I have a question. In the `@logged accessor x` example, is it possible to use `this.#x`  to access the derived private field to bypass the decorated accessor and access the original value?","format":"org.matrix.custom.html","formatted_body":"I have a question. In the <code>@logged accessor x</code> example, is it possible to use <code>this.#x</code>  to access the derived private field to bypass the decorated accessor and access the original value?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have a question. In the `@logged accessor x` example, is it possible to use `this.#x`  to access the derived private field to bypass the decorated accessor and access the original value?","mimetype":"text/plain"},{"body":"I have a question. In the <code>@logged accessor x</code> example, is it possible to use <code>this.#x</code>  to access the derived private field to bypass the decorated accessor and access the original value?","mimetype":"text/html"}]},"ts":1644124215424,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$cI19_UVQ9qnrMqfisYiAQTHcfNwB-abMbkDLA1xrHqA"},
{"content":{"body":"it should not be possible to access a private field inside the class body that was declared by the decorator","msgtype":"m.text","org.matrix.msc1767.text":"it should not be possible to access a private field inside the class body that was declared by the decorator"},"ts":1644130570469,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MgxBt6LrFOuEmfUFF91LVUaXeSrUk6GX2c0INZa17Gk"},
{"content":{"body":"iow, `this.#x` should only work if the class body declares `#x`, statically","format":"org.matrix.custom.html","formatted_body":"iow, <code>this.#x</code> should only work if the class body declares <code>#x</code>, statically","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"iow, `this.#x` should only work if the class body declares `#x`, statically","mimetype":"text/plain"},{"body":"iow, <code>this.#x</code> should only work if the class body declares <code>#x</code>, statically","mimetype":"text/html"}]},"ts":1644130578721,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ubcw1FrxEGJUb5RqbvfqYgm7wrwcKJNASHFr-yfYnWQ"},
{"content":{"body":"Then what happened if I write: `#x; @logged accessor x = 1`","msgtype":"m.text"},"ts":1644131192661,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lt7HC9TxPYRJlbdtJ2QJjjUQ4zI4H_X2mVx1ZwD_45Q"},
{"content":{"body":"The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.","msgtype":"m.text"},"ts":1644140750721,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.\n\nthis is good /","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.</blockquote></mx-reply>this is good /","m.relates_to":{"m.in_reply_to":{"event_id":"$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@nicolo-ribaudo:matrix.org> The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.\n\nthis is good /","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.</blockquote></mx-reply>this is good /","mimetype":"text/html"}]},"ts":1644143538899,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CsKzvoBhSHj5zVIarPetAN-0aPgNA7uyhJBVIyaAqyg"},
{"content":{"body":"decorators on functions when ðŸ˜­","msgtype":"m.text","org.matrix.msc1767.text":"decorators on functions when ðŸ˜­"},"ts":1644166669767,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4"},
{"content":{"body":"indeed, like symbols, each #x is a different one","msgtype":"m.text"},"ts":1644170305465,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m-di4N3Btcc_5PgNIheiE5kqJiXMyjsAtMBqQ-aN0n8"},
{"content":{"body":"> <@devsnek:matrix.org> decorators on functions when ðŸ˜­\n\nThere's a proposal for function expressions/arrows already","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />decorators on functions when ðŸ˜­</blockquote></mx-reply>There's a proposal for function expressions/arrows already","m.relates_to":{"m.in_reply_to":{"event_id":"$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4"}},"msgtype":"m.text"},"ts":1644172842165,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wfvQgt-5m6pY0DEDLFIA-6IfzjdIMeXl2dbNNGAVfzE"},
{"content":{"body":"Function decls is trickier since decorating a function decl probably means that function isn't hoisted. ","msgtype":"m.text"},"ts":1644172950124,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nANa105RCWu1iS4ZLtZ0HtSTTvyVLXW3cfsXWhexPMs"},
{"content":{"body":"imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :(","msgtype":"m.text","org.matrix.msc1767.text":"imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :("},"ts":1644176053260,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$67yb7Sx0mSW50PB7LjYSSJgFT4JAu4avVEzv6TQ3GSU"},
{"content":{"body":"decorators on nested destructures  bindings could be handy","msgtype":"m.text"},"ts":1644178036274,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$lKUYgmMcQj9zt5eHGcF6TlghM41P_IhU1AwvNWdRkwo"},
{"content":{"body":"> <@devsnek:matrix.org> imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :(\n\nIt would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:\n\n```js\nfunction f() {\n  return {\n   g,\n   h,\n  }\n  function g() {}\n  function h() {}\n}\n```\n","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$67yb7Sx0mSW50PB7LjYSSJgFT4JAu4avVEzv6TQ3GSU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :(</blockquote></mx-reply><p>It would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:</p>\n<p><code>js function f() { return { g, h, } function g() {} function h() {} } </code></p>","m.relates_to":{"m.in_reply_to":{"event_id":"$67yb7Sx0mSW50PB7LjYSSJgFT4JAu4avVEzv6TQ3GSU"}},"msgtype":"m.text"},"ts":1644180196408,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$Kcf2oC9LPBLoCXz3w4vjrpEN1RP1r3dFZycmvLwowxg"},
{"content":{"body":"> <@aclaymore:matrix.org> decorators on nested destructures  bindings could be handy\n\nFor what purpose? ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lKUYgmMcQj9zt5eHGcF6TlghM41P_IhU1AwvNWdRkwo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br />decorators on nested destructures  bindings could be handy</blockquote></mx-reply>For what purpose?","m.relates_to":{"m.in_reply_to":{"event_id":"$lKUYgmMcQj9zt5eHGcF6TlghM41P_IhU1AwvNWdRkwo"}},"msgtype":"m.text"},"ts":1644180207775,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0bTe7CjWqJ52QedYJiXqtXF272PYBeDkAkJehCG2C3A"},
{"content":{"body":"> <@rbuckton:matrix.org> It would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:\n> \n> ```js\n> function f() {\n>   return {\n>    g,\n>    h,\n>   }\n>   function g() {}\n>   function h() {}\n> }\n> ```\n\nthey aren't decorated though","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Kcf2oC9LPBLoCXz3w4vjrpEN1RP1r3dFZycmvLwowxg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><p>It would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:</p>\n<p><code>js function f() { return { g, h, } function g() {} function h() {} } </code></p></blockquote></mx-reply>they aren't decorated though","m.relates_to":{"m.in_reply_to":{"event_id":"$Kcf2oC9LPBLoCXz3w4vjrpEN1RP1r3dFZycmvLwowxg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rbuckton:matrix.org> It would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:\n> \n> ```js\n> function f() {\n>   return {\n>    g,\n>    h,\n>   }\n>   function g() {}\n>   function h() {}\n> }\n> ```\n\nthey aren't decorated though","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Kcf2oC9LPBLoCXz3w4vjrpEN1RP1r3dFZycmvLwowxg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><p>It would matter to the TS code base, at least (that is, if we wanted to decorate a function). Quite a bit of the code base is structured like this:</p>\n<p><code>js function f() { return { g, h, } function g() {} function h() {} } </code></p></blockquote></mx-reply>they aren't decorated though","mimetype":"text/html"}]},"ts":1644180258554,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$RYZSFHlku5eAMy2TzYjK22QcyCjSHhyfIgfIFYdIpB4"},
{"content":{"body":"its opt in, that's the nice part","msgtype":"m.text","org.matrix.msc1767.text":"its opt in, that's the nice part"},"ts":1644180273118,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$SUtygU-tZsTPxZkHRFSSxiGhQw9xeI8d2jQzpPQK3b4"},
{"content":{"body":"anyway i don't wanna get into an argument about it, expressions sound \"good enough\" probably","msgtype":"m.text","org.matrix.msc1767.text":"anyway i don't wanna get into an argument about it, expressions sound \"good enough\" probably"},"ts":1644180294032,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$aMjwbVDWCn9582DrPpJA8GS3fXnQAFZt4RX_HA9jv90"},
{"content":{"body":"although you'd have to opt into expressions too","msgtype":"m.text","org.matrix.msc1767.text":"although you'd have to opt into expressions too"},"ts":1644180304863,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$GmzYa4kBuHy5loSOM1gU4sV9fR7k9q2k_A-FrPA_ZUY"},
{"content":{"body":"> <@devsnek:matrix.org> its opt in, that's the nice part\n\nMy point is that opting in would require breaking from an established convention. In a few small places that's fine, but if it happens more and more often then it's likely the convention would need to change. That leads to huge code moves to conform and would then complicate git history operations like blame, bisect, etc. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SUtygU-tZsTPxZkHRFSSxiGhQw9xeI8d2jQzpPQK3b4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />its opt in, that's the nice part</blockquote></mx-reply>My point is that opting in would require breaking from an established convention. In a few small places that's fine, but if it happens more and more often then it's likely the convention would need to change. That leads to huge code moves to conform and would then complicate git history operations like blame, bisect, etc.","m.relates_to":{"m.in_reply_to":{"event_id":"$SUtygU-tZsTPxZkHRFSSxiGhQw9xeI8d2jQzpPQK3b4"}},"msgtype":"m.text"},"ts":1644180597154,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$akIUNxDUJgezX3UDOS3cest8y6AdfPZmf6rouBeTzWM"},
{"content":{"body":"sure but you need the same changes to use it with expressions ðŸ¤·","msgtype":"m.text","org.matrix.msc1767.text":"sure but you need the same changes to use it with expressions ðŸ¤·"},"ts":1644180622040,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nRYoiH-jIcfzCLTXd5-FK1shvscI44D2L5_cWWBYAF8"},
{"content":{"body":"That's probably a big enough reason we *wouldn't* use function decorators if they were available","msgtype":"m.text"},"ts":1644180643624,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$uu5yjvEr7gYlA23hSoFxw4TIh0TlvnO8AgA-Of6qfOc"},
{"content":{"body":"> <@devsnek:matrix.org> sure but you need the same changes to use it with expressions ðŸ¤·\n\nOr we just don't use them. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nRYoiH-jIcfzCLTXd5-FK1shvscI44D2L5_cWWBYAF8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />sure but you need the same changes to use it with expressions ðŸ¤·</blockquote></mx-reply>Or we just don't use them.","m.relates_to":{"m.in_reply_to":{"event_id":"$nRYoiH-jIcfzCLTXd5-FK1shvscI44D2L5_cWWBYAF8"}},"msgtype":"m.text"},"ts":1644180665111,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-VytVzlYaS5cUJdjiJI0tztPYRn9leqKe-DZjCiuLFw"},
{"content":{"body":"My point is that, while breaking hoisting seems like a sensible choice on the surface, there's a lot more to the iceberg","msgtype":"m.text"},"ts":1644180739696,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$SCIjsPuz2ZXZVEMffP16o8-CDolGCbQZb3-rEwAp2P0"},
{"content":{"body":"i don't see the difference, both turn the function into a tdz","msgtype":"m.text","org.matrix.msc1767.text":"i don't see the difference, both turn the function into a tdz"},"ts":1644180808574,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$qugYYdE15yABcnwGFNgVcAUcqWIv86PGxiu9Ll-uCEM"},
{"content":{"body":"same iceberg ","msgtype":"m.text","org.matrix.msc1767.text":"same iceberg "},"ts":1644180857243,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$F-HV1gC_BvE6SxZcI8Gmu9AKWEXImHwYgnzTK6Y2PHI"},
{"content":{"body":"> <@rbuckton:matrix.org> For what purpose? \n\nI was thinking of a niche case, but will try and find a more mainstream use case for when this pattern:\n\n```\nconst { x: { _a }, _b } = y;\nconst a = f(_a);\nconst b = f(_b);\n```\n\nWould benefit from this style:\n\n```\nconst {\n  x: { @f a }, @f b\n} = y;\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%240bTe7CjWqJ52QedYJiXqtXF272PYBeDkAkJehCG2C3A\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>For what purpose?</blockquote></mx-reply><p>I was thinking of a niche case, but will try and find a more mainstream use case for when this pattern:</p>\n<pre><code>const { x: { _a }, _b } = y;\nconst a = f(_a);\nconst b = f(_b);\n</code></pre>\n<p>Would benefit from this style:</p>\n<pre><code>const {\n  x: { @f a }, @f b\n} = y;\n</code></pre>","m.relates_to":{"m.in_reply_to":{"event_id":"$0bTe7CjWqJ52QedYJiXqtXF272PYBeDkAkJehCG2C3A"}},"msgtype":"m.text"},"ts":1644183307596,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$JKFnlctDwKtQOsaZD2RWrC0GsCh9kf-YxCtI4Opnowk"}
]