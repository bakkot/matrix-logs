[
{"content":{"body":"reviewing accessor in the decorator proposal","msgtype":"m.text","org.matrix.msc1767.text":"reviewing accessor in the decorator proposal"},"ts":1644124164650,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$6ShU4JcIglYr4jL06P0pAJ3h2ZCDC_kq0YBB6DIMVgE"},
{"content":{"body":"I have a question. In the `@logged accessor x` example, is it possible to use `this.#x`  to access the derived private field to bypass the decorated accessor and access the original value?","format":"org.matrix.custom.html","formatted_body":"I have a question. In the <code>@logged accessor x</code> example, is it possible to use <code>this.#x</code>  to access the derived private field to bypass the decorated accessor and access the original value?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have a question. In the `@logged accessor x` example, is it possible to use `this.#x`  to access the derived private field to bypass the decorated accessor and access the original value?","mimetype":"text/plain"},{"body":"I have a question. In the <code>@logged accessor x</code> example, is it possible to use <code>this.#x</code>  to access the derived private field to bypass the decorated accessor and access the original value?","mimetype":"text/html"}]},"ts":1644124215424,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$cI19_UVQ9qnrMqfisYiAQTHcfNwB-abMbkDLA1xrHqA"},
{"content":{"body":"it should not be possible to access a private field inside the class body that was declared by the decorator","msgtype":"m.text","org.matrix.msc1767.text":"it should not be possible to access a private field inside the class body that was declared by the decorator"},"ts":1644130570469,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$MgxBt6LrFOuEmfUFF91LVUaXeSrUk6GX2c0INZa17Gk"},
{"content":{"body":"iow, `this.#x` should only work if the class body declares `#x`, statically","format":"org.matrix.custom.html","formatted_body":"iow, <code>this.#x</code> should only work if the class body declares <code>#x</code>, statically","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"iow, `this.#x` should only work if the class body declares `#x`, statically","mimetype":"text/plain"},{"body":"iow, <code>this.#x</code> should only work if the class body declares <code>#x</code>, statically","mimetype":"text/html"}]},"ts":1644130578721,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ubcw1FrxEGJUb5RqbvfqYgm7wrwcKJNASHFr-yfYnWQ"},
{"content":{"body":"Then what happened if I write: `#x; @logged accessor x = 1`","msgtype":"m.text"},"ts":1644131192661,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lt7HC9TxPYRJlbdtJ2QJjjUQ4zI4H_X2mVx1ZwD_45Q"},
{"content":{"body":"The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.","msgtype":"m.text"},"ts":1644140750721,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.\n\nthis is good /","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.</blockquote></mx-reply>this is good /","m.relates_to":{"m.in_reply_to":{"event_id":"$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@nicolo-ribaudo:matrix.org> The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.\n\nthis is good /","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_xL3YqfIZGN1UIKCEQR8xqhbMSCaVeBgQANAeTzr5ec?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>The accessor uses a different private name; `#x` is a name chosen just to show that they are related in the example.</blockquote></mx-reply>this is good /","mimetype":"text/html"}]},"ts":1644143538899,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CsKzvoBhSHj5zVIarPetAN-0aPgNA7uyhJBVIyaAqyg"},
{"content":{"body":"decorators on functions when ðŸ˜­","msgtype":"m.text","org.matrix.msc1767.text":"decorators on functions when ðŸ˜­"},"ts":1644166669767,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4"},
{"content":{"body":"indeed, like symbols, each #x is a different one","msgtype":"m.text"},"ts":1644170305465,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m-di4N3Btcc_5PgNIheiE5kqJiXMyjsAtMBqQ-aN0n8"},
{"content":{"body":"> <@devsnek:matrix.org> decorators on functions when ðŸ˜­\n\nThere's a proposal for function expressions/arrows already","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />decorators on functions when ðŸ˜­</blockquote></mx-reply>There's a proposal for function expressions/arrows already","m.relates_to":{"m.in_reply_to":{"event_id":"$mN6_MRRvjv4ZZE84FDuVUDMDwDIPWG8kI9etxlg1VR4"}},"msgtype":"m.text"},"ts":1644172842165,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$wfvQgt-5m6pY0DEDLFIA-6IfzjdIMeXl2dbNNGAVfzE"},
{"content":{"body":"Function decls is trickier since decorating a function decl probably means that function isn't hoisted. ","msgtype":"m.text"},"ts":1644172950124,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$nANa105RCWu1iS4ZLtZ0HtSTTvyVLXW3cfsXWhexPMs"},
{"content":{"body":"imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :(","msgtype":"m.text","org.matrix.msc1767.text":"imo that doesn't matter in practice but if we get function expressions that's good enough i suppose :("},"ts":1644176053260,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$67yb7Sx0mSW50PB7LjYSSJgFT4JAu4avVEzv6TQ3GSU"}
]