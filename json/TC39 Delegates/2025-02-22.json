[
{"content":{"body":"rbuckton: riddle me this","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: riddle me this","m.mentions":{"user_ids":["@rbuckton:matrix.org"]},"msgtype":"m.text"},"ts":1740183446631,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jsUVT02bT8-FjgIzQxFWQ8GKQjhMPw_TL2ItmDPY9OI"},
{"content":{"body":"i see in your explicit resource management test262 PR you have a test that `for (using of of [1,2,3]) {}` isn't supposed the parse","format":"org.matrix.custom.html","formatted_body":"i see in your explicit resource management test262 PR you have a test that <code>for (using of of [1,2,3]) {}</code> isn't supposed the parse","m.mentions":{},"msgtype":"m.text"},"ts":1740183468995,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Zv8v-tPMqyrN06MMXwGyrLOPb8-o-S4W-zyr4qfUlu4"},
{"content":{"body":"the grammar as i read it says that for the production\n\nfor ( [lookahead ≠ using of] ForDeclaration[?Yield, ?Await, +Using] of AssignmentExpression[+In, ?Yield, ?Await] ) Statement[?Yield, ?Await, ?Return]\n\n","m.mentions":{},"msgtype":"m.text"},"ts":1740183499662,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2Uv2Z22lUumVNLnDegl2kT1UUpP4JagKL7Kd_ZbHdUQ"},
{"content":{"body":"because of the negative lookahead, `for (using of of [1,2,3]) {}` is always parsed as\n\nfor ( [lookahead ∉ { let, async of }] LeftHandSideExpression[?Yield, ?Await] of AssignmentExpression[+In, ?Yield, ?Await] ) Statement[?Yield, ?Await, ?Return]\n","format":"org.matrix.custom.html","formatted_body":"<p>because of the negative lookahead, <code>for (using of of [1,2,3]) {}</code> is always parsed as</p>\n<p>for ( [lookahead ∉ { let, async of }] LeftHandSideExpression[?Yield, ?Await] of AssignmentExpression[+In, ?Yield, ?Await] ) Statement[?Yield, ?Await, ?Return]</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1740183537206,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KVfHjvCmZ5MEwHJ9IakvDrOEpDL1j3XT1g6RJftUHBo"},
{"content":{"body":"but `for (using of of [1,2,3]) {}` _does_ parse as that: `using` is an identifier, the first `of` is the of in the for-of, and `of[1,2,3]` is an assignment expression of a computed property access on the identifier `of`","format":"org.matrix.custom.html","formatted_body":"but <code>for (using of of [1,2,3]) {}</code> <em>does</em> parse as that: <code>using</code> is an identifier, the first <code>of</code> is the of in the for-of, and <code>of[1,2,3]</code> is an assignment expression of a computed property access on the identifier <code>of</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740183576018,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$k-gvKuQXpXA8vHmjM9jOUMB8n-Vfkgge-uVMH7QEPy8"},
{"content":{"body":"what am i missing","m.mentions":{},"msgtype":"m.text"},"ts":1740183581415,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5jk3TOiqJm27I40yoyu7ty9i9WtnojwvgWohc0tTq_k"},
{"content":{"body":"or is this language getting more cursed every day","m.mentions":{},"msgtype":"m.text"},"ts":1740183586584,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lloe9tsrrr6T14FkqbN7o5ERIDLqGs_1xNObZ_m5iPs"},
{"content":{"body":"Wow that is cursed","m.mentions":{},"msgtype":"m.text"},"ts":1740184178938,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$rMr-PSiESNL7LXXw2gEpeSkvjQkgkmwDvROLZl0ZVGM"},
{"content":{"body":"The way we implemented it in Babel matches your reading","msgtype":"m.text"},"ts":1740184222048,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$M2V5CnL4ZEumcC0tJoTxGLfA88_oDEjs0YXM0Kl0OgM"},
{"content":{"body":"Why are the whitespace rules so incredibly lax/cursed, omg","m.mentions":{},"msgtype":"m.text"},"ts":1740185609031,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$guwaCMPy5rjVkgI_PnMEJ2bz6aY_xRATWm4QIs1bKnQ"},
{"content":{"body":"this is a feature ","msgtype":"m.text"},"ts":1740194264225,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$pc23HqMkeF-MXPRIvh3btN7BjHyXavACtJLB43XWsXA"},
{"content":{"body":"that might be one of the best parses I've ever seen","m.mentions":{},"msgtype":"m.text"},"ts":1740194450967,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KvFPqDGYVMG1nMXZbhBiXCBo_GtKRgB8jiLHhKlFrWI"},
{"content":{"body":"we found a new wat","m.mentions":{},"msgtype":"m.text"},"ts":1740194566213,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$z1hVxUQrzNVzQ26sM5KYYdrLYePcAt9d9Wmw3r4JHCg"},
{"content":{"body":"> <@shuyuguo:matrix.org> but `for (using of of [1,2,3]) {}` _does_ parse as that: `using` is an identifier, the first `of` is the of in the for-of, and `of[1,2,3]` is an assignment expression of a computed property access on the identifier `of`\n\nI'm not near a computer to check. If it's legal than the test is wrong. The important bit is that the parse isn't ambiguous. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k-gvKuQXpXA8vHmjM9jOUMB8n-Vfkgge-uVMH7QEPy8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />but <code>for (using of of [1,2,3]) {}</code> <em>does</em> parse as that: <code>using</code> is an identifier, the first <code>of</code> is the of in the for-of, and <code>of[1,2,3]</code> is an assignment expression of a computed property access on the identifier <code>of</code></blockquote></mx-reply>I'm not near a computer to check. If it's legal than the test is wrong. The important bit is that the parse isn't ambiguous.","m.relates_to":{"m.in_reply_to":{"event_id":"$k-gvKuQXpXA8vHmjM9jOUMB8n-Vfkgge-uVMH7QEPy8"}},"msgtype":"m.text"},"ts":1740196312535,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$iZs_POVA74kWJX-m2c7DluvMMTzZNeqe4bI_ys4c2z4"},
{"content":{"body":"* I'm not near a computer to check. If it's legal then the test is wrong. The important bit is that the parse isn't ambiguous.","m.new_content":{"body":"> <@shuyuguo:matrix.org> but `for (using of of [1,2,3]) {}` _does_ parse as that: `using` is an identifier, the first `of` is the of in the for-of, and `of[1,2,3]` is an assignment expression of a computed property access on the identifier `of`\n\nI'm not near a computer to check. If it's legal then the test is wrong. The important bit is that the parse isn't ambiguous.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k-gvKuQXpXA8vHmjM9jOUMB8n-Vfkgge-uVMH7QEPy8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a><br />but <code>for (using of of [1,2,3]) {}</code> <em>does</em> parse as that: <code>using</code> is an identifier, the first <code>of</code> is the of in the for-of, and <code>of[1,2,3]</code> is an assignment expression of a computed property access on the identifier <code>of</code></blockquote></mx-reply>I'm not near a computer to check. If it's legal then the test is wrong. The important bit is that the parse isn't ambiguous.","msgtype":"m.text"},"m.relates_to":{"event_id":"$iZs_POVA74kWJX-m2c7DluvMMTzZNeqe4bI_ys4c2z4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740196345283,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$VtX1oVTPGQX-CA4UcNb25_0NK_6CNe0DFv776bsHaiE"},
{"content":{"body":"I'll have to check later. If you could file a bug on the repo, I'd be greatful. ","format":"org.matrix.custom.html","formatted_body":"I'll have to check later. If you could file a bug on the repo, I'd be greatful.","msgtype":"m.text"},"ts":1740196389968,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$lvP-Q2EqLrTvNKzYb4YKefJwvbZxGfRCNJlG3O1JBSc"}
]