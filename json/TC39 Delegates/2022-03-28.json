[
{"content":{"body":"My sincere apologies for the late notice, but I’ve opened an agenda pull request for a 1.5-hour constraint tomorrow.","msgtype":"m.text"},"ts":1648438217137,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$bvEmbjiS5g0J3LaXhy8MQyaS14RPjDVYZJi9TmjOY7k"},
{"content":{"body":"ES2022 candidate: https://github.com/tc39/Reflector/issues/424","msgtype":"m.text","org.matrix.msc1767.text":"ES2022 candidate: https://github.com/tc39/Reflector/issues/424"},"ts":1648442871324,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$spAzQXAk3oeaovJn7DYSWXTRgJ3tKZBvQpX0_j-FIQI"},
{"content":{"body":"Are we having the meeting tomorrow morning? I can't find the logistics anywhere: a schedule or a video link.","msgtype":"m.text","org.matrix.msc1767.text":"Are we having the meeting tomorrow morning? I can't find the logistics anywhere: a schedule or a video link."},"ts":1648443186546,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$kr0DmdQ5bm3AYS3c3NJRmQo1DIrjn3UFCTxhfOI6i7U"},
{"content":{"body":"usually the sign-in form is added an hour or so before the meeting, and that form's thank you page has the jitsi details","msgtype":"m.text","org.matrix.msc1767.text":"usually the sign-in form is added an hour or so before the meeting, and that form's thank you page has the jitsi details"},"ts":1648444187560,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DzMHi_JU04TvuwBLbOZJTBEUCsrymB5knWX0LUchaDw"},
{"content":{"body":"(the draft schedule indeed doesn't seem to be up yet)","msgtype":"m.text","org.matrix.msc1767.text":"(the draft schedule indeed doesn't seem to be up yet)"},"ts":1648444196057,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jkmCI5JQP1nnjQ-AxpZNeVK14oHkIWUQN_5tOJMm5dw"},
{"content":{"body":"We'll be updating the Reflector post details shortly. ","msgtype":"m.text"},"ts":1648447578745,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5vInqAw9rMdpDSTe9qrS4TN5Up-c7wd661SgauqJYrI"},
{"content":{"body":"Draft schedule is nearly ready.  I will say this meeting we receive a large volume of constraints, which makes catering to all folks tricky.","msgtype":"m.text","org.matrix.msc1767.text":"Draft schedule is nearly ready.  I will say this meeting we receive a large volume of constraints, which makes catering to all folks tricky."},"ts":1648456583275,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pPf5WDFmJf5TroEL91ftWiaPMsJnVa6VmxQlnDGMQn0"},
{"content":{"body":"Ujjwal has now prepared the draft schedule.  Please see [the Reflector Post](https://github.com/tc39/Reflector/issues/420)","format":"org.matrix.custom.html","formatted_body":"Ujjwal has now prepared the draft schedule.  Please see <a href=\"https://github.com/tc39/Reflector/issues/420\">the Reflector Post</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Ujjwal has now prepared the draft schedule.  Please see [the Reflector Post](https://github.com/tc39/Reflector/issues/420)","mimetype":"text/plain"},{"body":"Ujjwal has now prepared the draft schedule.  Please see <a href=\"https://github.com/tc39/Reflector/issues/420\">the Reflector Post</a>","mimetype":"text/html"}]},"ts":1648459236810,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$x9URutTc_gBKSgavkgVYvZC70SCKo4MzeqnbL5SiMoc"},
{"content":{"body":"Hope everyone is feeling full of energy.  Plenary begins in 45mins!","msgtype":"m.text","org.matrix.msc1767.text":"Hope everyone is feeling full of energy.  Plenary begins in 45mins!"},"ts":1648473354853,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$-rK8D79-Yra7Hn6YDDYQfptYTnpNhUQ5ci0w_zfCP80"},
{"content":{"body":"I have opened the video call.  Whoever makes it through first, please say here so we know the passcode is working.","msgtype":"m.text","org.matrix.msc1767.text":"I have opened the video call.  Whoever makes it through first, please say here so we know the passcode is working."},"ts":1648474609454,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$Erq68Jrg4adQWm-d7AvCsmXuhM3veo5AFcIg1aOTK_0"},
{"content":{"body":"Ok, we are confirmed good on the passcode.","msgtype":"m.text","org.matrix.msc1767.text":"Ok, we are confirmed good on the passcode."},"ts":1648474732640,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$M6TflAZkM20WFLm4qAWhVm6YkTLWV3-lSMl16AYNSoc"},
{"content":{"body":"Good morning. I'm not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!\n","msgtype":"m.text","org.matrix.msc1767.text":"Good morning. I'm not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!\n"},"ts":1648475705608,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$aNtGEQfeW_tAyhwSe0pgwEANmEaGY7G6xOCp7r3TZtE"},
{"content":{"body":"*** Plenary starts in 2 mins! *** 🎉","msgtype":"m.text","org.matrix.msc1767.text":"*** Plenary starts in 2 mins! *** 🎉"},"ts":1648475890125,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$s3l7OXDf6IkEh0YjJ52EjT9kolxf6kok6BH-tfYDMjM"},
{"content":{"body":"Rob Palmer: bterlson there's a few welcome emails waiting to be sent, eg https://github.com/tc39/Admin-and-Business/issues/209","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a> there's a few welcome emails waiting to be sent, eg https://github.com/tc39/Admin-and-Business/issues/209","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Rob Palmer: bterlson there's a few welcome emails waiting to be sent, eg https://github.com/tc39/Admin-and-Business/issues/209","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: <a href=\"https://matrix.to/#/@bterlson:matrix.org\">bterlson</a> there's a few welcome emails waiting to be sent, eg https://github.com/tc39/Admin-and-Business/issues/209","mimetype":"text/html"}]},"ts":1648477217819,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BUlfVGZKwcD55r-PhdCxqWJmBU6iFc7w3hAGt5YXHug"},
{"content":{"body":"is IS talking about the JSON standard","msgtype":"m.text","org.matrix.msc1767.text":"is IS talking about the JSON standard"},"ts":1648477535797,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UhRw2OHMf8w0KKUsEoaD1fF2l2F0R7UQW16XILGXpds"},
{"content":{"body":"I don't believe so","msgtype":"m.text","org.matrix.msc1767.text":"I don't believe so"},"ts":1648477585784,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$RTEOTtVGraP8tp4S2SOPsmVcGi0gBwNi9C1ZsdQ7OsY"},
{"content":{"body":"i'm confused, isn't everything TC39 does an ecma thing?","msgtype":"m.text","org.matrix.msc1767.text":"i'm confused, isn't everything TC39 does an ecma thing?"},"ts":1648477806520,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ySmCKZajWBMIEMlUiJpcE2i_uOG-cokdjoCWTu2PcSU"},
{"content":{"body":"yulia: since we're over timebox i'll ask my question in here: my understanding was that whether to adopt the alternative copyright was a per-TC decision, not a per-spec decision","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: since we're over timebox i'll ask my question in here: my understanding was that whether to adopt the alternative copyright was a per-TC decision, not a per-spec decision","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: since we're over timebox i'll ask my question in here: my understanding was that whether to adopt the alternative copyright was a per-TC decision, not a per-spec decision","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: since we're over timebox i'll ask my question in here: my understanding was that whether to adopt the alternative copyright was a per-TC decision, not a per-spec decision","mimetype":"text/html"}]},"ts":1648477852112,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t-_VTGSIVAoEsOhrrqANkmifTeFBusCPDm0vfS9EtiI"},
{"content":{"body":"is it in fact per-spec, and that's why we need to back to the IPR committee?","msgtype":"m.text","org.matrix.msc1767.text":"is it in fact per-spec, and that's why we need to back to the IPR committee?"},"ts":1648477864142,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0tIO9R7PkiDteEa38Q4M_6VFqp3Pik1nCH0Ib-ewh6c"},
{"content":{"body":"it is a per tc request for a spec","msgtype":"m.text","org.matrix.msc1767.text":"it is a per tc request for a spec"},"ts":1648477870598,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Y4TrTRSWgXk5wszHlvpV51zV3pmN9eRaNG8qIvzPCWY"},
{"content":{"body":"right, so we shouldn't need to go back to them for 262 or 404","msgtype":"m.text","org.matrix.msc1767.text":"right, so we shouldn't need to go back to them for 262 or 404"},"ts":1648477885406,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LQeoqz-b3vYK1IpDrCG8bJY3J_D4otUysKtU9eZEnxQ"},
{"content":{"body":"err, 402","msgtype":"m.text","org.matrix.msc1767.text":"err, 402"},"ts":1648477888854,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wow5B3UXzeOORV6uDcWU1RbHbv1kx12LkzR7CHXqNa0"},
{"content":{"body":"yeah, what waldemar's saying","msgtype":"m.text","org.matrix.msc1767.text":"yeah, what waldemar's saying"},"ts":1648477894667,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2Xkl4BfrAhprEd735K97zrYmD7YyyV61FNK7sf4HPiY"},
{"content":{"body":"hm, ok something to clarify","msgtype":"m.text","org.matrix.msc1767.text":"hm, ok something to clarify"},"ts":1648477962656,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$VjnPUJ6Xh4Eh3NQxuGbjoheZzGjgec79xNc5xaZv1kQ"},
{"content":{"body":"this is what happens when you go to meetings sick","msgtype":"m.text","org.matrix.msc1767.text":"this is what happens when you go to meetings sick"},"ts":1648478032036,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$pidEU5zyu0ngbBYlBf3wN5EE8P6sayGlnT_9QWrDfa8"},
{"content":{"body":"ill check the documents","msgtype":"m.text","org.matrix.msc1767.text":"ill check the documents"},"ts":1648478035408,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$mw8ENOXXGJQ0ka0UJ25sqqqzjVGE15rAiiHJ3KRlZvI"},
{"content":{"body":"yulia: I'll check the special GA docs as well.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: I'll check the special GA docs as well.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: I'll check the special GA docs as well.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: I'll check the special GA docs as well.","mimetype":"text/html"}]},"ts":1648478150628,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$0oI5ffQIQsHJUCydoke3aG5oQ7obzfe6aqN4wuBZ1-w"},
{"content":{"body":"thanks","msgtype":"m.text","org.matrix.msc1767.text":"thanks"},"ts":1648478181014,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Imv2E5ffa6RH2HsYHZZ1g79b4fjlGQj3tw1GsrN-crA"},
{"content":{"body":"GA-2022-016 states\nAfter discussing TC39's motivation for using the alternative copyright notice there is this statement:\n_The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards._\n\n","format":"org.matrix.custom.html","formatted_body":"GA-2022-016 states<br>After discussing TC39's motivation for using the alternative copyright notice there is this statement:<br><em>The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards.</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"GA-2022-016 states\nAfter discussing TC39's motivation for using the alternative copyright notice there is this statement:\n_The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards._\n\n","mimetype":"text/plain"},{"body":"GA-2022-016 states<br>After discussing TC39's motivation for using the alternative copyright notice there is this statement:<br><em>The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards.</em>","mimetype":"text/html"}]},"ts":1648478519881,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$Iw7ylhOkV3F8N5vqLT37BXOT0e8wgyWvFVV-O2MRVr8"},
{"content":{"body":"huh, so it _is_ per standard? that process could be streamlined certainly","format":"org.matrix.custom.html","formatted_body":"huh, so it <em>is</em> per standard? that process could be streamlined certainly","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"huh, so it _is_ per standard? that process could be streamlined certainly","mimetype":"text/plain"},{"body":"huh, so it <em>is</em> per standard? that process could be streamlined certainly","mimetype":"text/html"}]},"ts":1648478622523,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mLomJvfDbMiiJ_DutK9-g6CUoArV5SlQOMzg1uEd4zU"},
{"content":{"body":"I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","format":"org.matrix.custom.html","formatted_body":"<p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","mimetype":"text/plain"},{"body":"<p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","mimetype":"text/html"}]},"ts":1648478756648,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$rowfaTXO5w6uRi_NtVhXgaeEVSn82jBdsjo07_Bzi9c"},
{"content":{"body":" * I should point out that ECMAScript is the specific standard talked about before the \"any other Ecma Standards\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","m.new_content":{"body":"I should point out that ECMAScript is the specific standard talked about before the \"any other Ecma Standards\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","msgtype":"m.text","org.matrix.msc1767.text":"I should point out that ECMAScript is the specific standard talked about before the \"any other Ecma Standards\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation."},"m.relates_to":{"event_id":"$rowfaTXO5w6uRi_NtVhXgaeEVSn82jBdsjo07_Bzi9c","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I should point out that ECMAScript is the specific standard talked about before the \"any other Ecma Standards\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation."},"ts":1648478833861,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$BoK5p6d25BJ1k4do77XROJUrE2mBtTzFRqX-uYe3_8M"},
{"content":{"body":" * I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","format":"org.matrix.custom.html","formatted_body":" * <p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","m.new_content":{"body":"I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","format":"org.matrix.custom.html","formatted_body":"<p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","mimetype":"text/plain"},{"body":"<p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$rowfaTXO5w6uRi_NtVhXgaeEVSn82jBdsjo07_Bzi9c","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I should point out that ECMAScript is the specific standard talked about before the \"_any other Ecma Standards_\" comment.\n\nTherefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.","mimetype":"text/plain"},{"body":" * <p>I should point out that ECMAScript is the specific standard talked about before the &quot;<em>any other Ecma Standards</em>&quot; comment.</p>\n<p>Therefore one reading of that statement is the 262 can adopt the ACN, but other standards like 402 would require consultation.</p>\n","mimetype":"text/html"}]},"ts":1648478871350,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$TimjipXboFF4X_6f4skSZiWnfX3EFY4Srl06VIkATK4"},
{"content":{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","format":"org.matrix.custom.html","formatted_body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/plain"},{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$Iw7ylhOkV3F8N5vqLT37BXOT0e8wgyWvFVV-O2MRVr8"}}},"ts":1648478895994,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$luMcjBKCRfUuC2C8xaU6PuyyJpK0x0GUGK03FFyqxVc"},
{"content":{"body":" * I just found this as well -- yes this is what I was thinking of","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Iw7ylhOkV3F8N5vqLT37BXOT0e8wgyWvFVV-O2MRVr8?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br>GA-2022-016 states<br>After discussing TC39's motivation for using the alternative copyright notice there is this statement:<br><em>The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards.</em></blockquote></mx-reply> * I just found this as well -- yes this is what I was thinking of","m.new_content":{"body":"I just found this as well -- yes this is what I was thinking of","format":"org.matrix.custom.html","formatted_body":"I just found this as well -- yes this is what I was thinking of","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I just found this as well -- yes this is what I was thinking of","mimetype":"text/plain"},{"body":"I just found this as well -- yes this is what I was thinking of","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$luMcjBKCRfUuC2C8xaU6PuyyJpK0x0GUGK03FFyqxVc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I just found this as well -- yes this is what I was thinking of","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Iw7ylhOkV3F8N5vqLT37BXOT0e8wgyWvFVV-O2MRVr8?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@msaboff:matrix.org\">@msaboff:matrix.org</a><br>GA-2022-016 states<br>After discussing TC39's motivation for using the alternative copyright notice there is this statement:<br><em>The IPR Ad hoc Group suggests the GA consult with Ecma Counsel and the IPR Ad Hoc Group when considering applying an Alternative Copyright Notice to any other Ecma Standards.</em></blockquote></mx-reply> * I just found this as well -- yes this is what I was thinking of","mimetype":"text/html"}]},"ts":1648478916088,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ChhKrEbKWwSq8EjUR9399HOi5loJGv7NWwjUDhTW-IU"},
{"content":{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","format":"org.matrix.custom.html","formatted_body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","m.new_content":{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","format":"org.matrix.custom.html","formatted_body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","mimetype":"text/plain"},{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$luMcjBKCRfUuC2C8xaU6PuyyJpK0x0GUGK03FFyqxVc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","mimetype":"text/plain"},{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)_","mimetype":"text/html"}]},"ts":1648478923148,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$naHbXFkhWVBHII2Xlg_PODoVQ6JLvv6XgXT-we-S0XA"},
{"content":{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","format":"org.matrix.custom.html","formatted_body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","m.new_content":{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","format":"org.matrix.custom.html","formatted_body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/plain"},{"body":"I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$luMcjBKCRfUuC2C8xaU6PuyyJpK0x0GUGK03FFyqxVc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/plain"},{"body":" * I just found this as well -- yes this is what I was thinking of (sorry, still super foggy)","mimetype":"text/html"}]},"ts":1648478925609,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Qg10hXxI3-x_l-2V5AWGLHIXxABtOus5_c7lSdVnnCk"},
{"content":{"body":"waldemar: ^ it is in GA-2022-016","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: ^ it is in GA-2022-016","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: ^ it is in GA-2022-016","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: ^ it is in GA-2022-016","mimetype":"text/html"}]},"ts":1648478964046,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KIV5fqcrH1ZMjlvqHYsuWLC_La97ZpZGWaU479hQ6Qw"},
{"content":{"body":"The problem has gone unaddressed for 5 years?","msgtype":"m.text","org.matrix.msc1767.text":"The problem has gone unaddressed for 5 years?"},"ts":1648478987452,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$b_LWnVNvTR23vkFWBGusyU8wNZhLqHW-vO3v8VOuTto"},
{"content":{"body":"That feels... unacceptable.","msgtype":"m.text","org.matrix.msc1767.text":"That feels... unacceptable."},"ts":1648479005025,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$mWtH3RSGJaZZhXQMTp20RK_sKlWa8yRWFlHXAu8dOHI"},
{"content":{"body":"sorry, which problem? ","msgtype":"m.text","org.matrix.msc1767.text":"sorry, which problem? "},"ts":1648479021116,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$hfKqUpePg8VNZtYNS4HKSbKfMaSAHAXBf33lJGsGj2g"},
{"content":{"body":"not being able to get information from the IT people","msgtype":"m.text","org.matrix.msc1767.text":"not being able to get information from the IT people"},"ts":1648479033532,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$GBTwc81UIGU2fgKfo-qcfyfIMprFQB_0MKsySM6-CkU"},
{"content":{"body":"ah, yeah this is something we should solve. I am talking to someone about it ","msgtype":"m.text","org.matrix.msc1767.text":"ah, yeah this is something we should solve. I am talking to someone about it "},"ts":1648479059019,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$y6ovbPxccR28FF-bVHUdbaSm19SDYFVhxSdcyX9iTkI"},
{"content":{"body":"worth noting the LF IT folks are highly responsive and have an SLA measured in days instead of years :-p","msgtype":"m.text","org.matrix.msc1767.text":"worth noting the LF IT folks are highly responsive and have an SLA measured in days instead of years :-p"},"ts":1648479108006,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$U_WTKXjpBawfF0RwzUQ22oQz2AP3iodnAueuRQVWX5c"},
{"content":{"body":"shu: Visible with sun glasses on!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: Visible with sun glasses on!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: Visible with sun glasses on!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: Visible with sun glasses on!","mimetype":"text/html"}]},"ts":1648479124413,"senderName":"msaboff","senderId":"@msaboff:matrix.org","id":"$lDX2I71AEm0QdYKRj3npV0BBmYLWGM_0NdIjwdR8Wxo"},
{"content":{"body":"Does ecmarkup now enforce AOs always having structured headers?","msgtype":"m.text","org.matrix.msc1767.text":"Does ecmarkup now enforce AOs always having structured headers?"},"ts":1648479531376,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$d9VEiIJ9ZL_zDR2Cyyd76tq6PJARgootPQAsvREM_qI"},
{"content":{"body":"jschoi: yes, though it does not mandate that you describe parameter types or return types","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: yes, though it does not mandate that you describe parameter types or return types","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jschoi: yes, though it does not mandate that you describe parameter types or return types","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: yes, though it does not mandate that you describe parameter types or return types","mimetype":"text/html"}]},"ts":1648479611271,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$TJTMl06bdrlyY1ZT3o2_avnObLu4mW_NkUTSIHsbbmk"},
{"content":{"body":"please do so as much as possible (or at least explicitly mark unknown) so ecmarkup catches these kinds of errors","msgtype":"m.text","org.matrix.msc1767.text":"please do so as much as possible (or at least explicitly mark unknown) so ecmarkup catches these kinds of errors"},"ts":1648479636189,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mIEuApUCX7FO5H8ttPf_nSJomZM3Y7YWo0mwWQ7qHmQ"},
{"content":{"body":"> Does ecmarkup now enforce AOs always having structured headers?\n\nno it does not","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Does ecmarkup now enforce AOs always having structured headers?</p>\n</blockquote>\n<p>no it does not</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> Does ecmarkup now enforce AOs always having structured headers?\n\nno it does not","mimetype":"text/plain"},{"body":"<blockquote>\n<p>Does ecmarkup now enforce AOs always having structured headers?</p>\n</blockquote>\n<p>no it does not</p>\n","mimetype":"text/html"}]},"ts":1648479718346,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MRcYGf7KH7tRxrME-YdulYO6caLB_xwmz9W2wun4aXk"},
{"content":{"body":"because \"not having a structured header\" is just \"writing prose which happens to look like an AO\"","msgtype":"m.text","org.matrix.msc1767.text":"because \"not having a structured header\" is just \"writing prose which happens to look like an AO\""},"ts":1648479750726,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xELn_NtYv2xV17-8Hy_X57g5Lz0EUSJbmIhREh330S4"},
{"content":{"body":"> <@rwaldron:matrix.org> Good morning. I'm not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!\n\nWho will give the test262 update?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aNtGEQfeW_tAyhwSe0pgwEANmEaGY7G6xOCp7r3TZtE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Good morning. I&#39;m not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!<br/></blockquote></mx-reply>Who will give the test262 update?","m.relates_to":{"m.in_reply_to":{"event_id":"$aNtGEQfeW_tAyhwSe0pgwEANmEaGY7G6xOCp7r3TZtE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rwaldron:matrix.org> Good morning. I'm not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!\n\nWho will give the test262 update?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$aNtGEQfeW_tAyhwSe0pgwEANmEaGY7G6xOCp7r3TZtE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Good morning. I&#39;m not going to be available until around noon, so if someone else from the Test262 Maintainer Group would like to give the update, that would be great!<br/></blockquote></mx-reply>Who will give the test262 update?","mimetype":"text/html"}]},"ts":1648479820861,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$F-ylUvCQwQiq6cIXtag9eIlKW6hrUNU6CWBHIQnjahs"},
{"content":{"body":"sarahghp maybe? if rick isn't available","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a> maybe? if rick isn't available","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sarahghp maybe? if rick isn't available","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a> maybe? if rick isn't available","mimetype":"text/html"}]},"ts":1648479850352,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gi6ropY6NukvZqWkSLChSYIqGaWj7EAq8mVxm0or_y8"},
{"content":{"body":"yes I will do it","msgtype":"m.text","org.matrix.msc1767.text":"yes I will do it"},"ts":1648479862550,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$-JoVKbd_WVh6zlxgsty-PTPDJP47i_K4OsXC2hwifDA"},
{"content":{"body":"ljharb: can you put the names in the notes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you put the names in the notes","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: can you put the names in the notes","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you put the names in the notes","mimetype":"text/html"}]},"ts":1648480032443,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nZfIPR8reOpE81xZfd0jRfEzyiIQr4NAmS37bfrwB8g"},
{"content":{"body":"I couldn't catch all of them","msgtype":"m.text","org.matrix.msc1767.text":"I couldn't catch all of them"},"ts":1648480037472,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RKhqp7AeZmL2v1CXt-9xxYsaGouE2LLstWLr9OrPsr0"},
{"content":{"body":"re CoC: https://github.com/tc39/Reflector/issues/382#issuecomment-1029240838","msgtype":"m.text","org.matrix.msc1767.text":"re CoC: https://github.com/tc39/Reflector/issues/382#issuecomment-1029240838"},"ts":1648480037582,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KL0TEMcMtx0wT_IKrKRuVskUNUvLFY2akh6DPA_FlqU"},
{"content":{"body":"> <@bakkot:matrix.org> ljharb: can you put the names in the notes\n\nyep! doing now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nZfIPR8reOpE81xZfd0jRfEzyiIQr4NAmS37bfrwB8g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you put the names in the notes</blockquote></mx-reply>yep! doing now","m.relates_to":{"m.in_reply_to":{"event_id":"$nZfIPR8reOpE81xZfd0jRfEzyiIQr4NAmS37bfrwB8g"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> ljharb: can you put the names in the notes\n\nyep! doing now","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nZfIPR8reOpE81xZfd0jRfEzyiIQr4NAmS37bfrwB8g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: can you put the names in the notes</blockquote></mx-reply>yep! doing now","mimetype":"text/html"}]},"ts":1648480042699,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$H5cUJsOfqbhLxvDfulA3vXY5tBV9oEN4JvJpD-qoUn0"},
{"content":{"body":"maybe we should have somebody explicitly endorse the CoC committee candidates?","msgtype":"m.text","org.matrix.msc1767.text":"maybe we should have somebody explicitly endorse the CoC committee candidates?"},"ts":1648480056482,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WfOCBev6TXZ1zPy52KG3DATfEhH8iPuQl22TLgbYnB4"},
{"content":{"body":"Michael Ficarra: oh sorry, i should have mentioned that; by presenting them to plenary the CoC committee has implicitly endorsed them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: oh sorry, i should have mentioned that; by presenting them to plenary the CoC committee has implicitly endorsed them","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Michael Ficarra: oh sorry, i should have mentioned that; by presenting them to plenary the CoC committee has implicitly endorsed them","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: oh sorry, i should have mentioned that; by presenting them to plenary the CoC committee has implicitly endorsed them","mimetype":"text/html"}]},"ts":1648480164973,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qoiPQB-RNnKfd1m3r_l-3zcljd5OMfvzMk-ds7rknqo"},
{"content":{"body":"this is surprising","msgtype":"m.text","org.matrix.msc1767.text":"this is surprising"},"ts":1648480842846,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QOr05X3WWuNm4URQYSUL6JSsoGuxB0wvRkMb9K3EOZU"},
{"content":{"body":"I though it should work, so what I just said is wrong","msgtype":"m.text","org.matrix.msc1767.text":"I though it should work, so what I just said is wrong"},"ts":1648480860866,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$OUPDKwIfS16-bIjmdJP3S1IhrSoYOLiOhJk7sloFjxM"},
{"content":{"body":"bakkot: is that really what we say about the current Realm for %name%s?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: is that really what we say about the current Realm for %name%s?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: is that really what we say about the current Realm for %name%s?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: is that really what we say about the current Realm for %name%s?","mimetype":"text/html"}]},"ts":1648480941405,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Ko86fWoUIqtfW7ZimrCd_lEkkRX_nF7Q555MYKE9d9I"},
{"content":{"body":"bakkot: https://tc39.es/ecma262/#sec-well-known-intrinsic-objects isn't super clear","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: https://tc39.es/ecma262/#sec-well-known-intrinsic-objects isn't super clear","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: https://tc39.es/ecma262/#sec-well-known-intrinsic-objects isn't super clear","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: https://tc39.es/ecma262/#sec-well-known-intrinsic-objects isn't super clear","mimetype":"text/html"}]},"ts":1648480947249,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sLqjXMe5sqzr4-6BL_mGhCySBofzem9gt4Z8QsWAQxo"},
{"content":{"body":"i think the operative sentence is \"before any code is evaluated\"","msgtype":"m.text","org.matrix.msc1767.text":"i think the operative sentence is \"before any code is evaluated\""},"ts":1648480982376,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dWI8S_pckmQAOFtDSepjdIp2gg4ex4Nsr7Wlu0Bgk6U"},
{"content":{"body":"test262 relies on `@@species` in the runner?","format":"org.matrix.custom.html","formatted_body":"test262 relies on <code>@@species</code> in the runner?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"test262 relies on `@@species` in the runner?","mimetype":"text/plain"},{"body":"test262 relies on <code>@@species</code> in the runner?","mimetype":"text/html"}]},"ts":1648481428114,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HHo-GvTn5KCZSLbemVeDVu0gUBT-_Hp6tski5T2yhxw"},
{"content":{"body":"yes, this came up when we proposed restriction of species generally","msgtype":"m.text","org.matrix.msc1767.text":"yes, this came up when we proposed restriction of species generally"},"ts":1648481498448,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$SRqfR0Ixoo1C7KMwgmVxnIs83yS6ZA0-8lJS02vV554"},
{"content":{"body":"and i was afraid that what kevin found was related to that, to which i think the response would be -- can we do something that is test runner specific","msgtype":"m.text","org.matrix.msc1767.text":"and i was afraid that what kevin found was related to that, to which i think the response would be -- can we do something that is test runner specific"},"ts":1648481518642,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$GGN8g6sBb0SXIS2XQeQLg1l8ROtL_DOkFyTNU9R2NM4"},
{"content":{"body":"there are other blockers to general removal/restriction, this isn't the only one ","msgtype":"m.text","org.matrix.msc1767.text":"there are other blockers to general removal/restriction, this isn't the only one "},"ts":1648481529331,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Xam60eud6Vg2mn28f3YGK-fDCsS5IFbs8GRXZp8Cs-k"},
{"content":{"body":" * there are other blockers to general removal/restriction, this isn't the only one ","m.new_content":{"body":"there are other blockers to general removal/restriction, this isn't the only one ","msgtype":"m.text","org.matrix.msc1767.text":"there are other blockers to general removal/restriction, this isn't the only one "},"m.relates_to":{"event_id":"$Xam60eud6Vg2mn28f3YGK-fDCsS5IFbs8GRXZp8Cs-k","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * there are other blockers to general removal/restriction, this isn't the only one "},"ts":1648481537067,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$0aPouA_LqZ_F0APiiNu7Mjab5FmJgF1hb113xRPC_aA"},
{"content":{"body":"this is another thing on the ever growing pile that grew ever higher while i was sick","msgtype":"m.text","org.matrix.msc1767.text":"this is another thing on the ever growing pile that grew ever higher while i was sick"},"ts":1648481577272,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nqXB7GPGUzk3WE3NbwlzbV1vaweQdIgSb9N05p9JLyM"},
{"content":{"body":"Michael Ficarra yulia hold on, that's not quite true. The runner does not rely on @@species. There are tests that test for @@species ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> hold on, that's not quite true. The runner does not rely on @@species. There are tests that test for @@species","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Michael Ficarra yulia hold on, that's not quite true. The runner does not rely on @@species. There are tests that test for @@species ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> hold on, that's not quite true. The runner does not rely on @@species. There are tests that test for @@species","mimetype":"text/html"}]},"ts":1648481622341,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$WNvqFlToFm8gkHvv3PjWWZ60GFiwrS143cOoSw7FYRI"},
{"content":{"body":"oh, i may have misremembered","msgtype":"m.text","org.matrix.msc1767.text":"oh, i may have misremembered"},"ts":1648481635029,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$AGdZTu5pZwnIDJj_UEHdjWdPDm6DO4ZLxa3dCx-PtJw"},
{"content":{"body":"No problem, just clarifying 👍️","msgtype":"m.text","org.matrix.msc1767.text":"No problem, just clarifying 👍️"},"ts":1648481655514,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$pVMy78sEyNALiIhdCy1hmKWCuNrEHwbccADn1XdwWco"},
{"content":{"body":"yeah, okay, that's what I would've expected","msgtype":"m.text","org.matrix.msc1767.text":"yeah, okay, that's what I would've expected"},"ts":1648481669821,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KqgklFFVShmAoB0JThybxOuIpDKuYTj4PRc1bQ59Ofc"},
{"content":{"body":"Rick Waldron: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Rick Waldron: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong","mimetype":"text/html"}]},"ts":1648481670996,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$TfzeF44CfpnUwVYHhiNg61ALsXtYTcBnM2P9FE24q9c"},
{"content":{"body":"maybe it was related to type 2 subclassing which won't happen","msgtype":"m.text","org.matrix.msc1767.text":"maybe it was related to type 2 subclassing which won't happen"},"ts":1648481693913,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$qdIfA5k1jcXJjSvbVj3wD2lNF1apEAL1uFTBWfaGj4Y"},
{"content":{"body":"> <@yulia:mozilla.org> Rick Waldron: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong\n\nI'm having trouble finding the discussion in the notes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TfzeF44CfpnUwVYHhiNg61ALsXtYTcBnM2P9FE24q9c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br><a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong</blockquote></mx-reply>I'm having trouble finding the discussion in the notes","m.relates_to":{"m.in_reply_to":{"event_id":"$TfzeF44CfpnUwVYHhiNg61ALsXtYTcBnM2P9FE24q9c"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> Rick Waldron: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong\n\nI'm having trouble finding the discussion in the notes","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$TfzeF44CfpnUwVYHhiNg61ALsXtYTcBnM2P9FE24q9c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br><a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>: it was a comment you made in relation to https://github.com/tc39/proposal-rm-builtin-subclassing and i think i just linked it wrong</blockquote></mx-reply>I'm having trouble finding the discussion in the notes","mimetype":"text/html"}]},"ts":1648481916235,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$_6nap627NUIYk6VCR4M45973SYRA9j9UzkPdvDKPqjY"},
{"content":{"body":"Rick Waldron: \n\nRW: So you were asking for examples of Type III. In Test262, we use Type III extensively for testing the behavior of built-ins across realms. We are heavily reliant on setting the species with a cross realm copy of the constructor to make sure the lookup chain of the constructor is preserved correctly. To make sure that the lookup chain is preserved correctly. If you look at it, I don’t want to rathole into that, we can look at it together offline. But that’s a pretty substantial example of where it’s being used in the wild. And I don’t know how else we would test cross realm behavior which is important to the language cause we have access to multiple realms in any given runtime. So I just wanted to put that on the board and say let’s chat about it offline.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>:</p>\n<p>RW: So you were asking for examples of Type III. In Test262, we use Type III extensively for testing the behavior of built-ins across realms. We are heavily reliant on setting the species with a cross realm copy of the constructor to make sure the lookup chain of the constructor is preserved correctly. To make sure that the lookup chain is preserved correctly. If you look at it, I don’t want to rathole into that, we can look at it together offline. But that’s a pretty substantial example of where it’s being used in the wild. And I don’t know how else we would test cross realm behavior which is important to the language cause we have access to multiple realms in any given runtime. So I just wanted to put that on the board and say let’s chat about it offline.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Rick Waldron: \n\nRW: So you were asking for examples of Type III. In Test262, we use Type III extensively for testing the behavior of built-ins across realms. We are heavily reliant on setting the species with a cross realm copy of the constructor to make sure the lookup chain of the constructor is preserved correctly. To make sure that the lookup chain is preserved correctly. If you look at it, I don’t want to rathole into that, we can look at it together offline. But that’s a pretty substantial example of where it’s being used in the wild. And I don’t know how else we would test cross realm behavior which is important to the language cause we have access to multiple realms in any given runtime. So I just wanted to put that on the board and say let’s chat about it offline.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a>:</p>\n<p>RW: So you were asking for examples of Type III. In Test262, we use Type III extensively for testing the behavior of built-ins across realms. We are heavily reliant on setting the species with a cross realm copy of the constructor to make sure the lookup chain of the constructor is preserved correctly. To make sure that the lookup chain is preserved correctly. If you look at it, I don’t want to rathole into that, we can look at it together offline. But that’s a pretty substantial example of where it’s being used in the wild. And I don’t know how else we would test cross realm behavior which is important to the language cause we have access to multiple realms in any given runtime. So I just wanted to put that on the board and say let’s chat about it offline.</p>\n","mimetype":"text/html"}]},"ts":1648481969953,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$_7lY3ZxSA_aQcySfWtN6urz2Gg3UlmP8_jnFjxghuBc"},
{"content":{"body":"is that still true?","msgtype":"m.text","org.matrix.msc1767.text":"is that still true?"},"ts":1648481985680,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$bOMf3M7hojzmsvdjf3mtf_M_vkbjm1tIAekDEEhGSbQ"},
{"content":{"body":"maybe this changed","msgtype":"m.text","org.matrix.msc1767.text":"maybe this changed"},"ts":1648481994820,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KJO3VOgTdBSkPeCDaxeEqNB2tYoTmhSPXxMuKHciUJg"},
{"content":{"body":"Oh right, that makes sense. I was describing what we do when we test Symbol.species. ","msgtype":"m.text","org.matrix.msc1767.text":"Oh right, that makes sense. I was describing what we do when we test Symbol.species. "},"ts":1648482000366,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$SIoRvxU0LLfFvyi3tOjPzdrdH_I6NsqYaEIXJ6UsI7g"},
{"content":{"body":"Let check one other thing","msgtype":"m.text","org.matrix.msc1767.text":"Let check one other thing"},"ts":1648482034868,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$97mQ1hzoTCjNYndwWEjoestpRK7xYVavwEnBdgRKRdk"},
{"content":{"body":"ok, yeah that was what i was worried kevin found","msgtype":"m.text","org.matrix.msc1767.text":"ok, yeah that was what i was worried kevin found"},"ts":1648482042669,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$TMfIwqvE7A0mrvOY-Hwp4rfd9nOzKwwdzxnGUEEPHsQ"},
{"content":{"body":"but it wasn't fortunately","msgtype":"m.text","org.matrix.msc1767.text":"but it wasn't fortunately"},"ts":1648482050673,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$fzGrYTGuaOfO-bM_3W0YRMT8UvC2tccp9KziQj3GWCI"},
{"content":{"body":"I am super foggy today, so sorry if i am being confusing","msgtype":"m.text","org.matrix.msc1767.text":"I am super foggy today, so sorry if i am being confusing"},"ts":1648482069355,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$OfiMNmzXb986qMUlC5qfhQe0TfyG04oUJAmREGFDY8E"},
{"content":{"body":"Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness. ","msgtype":"m.text","org.matrix.msc1767.text":"Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness. "},"ts":1648482078248,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$XWvALaDl7LmGtuvToK_5Fkc02LyZAyW0H0oV1lkST1g"},
{"content":{"body":"correction: Chrome never shipped and unshipped grouping because we saw this before we could ship","msgtype":"m.text","org.matrix.msc1767.text":"correction: Chrome never shipped and unshipped grouping because we saw this before we could ship"},"ts":1648482100941,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XAPrJ0mpGYi2d0IAKuASuJ8jR7UJp-hW8s25uqTB2to"},
{"content":{"body":"Symbol.species is used in test262's harness files and tests themselves, for cross realm testing. That could be changed. ","msgtype":"m.text","org.matrix.msc1767.text":"Symbol.species is used in test262's harness files and tests themselves, for cross realm testing. That could be changed. "},"ts":1648482111770,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$9a_snQsexxGBlpbgf055eKfMv1S99PeILVDlw2sMA3k"},
{"content":{"body":"> <@rwaldron:matrix.org> Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness.\n\nsweet!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XWvALaDl7LmGtuvToK_5Fkc02LyZAyW0H0oV1lkST1g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness. </blockquote></mx-reply>sweet!","m.relates_to":{"m.in_reply_to":{"event_id":"$XWvALaDl7LmGtuvToK_5Fkc02LyZAyW0H0oV1lkST1g"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rwaldron:matrix.org> Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness.\n\nsweet!","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$XWvALaDl7LmGtuvToK_5Fkc02LyZAyW0H0oV1lkST1g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Ok, confirmed: we do not rely on Symbol.species in eshost or test262-harness. </blockquote></mx-reply>sweet!","mimetype":"text/html"}]},"ts":1648482163827,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KiHart21yEixqFIxZBgKQBO0_cxnJMF10I3Tutqn46I"},
{"content":{"body":"> <@rwaldron:matrix.org> Symbol.species is used in test262's harness files and tests themselves, for cross realm testing. That could be changed.\n\nok, cool , this is what i thought and expressed poorly","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9a_snQsexxGBlpbgf055eKfMv1S99PeILVDlw2sMA3k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Symbol.species is used in test262&#39;s harness files and tests themselves, for cross realm testing. That could be changed. </blockquote></mx-reply>ok, cool , this is what i thought and expressed poorly","m.relates_to":{"m.in_reply_to":{"event_id":"$9a_snQsexxGBlpbgf055eKfMv1S99PeILVDlw2sMA3k"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@rwaldron:matrix.org> Symbol.species is used in test262's harness files and tests themselves, for cross realm testing. That could be changed.\n\nok, cool , this is what i thought and expressed poorly","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$9a_snQsexxGBlpbgf055eKfMv1S99PeILVDlw2sMA3k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">@rwaldron:matrix.org</a><br>Symbol.species is used in test262&#39;s harness files and tests themselves, for cross realm testing. That could be changed. </blockquote></mx-reply>ok, cool , this is what i thought and expressed poorly","mimetype":"text/html"}]},"ts":1648482187369,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$HYhI3b_vseW-n5lgfLfFD2wAVwwbK7Hv2wYG3anMK7c"},
{"content":{"body":"I think I may have expressed it poorly myself","msgtype":"m.text","org.matrix.msc1767.text":"I think I may have expressed it poorly myself"},"ts":1648482209988,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$crlh3swqNShyxY4cq75lzlm1s6pTpOb9wu4UURJGY9w"},
{"content":{"body":"if we don't know what versions the websites use, can't we just do a functional test?","msgtype":"m.text","org.matrix.msc1767.text":"if we don't know what versions the websites use, can't we just do a functional test?"},"ts":1648482242458,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4wQ9Kjjv3lpdK2rM9YGzM9SgT2hKWuQNP0-RgvFySbA"},
{"content":{"body":"My description above explain how its being used in the wild, but wasn't clear at which level","msgtype":"m.text","org.matrix.msc1767.text":"My description above explain how its being used in the wild, but wasn't clear at which level"},"ts":1648482266177,"senderName":"Rick Waldron","senderId":"@rwaldron:matrix.org","id":"$E5fc0kSYECVc5Vg-Gap2vMV0nZelly_kelJhmwNKS6I"},
{"content":{"body":"groupedByTo doesn't compute in my brain","msgtype":"m.text","org.matrix.msc1767.text":"groupedByTo doesn't compute in my brain"},"ts":1648482309764,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$yEapSkEdE_piS89me8WlJzAo8yWMNH7ZsvPq3ssj6_k"},
{"content":{"body":"yeah it feels bad","msgtype":"m.text","org.matrix.msc1767.text":"yeah it feels bad"},"ts":1648482367222,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$-G3O-n1UfB8Q7vA7ydCQl68RCWefuTF6Jo3_IYaHgzo"},
{"content":{"body":"groupMap","msgtype":"m.text","org.matrix.msc1767.text":"groupMap"},"ts":1648482474262,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$uxVGhhr94Z1jSolFWeQgjneDtjzEcXcTI4O6x1ubliM"},
{"content":{"body":"groupedXX series sounds like what the array change by copy proposal is doing","msgtype":"m.text","org.matrix.msc1767.text":"groupedXX series sounds like what the array change by copy proposal is doing"},"ts":1648482519743,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$dyFHJZKY1ypsw-0Wc7x5HnRzWxwQBbLgUo-bWEERLqU"},
{"content":{"body":"we could also go with `Object.group` and `Map.group` /ducks","format":"org.matrix.custom.html","formatted_body":"we could also go with <code>Object.group</code> and <code>Map.group</code> /ducks","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"we could also go with `Object.group` and `Map.group` /ducks","mimetype":"text/plain"},{"body":"we could also go with <code>Object.group</code> and <code>Map.group</code> /ducks","mimetype":"text/html"}]},"ts":1648482563908,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$34xumdLcDmTHpN9MYFBmHOpZKmW6LxXMexBa61_Y_yM"},
{"content":{"body":"sadness","msgtype":"m.text","org.matrix.msc1767.text":"sadness"},"ts":1648482623601,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XvIeK1lE8HqkunJRFwW09ACMLRULjv_auZfO-Ykg02k"},
{"content":{"body":"i liked `groupBy`","format":"org.matrix.custom.html","formatted_body":"i liked <code>groupBy</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i liked `groupBy`","mimetype":"text/plain"},{"body":"i liked <code>groupBy</code>","mimetype":"text/html"}]},"ts":1648482647547,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ASowYYqQPQy-6_ugXw1vn_FZyLiIQhQ1SUNdVaaAhXE"},
{"content":{"body":"as much as i think it makes sense on Array.prototype, that does make the naming simpler, and opens up `Set.group` and friends in the future.\n\ni also prefer `groupBy` :-/","format":"org.matrix.custom.html","formatted_body":"<p>as much as i think it makes sense on Array.prototype, that does make the naming simpler, and opens up <code>Set.group</code> and friends in the future.</p>\n<p>i also prefer <code>groupBy</code> :-/</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"as much as i think it makes sense on Array.prototype, that does make the naming simpler, and opens up `Set.group` and friends in the future.\n\ni also prefer `groupBy` :-/","mimetype":"text/plain"},{"body":"<p>as much as i think it makes sense on Array.prototype, that does make the naming simpler, and opens up <code>Set.group</code> and friends in the future.</p>\n<p>i also prefer <code>groupBy</code> :-/</p>\n","mimetype":"text/html"}]},"ts":1648482664180,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vNF4InOCvbch1HATphQpsytCSYz8nvUWtbB1MYnymbk"},
{"content":{"body":"I feel like we gave up on `groupBy` way too easily, personally","format":"org.matrix.custom.html","formatted_body":"I feel like we gave up on <code>groupBy</code> way too easily, personally","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I feel like we gave up on `groupBy` way too easily, personally","mimetype":"text/plain"},{"body":"I feel like we gave up on <code>groupBy</code> way too easily, personally","mimetype":"text/html"}]},"ts":1648482675151,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hkoL5IcPlU69dllk5qaLOTdP_hD8iSYTPzUuZy6gZlI"},
{"content":{"body":"i mean, someone could still go evangelize","msgtype":"m.text","org.matrix.msc1767.text":"i mean, someone could still go evangelize"},"ts":1648482731317,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w32vIYNQpvlfD_uvj2-8Kz2L5NF2crOjF8J8fxxeQsg"},
{"content":{"body":"As long as we don’t break Roll20 😉","msgtype":"m.text","org.matrix.msc1767.text":"As long as we don’t break Roll20 😉"},"ts":1648482784103,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7xFDCTtIkr9VxaUSlTmDErx6TvprweOWN3k9xpnuLYk"},
{"content":{"body":"I'm more worried about all the `.gov.br` sites","format":"org.matrix.custom.html","formatted_body":"I'm more worried about all the <code>.gov.br</code> sites","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm more worried about all the `.gov.br` sites","mimetype":"text/plain"},{"body":"I'm more worried about all the <code>.gov.br</code> sites","mimetype":"text/html"}]},"ts":1648483063538,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gqlUG_HHHokXWoV-OO37bNRCpAfNxQyV1lFsVQL52Bo"},
{"content":{"body":"breaking government services seems bad","msgtype":"m.text","org.matrix.msc1767.text":"breaking government services seems bad"},"ts":1648483069232,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m5bqcF4_TsZQJHtk4nZ8dhWGg_Bp7t1tBXBjtvr1y8k"},
{"content":{"body":"though I didn't actually check what they're hosting","msgtype":"m.text","org.matrix.msc1767.text":"though I didn't actually check what they're hosting"},"ts":1648483076642,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Qxk8YQqC1bCAf6XkDPZgq56Z3wejOC3UVDAO2yQk728"},
{"content":{"body":"Facetious wink. 👆","msgtype":"m.text","org.matrix.msc1767.text":"Facetious wink. 👆"},"ts":1648483221413,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6BOhb-GhD8I95RJWdZlFudnS_Yi8nprgkevAJE42Zzo"},
{"content":{"body":"I'm gonna verify I can project to the jitsi in one sec","msgtype":"m.text","org.matrix.msc1767.text":"I'm gonna verify I can project to the jitsi in one sec"},"ts":1648485300386,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$pjYSG9jBiNjYQypaAwaawUFAuu9lZXNgG29e2s1yZSs"},
{"content":{"body":"okay, looks good","msgtype":"m.text","org.matrix.msc1767.text":"okay, looks good"},"ts":1648485349718,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$NZFcjV_rCnP2Xe9e7K0B9QbSWRZZ9DEUoNfbLZQMB5w"},
{"content":{"body":"can someone verify?","msgtype":"m.text","org.matrix.msc1767.text":"can someone verify?"},"ts":1648485356811,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ZRCNjHKpm_e6s8YGleI87ZWf7f8RtrgzJoAvLW2g0Tg"},
{"content":{"body":"it works","msgtype":"m.text","org.matrix.msc1767.text":"it works"},"ts":1648485384542,"senderName":"Sergey Rubanov","senderId":"@chicoxyzzy:matrix.org","id":"$Qw2EqbEx5BBNGxVq0q7J5lRvVjmrvssX33bLCJ4csoA"},
{"content":{"body":"cool, thanks","msgtype":"m.text","org.matrix.msc1767.text":"cool, thanks"},"ts":1648485422217,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$LME0ryTRSC8QjfWdrZIKz68N8lO5gL2bFIQJdXsbfS0"},
{"content":{"body":"Are we starting again on the hour?","msgtype":"m.text","org.matrix.msc1767.text":"Are we starting again on the hour?"},"ts":1648485771576,"senderName":"Robert Pamely","senderId":"@rpamely:matrix.org","id":"$LTtYOvli1Vm2PqSVKuI8u9CrUlcX60_mAA9IuIuqYxM"},
{"content":{"body":"yep!","msgtype":"m.text","org.matrix.msc1767.text":"yep!"},"ts":1648485845777,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$pg6oFRmnn2zCa8RO0Zm-pONwaVdxzDIeMC0nQ8PHypc"},
{"content":{"body":"Really cool topics being discussed this afternoon!","msgtype":"m.text","org.matrix.msc1767.text":"Really cool topics being discussed this afternoon!"},"ts":1648485909363,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$4-SWJa4kx2kppflBnVN-njLb_My9HpnAriSc64J8eTA"},
{"content":{"body":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events.","msgtype":"m.text","org.matrix.msc1767.text":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events."},"ts":1648485964450,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8K3QL6slWpcIVKpUT5Mu_S9fDiTUXbyGYr139I8_ddA"},
{"content":{"body":"does it subclass?","msgtype":"m.text","org.matrix.msc1767.text":"does it subclass?"},"ts":1648486013582,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$aSay3L2O0MqSmIe4dW7XGvzq79PQ8BuDKs2Rm8YvDBM"},
{"content":{"body":" * What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us at Agoric if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events.","m.new_content":{"body":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us at Agoric if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events.","msgtype":"m.text","org.matrix.msc1767.text":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us at Agoric if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events."},"m.relates_to":{"event_id":"$8K3QL6slWpcIVKpUT5Mu_S9fDiTUXbyGYr139I8_ddA","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us at Agoric if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events."},"ts":1648486039370,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nXgVS2ZZClo3TzB3q_9uTjNj4D9xt3HffQs46bvvTWI"},
{"content":{"body":"I believe Promise was one of the first proposals to account for Symbol.species, so I assume so, but also assume that’s not useful.","msgtype":"m.text","org.matrix.msc1767.text":"I believe Promise was one of the first proposals to account for Symbol.species, so I assume so, but also assume that’s not useful."},"ts":1648486093283,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ra0-qEZkmw_ZqPtG8lMtBRvY2W2P5mFmBNir9BFXAKA"},
{"content":{"body":" * What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events.","m.new_content":{"body":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events.","msgtype":"m.text","org.matrix.msc1767.text":"What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events."},"m.relates_to":{"event_id":"$8K3QL6slWpcIVKpUT5Mu_S9fDiTUXbyGYr139I8_ddA","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * What are the reasons Promise.resolve(promise) consults promise.constructor for promises that pass the brand check? It would be useful for us in the hardened JavaScript community if Promise.resolve(promise) could be guaranteed to give control to the provider of the promise only in subsequent events."},"ts":1648486128516,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$reR5cG-JfKhPpmxvh7gYdngLoX8egGSbXvEsJKe89wo"},
{"content":{"body":"\n```\nclass P2 extends Promise {}\nlet x = P2.resolve(1);\nP2.resolve(x) === x;\nPromise.resolve(x) !== x;\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>class P2 extends Promise {}\nlet x = P2.resolve(1);\nP2.resolve(x) === x;\nPromise.resolve(x) !== x;\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"\n```\nclass P2 extends Promise {}\nlet x = P2.resolve(1);\nP2.resolve(x) === x;\nPromise.resolve(x) !== x;\n```","mimetype":"text/plain"},{"body":"<pre><code>class P2 extends Promise {}\nlet x = P2.resolve(1);\nP2.resolve(x) === x;\nPromise.resolve(x) !== x;\n</code></pre>\n","mimetype":"text/html"}]},"ts":1648486238966,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$00OfvpyjfcWE8nCDcWADdqCBnLEGuyXi4_gQ4NVCwEw"},
{"content":{"body":"Maybe because of that?","msgtype":"m.text","org.matrix.msc1767.text":"Maybe because of that?"},"ts":1648486242963,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$SRZ29iRnpgfyOl-7yG3_jltwJFZ67O5wfWkW1-leHq0"},
{"content":{"body":"I should probably check the spec instead of guessing...","msgtype":"m.text","org.matrix.msc1767.text":"I should probably check the spec instead of guessing..."},"ts":1648486252183,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$kFjerFpPjcrR6E9q54ptlYHoe67nBW_pkngBsT5tfgA"},
{"content":{"body":"That story checks out.","msgtype":"m.text","org.matrix.msc1767.text":"That story checks out."},"ts":1648486315223,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$TstCJ-jN1LniCnWYDiD2hNoNwmRLXtwxSH8rhjzIjeE"},
{"content":{"body":"that is almost certainly the reason, yes","msgtype":"m.text","org.matrix.msc1767.text":"that is almost certainly the reason, yes"},"ts":1648486440396,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZJL9cYHctVgIiG-QkboxfJZ6VW9Vzqb2w1WFijsWoMk"},
{"content":{"body":"subclassing: it's bad","msgtype":"m.text","org.matrix.msc1767.text":"subclassing: it's bad"},"ts":1648486447429,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Bu2pN1M8AJ7O_FZeuIzHBDJOJ8mizAYP3e33VDpwYR0"},
{"content":{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","format":"org.matrix.custom.html","formatted_body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","mimetype":"text/plain"},{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","mimetype":"text/html"}]},"ts":1648486542556,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6Pk9Bus2t8uxXzeJzKefEV2HE9g860L2AMFHJ8sbZuM"},
{"content":{"body":" * In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","format":"org.matrix.custom.html","formatted_body":" * In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","m.new_content":{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","format":"org.matrix.custom.html","formatted_body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","mimetype":"text/plain"},{"body":"In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6Pk9Bus2t8uxXzeJzKefEV2HE9g860L2AMFHJ8sbZuM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * In a way this is good news. That means that in a SES proposal, we can change the behavior of `Promise.resolve()` such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling `lockdown()`)","mimetype":"text/plain"},{"body":" * In a way this is good news. That means that in a SES proposal, we can change the behavior of <code>Promise.resolve()</code> such that subclassing no longer works, but our delegation invariant is preserved (after the host program opts-in by calling <code>lockdown()</code>)","mimetype":"text/html"}]},"ts":1648486568292,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Me0bpwCJ3iBYW7nnk6KRLGKctv4ugnsk01DauBnQbXQ"},
{"content":{"body":"We start in 4 mins!","msgtype":"m.text","org.matrix.msc1767.text":"We start in 4 mins!"},"ts":1648486592713,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$L65_uBWOoOCHdyEEkdjF0Yo-KA5a9QRSf4JC7b9vAbg"},
{"content":{"body":"why does this proposal allow `default`, instead of just `when(unused)`?","format":"org.matrix.custom.html","formatted_body":"why does this proposal allow <code>default</code>, instead of just <code>when(unused)</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"why does this proposal allow `default`, instead of just `when(unused)`?","mimetype":"text/plain"},{"body":"why does this proposal allow <code>default</code>, instead of just <code>when(unused)</code>?","mimetype":"text/html"}]},"ts":1648487002009,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EjnEHI3uOgrSr5n6bOGtEzybpcR4srYKOcl3vYAKsDA"},
{"content":{"body":"or even just a bare `when {`, to go with `catch {`","format":"org.matrix.custom.html","formatted_body":"or even just a bare <code>when {</code>, to go with <code>catch {</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"or even just a bare `when {`, to go with `catch {`","mimetype":"text/plain"},{"body":"or even just a bare <code>when {</code>, to go with <code>catch {</code>","mimetype":"text/html"}]},"ts":1648487018481,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$62S4v8ezJpYwvP3LPZChL00b_B0ZFiodGcqePs0DGOA"},
{"content":{"body":"it allows either, but not both","msgtype":"m.text","org.matrix.msc1767.text":"it allows either, but not both"},"ts":1648487053255,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SymCcjksEBBur0z5y3f4-xCBFA0HIX77j_f4ICTcnUI"},
{"content":{"body":" * it allows either, but not both","m.new_content":{"body":"it allows either, but not both","msgtype":"m.text","org.matrix.msc1767.text":"it allows either, but not both"},"m.relates_to":{"event_id":"$SymCcjksEBBur0z5y3f4-xCBFA0HIX77j_f4ICTcnUI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it allows either, but not both"},"ts":1648487056168,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YacUvnkpv87H-pU5WTR2yUGjNTCylv3eNsEw5BZ1D-M"},
{"content":{"body":"we could use a bare `when` instead of `default`, sure, that's just bikeshedding","format":"org.matrix.custom.html","formatted_body":"we could use a bare <code>when</code> instead of <code>default</code>, sure, that's just bikeshedding","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"we could use a bare `when` instead of `default`, sure, that's just bikeshedding","mimetype":"text/plain"},{"body":"we could use a bare <code>when</code> instead of <code>default</code>, sure, that's just bikeshedding","mimetype":"text/html"}]},"ts":1648487070351,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SkxO-MXWk5tV1XFBsFhYo4D1RNSZRzlJRzutBfDe69k"},
{"content":{"body":"but `when (unused)` has to be allowed for consistency with the way irrefutable patterns work","format":"org.matrix.custom.html","formatted_body":"but <code>when (unused)</code> has to be allowed for consistency with the way irrefutable patterns work","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but `when (unused)` has to be allowed for consistency with the way irrefutable patterns work","mimetype":"text/plain"},{"body":"but <code>when (unused)</code> has to be allowed for consistency with the way irrefutable patterns work","mimetype":"text/html"}]},"ts":1648487091759,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Sws3OsIBRTKlNQ4-2gGeu_ihfFLPPqLGRZkl7JRr0IA"},
{"content":{"body":"TIL 0 can have a sign","msgtype":"m.text","org.matrix.msc1767.text":"TIL 0 can have a sign"},"ts":1648487103510,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$baL7eaKuxvqQ9p7WVP61c207GLKiCSjNPd3r-wIscN8"},
{"content":{"body":"is there anyplace else in JavaScript where these sematics hold? ","msgtype":"m.text","org.matrix.msc1767.text":"is there anyplace else in JavaScript where these sematics hold? "},"ts":1648487116163,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$iWHMM9YPjEDx3s-0uRDroDQfo0li9RTdBfUNuW-x3SI"},
{"content":{"body":"ryzokuken: which?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: which?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ryzokuken: which?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: which?","mimetype":"text/html"}]},"ts":1648487122948,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$3sOpz9ZZi_BFFypa9ywx6OD5IEN4iVgr-tN-wk5zp4Q"},
{"content":{"body":"`0` matching both `+0` and `-0`","format":"org.matrix.custom.html","formatted_body":"<code>0</code> matching both <code>+0</code> and <code>-0</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`0` matching both `+0` and `-0`","mimetype":"text/plain"},{"body":"<code>0</code> matching both <code>+0</code> and <code>-0</code>","mimetype":"text/html"}]},"ts":1648487145174,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$fXKXAoDM2U0f2F1mQ-qMNHczViWdQQBgwLmIIFD0kIU"},
{"content":{"body":"I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","format":"org.matrix.custom.html","formatted_body":"I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","mimetype":"text/plain"},{"body":"I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","mimetype":"text/html"}]},"ts":1648487145432,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U_XDf_ZCWkLfXmmA9LvL5uL3gmo28aH1CA-5X7nQY8E"},
{"content":{"body":" * I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","format":"org.matrix.custom.html","formatted_body":" * I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","m.new_content":{"body":"I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","format":"org.matrix.custom.html","formatted_body":"I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","mimetype":"text/plain"},{"body":"I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$U_XDf_ZCWkLfXmmA9LvL5uL3gmo28aH1CA-5X7nQY8E","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that","mimetype":"text/plain"},{"body":" * I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that","mimetype":"text/html"}]},"ts":1648487148926,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vRKNBvpfxHJorDRkxL-IcR-pSNS6CJErWVw92UhAl2M"},
{"content":{"body":" * `0` matching both `+0` and `-0`","format":"org.matrix.custom.html","formatted_body":" * <code>0</code> matching both <code>+0</code> and <code>-0</code>","m.new_content":{"body":"`0` matching both `+0` and `-0`","format":"org.matrix.custom.html","formatted_body":"<code>0</code> matching both <code>+0</code> and <code>-0</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`0` matching both `+0` and `-0`","mimetype":"text/plain"},{"body":"<code>0</code> matching both <code>+0</code> and <code>-0</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$fXKXAoDM2U0f2F1mQ-qMNHczViWdQQBgwLmIIFD0kIU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `0` matching both `+0` and `-0`","mimetype":"text/plain"},{"body":" * <code>0</code> matching both <code>+0</code> and <code>-0</code>","mimetype":"text/html"}]},"ts":1648487149369,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$EpWGPBd6ags6w7nANDIoNcmlBSORodvHnVrECYct4Z4"},
{"content":{"body":"yes, `0 === -0`","format":"org.matrix.custom.html","formatted_body":"yes, <code>0 === -0</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yes, `0 === -0`","mimetype":"text/plain"},{"body":"yes, <code>0 === -0</code>","mimetype":"text/html"}]},"ts":1648487152899,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lINR8SJd9x9wp5GRyb2NteFH9ccf3gqdi51R3U30cPg"},
{"content":{"body":"`===`","format":"org.matrix.custom.html","formatted_body":"<code>===</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`===`","mimetype":"text/plain"},{"body":"<code>===</code>","mimetype":"text/html"}]},"ts":1648487156278,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y6vuNseMxtkKIzyew-l0Sm63gP8JzPKJOVYH1wpyfsk"},
{"content":{"body":" * yes, `0 === -0`","format":"org.matrix.custom.html","formatted_body":" * yes, <code>0 === -0</code>","m.new_content":{"body":"yes, `0 === -0`","format":"org.matrix.custom.html","formatted_body":"yes, <code>0 === -0</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yes, `0 === -0`","mimetype":"text/plain"},{"body":"yes, <code>0 === -0</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$lINR8SJd9x9wp5GRyb2NteFH9ccf3gqdi51R3U30cPg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * yes, `0 === -0`","mimetype":"text/plain"},{"body":" * yes, <code>0 === -0</code>","mimetype":"text/html"}]},"ts":1648487159289,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6V_6KwLmP-9xdVX75ltsVQlCRGZwJXKBjD-O9NmHvWE"},
{"content":{"body":"also sets and maps","msgtype":"m.text","org.matrix.msc1767.text":"also sets and maps"},"ts":1648487160373,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BOtZ6aALQIT98Wqps6-f71WPccA-NQSNL-4vfu1AdyY"},
{"content":{"body":"ah, okay, thanks","msgtype":"m.text","org.matrix.msc1767.text":"ah, okay, thanks"},"ts":1648487168046,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$8MjAiCsrXiCH_0JQ-WkretOS1ycnx-GYQBo4ImF9lFA"},
{"content":{"body":"bakkot: the use is that it's confusing and gross to have to write a binding when you don't want one, and `when {` i'd argue doesn't convey that it's the \"everything else\" category very clearly.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the use is that it's confusing and gross to have to write a binding when you don't want one, and <code>when {</code> i'd argue doesn't convey that it's the &quot;everything else&quot; category very clearly.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: the use is that it's confusing and gross to have to write a binding when you don't want one, and `when {` i'd argue doesn't convey that it's the \"everything else\" category very clearly.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the use is that it's confusing and gross to have to write a binding when you don't want one, and <code>when {</code> i'd argue doesn't convey that it's the &quot;everything else&quot; category very clearly.","mimetype":"text/html"}]},"ts":1648487191611,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6Ditzm4P4mYzFUVk-VBFNZIl4McGDHTHfF6fjbJ7i7M"},
{"content":{"body":"does `match(expr) { if (bool): expr }` mean matching against constant bools?","format":"org.matrix.custom.html","formatted_body":"does <code>match(expr) { if (bool): expr }</code> mean matching against constant bools?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"does `match(expr) { if (bool): expr }` mean matching against constant bools?","mimetype":"text/plain"},{"body":"does <code>match(expr) { if (bool): expr }</code> mean matching against constant bools?","mimetype":"text/html"}]},"ts":1648487195869,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$KQ0n9LSDT_Ibd2ZtUBUWEGgimzxEwISfobiVdp2eBcI"},
{"content":{"body":"legendecas: against an expression that resolves to a truthy or falsy value, yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">legendecas</a>: against an expression that resolves to a truthy or falsy value, yes","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"legendecas: against an expression that resolves to a truthy or falsy value, yes","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">legendecas</a>: against an expression that resolves to a truthy or falsy value, yes","mimetype":"text/html"}]},"ts":1648487216396,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LtIjuKf6H0rQbUJg8Bqfl_Ls7svVBroKFeP125o5qSM"},
{"content":{"body":"like any other `if`","format":"org.matrix.custom.html","formatted_body":"like any other <code>if</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like any other `if`","mimetype":"text/plain"},{"body":"like any other <code>if</code>","mimetype":"text/html"}]},"ts":1648487219286,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mWW6jfSCuO2hamsV-8yhtaKy9ExPPl6m0Jmhdb3CZe4"},
{"content":{"body":"also what's the use case for the bare `if` one","format":"org.matrix.custom.html","formatted_body":"also what's the use case for the bare <code>if</code> one","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"also what's the use case for the bare `if` one","mimetype":"text/plain"},{"body":"also what's the use case for the bare <code>if</code> one","mimetype":"text/html"}]},"ts":1648487245597,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0"},
{"content":{"body":"it seems like","msgtype":"m.text","org.matrix.msc1767.text":"it seems like"},"ts":1648487247788,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7xd4v1nDHZCEkxTMKK7c-deksG5AG23l1NCMJ1f89qI"},
{"content":{"body":"not so useful","msgtype":"m.text","org.matrix.msc1767.text":"not so useful"},"ts":1648487249279,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PQxT70edFEiZiA177fFk_quUr_BSPqqaaCdSj0JYwEs"},
{"content":{"body":"I have a hard time seeing a case where you don't also need to name the match-ee","msgtype":"m.text","org.matrix.msc1767.text":"I have a hard time seeing a case where you don't also need to name the match-ee"},"ts":1648487264284,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ieKlDZ96Is8VOE9n10vCIVWcdN9crdy47jIJI2yIqIE"},
{"content":{"body":"> <@ljharb:matrix.org> like any other `if`\n\nthank you. well, in the context of slides, i'm confused that why it isn't `match(expr) { if(expr): expr }`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mWW6jfSCuO2hamsV-8yhtaKy9ExPPl6m0Jmhdb3CZe4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>like any other <code>if</code></blockquote></mx-reply>thank you. well, in the context of slides, i'm confused that why it isn't <code>match(expr) { if(expr): expr }</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$mWW6jfSCuO2hamsV-8yhtaKy9ExPPl6m0Jmhdb3CZe4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> like any other `if`\n\nthank you. well, in the context of slides, i'm confused that why it isn't `match(expr) { if(expr): expr }`","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mWW6jfSCuO2hamsV-8yhtaKy9ExPPl6m0Jmhdb3CZe4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>like any other <code>if</code></blockquote></mx-reply>thank you. well, in the context of slides, i'm confused that why it isn't <code>match(expr) { if(expr): expr }</code>","mimetype":"text/html"}]},"ts":1648487266260,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$Rz-TDC6F1jGFeZ7eCdMqb9RivM0wlvLoMvqwTnKE4l0"},
{"content":{"body":"it's cleaner than `when (unused) if (condition)`","format":"org.matrix.custom.html","formatted_body":"it's cleaner than <code>when (unused) if (condition)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it's cleaner than `when (unused) if (condition)`","mimetype":"text/plain"},{"body":"it's cleaner than <code>when (unused) if (condition)</code>","mimetype":"text/html"}]},"ts":1648487266396,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GlbQbdiQFto-ZXJxSriB-K-I_VfjDUJbNr1F_mmmet4"},
{"content":{"body":"> <@ljharb:matrix.org> yes, `0 === -0`\n\nWrt differences between +0 and -0, `1/-0 === -Infinity` vs `1/0 === Infinity`.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lINR8SJd9x9wp5GRyb2NteFH9ccf3gqdi51R3U30cPg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yes, <code>0 === -0</code></blockquote></mx-reply>Wrt differences between +0 and -0, <code>1/-0 === -Infinity</code> vs <code>1/0 === Infinity</code>.","m.relates_to":{"m.in_reply_to":{"event_id":"$lINR8SJd9x9wp5GRyb2NteFH9ccf3gqdi51R3U30cPg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> yes, `0 === -0`\n\nWrt differences between +0 and -0, `1/-0 === -Infinity` vs `1/0 === Infinity`.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lINR8SJd9x9wp5GRyb2NteFH9ccf3gqdi51R3U30cPg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yes, <code>0 === -0</code></blockquote></mx-reply>Wrt differences between +0 and -0, <code>1/-0 === -Infinity</code> vs <code>1/0 === Infinity</code>.","mimetype":"text/html"}]},"ts":1648487268069,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$m52ITQwKnVD2DpcdwGaGRg6dw0xaxS_KwMwlMM1pDZU"},
{"content":{"body":"ljharb: does that ever happen","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: does that ever happen","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: does that ever happen","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: does that ever happen","mimetype":"text/html"}]},"ts":1648487274715,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7G5Wi4OYW9cs6-oyLeVtMCSOnZbbGv7EbPoHB2a-rCc"},
{"content":{"body":"> <@legendecas:matrix.org> thank you. well, in the context of slides, i'm confused that why it isn't `match(expr) { if(expr): expr }`\n\nyeah fair, it's a confusing example","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Rz-TDC6F1jGFeZ7eCdMqb9RivM0wlvLoMvqwTnKE4l0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>thank you. well, in the context of slides, i'm confused that why it isn't <code>match(expr) { if(expr): expr }</code></blockquote></mx-reply>yeah fair, it's a confusing example","m.relates_to":{"m.in_reply_to":{"event_id":"$Rz-TDC6F1jGFeZ7eCdMqb9RivM0wlvLoMvqwTnKE4l0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@legendecas:matrix.org> thank you. well, in the context of slides, i'm confused that why it isn't `match(expr) { if(expr): expr }`\n\nyeah fair, it's a confusing example","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Rz-TDC6F1jGFeZ7eCdMqb9RivM0wlvLoMvqwTnKE4l0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>thank you. well, in the context of slides, i'm confused that why it isn't <code>match(expr) { if(expr): expr }</code></blockquote></mx-reply>yeah fair, it's a confusing example","mimetype":"text/html"}]},"ts":1648487279428,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v5S0C2gP7T7_G0NixkTgS6BTpyOBvY3NKlt7u0M4fTc"},
{"content":{"body":"bakkot: yes, there's examples in the readme.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: yes, there's examples in the readme.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: yes, there's examples in the readme.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: yes, there's examples in the readme.","mimetype":"text/html"}]},"ts":1648487285573,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TQJk52TmFVWDwRFhA8lwAf8RgUYx1WtBeMuZsKwvTHk"},
{"content":{"body":"> <@ljharb:matrix.org> yeah fair, it's a confusing example\n\nlooks like this part is not in the spec, yet.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v5S0C2gP7T7_G0NixkTgS6BTpyOBvY3NKlt7u0M4fTc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yeah fair, it's a confusing example</blockquote></mx-reply>looks like this part is not in the spec, yet.","m.relates_to":{"m.in_reply_to":{"event_id":"$v5S0C2gP7T7_G0NixkTgS6BTpyOBvY3NKlt7u0M4fTc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> yeah fair, it's a confusing example\n\nlooks like this part is not in the spec, yet.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v5S0C2gP7T7_G0NixkTgS6BTpyOBvY3NKlt7u0M4fTc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yeah fair, it's a confusing example</blockquote></mx-reply>looks like this part is not in the spec, yet.","mimetype":"text/html"}]},"ts":1648487323836,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$cX14Ie05s_IiSilziHq-vYDndSG-Tw64RESO3SiHDWo"},
{"content":{"body":"so to match an array with holes I'd need to do `[undefined, undefined, \"foo\"]`?","format":"org.matrix.custom.html","formatted_body":"so to match an array with holes I'd need to do <code>[undefined, undefined, &quot;foo&quot;]</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so to match an array with holes I'd need to do `[undefined, undefined, \"foo\"]`?","mimetype":"text/plain"},{"body":"so to match an array with holes I'd need to do <code>[undefined, undefined, &quot;foo&quot;]</code>?","mimetype":"text/html"}]},"ts":1648487339180,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$BRydKUmsYIeDOi-1TxV7ZDCIKnWwuF6v421ntIM7i-Y"},
{"content":{"body":"legendecas: most things aren't in the spec; it's only going for stage 2, where only an initial spec is required.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">legendecas</a>: most things aren't in the spec; it's only going for stage 2, where only an initial spec is required.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"legendecas: most things aren't in the spec; it's only going for stage 2, where only an initial spec is required.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@legendecas:matrix.org\">legendecas</a>: most things aren't in the spec; it's only going for stage 2, where only an initial spec is required.","mimetype":"text/html"}]},"ts":1648487340406,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YtRaaWGvJwh7_EWZyaUwW8Ak1weAOlZCyusbB__Xg_k"},
{"content":{"body":"the readme is what you want","msgtype":"m.text","org.matrix.msc1767.text":"the readme is what you want"},"ts":1648487343504,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$j0kwffE4uksPNOu8gGHqjQVKJnO4GCsl7_WLeBl7z9E"},
{"content":{"body":"ljharb: the example in the readme is `match (res) {  if (isEmpty(res))` but that's still naming the matchee","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: the example in the readme is <code>match (res) {  if (isEmpty(res))</code> but that's still naming the matchee","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: the example in the readme is `match (res) {  if (isEmpty(res))` but that's still naming the matchee","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: the example in the readme is <code>match (res) {  if (isEmpty(res))</code> but that's still naming the matchee","mimetype":"text/html"}]},"ts":1648487350701,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UwnWUoJd0ZbSyWQI-wiAjhQt8gozKCgzE3jXnoRnz5I"},
{"content":{"body":"> <@usharma:igalia.com> so to match an array with holes I'd need to do `[undefined, undefined, \"foo\"]`?\n\nor `[,, 'foo']`, yes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BRydKUmsYIeDOi-1TxV7ZDCIKnWwuF6v421ntIM7i-Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>so to match an array with holes I'd need to do <code>[undefined, undefined, \"foo\"]</code>?</blockquote></mx-reply>or <code>[,, 'foo']</code>, yes","m.relates_to":{"m.in_reply_to":{"event_id":"$BRydKUmsYIeDOi-1TxV7ZDCIKnWwuF6v421ntIM7i-Y"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@usharma:igalia.com> so to match an array with holes I'd need to do `[undefined, undefined, \"foo\"]`?\n\nor `[,, 'foo']`, yes","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BRydKUmsYIeDOi-1TxV7ZDCIKnWwuF6v421ntIM7i-Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>so to match an array with holes I'd need to do <code>[undefined, undefined, \"foo\"]</code>?</blockquote></mx-reply>or <code>[,, 'foo']</code>, yes","mimetype":"text/html"}]},"ts":1648487352512,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xt0GGTiQdVKs0dwPJU4XkIBqsdTndjLN0OuEip9chE0"},
{"content":{"body":"it's just repeating the expression","msgtype":"m.text","org.matrix.msc1767.text":"it's just repeating the expression"},"ts":1648487354478,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y35QlEZa6JYddRM0mU0LYGK4R7U7q7mMl_c8Cihq86w"},
{"content":{"body":"seems bad","msgtype":"m.text","org.matrix.msc1767.text":"seems bad"},"ts":1648487355404,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aHczCk4IUIic2RCCzh4JvxjJdDwGBHkCQrI_0OAZVAU"},
{"content":{"body":"why?","msgtype":"m.text","org.matrix.msc1767.text":"why?"},"ts":1648487364790,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$H8lMzqg4GW3uJhF2rn7Bjg4gn6iw6mbP24uNP-mhilM"},
{"content":{"body":"i see what you mean, that a bare `if` would still need to reference the matchable","format":"org.matrix.custom.html","formatted_body":"i see what you mean, that a bare <code>if</code> would still need to reference the matchable","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i see what you mean, that a bare `if` would still need to reference the matchable","mimetype":"text/plain"},{"body":"i see what you mean, that a bare <code>if</code> would still need to reference the matchable","mimetype":"text/html"}]},"ts":1648487376314,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aAlyVol8lwKsyNmguYRgE_ri7i2xc6Ueb5-Avz6Gl3E"},
{"content":{"body":"but why would it be bad to not be forced to create a new binding just to reference it, via `when (res) if (isEmpty(res))`?","format":"org.matrix.custom.html","formatted_body":"but why would it be bad to not be forced to create a new binding just to reference it, via <code>when (res) if (isEmpty(res))</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but why would it be bad to not be forced to create a new binding just to reference it, via `when (res) if (isEmpty(res))`?","mimetype":"text/plain"},{"body":"but why would it be bad to not be forced to create a new binding just to reference it, via <code>when (res) if (isEmpty(res))</code>?","mimetype":"text/html"}]},"ts":1648487398631,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bpSNT79OqgnmQ_dqvP1fvnG27A53in6pkwJo_pm7C8Q"},
{"content":{"body":"> <@bakkot:matrix.org> I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that\n\nyeah. `default` just make it easier to read","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$U_XDf_ZCWkLfXmmA9LvL5uL3gmo28aH1CA-5X7nQY8E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that</blockquote></mx-reply>yeah. <code>default</code> just make it easier to read","m.relates_to":{"m.in_reply_to":{"event_id":"$U_XDf_ZCWkLfXmmA9LvL5uL3gmo28aH1CA-5X7nQY8E"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> I have no problem with `when (unused)`, I just don't see a use for `default` if you already have that\n\nyeah. `default` just make it easier to read","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$U_XDf_ZCWkLfXmmA9LvL5uL3gmo28aH1CA-5X7nQY8E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I have no problem with <code>when (unused)</code>, I just don't see a use for <code>default</code> if you already have that</blockquote></mx-reply>yeah. <code>default</code> just make it easier to read","mimetype":"text/html"}]},"ts":1648487421693,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$f7dhtP7jVZ1sqWMTqT9K7QezPsosbJtNGuXUUwL2PZ8"},
{"content":{"body":"I'd just write `when (_) if (whatever)`","format":"org.matrix.custom.html","formatted_body":"I'd just write <code>when (_) if (whatever)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'd just write `when (_) if (whatever)`","mimetype":"text/plain"},{"body":"I'd just write <code>when (_) if (whatever)</code>","mimetype":"text/html"}]},"ts":1648487422790,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HHA7-J8qsIy16Y6CB3cEtJINpVMa9tjdq0JrjUj05aI"},
{"content":{"body":"so you don't have to learn a new form","msgtype":"m.text","org.matrix.msc1767.text":"so you don't have to learn a new form"},"ts":1648487425651,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iUq0y1n86SHvOmGNHjl3LXXB6sn9lmZ_Ipbw8YNmwvc"},
{"content":{"body":"or `default if (whatever)`, maybe","format":"org.matrix.custom.html","formatted_body":"or <code>default if (whatever)</code>, maybe","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"or `default if (whatever)`, maybe","mimetype":"text/plain"},{"body":"or <code>default if (whatever)</code>, maybe","mimetype":"text/html"}]},"ts":1648487438000,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Oenwm3LKtsFL6jWzUMM9OhW72TxejmR8moCatzoL2LM"},
{"content":{"body":"having to write the underscore is gross","msgtype":"m.text","org.matrix.msc1767.text":"having to write the underscore is gross"},"ts":1648487441018,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$vgL9ErRwOnEjj1Tc7Ssf9VWDUqELPy18n8YQD9Los4Q"},
{"content":{"body":"and `default` has to be last - it'd be confusing to have `default if` be allowed all over the place","format":"org.matrix.custom.html","formatted_body":"and <code>default</code> has to be last - it'd be confusing to have <code>default if</code> be allowed all over the place","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `default` has to be last - it'd be confusing to have `default if` be allowed all over the place","mimetype":"text/plain"},{"body":"and <code>default</code> has to be last - it'd be confusing to have <code>default if</code> be allowed all over the place","mimetype":"text/html"}]},"ts":1648487455116,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zIwj3o2jIjRAo4ZdoI-LUwcapDxAlw6dhAUgwXqihWA"},
{"content":{"body":"hm","msgtype":"m.text","org.matrix.msc1767.text":"hm"},"ts":1648487477321,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X-DND8Hj5Uj7g69C4GDPlWnCcYAJmSch6CIuZcF3yF8"},
{"content":{"body":"not sure I agree","msgtype":"m.text","org.matrix.msc1767.text":"not sure I agree"},"ts":1648487479480,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wyknFPznGOI5YDhf89_Bf8g6YKPFKIJu6dTTVlA5vds"},
{"content":{"body":"having a bare `when` would be alright, but then you have `when {` and `when if (x) {` and that reads odd to me","format":"org.matrix.custom.html","formatted_body":"having a bare <code>when</code> would be alright, but then you have <code>when {</code> and <code>when if (x) {</code> and that reads odd to me","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"having a bare `when` would be alright, but then you have `when {` and `when if (x) {` and that reads odd to me","mimetype":"text/plain"},{"body":"having a bare <code>when</code> would be alright, but then you have <code>when {</code> and <code>when if (x) {</code> and that reads odd to me","mimetype":"text/html"}]},"ts":1648487494695,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FNMZddFkWbhX8bH3Nv0bxRLdiz4HRaMoPC5exAaLrk0"},
{"content":{"body":"> <@bakkot:matrix.org> also what's the use case for the bare `if` one\n\n`if (isSomethingWeWant(expr)): `\nan escape path when pattern is not expressive enough and you want to do a complex check","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also what's the use case for the bare <code>if</code> one</blockquote></mx-reply><code>if (isSomethingWeWant(expr)): </code><br>an escape path when pattern is not expressive enough and you want to do a complex check","m.relates_to":{"m.in_reply_to":{"event_id":"$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> also what's the use case for the bare `if` one\n\n`if (isSomethingWeWant(expr)): `\nan escape path when pattern is not expressive enough and you want to do a complex check","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also what's the use case for the bare <code>if</code> one</blockquote></mx-reply><code>if (isSomethingWeWant(expr)): </code><br>an escape path when pattern is not expressive enough and you want to do a complex check","mimetype":"text/html"}]},"ts":1648487508799,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8VA4d8sshxlW68KYtGo9-PcPOGj8ziq1jqMVbBesu8A"},
{"content":{"body":"maybe actually the thing I want is to be able to bind the name in the `match (e)` part","format":"org.matrix.custom.html","formatted_body":"maybe actually the thing I want is to be able to bind the name in the <code>match (e)</code> part","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"maybe actually the thing I want is to be able to bind the name in the `match (e)` part","mimetype":"text/plain"},{"body":"maybe actually the thing I want is to be able to bind the name in the <code>match (e)</code> part","mimetype":"text/html"}]},"ts":1648487509455,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tLGiLWp6DU88TYCs9X6bn5LrZFvEv_rvIzVqtIg2waE"},
{"content":{"body":"`match (e as x)`, maybe","format":"org.matrix.custom.html","formatted_body":"<code>match (e as x)</code>, maybe","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`match (e as x)`, maybe","mimetype":"text/plain"},{"body":"<code>match (e as x)</code>, maybe","mimetype":"text/html"}]},"ts":1648487513836,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jPXpMgXqnSZInh8LdwV-P_Fw0Bcamjult-ePGXDxCCo"},
{"content":{"body":"you can, just like that. specifically so you can name the matchable when it's complex expression","msgtype":"m.text","org.matrix.msc1767.text":"you can, just like that. specifically so you can name the matchable when it's complex expression"},"ts":1648487519167,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bt26d1jPg3yTIzhtGhOBxxCZBxE91KXp7xWhgRkBU-o"},
{"content":{"body":"imo `default` is also nice because it's a structure that feels not dissimilar from other uses of `default` in the language","format":"org.matrix.custom.html","formatted_body":"imo <code>default</code> is also nice because it's a structure that feels not dissimilar from other uses of <code>default</code> in the language","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"imo `default` is also nice because it's a structure that feels not dissimilar from other uses of `default` in the language","mimetype":"text/plain"},{"body":"imo <code>default</code> is also nice because it's a structure that feels not dissimilar from other uses of <code>default</code> in the language","mimetype":"text/html"}]},"ts":1648487525957,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$ETNy1TiSBusW4DLPgHd1jaTk9g9F6Xkalx9EyGf9tyg"},
{"content":{"body":" * you can, just like that. specifically so you can name the matchable when it's complex expression","m.new_content":{"body":"you can, just like that. specifically so you can name the matchable when it's complex expression","msgtype":"m.text","org.matrix.msc1767.text":"you can, just like that. specifically so you can name the matchable when it's complex expression"},"m.relates_to":{"event_id":"$bt26d1jPg3yTIzhtGhOBxxCZBxE91KXp7xWhgRkBU-o","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * you can, just like that. specifically so you can name the matchable when it's complex expression"},"ts":1648487533387,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B5IkKy8HWiDTVKmq1EnjfQobJ2lpGuMkI95LQ9iEXd4"},
{"content":{"body":"wait, then there should not be `when (identifier)`","format":"org.matrix.custom.html","formatted_body":"wait, then there should not be <code>when (identifier)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"wait, then there should not be `when (identifier)`","mimetype":"text/plain"},{"body":"wait, then there should not be <code>when (identifier)</code>","mimetype":"text/html"}]},"ts":1648487533453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Fw-l-M2q1vwxYFq627gES0RWyA_bJVQr911YgxZocYs"},
{"content":{"body":"it falls out of the ability to do `when ([identifier])`","format":"org.matrix.custom.html","formatted_body":"it falls out of the ability to do <code>when ([identifier])</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it falls out of the ability to do `when ([identifier])`","mimetype":"text/plain"},{"body":"it falls out of the ability to do <code>when ([identifier])</code>","mimetype":"text/html"}]},"ts":1648487546142,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GtMhgNi2TXaGLSmB2B9m6m2uTO7ncZJhxM9M7E8Ns3g"},
{"content":{"body":"that's just `match (e as x) default`","format":"org.matrix.custom.html","formatted_body":"that's just <code>match (e as x) default</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"that's just `match (e as x) default`","mimetype":"text/plain"},{"body":"that's just <code>match (e as x) default</code>","mimetype":"text/html"}]},"ts":1648487549943,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6EjtrAM4954KJRgs_LTrt0-3ep3tRaBImNoEdY97URI"},
{"content":{"body":"what's the case for `when (unused) {}`","format":"org.matrix.custom.html","formatted_body":"what's the case for <code>when (unused) {}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"what's the case for `when (unused) {}`","mimetype":"text/plain"},{"body":"what's the case for <code>when (unused) {}</code>","mimetype":"text/html"}]},"ts":1648487554738,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$0D4Zs3Ur3M9E4-MFrtLT0JKWhtjASBMnbamLgI5YG3I"},
{"content":{"body":"an irrefutable pattern works everywhere, and not being able to use it at the top-level is an inconsistency","msgtype":"m.text","org.matrix.msc1767.text":"an irrefutable pattern works everywhere, and not being able to use it at the top-level is an inconsistency"},"ts":1648487560708,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KWuoBh_ih8CD0PKT_PiGpY0qv-O9tj-rYc2ZGTIqsyg"},
{"content":{"body":"not in the video call atm","msgtype":"m.text","org.matrix.msc1767.text":"not in the video call atm"},"ts":1648487565000,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$OqIl74PjOBs8vxa5aKiIphsaLHszDsubXaJXPfgHNBg"},
{"content":{"body":"> <@devsnek:matrix.org> what's the case for `when (unused) {}`\n\nlike switch `default`, or an \"else\" - it's the last uber-catch-all match clause.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0D4Zs3Ur3M9E4-MFrtLT0JKWhtjASBMnbamLgI5YG3I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>what's the case for <code>when (unused) {}</code></blockquote></mx-reply>like switch <code>default</code>, or an &quot;else&quot; - it's the last uber-catch-all match clause.","m.relates_to":{"m.in_reply_to":{"event_id":"$0D4Zs3Ur3M9E4-MFrtLT0JKWhtjASBMnbamLgI5YG3I"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@devsnek:matrix.org> what's the case for `when (unused) {}`\n\nlike switch `default`, or an \"else\" - it's the last uber-catch-all match clause.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0D4Zs3Ur3M9E4-MFrtLT0JKWhtjASBMnbamLgI5YG3I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>what's the case for <code>when (unused) {}</code></blockquote></mx-reply>like switch <code>default</code>, or an &quot;else&quot; - it's the last uber-catch-all match clause.","mimetype":"text/html"}]},"ts":1648487577656,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VQGp1tDhUoN5s-SdARAnRx7bTc0s4hhYw5gpd2RP-CU"},
{"content":{"body":"not being able to mix irrefutable patterns and a default is also inconsistent","msgtype":"m.text","org.matrix.msc1767.text":"not being able to mix irrefutable patterns and a default is also inconsistent"},"ts":1648487584834,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$op0SIhWG-wdcQVlPOK9SPNRjaWxqgV3AWLBUQi5E2Vs"},
{"content":{"body":"but that's fine","msgtype":"m.text","org.matrix.msc1767.text":"but that's fine"},"ts":1648487587258,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xVDP3LIzRlqD5or556k-vRUbzVd5Pb7NZ5HN3wg6ZOo"},
{"content":{"body":"oh right","msgtype":"m.text","org.matrix.msc1767.text":"oh right"},"ts":1648487592651,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$D4eap0qM7tsiuUbnnGcWYZSIrhokTA-Emn3NBzu8ZPc"},
{"content":{"body":"its when not match","msgtype":"m.text","org.matrix.msc1767.text":"its when not match"},"ts":1648487595434,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$jslLWbUa5JALaQ3Euy-fcopE0d5uYBNtUNqyo3uerP0"},
{"content":{"body":"I prefer the inconsistency of not allowing both `match (e as x)` and `when(x)`","format":"org.matrix.custom.html","formatted_body":"I prefer the inconsistency of not allowing both <code>match (e as x)</code> and <code>when(x)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I prefer the inconsistency of not allowing both `match (e as x)` and `when(x)`","mimetype":"text/plain"},{"body":"I prefer the inconsistency of not allowing both <code>match (e as x)</code> and <code>when(x)</code>","mimetype":"text/html"}]},"ts":1648487596574,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aybd8EO6vWW5fkqN7z0uTAkUy5XWXQNq8OzOJFELbEU"},
{"content":{"body":"i am caught up now","msgtype":"m.text","org.matrix.msc1767.text":"i am caught up now"},"ts":1648487598525,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$rgbhKYNvKQ29mk4GW-bhMDFmKpwc7RpFXzR-Uq-0OP4"},
{"content":{"body":"you can, with `when (foo)` as the last clause","format":"org.matrix.custom.html","formatted_body":"you can, with <code>when (foo)</code> as the last clause","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can, with `when (foo)` as the last clause","mimetype":"text/plain"},{"body":"you can, with <code>when (foo)</code> as the last clause","mimetype":"text/html"}]},"ts":1648487602012,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-XNUdAcuY9b8yX1giCSaLliUZYO7uQldlZ4Bth-RuMA"},
{"content":{"body":"i think eliding makes sense","msgtype":"m.text","org.matrix.msc1767.text":"i think eliding makes sense"},"ts":1648487607847,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$99Usc4DQunRkUQnDpeGuxF7QiQimfJ8q7qbXUaXS1Wg"},
{"content":{"body":"`when {}`","format":"org.matrix.custom.html","formatted_body":"<code>when {}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`when {}`","mimetype":"text/plain"},{"body":"<code>when {}</code>","mimetype":"text/html"}]},"ts":1648487616172,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$6ujpVyF4LZaRf0r6_gSJaKgGNi-mFEitChd1KEqLSkc"},
{"content":{"body":"`when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","format":"org.matrix.custom.html","formatted_body":"<code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","mimetype":"text/plain"},{"body":"<code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","mimetype":"text/html"}]},"ts":1648487666259,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kcJf5VVtLmYtukdmpi5i5RwDDS-GH9c_UADxo5kQ16c"},
{"content":{"body":"> <@bakkot:matrix.org> I'd just write `when (_) if (whatever)`\n\nyeah `when(_) if (expr)` give you a temporally binding of the matched expression when it is not a simple identifier. 👀 this is an interesting case","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HHA7-J8qsIy16Y6CB3cEtJINpVMa9tjdq0JrjUj05aI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I'd just write <code>when (_) if (whatever)</code></blockquote></mx-reply>yeah <code>when(_) if (expr)</code> give you a temporally binding of the matched expression when it is not a simple identifier. 👀 this is an interesting case","m.relates_to":{"m.in_reply_to":{"event_id":"$HHA7-J8qsIy16Y6CB3cEtJINpVMa9tjdq0JrjUj05aI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> I'd just write `when (_) if (whatever)`\n\nyeah `when(_) if (expr)` give you a temporally binding of the matched expression when it is not a simple identifier. 👀 this is an interesting case","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$HHA7-J8qsIy16Y6CB3cEtJINpVMa9tjdq0JrjUj05aI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I'd just write <code>when (_) if (whatever)</code></blockquote></mx-reply>yeah <code>when(_) if (expr)</code> give you a temporally binding of the matched expression when it is not a simple identifier. 👀 this is an interesting case","mimetype":"text/html"}]},"ts":1648487671107,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$IjxY6IVGU9__1c5LUxnKNl4btqZjJ3DzOvU9xYy0n0w"},
{"content":{"body":" * `when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","format":"org.matrix.custom.html","formatted_body":" * <code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","m.new_content":{"body":"`when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","format":"org.matrix.custom.html","formatted_body":"<code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","mimetype":"text/plain"},{"body":"<code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$kcJf5VVtLmYtukdmpi5i5RwDDS-GH9c_UADxo5kQ16c","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `when {` is a reasonable alternative spelling for `default {`, and that can and should be bikeshedded during stage 2","mimetype":"text/plain"},{"body":" * <code>when {</code> is a reasonable alternative spelling for <code>default {</code>, and that can and should be bikeshedded during stage 2","mimetype":"text/html"}]},"ts":1648487672402,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bjuBnS2UUEo-tR4FDJ3MNKwe5vcGCsyL3PR_iRKOiWI"},
{"content":{"body":"oh god are we going to have both `Symbol.match` and `Symbol.matcher`","format":"org.matrix.custom.html","formatted_body":"oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"oh god are we going to have both `Symbol.match` and `Symbol.matcher`","mimetype":"text/plain"},{"body":"oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code>","mimetype":"text/html"}]},"ts":1648487731203,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o"},
{"content":{"body":"`Symbol.match` was a mistake","format":"org.matrix.custom.html","formatted_body":"<code>Symbol.match</code> was a mistake","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Symbol.match` was a mistake","mimetype":"text/plain"},{"body":"<code>Symbol.match</code> was a mistake","mimetype":"text/html"}]},"ts":1648487735545,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pwXKh-jleYjoAfnSc3geqgasq6UT4kXfyL9fqq1MCJ8"},
{"content":{"body":"are these slides on the protocol new? I didn't see these","msgtype":"m.text","org.matrix.msc1767.text":"are these slides on the protocol new? I didn't see these"},"ts":1648487740014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$lfh1IqwFGi_DyGFCMUKwIuHa7J0aV760ufsMv9p0SFo"},
{"content":{"body":"> <@bakkot:matrix.org> `Symbol.match` was a mistake\n\nyes it was","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pwXKh-jleYjoAfnSc3geqgasq6UT4kXfyL9fqq1MCJ8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>Symbol.match</code> was a mistake</blockquote></mx-reply>yes it was","m.relates_to":{"m.in_reply_to":{"event_id":"$pwXKh-jleYjoAfnSc3geqgasq6UT4kXfyL9fqq1MCJ8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> `Symbol.match` was a mistake\n\nyes it was","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pwXKh-jleYjoAfnSc3geqgasq6UT4kXfyL9fqq1MCJ8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>Symbol.match</code> was a mistake</blockquote></mx-reply>yes it was","mimetype":"text/html"}]},"ts":1648487747649,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1i9TpIR_W1OBQL4oSr7gxKPi2iJVl0clLCowojlWfkk"},
{"content":{"body":"> <@bakkot:matrix.org> `match (e as x)`, maybe\n\nwe have that in previous design. we think it's useful but can also be added in the future `match (e) as x {}`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jPXpMgXqnSZInh8LdwV-P_Fw0Bcamjult-ePGXDxCCo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>match (e as x)</code>, maybe</blockquote></mx-reply>we have that in previous design. we think it's useful but can also be added in the future <code>match (e) as x {}</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$jPXpMgXqnSZInh8LdwV-P_Fw0Bcamjult-ePGXDxCCo"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> `match (e as x)`, maybe\n\nwe have that in previous design. we think it's useful but can also be added in the future `match (e) as x {}`","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jPXpMgXqnSZInh8LdwV-P_Fw0Bcamjult-ePGXDxCCo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>match (e as x)</code>, maybe</blockquote></mx-reply>we have that in previous design. we think it's useful but can also be added in the future <code>match (e) as x {}</code>","mimetype":"text/html"}]},"ts":1648487750604,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BM8GD1kmACJjIQhk8nXEoZ2OS-kkTf-Pif19xa6hM2o"},
{"content":{"body":"> <@bakkot:matrix.org> oh god are we going to have both `Symbol.match` and `Symbol.matcher`\n\nhappy to bikeshed the symbol name; the overlap sucks","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code></blockquote></mx-reply>happy to bikeshed the symbol name; the overlap sucks","m.relates_to":{"m.in_reply_to":{"event_id":"$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> oh god are we going to have both `Symbol.match` and `Symbol.matcher`\n\nhappy to bikeshed the symbol name; the overlap sucks","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code></blockquote></mx-reply>happy to bikeshed the symbol name; the overlap sucks","mimetype":"text/html"}]},"ts":1648487755956,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rjaDwexmf8Xt-y98tyTMaE7ZQqiI1Z5wRUZlPLPnLXA"},
{"content":{"body":"> <@jackworks:matrix.org> we have that in previous design. we think it's useful but can also be added in the future `match (e) as x {}`\n\ni think we have `match (e) as x {` in the current proposal (or maybe `match (e as x) {`, i forget which we agreed on)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BM8GD1kmACJjIQhk8nXEoZ2OS-kkTf-Pif19xa6hM2o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>we have that in previous design. we think it's useful but can also be added in the future <code>match (e) as x {}</code></blockquote></mx-reply>i think we have <code>match (e) as x {</code> in the current proposal (or maybe <code>match (e as x) {</code>, i forget which we agreed on)","m.relates_to":{"m.in_reply_to":{"event_id":"$BM8GD1kmACJjIQhk8nXEoZ2OS-kkTf-Pif19xa6hM2o"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> we have that in previous design. we think it's useful but can also be added in the future `match (e) as x {}`\n\ni think we have `match (e) as x {` in the current proposal (or maybe `match (e as x) {`, i forget which we agreed on)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$BM8GD1kmACJjIQhk8nXEoZ2OS-kkTf-Pif19xa6hM2o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>we have that in previous design. we think it's useful but can also be added in the future <code>match (e) as x {}</code></blockquote></mx-reply>i think we have <code>match (e) as x {</code> in the current proposal (or maybe <code>match (e as x) {</code>, i forget which we agreed on)","mimetype":"text/html"}]},"ts":1648487791369,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$a8wStv5ixxSQKc_3TZNtxo1Evmb3mDMqiBcChLESg5g"},
{"content":{"body":"excited for us to say Symbol.matcher was a mistake in 6 years","msgtype":"m.text","org.matrix.msc1767.text":"excited for us to say Symbol.matcher was a mistake in 6 years"},"ts":1648487807244,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$RyUTzosOZioVUxNicZ5nooKTZJZ1P0CEObsiq4cNJag"},
{"content":{"body":"> <@devsnek:matrix.org> excited for us to say Symbol.matcher was a mistake in 6 years\n\nSymbol.match","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24RyUTzosOZioVUxNicZ5nooKTZJZ1P0CEObsiq4cNJag\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>excited for us to say Symbol.matcher was a mistake in 6 years</blockquote></mx-reply>Symbol.match","m.relates_to":{"m.in_reply_to":{"event_id":"$RyUTzosOZioVUxNicZ5nooKTZJZ1P0CEObsiq4cNJag"}},"msgtype":"m.text"},"ts":1648487846347,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$bhFwQFQLcHKgpWH3CpFivyMO1_fOAcR7wPd4Q5kZZvE"},
{"content":{"body":"`Symbol.decons`","format":"org.matrix.custom.html","formatted_body":"<code>Symbol.decons</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`Symbol.decons`","mimetype":"text/plain"},{"body":"<code>Symbol.decons</code>","mimetype":"text/html"}]},"ts":1648487864241,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CIVbSZgIGzpqzxFWmSetIyM31nuEEOGEAPyQrd49hJY"},
{"content":{"body":"do any of the built-in prototypes implement the matcher protocol?","msgtype":"m.text","org.matrix.msc1767.text":"do any of the built-in prototypes implement the matcher protocol?"},"ts":1648487885120,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$RfIbgDu-S7-rMsR3h_zsYB8_0ovhn_ft8igJbBRKvMA"},
{"content":{"body":"> <@bakkot:matrix.org> oh god are we going to have both `Symbol.match` and `Symbol.matcher`\n\n😂 yeah and we cannot bikeshedding on this because people will always try `Symbol.match` whatever we named `Symbol.matcher` to","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code></blockquote></mx-reply>😂 yeah and we cannot bikeshedding on this because people will always try <code>Symbol.match</code> whatever we named <code>Symbol.matcher</code> to","m.relates_to":{"m.in_reply_to":{"event_id":"$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> oh god are we going to have both `Symbol.match` and `Symbol.matcher`\n\n😂 yeah and we cannot bikeshedding on this because people will always try `Symbol.match` whatever we named `Symbol.matcher` to","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uaSswzt71vWjtG46H6sDmBwXKXXGnWZ3z-kkYmlyk4o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>oh god are we going to have both <code>Symbol.match</code> and <code>Symbol.matcher</code></blockquote></mx-reply>😂 yeah and we cannot bikeshedding on this because people will always try <code>Symbol.match</code> whatever we named <code>Symbol.matcher</code> to","mimetype":"text/html"}]},"ts":1648487897161,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oLzp6hJIGT9-5jvkzs3GtOfOH-HvBiW8yB1Rhqs2sQc"},
{"content":{"body":"I dislike this brand checking part more than any other part of the proposal","msgtype":"m.text","org.matrix.msc1767.text":"I dislike this brand checking part more than any other part of the proposal"},"ts":1648487905661,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ElJzCYe5fv9JiMNCaiD6tA8zOMnCkK85lCfDL16EYtQ"},
{"content":{"body":"> <@michaelficarra:matrix.org> do any of the built-in prototypes implement the matcher protocol?\n\nimo many of them will, as part of this proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$RfIbgDu-S7-rMsR3h_zsYB8_0ovhn_ft8igJbBRKvMA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>do any of the built-in prototypes implement the matcher protocol?</blockquote></mx-reply>imo many of them will, as part of this proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$RfIbgDu-S7-rMsR3h_zsYB8_0ovhn_ft8igJbBRKvMA"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@michaelficarra:matrix.org> do any of the built-in prototypes implement the matcher protocol?\n\nimo many of them will, as part of this proposal","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$RfIbgDu-S7-rMsR3h_zsYB8_0ovhn_ft8igJbBRKvMA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>do any of the built-in prototypes implement the matcher protocol?</blockquote></mx-reply>imo many of them will, as part of this proposal","mimetype":"text/html"}]},"ts":1648487907396,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WthP6sESEcYCPSQLQs12grLA0fF_Vapkdl98wOduzQc"},
{"content":{"body":"per this slide","msgtype":"m.text","org.matrix.msc1767.text":"per this slide"},"ts":1648487912544,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EXXnwKFStjdYC8dJ5R0beac912lCiAQTQmvUtGYukDI"},
{"content":{"body":"these are constructors, not prototypes","msgtype":"m.text","org.matrix.msc1767.text":"these are constructors, not prototypes"},"ts":1648487923698,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$M1sPCdSPo1OQBK_9d0lRxkE_SalhvXdZiLOvEbVfQGo"},
{"content":{"body":"ljharb: that's on the constructor, not prototype","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: that's on the constructor, not prototype","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: that's on the constructor, not prototype","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: that's on the constructor, not prototype","mimetype":"text/html"}]},"ts":1648487927850,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZEMLA1liBIEytjA4dp1f6vJQHpODeAjj1SxtY643YqM"},
{"content":{"body":"oh sorry","msgtype":"m.text","org.matrix.msc1767.text":"oh sorry"},"ts":1648487936561,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sFp3G2XTYQ2sPHWs0c_1C0eWHQw5uePKyizJDzJWzkU"},
{"content":{"body":"no, i wouldn't expect builtin prototypes to have it","msgtype":"m.text","org.matrix.msc1767.text":"no, i wouldn't expect builtin prototypes to have it"},"ts":1648487943228,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t4nkp36V7HQmb9RcVMTNNgX4qX7bwpnEwMJzmIJdeJ4"},
{"content":{"body":" * no, i wouldn't expect builtin prototypes to have it","m.new_content":{"body":"no, i wouldn't expect builtin prototypes to have it","msgtype":"m.text","org.matrix.msc1767.text":"no, i wouldn't expect builtin prototypes to have it"},"m.relates_to":{"event_id":"$t4nkp36V7HQmb9RcVMTNNgX4qX7bwpnEwMJzmIJdeJ4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * no, i wouldn't expect builtin prototypes to have it"},"ts":1648487946955,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pR3tnsDMaEZXCSzH3NGkPKcxoaDotm9f_MMcmw-qYys"},
{"content":{"body":"do you have something in mind?","msgtype":"m.text","org.matrix.msc1767.text":"do you have something in mind?"},"ts":1648487950941,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GyNFT56bBCbL-YjE23xBfgPwKD1DTVLFflDWs6cmOmU"},
{"content":{"body":"yeah, what if I put a regexp in there?","msgtype":"m.text","org.matrix.msc1767.text":"yeah, what if I put a regexp in there?"},"ts":1648487960004,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZN06d5wWG9QAP7eiMXa7_URV3ZAWBX8qRQK8hKEh-p4"},
{"content":{"body":"I claim `and` and `or` have an obvious precedence relationship","format":"org.matrix.custom.html","formatted_body":"I claim <code>and</code> and <code>or</code> have an obvious precedence relationship","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I claim `and` and `or` have an obvious precedence relationship","mimetype":"text/plain"},{"body":"I claim <code>and</code> and <code>or</code> have an obvious precedence relationship","mimetype":"text/html"}]},"ts":1648487968830,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Mr-Ipnsk-y66PZ10fDTeECebURqdgk7uwgXn4yLePds"},
{"content":{"body":"or at least a very well-precedented one","msgtype":"m.text","org.matrix.msc1767.text":"or at least a very well-precedented one"},"ts":1648487973308,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D1joqZSn3lGXRkWrosUrqaV83Rc3qDtWpO7yaCm0Ku8"},
{"content":{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","format":"org.matrix.custom.html","formatted_body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/plain"},{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$ZN06d5wWG9QAP7eiMXa7_URV3ZAWBX8qRQK8hKEh-p4"}}},"ts":1648487977681,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VTITl65zXJurwyTh6NAE_qOKDi0A9xubk18nSUrA-aQ"},
{"content":{"body":"where do I find the information on what does and what doesn't?","msgtype":"m.text","org.matrix.msc1767.text":"where do I find the information on what does and what doesn't?"},"ts":1648487994461,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4P9tcdR45tErfpK-hRYZZYrUDXLrU_7mDewXERHrgbE"},
{"content":{"body":"> <@michaelficarra:matrix.org> yeah, what if I put a regexp in there?\n\n * ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZN06d5wWG9QAP7eiMXa7_URV3ZAWBX8qRQK8hKEh-p4?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>yeah, what if I put a regexp in there?</blockquote></mx-reply> * ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","m.new_content":{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","format":"org.matrix.custom.html","formatted_body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/plain"},{"body":"ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$VTITl65zXJurwyTh6NAE_qOKDi0A9xubk18nSUrA-aQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@michaelficarra:matrix.org> yeah, what if I put a regexp in there?\n\n * ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ZN06d5wWG9QAP7eiMXa7_URV3ZAWBX8qRQK8hKEh-p4?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>yeah, what if I put a regexp in there?</blockquote></mx-reply> * ah right. yes, regexes definitely do implement it (with the same logic the literal patterns apply)","mimetype":"text/html"}]},"ts":1648487995657,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K748-Wxdf_hfjA-cOkgJyde8VgItZd2xVh03himirDA"},
{"content":{"body":"in theory it's all in the readme","msgtype":"m.text","org.matrix.msc1767.text":"in theory it's all in the readme"},"ts":1648488003379,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lAMy_LLWk3WyumtuWx9gu0q7M6T6YKI6hbVpBkJhgXA"},
{"content":{"body":"during stage 2 it'll all end up in the spec","msgtype":"m.text","org.matrix.msc1767.text":"during stage 2 it'll all end up in the spec"},"ts":1648488017919,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZAaBKkQTQu4ehkz6KAYC5RJmMi2TvG22AEtUH2hZkcA"},
{"content":{"body":"> <@bakkot:matrix.org> `Symbol.decons`\n\nIf we take rbuckton 's unapply proposal to replace the custom matcher\n\n```js\nconst Some(x) = val\n\nmatch (val) {\n    when (Some(x)): x\n}\n```\nand we first teach people this feature in the deconstructing instead of pattern matching, we can be a little confortable than let people figuring out `match` vs `matcher` which is the symbol they need🤔","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CIVbSZgIGzpqzxFWmSetIyM31nuEEOGEAPyQrd49hJY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>Symbol.decons</code></blockquote></mx-reply><p>If we take <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply proposal to replace the custom matcher</p>\n<pre><code class=\"language-js\">const Some(x) = val\n\nmatch (val) {\n    when (Some(x)): x\n}\n</code></pre>\n<p>and we first teach people this feature in the deconstructing instead of pattern matching, we can be a little confortable than let people figuring out <code>match</code> vs <code>matcher</code> which is the symbol they need🤔</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$CIVbSZgIGzpqzxFWmSetIyM31nuEEOGEAPyQrd49hJY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> `Symbol.decons`\n\nIf we take rbuckton 's unapply proposal to replace the custom matcher\n\n```js\nconst Some(x) = val\n\nmatch (val) {\n    when (Some(x)): x\n}\n```\nand we first teach people this feature in the deconstructing instead of pattern matching, we can be a little confortable than let people figuring out `match` vs `matcher` which is the symbol they need🤔","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CIVbSZgIGzpqzxFWmSetIyM31nuEEOGEAPyQrd49hJY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>Symbol.decons</code></blockquote></mx-reply><p>If we take <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply proposal to replace the custom matcher</p>\n<pre><code class=\"language-js\">const Some(x) = val\n\nmatch (val) {\n    when (Some(x)): x\n}\n</code></pre>\n<p>and we first teach people this feature in the deconstructing instead of pattern matching, we can be a little confortable than let people figuring out <code>match</code> vs <code>matcher</code> which is the symbol they need🤔</p>\n","mimetype":"text/html"}]},"ts":1648488047996,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tl-Ju7ONh2860zJwYvNVQXNgDrBtdD5philtVLDxizQ"},
{"content":{"body":"Michael Ficarra:  https://github.com/tc39/proposal-pattern-matching#regex-pattern is the literal pattern; https://github.com/tc39/proposal-pattern-matching#bindings-from-regex-patterns-with-named-capture-groups says \"Regexes (both literals and references inside interpolation patterns) implement the custom matcher protocol\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>:  https://github.com/tc39/proposal-pattern-matching#regex-pattern is the literal pattern; https://github.com/tc39/proposal-pattern-matching#bindings-from-regex-patterns-with-named-capture-groups says &quot;Regexes (both literals and references inside interpolation patterns) implement the custom matcher protocol&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Michael Ficarra:  https://github.com/tc39/proposal-pattern-matching#regex-pattern is the literal pattern; https://github.com/tc39/proposal-pattern-matching#bindings-from-regex-patterns-with-named-capture-groups says \"Regexes (both literals and references inside interpolation patterns) implement the custom matcher protocol\"","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>:  https://github.com/tc39/proposal-pattern-matching#regex-pattern is the literal pattern; https://github.com/tc39/proposal-pattern-matching#bindings-from-regex-patterns-with-named-capture-groups says &quot;Regexes (both literals and references inside interpolation patterns) implement the custom matcher protocol&quot;","mimetype":"text/html"}]},"ts":1648488065428,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VboIfk5DM4lCOQZx3unDF5SmH3ZSe2rFuw5ofeUN-v4"},
{"content":{"body":"wait, are these actually _stacked_ bindings","format":"org.matrix.custom.html","formatted_body":"wait, are these actually <em>stacked</em> bindings","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"wait, are these actually _stacked_ bindings","mimetype":"text/plain"},{"body":"wait, are these actually <em>stacked</em> bindings","mimetype":"text/html"}]},"ts":1648488079874,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TpCqD2GIwAGCBvxzs25CLjB3mC0fiLv2eFxm5TWiiSM"},
{"content":{"body":"like if I leak one with an arrow in a `${}` does that refer to the outer one","format":"org.matrix.custom.html","formatted_body":"like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like if I leak one with an arrow in a `${}` does that refer to the outer one","mimetype":"text/plain"},{"body":"like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","mimetype":"text/html"}]},"ts":1648488087962,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LZAgH4fBPBj1BVUf_kZZ5mgjpcvayT2nljhlAac4O8o"},
{"content":{"body":" * like if I leak one with an arrow in a `${}` does that refer to the outer one","format":"org.matrix.custom.html","formatted_body":" * like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","m.new_content":{"body":"like if I leak one with an arrow in a `${}` does that refer to the outer one","format":"org.matrix.custom.html","formatted_body":"like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like if I leak one with an arrow in a `${}` does that refer to the outer one","mimetype":"text/plain"},{"body":"like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$LZAgH4fBPBj1BVUf_kZZ5mgjpcvayT2nljhlAac4O8o","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * like if I leak one with an arrow in a `${}` does that refer to the outer one","mimetype":"text/plain"},{"body":" * like if I leak one with an arrow in a <code>${}</code> does that refer to the outer one","mimetype":"text/html"}]},"ts":1648488095021,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aSBzdnfvmA976glDdhayFQenr4R9l04N55sQo0F3kf4"},
{"content":{"body":"after `match ([0, 1, 2]) when `([a, ${(probe = () => a, 1)}, a]) {}`: if I call `probe`, does it see `0` or `1`","format":"org.matrix.custom.html","formatted_body":"after <code>match ([0, 1, 2]) when </code>([a, ${(probe = () =&gt; a, 1)}, a]) {}<code>: if I call </code>probe<code>, does it see </code>0<code>or</code>1`","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"after `match ([0, 1, 2]) when `([a, ${(probe = () => a, 1)}, a]) {}`: if I call `probe`, does it see `0` or `1`","mimetype":"text/plain"},{"body":"after <code>match ([0, 1, 2]) when </code>([a, ${(probe = () =&gt; a, 1)}, a]) {}<code>: if I call </code>probe<code>, does it see </code>0<code>or</code>1`","mimetype":"text/html"}]},"ts":1648488140884,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eTWznzgs4BJAWZS7e3WMquPjr8QJk-e-w1UQbG7yvxw"},
{"content":{"body":"ljharb: okay that answers the question for `RegExp.prototype`, am I to assume that no other built-in prototypes implement it?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: okay that answers the question for <code>RegExp.prototype</code>, am I to assume that no other built-in prototypes implement it?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: okay that answers the question for `RegExp.prototype`, am I to assume that no other built-in prototypes implement it?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: okay that answers the question for <code>RegExp.prototype</code>, am I to assume that no other built-in prototypes implement it?","mimetype":"text/html"}]},"ts":1648488161544,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$0Fk-xldiVRiJZ_hnvom5lgB93JcnWggoBdnyhuMGgZ0"},
{"content":{"body":"yes, if you have others in mind, please file an issue","msgtype":"m.text","org.matrix.msc1767.text":"yes, if you have others in mind, please file an issue"},"ts":1648488168570,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CfWlq_T1IxMCR3QPN-7rogCceCtAnmVT4RZkymhlGjo"},
{"content":{"body":" * yes, if you have others in mind, please file an issue","m.new_content":{"body":"yes, if you have others in mind, please file an issue","msgtype":"m.text","org.matrix.msc1767.text":"yes, if you have others in mind, please file an issue"},"m.relates_to":{"event_id":"$CfWlq_T1IxMCR3QPN-7rogCceCtAnmVT4RZkymhlGjo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * yes, if you have others in mind, please file an issue"},"ts":1648488179365,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tO_rKDmHF5fuLD32l1ngroqSKIx5R7VRmWV-gJ9EFkg"},
{"content":{"body":"hmm Isn't tagged template pattern are banned?","msgtype":"m.text","org.matrix.msc1767.text":"hmm Isn't tagged template pattern are banned?"},"ts":1648488240479,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$51D1FqLfFFNd2MgBR4k2UoLVddZlg0zAgM_k4F3bGTI"},
{"content":{"body":"```js\nwhen (tag`x`): expr\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">when (tag`x`): expr\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nwhen (tag`x`): expr\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">when (tag`x`): expr\n</code></pre>\n","mimetype":"text/html"}]},"ts":1648488250358,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mKRW7f01NqF8mUI4nos6Kg2_YOuD-9sEtOu8QPVykJw"},
{"content":{"body":"i remember this is invalid","msgtype":"m.text","org.matrix.msc1767.text":"i remember this is invalid"},"ts":1648488256932,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BdiEylwbz9-dU5wgEal_MVgtDrB8IM3MtLpVV9lHEGk"},
{"content":{"body":"currently yes","msgtype":"m.text","org.matrix.msc1767.text":"currently yes"},"ts":1648488258097,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bf9Sev1NmBL_YToDwxQUhNveNKo13o8vbMeanQjEpyE"},
{"content":{"body":"bindings should be reusable across `or` alternatives, definitely","format":"org.matrix.custom.html","formatted_body":"bindings should be reusable across <code>or</code> alternatives, definitely","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bindings should be reusable across `or` alternatives, definitely","mimetype":"text/plain"},{"body":"bindings should be reusable across <code>or</code> alternatives, definitely","mimetype":"text/html"}]},"ts":1648488334074,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tydBxzZIzR8r53PXwyq3NynNosM5istqxLwS9RQCDNg"},
{"content":{"body":"but that does not mean they need to be reusable not across `or` alternatives","format":"org.matrix.custom.html","formatted_body":"but that does not mean they need to be reusable not across <code>or</code> alternatives","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but that does not mean they need to be reusable not across `or` alternatives","mimetype":"text/plain"},{"body":"but that does not mean they need to be reusable not across <code>or</code> alternatives","mimetype":"text/html"}]},"ts":1648488348177,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DOwX8D_fEF2ptXztvEOenmj_uwGoWAAiuN8zPAOFXUc"},
{"content":{"body":"related: https://github.com/bakkot/proposal-duplicate-named-capturing-groups","msgtype":"m.text","org.matrix.msc1767.text":"related: https://github.com/bakkot/proposal-duplicate-named-capturing-groups"},"ts":1648488457730,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uNjjJEsvQXSNQTSVALN4THhqQYvh91VFHKyRcJkK9bU"},
{"content":{"body":"calling this \"initial spec text\" is somewhat generous","msgtype":"m.text","org.matrix.msc1767.text":"calling this \"initial spec text\" is somewhat generous"},"ts":1648488912509,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3ZqUK9XMNfEXE22BsOoZhh3EY7Mp_loNmbPjImPvgvM"},
{"content":{"body":"our bar for initial spec text is historically VERY low, and I'm okay with that","msgtype":"m.text","org.matrix.msc1767.text":"our bar for initial spec text is historically VERY low, and I'm okay with that"},"ts":1648488939855,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9HM7z9zn4uNmNZ7DNRfY_NqFZY70zHu2Ux225_AHJfE"},
{"content":{"body":"as long as the explainer is fleshed out enough, of course","msgtype":"m.text","org.matrix.msc1767.text":"as long as the explainer is fleshed out enough, of course"},"ts":1648488953699,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$30Sepyzxbtq__2gmNItAlLUFaqmEH88H0HYfvGTfoP4"},
{"content":{"body":"I think it is higher than this","msgtype":"m.text","org.matrix.msc1767.text":"I think it is higher than this"},"ts":1648488954357,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7TO_9DfMFmiln_JfAWGcyDbRGXKl8l9KMmplYbQVBPk"},
{"content":{"body":"the process document is very not clear on this","msgtype":"m.text","org.matrix.msc1767.text":"the process document is very not clear on this"},"ts":1648488980895,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_B-OkSvRfkrucLGESsWmxRMv5onwI9OMJWRxRdFNN_Q"},
{"content":{"body":"if there's a higher bar then it should be codified there.","msgtype":"m.text","org.matrix.msc1767.text":"if there's a higher bar then it should be codified there."},"ts":1648488987850,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mA5cujoDIL_Rxb6QOKsgrcIZbjyEj1ezgaa4Nnx_2JM"},
{"content":{"body":"https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal"},"ts":1648488992813,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$z2B76tioOHDum8QnAw-2biVEv_t8iVNglKWrVWuuDDE"},
{"content":{"body":"we've talked about it in plenary before and opted not to set a minimum","msgtype":"m.text","org.matrix.msc1767.text":"we've talked about it in plenary before and opted not to set a minimum"},"ts":1648489010398,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$8z-DoJQ9mjq5YKfX2hSWhpS-A3SlFTI-7qNSG0orvT8"},
{"content":{"body":"waldemar: reviewing spec text isn't necessary for stage 2. it's necessary for stage 3.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: reviewing spec text isn't necessary for stage 2. it's necessary for stage 3.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: reviewing spec text isn't necessary for stage 2. it's necessary for stage 3.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: reviewing spec text isn't necessary for stage 2. it's necessary for stage 3.","mimetype":"text/html"}]},"ts":1648489099942,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$0777A-dS-WZGabeqKPT86obQ5GQWiDaVKo4xazUC6Go"},
{"content":{"body":"ljharb shu TabAtkins I think we can have a direction to achieve consensus for the current direction this proposal is leading towards and come back in the next meeting with the spec draft updated.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> I think we can have a direction to achieve consensus for the current direction this proposal is leading towards and come back in the next meeting with the spec draft updated.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb shu TabAtkins I think we can have a direction to achieve consensus for the current direction this proposal is leading towards and come back in the next meeting with the spec draft updated.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> I think we can have a direction to achieve consensus for the current direction this proposal is leading towards and come back in the next meeting with the spec draft updated.","mimetype":"text/html"}]},"ts":1648489109114,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$goBgDHCybWAbRy5KJWhERkSJFetbPmiB9e254ESqErU"},
{"content":{"body":"setting the direction is not exactly a stage advancement but we can agree with the current direction, right?","msgtype":"m.text","org.matrix.msc1767.text":"setting the direction is not exactly a stage advancement but we can agree with the current direction, right?"},"ts":1648489128222,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$s_KCpdvHgc6X9pW2tWB1l5ZSB8-ymO-oFLVK_oQ3UBU"},
{"content":{"body":"sure. and the process issue waldemar is bringing up is only really relevant if that's the only potential \"blocker\" for stage 2","msgtype":"m.text","org.matrix.msc1767.text":"sure. and the process issue waldemar is bringing up is only really relevant if that's the only potential \"blocker\" for stage 2"},"ts":1648489145459,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gp7-ME0s42QyyNvwO5bzcMVqJe8Phm-_Ihc_wSnDitU"},
{"content":{"body":"I oppose asking the champions to write complete spec text for this proposal before it reaches stage 2","msgtype":"m.text","org.matrix.msc1767.text":"I oppose asking the champions to write complete spec text for this proposal before it reaches stage 2"},"ts":1648489150400,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qV2iKdWHjSMwlGPhLC8ny1EV_UjLmYCfL5rR8by8i7M"},
{"content":{"body":" * https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal","m.new_content":{"body":"https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal"},"m.relates_to":{"event_id":"$z2B76tioOHDum8QnAw-2biVEv_t8iVNglKWrVWuuDDE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * https://github.com/tc39/proposal-pattern-matching/pull/251\nNOTE: Part 1 (adding interpolation pattern back to deconstruction) is NOT a nececssary part of the proposal"},"ts":1648489158488,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mCt8jvIEngwAyLz1-adl3yjDBqRZG4-SP1hZ33es0xo"},
{"content":{"body":"i don't think complete spec text is being asked for","msgtype":"m.text","org.matrix.msc1767.text":"i don't think complete spec text is being asked for"},"ts":1648489165738,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jn8RFnEb6d_fIFqL_-1e9LbdhswYcTvV2a1cBxHtg1Q"},
{"content":{"body":"the explainer is detailed enough","msgtype":"m.text","org.matrix.msc1767.text":"the explainer is detailed enough"},"ts":1648489168047,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NILKVCYY4nusmmXYowYUj45e3P2SVqVYfA7b7PJXoTM"},
{"content":{"body":"i think there's value in the exercise of writing out a grammar for a very syntax-heavy proposal","msgtype":"m.text","org.matrix.msc1767.text":"i think there's value in the exercise of writing out a grammar for a very syntax-heavy proposal"},"ts":1648489191373,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$or0ZoZwXeOfTTsLnJ-QXwyiyVt04aUYpmgsbxp4WDHc"},
{"content":{"body":"the fact that it hasn't been done is a fair objection imo","msgtype":"m.text","org.matrix.msc1767.text":"the fact that it hasn't been done is a fair objection imo"},"ts":1648489200159,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$F8FdYeKRdh0cyrEkMfvBEivo45bj5MKT-af7c8wnTzc"},
{"content":{"body":"I also still have open questions about things, but they will not torpedo the proposal, so they can be figured out during stage 2","msgtype":"m.text","org.matrix.msc1767.text":"I also still have open questions about things, but they will not torpedo the proposal, so they can be figured out during stage 2"},"ts":1648489240486,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wE1X0jG6OknYtVKyIt-iSZf0uuZ204U3cvsYQH1PTvM"},
{"content":{"body":"if you think the general direction of the proposal is wrong, fair, object to advancement","msgtype":"m.text","org.matrix.msc1767.text":"if you think the general direction of the proposal is wrong, fair, object to advancement"},"ts":1648489265721,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$z27b0DTud6VsOPZ6hHFpNn3nJLTBCJrbLSkLaoNwzgs"},
{"content":{"body":"but details are meant to be figured out and codified during stage 2","msgtype":"m.text","org.matrix.msc1767.text":"but details are meant to be figured out and codified during stage 2"},"ts":1648489275589,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WyCdtPIcwlHTLAmAIr8fp_4917cLyjurxFABq_ep4vI"},
{"content":{"body":"i also reject the notion that \"initial spec text\" means any text document that's published as a spec draft","msgtype":"m.text","org.matrix.msc1767.text":"i also reject the notion that \"initial spec text\" means any text document that's published as a spec draft"},"ts":1648489291169,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$FUreY3nAqq5m6zu0hDS8lBF1a1fYLKtTqk29ctEAdcg"},
{"content":{"body":"> <@shuyuguo:matrix.org> i think there's value in the exercise of writing out a grammar for a very syntax-heavy proposal\n\nyeah we have a spec syntax PR 😂 i think it's already covered the current shape of proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$or0ZoZwXeOfTTsLnJ-QXwyiyVt04aUYpmgsbxp4WDHc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i think there&#39;s value in the exercise of writing out a grammar for a very syntax-heavy proposal</blockquote></mx-reply>yeah we have a spec syntax PR 😂 i think it's already covered the current shape of proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$or0ZoZwXeOfTTsLnJ-QXwyiyVt04aUYpmgsbxp4WDHc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> i think there's value in the exercise of writing out a grammar for a very syntax-heavy proposal\n\nyeah we have a spec syntax PR 😂 i think it's already covered the current shape of proposal","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$or0ZoZwXeOfTTsLnJ-QXwyiyVt04aUYpmgsbxp4WDHc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i think there&#39;s value in the exercise of writing out a grammar for a very syntax-heavy proposal</blockquote></mx-reply>yeah we have a spec syntax PR 😂 i think it's already covered the current shape of proposal","mimetype":"text/html"}]},"ts":1648489295067,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$M4aH7ux1JqPYrpA3q333N3KZn8qUGZ81nCdwcD5efKE"},
{"content":{"body":"it should've been merged for general review before the plenary, then?","msgtype":"m.text","org.matrix.msc1767.text":"it should've been merged for general review before the plenary, then?"},"ts":1648489317610,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$d_lBDgaHoZOFiUMmkrY9imeEn8Ldj43-vwtDrGNyF6k"},
{"content":{"body":"> <@shuyuguo:matrix.org> i also reject the notion that \"initial spec text\" means any text document that's published as a spec draft\n\ni agree with that. i think the current text still somewhat applies - it's just the parts inside `match (…) { … }` that need lots of work","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FUreY3nAqq5m6zu0hDS8lBF1a1fYLKtTqk29ctEAdcg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i also reject the notion that &quot;initial spec text&quot; means any text document that&#39;s published as a spec draft</blockquote></mx-reply>i agree with that. i think the current text still somewhat applies - it's just the parts inside <code>match (…) { … }</code> that need lots of work","m.relates_to":{"m.in_reply_to":{"event_id":"$FUreY3nAqq5m6zu0hDS8lBF1a1fYLKtTqk29ctEAdcg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> i also reject the notion that \"initial spec text\" means any text document that's published as a spec draft\n\ni agree with that. i think the current text still somewhat applies - it's just the parts inside `match (…) { … }` that need lots of work","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FUreY3nAqq5m6zu0hDS8lBF1a1fYLKtTqk29ctEAdcg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i also reject the notion that &quot;initial spec text&quot; means any text document that&#39;s published as a spec draft</blockquote></mx-reply>i agree with that. i think the current text still somewhat applies - it's just the parts inside <code>match (…) { … }</code> that need lots of work","mimetype":"text/html"}]},"ts":1648489328861,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NPK-hDZNuXvg5iWXInxhmvyqyDZJpkRbIkuw4lQiCUQ"},
{"content":{"body":"hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","format":"org.matrix.custom.html","formatted_body":"<p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","mimetype":"text/plain"},{"body":"<p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","mimetype":"text/html"}]},"ts":1648489354397,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$O2BeHOpYgb7e4uNP-yEcPShr0NU6ost8uIqBZvMVHYE"},
{"content":{"body":"maybe it doesn't feel \"enough\" for some, but applying vague adhoc requirements seems undesirable compared to having more specific wording in the process doc","msgtype":"m.text","org.matrix.msc1767.text":"maybe it doesn't feel \"enough\" for some, but applying vague adhoc requirements seems undesirable compared to having more specific wording in the process doc"},"ts":1648489354447,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wV2i2qQ70-Q_LfREJsXMY4PmQ1-0LrnA-uoyoG32bHA"},
{"content":{"body":"part of the pushback i'm hearing is that there's no sensible intermediate state to have an initial spec text that's not a complete grammar working out","msgtype":"m.text","org.matrix.msc1767.text":"part of the pushback i'm hearing is that there's no sensible intermediate state to have an initial spec text that's not a complete grammar working out"},"ts":1648489362639,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VPuyflwjZ3cOojjaWjYBqhjDnbagraAX5NQuKCgrPvI"},
{"content":{"body":" * hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","format":"org.matrix.custom.html","formatted_body":" * <p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","m.new_content":{"body":"hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","format":"org.matrix.custom.html","formatted_body":"<p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","mimetype":"text/plain"},{"body":"<p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$O2BeHOpYgb7e4uNP-yEcPShr0NU6ost8uIqBZvMVHYE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * hax is talking about:\n\nhe think\n\n```when (${String} with s): expr``` to check if it is a string is wordy","mimetype":"text/plain"},{"body":" * <p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n","mimetype":"text/html"}]},"ts":1648489363869,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$vFRQC6-k8oUb54QKtO0rdP27JFFmt8rPwLqGdavofXA"},
{"content":{"body":"I think it's fair to have minimal matching specs. People can consume the proposal by the explainer, other people do it better from the specs, as waldemar pointed out. I might disagree with the heated parts, but asking for some basic specs seems pretty fair and I'd stick to that committed to present something at the next TC39 meeting.","format":"org.matrix.custom.html","formatted_body":"I think it's fair to have minimal matching specs. People can consume the proposal by the explainer, other people do it better from the specs, as <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> pointed out. I might disagree with the heated parts, but asking for some basic specs seems pretty fair and I'd stick to that committed to present something at the next TC39 meeting.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think it's fair to have minimal matching specs. People can consume the proposal by the explainer, other people do it better from the specs, as waldemar pointed out. I might disagree with the heated parts, but asking for some basic specs seems pretty fair and I'd stick to that committed to present something at the next TC39 meeting.","mimetype":"text/plain"},{"body":"I think it's fair to have minimal matching specs. People can consume the proposal by the explainer, other people do it better from the specs, as <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> pointed out. I might disagree with the heated parts, but asking for some basic specs seems pretty fair and I'd stick to that committed to present something at the next TC39 meeting.","mimetype":"text/html"}]},"ts":1648489366096,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$kgPyhze9eBgNi7pm2gU_mofE9jGLoknR5thaaGrh5Sk"},
{"content":{"body":"Jack Works: I think if your PR landed that would definitely meet the bar","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: I think if your PR landed that would definitely meet the bar","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: I think if your PR landed that would definitely meet the bar","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: I think if your PR landed that would definitely meet the bar","mimetype":"text/html"}]},"ts":1648489367220,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$L1s9V5io28EU-pC-wk5sfzwLlA-Kvfzk80yqDXEXsQg"},
{"content":{"body":"but I didn't know to look for it","msgtype":"m.text","org.matrix.msc1767.text":"but I didn't know to look for it"},"ts":1648489369908,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P4mbn-I-3ShpumXqBw4gMWQu_M7z5_Az226AekyN2Fw"},
{"content":{"body":"i also don't think that's true, but it might be in this particular case?","msgtype":"m.text","org.matrix.msc1767.text":"i also don't think that's true, but it might be in this particular case?"},"ts":1648489371471,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7ZxblfhHUNFd09ZWql3uTGxZxsYg93ZETzFwnUypG-Q"},
{"content":{"body":"> <@jackworks:matrix.org> hax is talking about:\n> \n> he think\n> \n> ```when (${String} with s): expr``` to check if it is a string is wordy\n\nto check if something's a string you'd do `if (typeof x === 'string')`, no?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O2BeHOpYgb7e4uNP-yEcPShr0NU6ost8uIqBZvMVHYE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n</blockquote></mx-reply>to check if something's a string you'd do <code>if (typeof x === 'string')</code>, no?","m.relates_to":{"m.in_reply_to":{"event_id":"$O2BeHOpYgb7e4uNP-yEcPShr0NU6ost8uIqBZvMVHYE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> hax is talking about:\n> \n> he think\n> \n> ```when (${String} with s): expr``` to check if it is a string is wordy\n\nto check if something's a string you'd do `if (typeof x === 'string')`, no?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$O2BeHOpYgb7e4uNP-yEcPShr0NU6ost8uIqBZvMVHYE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><p>hax is talking about:</p>\n<p>he think</p>\n<p><code>when (${String} with s): expr</code> to check if it is a string is wordy</p>\n</blockquote></mx-reply>to check if something's a string you'd do <code>if (typeof x === 'string')</code>, no?","mimetype":"text/html"}]},"ts":1648489379910,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Gv--u1nri7n_LjnIGenVFANgp_17rQzeseS9jrDcMVY"},
{"content":{"body":"leobalter: no, the point is that explainers are precisely *not* substitutes for specs","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: no, the point is that explainers are precisely <em>not</em> substitutes for specs","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"leobalter: no, the point is that explainers are precisely *not* substitutes for specs","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: no, the point is that explainers are precisely <em>not</em> substitutes for specs","mimetype":"text/html"}]},"ts":1648489401086,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TtXxtT6kzKOuQfUuLrp5DFfi6_kSNyllHBm9Z8EmEGU"},
{"content":{"body":"`when (x) if (typeof x === 'string')` is the obvious way to write this","format":"org.matrix.custom.html","formatted_body":"<code>when (x) if (typeof x === 'string')</code> is the obvious way to write this","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`when (x) if (typeof x === 'string')` is the obvious way to write this","mimetype":"text/plain"},{"body":"<code>when (x) if (typeof x === 'string')</code> is the obvious way to write this","mimetype":"text/html"}]},"ts":1648489420731,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5ADwGwExhJFqEqmrCgiJ6oNdIq4blLyHpibNHM6LDPk"},
{"content":{"body":"(this particular thing)","msgtype":"m.text","org.matrix.msc1767.text":"(this particular thing)"},"ts":1648489426932,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dRTzkhg5IpTSWh_1Te851uuT2mWQXXhDU-Vir6xlJ5w"},
{"content":{"body":"> <@ljharb:matrix.org> to check if something's a string you'd do `if (typeof x === 'string')`, no?\n\noh yeah, it's another case for bare `if` 😂","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Gv--u1nri7n_LjnIGenVFANgp_17rQzeseS9jrDcMVY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>to check if something's a string you'd do <code>if (typeof x === 'string')</code>, no?</blockquote></mx-reply>oh yeah, it's another case for bare <code>if</code> 😂","m.relates_to":{"m.in_reply_to":{"event_id":"$Gv--u1nri7n_LjnIGenVFANgp_17rQzeseS9jrDcMVY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> to check if something's a string you'd do `if (typeof x === 'string')`, no?\n\noh yeah, it's another case for bare `if` 😂","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Gv--u1nri7n_LjnIGenVFANgp_17rQzeseS9jrDcMVY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>to check if something's a string you'd do <code>if (typeof x === 'string')</code>, no?</blockquote></mx-reply>oh yeah, it's another case for bare <code>if</code> 😂","mimetype":"text/html"}]},"ts":1648489427627,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$O4ajrz9ZrhzaqBFqrTRhTKPx4z_raESdOiW8giobNog"},
{"content":{"body":"shu: I agree with that, my opinion is that both explainer and specs should have some minimal content for everyone to understand the direction for Stage 2.\n\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I agree with that, my opinion is that both explainer and specs should have some minimal content for everyone to understand the direction for Stage 2.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: I agree with that, my opinion is that both explainer and specs should have some minimal content for everyone to understand the direction for Stage 2.\n\n","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I agree with that, my opinion is that both explainer and specs should have some minimal content for everyone to understand the direction for Stage 2.","mimetype":"text/html"}]},"ts":1648489446431,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$DYXKksRQYwSwHJx5dQYQIpiWRLGOLhlmN-APo_jVOwE"},
{"content":{"body":"it's not a use for bare `if` because you need to refer to the match-ee","format":"org.matrix.custom.html","formatted_body":"it's not a use for bare <code>if</code> because you need to refer to the match-ee","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it's not a use for bare `if` because you need to refer to the match-ee","mimetype":"text/plain"},{"body":"it's not a use for bare <code>if</code> because you need to refer to the match-ee","mimetype":"text/html"}]},"ts":1648489453210,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$S4-azbBoHszVsXFUNA2c6O_9_ywDKeRXLkPSXWXYYvM"},
{"content":{"body":"One doesn't replace the other","msgtype":"m.text","org.matrix.msc1767.text":"One doesn't replace the other"},"ts":1648489454635,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$mvgzFnuOzNvrV-ejgOBkuL1vqFlfnLVydvyhRuVlaO4"},
{"content":{"body":"which requires you to name the thing being matched","msgtype":"m.text","org.matrix.msc1767.text":"which requires you to name the thing being matched"},"ts":1648489460443,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qMd-suNIAVtcahNaH4sgGEssWVlA4ZvS5L9xCSdWP7U"},
{"content":{"body":"> <@bakkot:matrix.org> `when (x) if (typeof x === 'string')` is the obvious way to write this\n\nbut it's more wordy than `when (${String} with x)`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5ADwGwExhJFqEqmrCgiJ6oNdIq4blLyHpibNHM6LDPk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>when (x) if (typeof x === 'string')</code> is the obvious way to write this</blockquote></mx-reply>but it's more wordy than <code>when (${String} with x)</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$5ADwGwExhJFqEqmrCgiJ6oNdIq4blLyHpibNHM6LDPk"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> `when (x) if (typeof x === 'string')` is the obvious way to write this\n\nbut it's more wordy than `when (${String} with x)`","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5ADwGwExhJFqEqmrCgiJ6oNdIq4blLyHpibNHM6LDPk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><code>when (x) if (typeof x === 'string')</code> is the obvious way to write this</blockquote></mx-reply>but it's more wordy than <code>when (${String} with x)</code>","mimetype":"text/html"}]},"ts":1648489463039,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$eDd3SHHOxns6sDWUbupwh8EeEUIgAVS4FPGrfGjvB98"},
{"content":{"body":"> <@bakkot:matrix.org> it's not a use for bare `if` because you need to refer to the match-ee\n\n`when (blah) as S {` lets you refer to it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S4-azbBoHszVsXFUNA2c6O_9_ywDKeRXLkPSXWXYYvM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>it's not a use for bare <code>if</code> because you need to refer to the match-ee</blockquote></mx-reply><code>when (blah) as S {</code> lets you refer to it","m.relates_to":{"m.in_reply_to":{"event_id":"$S4-azbBoHszVsXFUNA2c6O_9_ywDKeRXLkPSXWXYYvM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> it's not a use for bare `if` because you need to refer to the match-ee\n\n`when (blah) as S {` lets you refer to it","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S4-azbBoHszVsXFUNA2c6O_9_ywDKeRXLkPSXWXYYvM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>it's not a use for bare <code>if</code> because you need to refer to the match-ee</blockquote></mx-reply><code>when (blah) as S {</code> lets you refer to it","mimetype":"text/html"}]},"ts":1648489468359,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KvxBgVOnn8LAuPIggEAeN_loT3R_2HaFd2VlEZBf2r4"},
{"content":{"body":"Jack Works: but less clear","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: but less clear","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: but less clear","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: but less clear","mimetype":"text/html"}]},"ts":1648489472565,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rteXyTYf1W6oETyN6TBzsYfkAuGJKYMlhpm9SgPMC3o"},
{"content":{"body":"this is a good reason to not allow the `when (${String} with x)`","format":"org.matrix.custom.html","formatted_body":"this is a good reason to not allow the <code>when (${String} with x)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"this is a good reason to not allow the `when (${String} with x)`","mimetype":"text/plain"},{"body":"this is a good reason to not allow the <code>when (${String} with x)</code>","mimetype":"text/html"}]},"ts":1648489484805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HGW8mXn4mhU83sHsLC_X45f92SW-oeAvko882ufDzOU"},
{"content":{"body":"which I also want to get rid of for other reasons","msgtype":"m.text","org.matrix.msc1767.text":"which I also want to get rid of for other reasons"},"ts":1648489493374,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wyElaf6Fk1uq_F0Q5DVV_CTPLVciSIkWnzQIkaNEi8M"},
{"content":{"body":"@ljharb: Process requires \"all major semantics, syntax and API are covered, but TODOs, placeholders and editorial issues are expected\" for entry to stage 2. Process also states that changes during stage 2 are expected to be incremental.","msgtype":"m.text","org.matrix.msc1767.text":"@ljharb: Process requires \"all major semantics, syntax and API are covered, but TODOs, placeholders and editorial issues are expected\" for entry to stage 2. Process also states that changes during stage 2 are expected to be incremental."},"ts":1648489514567,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$zZBbg_5c_l_DuFqH04lQ638yitE4vOJrLgTDehcsANo"},
{"content":{"body":"`when (${String} and x)` is shorter :-p","format":"org.matrix.custom.html","formatted_body":"<code>when (${String} and x)</code> is shorter :-p","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`when (${String} and x)` is shorter :-p","mimetype":"text/plain"},{"body":"<code>when (${String} and x)</code> is shorter :-p","mimetype":"text/html"}]},"ts":1648489516790,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KW-GqQsnt5uicjCYmSAOivnjd8EV4nx2UPxnxARShYw"},
{"content":{"body":"Can `when (${String} with x)` match String wrapper object?","format":"org.matrix.custom.html","formatted_body":"Can <code>when (${String} with x)</code> match String wrapper object?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Can `when (${String} with x)` match String wrapper object?","mimetype":"text/plain"},{"body":"Can <code>when (${String} with x)</code> match String wrapper object?","mimetype":"text/html"}]},"ts":1648489523845,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc"},
{"content":{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","mimetype":"text/html"}]},"ts":1648489539588,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$u7GZO-Sn7YkNerk7bHJU9ebD5XN6a75CgttNG3tybx0"},
{"content":{"body":" * waldemar: that column describes the spec quality WITHIN stage 2, not for entering it.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it.","m.new_content":{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$u7GZO-Sn7YkNerk7bHJU9ebD5XN6a75CgttNG3tybx0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * waldemar: that column describes the spec quality WITHIN stage 2, not for entering it.","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it.","mimetype":"text/html"}]},"ts":1648489546024,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dsFuanT3aXluhOg-z_g1yoxLN7EKwSZ2rXEbMcEXNVg"},
{"content":{"body":"`if (typeof x === 'string')` is very clear that it can not match string wrapper object","format":"org.matrix.custom.html","formatted_body":"<code>if (typeof x === 'string')</code> is very clear that it can not match string wrapper object","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`if (typeof x === 'string')` is very clear that it can not match string wrapper object","mimetype":"text/plain"},{"body":"<code>if (typeof x === 'string')</code> is very clear that it can not match string wrapper object","mimetype":"text/html"}]},"ts":1648489571181,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$no8aqTTCm1jNB6Guz5xinB2isvUfF-yxqrKgCYr3u0Q"},
{"content":{"body":" * waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","m.new_content":{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$u7GZO-Sn7YkNerk7bHJU9ebD5XN6a75CgttNG3tybx0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * waldemar: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals *entering* stage 2 is \"Entrance Criteria\"","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: that column describes the spec quality WITHIN stage 2, not for entering it. the only cell on the stage 2 row that applies to proposals <em>entering</em> stage 2 is &quot;Entrance Criteria&quot;","mimetype":"text/html"}]},"ts":1648489583659,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mVUel_O1-ANQsjXmQrkBm7DFZ8yiR3ECVB15Tvuun1Y"},
{"content":{"body":"> <@legendecas:matrix.org> Can `when (${String} with x)` match String wrapper object?\n\nyes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Can <code>when (${String} with x)</code> match String wrapper object?</blockquote></mx-reply>yes.","m.relates_to":{"m.in_reply_to":{"event_id":"$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@legendecas:matrix.org> Can `when (${String} with x)` match String wrapper object?\n\nyes.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Can <code>when (${String} with x)</code> match String wrapper object?</blockquote></mx-reply>yes.","mimetype":"text/html"}]},"ts":1648489590165,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$qpTsjP9Ew5SWosOipeRxiZEemDmwHBJMYUVUZqC6P5A"},
{"content":{"body":"ljharb: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.","mimetype":"text/html"}]},"ts":1648489619344,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$xrIkng4LrGLVsLUTALpSNoHuQcHIFqq42OsHQoi938I"},
{"content":{"body":"> <@legendecas:matrix.org> Can `when (${String} with x)` match String wrapper object?\n\nYes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Can <code>when (${String} with x)</code> match String wrapper object?</blockquote></mx-reply>Yes","m.relates_to":{"m.in_reply_to":{"event_id":"$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@legendecas:matrix.org> Can `when (${String} with x)` match String wrapper object?\n\nYes","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nMcM_70q3t5ulgulT-fl4d6-rjZToWJFPqsIwNFV1Wc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Can <code>when (${String} with x)</code> match String wrapper object?</blockquote></mx-reply>Yes","mimetype":"text/html"}]},"ts":1648489624762,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CCNmDAQAS-ZZWaWnOZk2_hJsaPX_jjIjBTYaqMW2un0"},
{"content":{"body":"> <@leobalter:matrix.org> ljharb: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.\n\nthen the process document should be refined; thats not the bar i've seen previous proposals held to.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xrIkng4LrGLVsLUTALpSNoHuQcHIFqq42OsHQoi938I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.</blockquote></mx-reply>then the process document should be refined; thats not the bar i've seen previous proposals held to.","m.relates_to":{"m.in_reply_to":{"event_id":"$xrIkng4LrGLVsLUTALpSNoHuQcHIFqq42OsHQoi938I"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@leobalter:matrix.org> ljharb: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.\n\nthen the process document should be refined; thats not the bar i've seen previous proposals held to.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$xrIkng4LrGLVsLUTALpSNoHuQcHIFqq42OsHQoi938I?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I have to disagree. My understanding is that fundamental spec quality should also match entrance for Stage 2.</blockquote></mx-reply>then the process document should be refined; thats not the bar i've seen previous proposals held to.","mimetype":"text/html"}]},"ts":1648489640810,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$McUanQB2V_eta-Y241wB8tQzuLZlMMikUM90hHHX0lQ"},
{"content":{"body":"ljharb: The entrance criteria require a spec text, and the spec quality column describes the quality of that spec text.","msgtype":"m.text","org.matrix.msc1767.text":"ljharb: The entrance criteria require a spec text, and the spec quality column describes the quality of that spec text."},"ts":1648489648810,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$vODrjv2tYT1VEMyflsh5a5j8ajtaiAJOCHxGm4tsiSo"},
{"content":{"body":"yeah","msgtype":"m.text","org.matrix.msc1767.text":"yeah"},"ts":1648489703381,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aoLPp6j6wzoKnJ5Hv1NTZF9qAmyFmk2ZjrbJvZbO65c"},
{"content":{"body":"stage 3 requires complete text","msgtype":"m.text","org.matrix.msc1767.text":"stage 3 requires complete text"},"ts":1648489708023,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wiZwexuuVNUPNF4yEeJURDVjk3qly8sRV1vrwdRdFAA"},
{"content":{"body":"ljharb waldemar we may schedule a proper venue to discuss this. I don't think this chat will be super productive. We have to agree there is a diversity in interpretations here.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> we may schedule a proper venue to discuss this. I don't think this chat will be super productive. We have to agree there is a diversity in interpretations here.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb waldemar we may schedule a proper venue to discuss this. I don't think this chat will be super productive. We have to agree there is a diversity in interpretations here.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a> we may schedule a proper venue to discuss this. I don't think this chat will be super productive. We have to agree there is a diversity in interpretations here.","mimetype":"text/html"}]},"ts":1648489709241,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$eCF3CbEyEv_c47RWm9G2yXEsuwq6B8NvyQqS9qAxtqg"},
{"content":{"body":"that's not something you do during stage 3","msgtype":"m.text","org.matrix.msc1767.text":"that's not something you do during stage 3"},"ts":1648489713670,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WcVLeQyHjg7uxjxPS6LpV6LavpwD6rCcWojT99G6790"},
{"content":{"body":"bakkot: I believe @waldemar is never saying complete spec text.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I believe @waldemar is never saying complete spec text.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: I believe @waldemar is never saying complete spec text.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I believe @waldemar is never saying complete spec text.","mimetype":"text/html"}]},"ts":1648489742014,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$qcMSMxLEoidZJcIQIF5l1vZ5Ku4gmEx60l4MuIG0YUQ"},
{"content":{"body":"i can certainly see that interpretation - that \"spec quality\" is an entrance criteria. but that's not how i read it, or have read it in the past, nor is it clear to me from the table.","msgtype":"m.text","org.matrix.msc1767.text":"i can certainly see that interpretation - that \"spec quality\" is an entrance criteria. but that's not how i read it, or have read it in the past, nor is it clear to me from the table."},"ts":1648489762201,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$M4_sZS6eOU4teUTeTrWBmBqewyGvUo2-2w4LRUsm4dU"},
{"content":{"body":"leobalter: sorry, I was just saying I agree with waldemar's intepretation of the \"spec quality\" column","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: sorry, I was just saying I agree with waldemar's intepretation of the &quot;spec quality&quot; column","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"leobalter: sorry, I was just saying I agree with waldemar's intepretation of the \"spec quality\" column","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@leobalter:matrix.org\">leobalter</a>: sorry, I was just saying I agree with waldemar's intepretation of the &quot;spec quality&quot; column","mimetype":"text/html"}]},"ts":1648489766540,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uaKsBsuLk6pvvB2zuvZbr-GbGtyzstO1YpqfHqF_JEo"},
{"content":{"body":"I think some are just misreading the process document.","msgtype":"m.text","org.matrix.msc1767.text":"I think some are just misreading the process document."},"ts":1648489773185,"senderName":"waldemar","senderId":"@waldemarh:matrix.org","id":"$YogUv0Vc1Rt984mg3Xl0bQmO3dlH380o6CE123W7Xuk"},
{"content":{"body":"if that's what we all want, maybe we should add some clarification to the \"entrance criteria\" cell so it references the \"spec quality\" cell","msgtype":"m.text","org.matrix.msc1767.text":"if that's what we all want, maybe we should add some clarification to the \"entrance criteria\" cell so it references the \"spec quality\" cell"},"ts":1648489785582,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_9Suo0sXjKzeoxPaFVSfDneoxxEN_q3k353AvlB06mw"},
{"content":{"body":"which is that stage 3 requires \"Complete: all semantics, syntax and API are completely described\", which means that stage 2 requires \"Draft: all major semantics, syntax and API are covered, but TODOs, placeholders and editorial issues are expected\"","msgtype":"m.text","org.matrix.msc1767.text":"which is that stage 3 requires \"Complete: all semantics, syntax and API are completely described\", which means that stage 2 requires \"Draft: all major semantics, syntax and API are covered, but TODOs, placeholders and editorial issues are expected\""},"ts":1648489796587,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FAKi5D1IPvJGD94Sc93iV_MgczgC1e80amUV1kBfoOA"},
{"content":{"body":"leo, this isn't about a diversity of interpretations, i think it's just misreading?","msgtype":"m.text","org.matrix.msc1767.text":"leo, this isn't about a diversity of interpretations, i think it's just misreading?"},"ts":1648489802355,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZMkiHxhU9LpTLeHoBt-PPbuRld94kwElsN813cM4M8E"},
{"content":{"body":"waldemar: if we interpret the document differently, one has to be wrong.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: if we interpret the document differently, one has to be wrong.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"waldemar: if we interpret the document differently, one has to be wrong.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@waldemarh:matrix.org\">waldemar</a>: if we interpret the document differently, one has to be wrong.","mimetype":"text/html"}]},"ts":1648489806309,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$TIhHLon72rfCeR-DW4Kg9jHW5QRFLkGl5BnKlA44Dl4"},
{"content":{"body":"yes, and what bakkot said has to be correct","format":"org.matrix.custom.html","formatted_body":"yes, and what <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> said has to be correct","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yes, and what bakkot said has to be correct","mimetype":"text/plain"},{"body":"yes, and what <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> said has to be correct","mimetype":"text/html"}]},"ts":1648489837175,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jYc51rnLxBqXEoYb7KXVnx2xnX-hFRjIGEvEnNI3f9g"},
{"content":{"body":"unless we have disagreement that stage 3 can be obtained without a complete spec text, which i really hope not","msgtype":"m.text","org.matrix.msc1767.text":"unless we have disagreement that stage 3 can be obtained without a complete spec text, which i really hope not"},"ts":1648489849242,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$lTAeY720lR0afUQBegdw7G8wPscq5cv_CagYoWJlZXE"},
{"content":{"body":"shu: I read basic specs as entrance criteria for Stage 2, not only as a expectancy for during Stage 2","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I read basic specs as entrance criteria for Stage 2, not only as a expectancy for during Stage 2","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: I read basic specs as entrance criteria for Stage 2, not only as a expectancy for during Stage 2","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I read basic specs as entrance criteria for Stage 2, not only as a expectancy for during Stage 2","mimetype":"text/html"}]},"ts":1648489859238,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$FzGdPuQBkMPOeuaCZrFV2J3z_lmo8hgNMSi91qY48u4"},
{"content":{"body":"and I'd be supportive for all proposals to go through the same criteria.","msgtype":"m.text","org.matrix.msc1767.text":"and I'd be supportive for all proposals to go through the same criteria."},"ts":1648489893848,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$nMxEeqGKLSpvsPkKhw89mqq55VE96ZXsniXSx7gGh-A"},
{"content":{"body":"we have accepted thorough explainer docs as \"spec text\" for stage 2 many times in the past","msgtype":"m.text","org.matrix.msc1767.text":"we have accepted thorough explainer docs as \"spec text\" for stage 2 many times in the past"},"ts":1648489901759,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wLNoIu60f_sgD8Dz6CtRjWiV_v4lmfkLEcrpMCNn0tA"},
{"content":{"body":"have we?","msgtype":"m.text","org.matrix.msc1767.text":"have we?"},"ts":1648489912460,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_00QAZl_R9FuObo5t2N-JPUrHRbuheMqVbjyHbRQ8ac"},
{"content":{"body":"and for something that is super syntax heavy?","msgtype":"m.text","org.matrix.msc1767.text":"and for something that is super syntax heavy?"},"ts":1648489924121,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$eQhXKPcaj7suI3ysfgjgH-k76Dpg7G34gWW1zZgfD78"},
{"content":{"body":"like if it's for one array method, sure","msgtype":"m.text","org.matrix.msc1767.text":"like if it's for one array method, sure"},"ts":1648489930362,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zy6pS8Pxy7sJWL-uVhwTONRJlrxfY40RXCQZJw9rkAM"},
{"content":{"body":"with a pseudocode implementation, even","msgtype":"m.text","org.matrix.msc1767.text":"with a pseudocode implementation, even"},"ts":1648489934562,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AnDjaNfQeoxXBa7qzhf85UJCxDyfdhuWSJ5ZapTvpDw"},
{"content":{"body":"for something this big, probably not. but for multiple things, certainly","msgtype":"m.text","org.matrix.msc1767.text":"for something this big, probably not. but for multiple things, certainly"},"ts":1648489944150,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$cbjJhKdgK1nymwVwn-GAALn4HvIJOYKV4POAX3G4Sos"},
{"content":{"body":"few proposals are as big as this one, so I don't know what your bar is","msgtype":"m.text","org.matrix.msc1767.text":"few proposals are as big as this one, so I don't know what your bar is"},"ts":1648489955476,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jhFz3-n7JMBU40emeDHUzGkR4zUc_oi2SJEiPVzqVgY"},
{"content":{"body":"i have said my bar: for syntax-heavy proposals, major syntax should be spelled out in the spec text, which it isn't currently because it's in an unmerged PR","msgtype":"m.text","org.matrix.msc1767.text":"i have said my bar: for syntax-heavy proposals, major syntax should be spelled out in the spec text, which it isn't currently because it's in an unmerged PR"},"ts":1648490012573,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5T94Z57iS1c-a64iJ5f-QgZkS3caM0_Q-XXHMYqg-xc"},
{"content":{"body":"shu: fair, at least that gives the champions clear guidance on expectations","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: fair, at least that gives the champions clear guidance on expectations","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: fair, at least that gives the champions clear guidance on expectations","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: fair, at least that gives the champions clear guidance on expectations","mimetype":"text/html"}]},"ts":1648490044527,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XRcSKKXgvJr_dc5h0oUuZRfYgoiHo9AE6SValMRl9uY"},
{"content":{"body":"array grouping had fairly complete text at stage 2: https://github.com/tc39/proposal-array-grouping/blob/6c1e6880eeb58a2f2cae3a0763c884821f730893/spec.emu","msgtype":"m.text","org.matrix.msc1767.text":"array grouping had fairly complete text at stage 2: https://github.com/tc39/proposal-array-grouping/blob/6c1e6880eeb58a2f2cae3a0763c884821f730893/spec.emu"},"ts":1648490044874,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DdMTEPompSESDxWGqpB35ghVNtcmRsOWgWYtC13XsxA"},
{"content":{"body":"I'm trying to think of other examples","msgtype":"m.text","org.matrix.msc1767.text":"I'm trying to think of other examples"},"ts":1648490053951,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KIjnGCxucTDQ5zxoho-oQPCGM8wKjltbopNkPjv6iow"},
{"content":{"body":"where there might not have been","msgtype":"m.text","org.matrix.msc1767.text":"where there might not have been"},"ts":1648490061938,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pffdnerU7lAq7jCK6er0IDuTdzJhimFSQFGBlYDuW34"},
{"content":{"body":"tbf API proposals are the easiest ones to make complete spec text for","msgtype":"m.text","org.matrix.msc1767.text":"tbf API proposals are the easiest ones to make complete spec text for"},"ts":1648490064266,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$JtMMNwHogZFeGW4F9OulSmBscVRLL_m8i6ekgRWdmoc"},
{"content":{"body":"please stop with the \"complete\" strawperson","msgtype":"m.text","org.matrix.msc1767.text":"please stop with the \"complete\" strawperson"},"ts":1648490077323,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OpmAiLkhdxazVF2b5nKnaGqEdgVdfKVRwxqwXgMj-ms"},
{"content":{"body":"nobody is asking for complete for entrance to stage 2","msgtype":"m.text","org.matrix.msc1767.text":"nobody is asking for complete for entrance to stage 2"},"ts":1648490083005,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Rhe0MZp-RfhpG4fQwJMTvedmgk_eZMcpTd8ZYaBB9QU"},
{"content":{"body":"oh i don't mean that's what's being asked for","msgtype":"m.text","org.matrix.msc1767.text":"oh i don't mean that's what's being asked for"},"ts":1648490089125,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7VPUS83Pcx1RQFjZTuvzNlReATAEPlOVuMxAkyQ9u0w"},
{"content":{"body":"i'm saying that API proposals are much easier to hit even the stage *3* requirement, far earlier","format":"org.matrix.custom.html","formatted_body":"i'm saying that API proposals are much easier to hit even the stage <em>3</em> requirement, far earlier","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i'm saying that API proposals are much easier to hit even the stage *3* requirement, far earlier","mimetype":"text/plain"},{"body":"i'm saying that API proposals are much easier to hit even the stage <em>3</em> requirement, far earlier","mimetype":"text/html"}]},"ts":1648490106416,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VZ6xP0_6_ubFySRyyf5CJW8CZreC-kc1VqcGHkhY_O4"},
{"content":{"body":"re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics","msgtype":"m.text","org.matrix.msc1767.text":"re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics"},"ts":1648490109808,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4U6ENQLOiyXDOgyPXO9qtKtYn25fF_z4HCxqYt3V1hU"},
{"content":{"body":"temporal did that IIRC","msgtype":"m.text","org.matrix.msc1767.text":"temporal did that IIRC"},"ts":1648490112416,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XbG0x91u5APDv34rTEyfAjwSVMOiWK62KrnQy5suT0Q"},
{"content":{"body":"though, maybe that was during stage 2","msgtype":"m.text","org.matrix.msc1767.text":"though, maybe that was during stage 2"},"ts":1648490117539,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KV67q2j2KjQMCYWOj7gCqaZ45NqXnexyGZQ9zH5oe20"},
{"content":{"body":"yeah, that was at a later stage","msgtype":"m.text","org.matrix.msc1767.text":"yeah, that was at a later stage"},"ts":1648490137966,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zEzgtWXvUt6rBNH7zP-F0c1dD7zfDVR0ENgIebQEvwk"},
{"content":{"body":"I think this is a good discussion to have, but I do want to say that to demand that Tab put the stub spec text up on the screen for it to be criticized, is both a waste of committee time, and condescending towards the champions. I think that kind of thing is not befitting of a healthy collaboration in the committee","msgtype":"m.text"},"ts":1648490175403,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$t6V9UNmoFoK2wupBa6HeQxdIVhNQWkUjsC_-RVxa5VI"},
{"content":{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","format":"org.matrix.custom.html","formatted_body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/plain"},{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$4U6ENQLOiyXDOgyPXO9qtKtYn25fF_z4HCxqYt3V1hU"}}},"ts":1648490287359,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Mrh4TsdngzSEBPJG1FgVAJbwwYPlnsZc0-x_9yexoZg"},
{"content":{"body":"hax's meaning:\n\nhe think `if` is `else if`, and is not the necessary part of MVP","format":"org.matrix.custom.html","formatted_body":"<p>hax's meaning:</p>\n<p>he think <code>if</code> is <code>else if</code>, and is not the necessary part of MVP</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hax's meaning:\n\nhe think `if` is `else if`, and is not the necessary part of MVP","mimetype":"text/plain"},{"body":"<p>hax's meaning:</p>\n<p>he think <code>if</code> is <code>else if</code>, and is not the necessary part of MVP</p>\n","mimetype":"text/html"}]},"ts":1648490304531,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BA-xyHspeWzgHoIjo_xMJw5-QQEnEVaaOsmSrV7yWlE"},
{"content":{"body":"> <@bakkot:matrix.org> re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics\n\n * i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4U6ENQLOiyXDOgyPXO9qtKtYn25fF_z4HCxqYt3V1hU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics</blockquote></mx-reply> * i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","m.new_content":{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","format":"org.matrix.custom.html","formatted_body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/plain"},{"body":"i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Mrh4TsdngzSEBPJG1FgVAJbwwYPlnsZc0-x_9yexoZg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics\n\n * i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4U6ENQLOiyXDOgyPXO9qtKtYn25fF_z4HCxqYt3V1hU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>re: ysv's point, I definitely like having large proposals like this presented multiple times before we agree to the major semantics</blockquote></mx-reply> * i feel like there are benefits to both sides, but we are running into issues with the fear that -- if we don't get everything in then we will have classes again (or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree)","mimetype":"text/html"}]},"ts":1648490327795,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$EFgw7bFHYEjn8Ki8y3Z7A540uc6ZVMglCulJPBM0hEQ"},
{"content":{"body":"and he think `when (_) if (expr)` can replace the bare if","format":"org.matrix.custom.html","formatted_body":"and he think <code>when (_) if (expr)</code> can replace the bare if","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and he think `when (_) if (expr)` can replace the bare if","mimetype":"text/plain"},{"body":"and he think <code>when (_) if (expr)</code> can replace the bare if","mimetype":"text/html"}]},"ts":1648490328728,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$zUK8mIIQAtQqTldO8jyhaNc-UZMZTACOE0_eZTWu3GI"},
{"content":{"body":"yulia: the spicy take is that this is a committee, we're not going to get cohesive big ideas through","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: the spicy take is that this is a committee, we're not going to get cohesive big ideas through","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: the spicy take is that this is a committee, we're not going to get cohesive big ideas through","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: the spicy take is that this is a committee, we're not going to get cohesive big ideas through","mimetype":"text/html"}]},"ts":1648490345939,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rBwgllVa7SY2uHbfcwhVLGggws-5pBq_7ASVLihDzU4"},
{"content":{"body":"as you know, i am a fan of process ;)","msgtype":"m.text","org.matrix.msc1767.text":"as you know, i am a fan of process ;)"},"ts":1648490365415,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$TedXKeRpxvSjftV3puUgvMtoJ2ptIyFmJcWFOWRNT5Q"},
{"content":{"body":"we're going to get things that hopefully aren't too far off course from what any individual delegate's cohesive big idea is","msgtype":"m.text","org.matrix.msc1767.text":"we're going to get things that hopefully aren't too far off course from what any individual delegate's cohesive big idea is"},"ts":1648490377077,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$SxQECbE2zG8aNc9TGEJ61SwAM_PR2Oagt4_vMhgFRAY"},
{"content":{"body":"> <@jackworks:matrix.org> and he think `when (_) if (expr)` can replace the bare if\n\nit totally can. it's just that then you're forcing people to type that extra boilerplate when they don't conceptually need it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zUK8mIIQAtQqTldO8jyhaNc-UZMZTACOE0_eZTWu3GI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>and he think <code>when (_) if (expr)</code> can replace the bare if</blockquote></mx-reply>it totally can. it's just that then you're forcing people to type that extra boilerplate when they don't conceptually need it","m.relates_to":{"m.in_reply_to":{"event_id":"$zUK8mIIQAtQqTldO8jyhaNc-UZMZTACOE0_eZTWu3GI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> and he think `when (_) if (expr)` can replace the bare if\n\nit totally can. it's just that then you're forcing people to type that extra boilerplate when they don't conceptually need it","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$zUK8mIIQAtQqTldO8jyhaNc-UZMZTACOE0_eZTWu3GI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>and he think <code>when (_) if (expr)</code> can replace the bare if</blockquote></mx-reply>it totally can. it's just that then you're forcing people to type that extra boilerplate when they don't conceptually need it","mimetype":"text/html"}]},"ts":1648490385891,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K0AxTOQFaTDs0F65Zbi1tHRlixHQA1ffR1lz2fHG50M"},
{"content":{"body":"OK my last concern for short:","msgtype":"m.text","org.matrix.msc1767.text":"OK my last concern for short:"},"ts":1648490393239,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Mn6tOeU7bIUcPSpf0RWK6Ak7dHuT6m6hNWP6wVk5rL0"},
{"content":{"body":"I prefer an alternative syntax for the custom matcher.\n\nCurrent:\n\n```js\nwhen (${Some} with x): expr\nwhen (${None}): expr\n```\n\nrbuckton 's unapply\n```js\nwhen (Some(x)): expr\nwhen (None()): expr\n// also works in deconstruction\nconst RGB(r, g, b) = \"#001234\"\n```","format":"org.matrix.custom.html","formatted_body":"<p>I prefer an alternative syntax for the custom matcher.</p>\n<p>Current:</p>\n<pre><code class=\"language-js\">when (${Some} with x): expr\nwhen (${None}): expr\n</code></pre>\n<p><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply</p>\n<pre><code class=\"language-js\">when (Some(x)): expr\nwhen (None()): expr\n// also works in deconstruction\nconst RGB(r, g, b) = &quot;#001234&quot;\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I prefer an alternative syntax for the custom matcher.\n\nCurrent:\n\n```js\nwhen (${Some} with x): expr\nwhen (${None}): expr\n```\n\nrbuckton 's unapply\n```js\nwhen (Some(x)): expr\nwhen (None()): expr\n// also works in deconstruction\nconst RGB(r, g, b) = \"#001234\"\n```","mimetype":"text/plain"},{"body":"<p>I prefer an alternative syntax for the custom matcher.</p>\n<p>Current:</p>\n<pre><code class=\"language-js\">when (${Some} with x): expr\nwhen (${None}): expr\n</code></pre>\n<p><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> 's unapply</p>\n<pre><code class=\"language-js\">when (Some(x)): expr\nwhen (None()): expr\n// also works in deconstruction\nconst RGB(r, g, b) = &quot;#001234&quot;\n</code></pre>\n","mimetype":"text/html"}]},"ts":1648490409701,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$u9VgfXGkx0XMHKiXVFJTjPMAtjCSftRZxo59SsBGCw8"},
{"content":{"body":"> <@shuyuguo:matrix.org> we're going to get things that hopefully aren't too far off course from what any individual delegate's cohesive big idea is\n\nso, my thinking is -- we could do what class fields did, which is that it had several proposals that eventually were merged","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SxQECbE2zG8aNc9TGEJ61SwAM_PR2Oagt4_vMhgFRAY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>we&#39;re going to get things that hopefully aren&#39;t too far off course from what any individual delegate&#39;s cohesive big idea is</blockquote></mx-reply>so, my thinking is -- we could do what class fields did, which is that it had several proposals that eventually were merged","m.relates_to":{"m.in_reply_to":{"event_id":"$SxQECbE2zG8aNc9TGEJ61SwAM_PR2Oagt4_vMhgFRAY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> we're going to get things that hopefully aren't too far off course from what any individual delegate's cohesive big idea is\n\nso, my thinking is -- we could do what class fields did, which is that it had several proposals that eventually were merged","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SxQECbE2zG8aNc9TGEJ61SwAM_PR2Oagt4_vMhgFRAY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>we&#39;re going to get things that hopefully aren&#39;t too far off course from what any individual delegate&#39;s cohesive big idea is</blockquote></mx-reply>so, my thinking is -- we could do what class fields did, which is that it had several proposals that eventually were merged","mimetype":"text/html"}]},"ts":1648490415020,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$CD-uiWLXyFCv7C4fguZgUu91295TQTk2Lgnf4dQFx_A"},
{"content":{"body":"> or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree\n\nthat is the thing I mean, yes","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree</p>\n</blockquote>\n<p>that is the thing I mean, yes</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree\n\nthat is the thing I mean, yes","mimetype":"text/plain"},{"body":"<blockquote>\n<p>or, maybe i misunderstood -- do you mean, this should be shown multiple times before advancement to grok all the details? with this i agree</p>\n</blockquote>\n<p>that is the thing I mean, yes</p>\n","mimetype":"text/html"}]},"ts":1648490424374,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$szXC8fOBAcRdjR7i14xIxHW2MJIy3g4jXB7oaYgVRY4"},
{"content":{"body":"but do this more intentionally","msgtype":"m.text","org.matrix.msc1767.text":"but do this more intentionally"},"ts":1648490429421,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$vKXdSGOjBmjzUj0ES085Yx9G-Wj3VW-klfHfiHCf1cw"},
{"content":{"body":"I don't have a problem with large proposals if they are presented a few times, so we have time to think about the whole thing","msgtype":"m.text","org.matrix.msc1767.text":"I don't have a problem with large proposals if they are presented a few times, so we have time to think about the whole thing"},"ts":1648490444186,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jwe-0TahIHo0ZgPx4o83FlyRZw5__PTG6yIbLPYuQt4"},
{"content":{"body":"and talk about all the details","msgtype":"m.text","org.matrix.msc1767.text":"and talk about all the details"},"ts":1648490451587,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$38H_dJI5ZiFieXq3q3v6KTg3jgFUdTY07GEdvhdfIC4"},
{"content":{"body":"yulia: that might work, sure. the biggest hurdle i think is to get enough of committee continuity, well beyond just the champion group, to have the whole space be paged in","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: that might work, sure. the biggest hurdle i think is to get enough of committee continuity, well beyond just the champion group, to have the whole space be paged in","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: that might work, sure. the biggest hurdle i think is to get enough of committee continuity, well beyond just the champion group, to have the whole space be paged in","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: that might work, sure. the biggest hurdle i think is to get enough of committee continuity, well beyond just the champion group, to have the whole space be paged in","mimetype":"text/html"}]},"ts":1648490467014,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zKal1AzFKK8y2VFC2UwY-uYXFWRArTbggWV_CryXv9Y"},
{"content":{"body":"yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)","msgtype":"m.text","org.matrix.msc1767.text":"yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)"},"ts":1648490473447,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$TyiBA7kK4sXVlZ3RU-Dn8GvOhj4jFB9VHUP0vzcb2bQ"},
{"content":{"body":"yes, I agree with yulia; or rather, I could live with an epic-type approach","format":"org.matrix.custom.html","formatted_body":"yes, I agree with <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>; or rather, I could live with an epic-type approach","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yes, I agree with yulia; or rather, I could live with an epic-type approach","mimetype":"text/plain"},{"body":"yes, I agree with <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>; or rather, I could live with an epic-type approach","mimetype":"text/html"}]},"ts":1648490478660,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$XnPJwJ6jjUCHke62EiLgSfMFepaHo53oSokQSthICb0"},
{"content":{"body":"pattern matching and decorators as our first 2 proposal topics? time constraints must've been rough this time around","msgtype":"m.text","org.matrix.msc1767.text":"pattern matching and decorators as our first 2 proposal topics? time constraints must've been rough this time around"},"ts":1648490479347,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CW0JlyiHnoQSr65scLDrdA_CfqMeq3-e5u8ksrDU8-E"},
{"content":{"body":"though I would still rather my own weird simple + wacky breakdown :D","msgtype":"m.text","org.matrix.msc1767.text":"though I would still rather my own weird simple + wacky breakdown :D"},"ts":1648490493871,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$9oYimKM7x0Uvgrjg8DWcrKOjhrPjWqi2JhnG2GQx8_s"},
{"content":{"body":"> <@michaelficarra:matrix.org> pattern matching and decorators as our first 2 proposal topics? time constraints must've been rough this time around\n\ndecorator is for stage 3","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CW0JlyiHnoQSr65scLDrdA_CfqMeq3-e5u8ksrDU8-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>pattern matching and decorators as our first 2 proposal topics? time constraints must&#39;ve been rough this time around</blockquote></mx-reply>decorator is for stage 3","m.relates_to":{"m.in_reply_to":{"event_id":"$CW0JlyiHnoQSr65scLDrdA_CfqMeq3-e5u8ksrDU8-E"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@michaelficarra:matrix.org> pattern matching and decorators as our first 2 proposal topics? time constraints must've been rough this time around\n\ndecorator is for stage 3","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CW0JlyiHnoQSr65scLDrdA_CfqMeq3-e5u8ksrDU8-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>pattern matching and decorators as our first 2 proposal topics? time constraints must&#39;ve been rough this time around</blockquote></mx-reply>decorator is for stage 3","mimetype":"text/html"}]},"ts":1648490496410,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$I65Q7pfPQ_W12RkHgVDAmf5uBLSgTv5JYouAMrSn2_4"},
{"content":{"body":" * yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)","m.new_content":{"body":"yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)","msgtype":"m.text","org.matrix.msc1767.text":"yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)"},"m.relates_to":{"event_id":"$TyiBA7kK4sXVlZ3RU-Dn8GvOhj4jFB9VHUP0vzcb2bQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * yeah also, splitting it up is just a mechanism for doing precisely that -- but splitting it up also makes parts of it optional which may not be optional (so, why not introduce a construct for that)"},"ts":1648490502668,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$cdZTmo7VC8sjpBAFZWyUlCps_rZ9OfgLXiAKdlqB-Qo"},
{"content":{"body":"TabAtkins: just to say, because everyone including me was talking about their concerns (which is reasonable), I think pattern matching as presented is pretty rad","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: just to say, because everyone including me was talking about their concerns (which is reasonable), I think pattern matching as presented is pretty rad","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: just to say, because everyone including me was talking about their concerns (which is reasonable), I think pattern matching as presented is pretty rad","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: just to say, because everyone including me was talking about their concerns (which is reasonable), I think pattern matching as presented is pretty rad","mimetype":"text/html"}]},"ts":1648490509967,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9GPrE8B_BQfpAdP0LqU7_8C8Uh5Ofd94kZ4yEUz00Zc"},
{"content":{"body":"Jack Works: decorators is 9th in order on the agenda though lol","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: decorators is 9th in order on the agenda though lol","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: decorators is 9th in order on the agenda though lol","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: decorators is 9th in order on the agenda though lol","mimetype":"text/html"}]},"ts":1648490517656,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$OQzWCD6FpIQR74FHm5ueyixIMDsWvXraTMQh-JfzzgI"},
{"content":{"body":"I have quibbles with details but do support the proposal","msgtype":"m.text","org.matrix.msc1767.text":"I have quibbles with details but do support the proposal"},"ts":1648490524871,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$koek9kwQepHKVM0q-WHdLa6Cdr9kzNdgCUN8oRqY1zE"},
{"content":{"body":"I support the current decorator proposal, but the metadata part is sus and need more discussion","msgtype":"m.text","org.matrix.msc1767.text":"I support the current decorator proposal, but the metadata part is sus and need more discussion"},"ts":1648490576321,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$093K_AaxRO3FbCxVnukMepyAMtNR0tSxS_nKRvaimuY"},
{"content":{"body":"yulia: because at the end of the day, as people have said before, we're mostly volunteering our time here, and the biggest problem is unless we're in the champion group, people are paging in a lot of stuff at possibly multi-month intervals. and unless you're already super sold on the motivation, that kind of working mode is going to prime you against large proposals","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: because at the end of the day, as people have said before, we're mostly volunteering our time here, and the biggest problem is unless we're in the champion group, people are paging in a lot of stuff at possibly multi-month intervals. and unless you're already super sold on the motivation, that kind of working mode is going to prime you against large proposals","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: because at the end of the day, as people have said before, we're mostly volunteering our time here, and the biggest problem is unless we're in the champion group, people are paging in a lot of stuff at possibly multi-month intervals. and unless you're already super sold on the motivation, that kind of working mode is going to prime you against large proposals","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: because at the end of the day, as people have said before, we're mostly volunteering our time here, and the biggest problem is unless we're in the champion group, people are paging in a lot of stuff at possibly multi-month intervals. and unless you're already super sold on the motivation, that kind of working mode is going to prime you against large proposals","mimetype":"text/html"}]},"ts":1648490585457,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$96ZnavmwaIkXd5SYU2vjavqYffC-gnUgxdj0omdCae0"},
{"content":{"body":"> <@jackworks:matrix.org> I support the current decorator proposal, but the metadata part is sus and need more discussion\n\nsame, also some concerns about the accessor keyword","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$093K_AaxRO3FbCxVnukMepyAMtNR0tSxS_nKRvaimuY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>I support the current decorator proposal, but the metadata part is sus and need more discussion</blockquote></mx-reply>same, also some concerns about the accessor keyword","m.relates_to":{"m.in_reply_to":{"event_id":"$093K_AaxRO3FbCxVnukMepyAMtNR0tSxS_nKRvaimuY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> I support the current decorator proposal, but the metadata part is sus and need more discussion\n\nsame, also some concerns about the accessor keyword","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$093K_AaxRO3FbCxVnukMepyAMtNR0tSxS_nKRvaimuY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>I support the current decorator proposal, but the metadata part is sus and need more discussion</blockquote></mx-reply>same, also some concerns about the accessor keyword","mimetype":"text/html"}]},"ts":1648490593630,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LnZlv6rTXLJUoWwdMxFsoCdeqp2hlKxEJlMpERW5N04"},
{"content":{"body":"how would \"epics\" help this? genuinely asking, no idea what those are","msgtype":"m.text","org.matrix.msc1767.text":"how would \"epics\" help this? genuinely asking, no idea what those are"},"ts":1648490602165,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wXq33IvX5eyytw6rdqo5MdNs0_-HqNFFPaE3OyhKX78"},
{"content":{"body":"> <@bakkot:matrix.org> also what's the use case for the bare `if` one\n\nI'ts a minor case, but sometimes when figuring out how to produce a given value, you in fact don't need to worry about the structure of the matchable.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also what's the use case for the bare <code>if</code> one</blockquote></mx-reply>I'ts a minor case, but sometimes when figuring out how to produce a given value, you in fact don't need to worry about the structure of the matchable.","m.relates_to":{"m.in_reply_to":{"event_id":"$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> also what's the use case for the bare `if` one\n\nI'ts a minor case, but sometimes when figuring out how to produce a given value, you in fact don't need to worry about the structure of the matchable.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pIU7WR07UJX7vAVVPoE6pZ3l7JgHDYHvdw2Ms-hDda0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>also what's the use case for the bare <code>if</code> one</blockquote></mx-reply>I'ts a minor case, but sometimes when figuring out how to produce a given value, you in fact don't need to worry about the structure of the matchable.","mimetype":"text/html"}]},"ts":1648490618030,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$sAR8zTOrujIxAbSzV0jms6UC6_g_xmzYcOJ2t2CLyyE"},
{"content":{"body":"> <@yulia:mozilla.org> same, also some concerns about the accessor keyword\n\nthey say the `accessor` keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LnZlv6rTXLJUoWwdMxFsoCdeqp2hlKxEJlMpERW5N04?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>same, also some concerns about the accessor keyword</blockquote></mx-reply>they say the <code>accessor</code> keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me","m.relates_to":{"m.in_reply_to":{"event_id":"$LnZlv6rTXLJUoWwdMxFsoCdeqp2hlKxEJlMpERW5N04"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> same, also some concerns about the accessor keyword\n\nthey say the `accessor` keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LnZlv6rTXLJUoWwdMxFsoCdeqp2hlKxEJlMpERW5N04?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>same, also some concerns about the accessor keyword</blockquote></mx-reply>they say the <code>accessor</code> keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me","mimetype":"text/html"}]},"ts":1648490653656,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Ln6sVXkJL_Wkmm4IqUf4Jd4SVg2n9uy5W6ABzfYJfT4"},
{"content":{"body":"TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/html"}]},"ts":1648490657909,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IgOWFkqt38bez-W2aMx2zlCn_weIMSxuFYtlT6KXUUA"},
{"content":{"body":"> <@shuyuguo:matrix.org> how would \"epics\" help this? genuinely asking, no idea what those are\n\noften, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wXq33IvX5eyytw6rdqo5MdNs0_-HqNFFPaE3OyhKX78?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>how would &quot;epics&quot; help this? genuinely asking, no idea what those are</blockquote></mx-reply>often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about","m.relates_to":{"m.in_reply_to":{"event_id":"$wXq33IvX5eyytw6rdqo5MdNs0_-HqNFFPaE3OyhKX78"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@shuyuguo:matrix.org> how would \"epics\" help this? genuinely asking, no idea what those are\n\noften, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wXq33IvX5eyytw6rdqo5MdNs0_-HqNFFPaE3OyhKX78?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>how would &quot;epics&quot; help this? genuinely asking, no idea what those are</blockquote></mx-reply>often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about","mimetype":"text/html"}]},"ts":1648490666397,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$dhTXyLBMCOf9qmiiaK9054la8RZFAvQT6ihyKwgeN-Y"},
{"content":{"body":" * TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","m.new_content":{"body":"TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$IgOWFkqt38bez-W2aMx2zlCn_weIMSxuFYtlT6KXUUA","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * TabAtkins: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that use case doesn't seem worth its own syntactic form, I guess is my feeling","mimetype":"text/html"}]},"ts":1648490668117,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$12nADRo7PYxPDmvfqn-KdG5Bj-uErifsoZCYXhUxFPI"},
{"content":{"body":"If it required more than just \"don't put the when()\" in, I'd agree.","msgtype":"m.text","org.matrix.msc1767.text":"If it required more than just \"don't put the when()\" in, I'd agree."},"ts":1648490672605,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$_V17Vy_abQl-0jdXTiUnZjR91l-M9oR46X3t1pFt5CE"},
{"content":{"body":"yulia: okay i see. i support that","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: okay i see. i support that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: okay i see. i support that","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: okay i see. i support that","mimetype":"text/html"}]},"ts":1648490690037,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Eg_iWPepz9DfxBPR40Aq15d0uejiK0YVt-mYyD-4msY"},
{"content":{"body":"> <@jackworks:matrix.org> they say the `accessor` keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me\n\nyeah we were looking into the requirements there, we will have a discussion with that. I think Iain may have posted an issue (lemme check)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Ln6sVXkJL_Wkmm4IqUf4Jd4SVg2n9uy5W6ABzfYJfT4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>they say the <code>accessor</code> keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me</blockquote></mx-reply>yeah we were looking into the requirements there, we will have a discussion with that. I think Iain may have posted an issue (lemme check)","m.relates_to":{"m.in_reply_to":{"event_id":"$Ln6sVXkJL_Wkmm4IqUf4Jd4SVg2n9uy5W6ABzfYJfT4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> they say the `accessor` keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me\n\nyeah we were looking into the requirements there, we will have a discussion with that. I think Iain may have posted an issue (lemme check)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Ln6sVXkJL_Wkmm4IqUf4Jd4SVg2n9uy5W6ABzfYJfT4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>they say the <code>accessor</code> keyword is necessary and not blocking the future extension of the Grouping accessor proposal so I guess it is ok for me</blockquote></mx-reply>yeah we were looking into the requirements there, we will have a discussion with that. I think Iain may have posted an issue (lemme check)","mimetype":"text/html"}]},"ts":1648490707463,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Pr25BBR4afhw5og9PQwAPBAii79WUvwlHiWb5qUrjKA"},
{"content":{"body":"But requiring `when (_) if(something)` is awkward when the shorter syntax form is *right there* and totally unambiguous","format":"org.matrix.custom.html","formatted_body":"But requiring <code>when (_) if(something)</code> is awkward when the shorter syntax form is <em>right there</em> and totally unambiguous","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But requiring `when (_) if(something)` is awkward when the shorter syntax form is *right there* and totally unambiguous","mimetype":"text/plain"},{"body":"But requiring <code>when (_) if(something)</code> is awkward when the shorter syntax form is <em>right there</em> and totally unambiguous","mimetype":"text/html"}]},"ts":1648490709539,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$fw9_10UNvOHsKiROanZvNY_DkEHVdOa-BPUAX-1otu4"},
{"content":{"body":"that's fair","msgtype":"m.text","org.matrix.msc1767.text":"that's fair"},"ts":1648490721332,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tKE0aq-dcolawjtdYMs0Ve4I6jHWY5QwYwxFMuFWDLA"},
{"content":{"body":"> <@yulia:mozilla.org> often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about\n\nI think such a process change would be really useful, thanks","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dhTXyLBMCOf9qmiiaK9054la8RZFAvQT6ihyKwgeN-Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about</blockquote></mx-reply>I think such a process change would be really useful, thanks","m.relates_to":{"m.in_reply_to":{"event_id":"$dhTXyLBMCOf9qmiiaK9054la8RZFAvQT6ihyKwgeN-Y"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about\n\nI think such a process change would be really useful, thanks","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dhTXyLBMCOf9qmiiaK9054la8RZFAvQT6ihyKwgeN-Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>often, when something like temporal has been presented i found myself checking out because i didn't have focus for the whole proposal. if we had a process that was like. Here is the big proposal and what it is trying to do, and it is composed of these parts. we are talking about part 1, which has it's own design concerns -- i would find this easier to think about</blockquote></mx-reply>I think such a process change would be really useful, thanks","mimetype":"text/html"}]},"ts":1648490725102,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$bkemZh899T-p2WBMjQ0ZajOvev_R7EHDv_mF_O2UA98"},
{"content":{"body":"(so what's the \"epic\" part referring to?)","msgtype":"m.text","org.matrix.msc1767.text":"(so what's the \"epic\" part referring to?)"},"ts":1648490738397,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dgMSppbqPAwDglTfCwpulNiB551mXXmnqX0Ktfpfi-w"},
{"content":{"body":"the epic is the overall feature (like pattern matching)","msgtype":"m.text","org.matrix.msc1767.text":"the epic is the overall feature (like pattern matching)"},"ts":1648490752799,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$jL_5C2_1kCVgFZfQHgMO3qBEem2DUpARO0iu5LeTIj8"},
{"content":{"body":"\"this is useful for dependency injection\" produces in me an immediate \"kill it with fire\" reaction","msgtype":"m.text","org.matrix.msc1767.text":"\"this is useful for dependency injection\" produces in me an immediate \"kill it with fire\" reaction"},"ts":1648490760061,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2OTsVFFNduGLFtPpq-AW3L2uR5tTIQdquE-4K5vJ82w"},
{"content":{"body":"perhaps that is not everyone's reaction to dependency injection","msgtype":"m.text","org.matrix.msc1767.text":"perhaps that is not everyone's reaction to dependency injection"},"ts":1648490765928,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CdIxz4P1X5yfxLZAyjRcQSf4G-EVEU05BkigpWMd1TI"},
{"content":{"body":"we can say that, when a proposal is large and consists of many components, but they cannot be broken up without compromising the goal of the proposal, it should be treated as an epic (or maybe we can call it a modular proposal or whatever)","msgtype":"m.text","org.matrix.msc1767.text":"we can say that, when a proposal is large and consists of many components, but they cannot be broken up without compromising the goal of the proposal, it should be treated as an epic (or maybe we can call it a modular proposal or whatever)"},"ts":1648490786470,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6-xHkUGER1FfCtEBpN_KimfhFEMr0HKaEYWQUPECiRU"},
{"content":{"body":"it's certainly my reaction too","msgtype":"m.text","org.matrix.msc1767.text":"it's certainly my reaction too"},"ts":1648490786893,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$00YdDMaSQV18kQw1rEQeczcdnVx1xLwgvweKD-xoHlw"},
{"content":{"body":"it usually is, but my first reaction is always \"what is dependency injection again\"","msgtype":"m.text","org.matrix.msc1767.text":"it usually is, but my first reaction is always \"what is dependency injection again\""},"ts":1648490791365,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2PpVAFwyTZjXj5VB2psH7fR0iG2XReVvIIC_XgMaQD0"},
{"content":{"body":" * it's certainly my reaction too","m.new_content":{"body":"it's certainly my reaction too","msgtype":"m.text","org.matrix.msc1767.text":"it's certainly my reaction too"},"m.relates_to":{"event_id":"$00YdDMaSQV18kQw1rEQeczcdnVx1xLwgvweKD-xoHlw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it's certainly my reaction too"},"ts":1648490792374,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$y6d7WcfZDkriVgxH3OHr4mnIrpPyUsxODu3z6ugitpo"},
{"content":{"body":"function arguments, but implicit and magic","msgtype":"m.text","org.matrix.msc1767.text":"function arguments, but implicit and magic"},"ts":1648490800942,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$boOCKaVsbXQBSdh2ca5V0--JIohIVe5rBmbFgsDQ2ek"},
{"content":{"body":"and when i re-learn it as argument passing, then your reaction is my following one","msgtype":"m.text","org.matrix.msc1767.text":"and when i re-learn it as argument passing, then your reaction is my following one"},"ts":1648490801336,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3VyU3-9g0VRfe3XkkY_UvB85LWsqEvOaaihABqH6cfI"},
{"content":{"body":"> <@ljharb:matrix.org> i think we have `match (e) as x {` in the current proposal (or maybe `match (e as x) {`, i forget which we agreed on)\n\nNah we dropped the `as x` stuff entirely, in favor of using `x and ...` matchers.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$a8wStv5ixxSQKc_3TZNtxo1Evmb3mDMqiBcChLESg5g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i think we have <code>match (e) as x {</code> in the current proposal (or maybe <code>match (e as x) {</code>, i forget which we agreed on)</blockquote></mx-reply>Nah we dropped the <code>as x</code> stuff entirely, in favor of using <code>x and ...</code> matchers.","m.relates_to":{"m.in_reply_to":{"event_id":"$a8wStv5ixxSQKc_3TZNtxo1Evmb3mDMqiBcChLESg5g"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> i think we have `match (e) as x {` in the current proposal (or maybe `match (e as x) {`, i forget which we agreed on)\n\nNah we dropped the `as x` stuff entirely, in favor of using `x and ...` matchers.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$a8wStv5ixxSQKc_3TZNtxo1Evmb3mDMqiBcChLESg5g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i think we have <code>match (e) as x {</code> in the current proposal (or maybe <code>match (e as x) {</code>, i forget which we agreed on)</blockquote></mx-reply>Nah we dropped the <code>as x</code> stuff entirely, in favor of using <code>x and ...</code> matchers.","mimetype":"text/html"}]},"ts":1648490810173,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$FVnhX7UeBeSM0KLAhKmW2qoCwIqz14GoENbyQUoM7rU"},
{"content":{"body":"TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","mimetype":"text/html"}]},"ts":1648490871721,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y0wcsaSa1QOC3FDnXwZOTQZUd-JKrcLnU5soGuHgb54"},
{"content":{"body":" * TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","m.new_content":{"body":"TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$y0wcsaSa1QOC3FDnXwZOTQZUd-JKrcLnU5soGuHgb54","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc","mimetype":"text/html"}]},"ts":1648490894774,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1R2bN3qv6lUt7U4ZScUzOw-N2ARU3wzEU2paQV9vUGY"},
{"content":{"body":"maybe do-exprs are the fix for that though","msgtype":"m.text","org.matrix.msc1767.text":"maybe do-exprs are the fix for that though"},"ts":1648490914554,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WVljp9lBHzaH703MN1QhTruN8K4-YkyfxG0w7nZqr7g"},
{"content":{"body":"> <@bakkot:matrix.org> I claim `and` and `or` have an obvious precedence relationship\n\nI know the &&/|| precedence is *well-established*, I strongly object that it's *obvious*; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Mr-Ipnsk-y66PZ10fDTeECebURqdgk7uwgXn4yLePds?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I claim <code>and</code> and <code>or</code> have an obvious precedence relationship</blockquote></mx-reply>I know the &amp;&amp;/|| precedence is <em>well-established</em>, I strongly object that it's <em>obvious</em>; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.","m.relates_to":{"m.in_reply_to":{"event_id":"$Mr-Ipnsk-y66PZ10fDTeECebURqdgk7uwgXn4yLePds"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> I claim `and` and `or` have an obvious precedence relationship\n\nI know the &&/|| precedence is *well-established*, I strongly object that it's *obvious*; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Mr-Ipnsk-y66PZ10fDTeECebURqdgk7uwgXn4yLePds?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I claim <code>and</code> and <code>or</code> have an obvious precedence relationship</blockquote></mx-reply>I know the &amp;&amp;/|| precedence is <em>well-established</em>, I strongly object that it's <em>obvious</em>; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.","mimetype":"text/html"}]},"ts":1648490922390,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$nDhUbFbxGPKHZfqsA6kjoeWUPOb687OtLK6fx7y55do"},
{"content":{"body":"`do { let x = expr; match(x) {...} }`","format":"org.matrix.custom.html","formatted_body":"<code>do { let x = expr; match(x) {...} }</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`do { let x = expr; match(x) {...} }`","mimetype":"text/plain"},{"body":"<code>do { let x = expr; match(x) {...} }</code>","mimetype":"text/html"}]},"ts":1648490923654,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WhtdA76VT0RVn27K8Na0J63pjshqqyDccbjlfXTu40E"},
{"content":{"body":"so for the decorator, I guess the `metadata` part will be the hardest push at this meeting, maybe they will seek a conditional advancement (once the metadata problem is resolved, it will automatically advance to stage 3)?","format":"org.matrix.custom.html","formatted_body":"so for the decorator, I guess the <code>metadata</code> part will be the hardest push at this meeting, maybe they will seek a conditional advancement (once the metadata problem is resolved, it will automatically advance to stage 3)?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so for the decorator, I guess the `metadata` part will be the hardest push at this meeting, maybe they will seek a conditional advancement (once the metadata problem is resolved, it will automatically advance to stage 3)?","mimetype":"text/plain"},{"body":"so for the decorator, I guess the <code>metadata</code> part will be the hardest push at this meeting, maybe they will seek a conditional advancement (once the metadata problem is resolved, it will automatically advance to stage 3)?","mimetype":"text/html"}]},"ts":1648490934562,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$P90hpLDYpLnbhi26F2PBjObCWybDg0ELNUd-EeTp1Tg"},
{"content":{"body":"TabAtkins: that's fair but I stand by \"well precedented\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that's fair but I stand by &quot;well precedented&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: that's fair but I stand by \"well precedented\"","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: that's fair but I stand by &quot;well precedented&quot;","mimetype":"text/html"}]},"ts":1648490940779,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$l1iGH4XpSMCQYoTclvrTypfck5o1nZV-eHYCG7HBWTs"},
{"content":{"body":"yulia: Reading through old issues I found this, which convinced me that there are good reasons for `accessor` to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Reading through old issues I found this, which convinced me that there are good reasons for <code>accessor</code> to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: Reading through old issues I found this, which convinced me that there are good reasons for `accessor` to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Reading through old issues I found this, which convinced me that there are good reasons for <code>accessor</code> to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352","mimetype":"text/html"}]},"ts":1648490943385,"senderName":"iain","senderId":"@iain:mozilla.org","id":"$VfjIJLc2ridN_N9un5cbxaDbhWglVKJazBYLad5l6Gc"},
{"content":{"body":"people who don't know the relationship are already going to be struggling with the `&&` and `||` cases","format":"org.matrix.custom.html","formatted_body":"people who don't know the relationship are already going to be struggling with the <code>&amp;&amp;</code> and <code>||</code> cases","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"people who don't know the relationship are already going to be struggling with the `&&` and `||` cases","mimetype":"text/plain"},{"body":"people who don't know the relationship are already going to be struggling with the <code>&amp;&amp;</code> and <code>||</code> cases","mimetype":"text/html"}]},"ts":1648490953951,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$K34dafsAqug0GphXI5wEAo5zp6F4xG4RQ45iY6yRYTA"},
{"content":{"body":"people who do are going to be annoyed every single time they use `and` with `or`","format":"org.matrix.custom.html","formatted_body":"people who do are going to be annoyed every single time they use <code>and</code> with <code>or</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"people who do are going to be annoyed every single time they use `and` with `or`","mimetype":"text/plain"},{"body":"people who do are going to be annoyed every single time they use <code>and</code> with <code>or</code>","mimetype":"text/html"}]},"ts":1648490962475,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z-4rggmrijy5gbyaU3Kl9K3iwRiAv8D7NWZl0LBWUms"},
{"content":{"body":"which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing","msgtype":"m.text","org.matrix.msc1767.text":"which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing"},"ts":1648490972307,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mWNmwdN9V83WbNeUQEPPZEOgOx4UvURMD2z2L1a8TtY"},
{"content":{"body":" * which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing","m.new_content":{"body":"which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing","msgtype":"m.text","org.matrix.msc1767.text":"which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing"},"m.relates_to":{"event_id":"$mWNmwdN9V83WbNeUQEPPZEOgOx4UvURMD2z2L1a8TtY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * which is why common linter rules/styleguides force parens around mixed && and ||, because it's so frequently confusing"},"ts":1648490977897,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GM7BxWra3kzQRaozmJp58Q9r9sXzq51Z7gjmfnmo9yI"},
{"content":{"body":"> <@iain:mozilla.org> yulia: Reading through old issues I found this, which convinced me that there are good reasons for `accessor` to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352\n\noh, great! thanks -- that comment is retracted then","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VfjIJLc2ridN_N9un5cbxaDbhWglVKJazBYLad5l6Gc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@iain:mozilla.org\">@iain:mozilla.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Reading through old issues I found this, which convinced me that there are good reasons for <code>accessor</code> to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352</blockquote></mx-reply>oh, great! thanks -- that comment is retracted then","m.relates_to":{"m.in_reply_to":{"event_id":"$VfjIJLc2ridN_N9un5cbxaDbhWglVKJazBYLad5l6Gc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@iain:mozilla.org> yulia: Reading through old issues I found this, which convinced me that there are good reasons for `accessor` to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352\n\noh, great! thanks -- that comment is retracted then","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VfjIJLc2ridN_N9un5cbxaDbhWglVKJazBYLad5l6Gc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@iain:mozilla.org\">@iain:mozilla.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Reading through old issues I found this, which convinced me that there are good reasons for <code>accessor</code> to exist as a keyword (instead of making decorated fields into accessors by default): https://github.com/tc39/proposal-decorators/issues/348#issuecomment-736889352</blockquote></mx-reply>oh, great! thanks -- that comment is retracted then","mimetype":"text/html"}]},"ts":1648490984990,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$bPv2tbIjrXjCk2x15ZwQttU4sbHZiNV6zx2tq-zh2z8"},
{"content":{"body":"i was just going to ask","msgtype":"m.text","org.matrix.msc1767.text":"i was just going to ask"},"ts":1648490991471,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$2sN2qkzV3FujN_TufKKm4P9Iusw8qsd85BFCWZzrp8A"},
{"content":{"body":"> <@tabatkins:matrix.org> I know the &&/|| precedence is *well-established*, I strongly object that it's *obvious*; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.\n\ndo you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nDhUbFbxGPKHZfqsA6kjoeWUPOb687OtLK6fx7y55do?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>I know the &amp;&amp;/|| precedence is <em>well-established</em>, I strongly object that it's <em>obvious</em>; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.</blockquote></mx-reply>do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?","m.relates_to":{"m.in_reply_to":{"event_id":"$nDhUbFbxGPKHZfqsA6kjoeWUPOb687OtLK6fx7y55do"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@tabatkins:matrix.org> I know the &&/|| precedence is *well-established*, I strongly object that it's *obvious*; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.\n\ndo you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nDhUbFbxGPKHZfqsA6kjoeWUPOb687OtLK6fx7y55do?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>I know the &amp;&amp;/|| precedence is <em>well-established</em>, I strongly object that it's <em>obvious</em>; I've been programming for 20 years and I still always parenthesize when I'm mixing those, because I never remember what the precedence is.</blockquote></mx-reply>do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?","mimetype":"text/html"}]},"ts":1648491025835,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$rwqvf17oLQbxy-n2fboKgIb7frQzygJpxefc4fanCck"},
{"content":{"body":"yes, always. there's a linter rule for that too.","msgtype":"m.text","org.matrix.msc1767.text":"yes, always. there's a linter rule for that too."},"ts":1648491070158,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$V-2XbGf9j_W5YVBqUPHgxFjFVKEEX2gvtBthiKH8tbE"},
{"content":{"body":"yeah, same","msgtype":"m.text","org.matrix.msc1767.text":"yeah, same"},"ts":1648491074962,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$z-oqpkz4ak-VBsRmH2WjIo4RBz4PNDW5kLRLRy6NkV8"},
{"content":{"body":"helps human brains if not machine ones and it's free!","msgtype":"m.text","org.matrix.msc1767.text":"helps human brains if not machine ones and it's free!"},"ts":1648491089078,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$6nWrqQmfqeslGZsVKVV_1YqiVlvv8CcPhDmzj2NiEs8"},
{"content":{"body":"ljharb: there's also a linter rule to remove them 😉","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: there's also a linter rule to remove them 😉","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: there's also a linter rule to remove them 😉","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: there's also a linter rule to remove them 😉","mimetype":"text/html"}]},"ts":1648491097479,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$v5OQqsylguMddRjW6c7vQGpEEqKY7m-_OG5S1doBgWE"},
{"content":{"body":"that rule would be completely intolerable if it weren't auto-fixable","msgtype":"m.text","org.matrix.msc1767.text":"that rule would be completely intolerable if it weren't auto-fixable"},"ts":1648491101882,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$00yyJB4hIyepoBH0VYGFxk8SQSX0MZBvnBs9Ke3IsX0"},
{"content":{"body":"I'm not going to write `a + (x * y)` by hand","format":"org.matrix.custom.html","formatted_body":"I'm not going to write <code>a + (x * y)</code> by hand","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm not going to write `a + (x * y)` by hand","mimetype":"text/plain"},{"body":"I'm not going to write <code>a + (x * y)</code> by hand","mimetype":"text/html"}]},"ts":1648491109920,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9L-NQF5T8M5G0ujDIJdM_qxYN18O7ghxb5qMW-ma8cg"},
{"content":{"body":"but making it a syntax error to write `x and y or z` means that I am forced to","format":"org.matrix.custom.html","formatted_body":"but making it a syntax error to write <code>x and y or z</code> means that I am forced to","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but making it a syntax error to write `x and y or z` means that I am forced to","mimetype":"text/plain"},{"body":"but making it a syntax error to write <code>x and y or z</code> means that I am forced to","mimetype":"text/html"}]},"ts":1648491127962,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2pkwwZONjw-MNX8tmFYvQyJsAc9e2hFW1pf6OQ3MkYo"},
{"content":{"body":"because eslint won't parse it","msgtype":"m.text","org.matrix.msc1767.text":"because eslint won't parse it"},"ts":1648491137804,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7tqa8EnJYsimz_s0JEAerEDpQX5y4PgwDURVQEBDSGU"},
{"content":{"body":"seems like this is _very_ a case for linters","format":"org.matrix.custom.html","formatted_body":"seems like this is <em>very</em> a case for linters","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"seems like this is _very_ a case for linters","mimetype":"text/plain"},{"body":"seems like this is <em>very</em> a case for linters","mimetype":"text/html"}]},"ts":1648491144408,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VakAosf21ZeWHMW7OvPlT8FrDqSK-jIK6WJM3ugHT4w"},
{"content":{"body":"that's why i exclusively use number of spaces to signal precedence","msgtype":"m.text","org.matrix.msc1767.text":"that's why i exclusively use number of spaces to signal precedence"},"ts":1648491184673,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Zo5GjoydENvIXcsJ5V2g24B_n3yzfsGlu8a_ssPgAAE"},
{"content":{"body":"`a  +   x*y`","format":"org.matrix.custom.html","formatted_body":"<code>a  +   x*y</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`a  +   x*y`","mimetype":"text/plain"},{"body":"<code>a  +   x*y</code>","mimetype":"text/html"}]},"ts":1648491197469,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ivozc7-zCJrRicrymXqk3966fAVHSOh3d6zXjuIw3fE"},
{"content":{"body":":D","msgtype":"m.text","org.matrix.msc1767.text":":D"},"ts":1648491205440,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TWxcKG9X67y3cA4dPRpeRzzUBn1R6x-rG5mrW_8Aa98"},
{"content":{"body":"Can we just introduce the Polish notation to JS? https://en.wikipedia.org/wiki/Polish_notation#Explanation","msgtype":"m.text","org.matrix.msc1767.text":"Can we just introduce the Polish notation to JS? https://en.wikipedia.org/wiki/Polish_notation#Explanation"},"ts":1648491266815,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wkOIGvyCoR3BaKQY8EAjpsBYU2nHI1F13utiMUNdypc"},
{"content":{"body":"like, I agree that it can be a good idea to make these things an error in the absence of a well-precedented thing that many (not all) people will already know - but there is that, in this case","msgtype":"m.text","org.matrix.msc1767.text":"like, I agree that it can be a good idea to make these things an error in the absence of a well-precedented thing that many (not all) people will already know - but there is that, in this case"},"ts":1648491273417,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RXQWyEbEsWymkRH81UzUawRk9HaKp8gMFIWMwXIYL18"},
{"content":{"body":"> <@bakkot:matrix.org> TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc\n\nThat's possible! Grammar's open to that, it was just killed as part of a general \"remove the `as x renaming facility now that we have `and`. Could be brought back in for the matchable in the head specifically. Feel free to open an issue.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$y0wcsaSa1QOC3FDnXwZOTQZUd-JKrcLnU5soGuHgb54?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc</blockquote></mx-reply>That's possible! Grammar's open to that, it was just killed as part of a general &quot;remove the <code>as x renaming facility now that we have </code>and`. Could be brought back in for the matchable in the head specifically. Feel free to open an issue.","m.relates_to":{"m.in_reply_to":{"event_id":"$y0wcsaSa1QOC3FDnXwZOTQZUd-JKrcLnU5soGuHgb54"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> TabAtkins: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of `match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;` etc\n\nThat's possible! Grammar's open to that, it was just killed as part of a general \"remove the `as x renaming facility now that we have `and`. Could be brought back in for the matchable in the head specifically. Feel free to open an issue.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$y0wcsaSa1QOC3FDnXwZOTQZUd-JKrcLnU5soGuHgb54?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: ok so my feeling is that it would be very useful to bind the name at the top level of the match, because otherwise there's going to be a bunch of <code>match (expr) when (x) if (f(x)) ...; when (x) if (g(x)) ...;</code> etc</blockquote></mx-reply>That's possible! Grammar's open to that, it was just killed as part of a general &quot;remove the <code>as x renaming facility now that we have </code>and`. Could be brought back in for the matchable in the head specifically. Feel free to open an issue.","mimetype":"text/html"}]},"ts":1648491284912,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$TWOWDZ2Lkyy_9EhsaKPel7qXwRMTqySiOGCvPFVSpPw"},
{"content":{"body":"nicolo-ribaudo: perhaps you'd like to propose `Math.add`, `Math.multiply`, etc?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: perhaps you'd like to propose <code>Math.add</code>, <code>Math.multiply</code>, etc?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"nicolo-ribaudo: perhaps you'd like to propose `Math.add`, `Math.multiply`, etc?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: perhaps you'd like to propose <code>Math.add</code>, <code>Math.multiply</code>, etc?","mimetype":"text/html"}]},"ts":1648491298128,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$utYMQGwR8ZPSirIcGT6mqL_l-76-oAek0M7rGJyXyZQ"},
{"content":{"body":"oops sorry this isn't TDZ","msgtype":"m.text","org.matrix.msc1767.text":"oops sorry this isn't TDZ"},"ts":1648491303765,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qx-11JmFvsulXkjvXYWLsdglNmmZVQNGvChhr50OWks"},
{"content":{"body":"Whops I thought I was in TDZ too","msgtype":"m.text","org.matrix.msc1767.text":"Whops I thought I was in TDZ too"},"ts":1648491316609,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ynka0w7VbnsBFdnX3JsVgmT4iLhQqxoDgyIE5S6JNiY"},
{"content":{"body":"we should have those, in seriousness though","msgtype":"m.text","org.matrix.msc1767.text":"we should have those, in seriousness though"},"ts":1648491320333,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$chNcgS9SnfqEIRzsti-1bSddK4fSsgBvGkmzshhfBPc"},
{"content":{"body":"ngl agree","msgtype":"m.text","org.matrix.msc1767.text":"ngl agree"},"ts":1648491331712,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$tJg5zconIwyJlaKrbEVef48hPn__QR506gmTaXoSEro"},
{"content":{"body":" * Whops I thought I was in TDZ too","m.new_content":{"body":"Whops I thought I was in TDZ too","msgtype":"m.text","org.matrix.msc1767.text":"Whops I thought I was in TDZ too"},"m.relates_to":{"event_id":"$Ynka0w7VbnsBFdnX3JsVgmT4iLhQqxoDgyIE5S6JNiY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Whops I thought I was in TDZ too"},"ts":1648491335036,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$R6L7flkmgMlxXZ3kRejQLm9QDOs24FVj_VtbvoWsQBE"},
{"content":{"body":"TDZ to proposal pipeline","msgtype":"m.text","org.matrix.msc1767.text":"TDZ to proposal pipeline"},"ts":1648491347198,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$toMSrQXbRvjtp-SbAsA0X_9BKt3Uyfh3uwhE8OottbU"},
{"content":{"body":"> <@michaelficarra:matrix.org> do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?\n\nNo, +- and */ have a precedence relationship matching the precedence rules taught in math class since I was a little kid. (That said, I still often use spacing to make it clear - `foo*bar + baz`, and still parenthesize if the expr is large enough that spacing clues aren't sufficient.)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rwqvf17oLQbxy-n2fboKgIb7frQzygJpxefc4fanCck?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?</blockquote></mx-reply>No, +- and */ have a precedence relationship matching the precedence rules taught in math class since I was a little kid. (That said, I still often use spacing to make it clear - <code>foo*bar + baz</code>, and still parenthesize if the expr is large enough that spacing clues aren't sufficient.)","m.relates_to":{"m.in_reply_to":{"event_id":"$rwqvf17oLQbxy-n2fboKgIb7frQzygJpxefc4fanCck"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@michaelficarra:matrix.org> do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?\n\nNo, +- and */ have a precedence relationship matching the precedence rules taught in math class since I was a little kid. (That said, I still often use spacing to make it clear - `foo*bar + baz`, and still parenthesize if the expr is large enough that spacing clues aren't sufficient.)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rwqvf17oLQbxy-n2fboKgIb7frQzygJpxefc4fanCck?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>do you use unnecessary parentheses when mixing +/- with * in arithmetic expressions, too?</blockquote></mx-reply>No, +- and */ have a precedence relationship matching the precedence rules taught in math class since I was a little kid. (That said, I still often use spacing to make it clear - <code>foo*bar + baz</code>, and still parenthesize if the expr is large enough that spacing clues aren't sufficient.)","mimetype":"text/html"}]},"ts":1648491392529,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$_iQRPQUnh3veLqmzzupbikCqahqx_POJqTWXBagyuik"},
{"content":{"body":"What's `-x ** 2` again?","format":"org.matrix.custom.html","formatted_body":"What's <code>-x ** 2</code> again?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"What's `-x ** 2` again?","mimetype":"text/plain"},{"body":"What's <code>-x ** 2</code> again?","mimetype":"text/html"}]},"ts":1648491418024,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$oQK2qTKB5S17K8blEohjWJY7AL2fto2P9VT15OHDJQA"},
{"content":{"body":"sorry, not TDZ","msgtype":"m.text","org.matrix.msc1767.text":"sorry, not TDZ"},"ts":1648491424591,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$olVIklOuyolpc96pmZFJGU7Eo29OXG6qPoovr2IFwTk"},
{"content":{"body":"(I can think of a lot of beginners who would feel comfortable with the explicit language of a method, and who having those methods would help make more comfortable with syntax like `Array.isArray()` or `Object.hasOwn()`)","format":"org.matrix.custom.html","formatted_body":"(I can think of a lot of beginners who would feel comfortable with the explicit language of a method, and who having those methods would help make more comfortable with syntax like <code>Array.isArray()</code> or <code>Object.hasOwn()</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(I can think of a lot of beginners who would feel comfortable with the explicit language of a method, and who having those methods would help make more comfortable with syntax like `Array.isArray()` or `Object.hasOwn()`)","mimetype":"text/plain"},{"body":"(I can think of a lot of beginners who would feel comfortable with the explicit language of a method, and who having those methods would help make more comfortable with syntax like <code>Array.isArray()</code> or <code>Object.hasOwn()</code>)","mimetype":"text/html"}]},"ts":1648491434770,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$yu8gRFbI3oLUZE-hrD3YSd_Bzlx8TeM6DbmonHiI-yk"},
{"content":{"body":"TabAtkins: I know you know this, but in many ways `and` is `*` and `or` is `+`, so why is that hard to remember?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: I know you know this, but in many ways <code>and</code> is <code>*</code> and <code>or</code> is <code>+</code>, so why is that hard to remember?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: I know you know this, but in many ways `and` is `*` and `or` is `+`, so why is that hard to remember?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: I know you know this, but in many ways <code>and</code> is <code>*</code> and <code>or</code> is <code>+</code>, so why is that hard to remember?","mimetype":"text/html"}]},"ts":1648491439375,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$H4kyJcwhwhsnUjI75p7hAhXuy8sY-XUCAPB-4sSohBU"},
{"content":{"body":"for those who had opinions on the \"spec quality\" stuff, please share your thoughts https://github.com/tc39/process-document/pull/35","msgtype":"m.text","org.matrix.msc1767.text":"for those who had opinions on the \"spec quality\" stuff, please share your thoughts https://github.com/tc39/process-document/pull/35"},"ts":1648491456880,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CuI3xY4TvFp9wGOMzl15RSYR2nl4yNlezE5tOpBYiiY"},
{"content":{"body":"danielrosenwasser: that one is not well-precedented","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a>: that one is not well-precedented","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"danielrosenwasser: that one is not well-precedented","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a>: that one is not well-precedented","mimetype":"text/html"}]},"ts":1648491457526,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RCEW5gLtxBxLjbTN_WqJjxXln2saTvTo-19yk-nxGoY"},
{"content":{"body":"or rather, there are conflicting precedents","msgtype":"m.text","org.matrix.msc1767.text":"or rather, there are conflicting precedents"},"ts":1648491471382,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZGaQvBOv5tpGBvxpbnR4EwsnnG10AGX1htIiXuO3mlA"},
{"content":{"body":"That correspondence is very \"college-level abstract math\", not \"elementar-school arithmetic\"; they're entirely different ","msgtype":"m.text","org.matrix.msc1767.text":"That correspondence is very \"college-level abstract math\", not \"elementar-school arithmetic\"; they're entirely different "},"ts":1648491473647,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$jOM7OLuL20LuVaY0bdp4aUlPbRs21tNlGOrCKpiCI0E"},
{"content":{"body":"Can't there be a placeholder for the class given to decorators, and a way to link the placeholder to the class after definition ?","msgtype":"m.text","org.matrix.msc1767.text":"Can't there be a placeholder for the class given to decorators, and a way to link the placeholder to the class after definition ?"},"ts":1648491805709,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$KOrm4t4bgAps4sCxFjLUc9xug2PZx8zqurgCqHEp-J8"},
{"content":{"body":"i'm sure it could get a symbol. but then how do you symbolicate (unsymbolicate?) it later?","msgtype":"m.text","org.matrix.msc1767.text":"i'm sure it could get a symbol. but then how do you symbolicate (unsymbolicate?) it later?"},"ts":1648491882671,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$fo0wHMq_LNJY6-GmygetooqjTww-nBDBhDFOhLX8Zcs"},
{"content":{"body":"\"angular wants this\" is _so_ far from being compelling to me","format":"org.matrix.custom.html","formatted_body":"&quot;angular wants this&quot; is <em>so</em> far from being compelling to me","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"\"angular wants this\" is _so_ far from being compelling to me","mimetype":"text/plain"},{"body":"&quot;angular wants this&quot; is <em>so</em> far from being compelling to me","mimetype":"text/html"}]},"ts":1648491914866,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$60UOTCKwaARTk29a_J5C3nImHF82enwaogbwpVnRAS8"},
{"content":{"body":"Unless we have symbols as WeakMap keys, I'd want an empty object","msgtype":"m.text","org.matrix.msc1767.text":"Unless we have symbols as WeakMap keys, I'd want an empty object"},"ts":1648491933285,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$y6FXwqy0LMNFKGJ4mZ3cv7kNMogLj99mGyI8y82w-aQ"},
{"content":{"body":"having an object placeholder that wasn't frozen would be pretty weird","msgtype":"m.text","org.matrix.msc1767.text":"having an object placeholder that wasn't frozen would be pretty weird"},"ts":1648491982551,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_iV2-L_omFp7zdjRjQ50NSa6J7qvzMF7w-MHKueJCJI"},
{"content":{"body":"And maybe \"unsymbolicating\" could be done as a class decorator ran last, that does get access to the final class and the placeholder, but without replacing the class","msgtype":"m.text","org.matrix.msc1767.text":"And maybe \"unsymbolicating\" could be done as a class decorator ran last, that does get access to the final class and the placeholder, but without replacing the class"},"ts":1648491997022,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$9ymwzA8NnBovfLx6S7ERz8YqX-9IiI7OjVSB3VaUqs4"},
{"content":{"body":"aka an `@metadata class Foo {}`","format":"org.matrix.custom.html","formatted_body":"aka an <code>@metadata class Foo {}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"aka an `@metadata class Foo {}`","mimetype":"text/plain"},{"body":"aka an <code>@metadata class Foo {}</code>","mimetype":"text/html"}]},"ts":1648492049195,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$PZC6Rd1NT5itQKYegwwazDt50FxNxtQnQXeenm6WiOo"},
{"content":{"body":"either way tho, then you have N + 1 identities to manage","msgtype":"m.text","org.matrix.msc1767.text":"either way tho, then you have N + 1 identities to manage"},"ts":1648492083845,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pIjNfRQO_ZG9FJ8ZbrCJmiAkaCO0xxLzWmcRiIftrrY"},
{"content":{"body":"sidebar: anyone know what millions-of-downloads dependency injection framework was being referenced?","msgtype":"m.text","org.matrix.msc1767.text":"sidebar: anyone know what millions-of-downloads dependency injection framework was being referenced?"},"ts":1648492110322,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sH3OMWmpBKw9D6GNVwLxHSGrCBFbEPiFAUaqQVsEyWY"},
{"content":{"body":"I can't find any offhand","msgtype":"m.text","org.matrix.msc1767.text":"I can't find any offhand"},"ts":1648492114386,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Gpajv1k0MfecREUXnyxFqPotRnt093IapQtLcVVNnKM"},
{"content":{"body":"shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","mimetype":"text/html"}]},"ts":1648492135375,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$xapMX8v6tU3aY3slvKBD32RmAL_Emn6B7XglIcABhOU"},
{"content":{"body":" * shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","m.new_content":{"body":"shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xapMX8v6tU3aY3slvKBD32RmAL_Emn6B7XglIcABhOU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * shu:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators ","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>:  I confirm what Chris said about TS and Babel usage. LWC is TS based but uses the Babel impl. of Decorators","mimetype":"text/html"}]},"ts":1648492150030,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$ZK-ueXTqUmrr0HAF8yzdCgxLpUJnzjezho7S0E7XkhM"},
{"content":{"body":"> \"angular wants this\" is so far from being compelling to me\nopposite of compelling really!","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>&quot;angular wants this&quot; is so far from being compelling to me<br>opposite of compelling really!</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> \"angular wants this\" is so far from being compelling to me\nopposite of compelling really!","mimetype":"text/plain"},{"body":"<blockquote>\n<p>&quot;angular wants this&quot; is so far from being compelling to me<br>opposite of compelling really!</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1648492176053,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fbV1VEkQdhvT4vJgNcsIFZmrcUIjTb90QVCTLTT60PI"},
{"content":{"body":"and also angular wouldn't care about standard decorators as i said","msgtype":"m.text","org.matrix.msc1767.text":"and also angular wouldn't care about standard decorators as i said"},"ts":1648492186225,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$myUWgJpP06EaC2dZ7RMEXfzvY_IBLJ2kvB4fLm8_UIQ"},
{"content":{"body":"LWC -> Salesforce's Lightning Web Components. ","msgtype":"m.text","org.matrix.msc1767.text":"LWC -> Salesforce's Lightning Web Components. "},"ts":1648492209514,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$QRjLSw6U-lC2jLpTE5-R9XHYUpinFV4Jee_Pb_ufuMM"},
{"content":{"body":"bakkot: the reply here points to something called Inversify: https://github.com/tc39/proposal-decorators/issues/442#issuecomment-1079544675","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the reply here points to something called Inversify: https://github.com/tc39/proposal-decorators/issues/442#issuecomment-1079544675","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: the reply here points to something called Inversify: https://github.com/tc39/proposal-decorators/issues/442#issuecomment-1079544675","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the reply here points to something called Inversify: https://github.com/tc39/proposal-decorators/issues/442#issuecomment-1079544675","mimetype":"text/html"}]},"ts":1648492280503,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dsTaI0jEt66C9ITBI79Dzx9KvE1sExEBNcD_fw2Ns8s"},
{"content":{"body":"why do people love dependency injection though","msgtype":"m.text","org.matrix.msc1767.text":"why do people love dependency injection though"},"ts":1648492299239,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3BWJhk22LqZF_F_2Q1Efr5TaqEd3bDcLjyOMKz0mxaA"},
{"content":{"body":"So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality","msgtype":"m.text","org.matrix.msc1767.text":"So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality"},"ts":1648492399993,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$bPiiIEWjXOdVli_ZA0wukSSvMpN6gGPm-iCnhfi69rc"},
{"content":{"body":" * So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality","m.new_content":{"body":"So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality","msgtype":"m.text","org.matrix.msc1767.text":"So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality"},"m.relates_to":{"event_id":"$bPiiIEWjXOdVli_ZA0wukSSvMpN6gGPm-iCnhfi69rc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * So I don't use DI, but I have consistently seen code editors rely on DI as their pattern for extensibility and even core functionality"},"ts":1648492406120,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$xSJ-mXtopBlPQsr3qcaTXPFgDbqmQaqoPLXZ5tRDshA"},
{"content":{"body":"Bonus","msgtype":"m.text","org.matrix.msc1767.text":"Bonus"},"ts":1648492406421,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$eeSugoLr3_lQBunz9m3N5ryqsm_rSOZuE1Lhug4d89Y"},
{"content":{"body":"setting the prototype without calling the constructor is very weird, yeah","msgtype":"m.text","org.matrix.msc1767.text":"setting the prototype without calling the constructor is very weird, yeah"},"ts":1648492438368,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bPTnDOsIUJj7hxxHOhitcHkUVf_PTmP0GqCqR1lwobg"},
{"content":{"body":"Basically \"we only need one extension instance to be loaded ever, and it can happen at any time\"","msgtype":"m.text","org.matrix.msc1767.text":"Basically \"we only need one extension instance to be loaded ever, and it can happen at any time\""},"ts":1648492438863,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$z-QCduuvbpn3lJ7eMNSohiBUFAwZqg-YKZu2BXswUOE"},
{"content":{"body":"Jack Works: good one","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: good one","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: good one","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: good one","mimetype":"text/html"}]},"ts":1648492448896,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ephRrk9ZqpPZ891jc0qyUGgjbDyqayVtQr8UskbJ71s"},
{"content":{"body":"VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","format":"org.matrix.custom.html","formatted_body":"VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","mimetype":"text/plain"},{"body":"VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","mimetype":"text/html"}]},"ts":1648492472195,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$KS5fyHS5RV2JAyGienPQV4VROMk316W5-QeAkAswYYY"},
{"content":{"body":" * VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","format":"org.matrix.custom.html","formatted_body":" * VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","m.new_content":{"body":"VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","format":"org.matrix.custom.html","formatted_body":"VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","mimetype":"text/plain"},{"body":"VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$KS5fyHS5RV2JAyGienPQV4VROMk316W5-QeAkAswYYY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * VS Code uses it, and VS does (different language), and _I think_ Eclipse might have as well (also different language)","mimetype":"text/plain"},{"body":" * VS Code uses it, and VS does (different language), and <em>I think</em> Eclipse might have as well (also different language)","mimetype":"text/html"}]},"ts":1648492488238,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$vNED8X6VJ0kKESZnWjHsJ3G0uusuUZaR-Qldrfp6yow"},
{"content":{"body":"why we're having subclassing ArrayBuffer at the first time anyway, it does not expose any API to access the internal data structure (need to use the view) and extending cannot do anything useful (excepts exploits the browser)","msgtype":"m.text","org.matrix.msc1767.text":"why we're having subclassing ArrayBuffer at the first time anyway, it does not expose any API to access the internal data structure (need to use the view) and extending cannot do anything useful (excepts exploits the browser)"},"ts":1648492571087,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wTWJTOlXeLUjD9pjrpL7-wy5tf2eBFNHOEULQinasLo"},
{"content":{"body":" * VS Code uses it, and VS does (written in a different language), and _I think_ Eclipse might have as well (also different language)","format":"org.matrix.custom.html","formatted_body":" * VS Code uses it, and VS does (written in a different language), and <em>I think</em> Eclipse might have as well (also different language)","m.new_content":{"body":"VS Code uses it, and VS does (written in a different language), and _I think_ Eclipse might have as well (also different language)","format":"org.matrix.custom.html","formatted_body":"VS Code uses it, and VS does (written in a different language), and <em>I think</em> Eclipse might have as well (also different language)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"VS Code uses it, and VS does (written in a different language), and _I think_ Eclipse might have as well (also different language)","mimetype":"text/plain"},{"body":"VS Code uses it, and VS does (written in a different language), and <em>I think</em> Eclipse might have as well (also different language)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$KS5fyHS5RV2JAyGienPQV4VROMk316W5-QeAkAswYYY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * VS Code uses it, and VS does (written in a different language), and _I think_ Eclipse might have as well (also different language)","mimetype":"text/plain"},{"body":" * VS Code uses it, and VS does (written in a different language), and <em>I think</em> Eclipse might have as well (also different language)","mimetype":"text/html"}]},"ts":1648492574007,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$4nTQGmPcAg6INXeYuYLcBDDX58kx_imQbXUF5TIyO-w"},
{"content":{"body":"Jack Works: we're gonna have a whoooooole long discussion about subclassing builtins later this meeting!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: we're gonna have a whoooooole long discussion about subclassing builtins later this meeting!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: we're gonna have a whoooooole long discussion about subclassing builtins later this meeting!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: we're gonna have a whoooooole long discussion about subclassing builtins later this meeting!","mimetype":"text/html"}]},"ts":1648492674401,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xn_uN4EMs4Dzdq6-bVZHUjx_1m4_QmD0K3HV3RT6Z5U"},
{"content":{"body":"Jack Works: yeah, great question!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: yeah, great question!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: yeah, great question!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: yeah, great question!","mimetype":"text/html"}]},"ts":1648492798070,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qRVGtaHpfLmFhqM_EoyoyH-eDcmMf5P_WemY0LhJYxg"},
{"content":{"body":"I too would like to see motivation for metadata other than DI before advancing metadata","msgtype":"m.text","org.matrix.msc1767.text":"I too would like to see motivation for metadata other than DI before advancing metadata"},"ts":1648492912687,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$T8BwPvwTsEEYzAuTMs08D8-gSpkoctWcMG1B5e0NyGs"},
{"content":{"body":"I have some motivation for metadata in https://github.com/tc39/proposal-decorators/issues/441","msgtype":"m.text"},"ts":1648492922595,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$eR5famb2ckTZsZGhJ29EoBZKZbj3Bj6n3ANl9w-wNf0"},
{"content":{"body":"wait","msgtype":"m.text","org.matrix.msc1767.text":"wait"},"ts":1648492977154,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$r_uZsSE5BzjFI6NOHEB2CTwem-z4hX7BLT3y6gphY94"},
{"content":{"body":"\"bubble\"?","msgtype":"m.text","org.matrix.msc1767.text":"\"bubble\"?"},"ts":1648492999588,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$rJfnhEKUCezoN_srQJZmo5oG3s-xuvAU0yI9E2LXHn8"},
{"content":{"body":"or did i mishear","msgtype":"m.text","org.matrix.msc1767.text":"or did i mishear"},"ts":1648493002635,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JiIk7bnkBYNF-WBInFtC57o8mf7Mc6QFPPZcc9F_xIM"},
{"content":{"body":"I've never seen a proposal that had more venues for developer feedback than decorators","msgtype":"m.text","org.matrix.msc1767.text":"I've never seen a proposal that had more venues for developer feedback than decorators"},"ts":1648493002638,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$GumJ3Cn0tPrJMipFW4iiEVIkAYnD-gcijQh8JLzHz_4"},
{"content":{"body":"babel","msgtype":"m.text","org.matrix.msc1767.text":"babel"},"ts":1648493003794,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z2cZN5fkATsOVn_WJf2HCqL2YQgUuc8grYL9yYQbqQE"},
{"content":{"body":"ah, sorry","msgtype":"m.text","org.matrix.msc1767.text":"ah, sorry"},"ts":1648493007286,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kjt9IifKZemDd4ZvNi_U2lED9g3JiaeaQ7z_puayeac"},
{"content":{"body":"thought it was a new toolchain","msgtype":"m.text","org.matrix.msc1767.text":"thought it was a new toolchain"},"ts":1648493011455,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gPT3sm-u4cXw_rQTj9xfGXwoSR8KsxUC9L5elBY89ZI"},
{"content":{"body":"> <@leobalter:matrix.org> I've never seen a proposal that had more venues for developer feedback than decorators\n\nbut it's for the old version","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GumJ3Cn0tPrJMipFW4iiEVIkAYnD-gcijQh8JLzHz_4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br>I&#39;ve never seen a proposal that had more venues for developer feedback than decorators</blockquote></mx-reply>but it's for the old version","m.relates_to":{"m.in_reply_to":{"event_id":"$GumJ3Cn0tPrJMipFW4iiEVIkAYnD-gcijQh8JLzHz_4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@leobalter:matrix.org> I've never seen a proposal that had more venues for developer feedback than decorators\n\nbut it's for the old version","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$GumJ3Cn0tPrJMipFW4iiEVIkAYnD-gcijQh8JLzHz_4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br>I&#39;ve never seen a proposal that had more venues for developer feedback than decorators</blockquote></mx-reply>but it's for the old version","mimetype":"text/html"}]},"ts":1648493192936,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$S_LlT9FLnQsDFikfPLUHtnJvxzmgRkdf6saYoeLeIDs"},
{"content":{"body":"🤔","msgtype":"m.text","org.matrix.msc1767.text":"🤔"},"ts":1648493196078,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$lyLCFDRZ8bJdh5P-YE2tzdK50C7fcUvJUy4OgBET1T8"},
{"content":{"body":"we had this specific proposal presented here before this meeting, announcing the intention for Stage 3","msgtype":"m.text","org.matrix.msc1767.text":"we had this specific proposal presented here before this meeting, announcing the intention for Stage 3"},"ts":1648493219320,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$08lHFxgezifEPSeMbfBW5edEgLOIR1hHW80RQ4NIAxU"},
{"content":{"body":"right, but decorator _consumption_ is largely the same","format":"org.matrix.custom.html","formatted_body":"right, but decorator <em>consumption</em> is largely the same","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"right, but decorator _consumption_ is largely the same","mimetype":"text/plain"},{"body":"right, but decorator <em>consumption</em> is largely the same","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$S_LlT9FLnQsDFikfPLUHtnJvxzmgRkdf6saYoeLeIDs"}}},"ts":1648493234782,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OE527CwLO11Ay2-cfMrg2Wp5yQzjqOjIFI1vQSuOEi0"},
{"content":{"body":"> <@jackworks:matrix.org> but it's for the old version\n\n * right, but decorator _consumption_ is largely the same","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S_LlT9FLnQsDFikfPLUHtnJvxzmgRkdf6saYoeLeIDs?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>but it's for the old version</blockquote></mx-reply> * right, but decorator <em>consumption</em> is largely the same","m.new_content":{"body":"right, but decorator _consumption_ is largely the same","format":"org.matrix.custom.html","formatted_body":"right, but decorator <em>consumption</em> is largely the same","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"right, but decorator _consumption_ is largely the same","mimetype":"text/plain"},{"body":"right, but decorator <em>consumption</em> is largely the same","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$OE527CwLO11Ay2-cfMrg2Wp5yQzjqOjIFI1vQSuOEi0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> but it's for the old version\n\n * right, but decorator _consumption_ is largely the same","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$S_LlT9FLnQsDFikfPLUHtnJvxzmgRkdf6saYoeLeIDs?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>but it's for the old version</blockquote></mx-reply> * right, but decorator <em>consumption</em> is largely the same","mimetype":"text/html"}]},"ts":1648493238918,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Oqia1_j2NR1_Kcjg72BXJp_nssXxyJg1vhCoAcfMBYg"},
{"content":{"body":"the majority of the changes are for decorator authors","msgtype":"m.text","org.matrix.msc1767.text":"the majority of the changes are for decorator authors"},"ts":1648493245334,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w3HXDl_lq85Bsbjs0VRgO7z_1AMI_x2KqwFGspNLGA8"},
{"content":{"body":"I think this version of the proposal is over a year old?","msgtype":"m.text","org.matrix.msc1767.text":"I think this version of the proposal is over a year old?"},"ts":1648493289658,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$2DU3K0p74qs45HtFyzav_KH3z9Ur2pA21qSO6lpqvxM"},
{"content":{"body":" * I think this version of the proposal is over a year old?","m.new_content":{"body":"I think this version of the proposal is over a year old?","msgtype":"m.text","org.matrix.msc1767.text":"I think this version of the proposal is over a year old?"},"m.relates_to":{"event_id":"$2DU3K0p74qs45HtFyzav_KH3z9Ur2pA21qSO6lpqvxM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I think this version of the proposal is over a year old?"},"ts":1648493295473,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KyV8SBRZ6uFwKZXCyJBLfLG9ShEo3hZnajP7iI4G6XE"},
{"content":{"body":"there have been minor changes but i think dan presented this redesign a while ago","msgtype":"m.text","org.matrix.msc1767.text":"there have been minor changes but i think dan presented this redesign a while ago"},"ts":1648493307841,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$kCgdVkAVZdUEOE5Ql6StV2I1NHoAOHVXE0hwC0_3gEM"},
{"content":{"body":"here is how I would write class-level metadata for decorators without explicit support:\n\n```\nlet { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n```\n\nwhere `makeDecorator` is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?","format":"org.matrix.custom.html","formatted_body":"<p>here is how I would write class-level metadata for decorators without explicit support:</p>\n<pre><code>let { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n</code></pre>\n<p>where <code>makeDecorator</code> is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"here is how I would write class-level metadata for decorators without explicit support:\n\n```\nlet { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n```\n\nwhere `makeDecorator` is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?","mimetype":"text/plain"},{"body":"<p>here is how I would write class-level metadata for decorators without explicit support:</p>\n<pre><code>let { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n</code></pre>\n<p>where <code>makeDecorator</code> is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?</p>\n","mimetype":"text/html"}]},"ts":1648493360409,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY"},
{"content":{"body":"seeing \"old proposal\" in context of decorators is very scary 😅 good to see its still a function","msgtype":"m.text","org.matrix.msc1767.text":"seeing \"old proposal\" in context of decorators is very scary 😅 good to see its still a function"},"ts":1648493371478,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$rDK2icBjEaD9iPzBj4tgc63ljd7sRQQej1L7aBJGZ60"},
{"content":{"body":"oh","msgtype":"m.text","org.matrix.msc1767.text":"oh"},"ts":1648493381291,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$BDYFFqOf_QiX9e-jFFxnD0SxmgqkjmFEXPu9VGi-tjM"},
{"content":{"body":"we have 10 minutes extra","msgtype":"m.text","org.matrix.msc1767.text":"we have 10 minutes extra"},"ts":1648493394484,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$e6Z6Ib3uB4KzT_m1QzU4coeSx7sTh9karyOewdE0f5k"},
{"content":{"body":"should we continue to pattern matching?","msgtype":"m.text","org.matrix.msc1767.text":"should we continue to pattern matching?"},"ts":1648493403518,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-_om4lrNUihrnCrFdRtLVQ3iLnHpbltp0BERQrCu64w"},
{"content":{"body":"pzuraq: i can help you make the repo for the metadata part, DM me to coordinate","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: i can help you make the repo for the metadata part, DM me to coordinate","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"pzuraq: i can help you make the repo for the metadata part, DM me to coordinate","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: i can help you make the repo for the metadata part, DM me to coordinate","mimetype":"text/html"}]},"ts":1648493450431,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6xcHc-ucgPT2rAqkOq0G-c0dVnWPZtTZ8EeePT3JxsY"},
{"content":{"body":" * we have 8 minutes extra","m.new_content":{"body":"we have 8 minutes extra","msgtype":"m.text","org.matrix.msc1767.text":"we have 8 minutes extra"},"m.relates_to":{"event_id":"$e6Z6Ib3uB4KzT_m1QzU4coeSx7sTh9karyOewdE0f5k","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * we have 8 minutes extra"},"ts":1648493530881,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$a_MEnNxYBdWIy7sfsLZHM1kjMbb-s2hFqBKadP8YCI4"},
{"content":{"body":"if the decorator doesn't get access to the class, what is the WeakMap key?","format":"org.matrix.custom.html","formatted_body":"if the decorator doesn't get access to the class, what is the WeakMap key?","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY"}}},"ts":1648493576383,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$1QfyADOs8HzKr5kYQIdtAof-gv-u3Y47jab2RTHiq20"},
{"content":{"body":" * if the decorator doesn't get access to the class, what is the WeakMap key?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>here is how I would write class-level metadata for decorators without explicit support:</p>\n<pre><code>let { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n</code></pre>\n<p>where <code>makeDecorator</code> is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?</p>\n</blockquote></mx-reply> * if the decorator doesn't get access to the class, what is the WeakMap key?","m.new_content":{"body":"if the decorator doesn't get access to the class, what is the WeakMap key?","format":"org.matrix.custom.html","formatted_body":"if the decorator doesn't get access to the class, what is the WeakMap key?","msgtype":"m.text"},"m.relates_to":{"event_id":"$1QfyADOs8HzKr5kYQIdtAof-gv-u3Y47jab2RTHiq20","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1648493584919,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$54G7TqCNLGVOJAosdsjToBXS9trx1ox1m3cDgvc6wr4"},
{"content":{"body":"ljharb shu yulia so we consider Decorators - Metadata a Stage 3?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> so we consider Decorators - Metadata a Stage 3?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb shu yulia so we consider Decorators - Metadata a Stage 3?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> so we consider Decorators - Metadata a Stage 3?","mimetype":"text/html"}]},"ts":1648493590960,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$Kxsh0V1r3bS9612bC9inHqC0qdKTmQFo45ibgsXPPQA"},
{"content":{"body":"ptomato: `finalize(A)` passes in the class","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: <code>finalize(A)</code> passes in the class","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ptomato: `finalize(A)` passes in the class","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: <code>finalize(A)</code> passes in the class","mimetype":"text/html"}]},"ts":1648493597915,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nRXU926olhNlGmHWg3cRCxInG3j0Zq33aq3j1e-MM9g"},
{"content":{"body":"contingent stage 3  on for the split","msgtype":"m.text","org.matrix.msc1767.text":"contingent stage 3  on for the split"},"ts":1648493605105,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$rb1qipejWVBKgAoaPLR6ifx3mBgDT7a9oXWRczgg7oU"},
{"content":{"body":" * contingent stage 3  on for the split","m.new_content":{"body":"contingent stage 3  on for the split","msgtype":"m.text","org.matrix.msc1767.text":"contingent stage 3  on for the split"},"m.relates_to":{"event_id":"$rb1qipejWVBKgAoaPLR6ifx3mBgDT7a9oXWRczgg7oU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * contingent stage 3  on for the split"},"ts":1648493612419,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Oe0pA3z-UUPDzwc09muX0XKPCwHvRvmIgBUwmwzD_5M"},
{"content":{"body":"and the `decorate` and `finalize` functions are paired","format":"org.matrix.custom.html","formatted_body":"and the <code>decorate</code> and <code>finalize</code> functions are paired","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and the `decorate` and `finalize` functions are paired","mimetype":"text/plain"},{"body":"and the <code>decorate</code> and <code>finalize</code> functions are paired","mimetype":"text/html"}]},"ts":1648493612732,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7M9gRzwARWmx_dKwpvKlo-Ks8o-XUennBbIShfAWU3M"},
{"content":{"body":"> <@bakkot:matrix.org> here is how I would write class-level metadata for decorators without explicit support:\n> \n> ```\n> let { decorate, finalize } = makeDecorator();\n> class A {\n>   @decorate\n>   property = whatever;\n> }\n> finalize(A);\n> ```\n> \n> where `makeDecorator` is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?\n\nSimilar to what I proposed here a long time ago: https://github.com/tc39/proposal-decorators/issues/328#issuecomment-694240970","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>here is how I would write class-level metadata for decorators without explicit support:</p>\n<pre><code>let { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n</code></pre>\n<p>where <code>makeDecorator</code> is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?</p>\n</blockquote></mx-reply>Similar to what I proposed here a long time ago: https://github.com/tc39/proposal-decorators/issues/328#issuecomment-694240970","m.relates_to":{"m.in_reply_to":{"event_id":"$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> here is how I would write class-level metadata for decorators without explicit support:\n> \n> ```\n> let { decorate, finalize } = makeDecorator();\n> class A {\n>   @decorate\n>   property = whatever;\n> }\n> finalize(A);\n> ```\n> \n> where `makeDecorator` is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?\n\nSimilar to what I proposed here a long time ago: https://github.com/tc39/proposal-decorators/issues/328#issuecomment-694240970","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jBiOYrPYxotvA0K9k0e_gtGXH7t-fNkgEwtjvP7pegY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>here is how I would write class-level metadata for decorators without explicit support:</p>\n<pre><code>let { decorate, finalize } = makeDecorator();\nclass A {\n  @decorate\n  property = whatever;\n}\nfinalize(A);\n</code></pre>\n<p>where <code>makeDecorator</code> is a userland function that has an internal WeakMap or whatever. it's two extra lines. does this do the thing you want metadata to do?</p>\n</blockquote></mx-reply>Similar to what I proposed here a long time ago: https://github.com/tc39/proposal-decorators/issues/328#issuecomment-694240970","mimetype":"text/html"}]},"ts":1648493637958,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qXaHtDgPlQJDYYurFHVDb66d0ORsZzShURdd6KMNaBE"},
{"content":{"body":"oh, or even\n\n```\nlet { decorate, decorated } = makeDecorator();\n@decorated\nclass A {\n  @decorate\n  property = whatever;\n}\n```\nsince class decorators get access to the class in `addInitializer`, as `this`","format":"org.matrix.custom.html","formatted_body":"<p>oh, or even</p>\n<pre><code>let { decorate, decorated } = makeDecorator();\n@decorated\nclass A {\n  @decorate\n  property = whatever;\n}\n</code></pre>\n<p>since class decorators get access to the class in <code>addInitializer</code>, as <code>this</code></p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"oh, or even\n\n```\nlet { decorate, decorated } = makeDecorator();\n@decorated\nclass A {\n  @decorate\n  property = whatever;\n}\n```\nsince class decorators get access to the class in `addInitializer`, as `this`","mimetype":"text/plain"},{"body":"<p>oh, or even</p>\n<pre><code>let { decorate, decorated } = makeDecorator();\n@decorated\nclass A {\n  @decorate\n  property = whatever;\n}\n</code></pre>\n<p>since class decorators get access to the class in <code>addInitializer</code>, as <code>this</code></p>\n","mimetype":"text/html"}]},"ts":1648494497723,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hLHRca4fke2VOwFGl22TZqTYIae7tdRqo930iuM_bsQ"},
{"content":{"body":"so for the gnome use case linked above it would look like\n\n```\nlet { registerClass, property } = GObject();\n\n@registerClass\nclass MyClass {\n  @property({ type: Boolean })\n  x = false;\n}\n```\n\nwhere the `@property` decorator would stash the necessary fieldname->type mapping somewhere where the `@registerClass` decorator could get at it","format":"org.matrix.custom.html","formatted_body":"<p>so for the gnome use case linked above it would look like</p>\n<pre><code>let { registerClass, property } = GObject();\n\n@registerClass\nclass MyClass {\n  @property({ type: Boolean })\n  x = false;\n}\n</code></pre>\n<p>where the <code>@property</code> decorator would stash the necessary fieldname-&gt;type mapping somewhere where the <code>@registerClass</code> decorator could get at it</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so for the gnome use case linked above it would look like\n\n```\nlet { registerClass, property } = GObject();\n\n@registerClass\nclass MyClass {\n  @property({ type: Boolean })\n  x = false;\n}\n```\n\nwhere the `@property` decorator would stash the necessary fieldname->type mapping somewhere where the `@registerClass` decorator could get at it","mimetype":"text/plain"},{"body":"<p>so for the gnome use case linked above it would look like</p>\n<pre><code>let { registerClass, property } = GObject();\n\n@registerClass\nclass MyClass {\n  @property({ type: Boolean })\n  x = false;\n}\n</code></pre>\n<p>where the <code>@property</code> decorator would stash the necessary fieldname-&gt;type mapping somewhere where the <code>@registerClass</code> decorator could get at it</p>\n","mimetype":"text/html"}]},"ts":1648494748195,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7YRyHbs1-Ct8-_vv7C00YrMjlBda6CogdDTJOxvk3XQ"},
{"content":{"body":"for composing decorators, there isn't a built-in util for that right?","msgtype":"m.text","org.matrix.msc1767.text":"for composing decorators, there isn't a built-in util for that right?"},"ts":1648494880636,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$dhYldmVwTSAU64-pmCLsWC-U-KcVh0vi9fH8lFFvZZ4"},
{"content":{"body":"if someone already had a class-level decorator, and then a field-level one only worked if combined with it's class-level helper","msgtype":"m.text","org.matrix.msc1767.text":"if someone already had a class-level decorator, and then a field-level one only worked if combined with it's class-level helper"},"ts":1648494909866,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$OuFbP7Qefzi9zDhipnwQN9uqMqEiEnfE-0HFl7gQLho"},
{"content":{"body":"I don't think it has any built-in utils?","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it has any built-in utils?"},"ts":1648494923940,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UtkpJznaOsCY8ppj9pDOgTBMwjqoXTiQO5LV7c-_jdI"},
{"content":{"body":"true, no new namespace","msgtype":"m.text","org.matrix.msc1767.text":"true, no new namespace"},"ts":1648494957030,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$9db79lzIbufQgipaQt_HrBeCg2vWX5zeQxD7VnhA-pA"},
{"content":{"body":"> <@bakkot:matrix.org> so for the gnome use case linked above it would look like\n> \n> ```\n> let { registerClass, property } = GObject();\n> \n> @registerClass\n> class MyClass {\n>   @property({ type: Boolean })\n>   x = false;\n> }\n> ```\n> \n> where the `@property` decorator would stash the necessary fieldname->type mapping somewhere where the `@registerClass` decorator could get at it\n\nI see, thanks. in practice though, I'd probably just not make a `makeDecorator()` style API if I knew metadata was likely to be coming and would enable a better API. I'd end up having to maintain them both","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$7YRyHbs1-Ct8-_vv7C00YrMjlBda6CogdDTJOxvk3XQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>so for the gnome use case linked above it would look like</p>\n<pre><code>let { registerClass, property } = GObject();\n\n@registerClass\nclass MyClass {\n  @property({ type: Boolean })\n  x = false;\n}\n</code></pre>\n<p>where the <code>@property</code> decorator would stash the necessary fieldname-&gt;type mapping somewhere where the <code>@registerClass</code> decorator could get at it</p>\n</blockquote></mx-reply>I see, thanks. in practice though, I'd probably just not make a <code>makeDecorator()</code> style API if I knew metadata was likely to be coming and would enable a better API. I'd end up having to maintain them both","m.relates_to":{"m.in_reply_to":{"event_id":"$7YRyHbs1-Ct8-_vv7C00YrMjlBda6CogdDTJOxvk3XQ"}},"msgtype":"m.text"},"ts":1648495033155,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$c9ZNffKNTK4gpLbwy_OiWNTWFh1-bYHMR8OpLEhaplw"},
{"content":{"body":"That's reasonable, yes","msgtype":"m.text","org.matrix.msc1767.text":"That's reasonable, yes"},"ts":1648495188197,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8TNebW4I66mixJTONkKFBCbstvSxnppHJKFJm2BsoJI"},
{"content":{"body":"I remain unconvinced by the need for metadata, especially if this pattern actually does work the way I think it should","msgtype":"m.text","org.matrix.msc1767.text":"I remain unconvinced by the need for metadata, especially if this pattern actually does work the way I think it should"},"ts":1648495204613,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kjjN1kG-Ld6S1-cIafkmS-18Y-ugYjcbym1iEAkLHwQ"},
{"content":{"body":"I haven't written the implementation of the `makeDecorator` thing to confirm it does","format":"org.matrix.custom.html","formatted_body":"I haven't written the implementation of the <code>makeDecorator</code> thing to confirm it does","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I haven't written the implementation of the `makeDecorator` thing to confirm it does","mimetype":"text/plain"},{"body":"I haven't written the implementation of the <code>makeDecorator</code> thing to confirm it does","mimetype":"text/html"}]},"ts":1648495219312,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jrOSsR7a41jf_dL4DOu2az9idnGXCivT7KDzZyFsBls"},
{"content":{"body":"yeah, i remain most directionally comfortable with doing metadata all in userland","msgtype":"m.text","org.matrix.msc1767.text":"yeah, i remain most directionally comfortable with doing metadata all in userland"},"ts":1648495228456,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QhAmZyF8laqEmc3LYGjm4scsXpNgS7ySnlwOlve9dik"},
{"content":{"body":"bakkot: metadata seems particularly necessary for parameter decorators, which are another future extension","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: metadata seems particularly necessary for parameter decorators, which are another future extension","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: metadata seems particularly necessary for parameter decorators, which are another future extension","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: metadata seems particularly necessary for parameter decorators, which are another future extension","mimetype":"text/html"}]},"ts":1648495239512,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$qVrnsEs-XY8_ujRe3crwuNwqJtoWexiMDGD_koTDgc4"},
{"content":{"body":"i understand the \"we need something to key off of\" expressivity gap now, which i kept missing for a long time","msgtype":"m.text","org.matrix.msc1767.text":"i understand the \"we need something to key off of\" expressivity gap now, which i kept missing for a long time"},"ts":1648495242373,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vyG7EEEjxgqjq_msT4ruEowQDpAE8KZtVd3t-lCKbL4"},
{"content":{"body":"pzuraq: I am dead set against parameter decorators","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: I am dead set against parameter decorators","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"pzuraq: I am dead set against parameter decorators","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: I am dead set against parameter decorators","mimetype":"text/html"}]},"ts":1648495251805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$76h84n2p1wc61vC8bVCJ4Np0e-dPsQ3sdzBxWOFjBZ8"},
{"content":{"body":"it's unclear that parameter decorators would do anything _besides_ add metadata","format":"org.matrix.custom.html","formatted_body":"it's unclear that parameter decorators would do anything <em>besides</em> add metadata","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it's unclear that parameter decorators would do anything _besides_ add metadata","mimetype":"text/plain"},{"body":"it's unclear that parameter decorators would do anything <em>besides</em> add metadata","mimetype":"text/html"}]},"ts":1648495252599,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$Lxep0A5XV-ljVQaZaYCUqt88YZmK8xUlX2gzHPVL3r8"},
{"content":{"body":"i am... not very supportive of parameter decorators right now","msgtype":"m.text","org.matrix.msc1767.text":"i am... not very supportive of parameter decorators right now"},"ts":1648495253410,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vfS21jUg_cVg4vymcmZL6vjKJEvJGfjG4W7wQzR_xHQ"},
{"content":{"body":"good to know","msgtype":"m.text","org.matrix.msc1767.text":"good to know"},"ts":1648495261944,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$rvcbCE0Y_H8qpNJjdNjw5UzSjC62tox6tip__a6zR1M"},
{"content":{"body":"given i've only seen it used for DI in angular and it looked awful","msgtype":"m.text","org.matrix.msc1767.text":"given i've only seen it used for DI in angular and it looked awful"},"ts":1648495264384,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$u_w-tOgQea4KJu27E50rDvDRL0SLBg9uZ_6SAyCsA7Y"},
{"content":{"body":"primary use case does seem to be DI for them, I generally agree I prefer field based DI myself","msgtype":"m.text","org.matrix.msc1767.text":"primary use case does seem to be DI for them, I generally agree I prefer field based DI myself"},"ts":1648495310336,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$Q5K6ZW6VPjJVKkNsJMdYx7viil7Jna_2QD4-EDZrQfo"},
{"content":{"body":"pzuraq: and great work, lots of sweat and tears!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: and great work, lots of sweat and tears!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"pzuraq: and great work, lots of sweat and tears!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@pzura:matrix.org\">pzuraq</a>: and great work, lots of sweat and tears!","mimetype":"text/html"}]},"ts":1648495330382,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$H8-NA6VC30OADIqMEOoRLmTsvjn8TYyDm7pBycALU0c"},
{"content":{"body":"wait, doesn't `addInitializer` also provide you access to the class as `this`","format":"org.matrix.custom.html","formatted_body":"wait, doesn't <code>addInitializer</code> also provide you access to the class as <code>this</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"wait, doesn't `addInitializer` also provide you access to the class as `this`","mimetype":"text/plain"},{"body":"wait, doesn't <code>addInitializer</code> also provide you access to the class as <code>this</code>","mimetype":"text/html"}]},"ts":1648495338114,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a5qENgnjD7C7QQxemMcYMtV7jRYzS6y79JTsHIxrE74"},
{"content":{"body":"`addInitializer` for elements","format":"org.matrix.custom.html","formatted_body":"<code>addInitializer</code> for elements","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`addInitializer` for elements","mimetype":"text/plain"},{"body":"<code>addInitializer</code> for elements","mimetype":"text/html"}]},"ts":1648495348544,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Lw8y_tjtiCjtDTxTeEu_gwkuN-MwIHz940EhqrKqSK8"},
{"content":{"body":"initializers run for every instance","msgtype":"m.text","org.matrix.msc1767.text":"initializers run for every instance"},"ts":1648495352295,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$ndV2opEEoCIN3TlYsJEAJvEaIZcOlp4psfG3Ugc7_Xk"},
{"content":{"body":"oh, right","msgtype":"m.text","org.matrix.msc1767.text":"oh, right"},"ts":1648495358929,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9E0gcdXE2kYM96M7_X_k7eZZz_leXt3bfRZy_XPD7_s"},
{"content":{"body":"so it wouldn't really be a good place for adding/manipulating metadata","msgtype":"m.text","org.matrix.msc1767.text":"so it wouldn't really be a good place for adding/manipulating metadata"},"ts":1648495367875,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$yEsw8Ug2ux3-rYxckk1its0Hi_KRzwHGY_5nzLvPvnQ"},
{"content":{"body":"you _could_ idempotently re-add metadata each instance creation","format":"org.matrix.custom.html","formatted_body":"you <em>could</em> idempotently re-add metadata each instance creation","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you _could_ idempotently re-add metadata each instance creation","mimetype":"text/plain"},{"body":"you <em>could</em> idempotently re-add metadata each instance creation","mimetype":"text/html"}]},"ts":1648495370241,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8WakLWPEq1t7OaKLsk3N1Qfmdll5fyr_UZR-KsZutfA"},
{"content":{"body":"yeah","msgtype":"m.text","org.matrix.msc1767.text":"yeah"},"ts":1648495370541,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$raLeLJ3pStpSIvOGhwUACPc8D5OjSfRKXBjre_YwDEY"},
{"content":{"body":"that's a pro move called \"it's the library's problem, not the engine's\"","msgtype":"m.text","org.matrix.msc1767.text":"that's a pro move called \"it's the library's problem, not the engine's\""},"ts":1648495383309,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ge7bIGtpXP5arEiUFDK4TThdxnNLFDtgqN3XMOcLUlk"},
{"content":{"body":"shu: that only works if you don't need the metadata before instance construction though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: that only works if you don't need the metadata before instance construction though","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: that only works if you don't need the metadata before instance construction though","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: that only works if you don't need the metadata before instance construction though","mimetype":"text/html"}]},"ts":1648495387417,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0ygAMavbnlcorgJct87BklRjMdOsl13gtjK3PmJJS4Q"},
{"content":{"body":"lol","msgtype":"m.text","org.matrix.msc1767.text":"lol"},"ts":1648495389671,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$ydYjqTVQWjZSMx1iFrXO0FQGndQYABzhzRnTNT5P1nQ"},
{"content":{"body":"bakkot: good point","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: good point","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: good point","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: good point","mimetype":"text/html"}]},"ts":1648495400243,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$G4ldq50kPMXjmiQWbVVJnGwnI1Nv7gEBtueaoHLHxq8"},
{"content":{"body":"yeah, there's also that","msgtype":"m.text","org.matrix.msc1767.text":"yeah, there's also that"},"ts":1648495400253,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$UEJqI37naov6v7_dD8RX2s28sK50XStKr4TZGUq-Knc"},
{"content":{"body":"I have use cases for parameters decorators, that would need to couple with a method decorator","msgtype":"m.text","org.matrix.msc1767.text":"I have use cases for parameters decorators, that would need to couple with a method decorator"},"ts":1648495408631,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$aSn_0Ivw9KsArgheVPylqiPX0PnTOSXqcsV_DISqI04"},
{"content":{"body":"And it's not a DI use case, but a shape / type validator use case","msgtype":"m.text","org.matrix.msc1767.text":"And it's not a DI use case, but a shape / type validator use case"},"ts":1648495454136,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$PIRxa2DVifyOdU5tuOE1YIQaQuUgVuHC_Gxv_FyzH48"},
{"content":{"body":"that is another major use case for metadata","msgtype":"m.text","org.matrix.msc1767.text":"that is another major use case for metadata"},"ts":1648495478030,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$2a7nOBcKhRDDjjhCeT4VA447bqw1rURG3LGzlZWXu_k"},
{"content":{"body":"validation libs in general","msgtype":"m.text","org.matrix.msc1767.text":"validation libs in general"},"ts":1648495484590,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$391n_HsZedcNDjORq1JU4_S8bdNSqBT3qvb1kMnNxt0"},
{"content":{"body":"you can do it with `accessor`, but then you have overhead for every property access","format":"org.matrix.custom.html","formatted_body":"you can do it with <code>accessor</code>, but then you have overhead for every property access","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you can do it with `accessor`, but then you have overhead for every property access","mimetype":"text/plain"},{"body":"you can do it with <code>accessor</code>, but then you have overhead for every property access","mimetype":"text/html"}]},"ts":1648495500101,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$cfW4i8lbpdlo3oQpiTNl4Rotwqdt_IdwdCxmGAVhIk8"},
{"content":{"body":"and usually, you want to do the validation once at specific points in time (e.g. when you go to serialize)","msgtype":"m.text","org.matrix.msc1767.text":"and usually, you want to do the validation once at specific points in time (e.g. when you go to serialize)"},"ts":1648495529272,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$TTrvZvQeQJLJvh3EEQgy6aejKNh2nrj5WhXmS5BX56U"},
{"content":{"body":"oh, serialization is another use case","msgtype":"m.text","org.matrix.msc1767.text":"oh, serialization is another use case"},"ts":1648495532772,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$H_tv7rV7-TwxrHg_zPKtc9PHJFfnQHbimRWGnQncq6E"},
{"content":{"body":"I believe a number of Node ORMs use decorators this way","msgtype":"m.text","org.matrix.msc1767.text":"I believe a number of Node ORMs use decorators this way"},"ts":1648495544355,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$sy95ftTA4fV_ou0HzVG2VAHAifdHFRt_DYZrPZcdBqY"},
{"content":{"body":"really there are a ton of use cases, I just thought DI was the most motivating one 😅","msgtype":"m.text","org.matrix.msc1767.text":"really there are a ton of use cases, I just thought DI was the most motivating one 😅"},"ts":1648495570178,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$SczGttXKOX_prrYc8QMaHbxPogogGK9BYY2cNNYDDwg"},
{"content":{"body":"I don't see how accessor helps here. I want to validate before the code of the method runs so it can rely on the args being the right thing","msgtype":"m.text","org.matrix.msc1767.text":"I don't see how accessor helps here. I want to validate before the code of the method runs so it can rely on the args being the right thing"},"ts":1648495603739,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$OBpfMwqmTysggOYNPjxZGPsvBvVwk-o46vZ_GluMNZ4"},
{"content":{"body":"`accessor` helps for other forms of validation, not the one you're discussing","format":"org.matrix.custom.html","formatted_body":"<code>accessor</code> helps for other forms of validation, not the one you're discussing","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`accessor` helps for other forms of validation, not the one you're discussing","mimetype":"text/plain"},{"body":"<code>accessor</code> helps for other forms of validation, not the one you're discussing","mimetype":"text/html"}]},"ts":1648495622933,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$JRCN5al0mdlGBRiQE_4cfo-iFk1jHxAXhH6TO8yuddw"},
{"content":{"body":"e.g. \"this field is a number\" type validations","msgtype":"m.text","org.matrix.msc1767.text":"e.g. \"this field is a number\" type validations"},"ts":1648495637052,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$nwFcENRDOLGRxSotGQmxUvZ8WRJt2UpzUDXVdIgjx4w"},
{"content":{"body":"there's two forms of decorator validation libraries out there, one which installs getters/setters to validate, and the other which adds metadata and then asks you to call `validate()` whenever you want to validate","format":"org.matrix.custom.html","formatted_body":"there's two forms of decorator validation libraries out there, one which installs getters/setters to validate, and the other which adds metadata and then asks you to call <code>validate()</code> whenever you want to validate","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"there's two forms of decorator validation libraries out there, one which installs getters/setters to validate, and the other which adds metadata and then asks you to call `validate()` whenever you want to validate","mimetype":"text/plain"},{"body":"there's two forms of decorator validation libraries out there, one which installs getters/setters to validate, and the other which adds metadata and then asks you to call <code>validate()</code> whenever you want to validate","mimetype":"text/html"}]},"ts":1648495701239,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$5fchV6WIB66j6_oghMH5HHFCkSqciKnnoCyuukQaK2c"}
]