[
{"content":{"body":"(altho really, i'd keep using `[].concat` if there weren't any methods that took both an iterator and a non-iterator)","format":"org.matrix.custom.html","formatted_body":"(altho really, i'd keep using <code>[].concat</code> if there weren't any methods that took both an iterator and a non-iterator)","msgtype":"m.text"},"ts":1692057601884,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5sK5EK9sEp0vMG43jD7LkWkhdAYyeQq7FkOfSVy1ihU"},
{"content":{"body":"stage 1 concerns ðŸ˜œ","msgtype":"m.text"},"ts":1692058152190,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$SFtoGhFnIhpf6Vpi1GiahuhHofYmlRmP-nMvds3iIFA"},
{"content":{"body":"I'm kinda leaning toward a `Iterator.from` + `Iterator.prototype.flat` solution after doing this research","format":"org.matrix.custom.html","formatted_body":"I'm kinda leaning toward a <code>Iterator.from</code> + <code>Iterator.prototype.flat</code> solution after doing this research","msgtype":"m.text"},"ts":1692058222668,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YysFFyJrreser1qXwhrO9sac10nhGRznLMJUjMeMKfA"},
{"content":{"body":"that also solves the problem of TabAtkins being unhappy with our string handling (since `flat` would adopt `flatMap`'s string rejection)","format":"org.matrix.custom.html","formatted_body":"that also solves the problem of <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> being unhappy with our string handling (since <code>flat</code> would adopt <code>flatMap</code>'s string rejection)","msgtype":"m.text"},"ts":1692058301793,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$y6rc1urf5JJPLWhvopc_u6FvdEXiPJ_CYAvXsjuMGYw"},
{"content":{"body":"So just put them all in an array and flatten it as an iterator?","msgtype":"m.text"},"ts":1692058369811,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$rO49icRwnh1eYmwqyjtoFYAYDQOcBUYWIIdSq7mBtVY"},
{"content":{"body":"put them all in an iterator and flatten it","msgtype":"m.text"},"ts":1692058382583,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2DTliOB86Ya73xv6EZakjoM8HJ3pH8kBIEAo-KCnipg"},
{"content":{"body":"`Iterator.from(as, bs, cs).flat()`","format":"org.matrix.custom.html","formatted_body":"<code>Iterator.from(as, bs, cs).flat()</code>","msgtype":"m.text"},"ts":1692058393282,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WnYGIyehubPCueYVprZvAAwr8um6hPtUVAsd-6Vbrqk"},
{"content":{"body":" * `Iterator.of(as, bs, cs).flat()`","format":"org.matrix.custom.html","formatted_body":" * <code>Iterator.of(as, bs, cs).flat()</code>","m.new_content":{"body":"`Iterator.of(as, bs, cs).flat()`","format":"org.matrix.custom.html","formatted_body":"<code>Iterator.of(as, bs, cs).flat()</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$WnYGIyehubPCueYVprZvAAwr8um6hPtUVAsd-6Vbrqk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692058402765,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$HAz1_JgECFEEh3XyDw19kadFoQXKIiqh-9QeUt1E39M"},
{"content":{"body":" * I'm kinda leaning toward a `Iterator.of` + `Iterator.prototype.flat` solution after doing this research","format":"org.matrix.custom.html","formatted_body":" * I'm kinda leaning toward a <code>Iterator.of</code> + <code>Iterator.prototype.flat</code> solution after doing this research","m.new_content":{"body":"I'm kinda leaning toward a `Iterator.of` + `Iterator.prototype.flat` solution after doing this research","format":"org.matrix.custom.html","formatted_body":"I'm kinda leaning toward a <code>Iterator.of</code> + <code>Iterator.prototype.flat</code> solution after doing this research","msgtype":"m.text"},"m.relates_to":{"event_id":"$YysFFyJrreser1qXwhrO9sac10nhGRznLMJUjMeMKfA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692058416454,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$as9eLmkX90iEf1YpWEbw48rdT9m2QGd8TmEBl5rqTyU"},
{"content":{"body":"sorry, I typo'd `Iterator.of` as `Iterator.from` since I'm so used to typing that from working on iterator helpers","format":"org.matrix.custom.html","formatted_body":"sorry, I typo'd <code>Iterator.of</code> as <code>Iterator.from</code> since I'm so used to typing that from working on iterator helpers","msgtype":"m.text"},"ts":1692058463822,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cqI3ZydZNqq8xjOW7sBLiXHUAS7x3Uge-y4b7BfDeLk"},
{"content":{"body":"ooh i like that","msgtype":"m.text"},"ts":1692066639918,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t6dlCvFYmAJPKFUgRlRslHtUBZt39XSaMjsO_385ftY"},
{"content":{"body":"then i still get the semantics i want, but you weirdos that hate array concat's pre-symbol semantics are happy too","msgtype":"m.text"},"ts":1692066668168,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eYG8cQCzE3B4bInisecm7ee6HtOfLI4D7UQ2b7QkHSc"},
{"content":{"body":"if I understand correctly you would not get the semantics you want","msgtype":"m.text"},"ts":1692067562166,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Kd3fCg93IL1cLwV_VP_U_5-ZK1uOHDySb_fXmGPr028"},
{"content":{"body":"assuming iterator `flat` behaves like iterator `flatMap`","format":"org.matrix.custom.html","formatted_body":"assuming iterator <code>flat</code> behaves like iterator <code>flatMap</code>","msgtype":"m.text"},"ts":1692067577633,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SEpmHc-Bpw2ZGeRQqLRCZmHI5tgwvPxyQPk-TyBxbiU"},
{"content":{"body":"ah, so the Iterator.of arguments would still have to be an iterator?","msgtype":"m.text"},"ts":1692076354456,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5Eigb824hcuSU96Q1dqHcLt-iiXWh3UkIOJo5tIIfjM"},
{"content":{"body":"separately, what about `.join()` so i don't have to make an array first?","format":"org.matrix.custom.html","formatted_body":"separately, what about <code>.join()</code> so i don't have to make an array first?","msgtype":"m.text"},"ts":1692076381984,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$y204JB_lQW6OmhqAn7HSg_vRa5Y2Aty7gRxtH0SpRhw"}
]