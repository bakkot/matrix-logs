[
{"content":{"body":"TabAtkins: the way you've written https://webidl.spec.whatwg.org/#es-map-iterator implies that `(new Map)[Symbol.iterator]().next.call(webIdlMapLike)` would work, which is... maybe not a thing you intended?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: the way you've written https://webidl.spec.whatwg.org/#es-map-iterator implies that <code>(new Map)[Symbol.iterator]().next.call(webIdlMapLike)</code> would work, which is... maybe not a thing you intended?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: the way you've written https://webidl.spec.whatwg.org/#es-map-iterator implies that `(new Map)[Symbol.iterator]().next.call(webIdlMapLike)` would work, which is... maybe not a thing you intended?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: the way you've written https://webidl.spec.whatwg.org/#es-map-iterator implies that <code>(new Map)[Symbol.iterator]().next.call(webIdlMapLike)</code> would work, which is... maybe not a thing you intended?","mimetype":"text/html"}]},"ts":1651778105406,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E2-Uzp7nf_ScuBFceFNrXsUte7t_P8_M1Gu8uZMjtvw"},
{"content":{"body":"I don't know where webidl map-likes are used though","msgtype":"m.text","org.matrix.msc1767.text":"I don't know where webidl map-likes are used though"},"ts":1651778128329,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZULKC9VM8TlGNDiNPDdAToFXHZFqABp8Tv2pt3Y83n4"},
{"content":{"body":"Hmmmmm, I dunno if that's a problem?","msgtype":"m.text","org.matrix.msc1767.text":"Hmmmmm, I dunno if that's a problem?"},"ts":1651778185165,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$UmuwtfsgSL40--KAPeLaaqCietVF19V1LN5eNtoL-Lc"},
{"content":{"body":"(For an example usage, see https://tabatkins.github.io/css-toggle/#dom)","msgtype":"m.text","org.matrix.msc1767.text":"(For an example usage, see https://tabatkins.github.io/css-toggle/#dom)"},"ts":1651778191586,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$_NtTqNiFu6KbGVY1mn7X55Px4FEzt0YvsD_9NVp-Vvo"},
{"content":{"body":"I think that is... probably not desirable, at least for implementations?","msgtype":"m.text","org.matrix.msc1767.text":"I think that is... probably not desirable, at least for implementations?"},"ts":1651778299163,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PI-JCDofj8LA0uT4KGRMKzGQuODGOoSDpg7f5qscDqE"},
{"content":{"body":".next() isn't usable directly on a Map, right? You'd still have to actually extract an iterator, which has .next() from its proto.","msgtype":"m.text","org.matrix.msc1767.text":".next() isn't usable directly on a Map, right? You'd still have to actually extract an iterator, which has .next() from its proto."},"ts":1651778311726,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$KxkRZQFATauEw59X7k-_W27SrIJnLmQ-F_tPzFZZ_38"},
{"content":{"body":"oh, yeah, so `(new Map)[Symbol.iterator]().next.call(webIdlMapLike[Symbol.iterator]())` ","format":"org.matrix.custom.html","formatted_body":"oh, yeah, so <code>(new Map)[Symbol.iterator]().next.call(webIdlMapLike[Symbol.iterator]())</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"oh, yeah, so `(new Map)[Symbol.iterator]().next.call(webIdlMapLike[Symbol.iterator]())` ","mimetype":"text/plain"},{"body":"oh, yeah, so <code>(new Map)[Symbol.iterator]().next.call(webIdlMapLike[Symbol.iterator]())</code>","mimetype":"text/html"}]},"ts":1651778354420,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RnG8Mqb7-zUiAouXq8XulZyIZ5DY2jAjOCl4XgBJqgo"},
{"content":{"body":"I think you probably do not want to require that that work","msgtype":"m.text","org.matrix.msc1767.text":"I think you probably do not want to require that that work"},"ts":1651778363224,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EuyFvEMl0UtSoBK_w6s0WJEr6ENbV7TVkDNjSyCa3aU"},
{"content":{"body":"Why not? Making it not work would presumably require us to *not* use MapIteratorPrototype at all, right?","format":"org.matrix.custom.html","formatted_body":"Why not? Making it not work would presumably require us to <em>not</em> use MapIteratorPrototype at all, right?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Why not? Making it not work would presumably require us to *not* use MapIteratorPrototype at all, right?","mimetype":"text/plain"},{"body":"Why not? Making it not work would presumably require us to <em>not</em> use MapIteratorPrototype at all, right?","mimetype":"text/html"}]},"ts":1651778387525,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$153FJiKsvXQjKw_9IK2CMAw03UUlAu6A_L4okfBQRmw"},
{"content":{"body":"oh, I missed that you are intending to use MapIteratorPrototype","msgtype":"m.text","org.matrix.msc1767.text":"oh, I missed that you are intending to use MapIteratorPrototype"},"ts":1651778411481,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d8gQ09ORM5iyRsWdT_uLkv2TzVYVhkKpnzdAISmomaw"},
{"content":{"body":"(That was already required before my edits, btw.)","msgtype":"m.text","org.matrix.msc1767.text":"(That was already required before my edits, btw.)"},"ts":1651778416569,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2u-WKlGhiVlCCxg5j81KPuHthKAKHH0SQ97NWHXGWik"},
{"content":{"body":"Yeah we're manually reproducing Map's proto methods by hand, but there's no reason for us to do the same for its iterator.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah we're manually reproducing Map's proto methods by hand, but there's no reason for us to do the same for its iterator."},"ts":1651778461917,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$XK6z7-jRV2bFNK3N8bw3MPYqErQg0EjhBaAWpEgCzdw"},
{"content":{"body":"it's conceptually kind of weird? a \"real\" map iterator uses the [[MapData]] internal slot","msgtype":"m.text","org.matrix.msc1767.text":"it's conceptually kind of weird? a \"real\" map iterator uses the [[MapData]] internal slot"},"ts":1651778548421,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SPuOz9JXXt6rrR17hsQNDqy8RldZPBQKzqAuA74eSro"},
{"content":{"body":"I don't think it's going to cause problems for users (or even be noticed), but it might trip up implementations","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it's going to cause problems for users (or even be noticed), but it might trip up implementations"},"ts":1651778595411,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RuTJfpFFAgqtYyYt5tPUt5TTd9f8f2KE3olIHqZvfjg"},
{"content":{"body":"when we wrote https://github.com/tc39/ecma262/pull/2045 the thinking was that brands would be single-use","msgtype":"m.text","org.matrix.msc1767.text":"when we wrote https://github.com/tc39/ecma262/pull/2045 the thinking was that brands would be single-use"},"ts":1651778628185,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MlnLkZWsheyeEeZILY3-VrZu4Ub2p9PDpD0LcVjR9JM"},
{"content":{"body":"If that's problematic, the spec shouldn't be written in a way that implies it's pluggable. ^_^","msgtype":"m.text","org.matrix.msc1767.text":"If that's problematic, the spec shouldn't be written in a way that implies it's pluggable. ^_^"},"ts":1651778657083,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$j_EPX6_ISg85dbe4_wl39Hb00mPkka8uYG9VtnyHXAs"},
{"content":{"body":"the spec is not an API","msgtype":"m.text","org.matrix.msc1767.text":"the spec is not an API"},"ts":1651778681416,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tVTebjuP853XVZ8pTNAzjiiKPf-DyQdn-zsxmfcm4Mo"},
{"content":{"body":"what's this about brands?","msgtype":"m.text","org.matrix.msc1767.text":"what's this about brands?"},"ts":1651778691176,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$11zg6bhdfJ1ra2-ZPPRWvbuAoaP4RAGI8ALHtkFOuMc"}
]