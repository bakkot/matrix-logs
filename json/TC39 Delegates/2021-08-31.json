[
{"content":{"body":"https://github.com/tc39/Reflector/issues/388 says, ‚ÄúSign-in form will be added before the meeting - fill in the sign-in form and you'll get the link‚Äù. Sorry for bothering, but where‚Äôs the sign-in form?","msgtype":"m.text"},"ts":1630372790430,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ns1s_4sRG4WGyGvod7MJMADvQb5pTeBZ2w4Y5pmByEA"},
{"content":{"body":"presumably it'll be added in the next 12.5 hours","msgtype":"m.text"},"ts":1630373130854,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TniwlELRTcwgliwiONZkSZ7dWyi7kCkMWRkgrDQpLeQ"},
{"content":{"body":"sorry i didn't get the schedule up earlier y'all","msgtype":"m.text"},"ts":1630381371236,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$WJwXdG8pa7C2kLu8xHBN7kfWUOujqQVfAgf-n3cVw0U"},
{"content":{"body":"oh my look at that overflow https://hackmd.io/@tc39-chairs/rJJlSXjbF","msgtype":"m.text"},"ts":1630387894523,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$ChYJMbQigsPFSGdio5Afch8fyqPxIrI3smK4LOSlHLA"},
{"content":{"body":"The meeting starts in 9 mins","msgtype":"m.text"},"ts":1630417869728,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$p58uYjf7ZSzTKJFhD6BnMCmYcavvPI5wTeR04GjmCH4"},
{"content":{"body":"if anyone is having trouble joining, please say","msgtype":"m.text"},"ts":1630417885223,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$FnPShHTBKMVkV4LzRXSbPdhABMcV_x1V49-wSnkL0cA"},
{"content":{"body":"nothing to report for ECMA-402 btw","msgtype":"m.text"},"ts":1630418267368,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$QfugEG0mYiKYY4BldWNKmryvJ3q0g2BtcArSdwcKrnQ"},
{"content":{"body":"and I'll try to speedrun my DurationFormat presentation","msgtype":"m.text"},"ts":1630418277866,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$WRps3TpI0vpkDipX9EqZXjgzZK8SFkw0hWh-rXlq7H0"},
{"content":{"body":"Rob Palmer: don't see the sign-in form on reflector?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a>: don't see the sign-in form on reflector?","msgtype":"m.text"},"ts":1630418365925,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$arhqE1gNuwdlsS2yY1dCFhORLmGJWgQmRF2CkcLMnto"},
{"content":{"body":"or... i'm looking at wrong meeting...","msgtype":"m.text"},"ts":1630418384278,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$h7ec92ZZ3riDRF4VzpU7tA8eruFNrWb5_hhg4zFh4nk"},
{"content":{"body":"https://github.com/tc39/Reflector/issues/388","msgtype":"m.text"},"ts":1630418392959,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$V9PiYwW31U50TBxqnO5xO3FP5VNrf7zFnT3lLIF9FyU"},
{"content":{"body":"Issue 388, under \"Video Conference\"","msgtype":"m.text"},"ts":1630418395183,"senderName":"Jamie Kyle","senderId":"@jamiebuilds:matrix.org","id":"$8LyPOV0NSL1P8s67AOhi5En5yr1vZEmj3JNtE5At978"},
{"content":{"body":"(we can put reflector links here, but not the signin form or the notes)","msgtype":"m.text"},"ts":1630418418488,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$L3mT7nFx0mP6KBfmzRzP6fBeBNmpfGEX87wmAKA9ADU"},
{"content":{"body":"Room subject updated!","msgtype":"m.text"},"ts":1630418447782,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$x_xnBhR903YeZU1BU2jdtRF8Uzb9ngPJzqwd2-SlMMw"},
{"content":{"body":"experiencing technical difficulties, will rejoin jitsi shortly","msgtype":"m.text"},"ts":1630419022647,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$CD09BiZym7gViCEPPArPBonJFWCiwmPbVT7eJ7StVCc"},
{"content":{"body":"oh im sorry","msgtype":"m.text"},"ts":1630419212688,"senderName":"Jamie Kyle","senderId":"@jamiebuilds:matrix.org","id":"$hVE5ggtyiuwMaflLUQPH5D91RsYXFjYNUcpStCS-vpU"},
{"content":{"body":"jitsi does not seem to like my webcam.","msgtype":"m.text"},"ts":1630419455160,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$9X81ssXKEt2FsKBRDJggTHxx4WTIroZyjY_b1qnRxTA"},
{"content":{"body":"rbuckton: i saw you for a sec!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: i saw you for a sec!","msgtype":"m.text"},"ts":1630419491823,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$Wr3iBKN9y-og9uTiLQjTGc1CTnvanHXm2Stthsu991E"},
{"content":{"body":"thanks for taking that one, ljharb ","format":"org.matrix.custom.html","formatted_body":"thanks for taking that one, <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>","msgtype":"m.text"},"ts":1630419561739,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VWYVEw3x_lwwHxF2ySR51J-_NTiiZCK1J_zHj9OGzSY"},
{"content":{"body":"I had to step away and the moment I got back and sat down, my topic was up lol","msgtype":"m.text"},"ts":1630419589045,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$he21LZEz8SHufsqvxqccHjAOQDEXTnhD90BelFcmF7s"},
{"content":{"body":"I just got flustered","msgtype":"m.text"},"ts":1630419591701,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Y0752kbe5ni9AWx0RDgUoVX8U9EMdZCmrTr0Lihb0a8"},
{"content":{"body":"slides, for anyone with technical difficulties: https://docs.google.com/presentation/d/177vM52Cd6Dij-ta6vmw4Wi1sCKrzbCKjavSBpbdz9fM/edit","msgtype":"m.text"},"ts":1630419781096,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lq5Tt_czl7mjakUbcCx4rKY_p7pE2Tp0Z3wS0lNRYl0"},
{"content":{"body":"I think optional catch went straight to stage 3 in one meeting and then stage 4 the next meeting?","msgtype":"m.text"},"ts":1630419969569,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$yNpkEz847Ikilq28QbFyt9gucLIsUk8gE9hx2tYA-ck"},
{"content":{"body":"it was fast","msgtype":"m.text"},"ts":1630419972456,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ajZU_Qdnn71VvRhZKJxRIRQl7xJOvSdrXqopTVMvMtM"},
{"content":{"body":"behind optional catch, fastest includes Object.hasOwn, Object.fromEntries, Object.entries/values, iirc","msgtype":"m.text"},"ts":1630420003838,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uzQ4NaY2j2udJkcO1FP780sI32dXihCbbv1x40v5XmA"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1630420029981,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1ZBRpmh3wBaNBsZC-OaepcScCRdq_Msks3Xl-Qry0kQ"},
{"content":{"body":"I think there were some really fast String.prototype ones, too","msgtype":"m.text"},"ts":1630420039157,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Gw-okXyuSZ-WM9v_8VRr68wCdF_FovCjg5D3fwKxsJA"},
{"content":{"body":"note for tcq. Item 8, change-array-by-copy. I'll be presenting, instead of Robin.","msgtype":"m.text"},"ts":1630420044361,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$X1JeA8KWd4fTbzpzLa3nsYqgeAd0g8m1WP2u_5Kdx2s"},
{"content":{"body":"i should be proposing stuff to be under Object for a faster speed then","msgtype":"m.text"},"ts":1630420047114,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$95c01QhGnqeeVMa2dUmZzdjdIkg7RPS4luMfDkR3Nts"},
{"content":{"body":"it'd be great if we can call for explicit support for consensus","msgtype":"m.text"},"ts":1630420077889,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$icftJ1bjW2GmYA5CcMSS-rjMftCYL1EEL-rf2NF8gCw"},
{"content":{"body":"shu: Object.at when?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: Object.at when?","msgtype":"m.text"},"ts":1630420081042,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CJ4X_QzcVS-SNhf_zlN0AGq0uArX4tW0umP1ptKi3fU"},
{"content":{"body":"Ashley Claymore: IIUC, the presenter listed in TCQ doesn't matter all that much","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: IIUC, the presenter listed in TCQ doesn't matter all that much","msgtype":"m.text"},"ts":1630420088336,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$C63M9xSqwKBuD2J-mTitaKp89RCbD8mdaGnevmLm4GA"},
{"content":{"body":"maybe getting a couple people to support things for each stage advancement","msgtype":"m.text"},"ts":1630420090160,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$i9Bcvv8Kra76OP92xaRTbFd1vscr7QFKZDVOSYCxH3M"},
{"content":{"body":"Where‚Äôs the question queue? Is it just the 8x8 Meet chat, or is it something special?","msgtype":"m.text"},"ts":1630420160346,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$1DTKeIPVxWlb0Zt89Tk0fPZGi8xAlfyPfH70rsLipRI"},
{"content":{"body":"jschoi: TCQ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: TCQ","msgtype":"m.text"},"ts":1630420180279,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$1T-BkfQ4jq6DjRK5ApKuZtoS6SHa_jQhwsMyS7iIRyc"},
{"content":{"body":"there's a link in reflector","msgtype":"m.text"},"ts":1630420185789,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$ExSJThaQEhV5ZwwlxwwMa4ya_U3wSGkJD3_avr29QRo"},
{"content":{"body":"Thank you!","msgtype":"m.text"},"ts":1630420199361,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$mA9ESzq8k7auQ4G2uJmTK2jb8IqDwYNxgSD-Khf1gXs"},
{"content":{"body":"Any reason why I shouldn't tweet about `static {}` achieving stage 4 consensus?","format":"org.matrix.custom.html","formatted_body":"Any reason why I shouldn't tweet about <code>static {}</code> achieving stage 4 consensus?","msgtype":"m.text"},"ts":1630420337857,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$P7mWtYlp2N3oZsQm7KAhCNzrt0_Rq8sHx5BImJixkzE"},
{"content":{"body":"we didn't add flatMap to TypedArray? ü§î","msgtype":"m.text"},"ts":1630420498126,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dGpaYhxGfwIIrvDTynQ9JC4V0pYDm6WcMR4Kn_Pk6pA"},
{"content":{"body":"is there a usecase?","msgtype":"m.text"},"ts":1630420585899,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TWMyTndFwQ8JvAcCcC6wLyjyJQVnjtMq5F7XrR-ws4M"},
{"content":{"body":"rbuckton: go for it, commit's pushed to the proposals repo already","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: go for it, commit's pushed to the proposals repo already","msgtype":"m.text"},"ts":1630420601732,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WQxB0SEleru5CWDC9Rj8Z34UIpnyiTZ13I06kC5Psyo"},
{"content":{"body":"hello everyone","msgtype":"m.text"},"ts":1630420873488,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$F4Kpz5-rNA7shsmPwo1pd6vRGUK7FWR1oV3T8sU06Uc"},
{"content":{"body":"we should add `setAt` to arrays","format":"org.matrix.custom.html","formatted_body":"we should add <code>setAt</code> to arrays","msgtype":"m.text"},"ts":1630421079930,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zzQPb7UFw89RkfPo_R5qvC8vbgB2uxpgcmnb11y_37I"},
{"content":{"body":"solves this problem","msgtype":"m.text"},"ts":1630421082960,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pvdzS7JE9uYcS5_RPgmPZDTxCtFu6e5rHvfNfLWFbMI"},
{"content":{"body":"I mean we probably should add set() to arrays, if TypedArray has it","msgtype":"m.text"},"ts":1630421148863,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$YKLUmGpifvP_9U-26dfgvhP5Ao8ttvaoxgzjtpOMcP4"},
{"content":{"body":"kinda weird otherwise","msgtype":"m.text"},"ts":1630421166650,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$-W8KkAIVNJk7OXEwxPHjP6v6ZLRR3zdeiSO_-aejBPY"},
{"content":{"body":"not stoked about adding more mutators to Array.prototype tho","msgtype":"m.text"},"ts":1630421178454,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$WrOE9AWqhpQHp4I9nOreiiYKbs28wnb34ZZKG41AoS8"},
{"content":{"body":"it's cool it's just an alias","msgtype":"m.text"},"ts":1630421195663,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$zkXf3qQtVvwbNjWE_pCqaToLQZ6TwCNnsgEX7csXKik"},
{"content":{"body":"(with negative-wrapping magic, granted)","msgtype":"m.text"},"ts":1630421209353,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2tlQIUV1tfPGJ1EtBVVRMPidV9Roe4l0s-EXpQZJcsY"},
{"content":{"body":"there's a simple two step solution here:\n1) at() returns a reference instead of a value\n2) change assignment semantics to allow new values to be returned","format":"org.matrix.custom.html","formatted_body":"<p>there's a simple two step solution here:</p>\n<ol>\n<li>at() returns a reference instead of a value</li>\n<li>change assignment semantics to allow new values to be returned</li>\n</ol>\n","msgtype":"m.text"},"ts":1630421265275,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$8ea8tw6HDFIpLbKjsRT7nhc0ECHqJ2_fCHOd5fgE7pg"},
{"content":{"body":"ah yes simple","msgtype":"m.text"},"ts":1630421301362,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ftSAStc9W6jXd2OapMwAYHaOyEqv3FefkfyFJF5zEZ4"},
{"content":{"body":"hell yeah brother, we never unshipped function calls as LHS of assignments syntactically","msgtype":"m.text"},"ts":1630421331610,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2TZUoOZc0B24KeWwimy20KbtnN_qs7iyfyg2ooufVIA"},
{"content":{"body":"TA.p.set throws for negative indices","msgtype":"m.text"},"ts":1630421362023,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1orw1L9MiDUjobTU_uTdn-Y0rosDEnLuxHeFVIWIP4c"},
{"content":{"body":"which, I guess we could probably change that to wrap like `.at`","format":"org.matrix.custom.html","formatted_body":"which, I guess we could probably change that to wrap like <code>.at</code>","msgtype":"m.text"},"ts":1630421369419,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cl24Szg8PBkq_NFKS1tHlSl9r2QtUW1BWK-sfVc657E"},
{"content":{"body":"though actually TA.p.set has this behavior where it spreads arrays which are passed, which we would probably not want to do with A.p.set","msgtype":"m.text"},"ts":1630421472743,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cZTGH_Wk3GKHJq6uW-N-q2ZDq9Bx23xjU0sPWC1oJZo"},
{"content":{"body":"so maybe not actually feasible to copy it over","msgtype":"m.text"},"ts":1630421480109,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LGqGztWrtvlLJx1jaVt4yxKC5bxm7JGQrPD4IbbiFuE"},
{"content":{"body":"> <@ljharb:matrix.org> rbuckton: go for it, commit's pushed to the proposals repo already\n\nI shouldn't have waited, Rick Waldron beat me to it :) He has a larger audience though, so I'm happy either way.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$WQxB0SEleru5CWDC9Rj8Z34UIpnyiTZ13I06kC5Psyo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br><a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: go for it, commit's pushed to the proposals repo already</blockquote></mx-reply>I shouldn't have waited, <a href=\"https://matrix.to/#/@rwaldron:matrix.org\">Rick Waldron</a> beat me to it :) He has a larger audience though, so I'm happy either way.","m.relates_to":{"m.in_reply_to":{"event_id":"$WQxB0SEleru5CWDC9Rj8Z34UIpnyiTZ13I06kC5Psyo"}},"msgtype":"m.text"},"ts":1630421504942,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$HiwskITKFYqbI1iunnRS2Cy5nzftPy3pMKdY3OiWWzQ"},
{"content":{"body":"lol you can still tweet about your own proposal even if others have","msgtype":"m.text"},"ts":1630421522674,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$X4tIAZdeTbGcO2Fiit-8nC9M0fq28zFEgB18IzG_4jY"},
{"content":{"body":"but up to you ofc","msgtype":"m.text"},"ts":1630421525227,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mAamburKD2Ya0IA36LnmFs6mPzv4eBdzjRlWTcKGOSQ"},
{"content":{"body":"Already did. ","msgtype":"m.text"},"ts":1630421554201,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$NgY5vAeIOekm046uOW4vuEsgTCums7UVKZPkXFnP8XQ"},
{"content":{"body":"it seems like the list of methods should be decided before stage 2?","msgtype":"m.text"},"ts":1630421580677,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$46gpItKtBH7XK7E-OfEB4mix8PCuZWBNUm_luuchREU"},
{"content":{"body":"> <@devsnek:matrix.org> there's a simple two step solution here:\n> 1) at() returns a reference instead of a value\n> 2) change assignment semantics to allow new values to be returned\n\nI would like to introduce you to my friend https://github.com/rbuckton/proposal-refs (may propose soon depending on outcome of Fixed shape objects proposal)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8ea8tw6HDFIpLbKjsRT7nhc0ECHqJ2_fCHOd5fgE7pg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br><p>there's a simple two step solution here:</p>\n<ol>\n<li>at() returns a reference instead of a value</li>\n<li>change assignment semantics to allow new values to be returned</li>\n</ol>\n</blockquote></mx-reply>I would like to introduce you to my friend https://github.com/rbuckton/proposal-refs (may propose soon depending on outcome of Fixed shape objects proposal)","m.relates_to":{"m.in_reply_to":{"event_id":"$8ea8tw6HDFIpLbKjsRT7nhc0ECHqJ2_fCHOd5fgE7pg"}},"msgtype":"m.text"},"ts":1630421658705,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$jKg-KOD9IoyONFN_gYHH-MXutxwwyENSRdXOxV-Kbdg"},
{"content":{"body":"I don't get why everything on Tuple needs to be on Array","msgtype":"m.text"},"ts":1630422002102,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$g-b30e8US3XsnRq9YVLZ_N-78v7WV5q2nPXlkVUMZ9Y"},
{"content":{"body":"a tuple is conceptually an immutable array","msgtype":"m.text"},"ts":1630422030619,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$CdAVaGDWPTIepDUNHrXEbGfdHZFnowVfiUdu5xdoxN0"},
{"content":{"body":"bakkot: One hope is that it'll be easy to write code that's generic between Tuples and Arrays","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: One hope is that it'll be easy to write code that's generic between Tuples and Arrays","msgtype":"m.text"},"ts":1630422094018,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$27luywTYzmvFLQjuoihfwLNjwYwUnsxLGyLCtwEECag"},
{"content":{"body":"who is objecting to consensus?","msgtype":"m.text"},"ts":1630422106311,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$qRfMygc-8n7qlGLarmlk7xMoWC3R9iIwx-5wQPc1EPI"},
{"content":{"body":"littledan: so, that seems like a good motivation for all the _access_ methods to work. it seems like a strange goal to say you want _mutating_ code which is generic between Tuples and Arrays, though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: so, that seems like a good motivation for all the <em>access</em> methods to work. it seems like a strange goal to say you want <em>mutating</em> code which is generic between Tuples and Arrays, though","msgtype":"m.text"},"ts":1630422155132,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N4H9PFua8L_LYFYjwjpnSGEKgIS2iYFj5yNwaa0EcMw"},
{"content":{"body":"Ashley Claymore: please work on a rough initial reduced list and link it here for interested parties before end of the plenary if possible","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: please work on a rough initial reduced list and link it here for interested parties before end of the plenary if possible","msgtype":"m.text"},"ts":1630422168356,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dq4JyasHuhfgrT4gK319Lp5BWKLIU_9mX_VCkublA_Y"},
{"content":{"body":"I am a bit uncomfortable with how this advancement went","msgtype":"m.text"},"ts":1630422172272,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$CPB5F6yosBWSLYQR94TLLyKqNOIxAYbve7lcVwKDPJI"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1630422183929,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KHe3GIIPxWGX70ZtMZeiRxN6kiCwz8zPMX6UQ6ynynI"},
{"content":{"body":"> <@michaelficarra:matrix.org> I am a bit uncomfortable with how this advancement went\n\nDid you want to block it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$CPB5F6yosBWSLYQR94TLLyKqNOIxAYbve7lcVwKDPJI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I am a bit uncomfortable with how this advancement went</blockquote></mx-reply>Did you want to block it?","m.relates_to":{"m.in_reply_to":{"event_id":"$CPB5F6yosBWSLYQR94TLLyKqNOIxAYbve7lcVwKDPJI"}},"msgtype":"m.text"},"ts":1630422188008,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$k2Wl-dFjM9r2_6HbmPdaF2V1JhUONANz2GZwj3yqkLY"},
{"content":{"body":"I was about to point out that @aki's mic was making noise, but I think she said her mic went out and it seems to be better now.","msgtype":"m.text"},"ts":1630422189547,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$NegDkoeLncRMHpv8XDew0mQoNiNyuJqSUFlfldJB26o"},
{"content":{"body":"I mean, the wording was a bit weird","msgtype":"m.text"},"ts":1630422192138,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$ajIonZAtRDjYwjKVG26MtfyKtl9IE4iggJMfHCNoU88"},
{"content":{"body":"i mean the timebox rushing is uncomfortable but i don't think there was actual objection","msgtype":"m.text"},"ts":1630422202727,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Lj9-vseK0A1VQ4q6JRAQMUtfq4Os9E41BlQWX5vPTdQ"},
{"content":{"body":"if someone was on the queue and wanted to block, that should of course be respected","msgtype":"m.text"},"ts":1630422208677,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$cgCfmd0WQR5szULlHdK09_jnZMmtMdwzKGLtJL1KLjY"},
{"content":{"body":"I didn't see what the timebox items were","msgtype":"m.text"},"ts":1630422213147,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$cFe7Y7SQtaFtlfbpGuAfwbpcEy6nlVQU3zi-p2Iajrw"},
{"content":{"body":" * I didn't see what the queue items were","m.new_content":{"body":"I didn't see what the queue items were","msgtype":"m.text"},"m.relates_to":{"event_id":"$cFe7Y7SQtaFtlfbpGuAfwbpcEy6nlVQU3zi-p2Iajrw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630422218765,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$o5XXPtxcyuIAwbZte_V_is3WD1X1k1XYuga5-QapPaI"},
{"content":{"body":"since mozilla worked it out and kevin and i wanna see a list","msgtype":"m.text"},"ts":1630422223206,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9VwdvBPwa7W4BZ9nr56V6CmFN-RkXpxMLEhgWWDODHI"},
{"content":{"body":"and that list... can just be communicated here, since nobody else asked for it","msgtype":"m.text"},"ts":1630422236541,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UKB1jnkl2M7uLPZbjb55RCRXrk60v7URS3L6yLCFTzE"},
{"content":{"body":"I just feel like there wasn't agreement between the chairs and the rest of the committee about whether we covered everything sufficiently for advancement","msgtype":"m.text"},"ts":1630422265757,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3-tkKt3SjGoer1CWEQccQJYuA01qNnxvrJapwbWfdwY"},
{"content":{"body":"it would've taken the same amount of time to ask, \"is there consensus?\" and give 15 seconds of uncomfortable silence for anyone to interject, as to have that argument","msgtype":"m.text"},"ts":1630422290789,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$GMncFtF3KPXxH25fykZpLJPTnC67qr5ZRXebPwemihA"},
{"content":{"body":"maybe we can add that as a blitz bonus topic","msgtype":"m.text"},"ts":1630422300380,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$6OItGdIcPg_PA9CnvnKugUIUyQLw1hSk8mEzEA3rKck"},
{"content":{"body":"anyway chairing is hard; Aki is doing well","msgtype":"m.text"},"ts":1630422328073,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$TPb7_x5N6qI0M3yxSqKeJy0FBUOhZRApKRCTq2a6ATI"},
{"content":{"body":"The queue items weren't blockers, but in the future if we run up against timebox and someone raises a question we will move on even if there are no obvious objections.","msgtype":"m.text"},"ts":1630422426228,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$67xQQi29jHGozG9utBBvRdTcXnrf67zLPwbnnIqVs6M"},
{"content":{"body":"I am fine with moving on without advancement whenever we're even a second over timebox, but rushing advancement, whether within or without timebox, doesn't seem right","msgtype":"m.text"},"ts":1630422450925,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$tojIjwEMBeCI5hRdocwTRLf46nHjhBpar4p1AjgCV58"},
{"content":{"body":"Michael Ficarra: i don't disagree. i think I should have held firm.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i don't disagree. i think I should have held firm.","msgtype":"m.text"},"ts":1630422496064,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$APxf6_tELOct04DAKggMeP23nGa7h25zuiWNy54774Y"},
{"content":{"body":"> <@shuyuguo:matrix.org> Ashley Claymore: please work on a rough initial reduced list and link it here for interested parties before end of the plenary if possible\n\nWill do. In the mean time there is discussion here if useful https://github.com/tc39/proposal-change-array-by-copy/issues/27","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dq4JyasHuhfgrT4gK319Lp5BWKLIU_9mX_VCkublA_Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: please work on a rough initial reduced list and link it here for interested parties before end of the plenary if possible</blockquote></mx-reply>Will do. In the mean time there is discussion here if useful https://github.com/tc39/proposal-change-array-by-copy/issues/27","m.relates_to":{"m.in_reply_to":{"event_id":"$dq4JyasHuhfgrT4gK319Lp5BWKLIU_9mX_VCkublA_Y"}},"msgtype":"m.text"},"ts":1630422621725,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$SEdQL1fLw7XEru6o_0wo_0hmK9y7fvb3nyl6rBm7vAg"},
{"content":{"body":"ryzokuken: I'm still happy to review","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: I'm still happy to review","msgtype":"m.text"},"ts":1630423003603,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$BV3611FoZBlqVF5eQWQaacLq7JAjcvX-5CN9adUoMjw"},
{"content":{"body":"I ‚ù§Ô∏è this proposal","msgtype":"m.text"},"ts":1630423086800,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$8s1t3RjJpIo4jqrCfOUVzNwshCJ4S5fku-9lrxPGPeE"},
{"content":{"body":"thanks Michael Ficarra üòá","format":"org.matrix.custom.html","formatted_body":"thanks <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> üòá","msgtype":"m.text"},"ts":1630423156050,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$NAvUuJ3kcDzoEXjWIkUPX-FjLDoNeJy5YA-3xfWfQqg"},
{"content":{"body":"TabAtkins: & jschoi  y'all want to hop on that next 30 min slot?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: &amp; <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>  y'all want to hop on that next 30 min slot?","msgtype":"m.text"},"ts":1630423201987,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$zxXtNloDgwvxJyfvZAcLNLYylj5wKp-vhtrUWjqRdRM"},
{"content":{"body":"i'm ready for it","msgtype":"m.text"},"ts":1630423210167,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$I6pAPRxfL7dujtpv7fgVoq92rT55WRGSgXn-TKzZRbg"},
{"content":{"body":"Ready; hoping my microphone will work.","msgtype":"m.text"},"ts":1630423262640,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$MkyurfU0Mfq8DCEjsOgQdSDBEW2MYlaMnswU6bDVurs"},
{"content":{"body":"honestly it actually does seem a little bit analogous to shadow DOM","msgtype":"m.text"},"ts":1630423727291,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_v6Id86HseBfS0bmrRT09Du3FnJ3dCdSE3gHfOeolNU"},
{"content":{"body":"\"analogous to\" isn't always great if it doesn't actually hook into the same concept tho. \"this is theoretically similar to shadow DOM, but doesn't actually have anything to do with shadow DOM\" can be problematic for learning.","msgtype":"m.text"},"ts":1630423834630,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$oXvxepiw2zXM_C9BHl3DS1jcb4XlSNHeKxFtK8BLmrQ"},
{"content":{"body":"if it is analogous then that's a stronger argument _for_ this name","format":"org.matrix.custom.html","formatted_body":"if it is analogous then that's a stronger argument <em>for</em> this name","msgtype":"m.text"},"ts":1630423837243,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ktrTE6L9JmpyKdj5BFELsjtezq61HbWxk8FVKRX0p4I"},
{"content":{"body":" * if it is analogous then that's a stronger argument _for_ this name","format":"org.matrix.custom.html","formatted_body":" * if it is analogous then that's a stronger argument <em>for</em> this name","m.new_content":{"body":"if it is analogous then that's a stronger argument _for_ this name","format":"org.matrix.custom.html","formatted_body":"if it is analogous then that's a stronger argument <em>for</em> this name","msgtype":"m.text"},"m.relates_to":{"event_id":"$ktrTE6L9JmpyKdj5BFELsjtezq61HbWxk8FVKRX0p4I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630423851413,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nQVFUtE6XKdn7cziqHt6p49f8R_5KYdIYWyAuuHt5Qk"},
{"content":{"body":"I'm not objecting, but I suspect the HTML/DOM editors might have an opinion on it","msgtype":"m.text"},"ts":1630423895946,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Lc5yP4HAjIwS4hWYvybt2AdGwN0bdt8d7fTrdkcb7_o"},
{"content":{"body":"i confirmed with domenic he's fine with SHadowRealm","msgtype":"m.text"},"ts":1630423909737,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_x4BXtCMrPp8NUN1Ln9wrXNp2b8SO3MwTOUNrIyXvSs"},
{"content":{"body":"Domenic has been involved in the thread at least","msgtype":"m.text"},"ts":1630423911942,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OKpr5aX7cbpAjLOhGN_siw--2yjMPtLU5tbRGUA-dSw"},
{"content":{"body":"could ask anne i guess","msgtype":"m.text"},"ts":1630423913815,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pAUkwwCJ_Tr5oUxAQCTHftIeXxEKXk4nbhvogWmj-4M"},
{"content":{"body":"i don't get the analogy to shadow dom personally","msgtype":"m.text"},"ts":1630423915692,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$QFat2aLLrm5RBQ9wVi-HePQ0_ZZ9ZkLyI-tQ3tDaYIw"},
{"content":{"body":"shadow dom and shadow realm both have the property of, it's a separate X where changes in it do not affect the main X except through specific boundaries","msgtype":"m.text"},"ts":1630424059420,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p-2wWEUo37RFPRzaeATC9Not9vWg8MndINtZ1L-sCHQ"},
{"content":{"body":"devsnek the analogy is weak. Other than what Bakkot has said, it just indicates ShadowRealm is not the main Realm.","msgtype":"m.text"},"ts":1630424185049,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$bjxJ2Ku9_B5vrgYalF0-Cim32b83JaAvB3_N3DbgmhY"},
{"content":{"body":"can someone please give cjtenny access to post?","format":"org.matrix.custom.html","formatted_body":"can someone please give <a href=\"https://matrix.to/#/@ctenny:igalia.com\">cjtenny</a> access to post?","msgtype":"m.text"},"ts":1630424197631,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$rd1raaxPxH8E6Abr6bIUZXuWx2BeK12BUkM57ShfSFw"},
{"content":{"body":"> <@leobalter:matrix.org> devsnek the analogy is weak. Other than what Bakkot has said, it just indicates ShadowRealm is not the main Realm.\n\nThis is exactly what I think about the name and exactly what I think the correct understanding should be (I might be very biased though)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bjxJ2Ku9_B5vrgYalF0-Cim32b83JaAvB3_N3DbgmhY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@leobalter:matrix.org\">@leobalter:matrix.org</a><br>devsnek the analogy is weak. Other than what Bakkot has said, it just indicates ShadowRealm is not the main Realm.</blockquote></mx-reply>This is exactly what I think about the name and exactly what I think the correct understanding should be (I might be very biased though)","m.relates_to":{"m.in_reply_to":{"event_id":"$bjxJ2Ku9_B5vrgYalF0-Cim32b83JaAvB3_N3DbgmhY"}},"msgtype":"m.text"},"ts":1630424230736,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$5NoubUcUk2V7h3rl42XIlsDddcYgU7i2jvQ47Pd964I"},
{"content":{"body":"something like \"secondary\" realm","msgtype":"m.text"},"ts":1630424238999,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$gdWyFTa402Ho89NM0cQPaVYjRlPun7amEl9N_Xwgu7I"},
{"content":{"body":"inb4 TertiaryRealm","msgtype":"m.text"},"ts":1630424274747,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Bvam7v6hCex-9APo7a07LxA_PKO84f3FYt6gTKK0j1k"},
{"content":{"body":"QuaternaryRealm‚Ä¶‚Ä¶","msgtype":"m.text"},"ts":1630424283193,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$H1oLyr9XS3UwAgWHerisTfhUjHYATaG4abeGzDBMEAs"},
{"content":{"body":"> <@usharma:igalia.com> can someone please give cjtenny access to post?\n\nalso ioanna ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rd1raaxPxH8E6Abr6bIUZXuWx2BeK12BUkM57ShfSFw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@usharma:igalia.com\">@usharma:igalia.com</a><br>can someone please give <a href=\"https://matrix.to/#/@ctenny:igalia.com\">cjtenny</a> access to post?</blockquote></mx-reply>also <a href=\"https://matrix.to/#/@idimitriou:igalia.com\">ioanna</a>","m.relates_to":{"m.in_reply_to":{"event_id":"$rd1raaxPxH8E6Abr6bIUZXuWx2BeK12BUkM57ShfSFw"}},"msgtype":"m.text"},"ts":1630424291289,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$GqFj3WxnT6mpTWRq8i0OH6ZpjI1ABCIotEr10zlGVX8"},
{"content":{"body":"The follow up candidates would be SatelliteRealm and Bubble","msgtype":"m.text"},"ts":1630424307991,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$HZokmNPR7Fo8XGoh9ZraHaFlZs08r9whs0q8qVNw11w"},
{"content":{"body":"Schedule shifted","msgtype":"m.text"},"ts":1630424309231,"senderName":"Aki","senderId":"@akirose:matrix.org","id":"$ZRxcbTwzCiQiP1uUE_5SP2NX6OeVFi1Pcv74Q3J7Goc"},
{"content":{"body":"thanks Aki ","format":"org.matrix.custom.html","formatted_body":"thanks <a href=\"https://matrix.to/#/@akirose:matrix.org\">Aki</a>","msgtype":"m.text"},"ts":1630424331393,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$R_g9-YE2jRqgnnF_R9RyxVwR3LNg9GEHZFtoPW5zCTI"},
{"content":{"body":"Thank you!","msgtype":"m.text"},"ts":1630424336561,"senderName":"ioanna","senderId":"@idimitriou:igalia.com","id":"$II8WU-cs2PizO89wbrFBKrPPc-FAl4VxLQvf-tIZEFg"},
{"content":{"body":"SatelliteRealm has the pretty annoying double L in between. It fails to check the \"easy to spell\" box.","msgtype":"m.text"},"ts":1630424364300,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$fQ5o4CNv1ncibvmytaIL1cQ9jFj3LX_Y1Jc1w8hun6E"},
{"content":{"body":"Bubble has subjective concerns over the meaningful item and it fails the Unique box","msgtype":"m.text"},"ts":1630424419295,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$7tkPy9CndSPIDh-v6IuygtKlPwRTuQchnUzxMDqNz5o"},
{"content":{"body":"okay but WHY does it need to be point-free?","msgtype":"m.text"},"ts":1630424420634,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$f5N3Jnk8gZk3PyDjWb01IHnkR4TYsPeb-BrL3kELXOM"},
{"content":{"body":"a \"JS bubble\" search will lead to a lot of documentation over event bubble, etc","msgtype":"m.text"},"ts":1630424440489,"senderName":"leobalter","senderId":"@leobalter:matrix.org","id":"$DoWtvrz6r41nr-DHBcX0CfkokxgojLb3A7OtsJeY6OE"},
{"content":{"body":"wow, right on cue","msgtype":"m.text"},"ts":1630424446827,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_qKQhtxuUGnbfaq0wD6PgCEl9Z1qCyj2Bi5xm-smwN0"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1630424459602,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HZml5xNl4gIMUNkUwpQWWpDoJqAJsDas7XXAZF2Rt7A"},
{"content":{"body":"nicely anticipated","msgtype":"m.text"},"ts":1630424462582,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wcM8r76dVuDz5kXdqvKhWcZXZmDJEcYnCkuMJkW2EVc"},
{"content":{"body":"eh, still not compelling","msgtype":"m.text"},"ts":1630424484984,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UH5vGM4eHoIWwz5OJDEk8y7wq38FpNL50QtfGLnOwkk"},
{"content":{"body":"this is a straw argument...","msgtype":"m.text"},"ts":1630424519092,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$_GlT3TtNSXT8mWKTQstOPRbpLvVgvw_gG_M3uxtQFn8"},
{"content":{"body":"you could do `$=` for all of those","format":"org.matrix.custom.html","formatted_body":"you could do <code>$=</code> for all of those","msgtype":"m.text"},"ts":1630424526993,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$0slalheo7cMsicg4vU_w-P-15YDkBwW53zrDTArdD3M"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1630424528014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$k-stkJbBYT-YJjh9rfS2QuwCE4vGArRmFjTUlwMqpJQ"},
{"content":{"body":"and have basically the pipeline operator","msgtype":"m.text"},"ts":1630424532395,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$tWTx3M0F3HgBWROgcUcwXZubVciMoSwf6ssBSZlDpDU"},
{"content":{"body":"to be clear, I think the operator is alright, but I'm not convinced the `%` is necessary","format":"org.matrix.custom.html","formatted_body":"to be clear, I think the operator is alright, but I'm not convinced the <code>%</code> is necessary","msgtype":"m.text"},"ts":1630424681002,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$K-wc1Yu1py7KqaRht1jrYgqbOIFkJfVXp1hVVMBdItM"},
{"content":{"body":" * to be clear, I think the pipeline operator itself is alright, but I'm not convinced the placeholder syntax (`%` in these examples) is necessary","format":"org.matrix.custom.html","formatted_body":" * to be clear, I think the pipeline operator itself is alright, but I'm not convinced the placeholder syntax (<code>%</code> in these examples) is necessary","m.new_content":{"body":"to be clear, I think the pipeline operator itself is alright, but I'm not convinced the placeholder syntax (`%` in these examples) is necessary","format":"org.matrix.custom.html","formatted_body":"to be clear, I think the pipeline operator itself is alright, but I'm not convinced the placeholder syntax (<code>%</code> in these examples) is necessary","msgtype":"m.text"},"m.relates_to":{"event_id":"$K-wc1Yu1py7KqaRht1jrYgqbOIFkJfVXp1hVVMBdItM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630424741574,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$M4sM3ZaKt40GHEulIycpGWZObYKDCfa5gqq2KZyvvc0"},
{"content":{"body":"Michael Ficarra: pipeline is not worth it without `%`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: pipeline is not worth it without <code>%</code>","msgtype":"m.text"},"ts":1630424757462,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a-bvP46ag0_1PCTdhreuVbZY7CEVy3l71YeflO-rUbM"},
{"content":{"body":"I think a point is that people could use `$=`‚Ä¶but they often don‚Äôt. Heavily nested code occurs all the time, because people make the choice between nesting versus assigning variables (whether something with a name or `$`), and it often is in favor of nesting.","format":"org.matrix.custom.html","formatted_body":"I think a point is that people could use <code>$=</code>‚Ä¶but they often don‚Äôt. Heavily nested code occurs all the time, because people make the choice between nesting versus assigning variables (whether something with a name or <code>$</code>), and it often is in favor of nesting.","msgtype":"m.text"},"ts":1630424760596,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qFj_baBFdPTsqnPMZY3tqOTjwYIFvUz0AiCNeO1BJy8"},
{"content":{"body":"but this is hashed out on github at length","msgtype":"m.text"},"ts":1630424769521,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$S--7VPcswwkLfb6g5Ss1nla9jexZeag7btiDMi0XhjU"},
{"content":{"body":"I would prefer to have a partial application proposal. I don't see what this adds to the language other than another way to do a lot of what we can do already but in a different form","msgtype":"m.text"},"ts":1630424838610,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$47MnqSdgaUqFH9zumcZfSzJB6UQ5fOugz4-7kcg_2sU"},
{"content":{"body":"what is the tcq code?","msgtype":"m.text"},"ts":1630424875389,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$kdeIHqZIActWgwjqLH-ufimpT7ahg3A-iP8GLMIUzUs"},
{"content":{"body":"Its in the reflector thread near the bottom","msgtype":"m.text"},"ts":1630424892336,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rd5Hg_aUmi8RPzspdVE0EXHCGA0EXIPGvjpJn16UR7g"},
{"content":{"body":"ah ty","msgtype":"m.text"},"ts":1630424897294,"senderName":"Tierney Cyren","senderId":"@bitandbang:matrix.org","id":"$yBmr0vq8gLkte3Pqt-cN2tpBG6n7kXMLKHP-ICDV8Qw"},
{"content":{"body":"Its not published here because this room's contents are public","msgtype":"m.text"},"ts":1630424903850,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$twDSeimBX7sDmtavQoFOHU9kBpHmcq6jyyzTzapsIEo"},
{"content":{"body":"the placeholder isn't partial application tho","msgtype":"m.text"},"ts":1630424943704,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$x5HRKznqgNO6Q1y6gKCpv5-f3QpgT6cQdTArSWgx6fw"},
{"content":{"body":" * this placeholder isn't partial application tho, is it?","m.new_content":{"body":"this placeholder isn't partial application tho, is it?","msgtype":"m.text"},"m.relates_to":{"event_id":"$x5HRKznqgNO6Q1y6gKCpv5-f3QpgT6cQdTArSWgx6fw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630424948391,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$grcOhpaBCDZ-bqRWY4JY2jJX7rT0z-BysqtDB3U2lJA"},
{"content":{"body":"it doesn't create another function","msgtype":"m.text"},"ts":1630424961759,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$q-HkkDsOn23AkkLFDY9tHL9wLpeZqWSXd-wxyTIDn0w"},
{"content":{"body":"yulia: i have concerns about readability and performance if partial application has easy to reach for syntax, personally","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i have concerns about readability and performance if partial application has easy to reach for syntax, personally","msgtype":"m.text"},"ts":1630424969304,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1RSys5fwbFkQ2W9pWmyY52IMChTeu7QTshoSky_J3Vc"},
{"content":{"body":"ljharb i was thinking of it as a variable with a non-identifier name","msgtype":"m.text"},"ts":1630424994948,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3jdTVCuzgoFdJ2xHHbsfVsviNTefx6D63CHaoO4uHcU"},
{"content":{"body":"partial application also doesn't work for `await` or other keyword operators","format":"org.matrix.custom.html","formatted_body":"partial application also doesn't work for <code>await</code> or other keyword operators","msgtype":"m.text"},"ts":1630424999548,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5vTRtBvdkkekGRK2tT9aAn2KaqiqXIYbgGeDRapW23k"},
{"content":{"body":"thats fair, we actually have similar concerns about the performance of this proposal","msgtype":"m.text"},"ts":1630425008598,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$hEJlTkX6EkYYFMd3tg9RTjkHszFuuF_VQCvqhe-GyeI"},
{"content":{"body":"oh? what performance concerns","msgtype":"m.text"},"ts":1630425023809,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9uT1W0ULZTeembipfPTW8yAkmVy3CAnXcnPJI0A_Jak"},
{"content":{"body":"i thought it could be straightforwardly compiled to be using temp vars","msgtype":"m.text"},"ts":1630425036886,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$grocLBvGJafI3MgZ33Jq8oQrFy9GcKytS110_yjAOWg"},
{"content":{"body":"devsnek: anything that's not already a possible variable name is fine with me wrt that objection","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: anything that's not already a possible variable name is fine with me wrt that objection","msgtype":"m.text"},"ts":1630425039518,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YNnYZf_L64wuvkYC1svH4ldOri7rcHYIuybcT6vDqHk"},
{"content":{"body":"bakkot: then have special awaiting forms?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: then have special awaiting forms?","msgtype":"m.text"},"ts":1630425142098,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qZQZyHFOc8BXw6VRaD5SDQEDrNP5kcjacs-BhZ1fEh4"},
{"content":{"body":"and yield and typeof and delete?","msgtype":"m.text"},"ts":1630425151069,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bb3eTjRpPYM2BBaREFBxATw2J_Kcv0JrfCQys7OmSnU"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1630425151652,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Y4xqgKYk-YF9NLtKINZUv0pG1CX3HaZjR25__9k6MNc"},
{"content":{"body":"that's a bunch of new forms","msgtype":"m.text"},"ts":1630425157243,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zclAhNHczS2SqXGJXvce5j2P3iwO5w1d7mRguesTz3o"},
{"content":{"body":"instead of one general thing that just works","msgtype":"m.text"},"ts":1630425163792,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$B-peygxcFgiwDpJlncZyaAQW_WfHXmyKLthTiHWpveQ"},
{"content":{"body":"shu: with the amount of potential threading we would need to do, and how it may be layered","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: with the amount of potential threading we would need to do, and how it may be layered","msgtype":"m.text"},"ts":1630425182244,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$jGDZL0vtbaxIdsLZPBMsiHh__D-wfjiRhJ5RPMJs5_0"},
{"content":{"body":"I just really don't think the placeholder provides any value over an arrow","msgtype":"m.text"},"ts":1630425185807,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$76N3SHWxY0QwUlwqPy2IgXUBbiSbtM9ovYm8rW6Er6s"},
{"content":{"body":"we won't block alone on this, but we still aren't convinced this is worth the cost","msgtype":"m.text"},"ts":1630425194880,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$aZ3jpRZKhHhChEJlUi93lL8E-6JKUwGwnOAYish1Ul0"},
{"content":{"body":"yulia: not sure i understand, like it's harder to parse?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: not sure i understand, like it's harder to parse?","msgtype":"m.text"},"ts":1630425210964,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HAb_Bc-X-HcRey6QgRVOIkIJJX1wPRb4b8CnoDUMBJ0"},
{"content":{"body":"you want to write an arrow function in each part?","msgtype":"m.text"},"ts":1630425214073,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$uDorMuu3fU3owD-z7tTz_5-aQSroEr6apHB8aFGU5ZQ"},
{"content":{"body":"this will have a long standing impact on the languagee","msgtype":"m.text"},"ts":1630425215012,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$RxsRlzGrv_oGhMEgKoFG2dxuSi2LpcgqJA2dWbjcXUc"},
{"content":{"body":"Michael Ficarra: your opinion on that question is not widely shared, as far as I can tell","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: your opinion on that question is not widely shared, as far as I can tell","msgtype":"m.text"},"ts":1630425222728,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gEx-Pmgqq1NH2pSCooaoKs56HMzWKYAtEsRC1lGu2LI"},
{"content":{"body":"oh wow my matrix is out of sync","msgtype":"m.text"},"ts":1630425247265,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$-hZsvOUDWLyzlnkKMFeW2BhN-8AKj52B9mtBuybSods"},
{"content":{"body":"devsnek: only when it's necessary","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: only when it's necessary","msgtype":"m.text"},"ts":1630425261194,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$q3YEefho0MJTkiqBWPigfHE8s_9McneEn_qV-fzZeUo"},
{"content":{"body":"i think it would be necessary most of the time","msgtype":"m.text"},"ts":1630425292156,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3SWFCihlabCURggfUD9ictKeQmbQthNVLGnzpu7dxBg"},
{"content":{"body":"literally never have i worked with a fully functional-style api in js","msgtype":"m.text"},"ts":1630425306852,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$UBz61A9M69fpFGXCZZbMENERceG3QZux-tEBVBM6l58"},
{"content":{"body":"I work with functions of one input and one output all the time","msgtype":"m.text"},"ts":1630425349269,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kgrJKKgg3KCXfLb4jv4btDsygROhUx7a_DS-7sH6FjU"},
{"content":{"body":"shu: nah, it won't be harder to parse - we had some concerns because this will operate on expressions rather than functions and we would need to allow for both","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: nah, it won't be harder to parse - we had some concerns because this will operate on expressions rather than functions and we would need to allow for both","msgtype":"m.text"},"ts":1630425421323,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$8WDeQm_3M4ZQ7PAy6PMZHyEQUW5huRwKa-sxdzVkl2E"},
{"content":{"body":"and we didn't think too much about it, because we blocked before and understand the \"taste\" aspect here about how people want to write code","msgtype":"m.text"},"ts":1630425452707,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$IW4eJvX7_UMeWaTSnmBFriImeymkHxFHQKelUocb5Zg"},
{"content":{"body":"yulia: i see, if there's a concrete example i'd love to see. i'm pretty neutral to slightly negative on any and all FP proposals, to be clear, and this seemed unproblematic at first glance for implementations, but might've missed something!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i see, if there's a concrete example i'd love to see. i'm pretty neutral to slightly negative on any and all FP proposals, to be clear, and this seemed unproblematic at first glance for implementations, but might've missed something!","msgtype":"m.text"},"ts":1630425493878,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kvoyUl0SEUARi_F1UVWdZSssYVc46A6rHSmNuM4EQVA"},
{"content":{"body":"so if there is significant support here and people really want this, even though we are creating a second language on top of existing js syntax, even though there are criticisms of how pipeline works in bash and whether it was a wise addition, and in addition to the remove of partial application, then we aren't going to further complain","msgtype":"m.text"},"ts":1630425538967,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$n5s_3obvvKHIYJmBnrx60JQSGpUOsO8tjYWAxl0eZgM"},
{"content":{"body":"> <@shuyuguo:matrix.org> yulia: i see, if there's a concrete example i'd love to see. i'm pretty neutral to slightly negative on any and all FP proposals, to be clear, and this seemed unproblematic at first glance for implementations, but might've missed something!\n\nIf i get some free time and this moves forward, ill see about modifying our current version to update the new proposal... but don't know how long that will be put off due to other work","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kvoyUl0SEUARi_F1UVWdZSssYVc46A6rHSmNuM4EQVA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: i see, if there's a concrete example i'd love to see. i'm pretty neutral to slightly negative on any and all FP proposals, to be clear, and this seemed unproblematic at first glance for implementations, but might've missed something!</blockquote></mx-reply>If i get some free time and this moves forward, ill see about modifying our current version to update the new proposal... but don't know how long that will be put off due to other work","m.relates_to":{"m.in_reply_to":{"event_id":"$kvoyUl0SEUARi_F1UVWdZSssYVc46A6rHSmNuM4EQVA"}},"msgtype":"m.text"},"ts":1630425739963,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$1PrYqN8VVcAEQ2ZxIZUdM7DN0BpZsaRvvI5n4p3zPBs"},
{"content":{"body":"can we please add to the notes that stage 3 will require a method extraction solution?","msgtype":"m.text"},"ts":1630425833371,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9H8IHuuHTaepq4UkZdIPbggg9T_L1lsQGS1Ud1RByk0"},
{"content":{"body":"i can say that out loud if needed but i don't want to slow the agenda","msgtype":"m.text"},"ts":1630425843721,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B0AihvVvFnTfh2UFQURoO6ki0FTNOpc1OCtkdy--yBg"},
{"content":{"body":"it was not clear to me that we were advancing with contingent consensus","msgtype":"m.text"},"ts":1630425859094,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$twiA5AUuGQVTL2C5k0DQ2dFxrSwDXwlCGqrQemTzhKQ"},
{"content":{"body":"there were several objections to that","msgtype":"m.text"},"ts":1630425862888,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N7ovjKfX6JURtdBS1_oRDBMcYudHwQdHp4bgu09u4BY"},
{"content":{"body":" * can we please add to the notes that i would like stage 3 to require a method extraction solution at stage 2?","m.new_content":{"body":"can we please add to the notes that i would like stage 3 to require a method extraction solution at stage 2?","msgtype":"m.text"},"m.relates_to":{"event_id":"$9H8IHuuHTaepq4UkZdIPbggg9T_L1lsQGS1Ud1RByk0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630425863261,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AOhxA1D6E7Lzx1xkOi1fyqjK7o6Fj6eoAoxXzfBBa3o"},
{"content":{"body":"so I am reluctant to put that in the ntoes","msgtype":"m.text"},"ts":1630425874081,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$V4N4jNM-iLKFlZPlQSCixXDWLi8r0OjEfUawpd5LLY4"},
{"content":{"body":"the consensus today was about stage 2 advancement","msgtype":"m.text"},"ts":1630425875688,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GHCe66L1p8Hmjcs0qGEMqrBFzd-hGdqLeC4YwuKgVlI"},
{"content":{"body":"and reflects what jschoi actually said out loud already, iirc","msgtype":"m.text"},"ts":1630425892805,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kQMY1DsvmjEjLNXsbWFtt4vnLrTIBDOafKjmnVN4ufk"},
{"content":{"body":"(It should also be clear in the notes that Hax‚Äôs current Extensions proposal does not address method extraction; it‚Äôll have to be another extension.)","msgtype":"m.text"},"ts":1630425895193,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$LIH8-UFyjEDkCiZvWEFl51toeH-M6K779JjRtynuN7U"},
{"content":{"body":"I don't think it's right to link multiple proposals this way. My understanding of our previous discussion was more like, I personally would need to see a really strong case for both pipeline and the *infix* form of :: to both be added to the language","format":"org.matrix.custom.html","formatted_body":"I don't think it's right to link multiple proposals this way. My understanding of our previous discussion was more like, I personally would need to see a really strong case for both pipeline and the <em>infix</em> form of :: to both be added to the language","msgtype":"m.text"},"ts":1630425908427,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$hu7THlUGx62pkJv8pWKamljAqKr_AHXvqu8R75pCAvM"},
{"content":{"body":"* (It should also be clear in the notes that Hax‚Äôs current Extensions proposal does not address method extraction; it‚Äôll have to be another extension.)","m.new_content":{"body":"(It should also be clear in the notes that Hax‚Äôs current Extensions proposal does not address method extraction; it‚Äôll have to be another extension.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$LIH8-UFyjEDkCiZvWEFl51toeH-M6K779JjRtynuN7U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630425909280,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$IQ-RGQEY_FGEg7cDCp87Lk9ksroxPdnhv4YvTLEl7Uk"},
{"content":{"body":"jschoi: going back to something you said earlier, why do you think people don't type something like `$ =` in practice, but will type `|>`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: going back to something you said earlier, why do you think people don't type something like <code>$ =</code> in practice, but will type <code>|&gt;</code>?","msgtype":"m.text"},"ts":1630425915249,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Ra7IO1vI_n4M67xVrRiBV1oGp2dOhASdJ1_0KSyvMi0"},
{"content":{"body":"method extraction has no conflict whatsoever","msgtype":"m.text"},"ts":1630425919346,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$nB7Ov363-zr9XLRuT3txrzi6ccM7CGGQ582V9-hFMUU"},
{"content":{"body":"is bind operator dead by now?","msgtype":"m.text"},"ts":1630425928806,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$D1Shhl1l5jm4CIGug7hCkjEI6RrdWc8v4U6xotjQ6NI"},
{"content":{"body":"but, also, we'd need to see a proposal written to make the case for it independently","msgtype":"m.text"},"ts":1630425935069,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$bthQO3IBauuv6UdvHEoN97T8t5mvfoUR-jhcOqy-z8w"},
{"content":{"body":"littledan and that is exactly my concern about pipeline advancing at all; i'd rather have neither than not have method extraction.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a> and that is exactly my concern about pipeline advancing at all; i'd rather have neither than not have method extraction.","msgtype":"m.text"},"ts":1630425935824,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZY0slgtbi1zL28FgtHpdrx_s0w94j9Abx8jgaT5vJz0"},
{"content":{"body":"ljharb: The coupling was always false","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: The coupling was always false","msgtype":"m.text"},"ts":1630425944384,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$YLFmGgvNnQB-zlc4__gwEYSwU5Zbe6cMS5ozxTzQQ0o"},
{"content":{"body":"I don't see how this makes method extraction harder","msgtype":"m.text"},"ts":1630425952028,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$IwwbFV0DeBEnwopZBKCgyPin3S7nbisCTFYM4m-K8Ds"},
{"content":{"body":"the coupling is because the original `::` proposal did so","format":"org.matrix.custom.html","formatted_body":"the coupling is because the original <code>::</code> proposal did so","msgtype":"m.text"},"ts":1630425957813,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sQeishG8TLvidaZCp1PY0b9JG1oMjyg-osOlDpR81HU"},
{"content":{"body":"yes, I am saying that is a false coupling","msgtype":"m.text"},"ts":1630425970154,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$oOsMtY-Fy79L0W7gkBmEIuAZl_iIpnApfjuAoHvuwR0"},
{"content":{"body":"they are just unrelated","msgtype":"m.text"},"ts":1630425973924,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$QTXHDfYko0R6HTv0QWW-F6dZ75BHUt071zelMj_T--8"},
{"content":{"body":"Michael Ficarra: I'm confused about your \"point free\" comment. It's absolutely pointful - the point is named `%`. F#-syntax is point-free (unless you eta-expand manually via an arrow function)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: I'm confused about your &quot;point free&quot; comment. It's absolutely pointful - the point is named <code>%</code>. F#-syntax is point-free (unless you eta-expand manually via an arrow function)","msgtype":"m.text"},"ts":1630425977081,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$RZCwqw-UFVX9nYIkLmPWmdmRt69bV_L-apM99OcPlSg"},
{"content":{"body":"> <@dehrenberg:igalia.com> I don't see how this makes method extraction harder\n\ni mean you literally just said \"I personally would need to see a really strong case for both pipeline and the infix form of :: to both be added to the language\". that's how.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$IwwbFV0DeBEnwopZBKCgyPin3S7nbisCTFYM4m-K8Ds?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">@dehrenberg:igalia.com</a><br>I don&#39;t see how this makes method extraction harder</blockquote></mx-reply>i mean you literally just said &quot;I personally would need to see a really strong case for both pipeline and the infix form of :: to both be added to the language&quot;. that's how.","m.relates_to":{"m.in_reply_to":{"event_id":"$IwwbFV0DeBEnwopZBKCgyPin3S7nbisCTFYM4m-K8Ds"}},"msgtype":"m.text"},"ts":1630425979075,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$86Eqft-j9S_DNyS4-eYnKOZbdiXxkcwzzZZUpPhuP6s"},
{"content":{"body":"the infix form was the form that wasn't method extraction","msgtype":"m.text"},"ts":1630425990525,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$YQWSOJFrNty0NrbT8PF08UIc8sYx_Kj_t4TucbvxSsU"},
{"content":{"body":"legendecas: The old bind operator was supposed to do many things. I already have written a proposal that addresses one of its old use cases that Hax‚Äôs Extensions don‚Äôt, method extraction. https://github.com/js-choi/proposal-method-extraction/","msgtype":"m.text"},"ts":1630425992199,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$9hgxGjSohd_xQ5pc95IvVeOk_Un3XHN7kCuCYuTsDX4"},
{"content":{"body":"I will present it later.","msgtype":"m.text"},"ts":1630425994055,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$J1hQQ8oKO2i6-w-IJP_EPN1HLDJUWGWm1U9ik29PcBk"},
{"content":{"body":"so, yes, those are related","msgtype":"m.text"},"ts":1630425995519,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$ejvZKczZZ3ospH060gu7AcGwsYdVATYyF5z2NCmOZMU"},
{"content":{"body":"the prefix form was method extraction. Totally unrelated.","msgtype":"m.text"},"ts":1630426008756,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$SqxCMbBg4RGi7gVDfyUK7ClI4I2SZso5B3GHffcMI2A"},
{"content":{"body":"* legendecas: The old bind operator was supposed to do many things. I already have written a proposal that addresses one of its old use cases that Hax‚Äôs Extensions don‚Äôt, method extraction. https://github.com/js-choi/proposal-method-extraction/","m.new_content":{"body":"legendecas: The old bind operator was supposed to do many things. I already have written a proposal that addresses one of its old use cases that Hax‚Äôs Extensions don‚Äôt, method extraction. https://github.com/js-choi/proposal-method-extraction/","msgtype":"m.text"},"m.relates_to":{"event_id":"$9hgxGjSohd_xQ5pc95IvVeOk_Un3XHN7kCuCYuTsDX4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426014605,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$-q7UvHVtYMhhCHy9RU7J_18UX2uYKNcWLW8Hd-CHzBE"},
{"content":{"body":"wait, maybe i'm confused. what do you mean by \"the infix form\"","msgtype":"m.text"},"ts":1630426036636,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GyFWtdsUwvX4R9hXAhNN0Hfv9ZJ89E9c8WSHMcV-pIk"},
{"content":{"body":"the infix form was object::function(...args), which did function.call(object, ...args)","msgtype":"m.text"},"ts":1630426070302,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$5chNU1nEVwgUSOozeLpuwqSN4STncMJnOrkhLmDEOpY"},
{"content":{"body":"the prefix form was ::object.function, which did object.function.bind(object)","msgtype":"m.text"},"ts":1630426083286,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$M7X0rRLxidoBh5MaR5qVR1_Gn-R0xWruPRAQHIzNyIU"},
{"content":{"body":"the prefix form is method extraction; the infix form is more like what will be presented later this meeting","msgtype":"m.text"},"ts":1630426097855,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$sUJJWBvRV3yktb8b2e0_8tqeujMghsMyEBHIUsI_GUE"},
{"content":{"body":"ah ok, then yes. i think the infix form is obviated by pipeline","msgtype":"m.text"},"ts":1630426110968,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dH-fknJjtg9QuB4ph6JRCTTmQypUkAyH4Saa-WmjDOM"},
{"content":{"body":"I think the infix form's motivation is significantly reduced with pipeline at Stage 2, but the prefix (method extraction) is fine","msgtype":"m.text"},"ts":1630426115469,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$rY4nJ7RacN0prwoLw6XokDxH5EyJwVaWCFnlWapKGUM"},
{"content":{"body":"this is what I mean by false coupling","msgtype":"m.text"},"ts":1630426122804,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$c2A7x1fT03AzQ5Ofc15OrYbWqrLqKV3Pb3osAjjyfgQ"},
{"content":{"body":"however, we can't agree on method extraction yet, without an independent presentation on it","msgtype":"m.text"},"ts":1630426138118,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$cHjW_6w6040H76qQjEobmr2wxiQVjH3QKWLFL8QC1x4"},
{"content":{"body":"shu: We know that people often don‚Äôt already write `$=` or `temp = `, because deeply nested expressions occur all the time in real code.  But there seems to be strong community pressure to have some sort of pipe operator in order to be able to decompose statements into linear chains, e.g., The State of JS 2020.","format":"org.matrix.custom.html","formatted_body":"shu: We know that people often don‚Äôt already write <code>$=</code> or <code>temp = </code>, because deeply nested expressions occur all the time in real code.  But there seems to be strong community pressure to have some sort of pipe operator in order to be able to decompose statements into linear chains, e.g., The State of JS 2020.","msgtype":"m.text"},"ts":1630426145008,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$prqrJDtOmepvFi0r9bCv9BAiLMIxq_zTxDPuYU_GHHU"},
{"content":{"body":"i understand that statement of fact","msgtype":"m.text"},"ts":1630426178217,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Nuo3QhNbOmezuZwnG8gy8d5XJXit_ySvRiAlFQXFwDs"},
{"content":{"body":"i'm asking for some color and conjecture on why","msgtype":"m.text"},"ts":1630426186830,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Ix8cG6Q9DLN2YZJj1kNKxjgf76DldfVrxMvw8lDnDy0"},
{"content":{"body":"what does `%==` do","format":"org.matrix.custom.html","formatted_body":"what does <code>%==</code> do","msgtype":"m.text"},"ts":1630426196896,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$xIDLaZWZRoy2O7w5G3rSMEBIdMLGzHyROcEuiH55CHM"},
{"content":{"body":"because temp vars are gross when they aren't adding readability","msgtype":"m.text"},"ts":1630426202039,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$d-TWoidXwwicIQlfOd76t0EGYeqC8K4HLdmeF9ZHrWI"},
{"content":{"body":"and reassigning the same var is gross because reassignment hurts readability","msgtype":"m.text"},"ts":1630426211024,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gOK5otXGQCNyvqL-idcmgFB354XpWmqFbY_-KoVcqpg"},
{"content":{"body":"but in this they are, by linearizing","msgtype":"m.text"},"ts":1630426211125,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bhttXBqI5_FWIbvee0bY5NGXNFocnAM2aFU7Lf_Aj4M"},
{"content":{"body":" * but in this they are, by linearizing","m.new_content":{"body":"but in this they are, by linearizing","msgtype":"m.text"},"m.relates_to":{"event_id":"$bhttXBqI5_FWIbvee0bY5NGXNFocnAM2aFU7Lf_Aj4M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426220983,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wj0U0cWsc_Q_WdsoLGe27nvX9TpHVQ9pie8U60mv5NU"},
{"content":{"body":"devsnek: `%==something` is `% == something`.","format":"org.matrix.custom.html","formatted_body":"devsnek: <code>%==something</code> is <code>% == something</code>.","msgtype":"m.text"},"ts":1630426223145,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Z19MOl-kNQ6aH-1B_C2rbUwt9xrQ10g3hUx_r0IDQpM"},
{"content":{"body":"oh, ez","msgtype":"m.text"},"ts":1630426234639,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$B58kot5-ulcS6Q8YrNNUJ9VrZGSSi8W6Q2g-r7jJwnY"},
{"content":{"body":"pipeline is conceptually reassigning?","msgtype":"m.text"},"ts":1630426235456,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0LOQSnn-4NbGp69viJGT_JaEBpo9nRYPatV2vkBrOwY"},
{"content":{"body":"right but +linearizing -tempvars -reassignment is not a net win","msgtype":"m.text"},"ts":1630426237282,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pfEysU5q9OptA6oA84YjyS8yHdIyXl0VcCv50ycXe3s"},
{"content":{"body":"> <@shuyuguo:matrix.org> pipeline is conceptually reassigning?\n\ni can't really disagree with this, but since it's syntactic/special i think it's more like `this`, which is different from reassignment","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$0LOQSnn-4NbGp69viJGT_JaEBpo9nRYPatV2vkBrOwY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>pipeline is conceptually reassigning?</blockquote></mx-reply>i can't really disagree with this, but since it's syntactic/special i think it's more like <code>this</code>, which is different from reassignment","m.relates_to":{"m.in_reply_to":{"event_id":"$0LOQSnn-4NbGp69viJGT_JaEBpo9nRYPatV2vkBrOwY"}},"msgtype":"m.text"},"ts":1630426266158,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kZ-1P5gEqYETN1wqyILGnxUVbB6iwxENZkf8XKdkn0c"},
{"content":{"body":"pipeline helps you have fluid APIs, i.e., just letting you deal with intermediaries logically, rather than assigning names to them all","msgtype":"m.text"},"ts":1630426267195,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$idz4mIJc_QQ8e-Ykjm6LFkoF2X8BjBoANX7Wg7B8oQs"},
{"content":{"body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like `yield`, of course.)","format":"org.matrix.custom.html","formatted_body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like <code>yield</code>, of course.)","msgtype":"m.text"},"ts":1630426281990,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$M45APqnAJsqKHQUx2sy4V3eK8RSxkl_OOLAyDvvwHfQ"},
{"content":{"body":"* shu: Currently the only way to linearize deeply nested expressions is by assigning to variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like `yield`, of course.)","format":"org.matrix.custom.html","formatted_body":"* shu: Currently the only way to linearize deeply nested expressions is by assigning to variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like <code>yield</code>, of course.)","m.new_content":{"body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like `yield`, of course.)","format":"org.matrix.custom.html","formatted_body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like <code>yield</code>, of course.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$M45APqnAJsqKHQUx2sy4V3eK8RSxkl_OOLAyDvvwHfQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426301906,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$sbxJakuws9m7NHg31pMNBBpMfRMeEksY-LXQjft08a4"},
{"content":{"body":"i think the confusing to me is that tab's argument was about the difficulty of coming up with unique names for all intermediates, which isn't needed","msgtype":"m.text"},"ts":1630426305199,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YIAepwZFmjggSlU_yt8VQVo1sGBluWfgacqvy55oNEk"},
{"content":{"body":"* shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like `yield`, of course.)","format":"org.matrix.custom.html","formatted_body":"* shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like <code>yield</code>, of course.)","m.new_content":{"body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like `yield`, of course.)","format":"org.matrix.custom.html","formatted_body":"shu: Currently the only way to linearize deeply nested expressions is by assigning to temporary variables or declaring unary functions and composing them. (And the latter does not work with several kinds of operations like <code>yield</code>, of course.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$M45APqnAJsqKHQUx2sy4V3eK8RSxkl_OOLAyDvvwHfQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426318424,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$rjIvL2QkXP7gj6fQddCVlif2tGCLbav7RS-gVCdCBVw"},
{"content":{"body":"in terms of color/conjecture, reusing the same name is gross - naming each step differently can be seen as more readable even though it's not needed.","msgtype":"m.text"},"ts":1630426325724,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kxNmHNFMCRD-AY-XbylvQo8YypscXePzDaSFQl8IUj0"},
{"content":{"body":"technically you need the unique names to guard against function nesting","msgtype":"m.text"},"ts":1630426335518,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$fo4Dn9_jn-g7vqtg0da9sVkNP7NSq6bNIX8VCWQlbZk"},
{"content":{"body":" * in terms of color/conjecture, reusing the same name is gross - naming each step differently can be seen as more readable even though it's not needed.","m.new_content":{"body":"in terms of color/conjecture, reusing the same name is gross - naming each step differently can be seen as more readable even though it's not needed.","msgtype":"m.text"},"m.relates_to":{"event_id":"$kxNmHNFMCRD-AY-XbylvQo8YypscXePzDaSFQl8IUj0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426345655,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$K4ynCO4zYPFq2gmN9ppZR4058eTPjM0C_y7xhmwzAfI"},
{"content":{"body":"but that can be a case-by-case thing when writing the multi-variable form","msgtype":"m.text"},"ts":1630426367063,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nb_9M3SXI63qP1dqRW_i2XD8QwRsJH9EW79M191wy08"},
{"content":{"body":"so the question is: why not use the same binding name, and the answer _seems_ to be there are, in the ecosystem there are independent reasons that reassigning to the same variable is already gross?","format":"org.matrix.custom.html","formatted_body":"so the question is: why not use the same binding name, and the answer <em>seems</em> to be there are, in the ecosystem there are independent reasons that reassigning to the same variable is already gross?","msgtype":"m.text"},"ts":1630426383077,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kWhrukbSY0FBVLvHz4OhZFKv4_F58_gDVyS7Q4zl-_c"},
{"content":{"body":"i don't share that reassigning-is-gross opinion, is that a linting thing?","msgtype":"m.text"},"ts":1630426393209,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8QZvf3QCaFmNwY-aP8JFsUHyYGSB8zwUMllQlmBL6_c"},
{"content":{"body":"i don't think any linters enforce it","msgtype":"m.text"},"ts":1630426417709,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Frw5nSkdXWJlWMppdL-qQX9T40Fc89buhqyMSE4N0dk"},
{"content":{"body":"but it's def a styleguide/code review thing","msgtype":"m.text"},"ts":1630426423259,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Qkffjfgj6W7JMslIknaPmeDnAhk1dDkO9Wv1la9dKFY"},
{"content":{"body":"whence \"it's gross\"?","msgtype":"m.text"},"ts":1630426425467,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vmH2BlpAo_VuU8IH9YURmaREhNZnPm2JTIoQjg116Fg"},
{"content":{"body":"> <@shuyuguo:matrix.org> i don't share that reassigning-is-gross opinion, is that a linting thing?\n\nMy immediate code review would be \"please create new variables\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$8QZvf3QCaFmNwY-aP8JFsUHyYGSB8zwUMllQlmBL6_c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i don&#39;t share that reassigning-is-gross opinion, is that a linting thing?</blockquote></mx-reply>My immediate code review would be &quot;please create new variables&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$8QZvf3QCaFmNwY-aP8JFsUHyYGSB8zwUMllQlmBL6_c"}},"msgtype":"m.text"},"ts":1630426428701,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Y_ewdRh60mutl5Xg2cfp_Of-KR-pLZw6RoXL9dRGcx0"},
{"content":{"body":"sure but please tell me why :)","msgtype":"m.text"},"ts":1630426435611,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BK0rW9LthTWBm6kultHwhTZs9wSciIZVQClPEgRDMWI"},
{"content":{"body":"same, every time","msgtype":"m.text"},"ts":1630426436459,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BCRsmmQTt26khmumBwWelQVQbJZSLHFhLvuBUTdEmUU"},
{"content":{"body":"you have to understand i have like 8 general purpose regs i can work with most of the time","msgtype":"m.text"},"ts":1630426451291,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CxjvXqlPQXY2WqW5RKdi8orUHfkWVbnVhY3IEh5WXCE"},
{"content":{"body":"my world is reassigning","msgtype":"m.text"},"ts":1630426456416,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5XgxxkjItlr7LrrfyvOoQbU05kg5tjNV1QiDB5WHS9M"},
{"content":{"body":"one reason is because reusing the same name means it's hard to distinguish between a bug or an intentional conflation","msgtype":"m.text"},"ts":1630426458386,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VAi22wV4ImwxqzxMPpSqgLOUxkzGLIxMFoh4fgvLozc"},
{"content":{"body":"same reason `let` is strongly discouraged","format":"org.matrix.custom.html","formatted_body":"same reason <code>let</code> is strongly discouraged","msgtype":"m.text"},"ts":1630426465243,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$v6xc3VYhPBJ7yV9cMeMeIzRoK1aEByF2dEFPSw4yebo"},
{"content":{"body":" * same reason `let` is strongly discouraged in favor of `const`","format":"org.matrix.custom.html","formatted_body":" * same reason <code>let</code> is strongly discouraged in favor of <code>const</code>","m.new_content":{"body":"same reason `let` is strongly discouraged in favor of `const`","format":"org.matrix.custom.html","formatted_body":"same reason <code>let</code> is strongly discouraged in favor of <code>const</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$v6xc3VYhPBJ7yV9cMeMeIzRoK1aEByF2dEFPSw4yebo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630426468682,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NANKZskAAb1sim3W0b7mBpE4RRXLNKTe9oJp1dLTBWw"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1630426471749,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$z9qMHcVv9UYYUj_6k8ynKqf1f_br-XTqFkcImfs3vzM"},
{"content":{"body":"My formal CS degree was with C/C++, and it's not possible to do that way","msgtype":"m.text"},"ts":1630426496790,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ohpcMLQSl7oY4joWgySY7keGfRdsFyIieI_Gb0XxvAk"},
{"content":{"body":"i'm sure there's many reasons, that's just the first one that popped into my head","msgtype":"m.text"},"ts":1630426499856,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sVPV7F6dViI1vNtqvkL-yiBgd3bMBunJonoYGplKvUM"},
{"content":{"body":"ljharb: I think if you saw\n```\n$ = fetch(url);\n$ = await $;\n$ = await $.json();\nconsole.log($)\n```\nyou would not think it was a mistake","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: I think if you saw</p>\n<pre><code>$ = fetch(url);\n$ = await $;\n$ = await $.json();\nconsole.log($)\n</code></pre>\n<p>you would not think it was a mistake</p>\n","msgtype":"m.text"},"ts":1630426507546,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IbnGx0xBcUPBapuMPq2k34MY7Fp6Dr8jJJwV3vYYfJc"},
{"content":{"body":"So seeing it done feels really ikcy","msgtype":"m.text"},"ts":1630426507703,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$LV33MmJtpFQBtzm_CGtau6mpsthCI6Y9kaj8vQBALuc"},
{"content":{"body":"bakkot: agree, but it still looks gross to me subjectively/aesthetically","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: agree, but it still looks gross to me subjectively/aesthetically","msgtype":"m.text"},"ts":1630426526277,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BnA7grmdnVrXQxeG9gPkseWLp5-wmH-ulATGrCPHfMg"},
{"content":{"body":"that code is difficult for me to process","msgtype":"m.text"},"ts":1630426538307,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$6Ap1FyTqayKVc7GUnJ1KJ3ue3lta2Zty3FlMcIfdZuk"},
{"content":{"body":"> <@ljharb:matrix.org> same reason `let` is strongly discouraged in favor of `const`\n\nsidebar: I wish you would phrase these things as \"I strongly discourage `let`\", not \"`let` is strongly discouraged\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v6xc3VYhPBJ7yV9cMeMeIzRoK1aEByF2dEFPSw4yebo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>same reason <code>let</code> is strongly discouraged in favor of <code>const</code></blockquote></mx-reply>sidebar: I wish you would phrase these things as &quot;I strongly discourage <code>let</code>&quot;, not &quot;<code>let</code> is strongly discouraged&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$v6xc3VYhPBJ7yV9cMeMeIzRoK1aEByF2dEFPSw4yebo"}},"msgtype":"m.text"},"ts":1630426539888,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IPBViQbfZnm4O5X5xZRBCpTyeXA8V70bosqTB6aMOVE"},
{"content":{"body":"as I'm sure you are aware, not everyone shares that opinion","msgtype":"m.text"},"ts":1630426547028,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xtE9zIdq-w16qwRrorebIZypTmidoe7gDA4ydGFz8Cg"},
{"content":{"body":"sure. but it's not just me that has that opinion.","msgtype":"m.text"},"ts":1630426553140,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LohrfvjKQYSIlN2NdO4yhaKz2aR872rm715czL504mQ"},
{"content":{"body":"reassigning would get kicked out of any codebase I have ever worked on","msgtype":"m.text"},"ts":1630426556696,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$34tUE2qZe1DX6tM4J5x95zkW_8NjelAHtFaFbAfFHsw"},
{"content":{"body":"\"let is strongly discouraged by many\", if you require the qualifier","msgtype":"m.text"},"ts":1630426561930,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IIukq4QgooWXzTQabNXTKfMK8E1w3fCBfIgsD4LSFJY"},
{"content":{"body":"because i need to stop for a moment and mentally remove the assignment and only focus on the right hand sides","msgtype":"m.text"},"ts":1630426562850,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$HxcIsA0pmRplxKRdVAHCUPIxNx-W4yzdFFF60gEWmUY"},
{"content":{"body":"I do this in Rust every now and then: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=5cffe97b80fea645eb3a34b711d36ad6","msgtype":"m.text"},"ts":1630426598741,"senderName":"Jamie Kyle","senderId":"@jamiebuilds:matrix.org","id":"$azKqxRm5FTKC_ji7SS905YX5Yn8nExJUju2dq9l2YlA"},
{"content":{"body":"I've more than once heard people say that `const` names can be better optimized by the engine and therefore you shouldn't use `let`","format":"org.matrix.custom.html","formatted_body":"I've more than once heard people say that <code>const</code> names can be better optimized by the engine and therefore you shouldn't use <code>let</code>","msgtype":"m.text"},"ts":1630426602276,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$TdRgop2M6Y-LDUA0pAhrgPXM3wIT3sdMbGeKVPOML7Q"},
{"content":{"body":"that is definitely not true","msgtype":"m.text"},"ts":1630426639488,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kEKBAo8WXp9t_4F1Zl4CPjAL0RdYIPd0-9VGFl75NJ4"},
{"content":{"body":"I feel like reassigning is sort of logically more complicated than having a nested expression or chain of method calls. You have to think about what else might be affected, instead of just seeing the single use in the expression tree.","msgtype":"m.text"},"ts":1630426643311,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$qFeWqffcOCOGiVol_uui-nDklipnX5s0hLO3ChqFUhs"},
{"content":{"body":"whenever i've heard that i've pointed out that a) you can't know that unless you look at the engine's code and/or benchmark it, and b) perf doesn't matter, clarity does","msgtype":"m.text"},"ts":1630426647625,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$OOVOb7MIpud-iwRPvhKAwXzSmH2yif5xTwSQ9zMB-XI"},
{"content":{"body":"I didn't say I believe that, I'm saying it's an idea that's out there","msgtype":"m.text"},"ts":1630426666282,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$xISKgyCrp7hQbdQtC8dSjStNGsYDVQ74iSFQ15YSXbY"},
{"content":{"body":"\"perf doesn't matter\" is, uh, also a strong claim which maybe should be qualified","msgtype":"m.text"},"ts":1630426675697,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0LYNNetTQWyMeRq4Z8AOT7bBE-h9otxEKjpgS3DRf90"},
{"content":{"body":"I think many devs have learned not to reassign because that smells like global variable, bug farm code. And so socially it's not done unless it can be proven it's more performant or someone who likes it has the power on that codebase. ","msgtype":"m.text"},"ts":1630426684273,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$W2IzoZuOXNLoCZsa7dc3XVf7qehlgbOTh_xPJbfXduo"},
{"content":{"body":"sarahghp: thanks, that's helpful","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sarahghp:matrix.org\">sarahghp</a>: thanks, that's helpful","msgtype":"m.text"},"ts":1630426710709,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$us-CtmtLfWzEAt08eq7zyeStpuTwdZZxblbbgKa5Yv4"},
{"content":{"body":"i mean, i disagree with it, but that's helpful","msgtype":"m.text"},"ts":1630426725231,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vYFkCEoHfaDwHYqMrnDEQUgojALi807bVOnev8BTQ44"},
{"content":{"body":"You disagree with my description of experience or you think people shuldn't think that?","msgtype":"m.text"},"ts":1630426757084,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$baB7o0fJZHO4sPUMS976PmwKAU4mZnkdiLHH57aEy3M"},
{"content":{"body":"the latter","msgtype":"m.text"},"ts":1630426763391,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RosuqbsDfpNkiMD3EUiKGDazgVdVhms1XzEBf4UwSI4"},
{"content":{"body":"well, I guess as language designers, we're sort of co-creators in this shared, socially constructed reality","msgtype":"m.text"},"ts":1630426798817,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$24daG_q4gQuDHnw_Javw82lGnT9g0PuLMLKn5Ckl-J4"},
{"content":{"body":"is this an accurate summary: it is easier to try for higher quality code to forbid reassignment stylistically, and that's of higher priority even though it takes out \"linearization via reusing the same temp var\" as collateral","msgtype":"m.text"},"ts":1630426807923,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fmR5wNZWu5YyrFZNp5hel1UJOix3neyDa4b17Wy10Cc"},
{"content":{"body":"but at the same time, linearization is also good style","msgtype":"m.text"},"ts":1630426824235,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nMj0GYnbHb04Htoh75hD52a60K742OXsitAJylfaCrI"},
{"content":{"body":"the culture of usage patterns is just as much co-creation, alongside the definition of the language","msgtype":"m.text"},"ts":1630426824554,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$c_Dj6qKZc8vxrtOFqT1l_ZKWtF31pnO00jxpK7dDP6A"},
{"content":{"body":"so we should do pipeline?","msgtype":"m.text"},"ts":1630426830362,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tP84223VIDhIam7oa8aGZw77iam3DD8s_HIJtnI_A-U"},
{"content":{"body":"to be clear, my disagreement is it's just fine to carve an exception for \"reassignment is bad, except when linearizing\"","msgtype":"m.text"},"ts":1630426859613,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$V9lFNOLE3d40eOLD9Lw8Zqs4TX6ickLoz1bgl4KeSMw"},
{"content":{"body":"but also, pipeline helps with things like Object.fromEntries, where otherwise you have to nest","msgtype":"m.text"},"ts":1630426867414,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yl2Mt1DWpY4le9j6SWhIxwfBCb88S6DtJLKLRlEJoNE"},
{"content":{"body":"or react HOCs","msgtype":"m.text"},"ts":1630426868931,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jS3hKRueih7JLehkEeE4i25QdGPM1ykgF-vsyDkTa0U"},
{"content":{"body":"Sorry quick aside, did hack-style pipelines reach stage 2? I wasn't really clear","msgtype":"m.text"},"ts":1630426882370,"senderName":"Jamie Kyle","senderId":"@jamiebuilds:matrix.org","id":"$k8u9MzEV_CI76HjRWYsUf-e3Bp6PybHuRk62NvyxOQA"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1630426886962,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zLReaE0Armw2_HwIho9xBa1GhnQ64T4aXwvOX15V80g"},
{"content":{"body":"but people really want to type what they want to type, and that's fine too, i don't have too much skin in the game","msgtype":"m.text"},"ts":1630426893143,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C2bRc4gkTiEugcnXnLAFYYFNWabGPBEleKxZV_0rA0w"},
{"content":{"body":"the compiler's going to turn it into a reassignment for you anyway","msgtype":"m.text"},"ts":1630426913532,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3ABSRSX1NRO8QNJUtPxBCRko_iR7EO0KQxfBF30MNos"},
{"content":{"body":"`Component |> withC(%) |> withB(%) |> withA(%)` or `Object.entries(o).map(‚Ä¶) |> Object.fromEntries(%)` are much clearer than `withA(withB(withC(Component)))` or `Object.fromEntries(Object.entries(o).map(‚Ä¶))`, or the temp var equivalents","format":"org.matrix.custom.html","formatted_body":"<code>Component |&gt; withC(%) |&gt; withB(%) |&gt; withA(%)</code> or <code>Object.entries(o).map(‚Ä¶) |&gt; Object.fromEntries(%)</code> are much clearer than <code>withA(withB(withC(Component)))</code> or <code>Object.fromEntries(Object.entries(o).map(‚Ä¶))</code>, or the temp var equivalents","msgtype":"m.text"},"ts":1630426930371,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gZrPlehT62nxpWjETBIUMZSx-5LQALS7jtcGMpGkyzY"},
{"content":{"body":"i disagree?","msgtype":"m.text"},"ts":1630426944836,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tmTbunJL9QgfKhMgLzPTfH-qHuqeF3yKJj1SQ5fgxiA"},
{"content":{"body":"> <@shuyuguo:matrix.org> is this an accurate summary: it is easier to try for higher quality code to forbid reassignment stylistically, and that's of higher priority even though it takes out \"linearization via reusing the same temp var\" as collateral\n\nYes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$fmR5wNZWu5YyrFZNp5hel1UJOix3neyDa4b17Wy10Cc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>is this an accurate summary: it is easier to try for higher quality code to forbid reassignment stylistically, and that&#39;s of higher priority even though it takes out &quot;linearization via reusing the same temp var&quot; as collateral</blockquote></mx-reply>Yes.","m.relates_to":{"m.in_reply_to":{"event_id":"$fmR5wNZWu5YyrFZNp5hel1UJOix3neyDa4b17Wy10Cc"}},"msgtype":"m.text"},"ts":1630426946174,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$PqNcWY8mnsrzTjTcSZMEaqmN9EdvZX8pRDk3VcJomcA"},
{"content":{"body":"the compiler turns it all into electricity anyways, \"what the compiler does\" doesn't matter","msgtype":"m.text"},"ts":1630426948454,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Bh1Pow_9LGSPE7hOfPcrIzmRiqtgKlo5zO76WeeL3cM"},
{"content":{"body":"especially the withA/B/C example, how is `Component |> withC(%) |> withB(%) |> withA(%)` clearer?","format":"org.matrix.custom.html","formatted_body":"especially the withA/B/C example, how is <code>Component |&gt; withC(%) |&gt; withB(%) |&gt; withA(%)</code> clearer?","msgtype":"m.text"},"ts":1630426982178,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OGzZ7b-rPLxJElRfYTDQtUSVR8M7M55utmm6xfUz2os"},
{"content":{"body":"I am not at all convinced that it's actually that much more clear than\n```\nlet $= Component;\n$= withC($);\n$= withB($);\nwithA($);\n```","format":"org.matrix.custom.html","formatted_body":"<p>I am not at all convinced that it's actually that much more clear than</p>\n<pre><code>let $= Component;\n$= withC($);\n$= withB($);\nwithA($);\n</code></pre>\n","msgtype":"m.text"},"ts":1630426993630,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$neRysIPsb78L9aUAqq4xi9QX7jmQMdpmRUR68yo1ztw"},
{"content":{"body":"no one writes that, of course, but no one writes `|>` either, so","format":"org.matrix.custom.html","formatted_body":"no one writes that, of course, but no one writes <code>|&gt;</code> either, so","msgtype":"m.text"},"ts":1630427008969,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UE_9fIp_JVMw34eXqmy1cLmIkf52QPbrfg5bFPix3v4"},
{"content":{"body":"shu: I think it becomes clearer if postfix or circumfix operations (like array wrapping or function calls with following arguments) get involved, so that you no longer have to switch between LTR and RTL reading.","msgtype":"m.text"},"ts":1630427012820,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$XBesOLFk8yPrb8SB3lCfzqOcj0uDMLn2_KD5eE0NEs4"},
{"content":{"body":"> <@shuyuguo:matrix.org> especially the withA/B/C example, how is `Component |> withC(%) |> withB(%) |> withA(%)` clearer?\n\nIn this style, the order you read is the order of execution.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$OGzZ7b-rPLxJElRfYTDQtUSVR8M7M55utmm6xfUz2os?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>especially the withA/B/C example, how is <code>Component |&gt; withC(%) |&gt; withB(%) |&gt; withA(%)</code> clearer?</blockquote></mx-reply>In this style, the order you read is the order of execution.","m.relates_to":{"m.in_reply_to":{"event_id":"$OGzZ7b-rPLxJElRfYTDQtUSVR8M7M55utmm6xfUz2os"}},"msgtype":"m.text"},"ts":1630427014917,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$csNOkBxgT8XFC95z_aoBkr5qIsfN3tAE3xFqOVhxXvo"},
{"content":{"body":"> <@ljharb:matrix.org> the compiler turns it all into electricity anyways, \"what the compiler does\" doesn't matter\n\nWelcome to TC39, where the points are made up, and what the compiler does doesn't matter","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Bh1Pow_9LGSPE7hOfPcrIzmRiqtgKlo5zO76WeeL3cM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>the compiler turns it all into electricity anyways, &quot;what the compiler does&quot; doesn&#39;t matter</blockquote></mx-reply>Welcome to TC39, where the points are made up, and what the compiler does doesn't matter","m.relates_to":{"m.in_reply_to":{"event_id":"$Bh1Pow_9LGSPE7hOfPcrIzmRiqtgKlo5zO76WeeL3cM"}},"msgtype":"m.text"},"ts":1630427019494,"senderName":"Jamie Kyle","senderId":"@jamiebuilds:matrix.org","id":"$FPNQ2QFeFJKz5qgJazu0JFlayaz5zwENZlybkBaSX1I"},
{"content":{"body":"* shu: I think it becomes clearer if postfix or circumfix operations get involved, so that you no longer have to switch between LTR and RTL reading.","m.new_content":{"body":"shu: I think it becomes clearer if postfix or circumfix operations get involved, so that you no longer have to switch between LTR and RTL reading.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XBesOLFk8yPrb8SB3lCfzqOcj0uDMLn2_KD5eE0NEs4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427026097,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$OGPgL5rwcCUp_mLk3CTyLnd9fP76y8nm4lPM1xOsT8Q"},
{"content":{"body":"whose pipeline is it anyway","msgtype":"m.text"},"ts":1630427047710,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kVT3MJrNU-BTC-2Os7uo5Co4O1JylhYaD3Ghyrity48"},
{"content":{"body":"the \"order of execution\" thing is weird to me","msgtype":"m.text"},"ts":1630427050228,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$B7BC2CEuCeFp39iGaGR5-pbihgjHkTRPS4NXD19gPzk"},
{"content":{"body":"like, presumably the folks who want this are FP enthusiasts","msgtype":"m.text"},"ts":1630427061944,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pHfATotC0RIbE5U0qj1KKpywbpLFnJ-x3V_IJ6Rs0kM"},
{"content":{"body":"* shu: I think it becomes clearer if postfix or circumfix operations (like array wrapping or function calls with following arguments) get involved, so that you no longer have to switch between LTR and RTL reading.","m.new_content":{"body":"shu: I think it becomes clearer if postfix or circumfix operations (like array wrapping or function calls with following arguments) get involved, so that you no longer have to switch between LTR and RTL reading.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XBesOLFk8yPrb8SB3lCfzqOcj0uDMLn2_KD5eE0NEs4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427062755,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ekDrAehSozWuORrkNqycCjoutvPzTzUeqmSFRQm01fE"},
{"content":{"body":"well, it's what I really loved about Factor and postfix langauges in general!","msgtype":"m.text"},"ts":1630427065809,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$zxeYvNy4yem_TfYIITrK4LHKcrSMV6j9tOxuGvN81lg"},
{"content":{"body":"and also what I think many people love about method-chaining APIs","msgtype":"m.text"},"ts":1630427075555,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$sD-9mhT_f5nwN5ah63Qdx4sVUmvSO0ubHuddO559qYw"},
{"content":{"body":"yet a major selling point here is that they find function composition and order of function application confusing, and there should be new syntax to make it look imperative?","msgtype":"m.text"},"ts":1630427086657,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$m7l9R584dYS4e4Aec60PG0zeMT6SGYC7aD7EiahquKU"},
{"content":{"body":"i am very much not an FP enthusiast in that way, i think RxJS-style coding is harder to understand. and i very much want pipeline for my not-super-FP but not-OO code.","msgtype":"m.text"},"ts":1630427089387,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZDwsAXs8XxtKD7sKZVh9yoRBPKwQdrGlO8ecO_Qok8s"},
{"content":{"body":"When the compiler reassigns it, it is in special compiler land, where Bill from four departments over isn't going to do something weird with it and bring the site down.","msgtype":"m.text"},"ts":1630427104405,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$q9SbdWiebgU8bDYlNQSOCldtqMlnrGsOdGHaPzi3eXc"},
{"content":{"body":"stack-based languages (and some FP enthusiasts) get way too obscure since they try to juggle multiple things in the pipeline. don't do that.","msgtype":"m.text"},"ts":1630427107030,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$GzPhYSnInseFD6AguWTfhd_BIouTP-vqXNCnwzUOhBI"},
{"content":{"body":"the people who want the *other* pipeline syntax, the point-free one or whatever it's called, are definitely FP enthusiasts","format":"org.matrix.custom.html","formatted_body":"the people who want the <em>other</em> pipeline syntax, the point-free one or whatever it's called, are definitely FP enthusiasts","msgtype":"m.text"},"ts":1630427114395,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$SU0OBzPKeXDSUMDRJG19M4NTYRBa70zXEALT8IBuL8k"},
{"content":{"body":"I am an FP enthusiast, and I like pipes. But I would like pipes to handle multiple arguments as well as they do unary calls. And non-function-call expressions too.","msgtype":"m.text"},"ts":1630427134523,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$JkfsNYwzV16K9hfLApIbtUx1nPw3PA5LtY_DWgxxFmU"},
{"content":{"body":"You can think of the pipeline as ShadowRealm reassignment maybe. (Warning: May not actually understand Shadow Realms.)","msgtype":"m.text"},"ts":1630427137980,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$DlDSdAsXuVYX23EVNkIBqaDzUwn9c_MQyyoEaT7tgdY"},
{"content":{"body":"Stage 2 on Pipeline Operator is kind-of a big deal... I would have liked to have seen a lot more data and surveys about how this will impact practitioners and code readability in the long term.  We have the TC39 Research Call for this exact purpose, but Pipeline Operator has not been a subject of that call, at least not for a long time.  Stage advancement seemed rushed.","msgtype":"m.text"},"ts":1630427152143,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$JDL-ACUrQWb9J94V-dDPBiCFERLW70TCud_dP-5mEmY"},
{"content":{"body":"we found out apparently Shadow Realm was a euphemism put in in the Yugioh dub to soften the concept of \"death\"","msgtype":"m.text"},"ts":1630427157888,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tNp0U1QE4QyZbOLJ8l8SlC1LRFZ-9l-MC5lH6w4cJDM"},
{"content":{"body":"jschoi: so use arrows?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: so use arrows?","msgtype":"m.text"},"ts":1630427161502,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KxtKIqqXkEpj-eQEj8s7HFPpwtgICQrORHENdq5O35A"},
{"content":{"body":"* I am an FP enthusiast, and I like pipes. But I would like pipes to handle multiple arguments as well as they do unary calls. And non-function-call expressions too.","m.new_content":{"body":"I am an FP enthusiast, and I like pipes. But I would like pipes to handle multiple arguments as well as they do unary calls. And non-function-call expressions too.","msgtype":"m.text"},"m.relates_to":{"event_id":"$JkfsNYwzV16K9hfLApIbtUx1nPw3PA5LtY_DWgxxFmU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427161892,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$m0KkQID0P3GIRgqrYO4kGbMdkNd5GgPuwBYa7BLSqzw"},
{"content":{"body":" * You can think of the pipeline as ShadowRealm reassignment maybe. (Warning: May not actually understand Shadow Realms.)","m.new_content":{"body":"You can think of the pipeline as ShadowRealm reassignment maybe. (Warning: May not actually understand Shadow Realms.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$DlDSdAsXuVYX23EVNkIBqaDzUwn9c_MQyyoEaT7tgdY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427188002,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$prDjg8-h6kN0AA5NHmK_vtldan9WIhme7s6sG3Gfn7Y"},
{"content":{"body":"Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require argument naming. Which is presumably why deeply nested code still happens in real life (naming is hard, etc.).","msgtype":"m.text"},"ts":1630427193008,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$NopTEmGcDkyp-q7b0l1FHTJwwG087nUxPKsusG5N4Q0"},
{"content":{"body":"* Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require naming. Which is why deeply nested code still happens in real life.","m.new_content":{"body":"Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require naming. Which is why deeply nested code still happens in real life.","msgtype":"m.text"},"m.relates_to":{"event_id":"$NopTEmGcDkyp-q7b0l1FHTJwwG087nUxPKsusG5N4Q0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427205400,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$G0XPNLilIYF-CplTDSOwJ9LyuxofhgGkzLSVT2AU_ps"},
{"content":{"body":"* Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require argument naming. Which is presumably why deeply nested code still happens in real life.","m.new_content":{"body":"Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require argument naming. Which is presumably why deeply nested code still happens in real life.","msgtype":"m.text"},"m.relates_to":{"event_id":"$NopTEmGcDkyp-q7b0l1FHTJwwG087nUxPKsusG5N4Q0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427215696,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$lwvMerp-IbISe6x6eyNCUwLuybw4sOmqePDsQ9lxTAQ"},
{"content":{"body":"* Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require argument naming. Which is presumably why deeply nested code still happens in real life (naming is hard, etc.).","m.new_content":{"body":"Yes, arrows, but they don‚Äôt work with function-scoped operations and they still require argument naming. Which is presumably why deeply nested code still happens in real life (naming is hard, etc.).","msgtype":"m.text"},"m.relates_to":{"event_id":"$NopTEmGcDkyp-q7b0l1FHTJwwG087nUxPKsusG5N4Q0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630427220904,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$bCKxgqVI_tXekdzhrPK96k8kkvy2FsPXAY44Pg-3iag"},
{"content":{"body":"nobody wants to join the hallway track?","msgtype":"m.text"},"ts":1630427226891,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$L0fahfpAMenRODe6ShT1PsLsEKfhQO_t-_luD-XeYiE"},
{"content":{"body":"jschoi: when the scope of the variable is a single line, the names don't matter","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: when the scope of the variable is a single line, the names don't matter","msgtype":"m.text"},"ts":1630427236786,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KcQWLLGnqZCVhUHHhDditeYcvDFccYB5Iq4KnPCToGU"},
{"content":{"body":"just use a single letter","msgtype":"m.text"},"ts":1630427239531,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$W_V2NWL3pNXGNgyX1s7U6pEk6HTSnmu4b2_4P5ElJ-g"},
{"content":{"body":"or `$` as suggested above","format":"org.matrix.custom.html","formatted_body":"or <code>$</code> as suggested above","msgtype":"m.text"},"ts":1630427246611,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4z0Z852DUS9I9qV5c0cs1X2DCwv8rQlFFSrdwzvfYoY"},
{"content":{"body":"> <@shuyuguo:matrix.org> we found out apparently Shadow Realm was a euphemism put in in the Yugioh dub to soften the concept of \"death\"\n\nhuh.... this seems pretty bad","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$tNp0U1QE4QyZbOLJ8l8SlC1LRFZ-9l-MC5lH6w4cJDM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>we found out apparently Shadow Realm was a euphemism put in in the Yugioh dub to soften the concept of &quot;death&quot;</blockquote></mx-reply>huh.... this seems pretty bad","m.relates_to":{"m.in_reply_to":{"event_id":"$tNp0U1QE4QyZbOLJ8l8SlC1LRFZ-9l-MC5lH6w4cJDM"}},"msgtype":"m.text"},"ts":1630427275569,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$ZG5stjRIQKkyOvY1un4uk1ykyLOtqchdfJ8OUMzCPIs"},
{"content":{"body":"euphemism isn't the right word","msgtype":"m.text"},"ts":1630427288650,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7W8uM0eOc2NqaYOpWJQ-87ujI7hMxBB-4DrThXe0Q_I"},
{"content":{"body":"but you know how they change stuff when they dub anime for a US audience?","msgtype":"m.text"},"ts":1630427297872,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Len8XFfCsTYlK5h0nsSFcmzVkFaLoah2WS0RABHkpu0"},
{"content":{"body":"like they'd removal cigarettes, etc","msgtype":"m.text"},"ts":1630427301485,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JqDcxE_8PZ6hazoGiJKIbZh02dC1q8fU9PNzVO7Xi0I"},
{"content":{"body":"euphemism is what it says on the wiki ","msgtype":"m.text"},"ts":1630427313984,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$7STaHZ1YFtUz0non5W_9IJz9Y-Di1WZAxegEsQRTi_o"},
{"content":{"body":"https://i.kym-cdn.com/photos/images/newsfeed/001/069/615/189.jpg","msgtype":"m.text"},"ts":1630427345896,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$I-jdRAzNt2N6ZLIJR4kbx2kvqo53iR3j6iNyXwC6nSo"},
{"content":{"body":"> <@sffc:mozilla.org> Stage 2 on Pipeline Operator is kind-of a big deal... I would have liked to have seen a lot more data and surveys about how this will impact practitioners and code readability in the long term.  We have the TC39 Research Call for this exact purpose, but Pipeline Operator has not been a subject of that call, at least not for a long time.  Stage advancement seemed rushed.\n\nHuh, maybe some kind of research could be proposed as a request of the champion group for Stage 3? But if this request is made, it'd help to understand what the research question should be.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JDL-ACUrQWb9J94V-dDPBiCFERLW70TCud_dP-5mEmY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sffc:mozilla.org\">@sffc:mozilla.org</a><br>Stage 2 on Pipeline Operator is kind-of a big deal... I would have liked to have seen a lot more data and surveys about how this will impact practitioners and code readability in the long term.  We have the TC39 Research Call for this exact purpose, but Pipeline Operator has not been a subject of that call, at least not for a long time.  Stage advancement seemed rushed.</blockquote></mx-reply>Huh, maybe some kind of research could be proposed as a request of the champion group for Stage 3? But if this request is made, it'd help to understand what the research question should be.","m.relates_to":{"m.in_reply_to":{"event_id":"$JDL-ACUrQWb9J94V-dDPBiCFERLW70TCud_dP-5mEmY"}},"msgtype":"m.text"},"ts":1630427371734,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$oe7D5YLtQsplGsjiSOe44ePG7J7qXeHDWwoKQhdhVvA"},
{"content":{"body":"i think euphemism is the correct word","msgtype":"m.text"},"ts":1630427374022,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nC9h-BWGY5zvIBvGTcgKeKfNaI27KYOUQbxh32OwWpI"},
{"content":{"body":"Michael Ficarra: Yes, but arrow functions with single-char variables still don‚Äôt address function-scoped operations, and they‚Äôre more verbose. And that verbosity is also perhaps much of why people don‚Äôt linearize deeply nested expressions more often.","msgtype":"m.text"},"ts":1630427394772,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$06EZYovBhNARsVLqUDjICnF5vOvdZsV8M8ftx2FZDSA"},
{"content":{"body":"> still don‚Äôt address function-scoped operations","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nstill don‚Äôt address function-scoped operations\n</blockquote>\n","msgtype":"m.text"},"ts":1630427430352,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zoS2ToJRMbF13J95tKQwPZm_52WDDUKA1mxubjW0TE0"},
{"content":{"body":"what does this mean?","msgtype":"m.text"},"ts":1630427432664,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$7Nh8-5iBw0W8UYo9ECmPbwzLsZ7KFYTrTv42z-QKHTw"},
{"content":{"body":"`yield` and `await`.","format":"org.matrix.custom.html","formatted_body":"<code>yield</code> and <code>await</code>.","msgtype":"m.text"},"ts":1630427438591,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$-LSfMgueRKmI53ksLRSZm2FYPGqV3Lb2XvpZ4W-qDGY"},
{"content":{"body":"oh, yes, I think the pipeline proposal should have an awaiting pipe variant","msgtype":"m.text"},"ts":1630427470666,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$u_WlLdsMwg2vYVgdfsfuyYTKrWieWo_t080I6xVpFrU"},
{"content":{"body":"it does?","msgtype":"m.text"},"ts":1630427519835,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$K49pOttFPOgAIbIVRk2qPLwtzZkKN7aeF0tmjHTt3tc"},
{"content":{"body":"you can just do that","msgtype":"m.text"},"ts":1630427524893,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$7kJESVE_XAOvKqOuLS7W_ooSVzjwOQb_80VvXMzdtOg"},
{"content":{"body":"didn't mark propose a syntax for building up async chains","msgtype":"m.text"},"ts":1630427531290,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$4i2Ul9UgYOtfHOFWMcgcKYO63SUkCDSUHZhGwJln8Yw"},
{"content":{"body":"littledan: michael is in favor of F#-style","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: michael is in favor of F#-style","msgtype":"m.text"},"ts":1630427550883,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yZUNffT6qAuihGXbMCLBieNoxVX-FK6W3-KQ_2WKML0"},
{"content":{"body":"with a special `await` form","format":"org.matrix.custom.html","formatted_body":"with a special <code>await</code> form","msgtype":"m.text"},"ts":1630427559214,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ykUKOeim8TNYlw43P4RMvGRvtG2DVWhN-2dSEn_to98"},
{"content":{"body":"yeah, I proposed that in the past and people continued to be unhappy","msgtype":"m.text"},"ts":1630427569491,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$NofKzKWVtB-IBoRB1IbAC9fXzlkC9vu5Y3yMdsNpVZ4"},
{"content":{"body":"I think Hack is a good general way forward. I'm glad we agreed to Stage 2 on it.","msgtype":"m.text"},"ts":1630427583195,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$KbllA7F_QV7S5cMTXOUNj252Mwgr9dUz0RtN8jMefFc"},
{"content":{"body":"> <@devsnek:matrix.org> didn't mark propose a syntax for building up async chains\n\nIs it the `~.` operator?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$4i2Ul9UgYOtfHOFWMcgcKYO63SUkCDSUHZhGwJln8Yw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>didn&#39;t mark propose a syntax for building up async chains</blockquote></mx-reply>Is it the <code>~.</code> operator?","m.relates_to":{"m.in_reply_to":{"event_id":"$4i2Ul9UgYOtfHOFWMcgcKYO63SUkCDSUHZhGwJln8Yw"}},"msgtype":"m.text"},"ts":1630427595158,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IoQtFoCMsbSgZ9S_-TuTWF-HX0TmOAzsJtvvneNXDR8"},
{"content":{"body":"I guess I'm seeing a lot of advancements this meeting where people express unhappiness *afterwards*. This seems pretty unfortunate process-wise. I'm wondering what's preventing the concerns from being expressed before/during the call for consensus.","format":"org.matrix.custom.html","formatted_body":"I guess I'm seeing a lot of advancements this meeting where people express unhappiness <em>afterwards</em>. This seems pretty unfortunate process-wise. I'm wondering what's preventing the concerns from being expressed before/during the call for consensus.","msgtype":"m.text"},"ts":1630427631307,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$OHz3AmV-dS62E1Y25OQZgCYzg5u0p5ABFfuZJtCVUPs"},
{"content":{"body":"do we need to punt more agenda items to next meeting, for example?","msgtype":"m.text"},"ts":1630427657140,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$4ESTiMHJjnKj8MrKlc5G8fzJvMDl_z3goEQ23BrPsno"},
{"content":{"body":"\"blocking\" has high social cost?","msgtype":"m.text"},"ts":1630427660054,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1dDPWPEaLIH-IQyaU9VVYlTxUNmxb-Yx9m5Sf2yfsV4"},
{"content":{"body":"specifically, lone blocking","msgtype":"m.text"},"ts":1630427667959,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ev8i-xs-pkUMrhKVwap5AtN7VVAPfgtitFwcoy6QRKA"},
{"content":{"body":"> <@bakkot:matrix.org> with a special `await` form\n\nWavy dot","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ykUKOeim8TNYlw43P4RMvGRvtG2DVWhN-2dSEn_to98?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>with a special <code>await</code> form</blockquote></mx-reply>Wavy dot","m.relates_to":{"m.in_reply_to":{"event_id":"$ykUKOeim8TNYlw43P4RMvGRvtG2DVWhN-2dSEn_to98"}},"msgtype":"m.text"},"ts":1630427674684,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$YhQHlo0927AAuIkBfmpn-VAvIDe6eUCSePu2_T36IxQ"},
{"content":{"body":"all of the comments about this topic were expressed as \"if everyone else supports it\"","msgtype":"m.text"},"ts":1630427685503,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$izPelrP1iIHfHpyVtkgI5fJN5IdrdjfWjQBRV_pdJeA"},
{"content":{"body":"https://github.com/tc39/proposal-wavy-dot","msgtype":"m.text"},"ts":1630427693129,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$uar03uDhENc0Rwdft0sfA_ouz1DGWNpjN6yHTPJdiRY"},
{"content":{"body":"well, I previously proposed that we have `|> await` usable within an F# pipeline","format":"org.matrix.custom.html","formatted_body":"well, I previously proposed that we have <code>|&gt; await</code> usable within an F# pipeline","msgtype":"m.text"},"ts":1630427712567,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$scCjpeeXrFL9tIpdjj-gGMG88cBlChKRFWNm2_7cBTY"},
{"content":{"body":"> <@dehrenberg:igalia.com> Huh, maybe some kind of research could be proposed as a request of the champion group for Stage 3? But if this request is made, it'd help to understand what the research question should be.\n\nI think there are legitimate concerns about the long-term impact of any radically new syntax in JS.  Designing the exact research question is something Felienne et al can help us do in the TC39 Research Call","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$oe7D5YLtQsplGsjiSOe44ePG7J7qXeHDWwoKQhdhVvA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">@dehrenberg:igalia.com</a><br>Huh, maybe some kind of research could be proposed as a request of the champion group for Stage 3? But if this request is made, it'd help to understand what the research question should be.</blockquote></mx-reply>I think there are legitimate concerns about the long-term impact of any radically new syntax in JS.  Designing the exact research question is something Felienne et al can help us do in the TC39 Research Call","m.relates_to":{"m.in_reply_to":{"event_id":"$oe7D5YLtQsplGsjiSOe44ePG7J7qXeHDWwoKQhdhVvA"}},"msgtype":"m.text"},"ts":1630427712698,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$QWaAAsZsyXCT3h5APYPksalj5lohVpYNttgcUygwZE8"},
{"content":{"body":"littledan: I think we need a better process for advancement than taking the last two minutes of a timebox to ask if anyone is going to block","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: I think we need a better process for advancement than taking the last two minutes of a timebox to ask if anyone is going to block","msgtype":"m.text"},"ts":1630427718058,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JYBpReC9kRacMt_lOYbire_ID6halPslhWB0qzG6Ztk"},
{"content":{"body":"that's like the maximally pressure-to-stay-silent situation one could devise","msgtype":"m.text"},"ts":1630427728150,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YDPbBfvX3norMJqVN4ahJfDHAxUlQSD6nMyNjOLGNgk"},
{"content":{"body":"well, I've proposed that we ask for explicit support","msgtype":"m.text"},"ts":1630427729787,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$37XicIRU-lclWlpFzHiknNB4f-nC2s652Rr4m5qIj_c"},
{"content":{"body":"we could say, everything needs to be nominated and seconded, and then we have an explicit (e.g., minimum 15 second) time to call for objections","msgtype":"m.text"},"ts":1630427772052,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$Vvx3eMzAghn2LRXzd8k9n4s9x6algDPOSasR-jTDWnM"},
{"content":{"body":"littledan: for this proposal, there are plenty of people willing to voice explicit support though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: for this proposal, there are plenty of people willing to voice explicit support though","msgtype":"m.text"},"ts":1630427782078,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nDf2fGDTnR8Pat9F6RpHgojeG54JfKNoAC_hBe3-xgE"},
{"content":{"body":"I think that addresses a different kind of issue","msgtype":"m.text"},"ts":1630427788111,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dEeGJh9e_z2-fD52y0wt-lbOddr8islhKwGqd76gXR8"},
{"content":{"body":"well... I'm happy that this proposal went through. I'm not sure what we would want process-wise. I'd be fine with spending more time understanding people's objections, but I'm also up for it eventually going through.","msgtype":"m.text"},"ts":1630427829010,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$A9krhyt9uEfnsYKGSfB0LWvvspQDZmp_TsZd9jfq0QM"},
{"content":{"body":"the issue here is the presence of a lot of negative sentiment as well","msgtype":"m.text"},"ts":1630427830611,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$2qk8c1KI9CvNPfohvoIfmOLPKsRMneM-pd2S0ntf6t4"},
{"content":{"body":"I think we should spend more time within Stage 2 more clearly communicating the concrete concerns that delegates have. I honestly don't understand, e.g., what Mozilla's concerns are.","msgtype":"m.text"},"ts":1630427878171,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$sqTzMUWvOI6aqNhOHXOXNMb6vnIAmDgyLIXE8xJBF0E"},
{"content":{"body":"yeah, specifically, the problem is that if 10% of people like a proposal and 90% of people don't think it's worth it (or think it needs more time or research or whatever) but none of them enough to stand up and say \"I am blocking this\", then it will advance","msgtype":"m.text"},"ts":1630427896058,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$edu4XcjAYf4Vjk8N0qATyei3kFGh1Px5DoYGsMPTcQw"},
{"content":{"body":"I think support among JS developers is much higher than 10%...","msgtype":"m.text"},"ts":1630427926627,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$4MtFe2XBn9n71kXO02PJk0KSrZLb1LFXGSu75MJt-1M"},
{"content":{"body":"is that a problem though?","msgtype":"m.text"},"ts":1630427927080,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nLgRN_g0abs3YwZS2s9Vt2GXcWPHwT31OCpbAttzwC4"},
{"content":{"body":"if no one wants to block it then it shouldn't be bad enough to be a problem","msgtype":"m.text"},"ts":1630427943298,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$svrZmIsa9sw8pSgm_7S_aPGjR2jsrbOt431qoEIHprE"},
{"content":{"body":"I guess I'd be worried if pipeline had a lot of big implications for JS syntax, semantics, or implementation. This one is pretty lightweight, even if it does have some syntax.","msgtype":"m.text"},"ts":1630427954563,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$OMA-cIc7tYTOQXD1tDijo4q7iTbCpDSW4F9MRNSBEzE"},
{"content":{"body":"littledan: support for _some form_ of pipeline, yes. it is not clear to me that any particular instantiation has support higher than 50%","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: support for <em>some form</em> of pipeline, yes. it is not clear to me that any particular instantiation has support higher than 50%","msgtype":"m.text"},"ts":1630427974523,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DkbymEmK7N60kGKH5rx7ahnDl_kh_cP97BdcOz30tAg"},
{"content":{"body":"or, concretely, that _this_ instantiation has support higher than 50%","format":"org.matrix.custom.html","formatted_body":"or, concretely, that <em>this</em> instantiation has support higher than 50%","msgtype":"m.text"},"ts":1630427995910,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a5uaQXJ8n_pnbyOArexfkT-t2X8cTy7dT5-sG5wPkvo"},
{"content":{"body":"littledan:  mozilla's concern seems to be broadly, \"negative readability in the ecosystem in the future\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>:  mozilla's concern seems to be broadly, &quot;negative readability in the ecosystem in the future&quot;","msgtype":"m.text"},"ts":1630427999634,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$B7QDiC8E8IesnoYcDW-bbu8z6R7xoEGVuFWyLo_ISAw"},
{"content":{"body":"I believe there are still many concerns about the direction of pipeline op proposal. It seems fp guys who use Ramda heavily and rx guys actually don't like Hack style...","msgtype":"m.text"},"ts":1630428000885,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$j4P0jwaAZITky8_5iWiAhiUACdQe1NiZic0cwnTl6ww"},
{"content":{"body":"OK, I suggest that we should keep discussing the pros and cons of the forms during Stage 2","msgtype":"m.text"},"ts":1630428008752,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$7U84nUUCCJDEmPUWoRtkatcaGCPVtOibMMSwOH5rFBg"},
{"content":{"body":"i also do not understand what their implementation concerns are","msgtype":"m.text"},"ts":1630428013671,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yb-YBUtJlclxDS9Nh4rl06-zI37Rj6jIcHX5ZKp2E00"},
{"content":{"body":"there's a channel for this that everyone can join","msgtype":"m.text"},"ts":1630428017976,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$DNEyi_WASDM4q_y9Q52wSwDY3jHFwDAmDGa_rBHlmcQ"},
{"content":{"body":"the current \"default\" proposal is Hack, but we're still allowed to make changes until Stage 3","msgtype":"m.text"},"ts":1630428049356,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$zSZVxQmf9adcicb9RwZg-cz_lK0SEAMD9s45khnyL4o"},
{"content":{"body":"Stage 2 with Hack style already give a signal that champions choose Hack style...","msgtype":"m.text"},"ts":1630428084559,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$9g75zulg4GzO93ANhhlc2syEI-SXi9n0_OxPfahBOJc"},
{"content":{"body":"> I think support among JS developers is much higher than 10%...\n\nalso, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n</blockquote>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n","msgtype":"m.text"},"ts":1630428121249,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v3yi3cdyRDPzSCA-ZuUYyIAyJN4fhS08JksHSYh37lA"},
{"content":{"body":" * > \nI think support among JS developers is much higher than 10%...\n\nalso, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.\n","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\n</blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n","m.new_content":{"body":"> \nI think support among JS developers is much higher than 10%...\n\nalso, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n</blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$v3yi3cdyRDPzSCA-ZuUYyIAyJN4fhS08JksHSYh37lA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630428125787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ai3zqLI3lASdDgscyKb7XjtcHpCrtwlWCxtKv0bEGo8"},
{"content":{"body":" * > I think support among JS developers is much higher than 10%...\n\nalso, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n</blockquote>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n","m.new_content":{"body":"> I think support among JS developers is much higher than 10%...\n\nalso, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n</blockquote>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$v3yi3cdyRDPzSCA-ZuUYyIAyJN4fhS08JksHSYh37lA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630428130303,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eLvflnB2uaCHnYffqAnt1m1R0NLX1ItbGE7ZSQB29nI"},
{"content":{"body":"> <@dehrenberg:igalia.com> there's a channel for this that everyone can join\n\nIs it public? I can search nothing for pipeline rooms on freenode nor matrix","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DNEyi_WASDM4q_y9Q52wSwDY3jHFwDAmDGa_rBHlmcQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">@dehrenberg:igalia.com</a><br>there&#39;s a channel for this that everyone can join</blockquote></mx-reply>Is it public? I can search nothing for pipeline rooms on freenode nor matrix","m.relates_to":{"m.in_reply_to":{"event_id":"$DNEyi_WASDM4q_y9Q52wSwDY3jHFwDAmDGa_rBHlmcQ"}},"msgtype":"m.text"},"ts":1630428138940,"senderName":"legendecas","senderId":"@legendecas:matrix.org","id":"$gF8ubllB_34pFXsNo1175RItiLRNISl-gaJzBsuGpkc"},
{"content":{"body":"I think Dan meant the issue tracker? legendecas ","format":"org.matrix.custom.html","formatted_body":"I think Dan meant the issue tracker? <a href=\"https://matrix.to/#/@legendecas:matrix.org\">legendecas</a>","msgtype":"m.text"},"ts":1630428165959,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MaUw4RMAmhJ2Y3OK48f_OhAGs1XhMmOSaeyMug8ViE8"},
{"content":{"body":"i think the only complexity for implementations is nesting `%` in functions, and that can still just be like pushing a scope if the thing is closed over","format":"org.matrix.custom.html","formatted_body":"i think the only complexity for implementations is nesting <code>%</code> in functions, and that can still just be like pushing a scope if the thing is closed over","msgtype":"m.text"},"ts":1630428210475,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$UQGImH-llIsIyI74fEe_MEuuBkWdR9yZU2R5KCxwfgU"},
{"content":{"body":"> <@legendecas:matrix.org> Is it public? I can search nothing for pipeline rooms on freenode nor matrix\n\nit's public and in the TC39 Matrix space","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gF8ubllB_34pFXsNo1175RItiLRNISl-gaJzBsuGpkc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Is it public? I can search nothing for pipeline rooms on freenode nor matrix</blockquote></mx-reply>it's public and in the TC39 Matrix space","m.relates_to":{"m.in_reply_to":{"event_id":"$gF8ubllB_34pFXsNo1175RItiLRNISl-gaJzBsuGpkc"}},"msgtype":"m.text"},"ts":1630428236291,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TM_MA2v5fMshVAZEy8a_HDcPoQ_ohrZGv9-MMfZByJY"},
{"content":{"body":"> <@bakkot:matrix.org> > I think support among JS developers is much higher than 10%...\n> \n> also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.\n\nThere is a poll on State-of-JS, and pipeline op is the fourth wanted, but the problem is which style? the poll did not show the choices, and I guess most people who choose pipeline op actually only know F# style.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$v3yi3cdyRDPzSCA-ZuUYyIAyJN4fhS08JksHSYh37lA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><blockquote>\n<p>I think support among JS developers is much higher than 10%...</p>\n</blockquote>\n<p>also, actually, I think I disagree with this claim as stated, even aggregating the two forms. I doubt more than 10% of JS developers have even heard of it.</p>\n</blockquote></mx-reply>There is a poll on State-of-JS, and pipeline op is the fourth wanted, but the problem is which style? the poll did not show the choices, and I guess most people who choose pipeline op actually only know F# style.","m.relates_to":{"m.in_reply_to":{"event_id":"$v3yi3cdyRDPzSCA-ZuUYyIAyJN4fhS08JksHSYh37lA"}},"msgtype":"m.text"},"ts":1630428240672,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$GvEeMbzpvPZpBam2KopVDAY6WsklpkvgfBjkf2t8TVk"},
{"content":{"body":"i do not have confidence in the State of JS poll","msgtype":"m.text"},"ts":1630428259874,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kB0r60kxS6Ij81ZOHDiGvrnoLtcolJKy4UMmVaJYvi8"},
{"content":{"body":"HE Shi-Jun: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","msgtype":"m.text"},"ts":1630428326339,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JWOpZh4AAKNcOLs2psppYEkxJdxqxmXEFgMB_KVVbDU"},
{"content":{"body":" * HE Shi-Jun: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","m.new_content":{"body":"HE Shi-Jun: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: significantly less than 10% of js devs take that poll, and I strongly suspect that those who do are not a representative sample","msgtype":"m.text"},"m.relates_to":{"event_id":"$JWOpZh4AAKNcOLs2psppYEkxJdxqxmXEFgMB_KVVbDU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630428333154,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zdI2sMdW2ZAY2JaHQ9dd-5H6JkCuY3f0khLKROByj7A"},
{"content":{"body":"> <@shuyuguo:matrix.org> i do not have confidence in the State of JS poll\n\nYeah, what I said is, even people who did State-of-JS poll may only choose F# style, not Hack style which we move to stage 2 now.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kB0r60kxS6Ij81ZOHDiGvrnoLtcolJKy4UMmVaJYvi8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>i do not have confidence in the State of JS poll</blockquote></mx-reply>Yeah, what I said is, even people who did State-of-JS poll may only choose F# style, not Hack style which we move to stage 2 now.","m.relates_to":{"m.in_reply_to":{"event_id":"$kB0r60kxS6Ij81ZOHDiGvrnoLtcolJKy4UMmVaJYvi8"}},"msgtype":"m.text"},"ts":1630428367835,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$B0KY-eM3fRZgE3zALy-vzV96VpKhtWRwx_-jUGOa3ME"},
{"content":{"body":"Actually, Hack style is very rare , I only know Hack use it (are there others?) and Hack is not a popular language. ","msgtype":"m.text"},"ts":1630428452881,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$mzHfE0sYwdgvsTf3CtmNW1V5pOpIITqxfic0efCCbJo"},
{"content":{"body":"is F# a popular language?","msgtype":"m.text"},"ts":1630428467927,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tDjGPodA3HrCd001eLbI5mA9uHkoQYTrzoSnpqIcKRQ"},
{"content":{"body":"HE Shi-Jun: topic variables are used in a number of languages; see https://rosettacode.org/wiki/Topic_variable","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: topic variables are used in a number of languages; see https://rosettacode.org/wiki/Topic_variable","msgtype":"m.text"},"ts":1630428489819,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$o8uWsSZQ42eenEGEqkOdspHdy_CfhL0Xg8UKiwCTrug"},
{"content":{"body":"hack-style is basically \"introduce a context in which there is a topic variable\"","msgtype":"m.text"},"ts":1630428501127,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nXDi-Etu1o2DFmrRXTZLO-504eErj7yzK8nVS9JppuM"},
{"content":{"body":"if I was the champion of this proposal, I wouldn't want it to advance to stage 2 with the current committee sentiment","msgtype":"m.text"},"ts":1630428502971,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$luWnVBdZeqaPjq7rMnn7ppzHMF7hX0KAJmsg0qN81Oo"},
{"content":{"body":"then i would recommend someone re-raise the issue if they feel strongly enough. for better or for worse our process isn't temperature based","msgtype":"m.text"},"ts":1630428572627,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xBWFyjxlGkAo_XIqmt8l9hAiyMz8YPOsLCpS1E9BJNU"},
{"content":{"body":"on the process question, I would kind of like something like, \"no blockers, and at least a 60-40 ratio of support for advancing now among members [given a neutral option which counts as neither]\" or something like that","msgtype":"m.text"},"ts":1630428592871,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VneSLXh0GWWB3-mlRPJEuiEQlA9YzBcRZcSXsMUrfTE"},
{"content":{"body":"I have no stake in this proposal myself, but to be honest I'm uncomfortable with delegates seeding this much doubt upon proposals that advanced, right after allowing them to advance.","msgtype":"m.text"},"ts":1630428634063,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$WkYHAuvdQ6XATI5lFF73remrdSbyHVGN4ziVML7radY"},
{"content":{"body":"i would not want to consider blocking and ratio in the same context","msgtype":"m.text"},"ts":1630428636518,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$EqseRn8H6HviBSEawOvI0p-fAmZcprFgjjo3L5vzqss"},
{"content":{"body":"> <@bakkot:matrix.org> hack-style is basically \"introduce a context in which there is a topic variable\"\n\nI mean use special token/syntax like Hack. I don't treat special identifier (for example, Kotlin's `it`) as Hack style.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nXDi-Etu1o2DFmrRXTZLO-504eErj7yzK8nVS9JppuM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>hack-style is basically &quot;introduce a context in which there is a topic variable&quot;</blockquote></mx-reply>I mean use special token/syntax like Hack. I don't treat special identifier (for example, Kotlin's <code>it</code>) as Hack style.","m.relates_to":{"m.in_reply_to":{"event_id":"$nXDi-Etu1o2DFmrRXTZLO-504eErj7yzK8nVS9JppuM"}},"msgtype":"m.text"},"ts":1630428655751,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$5NYZpGhSqZNCxPodVm37WSfaGlL_YPA4trSDqTz9r2M"},
{"content":{"body":"invited you to the channel; anyone else here, feel free to request an invitation","format":"org.matrix.custom.html","formatted_body":"invited you to the channel; anyone else here, feel free to request an invitation","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$gF8ubllB_34pFXsNo1175RItiLRNISl-gaJzBsuGpkc"}}},"ts":1630428657990,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$bJw-4KMn1Y2Pebo_Nq_K4B4N7JkGhg-w1G7IyWqpfNY"},
{"content":{"body":"> <@legendecas:matrix.org> Is it public? I can search nothing for pipeline rooms on freenode nor matrix\n\n * invited you to the channel; anyone else here, feel free to request an invitation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$gF8ubllB_34pFXsNo1175RItiLRNISl-gaJzBsuGpkc?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@legendecas:matrix.org\">@legendecas:matrix.org</a><br>Is it public? I can search nothing for pipeline rooms on freenode nor matrix</blockquote></mx-reply> * invited you to the channel; anyone else here, feel free to request an invitation","m.new_content":{"body":"invited you to the channel; anyone else here, feel free to request an invitation","format":"org.matrix.custom.html","formatted_body":"invited you to the channel; anyone else here, feel free to request an invitation","msgtype":"m.text"},"m.relates_to":{"event_id":"$bJw-4KMn1Y2Pebo_Nq_K4B4N7JkGhg-w1G7IyWqpfNY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630428666064,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$XWj8mku-b4U4vn3JT2Lu_2coEcx8Ctsm3Y-9-kYV23c"},
{"content":{"body":"ptomato: see https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JYBpReC9kRacMt_lOYbire_ID6halPslhWB0qzG6Ztk?via=matrix.org&via=mozilla.org&via=igalia.com","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: see https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JYBpReC9kRacMt_lOYbire_ID6halPslhWB0qzG6Ztk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com","msgtype":"m.text"},"ts":1630428706332,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$61GMVi_uHd3LXSWYmOuT-FFahkfTW6TV7McnbQ4tVIg"},
{"content":{"body":"> I think we need a better process for advancement than taking the last two minutes of a timebox to ask if anyone is going to block\n> that's like the maximally pressure-to-stay-silent situation one could devise\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nI think we need a better process for advancement than taking the last two minutes of a timebox to ask if anyone is going to block<br>that's like the maximally pressure-to-stay-silent situation one could devise\n</blockquote>\n","msgtype":"m.text"},"ts":1630428719796,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0C6tiDVRYkSk9YtzmjBL6VxbIBgVbQlLiqqD0275fy0"},
{"content":{"body":"I would be in favor of a reform of TC39 where we do frequent non-binding polls of the committee like the Wasm CG does, so we can get more of a temperature. However, when I proposed this in the past, much of the committee was opposed and preferred to stick to the objection-based model, I guess because there was fear that such polls would be used to push past objections (sort of the inverse of this case)","msgtype":"m.text"},"ts":1630428727809,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$fhA-p1TQf6Kbx6pOcOkd_rRKHEwg2DX_eHWJVQoeWeA"},
{"content":{"body":"I feel if you have serious doubts about a proposal, then block it and work with the champions to resolve those doubts. it's true there is a social cost for single-handedly blocking a proposal, but that's by design. you shouldn't get to 'block lite' retroactively by seeding doubts without paying the social cost","msgtype":"m.text"},"ts":1630428754877,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$SmPGrw9gagEuWeHZliVyv6mXuhxwsguDcgO4NpQ1GRs"},
{"content":{"body":"I wouldn't mind at all making more frequent use of the temperature check feature, even if it's for each consensus","msgtype":"m.text"},"ts":1630428756462,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$hwS10Vhkk1ALAj0sBlDEl4Sal1BwzoQrqJc27F5UNzc"},
{"content":{"body":"in rfc7282 they do humming","msgtype":"m.text"},"ts":1630428766624,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$Nkl0s5YPtZYj5bwWXNjmXJf-wVIx0e7NWQqkMy3_ejs"},
{"content":{"body":"littledan: yeah, that's why I suggest having an additional requirement, rather than removing the current requirement","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a>: yeah, that's why I suggest having an additional requirement, rather than removing the current requirement","msgtype":"m.text"},"ts":1630428778579,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fJsVDPeRzs_aAeZszGjR6zJz5qiUUQYA1VTgOHsIQjY"},
{"content":{"body":"tbh i think we should read through rfc7282 at the start of every meeting, it's not too long and its great","msgtype":"m.text"},"ts":1630428786681,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$o1HxLlc_K1EA_qXw6celtMCHuMBAq04fRfCLhqBL-Mk"},
{"content":{"body":"I do think we need better ways of taking non-blocking concerns into account. However, I think the champions did their homework here and there's nothing to change.","msgtype":"m.text"},"ts":1630428793798,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$eF8LZi-1XjzBbMSxq42erKXD51N3aBIADCNIDBsH2Zs"},
{"content":{"body":"> <@haxjs:matrix.org> I mean use special token/syntax like Hack. I don't treat special identifier (for example, Kotlin's `it`) as Hack style.\n\nActually Kotlin's soutlion (https://rosettacode.org/wiki/Topic_variable#Kotlin) is extensions not pipeline op.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5NYZpGhSqZNCxPodVm37WSfaGlL_YPA4trSDqTz9r2M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@haxjs:matrix.org\">@haxjs:matrix.org</a><br>I mean use special token/syntax like Hack. I don't treat special identifier (for example, Kotlin's <code>it</code>) as Hack style.</blockquote></mx-reply>Actually Kotlin's soutlion (https://rosettacode.org/wiki/Topic_variable#Kotlin) is extensions not pipeline op.","m.relates_to":{"m.in_reply_to":{"event_id":"$5NYZpGhSqZNCxPodVm37WSfaGlL_YPA4trSDqTz9r2M"}},"msgtype":"m.text"},"ts":1630428795541,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$gRokwJ24n3OUumULg0PkUJTyOWz6n8XBeTKPpCFZQXo"},
{"content":{"body":"ptomato: right, but what if you, and 50% of the other committee, have only moderate doubts about a proposal, and the timebox expires before you raise them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: right, but what if you, and 50% of the other committee, have only moderate doubts about a proposal, and the timebox expires before you raise them","msgtype":"m.text"},"ts":1630428825549,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uaehEfJzWh4omHla-YeKjguo-VO1YXQmBJaY6pRR9RQ"},
{"content":{"body":" * ptomato: right, but what if you, and 50% of the other committee members, have only moderate doubts about a proposal, and the timebox expires before you raise them","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: right, but what if you, and 50% of the other committee members, have only moderate doubts about a proposal, and the timebox expires before you raise them","m.new_content":{"body":"ptomato: right, but what if you, and 50% of the other committee members, have only moderate doubts about a proposal, and the timebox expires before you raise them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: right, but what if you, and 50% of the other committee members, have only moderate doubts about a proposal, and the timebox expires before you raise them","msgtype":"m.text"},"m.relates_to":{"event_id":"$uaehEfJzWh4omHla-YeKjguo-VO1YXQmBJaY6pRR9RQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630428831352,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qjQNnUXwaXuqczrxnh4n-vWroUl6ivH06dJO6PQ2Sso"},
{"content":{"body":"(not claiming that's what happened here, just raising that it can happen)","msgtype":"m.text"},"ts":1630428838200,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$noCMM8wJReikgZxS0mom7qEIyuoIhddbLTjEWvkUYok"},
{"content":{"body":"then the discussion isn't finished and there's no consensus?","msgtype":"m.text"},"ts":1630428848171,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$nKKGdNBO2F7Z_GrCb_JDam5rfkC9Fi95H7Ax3bkOT48"},
{"content":{"body":"well, maybe we should avoid shortening the timeboxes this meeting, and just cover fewer topics","msgtype":"m.text"},"ts":1630428851620,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$0qYV0CZpqSKoqd1_9hJ_7uxacQ7kq4WKFMk5SZKEhAk"},
{"content":{"body":"if the consensus decisions will keep being questioned afterwards","msgtype":"m.text"},"ts":1630428861876,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$nreBdBaSK2AsPraApkc00jEmxIwbADpCIG48HQqAvtM"},
{"content":{"body":"there's a practical question here for pipeline","msgtype":"m.text"},"ts":1630428890772,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zEpYengY3SYYs08u6C-V-nDqxJeyTHHFCVO6-kh9zHg"},
{"content":{"body":"out of all the delegates with moderate concerns and negative sentiment: do you think you'll block a stage 3? if it's trending that way, best surface that now","msgtype":"m.text"},"ts":1630428920197,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2ptPA8EYZUwBOqDtDjQjwgM3gOQ0q78qXoc4DY0LidQ"},
{"content":{"body":"this really isn't a healthy discussion style, of seeding doubt later about what stage things are really at.","msgtype":"m.text"},"ts":1630428923175,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$2J9JA14tBUO8wGxeKS9xq0a1bi_TVpVQOvNhAPxre8U"},
{"content":{"body":"i agree, that's why i think folks should take stock of how strongly they feel and raise it now","msgtype":"m.text"},"ts":1630428947251,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fOLr0XnnxWoNeU1JGXu4PLk8i3CQ7huN09dfpqHBBfI"},
{"content":{"body":"or hold their peace","msgtype":"m.text"},"ts":1630428950520,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$A-g7I-ciPgKH_l77CdDVuHS0hxUQDSUOnzXcWxvWI0A"},
{"content":{"body":"i don't feel very comfortable objecting again as I did that before and was a lone objector. I am still not super happy with this solution but i can deal","msgtype":"m.text"},"ts":1630428985428,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$1yg-Qrl0W-gslMywf4TXJkIjWSYs9-yr7neDzWGngAw"},
{"content":{"body":"+1 to what Shu said. I *absolutely* want to surface, deal with, and address concerns sooner rather than later. I wanted to settle on the syntax-choice, and afaict once that was done we were in an appropriate place for stage 2, but stage 3 definitely shoudln't be reached until we generally have the committee happy","format":"org.matrix.custom.html","formatted_body":"+1 to what Shu said. I <em>absolutely</em> want to surface, deal with, and address concerns sooner rather than later. I wanted to settle on the syntax-choice, and afaict once that was done we were in an appropriate place for stage 2, but stage 3 definitely shoudln't be reached until we generally have the committee happy","msgtype":"m.text"},"ts":1630429005964,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$WFH_wpk3p2z4_TC15z9UVPpNdI7Z-Ebv2cZAksP8rvw"},
{"content":{"body":"TabAtkins: the committee will not generally be happy with any solution here, I am pretty sure","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: the committee will not generally be happy with any solution here, I am pretty sure","msgtype":"m.text"},"ts":1630429040805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$La4z5TnXoqCrv3eLNysxRyboS7p8qub7EF1dnpQ4PN4"},
{"content":{"body":"including not advancing","msgtype":"m.text"},"ts":1630429043185,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D9divE9l-cMN9PTL4Re3KRjzhu7_XnQiRXR0toTiJ7Q"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1630429050534,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$O1wv2_UQujoDEoNT-sGdHY3-PFCtUyU2_hR2yWxZaQ8"},
{"content":{"body":"is it time for iterator helpers blitz update","msgtype":"m.text"},"ts":1630429196174,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$N07E7VX2voBe70u2UkjEc2Veh4vOm4MTB0dmgb7Snf4"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1630429267229,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$WiGmYKC3q86jHGywEofM2q4Hxgx4TjfeZq262Twccyc"},
{"content":{"body":"can't see slide ?","msgtype":"m.text"},"ts":1630429409844,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$5iivap87JC01Y_Gw6W0MrIsZLKeHZ8NFAEFPuzzD_LM"},
{"content":{"body":"I don't think there are slides?","msgtype":"m.text"},"ts":1630429419260,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$7WfM_QREF3DjL3cTMfZtb0tPxxaQFpeEP_dNu2nTUws"},
{"content":{"body":"can see slide now","msgtype":"m.text"},"ts":1630429425958,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$Pt8pcrsZS7aMzG8YuXGlzIwkidRlOk9qW0_S38I3rGA"},
{"content":{"body":"i see this https://gc.gy/7eb4bbb4-9e91-4496-b159-45c6e872d4bf.png","msgtype":"m.text"},"ts":1630429437359,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nL6MDS-Lxji7zEiqyP3ka_9kR1W43t9dkMdLxQHpYNg"},
{"content":{"body":"oh wait _I_ don't see slides","format":"org.matrix.custom.html","formatted_body":"oh wait <em>I</em> don't see slides","msgtype":"m.text"},"ts":1630429444120,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$qWg7ipVqhkNAxVQQ20bYOHxG27qU3ZPmGh93a5kRg4U"},
{"content":{"body":"that was so fast!","msgtype":"m.text"},"ts":1630429448184,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$xZTTDgj5xRYiwF0rMBINZbfGu4UNWFiYGOYve1RgQzc"},
{"content":{"body":"shu no","msgtype":"m.text"},"ts":1630429460731,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$qKHXrXLXu5egFMlAn4Ez_yQXf3ioH4l7Nr7YVqe_ndc"},
{"content":{"body":"generator return is good","msgtype":"m.text"},"ts":1630429463816,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$haTTQnDfM_Je56K6KfYQ3p9Qe_AJeBy9uSckcxtuhJ0"},
{"content":{"body":"i do not like it","msgtype":"m.text"},"ts":1630429476493,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RO0MiclRWZJiDXCLXaZ6SojmW19Ol6gly0mulYRKlwo"},
{"content":{"body":"üò≠","msgtype":"m.text"},"ts":1630429486558,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$L-_bn_i0bySyGHbJYCsVRHM41_nH7NIOiUEd0dPS-Ts"},
{"content":{"body":"What is generator return?","msgtype":"m.text"},"ts":1630429564867,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$IpB1CwJdRls7U-U17IlNyYoa2U_lvAs-Dgbi_EPc9mk"},
{"content":{"body":"this was one of my first things in TC39, where I proposed 1) Get rid of subclassing RegExps 2) Get rid of generator return","msgtype":"m.text"},"ts":1630429567748,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$I4G3Epk49HDFZwsJBjX_ktdC2JKl74wRlHcAk1a7odk"},
{"content":{"body":"`.return` on generators","format":"org.matrix.custom.html","formatted_body":"<code>.return</code> on generators","msgtype":"m.text"},"ts":1630429575320,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OkAzSkIe28aWxq0WppUKD1a7z4rg1k2cM-l-pG490ck"},
{"content":{"body":"cool to see Shu and Yulia pick up those threads years later","msgtype":"m.text"},"ts":1630429576142,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$Ykkif-BkLjz2hYURil1ZuuLU-SWR2R6dVnXbiRAjHP8"},
{"content":{"body":"injects a return completion at `yield`","format":"org.matrix.custom.html","formatted_body":"injects a return completion at <code>yield</code>","msgtype":"m.text"},"ts":1630429580307,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a-BazAjreXGdNBNqia81KKwSprXIVPBQsYB1oFmDMq8"},
{"content":{"body":"`throw` is the better example though probably; it comes up much more","format":"org.matrix.custom.html","formatted_body":"<code>throw</code> is the better example though probably; it comes up much more","msgtype":"m.text"},"ts":1630429590813,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1qBvuHDZZ9URvZ-gl7kf-4VJ6sahTme4IeDjLWB--ek"},
{"content":{"body":"generator return is key for doing... something","msgtype":"m.text"},"ts":1630429625854,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$bQ-HH6rX3WoVPoOYcK-EHhQscpSZXq0D8qkOEV2emlM"},
{"content":{"body":"cleaning up resources, primarily","msgtype":"m.text"},"ts":1630429696828,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Be8HVjY3NtgYY5bRHfX4wft-uxT6bjMWZ5-5nj-rltg"},
{"content":{"body":"which still seems like it's important to me","msgtype":"m.text"},"ts":1630429701835,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ND7JROyLXWre1DMweK_tsUNr-eiIyXpuyh6fPFJnCQQ"},
{"content":{"body":"```\nfunction* foo() {\n    yield 1;\n    return 2;\n}\n// undefined\nit = foo()\n// foo¬†{<suspended>}\nit.next()\n// {value: 1, done: false}\nit.return(3)\n// {value: 3, done: true}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>function* foo() {\n    yield 1;\n    return 2;\n}\n// undefined\nit = foo()\n// foo¬†{&lt;suspended&gt;}\nit.next()\n// {value: 1, done: false}\nit.return(3)\n// {value: 3, done: true}\n</code></pre>\n","msgtype":"m.text"},"ts":1630429720591,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$t1t3gb2ohI__tE23x7QfDCB4B4Y_aKln8TFuuPkWgh0"},
{"content":{"body":"IteratorClose calls `.return`","format":"org.matrix.custom.html","formatted_body":"IteratorClose calls <code>.return</code>","msgtype":"m.text"},"ts":1630429720745,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$azrz-SKbHYerBuQlCwd9ybd3F4SMSCeNGR4SUw9uyPQ"},
{"content":{"body":"What!","msgtype":"m.text"},"ts":1630429723044,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dyCEE_UG3iT1FhZaQrP7hWmlWWpi-qPztFZ2rdtVjTE"},
{"content":{"body":"oh right iteratorclose calls it","msgtype":"m.text"},"ts":1630429756317,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$wX3unj142StSIebgLcADeewtzStYKFTAjE7lCjRfqIQ"},
{"content":{"body":"i knew it did something","msgtype":"m.text"},"ts":1630429761043,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$LiLXJdyRDhKGXtPrgyfCTgmRonAmR_AP36hYzK91RmE"},
{"content":{"body":"if no `return` it will have memory leak","format":"org.matrix.custom.html","formatted_body":"if no <code>return</code> it will have memory leak","msgtype":"m.text"},"ts":1630429804105,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$CfuMgrZgXW_nCoOYPz3IWoYDZUVfX-QSfa5UqnLwDfQ"},
{"content":{"body":"that depends very highly on what the iterator is doing tho, no?","msgtype":"m.text"},"ts":1630429850359,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Hxm8LjYGaLHJZnwJgdpoBy85ITUGHKMhB2nmMYd1nvU"},
{"content":{"body":"HE Shi-Jun: i think i was wrong there let me get back to you ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: i think i was wrong there let me get back to you","msgtype":"m.text"},"ts":1630429869366,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$p1tMq-SCM7w1G_8B0E8wAjCS7WFLdCbCDVnMiyaTCAo"},
{"content":{"body":"ljharb: if it does not have any resources which need to be cleaned up, sure, it won't leak, tautologically","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: if it does not have any resources which need to be cleaned up, sure, it won't leak, tautologically","msgtype":"m.text"},"ts":1630429874790,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9aNVY3O-4HeKfDmG1JcFVkl9vBb_duJDQm0QQ0jiz-A"},
{"content":{"body":"if it does, it will","msgtype":"m.text"},"ts":1630429878046,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$R1G2AIXKutATYekWzk9vmIJ670PJ519d9CGW84n2A3s"},
{"content":{"body":"we may still pass the next value, i missed the follow up convo, and it looks like we may be primarily looking at throw and return ","msgtype":"m.text"},"ts":1630429906015,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$7TrWPXhLLrcT-LM7A20EzxiTnIWrfUPEM5rAV3w94xk"},
{"content":{"body":"> <@yulia:mozilla.org> HE Shi-Jun: i think i was wrong there let me get back to you\n\noh!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$p1tMq-SCM7w1G_8B0E8wAjCS7WFLdCbCDVnMiyaTCAo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br><a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: i think i was wrong there let me get back to you</blockquote></mx-reply>oh!","m.relates_to":{"m.in_reply_to":{"event_id":"$p1tMq-SCM7w1G_8B0E8wAjCS7WFLdCbCDVnMiyaTCAo"}},"msgtype":"m.text"},"ts":1630429914193,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$cPV7jlUaZE6Q4P-32rpO1aPDU-AeJ2PSuTPaP80P07o"},
{"content":{"body":"specifically: https://github.com/tc39/proposal-iterator-helpers/issues/122#issuecomment-866811008","msgtype":"m.text"},"ts":1630429918550,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$qoJsrhXlrjZgALmmpvW_y9iciLRSWk-Yvp_MiyRktt8"},
{"content":{"body":"yulia: I still not fully get what the changes of iterator-helpers , i need some time to read the issue carefully üòÖ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: I still not fully get what the changes of iterator-helpers , i need some time to read the issue carefully üòÖ","msgtype":"m.text"},"ts":1630430062297,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$d7UnFpk9AFw_MERO980o-kyCgekuWTjNaBTkZkP7QuY"},
{"content":{"body":"hmm, no i think indeed, to pass the yield from next the suggestion was to have a method that calls out that behavior... HE Shi-Jun can you point me to your concern in double ended iterators?","format":"org.matrix.custom.html","formatted_body":"hmm, no i think indeed, to pass the yield from next the suggestion was to have a method that calls out that behavior... <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a> can you point me to your concern in double ended iterators?","msgtype":"m.text"},"ts":1630430075095,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$P1uA8oDE3yS5KPD9MUKpelKpuLpRfCM14R04aIU28vY"},
{"content":{"body":"that is, how it would use the yield","msgtype":"m.text"},"ts":1630430100583,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$lwA6SPy0uE01gi-Z2ArKoRawK_FvbN07GLW4CYcbokU"},
{"content":{"body":"(also good to have this discussion)","msgtype":"m.text"},"ts":1630430126709,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ICs6yk5i_smww_-MjUhBbO7Sd86bMSqi56JKIuVgwQo"},
{"content":{"body":"as a concrete example, calling `.return` on the iterator for a whatwg ReadableStream will close it, which can release e.g. network resources. if `for await (let chunk of stream[Symbol.asyncIterator]().map(x => x) break;` does not close the stream, that seems bad.","format":"org.matrix.custom.html","formatted_body":"as a concrete example, calling <code>.return</code> on the iterator for a whatwg ReadableStream will close it, which can release e.g. network resources. if <code>for await (let chunk of stream[Symbol.asyncIterator]().map(x =&gt; x) break;</code> does not close the stream, that seems bad.","msgtype":"m.text"},"ts":1630430174853,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ju2tn_-jrEufxQhXjj4wbOP9UF6qQKYHsyiSzpX3Ezw"},
{"content":{"body":"I guess I should post that on the issue.","msgtype":"m.text"},"ts":1630430181194,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E5PpaH9NJmylP3rldIo7w8OUwtwIkFRGxVJ6g0isU0Y"},
{"content":{"body":"looks like domenic has a similar concern...","msgtype":"m.text"},"ts":1630430223601,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Q7QsVBKUE1NH3As-n0O4BiT8QOhAAvivkMZ_FwU_ZqY"},
{"content":{"body":"hah, he literally just posted that, excellent","msgtype":"m.text"},"ts":1630430243446,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mXj3R4mh5HtVvciUMR7wNcMINlc9yFQeaWgBkyYrHEU"},
{"content":{"body":"`let streams_fr = new FinalizationRegistry((stream) => stream.dispose())` ü§°","format":"org.matrix.custom.html","formatted_body":"<code>let streams_fr = new FinalizationRegistry((stream) =&gt; stream.dispose())</code> ü§°","msgtype":"m.text"},"ts":1630430288626,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2_CP8vhJVdbiHUYEjiMCNylch5H8Co5Nw6BZrIWT8dY"},
{"content":{"body":"this was the original reason that domenic and i wanted passing the protocol","msgtype":"m.text"},"ts":1630430298181,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$GsvEUU3g9EEiAoQPgY8KhveRy8jJVyojZKDEtndpI_s"},
{"content":{"body":"bakkot: is it ok if i quote your comment? ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: is it ok if i quote your comment?","msgtype":"m.text"},"ts":1630430308127,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$nqD7jST7AnWQuCc-bEyL2mrmNDkl-8sDg1OAL3axW5w"},
{"content":{"body":"yulia: go for it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: go for it","msgtype":"m.text"},"ts":1630430312985,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tPBUa0ujYyJVrD_wHOXcNQluryOymoTtuBa7zL1oJxY"},
{"content":{"body":"though I think it's just what domenic said","msgtype":"m.text"},"ts":1630430322604,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dkHxdQE-xcFqzPauKWL6PE79Xn8AwKT5fvwuNKl37Mg"},
{"content":{"body":"domenic didn't say it cleans up a network request","msgtype":"m.text"},"ts":1630430345879,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$WmVQ8_VpgrsW-4eDWhoTiLG1fYtQP58WM7LGfn_Ap6U"},
{"content":{"body":"which is very motivating imo","msgtype":"m.text"},"ts":1630430352424,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$Kjqa8CJVpyJfOIZYlAiMi2xbrE9KUd6fbMErC2Dt08k"},
{"content":{"body":"> <@yulia:mozilla.org> hmm, no i think indeed, to pass the yield from next the suggestion was to have a method that calls out that behavior... HE Shi-Jun can you point me to your concern in double ended iterators?\n\ndeiter rely on `param` in `next(param)`. So if iterator helpers pass the param then `let [a, ..., b] = [1,2,3].values().map(x => x*x)` just works (a will be 1, b will be 9) ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$P1uA8oDE3yS5KPD9MUKpelKpuLpRfCM14R04aIU28vY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>hmm, no i think indeed, to pass the yield from next the suggestion was to have a method that calls out that behavior... <a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a> can you point me to your concern in double ended iterators?</blockquote></mx-reply>deiter rely on <code>param</code> in <code>next(param)</code>. So if iterator helpers pass the param then <code>let [a, ..., b] = [1,2,3].values().map(x =&gt; x*x)</code> just works (a will be 1, b will be 9)","m.relates_to":{"m.in_reply_to":{"event_id":"$P1uA8oDE3yS5KPD9MUKpelKpuLpRfCM14R04aIU28vY"}},"msgtype":"m.text"},"ts":1630430360264,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$1fNYzI81bBMdIwlUV4jr-tT4K6SPSQGdWs7iK6gt3CE"},
{"content":{"body":"ok, ill quote that in as well","msgtype":"m.text"},"ts":1630430372348,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$uhWlYfKyZ-xqhqpUsgksvwUw7NQ5V-NWblsyONDykfo"},
{"content":{"body":"yulia: Note last time I checked iterator helpers, there is a issue that the first next(param) call is missing.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: Note last time I checked iterator helpers, there is a issue that the first next(param) call is missing.","msgtype":"m.text"},"ts":1630430416649,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$NxTlDRTPxXZc4Pt2MnLu5XYAkLbvxOf2-_9P7hyitw8"},
{"content":{"body":"yulia: fwiw i continue to have zero idea what \"pass the protocol\" means, every time i see it; i wonder if there's a clearer phrasing that could be used to discuss that issue?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: fwiw i continue to have zero idea what &quot;pass the protocol&quot; means, every time i see it; i wonder if there's a clearer phrasing that could be used to discuss that issue?","msgtype":"m.text"},"ts":1630430420094,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DWGrO7Xucr3nvWXrPfck6a9aKVbp9nouaVmGyeTMBa8"},
{"content":{"body":"passing the protocol is referring to passing the iterator protocol, that is `return`, `throw`, and  that `next` takes a value","format":"org.matrix.custom.html","formatted_body":"passing the protocol is referring to passing the iterator protocol, that is <code>return</code>, <code>throw</code>, and  that <code>next</code> takes a value","msgtype":"m.text"},"ts":1630430454183,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$K9QZudiQzbyC9ZZPaqYIPbHMP1wQOHc86eJwwVAaHeU"},
{"content":{"body":"\"implementing the extended iterator protocol\"","msgtype":"m.text"},"ts":1630430466284,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$KJovfenwYF5AipNU-ggEI8fShqsNUFJpuETQ2NYD4z0"},
{"content":{"body":"you can pass a first-class thing, a protocol is not a first-class thing, so it confuses me (because you can't actually pass a protocol, eg)","msgtype":"m.text"},"ts":1630430485680,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Xm0PZOTb5eF1uJX6oIIVYIqVDWQmLlNGqJtX4LU0zwY"},
{"content":{"body":"good feedback, thank you everyone","msgtype":"m.text"},"ts":1630430487695,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Tjp1lGmURSmrI1wbykU_X4Lv8_VR5IlNYhFMSav0CnQ"},
{"content":{"body":"Oh yeah, I didn't read \"pass the protocol\" as meaning \"implement\" either, I thought it was about argument-passing something.","msgtype":"m.text"},"ts":1630430501973,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$fnp2_tS8IYGgjiakOBEHTNexn9TWTtXf7jGpEV60Zkw"},
{"content":{"body":"well, streams would \"work\" if you need an opt in as an argument","msgtype":"m.text"},"ts":1630430535644,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1gZp3OmBb0VCH-8UG1oW75z9DYHsSlU7HJMsiPRP_3o"},
{"content":{"body":"that would be a pretty clunky API though i suppose","msgtype":"m.text"},"ts":1630430540552,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dep2ivJ_2Ii96swV7XeN4Ebbf7IhIa_QhW97Ef8cIbc"},
{"content":{"body":" * you can pass a first-class thing, a protocol is not a first-class thing, so it confuses me (because you can't actually pass a protocol, eg)","m.new_content":{"body":"you can pass a first-class thing, a protocol is not a first-class thing, so it confuses me (because you can't actually pass a protocol, eg)","msgtype":"m.text"},"m.relates_to":{"event_id":"$Xm0PZOTb5eF1uJX6oIIVYIqVDWQmLlNGqJtX4LU0zwY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630430565194,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$w3WHVLTv2DhJw5LjhhFfkhmGkUxe1XA5F9vjxu_TqMY"},
{"content":{"body":"‚ÄúDelegating to the protocol‚Äù perhaps?","msgtype":"m.text"},"ts":1630430569579,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$YDTVAuD61L8-RuWDkk8mNSWzPX6Gh7C0Cszpvta1HH4"},
{"content":{"body":"ljharb: > a protocol is not a first-class thing\n\nnot yet!","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: &gt; a protocol is not a first-class thing</p>\n<p>not yet!</p>\n","msgtype":"m.text"},"ts":1630431425821,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jS9vjsj9lH-VLrZpOTg8PDQtramNs8vm00OGzug0kr0"},
{"content":{"body":"jschoi: would you be able to present asyncFrom at ~15:20?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: would you be able to present asyncFrom at ~15:20?","msgtype":"m.text"},"ts":1630431472707,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$Y1dtsH5vJmoApw2197FU5UvsLB2k4a-oEP-hXx8-zGs"},
{"content":{"body":"Michael Ficarra still super waiting for you to bring it back to committee","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> still super waiting for you to bring it back to committee","msgtype":"m.text"},"ts":1630431475384,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aI_qwTh0KXS2gi6sUhrT2C-fmxXr0mA8cGrPuU3UM1M"},
{"content":{"body":"ditto","msgtype":"m.text"},"ts":1630431522923,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$9cYZAimkpIffoh4HmisGd-AZMqYJ4dfobu3bKcawdK0"},
{"content":{"body":"bterlson: I can do it. Would a chair be able to manage the slides for me?","msgtype":"m.text"},"ts":1630431527009,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$V2t1s1ffNygx78g8xkzAOsmIGO5dCOBMToZS-K3w35w"},
{"content":{"body":"i want the protocol proposal","msgtype":"m.text"},"ts":1630431607727,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$fVTlTsotnyt_Z33Z9zAhoiScVK6a5Nc6s8EV7AcdFvw"},
{"content":{"body":"jschoi: I can help with that sure. You just need me to present them?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: I can help with that sure. You just need me to present them?","msgtype":"m.text"},"ts":1630431608477,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$IhzQ41FFuox701Y_YowWblrAgcTChCVW2MmKw74JrP4"},
{"content":{"body":"ljharb yulia devsnek: I would love to, I just need more time to do it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: I would love to, I just need more time to do it","msgtype":"m.text"},"ts":1630431670909,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$REDT9dCV0fuu8ZTVDvfy_rvUOQQ2v6g-XiX3UfHrnNA"},
{"content":{"body":"maybe after this term as editor, I will feel satisfied with the state of the spec and replace that work with protocols proposal work","msgtype":"m.text"},"ts":1630431690790,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_f8HHhY65T3JAbP0Los2amwFfv2QL5pEcfW37W-KwFc"},
{"content":{"body":"true facts about tc39 delegates","msgtype":"m.text"},"ts":1630431697459,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LcPlnAC60Ts85eIzHyzrui-LwcqMFVqEtLNPK4XpGZI"},
{"content":{"body":"bterlson: Yeah, but I can try screen sharing myself first. I just might run into problems.","msgtype":"m.text"},"ts":1630431706917,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$YM4puMkBtSfLNGri8Rs4ymzplPY3ZWJeF9a_MlS_zkk"},
{"content":{"body":" * true facts about tc39 delegates (\"would love to, need more time\")","m.new_content":{"body":"true facts about tc39 delegates (\"would love to, need more time\")","msgtype":"m.text"},"m.relates_to":{"event_id":"$LcPlnAC60Ts85eIzHyzrui-LwcqMFVqEtLNPK4XpGZI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630431712179,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$isMBGiByV6hiBo2Rj2T4gwQzQP_jFSJMXJrm3iwqBuQ"},
{"content":{"body":"> <@michaelficarra:matrix.org> maybe after this term as editor, I will feel satisfied with the state of the spec and replace that work with protocols proposal work\n\nthere's so much to be done yet...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$_f8HHhY65T3JAbP0Los2amwFfv2QL5pEcfW37W-KwFc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>maybe after this term as editor, I will feel satisfied with the state of the spec and replace that work with protocols proposal work</blockquote></mx-reply>there's so much to be done yet...","m.relates_to":{"m.in_reply_to":{"event_id":"$_f8HHhY65T3JAbP0Los2amwFfv2QL5pEcfW37W-KwFc"}},"msgtype":"m.text"},"ts":1630431717528,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6x5TRks-wkd-FYnmL_21u4ebEHDVG8fHmA3ig9E7KCw"},
{"content":{"body":"jschoi: ok no problem, I will be able to present if you cannot.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: ok no problem, I will be able to present if you cannot.","msgtype":"m.text"},"ts":1630431724124,"senderName":"bterlson","senderId":"@bterlson:matrix.org","id":"$DprS_H15hQWfdZnv2Mudyn41E4sXoRiVxAdTLuqf00I"},
{"content":{"body":"though it is finite, at least","msgtype":"m.text"},"ts":1630431724348,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EKiHb6NW83KNytEDryYVLU7bLQcb1QJqadheBleRH9o"},
{"content":{"body":"bakkot: yes, it's unlikely; probably after the *next* term","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: yes, it's unlikely; probably after the <em>next</em> term","msgtype":"m.text"},"ts":1630431743408,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$RUWp66yI7xlFYmMBDIIV4QgYNm3vQqyRib_sOfFHOMQ"},
{"content":{"body":"i do not love having a meaningfully different third mode","msgtype":"m.text"},"ts":1630431969787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2ceFpjUEJK0ahHRppjXBXXBqVLupymhYvbsOKGK7bvo"},
{"content":{"body":"I was hoping `v` would just be `u` with some tiny changes to syntax you weren't using, like `&`","format":"org.matrix.custom.html","formatted_body":"I was hoping <code>v</code> would just be <code>u</code> with some tiny changes to syntax you weren't using, like <code>&amp;</code>","msgtype":"m.text"},"ts":1630431991255,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4svtvrqyJYoEMr9IFbfSveRBrXKwk6RF9hkwB3-hV0A"},
{"content":{"body":"having it change the semantics of `\\d` seems like a whole new mode to learn","format":"org.matrix.custom.html","formatted_body":"having it change the semantics of <code>\\d</code> seems like a whole new mode to learn","msgtype":"m.text"},"ts":1630432005860,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6sGBDCNgGJddOoIhLjOc7RIM4rXG9uVdsiwFD7nbS_4"},
{"content":{"body":" * I was hoping `v` would just be `u` with some tiny changes to syntax you weren't using, like `&&`","format":"org.matrix.custom.html","formatted_body":" * I was hoping <code>v</code> would just be <code>u</code> with some tiny changes to syntax you weren't using, like <code>&amp;&amp;</code>","m.new_content":{"body":"I was hoping `v` would just be `u` with some tiny changes to syntax you weren't using, like `&&`","format":"org.matrix.custom.html","formatted_body":"I was hoping <code>v</code> would just be <code>u</code> with some tiny changes to syntax you weren't using, like <code>&amp;&amp;</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$4svtvrqyJYoEMr9IFbfSveRBrXKwk6RF9hkwB3-hV0A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630432019212,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xeReHDDAHifYf4PjBY6P-eVurIqwo3whSjtBS-e3eUg"},
{"content":{"body":"bakkot: same, I am not so sure about this","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: same, I am not so sure about this","msgtype":"m.text"},"ts":1630432021464,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$P2oOSgJKShYuk3UPF8Aa3ZcaFxuPCa63PNJt1SsaGmU"}
]