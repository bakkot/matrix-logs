[
{"content":{"body":"oops, yes, I meant June, sorry","m.relates_to":{"event_id":"$C-O-70snRWYMiTCRjUwWC-mrY2ZgLXc9LYWfDIkdmOU","is_falling_back":true,"m.in_reply_to":{"event_id":"$kpyFkoH5OjVgigTnKkERByXv0LXzcywTx174f3awpvM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1686897070122,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$cBLBxYZkFnwPvO-xbv63k0RrpAT9JA9v0pZ-ELot2Bw"},
{"content":{"body":"one unfortunate about grouping being static methods is that the fast path got more tricky to reason about","msgtype":"m.text"},"ts":1686948333259,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zzf_Y8AeypLr0oyV0Ypw-vWUlyw34_JtMuDEC1tY8zE"},
{"content":{"body":"because of the iterables thing","msgtype":"m.text"},"ts":1686948450411,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EM1s-inK7B6uqfGOJp2U1AULmuuPcWSNfrjIcnjQALE"},
{"content":{"body":"shu: would it get easier if we froze the `next` method on ArrayIteratorPrototype","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: would it get easier if we froze the <code>next</code> method on ArrayIteratorPrototype","msgtype":"m.text"},"ts":1686948577512,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GvTj1ezN1K8DLurShzqxTYwhJ_oBR7fRhUTbbo_SrFo"},
{"content":{"body":"if so can we just do that","msgtype":"m.text"},"ts":1686948585548,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LMtGOyEXNhJhJoi5d7-egq63SK_3Wdom6hZ2KRYrHgI"},
{"content":{"body":"(also also the `Symbol.iterator` method on Array.prototype I guess)","format":"org.matrix.custom.html","formatted_body":"(also also the <code>Symbol.iterator</code> method on Array.prototype I guess)","msgtype":"m.text"},"ts":1686948602716,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dIHqJ5bRqUdlo5BPfYv_ysu4W6nWLtICMfBhaZTSIkg"},
{"content":{"body":" * (and also the `Symbol.iterator` method on Array.prototype I guess)","format":"org.matrix.custom.html","formatted_body":" * (and also the <code>Symbol.iterator</code> method on Array.prototype I guess)","m.new_content":{"body":"(and also the `Symbol.iterator` method on Array.prototype I guess)","format":"org.matrix.custom.html","formatted_body":"(and also the <code>Symbol.iterator</code> method on Array.prototype I guess)","msgtype":"m.text"},"m.relates_to":{"event_id":"$dIHqJ5bRqUdlo5BPfYv_ysu4W6nWLtICMfBhaZTSIkg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1686948605277,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ED5I9_UqhboPbRaLYsx9aTPHhh01ZLjuwvS_V4wq2Q8"},
{"content":{"body":"well we already cache an IteratorRecord so mutations to the iterator or the prototype during iteration won't be reflected","msgtype":"m.text"},"ts":1686948704304,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$XaN3jjJlemgPanWUIv9wfWAlC_e3awoX8EnxUPNX2l8"},
{"content":{"body":"i don't think we need to do anything, i'm just venting","msgtype":"m.text"},"ts":1686948741688,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3yMTRsPUCKFDFMb9ejg_Z6aQzIN799Je3hK-A1JJGtQ"},
{"content":{"body":"We wouldn’t have to freeze it if we made IsArray things that weren’t proxies or subclasses always call the intrinsic next/Symbol.iterator :-p","msgtype":"m.text"},"ts":1686950023782,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$P3YhJO5P_Ke2_AgGs7fNDAq9vxW9W_velRldZK37FnQ"},
{"content":{"body":"> <@ljharb:matrix.org> We wouldn’t have to freeze it if we made IsArray things that weren’t proxies or subclasses always call the intrinsic next/Symbol.iterator :-p\n\nThis would be a very implementation-friendly change (well, a lot to do at this point but it would allow engines to rip out a number of annoying fast paths)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24P3YhJO5P_Ke2_AgGs7fNDAq9vxW9W_velRldZK37FnQ\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>We wouldn’t have to freeze it if we made IsArray things that weren’t proxies or subclasses always call the intrinsic next/Symbol.iterator :-p</blockquote></mx-reply>This would be a very implementation-friendly change (well, a lot to do at this point but it would allow engines to rip out a number of annoying fast paths)","m.relates_to":{"m.in_reply_to":{"event_id":"$P3YhJO5P_Ke2_AgGs7fNDAq9vxW9W_velRldZK37FnQ"}},"msgtype":"m.text"},"ts":1686955614164,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GIddJouB3V1-Ka0uk4FwKKNWx0k8nKLNODmgQ_AtEuY"},
{"content":{"body":"Except I don’t understand the “that aren’t proxies or subclasses” part, what the line would be","msgtype":"m.text"},"ts":1686955659837,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rxMP77Jvo0Xns3Ghth4chQMwx23JSWl0EHTzWqXqR0o"},
{"content":{"body":"No idea if any change there is web compatible ","format":"org.matrix.custom.html","formatted_body":"No idea if any change there is web compatible","msgtype":"m.text"},"ts":1686955674920,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vYDa0dNUqpwgcPi9j6KJpi6yv6hkpI06-Q83k-Hcm6M"},
{"content":{"body":"i mean like, a proxy to an array would still need to generate the Gets, as would a subclass, to be web compatible","msgtype":"m.text"},"ts":1686956013510,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LsQJ5Aql1331HgfB0_l08uQ8KpjmMzmAxDrJSxlDsWE"}
]