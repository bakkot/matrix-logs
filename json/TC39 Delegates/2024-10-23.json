[
{"content":{"body":"I suppose it's easier to prove that an interpreter can only affect the heap of the interpreted language in the first place? At that point an explicit heap sandbox may be redundant? ","m.mentions":{},"msgtype":"m.text"},"ts":1729648050627,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$T65G_Zkcl7gevri5bcibMTfEpuD3Pxez_oxWnRoYWjY"},
{"content":{"body":"That's possibly where writing an interpreter in a memory safe language would help: you can reason that the only memory you can reach is the one allocated to represent the heap of the language you're interpreting.","m.mentions":{},"msgtype":"m.text"},"ts":1729648173716,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$mYzD6sdg4zQSk66IEcraKO5qW_He_UC6dUD8IqMh6Jg"},
{"content":{"body":"of course you can still have bugs in the interpreter that would break the memory safety of the language you're interpreting. but you can't escape out to affect the memory of the rest of the process.","m.mentions":{},"msgtype":"m.text"},"ts":1729648286824,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$wNHY_m-TTjRKOebSk0_93FBhKOKEpggd5BHAo1RfjsA"},
{"content":{"body":"> <@mhofman:matrix.org> That's possibly where writing an interpreter in a memory safe language would help: you can reason that the only memory you can reach is the one allocated to represent the heap of the language you're interpreting.\n\nif the memory safe language is a GCed language you still want a sandbox around *that* heap","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mYzD6sdg4zQSk66IEcraKO5qW_He_UC6dUD8IqMh6Jg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>That&#39;s possibly where writing an interpreter in a memory safe language would help: you can reason that the only memory you can reach is the one allocated to represent the heap of the language you&#39;re interpreting.</blockquote></mx-reply>if the memory safe language is a GCed language you still want a sandbox around <em>that</em> heap","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mYzD6sdg4zQSk66IEcraKO5qW_He_UC6dUD8IqMh6Jg"}},"msgtype":"m.text"},"ts":1729652626086,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pPT7J60LAhwivTwsOArjZp2slBZU9IqFYnbzH_5Au_A"},
{"content":{"body":"like, the target GCed language's GC heap","m.mentions":{},"msgtype":"m.text"},"ts":1729652638319,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6Pby4TH33SOHvd4j8lUU_nLK6rL59Dvn2Z5d9pjZWl8"},
{"content":{"body":"> <@mhofman:matrix.org> of course you can still have bugs in the interpreter that would break the memory safety of the language you're interpreting. but you can't escape out to affect the memory of the rest of the process.\n\nwhy not?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$wNHY_m-TTjRKOebSk0_93FBhKOKEpggd5BHAo1RfjsA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>of course you can still have bugs in the interpreter that would break the memory safety of the language you&#39;re interpreting. but you can&#39;t escape out to affect the memory of the rest of the process.</blockquote></mx-reply>why not?","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wNHY_m-TTjRKOebSk0_93FBhKOKEpggd5BHAo1RfjsA"}},"msgtype":"m.text"},"ts":1729652659489,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9C3nK7vBWm2V7lLUQxu6kyEpfR5y3cNp7DVxeBK934w"},
{"content":{"body":"it depends on how the underlying memory safe language's memory safety is implemented, right?","m.mentions":{},"msgtype":"m.text"},"ts":1729652672244,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tgau_eYv_ocjQnkU5vYhcEzDm0nEk2VpxTrR64LkgMI"},
{"content":{"body":"Right that assumes the interpreter is implemented in a memory safe language ","msgtype":"m.text"},"ts":1729652805063,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Y_JnVbDxWOcDoWE2PM2vM_W2BuklhpLjFhHcG8GbOao"},
{"content":{"body":"But I don't see how the fact the interpreted language is GCed is relevant here. ","msgtype":"m.text"},"ts":1729652876875,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$NbrDIMveHswIXCGWB0ePeZq2hvU1U7kN3pcNGUmwPNE"},
{"content":{"body":"And if it's the language of the interpreter that is GCed, of course it assumes that language is memory safe, including its GC","msgtype":"m.text"},"ts":1729653034713,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$KfDhJrrKrEkUZ32kyYX_X95EiBu4ccry6wXC_07iXzU"},
{"content":{"body":"I would really love to have the GraalJS people actually come talk to us sometimes","msgtype":"m.text"},"ts":1729653455091,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Y-uoUlYRQFjoTR-IXPFX3hWOPn3ifZLz76nh7nxSTss"},
{"content":{"body":"they've been to at least one meeting!","m.mentions":{},"msgtype":"m.text"},"ts":1729654165685,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iSArC__aV3jvNj-Fen9tyXMYA6E2QBw7NKTPSroVfT8"},
{"content":{"body":"I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0?","msgtype":"m.text"},"ts":1729660602257,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$LE_RB-sAd2OzBJO-tau6OBlTMzNk3XPuzP_QKrWN-ko"},
{"content":{"body":"* I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser's internals?","m.new_content":{"body":"I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser's internals?","msgtype":"m.text"},"m.relates_to":{"event_id":"$LE_RB-sAd2OzBJO-tau6OBlTMzNk3XPuzP_QKrWN-ko","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729660731596,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$L462hAyCRrV6GlqPnWyJxRHdK8cXv3U420iKrqQBZVY"},
{"content":{"body":"* I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser internals?","m.new_content":{"body":"I feel like I don't quite understand the proposed separation as it relates specifically to browsers. when I added nullish things to V8, the changes were purely in the parser and bytecode generator. I had a separate change later to the lower down parts to add a new \"is null or undefined\" op. isn't this already basically jssugar/js0? why does it need to be externalized to tooling rather than a separation within browser internals?","msgtype":"m.text"},"m.relates_to":{"event_id":"$LE_RB-sAd2OzBJO-tau6OBlTMzNk3XPuzP_QKrWN-ko","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729660751139,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$pM_w2evsMxRH5J9DHMNQNZlzYfLlmnDp1lBm0ejbfGM"},
{"content":{"body":"Michael Ficarra: i skimmed it and what i gathered was that their JIT is an automagic transformation of the interpreter plus some speculative optimizations. i guess how practically applicable that is depends on [among other things] whether we can express all the needed speculative optimizations (object shapes and such) via their API or not.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: i skimmed it and what i gathered was that their JIT is an automagic transformation of the interpreter plus some speculative optimizations. i guess how practically applicable that is depends on [among other things] whether we can express all the needed speculative optimizations (object shapes and such) via their API or not.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1729669466754,"senderName":"Marja Hölttä (not here, use marja@google.com)","senderId":"@marjakh:matrix.org","id":"$M55_zokHopZz6CLQy_YEkkjLNrE9S4ZF5GOfoQEFQIY"},
{"content":{"body":"bakkot: looks like the Matrix log archives are not updating","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: looks like the Matrix log archives are not updating","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1729701707965,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$D5lBDPhjajqIadrY0s27rjUF1wgJCYLM2gVgr-w48qc"},
{"content":{"body":"Mathieu Hofman: ugh, thanks, looks like they changed the API or I'm running into an edge case I hadn't before","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>: ugh, thanks, looks like they changed the API or I'm running into an edge case I hadn't before","m.mentions":{"user_ids":["@mhofman:matrix.org"]},"msgtype":"m.text"},"ts":1729701801280,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hq5qyv5Nw529Ttk893I4mtcGVdugBC1kmQ-Pu_qIYhc"},
{"content":{"body":"will fix it sometime in the next couple of days and it'll catch up","m.mentions":{},"msgtype":"m.text"},"ts":1729701816867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PmsLveS5HQxUQ6RgKE2EDhBqcp1fd0-ug22FI_DYuoo"},
{"content":{"body":"I have alerting for this sort of thing but it's on a 24hr lag","m.mentions":{},"msgtype":"m.text"},"ts":1729701854787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HoDaGe7drTKBHzns1k9mEAobmklRppkz1BnWQACHROc"},
{"content":{"body":"lol the notes say \"U4 of\" instead of \"you for-of\"","m.mentions":{},"msgtype":"m.text"},"ts":1729704254179,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$kuTx7hunYJpSCBWI7UNcwxaovDzeUHzi11o-VnNQ7X8"},
{"content":{"body":"could go a step further and make it \"U4've\"","m.mentions":{},"msgtype":"m.text"},"ts":1729706054701,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$030YOdscDbsoy7KobgcHFQbUMFv3qa2JEI1f7_t0hLA"}
]