[
{"content":{"body":"https://es.discourse.group/t/atomics-wait-waitasync-as-native-settimeout/1120 seems interesting; cc erights - would it maybe be possible to specify setTimeout in the language?","msgtype":"m.text"},"ts":1639328712669,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$lPLY76A9D4wuGQADuYPUPjty9xyp_QOlTHgR_MITY4c"},
{"content":{"body":"> <@ljharb:matrix.org> https://es.discourse.group/t/atomics-wait-waitasync-as-native-settimeout/1120 seems interesting; cc erights - would it maybe be possible to specify setTimeout in the language?\n\nI thought that idea was already rejected","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$lPLY76A9D4wuGQADuYPUPjty9xyp_QOlTHgR_MITY4c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />https://es.discourse.group/t/atomics-wait-waitasync-as-native-settimeout/1120 seems interesting; cc erights - would it maybe be possible to specify setTimeout in the language?</blockquote></mx-reply>I thought that idea was already rejected","m.relates_to":{"m.in_reply_to":{"event_id":"$lPLY76A9D4wuGQADuYPUPjty9xyp_QOlTHgR_MITY4c"}},"msgtype":"m.text"},"ts":1639328766860,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$JCCumAfquRX15TnqXO6s0xzL3Eg-g_vfKn8jmDdZCZ4"},
{"content":{"body":"This post is interesting but it requires SAB and worker (?) so it isn't so useful","msgtype":"m.text"},"ts":1639328908006,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$zNzDuCWCFyzyHj7FFgqOCU4pQPLyQPdN1JSoQTKxKOw"},
{"content":{"body":"It doesn’t appear to require a worker","msgtype":"m.text"},"ts":1639329554444,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2ZqxSHfvfTw7TRX-P8kjqmsGIipVx33HBD_oyYBfbHY"},
{"content":{"body":"it was rejected for a number of reasons, but one was that there’s no concept of time like this in the spec - but if Atomics.waitAsync already provided it - iow, if setTimeout can be polyfilled without using new Date/Date.now, and with only things in 262 - I’m not sure what the remaining reasons would be to reject it.","msgtype":"m.text"},"ts":1639329616563,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Hjhz0q1PahIOHJomAsCV-4rMmoxXey7SAUM3npy3rtg"},
{"content":{"body":"So his polyfill dont need current thread to be blockable? ","msgtype":"m.text"},"ts":1639329727586,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$eA9Jl9zsHutXwqDKEFVJlMKcwQIDML_dR4xFHpc4BQw"},
{"content":{"body":"And is Atomics normative optional? ","msgtype":"m.text"},"ts":1639329753626,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EEA-sIyX3VBC_b-ioJvXWD8u_5EC9KH-XIFInOBHtT0"},
{"content":{"body":"`waitAysnc` works on the main thread, yeah; that's the point of it","format":"org.matrix.custom.html","formatted_body":"<code>waitAysnc</code> works on the main thread, yeah; that's the point of it","msgtype":"m.text"},"ts":1639329865556,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xH5kJ-6Nap4AF923Gx975FQXihwYwZvcWFkn65oQefM"},
{"content":{"body":"and no, atomics is not normative optional","msgtype":"m.text"},"ts":1639329891376,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UB54ZzMcOcb3LANmkaTzBIQDg5JM0r9rLqD9FRO0KPE"},
{"content":{"body":"Hmm. SAB is normative optional and Atomics only works with SAB, is that true? ","msgtype":"m.text"},"ts":1639329960502,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$T9XvzMwrb4Qr3oqflpVWuc50ByFGfrecBv37kEf-ryM"},
{"content":{"body":"SAB is not exactly normative optional, though it's complicated","msgtype":"m.text"},"ts":1639330244870,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bhNBoPCNO8VHF6bB6V1gAG1dRPAJjqjHFncaAVMzoqs"},
{"content":{"body":"the \"SharedArrayBuffer\" property of the global object is normative optional in hosts which do not provide multithreading, and that's the only built-in way to get access to a SAB in ES, but other hosts provide other mechanisms to get at it","msgtype":"m.text"},"ts":1639330305878,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uYPMiW1aRIPPGtmDBmxVXndG5aiu7oEedgYFD4BJCOQ"},
{"content":{"body":"also the only reason we made that change was web-compat when everyone turned off SABs for a while because of spectre","msgtype":"m.text"},"ts":1639330332497,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X643rFpzGGj06fm39I8ItahOiHSG8ruC58Lhk6BuOdM"},
{"content":{"body":"Is there any case that SAB is not exposed on global but will be returned by a host API? ","msgtype":"m.text"},"ts":1639330493872,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$VQmLaWNjNEu0XokTX3ErGirbr9NSAFuOTteuPOvip-Q"},
{"content":{"body":"yes, let me dig it up","msgtype":"m.text"},"ts":1639330531684,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ITkVo03Drr-TbZnQyOWUUxtL9DM4VXU2JnpDInYJyV8"},
{"content":{"body":"`new WebAssembly.Memory({ shared:true, initial:0, maximum:0 }).buffer.constructor`","format":"org.matrix.custom.html","formatted_body":"<code>new WebAssembly.Memory({ shared:true, initial:0, maximum:0 }).buffer.constructor</code>","msgtype":"m.text"},"ts":1639330573227,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WX9lGGKbO5_XKHUIb09GAqge5Pg6CnliJrsE5SsdHaM"},
{"content":{"body":"And it can be called to create new SAB? ","msgtype":"m.text"},"ts":1639330593885,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$jNpw5_4s62uzOihc8b0Y6AVaxWIRSZBS6LqYJ2rWJnE"},
{"content":{"body":"works even when multithreading is disabled","msgtype":"m.text"},"ts":1639330593945,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$q5wKjDClJ8OeZtdpeivQb3pRcwoAso9PmKxRRayYEWk"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1639330598594,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CgVHCBgRm67OoAJyoLjU0ISNemImsZgTYN4UApOiiZM"},
{"content":{"body":"It's crazy","msgtype":"m.text"},"ts":1639330606550,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YGqmTHRqimo18Schwn6Q5YeBKqZs969yE9cOGCCe79A"},
{"content":{"body":"Then what's the meaning of hiding it... ","msgtype":"m.text"},"ts":1639330637598,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$nE0aHWTIHADa-0dbcmAdDo5Tc8AbrnRAf0tockQM9Ho"},
{"content":{"body":"web compat","msgtype":"m.text"},"ts":1639330659497,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iphla_xIM6APvQQzwwyCRNoFFjq2SmUhVGmMKlJeIuE"},
{"content":{"body":"like I said","msgtype":"m.text"},"ts":1639330661741,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4i6mBsLm7DltUi6UIkydS1yMZgumR7Bgd9O3tV7EPtg"},
{"content":{"body":"a lot of code assumes that if the SAB constructor was present then they could do multithreading, and had a fallback for when it was not available","msgtype":"m.text"},"ts":1639330690161,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_AbYsY1YKSKXgp1gSzPRsnT2X9aCaFlBLhZrlbX4JIM"},
{"content":{"body":" * a lot of code assumes that if the SAB constructor was present then they could do multithreading, and had a fallback for when it was not available","m.new_content":{"body":"a lot of code assumes that if the SAB constructor was present then they could do multithreading, and had a fallback for when it was not available","msgtype":"m.text"},"m.relates_to":{"event_id":"$_AbYsY1YKSKXgp1gSzPRsnT2X9aCaFlBLhZrlbX4JIM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1639330698868,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vwgnYytlYE4cVfFx8wRww9znbAVrUt2_jxbWKTB-6ZI"},
{"content":{"body":"so when browsers turned of multithreading, for spectre, they needed to also remove the SAB property of the global","msgtype":"m.text"},"ts":1639330718185,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RcFXFL6iXe3JWTUDxjyQPEEmL6PxDMPED5AxTT0ivWQ"},
{"content":{"body":"note that just getting an SAB doesn't give you the ability to do multithreading","msgtype":"m.text"},"ts":1639330726632,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$I8nmCfMUoEuhejtbgLruWDpT7OsWkxJRiGOTpTkujRU"},
{"content":{"body":"I mean, if they want to hide SAB, why not hide it completely but leave an escape path in WebAssembly","msgtype":"m.text"},"ts":1639330736896,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$r3Y3U91AEoNwqAgGwNsCEcxB32pQZU5sx3bNJfwnzck"},
{"content":{"body":"they don't want to hide SAB","msgtype":"m.text"},"ts":1639330743798,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VXlK2gyboKJrSbPToY9Mg4onxNYOB_Lu4LeP9ufLNc0"},
{"content":{"body":"that was not the goal","msgtype":"m.text"},"ts":1639330754211,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$yFslZcvR45Icg4cc04bL1L8oXH0LhcnrNEnLnricgpI"},
{"content":{"body":"the goal was, \"remove multithreading, and do not break websites which assume that the existence of the SAB property on the global implies the ability to do multithreading\"","msgtype":"m.text"},"ts":1639330800323,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$try47_scUzTrNrtGxKV3aHe3RkRyqSUlXuDtNmn4VeM"},
{"content":{"body":"Isn't Shared WebAssembly memory is used for multithreading? ","msgtype":"m.text"},"ts":1639330827470,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tCAouYGg7nmPyS_TOcagRM9mRjBlv7Ey0rX7WUk2nh0"},
{"content":{"body":"(sorry, and by \"multithreading\" I mean specifically \"multhreaded access to shared memory\", not just the ability to spawn workers)","msgtype":"m.text"},"ts":1639330837640,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E0iwywHrSwvZTHkNgC99I2mZ2x9c3DRiC7xwAs7vdbw"},
{"content":{"body":"yes, but what browsers did is disabled the ability to pass a SAB between workers","msgtype":"m.text"},"ts":1639330855488,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m2b3izIFwVbus31j689DsixvYJ5fxzO1V0G_FiPWJn8"},
{"content":{"body":"if you can't pass an SAB between workers, you don't have shared memory","msgtype":"m.text"},"ts":1639330880982,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YhMS0f9kZumrwOQPab_f_imvfzDPjITyYAM6aeyr78U"},
{"content":{"body":"but the WASM api is spec'd to be backed by an SAB regardless of whether multithreading is enabled","msgtype":"m.text"},"ts":1639330911693,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oN7a6-33EjlwGApqNMV08hSM0kjBbkQeYH2tia9yz8A"},
{"content":{"body":"Aren't WebAssembly also affected by spectre when necessary methods provided? ","msgtype":"m.text"},"ts":1639330962012,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$C9-ARcOasLSc3vZJT5v4iM3EP4A9dP9eCEGx8z8VpUU"},
{"content":{"body":"if the necessary methods (i.e. the ability to use multithreaded access to shared memory to make a high-res timer) are provided, yes","msgtype":"m.text"},"ts":1639331048627,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4JDhVoIfvRhhO_OjPSForXLezILtTfVt2YHexkq5GAc"},
{"content":{"body":"but I believe this ability is not provided in the relevant case","msgtype":"m.text"},"ts":1639331090757,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$O4HM3crlbpEzWr6HLmIxTX9g-cGfXhPVmDGAhcAgJWY"},
{"content":{"body":"you can read more of the discussion in https://github.com/whatwg/html/issues/4175, \nhttps://github.com/whatwg/html/issues/3740,\nhttps://github.com/tc39/ecma262/issues/1435, https://github.com/tc39/ecma262/pull/1903","msgtype":"m.text"},"ts":1639331125549,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G-WryWv7zOp1DBkS3ET5Vb7IFI0vLjZkzfnF3RSBL0M"},
{"content":{"body":"Okay I guess I understand what happened to SAB now... ","msgtype":"m.text"},"ts":1639331126565,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ILszVymrkHQ8bBw_Z3aUs5GAzvfOlr9zYU88g0K8S0E"},
{"content":{"body":"So back to Atomics was added, how the committee decided about adding a clock API? Was there any security concerns raised? Is that possible to add things like Promise.timeout?","msgtype":"m.text"},"ts":1639331243817,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$41W28AQsK4Q5SHWzK-oS1-uy9z2noj1eQN-Uq8qQA34"},
{"content":{"body":"honestly I think people may have just not noticed at the time waitAsync was being added","msgtype":"m.text"},"ts":1639331285421,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6rAUIsdMSHPgwOP9M3T9TSWLCWbwYhM06bxrtM4vBjQ"},
{"content":{"body":"unfortunately it's hard to get in touch with erights, short of making a proposal and bringing it to plenary","msgtype":"m.text"},"ts":1639331325262,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZYuE33Q7Gp8OZ-flge37xFKa9VtywAwsT6YNvJEAa7c"},
{"content":{"body":"I think it's worth a shot","msgtype":"m.text"},"ts":1639331336146,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uYR5dwgJ7jDOP5gsAbgUCJ3IAYSXvC36H7NcGz6ddjg"},
{"content":{"body":"😰","msgtype":"m.text"},"ts":1639331364332,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$I8K4k77ahJ7FGh7axYvnbNV5x_slmRvCTkJi3y5l_v4"},
{"content":{"body":"oh, or just asking him during plenary, at the lunch break","msgtype":"m.text"},"ts":1639331436477,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MT1kEMQCNPGtquYBIm5BFFarlosqFeMNssFr7FjA3jE"},
{"content":{"body":"that's what I usually do","msgtype":"m.text"},"ts":1639331439268,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LWh4eo2od9F1Y9liViOnaB0ueIB_8lYxOCq8pgD9X5E"},
{"content":{"body":"I'm down for timers in the stdlib","msgtype":"m.text"},"ts":1639332040857,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$JdVM1Dn467qniTHF3e1kBsGC7T--7epNujahqp-2AnY"},
{"content":{"body":"`let delay = ms => new Promise(res => setTimeout(res, ms))` is one of those incantations I put at the top of many of my scripts; would be nice to not do that","format":"org.matrix.custom.html","formatted_body":"<code>let delay = ms =&gt; new Promise(res =&gt; setTimeout(res, ms))</code> is one of those incantations I put at the top of many of my scripts; would be nice to not do that","msgtype":"m.text"},"ts":1639332364510,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YkqINIqIXDAlMXktlYIvd2Qkpro6baGPAHdhEnTG6WM"},
{"content":{"body":"though looking around some, it seems like chrome (or at least Domenic) is of the opinion that it would need to be in HTML instead of ES and also that it would need to have AbortController integration: https://github.com/whatwg/html/issues/617#issuecomment-702774052","msgtype":"m.text"},"ts":1639332540506,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZrUfxd_FArpvpvudwKIUXh0KGFC8erjxpQtgtZvTZbw"},
{"content":{"body":"so I guess it's not gonna happen anyway","msgtype":"m.text"},"ts":1639332545587,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HzljGPMBVZDAtZ2uoqfE4sjqSY2sRuNoFvWJ_D_Brs0"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1639332546084,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$W_JB8pZTQ3CUpkwEJRjrDyz3nP60OE2YXhj9Kr4BG8Y"},
{"content":{"body":"don't worry in 15 years half of html will be merged with 262","msgtype":"m.text"},"ts":1639332598196,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$qKukrhrRk8czDI6E3tfAoPuAoMhnYxQdSaXdh2YNfT8"},
{"content":{"body":"that is gonna depend highly on the specifics of the individuals working on these specs in the next decade, is my feeling","msgtype":"m.text"},"ts":1639332643697,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TD7dx6dKq67AHZUa_4sH_zFmy62RpdpL5bad1HJqjlw"},
{"content":{"body":"though, abortcontroller is probably the thing most likely to end up in 262, I guess","msgtype":"m.text"},"ts":1639332688058,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vnonp6nrmD0qtOCVXdLGoKySNeSQpIA5G88-7aFxvxQ"}
]