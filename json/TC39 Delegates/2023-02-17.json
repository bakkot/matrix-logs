[
{"content":{"body":"bakkot: what is \"1. If NewTarget is undefined or the active function object, throw a TypeError exception.\" intended to do in the Iterator constructor? throw on creating empty iterators?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: what is &quot;1. If NewTarget is undefined or the active function object, throw a TypeError exception.&quot; intended to do in the Iterator constructor? throw on creating empty iterators?","msgtype":"m.text"},"ts":1676597605978,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t8q-CFh3vCCo0d5xO1yVOmthAAmPmqvCWK__PwVYhHQ"},
{"content":{"body":"uhh that spec text predates my involvement. I guess it is intended to make `Iterator` essentially an abstract class?","format":"org.matrix.custom.html","formatted_body":"uhh that spec text predates my involvement. I guess it is intended to make <code>Iterator</code> essentially an abstract class?","msgtype":"m.text"},"ts":1676597725791,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kegVXsUA6k2XsHiBL-BdeFpzPw5wtawgjXjXRyDQE00"},
{"content":{"body":"i.e. you can't instantiate it directly, only inherit from it","msgtype":"m.text"},"ts":1676597733233,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IR7eegMHworpdcH2cqxWs6bgRqQwuw8iWHrW2-jDYXQ"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1676597756928,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$i-NqSnRcKheNXLc5n3vWvPqrrXEcZWicpTH33Z0X9ws"},
{"content":{"body":"(that's the \"active function object\" bit; the \"undefined\" is what makes it not invokable without `new`)","format":"org.matrix.custom.html","formatted_body":"(that's the &quot;active function object&quot; bit; the &quot;undefined&quot; is what makes it not invokable without <code>new</code>)","msgtype":"m.text"},"ts":1676597759556,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qHZPqSvrlFcwTwQH8fetzo534kPOjHfAJI2TSwlGB0s"},
{"content":{"body":"that's... fine i guess?","msgtype":"m.text"},"ts":1676597760300,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$a1VLzukNS6YHtfSAu7fvTK2Ol7Pp3bg1YxEI4Q4inGU"},
{"content":{"body":"yes, i meant the active function object bit","msgtype":"m.text"},"ts":1676597766578,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$l36NYrnLXYqmbTydQXxzMtWsscrmDhpOuMkGHT4tZjs"},
{"content":{"body":"tbh I didn't notice that was there","msgtype":"m.text"},"ts":1676597766881,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AgmR2YLmTMEJLRImBF2blQ6G2RJeGKisD9_ZQbJmMFI"},
{"content":{"body":"that's a behavior i've never implemented before","msgtype":"m.text"},"ts":1676597776825,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wd0yim4P8rwzkgETC45SuF6kXRFoQ_w6QDSO5ITUgk0"},
{"content":{"body":"so wanted to double check","msgtype":"m.text"},"ts":1676597779111,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5Dhwy_YwQC6QrS1_RdZm_piZB6N_FVFmKxVxapi9cHE"},
{"content":{"body":"cc snek","format":"org.matrix.custom.html","formatted_body":"cc <a href=\"https://matrix.to/#/@devsnek:matrix.org\">snek</a>","msgtype":"m.text"},"ts":1676597793152,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-nLbMAwm9tOIVUYIv7-dYQzqW2dCc4gP6n-oldDz9Js"},
{"content":{"body":"like i guess it'd be pretty useless to call new Iterator(), so it's fine to error","msgtype":"m.text"},"ts":1676597810759,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ja_BfEWj-C_BCj3YeDrYNz3LPZumLVjmchkaqJPvN_o"},
{"content":{"body":"I could imagine doing something like `let x = new Iterator(); x.next = () => ({ done: false, value: 0 })`, I guess","format":"org.matrix.custom.html","formatted_body":"I could imagine doing something like <code>let x = new Iterator(); x.next = () =&gt; ({ done: false, value: 0 })</code>, I guess","msgtype":"m.text"},"ts":1676597846631,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uwlsXYGZfJSQ2WOT2kkygam5YkzEjEIzPLoevXd2iQ0"},
{"content":{"body":"but `let x = { __proto__: Iterator.prototype, next: () => ({ done: false, value: 0 }) }` works just as well if you want that","format":"org.matrix.custom.html","formatted_body":"but <code>let x = { __proto__: Iterator.prototype, next: () =&gt; ({ done: false, value: 0 }) }</code> works just as well if you want that","msgtype":"m.text"},"ts":1676597875130,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8iRo94mI7N2iSjidISZOnAKppDU69LXWrfL85WJkCHI"},
{"content":{"body":"some people are averse to the `__proto__` syntax but like whatever","format":"org.matrix.custom.html","formatted_body":"some people are averse to the <code>__proto__</code> syntax but like whatever","msgtype":"m.text"},"ts":1676597896275,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$si-k_rlW06_B-OUbGh9nV9OdNatysUdEtmJ7U4TcEkw"},
{"content":{"body":"it does seem like a kind of unnecessary restriction","msgtype":"m.text"},"ts":1676597936464,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UxKJWM7xt7_nTpU1Kbx_rZ2i7DqKgs8xHApuWc4RuFc"},
{"content":{"body":"otoh it genuinely is abstract in that you need to provide your own `next`","format":"org.matrix.custom.html","formatted_body":"otoh it genuinely is abstract in that you need to provide your own <code>next</code>","msgtype":"m.text"},"ts":1676597970009,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ppQSshLMjdibE_xL7SkzZlu9hHmFppacZPDb7pQTaO4"},
{"content":{"body":"> <@bakkot:matrix.org> uhh that spec text predates my involvement. I guess it is intended to make `Iterator` essentially an abstract class?\n\nThis is something for which I've wanted to add formal syntax for awhile (i.e., `abstract class`). Hopefully having the concept of an abstract class as built in might make it easier to get a proposal adopted","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kegVXsUA6k2XsHiBL-BdeFpzPw5wtawgjXjXRyDQE00?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a><br />uhh that spec text predates my involvement. I guess it is intended to make <code>Iterator</code> essentially an abstract class?</blockquote></mx-reply>This is something for which I've wanted to add formal syntax for awhile (i.e., <code>abstract class</code>). Hopefully having the concept of an abstract class as built in might make it easier to get a proposal adopted","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$kegVXsUA6k2XsHiBL-BdeFpzPw5wtawgjXjXRyDQE00"}}},"ts":1676600824993,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$vknTY8iYn4ZW6AH9azKStq4-y7yXE2QrlmOG6fxsOo4"},
{"content":{"body":"* This is something for which I've wanted to add formal syntax for awhile (i.e., `abstract class`). Hopefully having the concept of an abstract class as built in might make it easier to get a proposal adopted","m.new_content":{"body":"> <@bakkot:matrix.org> uhh that spec text predates my involvement. I guess it is intended to make `Iterator` essentially an abstract class?\n\nThis is something for which I've wanted to add formal syntax for awhile (i.e., `abstract class`). Hopefully having the concept of an abstract class as built in might make it easier to get a proposal adopted","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$kegVXsUA6k2XsHiBL-BdeFpzPw5wtawgjXjXRyDQE00?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a><br />uhh that spec text predates my involvement. I guess it is intended to make <code>Iterator</code> essentially an abstract class?</blockquote></mx-reply>This is something for which I've wanted to add formal syntax for awhile (i.e., <code>abstract class</code>). Hopefully having the concept of an abstract class as built in might make it easier to get a proposal adopted","msgtype":"m.text"},"m.relates_to":{"event_id":"$vknTY8iYn4ZW6AH9azKStq4-y7yXE2QrlmOG6fxsOo4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1676600851333,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$O9iibDrDygkQzJeS1_Y3Mj0M3C0fq37RF_OcN17PWFY"},
{"content":{"body":"> <@shuyuguo:matrix.org> like i guess it'd be pretty useless to call new Iterator(), so it's fine to error\n\nthat is the reason","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$ja_BfEWj-C_BCj3YeDrYNz3LPZumLVjmchkaqJPvN_o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />like i guess it'd be pretty useless to call new Iterator(), so it's fine to error</blockquote></mx-reply>that is the reason","m.relates_to":{"m.in_reply_to":{"event_id":"$ja_BfEWj-C_BCj3YeDrYNz3LPZumLVjmchkaqJPvN_o"}},"msgtype":"m.text"},"ts":1676602880707,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$zmZVo6KkjL3AX8o8LNXbIAJjJKRY9_xePcPl5jF3-o4"},
{"content":{"body":"it is definitely not the norm","msgtype":"m.text"},"ts":1676602891591,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$6_MPWh7_ZVtULPnf3reU4i4UmFlVMQ7rPY45bBt7K5U"}
]