[
{"content":{"body":"One of the entrance requirements for Stage 3 is \"All ECMAScript editors have signed off on the current spec text\". How should champions go about getting that signoff? I'm asking because we're hoping to ask for Stage 3 for proposal-canonical-tz at the July TC39 meeting.\n \nFor Stage 3 reviewers, I've been creating issues like https://github.com/tc39/proposal-canonical-tz/issues/33 and https://github.com/tc39/proposal-canonical-tz/issues/35. \n\nShould I do the same for each of the ECMA-262 editors? Should I open one issue and tag @tc39/ecma262-editors?  Something else?","msgtype":"m.text"},"ts":1687331448497,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$r8t7kwxztK11IeMRTYfoWewl-GQXE201nVlB3atRlVQ"},
{"content":{"body":"Tagging ecma262-editors is enough to get their attention. I recommend doing it as early as possible to make it easier for them, because reviewing proposals is very time consuming","msgtype":"m.text"},"ts":1687331826588,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ub8Oe8WvbJHOaK9PZ31N34hGGCFOJwHGa8Ae84DaH7c"},
{"content":{"body":"justingrant: Yeah, you can simply ping `@tc39/ecma262-editors` on a tracking issue. Personally, I prefer to review as a PR against tc39/ecma262 (you're going to have to open one eventually anyway), but that's not necessary.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@justingrant:matrix.org\">justingrant</a>: Yeah, you can simply ping <code>@tc39/ecma262-editors</code> on a tracking issue. Personally, I prefer to review as a PR against tc39/ecma262 (you're going to have to open one eventually anyway), but that's not necessary.","msgtype":"m.text"},"ts":1687360643445,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Z_2Q2X26X90L3ZLP6OOu8gWYQjly0Z69IllCDE0pQPM"},
{"content":{"body":"Every editor call, we check the agenda for proposals marked for advancement to stage 3/4 to prepare for reviews. If a lot of stuff gets added just before the deadline for advancement, it can get pretty hard to get reviews in on time. It's why we've had to do \"conditional advancement\" a few times, though we'd prefer not to have to do that again. So the earlier you let us know about it, the better.","msgtype":"m.text"},"ts":1687360806321,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$X2cM-8JchCjeDPLcmU8bv0fpoE2ObgybcpVjwFP_W2c"},
{"content":{"body":"Also you can ask us questions any time in #tc39-editors:matrix.org ","format":"org.matrix.custom.html","formatted_body":"Also you can ask us questions any time in <a href=\"https://matrix.to/#/#tc39-editors:matrix.org\">#tc39-editors:matrix.org</a>","msgtype":"m.text"},"ts":1687360990141,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DAXfoEe8WCpyChzve3VGPeTNrIZS40x5Ungx0UMVnVs"},
{"content":{"body":"> <@bakkot:matrix.org> question for implementers: the current design of the base64 proposal, in the streaming case, allocations a new Uint8Array window (of a pre-existing buffer) once per chunk. is that actually expensive enough to warrant reconsidering the design? I would have assumed that new views of existing buffers would be cheap\n\nSorry - meant to reply yesterday. It sounds like we're mostly ok with it. The creation of many short lived objects isn't amazing, but it's not a reason to be substantially less ergonomic (translating for team, errors mine)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$MfBfY4oYMz5AMrVvjfYkxULjfwwdAY1eP9tOho21-I4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>question for implementers: the current design of the base64 proposal, in the streaming case, allocations a new Uint8Array window (of a pre-existing buffer) once per chunk. is that actually expensive enough to warrant reconsidering the design? I would have assumed that new views of existing buffers would be cheap</blockquote></mx-reply>Sorry - meant to reply yesterday. It sounds like we're mostly ok with it. The creation of many short lived objects isn't amazing, but it's not a reason to be substantially less ergonomic (translating for team, errors mine)","m.relates_to":{"m.in_reply_to":{"event_id":"$MfBfY4oYMz5AMrVvjfYkxULjfwwdAY1eP9tOho21-I4"}},"msgtype":"m.text"},"ts":1687361014830,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$zwVDPF-bO8ETqMGF4FiN5tv5HzcXFXpctgKA8lYOGig"},
{"content":{"body":"mgaudet: does SM keep a list of views from each array buffer? perhaps i'm misremembering","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">mgaudet</a>: does SM keep a list of views from each array buffer? perhaps i'm misremembering","msgtype":"m.text"},"ts":1687361758593,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yoffm_2BKYjIzmvT6UVoph1PM1rUSe9hpk9BUDT6NdI"},
{"content":{"body":"shu: AIUI a hash set, but yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: AIUI a hash set, but yes","msgtype":"m.text"},"ts":1687361793437,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$6kZQbv1ssrwue1kEW6A22KCgVyo7kgJ-N7KeMQyD87Q"},
{"content":{"body":"that's the thing i wasn't sure is acceptable, not so much the short-lived objects part","msgtype":"m.text"},"ts":1687361823549,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$WJxIi7-_7anzgSSmQQCDfdCAj-Xps0eIBeHri2g2ymE"},
{"content":{"body":"Mostly it should be ok unless we have to resize; but that's the cost of amortized cost data structures","msgtype":"m.text"},"ts":1687361869200,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$JTyl5ZQ5Fj5piVuqR36Hsmq7flFOTrWPaAKaACE8BLQ"},
{"content":{"body":"bakkot, Michael Ficarra: The Async Iterator Helpers proposal uses the term \"async method\" to allow `Await()` in its algorithm steps without the heavy lifting of manually writing out interactions with PromiseCapability, but this isn't formalized either in that proposal or in ECMA-262 proper. I've been considering how I could use that to simplify the algorithm steps of `AsyncDisposableStack.prototype.disposeAsync()`, so I was wondering if any formal description of \"async method\" had been written yet, since I couldn't find one in https://tc39.es/proposal-async-iterator-helpers/. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>, <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: The Async Iterator Helpers proposal uses the term \"async method\" to allow <code>Await()</code> in its algorithm steps without the heavy lifting of manually writing out interactions with PromiseCapability, but this isn't formalized either in that proposal or in ECMA-262 proper. I've been considering how I could use that to simplify the algorithm steps of <code>AsyncDisposableStack.prototype.disposeAsync()</code>, so I was wondering if any formal description of \"async method\" had been written yet, since I couldn't find one in https://tc39.es/proposal-async-iterator-helpers/.","msgtype":"m.text"},"ts":1687362563992,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-1zpjjlKXfC0krcMQ88iuQBzfG3vE2w4BhkRFiD29cM"},
{"content":{"body":"rbuckton: it's here: https://github.com/tc39/ecma262/pull/2942","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: it's here: https://github.com/tc39/ecma262/pull/2942","msgtype":"m.text"},"ts":1687363788913,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Qm4GkQetrnFh2cyGAbKAV-LtGiGyN6bbyLIRN5zG81U"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1687363912125,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$gtMO5iWIabo7ZXDyvaU4ufeg45na7z2uAYZxoMAcb3E"},
{"content":{"body":"we're still trying to figure out whether we actually want to allow this form in the spec though: https://github.com/tc39/ecma262/pull/2942#issuecomment-1515412109","msgtype":"m.text"},"ts":1687363966300,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$13yCEGMHh9ND22zUUFtcdr3YXhHV8Kh8rFM42E-OzBM"},
{"content":{"body":"Shu has some concerns","msgtype":"m.text"},"ts":1687363984806,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EM5mMv1XGpTvIS5ToQDp5so1hdGqiZ80Gz6TSTjGAgw"},
{"content":{"body":"i lean towards \"this is our (V8)'s problem to solve, not really the spec's\", but there's also a principled argument to be made about maximizing interop likelihood for multiple implementation techniques","msgtype":"m.text"},"ts":1687364341805,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nFnvJhMNeNriY-qn0NpoTXobm3aKmHUrhKzL6ldSCE4"},
{"content":{"body":"there is also some evidence that the act of speccing at the high level of async functions or generators gives rise to blind spots, like in iterator helpers","msgtype":"m.text"},"ts":1687364426516,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bdRIFXwORLDiivkSO08MEbjWP3O9vwfosTowQZyU31s"},
{"content":{"body":"time to add `await` to torque","format":"org.matrix.custom.html","formatted_body":"time to add <code>await</code> to torque","msgtype":"m.text"},"ts":1687367520096,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$iBpwgo-isl8K7pj76s8QYHIoomGESOI-BoezdifKZO8"},
{"content":{"body":"> <@michaelficarra:matrix.org> Also you can ask us questions any time in #tc39-editors:matrix.org\n\nThanks Michael, will do... except I get a \"You do not have permission to post to this room\" error in Matrix after joining that room. Expected?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$DAXfoEe8WCpyChzve3VGPeTNrIZS40x5Ungx0UMVnVs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>Also you can ask us questions any time in <a href=\"https://matrix.to/#/#tc39-editors:matrix.org\">#tc39-editors:matrix.org</a></blockquote></mx-reply>Thanks Michael, will do... except I get a \"You do not have permission to post to this room\" error in Matrix after joining that room. Expected?","m.relates_to":{"m.in_reply_to":{"event_id":"$DAXfoEe8WCpyChzve3VGPeTNrIZS40x5Ungx0UMVnVs"}},"msgtype":"m.text"},"ts":1687374877216,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$Zw0rOoycV9LVVZ5w-3U7huCiRdLiSnofctdBi3b0XqU"}
]