[
{"content":{"body":"I'm looking at the agenda for April, and Mark's proposals could as well be song titles.","m.mentions":{},"msgtype":"m.text"},"ts":1743070076679,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ybjAhMps1J8bOM3g1v7GDXaasY6hvSnciRjKBN0sl7Q"},
{"content":{"body":"rishipal hi!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rishipal:matrix.org\">rishipal</a> hi!","m.mentions":{"user_ids":["@rishipal:matrix.org"]},"msgtype":"m.text"},"ts":1743092400451,"senderName":"ryzokuken","senderId":"@usharma:igalia.com","id":"$uHdK5dFsRI2to1hRp2J_3BGLkmnZl4VMU6KKdaPLZw8"},
{"content":{"body":"Hi :) ","m.mentions":{},"msgtype":"m.text"},"ts":1743093658151,"senderName":"rishipal","senderId":"@rishipal:matrix.org","id":"$zrAkQRvC3y_O8U1QbayrMm2wpj25fCuWMPdkLbmYX-M"},
{"content":{"body":"oh man we found some in-the-wild uses of extending non-extensible objects with private names","m.mentions":{},"msgtype":"m.text"},"ts":1743099814118,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wuXC7JBkP8qRF61c6CoT1Gcce-e-7zz31ugix_oMZF8"},
{"content":{"body":"how big are they?","m.mentions":{},"msgtype":"m.text"},"ts":1743099829906,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$T_o3PTEKtIB5QpoI8c271Iexc2DOuvtTFJ66UNpONmQ"},
{"content":{"body":"it doesn't look like a library though, but i can't tell","m.mentions":{},"msgtype":"m.text"},"ts":1743099835784,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qAmbjfiDe74OptZdAeh8Sd1CVQOypSQocnylrtT7JwQ"},
{"content":{"body":"maybe time for a reverse origin trial?","m.mentions":{},"msgtype":"m.text"},"ts":1743099844385,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$84WfWorKKsL3UyoYYJ_0LUm04sUjDokOVBSsm74v9vU"},
{"content":{"body":"# of page loads is still very low","format":"org.matrix.custom.html","formatted_body":"<h1>of page loads is still very low</h1>\n","m.mentions":{},"msgtype":"m.text"},"ts":1743099856433,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BJXWeU_HJOqUdd5k_t-tVqX7WkzkRYFdCmH_3GybAFM"},
{"content":{"body":"haha, markdown","m.mentions":{},"msgtype":"m.text"},"ts":1743099860231,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$UB2SmYnxI7x85UzMsiIWXGdsCN3J-b4j_QqsnEyHVcY"},
{"content":{"body":"* no. of page loads is still very low","m.mentions":{},"m.new_content":{"body":"no. of page loads is still very low","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$BJXWeU_HJOqUdd5k_t-tVqX7WkzkRYFdCmH_3GybAFM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1743099867427,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-8BPQ8aixJJ3VPp119cSIGEtVJW-ZoZMmQncOgcinao"},
{"content":{"body":"https://gis.bvl.bund.de/ has this snippet somewhere:","m.mentions":{},"msgtype":"m.text"},"ts":1743099891313,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CszvXa_UH3xZE9lTycms2N-jNfjwh_RCOSqBl2W4R1c"},
{"content":{"body":"```\nclass _ {\n  // stuff ...\n static #t = void (Object.keys(_).forEach((t) => {\n          _[t].type = t;\n        }), Object.freeze(_));\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>class _ {\n  // stuff ...\n static #t = void (Object.keys(_).forEach((t) =&gt; {\n          _[t].type = t;\n        }), Object.freeze(_));\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1743099929640,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hOij3Bu392ATIixvLQCrlmFfz-k-oh4L1zu73r_u8ZY"},
{"content":{"body":"oh it must be this https://www.disy.net/en/products/disy-cadenza/overview/","m.mentions":{},"msgtype":"m.text"},"ts":1743100016170,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3ET-Qv3GpLxT8JUCS-VAZJrrLPhCoUNzqJG9cPtFTzs"},
{"content":{"body":"What in tarnation","m.mentions":{},"msgtype":"m.text"},"ts":1743101573994,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$9dAfqdDG_gBqMXVyZmN20E0AxgR9vQUVFfkTqtDj1fs"},
{"content":{"body":"the other broken sites are worse, actually","m.mentions":{},"msgtype":"m.text"},"ts":1743101701716,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$T7J4lVqqjyPxrXEbHOvTE6ChuMWsr5V5XT2BGkhFaHA"},
{"content":{"body":"https://chromestatus.com/metrics/feature/timeline/popularity/5209","m.mentions":{},"msgtype":"m.text"},"ts":1743101709674,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DTgVmoCjCNfyaYAeKJsIpLcpndebP7fOf0i68eCq7VQ"},
{"content":{"body":"#2 and #6 are non-Cadenza breakages, and they break in the same way. they both seem to have identically structured source, which looks like some proprietary framework (i can't find any references to it on GH)","m.mentions":{},"msgtype":"m.text"},"ts":1743101757582,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HHwjH9_ODRkV00iYCaX9vnJcgGiYdeLlTJWdDWuxWQk"},
{"content":{"body":"#2 and #6 actually do something like","m.mentions":{},"msgtype":"m.text"},"ts":1743101764600,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E2Fx0Q4aFFoDUpMc7biTSHdjZMkaUowuHnqMW-dmbXA"},
{"content":{"body":"```\nclass t extends EventTarget {\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\n\nclass h extends t {\n  #foo;\n  #bar;\n  constructor() {\n    super();\n    this.#foo = ...;\n  }\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>class t extends EventTarget {\n  constructor() {\n    super();\n    Object.freeze(this);\n  }\n}\n\nclass h extends t {\n  #foo;\n  #bar;\n  constructor() {\n    super();\n    this.#foo = ...;\n  }\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1743101782942,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$aLszS4icqx2WS-iehS_RzbQUoZ8_B0RrUB8-1bmYKhQ"},
{"content":{"body":"still, very low page load","m.mentions":{},"msgtype":"m.text"},"ts":1743101801945,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$qERhxlJuBkx-7JFU04PDZE_UJjizM1APIW0vJQmdIfA"},
{"content":{"body":"ðŸ¤” I wonder why they are freezing EventTarget","msgtype":"m.text"},"ts":1743105776370,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$NySqXsMT_YAbi9g_lDnGoJaoLdyLGPK-9FOruFCxZf8"},
{"content":{"body":"my personal use of extending private names on objects I do not own, is to add a mark to any object I have seen, so I can easily debug them in the console","msgtype":"m.text"},"ts":1743105895073,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Y-zb6cs3dWtMaHMOf6H56KPXlOGKSR8YmCzdq6a5lUo"},
{"content":{"body":"the framework seems to be called \"Axial\", but i can't find any references to it on github","m.mentions":{},"msgtype":"m.text"},"ts":1743105972342,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$luCuMze81PJi1wVvmhE5tvN9QSKhFJrAvikxIPa50l4"},
{"content":{"body":"it's not this thing: https://www.npmjs.com/package/axial","m.mentions":{},"msgtype":"m.text"},"ts":1743106016017,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CI42FxZoDfKWYZVITT4Eba-zbRCw6JEE6qRyu3CFF70"},
{"content":{"body":"if anyone has any idea what Axial is, please lmk","m.mentions":{},"msgtype":"m.text"},"ts":1743106024176,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$K-kujz-rgRwX514AkOBXUoGvPWre47CnIOwgt839QPk"},
{"content":{"body":"Is this a terrible idea: still allow private fields to be installed if the new object wasn't replaced by the call to super and it only made it non-extensible ","format":"org.matrix.custom.html","formatted_body":"Is this a terrible idea: still allow private fields to be installed if the new object wasn't replaced by the call to super and it only made it non-extensibleÂ ","msgtype":"m.text"},"ts":1743112163289,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$YErjUPVxzFhKPuP7Pai9DEw15bnFX3iVoPZl_L3fcV8"},
{"content":{"body":"I.e return override private field trick is removed ","format":"org.matrix.custom.html","formatted_body":"I.e return override private field trick is removedÂ ","msgtype":"m.text"},"ts":1743112236719,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$xldx19DrrcGq7gnTSOV5jxLC8tJ_0iTdqd61Ix_rXVY"},
{"content":{"body":"but doesn't achieve what we want, which is the fixed shape guarantee","m.mentions":{},"msgtype":"m.text"},"ts":1743112275164,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4drTpFLPbIHNH0ZTCsCunZS3Z0cRbeFUe6Rij32-hPw"},
{"content":{"body":"* but that doesn't achieve what we want, which is the fixed shape guarantee","m.mentions":{},"m.new_content":{"body":"but that doesn't achieve what we want, which is the fixed shape guarantee","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4drTpFLPbIHNH0ZTCsCunZS3Z0cRbeFUe6Rij32-hPw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1743112279544,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$23q3ww_JCuZQsAUakI7oh8k0Ek2NR4z72wtRVIxgOS0"},
{"content":{"body":"Gotcha. I was focusing too much on the desire to remove the secret  weakmap","format":"org.matrix.custom.html","formatted_body":"Gotcha. I was focusing too much on the desire to remove the secretÂ Â weakmap","msgtype":"m.text"},"ts":1743112510353,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$jOWSP52ZJ0Bd7x5Cmx4rnneWFCyd-ieQ9AjR3VGmAck"},
{"content":{"body":"we can probably do outreach here","m.mentions":{},"msgtype":"m.text"},"ts":1743112823996,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$wC7GMrl0lMphBY0MxwxFkjYFWVk_RxHU4h0EnikPNUo"},
{"content":{"body":"And we also wanted to reduce new MOP predicates too which  we get by expanding the meaning of non-extensible ","format":"org.matrix.custom.html","formatted_body":"And we also wanted to reduce new MOP predicates too whichÂ Â we get by expanding the meaning of non-extensibleÂ ","msgtype":"m.text"},"ts":1743112887763,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$DMDlsUMUq6tJNhjl_xLAGcfkLtgBjxSzo2MNfZpqpHo"},
{"content":{"body":"I guess if a class wants to freeze but not block subclass for having private fields they would only freeze based on a check to new.target and expect the subclass to do the same ","format":"org.matrix.custom.html","formatted_body":"I guess if a class wants to freeze but not block subclass for having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","msgtype":"m.text"},"ts":1743112969118,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$84z6-Cyq0N8-G12LrABsxtW_FGNXo_aVlj1RNSG9tk8"},
{"content":{"body":"* I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","format":"org.matrix.custom.html","formatted_body":"* I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","m.new_content":{"body":"I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","format":"org.matrix.custom.html","formatted_body":"I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","msgtype":"m.text"},"m.relates_to":{"event_id":"$84z6-Cyq0N8-G12LrABsxtW_FGNXo_aVlj1RNSG9tk8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1743112997046,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$3JA8QtmhvOD2TMpT9BFuEXeiiKWZAynudoeNHCtMVfo"},
{"content":{"body":"yeah, if you freeze in a class constructor, you gotta freeze in the leaves of the inheritance hierarchy","m.mentions":{},"msgtype":"m.text"},"ts":1743113198981,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iDqGAb4XFqRVZx8Wl5f0DVc1A6oXkXmfYlG9ZJIc7n4"},
{"content":{"body":"* I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","format":"org.matrix.custom.html","formatted_body":"* I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","m.new_content":{"body":"I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","format":"org.matrix.custom.html","formatted_body":"I guess if a class wants to freeze but not block subclass from having private fields they would only freeze based on a check to new.target and expect the subclass to do the sameÂ ","msgtype":"m.text"},"m.relates_to":{"event_id":"$84z6-Cyq0N8-G12LrABsxtW_FGNXo_aVlj1RNSG9tk8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1743113204630,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$FzVUym7EHBV6K_sstrYZ4AgmzgEiulBWZcXf7jIJVOQ"},
{"content":{"body":"yes, good plan","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$wC7GMrl0lMphBY0MxwxFkjYFWVk_RxHU4h0EnikPNUo"}},"msgtype":"m.text"},"ts":1743113675310,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XoeGORN9LF9aVF3qphvF2jWuqLB6Cs0B478mrEw3O_g"},
{"content":{"body":"we can simply go to their office https://www.disy.net/en/company/contact/#:~:text=Google%20Maps-,approach,-By%20public%20transport","m.mentions":{},"msgtype":"m.text"},"ts":1743114039237,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3dKNeTMyLNJBBcj133TwEAFYieEJ99DokEh8WdDRwTA"},
{"content":{"body":"this is what Yehuda was proposing decorator instance finalizers for!","m.mentions":{"user_ids":["@shuyuguo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$iDqGAb4XFqRVZx8Wl5f0DVc1A6oXkXmfYlG9ZJIc7n4"}},"msgtype":"m.text"},"ts":1743114041037,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4Xd8uaPVBEhVjNu3HTFsdZBkCfZ6d6YfhKIktpM4-Ho"}
]