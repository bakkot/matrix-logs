[
{"content":{"body":"Jack Works: Type annotation proposal also include `as` ðŸ˜‰","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: Type annotation proposal also include <code>as</code> ðŸ˜‰","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: Type annotation proposal also include `as` ðŸ˜‰","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: Type annotation proposal also include <code>as</code> ðŸ˜‰","mimetype":"text/html"}]},"ts":1658292717446,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$L9rof-AVIaJN-zPhDkft0bS4TBIcn5m-CaLiSlLucdo"},
{"content":{"body":"Userland as would be possible with rbuckton â€˜s Extractors ðŸ˜ƒ\nlet As = {[Symbol.extractor]: x => x};\r\rlet { a: As(b) } = â€¦","format":"org.matrix.custom.html","formatted_body":"<p>Userland as would be possible with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> â€˜s Extractors ðŸ˜ƒ<br />\nlet As = {[Symbol.extractor]: x =&gt; x};</p>\n<p>let { a: As(b) } = â€¦</p>","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$iUwKjizSnaboJpbwTsAQu5HCt_yhH3iVft-fKkcwBRg"}}},"ts":1658328778629,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ckcuSrBYTWOFvhHDEMR8Ore_NY_BeJAqWFUeDMJNytY"},
{"content":{"body":"> <@jackworks:matrix.org> I'm wondering if we can add { a as b } as the replacement of { a: b } which is unreadable\n\n * Userland as would be possible with rbuckton â€˜s Extractors ðŸ˜ƒ\nlet As = {[Symbol.extractor]: x => x};\r\rlet { a: As(b) } = â€¦","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24iUwKjizSnaboJpbwTsAQu5HCt_yhH3iVft-fKkcwBRg\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>I'm wondering if we can add { a as b } as the replacement of { a: b } which is unreadable</blockquote></mx-reply> * <p>Userland as would be possible with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> â€˜s Extractors ðŸ˜ƒ<br />\nlet As = {[Symbol.extractor]: x =&gt; x};</p>\n<p>let { a: As(b) } = â€¦</p>","m.new_content":{"body":"Userland as would be possible with rbuckton â€˜s Extractors ðŸ˜ƒ\nlet As = {[Symbol.extractor]: x => x};\r\rlet { a: As(b) } = â€¦","format":"org.matrix.custom.html","formatted_body":"<p>Userland as would be possible with <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a> â€˜s Extractors ðŸ˜ƒ<br />\nlet As = {[Symbol.extractor]: x =&gt; x};</p>\n<p>let { a: As(b) } = â€¦</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$ckcuSrBYTWOFvhHDEMR8Ore_NY_BeJAqWFUeDMJNytY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1658328880369,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$fUCe0KS3xksbYfRI_Ro2hJx8ss14Gl8XfIuXmG4TJyM"}
]