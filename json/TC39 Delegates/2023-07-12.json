[
{"content":{"body":"> <@mhofman:matrix.org> bakkot: looks like we're missing the logs for today? https://matrixlogs.bakkot.com/TC39_Delegates/2023-07-11\n\nfixed. I suspect my boot disk is failing; will have it replaced tomorrow.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6LxQbSNZYtYPPv7YCa33h6DWsXl5rLSEOJj3Zw5p7VE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: looks like we're missing the logs for today? https://matrixlogs.bakkot.com/TC39_Delegates/2023-07-11</blockquote></mx-reply>fixed. I suspect my boot disk is failing; will have it replaced tomorrow.","m.relates_to":{"m.in_reply_to":{"event_id":"$6LxQbSNZYtYPPv7YCa33h6DWsXl5rLSEOJj3Zw5p7VE"}},"msgtype":"m.text"},"ts":1689120944630,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TuIg9_1hvhxWfjC726BSzNQ96GRGhA0rhWUyPGgmJKs"},
{"content":{"body":"> <@shuyuguo:matrix.org> the end goal for me is users, not developers, and good defaults for me should be chosen to nudge developers to the result (responsiveness, correctness, fast loading, whatever) we want on products they build for the user. if _all_ developers ignore a default constantly, then we obviously failed and nobody benefits. Google-internally, i did not get this sense when talking with practitioners about a lack of a defer-like thing\n\nthe problem is we cannot everything by default because it's a breaking change","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uqYS-mgcpZSjGWo12nnp-NePPjNNkQvt8lzFKP8kELQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>the end goal for me is users, not developers, and good defaults for me should be chosen to nudge developers to the result (responsiveness, correctness, fast loading, whatever) we want on products they build for the user. if <em>all</em> developers ignore a default constantly, then we obviously failed and nobody benefits. Google-internally, i did not get this sense when talking with practitioners about a lack of a defer-like thing</blockquote></mx-reply>the problem is we cannot everything by default because it's a breaking change","m.relates_to":{"m.in_reply_to":{"event_id":"$uqYS-mgcpZSjGWo12nnp-NePPjNNkQvt8lzFKP8kELQ"}},"msgtype":"m.text"},"ts":1689128220903,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EbXwQoZa7SDAxi3h_LNyTdN-Hg9lkkuD6iK-XJ2yXNQ"},
{"content":{"body":"not sure i follow","msgtype":"m.text"},"ts":1689131004392,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$necjdf5O1UgLrpGn5Cpqj0WC2GxpW14uK70vy33Diqk"},
{"content":{"body":"the context of my previous comment was about the Promise constructor vs withResolvers","msgtype":"m.text"},"ts":1689131016124,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iMEP2fPuktTMnsQt4wIhaRZJZPds0IA6NLVlOqO5g4E"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1689131054834,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mrD06YmdT2WOUktpMzzmVQeTAWiqmYODO8Mm-jlstEo"},
{"content":{"body":"the \"good default\" was referring to the hope that the Promise constructor would, even though it's more inconvenient to use, would bring about better correctness results wrt uncaught exceptions -> rejections","msgtype":"m.text"},"ts":1689131069446,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JRcQzLfU1l8Tmq-QWV4GzMA3W0l_SMYEKRS9N3C3vdU"},
{"content":{"body":"but since then we've learned that maybe that doesn't have quite the effect we hoped because people ignore it","msgtype":"m.text"},"ts":1689131096737,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw"},
{"content":{"body":"or because there are legitimate use cases","msgtype":"m.text"},"ts":1689131101237,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dHCzfrG44QSY5GPz7DVzWOdkVTkerLZDzQaU8lPKuF4"},
{"content":{"body":"and so, it's fine to add withResolvers, even though it's explicitly against what we thought was the good default","msgtype":"m.text"},"ts":1689131115239,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$h3odWNtbofFyk-caJ-Xt1jvqs3n6c2Hh1H1G9djFUU0"},
{"content":{"body":"but the broader point is that that's the kind of argument i'm looking to hearing, not simply \"developers use pattern X\"","msgtype":"m.text"},"ts":1689131151139,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AsumgM1GNZJJlo-nLLoPBlWt1zEGbhAD_7YiUoiVJes"},
{"content":{"body":" * but the broader point is that that's the kind of argument i'm looking to hear, not simply \"developers use pattern X\"","m.new_content":{"body":"but the broader point is that that's the kind of argument i'm looking to hear, not simply \"developers use pattern X\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$AsumgM1GNZJJlo-nLLoPBlWt1zEGbhAD_7YiUoiVJes","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689131160275,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TRsvOSNvAEG_jjpRK5-zOz2HrpgvEwno4l_Dh2r8los"},
{"content":{"body":"g'morning all","msgtype":"m.text"},"ts":1689148920423,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NOLSQx_a9IRXqoxfye4cHrAOAImWqVj_3Dj9PNd5zlo"},
{"content":{"body":"I have a question about calendars. The source map monthly call was on the TC39 calendar but I don't see it on there anymore. How can I go about adding it back? Do I make a personal event and then invite the calendar? Or do I need a special permission to do this?","msgtype":"m.text"},"ts":1689149412088,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE"},
{"content":{"body":"my understanding was that an event needs to be added to the private calendar first, and the public calendar is invited as an attendee of that event","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149896682,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JB1s-zgn7MITFj64FOvSdmadtdZmQpfKSrVLWNeGh4M"},
{"content":{"body":"the public calendar has an email address to invite","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$JB1s-zgn7MITFj64FOvSdmadtdZmQpfKSrVLWNeGh4M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149917120,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hnGNPICWdaH1tyv105EEYmFi9I3DNOuUD18xLQ7dPAQ"},
{"content":{"body":"most of us regular-folk don't have permission to create such an event on the private calendar, though, so you should contact a chair or ljharb ","format":"org.matrix.custom.html","formatted_body":"most of us regular-folk don't have permission to create such an event on the private calendar, though, so you should contact a chair or <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$hnGNPICWdaH1tyv105EEYmFi9I3DNOuUD18xLQ7dPAQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149944106,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qHISxF4jvu920FK-RQ-sv2I0kv8d5VsmF3BYF2OZ8fw"},
{"content":{"body":"Thank you!","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$qHISxF4jvu920FK-RQ-sv2I0kv8d5VsmF3BYF2OZ8fw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149951594,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$f5xLbV8jrtu8sCbbqpEUQEgsVKoqlAIWKrcSiWT6CfQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> but since then we've learned that maybe that doesn't have quite the effect we hoped because people ignore it\n\nI think this is the key point--despite many years passing, people are generally unaware both of the implied best practice and the fact that the promise constructor helps lead you to it, and on the other hand, the best practice is enforced by async/await. An illustration of the widespread lack of awareness is that no one even raised this concern in committee until you did, and without this awareness, people can't even really be expected to use the promise constructor in the way where it's helpful.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>but since then we&#39;ve learned that maybe that doesn&#39;t have quite the effect we hoped because people ignore it</blockquote></mx-reply>I think this is the key point--despite many years passing, people are generally unaware both of the implied best practice and the fact that the promise constructor helps lead you to it, and on the other hand, the best practice is enforced by async/await. An illustration of the widespread lack of awareness is that no one even raised this concern in committee until you did, and without this awareness, people can't even really be expected to use the promise constructor in the way where it's helpful.","m.relates_to":{"m.in_reply_to":{"event_id":"$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw"}},"msgtype":"m.text"},"ts":1689150256833,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2UF8p32MQ7wIjqkA9uW_zRhCFaCWZHuFqix8XP_wBPw"},
{"content":{"body":"If `dayOfWeek` returns `2`, indicating this is the 2nd day of the week relative to the `firstDayOfWeek`, it could be confusing that both are numbers 1-7 but don't represent the same value.","format":"org.matrix.custom.html","formatted_body":"If <code>dayOfWeek</code> returns <code>2</code>, indicating this is the 2nd day of the week relative to the <code>firstDayOfWeek</code>, it could be confusing that both are numbers 1-7 but don't represent the same value.","msgtype":"m.text"},"ts":1689150809463,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k"},
{"content":{"body":"https://unicode.org/reports/tr35/#UnicodeFirstDayIdentifier","msgtype":"m.text"},"ts":1689150818594,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$E9XKzp_x2t7qOtRsG3Q6qU-3jDgj_AjvdvOR9S4euOs"},
{"content":{"body":"(this is what Shane is talking about)","msgtype":"m.text"},"ts":1689150826417,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$efydQB-29PpY4JYHkbZa7_ltZX1Z7Mzc-6BPkHJG7wY"},
{"content":{"body":"> <@rbuckton:matrix.org> If `dayOfWeek` returns `2`, indicating this is the 2nd day of the week relative to the `firstDayOfWeek`, it could be confusing that both are numbers 1-7 but don't represent the same value.\n\nAssuming my interpretation is correct. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>If <code>dayOfWeek</code> returns <code>2</code>, indicating this is the 2nd day of the week relative to the <code>firstDayOfWeek</code>, it could be confusing that both are numbers 1-7 but don't represent the same value.</blockquote></mx-reply>Assuming my interpretation is correct.","m.relates_to":{"m.in_reply_to":{"event_id":"$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k"}},"msgtype":"m.text"},"ts":1689150887922,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0rqVOa2mcNesECqxyEBl5-eEak1brDHBvmTiQEp6P8I"},
{"content":{"body":"This Unicode extension for locale identifiers seems nuts to me. You have to use the first part of the identifier \"en\" to know how to interpret the identification of the day of the week \"tue\".","msgtype":"m.text"},"ts":1689151098510,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$n2rGz7dEnAXoyi29knaSWYPfItImILFbgdAtf85YMeA"},
{"content":{"body":"It also maintains a list of all of the delegates to TC39; this is listed in the Ecma memento. When organizations add or remove delegates, someone is supposed to inform Ecma of this so they can update their lists (I think the chairs do this?). But anyway things have gone out of sync.","m.relates_to":{"event_id":"$9VyzJEmRlzJ3aPh4HHCxMnCz3TaIsON3trRp2fTlDbs","is_falling_back":true,"m.in_reply_to":{"event_id":"$5uDJZeeujHlhzSbkF0XWtxBS3B4lhJ7f2KcyMX6wWik"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689151341338,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WhyI94PVM2sMY7F_-qtm6QQzp_jZGqe6mm6ROUNA2tA"},
{"content":{"body":"I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Google could ask him?)","msgtype":"m.text"},"ts":1689151851528,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4CfaeDaDDNr6Cmp_rQyYOhaDde0eXe0bDE3nJ1bfnuY"},
{"content":{"body":" * I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Googler could ask him?)","m.new_content":{"body":"I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Googler could ask him?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$4CfaeDaDDNr6Cmp_rQyYOhaDde0eXe0bDE3nJ1bfnuY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689151867255,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$i_OfvAz3WNx87xQEyuhru0xULML5-BIz3fLQbsOHciI"},
{"content":{"body":"(or bullet form)","msgtype":"m.text"},"ts":1689151919685,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ESOBW1n5aNaZeIIXZiIp3ZfRgkiJU_ltSSKnDSMkOfs"},
{"content":{"body":"Unless the presenter explicitly delegates, they remain responsible for the summary.  The secretary will chase presenters where summaries appear insufficient.  I'll make sure we say this on the Reflector.","msgtype":"m.text"},"ts":1689152008183,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$IZ2WYTujmhnc00z3RqxDwEtp9K2TcRi0McGhmZtVstw"},
{"content":{"body":"Ashley Claymore: should I put the link in the notes?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: should I put the link in the notes?","msgtype":"m.text"},"ts":1689152863222,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0"},
{"content":{"body":"ryzokuken 🇳🇴: yes, there is a spot for you to do so already","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken 🇳🇴</a>: yes, there is a spot for you to do so already","msgtype":"m.text"},"ts":1689152934651,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8"},
{"content":{"body":"search for \"slides presented but no link in agenda\"","msgtype":"m.text"},"ts":1689152952182,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$V_m2cbrbsxmhJGOAL8C45TjaVs1ODoR41JqfMQ24ZSw"},
{"content":{"body":"I slightly prefer `offset` solution because I guess developers use BYOB for perf, and would like to use `offset` to get perf benefit (even a little), and even without `offset`, it already complicated 😉","format":"org.matrix.custom.html","formatted_body":"I slightly prefer <code>offset</code> solution because I guess developers use BYOB for perf, and would like to use <code>offset</code> to get perf benefit (even a little), and even without <code>offset</code>, it already complicated 😉","msgtype":"m.text"},"ts":1689153299719,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$fHqsgY3ap6TiljKlGESgetftaa1YCA8nPiUNvRyQAWo"},
{"content":{"body":"HE Shi-Jun: I wouldn't want to do that without compelling evidence that the perf is significantly better","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: I wouldn't want to do that without compelling evidence that the perf is significantly better","msgtype":"m.text"},"ts":1689153419014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NydvI8eKKBbzfGcS8hDMUQfyhV2yoRalZgyt0lLn5nQ"},
{"content":{"body":"also, it would be safe to add later, right?","msgtype":"m.text"},"ts":1689153430586,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs"},
{"content":{"body":"> <@michaelficarra:matrix.org> ryzokuken 🇳🇴: yes, there is a spot for you to do so already\n\ndone, thanks again for the reminder","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken 🇳🇴</a>: yes, there is a spot for you to do so already</blockquote></mx-reply>done, thanks again for the reminder","m.relates_to":{"m.in_reply_to":{"event_id":"$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8"}},"msgtype":"m.text"},"ts":1689153669997,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$xWQk7gqzDffWhuIQkKor0tZxSa1qv_-yucFoZImwbdY"},
{"content":{"body":"> <@michaelficarra:matrix.org> also, it would be safe to add later, right?\n\nagree it could be add later. I just think it very likely will have some perf benefit, especially on embed engines.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>also, it would be safe to add later, right?</blockquote></mx-reply>agree it could be add later. I just think it very likely will have some perf benefit, especially on embed engines.","m.relates_to":{"m.in_reply_to":{"event_id":"$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs"}},"msgtype":"m.text"},"ts":1689153728423,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$f3Cm5TfDgfeqVyRCYeuUQJMxPeeMPgWOq7mLJm_MLGk"},
{"content":{"body":"So, the alternative to having these \"inputOffset\" and \"outputOffset\" parameters is to have to create a separate view into the input & output base arrays on each iteration of the loop?","msgtype":"m.text"},"ts":1689154035855,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Uv46fRM7D000oTakUyIkSatl6ycxpGDTqTzA-rs2Nx8"},
{"content":{"body":"Bradford Smith: yes, or a shifting view, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, or a shifting view, and views should be very lightweight","msgtype":"m.text"},"ts":1689154183338,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ"},
{"content":{"body":" * Bradford Smith: yes, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight","m.new_content":{"body":"Bradford Smith: yes, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight","msgtype":"m.text"},"m.relates_to":{"event_id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689154224287,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4mTGwstTmpGsmtYms2Sz6-EBK4SzCe4wm2rAgKSijUY"},
{"content":{"body":"After listening all queue discussion, I feel maybe we'd better leave the streaming api to future follow-on proposal ... ","msgtype":"m.text"},"ts":1689155214982,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$0NAT-hgoFsp5ZFsvrP_-vXez-mgsnAGn3vu1d6M6UQM"},
{"content":{"body":"I think we want the full cake, we want the un-disputed oneshot methods to fast-track, and have the streaming API versions that share consistency with them added later. Looks like a good challenge...","msgtype":"m.text"},"ts":1689155292314,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$qAr-xK94yzcGHH_xwK4o2oxQwHIwvX7bOWVG8ppkejA"},
{"content":{"body":"I think the streaming design is as fleshed out as it's going to be, we just need to decide whether it's justified for inclusion or not","msgtype":"m.text"},"ts":1689155328806,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo"},
{"content":{"body":"I don't think splitting helps with that","msgtype":"m.text"},"ts":1689155348894,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_dHS-qVIPLgjDcDonggYY107Pz9bWiYHQRv74PGlqmU"},
{"content":{"body":"> <@michaelficarra:matrix.org> Bradford Smith: yes, and views should be very lightweight\n\nviews are apparently not that lightweight in JSC per https://github.com/tc39/proposal-arraybuffer-base64/pull/26#issuecomment-1617312928","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight</blockquote></mx-reply>views are apparently not that lightweight in JSC per https://github.com/tc39/proposal-arraybuffer-base64/pull/26#issuecomment-1617312928","m.relates_to":{"m.in_reply_to":{"event_id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ"}},"msgtype":"m.text"},"ts":1689155444468,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QGtCQ2WIMsUHK88XQfmvdC1WSJNATz7rr6cebBBmzeY"},
{"content":{"body":"or at least not the first view","msgtype":"m.text"},"ts":1689155463791,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_BDKAfMRYGAunzkNEfLA72snWjffhF6YXWUHYT8mYHo"},
{"content":{"body":"*should*","format":"org.matrix.custom.html","formatted_body":"<em>should</em>","msgtype":"m.text"},"ts":1689155500116,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc"},
{"content":{"body":"I dont think views are in general \"lightweight\" in comparison to actually know the place where you want to put yyour data","msgtype":"m.text"},"ts":1689155518011,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$HSXOcovP690_vqb8pWU8TkcAxfORoPozyhrRCvL72OA"},
{"content":{"body":"> <@michaelficarra:matrix.org> I think the streaming design is as fleshed out as it's going to be, we just need to decide whether it's justified for inclusion or not\n\nBut, yes this might be true","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I think the streaming design is as fleshed out as it&#39;s going to be, we just need to decide whether it&#39;s justified for inclusion or not</blockquote></mx-reply>But, yes this might be true","m.relates_to":{"m.in_reply_to":{"event_id":"$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo"}},"msgtype":"m.text"},"ts":1689155548435,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$Wtmt8sv9-tZDcUMPkdb3sVNFOYzbdL8ssLtyKJlp0Fc"},
{"content":{"body":"> <@michaelficarra:matrix.org> *should*\n\nI think there's always going to tradeoffs in any representation, and a representation in which the second view of a buffer is expensive in exchange for the first view being faster is not obviously incorrect","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><em>should</em></blockquote></mx-reply>I think there's always going to tradeoffs in any representation, and a representation in which the second view of a buffer is expensive in exchange for the first view being faster is not obviously incorrect","m.relates_to":{"m.in_reply_to":{"event_id":"$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc"}},"msgtype":"m.text"},"ts":1689155564996,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_1nLjOXwvsmKdM5P14vmPpVd-HyC2Tq_1ajOjoMk5rU"},
{"content":{"body":"so I don't think \"should\" is at all obvious here","msgtype":"m.text"},"ts":1689155572890,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oYv4DtzJC2CjPb_wO5jlKuSyww5WlN1ygVmUwI2pxOI"},
{"content":{"body":"Luca Casonato: https://github.com/tc39/proposal-arraybuffer-base64/issues/13 is the streaming issue, and https://github.com/tc39/proposal-arraybuffer-base64/issues/21 the one for encoding into an existing buffer","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: https://github.com/tc39/proposal-arraybuffer-base64/issues/13 is the streaming issue, and https://github.com/tc39/proposal-arraybuffer-base64/issues/21 the one for encoding into an existing buffer","msgtype":"m.text"},"ts":1689155664000,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ivZK9P9XPQGBxg2vzocxzDgZ3n7q-Rb1wWoR8no7IRU"},
{"content":{"body":"the thing where you have a \"prefix\" argument to the one-shot API was my first suggestion, if I have understood correctly that this is what you were proposing; see response from justin in https://github.com/tc39/proposal-arraybuffer-base64/issues/13#issuecomment-911968641","msgtype":"m.text"},"ts":1689155756867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hr5qw0WV1lfV5A52UKqgVx7jY4hz6npttAekBf1UHSM"},
{"content":{"body":"(and from peter, two comments down)","msgtype":"m.text"},"ts":1689155778460,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$61-_STMdAGSge7m92VGfGNTEq-oA1uO9JJ_loxTFC8g"},
{"content":{"body":"re: streaming: I think, in general, it's vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can't fit in memory/packets all together. I don't know of such use cases/environments.","msgtype":"m.text"},"ts":1689156040426,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"},
{"content":{"body":"might be a bit cursed but I've seen people pass around entire images encoded in base64","msgtype":"m.text"},"ts":1689156107809,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U"},
{"content":{"body":"that's not even unusual","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156138555,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XTAEd-SOBRteNaafsh0_C50jkHy1iDL8CYL2ASlnWxE"},
{"content":{"body":" * might be a bit cursed but I've seen people pass around entire images encoded in encoded base64","m.new_content":{"body":"might be a bit cursed but I've seen people pass around entire images encoded in encoded base64","msgtype":"m.text"},"m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689156138742,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$XUAMya5TDbNx8qZ0_BuCWWEwQlbWE8f0RnaOhJbyCjA"},
{"content":{"body":"yeah, not sure how ideal it is, but it's certainly not uncommon","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$XTAEd-SOBRteNaafsh0_C50jkHy1iDL8CYL2ASlnWxE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156172075,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$Nm8Yi00kowATUZLFC3WyMjjPHheMcPZ46ZSJaJHtRuE"},
{"content":{"body":"I know but there's a certain limit on how big they can get, right?","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Nm8Yi00kowATUZLFC3WyMjjPHheMcPZ46ZSJaJHtRuE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156193457,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X5ffyVzc6dyhralBoEjkYspK7M8x2HJa16MfKLRF3bk"},
{"content":{"body":"also I don't think HTML has a streaming API to set the src of an img tag...","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$X5ffyVzc6dyhralBoEjkYspK7M8x2HJa16MfKLRF3bk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156246984,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ByXPQyIY-yq68kcPLlHGUph5ipRmsTVhH0JGMVoD6mQ"},
{"content":{"body":"there are a lot of APIs that don't handle binary data at all. You can only send e.g. images via encoding","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ByXPQyIY-yq68kcPLlHGUph5ipRmsTVhH0JGMVoD6mQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156254076,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},
{"content":{"body":"bakkot: My suggestion was this: https://gist.github.com/lucacasonato/06a74fe2658fbe5a2d9c24cc767006c0\n\nNo need for any `extra` option on the static API. This performs at most 3 byte copies for every remainder. The code can be optimized further.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: My suggestion was this: https://gist.github.com/lucacasonato/06a74fe2658fbe5a2d9c24cc767006c0</p>\n<p>No need for any <code>extra</code> option on the static API. This performs at most 3 byte copies for every remainder. The code can be optimized further.</p>\n","msgtype":"m.text"},"ts":1689156262509,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$I7Mvs6R4tI7uhqolw0UnI3tpjs1FeOCxhcVjdEpGX7I"},
{"content":{"body":"at Shape, we one-shot base64 decode something like 150kb of bytecode on the main thread every page load","m.relates_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI","is_falling_back":true,"m.in_reply_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156301526,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$976Z4nEogVQCUSEG6Oeiyk7XjzWwstn9a4Y6ILfWH1o"},
{"content":{"body":"haven't run into any long task issues yet","m.relates_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI","is_falling_back":true,"m.in_reply_to":{"event_id":"$976Z4nEogVQCUSEG6Oeiyk7XjzWwstn9a4Y6ILfWH1o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156308499,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EJUwcKlvhuzomae2zd5Ix1ohhhGSaNrAwE8VrgcxKX0"},
{"content":{"body":"There is no \"real\" upper limit of the length of a string. Most of the limits are imposed by the server software that is used","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156355014,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$uUdD_egBQfw0VLcZ-q0EwhKHi2zc7eMrA3ielEHVQcs"},
{"content":{"body":"yes please","m.relates_to":{"event_id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0","is_falling_back":true,"m.in_reply_to":{"event_id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156370467,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$tNdW9zcj7jzeYmt6V2b7ZNP4bkXc7uxi_hyETQo7wWQ"},
{"content":{"body":"let me introduce you to my good friend 2**53","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$uUdD_egBQfw0VLcZ-q0EwhKHi2zc7eMrA3ielEHVQcs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156375714,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Rr7jgqhBtD5jtZSZY_1r5pk6Jz_ExtkLWOREYiXprjk"},
{"content":{"body":":D","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Rr7jgqhBtD5jtZSZY_1r5pk6Jz_ExtkLWOREYiXprjk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156381608,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$ixG5mjnzLcQZ9fXh13NVikP7gQKurYPAk7-ipNki3hM"},
{"content":{"body":"You might compress you string before you hit that ˆˆ","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ixG5mjnzLcQZ9fXh13NVikP7gQKurYPAk7-ipNki3hM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156414155,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$U3mpK1wfvnqarrdi8kB8LtLT9mOGlFyPXhLrwi_v8JU"},
{"content":{"body":"*your","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$U3mpK1wfvnqarrdi8kB8LtLT9mOGlFyPXhLrwi_v8JU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156421180,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$vCYAPutp7QkNYMSa-HoK857qYmG06Siu41vYhMMUMD8"},
{"content":{"body":"ah, got it","msgtype":"m.text"},"ts":1689156434245,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xcbbebk485_8-JM7xu8R1D94Q9hO4PxfSACaB9titrw"},
{"content":{"body":"> <@tkopp:matrix.org> there are a lot of APIs that don't handle binary data at all. You can only send e.g. images via encoding\n\nit'd be good to understand use cases like this in some more detail","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@tkopp:matrix.org\">@tkopp:matrix.org</a><br>there are a lot of APIs that don&#39;t handle binary data at all. You can only send e.g. images via encoding</blockquote></mx-reply>it'd be good to understand use cases like this in some more detail","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":false,"m.in_reply_to":{"event_id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156464484,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JmLreIb1BKCW7cd-uFo6vxa0W85irqAI1dXgs-oyk3s"},
{"content":{"body":"bakkot: do you have a link to your Web Streams impl ontop of the streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the streaming API? I can't find it in your slides","msgtype":"m.text"},"ts":1689156469401,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$QwCjJJS0nlCXF6l32DwT0qP2F0SWjZ93nSJGOJ9VxdM"},
{"content":{"body":" * bakkot: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","m.new_content":{"body":"bakkot: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","msgtype":"m.text"},"m.relates_to":{"event_id":"$QwCjJJS0nlCXF6l32DwT0qP2F0SWjZ93nSJGOJ9VxdM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689156476024,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$S5FzbrW8u5qag97SnMska-5JLB6HenLGJ9P9QLTRn-A"},
{"content":{"body":"it's in the playground","msgtype":"m.text"},"ts":1689156483376,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DiSPINWeHMJ2YvPhWzo6sxu_lX56MTFFioeVfztZCAg"},
{"content":{"body":"https://tc39.es/proposal-arraybuffer-base64/","msgtype":"m.text"},"ts":1689156491266,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uLP2f6GhWbSFsRs8surrdSAe3_6NG5hu5ii7iAy__Js"},
{"content":{"body":"Ah, thanks!","msgtype":"m.text"},"ts":1689156519667,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$qXfE47k2lR304IRcOMhOQ3j7gq-sg02e6L8xDME_qao"},
{"content":{"body":"rbuckton: my personal opinion is that I'd like to investigate `Symbol.enter` but with what I know at this time, full context manager support seems excessive. I'd hesitate to speak for the committee, but that would be my recommendation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: my personal opinion is that I'd like to investigate <code>Symbol.enter</code> but with what I know at this time, full context manager support seems excessive. I'd hesitate to speak for the committee, but that would be my recommendation","msgtype":"m.text"},"ts":1689156650639,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$0rYgY-_k2-2_NViP8pW6u7TA9R3IBRjghV9BlKavZxs"},
{"content":{"body":"soap APIs from transportation/shipping companies come to mind immediately.","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$JmLreIb1BKCW7cd-uFo6vxa0W85irqAI1dXgs-oyk3s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156650954,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$PLsLWYBUknganTfuns_Rop4qCzwKscgaJpPFGxA_F1c"},
{"content":{"body":"great, I'd love to hear about your experience with these and how they relate to data size and streaming","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$PLsLWYBUknganTfuns_Rop4qCzwKscgaJpPFGxA_F1c"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156684800,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Cui_n0Kz11HiuAYufK-SoetD1PEnPHmq-8fYSQpXqd4"},
{"content":{"body":"github rest API returns contents as base64-encoded strings","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Cui_n0Kz11HiuAYufK-SoetD1PEnPHmq-8fYSQpXqd4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156688671,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$H2ETUr7lZDlld2cXISSELrUunPwqRt9miGIBXcoxf4U"},
{"content":{"body":"for files up to 100MB in size","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$H2ETUr7lZDlld2cXISSELrUunPwqRt9miGIBXcoxf4U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156714509,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oL2_8xFLLSavIlj-6CUYP7Yob7RpPyKzVZRzD0WGmo4"},
{"content":{"body":"actually I guess only up to 1MB; the API changes a bit for larger files","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$oL2_8xFLLSavIlj-6CUYP7Yob7RpPyKzVZRzD0WGmo4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156892272,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9ulJ5jLqmYwI9wwqGoWkVUQ5DyY6CfMNCzVEAtRZ33A"},
{"content":{"body":"From my point of view Ron was just considering a related problem - how to make sure developers are nudged toward using the resource management features he's defining - and then coming up with a possible solution to this. He presented it as a possible follow-on proposal. DE seemed at first to be saying that this problem is important enough to force changes to the existing stage 3 proposal, but I think he's backed down from this. I think the conclusion is not to include such a feature in the current proposal.","msgtype":"m.text"},"ts":1689156896838,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$-J0lcMlu8wr_coG1El2eWD7vqmnlBN_aHhOqryXc5-U"},
{"content":{"body":"I'll reiterate that I don't have an appetite for full context managers. They add a level of complexity that I'm not sure is suitable for ECMAScript, and they would have a negative impact on the ability for static type checkers like TypeScript to make reasonable assumptions about control flow due to ability for any context manager bound to a `using` to swallow an exception. ","format":"org.matrix.custom.html","formatted_body":"I'll reiterate that I don't have an appetite for full context managers. They add a level of complexity that I'm not sure is suitable for ECMAScript, and they would have a negative impact on the ability for static type checkers like TypeScript to make reasonable assumptions about control flow due to ability for any context manager bound to a <code>using</code> to swallow an exception.","msgtype":"m.text"},"ts":1689156919969,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7a_wsz-9Nv3InHSPHZXrYs6SGVzqXrjF8tHO1WTixlU"},
{"content":{"body":"Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without \"leaking\" anywhere else from the scope where they were created. ","msgtype":"m.text"},"ts":1689157114245,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8"},
{"content":{"body":"just encouraged, not required","msgtype":"m.text"},"ts":1689157145387,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$F7jzqf7JU5lWbqsIEiE77uaZbAM0YXgjX_cJbFlpBGA"},
{"content":{"body":"If we're not doing full context managers, then the goal of the proposed change would be to resolve a concern about \"unused\" disposables. That would be addressed by `Symbol.enter` without the need to introduce a `Symbol.asyncEnter`. `await using` would still verify/capture `[Symbol.asyncDispose]` as it does today, but would call `[Symbol.enter]()` synchronously without the need to introduce an extra `Await` at the declaration site. That would also avoid needing to rethink `AsyncDisposableStack.prototype.use` to handle the async case.","format":"org.matrix.custom.html","formatted_body":"If we're not doing full context managers, then the goal of the proposed change would be to resolve a concern about \"unused\" disposables. That would be addressed by <code>Symbol.enter</code> without the need to introduce a <code>Symbol.asyncEnter</code>. <code>await using</code> would still verify/capture <code>[Symbol.asyncDispose]</code> as it does today, but would call <code>[Symbol.enter]()</code> synchronously without the need to introduce an extra <code>Await</code> at the declaration site. That would also avoid needing to rethink <code>AsyncDisposableStack.prototype.use</code> to handle the async case.","msgtype":"m.text"},"ts":1689157177644,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cpJSoqyp0ZmjQuSB_8KsmEZWfGcNlfhChfgrEmlHAjY"},
{"content":{"body":"for using `Symbol.enter` as a way for types to _enforce_ they are being assigned to `using`, could this also be done with `Symbol.dipose` setting a `userHasAcknoledgedLifetime` flag that either errors/warns if other methods are called without that flag set?","format":"org.matrix.custom.html","formatted_body":"for using <code>Symbol.enter</code> as a way for types to <em>enforce</em> they are being assigned to <code>using</code>, could this also be done with <code>Symbol.dipose</code> setting a <code>userHasAcknoledgedLifetime</code> flag that either errors/warns if other methods are called without that flag set?","msgtype":"m.text"},"ts":1689157218955,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8"},
{"content":{"body":"> <@littledan:matrix.org> re: streaming: I think, in general, it's vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can't fit in memory/packets all together. I don't know of such use cases/environments.\n\nit's not just about whether it all fits in memory; for example, one might reasonably stream base64'd wasm bytecode into WebAssembly.compileStreaming. the advantage of streaming in this case is that you can start doing work before waiting for the whole download to finish. which is nice!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>re: streaming: I think, in general, it&#39;s vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can&#39;t fit in memory/packets all together. I don&#39;t know of such use cases/environments.</blockquote></mx-reply>it's not just about whether it all fits in memory; for example, one might reasonably stream base64'd wasm bytecode into WebAssembly.compileStreaming. the advantage of streaming in this case is that you can start doing work before waiting for the whole download to finish. which is nice!","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"}},"msgtype":"m.text"},"ts":1689157224521,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$T3D8u99kUTHqINycHcNtA3zf3CwX-Qdjz99la-Oh2cc"},
{"content":{"body":"similarly, if you're uploading base64'd data to a server, you might do binary data -> compression stream -> base64 stream -> `fetch`; it's nice to be able to start the network request as early as possible","format":"org.matrix.custom.html","formatted_body":"similarly, if you're uploading base64'd data to a server, you might do binary data -&gt; compression stream -&gt; base64 stream -&gt; <code>fetch</code>; it's nice to be able to start the network request as early as possible","msgtype":"m.text"},"ts":1689157272270,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbQiYYf9UGR8Rz4ikXQOryWDkg-dpWVCjxU3WQBgOD0"},
{"content":{"body":"my gut feeling is also that `DisposeStack.p.return` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":"my gut feeling is also that <code>DisposeStack.p.return</code> is a simpler API to explain that the enter/exit symbols.","msgtype":"m.text"},"ts":1689157303418,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU"},
{"content":{"body":"> <@aclaymore:matrix.org> for using `Symbol.enter` as a way for types to _enforce_ they are being assigned to `using`, could this also be done with `Symbol.dipose` setting a `userHasAcknoledgedLifetime` flag that either errors/warns if other methods are called without that flag set?\n\nYes, a user-defined implementation could conceivably make `[Symbol.dispose]` a getter that indicates the method was at least read.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>for using <code>Symbol.enter</code> as a way for types to <em>enforce</em> they are being assigned to <code>using</code>, could this also be done with <code>Symbol.dipose</code> setting a <code>userHasAcknoledgedLifetime</code> flag that either errors/warns if other methods are called without that flag set?</blockquote></mx-reply>Yes, a user-defined implementation could conceivably make <code>[Symbol.dispose]</code> a getter that indicates the method was at least read.","m.relates_to":{"m.in_reply_to":{"event_id":"$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8"}},"msgtype":"m.text"},"ts":1689157304173,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4"},
{"content":{"body":"> <@aclaymore:matrix.org> my gut feeling is also that `DisposeStack.p.return` is a simpler API to explain that the enter/exit symbols.\n\nwhat is `return`?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>my gut feeling is also that <code>DisposeStack.p.return</code> is a simpler API to explain that the enter/exit symbols.</blockquote></mx-reply>what is <code>return</code>?","m.relates_to":{"m.in_reply_to":{"event_id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU"}},"msgtype":"m.text"},"ts":1689157318224,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WsZzQiMqCrWTzTIe5jx3_hvBCi253y3d6RyZc6xmRto"},
{"content":{"body":"sorry, move","msgtype":"m.text"},"ts":1689157323391,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4"},
{"content":{"body":" * sorry, `move`","format":"org.matrix.custom.html","formatted_body":" * sorry, <code>move</code>","m.new_content":{"body":"sorry, `move`","format":"org.matrix.custom.html","formatted_body":"sorry, <code>move</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689157326860,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$5J7gNDa5Bb-wsf5lByVU4-7uQdjBgZVLN7EL1Msuid0"},
{"content":{"body":" * my gut feeling is also that `DisposeStack.p.move` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":" * my gut feeling is also that <code>DisposeStack.p.move</code> is a simpler API to explain that the enter/exit symbols.","m.new_content":{"body":"my gut feeling is also that `DisposeStack.p.move` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":"my gut feeling is also that <code>DisposeStack.p.move</code> is a simpler API to explain that the enter/exit symbols.","msgtype":"m.text"},"m.relates_to":{"event_id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689157333457,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$DktWSxAo2Fajq7r3qCbuCzQGS-HCzp_W3YRP4ZKMHgo"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without \"leaking\" anywhere else from the scope where they were created.\n\nMy intent was to state that as a remediation for an \"unused\" disposable, a host could leverage GC if necessary to ensure native handles don't leak, and that a user could use `FinalizationRegistry` to do the same. I worded it too strongly to expect that to always be the case, and that the outcome should be resource cleanup rather than a warning message like as what can happen for unhandled promise rejections. That wording was based on my prior experience with C#'s `IDisposable` and the C# team's recommendations to do likewise.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without &quot;leaking&quot; anywhere else from the scope where they were created. </blockquote></mx-reply>My intent was to state that as a remediation for an \"unused\" disposable, a host could leverage GC if necessary to ensure native handles don't leak, and that a user could use <code>FinalizationRegistry</code> to do the same. I worded it too strongly to expect that to always be the case, and that the outcome should be resource cleanup rather than a warning message like as what can happen for unhandled promise rejections. That wording was based on my prior experience with C#'s <code>IDisposable</code> and the C# team's recommendations to do likewise.","m.relates_to":{"m.in_reply_to":{"event_id":"$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8"}},"msgtype":"m.text"},"ts":1689157486181,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DyLwpgsqFfljFz0bv2tqAg8k8nIsl7c1ZbE8T9NgHqo"},
{"content":{"body":"> <@rbuckton:matrix.org> Yes, a user-defined implementation could conceivably make `[Symbol.dispose]` a getter that indicates the method was at least read.\n\nPersonally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Yes, a user-defined implementation could conceivably make <code>[Symbol.dispose]</code> a getter that indicates the method was at least read.</blockquote></mx-reply>Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.","m.relates_to":{"m.in_reply_to":{"event_id":"$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4"}},"msgtype":"m.text"},"ts":1689157524264,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY"},
{"content":{"body":"> <@aclaymore:matrix.org> sorry, `move`\n\n`move` and `exit` are somewhat orthogonal to each other, so I'm not clear on the correlation you are making?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>sorry, <code>move</code></blockquote></mx-reply><code>move</code> and <code>exit</code> are somewhat orthogonal to each other, so I'm not clear on the correlation you are making?","m.relates_to":{"m.in_reply_to":{"event_id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4"}},"msgtype":"m.text"},"ts":1689157564982,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$XbT7oorjJD79Il-z-9YLLgPzIvydRPfuba41AsoY8To"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.\n\nI concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.</blockquote></mx-reply>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.","m.relates_to":{"m.in_reply_to":{"event_id":"$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY"}},"msgtype":"m.text"},"ts":1689157735303,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk"},
{"content":{"body":"for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that ","format":"org.matrix.custom.html","formatted_body":"for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that","msgtype":"m.text"},"ts":1689157761151,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q"},
{"content":{"body":"* can also indicate that ","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>can also indicate that</li>\n</ul>","msgtype":"m.text"},"ts":1689157768113,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$q4IGQGv0-qdAoIw50pYQwz_C8fT61T0Z7YhqobgDUKI"},
{"content":{"body":"I'm not convinced we even need `[Symbol.enter]()`.","format":"org.matrix.custom.html","formatted_body":"I'm not convinced we even need <code>[Symbol.enter]()</code>.","msgtype":"m.text"},"ts":1689157776049,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ"},
{"content":{"body":"> <@aclaymore:matrix.org> for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that\n\nAh, thank you for the clarification.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that</blockquote></mx-reply>Ah, thank you for the clarification.","m.relates_to":{"m.in_reply_to":{"event_id":"$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q"}},"msgtype":"m.text"},"ts":1689157799588,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$61P6LPyPosw5BAQ_Qlm0ZUETqH9WGzykXbm27oqDk6I"},
{"content":{"body":"> <@rbuckton:matrix.org> I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.\n\nIn a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n```js\nconst stack1 = new DisposableStack();\n...\nconst stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nconst stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.</blockquote></mx-reply><p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">const stack1 = new DisposableStack();\n...\nconst stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nconst stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk"}},"msgtype":"m.text"},"ts":1689157961219,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DvxYzQsKbcPeKkRM3u6FSB8iwa2q5CewBvOPzhJwLdg"},
{"content":{"body":"(which is part of the reason for the choice of method name as well)","msgtype":"m.text"},"ts":1689157987184,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hDqVGEW181k_35GU8wo6sXt_SfkjTwQUse0bXcISWJ8"},
{"content":{"body":"> <@rbuckton:matrix.org> I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.\n\n * In a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n\n```js\nusing stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.</blockquote></mx-reply> * <p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">using stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","m.new_content":{"body":"In a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n\n```js\nusing stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">using stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$DvxYzQsKbcPeKkRM3u6FSB8iwa2q5CewBvOPzhJwLdg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689158049148,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M-q4AzoAOfbvYRtkRezHvU_31cOcXlRzzhEUAlHUc14"},
{"content":{"body":"> <@rbuckton:matrix.org> I'm not convinced we even need `[Symbol.enter]()`.\n\nI agree. But if we did want to go in that direction, I think we should retract this proposal to Stage 2, as it's a big change and we don't have a concrete form of this yet.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I'm not convinced we even need <code>[Symbol.enter]()</code>.</blockquote></mx-reply>I agree. But if we did want to go in that direction, I think we should retract this proposal to Stage 2, as it's a big change and we don't have a concrete form of this yet.","m.relates_to":{"m.in_reply_to":{"event_id":"$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ"}},"msgtype":"m.text"},"ts":1689159709293,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$W3xCdSVDoYm-jkvpbzO-jix_DV2Q0-8J9EeTCu0_Agw"},
{"content":{"body":"I think we should conclude that we're not going in this Symbol.enter direction","msgtype":"m.text"},"ts":1689159722069,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs"},
{"content":{"body":"this is just a very big thing to be considered an open question for a Stage 3 proposal","msgtype":"m.text"},"ts":1689159776606,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$oj3ebVplLR8HIF3vMfudCC2jXnW4LBntm4gVdujob1c"},
{"content":{"body":"> <@littledan:matrix.org> I think we should conclude that we're not going in this Symbol.enter direction\n\nnicolo-ribaudo's suggestion to make `[Symbol.dispose]` a getter if you want to opt-in to requiring the use of `using` or a `DisposableStack` holds water and may be satisfactory, without the need to introduce a new symbol-named method to the Disposable protocol: https://github.com/tc39/proposal-explicit-resource-management/issues/159#issuecomment-1630532470","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I think we should conclude that we&#39;re not going in this Symbol.enter direction</blockquote></mx-reply><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>'s suggestion to make <code>[Symbol.dispose]</code> a getter if you want to opt-in to requiring the use of <code>using</code> or a <code>DisposableStack</code> holds water and may be satisfactory, without the need to introduce a new symbol-named method to the Disposable protocol: https://github.com/tc39/proposal-explicit-resource-management/issues/159#issuecomment-1630532470","m.relates_to":{"m.in_reply_to":{"event_id":"$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs"}},"msgtype":"m.text"},"ts":1689159924149,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kj0SRQLBXHu2GIU4AIIWx9wy98Vk6nCUPg0NqeXWmNA"},
{"content":{"body":"it's so strange to me that IETF would explicitly *not* want to support sub-minute offsets","format":"org.matrix.custom.html","formatted_body":"it's so strange to me that IETF would explicitly <em>not</em> want to support sub-minute offsets","msgtype":"m.text"},"ts":1689161102382,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$R_dFameuSDHkou1R7GztbuAQURT4A8x4G2FhtgUxf3I"},
{"content":{"body":"it just feels like painting yourself into a corner for no good reason","msgtype":"m.text"},"ts":1689161121014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NZjoOrgp1EwOoP3q4zIbfGmVYdlLbuIFToozJVLIBJ4"},
{"content":{"body":"be the change you want to see in the world","msgtype":"m.text"},"ts":1689161151665,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$i5ZaoGZILkDU3YJ_vbKp2dcwj8ffGusiW1VIMu9v4ZM"},
{"content":{"body":"do you want sub-minute offset timezone in the world","msgtype":"m.text"},"ts":1689161165419,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iHATev0whRGcs51gRF-QletQJ2_t_TdG09m6hJ--EWU"},
{"content":{"body":"I am not a politician, I do not get to decide that","msgtype":"m.text"},"ts":1689161177593,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s"},
{"content":{"body":"they considered it vestigial and unnecessary","msgtype":"m.text"},"ts":1689161182208,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$jpnnhOmYhK6B5IePcXJDWdlx2let0vqWyqSjI33mpPw"},
{"content":{"body":" * they considered it vestigial and unnecessary moving forwards","m.new_content":{"body":"they considered it vestigial and unnecessary moving forwards","msgtype":"m.text"},"m.relates_to":{"event_id":"$jpnnhOmYhK6B5IePcXJDWdlx2let0vqWyqSjI33mpPw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689161189086,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$afs4KrJCi8xJS1SHTww3XhhI71sD9T6EUIM0mvjLzKo"},
{"content":{"body":"if all the computer people collectively refuse to implement support for it, what are the politicians gonna do?","msgtype":"m.text"},"ts":1689161196713,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OS4aUDJzg88APT0ixQu6-5i4Aj6TPDXjWZ361t1SFnI"},
{"content":{"body":"fwiw, the ISO format still accepts all sorts of input","msgtype":"m.text"},"ts":1689161201899,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$7v-5Zc3gMNwFSTvUZX66xFp2u48PGPTs56v-XAWfBNI"},
{"content":{"body":"I would not be at all surprised if the DPRK changed their timezone (again) to a sub-minute offset","msgtype":"m.text"},"ts":1689161203352,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KEeILbjK9XhAHr9CYQbq5x5YOdu-pjyCMAwbkvQ9tCg"},
{"content":{"body":"the time is whatever my phone tells me it is, not what a politician announces","msgtype":"m.text"},"ts":1689161206519,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1-VvdMBvAz3isaY5NOggqLMsLrEd88nwj2fLTocnwjQ"},
{"content":{"body":"but IETF prefers to maintain a leaner profile","msgtype":"m.text"},"ts":1689161208902,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$n5zjQNr1Zb3uFk_4EVlQeyLozdgFTB2MdmefQahlhnk"},
{"content":{"body":"> <@michaelficarra:matrix.org> I am not a politician, I do not get to decide that\n\nyou sell yourself short dear mr ficarra","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I am not a politician, I do not get to decide that</blockquote></mx-reply>you sell yourself short dear mr ficarra","m.relates_to":{"m.in_reply_to":{"event_id":"$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s"}},"msgtype":"m.text"},"ts":1689161230009,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uhtUUhc-H9EHt5gXI8BRTsU_vjkBjsx_Jpjg34Yk-5w"},
{"content":{"body":"bakkot: the DPRK makes their own OS","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the DPRK makes their own OS","msgtype":"m.text"},"ts":1689161238144,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI"},
{"content":{"body":"i too skinned Linux when i was 10","msgtype":"m.text"},"ts":1689161251189,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$clgiX-ED1BiAeO7LgbkheKKsIMLWyGV0jrGxhRtA1dM"},
{"content":{"body":"> <@michaelficarra:matrix.org> bakkot: the DPRK makes their own OS\n\nI really wanted to respond but this isn't TDZ 😛 ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the DPRK makes their own OS</blockquote></mx-reply>I really wanted to respond but this isn't TDZ 😛","m.relates_to":{"m.in_reply_to":{"event_id":"$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI"}},"msgtype":"m.text"},"ts":1689161289018,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$azG4J13Rbex52iSbDVpAp527xiqzbnkRjeNcRAxtXC8"},
{"content":{"body":"yes, the limitation of being unhinged and deranged about time zones","msgtype":"m.text"},"ts":1689161335537,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OHVuKCtRFhXCN4OBWiGzAmmprhRuc_c2hF_9xGUFPUw"},
{"content":{"body":"FWIW, `Asia/Pyongyang` could still have a sub-minute offset. the limitation doesn't apply to named time zones","format":"org.matrix.custom.html","formatted_body":"FWIW, <code>Asia/Pyongyang</code> could still have a sub-minute offset. the limitation doesn't apply to named time zones","msgtype":"m.text"},"ts":1689162698020,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$jfngq1b0oxuRVEMT7vTsMI0Xd0u103HKo54jwImV4g4"},
{"content":{"body":"Yes, this only applies to in-timestamp offsets","msgtype":"m.text"},"ts":1689162857596,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$oCun5LS2TJse32iA4I7ieJkKu4fCkJ-P75_ZOrwvlX0"},
{"content":{"body":"I think the details of whether engines ship the Intl-only part separately or just together with Intl is something that we can leave to engines to decide. If an engine expects to take a really long time to do Temporal, they might do the Intl-only part. But Temporal should only ship with this included, and it'd be valid to ship at the same time. Within this, I think 2a would be the simplest way to organize the explanations.","msgtype":"m.text"},"ts":1689163180555,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AnwMhw03xim44s_DW1cI3vsADos3CwitsPGhez5zqHw"},
{"content":{"body":"> <@littledan:matrix.org> I think the details of whether engines ship the Intl-only part separately or just together with Intl is something that we can leave to engines to decide. If an engine expects to take a really long time to do Temporal, they might do the Intl-only part. But Temporal should only ship with this included, and it'd be valid to ship at the same time. Within this, I think 2a would be the simplest way to organize the explanations.\n\nerr, never mind--I'm convinced by what Shu and Justin said, about how missing the .equals method is fatal for shipping separately","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$AnwMhw03xim44s_DW1cI3vsADos3CwitsPGhez5zqHw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I think the details of whether engines ship the Intl-only part separately or just together with Intl is something that we can leave to engines to decide. If an engine expects to take a really long time to do Temporal, they might do the Intl-only part. But Temporal should only ship with this included, and it&#39;d be valid to ship at the same time. Within this, I think 2a would be the simplest way to organize the explanations.</blockquote></mx-reply>err, never mind--I'm convinced by what Shu and Justin said, about how missing the .equals method is fatal for shipping separately","m.relates_to":{"m.in_reply_to":{"event_id":"$AnwMhw03xim44s_DW1cI3vsADos3CwitsPGhez5zqHw"}},"msgtype":"m.text"},"ts":1689163367075,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bzoOK_Ql3q165qG8uwxn7FJJB3qVRHm-I_CmRwDxNR8"},
{"content":{"body":"sffc: no we can't implement the non-temporal parts sooner","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sffc:mozilla.org\">sffc</a>: no we can't implement the non-temporal parts sooner","msgtype":"m.text"},"ts":1689163504393,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fdYw_qfYxU9jx76tlN81icT8ZcGxSy0frUgip03h7Jk"},
{"content":{"body":"because of what dan just said","msgtype":"m.text"},"ts":1689163511432,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$18eD32SCffY5HJO12uIa8CODUhocqUqM7Xt4QSndqkk"},
{"content":{"body":"It still seems like we should stop returning Saigon and Kiev despite the lack of a Temporal.TimeZone.prototype.equals","msgtype":"m.text"},"ts":1689163750194,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$foOPt0Vj5Zb8WWucAI2CmHm_reAgOPd-wNCz57feHBg"},
{"content":{"body":"that's what I was getting at, but I take Shu's point that that causes interoperability problems","msgtype":"m.text"},"ts":1689163808107,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$OP8nrLP0DJYG9lFVN6eokNQ-1lD09WXclE90PCSlIT4"},
{"content":{"body":"I do like this proposal but I still wish we had `import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }` etc","format":"org.matrix.custom.html","formatted_body":"I do like this proposal but I still wish we had <code>import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }</code> etc","msgtype":"m.text"},"ts":1689163905978,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mIe2XUGSpKWZS31jwDRh-KIr2KLCa8ZNifZvTSPSX0Y"},
{"content":{"body":"instead of needing to import the source and then compile it yourself","msgtype":"m.text"},"ts":1689163958521,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ec1pOfcFeGnPkY8gOmJLraGs5t6z6LjWnq2dbVf9ots"},
{"content":{"body":"that's just kinda silly","msgtype":"m.text"},"ts":1689163961274,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Rp9x1rETwXs72jJSmLhF3nxCrNLJ5nskJCCGf6aeFQU"},
{"content":{"body":"is that a static import with a `new ArrayBuffer`","format":"org.matrix.custom.html","formatted_body":"is that a static import with a <code>new ArrayBuffer</code>","msgtype":"m.text"},"ts":1689163966366,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E6aWdxfuEEAplv9zV91T4f-TGN2SbO3yW4nO2DUxPtM"},
{"content":{"body":"how does that work","msgtype":"m.text"},"ts":1689163971341,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OUWsPAQQl1wfe6P5u9qm-SYTfoFHNc0d8RiH65G6Yf4"},
{"content":{"body":"> <@bakkot:matrix.org> I do like this proposal but I still wish we had `import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }` etc\n\nEvaluating expressions even before linking the modiule graph seems... hard","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mIe2XUGSpKWZS31jwDRh-KIr2KLCa8ZNifZvTSPSX0Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I do like this proposal but I still wish we had <code>import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }</code> etc</blockquote></mx-reply>Evaluating expressions even before linking the modiule graph seems... hard","m.relates_to":{"m.in_reply_to":{"event_id":"$mIe2XUGSpKWZS31jwDRh-KIr2KLCa8ZNifZvTSPSX0Y"}},"msgtype":"m.text"},"ts":1689163972202,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$18s_Vx3hP9Dp_h2vuunTipDgB6En9t-HmtiUUb3YvU0"},
{"content":{"body":"> <@bakkot:matrix.org> I do like this proposal but I still wish we had `import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }` etc\n\n * Evaluating expressions even before linking the module graph seems... difficult","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mIe2XUGSpKWZS31jwDRh-KIr2KLCa8ZNifZvTSPSX0Y?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>I do like this proposal but I still wish we had <code>import program from 'source.wasm' with { imports: whatever, memory: new ArrayBuffer(1000) }</code> etc</blockquote></mx-reply> * Evaluating expressions even before linking the module graph seems... difficult","m.new_content":{"body":"Evaluating expressions even before linking the module graph seems... difficult","format":"org.matrix.custom.html","formatted_body":"Evaluating expressions even before linking the module graph seems... difficult","msgtype":"m.text"},"m.relates_to":{"event_id":"$18s_Vx3hP9Dp_h2vuunTipDgB6En9t-HmtiUUb3YvU0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689163992160,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$82_K4L98YtFOwayZMTBHih348M_5gL3KYPEciFWNNfE"},
{"content":{"body":"you do the downloading and so on right away but don't do the actual instantiation until you hit the `import` declaration","format":"org.matrix.custom.html","formatted_body":"you do the downloading and so on right away but don't do the actual instantiation until you hit the <code>import</code> declaration","msgtype":"m.text"},"ts":1689164015779,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JA7vyti4_GsycOKKy61dYze9tQZtx3-28z8K_kWX7e4"},
{"content":{"body":"this does not seem hard to me?","msgtype":"m.text"},"ts":1689164019066,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wnf_wMvfDcKBC96sW4Eoc50xMjejeh93ahQ7lVgcyb8"},
{"content":{"body":"> <@pchimento:igalia.com> that's what I was getting at, but I take Shu's point that that causes interoperability problems\n\nok, sorry for my misunderstanding","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$OP8nrLP0DJYG9lFVN6eokNQ-1lD09WXclE90PCSlIT4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@pchimento:igalia.com\">@pchimento:igalia.com</a><br>that&#39;s what I was getting at, but I take Shu&#39;s point that that causes interoperability problems</blockquote></mx-reply>ok, sorry for my misunderstanding","m.relates_to":{"m.in_reply_to":{"event_id":"$OP8nrLP0DJYG9lFVN6eokNQ-1lD09WXclE90PCSlIT4"}},"msgtype":"m.text"},"ts":1689164065720,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$YoxgZF94Y9oLNtZp_4MDQO-9BQT6zxsz9_3NkvFEXNQ"},
{"content":{"body":"And you cannot capture bindings from outside the import declaration? i.e.\n\n```js\nlet buf = new ArrayBuffer()\nimport program from 'source.wasm' with { memory: buf } \n```","format":"org.matrix.custom.html","formatted_body":"<p>And you cannot capture bindings from outside the import declaration? i.e.</p>\n<pre><code class=\"language-js\">let buf = new ArrayBuffer()\nimport program from 'source.wasm' with { memory: buf } \n</code></pre>\n","msgtype":"m.text"},"ts":1689164086733,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BOk0ov868N_HyNQaAdvRCPypsx3RtUbS_RtaFOF_Pqs"},
{"content":{"body":"no I am imagining that would work as written","msgtype":"m.text"},"ts":1689164127104,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3tWgnvCO6M_PtziKqFg3Uh8-1svXHnzcDEjEwtFCZqM"},
{"content":{"body":"don't see why it shouldn't","msgtype":"m.text"},"ts":1689164134819,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TyPmtSAWIH6ftNnUKuD5Dyqr79jVJAE1EWsEnIzZDoY"},
{"content":{"body":"That could work with CJS where modules are evaluated before their dependencies, but with ESM `buf` does not exist until when all the imported modules are evaluated","format":"org.matrix.custom.html","formatted_body":"That could work with CJS where modules are evaluated before their dependencies, but with ESM <code>buf</code> does not exist until when all the imported modules are evaluated","msgtype":"m.text"},"ts":1689164136398,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$L0RCC1qDjBpwjskAvnPWKKujqoDRccmYCjfLo_mYgmg"},
{"content":{"body":"there are multiple notions of \"evaluated\" wrt wasm","msgtype":"m.text"},"ts":1689164157130,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$avYdTeXHTueEv4gqzaV-qk4KFiWESWmIjCfZBah_dFI"},
{"content":{"body":"the obvious thing for it to do is to download the thing but not actually instantiate until you hit the import declaration, at which point `buf` is available","format":"org.matrix.custom.html","formatted_body":"the obvious thing for it to do is to download the thing but not actually instantiate until you hit the import declaration, at which point <code>buf</code> is available","msgtype":"m.text"},"ts":1689164198994,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nrfhR9wAdgBVQm7-pSrx_8bxMqPKNEPKr3TLdCTQp4w"},
{"content":{"body":"what is \"hit the import declaration\"","msgtype":"m.text"},"ts":1689164217949,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kWNgVzGcUfDk-0GMWp3PSpJE7j1F10nTv4SqDEmcGEE"},
{"content":{"body":"like, get to that line in the program","msgtype":"m.text"},"ts":1689164236348,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$H5WNMYJSrLbUR-79FezYhf1uxi6D7ukLNyMl0bG89t0"},
{"content":{"body":"evaluation semantics for an ImportDeclaration","msgtype":"m.text"},"ts":1689164237321,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$zMpI0yKk7B0gy5JfXt0gxsVzOZjZV9vcEhNMfZxHjlU"},
{"content":{"body":"the import declaration is just parsed and collected and processed ahead of time right now, it's not even in the compiled AST","msgtype":"m.text"},"ts":1689164296737,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pAEgTbKvx7XA57Ic3kTEKAbzU35PfgWDr4okxt9bEbQ"},
{"content":{"body":"i don't think import has evaluation does it","msgtype":"m.text"},"ts":1689164300578,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ce3EU40Jl3R5UbMeg2T4zzl_7yLP9xzncJzRXBvtauI"},
{"content":{"body":"like we could add it but that seems a radical departure from what it does right now","msgtype":"m.text"},"ts":1689164311659,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zxQsBqS9IAzWEcRBQzPcuzKjGLM_XClAHcMG3SuVC_w"},
{"content":{"body":" * the import declaration is just parsed and collected and processed ahead of time right now, it's not even in the AST sent to the compiler","m.new_content":{"body":"the import declaration is just parsed and collected and processed ahead of time right now, it's not even in the AST sent to the compiler","msgtype":"m.text"},"m.relates_to":{"event_id":"$pAEgTbKvx7XA57Ic3kTEKAbzU35PfgWDr4okxt9bEbQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689164328162,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t_0dIOSmbR1xEYkIVbr9zd2IivVCFqVy-KzZmLOZdvY"},
{"content":{"body":"Also, import declarations are hoisted. Capturing from inside them has the same problems discussed for function declaration decorators","msgtype":"m.text"},"ts":1689164336784,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$zYOgqqtZVN15J2hd4DuDPHP92yR1cs_Mry3PDKwVS2A"},
{"content":{"body":"to be clear I am not super-seriously proposing this","msgtype":"m.text"},"ts":1689164346607,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q0LdPi2uEean-a0Jg30Cj2mO_xaKOTnpxRL55TvUZZg"},
{"content":{"body":"I agree the hoisting is annoying technically","msgtype":"m.text"},"ts":1689164357483,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RuwqyS0bLozkuKAbv57_juLgFNA1BKq3jnmChQdBIdA"},
{"content":{"body":"however, no real program relies on hoisting import declarations, because that's batshit","msgtype":"m.text"},"ts":1689164368278,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mPXXFnf1W-z_RAoQ6_e6Hk2QnczxRINMkaXjSYJvcy4"},
{"content":{"body":"Also to be clear, I also hope we'll have direct imports for wasm one day","msgtype":"m.text"},"ts":1689164369807,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$6F5rSpYuU9oCuIHC2_iDZ79QHA8OOXwfiTlMBpk2XDE"},
{"content":{"body":"so it still feels like the code sample above should just work as written","msgtype":"m.text"},"ts":1689164387291,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sUlIt5ghfDHFI-KLRREHtsM1-VEqrsVJ537qOGvoOBU"},
{"content":{"body":"hm, can you `class extends AbstractModuleSource { }` if it's not constructable or callable?","format":"org.matrix.custom.html","formatted_body":"hm, can you <code>class extends AbstractModuleSource { }</code> if it's not constructable or callable?","msgtype":"m.text"},"ts":1689164403047,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UWzhkBqiAV8-MVavW43SZCfSb1TtocRobpM3NvR-S1M"},
{"content":{"body":"i don't understand the spec draft as written","msgtype":"m.text"},"ts":1689164413416,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_GoPwloJaUsgJ4P2zB7C_6lLCwxRct534NVF9G4M_Pc"},
{"content":{"body":"if you use direct Wasm imports, then that Wasm module can import a memory from a different ESM module that explicitly constructs it.","msgtype":"m.text"},"ts":1689164414554,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FCag4y3BrVbZfYRyJSBwkSEgSuF6fnhe6CG6sfR6sTQ"},
{"content":{"body":"> <@bakkot:matrix.org> however, no real program relies on hoisting import declarations, because that's batshit\n\n(hoisting in the function declaration sense, that is)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$mPXXFnf1W-z_RAoQ6_e6Hk2QnczxRINMkaXjSYJvcy4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>however, no real program relies on hoisting import declarations, because that&#39;s batshit</blockquote></mx-reply>(hoisting in the function declaration sense, that is)","m.relates_to":{"m.in_reply_to":{"event_id":"$mPXXFnf1W-z_RAoQ6_e6Hk2QnczxRINMkaXjSYJvcy4"}},"msgtype":"m.text"},"ts":1689164416379,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Qc3b0moTyitXmHazJAgqAP0ls_dnYG_-AoHr7zTFFWM"},
{"content":{"body":"> <@ljharb:matrix.org> hm, can you `class extends AbstractModuleSource { }` if it's not constructable or callable?\n\nYes but you cannot then call `super()`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UWzhkBqiAV8-MVavW43SZCfSb1TtocRobpM3NvR-S1M?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>hm, can you <code>class extends AbstractModuleSource { }</code> if it's not constructable or callable?</blockquote></mx-reply>Yes but you cannot then call <code>super()</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$UWzhkBqiAV8-MVavW43SZCfSb1TtocRobpM3NvR-S1M"}},"msgtype":"m.text"},"ts":1689164419578,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$NO7PFqmEVFS9ZA-WplM7uTEayozkxrIXeVxvkiDMMeM"},
{"content":{"body":"> (hoisting in the function declaration sense, that is)\nreally? you don't write mutually recursive functions?","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>(hoisting in the function declaration sense, that is)<br>really? you don't write mutually recursive functions?</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1689164439739,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LpXAgba-65-G5oV3nUyhLBCjWnFwalh3D2BkZwyDM7g"},
{"content":{"body":" * > (hoisting in the function declaration sense, that is)\n\nreally? you don't write mutually recursive functions?","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\n<p>(hoisting in the function declaration sense, that is)</p>\n</blockquote>\n<p>really? you don't write mutually recursive functions?</p>\n","m.new_content":{"body":"> (hoisting in the function declaration sense, that is)\n\nreally? you don't write mutually recursive functions?","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>(hoisting in the function declaration sense, that is)</p>\n</blockquote>\n<p>really? you don't write mutually recursive functions?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$LpXAgba-65-G5oV3nUyhLBCjWnFwalh3D2BkZwyDM7g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689164447656,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IWneM_zQc--EA9nxZLzWaY_hb5Leox6n07A9ZRRA4IY"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Yes but you cannot then call `super()`\n\nok so there's no way for a subclass to get the internal slot in a self-hosted-in-JS implementation?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$NO7PFqmEVFS9ZA-WplM7uTEayozkxrIXeVxvkiDMMeM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Yes but you cannot then call <code>super()</code></blockquote></mx-reply>ok so there's no way for a subclass to get the internal slot in a self-hosted-in-JS implementation?","m.relates_to":{"m.in_reply_to":{"event_id":"$NO7PFqmEVFS9ZA-WplM7uTEayozkxrIXeVxvkiDMMeM"}},"msgtype":"m.text"},"ts":1689164460981,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wpV2F0mZWQQQBEWccbS4rcs3W8sARDrdD8B3cnKV8eM"},
{"content":{"body":"> <@shuyuguo:matrix.org> > (hoisting in the function declaration sense, that is)\n> \n> really? you don't write mutually recursive functions?\n\nWell, you don't write mutually recursive imports","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$LpXAgba-65-G5oV3nUyhLBCjWnFwalh3D2BkZwyDM7g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br><blockquote>\n<p>(hoisting in the function declaration sense, that is)</p>\n</blockquote>\n<p>really? you don't write mutually recursive functions?</p>\n</blockquote></mx-reply>Well, you don't write mutually recursive imports","m.relates_to":{"m.in_reply_to":{"event_id":"$LpXAgba-65-G5oV3nUyhLBCjWnFwalh3D2BkZwyDM7g"}},"msgtype":"m.text"},"ts":1689164470502,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ah45DDAMLX7orASUfC3JKEBNvRD6JS7EFwlGImG85HY"},
{"content":{"body":"oh i misunderstood the point","msgtype":"m.text"},"ts":1689164481031,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vVhAePwd5G01pLJ3cH-hlHKeNfUIgRXhoLsnf0xbz48"},
{"content":{"body":"not that nobody relies on the hoisting function semantics, but the hoisting import semantics that are like the hoisting function semantics","msgtype":"m.text"},"ts":1689164494201,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$EnXV3bPV-wpEbJ-Qu-93F2EP2_FWacXGZ2os5uu-7qI"},
{"content":{"body":"It's pretty common to use function hoisting in a sillier way, like\n\n```js\nfoo.onbar = fn;\nfunction fn() { }\n```\n\nIn fact, fear of breaking this particular pattern is what's holding back function decorators","format":"org.matrix.custom.html","formatted_body":"<p>It's pretty common to use function hoisting in a sillier way, like</p>\n<pre><code class=\"language-js\">foo.onbar = fn;\nfunction fn() { }\n</code></pre>\n<p>In fact, fear of breaking this particular pattern is what's holding back function decorators</p>\n","msgtype":"m.text"},"ts":1689164496090,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SoDnia_ngFWAHYyNl5DccleXjc6_THsErB4nwpi9FBA"},
{"content":{"body":"> <@shuyuguo:matrix.org> not that nobody relies on the hoisting function semantics, but the hoisting import semantics that are like the hoisting function semantics\n\nright exactly","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EnXV3bPV-wpEbJ-Qu-93F2EP2_FWacXGZ2os5uu-7qI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>not that nobody relies on the hoisting function semantics, but the hoisting import semantics that are like the hoisting function semantics</blockquote></mx-reply>right exactly","m.relates_to":{"m.in_reply_to":{"event_id":"$EnXV3bPV-wpEbJ-Qu-93F2EP2_FWacXGZ2os5uu-7qI"}},"msgtype":"m.text"},"ts":1689164511062,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_ILlmjLeh-04UVFH8AUcPAzlnW3JFa2AIIg_B-Eqwnw"},
{"content":{"body":"> <@shuyuguo:matrix.org> not that nobody relies on the hoisting function semantics, but the hoisting import semantics that are like the hoisting function semantics\n\nanyway yes this is how import statements work","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EnXV3bPV-wpEbJ-Qu-93F2EP2_FWacXGZ2os5uu-7qI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>not that nobody relies on the hoisting function semantics, but the hoisting import semantics that are like the hoisting function semantics</blockquote></mx-reply>anyway yes this is how import statements work","m.relates_to":{"m.in_reply_to":{"event_id":"$EnXV3bPV-wpEbJ-Qu-93F2EP2_FWacXGZ2os5uu-7qI"}},"msgtype":"m.text"},"ts":1689164514218,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$O3LMJXhxCmXPSYk8OwakIP3euNrProy72GbIVGM8S2Y"},
{"content":{"body":"concretely, no one writes an `import` declaration at the bottom of a file and code which runs right away which uses a binding from the `import` at the top of the file","format":"org.matrix.custom.html","formatted_body":"concretely, no one writes an <code>import</code> declaration at the bottom of a file and code which runs right away which uses a binding from the <code>import</code> at the top of the file","msgtype":"m.text"},"ts":1689164541767,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$e7v_W7Cj5jHZsZ1PoWpWHqb4VQzvmjdtD64mq_JDfKc"},
{"content":{"body":"nicolo-ribaudo: it shouldn't unconditionally throw, it should just throw if it's its own NewTarget","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: it shouldn't unconditionally throw, it should just throw if it's its own NewTarget","msgtype":"m.text"},"ts":1689164542907,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mTDMbBOfALinB0yqCRFEJYvUOEJM0ZS6hpFKlN8ag7s"},
{"content":{"body":"i think the current spec draft is just wrong about the abstract constructor thing","msgtype":"m.text"},"ts":1689164574128,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x3f_YWy-c5GSKYfCdAI0_wEL_3_-dA22J63kWGngwG8"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/3094#discussion_r1230304753","msgtype":"m.text"},"ts":1689164579819,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VOyh3nZovAoh1eJMrZYnWzRusQamCIovU9qu8z1UmG8"},
{"content":{"body":"(I need to look at the proposal spec before answering to that)","msgtype":"m.text"},"ts":1689164581666,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$7iDPQCA3j9v4ca6r60-DPJ6_PFhP-g4zq80DAAS32tE"},
{"content":{"body":"it's unconditionally throwing now but the comment suggests otherwise","msgtype":"m.text"},"ts":1689164582403,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dT6TPi8b178qlIHKkt7Ma_xwVmNV6S284LGq0Y6GPfo"},
{"content":{"body":"> <@shuyuguo:matrix.org> it's unconditionally throwing now but the comment suggests otherwise\n\nThis is resolved by the Wasm subclass behavior","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$dT6TPi8b178qlIHKkt7Ma_xwVmNV6S284LGq0Y6GPfo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>it&#39;s unconditionally throwing now but the comment suggests otherwise</blockquote></mx-reply>This is resolved by the Wasm subclass behavior","m.relates_to":{"m.in_reply_to":{"event_id":"$dT6TPi8b178qlIHKkt7Ma_xwVmNV6S284LGq0Y6GPfo"}},"msgtype":"m.text"},"ts":1689164596136,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kVH2IEnXYDoTy73QgSn3szDWk53ggqj3ZEhOZChkbBY"},
{"content":{"body":"how can you resolve that in the subclass behavior","msgtype":"m.text"},"ts":1689164608229,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s9kOerfdPEJjdK1NVcbIZ-aSawnWxCVOqjVO5HCKDAU"},
{"content":{"body":"what installs the brand?","msgtype":"m.text"},"ts":1689164632796,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_LEffJ0oS6HsNG_v3N0wQ5emeBrHr2aJ9xQgaNNO8kA"},
{"content":{"body":"the cyclic module record superclass throws; the wasm module subclass does another thing","msgtype":"m.text"},"ts":1689164638826,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fTNJmrGZ1uOSybslWAvcvoudVX6ULyrnM7qLdTUQ_Go"},
{"content":{"body":"it's installed when parsing the Wasm module, by construction","msgtype":"m.text"},"ts":1689164651493,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zGQt7JQX95TmJjEc4xDikRXm6aSWfMJekRhFk1nxmkI"},
{"content":{"body":"> <@littledan:matrix.org> It's pretty common to use function hoisting in a sillier way, like\n> \n> ```js\n> foo.onbar = fn;\n> function fn() { }\n> ```\n> \n> In fact, fear of breaking this particular pattern is what's holding back function decorators\n\nsillier? This is a common practice in the TS codebase, i.e.:\n```ts\nfunction createFoo() {\n  const quxx = ...;\n\n  return {\n    bar,\n    baz,\n  };\n\n  function bar() { ... }\n  function baz() { ... }\n}\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$SoDnia_ngFWAHYyNl5DccleXjc6_THsErB4nwpi9FBA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br><p>It's pretty common to use function hoisting in a sillier way, like</p>\n<pre><code class=\"language-js\">foo.onbar = fn;\nfunction fn() { }\n</code></pre>\n<p>In fact, fear of breaking this particular pattern is what's holding back function decorators</p>\n</blockquote></mx-reply><p>sillier? This is a common practice in the TS codebase, i.e.:</p>\n<pre><code class=\"language-ts\">function createFoo() {\n  const quxx = ...;\n\n  return {\n    bar,\n    baz,\n  };\n\n  function bar() { ... }\n  function baz() { ... }\n}\n</code></pre>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$SoDnia_ngFWAHYyNl5DccleXjc6_THsErB4nwpi9FBA"}},"msgtype":"m.text"},"ts":1689164652201,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$-g5F-EYx-gLBZtwFh2G3VSqN8s04PGUgDVfmL-aN9WM"},
{"content":{"body":"> <@rbuckton:matrix.org> sillier? This is a common practice in the TS codebase, i.e.:\n> ```ts\n> function createFoo() {\n>   const quxx = ...;\n> \n>   return {\n>     bar,\n>     baz,\n>   };\n> \n>   function bar() { ... }\n>   function baz() { ... }\n> }\n> ```\n\nsorry I shouldn't've included a value judgement","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$-g5F-EYx-gLBZtwFh2G3VSqN8s04PGUgDVfmL-aN9WM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><p>sillier? This is a common practice in the TS codebase, i.e.:</p>\n<pre><code class=\"language-ts\">function createFoo() {\n  const quxx = ...;\n\n  return {\n    bar,\n    baz,\n  };\n\n  function bar() { ... }\n  function baz() { ... }\n}\n</code></pre>\n</blockquote></mx-reply>sorry I shouldn't've included a value judgement","m.relates_to":{"m.in_reply_to":{"event_id":"$-g5F-EYx-gLBZtwFh2G3VSqN8s04PGUgDVfmL-aN9WM"}},"msgtype":"m.text"},"ts":1689164663473,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Oothnd7-seo7yynZYVRXick05VFbWSGcXpQ4vpVMspg"},
{"content":{"body":"littledan: i don't understand. happy to see spec text though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: i don't understand. happy to see spec text though","msgtype":"m.text"},"ts":1689164665924,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Q8qOHy62KzYM752GoX4aBl05hn1x6kkI0QtwD7t0aWA"},
{"content":{"body":"shu: https://webassembly.github.io/esm-integration/js-api/index.html#get-module-source","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: https://webassembly.github.io/esm-integration/js-api/index.html#get-module-source","msgtype":"m.text"},"ts":1689164694723,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vqwdZ0BklZe9tezS0iEDqGa0QRkFVAI8WqPai7yNj3c"},
{"content":{"body":"how does that interface with %AbstractModuleSource%","msgtype":"m.text"},"ts":1689164709966,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OKFXOO1UnoJwseQGsb_-h9r-ofmzZT14d3i4-umtgLs"},
{"content":{"body":"It sets the internal slot in step 4 of https://webassembly.github.io/esm-integration/js-api/index.html#construct-a-webassembly-module-object","msgtype":"m.text"},"ts":1689164742504,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$4pdW7UwsNTFCDjCE2Pis_x7gjkM-kWLOzLWWsLLO_2w"},
{"content":{"body":"(oops sorry I was answering the wrong question)","msgtype":"m.text"},"ts":1689164753020,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$O7mPXHXrbVJsSTiDgsrB0AueaKPTqENVDas9rOWGCU0"},
{"content":{"body":"someone is typing loudly again","msgtype":"m.text"},"ts":1689164765437,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$b0F5rdOvByB_UI8S8PCRuRsUmUohJr7Xp9MHTytKliE"},
{"content":{"body":"However yes, there is no way for JS code to create objects with that internal slot with the current spec (@ljharb)","msgtype":"m.text"},"ts":1689164779464,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$VxCc3DTkfRAQbxXL5R2z8PXgMajX8iC_F5Orhwc1jco"},
{"content":{"body":"> <@bakkot:matrix.org> someone is typing loudly again\n\nSorry, me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$b0F5rdOvByB_UI8S8PCRuRsUmUohJr7Xp9MHTytKliE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>someone is typing loudly again</blockquote></mx-reply>Sorry, me","m.relates_to":{"m.in_reply_to":{"event_id":"$b0F5rdOvByB_UI8S8PCRuRsUmUohJr7Xp9MHTytKliE"}},"msgtype":"m.text"},"ts":1689164783324,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$FDAFYNpWm2rnM2-nEmPdqiSbRatO_x41LUQVkVg9bPQ"},
{"content":{"body":"that seems like a problem","msgtype":"m.text"},"ts":1689164784134,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZgslPV8XPftv9oRqGO8IPbvgtHL_ric5ZFPKfAyx1jM"},
{"content":{"body":"> <@bakkot:matrix.org> someone is typing loudly again\n\ndid it stop for you?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$b0F5rdOvByB_UI8S8PCRuRsUmUohJr7Xp9MHTytKliE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>someone is typing loudly again</blockquote></mx-reply>did it stop for you?","m.relates_to":{"m.in_reply_to":{"event_id":"$b0F5rdOvByB_UI8S8PCRuRsUmUohJr7Xp9MHTytKliE"}},"msgtype":"m.text"},"ts":1689164809912,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$o_UAi31PlphBbLBe1bczma2_SVPdFFOnIpsiKV62nKE"},
{"content":{"body":"Do y'all think that throwing only if constructed directly would be an acceptable solution?","msgtype":"m.text"},"ts":1689164813920,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$19fpCgQU-vZKAAtCUm3y9ZGglycAmUER6oHKg8J-R8Y"},
{"content":{"body":"that works for me","msgtype":"m.text"},"ts":1689164827450,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$GJLkBqnpMhSsG-h6W6MnYCYzQ8EkL7BxSzbHOk5bA2I"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Do y'all think that throwing only if constructed directly would be an acceptable solution?\n\n(I do not remember why we throw)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$19fpCgQU-vZKAAtCUm3y9ZGglycAmUER6oHKg8J-R8Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Do y&#39;all think that throwing only if constructed directly would be an acceptable solution?</blockquote></mx-reply>(I do not remember why we throw)","m.relates_to":{"m.in_reply_to":{"event_id":"$19fpCgQU-vZKAAtCUm3y9ZGglycAmUER6oHKg8J-R8Y"}},"msgtype":"m.text"},"ts":1689164831211,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$R59cgdPOowVuFfvB-uo1lYjOphBRUhuEeyMzY9mE9xA"},
{"content":{"body":" * that works for me, based on new.target or something","m.new_content":{"body":"that works for me, based on new.target or something","msgtype":"m.text"},"m.relates_to":{"event_id":"$GJLkBqnpMhSsG-h6W6MnYCYzQ8EkL7BxSzbHOk5bA2I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689164833447,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gkxiaYkY8EvSuIll5NTkAURAp-aowjjJx1hjaQOlG9c"},
{"content":{"body":"> <@littledan:matrix.org> did it stop for you?\n\nit has stopped now yes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$o_UAi31PlphBbLBe1bczma2_SVPdFFOnIpsiKV62nKE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>did it stop for you?</blockquote></mx-reply>it has stopped now yes","m.relates_to":{"m.in_reply_to":{"event_id":"$o_UAi31PlphBbLBe1bczma2_SVPdFFOnIpsiKV62nKE"}},"msgtype":"m.text"},"ts":1689164835532,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jqa_vQxsP4d2RKGcLUBQYn-XF9ncIjW4Od-1TQuNWZI"},
{"content":{"body":"nicolo-ribaudo: yes, that is what we suggested here: https://github.com/tc39/ecma262/pull/3094#discussion_r1230304753","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: yes, that is what we suggested here: https://github.com/tc39/ecma262/pull/3094#discussion_r1230304753","msgtype":"m.text"},"ts":1689164886095,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eyfgZy8Hkw9JzPYklsA2m6n7nkJgWAGuEOVUNnGGXes"},
{"content":{"body":"I'm trying to find references as to why we introduced the throwing behavior in the first place","msgtype":"m.text"},"ts":1689164928752,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$6UBAJ959S_ZUY6gOrfbl5pjjf0SQJ1Lr94zFo6kmN_g"},
{"content":{"body":"if there's no JS-exposed API for setting that internal brand slot (e.g., a super constructor parameter), then the constructor isn't very useful","msgtype":"m.text"},"ts":1689164967069,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kk6je7mNsYaBfLIqZuxh7utSaeu249z_Ku8prAYe-YA"},
{"content":{"body":"whether or not it throws","msgtype":"m.text"},"ts":1689164972848,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6MRnT7f6B1SrnO1yQC4W4Wg141RdMd3qJkLH6kJ2Iu4"},
{"content":{"body":"hm, that is true","msgtype":"m.text"},"ts":1689165001191,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$j-MFqbNmnQIwN--3stB2SsAKxyKbfucLJwF25M8AhYI"},
{"content":{"body":"it seems important to be able to self-host in JS tho","msgtype":"m.text"},"ts":1689165012103,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uXZqOT1s-HIQ5HHP-3ZvgtV0EMLSjS8senGgGC10_6E"},
{"content":{"body":"to me this feels like something that's OK to unconditionally throw \"for now\" with a hope that we expand this out soon (maybe in the context of compartments)","msgtype":"m.text"},"ts":1689165034546,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NIJrxxDW_L3WRcTfbwPOGCSGdDYsuw4PG8gPLz11KrQ"},
{"content":{"body":"> <@ljharb:matrix.org> it seems important to be able to self-host in JS tho\n\nWithout custom module loading you cannot self-host modules anyway","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uXZqOT1s-HIQ5HHP-3ZvgtV0EMLSjS8senGgGC10_6E?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>it seems important to be able to self-host in JS tho</blockquote></mx-reply>Without custom module loading you cannot self-host modules anyway","m.relates_to":{"m.in_reply_to":{"event_id":"$uXZqOT1s-HIQ5HHP-3ZvgtV0EMLSjS8senGgGC10_6E"}},"msgtype":"m.text"},"ts":1689165067558,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$p1N8xxFBNdikERgwfOBX9Jo460LHLcOARJlneSbz2xk"},
{"content":{"body":"you could with on-the-fly source rewriting, no?","msgtype":"m.text"},"ts":1689165088024,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$j_yAbAzOgH-H0kiFfWOaj_c9RrTuKWfrqzmDPIXqjXU"},
{"content":{"body":"\"instantiable\" would be a name reflecting intuition? I think this sounds just vaguely computer-y.","msgtype":"m.text"},"ts":1689165100321,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NM1YAjpO-Hb0YpLidvwt63CZ2SUM8rXzZjUb4a1bPto"},
{"content":{"body":" * you could with on-the-fly source rewriting, no? i don't mean virtualization which indeed would require custom module loading","m.new_content":{"body":"you could with on-the-fly source rewriting, no? i don't mean virtualization which indeed would require custom module loading","msgtype":"m.text"},"m.relates_to":{"event_id":"$j_yAbAzOgH-H0kiFfWOaj_c9RrTuKWfrqzmDPIXqjXU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165103042,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xMDJrKIuDRgOdPskVQrwmepw7S85lbw-uM1OIHhbRa4"},
{"content":{"body":"I don't like any of these new name suggestions","msgtype":"m.text"},"ts":1689165141074,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$VZqnGlh4Qww41YlkgZ0cPlDzPIWJlWAw50VbtYU2Vi0"},
{"content":{"body":"the exiting names are fine","msgtype":"m.text"},"ts":1689165148165,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$RT46D_iKqtQCcwqVcOs-MAK1oF3sNNyCnYA2BmUhB-8"},
{"content":{"body":"> <@ljharb:matrix.org> you could with on-the-fly source rewriting, no? i don't mean virtualization which indeed would require custom module loading\n\nIf you're rewriting source, why do you care about using a real source object at all?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$j_yAbAzOgH-H0kiFfWOaj_c9RrTuKWfrqzmDPIXqjXU?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>you could with on-the-fly source rewriting, no? i don&#39;t mean virtualization which indeed would require custom module loading</blockquote></mx-reply>If you're rewriting source, why do you care about using a real source object at all?","m.relates_to":{"m.in_reply_to":{"event_id":"$j_yAbAzOgH-H0kiFfWOaj_c9RrTuKWfrqzmDPIXqjXU"}},"msgtype":"m.text"},"ts":1689165157037,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EP1OI1OUFH33lWzV5hHdmO6hhq3Z_Lso9TO9T4UUR-g"},
{"content":{"body":" * the existing names are fine","m.new_content":{"body":"the existing names are fine","msgtype":"m.text"},"m.relates_to":{"event_id":"$RT46D_iKqtQCcwqVcOs-MAK1oF3sNNyCnYA2BmUhB-8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165161845,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dc_9O-cDs-NYFVEN3rOaUFdkoOm_Z2rGYga9DoUQ7rI"},
{"content":{"body":"'source' is much easier to write and spell than 'instantiable'","msgtype":"m.text"},"ts":1689165166999,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$rg9YgFoGLNi_YtjHXab_dduwAbQ4xDLODxCVJZ8Mkgs"},
{"content":{"body":"> <@littledan:matrix.org> If you're rewriting source, why do you care about using a real source object at all?\n\nbecause user code would still need to interact with the resulting source phase object","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$EP1OI1OUFH33lWzV5hHdmO6hhq3Z_Lso9TO9T4UUR-g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>If you're rewriting source, why do you care about using a real source object at all?</blockquote></mx-reply>because user code would still need to interact with the resulting source phase object","m.relates_to":{"m.in_reply_to":{"event_id":"$EP1OI1OUFH33lWzV5hHdmO6hhq3Z_Lso9TO9T4UUR-g"}},"msgtype":"m.text"},"ts":1689165180024,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4uOLroROcbMhofdMGPrCoTKVsdzYK_-E3--K6cBJJ1w"},
{"content":{"body":"sorry, which sorts of interactions are you picturing?","msgtype":"m.text"},"ts":1689165203352,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jNehqRf30BTNQg9gQGXGnMyQmb79pBnJMLDi1bILQdg"},
{"content":{"body":"> <@aclaymore:matrix.org> 'source' is much easier to write and spell than 'instantiable'\n\nThe good news is this is a power-user feature with a keyword that can get auto-completed","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$rg9YgFoGLNi_YtjHXab_dduwAbQ4xDLODxCVJZ8Mkgs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>&#39;source&#39; is much easier to write and spell than &#39;instantiable&#39;</blockquote></mx-reply>The good news is this is a power-user feature with a keyword that can get auto-completed","m.relates_to":{"m.in_reply_to":{"event_id":"$rg9YgFoGLNi_YtjHXab_dduwAbQ4xDLODxCVJZ8Mkgs"}},"msgtype":"m.text"},"ts":1689165217807,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y"},
{"content":{"body":"importing and using wasm is power user now?","msgtype":"m.text"},"ts":1689165261336,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho"},
{"content":{"body":"> <@littledan:matrix.org> sorry, which sorts of interactions are you picturing?\n\nanything that's observable. i don't have a use case except that a self-hosted implementation should be able to be made indistinguishable from a C++ one","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jNehqRf30BTNQg9gQGXGnMyQmb79pBnJMLDi1bILQdg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>sorry, which sorts of interactions are you picturing?</blockquote></mx-reply>anything that's observable. i don't have a use case except that a self-hosted implementation should be able to be made indistinguishable from a C++ one","m.relates_to":{"m.in_reply_to":{"event_id":"$jNehqRf30BTNQg9gQGXGnMyQmb79pBnJMLDi1bILQdg"}},"msgtype":"m.text"},"ts":1689165263786,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ybsS8yWdF_vlz9RxamZoioA6RjT2pFfuLYTVMcEOd3Q"},
{"content":{"body":"> <@michaelficarra:matrix.org> importing and using wasm is power user now?\n\nwhen linking it yourself? yes, I think so","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>importing and using wasm is power user now?</blockquote></mx-reply>when linking it yourself? yes, I think so","m.relates_to":{"m.in_reply_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho"}},"msgtype":"m.text"},"ts":1689165276575,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BCtkS-sZrpRESaVGcD5C5XeemvEjcSYcjd19tJqrNJI"},
{"content":{"body":"since when has it not been","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165277237,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eovcP3bFPghrFKoJe2JjqS54jNwO9R9H4KkehgYwAHE"},
{"content":{"body":"I wish writing code snippets in non-IDES have auto-complete","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165290142,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$nmrql-GN0saMz_6FIa_g0uu6-uZtYLlRzHBWqQqDplo"},
{"content":{"body":" * I wish writing code snippets in non-IDEs had auto-complete","format":"org.matrix.custom.html","formatted_body":" * I wish writing code snippets in non-IDEs had auto-complete","m.new_content":{"body":"I wish writing code snippets in non-IDEs had auto-complete","format":"org.matrix.custom.html","formatted_body":"I wish writing code snippets in non-IDEs had auto-complete","msgtype":"m.text"},"m.relates_to":{"event_id":"$nmrql-GN0saMz_6FIa_g0uu6-uZtYLlRzHBWqQqDplo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165300519,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$27aJfilBPcR4LRPZ2EHtlS_bzjnabi8uJcTlCr7siBI"},
{"content":{"body":"I find \"instantiable\" even less understandable than \"source\".","msgtype":"m.text"},"ts":1689165369432,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$gfScH8kApW5EboP93hc73kLl0msNrFjO-W1z-GCUras"},
{"content":{"body":"What's your definition of an IDE? Even notepad++ has auto-complete for JavaScript :D","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$nmrql-GN0saMz_6FIa_g0uu6-uZtYLlRzHBWqQqDplo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165399186,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$lRsT27XW-Q8dpB77eXyrFBXl99LOHeMSMIyl7adn7SE"},
{"content":{"body":" * What's your definition of a non-IDE? Even notepad++ has auto-complete for JavaScript :D","format":"org.matrix.custom.html","formatted_body":" * What's your definition of a non-IDE? Even notepad++ has auto-complete for JavaScript :D","m.new_content":{"body":"What's your definition of a non-IDE? Even notepad++ has auto-complete for JavaScript :D","format":"org.matrix.custom.html","formatted_body":"What's your definition of a non-IDE? Even notepad++ has auto-complete for JavaScript :D","msgtype":"m.text"},"m.relates_to":{"event_id":"$lRsT27XW-Q8dpB77eXyrFBXl99LOHeMSMIyl7adn7SE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165408188,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$OnCAC1gDKn-oooVn869dxpO7XCRYzWuHHkjZaK0vPYk"},
{"content":{"body":"apparently I don't understand the limits of the average developer nowadays","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$eovcP3bFPghrFKoJe2JjqS54jNwO9R9H4KkehgYwAHE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165411861,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XZITLE5Fv0fxHqC04GGowgq4ouHE8xWvh3b3-9l1Cu4"},
{"content":{"body":"Matrix","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$lRsT27XW-Q8dpB77eXyrFBXl99LOHeMSMIyl7adn7SE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165415201,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8OS7-hukwvR0Br40tsx5zf_w-mA9HqCVTURNP25tFws"},
{"content":{"body":"github","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$8OS7-hukwvR0Br40tsx5zf_w-mA9HqCVTURNP25tFws"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165418320,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ytBJSUWmkV_U1JKJp80OIXbvRcV1GnH4D_9pcUZIpdY"},
{"content":{"body":"Slack","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$ytBJSUWmkV_U1JKJp80OIXbvRcV1GnH4D_9pcUZIpdY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165422495,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$i1rsLtfok_RdEY5go2hvKrnCYeklWn6rE-VXqRrZWCo"},
{"content":{"body":"Whatsapp","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$i1rsLtfok_RdEY5go2hvKrnCYeklWn6rE-VXqRrZWCo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165427899,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$FhQ0BAqokSsR-qssaOl3IWnPZbXMKDn2OxSv4JxV6yo"},
{"content":{"body":"not convinced you ever did","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$XZITLE5Fv0fxHqC04GGowgq4ouHE8xWvh3b3-9l1Cu4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165432647,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wjm5EUmdR6STRWU6H__37OecaZYt2oGFX0OixeTF_uo"},
{"content":{"body":" * Whatsapp ;)","format":"org.matrix.custom.html","formatted_body":" * Whatsapp ;)","m.new_content":{"body":"Whatsapp ;)","format":"org.matrix.custom.html","formatted_body":"Whatsapp ;)","msgtype":"m.text"},"m.relates_to":{"event_id":"$FhQ0BAqokSsR-qssaOl3IWnPZbXMKDn2OxSv4JxV6yo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165435067,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$liu1g6jhdXALIvgEbQB43o2RjalZ2MqRnziyuB6dq-8"},
{"content":{"body":"i'm surprised but point taken","msgtype":"m.text"},"ts":1689165452966,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$zXyfBewO9cBG5vsr_vf9pxIGdI3geja5HEjpu0u1qvA"},
{"content":{"body":"Twitter bio","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$FhQ0BAqokSsR-qssaOl3IWnPZbXMKDn2OxSv4JxV6yo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165457345,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uK1T0mUHtQkf9ysaUn5aC5sPKUtx9sQrv4ecw8VsMhI"},
{"content":{"body":"If someone judges you for a code typo in Whatsapp please let me yell at them","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$uK1T0mUHtQkf9ysaUn5aC5sPKUtx9sQrv4ecw8VsMhI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165459915,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$lPXwDFY7rM_OswXpq6djkTspjAd1KeGbtRocwWDVNh8"},
{"content":{"body":"Threads?","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$lPXwDFY7rM_OswXpq6djkTspjAd1KeGbtRocwWDVNh8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165463012,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$XJWtBceRZtrtQGXEgK7YgRAkWal3epjrjww4WiuWRro"},
{"content":{"body":"that said it is getting less and less power-user-y as it becomes a more first-class target in languages like go and rust","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$wjm5EUmdR6STRWU6H__37OecaZYt2oGFX0OixeTF_uo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165464299,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VluSpz8QnsXHf3FBaqqGCX2egDMCZUrOKv7yRfnD0Wg"},
{"content":{"body":"(like, what do you think you want to do with the thing you get from this phase, if not to instantiate it later?)","msgtype":"m.text"},"ts":1689165468014,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$09aLY2qF2Fb6J97dDJKXFAm_eMCSU0NZzUrjo5rBdOw"},
{"content":{"body":"no JS in Whatsapp please","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$XJWtBceRZtrtQGXEgK7YgRAkWal3epjrjww4WiuWRro"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165468137,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$kD7WW76MhBCPzEdTTfaj4n5Kwtea3hyzbZClHLat1Gs"},
{"content":{"body":"JavaScript doesn't have threads","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$kD7WW76MhBCPzEdTTfaj4n5Kwtea3hyzbZClHLat1Gs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165472358,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$paNjrCJeZx1997xx97f__jTQPZalHnW9-TmQK0KMZ5w"},
{"content":{"body":"does Threads have JS tho?","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$paNjrCJeZx1997xx97f__jTQPZalHnW9-TmQK0KMZ5w"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165486188,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$p4T9PUwcY6blRGhY4jL73JhZQ-yXxbtULRsXUpGJy8s"},
{"content":{"body":"sorry, I'll show myself out","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$p4T9PUwcY6blRGhY4jL73JhZQ-yXxbtULRsXUpGJy8s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165493760,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$QnlyiRiqEHu8AdJ2rbXfIRzAmh0IVnh6OztRCfmdfjY"},
{"content":{"body":"> <@shuyuguo:matrix.org> (like, what do you think you want to do with the thing you get from this phase, if not to instantiate it later?)\n\nWell, with WebAssembly.Module you might do reflection and nothing else","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$09aLY2qF2Fb6J97dDJKXFAm_eMCSU0NZzUrjo5rBdOw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>(like, what do you think you want to do with the thing you get from this phase, if not to instantiate it later?)</blockquote></mx-reply>Well, with WebAssembly.Module you might do reflection and nothing else","m.relates_to":{"m.in_reply_to":{"event_id":"$09aLY2qF2Fb6J97dDJKXFAm_eMCSU0NZzUrjo5rBdOw"}},"msgtype":"m.text"},"ts":1689165504087,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HkJ91WwrWO8qOWoH-Mlux8iOXhdjATi7yKreTASiYCU"},
{"content":{"body":"Probably only in a bytecode format nowadays","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$QnlyiRiqEHu8AdJ2rbXfIRzAmh0IVnh6OztRCfmdfjY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165505666,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$6MB14hIvUNhch80bJa4QesIq_LAoyIip_rDrVvZegvQ"},
{"content":{"body":" * Probably only in Hermes' bytecode format nowadays","format":"org.matrix.custom.html","formatted_body":" * Probably only in Hermes' bytecode format nowadays","m.new_content":{"body":"Probably only in Hermes' bytecode format nowadays","format":"org.matrix.custom.html","formatted_body":"Probably only in Hermes' bytecode format nowadays","msgtype":"m.text"},"m.relates_to":{"event_id":"$6MB14hIvUNhch80bJa4QesIq_LAoyIip_rDrVvZegvQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165520907,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$hH7bQnZAQzSLT5fbsJ1glo14p-JUkpngXjwjb79IVWQ"},
{"content":{"body":"But yes, you would almost always want to instantiate it","msgtype":"m.text"},"ts":1689165523503,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wcyvo5dW5utfFVS-B8h-dKF3E9d5oOuq2gdzv2Xnx3s"},
{"content":{"body":"i don't get what that means, you just want to hold on to it?","msgtype":"m.text"},"ts":1689165530504,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nTrvyeTpoxmSyEbROpu51lju7BXteN94sAJE2pL5Q7c"},
{"content":{"body":"I think ljharb is saying the opposite?","format":"org.matrix.custom.html","formatted_body":"I think <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> is saying the opposite?","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$VluSpz8QnsXHf3FBaqqGCX2egDMCZUrOKv7yRfnD0Wg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165531983,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hAD9eE9R85f4sXG3VObvPu1IE4IHN6w2oYTAGPwgTO4"},
{"content":{"body":"HHVM for JS","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$6MB14hIvUNhch80bJa4QesIq_LAoyIip_rDrVvZegvQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165535461,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$BMYFXuGTd95caLvw4D0V672UZxZcfkx10dek2uR3O00"},
{"content":{"body":"WebAssembly.Module.imports() or exports()","msgtype":"m.text"},"ts":1689165549679,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HMQ0Isjv6l3O8YFOSo8qXVUtpQzRYmDtPl1piwO6MF4"},
{"content":{"body":"https://nodejs.org/api/worker_threads.html#workerismainthread","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$BMYFXuGTd95caLvw4D0V672UZxZcfkx10dek2uR3O00"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165554699,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$obXsymzMToTPmihSb4V93qmPMsCbLcXdK1nBq37K4WA"},
{"content":{"body":" * WebAssembly.Module.imports() or .exports()","m.new_content":{"body":"WebAssembly.Module.imports() or .exports()","msgtype":"m.text"},"m.relates_to":{"event_id":"$HMQ0Isjv6l3O8YFOSo8qXVUtpQzRYmDtPl1piwO6MF4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165564059,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hMS_mYN7OoT7C5Szbv3F9t6NJ5SIGTIyknetoBCVzz8"},
{"content":{"body":"as it gets support in languages targeting wasm, using it manually becomes more niche","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$hAD9eE9R85f4sXG3VObvPu1IE4IHN6w2oYTAGPwgTO4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165565714,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4nADh8lS1BBefyAj7rrigM8jnLp_Xxlq6XvlDCtL634"},
{"content":{"body":"how can their be a main thread if there are no threads......","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$obXsymzMToTPmihSb4V93qmPMsCbLcXdK1nBq37K4WA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165567939,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$HL8OrNGjJbdpm9hSYVaKn5Wt7XRiDfA48sE5zo7gzAM"},
{"content":{"body":"it's part of the host, not JS","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$HL8OrNGjJbdpm9hSYVaKn5Wt7XRiDfA48sE5zo7gzAM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165571195,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$9ee1X7Xb7JBY859w-xIQsucS5EFjSVoVomzN7JXGYaY"},
{"content":{"body":":D","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$HL8OrNGjJbdpm9hSYVaKn5Wt7XRiDfA48sE5zo7gzAM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165571665,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$bwRcPobTMKW7Av4-MiJWgW5W25FRV7WVrp3fIww03_Q"},
{"content":{"body":"`import reflectable`","format":"org.matrix.custom.html","formatted_body":"<code>import reflectable</code>","msgtype":"m.text"},"ts":1689165574770,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$ourrso8q51Dp8a_7vj8scdfn0BwybIQ6UdcsAUCX104"},
{"content":{"body":"🙈","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$bwRcPobTMKW7Av4-MiJWgW5W25FRV7WVrp3fIww03_Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165579497,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$zdcTw9_xpolAJV8Zl2rn19bOIyUGG-NUMCp_icM4M2o"},
{"content":{"body":"I'm bad at jokes","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$zdcTw9_xpolAJV8Zl2rn19bOIyUGG-NUMCp_icM4M2o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165586913,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$4YtuUQHGDMKX2EhALHxH9LSp2O9ERNvPkzQxaZUWYDU"},
{"content":{"body":"`import sourceable`","format":"org.matrix.custom.html","formatted_body":"<code>import sourceable</code>","msgtype":"m.text"},"ts":1689165605433,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$bd8cIoJcVZcGyL5FUzecS1sHIkHBPim0w4hG0HM-JYE"},
{"content":{"body":"No, you're doing good here by backing *my* joke  ryzokuken 🇳🇴 ,","format":"org.matrix.custom.html","formatted_body":"No, you're doing good here by backing <em>my</em> joke  <a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken 🇳🇴</a> ,","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$4YtuUQHGDMKX2EhALHxH9LSp2O9ERNvPkzQxaZUWYDU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165623709,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$SMWY_dz_FgtP2WcidC2tPOkOXUzybG0SMQtQWHXSxT0"},
{"content":{"body":"`import saucable`","format":"org.matrix.custom.html","formatted_body":"<code>import saucable</code>","msgtype":"m.text"},"ts":1689165634426,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$NbXfATPZWIcyuj8oIharTcA4vkl7Vweq1yqUrXpQNIE"},
{"content":{"body":"oh no","msgtype":"m.text"},"ts":1689165639632,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$Q44p3kQ3h659uSbCh6gnepGumgXLkapRdWK5KHRjvpw"},
{"content":{"body":"`import sauceable`?","format":"org.matrix.custom.html","formatted_body":"<code>import sauceable</code>?","msgtype":"m.text"},"ts":1689165644143,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$wrIZzNHL7lWM6IE44ExrPETRvoQA5dOJDack68E1tL8"},
{"content":{"body":"I think I'm old enough to start writing my own jokes eventually","m.relates_to":{"event_id":"$mR-MiqIufnDBSGKMRsM_E0ZSeKZk7VK6lj-yuAvka4Y","is_falling_back":true,"m.in_reply_to":{"event_id":"$SMWY_dz_FgtP2WcidC2tPOkOXUzybG0SMQtQWHXSxT0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165644445,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$O6uANnBSxyC6KsIWSZXQp3sB52wdUqBaAWfPhemS_CM"},
{"content":{"body":"`import raw`","format":"org.matrix.custom.html","formatted_body":"<code>import raw</code>","msgtype":"m.text"},"ts":1689165648014,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$QfrIq4d1eGyp53LzHtb83GZ2FQO8g0YhmM8oncDQbUE"},
{"content":{"body":"`import uninstantiated`?","format":"org.matrix.custom.html","formatted_body":"<code>import uninstantiated</code>?","msgtype":"m.text"},"ts":1689165661033,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$QunGWW3wI56OMuvTLDpAWq79xelyvqkS0WusUVvap1M"},
{"content":{"body":"this is not TDZ","msgtype":"m.text"},"ts":1689165669488,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$h13k1lGeDcZjJc_KyZs4TEVBmWFr6GpIHklf49SKNNo"},
{"content":{"body":"`import saukable`","format":"org.matrix.custom.html","formatted_body":"<code>import saukable</code>","msgtype":"m.text"},"ts":1689165672498,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$x83-RZFkBHSxFwLNkJuRHYky7V8QzExj1ilM-veUD2g"},
{"content":{"body":"uninstantiated is fine but how is that worse than instantiable?","msgtype":"m.text"},"ts":1689165674670,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$IwFPj9Zzi82lKaDAKIjLVHsX7zuQcEm2a-vZeAvZt2A"},
{"content":{"body":"i would argue that usage of \"not JS\" to interoperate directly with JS is still a power user thing","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$4nADh8lS1BBefyAj7rrigM8jnLp_Xxlq6XvlDCtL634"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165682269,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1gYOnfTbXo1EYbJ9Y49Wia5vGSuiJQLa-21yvpBbWOs"},
{"content":{"body":"> <@eemeli:mozilla.org> `import raw`\n\nthat could work actually","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$QfrIq4d1eGyp53LzHtb83GZ2FQO8g0YhmM8oncDQbUE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">@eemeli:mozilla.org</a><br><code>import raw</code></blockquote></mx-reply>that could work actually","m.relates_to":{"m.in_reply_to":{"event_id":"$QfrIq4d1eGyp53LzHtb83GZ2FQO8g0YhmM8oncDQbUE"}},"msgtype":"m.text"},"ts":1689165694435,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$ywzZ_7LT2dgii6OmTc32ixXseoMcyKKESomLMd169g8"},
{"content":{"body":"\"uninstantiated\" is at least a word I have literally ever used before","msgtype":"m.text"},"ts":1689165696069,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SVPyxlHgW-StoQbXVGg-skBWSGo96-Pzp7hRttU0xlg"},
{"content":{"body":"a word can be more precise and yet worse ergonomically","msgtype":"m.text"},"ts":1689165704122,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$NULb44TfjqAlMNgJNms0bNRsWe-Jjw0D_xsm9MflPmw"},
{"content":{"body":"\"raw\" sounds more like asset/blob/bytes to me","msgtype":"m.text"},"ts":1689165707561,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cmmIvxD8H6KSAmaVRqtok3JfW2sDUsYvQr478dden5A"},
{"content":{"body":"But how often is this word getting typed out?","msgtype":"m.text"},"ts":1689165719220,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$E3y7YFHbMH3-7bXAK4WUwQ77A1GVccUZeIRavebJ3BQ"},
{"content":{"body":"An \"uninstantiated module\" makes sense to me more than \"instantiable module\"","msgtype":"m.text"},"ts":1689165719740,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$96cmHylEM0gl_Tj7QOCYTC8rIHCRXkGKbpP3VufH4e4"},
{"content":{"body":" * i would argue that usage of \"not JS\" to interoperate directly with JS is still a power user thing, and will likely remain so for the foreseeable future","format":"org.matrix.custom.html","formatted_body":" * i would argue that usage of \"not JS\" to interoperate directly with JS is still a power user thing, and will likely remain so for the foreseeable future","m.new_content":{"body":"i would argue that usage of \"not JS\" to interoperate directly with JS is still a power user thing, and will likely remain so for the foreseeable future","format":"org.matrix.custom.html","formatted_body":"i would argue that usage of \"not JS\" to interoperate directly with JS is still a power user thing, and will likely remain so for the foreseeable future","msgtype":"m.text"},"m.relates_to":{"event_id":"$1gYOnfTbXo1EYbJ9Y49Wia5vGSuiJQLa-21yvpBbWOs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165735251,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Aqs61h5Vcdou6XvXiI6INkTYMEZ66OAzluE7ULFO8yo"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> But how often is this word getting typed out?\n\nhopefully often enough to warrant this proposal advancing","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$E3y7YFHbMH3-7bXAK4WUwQ77A1GVccUZeIRavebJ3BQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>But how often is this word getting typed out?</blockquote></mx-reply>hopefully often enough to warrant this proposal advancing","m.relates_to":{"m.in_reply_to":{"event_id":"$E3y7YFHbMH3-7bXAK4WUwQ77A1GVccUZeIRavebJ3BQ"}},"msgtype":"m.text"},"ts":1689165772451,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$svrsC-hcefnzk6XsiZVNt3tTUPBfhslbgFVxo0pButY"},
{"content":{"body":"I think for JS developers, yes","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$1gYOnfTbXo1EYbJ9Y49Wia5vGSuiJQLa-21yvpBbWOs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165909747,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CJahYs9IFCVGfpYWgdlcUwLzInM3Srd5YYmHWFyYNHA"},
{"content":{"body":"what are the \"phases\" identified for modules during this process? like what comes after \"source\"","msgtype":"m.text"},"ts":1689165927048,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6RoHqFqKZ0diAdvojj7yq7HVQsmEtHXXGgaqXKALfVw"},
{"content":{"body":"but if you are a Go programmer, you are going to want to write Go, and then a small JS wrapper to let the Go program interact with the webapp","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$CJahYs9IFCVGfpYWgdlcUwLzInM3Srd5YYmHWFyYNHA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165935152,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XpwH5hC1moaPg37HS2WF_8MDqQpbblj3XvMYfU03-vE"},
{"content":{"body":"`raw` is worse than `source` for the same confusion, yeah","format":"org.matrix.custom.html","formatted_body":"<code>raw</code> is worse than <code>source</code> for the same confusion, yeah","msgtype":"m.text"},"ts":1689165942015,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gNTVNrpdnqR5hqOl_2ldIEwvrixpKg_tB7ZyVebTmwk"},
{"content":{"body":"and the way you do that is, you compile the Go to wasm, and then import the wasm from a JS module","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$XpwH5hC1moaPg37HS2WF_8MDqQpbblj3XvMYfU03-vE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165951136,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HB-3hEmhokWuRCeC7pV32aYRLxJOyPnKGmx2b-aOJFY"},
{"content":{"body":"honestly `import compiled` captures things well for Wasm (or `import parsed`??), but I'm not sure if it will be intuitive.","format":"org.matrix.custom.html","formatted_body":"honestly <code>import compiled</code> captures things well for Wasm (or <code>import parsed</code>??), but I'm not sure if it will be intuitive.","msgtype":"m.text"},"ts":1689165955690,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TdWmw0_AK-e84kuSxgqbuOuPfvjggA5EyeYBKnz2q1c"},
{"content":{"body":"this does not require being a poweruser of either language","m.relates_to":{"event_id":"$nUVuwpWX-wSz-rcOeCs2pQ_zRJhVFwJ-f9eOxgsOSho","is_falling_back":true,"m.in_reply_to":{"event_id":"$HB-3hEmhokWuRCeC7pV32aYRLxJOyPnKGmx2b-aOJFY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689165959504,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qDkdAhS09GTkObKAVhrNtuhj_xUok1KguawgpUK1Cgk"},
{"content":{"body":"I was going to make a `String.raw` joke but Michael Ficarra  said this wasn't TDZ","format":"org.matrix.custom.html","formatted_body":"I was going to make a <code>String.raw</code> joke but <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>  said this wasn't TDZ","msgtype":"m.text"},"ts":1689165973906,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$6CcZ9wzDjOpojMWt_R7HTD3bZA1YFuyjWJDbLbUOFiE"},
{"content":{"body":"I guess some people might think that it AOT-compiles the module code for JS?","msgtype":"m.text"},"ts":1689165976680,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$e5LVPEpeiuF73LgF5OZ7x3L1iVxbqDoqvWzT6vsBt7U"},
{"content":{"body":" * I guess some people might think that `import compiled` AOT-compiles the module code for JS?","format":"org.matrix.custom.html","formatted_body":" * I guess some people might think that <code>import compiled</code> AOT-compiles the module code for JS?","m.new_content":{"body":"I guess some people might think that `import compiled` AOT-compiles the module code for JS?","format":"org.matrix.custom.html","formatted_body":"I guess some people might think that <code>import compiled</code> AOT-compiles the module code for JS?","msgtype":"m.text"},"m.relates_to":{"event_id":"$e5LVPEpeiuF73LgF5OZ7x3L1iVxbqDoqvWzT6vsBt7U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689165990096,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$7Ki2Bc5U6FTHcHAOLhps5Xx3ZWN2z4BRMSvu_n-p6-o"},
{"content":{"body":"do we imagine using this for things other than wasm","msgtype":"m.text"},"ts":1689166031729,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$orP_GCgP3cMJwWZbQz7v9MnHd_LNP46roY9etnvRcbI"},
{"content":{"body":"no one is stopping you from making terrible jokes in TDZ","m.relates_to":{"event_id":"$6CcZ9wzDjOpojMWt_R7HTD3bZA1YFuyjWJDbLbUOFiE","is_falling_back":true,"m.in_reply_to":{"event_id":"$6CcZ9wzDjOpojMWt_R7HTD3bZA1YFuyjWJDbLbUOFiE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689166037378,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$P5-XLb56y6pwWD_iM--5PLXbVJUFEJTd2yedbFVJ_v8"},
{"content":{"body":"if not, can we just make it `import.wasm`","format":"org.matrix.custom.html","formatted_body":"if not, can we just make it <code>import.wasm</code>","msgtype":"m.text"},"ts":1689166038671,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BSaJVinEz0hHFm4uIwWmFKE50hE9rXv0iJmxipc1olo"},
{"content":{"body":"My impression is that the anticipated frequency of use is not the reason why this proposal exists - moreso, it's a small set of important use-cases that compose well","msgtype":"m.text"},"ts":1689166055141,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$k5Ckj3l8vc-wjat4YmypB53efKkpgXpL37cY53XPepA"},
{"content":{"body":"> <@bakkot:matrix.org> do we imagine using this for things other than wasm\n\nKKL has a proposal for JS sources","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$orP_GCgP3cMJwWZbQz7v9MnHd_LNP46roY9etnvRcbI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>do we imagine using this for things other than wasm</blockquote></mx-reply>KKL has a proposal for JS sources","m.relates_to":{"m.in_reply_to":{"event_id":"$orP_GCgP3cMJwWZbQz7v9MnHd_LNP46roY9etnvRcbI"}},"msgtype":"m.text"},"ts":1689166059809,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$X8o6nsqfF32qra_Yy6fsNhkaZO_Te5B104GWMUlITDY"},
{"content":{"body":"To do reflection on them, as well as custom linking","msgtype":"m.text"},"ts":1689166077460,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QftkJfz2PN2qaxAmbTi-NOWBOpjIXI0xFn7Ts4MOB1I"},
{"content":{"body":"ah, right","msgtype":"m.text"},"ts":1689166082875,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$riJcZFKF5vnVsCKxIFPVcRYGNV3y9g-e2VYg8znGA7E"},
{"content":{"body":"and to bypass CSP I guess","msgtype":"m.text"},"ts":1689166091560,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cNN0hXrMfUbC4twb_-brDhYy7R2BOwKdVA1rARvt_mU"},
{"content":{"body":" * and to avoid running afoul of CSP I guess","m.new_content":{"body":"and to avoid running afoul of CSP I guess","msgtype":"m.text"},"m.relates_to":{"event_id":"$cNN0hXrMfUbC4twb_-brDhYy7R2BOwKdVA1rARvt_mU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689166101523,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$--NxDIecdHMlL112pzTo3kciQ9xXwGe2Tclau0TxOlc"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> My impression is that the anticipated frequency of use is not the reason why this proposal exists - moreso, it's a small set of important use-cases that compose well\n\nWhich is why \"pick the most explicit name\" seems like the right option for me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k5Ckj3l8vc-wjat4YmypB53efKkpgXpL37cY53XPepA?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>My impression is that the anticipated frequency of use is not the reason why this proposal exists - moreso, it&#39;s a small set of important use-cases that compose well</blockquote></mx-reply>Which is why \"pick the most explicit name\" seems like the right option for me","m.relates_to":{"m.in_reply_to":{"event_id":"$k5Ckj3l8vc-wjat4YmypB53efKkpgXpL37cY53XPepA"}},"msgtype":"m.text"},"ts":1689166115319,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$0-oIo2hUvtDSpiBQs7mg7tdZY37J_9vJZv_Wg8rmWss"},
{"content":{"body":"Yep, to avoid eval-like","msgtype":"m.text"},"ts":1689166115577,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PThAIkV8MDU6QCFiPnpJaWoh82c3psB26Lx33wp42pA"},
{"content":{"body":"> <@danielrosenwasser:matrix.org> My impression is that the anticipated frequency of use is not the reason why this proposal exists - moreso, it's a small set of important use-cases that compose well\n\n * Which is why \"pick the most explicit name\" seems like the right option for me, even if it's a little verbose","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$k5Ckj3l8vc-wjat4YmypB53efKkpgXpL37cY53XPepA?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">@danielrosenwasser:matrix.org</a><br>My impression is that the anticipated frequency of use is not the reason why this proposal exists - moreso, it's a small set of important use-cases that compose well</blockquote></mx-reply> * Which is why \"pick the most explicit name\" seems like the right option for me, even if it's a little verbose","m.new_content":{"body":"Which is why \"pick the most explicit name\" seems like the right option for me, even if it's a little verbose","format":"org.matrix.custom.html","formatted_body":"Which is why \"pick the most explicit name\" seems like the right option for me, even if it's a little verbose","msgtype":"m.text"},"m.relates_to":{"event_id":"$0-oIo2hUvtDSpiBQs7mg7tdZY37J_9vJZv_Wg8rmWss","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689166135942,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$c1v_vH8NgY6eOj51BDja2BAM6rLqPvjOb5qMYpHeDXI"},
{"content":{"body":"But `import source` is still better than `import module`","format":"org.matrix.custom.html","formatted_body":"But <code>import source</code> is still better than <code>import module</code>","msgtype":"m.text"},"ts":1689166152365,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$nu7UZR62gRromVpEqa1QSY7eZ5BkX4weGtWwXB9ksi4"},
{"content":{"body":"that suggests maybe `import.reflect`?","format":"org.matrix.custom.html","formatted_body":"that suggests maybe <code>import.reflect</code>?","msgtype":"m.text"},"ts":1689166156069,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pbpmRMftyE6fqscBUaYUdT_McbEEghLg13XPtYxGkHs"},
{"content":{"body":"please, source is fine 😩","msgtype":"m.text"},"ts":1689166182908,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9yBxT2DK-o6yBbpHg3KEXw7YROs67IVT2oe1cV9UTbM"},
{"content":{"body":"though I guess reflection might suggest also evaluation","msgtype":"m.text"},"ts":1689166184113,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OhtPwOg5Bn4_5rjjDnZmKuBMRI69ipm_DLRwc0-wBTw"},
{"content":{"body":"> <@bakkot:matrix.org> that suggests maybe `import.reflect`?\n\nI think this was the original world in the proposal, but there are two use cases (custom instantiation and reflection) and it only covers one","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$pbpmRMftyE6fqscBUaYUdT_McbEEghLg13XPtYxGkHs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>that suggests maybe <code>import.reflect</code>?</blockquote></mx-reply>I think this was the original world in the proposal, but there are two use cases (custom instantiation and reflection) and it only covers one","m.relates_to":{"m.in_reply_to":{"event_id":"$pbpmRMftyE6fqscBUaYUdT_McbEEghLg13XPtYxGkHs"}},"msgtype":"m.text"},"ts":1689166206792,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$DVSD3PqgARI2W1FLrj1WYGs9V4eJwcZzcUHBpWL9QSM"},
{"content":{"body":"`import fetched`","format":"org.matrix.custom.html","formatted_body":"<code>import fetched</code>","msgtype":"m.text"},"ts":1689166207925,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$fjzAiS0vrM8TbF4Jojf8S-ayKJpn4z56Nu9gBMuxTqA"},
{"content":{"body":"`fetched` also suggests just raw bytes to me","format":"org.matrix.custom.html","formatted_body":"<code>fetched</code> also suggests just raw bytes to me","msgtype":"m.text"},"ts":1689166231529,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mHEV8pHpNNm3_Qm8Q378I2XE44AtLlQ0RVfldgfUOhg"},
{"content":{"body":"maybe the answer is there is just no intuition for half-processed things having names","msgtype":"m.text"},"ts":1689166250992,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$F8uhMZ1tc63QCq7jsL1mB5dHRXtWdcMsxD37HBF325I"},
{"content":{"body":"`import parsed`","format":"org.matrix.custom.html","formatted_body":"<code>import parsed</code>","msgtype":"m.text"},"ts":1689166260002,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$1dHKbp1iDfjbcpmV2EcPcjY-uKAbj4_4VuCJkcrG8d0"},
{"content":{"body":"> <@shuyuguo:matrix.org> maybe the answer is there is just no intuition for half-processed things having names\n\n`import half mod from \"x\"`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$F8uhMZ1tc63QCq7jsL1mB5dHRXtWdcMsxD37HBF325I?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>maybe the answer is there is just no intuition for half-processed things having names</blockquote></mx-reply><code>import half mod from \"x\"</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$F8uhMZ1tc63QCq7jsL1mB5dHRXtWdcMsxD37HBF325I"}},"msgtype":"m.text"},"ts":1689166265383,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PPWWDtkOyvDw8qpz-xyZ7PnZQN1zuf6L7JL49XDIC3k"},
{"content":{"body":"`parsed` i can live with but wasm isn't parsed but validated?","format":"org.matrix.custom.html","formatted_body":"<code>parsed</code> i can live with but wasm isn't parsed but validated?","msgtype":"m.text"},"ts":1689166291425,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$a4s3kehfMcSGAc64xOJD-0sW72yH00pZJD8yxHwidHs"},
{"content":{"body":"validation is like parsing","msgtype":"m.text"},"ts":1689166307933,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9rhMLjmivVPIiQEMJzu0wdGafIJLILUwHcEp0Cl2j8w"},
{"content":{"body":"`analyzed`","format":"org.matrix.custom.html","formatted_body":"<code>analyzed</code>","msgtype":"m.text"},"ts":1689166310596,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$irUJdm308VKo9EfvUl91wj6ME1H8mLMrLkAvLaEEjYA"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1689166311074,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Ny4DJgDYoEI8Z2V872wOC1xaG79nsodcmmyGZMQEaVE"},
{"content":{"body":"`parsed` sgtm","format":"org.matrix.custom.html","formatted_body":"<code>parsed</code> sgtm","msgtype":"m.text"},"ts":1689166317168,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HegfBXuC68uJS0RC6OpTZQnnwNb7zBahcWa_81FauNc"},
{"content":{"body":"who hates `parsed`","format":"org.matrix.custom.html","formatted_body":"who hates <code>parsed</code>","msgtype":"m.text"},"ts":1689166321612,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Oyu-YapmDcRn1Zbf5wgpVEGPIVDWPQBHmvUXWupn1lE"},
{"content":{"body":"who hates the truth","msgtype":"m.text"},"ts":1689166329274,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OvH0Rcg6EiP6n8CcEYWnyhIJg-Q-JfImmPWHOi3vCDo"},
{"content":{"body":"I could live with `parsed`","format":"org.matrix.custom.html","formatted_body":"I could live with <code>parsed</code>","msgtype":"m.text"},"ts":1689166329736,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zcZqWSN2qWe-4UiFSkzkg25_Ef-HOoFlmQ-a_c5ykWg"},
{"content":{"body":"What I dislike about it is that also a fully evaluated module has been parsed","msgtype":"m.text"},"ts":1689166352302,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$90VhlXW3keBNk5Q5RLafZQ6rnKAZd9P8_SwJ1O572_U"},
{"content":{"body":"yeah but it's \"only\" parsed","msgtype":"m.text"},"ts":1689166367788,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$X4-Ik7cC1qiFDDyv2jnqilnDW68DAFol1frtGHVK5Xo"},
{"content":{"body":"a fully evaluated module has also been source though","msgtype":"m.text"},"ts":1689166371048,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oo36-3lXEnJoi5JzirpZgrPsnYrqtODkdUXr74C7s9I"},
{"content":{"body":"yeah, pragmatics!!","msgtype":"m.text"},"ts":1689166376289,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Q_sL2fH3nTNJjIqiMQX-loDrFwbhiX9y7-l6vLsUsJ8"},
{"content":{"body":"implicatures, specifically","msgtype":"m.text"},"ts":1689166393034,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2ADYP8arMfiveDMwQJB21J3g2B_0tJIPfwG61OVpKCs"},
{"content":{"body":"love me a gricean implicature\n","msgtype":"m.text"},"ts":1689166424146,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ida9VXfelG2qIMrtf5_Fj0ftKT6hh0lJQA6e8PLUxuI"},
{"content":{"body":"ooh grice fans","msgtype":"m.text"},"ts":1689166445311,"senderName":"Jesse (TC39)","senderId":"@jesse:igalia.com","id":"$Gm821FWOaPnbmP6m9h-vc0ho83Qd4AHIpvK53H7i2cc"},
{"content":{"body":"we do have some time available tomorrow if folks would like to have further discussion regarding source phase imports naming","msgtype":"m.text"},"ts":1689166494927,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$QutC7FEG2u11Ylc30cT4QhYSfaMxr0TB7hDNzB3X_N8"},
{"content":{"body":"the Racket programming language uses \"syntax\" to refer to data that has been parsed -- ranging from simple expressions like `42` to entire modules -- but not yet evaluated","format":"org.matrix.custom.html","formatted_body":"the Racket programming language uses \"syntax\" to refer to data that has been parsed -- ranging from simple expressions like <code>42</code> to entire modules -- but not yet evaluated","msgtype":"m.text"},"ts":1689166509356,"senderName":"Jesse (TC39)","senderId":"@jesse:igalia.com","id":"$c-J_Up8srIA7lfdG9M1s0xBhEQz11RsDgUr5uIlrWyQ"}
]