[
{"content":{"body":"> <@mhofman:matrix.org> bakkot: looks like we're missing the logs for today? https://matrixlogs.bakkot.com/TC39_Delegates/2023-07-11\n\nfixed. I suspect my boot disk is failing; will have it replaced tomorrow.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$6LxQbSNZYtYPPv7YCa33h6DWsXl5rLSEOJj3Zw5p7VE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: looks like we're missing the logs for today? https://matrixlogs.bakkot.com/TC39_Delegates/2023-07-11</blockquote></mx-reply>fixed. I suspect my boot disk is failing; will have it replaced tomorrow.","m.relates_to":{"m.in_reply_to":{"event_id":"$6LxQbSNZYtYPPv7YCa33h6DWsXl5rLSEOJj3Zw5p7VE"}},"msgtype":"m.text"},"ts":1689120944630,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TuIg9_1hvhxWfjC726BSzNQ96GRGhA0rhWUyPGgmJKs"},
{"content":{"body":"> <@shuyuguo:matrix.org> the end goal for me is users, not developers, and good defaults for me should be chosen to nudge developers to the result (responsiveness, correctness, fast loading, whatever) we want on products they build for the user. if _all_ developers ignore a default constantly, then we obviously failed and nobody benefits. Google-internally, i did not get this sense when talking with practitioners about a lack of a defer-like thing\n\nthe problem is we cannot everything by default because it's a breaking change","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$uqYS-mgcpZSjGWo12nnp-NePPjNNkQvt8lzFKP8kELQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>the end goal for me is users, not developers, and good defaults for me should be chosen to nudge developers to the result (responsiveness, correctness, fast loading, whatever) we want on products they build for the user. if <em>all</em> developers ignore a default constantly, then we obviously failed and nobody benefits. Google-internally, i did not get this sense when talking with practitioners about a lack of a defer-like thing</blockquote></mx-reply>the problem is we cannot everything by default because it's a breaking change","m.relates_to":{"m.in_reply_to":{"event_id":"$uqYS-mgcpZSjGWo12nnp-NePPjNNkQvt8lzFKP8kELQ"}},"msgtype":"m.text"},"ts":1689128220903,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$EbXwQoZa7SDAxi3h_LNyTdN-Hg9lkkuD6iK-XJ2yXNQ"},
{"content":{"body":"not sure i follow","msgtype":"m.text"},"ts":1689131004392,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$necjdf5O1UgLrpGn5Cpqj0WC2GxpW14uK70vy33Diqk"},
{"content":{"body":"the context of my previous comment was about the Promise constructor vs withResolvers","msgtype":"m.text"},"ts":1689131016124,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iMEP2fPuktTMnsQt4wIhaRZJZPds0IA6NLVlOqO5g4E"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1689131054834,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mrD06YmdT2WOUktpMzzmVQeTAWiqmYODO8Mm-jlstEo"},
{"content":{"body":"the \"good default\" was referring to the hope that the Promise constructor would, even though it's more inconvenient to use, would bring about better correctness results wrt uncaught exceptions -> rejections","msgtype":"m.text"},"ts":1689131069446,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$JRcQzLfU1l8Tmq-QWV4GzMA3W0l_SMYEKRS9N3C3vdU"},
{"content":{"body":"but since then we've learned that maybe that doesn't have quite the effect we hoped because people ignore it","msgtype":"m.text"},"ts":1689131096737,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw"},
{"content":{"body":"or because there are legitimate use cases","msgtype":"m.text"},"ts":1689131101237,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dHCzfrG44QSY5GPz7DVzWOdkVTkerLZDzQaU8lPKuF4"},
{"content":{"body":"and so, it's fine to add withResolvers, even though it's explicitly against what we thought was the good default","msgtype":"m.text"},"ts":1689131115239,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$h3odWNtbofFyk-caJ-Xt1jvqs3n6c2Hh1H1G9djFUU0"},
{"content":{"body":"but the broader point is that that's the kind of argument i'm looking to hearing, not simply \"developers use pattern X\"","msgtype":"m.text"},"ts":1689131151139,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AsumgM1GNZJJlo-nLLoPBlWt1zEGbhAD_7YiUoiVJes"},
{"content":{"body":" * but the broader point is that that's the kind of argument i'm looking to hear, not simply \"developers use pattern X\"","m.new_content":{"body":"but the broader point is that that's the kind of argument i'm looking to hear, not simply \"developers use pattern X\"","msgtype":"m.text"},"m.relates_to":{"event_id":"$AsumgM1GNZJJlo-nLLoPBlWt1zEGbhAD_7YiUoiVJes","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689131160275,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TRsvOSNvAEG_jjpRK5-zOz2HrpgvEwno4l_Dh2r8los"},
{"content":{"body":"g'morning all","msgtype":"m.text"},"ts":1689148920423,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NOLSQx_a9IRXqoxfye4cHrAOAImWqVj_3Dj9PNd5zlo"},
{"content":{"body":"I have a question about calendars. The source map monthly call was on the TC39 calendar but I don't see it on there anymore. How can I go about adding it back? Do I make a personal event and then invite the calendar? Or do I need a special permission to do this?","msgtype":"m.text"},"ts":1689149412088,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE"},
{"content":{"body":"my understanding was that an event needs to be added to the private calendar first, and the public calendar is invited as an attendee of that event","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149896682,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JB1s-zgn7MITFj64FOvSdmadtdZmQpfKSrVLWNeGh4M"},
{"content":{"body":"the public calendar has an email address to invite","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$JB1s-zgn7MITFj64FOvSdmadtdZmQpfKSrVLWNeGh4M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149917120,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hnGNPICWdaH1tyv105EEYmFi9I3DNOuUD18xLQ7dPAQ"},
{"content":{"body":"most of us regular-folk don't have permission to create such an event on the private calendar, though, so you should contact a chair or ljharb ","format":"org.matrix.custom.html","formatted_body":"most of us regular-folk don't have permission to create such an event on the private calendar, though, so you should contact a chair or <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$hnGNPICWdaH1tyv105EEYmFi9I3DNOuUD18xLQ7dPAQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149944106,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$qHISxF4jvu920FK-RQ-sv2I0kv8d5VsmF3BYF2OZ8fw"},
{"content":{"body":"Thank you!","m.relates_to":{"event_id":"$29-OWuDs-w_PoFLF12f8VXoLgey9K4QYCq0wYXMsFVE","is_falling_back":true,"m.in_reply_to":{"event_id":"$qHISxF4jvu920FK-RQ-sv2I0kv8d5VsmF3BYF2OZ8fw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689149951594,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$f5xLbV8jrtu8sCbbqpEUQEgsVKoqlAIWKrcSiWT6CfQ"},
{"content":{"body":"> <@shuyuguo:matrix.org> but since then we've learned that maybe that doesn't have quite the effect we hoped because people ignore it\n\nI think this is the key point--despite many years passing, people are generally unaware both of the implied best practice and the fact that the promise constructor helps lead you to it, and on the other hand, the best practice is enforced by async/await. An illustration of the widespread lack of awareness is that no one even raised this concern in committee until you did, and without this awareness, people can't even really be expected to use the promise constructor in the way where it's helpful.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>but since then we&#39;ve learned that maybe that doesn&#39;t have quite the effect we hoped because people ignore it</blockquote></mx-reply>I think this is the key point--despite many years passing, people are generally unaware both of the implied best practice and the fact that the promise constructor helps lead you to it, and on the other hand, the best practice is enforced by async/await. An illustration of the widespread lack of awareness is that no one even raised this concern in committee until you did, and without this awareness, people can't even really be expected to use the promise constructor in the way where it's helpful.","m.relates_to":{"m.in_reply_to":{"event_id":"$cfbG2smFFYRpX2lV2CyaDZj3g1Vke-mMizmQ2NFPLyw"}},"msgtype":"m.text"},"ts":1689150256833,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2UF8p32MQ7wIjqkA9uW_zRhCFaCWZHuFqix8XP_wBPw"},
{"content":{"body":"If `dayOfWeek` returns `2`, indicating this is the 2nd day of the week relative to the `firstDayOfWeek`, it could be confusing that both are numbers 1-7 but don't represent the same value.","format":"org.matrix.custom.html","formatted_body":"If <code>dayOfWeek</code> returns <code>2</code>, indicating this is the 2nd day of the week relative to the <code>firstDayOfWeek</code>, it could be confusing that both are numbers 1-7 but don't represent the same value.","msgtype":"m.text"},"ts":1689150809463,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k"},
{"content":{"body":"https://unicode.org/reports/tr35/#UnicodeFirstDayIdentifier","msgtype":"m.text"},"ts":1689150818594,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$E9XKzp_x2t7qOtRsG3Q6qU-3jDgj_AjvdvOR9S4euOs"},
{"content":{"body":"(this is what Shane is talking about)","msgtype":"m.text"},"ts":1689150826417,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$efydQB-29PpY4JYHkbZa7_ltZX1Z7Mzc-6BPkHJG7wY"},
{"content":{"body":"> <@rbuckton:matrix.org> If `dayOfWeek` returns `2`, indicating this is the 2nd day of the week relative to the `firstDayOfWeek`, it could be confusing that both are numbers 1-7 but don't represent the same value.\n\nAssuming my interpretation is correct. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>If <code>dayOfWeek</code> returns <code>2</code>, indicating this is the 2nd day of the week relative to the <code>firstDayOfWeek</code>, it could be confusing that both are numbers 1-7 but don't represent the same value.</blockquote></mx-reply>Assuming my interpretation is correct.","m.relates_to":{"m.in_reply_to":{"event_id":"$53AQj5VBdfL3IJ_lgBC0FrRkm7rRU4ohiKRwSH3do3k"}},"msgtype":"m.text"},"ts":1689150887922,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$0rqVOa2mcNesECqxyEBl5-eEak1brDHBvmTiQEp6P8I"},
{"content":{"body":"This Unicode extension for locale identifiers seems nuts to me. You have to use the first part of the identifier \"en\" to know how to interpret the identification of the day of the week \"tue\".","msgtype":"m.text"},"ts":1689151098510,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$n2rGz7dEnAXoyi29knaSWYPfItImILFbgdAtf85YMeA"},
{"content":{"body":"It also maintains a list of all of the delegates to TC39; this is listed in the Ecma memento. When organizations add or remove delegates, someone is supposed to inform Ecma of this so they can update their lists (I think the chairs do this?). But anyway things have gone out of sync.","m.relates_to":{"event_id":"$9VyzJEmRlzJ3aPh4HHCxMnCz3TaIsON3trRp2fTlDbs","is_falling_back":true,"m.in_reply_to":{"event_id":"$5uDJZeeujHlhzSbkF0XWtxBS3B4lhJ7f2KcyMX6wWik"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689151341338,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WhyI94PVM2sMY7F_-qtm6QQzp_jZGqe6mm6ROUNA2tA"},
{"content":{"body":"I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Google could ask him?)","msgtype":"m.text"},"ts":1689151851528,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4CfaeDaDDNr6Cmp_rQyYOhaDde0eXe0bDE3nJ1bfnuY"},
{"content":{"body":" * I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Googler could ask him?)","m.new_content":{"body":"I think the summary can omit the back-and-forth that Frank and I had, and instead be in paragraph form. Will Frank be doing this rephrasing, or should I do so? (I don't see Frank here, maybe another Googler could ask him?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$4CfaeDaDDNr6Cmp_rQyYOhaDde0eXe0bDE3nJ1bfnuY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689151867255,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$i_OfvAz3WNx87xQEyuhru0xULML5-BIz3fLQbsOHciI"},
{"content":{"body":"(or bullet form)","msgtype":"m.text"},"ts":1689151919685,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ESOBW1n5aNaZeIIXZiIp3ZfRgkiJU_ltSSKnDSMkOfs"},
{"content":{"body":"Unless the presenter explicitly delegates, they remain responsible for the summary.  The secretary will chase presenters where summaries appear insufficient.  I'll make sure we say this on the Reflector.","msgtype":"m.text"},"ts":1689152008183,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$IZ2WYTujmhnc00z3RqxDwEtp9K2TcRi0McGhmZtVstw"},
{"content":{"body":"Ashley Claymore: should I put the link in the notes?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: should I put the link in the notes?","msgtype":"m.text"},"ts":1689152863222,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0"},
{"content":{"body":"ryzokuken 🇳🇴: yes, there is a spot for you to do so already","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken 🇳🇴</a>: yes, there is a spot for you to do so already","msgtype":"m.text"},"ts":1689152934651,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8"},
{"content":{"body":"search for \"slides presented but no link in agenda\"","msgtype":"m.text"},"ts":1689152952182,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$V_m2cbrbsxmhJGOAL8C45TjaVs1ODoR41JqfMQ24ZSw"},
{"content":{"body":"I slightly prefer `offset` solution because I guess developers use BYOB for perf, and would like to use `offset` to get perf benefit (even a little), and even without `offset`, it already complicated 😉","format":"org.matrix.custom.html","formatted_body":"I slightly prefer <code>offset</code> solution because I guess developers use BYOB for perf, and would like to use <code>offset</code> to get perf benefit (even a little), and even without <code>offset</code>, it already complicated 😉","msgtype":"m.text"},"ts":1689153299719,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$fHqsgY3ap6TiljKlGESgetftaa1YCA8nPiUNvRyQAWo"},
{"content":{"body":"HE Shi-Jun: I wouldn't want to do that without compelling evidence that the perf is significantly better","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: I wouldn't want to do that without compelling evidence that the perf is significantly better","msgtype":"m.text"},"ts":1689153419014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NydvI8eKKBbzfGcS8hDMUQfyhV2yoRalZgyt0lLn5nQ"},
{"content":{"body":"also, it would be safe to add later, right?","msgtype":"m.text"},"ts":1689153430586,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs"},
{"content":{"body":"> <@michaelficarra:matrix.org> ryzokuken 🇳🇴: yes, there is a spot for you to do so already\n\ndone, thanks again for the reminder","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken 🇳🇴</a>: yes, there is a spot for you to do so already</blockquote></mx-reply>done, thanks again for the reminder","m.relates_to":{"m.in_reply_to":{"event_id":"$UkMHrT1Z5FI3vxJYknLLxtOD4zlt4tUJj9VRhjNUKG8"}},"msgtype":"m.text"},"ts":1689153669997,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$xWQk7gqzDffWhuIQkKor0tZxSa1qv_-yucFoZImwbdY"},
{"content":{"body":"> <@michaelficarra:matrix.org> also, it would be safe to add later, right?\n\nagree it could be add later. I just think it very likely will have some perf benefit, especially on embed engines.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>also, it would be safe to add later, right?</blockquote></mx-reply>agree it could be add later. I just think it very likely will have some perf benefit, especially on embed engines.","m.relates_to":{"m.in_reply_to":{"event_id":"$bLS9eHNDztpbbHqorBruQqM5V0igkfe7HE5RoRGbWSs"}},"msgtype":"m.text"},"ts":1689153728423,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$f3Cm5TfDgfeqVyRCYeuUQJMxPeeMPgWOq7mLJm_MLGk"},
{"content":{"body":"So, the alternative to having these \"inputOffset\" and \"outputOffset\" parameters is to have to create a separate view into the input & output base arrays on each iteration of the loop?","msgtype":"m.text"},"ts":1689154035855,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Uv46fRM7D000oTakUyIkSatl6ycxpGDTqTzA-rs2Nx8"},
{"content":{"body":"Bradford Smith: yes, or a shifting view, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, or a shifting view, and views should be very lightweight","msgtype":"m.text"},"ts":1689154183338,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ"},
{"content":{"body":" * Bradford Smith: yes, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight","m.new_content":{"body":"Bradford Smith: yes, and views should be very lightweight","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight","msgtype":"m.text"},"m.relates_to":{"event_id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689154224287,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4mTGwstTmpGsmtYms2Sz6-EBK4SzCe4wm2rAgKSijUY"},
{"content":{"body":"After listening all queue discussion, I feel maybe we'd better leave the streaming api to future follow-on proposal ... ","msgtype":"m.text"},"ts":1689155214982,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$0NAT-hgoFsp5ZFsvrP_-vXez-mgsnAGn3vu1d6M6UQM"},
{"content":{"body":"I think we want the full cake, we want the un-disputed oneshot methods to fast-track, and have the streaming API versions that share consistency with them added later. Looks like a good challenge...","msgtype":"m.text"},"ts":1689155292314,"senderName":"Christian Ulbrich","senderId":"@christianulbrich:matrix.org","id":"$qAr-xK94yzcGHH_xwK4o2oxQwHIwvX7bOWVG8ppkejA"},
{"content":{"body":"I think the streaming design is as fleshed out as it's going to be, we just need to decide whether it's justified for inclusion or not","msgtype":"m.text"},"ts":1689155328806,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo"},
{"content":{"body":"I don't think splitting helps with that","msgtype":"m.text"},"ts":1689155348894,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_dHS-qVIPLgjDcDonggYY107Pz9bWiYHQRv74PGlqmU"},
{"content":{"body":"> <@michaelficarra:matrix.org> Bradford Smith: yes, and views should be very lightweight\n\nviews are apparently not that lightweight in JSC per https://github.com/tc39/proposal-arraybuffer-base64/pull/26#issuecomment-1617312928","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">Bradford Smith</a>: yes, and views should be very lightweight</blockquote></mx-reply>views are apparently not that lightweight in JSC per https://github.com/tc39/proposal-arraybuffer-base64/pull/26#issuecomment-1617312928","m.relates_to":{"m.in_reply_to":{"event_id":"$1ahrWq5wVRsKkzHkUV2m4TkQ_-1sCsxkkENrcU8jKdQ"}},"msgtype":"m.text"},"ts":1689155444468,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QGtCQ2WIMsUHK88XQfmvdC1WSJNATz7rr6cebBBmzeY"},
{"content":{"body":"or at least not the first view","msgtype":"m.text"},"ts":1689155463791,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_BDKAfMRYGAunzkNEfLA72snWjffhF6YXWUHYT8mYHo"},
{"content":{"body":"*should*","format":"org.matrix.custom.html","formatted_body":"<em>should</em>","msgtype":"m.text"},"ts":1689155500116,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc"},
{"content":{"body":"I dont think views are in general \"lightweight\" in comparison to actually know the place where you want to put yyour data","msgtype":"m.text"},"ts":1689155518011,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$HSXOcovP690_vqb8pWU8TkcAxfORoPozyhrRCvL72OA"},
{"content":{"body":"> <@michaelficarra:matrix.org> I think the streaming design is as fleshed out as it's going to be, we just need to decide whether it's justified for inclusion or not\n\nBut, yes this might be true","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I think the streaming design is as fleshed out as it&#39;s going to be, we just need to decide whether it&#39;s justified for inclusion or not</blockquote></mx-reply>But, yes this might be true","m.relates_to":{"m.in_reply_to":{"event_id":"$jdZoOTMRnHaNxYlQfiPUCLWLi4c6F3eIYklLPAlVeJo"}},"msgtype":"m.text"},"ts":1689155548435,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$Wtmt8sv9-tZDcUMPkdb3sVNFOYzbdL8ssLtyKJlp0Fc"},
{"content":{"body":"> <@michaelficarra:matrix.org> *should*\n\nI think there's always going to tradeoffs in any representation, and a representation in which the second view of a buffer is expensive in exchange for the first view being faster is not obviously incorrect","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><em>should</em></blockquote></mx-reply>I think there's always going to tradeoffs in any representation, and a representation in which the second view of a buffer is expensive in exchange for the first view being faster is not obviously incorrect","m.relates_to":{"m.in_reply_to":{"event_id":"$JjJA0Mq-t3s7bqd9bxC3ICxHpvLqs9BOrsKRW10vDXc"}},"msgtype":"m.text"},"ts":1689155564996,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_1nLjOXwvsmKdM5P14vmPpVd-HyC2Tq_1ajOjoMk5rU"},
{"content":{"body":"so I don't think \"should\" is at all obvious here","msgtype":"m.text"},"ts":1689155572890,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oYv4DtzJC2CjPb_wO5jlKuSyww5WlN1ygVmUwI2pxOI"},
{"content":{"body":"Luca Casonato: https://github.com/tc39/proposal-arraybuffer-base64/issues/13 is the streaming issue, and https://github.com/tc39/proposal-arraybuffer-base64/issues/21 the one for encoding into an existing buffer","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: https://github.com/tc39/proposal-arraybuffer-base64/issues/13 is the streaming issue, and https://github.com/tc39/proposal-arraybuffer-base64/issues/21 the one for encoding into an existing buffer","msgtype":"m.text"},"ts":1689155664000,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ivZK9P9XPQGBxg2vzocxzDgZ3n7q-Rb1wWoR8no7IRU"},
{"content":{"body":"the thing where you have a \"prefix\" argument to the one-shot API was my first suggestion, if I have understood correctly that this is what you were proposing; see response from justin in https://github.com/tc39/proposal-arraybuffer-base64/issues/13#issuecomment-911968641","msgtype":"m.text"},"ts":1689155756867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hr5qw0WV1lfV5A52UKqgVx7jY4hz6npttAekBf1UHSM"},
{"content":{"body":"(and from peter, two comments down)","msgtype":"m.text"},"ts":1689155778460,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$61-_STMdAGSge7m92VGfGNTEq-oA1uO9JJ_loxTFC8g"},
{"content":{"body":"re: streaming: I think, in general, it's vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can't fit in memory/packets all together. I don't know of such use cases/environments.","msgtype":"m.text"},"ts":1689156040426,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"},
{"content":{"body":"might be a bit cursed but I've seen people pass around entire images encoded in base64","msgtype":"m.text"},"ts":1689156107809,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U"},
{"content":{"body":"that's not even unusual","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156138555,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XTAEd-SOBRteNaafsh0_C50jkHy1iDL8CYL2ASlnWxE"},
{"content":{"body":" * might be a bit cursed but I've seen people pass around entire images encoded in encoded base64","m.new_content":{"body":"might be a bit cursed but I've seen people pass around entire images encoded in encoded base64","msgtype":"m.text"},"m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689156138742,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$XUAMya5TDbNx8qZ0_BuCWWEwQlbWE8f0RnaOhJbyCjA"},
{"content":{"body":"yeah, not sure how ideal it is, but it's certainly not uncommon","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$XTAEd-SOBRteNaafsh0_C50jkHy1iDL8CYL2ASlnWxE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156172075,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$Nm8Yi00kowATUZLFC3WyMjjPHheMcPZ46ZSJaJHtRuE"},
{"content":{"body":"I know but there's a certain limit on how big they can get, right?","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Nm8Yi00kowATUZLFC3WyMjjPHheMcPZ46ZSJaJHtRuE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156193457,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X5ffyVzc6dyhralBoEjkYspK7M8x2HJa16MfKLRF3bk"},
{"content":{"body":"also I don't think HTML has a streaming API to set the src of an img tag...","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$X5ffyVzc6dyhralBoEjkYspK7M8x2HJa16MfKLRF3bk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156246984,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ByXPQyIY-yq68kcPLlHGUph5ipRmsTVhH0JGMVoD6mQ"},
{"content":{"body":"there are a lot of APIs that don't handle binary data at all. You can only send e.g. images via encoding","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ByXPQyIY-yq68kcPLlHGUph5ipRmsTVhH0JGMVoD6mQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156254076,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},
{"content":{"body":"bakkot: My suggestion was this: https://gist.github.com/lucacasonato/06a74fe2658fbe5a2d9c24cc767006c0\n\nNo need for any `extra` option on the static API. This performs at most 3 byte copies for every remainder. The code can be optimized further.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: My suggestion was this: https://gist.github.com/lucacasonato/06a74fe2658fbe5a2d9c24cc767006c0</p>\n<p>No need for any <code>extra</code> option on the static API. This performs at most 3 byte copies for every remainder. The code can be optimized further.</p>\n","msgtype":"m.text"},"ts":1689156262509,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$I7Mvs6R4tI7uhqolw0UnI3tpjs1FeOCxhcVjdEpGX7I"},
{"content":{"body":"at Shape, we one-shot base64 decode something like 150kb of bytecode on the main thread every page load","m.relates_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI","is_falling_back":true,"m.in_reply_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156301526,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$976Z4nEogVQCUSEG6Oeiyk7XjzWwstn9a4Y6ILfWH1o"},
{"content":{"body":"haven't run into any long task issues yet","m.relates_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI","is_falling_back":true,"m.in_reply_to":{"event_id":"$976Z4nEogVQCUSEG6Oeiyk7XjzWwstn9a4Y6ILfWH1o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156308499,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$EJUwcKlvhuzomae2zd5Ix1ohhhGSaNrAwE8VrgcxKX0"},
{"content":{"body":"There is no \"real\" upper limit of the length of a string. Most of the limits are imposed by the server software that is used","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156355014,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$uUdD_egBQfw0VLcZ-q0EwhKHi2zc7eMrA3ielEHVQcs"},
{"content":{"body":"yes please","m.relates_to":{"event_id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0","is_falling_back":true,"m.in_reply_to":{"event_id":"$2Mz0KcOdnS3jFo_9viI_JSZqDh19w7QDYHtDIMJxOa0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156370467,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$tNdW9zcj7jzeYmt6V2b7ZNP4bkXc7uxi_hyETQo7wWQ"},
{"content":{"body":"let me introduce you to my good friend 2**53","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$uUdD_egBQfw0VLcZ-q0EwhKHi2zc7eMrA3ielEHVQcs"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156375714,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Rr7jgqhBtD5jtZSZY_1r5pk6Jz_ExtkLWOREYiXprjk"},
{"content":{"body":":D","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Rr7jgqhBtD5jtZSZY_1r5pk6Jz_ExtkLWOREYiXprjk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156381608,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$ixG5mjnzLcQZ9fXh13NVikP7gQKurYPAk7-ipNki3hM"},
{"content":{"body":"You might compress you string before you hit that ˆˆ","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$ixG5mjnzLcQZ9fXh13NVikP7gQKurYPAk7-ipNki3hM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156414155,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$U3mpK1wfvnqarrdi8kB8LtLT9mOGlFyPXhLrwi_v8JU"},
{"content":{"body":"*your","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$U3mpK1wfvnqarrdi8kB8LtLT9mOGlFyPXhLrwi_v8JU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156421180,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$vCYAPutp7QkNYMSa-HoK857qYmG06Siu41vYhMMUMD8"},
{"content":{"body":"ah, got it","msgtype":"m.text"},"ts":1689156434245,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xcbbebk485_8-JM7xu8R1D94Q9hO4PxfSACaB9titrw"},
{"content":{"body":"> <@tkopp:matrix.org> there are a lot of APIs that don't handle binary data at all. You can only send e.g. images via encoding\n\nit'd be good to understand use cases like this in some more detail","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@tkopp:matrix.org\">@tkopp:matrix.org</a><br>there are a lot of APIs that don&#39;t handle binary data at all. You can only send e.g. images via encoding</blockquote></mx-reply>it'd be good to understand use cases like this in some more detail","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":false,"m.in_reply_to":{"event_id":"$efKFQwnNkQE2HNRb6XzQ5_BwRhaHd4_7oZCIkHkoM3U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156464484,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JmLreIb1BKCW7cd-uFo6vxa0W85irqAI1dXgs-oyk3s"},
{"content":{"body":"bakkot: do you have a link to your Web Streams impl ontop of the streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the streaming API? I can't find it in your slides","msgtype":"m.text"},"ts":1689156469401,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$QwCjJJS0nlCXF6l32DwT0qP2F0SWjZ93nSJGOJ9VxdM"},
{"content":{"body":" * bakkot: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","m.new_content":{"body":"bakkot: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do you have a link to your Web Streams impl ontop of the proposed streaming API? I can't find it in your slides","msgtype":"m.text"},"m.relates_to":{"event_id":"$QwCjJJS0nlCXF6l32DwT0qP2F0SWjZ93nSJGOJ9VxdM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689156476024,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$S5FzbrW8u5qag97SnMska-5JLB6HenLGJ9P9QLTRn-A"},
{"content":{"body":"it's in the playground","msgtype":"m.text"},"ts":1689156483376,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DiSPINWeHMJ2YvPhWzo6sxu_lX56MTFFioeVfztZCAg"},
{"content":{"body":"https://tc39.es/proposal-arraybuffer-base64/","msgtype":"m.text"},"ts":1689156491266,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uLP2f6GhWbSFsRs8surrdSAe3_6NG5hu5ii7iAy__Js"},
{"content":{"body":"Ah, thanks!","msgtype":"m.text"},"ts":1689156519667,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$qXfE47k2lR304IRcOMhOQ3j7gq-sg02e6L8xDME_qao"},
{"content":{"body":"rbuckton: my personal opinion is that I'd like to investigate `Symbol.enter` but with what I know at this time, full context manager support seems excessive. I'd hesitate to speak for the committee, but that would be my recommendation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rbuckton:matrix.org\">rbuckton</a>: my personal opinion is that I'd like to investigate <code>Symbol.enter</code> but with what I know at this time, full context manager support seems excessive. I'd hesitate to speak for the committee, but that would be my recommendation","msgtype":"m.text"},"ts":1689156650639,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$0rYgY-_k2-2_NViP8pW6u7TA9R3IBRjghV9BlKavZxs"},
{"content":{"body":"soap APIs from transportation/shipping companies come to mind immediately.","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$JmLreIb1BKCW7cd-uFo6vxa0W85irqAI1dXgs-oyk3s"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156650954,"senderName":"tkopp","senderId":"@tkopp:matrix.org","id":"$PLsLWYBUknganTfuns_Rop4qCzwKscgaJpPFGxA_F1c"},
{"content":{"body":"great, I'd love to hear about your experience with these and how they relate to data size and streaming","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$PLsLWYBUknganTfuns_Rop4qCzwKscgaJpPFGxA_F1c"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156684800,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Cui_n0Kz11HiuAYufK-SoetD1PEnPHmq-8fYSQpXqd4"},
{"content":{"body":"github rest API returns contents as base64-encoded strings","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$Cui_n0Kz11HiuAYufK-SoetD1PEnPHmq-8fYSQpXqd4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156688671,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$H2ETUr7lZDlld2cXISSELrUunPwqRt9miGIBXcoxf4U"},
{"content":{"body":"for files up to 100MB in size","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$H2ETUr7lZDlld2cXISSELrUunPwqRt9miGIBXcoxf4U"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156714509,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oL2_8xFLLSavIlj-6CUYP7Yob7RpPyKzVZRzD0WGmo4"},
{"content":{"body":"actually I guess only up to 1MB; the API changes a bit for larger files","m.relates_to":{"event_id":"$ZYq3FTDfIDZPzwZK7d5Wvto2Luwf2yD0o3t0Kt5ls_U","is_falling_back":true,"m.in_reply_to":{"event_id":"$oL2_8xFLLSavIlj-6CUYP7Yob7RpPyKzVZRzD0WGmo4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1689156892272,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9ulJ5jLqmYwI9wwqGoWkVUQ5DyY6CfMNCzVEAtRZ33A"},
{"content":{"body":"From my point of view Ron was just considering a related problem - how to make sure developers are nudged toward using the resource management features he's defining - and then coming up with a possible solution to this. He presented it as a possible follow-on proposal. DE seemed at first to be saying that this problem is important enough to force changes to the existing stage 3 proposal, but I think he's backed down from this. I think the conclusion is not to include such a feature in the current proposal.","msgtype":"m.text"},"ts":1689156896838,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$-J0lcMlu8wr_coG1El2eWD7vqmnlBN_aHhOqryXc5-U"},
{"content":{"body":"I'll reiterate that I don't have an appetite for full context managers. They add a level of complexity that I'm not sure is suitable for ECMAScript, and they would have a negative impact on the ability for static type checkers like TypeScript to make reasonable assumptions about control flow due to ability for any context manager bound to a `using` to swallow an exception. ","format":"org.matrix.custom.html","formatted_body":"I'll reiterate that I don't have an appetite for full context managers. They add a level of complexity that I'm not sure is suitable for ECMAScript, and they would have a negative impact on the ability for static type checkers like TypeScript to make reasonable assumptions about control flow due to ability for any context manager bound to a <code>using</code> to swallow an exception.","msgtype":"m.text"},"ts":1689156919969,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$7a_wsz-9Nv3InHSPHZXrYs6SGVzqXrjF8tHO1WTixlU"},
{"content":{"body":"Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without \"leaking\" anywhere else from the scope where they were created. ","msgtype":"m.text"},"ts":1689157114245,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8"},
{"content":{"body":"just encouraged, not required","msgtype":"m.text"},"ts":1689157145387,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$F7jzqf7JU5lWbqsIEiE77uaZbAM0YXgjX_cJbFlpBGA"},
{"content":{"body":"If we're not doing full context managers, then the goal of the proposed change would be to resolve a concern about \"unused\" disposables. That would be addressed by `Symbol.enter` without the need to introduce a `Symbol.asyncEnter`. `await using` would still verify/capture `[Symbol.asyncDispose]` as it does today, but would call `[Symbol.enter]()` synchronously without the need to introduce an extra `Await` at the declaration site. That would also avoid needing to rethink `AsyncDisposableStack.prototype.use` to handle the async case.","format":"org.matrix.custom.html","formatted_body":"If we're not doing full context managers, then the goal of the proposed change would be to resolve a concern about \"unused\" disposables. That would be addressed by <code>Symbol.enter</code> without the need to introduce a <code>Symbol.asyncEnter</code>. <code>await using</code> would still verify/capture <code>[Symbol.asyncDispose]</code> as it does today, but would call <code>[Symbol.enter]()</code> synchronously without the need to introduce an extra <code>Await</code> at the declaration site. That would also avoid needing to rethink <code>AsyncDisposableStack.prototype.use</code> to handle the async case.","msgtype":"m.text"},"ts":1689157177644,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$cpJSoqyp0ZmjQuSB_8KsmEZWfGcNlfhChfgrEmlHAjY"},
{"content":{"body":"for using `Symbol.enter` as a way for types to _enforce_ they are being assigned to `using`, could this also be done with `Symbol.dipose` setting a `userHasAcknoledgedLifetime` flag that either errors/warns if other methods are called without that flag set?","format":"org.matrix.custom.html","formatted_body":"for using <code>Symbol.enter</code> as a way for types to <em>enforce</em> they are being assigned to <code>using</code>, could this also be done with <code>Symbol.dipose</code> setting a <code>userHasAcknoledgedLifetime</code> flag that either errors/warns if other methods are called without that flag set?","msgtype":"m.text"},"ts":1689157218955,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8"},
{"content":{"body":"> <@littledan:matrix.org> re: streaming: I think, in general, it's vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can't fit in memory/packets all together. I don't know of such use cases/environments.\n\nit's not just about whether it all fits in memory; for example, one might reasonably stream base64'd wasm bytecode into WebAssembly.compileStreaming. the advantage of streaming in this case is that you can start doing work before waiting for the whole download to finish. which is nice!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>re: streaming: I think, in general, it&#39;s vaguely best practice that primitives that deals with data should have zero-copy and streaming APIs for doing stuff with them. To me, the main question is whether there are valid use cases for doing base64 on a fairly big thing that can&#39;t fit in memory/packets all together. I don&#39;t know of such use cases/environments.</blockquote></mx-reply>it's not just about whether it all fits in memory; for example, one might reasonably stream base64'd wasm bytecode into WebAssembly.compileStreaming. the advantage of streaming in this case is that you can start doing work before waiting for the whole download to finish. which is nice!","m.relates_to":{"is_falling_back":false,"m.in_reply_to":{"event_id":"$3Xjrxarw7i4SnumCYfh1BUtdHX0sV63ON0JPm28LeiI"}},"msgtype":"m.text"},"ts":1689157224521,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$T3D8u99kUTHqINycHcNtA3zf3CwX-Qdjz99la-Oh2cc"},
{"content":{"body":"similarly, if you're uploading base64'd data to a server, you might do binary data -> compression stream -> base64 stream -> `fetch`; it's nice to be able to start the network request as early as possible","format":"org.matrix.custom.html","formatted_body":"similarly, if you're uploading base64'd data to a server, you might do binary data -&gt; compression stream -&gt; base64 stream -&gt; <code>fetch</code>; it's nice to be able to start the network request as early as possible","msgtype":"m.text"},"ts":1689157272270,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbQiYYf9UGR8Rz4ikXQOryWDkg-dpWVCjxU3WQBgOD0"},
{"content":{"body":"my gut feeling is also that `DisposeStack.p.return` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":"my gut feeling is also that <code>DisposeStack.p.return</code> is a simpler API to explain that the enter/exit symbols.","msgtype":"m.text"},"ts":1689157303418,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU"},
{"content":{"body":"> <@aclaymore:matrix.org> for using `Symbol.enter` as a way for types to _enforce_ they are being assigned to `using`, could this also be done with `Symbol.dipose` setting a `userHasAcknoledgedLifetime` flag that either errors/warns if other methods are called without that flag set?\n\nYes, a user-defined implementation could conceivably make `[Symbol.dispose]` a getter that indicates the method was at least read.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>for using <code>Symbol.enter</code> as a way for types to <em>enforce</em> they are being assigned to <code>using</code>, could this also be done with <code>Symbol.dipose</code> setting a <code>userHasAcknoledgedLifetime</code> flag that either errors/warns if other methods are called without that flag set?</blockquote></mx-reply>Yes, a user-defined implementation could conceivably make <code>[Symbol.dispose]</code> a getter that indicates the method was at least read.","m.relates_to":{"m.in_reply_to":{"event_id":"$vfLUvTkRvnb1Iu5yqSL_4H7RA8ZAURSpK9jP7j8Vbc8"}},"msgtype":"m.text"},"ts":1689157304173,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4"},
{"content":{"body":"> <@aclaymore:matrix.org> my gut feeling is also that `DisposeStack.p.return` is a simpler API to explain that the enter/exit symbols.\n\nwhat is `return`?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>my gut feeling is also that <code>DisposeStack.p.return</code> is a simpler API to explain that the enter/exit symbols.</blockquote></mx-reply>what is <code>return</code>?","m.relates_to":{"m.in_reply_to":{"event_id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU"}},"msgtype":"m.text"},"ts":1689157318224,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$WsZzQiMqCrWTzTIe5jx3_hvBCi253y3d6RyZc6xmRto"},
{"content":{"body":"sorry, move","msgtype":"m.text"},"ts":1689157323391,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4"},
{"content":{"body":" * sorry, `move`","format":"org.matrix.custom.html","formatted_body":" * sorry, <code>move</code>","m.new_content":{"body":"sorry, `move`","format":"org.matrix.custom.html","formatted_body":"sorry, <code>move</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689157326860,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$5J7gNDa5Bb-wsf5lByVU4-7uQdjBgZVLN7EL1Msuid0"},
{"content":{"body":" * my gut feeling is also that `DisposeStack.p.move` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":" * my gut feeling is also that <code>DisposeStack.p.move</code> is a simpler API to explain that the enter/exit symbols.","m.new_content":{"body":"my gut feeling is also that `DisposeStack.p.move` is a simpler API to explain that the enter/exit symbols.","format":"org.matrix.custom.html","formatted_body":"my gut feeling is also that <code>DisposeStack.p.move</code> is a simpler API to explain that the enter/exit symbols.","msgtype":"m.text"},"m.relates_to":{"event_id":"$is7ehR0lGiPotxSDMAp0jIkc-PIwKcsRgKXwybMPXDU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689157333457,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$DktWSxAo2Fajq7r3qCbuCzQGS-HCzp_W3YRP4ZKMHgo"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without \"leaking\" anywhere else from the scope where they were created.\n\nMy intent was to state that as a remediation for an \"unused\" disposable, a host could leverage GC if necessary to ensure native handles don't leak, and that a user could use `FinalizationRegistry` to do the same. I worded it too strongly to expect that to always be the case, and that the outcome should be resource cleanup rather than a warning message like as what can happen for unhandled promise rejections. That wording was based on my prior experience with C#'s `IDisposable` and the C# team's recommendations to do likewise.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Regarding the GC cleanup issue: I thought Ron was suggesting that engines could be encouraged to clean up any disposables that they themselves created (not every possible disposable) if they go out of scope without &quot;leaking&quot; anywhere else from the scope where they were created. </blockquote></mx-reply>My intent was to state that as a remediation for an \"unused\" disposable, a host could leverage GC if necessary to ensure native handles don't leak, and that a user could use <code>FinalizationRegistry</code> to do the same. I worded it too strongly to expect that to always be the case, and that the outcome should be resource cleanup rather than a warning message like as what can happen for unhandled promise rejections. That wording was based on my prior experience with C#'s <code>IDisposable</code> and the C# team's recommendations to do likewise.","m.relates_to":{"m.in_reply_to":{"event_id":"$Ed2iltbYzzjeZ88POXcf9QHFDFn51PpGuCy3Ad8i0y8"}},"msgtype":"m.text"},"ts":1689157486181,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DyLwpgsqFfljFz0bv2tqAg8k8nIsl7c1ZbE8T9NgHqo"},
{"content":{"body":"> <@rbuckton:matrix.org> Yes, a user-defined implementation could conceivably make `[Symbol.dispose]` a getter that indicates the method was at least read.\n\nPersonally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Yes, a user-defined implementation could conceivably make <code>[Symbol.dispose]</code> a getter that indicates the method was at least read.</blockquote></mx-reply>Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.","m.relates_to":{"m.in_reply_to":{"event_id":"$flX9sBFAx0O6t01eJjgrY-wFgbvUlF4UHt1gVkZGHV4"}},"msgtype":"m.text"},"ts":1689157524264,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY"},
{"content":{"body":"> <@aclaymore:matrix.org> sorry, `move`\n\n`move` and `exit` are somewhat orthogonal to each other, so I'm not clear on the correlation you are making?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>sorry, <code>move</code></blockquote></mx-reply><code>move</code> and <code>exit</code> are somewhat orthogonal to each other, so I'm not clear on the correlation you are making?","m.relates_to":{"m.in_reply_to":{"event_id":"$VZJE-Dr7loIPGmNAaKq3P5GkkPXtyrazPjY62Ni7Q_4"}},"msgtype":"m.text"},"ts":1689157564982,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$XbT7oorjJD79Il-z-9YLLgPzIvydRPfuba41AsoY8To"},
{"content":{"body":"> <@bradfordcsmith:matrix.org> Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.\n\nI concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bradfordcsmith:matrix.org\">@bradfordcsmith:matrix.org</a><br>Personally, I think you're chasing an impossible goal here. The Explicit Resource Management proposal as-is provides a useful feature. There's no need to try so hard to force its correct use. Leave that problem for another day. Just my $0.02.</blockquote></mx-reply>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.","m.relates_to":{"m.in_reply_to":{"event_id":"$i9-0dHQ_NIcSEBlGy7I0DEvv3wTCvVGPVWsNoBnB-oY"}},"msgtype":"m.text"},"ts":1689157735303,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk"},
{"content":{"body":"for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that ","format":"org.matrix.custom.html","formatted_body":"for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that","msgtype":"m.text"},"ts":1689157761151,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q"},
{"content":{"body":"* can also indicate that ","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>can also indicate that</li>\n</ul>","msgtype":"m.text"},"ts":1689157768113,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$q4IGQGv0-qdAoIw50pYQwz_C8fT61T0Z7YhqobgDUKI"},
{"content":{"body":"I'm not convinced we even need `[Symbol.enter]()`.","format":"org.matrix.custom.html","formatted_body":"I'm not convinced we even need <code>[Symbol.enter]()</code>.","msgtype":"m.text"},"ts":1689157776049,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ"},
{"content":{"body":"> <@aclaymore:matrix.org> for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that\n\nAh, thank you for the clarification.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>for the examples where code is switching if the exit was a throw or return completion. Reaching DisposeStack.p.move also indicates that</blockquote></mx-reply>Ah, thank you for the clarification.","m.relates_to":{"m.in_reply_to":{"event_id":"$bCVrrTNsJQWLDQZzw1mPKgExts3H7275oMvf2TcSr1Q"}},"msgtype":"m.text"},"ts":1689157799588,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$61P6LPyPosw5BAQ_Qlm0ZUETqH9WGzykXbm27oqDk6I"},
{"content":{"body":"> <@rbuckton:matrix.org> I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.\n\nIn a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n```js\nconst stack1 = new DisposableStack();\n...\nconst stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nconst stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.</blockquote></mx-reply><p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">const stack1 = new DisposableStack();\n...\nconst stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nconst stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk"}},"msgtype":"m.text"},"ts":1689157961219,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DvxYzQsKbcPeKkRM3u6FSB8iwa2q5CewBvOPzhJwLdg"},
{"content":{"body":"(which is part of the reason for the choice of method name as well)","msgtype":"m.text"},"ts":1689157987184,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hDqVGEW181k_35GU8wo6sXt_SfkjTwQUse0bXcISWJ8"},
{"content":{"body":"> <@rbuckton:matrix.org> I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every `var`/`let`/`const` declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.\n\n * In a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n\n```js\nusing stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$PaiyaD2CVH42vRcVMgUByAf_L0O8URkp1YDLRkVBFkk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I concur. JavaScript itself can't reliably enforce lifetimes and ownership in the same way a language like Rust can, as that essentially requires a fully-baked runtime type system. Without that, we would be forced to take a major performance hit for every <code>var</code>/<code>let</code>/<code>const</code> declaration and every assignment to check or transfer ownership of an object's lifetime, which is a non-starter.</blockquote></mx-reply> * <p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">using stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","m.new_content":{"body":"In a way, `DisposableStack.p.move` is a close approximation of Rust's `move` semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:\n\n```js\nusing stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n```","format":"org.matrix.custom.html","formatted_body":"<p>In a way, <code>DisposableStack.p.move</code> is a close approximation of Rust's <code>move</code> semantics as a way to \"transfer ownership on assignment\" similar to an affine type system, but in an imperative form:</p>\n<pre><code class=\"language-js\">using stack1 = new DisposableStack();\n...\nusing stack2 = stack1.move(); // stack1 can no longer be used, its contents have been moved to stack2.\n...\nusing stack3 = stack2.move(); // stack2 can no longer be used, its contents have been moved to stack3.\n</code></pre>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$DvxYzQsKbcPeKkRM3u6FSB8iwa2q5CewBvOPzhJwLdg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689158049148,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M-q4AzoAOfbvYRtkRezHvU_31cOcXlRzzhEUAlHUc14"},
{"content":{"body":"> <@rbuckton:matrix.org> I'm not convinced we even need `[Symbol.enter]()`.\n\nI agree. But if we did want to go in that direction, I think we should retract this proposal to Stage 2, as it's a big change and we don't have a concrete form of this yet.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>I'm not convinced we even need <code>[Symbol.enter]()</code>.</blockquote></mx-reply>I agree. But if we did want to go in that direction, I think we should retract this proposal to Stage 2, as it's a big change and we don't have a concrete form of this yet.","m.relates_to":{"m.in_reply_to":{"event_id":"$FBqQCX1jKjXTHdAWTUY1IHqkg4_KZamn-zhq231AqLQ"}},"msgtype":"m.text"},"ts":1689159709293,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$W3xCdSVDoYm-jkvpbzO-jix_DV2Q0-8J9EeTCu0_Agw"},
{"content":{"body":"I think we should conclude that we're not going in this Symbol.enter direction","msgtype":"m.text"},"ts":1689159722069,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs"},
{"content":{"body":"this is just a very big thing to be considered an open question for a Stage 3 proposal","msgtype":"m.text"},"ts":1689159776606,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$oj3ebVplLR8HIF3vMfudCC2jXnW4LBntm4gVdujob1c"},
{"content":{"body":"> <@littledan:matrix.org> I think we should conclude that we're not going in this Symbol.enter direction\n\nnicolo-ribaudo's suggestion to make `[Symbol.dispose]` a getter if you want to opt-in to requiring the use of `using` or a `DisposableStack` holds water and may be satisfactory, without the need to introduce a new symbol-named method to the Disposable protocol: https://github.com/tc39/proposal-explicit-resource-management/issues/159#issuecomment-1630532470","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I think we should conclude that we&#39;re not going in this Symbol.enter direction</blockquote></mx-reply><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>'s suggestion to make <code>[Symbol.dispose]</code> a getter if you want to opt-in to requiring the use of <code>using</code> or a <code>DisposableStack</code> holds water and may be satisfactory, without the need to introduce a new symbol-named method to the Disposable protocol: https://github.com/tc39/proposal-explicit-resource-management/issues/159#issuecomment-1630532470","m.relates_to":{"m.in_reply_to":{"event_id":"$X6ZdU93qoqbXzq_GZZLGw49PC-AzIU0FhyN4ePt0mLs"}},"msgtype":"m.text"},"ts":1689159924149,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kj0SRQLBXHu2GIU4AIIWx9wy98Vk6nCUPg0NqeXWmNA"},
{"content":{"body":"it's so strange to me that IETF would explicitly *not* want to support sub-minute offsets","format":"org.matrix.custom.html","formatted_body":"it's so strange to me that IETF would explicitly <em>not</em> want to support sub-minute offsets","msgtype":"m.text"},"ts":1689161102382,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$R_dFameuSDHkou1R7GztbuAQURT4A8x4G2FhtgUxf3I"},
{"content":{"body":"it just feels like painting yourself into a corner for no good reason","msgtype":"m.text"},"ts":1689161121014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$NZjoOrgp1EwOoP3q4zIbfGmVYdlLbuIFToozJVLIBJ4"},
{"content":{"body":"be the change you want to see in the world","msgtype":"m.text"},"ts":1689161151665,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$i5ZaoGZILkDU3YJ_vbKp2dcwj8ffGusiW1VIMu9v4ZM"},
{"content":{"body":"do you want sub-minute offset timezone in the world","msgtype":"m.text"},"ts":1689161165419,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$iHATev0whRGcs51gRF-QletQJ2_t_TdG09m6hJ--EWU"},
{"content":{"body":"I am not a politician, I do not get to decide that","msgtype":"m.text"},"ts":1689161177593,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s"},
{"content":{"body":"they considered it vestigial and unnecessary","msgtype":"m.text"},"ts":1689161182208,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$jpnnhOmYhK6B5IePcXJDWdlx2let0vqWyqSjI33mpPw"},
{"content":{"body":" * they considered it vestigial and unnecessary moving forwards","m.new_content":{"body":"they considered it vestigial and unnecessary moving forwards","msgtype":"m.text"},"m.relates_to":{"event_id":"$jpnnhOmYhK6B5IePcXJDWdlx2let0vqWyqSjI33mpPw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1689161189086,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$afs4KrJCi8xJS1SHTww3XhhI71sD9T6EUIM0mvjLzKo"},
{"content":{"body":"if all the computer people collectively refuse to implement support for it, what are the politicians gonna do?","msgtype":"m.text"},"ts":1689161196713,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OS4aUDJzg88APT0ixQu6-5i4Aj6TPDXjWZ361t1SFnI"},
{"content":{"body":"fwiw, the ISO format still accepts all sorts of input","msgtype":"m.text"},"ts":1689161201899,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$7v-5Zc3gMNwFSTvUZX66xFp2u48PGPTs56v-XAWfBNI"},
{"content":{"body":"I would not be at all surprised if the DPRK changed their timezone (again) to a sub-minute offset","msgtype":"m.text"},"ts":1689161203352,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KEeILbjK9XhAHr9CYQbq5x5YOdu-pjyCMAwbkvQ9tCg"},
{"content":{"body":"the time is whatever my phone tells me it is, not what a politician announces","msgtype":"m.text"},"ts":1689161206519,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1-VvdMBvAz3isaY5NOggqLMsLrEd88nwj2fLTocnwjQ"},
{"content":{"body":"but IETF prefers to maintain a leaner profile","msgtype":"m.text"},"ts":1689161208902,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$n5zjQNr1Zb3uFk_4EVlQeyLozdgFTB2MdmefQahlhnk"},
{"content":{"body":"> <@michaelficarra:matrix.org> I am not a politician, I do not get to decide that\n\nyou sell yourself short dear mr ficarra","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>I am not a politician, I do not get to decide that</blockquote></mx-reply>you sell yourself short dear mr ficarra","m.relates_to":{"m.in_reply_to":{"event_id":"$5hhxBtzYhu0II-JnbZl05CrVFnXNDw9TuTS_T4FXO1s"}},"msgtype":"m.text"},"ts":1689161230009,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uhtUUhc-H9EHt5gXI8BRTsU_vjkBjsx_Jpjg34Yk-5w"},
{"content":{"body":"bakkot: the DPRK makes their own OS","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the DPRK makes their own OS","msgtype":"m.text"},"ts":1689161238144,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI"},
{"content":{"body":"i too skinned Linux when i was 10","msgtype":"m.text"},"ts":1689161251189,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$clgiX-ED1BiAeO7LgbkheKKsIMLWyGV0jrGxhRtA1dM"},
{"content":{"body":"> <@michaelficarra:matrix.org> bakkot: the DPRK makes their own OS\n\nI really wanted to respond but this isn't TDZ 😛 ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: the DPRK makes their own OS</blockquote></mx-reply>I really wanted to respond but this isn't TDZ 😛","m.relates_to":{"m.in_reply_to":{"event_id":"$D6mYrjuEiLeBlYw21_BwzRFiA_QshmV02uXtDUt5VJI"}},"msgtype":"m.text"},"ts":1689161289018,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$azG4J13Rbex52iSbDVpAp527xiqzbnkRjeNcRAxtXC8"},
{"content":{"body":"yes, the limitation of being unhinged and deranged about time zones","msgtype":"m.text"},"ts":1689161335537,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OHVuKCtRFhXCN4OBWiGzAmmprhRuc_c2hF_9xGUFPUw"},
{"content":{"body":"FWIW, `Asia/Pyongyang` could still have a sub-minute offset. the limitation doesn't apply to named time zones","format":"org.matrix.custom.html","formatted_body":"FWIW, <code>Asia/Pyongyang</code> could still have a sub-minute offset. the limitation doesn't apply to named time zones","msgtype":"m.text"},"ts":1689162698020,"senderName":"ptomato (at TC39, limited availability)","senderId":"@pchimento:igalia.com","id":"$jfngq1b0oxuRVEMT7vTsMI0Xd0u103HKo54jwImV4g4"},
{"content":{"body":"Yes, this only applies to in-timestamp offsets","msgtype":"m.text"},"ts":1689162857596,"senderName":"ryzokuken 🇳🇴","senderId":"@usharma:igalia.com","id":"$oCun5LS2TJse32iA4I7ieJkKu4fCkJ-P75_ZOrwvlX0"},
{"content":{"body":"I think the details of whether engines ship the Intl-only part separately or just together with Intl is something that we can leave to engines to decide. If an engine expects to take a really long time to do Temporal, they might do the Intl-only part. But Temporal should only ship with this included, and it'd be valid to ship at the same time. Within this, I think 2a would be the simplest way to organize the explanations.","msgtype":"m.text"},"ts":1689163180555,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$AnwMhw03xim44s_DW1cI3vsADos3CwitsPGhez5zqHw"}
]