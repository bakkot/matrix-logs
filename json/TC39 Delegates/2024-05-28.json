[
{"content":{"body":"wait so we've done all this trust types work and we don't even know if the CSP folks want to use it yet? https://github.com/w3c/webappsec-csp/pull/665","msgtype":"m.text"},"ts":1716912249332,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$E6TB3Gd4rYZZtHd7BVPfWBcq5r1XRSfI-VY-KfW09MU"},
{"content":{"body":"> <@michaelficarra:matrix.org> wait so we've done all this trust types work and we don't even know if the CSP folks want to use it yet? https://github.com/w3c/webappsec-csp/pull/665\n\nWhat do you mean, we don't know if CSP folks want to use it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw:matrix.org/$E6TB3Gd4rYZZtHd7BVPfWBcq5r1XRSfI-VY-KfW09MU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>wait so we&#39;ve done all this trust types work and we don&#39;t even know if the CSP folks want to use it yet? https://github.com/w3c/webappsec-csp/pull/665</blockquote></mx-reply>What do you mean, we don't know if CSP folks want to use it?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$E6TB3Gd4rYZZtHd7BVPfWBcq5r1XRSfI-VY-KfW09MU"}},"msgtype":"m.text"},"ts":1716917247152,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$nLbbTACw-EVO6X1RUFn2rJYpaLt-iyevdf-kPIRe2ks"},
{"content":{"body":"I think we want to be in the middle of the spec process, not just consulted at the end","m.mentions":{},"msgtype":"m.text"},"ts":1716917276612,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CN7QsNDsArmQRSIjKVCoXUHimjUJknbcAQLJSd4CQDM"},
{"content":{"body":"this stuff is pretty important for security, so it makes sense that we spend time on it","m.mentions":{},"msgtype":"m.text"},"ts":1716917287094,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GTGJ5q6wLiZc5gt1GsjJo5RQRcnPCSrdim6vuKB6tt8"},
{"content":{"body":"> This new keyword allows enabling eval only when trusted types are enforced. Such that in browsers that don't support trusted types no eval is allowed, unlike with unsafe-eval. This is a draft PR to gather feedback on this idea, this concept was brought up at previous WebAppSec WG meetings.","format":"org.matrix.custom.html","formatted_body":"<blockquote data-md=\">\">This new keyword allows enabling eval only when trusted types are enforced. Such that in browsers that don&#39;t support trusted types no eval is allowed, unlike with unsafe-eval. This is a draft PR to gather feedback on this idea, this concept was brought up at previous WebAppSec WG meetings.<br/></blockquote>","msgtype":"m.text"},"ts":1716917295292,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$i0eKNDu-ytXxoEAPLVhauEUVsWnDT2OY-WF2ztg27-w"},
{"content":{"body":"it makes it sound like we don't even know if CSP wants the feature, yet we've already done a bunch of work in our spec","msgtype":"m.text"},"ts":1716917353766,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$vtgLRtzVvw1GOHb8JC-kLwOWB_NAcXeMJOQnnUrDoC8"},
{"content":{"body":"the requests for a position from Mozilla/Webkit were opened today","msgtype":"m.text"},"ts":1716917375895,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$msOOcxQMqmirGw03X-bfDAEpLj1cwda290wNSbJng84"},
{"content":{"body":"don't you think we should've gotten that buy-in earlier?","msgtype":"m.text"},"ts":1716917382983,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$bDOu71otc0yuEA_GcXCKnnZ4oYBog4Hap-KNFwdcRtA"},
{"content":{"body":"yeah IMO it's OK for us to delay landing these kinds of patches until those standards positions happen, but in general TT has been developed together with those two groups, conversations are ongoing and we should be part of them during, not afterwards","m.mentions":{},"msgtype":"m.text"},"ts":1716917434568,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C7pdaTK5y80fU22kyHgN9S_a4J96R8UnYrLDv5j5yCs"},
{"content":{"body":"we could get consensus on the patch in advance and land it once we really know that it will be useful for them","m.mentions":{},"msgtype":"m.text"},"ts":1716917456838,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h4SBkM3aAjslTOF7S02t7hU7gRqsOLkoPCBVEQ8XaWQ"},
{"content":{"body":"the issue tracker clearly shows people from Mozilla and WebKit actively involved in these issues. The standards position is for sort of broadening outreach and finalizing a conclusion","m.mentions":{},"msgtype":"m.text"},"ts":1716917553962,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8NX63Ymz2-tpRYtixgvfZOQxAbLekBDXS4rRPNIyoRY"},
{"content":{"body":"> <@michaelficarra:matrix.org> wait so we've done all this trust types work and we don't even know if the CSP folks want to use it yet? https://github.com/w3c/webappsec-csp/pull/665\n\nIt reads to me that this isn’t necessary for TT, it just makes enabling it more secure for legacy browsers that don’t support TT.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!WgJwmjBNZEXhJnXHXw%3Amatrix.org/%24E6TB3Gd4rYZZtHd7BVPfWBcq5r1XRSfI-VY-KfW09MU\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>wait so we've done all this trust types work and we don't even know if the CSP folks want to use it yet? https://github.com/w3c/webappsec-csp/pull/665</blockquote></mx-reply>It reads to me that this isn’t necessary for TT, it just makes enabling it more secure for legacy browsers that don’t support TT.","m.relates_to":{"m.in_reply_to":{"event_id":"$E6TB3Gd4rYZZtHd7BVPfWBcq5r1XRSfI-VY-KfW09MU"}},"msgtype":"m.text"},"ts":1716918328455,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ze0cmy6csWMpkJjUjrk-ybSeDhh2Ja15a84AS9guqW4"},
{"content":{"body":"Exactly -- if you use `unsafe-eval` with TT, browsers that know about TT will only allow TT to be used in `eval()`, and reject random strings. In older browsers, it will fallback to the previous `unsafe-eval` behavior. This has already buy-in as part of the original TT.\n\nThe new standard position request is to allow using `trusted-eval` as an alternative to `unsafe-eval`, so that the fallback in old browsers can be \"block everything\" rather than \"allow everything\"","format":"org.matrix.custom.html","formatted_body":"<p>Exactly -- if you use <code>unsafe-eval</code> with TT, browsers that know about TT will only allow TT to be used in <code>eval()</code>, and reject random strings. In older browsers, it will fallback to the previous <code>unsafe-eval</code> behavior. This has already buy-in as part of the original TT.</p>\n<p>The new standard position request is to allow using <code>trusted-eval</code> as an alternative to <code>unsafe-eval</code>, so that the fallback in old browsers can be \"block everything\" rather than \"allow everything\"</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1716918593610,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QKryLKPMgG0viYmD19wMh0fLvkcMsxD8wY8D24QSBC8"},
{"content":{"body":"thanks for the explanation @nicolo-ribaudo:matrix.org","format":"org.matrix.custom.html","formatted_body":"thanks for the explanation <a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo</a>","msgtype":"m.text"},"ts":1716918822855,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wnjVMYEfV39EpDezX83oro9r6blGyntLF-IqmtOr9d4"}
]