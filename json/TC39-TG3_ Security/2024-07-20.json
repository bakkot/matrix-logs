[
{"content":{"body":"> <@michaelficarra:matrix.org> IMO new things like dynamic import shouldn't even work within eval\n\nWith the Evaluators proposal, that sort of arrangement would be possible to make. Agree that it’s a pity it’s possible at all","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!JtcjQkhrFPgsAWPQKp%3Amatrix.org/%246KQdJE6vPQIVT70-7Py4q1J3Pe6PRlwYo4qapCGlztM\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>IMO new things like dynamic import shouldn't even work within eval</blockquote></mx-reply>With the Evaluators proposal, that sort of arrangement would be possible to make. Agree that it’s a pity it’s possible at all","m.relates_to":{"m.in_reply_to":{"event_id":"$6KQdJE6vPQIVT70-7Py4q1J3Pe6PRlwYo4qapCGlztM"}},"msgtype":"m.text"},"ts":1721488564904,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$5z0QrXfiBy-zacXz5-aqppxr7TE47BLMUNCoqZmNkuo"},
{"content":{"body":"> <@michaelficarra:matrix.org> well you'll have to explain that to me more over drinks some day\n\nRemember the change about removing the extra scope inside default params? This was because V8 (!) insisted on it for consistency. Years later, V8 (different individuals) championed its removal. The only observable impact was on direct eval, namely blocking sloppy mode var leaking. These semantics only made implementations more complex.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!JtcjQkhrFPgsAWPQKp%3Amatrix.org/%24Xw68ZZv_u_NJfv_goS0DcGKXuYVb9XHdpFBJeYfXkyU\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>well you'll have to explain that to me more over drinks some day</blockquote></mx-reply>Remember the change about removing the extra scope inside default params? This was because V8 (!) insisted on it for consistency. Years later, V8 (different individuals) championed its removal. The only observable impact was on direct eval, namely blocking sloppy mode var leaking. These semantics only made implementations more complex.","m.relates_to":{"m.in_reply_to":{"event_id":"$Xw68ZZv_u_NJfv_goS0DcGKXuYVb9XHdpFBJeYfXkyU"}},"msgtype":"m.text"},"ts":1721496436736,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fDM7mO3LAETx7Hx3gsHIDB0P09TLGKtDb0yqpK6QnEI"},
{"content":{"body":"We also considered things like making private fields not accessible within direct eval, but this was also rejected for inconsistency ","format":"org.matrix.custom.html","formatted_body":"We also considered things like making private fields not accessible within direct eval, but this was also rejected for inconsistency","msgtype":"m.text"},"ts":1721496488413,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Dy0ZxEzGapt7oiYTsyNXdgb3sN0ch1uzJDB0Aj-NcSE"},
{"content":{"body":"None of this is about blocking features entirely, just about making the scoping for direct eval less fancy","msgtype":"m.text"},"ts":1721496517079,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WoThYfVWhEa9f5KO6ibCO4S3ztzqRIF8H32hpbHKLwo"},
{"content":{"body":"* We also considered things like making private fields not accessible within direct eval (if their name is defined from outside of the eval), but this was also rejected for inconsistency","m.new_content":{"body":"We also considered things like making private fields not accessible within direct eval (if their name is defined from outside of the eval), but this was also rejected for inconsistency","msgtype":"m.text"},"m.relates_to":{"event_id":"$Dy0ZxEzGapt7oiYTsyNXdgb3sN0ch1uzJDB0Aj-NcSE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721496538327,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v9ZgJrPkhcByzEIRPcAB7g8oj48_0_mN1a0AfWZCQrA"},
{"content":{"body":"I would be very happy to move in a direction where we don’t do this in the future! It would definitely simplify implementations","msgtype":"m.text"},"ts":1721496575800,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KQVWPuoEON-7izaAB06hSn-JYrdxCOQewqvtGBkl67c"}
]