[
{"content":{"body":"Note, we're collecting Trusted Type feedback on Array.isTemplateObject at https://github.com/w3c/trusted-types/issues/519 . I encourage people here to ask any relevant follow-up questions.","m.mentions":{},"msgtype":"m.text"},"ts":1716999518234,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$olehUnszToejgT7TxVqLeXxDnKje3UoYL1RWznjbejA"},
{"content":{"body":"Given the current feedback (that Realms don't matter for TT one way or the other), I plan to propose Array.isTemplateObject as a realm-independent check to minimize overall complexity, both for spec and implementation","m.mentions":{},"msgtype":"m.text"},"ts":1716999588960,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1P0ELBC6A-yVWO5F0XIFjcgeNdo4uTwyNAFezqgjAwU"},
{"content":{"body":"perhaps my imagination is lacking but I'm having trouble summoning a situation in which a realm-specific check would be important","m.mentions":{},"msgtype":"m.text"},"ts":1717001712005,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$F_sPTIbm5JH5_-J6rIz_WLRGhM0DxDgfeBQoxu1UD2M"},
{"content":{"body":" * perhaps my imagination is lacking but I'm having trouble summoning a situation in which a realm-specific check would be important for `Array.isTemplateObject()`","format":"org.matrix.custom.html","formatted_body":" * perhaps my imagination is lacking but I'm having trouble summoning a situation in which a realm-specific check would be important for <code>Array.isTemplateObject()</code>","m.mentions":{},"m.new_content":{"body":"perhaps my imagination is lacking but I'm having trouble summoning a situation in which a realm-specific check would be important for `Array.isTemplateObject()`","format":"org.matrix.custom.html","formatted_body":"perhaps my imagination is lacking but I'm having trouble summoning a situation in which a realm-specific check would be important for <code>Array.isTemplateObject()</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$F_sPTIbm5JH5_-J6rIz_WLRGhM0DxDgfeBQoxu1UD2M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1717001730348,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$iios7uzg5WBrQWQyrX8lRpfipnmXMEE2tUoSSI1z5iE"},
{"content":{"body":"i believe the goal of that request is to be able to use membranes and ensure that a template object (from the dry or the wet side, i can never remember which is which) is recognized as you expect by isTemplateObject on the other side?","m.mentions":{},"msgtype":"m.text"},"ts":1717010588067,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EE-3CB2MdJ-TX7J1Oa41xD5GKLQEN3wK9YaH1tMBNdE"},
{"content":{"body":"(personally i want a cross-realm slot check, like every other slot check, which i think is what dan means by \"realm-independent\")","m.mentions":{},"msgtype":"m.text"},"ts":1717010630623,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-s2kJpW1EUrF9A5epHugsFI3izp5oq2MEz9JJlEPD2E"},
{"content":{"body":"After the TG3 call, I'm thinking to keep the check cross-realm, but make isTemplateObject a global, rather than on Array (which was confusing anyway)","m.mentions":{},"msgtype":"m.text"},"ts":1717011305393,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GUzAXWGZsYoFUQp84r1ai5IRQ7YW_D3UYsyptsNwOEk"},
{"content":{"body":"to really get the right kind of security, compartment mechanisms will need to override this function per-compartment anyway, to make a more specific check somehow. Or, just rely on the object-blocking behavior of ShadowRealms' callable boundary.","m.mentions":{},"msgtype":"m.text"},"ts":1717011368735,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tStk-0ZpgFAXa2b6BSLdTdEc8tmv_QiLF-IGvX30afc"},
{"content":{"body":"the main motivation for the check being cross-realm is simplicity; we don't have any strong motivation from web authors","m.mentions":{},"msgtype":"m.text"},"ts":1717011396512,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$iBFWBtjDA1GHAREiz1Se_LSmXSCsM2l5ucm7_YVaLPU"},
{"content":{"body":"maybe it should go on Reflect instead of a global, since we decided that Reflect doesn't need to be only for proxy traps anymore","m.mentions":{},"msgtype":"m.text"},"ts":1717016803432,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5dLi3-AKYcqko_rPU7lVsUuUkuMwOkXPk7NPbVLEJSk"},
{"content":{"body":"I like the idea of putting it on Reflect because that's \"out of the way\". I'll include this possible alternative in the presentation. It seems less bad to have to fork Reflect than Array.","m.mentions":{},"msgtype":"m.text"},"ts":1717016853350,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yjgytiIq7sVsOwG6x2xtRiQW6tgoY70EOGRHNVlW2Kc"},
{"content":{"body":"Draft slides: https://docs.google.com/presentation/d/1PtAFnHj7OxGMVekvChntoOJ6RzAly9iTGjUThrHQD9o/edit#slide=id.p","m.mentions":{},"msgtype":"m.text"},"ts":1717018280324,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WqzHQs2PPjOoAsdThE_OZu9W0Eek0c3BFZSRIu8o3QE"},
{"content":{"body":"was there a strong anti-new-globals bloc at some point?  I may be mixing up my standards...","m.mentions":{},"msgtype":"m.text"},"ts":1717019382721,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$YsBp_kV4ol0w_zuLE6HCLbzXSqelEeMcTuT9Bj10WCE"},
{"content":{"body":"Moddable had a general resistance to growing the base ROM for embedded systems. I donâ€™t recall whether that applied specifically to the global or other primordials. I think Mark may have talked them into more primordials in the past.","m.mentions":{},"msgtype":"m.text"},"ts":1717019478775,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$v7VqIqS8NeGJXJ8tVoNHwcEXcitJSS0VrXCZK4vp9wk"},
{"content":{"body":"Their general objection may have been mitigated with some clever footwork.","m.mentions":{},"msgtype":"m.text"},"ts":1717019493283,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$srE0uz0s9QK7zn9PE-9WHg7Ls2Ttb83yJJwNpYSbjAs"},
{"content":{"body":"It would be worth asking Peter for an update on their stance.","m.mentions":{},"msgtype":"m.text"},"ts":1717019527925,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$JooDLV7QlP21r2FoZuqLuHD1g932hm4Lo8nclZhDri0"}
]