[
{"content":{"body":"Hi, I can't make it tonight as this is quite late for me. Some points regarding the captureStackTrace discussion:","m.mentions":{},"msgtype":"m.text"},"ts":1759933667293,"senderName":"Olivier Flückiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$fwXQnF2oZ8gWijCWHzdsmQOTlt-CsSUX2C2Cal4mcWs"},
{"content":{"body":"* I like the proposal giving implementers choice over accessor vs. data property very much. It reflects web reality and there are good reasons for both choices.","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>I like the proposal giving implementers choice over accessor vs. data property very much. It reflects web reality and there are good reasons for both choices.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1759933688219,"senderName":"Olivier Flückiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$EXW0VMBlNZk-qrLo879a4EllLs9K--M6Q4rtbWSKFLw"},
{"content":{"body":"* We can change our setter to not write to the private field in V8. That should not be a problem.","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>We can change our setter to not write to the private field in V8. That should not be a problem.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1759933730021,"senderName":"Olivier Flückiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$z3gNugEZV2_vBXs8peq2U9aUBwRXTq-wQM4700CKeRQ"},
{"content":{"body":"* I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal, such that normal Errors and custom error objects end up behaving the same? In particular that one already did solve the problem with the setter.","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal, such that normal Errors and custom error objects end up behaving the same? In particular that one already did solve the problem with the setter.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1759934106280,"senderName":"Olivier Flückiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$98av3Z8_oxd0hdQXXvxpSYtge9262uRcuIc91yTnCb0"},
{"content":{"body":"* - I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal.\nUpdate: We can't because you can call `captureStackTrace` with any object and proto. But we should at least make sure they are close.","format":"org.matrix.custom.html","formatted_body":"* <ul>\n<li>I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal.<br>Update: We can't because you can call <code>captureStackTrace</code> with any object and proto. But we should at least make sure they are close.</li>\n</ul>\n","m.mentions":{},"m.new_content":{"body":"- I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal.\nUpdate: We can't because you can call `captureStackTrace` with any object and proto. But we should at least make sure they are close.","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>I was pointed at https://github.com/tc39/proposal-error-stack-accessor and if we shouldn't rather follow that proposal.<br>Update: We can't because you can call <code>captureStackTrace</code> with any object and proto. But we should at least make sure they are close.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$98av3Z8_oxd0hdQXXvxpSYtge9262uRcuIc91yTnCb0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1759934361904,"senderName":"Olivier Flückiger","senderId":"@olivf.o1o.ch:immer.chat","id":"$naaZZetx6nwCwlgybps02Rijsx2bWVQyWylMwuoQEHA"},
{"content":{"body":"Right, they are aligned in the behaviors of the setter. And a data property is explainable as the setter having been invoked. ","msgtype":"m.text"},"ts":1759942765785,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$VgHRulDaXPxeZb5-D4VhmzzSxrWXeryf8-VpufLe0dc"}
]