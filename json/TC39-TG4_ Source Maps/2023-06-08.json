[
{"content":{"body":"Yeah I'm having second thoughts on declaring size/perf \"for later\". Maybe we should consider that a fourth line of research.","msgtype":"m.text"},"ts":1686208155303,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1P6R7URg7S2Uert2xGep70pA7SOgQx9pogR4wiDukUs"},
{"content":{"body":"but, there's an effort on Error.stack in TC39 (which seems stalled)... if we want to work on that in this group, we should recruit the participation of those working on that project.","msgtype":"m.text"},"ts":1686208307347,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$r02Nm7qJZnapZfJEXEXoffwD1315eJx2ft3Dqz_FEig"},
{"content":{"body":"I think defining Error.stack is an important project but I don't think we'll be capable of fixing everything at once","msgtype":"m.text"},"ts":1686208328765,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$R5fQ-M9HzlvFwNaGPC7HDg67q2rx2KO9zX1qH0-ApZU"},
{"content":{"body":"Maybe we should just try to work with that existing project in TG1? We could set up a chat room and everything. I'm sure they would like help.","msgtype":"m.text"},"ts":1686208414350,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$pPwF6jCiTsE-tx2Wu1TAwZtgYXXZIpOcsrwCzXbhsYA"},
{"content":{"body":"(also maybe we should invite Marvin in particular to hang out with us in these places)","msgtype":"m.text"},"ts":1686208489420,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2yMYqZDxwMkzpP0JIGo2n6rPVbFzINxg0xppzuOOgZ8"},
{"content":{"body":"One thing that might be helpful (if not already done) could be to list the use cases or capabilities that we want to prioritize. \n\nFor example, here's a few that I know about:\n* Show a call stack with original function names and file/row/col\n* Allow debuggers to set breakpoints in original (pre-traspiled/un-minified) sources\n* Allow debuggers to inspect local variables using original names.\n* Address package maintainer concerns that are leading them to turn off sourcemaps.\n* Make it easier for maintainers to create sourcemaps that are valid.\n\nAnd so on. Does this list exist already? If not then I could help build one if folks are interested.\n\nIt may be helpful to have a list of things that users want to do, to prioritize tossed things, to understand what's blocking then from doing those things today, and then to figure out what needs to change to unblock the top priorities.\n\nAlso not saying that TG4 can solve it all, only that it might be helpful to have a high level understanding for what the ecosystem overall needs to do, and then we can figure out how we can best help achieve those goals and how we can recruit others to do their parts.\n\nThe alternative I guess is just to focus on the file format as the necessary first step for everything else, but I'd worry a bit that we may not know yet what are the format changes needed to unblock the most important use cases.","format":"org.matrix.custom.html","formatted_body":"<p>One thing that might be helpful (if not already done) could be to list the use cases or capabilities that we want to prioritize.</p>\n<p>For example, here's a few that I know about:</p>\n<ul>\n<li>Show a call stack with original function names and file/row/col</li>\n<li>Allow debuggers to set breakpoints in original (pre-traspiled/un-minified) sources</li>\n<li>Allow debuggers to inspect local variables using original names.</li>\n<li>Address package maintainer concerns that are leading them to turn off sourcemaps.</li>\n<li>Make it easier for maintainers to create sourcemaps that are valid.</li>\n</ul>\n<p>And so on. Does this list exist already? If not then I could help build one if folks are interested.</p>\n<p>It may be helpful to have a list of things that users want to do, to prioritize tossed things, to understand what's blocking then from doing those things today, and then to figure out what needs to change to unblock the top priorities.</p>\n<p>Also not saying that TG4 can solve it all, only that it might be helpful to have a high level understanding for what the ecosystem overall needs to do, and then we can figure out how we can best help achieve those goals and how we can recruit others to do their parts.</p>\n<p>The alternative I guess is just to focus on the file format as the necessary first step for everything else, but I'd worry a bit that we may not know yet what are the format changes needed to unblock the most important use cases.</p>","msgtype":"m.text"},"ts":1686210074441,"senderName":"justingrant","senderId":"@justingrant:matrix.org","id":"$RcbY94acYIAFUzRzzzpLcdiKjeH2zj9uLii9MML9kMs"},
{"content":{"body":"Yeah this list sounds great to start in an issue","msgtype":"m.text"},"ts":1686210111265,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RK58eWdWFyNoX8eH14x2owqnTkqV63m7tl6dR56hz6U"},
{"content":{"body":"tbh I'm pretty confident that \"consolidating a strong definition for the web reality of source maps\" will be a useful step no matter what comes next; I think this mostly has implications for the other projects, e.g., about improving mappings for names.","msgtype":"m.text"},"ts":1686210178239,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WlEqksBoQ8RL6WbeVhYipooyLegYQWLR24Loh2dOcv4"},
{"content":{"body":"In case anyone wants to play around with different behaviors, I prepared a playground with the most widely used tools in the JS ecosystem that can be used to do so - https://github.com/kamilogorek/sourcemaps-playground","msgtype":"m.text"},"ts":1686218674079,"senderName":"Kamil Ogórek","senderId":"@kamilogorek:matrix.org","id":"$NrZdgbY4x9WWWPsFfu9cnuqJ5APRQ_HSUvANp1jk664"},
{"content":{"body":"It's interesting to see that _all_ tools produce different code. All of them.\n\n```js\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/webpack.bundle.js\n(()=>{\"use strict\";(function(n,o){!function(n,o){n(o)}(n,\"boop\")})((function(n){throw new Error(n)}))})();\n//# sourceMappingURL=webpack.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/rollup.bundle.js\n!function(){\"use strict\";var n;n=function(n){throw new Error(n)},function(n,o){!function(n,o){n(o)}(n,o)}(n,\"boop\")}();\n//# sourceMappingURL=rollup.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/vite.bundle.js\n(function(){\"use strict\";function t(n,o){n(o)}function c(n,o){t(n,o)}function f(n,o){c(n,o)}f(function(o){throw new Error(o)},\"boop\")})();\n//# sourceMappingURL=vite.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/esbuild.bundle.js\n(()=>{function t(r,o){r(o)}function n(r,o){t(r,o)}function f(r,o){n(r,o)}f(function(o){throw new Error(o)},\"boop\");})();\n//# sourceMappingURL=esbuild.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/rspack.bundle.js\n!function(){var e={62:function(e,r,t){\"use strict\";function n(e,r){e(r)}Object.defineProperty(r,\"__esModule\",{value:!0}),Object.defineProperty(r,\"bar\",{enumerable:!0,get:function(){return n}})},447:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),Object.defineProperty(r,\"foo\",{enumerable:!0,get:function(){return o}});var n=t(\"62\");function o(e,r){(0,n.bar)(e,r)}},151:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n,o,u=t(\"447\");n=function(e){throw Error(e)},o=\"boop\",(0,u.foo)(n,o)}},r={};!function t(n){var o=r[n];if(void 0!==o)return o.exports;var u=r[n]={exports:{}};return e[n](u,u.exports,t),u.exports}(\"151\")}();\n//# sourceMappingURL=rspack.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/parcel.index.js\n(function(o){throw Error(o)})(\"boop\");\n//# sourceMappingURL=parcel.index.js.map\n```","format":"org.matrix.custom.html","formatted_body":"<p>It's interesting to see that <em>all</em> tools produce different code. All of them.</p>\n<pre><code class=\"language-js\">➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/webpack.bundle.js\n(()=&gt;{\"use strict\";(function(n,o){!function(n,o){n(o)}(n,\"boop\")})((function(n){throw new Error(n)}))})();\n//# sourceMappingURL=webpack.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/rollup.bundle.js\n!function(){\"use strict\";var n;n=function(n){throw new Error(n)},function(n,o){!function(n,o){n(o)}(n,o)}(n,\"boop\")}();\n//# sourceMappingURL=rollup.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/vite.bundle.js\n(function(){\"use strict\";function t(n,o){n(o)}function c(n,o){t(n,o)}function f(n,o){c(n,o)}f(function(o){throw new Error(o)},\"boop\")})();\n//# sourceMappingURL=vite.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/esbuild.bundle.js\n(()=&gt;{function t(r,o){r(o)}function n(r,o){t(r,o)}function f(r,o){n(r,o)}f(function(o){throw new Error(o)},\"boop\");})();\n//# sourceMappingURL=esbuild.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/rspack.bundle.js\n!function(){var e={62:function(e,r,t){\"use strict\";function n(e,r){e(r)}Object.defineProperty(r,\"__esModule\",{value:!0}),Object.defineProperty(r,\"bar\",{enumerable:!0,get:function(){return n}})},447:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),Object.defineProperty(r,\"foo\",{enumerable:!0,get:function(){return o}});var n=t(\"62\");function o(e,r){(0,n.bar)(e,r)}},151:function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});var n,o,u=t(\"447\");n=function(e){throw Error(e)},o=\"boop\",(0,u.foo)(n,o)}},r={};!function t(n){var o=r[n];if(void 0!==o)return o.exports;var u=r[n]={exports:{}};return e[n](u,u.exports,t),u.exports}(\"151\")}();\n//# sourceMappingURL=rspack.bundle.js.map\n➜  ~/Projects/sourcemaps/playground git:(master) ✗ cat dist/parcel.index.js\n(function(o){throw Error(o)})(\"boop\");\n//# sourceMappingURL=parcel.index.js.map\n</code></pre>\n","msgtype":"m.text"},"ts":1686218723399,"senderName":"Kamil Ogórek","senderId":"@kamilogorek:matrix.org","id":"$ygnzJu-K1cfsEd5dfBwRu_43lS0Y3ioN4W0eY9X3kIY"},
{"content":{"body":"I also posted about few obvious differences, found just with this initial base test here -https://twitter.com/kamilogorek/status/1666754385660235781","msgtype":"m.text"},"ts":1686220637846,"senderName":"Kamil Ogórek","senderId":"@kamilogorek:matrix.org","id":"$vG67ipAMD4UUlSfLZD5bxk3_mi6hEhKUE4qjWCVGe0c"},
{"content":{"body":" * I also posted about few obvious differences, found just with this initial base test here - https://twitter.com/kamilogorek/status/1666754385660235781","m.new_content":{"body":"I also posted about few obvious differences, found just with this initial base test here - https://twitter.com/kamilogorek/status/1666754385660235781","msgtype":"m.text"},"m.relates_to":{"event_id":"$vG67ipAMD4UUlSfLZD5bxk3_mi6hEhKUE4qjWCVGe0c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1686220645898,"senderName":"Kamil Ogórek","senderId":"@kamilogorek:matrix.org","id":"$EwrRFtC61GjezYJ3kiMnF8G6k2A5RQxw0mkEHq78mMM"}
]