[
{"content":{"body":"Hey folks. I got a bit of internal feedback on the spec and was hoping to bring some of the points to the larger group:\n\n1. Under https://tc39.es/ecma426/#mappings-structure we have the section that begins with \"To decode a base64 VLQ...\" and the defined algorithm has step 1 as returning null but other failure cases throwing an error. This seems inconsistent.\n2. On the same algorithm, there was also feedback that it might be cleaner to switch to return codes instead of number/null/throwing: Paraphrasing: \"It might make more sense if the decoder returns a code and appends numbers into an output vector. Then it simply becomes 'return' without writing any values to the vector vs. error conditions that throw.\n3. We mention -2^31 - 2^31-1 in the spec and use those values but then we say \"If value is 0 and sign is -1, return -2147483648\" - why not keep the -2^31 style nomenclature there and forego the note?","format":"org.matrix.custom.html","formatted_body":"<p>Hey folks. I got a bit of internal feedback on the spec and was hoping to bring some of the points to the larger group:</p>\n<ol>\n<li>Under https://tc39.es/ecma426/#mappings-structure we have the section that begins with \"To decode a base64 VLQ...\" and the defined algorithm has step 1 as returning null but other failure cases throwing an error. This seems inconsistent.</li>\n<li>On the same algorithm, there was also feedback that it might be cleaner to switch to return codes instead of number/null/throwing: Paraphrasing: \"It might make more sense if the decoder returns a code and appends numbers into an output vector. Then it simply becomes 'return' without writing any values to the vector vs. error conditions that throw.</li>\n<li>We mention -2^31 - 2^31-1 in the spec and use those values but then we say \"If value is 0 and sign is -1, return -2147483648\" - why not keep the -2^31 style nomenclature there and forego the note?</li>\n</ol>\n","m.mentions":{},"msgtype":"m.text"},"ts":1736339618150,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$F-mPFKUr4vi33DueeZv-0cn3AlznfOh6fh5kcqb3vZk"},
{"content":{"body":"Meeting starting now! https://bloomberg.zoom.us/j/97901112561?pwd=TlNyeW8ycGlaMk9BTmUxMHZrcE11dz09","m.mentions":{},"msgtype":"m.text"},"ts":1736355650282,"senderName":"jkup","senderId":"@jkup:matrix.org","id":"$aViTIPBRTLKD7z20BtITNuNQIxrCHDh4CXG0RF2fZio"},
{"content":{"body":"but 2^31 is 0","m.mentions":{},"msgtype":"m.text"},"ts":1736358835356,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TcRTJCo-lN1yht0zjD8m81Hsp6DAMh_EACGf7BBk0xw"}
]