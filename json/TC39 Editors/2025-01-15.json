[
{"content":{"body":"explicitly make them structural would let downstream specs rely on records being structural, which we don't want them to do","m.mentions":{},"msgtype":"m.text"},"ts":1736900331637,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XyMeinwLHJN-UVXbcm_DEiO_tW5kRP2X-oAF76gOxpU"},
{"content":{"body":"they could have an algorithm which takes either a Foo Record or a Bar Record, possibly where those have the same fields, and then say \"If _arg_ is a Foo Record, then...\"","format":"org.matrix.custom.html","formatted_body":"they could have an algorithm which takes either a Foo Record or a Bar Record, possibly where those have the same fields, and then say \"If <em>arg</em> is a Foo Record, then...\"","m.mentions":{"user_ids":["@jmdyck:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$3z1N-6wIMprVwYHIALQgfVglhxtBAbyXBPj3Kv4h65Q"}},"msgtype":"m.text"},"ts":1736900409793,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$E7wLrcj0pWG91S1frdCvUPe4ho4zC5Q07PxXaM06EAU"},
{"content":{"body":"tx","m.mentions":{},"msgtype":"m.text"},"ts":1736904319405,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$wFW6Q5NFaJEoRiS0GTBFNVWt0YV-0AB2Pyo-KsBhpf4"},
{"content":{"body":"they currently can rely on them being either, and we can't prevent one without enshrining the other","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$XyMeinwLHJN-UVXbcm_DEiO_tW5kRP2X-oAF76gOxpU"}},"msgtype":"m.text"},"ts":1736906585861,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ene4AesiSYMhoD7gULUQ6AzfOXrwv-SZH0GvTFuKBSc"},
{"content":{"body":"we can't prevent anything","m.mentions":{},"msgtype":"m.text"},"ts":1736906626412,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1_N5gQEuwqN3uMC7pwhrA5YA1tq7Ke8ePbuEuFDus9E"},
{"content":{"body":"they're just documents","m.mentions":{},"msgtype":"m.text"},"ts":1736906631955,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rpvXd-2X3X2DJXkllPRvUI0Q-tOE4Y0EliBOKvwwGS8"},
{"content":{"body":"you can put whatever words you want in them","m.mentions":{},"msgtype":"m.text"},"ts":1736906636152,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CaphEu84hT6ojWsjth1_m2Lm3y-PsFbCxfDtWDzlhDQ"},
{"content":{"body":"you just said \"would let\", which is the same as \"would prevent\"","m.mentions":{},"msgtype":"m.text"},"ts":1736906671518,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$10qPOTAImhxgXbvn753olNiBfRZccPqobfahI0IOugw"},
{"content":{"body":"if we can let, we can prevent :-)","m.mentions":{},"msgtype":"m.text"},"ts":1736906676304,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oMIqokr92n-qIMZaEgQmitzaQRbws3EHU74XinDEKjs"},
{"content":{"body":"by \"would let\" I mean to say \"would imply it's ok\"","m.mentions":{},"msgtype":"m.text"},"ts":1736906694365,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$amjXxjynqPag8MYVKzAt4GjyylB2KL_86s8IHI8l-Zs"},
{"content":{"body":"nothing currently implies it is either OK or forbidden because it simply does not come up at all","m.mentions":{},"msgtype":"m.text"},"ts":1736906710672,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7hDa0-J570u3LNhfBLffwvcizjAZvlLgFkd73O5WZOA"},
{"content":{"body":"I don't want to start implying it is OK to do either","m.mentions":{},"msgtype":"m.text"},"ts":1736906718022,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8NXnfC_VL1u1eVocmW4Gb4ok7mzN2v8Jwd72eem9cDk"},
{"content":{"body":"and I don't want to write a rule in our spec which says \"downstream specs should not do either of these\" because that's a silly thing to put in our spec","m.mentions":{},"msgtype":"m.text"},"ts":1736906749306,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$R_l6mBTGHcwaNKEL_AmgTUhma3EL-kNR8KYOqqV3d4U"},
{"content":{"body":"though it could reasonably be written down in the editorial conventions document Michael Ficarra keeps threatening to write","format":"org.matrix.custom.html","formatted_body":"though it could reasonably be written down in the editorial conventions document <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> keeps threatening to write","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1736906764189,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$R9bDgbk1KgIWff3ZB31dEV7Czsh2pXHwXjFUDAWKv28"},
{"content":{"body":"a document distinct from https://github.com/tc39/ecma262/wiki/Editorial-Conventions ?","m.mentions":{},"msgtype":"m.text"},"ts":1736908474072,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$iKd5MsryOsTd_75XQxzhjV3geJ3rqRGhk2BZA86KZVg"},
{"content":{"body":"nope that one I just forgot he'd made it already","m.mentions":{},"msgtype":"m.text"},"ts":1736912085691,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xoFjsuK9P8Xq2frPTpLHgLwQf-1E8j5_5OUP6akjKEU"},
{"content":{"body":"the document can use some cleanup and further explanation, but it's actually fairly complete IMO","msgtype":"m.text"},"ts":1736948431059,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$u0gkyNOmhgdc_grnX3HHD3Tg_ED88zEk3kJCt1KFl4o"},
{"content":{"body":"gotta get it out of the wiki","m.mentions":{},"msgtype":"m.text"},"ts":1736956004305,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$E1JNs_sDpbMKjEOwqa7nKIQ5B2W8lZpbhE88aa-m3pk"},
{"content":{"body":"i also forgot the wiki even exists","m.mentions":{},"msgtype":"m.text"},"ts":1736956009989,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yyvcFioOhOuLXiPvYuJ9WQMj5DTABQqU7CLkF5DiSUw"},
{"content":{"body":"that's what assertions already are (that's not the only thing they are, ofc)","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$R_l6mBTGHcwaNKEL_AmgTUhma3EL-kNR8KYOqqV3d4U"}},"msgtype":"m.text"},"ts":1736959889195,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1-9vE8M1kfSaU5Yjeb4ElGD5qsdP0sB24GOqvvycfkE"},
{"content":{"body":"they sometimes provide that function but if that was the only function they provided we would not have them","m.mentions":{},"msgtype":"m.text"},"ts":1736959929844,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N2hxYtlLjWyCSVGQ1P0lud-_nbblRtaH5lQyr4i7e2Q"},
{"content":{"body":"we don't add assertions just to constrain other specs","m.mentions":{},"msgtype":"m.text"},"ts":1736959954645,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$02_OLQCZqt4FPazqEM8UQLtuUT4QEGwCJAxXm9HxjzA"},
{"content":{"body":"we add host hooks for that purpose","m.mentions":{},"msgtype":"m.text"},"ts":1736963996244,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BhhgxG0oZqdbXTZt0eyuh-pHVLEteTo67bCmZ_Ekt0I"},
{"content":{"body":"i'm really surprised you don't think there's intrinsic value in setting boundaries for implementors of the spec","m.mentions":{},"msgtype":"m.text"},"ts":1736964023790,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$POfY8BFZgYWVvE5CeKlMKi_mSAkcN9nutlcfmjR1vYI"},
{"content":{"body":"I don't know how you got that from what I said","m.mentions":{},"msgtype":"m.text"},"ts":1736964217592,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bQkDvlRa3FCjARxMsZVuA7PWAWW4uB4Q9qeOwusATxw"},
{"content":{"body":"we set boundaries for implementors of the spec all the time. that's basically all the spec is. but asserts are not how we do that. when we want to constrain the normative behavior available to a downstream specification we write down, normatively, what the constraints are. see, for example, the constraints in HostEnqueuePromiseJob: https://tc39.es/ecma262/multipage/executable-code-and-execution-contexts.html#sec-hostenqueuepromisejob","m.mentions":{},"msgtype":"m.text"},"ts":1736964283030,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$710WhvpHyhLV4bWVncl1Zslhjug8ZCCsYETEHC9jJD4"},
{"content":{"body":"but \"don't treat records as having either structural or nominal type\" is not a boundary for implementors. it's an editorial convention we would prefer other spec authors who are re-using our specification machinery to follow. it has no implications for the world.","m.mentions":{},"msgtype":"m.text"},"ts":1736964350843,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GxBmlJZpnkVKg256Kh1QqFgaVA7jlDX2ZK814NmLsnM"},
{"content":{"body":"we have no control over how people write other specifications. we can provide guidance. we can set things up in our spec so that it is easier or harder to re-use our spec machinery in particular ways. we can place restrictions on what _normative_ behaviors are allowed in order to qualify as a valid implementation of our spec. but we can't tell people what words they're allowed to write down.","format":"org.matrix.custom.html","formatted_body":"we have no control over how people write other specifications. we can provide guidance. we can set things up in our spec so that it is easier or harder to re-use our spec machinery in particular ways. we can place restrictions on what <em>normative</em> behaviors are allowed in order to qualify as a valid implementation of our spec. but we can't tell people what words they're allowed to write down.","m.mentions":{},"msgtype":"m.text"},"ts":1736964504409,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$leGeS_VVuP1Pp8MjeIjxpDGVpqQzxW6x0k6VEkmYNEU"},
{"content":{"body":"(incidentally, the spec is very explicit that asserts are just for clarification, like any other comment. https://tc39.es/ecma262/multipage/notational-conventions.html#assert )","m.mentions":{},"msgtype":"m.text"},"ts":1736964698957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$K-TM32ioSdx-78huXxM8zPMAsxIuZcSJmmOrie4r1T4"},
{"content":{"body":"gotcha, that makes sense","m.mentions":{},"msgtype":"m.text"},"ts":1736964773033,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$nzKaiezj9cpWk-Tq6kTvZrqxkVgf9wnhnJW3jIrO8-M"},
{"content":{"body":"to reiterate i don't really care if records are structural or nominal or neither/both. the thing that seems bizarre to me is that an empty record is technically a property descriptor","m.mentions":{},"msgtype":"m.text"},"ts":1736964811675,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$4I4lDlLVRSucHKuqQDTvwYszcFtCpaThJ1vglSqNEIw"},
{"content":{"body":"my advice is to just not think about it","m.mentions":{},"msgtype":"m.text"},"ts":1736964956968,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Sru4SFsuFELEKz7hgzB5u5z0nHYXdQxxgSLoeQCCohA"}
]