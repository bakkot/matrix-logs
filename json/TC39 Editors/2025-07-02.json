[
{"content":{"body":"FYI a student will be opening some PRs and issues related to https://github.com/tontonialberto/ecma262-spec-inconsistencies","m.mentions":{},"msgtype":"m.text"},"ts":1751451603894,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$5T9GzrG1skuBJc3yIE077sO61Z9PJYmXhIjIKcV2qmQ"},
{"content":{"body":"They don't seem to be aware that there are semantically different uses for [[Foo]] notation.","m.mentions":{},"msgtype":"m.text"},"ts":1751459084464,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$S70rLMCkuSdUOotVoTBE_JuuvRycKqhDqxWIV_2Ja5w"},
{"content":{"body":"or that objects don't have 'fields'.","m.mentions":{},"msgtype":"m.text"},"ts":1751459961066,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$2ZlhZaIbwXPQ-p6-noH1MZa2YVjpMl5ug0YxZQ-BPS8"},
{"content":{"body":"yes I spoke to him about that already","m.mentions":{},"msgtype":"m.text"},"ts":1751460725781,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3LgBRv2EHxu9dfEuRX7NY_wTuyiJlWYmPO324uSuk7M"},
{"content":{"body":"he won't be opening a PR for that","m.mentions":{},"msgtype":"m.text"},"ts":1751460736440,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$mbsYgTrOjm_AtC4Ls279qH7A9vOek8YoVkDSginSm8k"},
{"content":{"body":"the if/else stuff is valid, but he's missing some variations.","m.mentions":{},"msgtype":"m.text"},"ts":1751460795430,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$av0ronfJDFaTCMekkXveuhIQlrwf_XTWyaCpPQuDmuU"},
{"content":{"body":"those are the only ones he's interested in","m.mentions":{},"msgtype":"m.text"},"ts":1751461102548,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$H0ybKBgAfqUzOGUax6PANy7COpkKIX7cdixI04-H2tY"},
{"content":{"body":"I also got a question today about what the repeat-until step's semantics should be https://tc39.es/ecma262/multipage/ecmascript-data-types-and-values.html#sec-bigintbitwiseop","m.mentions":{},"msgtype":"m.text"},"ts":1751461131579,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$d7AMtIibETcELitR9nu8bWGy0TNVnPcMiibeXrbZj1o"},
{"content":{"body":"does it imply that the steps should be executed at least once?","m.mentions":{},"msgtype":"m.text"},"ts":1751461156575,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$f1LOr17BFaxDCtLdPAhKgrnYz6cFGdp_TD4tMpvlwT0"},
{"content":{"body":"like a do-while with a negated condition","m.mentions":{},"msgtype":"m.text"},"ts":1751461187305,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$_NhqXsJ5LkmfnkKz29tZ_DijKaJIKcB83A_IHzvUKvg"},
{"content":{"body":"by this, I mean ones that have the consequent/alternative on the same line as the if/else/else-if","format":"org.matrix.custom.html","formatted_body":"by this, I mean ones that have the consequent/alternative on the same line as the if/else/else-if","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$H0ybKBgAfqUzOGUax6PANy7COpkKIX7cdixI04-H2tY"}},"msgtype":"m.text"},"ts":1751461246084,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WX02nt4Va23t4rOxCfQlR7odC9RG0x3N68QG2_cHVt0"},
{"content":{"body":"CreateIntrinsics step 2 is indeed problematic, but I don't think it can be broken into a series of more-parseable steps.","m.mentions":{},"msgtype":"m.text"},"ts":1751461298845,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$MPXOPss8Tl1M11vdOA004neV7kzf3ybpSnOUoKmfiaE"},
{"content":{"body":"yeah I don't think it needs to be broken down, but its phrasing can probably be modernised","m.mentions":{},"msgtype":"m.text"},"ts":1751461335118,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$UsRW5EcJeasgJWGq8JZUVceNO9N6Z1TQBXLScQLaoKI"},
{"content":{"body":"and probably it would be better to explicitly loop over table rows","m.mentions":{},"msgtype":"m.text"},"ts":1751461434456,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DR6cxZcO4fR7OwxQr2u_phe1p_8mkVlJSTkI-3zi-bs"},
{"content":{"body":"My inclination is that step 2 should become its own section, where you can at least let things breathe in separate paragraphs, lists.","m.mentions":{},"msgtype":"m.text"},"ts":1751461452096,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$4BDF5zxk58sPi52jYvqHzrlJg2YThOj8z1efOZIZl1g"},
{"content":{"body":"once he opens the issue about it, we can dump our ideas in there and I'll label it as \"editor call\"","m.mentions":{},"msgtype":"m.text"},"ts":1751461534850,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$K5OtqJCG01lZnPyMKa9Cyne5bxmlEPcKwrqSfUsVYXE"},
{"content":{"body":"I think he was hoping that our changes to that step could get esmeta to automatically understand it, but I don't see that happening","m.mentions":{},"msgtype":"m.text"},"ts":1751461555123,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$WWEBTc1-H_1byQddH2K0WQIDyzALmbCcsWqjJTz5ZGc"},
{"content":{"body":"The thing about explicitly looping over table rows is you can't make a single pass over the table and completely create an object at each iteration, because there are cycles in the references.","m.mentions":{},"msgtype":"m.text"},"ts":1751461609434,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$x6qpnEeXM4kl7UCW84C_FChDb5fgi35Mo43pgzEwPkM"},
{"content":{"body":"ah, right","m.mentions":{},"msgtype":"m.text"},"ts":1751461634172,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$XwHgUbJPyKySaJrW6PoATwp2_AfVy1t9dZnzpCeJxr8"},
{"content":{"body":"you'd have to topo-sort the table, which is... not great if you want to peruse the table manually","m.mentions":{},"msgtype":"m.text"},"ts":1751461659870,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Opu4WIetDx6xCVDQ25G53MtoxTFo3JwJDQUQkT5KecU"},
{"content":{"body":"You could conceivably do 2 passes, one pass to partially create the objects (without any references), then another pass to add the references (properties + [[Prototype]]).  Then you wouldn't need a topo-sort. However, the spec says that built-in functions are created with CreateBuiltinFunction, which takes a _prototype_ arg. So if you want to respect that, you have to do a topo-sort on [[Prototype]].","format":"org.matrix.custom.html","formatted_body":"You could conceivably do 2 passes, one pass to partially create the objects (without any references), then another pass to add the references (properties + [[Prototype]]).  Then you wouldn't need a topo-sort. However, the spec says that built-in functions are created with CreateBuiltinFunction, which takes a <em>prototype</em> arg. So if you want to respect that, you have to do a topo-sort on [[Prototype]].","m.mentions":{},"msgtype":"m.text"},"ts":1751462895123,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$bpDH_0B7NIZO6jipKWdnnVqqOGLbK4jYUVOCg_2qwwg"},
{"content":{"body":"The table wouldn't have to be topo-sorted in the source, CreateIntrinsics can just say to sort it, which is basically what it does now.","m.mentions":{},"msgtype":"m.text"},"ts":1751462953041,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_AePU7P9Nd-E1SRBMrrbIefEj4y1rrbjmfuPjVA8E_o"},
{"content":{"body":"\"The creation of the intrinsics and their properties must be ordered to avoid any dependencies upon objects that have not yet been created.\"","m.mentions":{},"msgtype":"m.text"},"ts":1751462995846,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$h-69BEB2SxC4k22MytC4EnZnDO9Lc8u3f16CIhR3gFg"},
{"content":{"body":"However, the implications of that sentence aren't obvious.","m.mentions":{},"msgtype":"m.text"},"ts":1751463025254,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$s1Aq5wSIJvrpBCssMGIu9UKffUjcGoTrPhdm1me3KMA"},
{"content":{"body":"But even if that part of the algorithm were made more explicit, esmeta would probably still need one-off stuff to parse it.","m.mentions":{},"msgtype":"m.text"},"ts":1751463533485,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$x4q7jLj-S-dDPaXhS6JvfcOdFXvg2TFtdKpJxR_0bZc"}
]