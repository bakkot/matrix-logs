[
{"content":{"body":"didn't we talk about this at some length?","m.mentions":{},"msgtype":"m.text"},"ts":1747268087887,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MucyZBmtzTkalqy8z5CFwR23hDKgOS4WM84oOL9zWGc"},
{"content":{"body":"returning NormalCompletion is basically saying this is the \"fall off the end of the function body without hitting a return\" case","m.mentions":{},"msgtype":"m.text"},"ts":1747268164738,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ulH53bxym3DohvOvao1xuaOOMye5T0lZb7AZEnS9UGk"},
{"content":{"body":"returning ReturnCompletion is basically ending with an explicit `return`","format":"org.matrix.custom.html","formatted_body":"returning ReturnCompletion is basically ending with an explicit <code>return</code>","m.mentions":{},"msgtype":"m.text"},"ts":1747268177647,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kB115vgZIrpt-Yi_OlYYJiYz3h5G68IvlbmicHn15Hw"},
{"content":{"body":"the latter is clearer","m.mentions":{},"msgtype":"m.text"},"ts":1747268184915,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kDTqik8H3u0cJFosXNfwvhmFb1YPKB4aGxpbwP03vME"},
{"content":{"body":"the only reason we even support the NormalCompletion case in the machinery is to deal with implicit returns in syntactic generators, so it's weird to rely on it for non-syntactic generators which do not have implicit returns","m.mentions":{},"msgtype":"m.text"},"ts":1747268257613,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mbFm_Xji1N4wJEC93D4Zz8BOX3Pe01Yu2btxrTFsTvU"},
{"content":{"body":"3457 changed one `ReturnCompletion(*undefined*)` to `NormalCompletion(~unused~)`","format":"org.matrix.custom.html","formatted_body":"3457 changed one <code>ReturnCompletion(*undefined*)</code> to <code>NormalCompletion(~unused~)</code>","m.mentions":{},"msgtype":"m.text"},"ts":1747268307752,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$YYwGG-ED77eZW7qx0zahw4fUf65I014VbOR4fJdghrE"},
{"content":{"body":"that's not inside of an AC though","m.mentions":{},"msgtype":"m.text"},"ts":1747268359297,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6bF2ZUNCsX7aw5RZKJF5DCm6GS_2isvb8YlqHneiOxY"},
{"content":{"body":"I guess it is fair to say that we could have built-in generators match non-generators by never returning a return completion","m.mentions":{},"msgtype":"m.text"},"ts":1747268467798,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QgK4ls0xW6RZfhFn3P2wFR0oW6VIjFxfAxX79V3ZoqQ"},
{"content":{"body":"but the machinery which consumes those completions is pretty different so I'm not sure that symmetry makes sense","m.mentions":{},"msgtype":"m.text"},"ts":1747268502696,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oCtRMKOZPIG8c1lZ8T0Z86-cFjVPQnjj8bAF3Slh4kc"},
{"content":{"body":"in particular, the machinery which consumes completions for built-in functions (https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-built-in-function-objects-call-thisargument-argumentslist) is not the same as the machinery which consumes completions for ES functions (https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-ecmascript-function-objects-call-thisargument-argumentslist), whereas for generators it's the same machinery in either case (https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generatorstart)","m.mentions":{},"msgtype":"m.text"},"ts":1747268687166,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dwk9QMr9tIAPQD1HMYeoMAyvdRSJceclts-SZKQQnSs"}
]