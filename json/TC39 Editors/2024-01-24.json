[
{"content":{"body":"how would this have even happened? https://github.com/tc39/ecma262/issues/3267","m.mentions":{},"msgtype":"m.text"},"ts":1706123749888,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$leOgAe9i81XMnrHfIi96dADdRDpw2w7R7RnRkRzAXXE"},
{"content":{"body":"it's not like a column got cut off because of page width","m.mentions":{},"msgtype":"m.text"},"ts":1706123764859,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2mNdrSQChi4vn93gstGEoIGFXeMds-79aqV35B_WhEI"},
{"content":{"body":"oh i suppose the table bled across the page break, so Allen manually broke it up and missed a row","m.mentions":{},"msgtype":"m.text"},"ts":1706123799119,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$t7xYtVMrKyMTJokEi1EW--CWkDNCIYsNC8l2T-RvQhE"},
{"content":{"body":"that or a bug in the preview of paged.js vs the print-to-pdf function in the browser","m.mentions":{},"msgtype":"m.text"},"ts":1706123868277,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v6z8MHyccmxVTw-Dj3b9fWQ9D5HKdv2cMo7-aMNpnRY"},
{"content":{"body":"I know this because literally yesterday I had a printed book show up at my door which I made with paged.js which was missing lines of text at the bottom of a couple pages and it turned out to be because those lines were present in paged.js's preview but not in the PDF generated by doing print-to-pdf from that page","m.mentions":{},"msgtype":"m.text"},"ts":1706123910831,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-7-VAWyzaaBJNTr_lAKFGPPBIx1_FV1J3MD7dSEOgX4"},
{"content":{"body":"ha","m.mentions":{},"msgtype":"m.text"},"ts":1706123923660,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$o45ZBtSg0ef2rskqFl6mJ3tRH7voIKBmth8KScmYu2A"},
{"content":{"body":"i mean, sorry about your misprinted book","m.mentions":{},"msgtype":"m.text"},"ts":1706123929544,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hUpjybMDx7d9R6LM_YTkyEYKBVrNT660o1ZVf044Ma4"},
{"content":{"body":"it was only $10 and only for me, not actually a problem","m.mentions":{},"msgtype":"m.text"},"ts":1706123948531,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sKE4H56J9yf-_aOvR1gvtgz_WyMqLrwKnBxAJ5n4Tcc"},
{"content":{"body":"that seems pretty affordable","m.mentions":{},"msgtype":"m.text"},"ts":1706124002813,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$338-0BdDqMvLmAf9p5jY_8gTlQ6382VT5SQ9oP35tT8"},
{"content":{"body":"yeah this is likely from allen manually splitting tables across pages and repeating the headers","m.mentions":{},"msgtype":"m.text"},"ts":1706129393883,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LJLkwWy3FZVf23nYRb-Li0jIFlHag5mPN1kdD0AB75g"},
{"content":{"body":"every use of `IteratorStep` in the spec except for elisions in array bindings (`[a, /*hole*/, b] = iterable`) is immediately followed by `\"if _result_ is false; do something; else do IteratorValue(_result_)`. places that have special abrupt completion handling (e.g. `PerformPromiceRace`) duplicate the logic for the `IteratorStep` and `IteratorValue` cases.\n\nthis is silly. we should make a version of `IteratorStep` which does the `IteratorValue` itself and returns a completion with either `~done~` or `result.value`.","format":"org.matrix.custom.html","formatted_body":"<p>every use of <code>IteratorStep</code> in the spec except for elisions in array bindings (<code>[a, /*hole*/, b] = iterable</code>) is immediately followed by <code>\"if _result_ is false; do something; else do IteratorValue(_result_)</code>. places that have special abrupt completion handling (e.g. <code>PerformPromiceRace</code>) duplicate the logic for the <code>IteratorStep</code> and <code>IteratorValue</code> cases.</p>\n<p>this is silly. we should make a version of <code>IteratorStep</code> which does the <code>IteratorValue</code> itself and returns a completion with either <code>~done~</code> or <code>result.value</code>.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1706132468406,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ju6SlxFiShF8vQWBXWXjd8jy-8eRKG-AGxz62fQxxn0"},
{"content":{"body":"i.e. `IteratorStep` should unwrap the value itself in the not-finished case, instead of making the caller do it","format":"org.matrix.custom.html","formatted_body":"i.e. <code>IteratorStep</code> should unwrap the value itself in the not-finished case, instead of making the caller do it","m.mentions":{},"msgtype":"m.text"},"ts":1706132498843,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BwQ7uiHzlmZH87Od-pWhLD3Pl_LrfNoTT6KUjrZneh8"}
]