[
{"content":{"body":"the spec doesn't define a \"code unit\" or a \"code point\", and there's enough ambiguity that they could either be a string or an integer (since either is easily convertible to the other). what type of thing would you expect them to be?","msgtype":"m.text"},"ts":1688060378535,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$eX-HCffu1BMkTljEL-um4CEJogqHNStwls01R52igYI"},
{"content":{"body":"Depends what you mean by \"expect\". Over the course of a few PRs, they've become more like an opaque type. E.g., you can't just do arithmetic on a code point, you have to ask for its numeric value and then do arithmetic on that instead.","msgtype":"m.text"},"ts":1688060809464,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$KazWaFunVD_9PbkwRIB5FDf3v_v3PGyPYt6dud0G9f4"},
{"content":{"body":"(I think that transition is not quite complete.)","msgtype":"m.text"},"ts":1688060949323,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$sHae1w43khDO0iKqDtzJ4fWX7QxVt3cvjIWPOnV_a9I"},
{"content":{"body":"definitely not a string","msgtype":"m.text"},"ts":1688061611730,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$62VqjJwURMNVNPiWr18uPJnsWoXM3K8GX8K7Ks9aQyE"},
{"content":{"body":"I would not treat them as integers either though","msgtype":"m.text"},"ts":1688061616716,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CoCJ45VKi1xyiEUo3OiA0BHUTDn5977HXLoDw9bUl3E"},
{"content":{"body":"what are they, then?","msgtype":"m.text"},"ts":1688061713815,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_qP6_voeQIrQzNg_knix0fd6vEqbLKy3n4AVwTp3WbE"},
{"content":{"body":"What is a Boolean? What is *undefined*?","format":"org.matrix.custom.html","formatted_body":"What is a Boolean? What is <em>undefined</em>?","msgtype":"m.text"},"ts":1688061760976,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$-yBcLGT-kjxzbaVed8bq7y8L6x9ER7YaK75gEisaPog"},
{"content":{"body":"so its its own primitive type??","msgtype":"m.text"},"ts":1688061774156,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Beu_x-CwqeBqskorr9BzXgeDGLUiECVMd76IYO4tA-0"},
{"content":{"body":" * so its its own primitive type?","m.new_content":{"body":"so its its own primitive type?","msgtype":"m.text"},"m.relates_to":{"event_id":"$Beu_x-CwqeBqskorr9BzXgeDGLUiECVMd76IYO4tA-0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688061775141,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Bs9lVpO4Uup8TABiBMwFo2GCCp9KbESTeb6VVZDQIb8"},
{"content":{"body":"that's a fine answer - like a spec enum - but then, would you say that \"how to represent it in JS\" is a judgement call?","msgtype":"m.text"},"ts":1688061794166,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bFcROBjTTf82-sqdmm35A9fZogUPdUsdYZCwv2NA7ik"},
{"content":{"body":"Isn't \"how to represent it\" always a judgement call?","msgtype":"m.text"},"ts":1688061845722,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$YworLaz_Jz_KpbnleOiZ6X4oyl1SyCQtpkj0t3zUHFY"},
{"content":{"body":"more specifically, I think it's a judgement call whether you represent a code point via UTF-8 or UTF-32 or something else.","msgtype":"m.text"},"ts":1688062142191,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$UMdkyGBi38ha8HbLjH81ZmzQOgVVuW6UzfB2m7cdQ4g"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1688063431802,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aSxl8YMyXMXPZ7l-Uqd-34w_gA5dGfRtTs-TvjvGzBI"},
{"content":{"body":"yeah I mean it's always a judgement call","msgtype":"m.text"},"ts":1688063519699,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0xJ7aqy-t8GinBNu4IBXLrL-cUamrjnYXfYmsY-3zzw"},
{"content":{"body":"if you were writing typescript I would tell you to use a phantom brand but presumably you are not","msgtype":"m.text"},"ts":1688063616522,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1kfkMjMQiMF5YRFVaB5HxeAcFuPIzkC1w-75P-KMBjA"},
{"content":{"body":"https://www.typescriptlang.org/play?#code/C4TwDgpgBAwg9gEwgVQHYEthQLxVQVwFsAjCAJygDIoBvKAfXuLIENUEAuKAcgGNEI+DMG5QAvgG4AUFIA2ELAA8u8JGkw4oABglQA9HqjkycMnIVQQKgeqy4tUFgGdYN4boNRC+J1lJHFMFl0XkwgA","msgtype":"m.text"},"ts":1688063648313,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KOsVpeY1N0vCRVSYJmGpdwdktBEspNizYyuXlzchW7I"},
{"content":{"body":"if you're asking for practical advice, in JS I'd either just use a number and try to be very disciplined about which things are code units and which are not, or use an explicit `{ type: 'code unit', value: number }` wrapper so that they were not interchangeable","format":"org.matrix.custom.html","formatted_body":"if you're asking for practical advice, in JS I'd either just use a number and try to be very disciplined about which things are code units and which are not, or use an explicit <code>{ type: 'code unit', value: number }</code> wrapper so that they were not interchangeable","msgtype":"m.text"},"ts":1688063720768,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VR4x0FaQbtrSmwgcQdOpp8YymDNrfTpMRDIUCsfjHRY"},
{"content":{"body":"(of course IMO the better way to prevent that sort of confusion is TypeScript, but.)","msgtype":"m.text"},"ts":1688063750446,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AwFD-SnjlZoKuWWfKJ_DOcgb2g0En4T_GZs6nxPv1Zg"}
]