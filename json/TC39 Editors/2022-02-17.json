[
{"content":{"body":"i see some dot-dispatched style calls got `!`, like `! _env_.InitializeBinding(...)`, is that enforced by ecmarkup?","format":"org.matrix.custom.html","formatted_body":"i see some dot-dispatched style calls got <code>!</code>, like <code>! _env_.InitializeBinding(...)</code>, is that enforced by ecmarkup?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i see some dot-dispatched style calls got `!`, like `! _env_.InitializeBinding(...)`, is that enforced by ecmarkup?","mimetype":"text/plain"},{"body":"i see some dot-dispatched style calls got <code>!</code>, like <code>! _env_.InitializeBinding(...)</code>, is that enforced by ecmarkup?","mimetype":"text/html"}]},"ts":1645056498418,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$R3vgJ0pROGDb51mvoNUjkGZrvu1khbqsHT5XxUR7swI"},
{"content":{"body":"nope","msgtype":"m.text","org.matrix.msc1767.text":"nope"},"ts":1645059503475,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$RxTZ9pOccVEwLLlCXsSD5ErkaJE4mQ0JhOZbBvXrvtQ"},
{"content":{"body":"we did those by hand :(","msgtype":"m.text","org.matrix.msc1767.text":"we did those by hand :("},"ts":1645059511316,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$P-_9VRkTfTBO-LH88VJ_BPa2UPZEPn8oleUsYXJ7_co"},
{"content":{"body":"aw :(","msgtype":"m.text","org.matrix.msc1767.text":"aw :("},"ts":1645059521164,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$bAqL3CJqLcQRrmzm1ol1aUHfILIQdBDyqPCjlTrV6tk"},
{"content":{"body":"at some point I will improve support for internal and concrete methods ","msgtype":"m.text","org.matrix.msc1767.text":"at some point I will improve support for internal and concrete methods "},"ts":1645059562889,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$A6YWPDiDLGSPURfTMETeppnY35l9VsXFkgg7Ot_SsAQ"},
{"content":{"body":"this is going to require enforcing that all such method names are globally unique, but, they should be anyway so whatever","msgtype":"m.text","org.matrix.msc1767.text":"this is going to require enforcing that all such method names are globally unique, but, they should be anyway so whatever"},"ts":1645059593363,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HmcwbUEEZSLCkD0wXy9PDOU6qdI3d86DwY2_puOa8Rw"},
{"content":{"body":"for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides","msgtype":"m.text","org.matrix.msc1767.text":"for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides"},"ts":1645059655565,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZTSC96h9DLLXDrr85cBDh9aHpjVcBd9yc1SjZZ4DQ6A"},
{"content":{"body":" * for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides","m.new_content":{"body":"for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides","msgtype":"m.text","org.matrix.msc1767.text":"for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides"},"m.relates_to":{"event_id":"$ZTSC96h9DLLXDrr85cBDh9aHpjVcBd9yc1SjZZ4DQ6A","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * for the purposes of type checking it's probably easier, since they should have the same signatures regardless of overrides"},"ts":1645059673524,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NK4EUehT6jhGo6h3TbAiGpc2IMcxYEe7Nzdj7q_rQuY"},
{"content":{"body":"Depends what you mean by \"globally unique\": function ER, module ER, and global ER each separately declare/define \"GetThisBinding\" without 'inheriting' from a common 'abstract method'. But their signatures are all the same, so you could just pretend they do.","msgtype":"m.text","org.matrix.msc1767.text":"Depends what you mean by \"globally unique\": function ER, module ER, and global ER each separately declare/define \"GetThisBinding\" without 'inheriting' from a common 'abstract method'. But their signatures are all the same, so you could just pretend they do."},"ts":1645059921587,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$0DcpAzahGF8l28iTm7aWICaihInzCqX6P0q3S22OqHc"},
{"content":{"body":"man Intl APIs are kinda wild","msgtype":"m.text","org.matrix.msc1767.text":"man Intl APIs are kinda wild"},"ts":1645060465945,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KAQeA46RWqfvnJHgk6ef-NIjgP9-HxiSEvmrMFrbRV0"},
{"content":{"body":"i'm reviewing a bunch of patches to v8. they got option bags that are String or Boolean, the hell","msgtype":"m.text","org.matrix.msc1767.text":"i'm reviewing a bunch of patches to v8. they got option bags that are String or Boolean, the hell"},"ts":1645060489469,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fV6GFYGp8zQv4uTDzIDLfWRoTgP0jd2lswr49yVmoM0"},
{"content":{"body":"> But their signatures are all the same, so you could just pretend they do.\n\nyeah, or I could define it on the base type and then have \"this is not called\" assertions for the implementations in the other concrete ER types, which I think we do with some other methods","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>But their signatures are all the same, so you could just pretend they do.</p>\n</blockquote>\n<p>yeah, or I could define it on the base type and then have &quot;this is not called&quot; assertions for the implementations in the other concrete ER types, which I think we do with some other methods</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> But their signatures are all the same, so you could just pretend they do.\n\nyeah, or I could define it on the base type and then have \"this is not called\" assertions for the implementations in the other concrete ER types, which I think we do with some other methods","mimetype":"text/plain"},{"body":"<blockquote>\n<p>But their signatures are all the same, so you could just pretend they do.</p>\n</blockquote>\n<p>yeah, or I could define it on the base type and then have &quot;this is not called&quot; assertions for the implementations in the other concrete ER types, which I think we do with some other methods</p>\n","mimetype":"text/html"}]},"ts":1645063232722,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CLlqJJltuEl8_OGsXlrvb0Xfz9P8qGZ0crwOn34JOSY"},
{"content":{"body":"shu: yeahhhhhh I've been realizing I probably need to pay more attention there","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: yeahhhhhh I've been realizing I probably need to pay more attention there","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: yeahhhhhh I've been realizing I probably need to pay more attention there","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: yeahhhhhh I've been realizing I probably need to pay more attention there","mimetype":"text/html"}]},"ts":1645063257241,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xp4WbeSss7yOldEle5z1ZUNzlO56lxR1E4idS6p3pz4"},
{"content":{"body":"I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with","msgtype":"m.text","org.matrix.msc1767.text":"I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with"},"ts":1645063276657,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oJOBgHflVF6n0aGihe4kztsbG9f5n9zUacsuOt_FiZQ"},
{"content":{"body":" * I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with","m.new_content":{"body":"I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with","msgtype":"m.text","org.matrix.msc1767.text":"I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with"},"m.relates_to":{"event_id":"$oJOBgHflVF6n0aGihe4kztsbG9f5n9zUacsuOt_FiZQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I have absolutely no expertise in the intl parts of intl, but they are also, separately, designing APIs, which is a thing I do have experience with"},"ts":1645063280144,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$F9sBZEHC5tKeijxHjKz3jwoP2cu_ZOCWK2lXr8xNr6I"},
{"content":{"body":"someday, if we ever finish doing all the major cleanups in 262 and I am not yet burnt out on it, I will try to get ecma402 in line with 262's editorial conventions","msgtype":"m.text","org.matrix.msc1767.text":"someday, if we ever finish doing all the major cleanups in 262 and I am not yet burnt out on it, I will try to get ecma402 in line with 262's editorial conventions"},"ts":1645063332578,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$G_0fRSI97zWvdWGVthd_-Bk8EROvVpAYi_5FpWZTMOU"},
{"content":{"body":"ljharb: in case you didn't see it buried in the comments, https://github.com/tc39/ecma262/pull/2547#discussion_r808600292","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: in case you didn't see it buried in the comments, https://github.com/tc39/ecma262/pull/2547#discussion_r808600292","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: in case you didn't see it buried in the comments, https://github.com/tc39/ecma262/pull/2547#discussion_r808600292","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: in case you didn't see it buried in the comments, https://github.com/tc39/ecma262/pull/2547#discussion_r808600292","mimetype":"text/html"}]},"ts":1645121231974,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$JNa8VDCUIYz8Kmzatvp784TY71ezGJsnN81vZcepwHo"},
{"content":{"body":"oh thanks, i did miss it","msgtype":"m.text","org.matrix.msc1767.text":"oh thanks, i did miss it"},"ts":1645121304818,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UFhyI0TBnZHZnZVU4lJXABbtc99Pgtp2MIi4D3xvtk8"}
]