[
{"content":{"body":"Is there a meeting now?","m.mentions":{},"msgtype":"m.text"},"ts":1727299937468,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$QWEHdzXQ8LR8bCKGr09tryItNDPkFayl-alsjNN4o2k"},
{"content":{"body":"guess not.","m.mentions":{},"msgtype":"m.text"},"ts":1727300463940,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_uGfHKIBymRZ132V21UIbcH9Y1LO9UGg1MYNYkUVsbk"},
{"content":{"body":"i forgot to join 10m ago, but afaik there's supposed to be","m.mentions":{},"msgtype":"m.text"},"ts":1727300483666,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tFpxDo_jVLziWkFEDlfvQHNDxUSIwmbgI_9SLPr1Uhk"},
{"content":{"body":"i thought we cancelled because michael was out","m.mentions":{},"msgtype":"m.text"},"ts":1727300709090,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$77H-g9lGIlGG_-40heksWRH-kCeC1m1EjB0_UFtawxw"},
{"content":{"body":"that's why we did the slides last meeting","m.mentions":{},"msgtype":"m.text"},"ts":1727300716620,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oXHm7iQwUDB7-BRrYKdIzvNbLwVxtxZKQLVhoM_Usbc"},
{"content":{"body":"ok","m.mentions":{},"msgtype":"m.text"},"ts":1727300829206,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$TESbaLYj50h1X63L39Xg0Jstd-s0rOGcB-Mphgdb8lo"},
{"content":{"body":"so is next week's cancelled too?","m.mentions":{},"msgtype":"m.text"},"ts":1727300890542,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_j2JAI7bhm6ezDZjruN7bi7WtCRC1bEVIg2T3zJ8bX4"},
{"content":{"body":"is Michael Ficarra also out next next week? i forget","format":"org.matrix.custom.html","formatted_body":"is <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> also out next next week? i forget","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"ts":1727300985911,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9OeG1L1xWtnMmOdWc1vB0R3RRIFDknjI11m8WuB6sXw"},
{"content":{"body":"if only one of us is in, then we should consider it cancelled","m.mentions":{},"msgtype":"m.text"},"ts":1727300993612,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9Rd8viP__W37nLB2Bgsk4w8DMmiJbatePbfQMMrAhLU"},
{"content":{"body":"i certainly won't be there next week, and plenary week's cancelled already","m.mentions":{},"msgtype":"m.text"},"ts":1727301308578,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$z3Eoqf2KYCZwlgRe6YsB3ao4zS98aticn-rqXk3iCVo"},
{"content":{"body":"I'll be in, I'm back to work on Tuesday","m.mentions":{},"msgtype":"m.text"},"ts":1727301454794,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2_-aUwWCO5KflueiOX-RRrmbJsQy6My8rMCkL_HFxN8"},
{"content":{"body":"I'll be back next week","msgtype":"m.text"},"ts":1727301921781,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ZoS0gqAO6qn7iOqxkQYqyzhk48wRyqQftO-Rk2yUON0"},
{"content":{"body":"i had a cursed realization the other day while working on some bugs","m.mentions":{},"msgtype":"m.text"},"ts":1727302143258,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0rM1fkXWIFQmXtKUF3E7LdGBpi1eXgp5deowhjj1yFQ"},
{"content":{"body":"the spec pretends stack overflows are impossible, so our !s and non-completion value returning AOs are correct only with that assumption","m.mentions":{},"msgtype":"m.text"},"ts":1727302177464,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-YXeh--H2YgeAKw0bgfsoLTmNb8Qw5RtkC4IMF9853w"},
{"content":{"body":"the unfortunate state of the world is that stack overflow RangeErrors are both possible and are catchable by user code, lol","m.mentions":{},"msgtype":"m.text"},"ts":1727302189353,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$dGZr0YYQ_dTqssIppC1DZrl_0dktzpJlBvL5NAbdN0s"},
{"content":{"body":"yup!!","m.mentions":{},"msgtype":"m.text"},"ts":1727302439245,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_C4jCbT08-sYk_LlVtEZfHrWXRlZFG8Qr2uTBGxIF4E"},
{"content":{"body":"would be nice to fix that, someday; I want a [allocates] attribute for AOs","m.mentions":{},"msgtype":"m.text"},"ts":1727302477992,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$40ZeLS7qz3kcbUej3xW9UJ656rK0Vpaqrk8FPP5cOkY"},
{"content":{"body":"but like... not actually","m.mentions":{},"msgtype":"m.text"},"ts":1727302483757,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vvELnhZcaxS4jUVTYz96zkfG7fyQI1pq6uD_3kvwLtQ"},
{"content":{"body":"the most surprising one of that is Await","m.mentions":{},"msgtype":"m.text"},"ts":1727302548373,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1Z1g2zfVOWFBtlxrRXqWN9R4QHmmxBfB-bsgqXobFh4"},
{"content":{"body":"`await` is fallibe anyway because the fast path in Promise.resolve does a user-hookable lookup","format":"org.matrix.custom.html","formatted_body":"<code>await</code> is fallibe anyway because the fast path in Promise.resolve does a user-hookable lookup","m.mentions":{},"msgtype":"m.text"},"ts":1727303441051,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y8NaxF3kwHrc-xhju4bS6qqgl7baruLjFKNVkfr4rBM"},
{"content":{"body":"indeed","m.mentions":{},"msgtype":"m.text"},"ts":1727303472276,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$N28JF9nwVHTAyt2s5Z0pM9diAXoG2KSw0M4PwQMlPNs"},
{"content":{"body":"but PerformPromiseThen can stack overflow!","m.mentions":{},"msgtype":"m.text"},"ts":1727303478990,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ZizIRzcImuzSjyVu0PMy3ZmuFB95CLKhu7xejlKyG3Y"},
{"content":{"body":"(though I think we might actually be able to fix that: right now it's `IsPromise(p) && p.constructor === %Promise%` but it should be `IsPromise(p) && GetPrototypeOf(p) === %Promise.prototype%`; the first check rules out proxies which makes the second check unobservable. https://github.com/tc39/proposal-faster-promise-adoption/issues/1 )","format":"org.matrix.custom.html","formatted_body":"(though I think we might actually be able to fix that: right now it's <code>IsPromise(p) &amp;&amp; p.constructor === %Promise%</code> but it should be <code>IsPromise(p) &amp;&amp; GetPrototypeOf(p) === %Promise.prototype%</code>; the first check rules out proxies which makes the second check unobservable. https://github.com/tc39/proposal-faster-promise-adoption/issues/1 )","m.mentions":{},"msgtype":"m.text"},"ts":1727303553637,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bQMWYWrpNBEl-I1XoaCF7xIxSbsWlQB1_HaXidxZ7vk"},
{"content":{"body":"(I feel like this is _probably_ web-compat but maybe you'd want a use counter first?)","format":"org.matrix.custom.html","formatted_body":"(I feel like this is <em>probably</em> web-compat but maybe you'd want a use counter first?)","m.mentions":{},"msgtype":"m.text"},"ts":1727303588925,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qkX2kxBrLvWR3b2hJOyH5i8MWRKZTxLS3cTfFC8a0nY"}
]