[
{"content":{"body":"shu: https://github.com/tc39/ecma262/pull/2566","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: https://github.com/tc39/ecma262/pull/2566","msgtype":"m.text"},"ts":1635992703398,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kReNohKcOposdAvhpwtOQHa9WE54fTlqDR4g48zmbFs"},
{"content":{"body":"will look today","msgtype":"m.text"},"ts":1636035713122,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$To7ycF-eIak8HAN5NiZbfLZVJn-Axr4wkRF24TFgeMw"},
{"content":{"body":"shu: re: https://github.com/tc39/ecma262/pull/2548, it looks like very nearly every `!`-prefixed call gets the user-code effect suppressed (possibly actually all of them?). maybe worth building that heuristic into ecmarkup?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: re: https://github.com/tc39/ecma262/pull/2548, it looks like very nearly every <code>!</code>-prefixed call gets the user-code effect suppressed (possibly actually all of them?). maybe worth building that heuristic into ecmarkup?","msgtype":"m.text"},"ts":1636054910583,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ifGwKB91Ugc2iTl0ulFoFnhOzct0RP5Fp7LBh0kr5M8"},
{"content":{"body":"bakkot: almost all, yes. worth thinking about building it in. it puts the burden of vigilance on us (the PR reviewers) to remember to check if a `!` shouldn't be suppressed. otherwise it puts the burden on authors","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: almost all, yes. worth thinking about building it in. it puts the burden of vigilance on us (the PR reviewers) to remember to check if a <code>!</code> shouldn't be suppressed. otherwise it puts the burden on authors","msgtype":"m.text"},"ts":1636059423652,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NCv-xL1uRLcxZ_aDf6DGtWdF9d1QcklkLzVnCd6p0Hk"},
{"content":{"body":"putting it on us is probably the right choice","msgtype":"m.text"},"ts":1636059434233,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$9xDk4tsy6DAqXWSUMfks_FMowzLNGGgKlJ-A_40MZW8"},
{"content":{"body":"bakkot: Michael Ficarra oh, for the \"*default*\" stuff, the point is that \"*default*\" is used only as a [[LocalName]] and not as an [[ExportName]] in ExportEntry Records, and therefore is not user visible?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a> oh, for the &quot;<em>default</em>&quot; stuff, the point is that &quot;<em>default</em>&quot; is used only as a [[LocalName]] and not as an [[ExportName]] in ExportEntry Records, and therefore is not user visible?","msgtype":"m.text"},"ts":1636062046069,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$k-6qlYidXjgSyGTRmkYHRwg3lLcA67t4xjFEo8VtJ0g"},
{"content":{"body":"so if a module exports a value named `\"*default*\"`, that could be imported, since the magical [[ExportName]] name is `\"default\"`, which has always been user exposed?","format":"org.matrix.custom.html","formatted_body":"so if a module exports a value named <code>&quot;*default*&quot;</code>, that could be imported, since the magical [[ExportName]] name is <code>&quot;default&quot;</code>, which has always been user exposed?","msgtype":"m.text"},"ts":1636062414179,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TfiKor5EjbJZEs5EbuhRoXB-_EoqQYVWaynDGy5bZ24"},
{"content":{"body":"yeah exactly","msgtype":"m.text"},"ts":1636063153612,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5dYcd51-0QJJelwpWddQQeNr24qq1PABlmlmrQjIcag"},
{"content":{"body":"(It also gets into the [[BindingName]] of ResolvedBinding Records, but that's basically the same as the [[LocalName]] of ExportEntry Records)","msgtype":"m.text"},"ts":1636063310746,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m1UhJq1DjIAB1EG8zPqZi5cG8esMRoEl73FmLs-E9gI"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1636063410496,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GHtU9Rouo7uUogozJ_KyHwGaYn_oMBNDP0lXFGX4JfU"},
{"content":{"body":"whereas `\"*\"` and `\"*namespace*\"` leak into [[BindingName]], which is the problem","format":"org.matrix.custom.html","formatted_body":"whereas <code>&quot;*&quot;</code> and <code>&quot;*namespace*&quot;</code> leak into [[BindingName]], which is the problem","msgtype":"m.text"},"ts":1636063429878,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$6HDHPhP95JCiHyJT9-2aGnLdMztEUkJPKmqIYh8_eUI"},
{"content":{"body":"into [[ImportName]], rather","msgtype":"m.text"},"ts":1636063453456,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AxJ8cYyY1FEbmNtJy66sNrhoa8am2CU2SRLYnmRK4AM"},
{"content":{"body":"ah right, that's the usual case","msgtype":"m.text"},"ts":1636063566263,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gya2BImjiMlt1cfGHVLyb2G-HidrwJ5KlgyNDjdpV_w"},
{"content":{"body":"the [[BindingName]] problem is for accessing via a namespace object","msgtype":"m.text"},"ts":1636063573167,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7fjgHvyldcc4YT3xl5fadEWp8jcErqeh5XHfLzaHAKs"},
{"content":{"body":"ah, yes, right","msgtype":"m.text"},"ts":1636063719010,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jRyiQHPEv2W-XHODWKOZs5K--Mus3bmwHLVQCiv_5ag"}
]