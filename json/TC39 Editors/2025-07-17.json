[
{"content":{"body":"`JSON.parse` does an `IsCallable` check on `reviver` before passing it to `InternalizeJSONProperty`, but `InternalizeJSONProperty` types that argument as \"a function object\"","format":"org.matrix.custom.html","formatted_body":"<code data-md=\"`\">JSON.parse</code> does an <code data-md=\"`\">IsCallable</code> check on <code data-md=\"`\">reviver</code> before passing it to <code data-md=\"`\">InternalizeJSONProperty</code>, but <code data-md=\"`\">InternalizeJSONProperty</code> types that argument as &quot;a function object&quot;","m.mentions":{},"msgtype":"m.text"},"ts":1752788466630,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$3_xB3AkIP0oaeSeGbRJ2AD6O3L3wsZhU5Huz0vC3t54"},
{"content":{"body":"esmeta rightfully complains because those types don't match up","m.mentions":{},"msgtype":"m.text"},"ts":1752788478976,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fXZbnFXQnHexwMfsESUmnIgyDGPOz8o301hJJ-TmBa8"},
{"content":{"body":"what should we do?","m.mentions":{},"msgtype":"m.text"},"ts":1752788484928,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KLYe8_elO-C2s_4Atye7zp-eW3gliA1elb6OHurtTBQ"},
{"content":{"body":"ðŸ¤” though it's strange that it wouldn't complain about the same thing with `Function.prototype.bind` and `BoundFunctionCreate`...","format":"org.matrix.custom.html","formatted_body":"ðŸ¤” though it&#39;s strange that it wouldn&#39;t complain about the same thing with <code data-md=\"`\">Function.prototype.bind</code> and <code data-md=\"`\">BoundFunctionCreate</code>...","m.mentions":{},"msgtype":"m.text"},"ts":1752788677861,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$LWkXwQ3a83VcUO8FTH5r7AUydLQKlRpgqn0YYOX9Tr8"},
{"content":{"body":"it's possible that it's already skipping one of those for some other reason, I'll take a look","m.mentions":{},"msgtype":"m.text"},"ts":1752788739893,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4-yTm_JPkfYuordlvWIRpySrM_xvm6nA1j0tKl4-Cbo"},
{"content":{"body":"btw this would be easier if someone stamped https://github.com/tc39/ecma262/pull/3651 and we merged it","m.mentions":{},"msgtype":"m.text"},"ts":1752788787236,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$X-Yfpa9RCFWAPGnUWN-cDQcb-0DiIi0gxmx0qEVlat0"},
{"content":{"body":"rubberstamped, I am just going to trust that this does what it looks like and not try to actually check anything about github actions","m.mentions":{},"msgtype":"m.text"},"ts":1752790068996,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$w3Yrcgx5EkeuW3riflorG7wbmj1VGBbG1ILB6-zybQ0"},
{"content":{"body":"how does `IsCallable` not imply \"a function object\"?","format":"org.matrix.custom.html","formatted_body":"how does <code>IsCallable</code> not imply \"a function object\"?","m.mentions":{},"msgtype":"m.text"},"ts":1752790093828,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Wo3CVRT41X7_ZYouieTHMt7oRd1rFK9oT34RvuAB2ZU"},
{"content":{"body":"\"A function object is an object that supports the [[Call]] internal method\"","m.mentions":{},"msgtype":"m.text"},"ts":1752790116279,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$uYEh0SvyFbLXIM9hzqOmfFAdnc6ySK8k83hE45FurOE"},
{"content":{"body":"`IsCallable` is true iff the argument is an object and has a [[Call]] internal method","format":"org.matrix.custom.html","formatted_body":"<code>IsCallable</code> is true iff the argument is an object and has a [[Call]] internal method","m.mentions":{},"msgtype":"m.text"},"ts":1752790151855,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VLnaEUvy9XajBNzJ3oohNskauNGTF0cpfbW37RXulnY"},
{"content":{"body":"I guess we could tweak the prose of IsCallable to say \"determines if _argument_ is a function object\", which would be an improvement over the current word salad:\n\n> a callable function with a [[Call]] internal method\n\nbut I don't think that would affect esmeta by itself","format":"org.matrix.custom.html","formatted_body":"<p>I guess we could tweak the prose of IsCallable to say \"determines if <em>argument</em> is a function object\", which would be an improvement over the current word salad:</p>\n<blockquote>\n<p>a callable function with a [[Call]] internal method</p>\n</blockquote>\n<p>but I don't think that would affect esmeta by itself</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752790205508,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$l3UAxuN0DZY8ew3loWUsG89TXEAsXamubh2FVKDh1bk"},
{"content":{"body":"esmeta says it could also be a Proxy object that implements [[Call]]","m.mentions":{},"msgtype":"m.text"},"ts":1752790438097,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DMUJr8WH_icHOli2d3IkRKgb-V2VdLtm6gowh_IP3gs"},
{"content":{"body":"and that's a function object","m.mentions":{},"msgtype":"m.text"},"ts":1752790494809,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$f70HGJAtPHyb7v3P6_oe8WJAcNddMuw5mfSiAZdidJI"},
{"content":{"body":"ah, fair","m.mentions":{},"msgtype":"m.text"},"ts":1752790654969,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$j8JlahX7BxvJohJ9DfFq-8aoyapnKcxKd359YaTctJM"},
{"content":{"body":"this is why we should rename that to callable object, it's so unintuitive","m.mentions":{},"msgtype":"m.text"},"ts":1752790782412,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$urgKqGZjwLyLRQEwy6V4R8ruhRsQg2QkyOLtQoK3ZpA"},
{"content":{"body":"rename \"function object\" to \"callable object\" ?","m.mentions":{},"msgtype":"m.text"},"ts":1752790821735,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$8kH3cFcX_O5HwNYwTQLEVXvFMtFU7OjpUW7xZaBN5YE"},
{"content":{"body":"but a callable object is a function","m.mentions":{},"msgtype":"m.text"},"ts":1752790905937,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$H8WvYQ0-RE15w-4IB8AXgQI6gXCCFQeoygtpDSz0cos"},
{"content":{"body":"a proxy for a function is also a function","m.mentions":{},"msgtype":"m.text"},"ts":1752790910167,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6u3Kz6Z-5degFU33AntB8Q8TlPpKauPIHzcbSXXrO-Y"},
{"content":{"body":"See also https://github.com/tc39/ecma262/pull/2889","m.mentions":{},"msgtype":"m.text"},"ts":1752790959488,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$uknwnn9WkbUoj60St9uYFpCCwyos_W2ofdaP5fiH_NU"}
]