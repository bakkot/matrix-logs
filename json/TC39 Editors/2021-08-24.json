[
{"content":{"body":"bakkot: 2489, squashed or separate?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: 2489, squashed or separate?","msgtype":"m.text"},"ts":1629770241506,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pOTdo6L8tH1OI0J3pT4-79h9fxytWTiCQWwMpne6AuA"},
{"content":{"body":"one commit is good I think","msgtype":"m.text"},"ts":1629771223421,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HuhYwwmCLLciMVrOXOCbYDLoJf7IfdTuOLUWc-WWm20"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1629771995439,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sypAFEVXy-GJqf9tsstxY47SXuQ10hKqxi67c_efldk"},
{"content":{"body":"ljharb: hang on, just noticed a typo","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: hang on, just noticed a typo","msgtype":"m.text"},"ts":1629773635585,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4Sz_P5MYFcODyXSh6lB4HHA84DEC_jLDKPNnkGUiXH0"},
{"content":{"body":"`Type(x) is T` can be replaced with `x is a T`","format":"org.matrix.custom.html","formatted_body":"<code>Type(x) is T</code> can be replaced with <code>x is a T</code>","msgtype":"m.text"},"ts":1629773639712,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$FYtAkyg1IDGjpDgMzxwbay8YsOk-4aNOdfnDd8vyM5E"},
{"content":{"body":"the one on line 955?","msgtype":"m.text"},"ts":1629773650285,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$qylXfFO_QKfZ26RD7ceU664suQ4ADzeBaMv2Wh_3AJc"},
{"content":{"body":"Why is prose an improvement over an AO?","msgtype":"m.text"},"ts":1629773671887,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UJxLo6LnelFmZiMFwUHp_j3NHEg9nagEPO_sSCzwfIE"},
{"content":{"body":"ok fixed","msgtype":"m.text"},"ts":1629773721537,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4f4zroaeafNdM29c5Cc6QGCwAiotJx9Bi9ZzUIr1cgE"},
{"content":{"body":"jmdyck: #2489 doesn't touch line 955; which typo are you referring to?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: #2489 doesn't touch line 955; which typo are you referring to?","msgtype":"m.text"},"ts":1629773753698,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$f_WmKRDbz54tlCAtKMPH3KiVMRn7ae-wtqH_a45lfMU"},
{"content":{"body":"`<dfn id=\"integral-number\"variants=\"integral Numbers\">` missing space before \"variants\"","format":"org.matrix.custom.html","formatted_body":"<code>&lt;dfn id=&quot;integral-number&quot;variants=&quot;integral Numbers&quot;&gt;</code> missing space before &quot;variants&quot;","msgtype":"m.text"},"ts":1629773865477,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$uoN8D7z8L85xpOkVKl3d1SyZhhyg-O4l9fTZVnzXdpI"},
{"content":{"body":"(#2492)","msgtype":"m.text"},"ts":1629773883771,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$O-NBEEYk6Xr0PFYyRswKoMOvdEEztcNhTXpIN1vJoeM"},
{"content":{"body":"ah, whoops, that landed","msgtype":"m.text"},"ts":1629773887940,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$x_bKMiDVtXx4NFBFigonlAnvYOEOLmjnT_x2JH1rXOs"},
{"content":{"body":"ljharb: One advantage of the `x is a T` form is that it can be more precise, e.g. `x is a declarative Environment Record` or `x is a function object` or `x is an Object with a [[Foo]] internal slot`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: One advantage of the <code>x is a T</code> form is that it can be more precise, e.g. <code>x is a declarative Environment Record</code> or <code>x is a function object</code> or <code>x is an Object with a [[Foo]] internal slot</code>","msgtype":"m.text"},"ts":1629774964069,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$E4sz_H4pyxLCPi3WRrLC7p3KA7xRPH-8_uI7-dTXGOw"},
{"content":{"body":"How can that be more precise than an AO that has the same semantics? We can make AOs that are more precise than Type() is - that’s not an argument for inline prose, just an argument for “better than Type”","msgtype":"m.text"},"ts":1629775089503,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$PatuUh5yDmo2rzV8AX8cxO4VvULSjJ-Mhbnb1eG3OBg"},
{"content":{"body":"Currently, we can say `x is a Record` or `x is an Environment Record` or `x is a declarative Environment Record` or `x is a function Environment Record` and they can all be true. Even if you create a \"better than Type\" AO, it's still only going to return one thing for x, so it's only going to be equivalent to *one* of those four.","format":"org.matrix.custom.html","formatted_body":"Currently, we can say <code>x is a Record</code> or <code>x is an Environment Record</code> or <code>x is a declarative Environment Record</code> or <code>x is a function Environment Record</code> and they can all be true. Even if you create a &quot;better than Type&quot; AO, it's still only going to return one thing for x, so it's only going to be equivalent to <em>one</em> of those four.","msgtype":"m.text"},"ts":1629775338315,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$v38FY2Z8mH4HS3t4bagUewkmeLOysY-OMeEFAOpyagA"}
]