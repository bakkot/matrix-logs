[
{"content":{"body":"at the editor call we talked about https://github.com/tc39/ecma262/pull/3606","m.mentions":{},"msgtype":"m.text"},"ts":1748028415719,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EpwEgyHe60Z3NrLIYMLfDLUBcNrJM-n3jk1sPqPJ39o"},
{"content":{"body":"and making it so that built-in generators/iterators/async functions always return `NormalCompletion(*undefined*)`","format":"org.matrix.custom.html","formatted_body":"and making it so that built-in generators/iterators/async functions always return <code>NormalCompletion(*undefined*)</code>","m.mentions":{},"msgtype":"m.text"},"ts":1748028438395,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tA1QCUGB718JXkbsImXBBlC5xS_GPWZn9BV3tayljSI"},
{"content":{"body":"I still think this is the right thing to do","m.mentions":{},"msgtype":"m.text"},"ts":1748028444480,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8fcAzbWZt1mtwY_RPy21KNoQha-FDNt_YImHjzxVBMg"},
{"content":{"body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true because `.return` can inject a return completion wherever we use the Yield macro","format":"org.matrix.custom.html","formatted_body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true because <code>.return</code> can inject a return completion wherever we use the Yield macro","m.mentions":{},"msgtype":"m.text"},"ts":1748028492549,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hp-vV4qjKqMAQYzaAN78Jw-_n0z78hq7AEPfKksEnGo"},
{"content":{"body":"* however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the iterator case because `.return` can inject a return completion wherever we use the Yield macro","format":"org.matrix.custom.html","formatted_body":"* however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the iterator case because <code>.return</code> can inject a return completion wherever we use the Yield macro","m.mentions":{},"m.new_content":{"body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the iterator case because `.return` can inject a return completion wherever we use the Yield macro","format":"org.matrix.custom.html","formatted_body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the iterator case because <code>.return</code> can inject a return completion wherever we use the Yield macro","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$hp-vV4qjKqMAQYzaAN78Jw-_n0z78hq7AEPfKksEnGo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748028511502,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zZO618zTS3HC5QzBLldkQpGyDM1CMzghwwKwvmomTVU"},
{"content":{"body":"* and making it so that built-in generators/async functions always return `NormalCompletion(*undefined*)`","format":"org.matrix.custom.html","formatted_body":"* and making it so that built-in generators/async functions always return <code>NormalCompletion(*undefined*)</code>","m.mentions":{},"m.new_content":{"body":"and making it so that built-in generators/async functions always return `NormalCompletion(*undefined*)`","format":"org.matrix.custom.html","formatted_body":"and making it so that built-in generators/async functions always return <code>NormalCompletion(*undefined*)</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$tA1QCUGB718JXkbsImXBBlC5xS_GPWZn9BV3tayljSI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748028516603,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6p8ATtfT6kZQJvuArcefmh8pOReWxeJ60vpLJX082a4"},
{"content":{"body":"* however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the generator case because `.return` can inject a return completion wherever we use the Yield macro","format":"org.matrix.custom.html","formatted_body":"* however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the generator case because <code>.return</code> can inject a return completion wherever we use the Yield macro","m.mentions":{},"m.new_content":{"body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the generator case because `.return` can inject a return completion wherever we use the Yield macro","format":"org.matrix.custom.html","formatted_body":"however, the PR updates the machinery to assert that they never return a return completion, and this is not true for the generator case because <code>.return</code> can inject a return completion wherever we use the Yield macro","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$hp-vV4qjKqMAQYzaAN78Jw-_n0z78hq7AEPfKksEnGo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1748028523361,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$grq1X_jKDm6vTvFgNJAQDOSVMhAxBeKq-uih9pFMfQw"},
{"content":{"body":"this sucks and I hate it","m.mentions":{},"msgtype":"m.text"},"ts":1748028530810,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QGRvtzOENQib5OtrFwZf0EZNFwo7pChkGq7e81UUK2Q"},
{"content":{"body":"options: restore the machinery so that built-in generators can handle all three kinds of completion, update our use of the Yield macro to explicitly handle return completions wherever it's used, or switch to the other PR which made them all return ReturnCompletions instead and then not handle the NormalCompletion case","m.mentions":{},"msgtype":"m.text"},"ts":1748028611276,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$AyjgsbVkl1RorqK7QA-AmxwNK-Fn0TP1IoKCeZJIwcU"}
]