[
{"content":{"body":"shu: bakkot If you can, please take a look at https://github.com/tc39/ecma262/pull/2972#issuecomment-1372894434 before editor call today","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> If you can, please take a look at https://github.com/tc39/ecma262/pull/2972#issuecomment-1372894434 before editor call today","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: bakkot If you can, please take a look at https://github.com/tc39/ecma262/pull/2972#issuecomment-1372894434 before editor call today","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> If you can, please take a look at https://github.com/tc39/ecma262/pull/2972#issuecomment-1372894434 before editor call today","mimetype":"text/html"}]},"ts":1673454017260,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$D7UOzjW_FoZYHL-F_g-QECuZDTO525AwZLtdzKdXGdY"},
{"content":{"body":"I think bakkot opposed using \"one of\" with multiple-inhabitant types, but if that's not the case, then we just need ecmarkup to support new phrasing","format":"org.matrix.custom.html","formatted_body":"I think <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> opposed using &quot;one of&quot; with multiple-inhabitant types, but if that's not the case, then we just need ecmarkup to support new phrasing","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think bakkot opposed using \"one of\" with multiple-inhabitant types, but if that's not the case, then we just need ecmarkup to support new phrasing","mimetype":"text/plain"},{"body":"I think <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> opposed using &quot;one of&quot; with multiple-inhabitant types, but if that's not the case, then we just need ecmarkup to support new phrasing","mimetype":"text/html"}]},"ts":1673454178373,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$eUtslTfX-naqDoV1d_apwXP1_YcbTufrbNhtfEPI7J4"},
{"content":{"body":"thanks, adding to todos","msgtype":"m.text","org.matrix.msc1767.text":"thanks, adding to todos"},"ts":1673454895836,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vXOUhnCm0jXBLEFJx0hhAerk5muxxY1MMuVx7aQBRjI"},
{"content":{"body":"bakkot: do biblio files loaded later via `--load-biblio` always override entries loaded earlier?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do biblio files loaded later via <code>--load-biblio</code> always override entries loaded earlier?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"bakkot: do biblio files loaded later via `--load-biblio` always override entries loaded earlier?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: do biblio files loaded later via <code>--load-biblio</code> always override entries loaded earlier?","mimetype":"text/html"}]},"ts":1673455083770,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kjJRRofZF5VGW_WuEVZOaYjxiFaDkA10JEIFdyUIZ-8"},
{"content":{"body":"shu: I think so yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I think so yes","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"shu: I think so yes","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: I think so yes","mimetype":"text/html"}]},"ts":1673456645335,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FfjpP3xhGd5YjcdP7p66bEbax9NQCz2KOM7YlwQvCf8"},
{"content":{"body":"there might be some edge cases; it's not thoroughly tested","msgtype":"m.text","org.matrix.msc1767.text":"there might be some edge cases; it's not thoroughly tested"},"ts":1673456656374,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n5qR68atVHxR5tUHyetSyTbgf8ezz_OMUEeSD20DwbY"},
{"content":{"body":"but it should","msgtype":"m.text","org.matrix.msc1767.text":"but it should"},"ts":1673456659923,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OAlerMb615W7SnO7pR4CcJ7_I1QJjHN66UgbE0dRNDQ"},
{"content":{"body":"cool","msgtype":"m.text","org.matrix.msc1767.text":"cool"},"ts":1673456837330,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xeV_aBhALEl04_7-Js_nZuX2YWwERJt_vBSNSURvYyQ"},
{"content":{"body":"i also dislike \"one of\" with non-unary or nullary types","msgtype":"m.text","org.matrix.msc1767.text":"i also dislike \"one of\" with non-unary or nullary types"},"ts":1673476152161,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$vrAXNVchX7AY8SSPu_bctuc9duZOWXKnsxGqcXeARe0"},
{"content":{"body":"if i had to form a rule around it i think i prefer something like \"either an A, a X, a Y, or one of *foo*, \"bar\", or ~baz~\"","format":"org.matrix.custom.html","formatted_body":"if i had to form a rule around it i think i prefer something like &quot;either an A, a X, a Y, or one of <em>foo</em>, &quot;bar&quot;, or ~baz~&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if i had to form a rule around it i think i prefer something like \"either an A, a X, a Y, or one of *foo*, \"bar\", or ~baz~\"","mimetype":"text/plain"},{"body":"if i had to form a rule around it i think i prefer something like &quot;either an A, a X, a Y, or one of <em>foo</em>, &quot;bar&quot;, or ~baz~&quot;","mimetype":"text/html"}]},"ts":1673476225981,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sl9nTLyFUrsoST-MGBrOnyR_4Jtfq56q-EFREiJd4lI"},
{"content":{"body":"so you're okay with \"either\" for more-than-2?","msgtype":"m.text","org.matrix.msc1767.text":"so you're okay with \"either\" for more-than-2?"},"ts":1673476261273,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$nn07_-IxjFZt__ODWe7riufDbnjg4yaTRJXgpUzAoR4"},
{"content":{"body":"no, it's more like i see the structure as \"either {phrase about distinguishing types with >1 values} or {phrase about distinguishing constants}\"","msgtype":"m.text","org.matrix.msc1767.text":"no, it's more like i see the structure as \"either {phrase about distinguishing types with >1 values} or {phrase about distinguishing constants}\""},"ts":1673476369401,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$x4miyCeWmHEBl-3hMjKKDt9OI0XzjcsTi72i2Kq0hgU"},
{"content":{"body":"i realize that's your point, i'm just asking a side-question.","msgtype":"m.text","org.matrix.msc1767.text":"i realize that's your point, i'm just asking a side-question."},"ts":1673476402052,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_QvznEXdKk8x4Jl1hHyiJSkY9N27SrBy4SD38X6o8gQ"},
{"content":{"body":"ah","msgtype":"m.text","org.matrix.msc1767.text":"ah"},"ts":1673476410090,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mXmIQgIyKnXwUlIZ28EzyFcTpTJMLcDYCOWWaR4lhmo"},
{"content":{"body":" * i realize that's your point, i'm just asking a side-question.","m.new_content":{"body":"i realize that's your point, i'm just asking a side-question.","msgtype":"m.text","org.matrix.msc1767.text":"i realize that's your point, i'm just asking a side-question."},"m.relates_to":{"event_id":"$_QvznEXdKk8x4Jl1hHyiJSkY9N27SrBy4SD38X6o8gQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * i realize that's your point, i'm just asking a side-question."},"ts":1673476420671,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$x5R8E1d0q1IPAV2ktMwYZ2k3lfTP3Pp2lLPv396ZeX4"}
]