[
{"content":{"body":"I'm wondering about Abstract Closures in a post-2547 spec. E.g. CreateListIteratorRecord defines a closure that uses `?`, so it can return an abrupt completion. So when it says `Return *undefined*`, should that  be `Return NormalCompletion(*undefined*)`?","format":"org.matrix.custom.html","formatted_body":"I'm wondering about Abstract Closures in a post-2547 spec. E.g. CreateListIteratorRecord defines a closure that uses <code>?</code>, so it can return an abrupt completion. So when it says <code>Return *undefined*</code>, should that  be <code>Return NormalCompletion(*undefined*)</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm wondering about Abstract Closures in a post-2547 spec. E.g. CreateListIteratorRecord defines a closure that uses `?`, so it can return an abrupt completion. So when it says `Return *undefined*`, should that  be `Return NormalCompletion(*undefined*)`?","mimetype":"text/plain"},{"body":"I'm wondering about Abstract Closures in a post-2547 spec. E.g. CreateListIteratorRecord defines a closure that uses <code>?</code>, so it can return an abrupt completion. So when it says <code>Return *undefined*</code>, should that  be <code>Return NormalCompletion(*undefined*)</code>?","mimetype":"text/html"}]},"ts":1647822717557,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$ionZ_nvQR4fsBjP_e8dVPbD33q5S5N05XpdDqEcUNgY"},
{"content":{"body":"Or should the closure have a return-type, so that the `NormalCompletion()` is implicit?","format":"org.matrix.custom.html","formatted_body":"Or should the closure have a return-type, so that the <code>NormalCompletion()</code> is implicit?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Or should the closure have a return-type, so that the `NormalCompletion()` is implicit?","mimetype":"text/plain"},{"body":"Or should the closure have a return-type, so that the <code>NormalCompletion()</code> is implicit?","mimetype":"text/html"}]},"ts":1647822767207,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$IQiF4-LX1DOB5V6RexCqRlbmh-Vx-j_UoYzAUcFCEm4"},
{"content":{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`","format":"org.matrix.custom.html","formatted_body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`","mimetype":"text/plain"},{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>","mimetype":"text/html"}]},"ts":1647823184995,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$pogKCvYpE8c29rBI-awU1G137jd24yuBrizN4XAybOI"},
{"content":{"body":" * (Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`)","format":"org.matrix.custom.html","formatted_body":" * (Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>)","m.new_content":{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`)","format":"org.matrix.custom.html","formatted_body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`)","mimetype":"text/plain"},{"body":"(Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$pogKCvYpE8c29rBI-awU1G137jd24yuBrizN4XAybOI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * (Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is `an Abstract Closure that takes <X> and <Y> and returns a MatchResult`)","mimetype":"text/plain"},{"body":" * (Currently, we don't have a syntax to declare an AC's return-type. Closest is that CompilePattern's return-type is <code>an Abstract Closure that takes &lt;X&gt; and &lt;Y&gt; and returns a MatchResult</code>)","mimetype":"text/html"}]},"ts":1647823213945,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$wpi1iMTRJ4RumDF7ZEA4n21m-vW3ZVzhk6rEOin3PMQ"}
]