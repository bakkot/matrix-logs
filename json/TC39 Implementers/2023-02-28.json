[
{"content":{"body":"so I was still thinking like, \"hmm, feel like it's gonna be really surprising if `intersection` is the _only_ operation that incurs non-obvious ordering\" and \"isn't requiring a userland `size` check for perf still preferable to losing that obviousness?\", but like","format":"org.matrix.custom.html","formatted_body":"so I was still thinking like, &quot;hmm, feel like it's gonna be really surprising if <code>intersection</code> is the <em>only</em> operation that incurs non-obvious ordering&quot; and &quot;isn't requiring a userland <code>size</code> check for perf still preferable to losing that obviousness?&quot;, but like","msgtype":"m.text"},"ts":1677572610865,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$VNKPx8T4LD44w8LGhN4JF0QePATN5n7fmu8qoEBfoLk"},
{"content":{"body":" * so I was still thinking like, \"hmm, feel like it's gonna be really surprising if `intersection` is the _only_ operation that incurs non-obvious ordering\" and \"isn't requiring a userland `size` check for perf still preferable to losing that obviousness?\", but like","format":"org.matrix.custom.html","formatted_body":" * so I was still thinking like, &quot;hmm, feel like it's gonna be really surprising if <code>intersection</code> is the <em>only</em> operation that incurs non-obvious ordering&quot; and &quot;isn't requiring a userland <code>size</code> check for perf still preferable to losing that obviousness?&quot;, but like","m.new_content":{"body":"so I was still thinking like, \"hmm, feel like it's gonna be really surprising if `intersection` is the _only_ operation that incurs non-obvious ordering\" and \"isn't requiring a userland `size` check for perf still preferable to losing that obviousness?\", but like","format":"org.matrix.custom.html","formatted_body":"so I was still thinking like, &quot;hmm, feel like it's gonna be really surprising if <code>intersection</code> is the <em>only</em> operation that incurs non-obvious ordering&quot; and &quot;isn't requiring a userland <code>size</code> check for perf still preferable to losing that obviousness?&quot;, but like","msgtype":"m.text"},"m.relates_to":{"event_id":"$VNKPx8T4LD44w8LGhN4JF0QePATN5n7fmu8qoEBfoLk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1677572636541,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$7gDu_u0RRDVIZmXzHjOIF65U9pjuBlSdoiih5VnSmhE"},
{"content":{"body":"I guess it's kind of contradictory for me to say \"well it's a method and not an operator, so it's natural for it not to be commutative\" AND \"you can just check `size` and decide which should be the receiver based on that\"","format":"org.matrix.custom.html","formatted_body":"I guess it's kind of contradictory for me to say &quot;well it's a method and not an operator, so it's natural for it not to be commutative&quot; AND &quot;you can just check <code>size</code> and decide which should be the receiver based on that&quot;","msgtype":"m.text"},"ts":1677572762369,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$C-2x7wF4H8sC9x7JebOMlVnZXWbmePz5rUD65TmvVVE"},
{"content":{"body":"in particular if you had sets like","msgtype":"m.text"},"ts":1677572783266,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$sUqUFmbRKYVllSj_dGReayQ3_R2ftygiT9xQDHmKMZI"},
{"content":{"body":"`everyKindOfFood` and `foodsXLikes` for each of your friends X","format":"org.matrix.custom.html","formatted_body":"<code>everyKindOfFood</code> and <code>foodsXLikes</code> for each of your friends X","msgtype":"m.text"},"ts":1677572915302,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Kp24kXB_Mgk02MIjl7axynbb5CqchnxnIc6SvnlfcqE"},
{"content":{"body":"so it's like `result = everyKindOfFood` and then repeatedly doing `result.intersection(foodsXLikes)`","format":"org.matrix.custom.html","formatted_body":"so it's like <code>result = everyKindOfFood</code> and then repeatedly doing <code>result.intersection(foodsXLikes)</code>","msgtype":"m.text"},"ts":1677572978694,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$1zR4XBeqNnIthu1EGwNz0RIyt36qmQXlkMSkzeRuPlE"}
]