[
{"content":{"body":"shu: it seems like assigning `Symbol.toStringTag` on %Iterator%.prototype (to match the iterator helpers semantics) causes a *huge* deopt for all iterator things in \"whatever version of v8 node is using\". is that something that'd be fixed if i filed an issue? (specifically, the deopt for adding a largely unrelated property to a builtin)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>: it seems like assigning <code>Symbol.toStringTag</code> on %Iterator%.prototype (to match the iterator helpers semantics) causes a <em>huge</em> deopt for all iterator things in \"whatever version of v8 node is using\". is that something that'd be fixed if i filed an issue? (specifically, the deopt for adding a largely unrelated property to a builtin)","msgtype":"m.text"},"ts":1693418630962,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$89fr_KNn6I0WolQ-J6wEDjIu3o0NBQaIBcbG-3xE1WI"},
{"content":{"body":"feel free to file, can take a look and if we decide not too we'll close it with explanation","msgtype":"m.text"},"ts":1693418832525,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mY8E9gdh28-H9uUKbkZUydGr4RQ8QCqlaq-Svd_Hw6c"},
{"content":{"body":" * feel free to file, can take a look and if we decide not to we'll close it with explanation","m.new_content":{"body":"feel free to file, can take a look and if we decide not to we'll close it with explanation","msgtype":"m.text"},"m.relates_to":{"event_id":"$mY8E9gdh28-H9uUKbkZUydGr4RQ8QCqlaq-Svd_Hw6c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1693418909751,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hagyactQTggHbGmaHvM43G-842kG9sgWPzvYrla0KcU"},
{"content":{"body":"why do you think it's `Symbol.toStringTag` that's causing it? AFAIK there's no big deopt hammer (i.e. a \"protector\" in V8 terminology) around that symbol","format":"org.matrix.custom.html","formatted_body":"why do you think it's <code>Symbol.toStringTag</code> that's causing it? AFAIK there's no big deopt hammer (i.e. a \"protector\" in V8 terminology) around that symbol","msgtype":"m.text"},"ts":1693419319273,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$1C7j12LY6V3wKJHUwoJzQbIGShF46LXCLfZe5DxcAn8"},
{"content":{"body":"because i have a package that installs it, i added it as a transitive dep of eslint-plugin-react, and it doubled linting time. when i commented out that installation, the speed was restored","msgtype":"m.text"},"ts":1693423536030,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mEO_P7lG8eoeH9QO2TzoXYzV6JyagUx8fo1hhnOQNNs"},
{"content":{"body":"(npmjs.com/iterator.prototype is the one that installs it, it's used in https://npmjs.com/es-iterator-helpers)","msgtype":"m.text"},"ts":1693423557753,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XJ93Cc6VnayxZ5ulhffOBsOp-0YZy97suQYqhh0J9_4"},
{"content":{"body":"maybe it affects Symbol.iterator lookup because of the \"symbols list\" on the object, or something, i dunno. i'll file it later today, thanks","msgtype":"m.text"},"ts":1693423588653,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6yCJj0uGx3n2aIT124tVH_3VygNg9EkTOps2vGg-gg8"},
{"content":{"body":" * because i have a package that installs it, i added it as a transitive dep of eslint-plugin-react, and it doubled linting time. when i commented out that installation, the speed was restored (note this was even when all usage of es-iterator-helpers was commented out - meaning that merely requiring iterator.prototype which mutates the object triggers the deopt)","m.new_content":{"body":"because i have a package that installs it, i added it as a transitive dep of eslint-plugin-react, and it doubled linting time. when i commented out that installation, the speed was restored (note this was even when all usage of es-iterator-helpers was commented out - meaning that merely requiring iterator.prototype which mutates the object triggers the deopt)","msgtype":"m.text"},"m.relates_to":{"event_id":"$mEO_P7lG8eoeH9QO2TzoXYzV6JyagUx8fo1hhnOQNNs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1693423631799,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Ebp9VzWg6PovQMKpkMfz8F6S_e2EGo1X5STXX_hEoWo"}
]