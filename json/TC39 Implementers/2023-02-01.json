[
{"content":{"body":"so uh","msgtype":"m.text"},"ts":1675217861250,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$GeNt-Cw1N-uJ0SVANStMmDxeBLOiCZjzWg89OsphIss"},
{"content":{"body":"the note in https://tc39.es/proposal-set-methods/#sec-set.prototype.intersection seems kind of surprising, upon attempting implementation","msgtype":"m.text"},"ts":1675217875134,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$UjGgLXXM7OcHgwh5IqjviqD_ffvfNd3la_28WvNtymU"},
{"content":{"body":" * the note in https://tc39.es/proposal-set-methods/#sec-set.prototype.intersection seems kind of surprising, upon attempting implementation","m.new_content":{"body":"the note in https://tc39.es/proposal-set-methods/#sec-set.prototype.intersection seems kind of surprising, upon attempting implementation","msgtype":"m.text"},"m.relates_to":{"event_id":"$UjGgLXXM7OcHgwh5IqjviqD_ffvfNd3la_28WvNtymU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675217890767,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$pcqscqEbWqj7jdQl66ys9nmHWiXBhEWgPmx6dlR73aw"},
{"content":{"body":"because it seems like it's literally saying \"hey V8 and JSC, why don't you redo your existing Set impls to match SM\"","msgtype":"m.text"},"ts":1675217924629,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$JQfSjQHUGLnTGqY-NhuxSJQif3NGYbHSpLJr7XlT3EA"},
{"content":{"body":"given that you're not gonna copy a Set into a new data structure in order to perform an operation on it","msgtype":"m.text"},"ts":1675217988595,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$5Pei5eKP9JbauHzjKyEsRIZ0T3Ef-6Onwzsdpb51bkg"},
{"content":{"body":" * given that copying a Set into a new data structure in order to perform an operation on it is not going to constitute a perf win","m.new_content":{"body":"given that copying a Set into a new data structure in order to perform an operation on it is not going to constitute a perf win","msgtype":"m.text"},"m.relates_to":{"event_id":"$5Pei5eKP9JbauHzjKyEsRIZ0T3Ef-6Onwzsdpb51bkg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675218018107,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$2bG0VyfiRXoN_3_kPo-FzBxRRiQZ-lWSwBPrLyUoLD0"},
{"content":{"body":"I looked into V8's and believed it would work","msgtype":"m.text"},"ts":1675218261359,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m-s4syq3hhEIL1_jHq3gHTj1gEOoGxjc6cvTsFwi7gI"},
{"content":{"body":"ah damn, or maybe not V8","msgtype":"m.text"},"ts":1675218264226,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$xQzfD9kGi6pTysrskFa4dhxS5ytlewNMrIZQwhmTq1o"},
{"content":{"body":"https://github.com/v8/v8/blob/main/src/objects/ordered-hash-table.h#L30-L32","msgtype":"m.text"},"ts":1675218265636,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$A4wQU5K7wNADnRN66omgRavKq6NHKl-sdSswA7ciN9Q"},
{"content":{"body":"in the same way described there","msgtype":"m.text"},"ts":1675218267356,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X_N4OU95-LouwgefOKEc0WSx0Q6hcA7evYMPEcig8os"},
{"content":{"body":"if JSC's doesn't, that's a good data point and we could consider a different sorting option","msgtype":"m.text"},"ts":1675218277437,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SeqZYaMhmUbNlwxeznAz2vkB-1Hyz-EY5F5CucPA7Oo"},
{"content":{"body":"in JSC a Set is a hashmap with a linked list","msgtype":"m.text"},"ts":1675218287652,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$SJS1AnxFHcNq39SsJ-1mjkDa1LHpxT5qFdWKIt-nXfM"},
{"content":{"body":"hm, how does that... work","msgtype":"m.text"},"ts":1675218344009,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-4_CNF4Wp89YVqbVFJHnxChdeCQlDxeeJQ_knL4tN90"},
{"content":{"body":"ah I mean that like, the buckets have a `next()` (and incidentally `prev()`)","format":"org.matrix.custom.html","formatted_body":"ah I mean that like, the buckets have a <code>next()</code> (and incidentally <code>prev()</code>)","msgtype":"m.text"},"ts":1675218376623,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$UW825TxSOfOhq3W5PmZrb0vk6831bUljFhIwC5r5o6U"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1675218398157,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$JP0vB5yCrCnbqoNLrtqkjLSVZWzGWq0mVR-e5UDE9X8"},
{"content":{"body":"but are not contiguous in memory?","msgtype":"m.text"},"ts":1675218405600,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ene48NQJTWEt9hlq-cCX-n4ymd_CSi4DW1TnvfBgP8M"},
{"content":{"body":"yeah exactly","msgtype":"m.text"},"ts":1675218532001,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$feH-DbUESoj4wwVtjA752CSUUNAuANGP01EF4RRmYKA"},
{"content":{"body":"so how does iterator invalidation work? I guess chasing down all the iterators and updating them?","msgtype":"m.text"},"ts":1675218582741,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$miz6akYf2aJWGmbYdGBeaSVlV4pDCkRYpHT-TaA_IfI"},
{"content":{"body":"or not invalidation _per se_ but if you delete an item that an iterator is pointing to","format":"org.matrix.custom.html","formatted_body":"or not invalidation <em>per se</em> but if you delete an item that an iterator is pointing to","msgtype":"m.text"},"ts":1675218596875,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HuBeSEgT0nikGFucOQ5x7pKU1PocsIyGi9sU6qoHyB0"}
]