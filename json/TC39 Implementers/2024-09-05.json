[
{"content":{"body":"joyee: i was trying to understand the different approaches for injecting `__esModule` on `require(esm)` on your pr, and reading through it looked like they were all roughly the same performance? i'd like to just use a proxy if possible, but since you went with the wrapper module approach i wanted to double check it wouldn't be bad in some way i haven't seen mentioned.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@qzhang:igalia.com\">joyee</a>: i was trying to understand the different approaches for injecting <code>__esModule</code> on <code>require(esm)</code> on your pr, and reading through it looked like they were all roughly the same performance? i'd like to just use a proxy if possible, but since you went with the wrapper module approach i wanted to double check it wouldn't be bad in some way i haven't seen mentioned.","m.mentions":{"user_ids":["@qzhang:igalia.com"]},"msgtype":"m.text"},"ts":1725564688373,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$rFVw4bkry_x1LaqTsXfJtnTwHTDrnmwSz1x4u86HD6k"},
{"content":{"body":"The performance difference shows up when you are accessing properties from the returned result, which is relevant for bundled code because they always access it as `const loaded = require('esm');  loaded.prop` instead of caching `const {prop} = require('esm')` (in order to preserve live binding)","format":"org.matrix.custom.html","formatted_body":"The performance difference shows up when you are accessing properties from the returned result, which is relevant for bundled code because they always access it as <code>const loaded = require('esm');  loaded.prop</code> instead of caching <code>const {prop} = require('esm')</code> (in order to preserve live binding)","m.mentions":{},"msgtype":"m.text"},"ts":1725568019240,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$GHIN1sm0c9lt4MroqKxV7S1nIap9H13VNzzR0g779SE"},
{"content":{"body":"https://github.com/nodejs/node/pull/52166#issuecomment-2223998497","m.mentions":{},"msgtype":"m.text"},"ts":1725568055785,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$HgQE5AN-G28cztKbEqVlqgopmD-7hGTB_Yetu1YWFSQ"},
{"content":{"body":"That's the type='access' benchmarks","m.mentions":{},"msgtype":"m.text"},"ts":1725568072118,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$KMfkXUSQ2WF5ZFcEoC7hTP3x20vPaGUHwOwrkpfrJKM"},
{"content":{"body":"For module loading per-se the difference is not too big, the difference lies in property access","m.mentions":{},"msgtype":"m.text"},"ts":1725568163571,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$vOSO0ua9Z-2aJB8SxYYGPNM9YiPn4Y64hdylsRabTHM"},
{"content":{"body":"There are some examples of the code emitted by the transpilers, who are what the `__esModule` thing is for https://github.com/nodejs/node/pull/52166#issuecomment-2145702846","format":"org.matrix.custom.html","formatted_body":"There are some examples of the code emitted by the transpilers, who are what the <code>__esModule</code> thing is for https://github.com/nodejs/node/pull/52166#issuecomment-2145702846","m.mentions":{},"msgtype":"m.text"},"ts":1725568266630,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$Iu7FCzj4S9Wrk8gW7mKKDlgpQf0yOZFTwebknWSpY6o"},
{"content":{"body":"It would be cool if non-enumerable exports are allowed though, the wrapper module makes `__esModule` enumerable, which is a bit annoying","format":"org.matrix.custom.html","formatted_body":"It would be cool if non-enumerable exports are allowed though, the wrapper module makes <code>__esModule</code> enumerable, which is a bit annoying","m.mentions":{},"msgtype":"m.text"},"ts":1725568444634,"senderName":"joyee","senderId":"@qzhang:igalia.com","id":"$wJVRHhrR2tU2LDS8eoveAnUyRCjEKNTznNX6foiYoic"}
]