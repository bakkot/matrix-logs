[
{"content":{"body":"Thank you ljharb for creating this space and welcome interested parties in module loader virtualization. I’ve invited as many handles as I could recognize at a glance and I will try to gather the missing champions and collaborators.","format":"org.matrix.custom.html","formatted_body":"Thank you <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> for creating this space and welcome interested parties in module loader virtualization. I’ve invited as many handles as I could recognize at a glance and I will try to gather the missing champions and collaborators.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Thank you ljharb for creating this space and welcome interested parties in module loader virtualization. I’ve invited as many handles as I could recognize at a glance and I will try to gather the missing champions and collaborators.","mimetype":"text/plain"},{"body":"Thank you <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a> for creating this space and welcome interested parties in module loader virtualization. I’ve invited as many handles as I could recognize at a glance and I will try to gather the missing champions and collaborators.","mimetype":"text/html"}]},"ts":1654489093183,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$GxeOMLoOfVjZ7sskZe6dWXkqMyULyQo9pzcC8UNVcgE"},
{"content":{"body":"By wave of an update, I’m working with the champion group to narrow the focus of the Compartments proposal to just module loader virtualization https://github.com/tc39/proposal-compartments/pull/46","msgtype":"m.text","org.matrix.msc1767.text":"By wave of an update, I’m working with the champion group to narrow the focus of the Compartments proposal to just module loader virtualization https://github.com/tc39/proposal-compartments/pull/46"},"ts":1654489443794,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6SS1zOrYRcJzE6uT2qCF-WC8YJLGqLO5ZFwhShqisaM"},
{"content":{"body":"Specifically in order to present the narrowest profile to the wind. There’s enough interest in the topic and two years of experience vetting the Compartments proposal (stage 1) that it’s time to push for 2.","msgtype":"m.text","org.matrix.msc1767.text":"Specifically in order to present the narrowest profile to the wind. There’s enough interest in the topic and two years of experience vetting the Compartments proposal (stage 1) that it’s time to push for 2."},"ts":1654489575964,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nmUX2Q9g-Hv586qJb_zZHQcsi47PuihjB-KayWOguxE"},
{"content":{"body":"By which I mean I hope to present on behalf of champions and collaborators, not at this plenary, but the next one in July, resources and alignment willing.","msgtype":"m.text","org.matrix.msc1767.text":"By which I mean I hope to present on behalf of champions and collaborators, not at this plenary, but the next one in July, resources and alignment willing."},"ts":1654489666767,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oGho_hQ7z8kPh2BgJ8uPQ2scndS4ENpnH8DWdmnAlyQ"},
{"content":{"body":"I invite Luca Casonato and guybedford (Guy Bedford) specifically because of our mutual interest. Talking with Guy yesterday, there’s substantial overlap between the problems that import reflection seeks to solve https://github.com/tc39/proposal-import-reflection, and the solutions that Compartments provide. And, Compartments I believe solve those problems without needing new syntax (relitigating the original import assertions proposal (import as)), relaxing idempotent import, or complicating cache keys.","format":"org.matrix.custom.html","formatted_body":"I invite <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> and <a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a> specifically because of our mutual interest. Talking with Guy yesterday, there’s substantial overlap between the problems that import reflection seeks to solve https://github.com/tc39/proposal-import-reflection, and the solutions that Compartments provide. And, Compartments I believe solve those problems without needing new syntax (relitigating the original import assertions proposal (import as)), relaxing idempotent import, or complicating cache keys.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I invite Luca Casonato and guybedford (Guy Bedford) specifically because of our mutual interest. Talking with Guy yesterday, there’s substantial overlap between the problems that import reflection seeks to solve https://github.com/tc39/proposal-import-reflection, and the solutions that Compartments provide. And, Compartments I believe solve those problems without needing new syntax (relitigating the original import assertions proposal (import as)), relaxing idempotent import, or complicating cache keys.","mimetype":"text/plain"},{"body":"I invite <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> and <a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a> specifically because of our mutual interest. Talking with Guy yesterday, there’s substantial overlap between the problems that import reflection seeks to solve https://github.com/tc39/proposal-import-reflection, and the solutions that Compartments provide. And, Compartments I believe solve those problems without needing new syntax (relitigating the original import assertions proposal (import as)), relaxing idempotent import, or complicating cache keys.","mimetype":"text/html"}]},"ts":1654489888179,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Qn4HQ3Vc6MApOQuViLU02-71CjaynZYMCMm4VIhUavU"},
{"content":{"body":"I invite Surma because I believe the Compartments design can help inform the conversation about module blocks. One of our goals with Compartments is to create a clear distinction between a StaticModuleRecord and a ModuleDescriptor, which 262 currently conflates. Separating those concerns makes clear to me at least that we should choose whether a module block is reïfied as a StaticModuleRecord or a ModuleDescriptor, the latter containing the former. If a block is a StaticModuleRecord, that suggests easy portability between workers but doesn’t imply a full module specifier or module metadata.","format":"org.matrix.custom.html","formatted_body":"I invite <a href=\"https://matrix.to/#/@surma:matrix.org\">Surma</a> because I believe the Compartments design can help inform the conversation about module blocks. One of our goals with Compartments is to create a clear distinction between a StaticModuleRecord and a ModuleDescriptor, which 262 currently conflates. Separating those concerns makes clear to me at least that we should choose whether a module block is reïfied as a StaticModuleRecord or a ModuleDescriptor, the latter containing the former. If a block is a StaticModuleRecord, that suggests easy portability between workers but doesn’t imply a full module specifier or module metadata.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I invite Surma because I believe the Compartments design can help inform the conversation about module blocks. One of our goals with Compartments is to create a clear distinction between a StaticModuleRecord and a ModuleDescriptor, which 262 currently conflates. Separating those concerns makes clear to me at least that we should choose whether a module block is reïfied as a StaticModuleRecord or a ModuleDescriptor, the latter containing the former. If a block is a StaticModuleRecord, that suggests easy portability between workers but doesn’t imply a full module specifier or module metadata.","mimetype":"text/plain"},{"body":"I invite <a href=\"https://matrix.to/#/@surma:matrix.org\">Surma</a> because I believe the Compartments design can help inform the conversation about module blocks. One of our goals with Compartments is to create a clear distinction between a StaticModuleRecord and a ModuleDescriptor, which 262 currently conflates. Separating those concerns makes clear to me at least that we should choose whether a module block is reïfied as a StaticModuleRecord or a ModuleDescriptor, the latter containing the former. If a block is a StaticModuleRecord, that suggests easy portability between workers but doesn’t imply a full module specifier or module metadata.","mimetype":"text/html"}]},"ts":1654490163402,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1phSiKbPDX3csu1E_mwUPnU8TiKmKAFCiOA2fJDOfu8"},
{"content":{"body":"The Compartments API also cleanly separates module specifier namespaces from module metadata, since we find that import.meta.url in particular must be a host-specific extension, and must be omissible in some hosts.","msgtype":"m.text","org.matrix.msc1767.text":"The Compartments API also cleanly separates module specifier namespaces from module metadata, since we find that import.meta.url in particular must be a host-specific extension, and must be omissible in some hosts."},"ts":1654490223559,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$NGs3_GX2OYOSUu8IMb_7VoZdZUOvy_KqZ7Bryz5hzfU"},
{"content":{"body":"I think that position also clarifies our feelings about some of the design tensions we see in module blocks and look forward to discussing that.","msgtype":"m.text","org.matrix.msc1767.text":"I think that position also clarifies our feelings about some of the design tensions we see in module blocks and look forward to discussing that."},"ts":1654490263412,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$C-0pBJyael8Vwms-N9ZiAAx5qTvTKMDb1FekNaDshzw"}
]