[
{"content":{"body":"Hello ~","msgtype":"m.text"},"ts":1654576141191,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4SrF2-JMf9bOgUdU1AELJu8lGENhHyb00p2cKVZ6alY"},
{"content":{"body":"In the [current](https://github.com/tc39/proposal-compartments/blob/6a180313515f6faec2818dad229e6921109b50f5/README.md) `ThirdPartyStaticModuleRecord` API, the initialize function only receives a `ModuleEnvironmentRecord` (which looks like only containing `import` and `export` bindings). There is no way to access the `globalThis` of the current executing compartment.\n\nLacking this ability make it impossible to compile a ES Module into a `ThirdPartyStaticModuleRecord`.","format":"org.matrix.custom.html","formatted_body":"<p>In the <a href=\"https://github.com/tc39/proposal-compartments/blob/6a180313515f6faec2818dad229e6921109b50f5/README.md\">current</a> <code>ThirdPartyStaticModuleRecord</code> API, the initialize function only receives a <code>ModuleEnvironmentRecord</code> (which looks like only containing <code>import</code> and <code>export</code> bindings). There is no way to access the <code>globalThis</code> of the current executing compartment.</p>\n<p>Lacking this ability make it impossible to compile a ES Module into a <code>ThirdPartyStaticModuleRecord</code>.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"In the [current](https://github.com/tc39/proposal-compartments/blob/6a180313515f6faec2818dad229e6921109b50f5/README.md) `ThirdPartyStaticModuleRecord` API, the initialize function only receives a `ModuleEnvironmentRecord` (which looks like only containing `import` and `export` bindings). There is no way to access the `globalThis` of the current executing compartment.\n\nLacking this ability make it impossible to compile a ES Module into a `ThirdPartyStaticModuleRecord`.","mimetype":"text/plain"},{"body":"<p>In the <a href=\"https://github.com/tc39/proposal-compartments/blob/6a180313515f6faec2818dad229e6921109b50f5/README.md\">current</a> <code>ThirdPartyStaticModuleRecord</code> API, the initialize function only receives a <code>ModuleEnvironmentRecord</code> (which looks like only containing <code>import</code> and <code>export</code> bindings). There is no way to access the <code>globalThis</code> of the current executing compartment.</p>\n<p>Lacking this ability make it impossible to compile a ES Module into a <code>ThirdPartyStaticModuleRecord</code>.</p>\n","mimetype":"text/html"}]},"ts":1654577630131,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$vlMBzRHGO6gxEQBtmnUHK-gq6AU6wCvJxYacXAIbd0U"},
{"content":{"body":"For folks tuning in, Jack is trying to build a no-eval shim for Compartments that precompiles ESM into a bundle.","msgtype":"m.text","org.matrix.msc1767.text":"For folks tuning in, Jack is trying to build a no-eval shim for Compartments that precompiles ESM into a bundle."},"ts":1654579074323,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$01x2wIYwUodFe5edznKK9AwLUnetPvdXoQr7rmoK2cg"},
{"content":{"body":"I assume you’re aware that third-party static-module-records can’t emulate live bindings.","msgtype":"m.text","org.matrix.msc1767.text":"I assume you’re aware that third-party static-module-records can’t emulate live bindings."},"ts":1654579105948,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$saN-4TvCl66jHUD38CFvWNYBI3jFt-auWdvdi6c5wQc"},
{"content":{"body":"Jack Works: Have you looked at https://github.com/endojs/endo/blob/master/packages/compartment-mapper/src/bundle.js","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: Have you looked at https://github.com/endojs/endo/blob/master/packages/compartment-mapper/src/bundle.js","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: Have you looked at https://github.com/endojs/endo/blob/master/packages/compartment-mapper/src/bundle.js","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: Have you looked at https://github.com/endojs/endo/blob/master/packages/compartment-mapper/src/bundle.js","mimetype":"text/html"}]},"ts":1654579170107,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$tL4LlIGHhNetKLnHxAJ-wLZepNcTd3dMlz0D6nLWMyI"},
{"content":{"body":"That uses the SES shim’s static module record to create a bundle. It’s not a complete implementation, but it might be similar to your approach.","msgtype":"m.text","org.matrix.msc1767.text":"That uses the SES shim’s static module record to create a bundle. It’s not a complete implementation, but it might be similar to your approach."},"ts":1654579206187,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FFUTWj1JGVVtScgHnx1tCK8cmp_1idZYFTtM_CO2hSk"},
{"content":{"body":"> <@kriskowal:matrix.org> I assume you’re aware that third-party static-module-records can’t emulate live bindings.\n\nI'm aware that it cannot get the globalThis of the current compartment (it didn't pass as an argument in the initialize function)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$saN-4TvCl66jHUD38CFvWNYBI3jFt-auWdvdi6c5wQc?via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br />I assume you’re aware that third-party static-module-records can’t emulate live bindings.</blockquote></mx-reply>I'm aware that it cannot get the globalThis of the current compartment (it didn't pass as an argument in the initialize function)","m.relates_to":{"m.in_reply_to":{"event_id":"$saN-4TvCl66jHUD38CFvWNYBI3jFt-auWdvdi6c5wQc"}},"msgtype":"m.text"},"ts":1654579207298,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$F8rtJx9vV7PLgt1VWZU2dQdcg3gOc2Hmzar9FemKW8k"},
{"content":{"body":"Yes. My point was tangential to that concern.","msgtype":"m.text","org.matrix.msc1767.text":"Yes. My point was tangential to that concern."},"ts":1654579301513,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$eouIyh6-yRtW8lcL2Uuuko-5HgQSWw92f4k9WP09Sa0"},
{"content":{"body":"I imagine we could thread globalThis into the initialize options bag.","msgtype":"m.text","org.matrix.msc1767.text":"I imagine we could thread globalThis into the initialize options bag."},"ts":1654579317796,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QBzxfLTUe3h5dYMmGrDLAG7aaQvQRVfdQNVS7YzycTU"},
{"content":{"body":"I’m not entirely sure why it’s necessary for your implementation.","msgtype":"m.text","org.matrix.msc1767.text":"I’m not entirely sure why it’s necessary for your implementation."},"ts":1654579353092,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fHK8gN_vpe9ih5_a0pGeuHKb0O6JhM2T1D3bX5Iweqo"},
{"content":{"body":"For example, I write `Math`.","msgtype":"m.text"},"ts":1654579378425,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-y3g7rBhbfQucfclCl_jMhTXuBwEviea4PJiUEL1H8w"},
{"content":{"body":"Oh, I see.","msgtype":"m.text","org.matrix.msc1767.text":"Oh, I see."},"ts":1654579378894,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$180mezXWmStpQkUgrUjT0zrxz1rK2fUvDvrXiLAW-Ds"},
{"content":{"body":"I need to look it up in the current compartment's globalThis ","msgtype":"m.text"},"ts":1654579396079,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qUgZNaJ2JFjwJb1h5V_Y3GXz1OZgNayqeOitHHkgbwo"},
{"content":{"body":"Thanks, I understand. The crux of the issue is that static module records must be reusable between compartments, and the global environment varies from initialization to initialization.","msgtype":"m.text","org.matrix.msc1767.text":"Thanks, I understand. The crux of the issue is that static module records must be reusable between compartments, and the global environment varies from initialization to initialization."},"ts":1654579415453,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$-pjU1C1tKn91J9M83xGA0C1E0P5pOtYBH3sMF00fiO4"},
{"content":{"body":"And those unresolved global variable lookup should be per-compartment","msgtype":"m.text"},"ts":1654579419104,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$aF3ghyoWcongFaGq09wCQB38gExegOXVC-njZMdDbJE"},
{"content":{"body":"So, indeed, we should thread globalThis into the initializer.","msgtype":"m.text","org.matrix.msc1767.text":"So, indeed, we should thread globalThis into the initializer."},"ts":1654579431651,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$cGw5jpvqS-2q5Lh04sqzmDgZfE4tgyzLiGMdD4LL7zY"},
{"content":{"body":"I previously understand ModuleRecordEnvironment as \"an exotic object that is a reification of 'lexical scope(import export bindings) and dynamic scope (globalThis)\" ","msgtype":"m.text"},"ts":1654579511417,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QzwvGLvgGzKClh3hJ7D7p7WO45dnjBABd6c6GH7PQAg"},
{"content":{"body":"But you just clarified that Module environment record does not contain globalThis so I need a new mechanism for this","msgtype":"m.text"},"ts":1654579543491,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Yeyt0q7yBXJhl6WUHrTFjwHDQeyZOOPZsDvjEHs-0iw"},
{"content":{"body":"That is certainly a reasonable design and I’m open to entertaining the idea still. I will make a point to ask Moddable for a clarification about what they did in XS.","msgtype":"m.text","org.matrix.msc1767.text":"That is certainly a reasonable design and I’m open to entertaining the idea still. I will make a point to ask Moddable for a clarification about what they did in XS."},"ts":1654579585809,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$hls47IgfwLfVNEl52MWYhccBKLrQEYgS7x-Xkmb6Wa4"},
{"content":{"body":"But otherwise, whether or not to have module environment record capture global environment record is something we will want engine vendors to motivate.","msgtype":"m.text","org.matrix.msc1767.text":"But otherwise, whether or not to have module environment record capture global environment record is something we will want engine vendors to motivate."},"ts":1654579647190,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$WEr0wuiAyXOiZOCqErtVch1tjgp3Sd86kffjT8hl9x4"},
{"content":{"body":"Oh, module environment record *mustn’t* capture global environment record, because that includes top-level declarations of Script eval. Modules aren’t supposed to see those.","format":"org.matrix.custom.html","formatted_body":"Oh, module environment record <em>mustn’t</em> capture global environment record, because that includes top-level declarations of Script eval. Modules aren’t supposed to see those.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Oh, module environment record *mustn’t* capture global environment record, because that includes top-level declarations of Script eval. Modules aren’t supposed to see those.","mimetype":"text/plain"},{"body":"Oh, module environment record <em>mustn’t</em> capture global environment record, because that includes top-level declarations of Script eval. Modules aren’t supposed to see those.","mimetype":"text/html"}]},"ts":1654579959222,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$grq52DM57QnFEID_Mc4fiKpSDBPtxcV8zPRzkz6Wb8c"},
{"content":{"body":"So either module environment record needs to fall through to properties of globalThis, or we need to thread globalThis into the module initializer.","msgtype":"m.text","org.matrix.msc1767.text":"So either module environment record needs to fall through to properties of globalThis, or we need to thread globalThis into the module initializer."},"ts":1654580004040,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ee4yHfL2PCLYJOG10CjupIhTG_PIoDq7wyDwrBdVvcQ"},
{"content":{"body":"Again, either way is fine with me.","msgtype":"m.text","org.matrix.msc1767.text":"Again, either way is fine with me."},"ts":1654580035951,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Y2TE70yzhjyo6pRPNUtRaglkn0OC24lJ_FBR6Maxb4I"},
{"content":{"body":"And I’ll make a note in the proposal README refresh PR.","msgtype":"m.text","org.matrix.msc1767.text":"And I’ll make a note in the proposal README refresh PR."},"ts":1654580050968,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ZD5tLR2c-f1dTju5wbxgKkykeJbEkVEFlAVFPMJcY0o"},
{"content":{"body":"Aren't decls created in Script either eval-by-eval or on globalThis? ","msgtype":"m.text"},"ts":1654580051275,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$k1tKS2_tDcEFDxXFMpoDUHydLQnBNsmXA1JiezljkyA"},
{"content":{"body":"* Aren't decls created in Script either eval-by-eval or on globalThis? ","m.new_content":{"body":"Aren't decls created in Script either eval-by-eval or on globalThis? ","msgtype":"m.text"},"m.relates_to":{"event_id":"$k1tKS2_tDcEFDxXFMpoDUHydLQnBNsmXA1JiezljkyA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1654580061744,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UOC6ElZD0hELzy_bzqFBArS6B8ZPFPgJuw_mHJVTJ48"},
{"content":{"body":"Yes, that’s true most of the time. 262 does not currently specify the behavior of REPLs.","msgtype":"m.text","org.matrix.msc1767.text":"Yes, that’s true most of the time. 262 does not currently specify the behavior of REPLs."},"ts":1654580078450,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8E5SSuqU1ZuY4TOA_XpUaAjn3g3Qf4oCrDR4TS0TDxk"},
{"content":{"body":"But REPLs persist the “global contour” between evals.","msgtype":"m.text","org.matrix.msc1767.text":"But REPLs persist the “global contour” between evals."},"ts":1654580089809,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$At8DpMrUTe7VYDIYGIi_eMN25NuwEpgsW_IsyTQVQhA"},
{"content":{"body":"Oh I didn't notice REPLs. Does that specified in the language? I thought it was made by implementation for debugging ","msgtype":"m.text"},"ts":1654580133686,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$9kktYbZNIipj-uHmnatk-DZ0gmwCyhtUU8xJLet-b3Q"},
{"content":{"body":"That’s not something I hope to address in Draft 1 but expressly supporting the REPL case in the language would be an obvious thing to add to Compartment.","msgtype":"m.text","org.matrix.msc1767.text":"That’s not something I hope to address in Draft 1 but expressly supporting the REPL case in the language would be an obvious thing to add to Compartment."},"ts":1654580148048,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$DR3o_nFaT7J2qS2RwSDc0hBJnaaKD8VhBipKidFqVOI"},
{"content":{"body":"It’s not specified in the language.","msgtype":"m.text","org.matrix.msc1767.text":"It’s not specified in the language."},"ts":1654580157945,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$L7U2yc7g07qxW0rISVtUhUHqtAaRkQuzaVNdkFU8nNc"},
{"content":{"body":"I'm ok with either, but in a normal ES module, if you import x, then you no longer be able to refer to the global x (globalThis.x is not a direct refer). So if we want to have binding shallow behavior, or you still want to have globalLexicals in the API, I guess making it all in one object will be easier. ","msgtype":"m.text"},"ts":1654580328368,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$P7jaAq7vCwgQhAQY9VwHSKOsahKNdY4VLA3bQSlcfL0"}
]