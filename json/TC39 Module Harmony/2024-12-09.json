[
{"content":{"body":"At plenary, I invited guybedford and MarkM to add ESM Phase Import follow-up to the TG3 docket since that’s a venue we can all converge upon.\n\nMarkM informs us out-of-band that he has a conflict this Wendesday. I will be available to do a warm-up on the topic and may have tentative slides for framing the implications, but this will not be the high-value meeting if you need to optimize your celendar.","format":"org.matrix.custom.html","formatted_body":"<p>At plenary, I invited <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> and MarkM to add ESM Phase Import follow-up to the TG3 docket since that’s a venue we can all converge upon.</p>\n<p>MarkM informs us out-of-band that he has a conflict this Wendesday. I will be available to do a warm-up on the topic and may have tentative slides for framing the implications, but this will not be the high-value meeting if you need to optimize your celendar.</p>\n","m.mentions":{"user_ids":["@guybedford:matrix.org"]},"msgtype":"m.text"},"ts":1733773289161,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$AByrykct5iwyRzNIQAGKa4x3Bdp6uj5hEV4KPK4O9X8"},
{"content":{"body":"I would be happy to start with an informal discussion on the topic, to follow-up with Mark's meeting in due course","m.mentions":{},"msgtype":"m.text"},"ts":1733773639535,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$GIwtSmwQL8f35E5F-WBhlF4ubiuaNMJ2O-9XlYEqMEk"},
{"content":{"body":"I will also be on holiday after this until Jan so maybe we can schedule the main follow-up for Jan 8","m.mentions":{},"msgtype":"m.text"},"ts":1733773711080,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$73dlsdq-4wn8Za2i-X9cSOWUJcjlGlYxbRAJdj2fMcE"},
{"content":{"body":"So it is written","m.mentions":{},"msgtype":"m.text"},"ts":1733773960316,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$wy-7r06GxF0CgFi_YjhXjwbCjRJfXra5eZ6YDQ7tkN4"},
{"content":{"body":"(On the agenda)","m.mentions":{},"msgtype":"m.text"},"ts":1733773970217,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$SXDv1_b4vg4sex2jNJyId8sXST4YOTmP_y4kx6EQ7Ns"},
{"content":{"body":"nicolo-ribaudo: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262?","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1733775101779,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$xensejSDocrvD1QZVD684IT9W1CWVscc-_MSPsdxpnk"},
{"content":{"body":" * nicolo-ribaudo: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262 (factoring it out of HTML).","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262 (factoring it out of HTML).","m.mentions":{},"m.new_content":{"body":"nicolo-ribaudo: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262 (factoring it out of HTML).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I believe an implication of ESM source phase imports merging in at 2.7 is that module sources + a dynamic import give you a capability to obtain the corresponding instance in the current realm. if/when we generalize this to evaluators or compartments, i think the champions will insist that the dynamic import behavior be scoped to the realm, compartment, or evaluators (what i’m calling the cohort). That seems to oblige us to entrain the notion of a realm-specific module map when or before we look at evaluators. Are there other motivations to absorb a module map in 262 (factoring it out of HTML).","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$xensejSDocrvD1QZVD684IT9W1CWVscc-_MSPsdxpnk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733775172908,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$PzpclYU_tt6TS2iF_TU9GSqdN3sFK5M5gBccF0G1J_Q"},
{"content":{"body":"My ideal spec shape would have a URL->source cohort-agnostic map in HTML, and a source->module map in 262","msgtype":"m.text"},"ts":1733775313706,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$mF5d7jY4eW-zRxHnQ2H2g9IHT9Bn7V360cYLZE5Pu2A"},
{"content":{"body":"Because I like leaving as little freedom to hosts as possible, without having to incorporate host-specific concepts in 262 to do so","msgtype":"m.text"},"ts":1733775365749,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY"},
{"content":{"body":"* My ideal spec shape would have a URL->source cohort-agnostic map in HTML, and a source->module per-cohort map in 262","m.new_content":{"body":"My ideal spec shape would have a URL->source cohort-agnostic map in HTML, and a source->module per-cohort map in 262","msgtype":"m.text"},"m.relates_to":{"event_id":"$mF5d7jY4eW-zRxHnQ2H2g9IHT9Bn7V360cYLZE5Pu2A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733775384297,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Tv_Atx_Q9OpQNlllV7uoKlJ3aFPLv19aRuYwm-lkAr8"},
{"content":{"body":"That would work and I agree. What would motivate that refactor?","m.mentions":{},"msgtype":"m.text"},"ts":1733775560655,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$6pcv8WFq1p8GResMTbwrMfIBkjUhCTg9ZYCw5TROhyw"},
{"content":{"body":"Just removing that degree of freedom seems likely to impact likelihood of correctness of frame to frame module source transfer in the implementation of ESM source phase imports as writ, assuming no further changes","m.mentions":{},"msgtype":"m.text"},"ts":1733775662060,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$xkiJV-QgSjM3I12AiaMHAGyL9ISPitkUNi_36ZVdlZ8"},
{"content":{"body":"URL+attribute -> source I imagine","m.mentions":{},"msgtype":"m.text"},"ts":1733775755865,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$lS5QQ-e0aXdXuJMDKUz_oMwcO-7kObwWtYLJf2uJ-N0"},
{"content":{"body":"this change would be potentially observable because it would imply consistently doing the HTTP caching. When we looked into this around the time of import attributes, there was resistance to making that requirement, and an assertion that it was already happening \"in practice\" (due to unspecified things)","m.mentions":{},"msgtype":"m.text"},"ts":1733775796944,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$flHqY_AAV2s7zE8q5LTl60QQG5HRojc4IxQ1sdXr-5o"},
{"content":{"body":"Interesting, that effectively makes Module Source Record the key, based on its own unique identity separate from ModuleSourcesEqual. That sounds like it could work!","m.mentions":{},"m.relates_to":{"event_id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY","is_falling_back":true,"m.in_reply_to":{"event_id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733775818589,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$r4ICXeHOfiJCWNH87K-FrdFb8QT0j2VRElneTBRAkqM"},
{"content":{"body":"it could be a bit finnecky ensuring sources are distinct for distinct URLs though eg same source text for a.js and b.js must be separate Module Source Records seems a bit confusing too...","m.mentions":{},"m.relates_to":{"event_id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY","is_falling_back":true,"m.in_reply_to":{"event_id":"$r4ICXeHOfiJCWNH87K-FrdFb8QT0j2VRElneTBRAkqM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733775872394,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$5kPi7rWSolTO-ZyV_Ia8izcL2bigs6VuS2QJZYAWzI8"},
{"content":{"body":"but because the caching isn't specified anywhere today, engines might feel the need to implement some sort of complicated multithreaded map, which could be expensive","m.mentions":{},"msgtype":"m.text"},"ts":1733775879149,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fJ2YE7C3nMPiRUHuzgJaVtSl5PqbkGYn1W_dKSpfecg"},
{"content":{"body":"Presumably their [[HostDefined]] would be different (because it includes the URL), which explains why they are different records","m.relates_to":{"event_id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY","is_falling_back":true,"m.in_reply_to":{"event_id":"$5kPi7rWSolTO-ZyV_Ia8izcL2bigs6VuS2QJZYAWzI8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733775964258,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dJcNxPQOfPAKYMVp1RDwwY8bHfWCkpSBU0IzDk6RmY4"},
{"content":{"body":"That missing caching is across multiple realms, right? An implementation doesn't need to cache more than today, but they'd need a way to say \"if we had full caching, then these two sources would actually be a single source\". But the proposal as it is today already does that ","msgtype":"m.text"},"ts":1733776049522,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$faKoPJnNm3sQLoSbqhjxI1TCNweR-F_quXf8Suz_GtM"},
{"content":{"body":"yes, across realms (oh yeah that's single-threaded still)","m.mentions":{},"msgtype":"m.text"},"ts":1733776088701,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$gc4sabAryXIo10wO7FdnB6SmHnJBCgfZJCKYobSAxkQ"},
{"content":{"body":"> <@kriskowal:aelf.land> That would work and I agree. What would motivate that refactor?\n\nIs \"I like it\" a strong enough motivation? 😅\n\nAs long as this is entirely editorial, \"it makes the spec behavior and requirements easier to understand\" would be enough hopefully ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$6pcv8WFq1p8GResMTbwrMfIBkjUhCTg9ZYCw5TROhyw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:aelf.land\">@kriskowal:aelf.land</a><br />That would work and I agree. What would motivate that refactor?</blockquote></mx-reply><p>Is &quot;I like it&quot; a strong enough motivation? 😅</p>\n<p>As long as this is entirely editorial, &quot;it makes the spec behavior and requirements easier to understand&quot; would be enough hopefully</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$6pcv8WFq1p8GResMTbwrMfIBkjUhCTg9ZYCw5TROhyw"}},"msgtype":"m.text"},"ts":1733776117025,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$KvlwDrozy3qQasm8wexHRnwK83lnH9LdB9kw8aRYsQ4"},
{"content":{"body":"when does any of this have an observable effect? I guess when sharing the source to another same-origin iframe and observing that import() finds it in the cache?","m.mentions":{},"msgtype":"m.text"},"ts":1733776126512,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PYDbobCrh4MjdeR6dftX9YSDxIaacxa0lkdR9xrnlcs"},
{"content":{"body":"> <@littledan:matrix.org> when does any of this have an observable effect? I guess when sharing the source to another same-origin iframe and observing that import() finds it in the cache?\n\nYes this is the only case where we need to be careful as far as I know","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$PYDbobCrh4MjdeR6dftX9YSDxIaacxa0lkdR9xrnlcs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br />when does any of this have an observable effect? I guess when sharing the source to another same-origin iframe and observing that import() finds it in the cache?</blockquote></mx-reply>Yes this is the only case where we need to be careful as far as I know","m.relates_to":{"m.in_reply_to":{"event_id":"$PYDbobCrh4MjdeR6dftX9YSDxIaacxa0lkdR9xrnlcs"}},"msgtype":"m.text"},"ts":1733776161954,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$oJ4MufOADCKgQpEkX7bp4Kjm8LriRvEPn2yOk-FMxiI"},
{"content":{"body":"The non-identity of namespaces for identical module sources over dynamic import in two frames makes the effect obserevable.","m.mentions":{},"msgtype":"m.text"},"ts":1733776164811,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$aKszoDEP7XZZ0CCQVr2twVmLPd7BkcgUvlRIM0_nEEw"},
{"content":{"body":"this sounds reasonable to me--ultimately, that should key off the host-defined stuff. *but* engines will need to consistently, always cache those responses across realms, and I'm not sure whether they are 100% sure that they are doing this today.","format":"org.matrix.custom.html","formatted_body":"this sounds reasonable to me--ultimately, that should key off the host-defined stuff. <em>but</em> engines will need to consistently, always cache those responses across realms, and I'm not sure whether they are 100% sure that they are doing this today.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$oJ4MufOADCKgQpEkX7bp4Kjm8LriRvEPn2yOk-FMxiI"}},"msgtype":"m.text"},"ts":1733776214605,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$23wi7mjeuu68qiDNRzzYyNnccHbrcdJZSOcv5GIREfk"},
{"content":{"body":"right, also just it executes the code 1 or 2 times","format":"org.matrix.custom.html","formatted_body":"right, also just it executes the code 1 or 2 times","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aKszoDEP7XZZ0CCQVr2twVmLPd7BkcgUvlRIM0_nEEw"}},"msgtype":"m.text"},"ts":1733776246098,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WLjlxML8pTlq9TyLSlXwbq9oM47Ur_k6GQ_c5VwH0RU"},
{"content":{"body":"Do we have consensus in “both houses” that the observable effect I described above is implied by the 262 and web proposals collectively, such that an editorial refactor does not require a round at plenary?","m.mentions":{},"msgtype":"m.text"},"ts":1733776284922,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$Srm4uBEGobQZcL2mAsh_Oejjocd5Mcovvk75RnaYUwc"},
{"content":{"body":"gotcha","m.mentions":{},"m.relates_to":{"event_id":"$FNoTmJ6SSkUI4M2ekIX9IHo5ZthqQeQEeJJntxbjoiY","is_falling_back":true,"m.in_reply_to":{"event_id":"$dJcNxPQOfPAKYMVp1RDwwY8bHfWCkpSBU0IzDk6RmY4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1733776304332,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$HlyMqJm3J29Y9Xkn6btS0gK-59yTEOPlsMmaJe4R-4w"},
{"content":{"body":"It seems 100% editorial to me","m.mentions":{},"msgtype":"m.text"},"ts":1733776381579,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$IlSJr_b96gPlcfqZe_QeY4_yiCG-5_XwprGEYIHkYsg"},
{"content":{"body":"Good. Post-refactor, what key would dynamic import use to distinguish cohorts?","m.mentions":{},"msgtype":"m.text"},"ts":1733776448838,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$O2UsyYhEkrjbcvsnRAu17yBAr2yOETgu16K4YoxxFVQ"},
{"content":{"body":"The map would be per-cohort, and the cohort is captured by the dynamic import itself","msgtype":"m.text"},"ts":1733776473237,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PmYVf-FOWd-8mW5cf7JG9DjUjdya_zjeVn9ar4iODVg"},
{"content":{"body":"which part do you disagree with?","format":"org.matrix.custom.html","formatted_body":"which part do you disagree with?","m.mentions":{"user_ids":["@guybedford:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$IlSJr_b96gPlcfqZe_QeY4_yiCG-5_XwprGEYIHkYsg"}},"msgtype":"m.text"},"ts":1733776496046,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Nh3Kt5zUsakmn4gjMEFVYzfUW-_NZ8nZQfwmwduHF0I"},
{"content":{"body":"> <@littledan:matrix.org> this sounds reasonable to me--ultimately, that should key off the host-defined stuff. *but* engines will need to consistently, always cache those responses across realms, and I'm not sure whether they are 100% sure that they are doing this today.\n\nThey probably can get away with a check inside the dynamic import code to \"be careful\" when the specifier is a source coming from a different realm, and put it in some separate map","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$23wi7mjeuu68qiDNRzzYyNnccHbrcdJZSOcv5GIREfk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br />this sounds reasonable to me--ultimately, that should key off the host-defined stuff. <em>but</em> engines will need to consistently, always cache those responses across realms, and I'm not sure whether they are 100% sure that they are doing this today.</blockquote></mx-reply>They probably can get away with a check inside the dynamic import code to &quot;be careful&quot; when the specifier is a source coming from a different realm, and put it in some separate map","m.relates_to":{"m.in_reply_to":{"event_id":"$23wi7mjeuu68qiDNRzzYyNnccHbrcdJZSOcv5GIREfk"}},"msgtype":"m.text"},"ts":1733776567164,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$P8vIj-HaIS_hfoKU6JYbSUtBe7o-PJgVBWn08BgVZRM"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> The map would be per-cohort, and the cohort is captured by the dynamic import itself\n\nI mean: the compartment/realm/cohort is some spec record with the map in an internal slot","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$PmYVf-FOWd-8mW5cf7JG9DjUjdya_zjeVn9ar4iODVg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br />The map would be per-cohort, and the cohort is captured by the dynamic import itself</blockquote></mx-reply>I mean: the compartment/realm/cohort is some spec record with the map in an internal slot","m.relates_to":{"m.in_reply_to":{"event_id":"$PmYVf-FOWd-8mW5cf7JG9DjUjdya_zjeVn9ar4iODVg"}},"msgtype":"m.text"},"ts":1733776613649,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$O_5BD7VHTapIYxDcrz4saHQotET9pi2BegWZ7NZH4ps"},
{"content":{"body":"The current realm is a parameter of dynamic import. I’d be content with a spec fiction of a single table where the realm participates in a composite key.","m.mentions":{},"msgtype":"m.text"},"ts":1733776636065,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$h1tqmMFPqUZ8DtummT1H86ZOjZZW2dO_Raf-9tIb2qE"},
{"content":{"body":"this sounds not totally trivial to get right","format":"org.matrix.custom.html","formatted_body":"this sounds not totally trivial to get right","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$P8vIj-HaIS_hfoKU6JYbSUtBe7o-PJgVBWn08BgVZRM"}},"msgtype":"m.text"},"ts":1733776666900,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TldOHPgGcuU0uWJq2s_J_xYgwq2fU0cqikGeoCBpjeY"},
{"content":{"body":"That is, if the cohorts are differentiated by the identity of each realm, or any of the other values that co-vary 1:1 with the realm like its corresponding global object, would work fine for every following plan I can imagine.","m.mentions":{},"msgtype":"m.text"},"ts":1733776751159,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$KIcz7zxIvvRtmHcWKhXpLpNqgGzmOe4qIqmzPDZtBzU"},
{"content":{"body":" * That is, if the cohorts are differentiated by the identity of each realm, ~or any of the other values that co-vary 1:1 with the realm like its corresponding global object~, would work fine for every following plan I can imagine.","m.mentions":{},"m.new_content":{"body":"That is, if the cohorts are differentiated by the identity of each realm, ~or any of the other values that co-vary 1:1 with the realm like its corresponding global object~, would work fine for every following plan I can imagine.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$KIcz7zxIvvRtmHcWKhXpLpNqgGzmOe4qIqmzPDZtBzU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733776787268,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$P2-Z1Us7W0vzH0G5hD5pIoYtIRKt_pk272lkzGSqI1Y"},
{"content":{"body":" * That is, if the cohorts are differentiated by the identity of each realm, ~~or any of the other values that co-vary 1:1 with the realm like its corresponding global object~~, would work fine for every following plan I can imagine.","m.mentions":{},"m.new_content":{"body":"That is, if the cohorts are differentiated by the identity of each realm, ~~or any of the other values that co-vary 1:1 with the realm like its corresponding global object~~, would work fine for every following plan I can imagine.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$KIcz7zxIvvRtmHcWKhXpLpNqgGzmOe4qIqmzPDZtBzU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733776794352,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$pYJoPy6VSw5fsFIGEuvFSBxDA4X4qk6qnE77vRMeGQ8"},
{"content":{"body":" * That is, if the cohorts are differentiated by the identity of each realm would work fine for every following plan I can imagine. Edit: I am not so sure of that 1realm:1global correspondence in all possible futures.","m.mentions":{},"m.new_content":{"body":"That is, if the cohorts are differentiated by the identity of each realm would work fine for every following plan I can imagine. Edit: I am not so sure of that 1realm:1global correspondence in all possible futures.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$KIcz7zxIvvRtmHcWKhXpLpNqgGzmOe4qIqmzPDZtBzU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733776837534,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$u_xSeuEBLbewWEALqiUe27goGs3yCybBpGqn4QkB9sc"},
{"content":{"body":" * That is, if the cohorts are differentiated by the identity of each realm would work fine for every following plan I can imagine. Edit: I am not so sure of that 1realm:1cohort:1global correspondence in all possible futures.","m.mentions":{},"m.new_content":{"body":"That is, if the cohorts are differentiated by the identity of each realm would work fine for every following plan I can imagine. Edit: I am not so sure of that 1realm:1cohort:1global correspondence in all possible futures.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$KIcz7zxIvvRtmHcWKhXpLpNqgGzmOe4qIqmzPDZtBzU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733776862440,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$fdSWBpC13o-OGRtM8UlfZrCR8CBw0hK6YhYdNJlckrU"}
]