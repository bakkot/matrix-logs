[
{"content":{"body":"I have a question that come up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","format":"org.matrix.custom.html","formatted_body":"I have a question that come up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have a question that come up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/plain"},{"body":"I have a question that come up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/html"}]},"ts":1657292193048,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$0VNhiPp_gDTgJjCIt8HR7Cb0gv1Q7IA7_KhbLoCXhXE"},
{"content":{"body":" * I have a question that came up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","format":"org.matrix.custom.html","formatted_body":" * I have a question that came up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","m.new_content":{"body":"I have a question that came up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","format":"org.matrix.custom.html","formatted_body":"I have a question that came up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I have a question that came up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/plain"},{"body":"I have a question that came up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0VNhiPp_gDTgJjCIt8HR7Cb0gv1Q7IA7_KhbLoCXhXE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I have a question that came up when thinking about module blocks, and maybe you already thought about it for the `Module` class. When importing in realm B a `Module` created in realm A, do you think that it should be evaluated in realm A or in realm B?\nWith cloning (or re-wrapping its `ModuleSource` in a new `Module`) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/plain"},{"body":" * I have a question that came up when thinking about module blocks, and maybe you already thought about it for the <code>Module</code> class. When importing in realm B a <code>Module</code> created in realm A, do you think that it should be evaluated in realm A or in realm B?<br>With cloning (or re-wrapping its <code>ModuleSource</code> in a new <code>Module</code>) it's obviously in realm B, but with same-domain iframes you can pass an object to another realm without cloning it.","mimetype":"text/html"}]},"ts":1657292208498,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$mTe-5b2c6jIJNEFJmwDwFw2vWbvBZy7E3loplJHI76o"},
{"content":{"body":"The module constructor should have a [[Context]] execution context internal slot that binds it to a realm.","msgtype":"m.text","org.matrix.msc1767.text":"The module constructor should have a [[Context]] execution context internal slot that binds it to a realm."},"ts":1657293584197,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$xEd3A5rJaYxmbQ0o61MbM7OXLZi6ml79EEdL1OdBZF8"},
{"content":{"body":"That would be how we recover the isolation feature for compartments, which are also many-per-realm.","msgtype":"m.text","org.matrix.msc1767.text":"That would be how we recover the isolation feature for compartments, which are also many-per-realm."},"ts":1657293609166,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3PcX8g8n8RY3U1V4TLwYA742u8C7Hzyt14Cw3-i5EYg"},
{"content":{"body":"I believe this is analogous to `Function` constructor.","format":"org.matrix.custom.html","formatted_body":"I believe this is analogous to <code>Function</code> constructor.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I believe this is analogous to `Function` constructor.","mimetype":"text/plain"},{"body":"I believe this is analogous to <code>Function</code> constructor.","mimetype":"text/html"}]},"ts":1657293632959,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Cd4UXRgob38RewJrxDqiHe2HrjmXHMVq8otZkF9qs20"},
{"content":{"body":"Ok yes, thanks üëç It's exactly how functions work.","msgtype":"m.text"},"ts":1657293650691,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$X3-RZT40Y5wKTqVlIDlXaafSuF34HTEdCL-k038dsso"},
{"content":{"body":"Our hope is to carve out a proposal for `ExecutionContext(globalThis, importHook)` that would yield a new set of evaluators, `eval`, `Function`, and `Module`.","format":"org.matrix.custom.html","formatted_body":"Our hope is to carve out a proposal for <code>ExecutionContext(globalThis, importHook)</code> that would yield a new set of evaluators, <code>eval</code>, <code>Function</code>, and <code>Module</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Our hope is to carve out a proposal for `ExecutionContext(globalThis, importHook)` that would yield a new set of evaluators, `eval`, `Function`, and `Module`.","mimetype":"text/plain"},{"body":"Our hope is to carve out a proposal for <code>ExecutionContext(globalThis, importHook)</code> that would yield a new set of evaluators, <code>eval</code>, <code>Function</code>, and <code>Module</code>.","mimetype":"text/html"}]},"ts":1657293685730,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$X_gRviVVhYLuuCXzToJPwdMFucSsbxcfcx9-4yukJjQ"},
{"content":{"body":"Since that‚Äôs the last bit that makes it possible to implement compartments.","msgtype":"m.text","org.matrix.msc1767.text":"Since that‚Äôs the last bit that makes it possible to implement compartments."},"ts":1657293703107,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nbpk3QWcLz7us1Oj0Fdj7QiEr3v-0W6Ny3ZqNyIAq6A"}
]