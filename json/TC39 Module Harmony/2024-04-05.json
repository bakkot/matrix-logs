[
{"content":{"body":"I invited Jake here because he has done a lot of work converting TypeScript to use ESM. There are still some challenges before TS can go \"fully ESM\". \n\nPotentially Joyee/Guy/Nicolo may have some thoughts on this.","format":"org.matrix.custom.html","formatted_body":"<p>I invited Jake here because he has done a lot of work converting TypeScript to use ESM. There are still some challenges before TS can go &quot;fully ESM&quot;.</p>\n<p>Potentially Joyee/Guy/Nicolo may have some thoughts on this.</p>","msgtype":"m.text"},"ts":1712341621326,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$XUdQuVT0xzmBFTfUtOr86SYBF1qJ4L9ua1Totclv-Qw"},
{"content":{"body":"Hello ðŸ™‚","m.mentions":{},"msgtype":"m.text"},"ts":1712341742632,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$HHL2utsWVQ77rgAGc5rd-v0Q3m7QQYYs1q5gCV5lWkg"},
{"content":{"body":"Greetings jakebailey, very interested in your perspective / grievances.","format":"org.matrix.custom.html","formatted_body":"Greetings <a href=\"https://matrix.to/#/@jakebailey:matrix.org\">jakebailey</a>, very interested in your perspective / grievances.","m.mentions":{"user_ids":["@jakebailey:matrix.org"]},"msgtype":"m.text"},"ts":1712341776289,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$7WnXp5yrfxps9XzIN0g8iCNmqkLceUyajErJkxSiLcU"},
{"content":{"body":"Hi jakebailey Rob's mentioned some of your use cases, would be great to discuss further either here or in our weekly meetings if you'd like to join","format":"org.matrix.custom.html","formatted_body":"Hi <a href=\"https://matrix.to/#/@jakebailey:matrix.org\">jakebailey</a> Rob's mentioned some of your use cases, would be great to discuss further either here or in our weekly meetings if you'd like to join","m.mentions":{"user_ids":["@jakebailey:matrix.org"]},"msgtype":"m.text"},"ts":1712341986028,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$tyjcsL-tlrDsxGV6v7zrBt19ttKeec1xJjjgWvLFETc"},
{"content":{"body":"More or less, the issue with switching TS to ESM is that TypeScript has conditional support for Node; we check if we're in Node (or Node-ish), then `require` stuff from Node if possible. This is good because the same bundle can be used for any use case. But, we can't do this in ESM without top-level await because this code can't be asynchronous (besides during load of the module), defeating the awesome \"require ESM works\" case that would allow us to move to ESM-only without breaking downstream CJS users. My thinking was that `import.meta.require` or a new `import.meta.importSync` or `import(..., { sync: true })` could be created to allow synchronous dynamic import of synchronously loadable ESM; as it stands, the only use of \"synchronous ESM\" seems to be require-ing ESM.","format":"org.matrix.custom.html","formatted_body":"More or less, the issue with switching TS to ESM is that TypeScript has conditional support for Node; we check if we're in Node (or Node-ish), then <code>require</code> stuff from Node if possible. This is good because the same bundle can be used for any use case. But, we can't do this in ESM without top-level await because this code can't be asynchronous (besides during load of the module), defeating the awesome \"require ESM works\" case that would allow us to move to ESM-only without breaking downstream CJS users. My thinking was that <code>import.meta.require</code> or a new <code>import.meta.importSync</code> or <code>import(..., { sync: true })</code> could be created to allow synchronous dynamic import of synchronously loadable ESM; as it stands, the only use of \"synchronous ESM\" seems to be require-ing ESM.","m.mentions":{},"msgtype":"m.text"},"ts":1712342617864,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$p_mhEZYiRRHsBKLiYCqeM2l6QoJ-z-q_wTGSwl9zH6g"},
{"content":{"body":"It's theoretically possible to do this with import mappings, but that has a bunch of bad knock-on effects for our build, plus the fact that it may exclude downstream consumers who polyfill or aren't actually Node","m.mentions":{},"msgtype":"m.text"},"ts":1712342797679,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$wL4gdrZvQibPE6b1BTziGJHimZUW2_p0WMHnDnFrwfY"},
{"content":{"body":"This was one of the motivations for top-level await to make these workflows easier. I'm curious what the issue is with relying on it? import sync is a great discussion point, I suppose the important question there is whether or not you expect to synchronously load arbitrary modules in Node.js through this mechanism or just the builtin host APIs or already-loaded code","m.mentions":{},"msgtype":"m.text"},"ts":1712342801566,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$3fZ4Rt2ToZZLfwQubbySY1w6e9BHSPPi55ojFD-11zg"},
{"content":{"body":"TLA prevents require of ESM, so we'd sooner stay CJS because most of the TS ecosystem is CJS.","m.mentions":{},"msgtype":"m.text"},"ts":1712342835331,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$iWkadGaKF0agHOx0RBiqkYYwdyVpwXJdkHD7SpsFi6U"},
{"content":{"body":"most tools these days support package imports conditions as well","m.mentions":{},"msgtype":"m.text"},"ts":1712342856160,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$IjKiBahDBMsSbMOINUgj39-5YQlJHI5xG7OEmnQvBEI"},
{"content":{"body":"This is all relating to Joyee's change to Node, which would typically mean that an ESM only project would be usable in CJS via require","m.mentions":{},"msgtype":"m.text"},"ts":1712342876365,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$Ei5W6GGJ7wcTCeb6ZqYPj5jNj8vF_WAiEYPrjLs5btE"},
{"content":{"body":"it sounds like your major pressure is on import sync then yes, in which case it would be interesting to hear what modules you expect the import to work for","m.mentions":{},"msgtype":"m.text"},"ts":1712342899131,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$CPPTtu3CckIhLjV-O7U4ingUWoiA0by9ebP0RpdiDAY"},
{"content":{"body":"Also curious how we would square this with TS-to-ESM on the web.","m.mentions":{},"msgtype":"m.text"},"ts":1712342962247,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$SyglPRs_2Jwq4sfdXDD4nvrfnvYBMC4yQG2fEM2icds"},
{"content":{"body":"Well, for us, it's just like `require(\"fs\")` and so on; but I think there's a more general question about \"if there's now a very clear set of sync-loadable ESM code, isn't it nice for anyone to be able to load that sync too?\"","format":"org.matrix.custom.html","formatted_body":"Well, for us, it's just like <code>require(\"fs\")</code> and so on; but I think there's a more general question about \"if there's now a very clear set of sync-loadable ESM code, isn't it nice for anyone to be able to load that sync too?\"","m.mentions":{},"msgtype":"m.text"},"ts":1712342966080,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$hDfUJdJ8HJWbKqFsY-7WCZwGBuahbQbD_OQjwmGEMvM"},
{"content":{"body":"Moddable XS also has a sync import but it only is expected to work for no-TLA subgraphs that have already been loaded.","m.mentions":{},"msgtype":"m.text"},"ts":1712343018046,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$HOmLBqSeFSH6BVg52RU_unPYd1lC2L3tfcEkBQlfdIE"},
{"content":{"body":"And IIRC there are some ongoing module related proposals that also require sync ESM, and even a proposal to have a prologue to assert that","m.mentions":{},"msgtype":"m.text"},"ts":1712343020272,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$4lEA0rNXnctUBVy73u_NBJsqFO8I55FbqCSnUp757cE"},
{"content":{"body":"Yes, there is a proposal for asserting a no-TLA subgraph, and also a proposal (deferred export evaluation) that under the same circumstances synchronously export pre-loaded no-TLA subgraphs.","m.mentions":{},"msgtype":"m.text"},"ts":1712343088160,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$KAvDigsMIi2jg5MEzDBsoxoZOWnh660D_lcU2oZ5C0M"},
{"content":{"body":"Yeah. So on one hand, I'd be happy with `import.meta.require` being re-proposed, especially now that Node has `import.meta.dirname` and such, but there's the more general solution too!","format":"org.matrix.custom.html","formatted_body":"Yeah. So on one hand, I'd be happy with <code>import.meta.require</code> being re-proposed, especially now that Node has <code>import.meta.dirname</code> and such, but there's the more general solution too!","m.mentions":{},"msgtype":"m.text"},"ts":1712343146632,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$vwOI6i9CdYHwF4Piiow6Ahc1z2aIBaZz5Xg75NbnxiA"},
{"content":{"body":"Itâ€™s not hard to imagine an `import.now` proposal that would work under the same limitations.","format":"org.matrix.custom.html","formatted_body":"Itâ€™s not hard to imagine an <code>import.now</code> proposal that would work under the same limitations.","m.mentions":{},"msgtype":"m.text"},"ts":1712343153898,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$jXzjcB8TBOCUrOIT4qrXos1LPt66YtHjTc97qMCkzRU"},
{"content":{"body":"this is a good discussion topic, I'd suggest we bring it up in our next meeting if you'd like to join","m.mentions":{},"msgtype":"m.text"},"ts":1712343191386,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$0NfKfmhSwuzV6mScomGVUaT2pw_uz1AhyfUABPwD8Ks"},
{"content":{"body":"`import.meta.dirname`, `import.meta.filename`, `import.meta.resolve`, and `import.meta.require` are all difficult to generalize beyond host-specific bottlenecks for interoperability.","format":"org.matrix.custom.html","formatted_body":"<code>import.meta.dirname</code>, <code>import.meta.filename</code>, <code>import.meta.resolve</code>, and <code>import.meta.require</code> are all difficult to generalize beyond host-specific bottlenecks for interoperability.","m.mentions":{},"msgtype":"m.text"},"ts":1712343205272,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$WWIe7MboVD0AnK1rzb-J1q-f4VOD9FPRkUHH7s1ia-Q"},
{"content":{"body":"The meeting is this one - https://www.google.com/calendar/event?eid=c2luNm9jcm4wbTJyNXNxY2JkbGZtdmdwZWNfMjAyNDA0MThUMTUwMDAwWiAzN2EyMTA3ZGZmMTUxOTNiNDJmZmZhMDkxYmM5OTkxNjU2OTVkNDNiN2U0ZjQzYjY1ZWFiMDkzZGEyNzU3YTNhQGc&ctz=America/Chicago","m.mentions":{},"msgtype":"m.text"},"ts":1712343225671,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$VmuZa312WGIF5INEIM9ZTVIIzogxhYSaL34VgDJga0A"},
{"content":{"body":"I'll add that to my calendar ðŸ™‚","m.mentions":{},"msgtype":"m.text"},"ts":1712343235466,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$mOZcRLkbiU8lZNQYZdP1kqGLYpGQTZ4Dm3wB-DwEmfE"},
{"content":{"body":"But, `import.now` does generalize.","format":"org.matrix.custom.html","formatted_body":"But, <code>import.now</code> does generalize.","m.mentions":{},"msgtype":"m.text"},"ts":1712343242498,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$_y0c5w0FP4Kzb7VqOKLgppMfKvOENpn12gkwMKnwMyA"},
{"content":{"body":"I also remember some oddies in Workers too where a sync import would be beneficial, though I'm leaving my sphere of knowledge ðŸ˜„","m.mentions":{},"msgtype":"m.text"},"ts":1712343293293,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$WzVjg7WPYdUiSsMhhaPi-Gajt5tF6pu-UiR0Qw45fJY"},
{"content":{"body":"it's worth thinking carefully about what the real use cases are though","m.mentions":{},"msgtype":"m.text"},"ts":1712343373511,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$xwLW7QrQlPyxlE35LwN4KeJlvHuGTLzv3szOWz0PevY"},
{"content":{"body":"as opposed to \"it might be nice\"","m.mentions":{},"msgtype":"m.text"},"ts":1712343380560,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$kMbu3fJ5d2uusNedkx0G-PAbOi2YRO-ktDQOQNY8ZIA"},
{"content":{"body":"there's a big distinction between host apis / a registry cache getter and full sync graph loading as well","m.mentions":{},"msgtype":"m.text"},"ts":1712343399184,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$OywnGUBiPBkuyOJJQMnxmBjNg-BMmqJkMAHZ_Bt2STA"},
{"content":{"body":"so if we want to solve the full sync graph loading problems (which are hard, because network), it's important to justify that","m.mentions":{},"msgtype":"m.text"},"ts":1712343421779,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$O93cXFJ5hCfWImQx5riaA2xihFMmnokoxbOTVfUj3jI"},
{"content":{"body":"hard in the sense of, how should it work and how should it error, not how should we syncify the network of course","m.mentions":{},"msgtype":"m.text"},"ts":1712343448519,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$VQQ-_Yh4wrC42uscFroURfkQ-Hlh2sf97UKzbg0piYQ"},
{"content":{"body":" * I also remember some oddities in Workers too where a sync import would be beneficial, though I'm leaving my sphere of knowledge ðŸ˜„","m.mentions":{},"m.new_content":{"body":"I also remember some oddities in Workers too where a sync import would be beneficial, though I'm leaving my sphere of knowledge ðŸ˜„","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WzVjg7WPYdUiSsMhhaPi-Gajt5tF6pu-UiR0Qw45fJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712343493416,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$QPgip1rDmf4r26PzboLo5GAnjxQZiVwdEl0he6NVklk"},
{"content":{"body":"there's definitely some interesting framings in which a sync import can work though, so it would be great to have a chance to discuss the use cases and viability","m.mentions":{},"msgtype":"m.text"},"ts":1712343631816,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$S2i2zUzbk8oLPCOHPbqATHRujGFClP8_WJ_TIm9EwjE"}
]