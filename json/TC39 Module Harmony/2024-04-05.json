[
{"content":{"body":"I invited Jake here because he has done a lot of work converting TypeScript to use ESM. There are still some challenges before TS can go \"fully ESM\". \n\nPotentially Joyee/Guy/Nicolo may have some thoughts on this.","format":"org.matrix.custom.html","formatted_body":"<p>I invited Jake here because he has done a lot of work converting TypeScript to use ESM. There are still some challenges before TS can go &quot;fully ESM&quot;.</p>\n<p>Potentially Joyee/Guy/Nicolo may have some thoughts on this.</p>","msgtype":"m.text"},"ts":1712341621326,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$XUdQuVT0xzmBFTfUtOr86SYBF1qJ4L9ua1Totclv-Qw"},
{"content":{"body":"Hello ðŸ™‚","m.mentions":{},"msgtype":"m.text"},"ts":1712341742632,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$HHL2utsWVQ77rgAGc5rd-v0Q3m7QQYYs1q5gCV5lWkg"},
{"content":{"body":"Greetings jakebailey, very interested in your perspective / grievances.","format":"org.matrix.custom.html","formatted_body":"Greetings <a href=\"https://matrix.to/#/@jakebailey:matrix.org\">jakebailey</a>, very interested in your perspective / grievances.","m.mentions":{"user_ids":["@jakebailey:matrix.org"]},"msgtype":"m.text"},"ts":1712341776289,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$7WnXp5yrfxps9XzIN0g8iCNmqkLceUyajErJkxSiLcU"},
{"content":{"body":"Hi jakebailey Rob's mentioned some of your use cases, would be great to discuss further either here or in our weekly meetings if you'd like to join","format":"org.matrix.custom.html","formatted_body":"Hi <a href=\"https://matrix.to/#/@jakebailey:matrix.org\">jakebailey</a> Rob's mentioned some of your use cases, would be great to discuss further either here or in our weekly meetings if you'd like to join","m.mentions":{"user_ids":["@jakebailey:matrix.org"]},"msgtype":"m.text"},"ts":1712341986028,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$tyjcsL-tlrDsxGV6v7zrBt19ttKeec1xJjjgWvLFETc"},
{"content":{"body":"More or less, the issue with switching TS to ESM is that TypeScript has conditional support for Node; we check if we're in Node (or Node-ish), then `require` stuff from Node if possible. This is good because the same bundle can be used for any use case. But, we can't do this in ESM without top-level await because this code can't be asynchronous (besides during load of the module), defeating the awesome \"require ESM works\" case that would allow us to move to ESM-only without breaking downstream CJS users. My thinking was that `import.meta.require` or a new `import.meta.importSync` or `import(..., { sync: true })` could be created to allow synchronous dynamic import of synchronously loadable ESM; as it stands, the only use of \"synchronous ESM\" seems to be require-ing ESM.","format":"org.matrix.custom.html","formatted_body":"More or less, the issue with switching TS to ESM is that TypeScript has conditional support for Node; we check if we're in Node (or Node-ish), then <code>require</code> stuff from Node if possible. This is good because the same bundle can be used for any use case. But, we can't do this in ESM without top-level await because this code can't be asynchronous (besides during load of the module), defeating the awesome \"require ESM works\" case that would allow us to move to ESM-only without breaking downstream CJS users. My thinking was that <code>import.meta.require</code> or a new <code>import.meta.importSync</code> or <code>import(..., { sync: true })</code> could be created to allow synchronous dynamic import of synchronously loadable ESM; as it stands, the only use of \"synchronous ESM\" seems to be require-ing ESM.","m.mentions":{},"msgtype":"m.text"},"ts":1712342617864,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$p_mhEZYiRRHsBKLiYCqeM2l6QoJ-z-q_wTGSwl9zH6g"}
]