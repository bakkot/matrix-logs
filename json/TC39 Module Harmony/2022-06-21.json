[
{"content":{"body":"hi all","msgtype":"m.text","org.matrix.msc1767.text":"hi all"},"ts":1655827344834,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BxvVWPNRnMHqmI_AfDz0Qeym7DTyJ1KhNdt8xZvd4Oc"},
{"content":{"body":"I’m in the lobby https://meet.google.com/row-whjm-rpn","msgtype":"m.text","org.matrix.msc1767.text":"I’m in the lobby https://meet.google.com/row-whjm-rpn"},"ts":1655827346969,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3INsYXcBz5QqFBRjbwFYP4vZkGrDoTbd0vAjA1ETB20"},
{"content":{"body":"+1","msgtype":"m.text","org.matrix.msc1767.text":"+1"},"ts":1655827359701,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Y51N2Hc0hFk5vGI60MP6ETHRskz1MT4QYecitruA7nQ"},
{"content":{"body":"Not sure whether this is the venue, shu ","format":"org.matrix.custom.html","formatted_body":"Not sure whether this is the venue, <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Not sure whether this is the venue, shu ","mimetype":"text/plain"},{"body":"Not sure whether this is the venue, <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>","mimetype":"text/html"}]},"ts":1655827362646,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mj21NIWw5te1TBzXuwtnBme3KrNtoJ-3zcOCIHCm1ZE"},
{"content":{"body":"me too, waiting to get in","msgtype":"m.text","org.matrix.msc1767.text":"me too, waiting to get in"},"ts":1655827369657,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0ICMZBLhZqRMcxeyp6CcVPcM-jL5UtuEW-U6lvzCgaU"},
{"content":{"body":"I'm in there too","msgtype":"m.text","org.matrix.msc1767.text":"I'm in there too"},"ts":1655827373974,"senderName":"naugtur","senderId":"@naugtur:matrix.org","id":"$6bySIqoSgJ5gLd7nL3ZMuxuQXsrquVLxfRYjIaa6L20"},
{"content":{"body":"Kris, excellent slides","msgtype":"m.text","org.matrix.msc1767.text":"Kris, excellent slides"},"ts":1655827381739,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s73nZi_2mRENlXq2js_mnswCc734uKJNX9OpXjZrFuY"},
{"content":{"body":"I'm still waiting to be let in","msgtype":"m.text","org.matrix.msc1767.text":"I'm still waiting to be let in"},"ts":1655827403791,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$4FpypZAazCO3j5LCyswQNESes5wB5moSxdYNG4378j0"},
{"content":{"body":"Great, fi was shooting for “bad”","msgtype":"m.text","org.matrix.msc1767.text":"Great, fi was shooting for “bad”"},"ts":1655827407684,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oeGVkyH9Bg42fsf236A4vG3bTck1rp4fhIj3IrXfbQI"},
{"content":{"body":"sorry, previous meeting ran over, omw","msgtype":"m.text","org.matrix.msc1767.text":"sorry, previous meeting ran over, omw"},"ts":1655827415507,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8FkR2INg5q_sFfdNFqi-Hzq1S2a377h7YI0X8opmPo8"},
{"content":{"body":"If you are in the waiting room, maybe try rejoin?","msgtype":"m.text","org.matrix.msc1767.text":"If you are in the waiting room, maybe try rejoin?"},"ts":1655827782250,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$U60X0E28rPxjeO3biVR7G-SVPBqggBpQXytA3QcVg68"},
{"content":{"body":"yulia: still around?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: still around?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: still around?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: still around?","mimetype":"text/html"}]},"ts":1655832352616,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nGtGKpVL-vzqcZgNns6Ns0RVDtIj5XM-rs9ZWFVIUcU"},
{"content":{"body":"can you join the meet again rq? i can't add a co-host via the calendar configuration dialogs for some reason, i wonder if i need to do it within the call itself","msgtype":"m.text","org.matrix.msc1767.text":"can you join the meet again rq? i can't add a co-host via the calendar configuration dialogs for some reason, i wonder if i need to do it within the call itself"},"ts":1655832381141,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5mfYi3QZE-pTgBcNZXtbaobn4_88fcDbKluEmMZEcvs"},
{"content":{"body":"yes","msgtype":"m.text","org.matrix.msc1767.text":"yes"},"ts":1655832389823,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Kka4ZPCCm4imoQYDNycTEKXE9utq5E5zrM5XmE91zWE"},
{"content":{"body":"okay, i'm off the call now, see if you can rejoin without me being there","msgtype":"m.text","org.matrix.msc1767.text":"okay, i'm off the call now, see if you can rejoin without me being there"},"ts":1655832444283,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KbgC_u_hPrn7hlTpl2dYiysM3ehpalKJrZ5yUcd42A8"},
{"content":{"body":"it forces me to request again","msgtype":"m.text","org.matrix.msc1767.text":"it forces me to request again"},"ts":1655832450758,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ajKsFuexYMD7uEeXpPvTSp6_xhXJ1xS84KDsVVp333A"},
{"content":{"body":"so i can't enter without you","msgtype":"m.text","org.matrix.msc1767.text":"so i can't enter without you"},"ts":1655832453857,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$ADg0ji0lnaNtjwa-WxcsEJwpq7nCsK8jkW6-dbf_6jE"},
{"content":{"body":"hmm","msgtype":"m.text","org.matrix.msc1767.text":"hmm"},"ts":1655832454365,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$u4-h4PUTFnlVIVpMvOXkk0HNzb9Y2VkPQTWHrUXZc40"},
{"content":{"body":"If I remember correctly, people invited to the calendar event can join without permission. It's not ideal, but we can start by inviting all the people that were present today","msgtype":"m.text","org.matrix.msc1767.text":"If I remember correctly, people invited to the calendar event can join without permission. It's not ideal, but we can start by inviting all the people that were present today"},"ts":1655832529131,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$0cmY_0qhHSok-BqADmVCfxjBDbn9z5L7DRiQyzVP-Ms"},
{"content":{"body":"leo reported being able to join without waiting in the lobby","msgtype":"m.text","org.matrix.msc1767.text":"leo reported being able to join without waiting in the lobby"},"ts":1655832563790,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CHwBQTGbN5XrX-T9u3Wb3ls67_UPCWYYQfxX-rg_i1o"},
{"content":{"body":"Leo was one of the people invited on calendar","msgtype":"m.text","org.matrix.msc1767.text":"Leo was one of the people invited on calendar"},"ts":1655832597751,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$iPfnnk7L_Vg6kcjy5AInErumSroB8RqE2jdo_y_ZKp4"},
{"content":{"body":"uhhhh","msgtype":"m.text","org.matrix.msc1767.text":"uhhhh"},"ts":1655832608436,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$quy-J4esf1tr915NCu1En8-e3u2j058vc8anVI5HaYY"},
{"content":{"body":"it still doesnt work","msgtype":"m.text","org.matrix.msc1767.text":"it still doesnt work"},"ts":1655832610888,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$9TBp4J_Of9xllqkQUEIeCZQu2qFzpzsV1NrgeGd6CyY"},
{"content":{"body":"oops, forgot to save","msgtype":"m.text","org.matrix.msc1767.text":"oops, forgot to save"},"ts":1655832611613,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$o9s89ee7dapC7Ke_HlunB-E_WB2eFE3jh_6r2MYGRQc"},
{"content":{"body":"sorry try again","msgtype":"m.text","org.matrix.msc1767.text":"sorry try again"},"ts":1655832615004,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CmYFG4QXef8IVsBSy3nFUsVBuckIQh0APt-DiZ7R0ZE"},
{"content":{"body":"ahaha","msgtype":"m.text","org.matrix.msc1767.text":"ahaha"},"ts":1655832616162,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$KklEOH7tdK-uf_eWDcLIPaL2OCh_YFviRffT8sH78DQ"},
{"content":{"body":"\\o/ it works","format":"org.matrix.custom.html","formatted_body":"\\o/ it works","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"\\o/ it works","mimetype":"text/plain"},{"body":"\\o/ it works","mimetype":"text/html"}]},"ts":1655832630929,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$i_ja2764yINyLvY23XiEYpwWNgkbOponGA9gs6bxW2s"},
{"content":{"body":"okay great, it should also let you admit other people next time","msgtype":"m.text","org.matrix.msc1767.text":"okay great, it should also let you admit other people next time"},"ts":1655832652929,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8-FXyjV3QQnVRwKBN6RXf4f_CcK1WyC_M-aC-jV_W0A"},
{"content":{"body":"thanks for testing","msgtype":"m.text","org.matrix.msc1767.text":"thanks for testing"},"ts":1655832654874,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3I0Osm4e3-Gi7r9EdicQe2E_iMrmh8EqFpNCncYA1wM"},
{"content":{"body":"for next time: Yulia, Kris, Dan, and Jack Works are co-hosts and can admit other folks","msgtype":"m.text","org.matrix.msc1767.text":"for next time: Yulia, Kris, Dan, and Jack Works are co-hosts and can admit other folks"},"ts":1655832764795,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$sxLa5Oe6skR0htliVFBXPkg5w-37gJ6nESLmW8PaiHA"},
{"content":{"body":"also, just realized, next meeting falls on US 4th of July holiday","msgtype":"m.text","org.matrix.msc1767.text":"also, just realized, next meeting falls on US 4th of July holiday"},"ts":1655832823745,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BwMXIoQhUTqdcG1hGrIfEvVPu_Ej45FlhySBGK8Bbp8"},
{"content":{"body":"any conflicts for same time on Wed, Jul 6?","msgtype":"m.text","org.matrix.msc1767.text":"any conflicts for same time on Wed, Jul 6?"},"ts":1655832836488,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$AwiVd_rsk-iBwqtkMMBDsvduxAI9YcHayLKfynCuUz0"},
{"content":{"body":"There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h","msgtype":"m.text","org.matrix.msc1767.text":"There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h"},"ts":1655832896651,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$qBf5YFjAwfCC7d4zW3xlet3fZZatbCLdA9WDjc7npx8"},
{"content":{"body":"i see that, yes, though given all the SES folks are here and this is also top-of-mind for them, perhaps it'd be fine","msgtype":"m.text","org.matrix.msc1767.text":"i see that, yes, though given all the SES folks are here and this is also top-of-mind for them, perhaps it'd be fine"},"ts":1655832935672,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uWT2SkeZxviXuQ2TRYleQsBwi7IgnGYJyYfTL3iTAC8"},
{"content":{"body":"You mean 5th of July right?","msgtype":"m.text","org.matrix.msc1767.text":"You mean 5th of July right?"},"ts":1655832969686,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$_yxT11UCCrQ94XIA7QD-a2OVAisaTce8mcT52otpyDs"},
{"content":{"body":"i mean 6th of July","msgtype":"m.text","org.matrix.msc1767.text":"i mean 6th of July"},"ts":1655832998923,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Qsy-bsq9r5ZICq4H4BXdRL7637V_MCtps9l-EuWJRvQ"},
{"content":{"body":"4th and 5th are both holidays","msgtype":"m.text","org.matrix.msc1767.text":"4th and 5th are both holidays"},"ts":1655833002621,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mQhlDFZ5-HJkMcNJXnRuAE-8q-UeFNwU2kjS0tSYI-g"},
{"content":{"body":"at least it is at Google","msgtype":"m.text","org.matrix.msc1767.text":"at least it is at Google"},"ts":1655833021438,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Q24e3GTvzceApZuG15ExUGQoYeuHmecmhaaI8rHYIgE"},
{"content":{"body":"ah gotcha, consolidating may well be an option for that one then","msgtype":"m.text","org.matrix.msc1767.text":"ah gotcha, consolidating may well be an option for that one then"},"ts":1655833026041,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$BuWBtTATxUMpY4tui6-sB6ACjfcK4lAFs1s3cZKEmqI"},
{"content":{"body":"if it's just me i can just skip the next call, Yulia is running it anyhow","msgtype":"m.text","org.matrix.msc1767.text":"if it's just me i can just skip the next call, Yulia is running it anyhow"},"ts":1655833028947,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Bg3uQ3N5coJokw3QzbsMWSSVpxsof2PZ4LPY4DJVVcA"},
{"content":{"body":"sure","msgtype":"m.text","org.matrix.msc1767.text":"sure"},"ts":1655833044063,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Iaaz4jtQ4e4ZJPtN6cYn6c--AecPTeA3fgsYCTgmzLs"},
{"content":{"body":"Your call - not sure how many people won't be able to make the 5th? I can do either day.","msgtype":"m.text","org.matrix.msc1767.text":"Your call - not sure how many people won't be able to make the 5th? I can do either day."},"ts":1655833231463,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$nLbw9uxJQszMumXSqSxJdb2oeBR_4LRkbpRwXOtHerU"},
{"content":{"body":"i'd like to not create any pressure for US-based folks so i'd prefer moving it to the 6th","msgtype":"m.text","org.matrix.msc1767.text":"i'd like to not create any pressure for US-based folks so i'd prefer moving it to the 6th"},"ts":1655833530073,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0ZhIAYhNKv0bS7gNR-N_eN8TK30dhUCX31lz2GJjrRg"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h\n\nWe’ll deconvene the SES meeting if a Compartments meeting overlaps.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$qBf5YFjAwfCC7d4zW3xlet3fZZatbCLdA9WDjc7npx8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h</blockquote></mx-reply>We’ll deconvene the SES meeting if a Compartments meeting overlaps.","m.relates_to":{"m.in_reply_to":{"event_id":"$qBf5YFjAwfCC7d4zW3xlet3fZZatbCLdA9WDjc7npx8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@nicolo-ribaudo:matrix.org> There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h\n\nWe’ll deconvene the SES meeting if a Compartments meeting overlaps.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$qBf5YFjAwfCC7d4zW3xlet3fZZatbCLdA9WDjc7npx8?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>There is the SES meeting that starts one hour after te modules one, it might be a problem if we do 1:30h</blockquote></mx-reply>We’ll deconvene the SES meeting if a Compartments meeting overlaps.","mimetype":"text/html"}]},"ts":1655833756339,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$PMe1woikC1VpZv0Jzw31v1r4_UDdktXk8vvtLQlMC3U"},
{"content":{"body":"That is actually our preference.","msgtype":"m.text","org.matrix.msc1767.text":"That is actually our preference."},"ts":1655833762078,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$OBzu2UcW7CuTo7YsxFx-IceyHUcheigOMSboerlP7gk"},
{"content":{"body":"Speaking of which, we’d previously built a SES meeting agenda tomorrow for guybedford to join us and hash out what a VirtualStaticModuleRecord for WASM would concretely look like. The artifact would be an example PR for the Compartment proposal. I’m inclined to keep that on the docket and use the PR to sync with this interest group, if there are no objections.","format":"org.matrix.custom.html","formatted_body":"Speaking of which, we’d previously built a SES meeting agenda tomorrow for <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> to join us and hash out what a VirtualStaticModuleRecord for WASM would concretely look like. The artifact would be an example PR for the Compartment proposal. I’m inclined to keep that on the docket and use the PR to sync with this interest group, if there are no objections.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Speaking of which, we’d previously built a SES meeting agenda tomorrow for guybedford to join us and hash out what a VirtualStaticModuleRecord for WASM would concretely look like. The artifact would be an example PR for the Compartment proposal. I’m inclined to keep that on the docket and use the PR to sync with this interest group, if there are no objections.","mimetype":"text/plain"},{"body":"Speaking of which, we’d previously built a SES meeting agenda tomorrow for <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> to join us and hash out what a VirtualStaticModuleRecord for WASM would concretely look like. The artifact would be an example PR for the Compartment proposal. I’m inclined to keep that on the docket and use the PR to sync with this interest group, if there are no objections.","mimetype":"text/html"}]},"ts":1655833909690,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3cPGRJzqpRj6FQAas4ijOeTii0RwoDrkF_PX7LMdb8g"},
{"content":{"body":"Daniel Ehrenberg: Regarding carrying import.meta and the referrer specifier for a module to another compartment and the importance or non-importance of the identity of a module block https://docs.google.com/document/d/1CD5lIBZLl24XBWbQhokqBdt4Zl7wPAcFJKJrgePr9HU/edit#bookmark=id.o21po234q3z","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:mozilla.org\">Daniel Ehrenberg</a>: Regarding carrying import.meta and the referrer specifier for a module to another compartment and the importance or non-importance of the identity of a module block https://docs.google.com/document/d/1CD5lIBZLl24XBWbQhokqBdt4Zl7wPAcFJKJrgePr9HU/edit#bookmark=id.o21po234q3z","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Daniel Ehrenberg: Regarding carrying import.meta and the referrer specifier for a module to another compartment and the importance or non-importance of the identity of a module block https://docs.google.com/document/d/1CD5lIBZLl24XBWbQhokqBdt4Zl7wPAcFJKJrgePr9HU/edit#bookmark=id.o21po234q3z","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@littledan:mozilla.org\">Daniel Ehrenberg</a>: Regarding carrying import.meta and the referrer specifier for a module to another compartment and the importance or non-importance of the identity of a module block https://docs.google.com/document/d/1CD5lIBZLl24XBWbQhokqBdt4Zl7wPAcFJKJrgePr9HU/edit#bookmark=id.o21po234q3z","mimetype":"text/html"}]},"ts":1655837926903,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$51dpVx47MbgMoDn7OTkzdj0Pncc1t5ZIsO-uMCVn62I"},
{"content":{"body":"If a module block is reified as a “module descriptor” ~ {record, specifier, importMeta}, the identity of the object still doesn’t matter. The specifier matters because that is the key in the module memo.","m.relates_to":{"event_id":"$51dpVx47MbgMoDn7OTkzdj0Pncc1t5ZIsO-uMCVn62I","is_falling_back":true,"m.in_reply_to":{"event_id":"$51dpVx47MbgMoDn7OTkzdj0Pncc1t5ZIsO-uMCVn62I"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"If a module block is reified as a “module descriptor” ~ {record, specifier, importMeta}, the identity of the object still doesn’t matter. The specifier matters because that is the key in the module memo."},"ts":1655837996140,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$UJnX_s_n5C0vN0Qp8DuHmvmz10_OrsN52bW61jez0FE"},
{"content":{"body":"That is to say, a map of module descriptors could be transported to another worker without losing any of the relationships between modules.","m.relates_to":{"event_id":"$51dpVx47MbgMoDn7OTkzdj0Pncc1t5ZIsO-uMCVn62I","is_falling_back":true,"m.in_reply_to":{"event_id":"$51dpVx47MbgMoDn7OTkzdj0Pncc1t5ZIsO-uMCVn62I"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"That is to say, a map of module descriptors could be transported to another worker without losing any of the relationships between modules."},"ts":1655838038403,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JSRSOPFFIsUNdUnhXbFo2LAx-m2eanJit2HrnOJr6Lk"},
{"content":{"body":"about layering, I want to push back on the idea that was raised in the meeting today about all proposals depending on compartments or some reduction of it. I'd prefer that we focus on figuring out what the big picture API is, and then it will be more clear which pieces we can ship; I think there are lots of orderings that would work, and we shouldn't focus too excessively on working out one factoring or another. For example, I think it'd be OK to ship module reflection or module blocks before we have an imperative API to provide the way that modules link to each other.","msgtype":"m.text","org.matrix.msc1767.text":"about layering, I want to push back on the idea that was raised in the meeting today about all proposals depending on compartments or some reduction of it. I'd prefer that we focus on figuring out what the big picture API is, and then it will be more clear which pieces we can ship; I think there are lots of orderings that would work, and we shouldn't focus too excessively on working out one factoring or another. For example, I think it'd be OK to ship module reflection or module blocks before we have an imperative API to provide the way that modules link to each other."},"ts":1655845448734,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FTqUPIm208fClUq5DG38hQXMc-ydIInwTLwLwPFL7k8"},
{"content":{"body":"+1","msgtype":"m.text","org.matrix.msc1767.text":"+1"},"ts":1655845775454,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$OzMqlgu7voySU7WzYph69RRpL3JuLyukNerbNYL6y20"},
{"content":{"body":"that is the conclusion i personally would be happier with and we should give it a full discussion next call","msgtype":"m.text","org.matrix.msc1767.text":"that is the conclusion i personally would be happier with and we should give it a full discussion next call"},"ts":1655845796479,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$v5IqVfA7rIM1_HiXUYrcq1ZpYm8FNgtKrbG3YZODX5c"},
{"content":{"body":"i wanted to explicitly surface the question which i felt was implicit in Kris's presentation","msgtype":"m.text","org.matrix.msc1767.text":"i wanted to explicitly surface the question which i felt was implicit in Kris's presentation"},"ts":1655845807744,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$uux_5LPtCfcJuDYMJ9gszvyD-QthquCw1ah0uUqhRIM"},
{"content":{"body":"I really liked Kris's presentation. It brought together a bunch of ideas really well. I think it's important that we maintain a unified model for how modules work, and the compartments proposal stands out as it exposes so much","msgtype":"m.text","org.matrix.msc1767.text":"I really liked Kris's presentation. It brought together a bunch of ideas really well. I think it's important that we maintain a unified model for how modules work, and the compartments proposal stands out as it exposes so much"},"ts":1655845968861,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$sCQGxOfGUY70OGApcl-vlYTG9ZSw13upY1s5gqoKzTQ"},
{"content":{"body":"also agree","msgtype":"m.text","org.matrix.msc1767.text":"also agree"},"ts":1655846044852,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_NtuiGrqzTHlbVgr-2VXzOfa0wsyNc8USC5E2F05j54"},
{"content":{"body":"To be clear, I also consider the question of ordering and layering an open question and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first.","msgtype":"m.text","org.matrix.msc1767.text":"To be clear, I also consider the question of ordering and layering an open question and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first."},"ts":1655848552308,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QcBYMjl2mtq1L_JiM3TLQtpre9-xqG_6MBIm_g2D8-E"},
{"content":{"body":"For example, suppose we land module blocks first? There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader.","msgtype":"m.text","org.matrix.msc1767.text":"For example, suppose we land module blocks first? There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader."},"ts":1655848663983,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$q69iZU7xd_UOnQGqsG1unDBx6xbCO294puMvOnCmAjc"},
{"content":{"body":"ShadowRealm may give us a degree of freedom in that regard.","msgtype":"m.text","org.matrix.msc1767.text":"ShadowRealm may give us a degree of freedom in that regard."},"ts":1655848733009,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5ubOFxBA-MMrKV3rzpEFeHvq-mYCW0UsZKHAUNm9OSM"},
{"content":{"body":"To the extent that ShadowRealm encapsulates a loader. But even then, the result differs in name only from the part we later factor out of realm. So, big +1 to littledan’s point about getting a holistic view before figuring out layering.","format":"org.matrix.custom.html","formatted_body":"To the extent that ShadowRealm encapsulates a loader. But even then, the result differs in name only from the part we later factor out of realm. So, big +1 to <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>’s point about getting a holistic view before figuring out layering.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"To the extent that ShadowRealm encapsulates a loader. But even then, the result differs in name only from the part we later factor out of realm. So, big +1 to littledan’s point about getting a holistic view before figuring out layering.","mimetype":"text/plain"},{"body":"To the extent that ShadowRealm encapsulates a loader. But even then, the result differs in name only from the part we later factor out of realm. So, big +1 to <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>’s point about getting a holistic view before figuring out layering.","mimetype":"text/html"}]},"ts":1655848830103,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ire9PuOG08M-CpYJf8_6PfH0_V1xcPMbS3YyZoiPlIU"},
{"content":{"body":" * To be clear, I also consider the question of ordering and layering open and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first.","m.new_content":{"body":"To be clear, I also consider the question of ordering and layering open and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first.","msgtype":"m.text","org.matrix.msc1767.text":"To be clear, I also consider the question of ordering and layering open and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first."},"m.relates_to":{"event_id":"$QcBYMjl2mtq1L_JiM3TLQtpre9-xqG_6MBIm_g2D8-E","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * To be clear, I also consider the question of ordering and layering open and I don’t have a preference toward shipping compartments first. I just do not, from where I’m sitting right now, see a way to do that in a way that doesn’t hobble the proposal that lands first."},"ts":1655848861250,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ngDKeBs7MbdxbjFKP3hzano5H5iEqwnZnO3tsS2wcyU"},
{"content":{"body":" * For example, suppose we land module blocks first. There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader.","m.new_content":{"body":"For example, suppose we land module blocks first. There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader.","msgtype":"m.text","org.matrix.msc1767.text":"For example, suppose we land module blocks first. There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader."},"m.relates_to":{"event_id":"$q69iZU7xd_UOnQGqsG1unDBx6xbCO294puMvOnCmAjc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * For example, suppose we land module blocks first. There needs to exist some mechanism for instantiating the block. For deferred execution, same issue. Import reflection could be exposed, but none of the motivating use cases work without a loader."},"ts":1655848886186,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LHmBosCyMQbpzGJoNMeKlUSR1Xiaa5jMJ_div1M4MOs"},
{"content":{"body":"Also, ShadowRealm and workers of every kind should probably be born with host-defined loader hooks, since serializing a loadHook fraught in the former and dubious in the latter. But in combination with a compartment, having a realm bootstrap off of the host-defined loader and constructing a Compartment with a user-defined loader opens up options.","msgtype":"m.text","org.matrix.msc1767.text":"Also, ShadowRealm and workers of every kind should probably be born with host-defined loader hooks, since serializing a loadHook fraught in the former and dubious in the latter. But in combination with a compartment, having a realm bootstrap off of the host-defined loader and constructing a Compartment with a user-defined loader opens up options."},"ts":1655849087186,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jYuxgV7eHWDo3fUB0nfQ1H_PLj8jUhsaOSVB56iAX24"},
{"content":{"body":"the main mechanism for instantiating module blocks is import()","msgtype":"m.text","org.matrix.msc1767.text":"the main mechanism for instantiating module blocks is import()"},"ts":1655849829158,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bQgBWHVTY9OodsmmbwnFv0yzq2TQoEFjIsFjJFlxWOU"},
{"content":{"body":"the proposal stands on its own without further control, IMO","msgtype":"m.text","org.matrix.msc1767.text":"the proposal stands on its own without further control, IMO"},"ts":1655849855809,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-PMHsOVWodpI0WyXDB2Ycb5IBINOCohneYe3ee0IQJM"},
{"content":{"body":"I agree that ShadowRealm should probably take a LoaderOptions bag as an argument","msgtype":"m.text","org.matrix.msc1767.text":"I agree that ShadowRealm should probably take a LoaderOptions bag as an argument"},"ts":1655849883198,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KiSQr7pWjf5D7VOC4FA2dZFd0Mm-7l3b-JuezjSpNNA"},
{"content":{"body":"but, also there, ShadowRealm is useful without that","msgtype":"m.text","org.matrix.msc1767.text":"but, also there, ShadowRealm is useful without that"},"ts":1655849900533,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5zeVfscpYpA_eM2uAr7X-zk8BJNhwHraE3XhNhym_0w"},
{"content":{"body":"So, assuming that, then Compartments would have import and loadHook competing to register module descriptors.","msgtype":"m.text","org.matrix.msc1767.text":"So, assuming that, then Compartments would have import and loadHook competing to register module descriptors."},"ts":1655849902714,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$vwbEQ3xfzGafGeYiHo9DWxEF_nqiL5PzRQRjcMdZLFk"},
{"content":{"body":"huh?","msgtype":"m.text","org.matrix.msc1767.text":"huh?"},"ts":1655849931990,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$02_SsKc3CSqUkxycPG9yqK_bQ0PlaDqq1OCzaWVcmIg"},
{"content":{"body":"I meant the already-existing dynamic import()","msgtype":"m.text","org.matrix.msc1767.text":"I meant the already-existing dynamic import()"},"ts":1655849941431,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$eY3qYIGGn57aOSvw4gEML09reiUjiqAtq13N7eh_lWU"},
{"content":{"body":"as well as passing the module block to structured clone","msgtype":"m.text","org.matrix.msc1767.text":"as well as passing the module block to structured clone"},"ts":1655849952650,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-eVDvtEiJLCXyQy4IajEHIw2eu9qTJkgeYbttVfVVzU"},
{"content":{"body":"Understood. I propose that a desirable invariant is for dynamic import and compartment import be nearly the same.","msgtype":"m.text","org.matrix.msc1767.text":"Understood. I propose that a desirable invariant is for dynamic import and compartment import be nearly the same."},"ts":1655849983258,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$BQQaNGBxQq9oeieLlYPbRTFBjzEHqC_gHBeZscGcWek"},
{"content":{"body":"I agree that we shouldn't have competing hooks. Surma and I proposed module block without hooks.","msgtype":"m.text","org.matrix.msc1767.text":"I agree that we shouldn't have competing hooks. Surma and I proposed module block without hooks."},"ts":1655849988109,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zHJ9gXj196SQ-PSgPzKREzOu3Rc8ijWseAEtI7cEqOc"},
{"content":{"body":"yes, definitely they should be the same","msgtype":"m.text","org.matrix.msc1767.text":"yes, definitely they should be the same"},"ts":1655849993189,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZvOsnCK-GoW4FTiMRbK6T1PXPZurP-M2bSeYZQn6-RM"},
{"content":{"body":"so, sure, you can pass a module block to compartment import once there are compartments","msgtype":"m.text","org.matrix.msc1767.text":"so, sure, you can pass a module block to compartment import once there are compartments"},"ts":1655850014099,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QjICIJw670IxKB5VizNi3rM6caUzXz4bhfPSyDA-Hvk"},
{"content":{"body":"Consider: `import(module { import 'x.js'; })`","format":"org.matrix.custom.html","formatted_body":"Consider: <code>import(module { import 'x.js'; })</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Consider: `import(module { import 'x.js'; })`","mimetype":"text/plain"},{"body":"Consider: <code>import(module { import 'x.js'; })</code>","mimetype":"text/html"}]},"ts":1655850015333,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$BSYe8EXZhPlw5F9Dvl8zw0jxnV7IxPb3jfuLvWYHcf0"},
{"content":{"body":"Followed by (approximately) `import({ specifier: 'x.js', ...module { } })`","format":"org.matrix.custom.html","formatted_body":"Followed by (approximately) <code>import({ specifier: 'x.js', ...module { } })</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Followed by (approximately) `import({ specifier: 'x.js', ...module { } })`","mimetype":"text/plain"},{"body":"Followed by (approximately) <code>import({ specifier: 'x.js', ...module { } })</code>","mimetype":"text/html"}]},"ts":1655850080420,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$AV-nChZRA3IL6FYNVMZuRNnTGQGnmAcEjcmqcZHOXXQ"},
{"content":{"body":"And let’s assume that module blocks correspond to module descriptors.","msgtype":"m.text","org.matrix.msc1767.text":"And let’s assume that module blocks correspond to module descriptors."},"ts":1655850095271,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$KGm7T6sQPgKGFFuoDHMHKHhbKF1dIQDid8xc_36s84o"},
{"content":{"body":"The behavior of this example is order dependent (even without the introduction of compartment).","msgtype":"m.text","org.matrix.msc1767.text":"The behavior of this example is order dependent (even without the introduction of compartment)."},"ts":1655850123310,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$GJf28dgr8D41fZDT0dItAmRMgsHRuRsNh4IzSROA8MA"},
{"content":{"body":"Because there already is a host loader in play.","msgtype":"m.text","org.matrix.msc1767.text":"Because there already is a host loader in play."},"ts":1655850132584,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$TNyZVighHGHYHhWdSanklo-tKPS40cyK3yuBKIbRJ4g"},
{"content":{"body":"In the former case, you push a module into the module map, but in order for its dependencies to be satisfied, the loader must pull them in.","msgtype":"m.text","org.matrix.msc1767.text":"In the former case, you push a module into the module map, but in order for its dependencies to be satisfied, the loader must pull them in."},"ts":1655850174719,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gZ0Ubjwsjig6IAefy7iUVRGA--_SDU5ZDPtxR3U2Bck"},
{"content":{"body":"So you’d have to take care to push your dependencies into the loader from leaf to root. Which is fine, but fragile.","msgtype":"m.text","org.matrix.msc1767.text":"So you’d have to take care to push your dependencies into the loader from leaf to root. Which is fine, but fragile."},"ts":1655850223977,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YA0n4-xjbyGezL1_d_SuGRf0X99Goxd1usKMDwZVT-8"},
{"content":{"body":"I contend that it’s fragile enough that it is inadvisable.","msgtype":"m.text","org.matrix.msc1767.text":"I contend that it’s fragile enough that it is inadvisable."},"ts":1655850235994,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6FzBpAfQ8QeG4zqxmIpzlXWd01Ph8qRjBlG8yVD0QZA"},
{"content":{"body":"When compartments get reified, then there’s a missed opportunity for the compartment to represent a capability to induce a module to be loaded, not to determine what is loaded.","msgtype":"m.text","org.matrix.msc1767.text":"When compartments get reified, then there’s a missed opportunity for the compartment to represent a capability to induce a module to be loaded, not to determine what is loaded."},"ts":1655850355027,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$dN_WA5o-zTZHNR2RTJgXLBZzll9G7oppVdIGqSmTSOM"},
{"content":{"body":"That is to say, a loadHook provides a coherent top-down view of how to construct a coherent module graph. Providing a way to inject modules into that graph from *within* the compartment allows a module to interfere with the linkage of its peers.","format":"org.matrix.custom.html","formatted_body":"That is to say, a loadHook provides a coherent top-down view of how to construct a coherent module graph. Providing a way to inject modules into that graph from <em>within</em> the compartment allows a module to interfere with the linkage of its peers.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That is to say, a loadHook provides a coherent top-down view of how to construct a coherent module graph. Providing a way to inject modules into that graph from *within* the compartment allows a module to interfere with the linkage of its peers.","mimetype":"text/plain"},{"body":"That is to say, a loadHook provides a coherent top-down view of how to construct a coherent module graph. Providing a way to inject modules into that graph from <em>within</em> the compartment allows a module to interfere with the linkage of its peers.","mimetype":"text/html"}]},"ts":1655850415939,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Qra0jVMxufC2FaW1Ef4KiAbhcecyra4kFLkaPDzKu9c"},
{"content":{"body":"And that hazard exists regardless of whether or when we reify the Compartment/Loader object.","msgtype":"m.text","org.matrix.msc1767.text":"And that hazard exists regardless of whether or when we reify the Compartment/Loader object."},"ts":1655850445371,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IBFyrMJ9shgQHlqebv4dSSTYhhfk3kwV0nuaPPXiqCw"},
{"content":{"body":"Inevitable bike shed from which there is no escape: “specifier” is heavy. Maybe this should be “to”, the dual of “from”.","m.relates_to":{"event_id":"$AV-nChZRA3IL6FYNVMZuRNnTGQGnmAcEjcmqcZHOXXQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$AV-nChZRA3IL6FYNVMZuRNnTGQGnmAcEjcmqcZHOXXQ"},"rel_type":"m.thread"},"msgtype":"m.text","org.matrix.msc1767.text":"Inevitable bike shed from which there is no escape: “specifier” is heavy. Maybe this should be “to”, the dual of “from”."},"ts":1655850691664,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$cfkyr0ivbLBOMcXVhKwIveK4Q24SFAo8Agz6Y6StWck"},
{"content":{"body":"yeah, I'd say that when there's a host loader, you shouldn't be able to just push a specifier into the module map","msgtype":"m.text","org.matrix.msc1767.text":"yeah, I'd say that when there's a host loader, you shouldn't be able to just push a specifier into the module map"},"ts":1655851319216,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$HBWSouYqWDUzraQXo9Ce6V23F_mY4GFi323aC4Xq4rs"},
{"content":{"body":"so I don't understand the second line of your example","msgtype":"m.text","org.matrix.msc1767.text":"so I don't understand the second line of your example"},"ts":1655851340259,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JooeqVdpaIB0VtweTZW-Dvoz8CB55F9tbZylGdHg-zs"},
{"content":{"body":"(I don't really understand how it works even if you have a custom loader)","msgtype":"m.text","org.matrix.msc1767.text":"(I don't really understand how it works even if you have a custom loader)"},"ts":1655851369829,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UVvU1Ra-P0mIibNVY1JWlq4fVCMttH3z12DfwsFz0Qs"},
{"content":{"body":"I haven't done as detailed a look at the current state of the compartments proposal as I should","msgtype":"m.text","org.matrix.msc1767.text":"I haven't done as detailed a look at the current state of the compartments proposal as I should"},"ts":1655851417620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5PXTf2IlSAcpco1-zPCXjufpSRBn_qxrG6lz74aHlIE"},
{"content":{"body":"isn't there the same order dependency as if you did `import('x.js')`?","format":"org.matrix.custom.html","formatted_body":"isn't there the same order dependency as if you did <code>import('x.js')</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"isn't there the same order dependency as if you did `import('x.js')`?","mimetype":"text/plain"},{"body":"isn't there the same order dependency as if you did <code>import('x.js')</code>?","mimetype":"text/html"}]},"ts":1655851442933,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$kLw-mFfrSnrea0lBRg7w2gKqvqn_NZGEgIR3dnjsw2I"},
{"content":{"body":"Yeah, let me just excerpt the relevant bit of the proposal.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, let me just excerpt the relevant bit of the proposal."},"ts":1655851700185,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$HymVS_B2WuLoiicCKpyQsq7Im1MZ0b6JitLFFwCA3YI"},
{"content":{"body":"A module descriptor is shaped like {record, specifier, importMeta}.","msgtype":"m.text","org.matrix.msc1767.text":"A module descriptor is shaped like {record, specifier, importMeta}."},"ts":1655851718663,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JRQGJZrxzC97EjfXSFNtJNXmDdMFsaS-zYeasTSMZqk"},
{"content":{"body":"Where record is a static module record, or by any other name just as sweet.","msgtype":"m.text","org.matrix.msc1767.text":"Where record is a static module record, or by any other name just as sweet."},"ts":1655851737144,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gPhHXRD5vZM5qMGYKYu2zQ5UHME5eKz6xV3n15WrxuU"},
{"content":{"body":"(is this written somewhere, or is it from discussion after writing took place?)","msgtype":"m.text","org.matrix.msc1767.text":"(is this written somewhere, or is it from discussion after writing took place?)"},"ts":1655851754982,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DSLpRndVRlDldEskoUxUOWFr8i7IEvhs-xMSoPyFWpk"},
{"content":{"body":"Module descriptors are landed in the proposal README, yes.","msgtype":"m.text","org.matrix.msc1767.text":"Module descriptors are landed in the proposal README, yes."},"ts":1655851774473,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jJNR87pokcd2JDDUsOf6H2VApIHsPoeh-BfUPy1EPm8"},
{"content":{"body":"That is, {record, specifier, importMeta} is one of the shapes in the union, and it’s the one I think most sensibly corresponds to a module block after our meeting this morning.","msgtype":"m.text","org.matrix.msc1767.text":"That is, {record, specifier, importMeta} is one of the shapes in the union, and it’s the one I think most sensibly corresponds to a module block after our meeting this morning."},"ts":1655851830123,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$D1SoQKZ8SzrpeojU0HJ_qNYBfwcxHYTUdLY12_D25tI"},
{"content":{"body":"I was of the opinion that blocks might better correspond to static module records, but let’s say I’m tentatively convinced that module descriptors are more useful and do not preclude other motivations I’d had in mind.","msgtype":"m.text","org.matrix.msc1767.text":"I was of the opinion that blocks might better correspond to static module records, but let’s say I’m tentatively convinced that module descriptors are more useful and do not preclude other motivations I’d had in mind."},"ts":1655851894194,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$F9A2vxmRwpqyJ51PGRHTT_n8zE6cQIeEb0bvufjFKsE"},
{"content":{"body":"personally I didn't come to a clear conclusion on what module blocks would correspond to after the meeting","msgtype":"m.text","org.matrix.msc1767.text":"personally I didn't come to a clear conclusion on what module blocks would correspond to after the meeting"},"ts":1655851900872,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Nkm6OOMynYcZOXm18E12i74mVQmBxVMKUuQg3OHgXeQ"},
{"content":{"body":"Sure, tentative opinion. Let’s assume for purposes of discussion.","msgtype":"m.text","org.matrix.msc1767.text":"Sure, tentative opinion. Let’s assume for purposes of discussion."},"ts":1655851921040,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8d4qVLRK1iY64FFMQdNevIvWlR-EAy6ExVOcktgAf90"},
{"content":{"body":"also I'm having trouble finding that shape in the union, or maybe I'm looking at the wrong union","msgtype":"m.text","org.matrix.msc1767.text":"also I'm having trouble finding that shape in the union, or maybe I'm looking at the wrong union"},"ts":1655851924031,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BS-paVMne8H8lHrzYje2oNhYyz6MISld58Brh2pn5n0"},
{"content":{"body":"is \"instance\" a name for specifier?","msgtype":"m.text","org.matrix.msc1767.text":"is \"instance\" a name for specifier?"},"ts":1655851942661,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$P2gLWh3vh9UJqfVccL3M6l2v4mLtUocO--dyXp0Z45g"},
{"content":{"body":"Take the first shape in the union.","msgtype":"m.text","org.matrix.msc1767.text":"Take the first shape in the union."},"ts":1655851982515,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wYCqBC0C0nnhUVhIjpbSEf0gZRFdsYm6yhsH6xynW_g"},
{"content":{"body":"Then add `\"specifier\"` ad hoc since module blocks would need that. There’s a PR that would add it for other reasons.","format":"org.matrix.custom.html","formatted_body":"Then add <code>&quot;specifier&quot;</code> ad hoc since module blocks would need that. There’s a PR that would add it for other reasons.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Then add `\"specifier\"` ad hoc since module blocks would need that. There’s a PR that would add it for other reasons.","mimetype":"text/plain"},{"body":"Then add <code>&quot;specifier&quot;</code> ad hoc since module blocks would need that. There’s a PR that would add it for other reasons.","mimetype":"text/html"}]},"ts":1655852003000,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kzpqRZkQZoCDSBsOTkOR3_zuU8EGwQ0OpjWlsX1ccpE"},
{"content":{"body":"Elsewhere the specifier is implied because the descriptor is value side of a key value pair.","msgtype":"m.text","org.matrix.msc1767.text":"Elsewhere the specifier is implied because the descriptor is value side of a key value pair."},"ts":1655852042223,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$CDDsIcbwSwzgx_XQgcxuJghTPl9QRr36d2qF29kd4aw"},
{"content":{"body":"which PR should I be looking at?","msgtype":"m.text","org.matrix.msc1767.text":"which PR should I be looking at?"},"ts":1655852064878,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$l5Ivz_zI8BzL0Kvq7nO0Y2sJ_M5TKkiAAe8GTNg2lWI"},
{"content":{"body":"I'm still not sure what the specifier should be for a module block with no explicit name","msgtype":"m.text","org.matrix.msc1767.text":"I'm still not sure what the specifier should be for a module block with no explicit name"},"ts":1655852077547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TR-efXU9i1EBV65XKZM9udqOFALOpcooavCesaaLF_U"},
{"content":{"body":"Or in the case of a loadHook(Specifier) => Promise<ModuleDescriptor>, implied by the argument","msgtype":"m.text","org.matrix.msc1767.text":"Or in the case of a loadHook(Specifier) => Promise<ModuleDescriptor>, implied by the argument"},"ts":1655852080625,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$eDaxVZwFWF-r-9kvM28B8cKqnowPiVkp5vKPKLL-GUM"},
{"content":{"body":"_that_ is a good point.","format":"org.matrix.custom.html","formatted_body":"<em>that</em> is a good point.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"_that_ is a good point.","mimetype":"text/plain"},{"body":"<em>that</em> is a good point.","mimetype":"text/html"}]},"ts":1655852096889,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$aQg4vHWYf2SUtc_xAjCyBuPZwpBnOt2v7k5-fzEWddk"},
{"content":{"body":"I think we run into funny cases if you're allowed to go and claim a specifier and then imperatively insert that into the module map from inside the compartment. I don't think you should be allowed to do that.","msgtype":"m.text","org.matrix.msc1767.text":"I think we run into funny cases if you're allowed to go and claim a specifier and then imperatively insert that into the module map from inside the compartment. I don't think you should be allowed to do that."},"ts":1655852145888,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$MZ9IOkiVsbNjgqbYZPxA-7NeEAX7Cs_b9KZ6oBm_uxs"},
{"content":{"body":"I concur.","msgtype":"m.text","org.matrix.msc1767.text":"I concur."},"ts":1655852160931,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$EbT8kTN92OONCAsVzf8fccc6NeXNmOTdhEhq-IB2DZo"},
{"content":{"body":"And that actually sums up the argument I’m clumsily building, actually.","msgtype":"m.text","org.matrix.msc1767.text":"And that actually sums up the argument I’m clumsily building, actually."},"ts":1655852183176,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8g-0TUNE5wTuIODiucMtFe8_POn0wE2t0hvP0lneGH4"},
{"content":{"body":"And sways me back to `module {} instanceof StaticModuleRecord`","format":"org.matrix.custom.html","formatted_body":"And sways me back to <code>module {} instanceof StaticModuleRecord</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And sways me back to `module {} instanceof StaticModuleRecord`","mimetype":"text/plain"},{"body":"And sways me back to <code>module {} instanceof StaticModuleRecord</code>","mimetype":"text/html"}]},"ts":1655852256346,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jXUR5RayqANh171-7zas1IswsVBNyZfXAF5THGvR2kE"},
{"content":{"body":" * And that actually sums up the argument I’m clumsily building.","m.new_content":{"body":"And that actually sums up the argument I’m clumsily building.","msgtype":"m.text","org.matrix.msc1767.text":"And that actually sums up the argument I’m clumsily building."},"m.relates_to":{"event_id":"$8g-0TUNE5wTuIODiucMtFe8_POn0wE2t0hvP0lneGH4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * And that actually sums up the argument I’m clumsily building."},"ts":1655852300808,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$piU1HJ_7PaEN2jqW8LaHFMRQB3u6yBAd5pmaCuwUndE"},
{"content":{"body":"OK, well, if module blocks were to be added first, we'd have to think about what's observable","msgtype":"m.text","org.matrix.msc1767.text":"OK, well, if module blocks were to be added first, we'd have to think about what's observable"},"ts":1655852402381,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$G_Bk0OxVrw7-JmV4miuR9I7NK9QSICemRi79ZfcdD7o"},
{"content":{"body":"and the two observable things I can think of are 1) import.meta, and 2) what happens when you import() the same module block twice","msgtype":"m.text","org.matrix.msc1767.text":"and the two observable things I can think of are 1) import.meta, and 2) what happens when you import() the same module block twice"},"ts":1655852423176,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xGfo8QgJp9hL07S6rSCW4ijvKn4AN8mcnoTpO8mKbQw"},
{"content":{"body":"I think module blocks have a name, but it's a gensym","msgtype":"m.text","org.matrix.msc1767.text":"I think module blocks have a name, but it's a gensym"},"ts":1655852443919,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$_mbFJncMljmq0UhY128fRagMDT1aAY8wcmLG8L_Ve4I"},
{"content":{"body":"Right, and gensyms don’t transport.","msgtype":"m.text","org.matrix.msc1767.text":"Right, and gensyms don’t transport."},"ts":1655852463172,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$R_b8AvlfYpQf-L0fMOQ6BWMNU7EG0goSAdbVx77HzVg"},
{"content":{"body":"yeah, over transport it makes a new one","msgtype":"m.text","org.matrix.msc1767.text":"yeah, over transport it makes a new one"},"ts":1655852479377,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4Sfy903oosUIvk8nAZkqFg7_hxZqW8baJI8H3pWtO34"},
{"content":{"body":"so structured clone is approximate","msgtype":"m.text","org.matrix.msc1767.text":"so structured clone is approximate"},"ts":1655852487615,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yufcG0xdOC4STsb942k761zKLzG-YDfzHSpMviaPE90"},
{"content":{"body":"and each time you postMessage a module block, you get a new copy on the other hand","msgtype":"m.text","org.matrix.msc1767.text":"and each time you postMessage a module block, you get a new copy on the other hand"},"ts":1655852496440,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GsOh9CyruqUFxUOS_9_xROuZixYFN3tjY5rNqdOxl8o"},
{"content":{"body":"Which means different invariants locally and remotely. That’s a footgun.","msgtype":"m.text","org.matrix.msc1767.text":"Which means different invariants locally and remotely. That’s a footgun."},"ts":1655852502390,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JnLUZyBvJAFCwKwApA8IP9g_5Y6bulgsbubuREWWvKE"},
{"content":{"body":"but, import.meta on the web *does* transport, and it should for this case","format":"org.matrix.custom.html","formatted_body":"but, import.meta on the web <em>does</em> transport, and it should for this case","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but, import.meta on the web *does* transport, and it should for this case","mimetype":"text/plain"},{"body":"but, import.meta on the web <em>does</em> transport, and it should for this case","mimetype":"text/html"}]},"ts":1655852504425,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xyH2NKuc_YEE9FQ9BRWY-fKiBEWUCUNdzKa8A3nbxVM"},
{"content":{"body":"import.meta is host-defined and doesn’t transport *reliably*.","format":"org.matrix.custom.html","formatted_body":"import.meta is host-defined and doesn’t transport <em>reliably</em>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"import.meta is host-defined and doesn’t transport *reliably*.","mimetype":"text/plain"},{"body":"import.meta is host-defined and doesn’t transport <em>reliably</em>.","mimetype":"text/html"}]},"ts":1655852524156,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$eZVlBxu-tRSjGkQ-xOxUDAq1U6dY7EI7RmFqkMezAwY"},
{"content":{"body":"> <@kriskowal:matrix.org> Which means different invariants locally and remotely. That’s a footgun.\n\nwe're trying to make design tradeoffs; I'm not really interested in trading jabs of reductio ad absurdum","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$JnLUZyBvJAFCwKwApA8IP9g_5Y6bulgsbubuREWWvKE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Which means different invariants locally and remotely. That’s a footgun.</blockquote></mx-reply>we're trying to make design tradeoffs; I'm not really interested in trading jabs of reductio ad absurdum","m.relates_to":{"m.in_reply_to":{"event_id":"$JnLUZyBvJAFCwKwApA8IP9g_5Y6bulgsbubuREWWvKE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Which means different invariants locally and remotely. That’s a footgun.\n\nwe're trying to make design tradeoffs; I'm not really interested in trading jabs of reductio ad absurdum","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$JnLUZyBvJAFCwKwApA8IP9g_5Y6bulgsbubuREWWvKE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Which means different invariants locally and remotely. That’s a footgun.</blockquote></mx-reply>we're trying to make design tradeoffs; I'm not really interested in trading jabs of reductio ad absurdum","mimetype":"text/html"}]},"ts":1655852554827,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Cp0IstOs8HaqiAp3Pm4GbolXfePyDRZNT8z-OTgD3B0"},
{"content":{"body":"Also, `import.meta` tends to be a function of host-defined behavior that could vary between the sender and receiver.","format":"org.matrix.custom.html","formatted_body":"Also, <code>import.meta</code> tends to be a function of host-defined behavior that could vary between the sender and receiver.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Also, `import.meta` tends to be a function of host-defined behavior that could vary between the sender and receiver.","mimetype":"text/plain"},{"body":"Also, <code>import.meta</code> tends to be a function of host-defined behavior that could vary between the sender and receiver.","mimetype":"text/html"}]},"ts":1655852563351,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$WMlai8kJOpHqMjEw0BTuO7_XHrvEbAVws09_STzpXRg"},
{"content":{"body":"> <@kriskowal:matrix.org> import.meta is host-defined and doesn’t transport *reliably*.\n\nwe're talking about what structured clone does, which is also host-defined","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$eZVlBxu-tRSjGkQ-xOxUDAq1U6dY7EI7RmFqkMezAwY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>import.meta is host-defined and doesn’t transport <em>reliably</em>.</blockquote></mx-reply>we're talking about what structured clone does, which is also host-defined","m.relates_to":{"m.in_reply_to":{"event_id":"$eZVlBxu-tRSjGkQ-xOxUDAq1U6dY7EI7RmFqkMezAwY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> import.meta is host-defined and doesn’t transport *reliably*.\n\nwe're talking about what structured clone does, which is also host-defined","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$eZVlBxu-tRSjGkQ-xOxUDAq1U6dY7EI7RmFqkMezAwY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>import.meta is host-defined and doesn’t transport <em>reliably</em>.</blockquote></mx-reply>we're talking about what structured clone does, which is also host-defined","mimetype":"text/html"}]},"ts":1655852566867,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2Tdmwa5RwhJyVaBrFk3GrXIC0qn5oHSskCO91xVUmIM"},
{"content":{"body":"> <@kriskowal:matrix.org> Also, `import.meta` tends to be a function of host-defined behavior that could vary between the sender and receiver.\n\nhmm, could you say more about this scenario?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$WMlai8kJOpHqMjEw0BTuO7_XHrvEbAVws09_STzpXRg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Also, <code>import.meta</code> tends to be a function of host-defined behavior that could vary between the sender and receiver.</blockquote></mx-reply>hmm, could you say more about this scenario?","m.relates_to":{"m.in_reply_to":{"event_id":"$WMlai8kJOpHqMjEw0BTuO7_XHrvEbAVws09_STzpXRg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Also, `import.meta` tends to be a function of host-defined behavior that could vary between the sender and receiver.\n\nhmm, could you say more about this scenario?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$WMlai8kJOpHqMjEw0BTuO7_XHrvEbAVws09_STzpXRg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Also, <code>import.meta</code> tends to be a function of host-defined behavior that could vary between the sender and receiver.</blockquote></mx-reply>hmm, could you say more about this scenario?","mimetype":"text/html"}]},"ts":1655852616856,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$faG5Z-SE_JUFZdTpKvoGeWXn3EiWj3JkSZod-X-KWDY"},
{"content":{"body":"Pardon, no jab intended.","msgtype":"m.text","org.matrix.msc1767.text":"Pardon, no jab intended."},"ts":1655852620635,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qbIHx33PZNIL00LxcLHL6nxZ66XAXlHhjo1Qgmqot58"},
{"content":{"body":"in my mind, preserving the base address for relative specifier resolution is essential for module blocks","msgtype":"m.text","org.matrix.msc1767.text":"in my mind, preserving the base address for relative specifier resolution is essential for module blocks"},"ts":1655852688625,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$aa1VMZjzo4ntIoNT_K3SjIU-GByNIlIqy5AebLDtOEo"},
{"content":{"body":"I should say, I personally value the avoidance of that particular footgun over the convenience of pushing a module block over import, and that is partially informed because I think the same ends can be achieved by other means.","msgtype":"m.text","org.matrix.msc1767.text":"I should say, I personally value the avoidance of that particular footgun over the convenience of pushing a module block over import, and that is partially informed because I think the same ends can be achieved by other means."},"ts":1655852694317,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bH3HL8mjg6AuvrkHh3hsBkjFbn1rgAV7F314YVx14c4"},
{"content":{"body":"Oh, let's go into discussing those other means","msgtype":"m.text","org.matrix.msc1767.text":"Oh, let's go into discussing those other means"},"ts":1655852707844,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UEmxNCPbqNQAeeEs0a1MT1GPkNtQoTJNWAogam42Uzo"},
{"content":{"body":"So, I would concede that it is both possible and convenient in some cases to be able to rely on the assumption that a pair of module loaders have the same resolution semantics. In that situation, the pair of loaders can reliably arrive at equivalent import.meta for the same specifier, except when the specifier is a gensym.","msgtype":"m.text","org.matrix.msc1767.text":"So, I would concede that it is both possible and convenient in some cases to be able to rely on the assumption that a pair of module loaders have the same resolution semantics. In that situation, the pair of loaders can reliably arrive at equivalent import.meta for the same specifier, except when the specifier is a gensym."},"ts":1655852865316,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wcSVakeyf6lBQIPXjJ1yJl3wG0g2krdJvNx34r-UFFo"},
{"content":{"body":"Taking that thought a little farther, I also think having gensyms for module specifiers is not dangerous unless module blocks can be imported, though I’ll grant that module fragments attempt to cross that bridge.","msgtype":"m.text","org.matrix.msc1767.text":"Taking that thought a little farther, I also think having gensyms for module specifiers is not dangerous unless module blocks can be imported, though I’ll grant that module fragments attempt to cross that bridge."},"ts":1655852996430,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mNvfJxRSziU2OSjkDmT_DQjYYkkbeY_mWCcBNTKuodo"},
{"content":{"body":"well, the purpose of module blocks is indeed to be imported","msgtype":"m.text","org.matrix.msc1767.text":"well, the purpose of module blocks is indeed to be imported"},"ts":1655853020131,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dxiGnkq7gAgSpkINjnGyXldLBk0MMX8tSxsqvJPhEOA"},
{"content":{"body":"As opposed to merely executed?","msgtype":"m.text","org.matrix.msc1767.text":"As opposed to merely executed?"},"ts":1655853030649,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nxBErVfYHPTXR2yzU5DHjG3xblGLKM8t9avF4iRvu_g"},
{"content":{"body":"> <@littledan:matrix.org> and each time you postMessage a module block, you get a new copy on the other hand\n\nI believe that is still an open issue. I think surma was advocating for preservation of identity","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$GsOh9CyruqUFxUOS_9_xROuZixYFN3tjY5rNqdOxl8o?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>and each time you postMessage a module block, you get a new copy on the other hand</blockquote></mx-reply>I believe that is still an open issue. I think surma was advocating for preservation of identity","m.relates_to":{"m.in_reply_to":{"event_id":"$GsOh9CyruqUFxUOS_9_xROuZixYFN3tjY5rNqdOxl8o"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> and each time you postMessage a module block, you get a new copy on the other hand\n\nI believe that is still an open issue. I think surma was advocating for preservation of identity","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$GsOh9CyruqUFxUOS_9_xROuZixYFN3tjY5rNqdOxl8o?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>and each time you postMessage a module block, you get a new copy on the other hand</blockquote></mx-reply>I believe that is still an open issue. I think surma was advocating for preservation of identity","mimetype":"text/html"}]},"ts":1655853039668,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$tpDockJPqqBktI_KeBD9vmKgL3Z6zw2LO8Z1Wi3euk4"},
{"content":{"body":"> <@mhofman:matrix.org> I believe that is still an open issue. I think surma was advocating for preservation of identity\n\nAh, thanks, I wasn't sure where that landed","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$tpDockJPqqBktI_KeBD9vmKgL3Z6zw2LO8Z1Wi3euk4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I believe that is still an open issue. I think surma was advocating for preservation of identity</blockquote></mx-reply>Ah, thanks, I wasn't sure where that landed","m.relates_to":{"m.in_reply_to":{"event_id":"$tpDockJPqqBktI_KeBD9vmKgL3Z6zw2LO8Z1Wi3euk4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@mhofman:matrix.org> I believe that is still an open issue. I think surma was advocating for preservation of identity\n\nAh, thanks, I wasn't sure where that landed","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$tpDockJPqqBktI_KeBD9vmKgL3Z6zw2LO8Z1Wi3euk4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@mhofman:matrix.org\">@mhofman:matrix.org</a><br>I believe that is still an open issue. I think surma was advocating for preservation of identity</blockquote></mx-reply>Ah, thanks, I wasn't sure where that landed","mimetype":"text/html"}]},"ts":1655853060167,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DNgMzJnEfaIFmq8w8rUa45Hv5pk49zFz_SI0MIj1GdI"},
{"content":{"body":"> <@kriskowal:matrix.org> As opposed to merely executed?\n\nI don't know how to interpret this question","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$nxBErVfYHPTXR2yzU5DHjG3xblGLKM8t9avF4iRvu_g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>As opposed to merely executed?</blockquote></mx-reply>I don't know how to interpret this question","m.relates_to":{"m.in_reply_to":{"event_id":"$nxBErVfYHPTXR2yzU5DHjG3xblGLKM8t9avF4iRvu_g"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> As opposed to merely executed?\n\nI don't know how to interpret this question","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$nxBErVfYHPTXR2yzU5DHjG3xblGLKM8t9avF4iRvu_g?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>As opposed to merely executed?</blockquote></mx-reply>I don't know how to interpret this question","mimetype":"text/html"}]},"ts":1655853067918,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zoFHYli5e17zCYR87AaBZ3FSBbgYsDY_MDewW0_-GvM"},
{"content":{"body":"Oh, you mean imported for the effect of being executed.","msgtype":"m.text","org.matrix.msc1767.text":"Oh, you mean imported for the effect of being executed."},"ts":1655853096163,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Wlc56fXp90ff94QNy9wjBgEbGXsEaOf_EM3O3bqs48k"},
{"content":{"body":"I mean imported for the effect of being linked into another module’s environment record.","msgtype":"m.text","org.matrix.msc1767.text":"I mean imported for the effect of being linked into another module’s environment record."},"ts":1655853105958,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$FJ1-91Ab36k6SvU5yxcfPNe6Fli4MzAW1BRarMDR2QY"},
{"content":{"body":"the module blocks proposal did not add a concept of \"just executing\" a module; you use them by importing them","msgtype":"m.text","org.matrix.msc1767.text":"the module blocks proposal did not add a concept of \"just executing\" a module; you use them by importing them"},"ts":1655853109544,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PeBkx4cAbIlUcJWbuhVpW4z7vCvDTTiqZWtfP2TsVdg"},
{"content":{"body":"yeah they can't be imported from an import statement","msgtype":"m.text","org.matrix.msc1767.text":"yeah they can't be imported from an import statement"},"ts":1655853120410,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$LlJQ29i80-8_TyKJw_oQ_IS2xBHe-7uO6qM_-T3dWtQ"},
{"content":{"body":"just dynamic import or host APIs that do the same","msgtype":"m.text","org.matrix.msc1767.text":"just dynamic import or host APIs that do the same"},"ts":1655853127361,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ej5XptRIr6d4JFNgNQW401k9mmfaY80YdSHQmEDEzEg"},
{"content":{"body":"oh I see what you meant","msgtype":"m.text","org.matrix.msc1767.text":"oh I see what you meant"},"ts":1655853140620,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Wldcp7B_UW9-QrOpXmExK15VrkAT05EATcw71RjykD0"},
{"content":{"body":"Consider an alternate view: what if all modules including module blocks must have a specifier.","msgtype":"m.text","org.matrix.msc1767.text":"Consider an alternate view: what if all modules including module blocks must have a specifier."},"ts":1655853209214,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1xYby-7jyGbx2Mc6j5K5Oz62JarKdAudZ1aG3cA0JXA"},
{"content":{"body":"In that world, identity of the module instance is moot.","msgtype":"m.text","org.matrix.msc1767.text":"In that world, identity of the module instance is moot."},"ts":1655853247917,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ZtO0VPb5F2nz6MU8Ryri8JI5e9fBNkj6ABnuHL_90eQ"},
{"content":{"body":"well, I got a lot of pushback for that design in module fragments","msgtype":"m.text","org.matrix.msc1767.text":"well, I got a lot of pushback for that design in module fragments"},"ts":1655853250271,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YxOCxcmCoqS3ZPrBfcK6oAnQJduQqWtQ-bK0PFUkfWA"},
{"content":{"body":"since it would have this same \"impersonation\" effect","msgtype":"m.text","org.matrix.msc1767.text":"since it would have this same \"impersonation\" effect"},"ts":1655853261546,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xoEor3SsT_14cBi7p6Zne1FifHwlk4Nhq7Mdnk8aNUU"},
{"content":{"body":"Module blocks become considerably more useful too.","msgtype":"m.text","org.matrix.msc1767.text":"Module blocks become considerably more useful too."},"ts":1655853264734,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5mZ6OBl9WByQ1Tu-2rZxHw0kEDZeIUnTSHaxNbawJDs"},
{"content":{"body":"well, I just don't know how to respond to that concern","msgtype":"m.text","org.matrix.msc1767.text":"well, I just don't know how to respond to that concern"},"ts":1655853276170,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$z5j5RZhCEVawi__ipg0sSOB-EcbcMACqydnJIoYnfeI"},
{"content":{"body":"They become useful for modeling bundles of interlinked functionality.","msgtype":"m.text","org.matrix.msc1767.text":"They become useful for modeling bundles of interlinked functionality."},"ts":1655853292786,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5cKz-Q716QGHh5M1KeObNLpXsVPPaV1hP10a2KfqO_Y"},
{"content":{"body":"That is, a working set can be captured and transported with module blocks.","msgtype":"m.text","org.matrix.msc1767.text":"That is, a working set can be captured and transported with module blocks."},"ts":1655853305369,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7HE0cmZ0XAOB1E_Wswl9xv_kATmH8_tD3KKQunUjmvk"},
{"content":{"body":"well, sure, they are unified with module fragments, whose job is that","msgtype":"m.text","org.matrix.msc1767.text":"well, sure, they are unified with module fragments, whose job is that"},"ts":1655853305991,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$yyzhFBZXAMzzIGTOPWoVTMeI1uh4QdL9cWzwv6_avKo"},
{"content":{"body":"and yes I was hoping that we'd find a way to make module fragments transportable as well","msgtype":"m.text","org.matrix.msc1767.text":"and yes I was hoping that we'd find a way to make module fragments transportable as well"},"ts":1655853324245,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Iri3hKKK0wDmY2Sp6UsKo2l4thn0XPvnXj0km4xYKVE"},
{"content":{"body":"The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import.","msgtype":"m.text","org.matrix.msc1767.text":"The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import."},"ts":1655853354069,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$b144XdxTDhTfpVquJAKoRZH11pqSEc_wDxduLy5fGa4"},
{"content":{"body":"however, we actually got stuck on the mechanics of this exact transportability issue when we discussed module fragments previously","msgtype":"m.text","org.matrix.msc1767.text":"however, we actually got stuck on the mechanics of this exact transportability issue when we discussed module fragments previously"},"ts":1655853363402,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IXRjO4rLIwOLKNmLccR_4absBaMwLExXSP1iSWATBcQ"},
{"content":{"body":"As opposed to being associated with a specifier by being used in the response to a loadHook for a specifier.","msgtype":"m.text","org.matrix.msc1767.text":"As opposed to being associated with a specifier by being used in the response to a loadHook for a specifier."},"ts":1655853372699,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$hayCYjTF6w1IGziWaNAEwp3FDFjVJH2foNFt4c92ODs"},
{"content":{"body":"> <@kriskowal:matrix.org> The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import.\n\nI'm not following","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$b144XdxTDhTfpVquJAKoRZH11pqSEc_wDxduLy5fGa4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import.</blockquote></mx-reply>I'm not following","m.relates_to":{"m.in_reply_to":{"event_id":"$b144XdxTDhTfpVquJAKoRZH11pqSEc_wDxduLy5fGa4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import.\n\nI'm not following","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$b144XdxTDhTfpVquJAKoRZH11pqSEc_wDxduLy5fGa4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>The impersonation problem isn’t because they have specifiers, it is because the specifiers have to be pushed in with a dynamic import or compartment.import.</blockquote></mx-reply>I'm not following","mimetype":"text/html"}]},"ts":1655853393316,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jXiUKanwxbI1z77eG8q4ziq2N-8hvJ2l6Iw3cwjCUTw"},
{"content":{"body":"Moment. I’m internalizing your model for the roles of module blocks and fragments.","msgtype":"m.text","org.matrix.msc1767.text":"Moment. I’m internalizing your model for the roles of module blocks and fragments."},"ts":1655853611600,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$qn-Gf6pilAT86OyU3tDHL9LBm43rvQ3O4ko1ywpT3Sw"},
{"content":{"body":"To recap, you’ve refreshed my memory about module blocks having a gensym for its specifier.","msgtype":"m.text","org.matrix.msc1767.text":"To recap, you’ve refreshed my memory about module blocks having a gensym for its specifier."},"ts":1655853665182,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$KE4U34stJOM-lP0xwNSGLkXaDl_2lyeC_xBzwf1ungE"},
{"content":{"body":"This means that my presentation this morning was framed more in terms more akin to module fragments.","msgtype":"m.text","org.matrix.msc1767.text":"This means that my presentation this morning was framed more in terms more akin to module fragments."},"ts":1655853703018,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VxYIJ1SHk6I3HCKFyHPUlJg6ji6XRYLdiobwSC7LFm8"},
{"content":{"body":"That means that I do not have proposal for how to represent a gensym module block.","msgtype":"m.text","org.matrix.msc1767.text":"That means that I do not have proposal for how to represent a gensym module block."},"ts":1655853803457,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$9v7P_sBngfs0K8ZTVnIyRxZCnIGoXwqROot4ywplM3o"},
{"content":{"body":"so, my initial proposal for module fragments is that you'd do, like, `module \"#foo\" { ... } import \"#foo\";` and the host would just connect the dots as a normal module specifier","format":"org.matrix.custom.html","formatted_body":"so, my initial proposal for module fragments is that you'd do, like, <code>module &quot;#foo&quot; { ... } import &quot;#foo&quot;;</code> and the host would just connect the dots as a normal module specifier","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so, my initial proposal for module fragments is that you'd do, like, `module \"#foo\" { ... } import \"#foo\";` and the host would just connect the dots as a normal module specifier","mimetype":"text/plain"},{"body":"so, my initial proposal for module fragments is that you'd do, like, <code>module &quot;#foo&quot; { ... } import &quot;#foo&quot;;</code> and the host would just connect the dots as a normal module specifier","mimetype":"text/html"}]},"ts":1655853863446,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6vLzLIkDsY6HL4bIRHop75eeYYlCYHhDnIUp-M0gzhU"},
{"content":{"body":"But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record.","msgtype":"m.text","org.matrix.msc1767.text":"But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record."},"ts":1655853890519,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5mDi0gCtxDmqHAHfLpCGPfngiljHU0jcNWVHR4N7wSo"},
{"content":{"body":"this was rejected because people said, it's weird to step on the specifier space like that and create ambiguities/an order-based resolution","msgtype":"m.text","org.matrix.msc1767.text":"this was rejected because people said, it's weird to step on the specifier space like that and create ambiguities/an order-based resolution"},"ts":1655853892390,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RUtKZ5ZqDo4KkWDns5Sb0lvkC16DjLkorm4yu99UIVA"},
{"content":{"body":"> <@kriskowal:matrix.org> But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record.\n\nand this is true for module fragments as well","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$5mDi0gCtxDmqHAHfLpCGPfngiljHU0jcNWVHR4N7wSo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record.</blockquote></mx-reply>and this is true for module fragments as well","m.relates_to":{"m.in_reply_to":{"event_id":"$5mDi0gCtxDmqHAHfLpCGPfngiljHU0jcNWVHR4N7wSo"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record.\n\nand this is true for module fragments as well","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$5mDi0gCtxDmqHAHfLpCGPfngiljHU0jcNWVHR4N7wSo?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>But I agree that for import(moduleBlock) to work, moduleBlock needs to capture the referrer module specifier in addition to the static module record.</blockquote></mx-reply>and this is true for module fragments as well","mimetype":"text/html"}]},"ts":1655853926081,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$O6mzDzsrqvcxia-TnF9ICtu7mzcz5RreVBJNFY04jT0"},
{"content":{"body":"So, I think we can agree that the module blocks in my presentation are something else.","msgtype":"m.text","org.matrix.msc1767.text":"So, I think we can agree that the module blocks in my presentation are something else."},"ts":1655854034263,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$HNVS1fFz6Hri6mkTHIiZMuLWjo5P2XOzWQywmJyGS1k"},
{"content":{"body":"Neither module blocks as proposed nor module fragments as proposed.","msgtype":"m.text","org.matrix.msc1767.text":"Neither module blocks as proposed nor module fragments as proposed."},"ts":1655854047373,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$n1Nx5wyoxtV2MWDW9SfJJNFbtCMIYxtJ-gtk9W_i65Q"},
{"content":{"body":"Let’s tentatively call it a “static module block” and as such would be reified as StaticModuleRecord.","msgtype":"m.text","org.matrix.msc1767.text":"Let’s tentatively call it a “static module block” and as such would be reified as StaticModuleRecord."},"ts":1655854077268,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bwXBG3snaEpwvW_i8w3Ey4jZgZsUpOe51SBLablfZt4"},
{"content":{"body":"I’ll throw up a strawman syntax `static module {}` just so we don’t confuse them.","format":"org.matrix.custom.html","formatted_body":"I’ll throw up a strawman syntax <code>static module {}</code> just so we don’t confuse them.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I’ll throw up a strawman syntax `static module {}` just so we don’t confuse them.","mimetype":"text/plain"},{"body":"I’ll throw up a strawman syntax <code>static module {}</code> just so we don’t confuse them.","mimetype":"text/html"}]},"ts":1655854109687,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$6GVVrkWAsK2rvj3FLBFamiVU2TOWUmQREvgivNAap-A"},
{"content":{"body":"A static module block *doesn’t* capture its referrer or import.meta.","format":"org.matrix.custom.html","formatted_body":"A static module block <em>doesn’t</em> capture its referrer or import.meta.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A static module block *doesn’t* capture its referrer or import.meta.","mimetype":"text/plain"},{"body":"A static module block <em>doesn’t</em> capture its referrer or import.meta.","mimetype":"text/html"}]},"ts":1655854157058,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1k5EP4YvW8Z00nauNZYokm_gha_FON1Be3HL29qJimc"},
{"content":{"body":"And it’s the virtue of a static module block that it’s transportable and its identity doesn’t matter.","msgtype":"m.text","org.matrix.msc1767.text":"And it’s the virtue of a static module block that it’s transportable and its identity doesn’t matter."},"ts":1655854289358,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$iDb8B5zX2-ok1nuuS_IIedRYiJF5BH1lLMNM0fJzg4M"},
{"content":{"body":"(Riffing a gist)","msgtype":"m.text","org.matrix.msc1767.text":"(Riffing a gist)"},"ts":1655854462920,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$M2Q8qsWMA7tFEF2pPJHsxtUvFJabMeLMochQzk8Ui6I"},
{"content":{"body":"This would be the module block behavior through the lens of compartment with a static module block https://gist.github.com/kriskowal/bc9d74a245853d88b7fdd6e4f412c31b","msgtype":"m.text","org.matrix.msc1767.text":"This would be the module block behavior through the lens of compartment with a static module block https://gist.github.com/kriskowal/bc9d74a245853d88b7fdd6e4f412c31b"},"ts":1655854570384,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$gsiMGdJ5uNke7NSVLvRZuwJWaQTqR9lUhHzMNbKirfQ"},
{"content":{"body":"And I believe the example from the presentation this morning more closely addresses the module fragment motivating use cases, but notably doesn’t require the static module blocks to carry a specifier. The specifiers are keys in the transported map.","msgtype":"m.text","org.matrix.msc1767.text":"And I believe the example from the presentation this morning more closely addresses the module fragment motivating use cases, but notably doesn’t require the static module blocks to carry a specifier. The specifiers are keys in the transported map."},"ts":1655854995188,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ZB-eAIYODZqO3qKy_zIPnscWlJZBTdqswRNSr8qhGKQ"},
{"content":{"body":"I would say that module fragments each have gensym'd specifiers as well ,but they can refer to each other in a little mini-map that can be transported","msgtype":"m.text","org.matrix.msc1767.text":"I would say that module fragments each have gensym'd specifiers as well ,but they can refer to each other in a little mini-map that can be transported"},"ts":1655855089916,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xtB-az0h3z4nbvr1p2X5cAsINczeO4LeI7sDPrfAWjw"},
{"content":{"body":"I’m thinking module blocks might be coherent with these, in a way that would let them land first.","msgtype":"m.text","org.matrix.msc1767.text":"I’m thinking module blocks might be coherent with these, in a way that would let them land first."},"ts":1655855099708,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$lOACe08f8or5aJjGT9heX6hNczMQbfq9JnLjVDsu4DM"},
{"content":{"body":"but then when they refer to a string specifier, it's resolved on the other side directly","msgtype":"m.text","org.matrix.msc1767.text":"but then when they refer to a string specifier, it's resolved on the other side directly"},"ts":1655855100213,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$h9RSEEhXoO5gi3pYhPlMOAL0QHQO7skN64j2FLgTj-g"},
{"content":{"body":"Mini-map is a good way to put it.","msgtype":"m.text","org.matrix.msc1767.text":"Mini-map is a good way to put it."},"ts":1655855193127,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$mWXgEL8hRha0URsI9-McjbGFk0Q1n-lUn2gQ08YWXh0"},
{"content":{"body":"Particularly because the mini-map needs to be transported together in order for it to be coherently linked.","msgtype":"m.text","org.matrix.msc1767.text":"Particularly because the mini-map needs to be transported together in order for it to be coherently linked."},"ts":1655855249375,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$r8bvI3sF_sVYI25bjh4788KqGuGxbv1_5QOFp7powEo"},
{"content":{"body":"yes","msgtype":"m.text","org.matrix.msc1767.text":"yes"},"ts":1655855255296,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vwpTzLYC0UmnOYvTLalbQ2OZluGqAeSes-r-2TpqtY4"},
{"content":{"body":"That’s a little tricky because it’s still using string specifiers for the linkage that participate in the destination loader according to its resolver semantics, which are not necessarily the same as the sender.","msgtype":"m.text","org.matrix.msc1767.text":"That’s a little tricky because it’s still using string specifiers for the linkage that participate in the destination loader according to its resolver semantics, which are not necessarily the same as the sender."},"ts":1655855315500,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IRVSSmj0Ka-yQ3wpF8eIx1nUGeSCqOn6Q2jBk6REs6I"},
{"content":{"body":"Maybe they would overshadow the specifiers in the target graph.","msgtype":"m.text","org.matrix.msc1767.text":"Maybe they would overshadow the specifiers in the target graph."},"ts":1655855361345,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ZP2UK5ef-m5WB2QLMhbZ5kZGp-wSNys_55qFccnyvhM"},
{"content":{"body":"> <@kriskowal:matrix.org> Maybe they would overshadow the specifiers in the target graph.\n\nI think this is an intuitive answer given how module fragments reference each other \"lexically\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ZP2UK5ef-m5WB2QLMhbZ5kZGp-wSNys_55qFccnyvhM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Maybe they would overshadow the specifiers in the target graph.</blockquote></mx-reply>I think this is an intuitive answer given how module fragments reference each other &quot;lexically&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$ZP2UK5ef-m5WB2QLMhbZ5kZGp-wSNys_55qFccnyvhM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> Maybe they would overshadow the specifiers in the target graph.\n\nI think this is an intuitive answer given how module fragments reference each other \"lexically\"","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ZP2UK5ef-m5WB2QLMhbZ5kZGp-wSNys_55qFccnyvhM?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Maybe they would overshadow the specifiers in the target graph.</blockquote></mx-reply>I think this is an intuitive answer given how module fragments reference each other &quot;lexically&quot;","mimetype":"text/html"}]},"ts":1655855392659,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$YiW7OPLeLC4CFfwnkfmvp_vem_S9DQSO7A3qwfiitt0"},
{"content":{"body":"like `module x { } module y { import x }`","format":"org.matrix.custom.html","formatted_body":"like <code>module x { } module y { import x }</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"like `module x { } module y { import x }`","mimetype":"text/plain"},{"body":"like <code>module x { } module y { import x }</code>","mimetype":"text/html"}]},"ts":1655855401905,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$aAPuvdz3vLFifd0gK4LkpafgNVSphhzdyD6rg3O52gM"},
{"content":{"body":"Or maybe they need a notation that allows the gensyms to be expressly separate from the namespace of the receiver.","msgtype":"m.text","org.matrix.msc1767.text":"Or maybe they need a notation that allows the gensyms to be expressly separate from the namespace of the receiver."},"ts":1655855401929,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jpQo8dAeonzVJAXd1RbSlgwTFh7qHZEDIioyB8kj66g"},
{"content":{"body":"Yes, that’s coherent.","msgtype":"m.text","org.matrix.msc1767.text":"Yes, that’s coherent."},"ts":1655855415038,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$pXmQRO12CeBwxDQGyD_hihF6H7GlTu68iMFett1nLT8"},
{"content":{"body":"Taking advantage of the distinction between x and \"x\".","msgtype":"m.text","org.matrix.msc1767.text":"Taking advantage of the distinction between x and \"x\"."},"ts":1655855429030,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$nxz4XLkibnG7WvoNXGmVeTtaNhw39Nc2Thx9gFv8jZk"},
{"content":{"body":"for import.meta, maybe we say that module fragments and blocks have literally the same import.meta as the surrounding lexical context. This would complete the loop on not calling into compartment hooks","msgtype":"m.text","org.matrix.msc1767.text":"for import.meta, maybe we say that module fragments and blocks have literally the same import.meta as the surrounding lexical context. This would complete the loop on not calling into compartment hooks"},"ts":1655855510854,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$By1ADyil5ZpvRGKtkwli9RPvrZ9x-r9aXhVM79MpDDQ"},
{"content":{"body":"(like, actually the same object identity)","msgtype":"m.text","org.matrix.msc1767.text":"(like, actually the same object identity)"},"ts":1655855525846,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vv2OltcebntI3wkQwS0sw7ClDsSRzKvmUXrcmPMtU1I"},
{"content":{"body":"I think we’re at least in agreement that the module proposal and module fragment proposal would not call compartment hooks!","msgtype":"m.text","org.matrix.msc1767.text":"I think we’re at least in agreement that the module proposal and module fragment proposal would not call compartment hooks!"},"ts":1655855544465,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$0-8_ZkRL17hy11jLbfZrdOPRVRtONKsQgJT0Q7vbTi8"},
{"content":{"body":"well, this had been a blind spot in my design thinking; I agree on that goal but wasn't sure how it'd work out","msgtype":"m.text","org.matrix.msc1767.text":"well, this had been a blind spot in my design thinking; I agree on that goal but wasn't sure how it'd work out"},"ts":1655855567173,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$u6ORIE9NH-udqEMfY81vcpuUYGLa65fqlbeSj4gifPk"},
{"content":{"body":"This also would strengthen the case for having a globalThis.Loader instead of wiring one together from globalThis.ModuleInstance. The loader would be doing a lot of lifting for module blocks and module fragments.","msgtype":"m.text","org.matrix.msc1767.text":"This also would strengthen the case for having a globalThis.Loader instead of wiring one together from globalThis.ModuleInstance. The loader would be doing a lot of lifting for module blocks and module fragments."},"ts":1655855641863,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$AqQThu_GGX5LsEN9boSmHpnR1s1QiX0arJZfcFrXz-4"},
{"content":{"body":"I hadn't followed that discussion","msgtype":"m.text","org.matrix.msc1767.text":"I hadn't followed that discussion"},"ts":1655855669768,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9wTWI49ItyLSRU2dgrtIjfs_vE07iZoEx55tN0m1LKg"},
{"content":{"body":"I’m at a bit of a loss for what the value type would be for module blocks and fragments.","msgtype":"m.text","org.matrix.msc1767.text":"I’m at a bit of a loss for what the value type would be for module blocks and fragments."},"ts":1655855763465,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$rbXf6RZKRUagfZahUNy2tyEsLhMiW_LBcl5-Gn2QGDc"},
{"content":{"body":"as a placeholder, we could refer to it as ModuleBlock for now","msgtype":"m.text","org.matrix.msc1767.text":"as a placeholder, we could refer to it as ModuleBlock for now"},"ts":1655855855317,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4dv1it1SJgYTIlcNdkmAw8xNuysB0CPocZFYN7VRVq4"},
{"content":{"body":"we know what it has in it, right?","msgtype":"m.text","org.matrix.msc1767.text":"we know what it has in it, right?"},"ts":1655855859261,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bCQ7Z0xiT7kbaw2BfCBk5d-NEqo-BRg6SIZAEIUVRyU"},
{"content":{"body":"each has a gensym, an import.meta, and a closed-over mini-map","msgtype":"m.text","org.matrix.msc1767.text":"each has a gensym, an import.meta, and a closed-over mini-map"},"ts":1655855870174,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XOavb9qPQ7vmYDBusMGWfXfnisdBODMxyvqWgKXI7Ww"},
{"content":{"body":"is that right?","msgtype":"m.text","org.matrix.msc1767.text":"is that right?"},"ts":1655855873396,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$crPOPvtPP_Pd8FY8MZnpL2nosw0m5NHC45si8wzCnAA"},
{"content":{"body":" * each has a gensym, an import.meta, and a closed-over mini-map (of gensym -> ModuleBlock)","m.new_content":{"body":"each has a gensym, an import.meta, and a closed-over mini-map (of gensym -> ModuleBlock)","msgtype":"m.text","org.matrix.msc1767.text":"each has a gensym, an import.meta, and a closed-over mini-map (of gensym -> ModuleBlock)"},"m.relates_to":{"event_id":"$XOavb9qPQ7vmYDBusMGWfXfnisdBODMxyvqWgKXI7Ww","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * each has a gensym, an import.meta, and a closed-over mini-map (of gensym -> ModuleBlock)"},"ts":1655855887039,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$rM4hhUnfXVRvjNvwSRV_o4U1Cm2AEetTvfaVuMlGn6o"},
{"content":{"body":"It also has a referrer specifier.","msgtype":"m.text","org.matrix.msc1767.text":"It also has a referrer specifier."},"ts":1655855903096,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$hH5McYRl55EIN7UbpU2kK8qQAaf4rfGYqqICzyhUhps"},
{"content":{"body":"what is that? isn't that the gensym?","msgtype":"m.text","org.matrix.msc1767.text":"what is that? isn't that the gensym?"},"ts":1655855915649,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$fAQvASnsgjfOG-RU4iRlm-qXLiJmkUr4lyWkE-_6VIg"},
{"content":{"body":"No, it’s for resolving stringy imports.","msgtype":"m.text","org.matrix.msc1767.text":"No, it’s for resolving stringy imports."},"ts":1655855935082,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$azy_mnkL5QTufe1GeW-4oPwoYlzHrSREeejW_GLpFuM"},
{"content":{"body":"Presumably inherited from the surrounding module instance.","msgtype":"m.text","org.matrix.msc1767.text":"Presumably inherited from the surrounding module instance."},"ts":1655855946548,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bSvcTwNDsE_aAY0SnCBlMd4Xeg8bTYllpBCOEKNEDUE"},
{"content":{"body":"It *doesn’t* have a StaticModuleRecord.","format":"org.matrix.custom.html","formatted_body":"It <em>doesn’t</em> have a StaticModuleRecord.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It *doesn’t* have a StaticModuleRecord.","mimetype":"text/plain"},{"body":"It <em>doesn’t</em> have a StaticModuleRecord.","mimetype":"text/html"}]},"ts":1655855989526,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$yL9DFCOY_kB3MlEpDNIKE-MuEgBZUVeqm0fPRZNhiBc"}
]