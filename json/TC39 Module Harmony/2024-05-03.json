[
{"content":{"body":"Thanks for the notes.","m.mentions":{},"msgtype":"m.text"},"ts":1714698049793,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$vZ62qrwFvMBxXyvO20FXsR6HhMnUlY_xGFjmHxG7-Sk"},
{"content":{"body":"(Hard no on a registry from me, fwiw.)","m.mentions":{},"msgtype":"m.text"},"ts":1714698158148,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$v_0D7xNGHiGvOj-K7LckLGmXr57KR-CSpwMpRhFYUC4"},
{"content":{"body":"What’s the key differentiator between `import weak` vs `import defer` or `import source`?","format":"org.matrix.custom.html","formatted_body":"What’s the key differentiator between <code>import weak</code> vs <code>import defer</code> or <code>import source</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1714698189030,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$xcXJWXvIcLDiB0QxZkjvx8IeOzl_rKtzcK8bEt1z2N8"},
{"content":{"body":"IIUC, `weak` indicates that a module (or presumably a related entity in the case of e.g. `source`) should be returned if already available but otherwise the barest of stubs should appear in its place. It's like an opportunistic ESM analog of old-school feature testing.","format":"org.matrix.custom.html","formatted_body":"IIUC, <code>weak</code> indicates that a module (or presumably a related entity in the case of e.g. <code>source</code>) should be returned if already available but otherwise the barest of stubs should appear in its place. It's like an opportunistic ESM analog of old-school feature testing.","m.mentions":{},"msgtype":"m.text"},"ts":1714701276306,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$UdrSrJtmcDMw3Q2pvV-_CdMuVGf_wUzLj09fYaSL10U"},
{"content":{"body":"The definition we were working with was \"if resolution fails, return undefined\", so more \"optional\" than anything ","msgtype":"m.text"},"ts":1714702041592,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$km52W-pHp8EG89xNDXZL1WQ3ObCVvdIztrvShiHff4M"},
{"content":{"body":"That is interesting because it could apply at finer granularity of individual bindings, syntactically like import type in ts","msgtype":"m.text"},"ts":1714702402436,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$Q6QdXQUIVgoxGEx9A1i1ZH7UzsV2wVcK_lEWCD1KKqI"},
{"content":{"body":"Could be virtualized by allowing importHook to return undefined instead of throwing","msgtype":"m.text"},"ts":1714702597123,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$EH5z2Y1OX92oQscTcxHLiNRzL1m7t6R74NEzlBRGIqM"},
{"content":{"body":"Or tolerating the exception if weakly imported. “optional import” as it were","msgtype":"m.text"},"ts":1714702637103,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$Xd9Ih-HaCRb7JCttiq8pNRqE6bzogGh1lwJtlceads8"},
{"content":{"body":"Or optionality could be indicated as we do elsewhere in destructuring with an explicit default","msgtype":"m.text"},"ts":1714702698484,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$9bcTETCQ_TD1IKlJayPrpgVtLWxNwM3KmW7i7fJ5-X8"},
{"content":{"body":"Yeah; the difference between the \"deferred\" import is that a deferred import will still error if the resolution fails, before anything else even happens. In that sense I prefer the term \"optional\" for clarity, especially given \"weak\" has existing connotations elsewhere","m.mentions":{},"msgtype":"m.text"},"ts":1714704302372,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$YrV4Y2AgvOtzT-TTtXw6C1-gIfuSqUKv7xMjV1VAyds"},
{"content":{"body":"Though I honestly can't remember what a \"source\" import is.","m.mentions":{},"msgtype":"m.text"},"ts":1714704323271,"senderName":"jakebailey","senderId":"@jakebailey:matrix.org","id":"$85GqD1RJwYuMuKQKmNUF_1IJi9FHgmPs9lgC0XVkdXo"}
]