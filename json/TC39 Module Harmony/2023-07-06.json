[
{"content":{"body":"ok to delete next week's meeting, due to plenary?","msgtype":"m.text"},"ts":1688661686545,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tgaonUmT0pBtfeXGnymE40KqIBl0MrYX7kahp2yV_cI"},
{"content":{"body":"Yes!","msgtype":"m.text"},"ts":1688663160271,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dZiceil7cFhwCDedfSAuq-m_KmVjPS-LLXeTtGBQV7o"},
{"content":{"body":"Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES sort of fits together to allow untrusted code to execute (apart from availability concerns). Does this sound right?\n\n1. Components allow you to create a new intermediate \"global scope\", but where the intrinsics and `globalThis` are still shared with those of the current Realm (a.k.a. the host?).\n2. To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed `lockdown()` in SES)\n3. Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.\n\nis that the right intuition? Is there anything I'm missing?","format":"org.matrix.custom.html","formatted_body":"<p>Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES sort of fits together to allow untrusted code to execute (apart from availability concerns). Does this sound right?</p>\n<ol>\n<li>Components allow you to create a new intermediate \"global scope\", but where the intrinsics and <code>globalThis</code> are still shared with those of the current Realm (a.k.a. the host?).</li>\n<li>To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed <code>lockdown()</code> in SES)</li>\n<li>Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.</li>\n</ol>\n<p>is that the right intuition? Is there anything I'm missing?</p>\n","msgtype":"m.text"},"ts":1688671891055,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$MQNdax9Z0jI34p-B1-59_DqJSoKNb3LaMwkdK10Bwd8"},
{"content":{"body":" * Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES/Hardened JavaScript sort of fit together to allow untrusted code to execute (apart from availability concerns). Does this sound right?\n\n1. Components allow you to create a new intermediate \"global scope\", but where the intrinsics and `globalThis` are still shared with those of the current Realm (a.k.a. the host?).\n2. To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed `lockdown()` in SES)\n3. Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.\n\nis that the right intuition? Is there anything I'm missing?","format":"org.matrix.custom.html","formatted_body":" * <p>Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES/Hardened JavaScript sort of fit together to allow untrusted code to execute (apart from availability concerns). Does this sound right?</p>\n<ol>\n<li>Components allow you to create a new intermediate \"global scope\", but where the intrinsics and <code>globalThis</code> are still shared with those of the current Realm (a.k.a. the host?).</li>\n<li>To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed <code>lockdown()</code> in SES)</li>\n<li>Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.</li>\n</ol>\n<p>is that the right intuition? Is there anything I'm missing?</p>\n","m.new_content":{"body":"Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES/Hardened JavaScript sort of fit together to allow untrusted code to execute (apart from availability concerns). Does this sound right?\n\n1. Components allow you to create a new intermediate \"global scope\", but where the intrinsics and `globalThis` are still shared with those of the current Realm (a.k.a. the host?).\n2. To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed `lockdown()` in SES)\n3. Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.\n\nis that the right intuition? Is there anything I'm missing?","format":"org.matrix.custom.html","formatted_body":"<p>Hey folks, pardon my ignorance, but I've been trying to piece together the story of how Shadow Realms, Compartments, and SES/Hardened JavaScript sort of fit together to allow untrusted code to execute (apart from availability concerns). Does this sound right?</p>\n<ol>\n<li>Components allow you to create a new intermediate \"global scope\", but where the intrinsics and <code>globalThis</code> are still shared with those of the current Realm (a.k.a. the host?).</li>\n<li>To \"safely\" run arbitrary code inside of a Component, one would need to lock down the intrinsics (i.e. the proposed <code>lockdown()</code> in SES)</li>\n<li>Because it is impractical to lock down your own Realm, that's where Shadow Realms come in. You create a separate Shadow Realm, lock that down, and run arbitrary code within a Compartment in that Realm.</li>\n</ol>\n<p>is that the right intuition? Is there anything I'm missing?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$MQNdax9Z0jI34p-B1-59_DqJSoKNb3LaMwkdK10Bwd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688671909838,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$RYU_v4H5cQroj_K68aGthpp4yhRJevMkNYEZeHrysVU"},
{"content":{"body":"In Compartments / Evaluators, the `globalThis` would not be shared, but the intrinsics would be shared for the Realm. For Evaluators, it may be possible to have different evaluators share the same global object, including the realm's original global object, though obviously that would not be useful as an integrity boundary.","format":"org.matrix.custom.html","formatted_body":"In Compartments / Evaluators, the <code>globalThis</code> would not be shared, but the intrinsics would be shared for the Realm. For Evaluators, it may be possible to have different evaluators share the same global object, including the realm's original global object, though obviously that would not be useful as an integrity boundary.","msgtype":"m.text"},"ts":1688684819412,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$q2fVuJmO-dtvyvaj7sX5BQMhUhxh2lB1w5VlaP_gTXo"},
{"content":{"body":"It should be possible to lockdown your own realm.","msgtype":"m.text"},"ts":1688684940904,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$101Y9uF7HGaEOlUWOTn-QFwqXFY_K-e9BF21ESI2hsw"},
{"content":{"body":"ShadowRealm and Compartments are mostly orthogonal. The problem that ShadowRealm solves is that some code expects a non locked down environment (compatibility), and it's impossible to virtualize another environment on some hosts (aka browsers) where the main realm's global object has powerful non configurable properties.","msgtype":"m.text"},"ts":1688685081699,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$mO_oRCOA_KSq5NDYz1EeeFsJRVGoB0U8p4CBlkXc4gw"},
{"content":{"body":"I'll let Kris Kowal correct any misrepresentation I may have made","format":"org.matrix.custom.html","formatted_body":"I'll let <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a> correct any misrepresentation I may have made","msgtype":"m.text"},"ts":1688685107309,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$nfmJRM0z3NEhF2H6oLAwlRtWhNwW2mkMMk4rx7iyQYY"}
]