[
{"content":{"body":"nicolo-ribaudo guybedford I just dropped a comment, but if discussion is warranted, I‚Äôm reminded that we at Agoric insist that all new intrinsics be reachable from globalThis by transitive property walk, until another proposal advances far enough that we‚Äôre confident we can reach all intrinsics another way.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> I just dropped a comment, but if discussion is warranted, I‚Äôm reminded that we at Agoric insist that all new intrinsics be reachable from globalThis by transitive property walk, until another proposal advances far enough that we‚Äôre confident we can reach all intrinsics another way.","msgtype":"m.text"},"ts":1683577581587,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$rDImpDM-hoI5zJhQhlzs_g6MZG9MdyCOSl2x8OtXhao"},
{"content":{"body":"So, I suggest keeping globalThis.ModuleSource in Import Parse Phases even if it‚Äôs otherwise inert. It also serves as the anchor for ljharb‚Äôs brand check accessor in environments in which `WebAssembly.Module` does not exist.","format":"org.matrix.custom.html","formatted_body":"So, I suggest keeping globalThis.ModuleSource in Import Parse Phases even if it‚Äôs otherwise inert. It also serves as the anchor for <a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>‚Äôs brand check accessor in environments in which <code>WebAssembly.Module</code> does not exist.","msgtype":"m.text"},"ts":1683577664339,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$J8uedfQqVWXbRzJOfrgyJLz4MgBeWY0R8Hi-YEPlYS4"},
{"content":{"body":"So it would not be constructible but would not be useless.","msgtype":"m.text"},"ts":1683577690473,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$k0ckbZa2lQrScJIMhB6OsNQxGJL35aou4Xc5r9CG5Cw"},
{"content":{"body":"What does this mean?\n\"Phase syntax by convention,\nnot specification\"","msgtype":"m.text"},"ts":1683577909034,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CR4yP46uTvHu3c7MKBSPWSt8f-WRoxMW9qmE7vHzAKk"},
{"content":{"body":"(from Lucas&Guy's slides)","msgtype":"m.text"},"ts":1683577917113,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$L9ZMYfPuOxEeFwiheNCHnTRppxtrbWGsVKFI4JdbfJw"},
{"content":{"body":"My team also just let me know while I was away that they wouldn‚Äôt object to `import.source`, `import.module`, &c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","format":"org.matrix.custom.html","formatted_body":"My team also just let me know while I was away that they wouldn‚Äôt object to <code>import.source</code>, <code>import.module</code>, &amp;c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","msgtype":"m.text"},"ts":1683578081354,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fBv0D8UYbzGS8y4ui3PE5X4_vtDyRdXDa8rNJlVVk3U"},
{"content":{"body":" * My team also just let me know while I was away that they decided that they wouldn‚Äôt object to `import.source`, `import.module`, &c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","format":"org.matrix.custom.html","formatted_body":" * My team also just let me know while I was away that they decided that they wouldn‚Äôt object to <code>import.source</code>, <code>import.module</code>, &amp;c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","m.new_content":{"body":"My team also just let me know while I was away that they decided that they wouldn‚Äôt object to `import.source`, `import.module`, &c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","format":"org.matrix.custom.html","formatted_body":"My team also just let me know while I was away that they decided that they wouldn‚Äôt object to <code>import.source</code>, <code>import.module</code>, &amp;c syntax even though it would break old versions of our SES lockdown shim, but we also won‚Äôt push for a change on the eve of a call for stage 3.","msgtype":"m.text"},"m.relates_to":{"event_id":"$fBv0D8UYbzGS8y4ui3PE5X4_vtDyRdXDa8rNJlVVk3U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683578109806,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8RCPx7UjqkWXWTmo2x0GkmA7B56Q3C8fa0MBdT5zHPU"},
{"content":{"body":"I significantly prefer the syntax in the current proposal FWIW","msgtype":"m.text"},"ts":1683578116025,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mk6t-VQXqYuM9vWMj--cxqlR2P00hl188xjBB6g01wk"},
{"content":{"body":"but separately, didn't we want to provide some kind of access to AbstractModuleSource from the global?","msgtype":"m.text"},"ts":1683578139056,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3hvlpv513moRbKdoC5CEUHK0tIiKBp2kXPPTRKyHBic"},
{"content":{"body":"I figured that it would be preferred. üëç","msgtype":"m.text"},"ts":1683578139866,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$QwicuggkZaghfDffwkonh_TqcL8R2pPHbAXKS5-Ni1M"},
{"content":{"body":"In the PR, Guy, Luca, and Nicol√≤ have been waffling on whether to have some kind of global access to `AbstractModuleRecord` and it hasn‚Äôt settled yet. https://github.com/tc39/proposal-import-reflection/pull/36","format":"org.matrix.custom.html","formatted_body":"In the PR, Guy, Luca, and Nicol√≤ have been waffling on whether to have some kind of global access to <code>AbstractModuleRecord</code> and it hasn‚Äôt settled yet. https://github.com/tc39/proposal-import-reflection/pull/36","msgtype":"m.text"},"ts":1683578226083,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$k3mAjB0l4tVUuK7xceulWiaK0IAFpkvbIILAg016olQ"},
{"content":{"body":"I erroneously stated no strong preference. We do want the new intrinsics to be accessible. I think the champions are otherwise on the fence at the moment.","msgtype":"m.text"},"ts":1683578301365,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$oIDQ76VJyvI4Hu2Qg1v7lqlAt7lziLp9PB_VDdJbQiI"},
{"content":{"body":"tbh for something going to Stage 3, it'd be ideal if all the spec text landed by the agenda deadline","msgtype":"m.text"},"ts":1683578334707,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DMLVWS112itHsnVurR6NbyggbI5NTkhx9I0Iulv1lKM"},
{"content":{"body":"I also expect the problem to heal naturally when some subsequent proposal makes ModuleSource real.","msgtype":"m.text"},"ts":1683578357301,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YnaneRSYFf2p9g5UzBvOrK-Aw9EhyZbqMonZ1r06ddo"},
{"content":{"body":"For something to go to Stage 3, I'd hope the presentation also explains these sorts of details which are apparently still under debate (like sourceText vs @@toStringTag). Maybe this meeting should be more of a \"call for final review\"","msgtype":"m.text"},"ts":1683578567233,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RL6NWSB-9uB2RtzFmFFaRX7mhdgy25aHg9J4OK2a4G8"},
{"content":{"body":"Kris Kowal: yes, at least if we ship Wasm first, then `WebAssembly.Module` will provide AbstractModuleSource reachability through the WebAssembly global.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: yes, at least if we ship Wasm first, then <code>WebAssembly.Module</code> will provide AbstractModuleSource reachability through the WebAssembly global.","msgtype":"m.text"},"ts":1683578642589,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$AMMrnQE0LfQozE0OyjQqquNz-8tHD2sDnaj5TY5A5kU"},
{"content":{"body":"Is WASM shipping in 262?","msgtype":"m.text"},"ts":1683578667745,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_ljW2uLNhk1SusWgYKNEQGW4Zav5bWEp_gLtn5z7EN0"},
{"content":{"body":"There will be environments in which WebAssembly will not exist but AbstractModuleSource will.","msgtype":"m.text"},"ts":1683578697931,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Mw1gqrMxFcz_4FStMhAWIPtKa7pe-6DKA-25L9JOyyw"},
{"content":{"body":"@littledan the PR was ready and reviewed last week. nicolo-ribaudo just has lots of editorial feedback. I'd argue a lot of the remaining questions are editorial, apart from the global `ModuleSource` point of course which Luca only brought up on Friday unfrotunately","format":"org.matrix.custom.html","formatted_body":"@littledan the PR was ready and reviewed last week. <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> just has lots of editorial feedback. I'd argue a lot of the remaining questions are editorial, apart from the global <code>ModuleSource</code> point of course which Luca only brought up on Friday unfrotunately","msgtype":"m.text"},"ts":1683578715791,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$lhC_gh1s246o9fPFyO6M63FmPl9si0atZykSaDD4Gbw"},
{"content":{"body":"Kris Kowal: in such environments, AbstractModuleSource would be unreachable","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: in such environments, AbstractModuleSource would be unreachable","msgtype":"m.text"},"ts":1683578748292,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$KnLC4oq86IFN80-5nXFwJcytqNwJDT2prlrhy7vkt0E"},
{"content":{"body":"but yes, I did bring this whole argument up to Luca when he suggested it","msgtype":"m.text"},"ts":1683578764722,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$9pdE5_2V2XJmdAd9aCXK3rwK3SeTZnTvHyTKNWcVmyQ"},
{"content":{"body":"his argument was that `global.ModuleSource` being useless seems an untennable thing to ship","format":"org.matrix.custom.html","formatted_body":"his argument was that <code>global.ModuleSource</code> being useless seems an untennable thing to ship","msgtype":"m.text"},"ts":1683578801495,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$JCgnHosFE4yJ6-tCxJYKxgZaT1rccRHBV2sGw7qT-9c"},
{"content":{"body":"and he was concerned about getting agreement on that","msgtype":"m.text"},"ts":1683578820955,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$YNIM_uJWnwUpZjXkM063pgJDCmTXVzQbkEOz_JI0D4k"},
{"content":{"body":"in that we should ship features that have, well, features","msgtype":"m.text"},"ts":1683578832937,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$FTpE2XqRqpIGdAoJ-WWJVmcfbq4gkmBVp970J5pOQdU"},
{"content":{"body":"> <@guybedford:matrix.org> @littledan the PR was ready and reviewed last week. nicolo-ribaudo just has lots of editorial feedback. I'd argue a lot of the remaining questions are editorial, apart from the global `ModuleSource` point of course which Luca only brought up on Friday unfrotunately\n\nYeah I think you've done a good job here, Guy. From my perspective, I'd be happy if you landed the PR any time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$lhC_gh1s246o9fPFyO6M63FmPl9si0atZykSaDD4Gbw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">@guybedford:matrix.org</a><br>@littledan the PR was ready and reviewed last week. <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> just has lots of editorial feedback. I'd argue a lot of the remaining questions are editorial, apart from the global <code>ModuleSource</code> point of course which Luca only brought up on Friday unfrotunately</blockquote></mx-reply>Yeah I think you've done a good job here, Guy. From my perspective, I'd be happy if you landed the PR any time","m.relates_to":{"m.in_reply_to":{"event_id":"$lhC_gh1s246o9fPFyO6M63FmPl9si0atZykSaDD4Gbw"}},"msgtype":"m.text"},"ts":1683578962244,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3WxZTDKRPLGUsgWCRLZqgheZBTuqnHYKd4YV4xuUxsw"},
{"content":{"body":"at the same time, this is the first meeting where the champion group will be presenting the newly concrete scope (Wasm source modules) and the final syntax (with the excellent explanation in terms of loading stages) to the committee. It might be best if we present this to committee this meeting, let it sink in, call for more reviews, and propose advancement next meeting (unless there is some reason for more urgency that I can't see)","msgtype":"m.text"},"ts":1683579048535,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$03tN5EjpP2abv_gfBSmFezcxALUBrt_JJ4r5BZX3Lsw"},
{"content":{"body":"The main point of urgency I feel at this point is just that if we know which spec gets to stage3, then the layering questions all start to fall out much more easily from there","msgtype":"m.text"},"ts":1683579132589,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$VFZpmQUbB7BsFoZvvMPjfZz9Xhn95KnQI_FY1XCgUvc"},
{"content":{"body":"because already there's a lot of cross-over in the spec text","msgtype":"m.text"},"ts":1683579144009,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Zx2ISepXL5MvD_mGjj3jNR2Nrc0TKIKS5XhwEOPjGe4"},
{"content":{"body":"Yeah editorial churn is definitely costly but I think it shouldn't really affect decisions like this ideally. I don't think this should wait more than 1 meeting though.","msgtype":"m.text"},"ts":1683579256622,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jn_Ijjl2vTmI0ZeChziZigefQvLJiHjfenlJoLxud-c"},
{"content":{"body":"and we're still going back and forth among this group about key questions, like should this contain an inert ModuleSource. We should strongly settle on decisions to get to Stage 3.","msgtype":"m.text"},"ts":1683579389463,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xpJ5epvrtYqpLxOYlwy2DAVx-wmZGyBwvcRhvySFJWg"},
{"content":{"body":"At least, I think this is the last open question and it‚Äôs not that hard to settle. I expect we‚Äôll have all important decisions settled by end of meeting tomorrow.","msgtype":"m.text"},"ts":1683579611037,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$WiKeW1XrGTtGeUDA-pwDE33ST4jJn-_Nk0aUZ2-17dE"},
{"content":{"body":"Emphatically eager to see this go forward as soon as possible.","msgtype":"m.text"},"ts":1683579630957,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wzkpkHjM1p3O00LxtS5c1FLz2o4H10YsM-OjEyrEFqw"},
{"content":{"body":"Do we expect to ever have hook-ability for asset references?","msgtype":"m.text"},"ts":1683581113318,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7HyTFPQbE1yE1NkAnyr8udXuaH9rn3KzN1OuGBygWto"},
{"content":{"body":"I expect we will.","msgtype":"m.text"},"ts":1683581588789,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$GTxm19fgIWxOyOixS0wawxi0zfKxQBAeixf-0o8y2ao"},
{"content":{"body":"And I think that door remains open with the proposals as they stand.","msgtype":"m.text"},"ts":1683581619322,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ElD0cZvwyc3oEAnY9XhJLP_5T9GfwR18XvmfB5Ma-tI"},
{"content":{"body":"My intuition is that we‚Äôd introduce `importAssetHook` to the `Module` constructor option which would bypass `importHook` and return a new `ModuleAsset` type. The `ModuleAsset` would have a hook for producing one or more sources or modules.","format":"org.matrix.custom.html","formatted_body":"My intuition is that we‚Äôd introduce <code>importAssetHook</code> to the <code>Module</code> constructor option which would bypass <code>importHook</code> and return a new <code>ModuleAsset</code> type. The <code>ModuleAsset</code> would have a hook for producing one or more sources or modules.","msgtype":"m.text"},"ts":1683581713759,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$LpShM56wvgNHaCXscJ8xf4oeGWXO5GQY93iBrPbU_uo"},
{"content":{"body":"Or mechanisms to that effect.","msgtype":"m.text"},"ts":1683581746226,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$d1HZQPLntoLxNf8EV-z9puSpQwgB-vEEA0nQw8kNPS8"},
{"content":{"body":"yeah that makes sense, and then the normal import pipeline will call both hooks","msgtype":"m.text"},"ts":1683581952545,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4fz4Ng6Ed3pyIwWPOPH1PvPAKeAbLimfSXGkyYQwxTI"},
{"content":{"body":"Assuming import assets would express their entire cache key up front (be orthogonal to import attributes), there probably would either be a single corresponding ModuleSource or no corresponding module source at all, so there might instead just be a hook for getting the bytes and an optional behavior for promoting it to source.","msgtype":"m.text"},"ts":1683581983971,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$cJD4icjNKX46GxJFC0rezUWZiTZvGq1PLHOXiqhanbY"}
]