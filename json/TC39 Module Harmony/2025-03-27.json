[
{"content":{"body":"guybedford: if I have a CSP of `script-src 'self'`, and then `import source foo from './foo.wasm'; WebAssembly.instantiate(foo)`, does that work or does the CSP also need to include `unsafe-wasm-eval`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a>: if I have a CSP of <code>script-src 'self'</code>, and then <code>import source foo from './foo.wasm'; WebAssembly.instantiate(foo)</code>, does that work or does the CSP also need to include <code>unsafe-wasm-eval</code>?","m.mentions":{"user_ids":["@guybedford:matrix.org"]},"msgtype":"m.text"},"ts":1743084635254,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zbIC5htXEr-r5b-V0guNke-5XtCWfn2MGoX7LzpeptE"},
{"content":{"body":"I know the `import source` part should work; I'm asking if the `WebAssembly.instantiate` has a separate gate. I _think_ the idea is that it does not have a separate gate and so that works? the wasm csp proposal has `HostEnsureCanCompileWasmBytes` which claims to only guard `WebAssembly.compile` and `compileStreaming`","format":"org.matrix.custom.html","formatted_body":"I know the <code>import source</code> part should work; I'm asking if the <code>WebAssembly.instantiate</code> has a separate gate. I <em>think</em> the idea is that it does not have a separate gate and so that works? the wasm csp proposal has <code>HostEnsureCanCompileWasmBytes</code> which claims to only guard <code>WebAssembly.compile</code> and <code>compileStreaming</code>","m.mentions":{},"msgtype":"m.text"},"ts":1743084757568,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QNwVorFsC6E36ORn2mjBcPvJxgkizdncz9gWCmtS9Do"},
{"content":{"body":"* I know the `import source` part should work; I'm asking if the `WebAssembly.instantiate` has a separate gate. I _think_ the idea is that it does not have a separate gate and so the snippet above works? the wasm csp proposal has `HostEnsureCanCompileWasmBytes` which claims to only guard `WebAssembly.compile` and `compileStreaming`","format":"org.matrix.custom.html","formatted_body":"* I know the <code>import source</code> part should work; I'm asking if the <code>WebAssembly.instantiate</code> has a separate gate. I <em>think</em> the idea is that it does not have a separate gate and so the snippet above works? the wasm csp proposal has <code>HostEnsureCanCompileWasmBytes</code> which claims to only guard <code>WebAssembly.compile</code> and <code>compileStreaming</code>","m.mentions":{},"m.new_content":{"body":"I know the `import source` part should work; I'm asking if the `WebAssembly.instantiate` has a separate gate. I _think_ the idea is that it does not have a separate gate and so the snippet above works? the wasm csp proposal has `HostEnsureCanCompileWasmBytes` which claims to only guard `WebAssembly.compile` and `compileStreaming`","format":"org.matrix.custom.html","formatted_body":"I know the <code>import source</code> part should work; I'm asking if the <code>WebAssembly.instantiate</code> has a separate gate. I <em>think</em> the idea is that it does not have a separate gate and so the snippet above works? the wasm csp proposal has <code>HostEnsureCanCompileWasmBytes</code> which claims to only guard <code>WebAssembly.compile</code> and <code>compileStreaming</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$QNwVorFsC6E36ORn2mjBcPvJxgkizdncz9gWCmtS9Do","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1743084790406,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eqplfriV6heUmBDILBIhAHE07YKvHEqEdP-vAZ94onE"},
{"content":{"body":"I unfortunately cannot join today. I still plan to review Guy's PRs.","m.mentions":{},"msgtype":"m.text"},"ts":1743084804374,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ZF0IlOohgUmVxLmmyhScZJ947oPt4xKBCSVEfDmiG4E"},
{"content":{"body":"Thanks nicolo-ribaudo I will wait for your review on https://github.com/WebAssembly/esm-integration/pull/104 before landing it. It would be nice to be able to land the corresponding Node.js PR before the 24 release cutoff with this if possible as well.","format":"org.matrix.custom.html","formatted_body":"Thanks <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a> I will wait for your review on https://github.com/WebAssembly/esm-integration/pull/104 before landing it. It would be nice to be able to land the corresponding Node.js PR before the 24 release cutoff with this if possible as well.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1743087851606,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$p43QpSBt8IomXAkq7842D5cfHOfq2tH1DKTDSKhHATQ"},
{"content":{"body":"v24 was cut off already","m.mentions":{},"m.relates_to":{"event_id":"$p43QpSBt8IomXAkq7842D5cfHOfq2tH1DKTDSKhHATQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$p43QpSBt8IomXAkq7842D5cfHOfq2tH1DKTDSKhHATQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1743087958074,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$fjlwK1JnwxIhgWXZLB64iycLVqK17ccZZaRtPBGc0P4"},
{"content":{"body":"https://github.com/nodejs/node/pull/57609","m.mentions":{},"m.relates_to":{"event_id":"$p43QpSBt8IomXAkq7842D5cfHOfq2tH1DKTDSKhHATQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$fjlwK1JnwxIhgWXZLB64iycLVqK17ccZZaRtPBGc0P4"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1743087976097,"senderName":"Chengzhong Wu","senderId":"@legendecas:matrix.org","id":"$x4yjBcXLkwrovbL52-0DGT8AZQumFAwu6pryTq25ARY"},
{"content":{"body":"ahh right, thanks, landing as soon as possible then at least","m.mentions":{},"m.relates_to":{"event_id":"$p43QpSBt8IomXAkq7842D5cfHOfq2tH1DKTDSKhHATQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$x4yjBcXLkwrovbL52-0DGT8AZQumFAwu6pryTq25ARY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1743090931564,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$BGAWTq9MEHKsXpPrZLySojlgOjYvbCrm2gvbYeb_PCw"}
]