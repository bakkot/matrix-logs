[
{"content":{"body":"there are 2 things in the language have this property, `export function` and `export var`.","format":"org.matrix.custom.html","formatted_body":"there are 2 things in the language have this property, <code>export function</code> and <code>export var</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"there are 2 things in the language have this property, `export function` and `export var`.","mimetype":"text/plain"},{"body":"there are 2 things in the language have this property, <code>export function</code> and <code>export var</code>.","mimetype":"text/html"}]},"ts":1657424545111,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$20rXOqC5DRt8XiRq2u_iOkOTDzGtzwVBradH2uotgRY"},
{"content":{"body":"I can see two way to solve this problem but they all have their own problems","msgtype":"m.text","org.matrix.msc1767.text":"I can see two way to solve this problem but they all have their own problems"},"ts":1657424568901,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$IHEiRStosJ286vWKUeJsA0kox81G3Nar5JtJiLqe7yE"},
{"content":{"body":" * I can see ~~two way~~ only one way to solve this problem but they all have their own problems","m.new_content":{"body":"I can see ~~two way~~ only one way to solve this problem but they all have their own problems","msgtype":"m.text","org.matrix.msc1767.text":"I can see ~~two way~~ only one way to solve this problem but they all have their own problems"},"m.relates_to":{"event_id":"$IHEiRStosJ286vWKUeJsA0kox81G3Nar5JtJiLqe7yE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I can see ~~two way~~ only one way to solve this problem but they all have their own problems"},"ts":1657424795513,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$CMJNc3Myura5WfueyaZX3yqwipgtrZL71xPrWVVAZ_M"},
{"content":{"body":" * I can see <del>two way</del> only one way to solve this problem but they all have their own problems","format":"org.matrix.custom.html","formatted_body":" * I can see <del>two way</del> only one way to solve this problem but they all have their own problems","m.new_content":{"body":"I can see <del>two way</del> only one way to solve this problem but they all have their own problems","format":"org.matrix.custom.html","formatted_body":"I can see <del>two way</del> only one way to solve this problem but they all have their own problems","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can see <del>two way</del> only one way to solve this problem but they all have their own problems","mimetype":"text/plain"},{"body":"I can see <del>two way</del> only one way to solve this problem but they all have their own problems","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$IHEiRStosJ286vWKUeJsA0kox81G3Nar5JtJiLqe7yE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I can see <del>two way</del> only one way to solve this problem but they all have their own problems","mimetype":"text/plain"},{"body":" * I can see <del>two way</del> only one way to solve this problem but they all have their own problems","mimetype":"text/html"}]},"ts":1657424804933,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-nE0Acf2Ms2GbzXFe2cNwSnQaSdYAL1B7RfPQRpgnf0"},
{"content":{"body":"having two stage initialization for virtual modules, just like systemjs\n\n```js\nconst record = static module {\n    export function a() {}\n    console.log(a)\n}\n```\n\nbecomes\n\n```js\nconst record = {\n    bindings: [{export: \"a\"}],\n    initialize(env, context) {\n        function a() {}\n        env.a = a\n        return () => {\n            console.log(a)\n        }\n    }\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>having two stage initialization for virtual modules, just like systemjs</p>\n<pre><code class=\"language-js\">const record = static module {\n    export function a() {}\n    console.log(a)\n}\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-js\">const record = {\n    bindings: [{export: &quot;a&quot;}],\n    initialize(env, context) {\n        function a() {}\n        env.a = a\n        return () =&gt; {\n            console.log(a)\n        }\n    }\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"having two stage initialization for virtual modules, just like systemjs\n\n```js\nconst record = static module {\n    export function a() {}\n    console.log(a)\n}\n```\n\nbecomes\n\n```js\nconst record = {\n    bindings: [{export: \"a\"}],\n    initialize(env, context) {\n        function a() {}\n        env.a = a\n        return () => {\n            console.log(a)\n        }\n    }\n}\n```","mimetype":"text/plain"},{"body":"<p>having two stage initialization for virtual modules, just like systemjs</p>\n<pre><code class=\"language-js\">const record = static module {\n    export function a() {}\n    console.log(a)\n}\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-js\">const record = {\n    bindings: [{export: &quot;a&quot;}],\n    initialize(env, context) {\n        function a() {}\n        env.a = a\n        return () =&gt; {\n            console.log(a)\n        }\n    }\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657424950706,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Ree5c_H7fCfMs4T2eqW4WtiOxKncqPKxdHqWqOtRG8o"},
{"content":{"body":"but the problem is, it is allowing the virtual module to run some arbitrary code _before_ the evaluation stage","format":"org.matrix.custom.html","formatted_body":"but the problem is, it is allowing the virtual module to run some arbitrary code <em>before</em> the evaluation stage","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"but the problem is, it is allowing the virtual module to run some arbitrary code _before_ the evaluation stage","mimetype":"text/plain"},{"body":"but the problem is, it is allowing the virtual module to run some arbitrary code <em>before</em> the evaluation stage","mimetype":"text/html"}]},"ts":1657425055395,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$XjXdrDPnNMwxsHUwsawNuVUJhaGbxl7-L3zI3w_15Vs"},
{"content":{"body":"That's correct about the emulation. But SystemJS has very different contraints of course, and yes likely doesn't fit this model. If needing this level of parity you might be better off just using a static record from a string source to do the emulation I think, then passing bindings through import.meta or custom imports?","msgtype":"m.text","org.matrix.msc1767.text":"That's correct about the emulation. But SystemJS has very different contraints of course, and yes likely doesn't fit this model. If needing this level of parity you might be better off just using a static record from a string source to do the emulation I think, then passing bindings through import.meta or custom imports?"},"ts":1657425570439,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$AD0wf7_Q5qb8w1R8PV67yzbcpm54jgBl15eqQnnHrC8"},
{"content":{"body":"I'm considering (and my use case need) an eval-free version of downlevel compiling module blocks, so I hope the Virtual Module can do the full emulation","msgtype":"m.text","org.matrix.msc1767.text":"I'm considering (and my use case need) an eval-free version of downlevel compiling module blocks, so I hope the Virtual Module can do the full emulation"},"ts":1657425739314,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ej-08_k8qKbfSdQxl6iaV2r_U_YP6G5BBWYrPnRZvLQ"},
{"content":{"body":"What if `a` is rewritten to `env.a` at every mention?","format":"org.matrix.custom.html","formatted_body":"What if <code>a</code> is rewritten to <code>env.a</code> at every mention?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"What if `a` is rewritten to `env.a` at every mention?","mimetype":"text/plain"},{"body":"What if <code>a</code> is rewritten to <code>env.a</code> at every mention?","mimetype":"text/html"}]},"ts":1657425976606,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ooQ08BzgDFweHorqaAnR9jQrBhbKoZI7gX-V0AnohMI"},
{"content":{"body":"> <@kriskowal:matrix.org> What if `a` is rewritten to `env.a` at every mention?\n\nThe problem is circular reference + function hoist","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ooQ08BzgDFweHorqaAnR9jQrBhbKoZI7gX-V0AnohMI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>What if <code>a</code> is rewritten to <code>env.a</code> at every mention?</blockquote></mx-reply>The problem is circular reference + function hoist","m.relates_to":{"m.in_reply_to":{"event_id":"$ooQ08BzgDFweHorqaAnR9jQrBhbKoZI7gX-V0AnohMI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@kriskowal:matrix.org> What if `a` is rewritten to `env.a` at every mention?\n\nThe problem is circular reference + function hoist","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$ooQ08BzgDFweHorqaAnR9jQrBhbKoZI7gX-V0AnohMI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>What if <code>a</code> is rewritten to <code>env.a</code> at every mention?</blockquote></mx-reply>The problem is circular reference + function hoist","mimetype":"text/html"}]},"ts":1657426023799,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$pSve-jO0Y0dYLvB4j8kOLA-GR2exqHRuG-h-x42qjfs"},
{"content":{"body":"Consider these two modules compiled into Virtual module:\n\n```js\n```","format":"org.matrix.custom.html","formatted_body":"<p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\"></code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Consider these two modules compiled into Virtual module:\n\n```js\n```","mimetype":"text/plain"},{"body":"<p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\"></code></pre>\n","mimetype":"text/html"}]},"ts":1657426049385,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-pvnt5asjti5wnZDuQYtmeCYmcNhgwj7B2Tq5b-gm0s"},
{"content":{"body":" * Consider these two modules compiled into Virtual module:\n\n\n```js\nimport {b} from './b'\nexport function a() {}\nconsole.log(b)\n```\n\n```js\nimport {a} from './a'\nexport function b() {}\nconsole.log(a)\n```","format":"org.matrix.custom.html","formatted_body":" * <p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\">import {b} from './b'\nexport function a() {}\nconsole.log(b)\n</code></pre>\n<pre><code class=\"language-js\">import {a} from './a'\nexport function b() {}\nconsole.log(a)\n</code></pre>\n","m.new_content":{"body":"Consider these two modules compiled into Virtual module:\n\n\n```js\nimport {b} from './b'\nexport function a() {}\nconsole.log(b)\n```\n\n```js\nimport {a} from './a'\nexport function b() {}\nconsole.log(a)\n```","format":"org.matrix.custom.html","formatted_body":"<p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\">import {b} from './b'\nexport function a() {}\nconsole.log(b)\n</code></pre>\n<pre><code class=\"language-js\">import {a} from './a'\nexport function b() {}\nconsole.log(a)\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Consider these two modules compiled into Virtual module:\n\n\n```js\nimport {b} from './b'\nexport function a() {}\nconsole.log(b)\n```\n\n```js\nimport {a} from './a'\nexport function b() {}\nconsole.log(a)\n```","mimetype":"text/plain"},{"body":"<p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\">import {b} from './b'\nexport function a() {}\nconsole.log(b)\n</code></pre>\n<pre><code class=\"language-js\">import {a} from './a'\nexport function b() {}\nconsole.log(a)\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$-pvnt5asjti5wnZDuQYtmeCYmcNhgwj7B2Tq5b-gm0s","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Consider these two modules compiled into Virtual module:\n\n\n```js\nimport {b} from './b'\nexport function a() {}\nconsole.log(b)\n```\n\n```js\nimport {a} from './a'\nexport function b() {}\nconsole.log(a)\n```","mimetype":"text/plain"},{"body":" * <p>Consider these two modules compiled into Virtual module:</p>\n<pre><code class=\"language-js\">import {b} from './b'\nexport function a() {}\nconsole.log(b)\n</code></pre>\n<pre><code class=\"language-js\">import {a} from './a'\nexport function b() {}\nconsole.log(a)\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657426092959,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$kilT8dTqHd-WrLGRkaEqyW0-5I9qFZLBMHUDXmepvIs"},
{"content":{"body":"oh wait, this works. let me consider that again","msgtype":"m.text","org.matrix.msc1767.text":"oh wait, this works. let me consider that again"},"ts":1657426265939,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$yr1idnvZRfOGUstTt07x1tVEQJ7JOMFs1cKAIksEgkQ"},
{"content":{"body":" * <del>oh wait, this works. let me consider that again</del>","format":"org.matrix.custom.html","formatted_body":" * <del>oh wait, this works. let me consider that again</del>","m.new_content":{"body":"<del>oh wait, this works. let me consider that again</del>","format":"org.matrix.custom.html","formatted_body":"<del>oh wait, this works. let me consider that again</del>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"<del>oh wait, this works. let me consider that again</del>","mimetype":"text/plain"},{"body":"<del>oh wait, this works. let me consider that again</del>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$yr1idnvZRfOGUstTt07x1tVEQJ7JOMFs1cKAIksEgkQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * <del>oh wait, this works. let me consider that again</del>","mimetype":"text/plain"},{"body":" * <del>oh wait, this works. let me consider that again</del>","mimetype":"text/html"}]},"ts":1657429606741,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$KAq1WLhKb_MP5w9LTXtYnuA4y61Tz9qUZvtSBr1Rp8U"},
{"content":{"body":"I compared it with CommonJS (because the code above works after being compiled into CommonJS).","msgtype":"m.text","org.matrix.msc1767.text":"I compared it with CommonJS (because the code above works after being compiled into CommonJS)."},"ts":1657429711525,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$gHtE1sQArK7_gI0wW5PT_hbueIVouC8SjLQivjRZFfY"},
{"content":{"body":"```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657429849976,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$31mCn8upNAVqEU13A2nQ4OEENsK7QY4B0q6S7Qlgf2c"},
{"content":{"body":"So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)","format":"org.matrix.custom.html","formatted_body":"So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)","mimetype":"text/plain"},{"body":"So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)","mimetype":"text/html"}]},"ts":1657429980626,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$SR07Y7JQIh5_35FGApFAF3sJmB-N9O008s9NaTTeLP0"},
{"content":{"body":" * So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)\n\n```js\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"b\", {\n    enumerable: true,\n    get: ()=>b\n});\nconst _a = require(\"./a\");\nconsole.log(_a.a);\nfunction b() {}\n```","format":"org.matrix.custom.html","formatted_body":" * <p>So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)</p>\n<pre><code class=\"language-js\">&quot;use strict&quot;;\nObject.defineProperty(exports, &quot;__esModule&quot;, {\n    value: true\n});\nObject.defineProperty(exports, &quot;b&quot;, {\n    enumerable: true,\n    get: ()=&gt;b\n});\nconst _a = require(&quot;./a&quot;);\nconsole.log(_a.a);\nfunction b() {}\n</code></pre>\n","m.new_content":{"body":"So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)\n\n```js\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"b\", {\n    enumerable: true,\n    get: ()=>b\n});\nconst _a = require(\"./a\");\nconsole.log(_a.a);\nfunction b() {}\n```","format":"org.matrix.custom.html","formatted_body":"<p>So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)</p>\n<pre><code class=\"language-js\">&quot;use strict&quot;;\nObject.defineProperty(exports, &quot;__esModule&quot;, {\n    value: true\n});\nObject.defineProperty(exports, &quot;b&quot;, {\n    enumerable: true,\n    get: ()=&gt;b\n});\nconst _a = require(&quot;./a&quot;);\nconsole.log(_a.a);\nfunction b() {}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)\n\n```js\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"b\", {\n    enumerable: true,\n    get: ()=>b\n});\nconst _a = require(\"./a\");\nconsole.log(_a.a);\nfunction b() {}\n```","mimetype":"text/plain"},{"body":"<p>So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)</p>\n<pre><code class=\"language-js\">&quot;use strict&quot;;\nObject.defineProperty(exports, &quot;__esModule&quot;, {\n    value: true\n});\nObject.defineProperty(exports, &quot;b&quot;, {\n    enumerable: true,\n    get: ()=&gt;b\n});\nconst _a = require(&quot;./a&quot;);\nconsole.log(_a.a);\nfunction b() {}\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$SR07Y7JQIh5_35FGApFAF3sJmB-N9O008s9NaTTeLP0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * So CommonJS behave more like this. They also have a \"pre-evaluation\" to setup those bindings (before and after `require` calls)\n\n```js\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"b\", {\n    enumerable: true,\n    get: ()=>b\n});\nconst _a = require(\"./a\");\nconsole.log(_a.a);\nfunction b() {}\n```","mimetype":"text/plain"},{"body":" * <p>So CommonJS behave more like this. They also have a &quot;pre-evaluation&quot; to setup those bindings (before and after <code>require</code> calls)</p>\n<pre><code class=\"language-js\">&quot;use strict&quot;;\nObject.defineProperty(exports, &quot;__esModule&quot;, {\n    value: true\n});\nObject.defineProperty(exports, &quot;b&quot;, {\n    enumerable: true,\n    get: ()=&gt;b\n});\nconst _a = require(&quot;./a&quot;);\nconsole.log(_a.a);\nfunction b() {}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1657430162380,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$h0YSzNxa29lCwo8A6uQYtyfcovv49UcZEtsLp4I5MKY"},
{"content":{"body":" * ```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```\n\nBut this is problematic because of then-able","format":"org.matrix.custom.html","formatted_body":" * <pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n<p>But this is problematic because of then-able</p>\n","m.new_content":{"body":"```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```\n\nBut this is problematic because of then-able","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n<p>But this is problematic because of then-able</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```\n\nBut this is problematic because of then-able","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n<p>But this is problematic because of then-able</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$31mCn8upNAVqEU13A2nQ4OEENsK7QY4B0q6S7Qlgf2c","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * ```js\nconst record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(\"./b\")\n        console.log(mod.b)\n    }\n}\n```\n\nBut this is problematic because of then-able","mimetype":"text/plain"},{"body":" * <pre><code class=\"language-js\">const record = {\n    bindings: [],\n    async initialize(env, context) {\n        function a() {}\n        env.a = a\n        \n        const mod = await context.import(&quot;./b&quot;)\n        console.log(mod.b)\n    }\n}\n</code></pre>\n<p>But this is problematic because of then-able</p>\n","mimetype":"text/html"}]},"ts":1657430227974,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QMeI-1P9NEvIOlntMtBufsgHZ1kn7fw2Gw9mlKSPxZg"},
{"content":{"body":"I can think of some way to alleviate this problem, to make `env` and `context` in some kind of dead zone in this pre-evaluation stage, which means\n\n```js\n    initialize(env, context) {\n        // when in here, context is an empty object with no \"meta\" or \"import\" property on it\n        // when in here, any other property access than \"a\" throws a TDZ error\n        function a() {}\n        env.a = a\n        return () => {\n            // now access env and context is ok\n            env.console.log(a)\n        }\n    }\n```\n\nConstruct all assets => Link stage => Pre-evaluation (run all `initialize` function with TDZ `env` and `context` and collect the return closure) => `env` and `context` out of TDZ => Evaluation","format":"org.matrix.custom.html","formatted_body":"<p>I can think of some way to alleviate this problem, to make <code>env</code> and <code>context</code> in some kind of dead zone in this pre-evaluation stage, which means</p>\n<pre><code class=\"language-js\">    initialize(env, context) {\n        // when in here, context is an empty object with no &quot;meta&quot; or &quot;import&quot; property on it\n        // when in here, any other property access than &quot;a&quot; throws a TDZ error\n        function a() {}\n        env.a = a\n        return () =&gt; {\n            // now access env and context is ok\n            env.console.log(a)\n        }\n    }\n</code></pre>\n<p>Construct all assets =&gt; Link stage =&gt; Pre-evaluation (run all <code>initialize</code> function with TDZ <code>env</code> and <code>context</code> and collect the return closure) =&gt; <code>env</code> and <code>context</code> out of TDZ =&gt; Evaluation</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can think of some way to alleviate this problem, to make `env` and `context` in some kind of dead zone in this pre-evaluation stage, which means\n\n```js\n    initialize(env, context) {\n        // when in here, context is an empty object with no \"meta\" or \"import\" property on it\n        // when in here, any other property access than \"a\" throws a TDZ error\n        function a() {}\n        env.a = a\n        return () => {\n            // now access env and context is ok\n            env.console.log(a)\n        }\n    }\n```\n\nConstruct all assets => Link stage => Pre-evaluation (run all `initialize` function with TDZ `env` and `context` and collect the return closure) => `env` and `context` out of TDZ => Evaluation","mimetype":"text/plain"},{"body":"<p>I can think of some way to alleviate this problem, to make <code>env</code> and <code>context</code> in some kind of dead zone in this pre-evaluation stage, which means</p>\n<pre><code class=\"language-js\">    initialize(env, context) {\n        // when in here, context is an empty object with no &quot;meta&quot; or &quot;import&quot; property on it\n        // when in here, any other property access than &quot;a&quot; throws a TDZ error\n        function a() {}\n        env.a = a\n        return () =&gt; {\n            // now access env and context is ok\n            env.console.log(a)\n        }\n    }\n</code></pre>\n<p>Construct all assets =&gt; Link stage =&gt; Pre-evaluation (run all <code>initialize</code> function with TDZ <code>env</code> and <code>context</code> and collect the return closure) =&gt; <code>env</code> and <code>context</code> out of TDZ =&gt; Evaluation</p>\n","mimetype":"text/html"}]},"ts":1657436695963,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Znvf2jO9X6ksPbJjdZmRizNP-kzO0mzD7hNPiD3n7rY"}
]