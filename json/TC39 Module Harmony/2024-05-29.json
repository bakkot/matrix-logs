[
{"content":{"body":"At the last TG3 meeting, I volunteered to figure out what we used `exports` (a list of all exported names) for on `ModuleSource`. The answer is somewhat weak…","format":"org.matrix.custom.html","formatted_body":"At the last TG3 meeting, I volunteered to figure out what we used <code>exports</code> (a list of all exported names) for on <code>ModuleSource</code>. The answer is somewhat weak…","m.mentions":{},"msgtype":"m.text"},"ts":1716943837367,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$JnCnkCiZd4kERglUNSJsBwcdlvG7ESgAsRhHl1yKK3g"},
{"content":{"body":"The virtual module source “handler” must contain a property that describes all the names it exports and all the specifiers it imports and reexports.","m.mentions":{},"msgtype":"m.text"},"ts":1716943922976,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$PTQQd8JYkWfcx5FhqC-eDb2R0iXXNkU4U-4TlFz4gjY"},
{"content":{"body":"There is no firm reason that the schema of the virtual module source handler should be identical to a `ModuleSource`, and we don’t currently use the `exports` property of actual/vicious `ModuleSource` instances for anything.","format":"org.matrix.custom.html","formatted_body":"There is no firm reason that the schema of the virtual module source handler should be identical to a <code>ModuleSource</code>, and we don’t currently use the <code>exports</code> property of actual/vicious <code>ModuleSource</code> instances for anything.","m.mentions":{},"msgtype":"m.text"},"ts":1716943992709,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$w0rgS_Kt5VFumXrEZxmNn-un5p5PYAZOramPSu0ra3A"},
{"content":{"body":"I personally have a strong æsthetic preference that, if `ModuleSource` and a virtual `ModuleSource` communicate the same information that they use the same schema.","format":"org.matrix.custom.html","formatted_body":"I personally have a strong æsthetic preference that, if <code>ModuleSource</code> and a virtual <code>ModuleSource</code> communicate the same information that they use the same schema.","m.mentions":{},"msgtype":"m.text"},"ts":1716944105796,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$pe09sDFXAHGlliKtRXAS2yQAECAKYJiZbEFJGtKEjRY"},
{"content":{"body":"I can _imagine_ using a virtual module source to mock an actual/vicious module source, and for that, I would definitely need to both consume the reflection information off the actual module source and provide the same properties on the handler of a virtual module source.","format":"org.matrix.custom.html","formatted_body":"I can <em>imagine</em> using a virtual module source to mock an actual/vicious module source, and for that, I would definitely need to both consume the reflection information off the actual module source and provide the same properties on the handler of a virtual module source.","m.mentions":{},"msgtype":"m.text"},"ts":1716944174128,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$cBpDG-sfSeqCqYFnP1g5hv4tpRdUTEFsJBP-FMKQ1zw"},
{"content":{"body":"So, let’s chalk up “module mocks” as a motivating use case for both module source reflection and virtual module sources. They can’t be done without both features.","m.mentions":{},"msgtype":"m.text"},"ts":1716944237587,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$YbXQcAMOzGnLj35XxEREMnUGMcvtbkGl43CGtcTP_oU"},
{"content":{"body":"Correction: “module mocks” could be done with “module source reflection” and code generation (in lieu of virtual module sources).","m.mentions":{},"msgtype":"m.text"},"ts":1716944286329,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$df2BKTXLl_0jHFjoNdooiIcL_VWqppqxYjlK41sBmHg"},
{"content":{"body":" * Correction: “module mocks” could be done with “module source reflection”, code generation and the JavaScript “ModuleSource(source)” constructor (in lieu of virtual module sources).","m.mentions":{},"m.new_content":{"body":"Correction: “module mocks” could be done with “module source reflection”, code generation and the JavaScript “ModuleSource(source)” constructor (in lieu of virtual module sources).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$df2BKTXLl_0jHFjoNdooiIcL_VWqppqxYjlK41sBmHg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1716944317802,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$9MFkCgDHHhNKS247JpH1FLFxfTvhRq2LexIN64vqp5k"},
{"content":{"body":"i like `optional import x from 'y'`, that's read most natural to me","format":"org.matrix.custom.html","formatted_body":"i like <code>optional import x from 'y'</code>, that's read most natural to me","msgtype":"m.text"},"ts":1716963138749,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xKoNok5dzMEui9HYswkGFO5WKEMke4YsATml_B1TpmE"}
]