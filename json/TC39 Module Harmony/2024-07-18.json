[
{"content":{"body":"guybedford I have another question about ModuleSources across workers. Consider this example:\n\n1. you open your webpage\n2. you serve a file `console.log(1)` at `http://localhost:8080/a.js`\n3. you do `const source = await import.source(\"http://localhost:8080/a.js\")` in the main thread\n4. you change `http://localhost:8080/a.js` to instead serve `console.log(2)`\n5. you do `await import(source)` in the main thread\n6. you spawn a worker\n7. in the worker, you do `await import(\"http://localhost:8080/a.js\")`\n8. you postMessage `source` from the main thread to the worker\n9. in the worker, you do `await import(source)`\n\n(a) What does the main thread log?\n(b) What does the worker log?\n(c) Does moving step 7 to the end change what the worker logs?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> I have another question about ModuleSources across workers. Consider this example:</p>\n<ol>\n<li>you open your webpage</li>\n<li>you serve a file <code>console.log(1)</code> at <code>http://localhost:8080/a.js</code></li>\n<li>you do <code>const source = await import.source(\"http://localhost:8080/a.js\")</code> in the main thread</li>\n<li>you change <code>http://localhost:8080/a.js</code> to instead serve <code>console.log(2)</code></li>\n<li>you do <code>await import(source)</code> in the main thread</li>\n<li>you spawn a worker</li>\n<li>in the worker, you do <code>await import(\"http://localhost:8080/a.js\")</code></li>\n<li>you postMessage <code>source</code> from the main thread to the worker</li>\n<li>in the worker, you do <code>await import(source)</code></li>\n</ol>\n<p>(a) What does the main thread log?<br>(b) What does the worker log?<br>(c) Does moving step 7 to the end change what the worker logs?</p>\n","m.mentions":{"user_ids":["@guybedford:matrix.org"]},"msgtype":"m.text"},"ts":1721297272230,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$qD1DGdY5QxCMI5828HRmDc9QgBMfxj72gswVvD4eFT0"},
{"content":{"body":"my intuition is we can leave that implementation defined unless there are some editorial problems","msgtype":"m.text"},"ts":1721299541966,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Bm8AI2jwIcWqEcthnTyKXcNpAdPl3epRl9WOSE2pfMw"},
{"content":{"body":"By implementation defined, do you mean host defined, so like HTML would have a particular answer?","msgtype":"m.text"},"ts":1721299643521,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PkmgBK8bMLzzftmS2QLMmgMNCqFTD6cUAd2O3HPU7zM"},
{"content":{"body":"How do you think html should answer these?","msgtype":"m.text"},"ts":1721299657150,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$M-Vc4IPQbWP_QfDTFxpAJz2uRqjjQmyHrlQCdAChqFk"},
{"content":{"body":"what do browsers do today? we can already test if the main thread shares the module cache with workers","msgtype":"m.text"},"ts":1721299804930,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$1JBqC115G61QsgEHogvE8pT01SkI22pPtbP93LouvaA"},
{"content":{"body":"I would prefer keeping the current behavior unless there is a good reason to change it.","msgtype":"m.text"},"ts":1721299834579,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-BSmrnx6W58nvwx2TeSM7ii7x0jsLX5hZ7FLuHlLnIA"},
{"content":{"body":"and if they don't share the module cache today, I would answer the question above like this (a) 1 (b) 2 (c) yes?","msgtype":"m.text"},"ts":1721299948909,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dMSUASjZlGlDVfLfzhosbIMTwRgQWzvqV3lgCSwoIhA"},
{"content":{"body":"Today browsers log 1 and 2 (I only tested Chrome). For (c), you mean yes because it would log 1 both times?","m.mentions":{},"msgtype":"m.text"},"ts":1721300070712,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Ma2TWz9uEeFza4ScQDORqXUK7mlhsQoiZFnYvqqn-6o"},
{"content":{"body":"> <@jackworks:matrix.org> my intuition is we can leave that implementation defined unless there are some editorial problems\n\nWell yes host defined, but it's still on us to propose to HTML what the behaviour should be :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$Bm8AI2jwIcWqEcthnTyKXcNpAdPl3epRl9WOSE2pfMw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>my intuition is we can leave that implementation defined unless there are some editorial problems</blockquote></mx-reply>Well yes host defined, but it's still on us to propose to HTML what the behaviour should be :)","m.mentions":{"user_ids":["@jackworks:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Bm8AI2jwIcWqEcthnTyKXcNpAdPl3epRl9WOSE2pfMw"}},"msgtype":"m.text"},"ts":1721300093007,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BCz59FPyGbr-tDwSMMdpbenJEarSYg_HJfUTPVnp_TM"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Today browsers log 1 and 2 (I only tested Chrome). For (c), you mean yes because it would log 1 both times?\n\nI think transfer the stale module source to the worker should fill the module cache so it only logs 1, no more network fetch, but I'm open to it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$Ma2TWz9uEeFza4ScQDORqXUK7mlhsQoiZFnYvqqn-6o\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Today browsers log 1 and 2 (I only tested Chrome). For (c), you mean yes because it would log 1 both times?</blockquote></mx-reply>I think transfer the stale module source to the worker should fill the module cache so it only logs 1, no more network fetch, but I&#39;m open to it","m.relates_to":{"m.in_reply_to":{"event_id":"$Ma2TWz9uEeFza4ScQDORqXUK7mlhsQoiZFnYvqqn-6o"}},"msgtype":"m.text"},"ts":1721301328595,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$u5AThJTa0Gvcj1rO1wG66BfPHwpHSn_20wz0kOsgf2k"},
{"content":{"body":"I think that might be the best approach","m.mentions":{},"msgtype":"m.text"},"ts":1721301454093,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LPUVYODcsUEIrqALL1cxlsAu_TvU_qpXkj_eyrAgAnM"},
{"content":{"body":"Something I dislike about the races though, is that all the static analysis on module sources in unreliable","m.mentions":{},"msgtype":"m.text"},"ts":1721301471806,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$GVv2NSSW-EKZ5fePY9h6iv_IfWmtGCpL6v1OB8M5AFA"},
{"content":{"body":"i.e. if instead of console.log those examples were `export let a = 1` and `export let b = 1`, then the result of line 9 doesn't have any `a` export but `source.exports` contains `a`","format":"org.matrix.custom.html","formatted_body":"i.e. if instead of console.log those examples were <code>export let a = 1</code> and <code>export let b = 1</code>, then the result of line 9 doesn't have any <code>a</code> export but <code>source.exports</code> contains <code>a</code>","m.mentions":{},"msgtype":"m.text"},"ts":1721301517378,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$cTeeWqsf68pP92mvfSsN_GYRGrAyIjnyfuhjiHZWc9w"},
{"content":{"body":"I'll be a few minutes late","m.mentions":{},"msgtype":"m.text"},"ts":1721314801786,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$nzG3XgcjLBUIf4UQUPB2tudIVD3ATc6vctFb82hLCXE"}
]