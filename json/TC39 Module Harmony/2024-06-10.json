[
{"content":{"body":"I ran into an interesting corner case where spec/implementations differ from what I at least initially would've expected:\n\nI have a case where due to loosely typed names, a single module can match multiple names. (eg. Asking for a module with caret version 1.0.0 and 1.0.1 in a part of the URL can resolve to the same concrete module). I had the bright idea of avoiding duplication of modules by responding with HTML redirects from the server (to be exact, a ServiceWorker intercepts the request and performs the final redirect arbitration). This works fine in getting the right module, but it does not deduplicate them.\n\nI presume this is right and proper from the spec standpoint but on the other hand, is it what is really wanted? Is module redirection a reasonable thing to consider?","msgtype":"m.text"},"ts":1718016705147,"senderName":"Aapo Alasuutari","senderId":"@aapo.alasuutari:matrix.org","id":"$rvT9HZSR9D9uYHrK_ABmvZAQI3QqpUaKn_AqHMfmY0g"},
{"content":{"body":"* I ran into an interesting corner case where spec/implementations differ from what I at least initially would've expected:\n\nI have a case where due to loosely versioned names, a single module can match multiple names. (eg. Asking for a module with caret version 1.0.0 and 1.0.1 in a part of the URL can resolve to the same concrete module). I had the bright idea of avoiding duplication of modules by responding with HTML redirects from the server (to be exact, a ServiceWorker intercepts the request and performs the final redirect arbitration). This works fine in getting the right module, but it does not deduplicate them.\n\nI presume this is right and proper from the spec standpoint but on the other hand, is it what is really wanted? Is module redirection a reasonable thing to consider?","m.new_content":{"body":"I ran into an interesting corner case where spec/implementations differ from what I at least initially would've expected:\n\nI have a case where due to loosely versioned names, a single module can match multiple names. (eg. Asking for a module with caret version 1.0.0 and 1.0.1 in a part of the URL can resolve to the same concrete module). I had the bright idea of avoiding duplication of modules by responding with HTML redirects from the server (to be exact, a ServiceWorker intercepts the request and performs the final redirect arbitration). This works fine in getting the right module, but it does not deduplicate them.\n\nI presume this is right and proper from the spec standpoint but on the other hand, is it what is really wanted? Is module redirection a reasonable thing to consider?","msgtype":"m.text"},"m.relates_to":{"event_id":"$rvT9HZSR9D9uYHrK_ABmvZAQI3QqpUaKn_AqHMfmY0g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718017151308,"senderName":"Aapo Alasuutari","senderId":"@aapo.alasuutari:matrix.org","id":"$4jHTrIC0tBn0z3cyGb81PJR3MC27VTC_YxBczenIvXI"},
{"content":{"body":"As code this would be:\n```js\nconst modA = await import(\"mod--^1.0.0\"); // server responds with redirect to \"mod--1.0.0\"\nconst modB = await import(\"mod--1.0.0\");\nconst modC = await import(\"mod\"); // import-map redirects to \"mod--1.0.0\"\n\nmodB === modC; // true\nmodA === modB; // false\n```","m.relates_to":{"event_id":"$rvT9HZSR9D9uYHrK_ABmvZAQI3QqpUaKn_AqHMfmY0g","is_falling_back":true,"m.in_reply_to":{"event_id":"$rvT9HZSR9D9uYHrK_ABmvZAQI3QqpUaKn_AqHMfmY0g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1718017828380,"senderName":"Aapo Alasuutari","senderId":"@aapo.alasuutari:matrix.org","id":"$N2e9w7zsMsg2kNaOfNiYgrkjLvVDbAda-GpMR3iZTZw"},
{"content":{"body":"Aapo Alasuutari You can read about it at https://github.com/whatwg/html/issues/3624","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aapo.alasuutari:matrix.org\">Aapo Alasuutari</a> You can read about it at https://github.com/whatwg/html/issues/3624","msgtype":"m.text"},"ts":1718022159130,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$KyletYDkYQlRxM91jL8gyiJwWLqs86Nxz_Apz2yIIh4"}
]