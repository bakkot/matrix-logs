[
{"content":{"body":"I put this in TC39 delegates, but I think it might be more appropriate here: is the expectation that ShadowRealms should not share module graphs. That is to say, import { x } from \"y\", that x should have nothing in common from the same x imported from y in a parent realm -- but is the module resolution/caching/etc. also \"reset\" (or is that piece host dependent -- or does that potentially introduce a \"side channel\" for the ShadowRealm to determine if a module has been imported in the parent if it loads quickly)?","m.mentions":{},"msgtype":"m.text"},"ts":1714420019879,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$t70n-hDpi0LkpXJLo78lg1a2NxteC5ZQjfcT64fnwfU"},
{"content":{"body":"if the cache is shared, then it wouldn't tell them about the parent, because it could have been loaded in a different shadowrealm","m.mentions":{},"msgtype":"m.text"},"ts":1714421120345,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m23U4eeuJsVq3qWxgvgeA0fGedAlafCjKuVmjjl_MRs"},
{"content":{"body":"They are two separate modules, similarly to what would happen if you load `\"y\"` in two different workers","format":"org.matrix.custom.html","formatted_body":"They are two separate modules, similarly to what would happen if you load <code>&quot;y&quot;</code> in two different workers","msgtype":"m.text"},"ts":1714422136694,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$4wpR3Yvj4Ccj-2ExZrnhZB3lgmGIvx5YFnPqQcXInlA"},
{"content":{"body":"I'm not 100% sure that the proposal mandates that, but the HTML side of the modules algorithms does","msgtype":"m.text"},"ts":1714422157598,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$WyRL-ok9MHlapTASwBLL0TnyLQGBKQV8lWKGpZWkuVo"},
{"content":{"body":"Specifically, the \"module key\" in ECMA-262 is (importer, specifier), and those two \"y\"s have different importers","format":"org.matrix.custom.html","formatted_body":"Specifically, the &quot;module key&quot; in ECMA-262 is (importer, specifier), and those two &quot;y&quot;s have different importers","msgtype":"m.text"},"ts":1714422198221,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QeHulCkOUs1XVJFeHo56Xy_m3m-IJE4uRk1Vt3QkMXg"},
{"content":{"body":"Oh actually, re-reading: yes, that introduces a timing side channel ","format":"org.matrix.custom.html","formatted_body":"Oh actually, re-reading: yes, that introduces a timing side channel","msgtype":"m.text"},"ts":1714422232619,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dUNaTOmLnR6_FtkY74Pm7kQPjpEc2pcrkpJA0qy6O4M"},
{"content":{"body":"The JS value is separate, but the module source might have been pre-cached","msgtype":"m.text"},"ts":1714422249632,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IM66SzKmGzqpFyqoJkjmYbJe--dxNutVWHcB5t729lA"},
{"content":{"body":"To make shadowrealms safe however, you have to disable timers regardless of this","msgtype":"m.text"},"ts":1714422290171,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$rXkh53DSh4MNelSSJzUzV4W_xIObr6PqC7J6JkI9M8g"},
{"content":{"body":"is \"importer\" synonymous with \"loader\", or is an importer different than a loader (by loader I mean (https://whatwg.github.io/loader/), or JSModuleLoader in JavaScriptCore","m.mentions":{},"msgtype":"m.text"},"ts":1714422301592,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$7pCXwKyc42DbYjwmcJNa5S1Eml3EoVXxWIbVPhO93LM"},
{"content":{"body":"It's the module that contains the import ","msgtype":"m.text"},"ts":1714422331585,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JdpndoRiJMmNvrccUvtN_loMo3JsMC_FwEFpfkZcrK4"},
{"content":{"body":"wait, but in that case moduleKey is different even in the same realm if two modules import the same thing, right?","m.mentions":{},"msgtype":"m.text"},"ts":1714422363017,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$kokScKPxY3NkuQFmYk3v6yWT2AXJ3bTeltgAgbe0iA8"},
{"content":{"body":"moduleKey is only ever the same if you literally import from the same module twice in the same file?","m.mentions":{},"msgtype":"m.text"},"ts":1714422399501,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$ROsDOizcfEsvpyFDGG86OZQXaMQ9jyIjY8T1cqAmBEM"},
{"content":{"body":"Yes exactly, but hosts might use a normalised cache key for the web request ","msgtype":"m.text"},"ts":1714422505914,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$xWqprYCieulNrwGuMY4LShbGX_wXjy6KBmyHmMvT6IA"},
{"content":{"body":"For example, HTML uses the resolved URL","msgtype":"m.text"},"ts":1714422516023,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$u9EQDzTzI2XlKeq_x_y7P_RBnfSaXBzFfDxeQGxIy60"},
{"content":{"body":"I see","m.mentions":{},"msgtype":"m.text"},"ts":1714422522795,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$Lzvp3mhV4-Gri47uPN_CKhVzVajItJQ46k_7dUwVWwE"},
{"content":{"body":"We can only require that the cache key is at least as granular as (importer, specifier), but not that it's less granular ","msgtype":"m.text"},"ts":1714422557596,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PB-6VjdgZ-O5bNw5Do4OKrmeCpYzGz6uW5ia1fOJ86Y"}
]