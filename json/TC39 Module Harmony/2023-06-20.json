[
{"content":{"body":"I heard `import defer * as ns` has changed to `import defer ns` is that happening?","format":"org.matrix.custom.html","formatted_body":"I heard <code>import defer * as ns</code> has changed to <code>import defer ns</code> is that happening?","msgtype":"m.text"},"ts":1687233343361,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dT-DMV3s928doRsE8-7Y6IXy6AZ8wmgw7Bo1HLaDmPA"},
{"content":{"body":"No, where did you read it?","msgtype":"m.text"},"ts":1687246290793,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$rbr7eevMljC8cufgvLicNFps9cXulZN1GDCl96dQ_EE"},
{"content":{"body":"I'll probably be 5 minutes late ","msgtype":"m.text"},"ts":1687276635291,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$trf89B8HjSExJF28mf0d8TMivbCkftIB0S8sW0CumHQ"},
{"content":{"body":"littledan: syntax for meta.resolve() or a different attribute makes a bit more sense to me than overloading `type`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: syntax for meta.resolve() or a different attribute makes a bit more sense to me than overloading <code>type</code>","msgtype":"m.text"},"ts":1687276810001,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8xC03JtejMqPHLqJtMz-OvP5l0uBP-Ghn6630iAFqTI"},
{"content":{"body":"littledan: at least as currently specified we end up fetching everything with `type` and this `url` thing would create quite the code smell I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: at least as currently specified we end up fetching everything with <code>type</code> and this <code>url</code> thing would create quite the code smell I think","msgtype":"m.text"},"ts":1687276883869,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$_E3EgFlTWqs7oY-cXltbwyRomrzIfP8k3tb9P5hTF8c"},
{"content":{"body":"I don't remember us discussing overloading `type` much in this group. I agree that it's code smell to use that particular attribute. I'd at least use another key","format":"org.matrix.custom.html","formatted_body":"I don't remember us discussing overloading <code>type</code> much in this group. I agree that it's code smell to use that particular attribute. I'd at least use another key","msgtype":"m.text"},"ts":1687280401294,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$tQscupB4IE9Giyn9O9Lxw1ckTeEG95FL8M-sFS_ApBI"},
{"content":{"body":"We've mostly discussed syntax like `import asset foo from \"./foo.jpeg\";` or something","format":"org.matrix.custom.html","formatted_body":"We've mostly discussed syntax like <code>import asset foo from \"./foo.jpeg\";</code> or something","msgtype":"m.text"},"ts":1687280447848,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$sZE7JqCNTSJDWz4xqX_NCPShAGIZky1kXoRa1etlXZA"},
{"content":{"body":"Kris didn't like that syntax because he found it ambiguous between whether `foo` was a URL or the bytes","format":"org.matrix.custom.html","formatted_body":"Kris didn't like that syntax because he found it ambiguous between whether <code>foo</code> was a URL or the bytes","msgtype":"m.text"},"ts":1687280466868,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jFZtPcVNzeIHwYjHiB-Q13CiqyBlYtXxXgoT-qd7r6M"},
{"content":{"body":"even if it's the bytes: we still need the type so that the fetch can be done properly","msgtype":"m.text"},"ts":1687280480465,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$d9WLGHnekztrYH0fO0b70b-E0phE8coNR7jOl3KLROY"},
{"content":{"body":"Is `asset` bytes or URL in that case?","format":"org.matrix.custom.html","formatted_body":"Is <code>asset</code> bytes or URL in that case?","msgtype":"m.text"},"ts":1687281446128,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_D7FDorhhsRaKrgb6mu0tKbbelZnH0QRmktSwuAAndE"},
{"content":{"body":"Also, is the underlying Module paused before fetch or after?","msgtype":"m.text"},"ts":1687281482769,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$-1xgGMtDWzcM-5HPa1hqHyiUUn1C4LZT4CCDgD3i_0o"},
{"content":{"body":"I presume that `import bytes from './bin.oct' with { type: 'bytes' }` implies a content-type of `application/octet-stream` and is as such sufficient to go as far as `fetch` especially, especially since there’s no possibility of advancing to evaluation behavior.","format":"org.matrix.custom.html","formatted_body":"I presume that <code>import bytes from './bin.oct' with { type: 'bytes' }</code> implies a content-type of <code>application/octet-stream</code> and is as such sufficient to go as far as <code>fetch</code> especially, especially since there’s no possibility of advancing to evaluation behavior.","msgtype":"m.text"},"ts":1687281644765,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SM2ZBuebnwYllh8W1g7v22y_sIdwkf2-Sjj29zeWuSs"},
{"content":{"body":"I presume also that `import text. from './text.txt' with { type: 'text' }` implies a content-type of `text/plain; charset=utf-8` and is also sufficient to go to `fetch`.","format":"org.matrix.custom.html","formatted_body":"I presume also that <code>import text. from './text.txt' with { type: 'text' }</code> implies a content-type of <code>text/plain; charset=utf-8</code> and is also sufficient to go to <code>fetch</code>.","msgtype":"m.text"},"ts":1687281693941,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_TADh93Lc4tJUagm7RjPEMuSvykR_ZJxlXT_IinusHs"},
{"content":{"body":"Whereas `import url from './image.jpg' with { type: 'url' }` implies nothing about the content-type and wouldn’t advance to `fetch` in any case. Using a different key introduces confusion about the role of `type` in `import asset imageUrl from './image.jpg' with { type: 'jpeg' }` (it would just produce a different memo key)","format":"org.matrix.custom.html","formatted_body":"Whereas <code>import url from './image.jpg' with { type: 'url' }</code> implies nothing about the content-type and wouldn’t advance to <code>fetch</code> in any case. Using a different key introduces confusion about the role of <code>type</code> in <code>import asset imageUrl from './image.jpg' with { type: 'jpeg' }</code> (it would just produce a different memo key)","msgtype":"m.text"},"ts":1687281856626,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$iyL4PN7N8vCiNq4F9LRsq8rj7J54MfDt0E-7VoiVXCA"},
{"content":{"body":"Or, alternate strawpoke, `type` would be vestigial in `import imageUrl from './image.jpg' with { type: 'jpeg', phase: 'located' }`.","format":"org.matrix.custom.html","formatted_body":"Or, alternate strawpoke, <code>type</code> would be vestigial in <code>import imageUrl from './image.jpg' with { type: 'jpeg', phase: 'located' }</code>.","msgtype":"m.text"},"ts":1687281933494,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$PeQSs33-fYg8RZsgM1dikMD6sJHA_hbr4yXpp4PqAYc"},
{"content":{"body":"Kris Kowal: I was thinking we might ignore the `Content-Type` response header for some of these types, as `fetch()` does. Requiring a `Content-Type` like CSS module scripts do would make them not as useful I think.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: I was thinking we might ignore the <code>Content-Type</code> response header for some of these types, as <code>fetch()</code> does. Requiring a <code>Content-Type</code> like CSS module scripts do would make them not as useful I think.","msgtype":"m.text"},"ts":1687284167527,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$uYy1tY0IDH-V91FM-EqQpmhasjLEvoH-Ir6m2OhyHec"},
{"content":{"body":"Kris Kowal: why would it need `type` at all? `import url from 'test' with { gimme: 'url' }`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: why would it need <code>type</code> at all? <code>import url from 'test' with { gimme: 'url' }</code>","msgtype":"m.text"},"ts":1687284314881,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rQs2Q7J1L2GsS5NOo896coqhZnDSItWpQvu8qwoeWsA"},
{"content":{"body":"The question is not whether the type is needed, but what it would mean if it happened to be provided.","msgtype":"m.text"},"ts":1687285246770,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$pZDnce-QoKxgcVfewvLy9PWsApjQnRTVGcJNOPwtU1s"},
{"content":{"body":"e.g., `{ gimme: 'url', type: 'css' }` and `{  gimme: 'url', type: 'json' }` would give you the same URL twice, but have two entries in the modules memo and do the work twice. Whereas, `{ type: 'url' }` would ensure only one memo entry.","format":"org.matrix.custom.html","formatted_body":"e.g., <code>{ gimme: 'url', type: 'css' }</code> and <code>{  gimme: 'url', type: 'json' }</code> would give you the same URL twice, but have two entries in the modules memo and do the work twice. Whereas, <code>{ type: 'url' }</code> would ensure only one memo entry.","msgtype":"m.text"},"ts":1687285397661,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JDosbmsbZG2Y27FSFwtI1t3oZNkag2eIEd7t4MYTpVk"},
{"content":{"body":"But this is a small thing I’m not hung up on.","msgtype":"m.text"},"ts":1687285408742,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_yOqip4jN55VnMghIA_hKFtMyDEajZ-9dSXr-N4w5sY"},
{"content":{"body":"> <@kriskowal:matrix.org> Is `asset` bytes or URL in that case?\n\nURL. This is just more frequently useful than bytes, I think.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$_D7FDorhhsRaKrgb6mu0tKbbelZnH0QRmktSwuAAndE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Is <code>asset</code> bytes or URL in that case?</blockquote></mx-reply>URL. This is just more frequently useful than bytes, I think.","m.relates_to":{"m.in_reply_to":{"event_id":"$_D7FDorhhsRaKrgb6mu0tKbbelZnH0QRmktSwuAAndE"}},"msgtype":"m.text"},"ts":1687285737111,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ms9X2pjSC0h1pUW7vc1M1IjPmvWZcNQ9zUPfikB97k4"},
{"content":{"body":"`import.meta.resolve` has been adequate for me; I would be a little hesitant to introduce a second way of doing that","format":"org.matrix.custom.html","formatted_body":"<code>import.meta.resolve</code> has been adequate for me; I would be a little hesitant to introduce a second way of doing that","msgtype":"m.text"},"ts":1687286066832,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oH6XXHGUctQTT7UlvCRIYgIyUPvoRDxgQLGTmbKbXGw"},
{"content":{"body":"Isn't `import.meta.resolve` intrinsically a dynamic API that wouldn't allow preprocessor / bundlers to understand and map which assets need to be part of a deployment artifact? There ought to be a reason that all bundlers currently go the `import './foo.css'` route to reference external assets.","format":"org.matrix.custom.html","formatted_body":"Isn't <code>import.meta.resolve</code> intrinsically a dynamic API that wouldn't allow preprocessor / bundlers to understand and map which assets need to be part of a deployment artifact? There ought to be a reason that all bundlers currently go the <code>import './foo.css'</code> route to reference external assets.","msgtype":"m.text"},"ts":1687288855004,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$-NMZK44dBoTJnlGdiZ3ucmTQSpXh_7FlXY54hlbxGcQ"},
{"content":{"body":"only if you use it in a dynamic way","msgtype":"m.text"},"ts":1687289096274,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BOnLW0Cf5av1GDqUiAYmex2pVgeLffH39-zk45_r2rM"},
{"content":{"body":"if the bundler is relying on it, it can easily error if you pass it a non-constant or factor it out into a variable","msgtype":"m.text"},"ts":1687289123203,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$225j3Kc4A2Te8T8koNIICI1_4TigI8jHorg5LXDdFhc"},
{"content":{"body":"at least part of the reason they all use the `import './foo.css'` syntax is because that decisions predates the existence of `import.meta.resolve`","format":"org.matrix.custom.html","formatted_body":"at least part of the reason they all use the <code>import './foo.css'</code> syntax is because that decisions predates the existence of <code>import.meta.resolve</code>","msgtype":"m.text"},"ts":1687289148488,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UNnxzbJQp5_MoelhlXqlgyOIMxNe6nnPnnYqhidZP6U"},
{"content":{"body":" * at least part of the reason they all use the `import './foo.css'` syntax is because that design decision predates the existence of `import.meta.resolve`","format":"org.matrix.custom.html","formatted_body":" * at least part of the reason they all use the <code>import './foo.css'</code> syntax is because that design decision predates the existence of <code>import.meta.resolve</code>","m.new_content":{"body":"at least part of the reason they all use the `import './foo.css'` syntax is because that design decision predates the existence of `import.meta.resolve`","format":"org.matrix.custom.html","formatted_body":"at least part of the reason they all use the <code>import './foo.css'</code> syntax is because that design decision predates the existence of <code>import.meta.resolve</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$UNnxzbJQp5_MoelhlXqlgyOIMxNe6nnPnnYqhidZP6U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1687289172055,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gm7kP_0GeztdGtgjnOOcCUPBkv2fIVp1hKCgsXivJY4"},
{"content":{"body":"it also predates dynamic import.","msgtype":"m.text"},"ts":1687294355624,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RRV87ykt4wCypRx17sshaWUUtvRmYXspf2LEz56WdI4"},
{"content":{"body":"We could solve that by making an `import.resolve()` meta function","format":"org.matrix.custom.html","formatted_body":"We could solve that by making an <code>import.resolve()</code> meta function","msgtype":"m.text"},"ts":1687298910774,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ClEqDkN2EU-x5aRO4hZAQ5DrU2A5hVnZXR1UGjxcMjk"}
]