[
{"content":{"body":"kriskowal: in virtualization use cases, I agree a sync import may well be useful, when it is possible to eagerly link everything and know that the graph is available","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:aelf.land\">kriskowal</a>: in virtualization use cases, I agree a sync import may well be useful, when it is possible to eagerly link everything and know that the graph is available","m.mentions":{"user_ids":["@kriskowal:aelf.land"]},"msgtype":"m.text"},"ts":1713572591302,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$tq5UZeE88mzEnPKgPNT30-4_7MlkTSy8D39824AMis8"},
{"content":{"body":"the hard part is how we draw a distinction between that use case, and shelling out to the host import module dynamically hook which could do arbitrary work","m.mentions":{},"msgtype":"m.text"},"ts":1713572616179,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$0CmLb0MvBLoC2suoVSKUmlaCiWcQP-ONHwQBo0TrytY"},
{"content":{"body":" * the hard part is how we draw a distinction between that use case, and shelling out to the host import module dynamically hook which could do arbitrary async work","m.mentions":{},"m.new_content":{"body":"the hard part is how we draw a distinction between that use case, and shelling out to the host import module dynamically hook which could do arbitrary async work","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$0CmLb0MvBLoC2suoVSKUmlaCiWcQP-ONHwQBo0TrytY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1713572625757,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$OLFgM33lbQEE1v5hGnyuUcI7Rpj-MKW3fSzBCYBCyn8"},
{"content":{"body":"effectively it's a class of loaders (like Node.js) that know they can do sync imports, but to draw that line also means restricting host hook fallbacks, unless we can solve sync loading generally via something like an `await import.defer(module)` that runs first, before then doing the `import.now(module)`","format":"org.matrix.custom.html","formatted_body":"effectively it's a class of loaders (like Node.js) that know they can do sync imports, but to draw that line also means restricting host hook fallbacks, unless we can solve sync loading generally via something like an <code>await import.defer(module)</code> that runs first, before then doing the <code>import.now(module)</code>","m.mentions":{},"msgtype":"m.text"},"ts":1713572708788,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$a3SrwfoNob7s4uxdo6PZu1sv0_2pxsETApVgYU5bsck"},
{"content":{"body":"Or `import.source`, as it were.","format":"org.matrix.custom.html","formatted_body":"Or <code>import.source</code>, as it were.","m.mentions":{},"msgtype":"m.text"},"ts":1713572750642,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$vxj_V4RPIBO8tPP7U6DYhMSSJ2vsI85LPLBm_Y5KsU8"},
{"content":{"body":"That’s effectively where we stand. We are falling back to the sync hook only under `import.now`, and `importNowHook` may throw but can’t return a promise.","format":"org.matrix.custom.html","formatted_body":"That’s effectively where we stand. We are falling back to the sync hook only under <code>import.now</code>, and <code>importNowHook</code> may throw but can’t return a promise.","m.mentions":{},"msgtype":"m.text"},"ts":1713572814167,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$F_nf9DYNAbQYtC6A4HoJzfPEJcKDBchsIP7T-vBuRkg"},
{"content":{"body":"Under `import`, you can never reach `importNowHook`.","format":"org.matrix.custom.html","formatted_body":"Under <code>import</code>, you can never reach <code>importNowHook</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1713572835343,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$rpxDmo_-hYzDrLXDOOE1Pz7vFo37lVzOSXEmZ9ibYw8"},
{"content":{"body":"the concern of having a dedicated sync hook is similar to the issue Node.js has where you end up defining two hooks for the loader - the sync hook and the async hook","m.mentions":{},"msgtype":"m.text"},"ts":1713572868507,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$RlXALm6_HEYtm2wy8q5ZoywtIzJoGZtEhk1oSlREXXI"},
{"content":{"body":"this seems sub-optimal and prone to bugs if users have implementation differences","m.mentions":{},"msgtype":"m.text"},"ts":1713572881988,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$PBhJfbIox7XUn5ZjmI_NfazKdJ0toVo8EWVBqp3ul_I"},
{"content":{"body":"That is the case for us too.","m.mentions":{},"msgtype":"m.text"},"ts":1713572882425,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$aAPqT9F-hqZYWH8mYRqLxrafu6zZ6xOHfh4X-E8BQk4"},
{"content":{"body":"It’s definitely not ideal, but ideal doesn’t seem to be available.","m.mentions":{},"msgtype":"m.text"},"ts":1713572909736,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$-HcVhw5PP-1PZ8LwRVjd3aKdS2mmiujynO26aUx93Sg"},
{"content":{"body":"I think it's possible to separate loading into two phases - an async phase that gets everything ready, and a sync phase that does the linking and execution (down to TLA)","m.mentions":{},"msgtype":"m.text"},"ts":1713572935388,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$frlyNLUBYIfGZ6gwxv-XMTUpFDo2qz9zqcALtbPi2tU"},
{"content":{"body":"that does mean two graph walks, but that's what instantiate + exec is anyway","m.mentions":{},"msgtype":"m.text"},"ts":1713572954628,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$yCZDGy2PnA08FdY7DYiuyxgnj1y90MAPDnD25r2POrw"},
{"content":{"body":"Eager to talk more about that. Sadly, the evening beckons.","m.mentions":{},"msgtype":"m.text"},"ts":1713572989434,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$CbOF5X5VZXewCPujzBIguam2F2m9lQ1tIhUgjWpVnW4"},
{"content":{"body":"so a fully sync graph just means you're already in the second phase","m.mentions":{},"msgtype":"m.text"},"ts":1713572997308,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$H2l8EgApBY9WCoXLSddlpC26DEkFJfRplh9tKRr1j3s"},
{"content":{"body":"yeah we'll have more time to talk about it I'm sure","m.mentions":{},"msgtype":"m.text"},"ts":1713573024195,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Y-iXOGrGo1aXR9dM_9Z4DW7edNiVTprLFpDUJzGydxk"}
]