[
{"content":{"body":"styfle guybedford The \"JSON modules\" proposal is stage 4 and part of ecma-262, there is no need for the import bytes proposal to \"build o top of it\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@styfle:matrix.org\">styfle</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a> The \"JSON modules\" proposal is stage 4 and part of ecma-262, there is no need for the import bytes proposal to \"build o top of it\"","m.mentions":{"user_ids":["@styfle:matrix.org","@guybedford:matrix.org"]},"msgtype":"m.text"},"ts":1753867233258,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$J9ajBObsH0q7h9mTQVMBlOrJKr6C3ekTZysS1qws_Ko"},
{"content":{"body":"styfle Can you link to https://styfle.github.io/proposal-import-buffer/ in the repo metadata?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@styfle:matrix.org\">styfle</a> Can you link to https://styfle.github.io/proposal-import-buffer/ in the repo metadata?","m.mentions":{"user_ids":["@styfle:matrix.org"]},"msgtype":"m.text"},"ts":1753867287797,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$x_ynvQBIqlNerwblMOqfd1zADt1uBwUqbLf5659zMQg"},
{"content":{"body":"Two questions also:\n- Why does CreateBufferModule accept a SharedArrayBuffer? If implementations don't want a mutable ArrayBuffer, a SharedArrayBuffer seems even worse\n- I missed when we switched from Uint8Array to ArrayBuffer. Why that change? Every API that accepts an ArrayBuffer also accepts a Uint8Array anyway, but Uint8Array avoid the \"conversion step\" for the most common use cases of needing the bytes.","format":"org.matrix.custom.html","formatted_body":"<p>Two questions also:</p>\n<ul>\n<li>Why does CreateBufferModule accept a SharedArrayBuffer? If implementations don't want a mutable ArrayBuffer, a SharedArrayBuffer seems even worse</li>\n<li>I missed when we switched from Uint8Array to ArrayBuffer. Why that change? Every API that accepts an ArrayBuffer also accepts a Uint8Array anyway, but Uint8Array avoid the \"conversion step\" for the most common use cases of needing the bytes.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1753867464189,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$3iT4T3HaAHInbXueWxjiDm8gZW6DN6mSki6rAXjibHs"},
{"content":{"body":"Editorially speaking, I think it would be enough to say in HostLoadImportedModule \"must perform FinishLoadingImportedModule(referrer, moduleRequest, payload, result), where result is either the Completion Record returned by an invokation of  CreateDefaultExportSyntheticModule with an immutable ArrayBuffer parameter or a throw completion\" without needing the new CreateBufferModule AO, but the current approach is also fine","m.mentions":{},"msgtype":"m.text"},"ts":1753867582184,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Yh_bRFigFj8RoQErL4MOCUac1wKIxStGCrYBK_OiREM"},
{"content":{"body":"* Editorially speaking, I think it would be better to say in HostLoadImportedModule \"must perform FinishLoadingImportedModule(referrer, moduleRequest, payload, result), where result is either the Completion Record returned by an invokation of  CreateDefaultExportSyntheticModule with an immutable ArrayBuffer parameter or a throw completion\" without needing the new CreateBufferModule AO, but the current approach is also fine","m.mentions":{},"m.new_content":{"body":"Editorially speaking, I think it would be better to say in HostLoadImportedModule \"must perform FinishLoadingImportedModule(referrer, moduleRequest, payload, result), where result is either the Completion Record returned by an invokation of  CreateDefaultExportSyntheticModule with an immutable ArrayBuffer parameter or a throw completion\" without needing the new CreateBufferModule AO, but the current approach is also fine","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Yh_bRFigFj8RoQErL4MOCUac1wKIxStGCrYBK_OiREM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753867588790,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BdLXrQF1ccHqgCfpd1T3mf7g5qePbK2_brbecTVIZwU"},
{"content":{"body":"Note that https://github.com/styfle/proposal-import-buffer/issues/5 was asking for the _backing ArrayBuffer_ of the Uint8Array to be an immutable ArrayBuffer, not for the Uint8Array to be _replaced_ with an immutable ArrayBuffer","format":"org.matrix.custom.html","formatted_body":"Note that https://github.com/styfle/proposal-import-buffer/issues/5 was asking for the <em>backing ArrayBuffer</em> of the Uint8Array to be an immutable ArrayBuffer, not for the Uint8Array to be <em>replaced</em> with an immutable ArrayBuffer","m.mentions":{},"msgtype":"m.text"},"ts":1753867884989,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$0sdAY1MUgk1HvLZ3Xezl09pUTt_u5cTJHLub5eU-yi4"},
{"content":{"body":"Oh, I see, https://github.com/styfle/proposal-import-buffer/issues/5#issuecomment-3059482682. I'll bring it up in plenary","m.mentions":{},"msgtype":"m.text"},"ts":1753867949697,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wt61hF67dwhcHDPQQgMsEcalYEc9R_QJuM7fXOGHWiM"},
{"content":{"body":"w3c guidelines say to use Uint8Array for sequences of bytes https://www.w3.org/TR/design-principles/#uint8array","m.mentions":{},"msgtype":"m.text"},"ts":1753868853912,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7_Vq0wrCaSCgqBjx382hnsH9Sc_uMsg80JkxuEeGuiE"},
{"content":{"body":"(disclosure: I wrote this rule)","m.mentions":{},"msgtype":"m.text"},"ts":1753868859276,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-6092GyO2sCeE2ev-TyD7UqHqQoYQG3ErEhQJrQG9OU"},
{"content":{"body":"Oh thank you","m.mentions":{},"msgtype":"m.text"},"ts":1753868888525,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$X2vH8tJX8zx1pApNQsb_Aig45ANL6d5inPT7LbqT2-s"},
{"content":{"body":"the Response type has a `bytes` method for getting a Uint8Array as well as a now-consider-mistake `arrayBuffer` method for getting an ArrayBuffer and `json` for getting json and `text` for getting text","format":"org.matrix.custom.html","formatted_body":"the Response type has a <code>bytes</code> method for getting a Uint8Array as well as a now-consider-mistake <code>arrayBuffer</code> method for getting an ArrayBuffer and <code>json</code> for getting json and <code>text</code> for getting text","m.mentions":{},"msgtype":"m.text"},"ts":1753868955370,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qiHocCqL_3YzbC9ihr9qlD-4YG2BfR_35vhxTH9QUVU"},
{"content":{"body":"whichever type we chose I think the names should match","m.mentions":{},"msgtype":"m.text"},"ts":1753868972032,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$T2wfCo9P04_G84ZYF7iTfSAHloqT122wEwrRXgVDoew"},
{"content":{"body":"Do you know if there is any API that accepts array buffers but not uint8arrays?","m.mentions":{},"msgtype":"m.text"},"ts":1753868984813,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JdG7g4j-rr4laHgkShFyyFcS42I2S9keySUNFEYFlhM"},
{"content":{"body":"so if we do ArrayBuffer it should be `with { type: \"arrayBuffer\" }`","format":"org.matrix.custom.html","formatted_body":"so if we do ArrayBuffer it should be <code>with { type: \"arrayBuffer\" }</code>","m.mentions":{},"msgtype":"m.text"},"ts":1753868994473,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D5sRQmrN6GHPrBHKDHCEJ_dLLC8HF_1z8HWv7J2OPQI"},
{"content":{"body":"well, the TypedArray constructors","m.mentions":{},"msgtype":"m.text"},"ts":1753869013544,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PgcyFXKUezZCxry74uouw4wt4KUzu_BWlFi3KGKfa60"},
{"content":{"body":"otherwise, no, everything on the web uses ArrayBufferView","m.mentions":{},"msgtype":"m.text"},"ts":1753869031833,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Sda89D2srt7UnV66u7pTVuEeJk_UH_MYljgscihAIWE"},
{"content":{"body":"* the Response type has a `bytes` method for getting a Uint8Array as well as a now-considered-mistake `arrayBuffer` method for getting an ArrayBuffer and `json` for getting json and `text` for getting text","format":"org.matrix.custom.html","formatted_body":"* the Response type has a <code>bytes</code> method for getting a Uint8Array as well as a now-considered-mistake <code>arrayBuffer</code> method for getting an ArrayBuffer and <code>json</code> for getting json and <code>text</code> for getting text","m.mentions":{},"m.new_content":{"body":"the Response type has a `bytes` method for getting a Uint8Array as well as a now-considered-mistake `arrayBuffer` method for getting an ArrayBuffer and `json` for getting json and `text` for getting text","format":"org.matrix.custom.html","formatted_body":"the Response type has a <code>bytes</code> method for getting a Uint8Array as well as a now-considered-mistake <code>arrayBuffer</code> method for getting an ArrayBuffer and <code>json</code> for getting json and <code>text</code> for getting text","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$qiHocCqL_3YzbC9ihr9qlD-4YG2BfR_35vhxTH9QUVU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753869059324,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$b53QYd2wINXrUR_90hpS6PvfymxrWq_7uMLwqBEHrME"},
{"content":{"body":"Ok yeah -- for typed array constructor it's probably fine since they are a \"conversion step\" anyway so adding the `.buffer` is not annoying ","format":"org.matrix.custom.html","formatted_body":"Ok yeah -- for typed array constructor it's probably fine since they are a \"conversion step\" anyway so adding the <code>.buffer</code> is not annoying","m.mentions":{},"msgtype":"m.text"},"ts":1753869076955,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$w0IYXut_UHUyAZwObt8pngj3nmn1W3dxGwm2OR87Ys4"},
{"content":{"body":"I might be OK with having both `type: \"arrayBuffer\"` and `type: \"bytes\"` I guess, if people strongly want to be able to get a non-wrapped ArrayBuffer","format":"org.matrix.custom.html","formatted_body":"I might be OK with having both <code>type: \"arrayBuffer\"</code> and <code>type: \"bytes\"</code> I guess, if people strongly want to be able to get a non-wrapped ArrayBuffer","m.mentions":{},"msgtype":"m.text"},"ts":1753869189908,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZNGxVEqTQv996Ae4hqmPDhp4vsNfUUe5Fgcr3Gv7fZY"},
{"content":{"body":"but my preference would also be just `bytes` for a Uint8Array","format":"org.matrix.custom.html","formatted_body":"but my preference would also be just <code>bytes</code> for a Uint8Array","m.mentions":{},"msgtype":"m.text"},"ts":1753869208459,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rAuC9L3srtdMV3uQOlk_jL-F22y5eFlAop7BFQETpdE"},
{"content":{"body":"web platform is probably not going to put `.arrayBuffer()` when adding this set of methods to new types, see thread starting at https://github.com/whatwg/streams/issues/1019#issuecomment-3014862880","format":"org.matrix.custom.html","formatted_body":"web platform is probably not going to put <code>.arrayBuffer()</code> when adding this set of methods to new types, see thread starting at https://github.com/whatwg/streams/issues/1019#issuecomment-3014862880","m.mentions":{},"msgtype":"m.text"},"ts":1753869271473,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gVHiqBhCtjmWdMtrriTmvdeBhKf_MDoB7sTebEyQvdU"},
{"content":{"body":"Yeah, let's only expose bytes as Uint8Array going forward pretty please","m.mentions":{},"msgtype":"m.text"},"ts":1753876949689,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Lt1R8DEuEmGYguUMjf_txu8R80mtKOuhH_zCDFVNqMg"},
{"content":{"body":"I think on the consumption side it makes sense to be lenient, but not when producing","m.mentions":{},"msgtype":"m.text"},"ts":1753876964989,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IxU2J2wDcZfd0UWhni3SICJNtCnuJsxRobX-d00Hp_0"},
{"content":{"body":"Note that we are strict on the consumption side if it's an output parameter, as with `encodeInto()`, and again I think that makes sense","format":"org.matrix.custom.html","formatted_body":"Note that we are strict on the consumption side if it's an output parameter, as with <code>encodeInto()</code>, and again I think that makes sense","m.mentions":{},"msgtype":"m.text"},"ts":1753877040405,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$WI4dsKUnMjKiIyU0m4gBIiWVnlsNOyOnwFl3lzwAsPw"},
{"content":{"body":"The proposal was originally written as bytes and then changed to buffer based on all the feedback in issue https://github.com/styfle/proposal-import-buffer/issues/5","m.mentions":{},"msgtype":"m.text"},"ts":1753882548674,"senderName":"styfle","senderId":"@styfle:matrix.org","id":"$vlYIhh68QHN7UF0pmUuzwmMkggEYq4m6hIQea3neYko"},
{"content":{"body":"guybedford: guybedford (Guy Bedford) We might ave a typo in the spec. Can you take another look?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@guybedford:matrix.org\">guybedford</a>: <a href=\"https://matrix.to/#/@guybedford-546b0059db8155e6700d5a77:gitter.im\">guybedford (Guy Bedford)</a> We might ave a typo in the spec. Can you take another look?","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org","@guybedford:matrix.org","@guybedford-546b0059db8155e6700d5a77:gitter.im"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$3iT4T3HaAHInbXueWxjiDm8gZW6DN6mSki6rAXjibHs"}},"msgtype":"m.text"},"ts":1753882672736,"senderName":"styfle","senderId":"@styfle:matrix.org","id":"$Gs8Q_Y7eZ806jfeZZiz7GnqmGx55eSGDo05awnAGHg0"}
]