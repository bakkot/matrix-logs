[
{"content":{"body":"Kris Kowal: ok, I think I don't understand why the origin needs to be in EcmaScript. Is this to allow emulation of the html loader? should this be something that is on the html side, where we serialize it, and then when deserializing it we do a check? It may be that I am unfamiliar with the use case. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@kriskowal:matrix.org\">Kris Kowal</a>: ok, I think I don't understand why the origin needs to be in EcmaScript. Is this to allow emulation of the html loader? should this be something that is on the html side, where we serialize it, and then when deserializing it we do a check? It may be that I am unfamiliar with the use case.","m.mentions":{"user_ids":["@kriskowal:matrix.org"]},"msgtype":"m.text"},"ts":1699459955732,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$T_tJbDgNsNlROPr_ugHrYBDShaFnc88IuhBgItawxO0"},
{"content":{"body":"I think that this is different than the above mentioned module graphnode instance, correct me if i am wrong and these are intrinsically related","m.mentions":{},"msgtype":"m.text"},"ts":1699460000230,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$4Z3LzFYm8WcJ-pWFqrlzo4GN_Ojn1oMlIBthKQ2hTNo"},
{"content":{"body":"Origin does not need to be in ECMAScript.","m.mentions":{},"msgtype":"m.text"},"ts":1699466975267,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$SlF1KghyJUKaHwzOoSbXUKYQAKEzfCOTd8OIs0CBwJI"},
{"content":{"body":"Much of this conversation about module graph replication is scoping out the shape of the ECMAScript side necessary to ensure HTML integration is coherent. To that end, there’s an internal slot for host data on module records today that we’re proposing will need to get distributed between internal slots of the module source record and module instance record.","m.mentions":{},"msgtype":"m.text"},"ts":1699467736575,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ocy1rLR176KFVkV3GhNA1hH9kCBPc49IxgTyg3dknlQ"},
{"content":{"body":"Specifically, we anticipate that in all of the proposed design families, the origin information would have to move from the module record to the module source record.","m.mentions":{},"msgtype":"m.text"},"ts":1699467778171,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$2WAP_TJquytdwNWCBnDMHoOuXkNrwyxTqo-w9fAM-mA"},
{"content":{"body":" * Specifically, we anticipate that in all of the proposed design families, for HTML integration the origin information would have to move from the module record to the module source record.","m.mentions":{},"m.new_content":{"body":"Specifically, we anticipate that in all of the proposed design families, for HTML integration the origin information would have to move from the module record to the module source record.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$2WAP_TJquytdwNWCBnDMHoOuXkNrwyxTqo-w9fAM-mA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1699467796615,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$1VQY9N1ZjQSj-YFsztAQ2QuK5hQevok78wqfYJNqBMU"},
{"content":{"body":"In the second design family, the host-specific data on a module source record would need to go on to include the full URL and that the host-specific import behavior would use that as the key for its module map. Module instances would adopt their local module subgraph wholesale from the existing host-specific URL-to-module-map.","m.mentions":{},"msgtype":"m.text"},"ts":1699467941830,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$NLAhfuvYrXdlA0FM8_dtz0besocw3Z2p5KVxeqVZ9kM"},
{"content":{"body":"(with the caveat that the keys of the module-instance-map are keyed on import specifier, not fully resolved module specifier, which is the URL in web and node per-realm module-map)","m.mentions":{},"msgtype":"m.text"},"ts":1699468032009,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bJPkQa8d86xn20cJ6ejJIyMUh8CEmCeqQPJq7tqUFmA"},
{"content":{"body":"Caridy’s proposal is consistent with all of the design families and HTML integrations as a baseline.","m.mentions":{},"msgtype":"m.text"},"ts":1699468433305,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$AnZQvUtkfH3snlk626JQEsRSrR9-OabELnG5FcFiOdI"},
{"content":{"body":"However, Luca Casonato’s proposed design may create a complication for the behavior of `new ModuleInstance(moduleSource)` if you’re trying to emulate HTML integration in user code. An HTML host would be able to look at moduleSource.[[HostData]].[[URL]] and observe that it already had an instance with that URL in its realm-scope module-map. My understanding is that the desired behavior in that case is that the `new ModuleInstance(moduleSource)` would evaluate to the existing `ModuleInstance` from the module-map, discarding the `this`, much like return override. To do that in user code would require a hook that Caridy’s proposal does not currently have.","format":"org.matrix.custom.html","formatted_body":"However, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>’s proposed design may create a complication for the behavior of <code>new ModuleInstance(moduleSource)</code> if you’re trying to emulate HTML integration in user code. An HTML host would be able to look at moduleSource.[[HostData]].[[URL]] and observe that it already had an instance with that URL in its realm-scope module-map. My understanding is that the desired behavior in that case is that the <code>new ModuleInstance(moduleSource)</code> would evaluate to the existing <code>ModuleInstance</code> from the module-map, discarding the <code>this</code>, much like return override. To do that in user code would require a hook that Caridy’s proposal does not currently have.","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"ts":1699468825516,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kHXNFeo3JJJquaF80EiIAmMOxaprJBE0GuNPmXVzvqI"},
{"content":{"body":"Consider this case concretely: https://gist.github.com/kriskowal/53444bf8578338c366e300a6858870f5","m.mentions":{},"msgtype":"m.text"},"ts":1699469095240,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$7DnPrFxUFAmCsmnJTVY3EySvif0AnsLhH0SQoFAR5Yw"},
{"content":{"body":"I believe Luca’s proposal will allow the host (for HTML integration) to ensure that there is only one instance of `2-job.js` in the `1-worker.js` realm.","format":"org.matrix.custom.html","formatted_body":"I believe Luca’s proposal will allow the host (for HTML integration) to ensure that there is only one instance of <code>2-job.js</code> in the <code>1-worker.js</code> realm.","m.mentions":{},"msgtype":"m.text"},"ts":1699469240085,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$d1iX5WwSMXWtv2cg88NNCtPmNFnjau_RpRfU5Yi6ZZ4"},
{"content":{"body":"An alternate interpretation is that there would in fact be two `2-job.js` instances because of the separate `new ModuleInstance(moduleSource)` calls and otherwise, all their dependencies will be lifted out of the host’s realm module-map.","format":"org.matrix.custom.html","formatted_body":"An alternate interpretation is that there would in fact be two <code>2-job.js</code> instances because of the separate <code>new ModuleInstance(moduleSource)</code> calls and otherwise, all their dependencies will be lifted out of the host’s realm module-map.","m.mentions":{},"msgtype":"m.text"},"ts":1699469298742,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$jfAhDyHBGWSHa0e_qHO3AsuRgWWi-rz-tamJDKfgue4"},
{"content":{"body":"Updated the gist to reflect that conundrum. Luca Casonato is it your intention in your vision of the intermediate design family that the above program logs 'dep' and 'job' once or twice?","format":"org.matrix.custom.html","formatted_body":"Updated the gist to reflect that conundrum. <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> is it your intention in your vision of the intermediate design family that the above program logs 'dep' and 'job' once or twice?","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"ts":1699469412326,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$RIco0tA0ipP5X-lz6_LQh4c2oSQcgEZs8KgSfw0tDaI"},
{"content":{"body":"If the intended behavior is:\n```\ndep\njob\njob\n```\nThen Caridy’s proposal requires no modification. HTML integration can work like this and all the facilities are in place for HTML integration to be emulated with user code on say, a toaster oven.","format":"org.matrix.custom.html","formatted_body":"<p>If the intended behavior is:</p>\n<pre><code>dep\njob\njob\n</code></pre>\n<p>Then Caridy’s proposal requires no modification. HTML integration can work like this and all the facilities are in place for HTML integration to be emulated with user code on say, a toaster oven.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1699469532385,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$NMV9Kd0JOShLM0sloqn7QwfihGmmrC7oCAV7OUh_820"}
]