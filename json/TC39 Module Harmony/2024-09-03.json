[
{"content":{"body":"looks like compile-time imports for wasm are going to ship: https://groups.google.com/a/chromium.org/g/blink-dev/c/zww0CT9PRVw/m/YmtNkC4jAQAJ","m.mentions":{},"msgtype":"m.text"},"ts":1725388101095,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Cec8oI0RR-RNSukJphCt-Z1oQkSsuf3ok8dsa55ekmE"},
{"content":{"body":"was there ever a strategy worked out for integrating that with the source-phase imports proposal?","m.mentions":{},"msgtype":"m.text"},"ts":1725388115453,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KsC5QVwJZb3N55x4Ye8q7UIUkSetAoFlSp_P7CDSdNQ"},
{"content":{"body":"Source phase imports give you a WebAssembly.Module instance, so then you can instantiate it with that ","format":"org.matrix.custom.html","formatted_body":"Source phase imports give you a WebAssembly.Module instance, so then you can instantiate it with that","msgtype":"m.text"},"ts":1725389029953,"senderName":"littledan (PTO until September 16)","senderId":"@littledan:matrix.org","id":"$aFhCdoqMKkdPXwMER8jMBDWpxRs0B2EIoSM74HV97Hk"},
{"content":{"body":"> <@bakkot:matrix.org> was there ever a strategy worked out for integrating that with the source-phase imports proposal?\n\nMy understanding was that wasm modules coming from the JS loaders would have js-string enabled by default ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$KsC5QVwJZb3N55x4Ye8q7UIUkSetAoFlSp_P7CDSdNQ?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />was there ever a strategy worked out for integrating that with the source-phase imports proposal?</blockquote></mx-reply>My understanding was that wasm modules coming from the JS loaders would have js-string enabled by default","m.relates_to":{"m.in_reply_to":{"event_id":"$KsC5QVwJZb3N55x4Ye8q7UIUkSetAoFlSp_P7CDSdNQ"}},"msgtype":"m.text"},"ts":1725389842108,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ewvCZUEUPY6jkY-ps2GJt0_8F4PAcEich8fv5KuraOk"},
{"content":{"body":"Wasm ESM integration will specify that string builtins is enabled for source phase, Luca Casonato mentioned this at our update at the last meeting","format":"org.matrix.custom.html","formatted_body":"Wasm ESM integration will specify that string builtins is enabled for source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last meeting","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"ts":1725390970229,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$PMROklzj8kw59YgktVBTgfcw_ILdbzq0K4qAb_NPvFs"},
{"content":{"body":" * Wasm ESM integration will specify that string builtins is enabled for instance & source phase, Luca Casonato mentioned this at our update at the last meeting","format":"org.matrix.custom.html","formatted_body":" * Wasm ESM integration will specify that string builtins is enabled for instance &amp; source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last meeting","m.mentions":{},"m.new_content":{"body":"Wasm ESM integration will specify that string builtins is enabled for instance & source phase, Luca Casonato mentioned this at our update at the last meeting","format":"org.matrix.custom.html","formatted_body":"Wasm ESM integration will specify that string builtins is enabled for instance &amp; source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last meeting","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PMROklzj8kw59YgktVBTgfcw_ILdbzq0K4qAb_NPvFs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725390988741,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$TCpf5_7k8XNvsUUuWJr-qyGQUz7LPuYpESQbR7IVrrw"},
{"content":{"body":" * Wasm ESM integration will specify that string builtins is enabled for instance & source phase, Luca Casonato mentioned this at our update at the last plenary meeting","format":"org.matrix.custom.html","formatted_body":" * Wasm ESM integration will specify that string builtins is enabled for instance &amp; source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last plenary meeting","m.mentions":{},"m.new_content":{"body":"Wasm ESM integration will specify that string builtins is enabled for instance & source phase, Luca Casonato mentioned this at our update at the last plenary meeting","format":"org.matrix.custom.html","formatted_body":"Wasm ESM integration will specify that string builtins is enabled for instance &amp; source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last plenary meeting","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PMROklzj8kw59YgktVBTgfcw_ILdbzq0K4qAb_NPvFs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725391003254,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Pc8daM2HBOPPFjQgVeNTEeJ0G4BaUV6-71DFWfT7s5g"},
{"content":{"body":"> <@littledan:matrix.org> Source phase imports give you a WebAssembly.Module instance, so then you can instantiate it with that\n\nright but that's after the `.compile` time when you'd want to enable it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$aFhCdoqMKkdPXwMER8jMBDWpxRs0B2EIoSM74HV97Hk?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>Source phase imports give you a WebAssembly.Module instance, so then you can instantiate it with that</blockquote></mx-reply>right but that's after the <code>.compile</code> time when you'd want to enable it","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aFhCdoqMKkdPXwMER8jMBDWpxRs0B2EIoSM74HV97Hk"}},"msgtype":"m.text"},"ts":1725391235328,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$A2yQ-5sn1xidSlfpT7O1rj0LSiXuHaWBvW7S0kMRa0k"},
{"content":{"body":"> <@guybedford:matrix.org> Wasm ESM integration will specify that string builtins is enabled for instance & source phase, Luca Casonato mentioned this at our update at the last plenary meeting\n\nah, great, sorry I missed that","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$PMROklzj8kw59YgktVBTgfcw_ILdbzq0K4qAb_NPvFs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">@guybedford:matrix.org</a><br>Wasm ESM integration will specify that string builtins is enabled for instance &amp; source phase, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> mentioned this at our update at the last plenary meeting</blockquote></mx-reply>ah, great, sorry I missed that","m.mentions":{"user_ids":["@guybedford:matrix.org","@lucacasonato:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$PMROklzj8kw59YgktVBTgfcw_ILdbzq0K4qAb_NPvFs"}},"msgtype":"m.text"},"ts":1725391243803,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aWryDGLn-c9YJde9GMIktWoJ2XoA7OyIVhfZiMrac7w"},
{"content":{"body":"presumably also any other built-ins? at least those which don't add capabilities? (which, IIUC the intention is for them to never add capabilities)","m.mentions":{},"msgtype":"m.text"},"ts":1725391328369,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EM1vtlsO9xSXmguTXfUiw7vNV-9LuDBA0MGg4gSCjkk"},
{"content":{"body":"I believe the intention is for them not to introduce capabilities under compile-time builtins, and that those are better suited as instantiation imports","m.mentions":{},"msgtype":"m.text"},"ts":1725391379224,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$sSa1PwsjQPNNUJxh7f-fr7vzz8g9bYitR6RY5TfJTCU"},
{"content":{"body":"but we will have to see how things progress too","m.mentions":{},"msgtype":"m.text"},"ts":1725391390558,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$gvmLRh8czmld0Z5Z-_A4Wk0UTZmV3OjQMvcwYVKVZc4"},
{"content":{"body":"perhaps a future compile time import could \"pull in\" an instantiation import","m.mentions":{},"msgtype":"m.text"},"ts":1725391414004,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$JfgQF-iD752H3y3ZddLuPD0BAR90PRD751IX8t-N-QY"},
{"content":{"body":"to represent the capability boundary","m.mentions":{},"msgtype":"m.text"},"ts":1725391422551,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$_4BYS2YyKV9u2GHfirYJlg6ufiL_l5aTg6sBX1oJMx4"},
{"content":{"body":"(I'm not sure I'm just hypothesising)","m.mentions":{},"msgtype":"m.text"},"ts":1725391435442,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$aU0wvkTh5YiN2Hy3drmbYX6f9229tuha5cped_8pCAs"},
{"content":{"body":"at the very least, we can consider proposals on a case by case basis, and should ensure this feedback is part of any future builtins though","m.mentions":{},"msgtype":"m.text"},"ts":1725391476075,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$zhFABA_0bS7f1n_EmXk2SJLkZpezlz-tPYa2e532Hng"},
{"content":{"body":"that would be a nice way of doing it, yeah","m.mentions":{},"msgtype":"m.text"},"ts":1725391634167,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tHPRLWR56xrJTi2QfcorCm3Bd4LOR5Cdy-1Y9B-cE14"}
]