[
{"content":{"body":"Mathieu Hofman’s points are all correct. ShadowRealm is an orthogonal and sometimes complementary approach to Lockdown and Compartments (or the more surgical Evaluators + Module Harmony)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mhofman:matrix.org\">Mathieu Hofman</a>’s points are all correct. ShadowRealm is an orthogonal and sometimes complementary approach to Lockdown and Compartments (or the more surgical Evaluators + Module Harmony)","msgtype":"m.text"},"ts":1688688022217,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Z60wmFES8ZJFh0Qt064kBYbhV-d3B5OD2oJJXv8NbFY"},
{"content":{"body":"Lockdown makes the surrounding realm suitable for multiple guest programs. The surrounding realm can be a ShadowRealm, but does not have to be.","msgtype":"m.text"},"ts":1688688116081,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$3DKsGpSvIaJS9PGoUSS4hsgwEdiZUPVKvNi9Frzl2zk"},
{"content":{"body":"danielrosenwasser So, point 3 is not the case: it is practical to lockdown() an ordinary realm.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@danielrosenwasser:matrix.org\">danielrosenwasser</a> So, point 3 is not the case: it is practical to lockdown() an ordinary realm.","msgtype":"m.text"},"ts":1688688284700,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kBrz1awnvDrbcj1QlN_LjFHSQEotzTqYwPK_V-Zl3iE"},
{"content":{"body":"But running lockdown in the primary realm does mean less JavaScript will function normally in that realm. So, a shadow realm could be useful for those cases.","msgtype":"m.text"},"ts":1688688378391,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$9JIGCQV5vchkzAUy24FvgpqRzXmX7SlKRwQGp3KmP40"},
{"content":{"body":"right, that's really what I meant","msgtype":"m.text"},"ts":1688688396377,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$lwyVVES4-yodUlAk_rd1wWfVdjdY3mONn8ex4_oHgHY"},
{"content":{"body":"e.g. your own code expects an \"unlocked\" realm, but it's a sufficient constraint on guest code where you want to reused the same Realm instead of spinning up a Shadow Realm per guest","msgtype":"m.text"},"ts":1688688410595,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$ihqzyBECq61hMz3X59VCiP2oU_bcagHZ5Vrg-qb-1f8"},
{"content":{"body":" * e.g. your own code expects an \"unlocked\" realm, but it's a sufficient constraint on guest code where you want to reuse the same Realm instead of spinning up a Shadow Realm per guest","m.new_content":{"body":"e.g. your own code expects an \"unlocked\" realm, but it's a sufficient constraint on guest code where you want to reuse the same Realm instead of spinning up a Shadow Realm per guest","msgtype":"m.text"},"m.relates_to":{"event_id":"$ihqzyBECq61hMz3X59VCiP2oU_bcagHZ5Vrg-qb-1f8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688688416563,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$nj3gesN2oReE-059tRKCvUb80i1PSlOQFwnY0tpF_IA"},
{"content":{"body":"Yes, that is a nice arrangement.","msgtype":"m.text"},"ts":1688688427526,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_Hg1NzmntBI44Kq0CiP14PkZK7HFa8cuSlU6jzn913s"},
{"content":{"body":"Not one we’ve had the opportunity to try yet though! We’ve been locking down primary realms, including worker realms, for all of Agoric’s work.","msgtype":"m.text"},"ts":1688688470976,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$B49HEaK95OJ8948OdIlxzvPuwQRpeWWM9iK3l5BK7MY"},
{"content":{"body":"Shims are not really a problem. Lockdown just has to cooperate with the shim. After shims, the biggest problem is usually property override mistakes, which aren’t really detectable until you’ve frozen some intrinsics.","msgtype":"m.text"},"ts":1688688553675,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$IhANDrjHTGShc9heIq7zWpCiiB1W0P3dsjfbGGxAQRc"},
{"content":{"body":"Notably, code of the flavor `{}.constructor = myConstructor` or `myPrototype.toString =` have to be changed to use `Object.defineProperty`, but then you’re golden. Folks using Hardened JavaScript generally get by these obstacles by patching the package and sending up a PR.","format":"org.matrix.custom.html","formatted_body":"Notably, code of the flavor <code>{}.constructor = myConstructor</code> or <code>myPrototype.toString =</code> have to be changed to use <code>Object.defineProperty</code>, but then you’re golden. Folks using Hardened JavaScript generally get by these obstacles by patching the package and sending up a PR.","msgtype":"m.text"},"ts":1688688635314,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$JiexB7mVwudt8H4o_40DnZujOz1NSyHn1NZoxWxIZK4"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1688688729806,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zES20JHZTJVZaEE8mwqxic65xynajNXx6_a_58RsGKw"},
{"content":{"body":"can we make Object.prototype.constructor/toString be more exotic instead of that","msgtype":"m.text"},"ts":1688688738324,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9qVEUPB0W-whahtLC1lF5n6gpprTp2wfM4TJiIidhUU"},
{"content":{"body":"That would be nice. We would like that.","msgtype":"m.text"},"ts":1688688749607,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$9GGZNU_z96FhtIKPYPg91O_uMRIMd1flJ3-qGlzyq4E"},
{"content":{"body":"(I would like to know what that means too :D)","msgtype":"m.text"},"ts":1688688773736,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$LF6sXDuzY9CTul3YyogW3eHuXtYF3oQU0FM-Emmxgyk"},
{"content":{"body":"I want to make it more exotic anyway https://github.com/tc39/proposal-symbol-proto/issues/1","msgtype":"m.text"},"ts":1688688776696,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2w_TPpcipVTxarNTrp3XpFDHbTr9YIH5E2RrfWkVmKM"},
{"content":{"body":"So would Shadow Realms not also be an alternative sandboxing technique? It sounds like it provides similar guarantees without needing a lockdown, but at the expense of a higher footprint","msgtype":"m.text"},"ts":1688688816700,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$RvAie3rQ6-6rcNH5f3ufU73Ax97zJS3N9Nzp91p1EAE"},
{"content":{"body":"Yes, that proposal is consistent with our aims and also hits the data-only prototype-pollution-attack firmly on the head.","msgtype":"m.text"},"ts":1688688824483,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$YsMuIfipORfQ5N6c9sBdyFIX8j5iWhvkotS-OdNha_0"},
{"content":{"body":"I would say complementary. Lockdown gives you multi-tenant realms, including multi-tenant shadowrealms.","msgtype":"m.text"},"ts":1688688875640,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$GKuuhvHTSbxasJQqooCSagw06BKm5xOu6jSqwAKv7eU"},
{"content":{"body":"And multi-tenancy comes with its own bag of trade-offs.","msgtype":"m.text"},"ts":1688688905120,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$BtWRTkLCRf7oA_JKh5y0R15cLvaTXcpuv-DTTtTpi8g"},
{"content":{"body":"Right, so while they are somewhat orthogonal, there is overlap in the use-cases and there will necessarily be a nuanced understanding of which is best for your situation","msgtype":"m.text"},"ts":1688688924724,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$tVaCLYTtrAcXywuGJokkuDxel5qKLQ7zO5fdvBphEQI"},
{"content":{"body":"e.g. `instanceof Array` etc","format":"org.matrix.custom.html","formatted_body":"e.g. <code>instanceof Array</code> etc","msgtype":"m.text"},"ts":1688688937124,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$HAA5j302SADFktxyddOID-HyPjRV_CyCTKd5I9P_urY"},
{"content":{"body":"That is, for example, you can’t safely endow a lockdown compartment with high resolution timers.","msgtype":"m.text"},"ts":1688688958592,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Ja19gJ8axvL1ntsYNUq15zvwEki3wBs3SaFIdbwyFE4"},
{"content":{"body":" * e.g. `instanceof Array` will not be coherent between Realms, Compartments share more than you might anticipate by default, etc.","format":"org.matrix.custom.html","formatted_body":" * e.g. <code>instanceof Array</code> will not be coherent between Realms, Compartments share more than you might anticipate by default, etc.","m.new_content":{"body":"e.g. `instanceof Array` will not be coherent between Realms, Compartments share more than you might anticipate by default, etc.","format":"org.matrix.custom.html","formatted_body":"e.g. <code>instanceof Array</code> will not be coherent between Realms, Compartments share more than you might anticipate by default, etc.","msgtype":"m.text"},"m.relates_to":{"event_id":"$HAA5j302SADFktxyddOID-HyPjRV_CyCTKd5I9P_urY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688688962184,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$BrKDNfV12fxKkVIwDh8NzZcCnyxkb8vYWBk0Xno2Gf0"},
{"content":{"body":"Yeah, the `instanceof Array` issue, we call identity discontinuity hazards, or more recently, Mark dubbed them “eval twins”","format":"org.matrix.custom.html","formatted_body":"Yeah, the <code>instanceof Array</code> issue, we call identity discontinuity hazards, or more recently, Mark dubbed them “eval twins”","msgtype":"m.text"},"ts":1688689063229,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$VBK_QmewuBCqsVJA5x_8OpfwGfwYEFfnxqtPhT-Y8vU"},
{"content":{"body":"But you don’t get identity discontinuity with either ShadowRealm or Compartment.","msgtype":"m.text"},"ts":1688689111342,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$64Gukij_8hJtWKph9ojOksGIHuGowIYXRhQtk0LLFlk"},
{"content":{"body":" * But you don’t get identity discontinuity of intrinsics with either ShadowRealm or Compartment.","m.new_content":{"body":"But you don’t get identity discontinuity of intrinsics with either ShadowRealm or Compartment.","msgtype":"m.text"},"m.relates_to":{"event_id":"$64Gukij_8hJtWKph9ojOksGIHuGowIYXRhQtk0LLFlk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688689189898,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$DzuGGMRh3b91hVRswsAJqMtIrh_9KBCpbGwMpJsRwnc"},
{"content":{"body":"Regarding multi-tenancy, the thing that we often miss is that all real JavaScript applications are multi-tenant if you count your third-party dependencies as tenants, and especially if you consider the Node.js standard library a tenant.","msgtype":"m.text"},"ts":1688690059988,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$s44aPV5XvhVdQ7nH-U2ruO5YLbh1miL18H5WM_A8MiU"},
{"content":{"body":"The only arrangements that qualify as single-tenant are hand-rolled web pages with no dependencies that rely exclusively on platform APIs implemented entirely in the non-JavaScript substrate. And the only cases where multi-tenant programs are not problematic are the ones where there’s no value to staging an attack.","msgtype":"m.text"},"ts":1688690194105,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ELMDwOC3zUr17f9QqNk6WhilMDmOI0XeI4WSci-N6lY"},
{"content":{"body":"But yes, the mitigations have overlapping threat models and lots and lots of nuance :-)","msgtype":"m.text"},"ts":1688690336725,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$tc6zNxWZ3HBJ-keamD4FiLa6ZEcA04QYrVyddCB5gfA"}
]