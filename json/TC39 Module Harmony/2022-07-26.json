[
{"content":{"body":"> <@guybedford:matrix.org> Thanks Rob Palmer for the input, very good points raised. My personal take on this perspective would be to ensure we have lazy execution and sync execution as a possibility of the \"epiche\" (in the spirit of continued mutation of the word). I completely get that these CJS -> ESM scenarios are causing friction for adoption, although a concern here is that this is a Node.js-specific issue that even with a spec unlock won't guarantee progress. Unfortunately Node.js is now caught up in a bind with its own loader system causing asynchronous loading requirements, although there are people actively working on making hooks sync by moving them off thread. Funding on the Node.js side may well speed things up there as well. On the ECMA-262 side, I could imagine a follow-up or new iteration of Yulia's proposal that tackles lazy execution and sync execution to fit into this story and I'd be more than happy to be involved in discussions here. From my perspective I don't see any frictions or concerns regarding the overall picture, short of more features just being more complexity, but I don't personally see an issue with adding complexity to the module system since it also means more control over performance and loading in the hands of users.\n\nfrom my perspective, and also from hearing from developers -- we may want to provide a high level construct that allows sync loading depending on the environment, but which is independently useful","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$40BYk6zAnh3rVda-AfTXACvjcDuvayaM-XDJB_FpCmc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">@guybedford:matrix.org</a><br>Thanks <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> for the input, very good points raised. My personal take on this perspective would be to ensure we have lazy execution and sync execution as a possibility of the \"epiche\" (in the spirit of continued mutation of the word). I completely get that these CJS -&gt; ESM scenarios are causing friction for adoption, although a concern here is that this is a Node.js-specific issue that even with a spec unlock won't guarantee progress. Unfortunately Node.js is now caught up in a bind with its own loader system causing asynchronous loading requirements, although there are people actively working on making hooks sync by moving them off thread. Funding on the Node.js side may well speed things up there as well. On the ECMA-262 side, I could imagine a follow-up or new iteration of Yulia's proposal that tackles lazy execution and sync execution to fit into this story and I'd be more than happy to be involved in discussions here. From my perspective I don't see any frictions or concerns regarding the overall picture, short of more features just being more complexity, but I don't personally see an issue with adding complexity to the module system since it also means more control over performance and loading in the hands of users.</blockquote></mx-reply>from my perspective, and also from hearing from developers -- we may want to provide a high level construct that allows sync loading depending on the environment, but which is independently useful","m.relates_to":{"m.in_reply_to":{"event_id":"$40BYk6zAnh3rVda-AfTXACvjcDuvayaM-XDJB_FpCmc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@guybedford:matrix.org> Thanks Rob Palmer for the input, very good points raised. My personal take on this perspective would be to ensure we have lazy execution and sync execution as a possibility of the \"epiche\" (in the spirit of continued mutation of the word). I completely get that these CJS -> ESM scenarios are causing friction for adoption, although a concern here is that this is a Node.js-specific issue that even with a spec unlock won't guarantee progress. Unfortunately Node.js is now caught up in a bind with its own loader system causing asynchronous loading requirements, although there are people actively working on making hooks sync by moving them off thread. Funding on the Node.js side may well speed things up there as well. On the ECMA-262 side, I could imagine a follow-up or new iteration of Yulia's proposal that tackles lazy execution and sync execution to fit into this story and I'd be more than happy to be involved in discussions here. From my perspective I don't see any frictions or concerns regarding the overall picture, short of more features just being more complexity, but I don't personally see an issue with adding complexity to the module system since it also means more control over performance and loading in the hands of users.\n\nfrom my perspective, and also from hearing from developers -- we may want to provide a high level construct that allows sync loading depending on the environment, but which is independently useful","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$40BYk6zAnh3rVda-AfTXACvjcDuvayaM-XDJB_FpCmc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@guybedford:matrix.org\">@guybedford:matrix.org</a><br>Thanks <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> for the input, very good points raised. My personal take on this perspective would be to ensure we have lazy execution and sync execution as a possibility of the \"epiche\" (in the spirit of continued mutation of the word). I completely get that these CJS -&gt; ESM scenarios are causing friction for adoption, although a concern here is that this is a Node.js-specific issue that even with a spec unlock won't guarantee progress. Unfortunately Node.js is now caught up in a bind with its own loader system causing asynchronous loading requirements, although there are people actively working on making hooks sync by moving them off thread. Funding on the Node.js side may well speed things up there as well. On the ECMA-262 side, I could imagine a follow-up or new iteration of Yulia's proposal that tackles lazy execution and sync execution to fit into this story and I'd be more than happy to be involved in discussions here. From my perspective I don't see any frictions or concerns regarding the overall picture, short of more features just being more complexity, but I don't personally see an issue with adding complexity to the module system since it also means more control over performance and loading in the hands of users.</blockquote></mx-reply>from my perspective, and also from hearing from developers -- we may want to provide a high level construct that allows sync loading depending on the environment, but which is independently useful","mimetype":"text/html"}]},"ts":1658824599659,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$6hTMtpiuu8MpFoYUvyYLdLMIdWwcmigCnveScfNYoGA"},
{"content":{"body":"This would require loosening early error restrictions, maybe only for modules","msgtype":"m.text","org.matrix.msc1767.text":"This would require loosening early error restrictions, maybe only for modules"},"ts":1658824626511,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$hegAlWrCTxSBOZwnQPZhbqblhpmWeVV5_9sK0XeOXe4"},
{"content":{"body":">depending on the environment\n\nPlease could you expand on what this means, Yulia","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>depending on the environment</p>\n</blockquote>\n<p>Please could you expand on what this means, Yulia</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":">depending on the environment\n\nPlease could you expand on what this means, Yulia","mimetype":"text/plain"},{"body":"<blockquote>\n<p>depending on the environment</p>\n</blockquote>\n<p>Please could you expand on what this means, Yulia</p>\n","mimetype":"text/html"}]},"ts":1658832806654,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$pdLpbqLSxLb6jnhvVn6dBYa3ErLe3KxgPqMVBSltWSg"},
{"content":{"body":"> <@robpalme:matrix.org> >depending on the environment\n> \n> Please could you expand on what this means, Yulia\n\nfor example, the browser may want to implement something like a library module in an async fashion, while node may want to do that in a sync fashion","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$pdLpbqLSxLb6jnhvVn6dBYa3ErLe3KxgPqMVBSltWSg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br><blockquote>\n<p>depending on the environment</p>\n</blockquote>\n<p>Please could you expand on what this means, Yulia</p>\n</blockquote></mx-reply>for example, the browser may want to implement something like a library module in an async fashion, while node may want to do that in a sync fashion","m.relates_to":{"m.in_reply_to":{"event_id":"$pdLpbqLSxLb6jnhvVn6dBYa3ErLe3KxgPqMVBSltWSg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@robpalme:matrix.org> >depending on the environment\n> \n> Please could you expand on what this means, Yulia\n\nfor example, the browser may want to implement something like a library module in an async fashion, while node may want to do that in a sync fashion","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$pdLpbqLSxLb6jnhvVn6dBYa3ErLe3KxgPqMVBSltWSg?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br><blockquote>\n<p>depending on the environment</p>\n</blockquote>\n<p>Please could you expand on what this means, Yulia</p>\n</blockquote></mx-reply>for example, the browser may want to implement something like a library module in an async fashion, while node may want to do that in a sync fashion","mimetype":"text/html"}]},"ts":1658832927444,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$GxlDPOl9sTICgwePYmyvnUhOeRb-18yVQj7wBKtEua8"},
{"content":{"body":"the idea is to make the only observable difference be time","msgtype":"m.text","org.matrix.msc1767.text":"the idea is to make the only observable difference be time"},"ts":1658832972337,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Q-INs9W7eM1CfLtUoRzdNejtmDrKej2Yc0WOzgrV0_k"},
{"content":{"body":"I can understand that the host-provided loader could differ.  What about virtualized environments?  I was assuming a user-hosted virtualized module graph could/would be as identical as possible - and therefore if sync loading were possible, that would be achievable in a virtualized environment running in a browser.","msgtype":"m.text","org.matrix.msc1767.text":"I can understand that the host-provided loader could differ.  What about virtualized environments?  I was assuming a user-hosted virtualized module graph could/would be as identical as possible - and therefore if sync loading were possible, that would be achievable in a virtualized environment running in a browser."},"ts":1658833364272,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$SZ0POTJ_hwoRQz8RbudYXOX4w994XF46C0apYGw5QAk"},
{"content":{"body":"yes, if i understand things correctly, virtualized environments would allow this. Maybe i don't understand where the confusion is?","msgtype":"m.text","org.matrix.msc1767.text":"yes, if i understand things correctly, virtualized environments would allow this. Maybe i don't understand where the confusion is?"},"ts":1658834215059,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$u7SeZ6mFY0FCrl-AOo5FZEIB2SfJHA6mLrBv_tEEUyA"},
{"content":{"body":"IIUC it sounds like Node could offer sync loading, browsers would not, and virtualized environments on both could","msgtype":"m.text","org.matrix.msc1767.text":"IIUC it sounds like Node could offer sync loading, browsers would not, and virtualized environments on both could"},"ts":1658834601454,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$1qZxhahpD81fBG2apjMJki4vNBHDmk1V6_VMdQ9PPJQ"},
{"content":{"body":"Sync loading would also solve the concern that some delegates have with the stdlib modules that some delegates have, that they wouldn't be synchronously available in scripts ","msgtype":"m.text"},"ts":1658841306747,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JzYl7IAtjcmMjLwjN7ZrUJ-eEZHsMzlUtsobFi5Db9w"},
{"content":{"body":"just so we are clear... there isn't a disagreement here?","msgtype":"m.text","org.matrix.msc1767.text":"just so we are clear... there isn't a disagreement here?"},"ts":1658841505639,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$oZjtPdfQZenaEOyv7MclPnsBMYs5TEU869RFd1AXQbE"},
{"content":{"body":"^ temperature check 😉\n➕, 🟰, and ➖","msgtype":"m.text"},"ts":1658841860319,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Nj5bZDr939eYYHLBaNI2tu-dkZ3f3pAeWHDbSPL_50M"},
{"content":{"body":"> <@yulia:mozilla.org> just so we are clear... there isn't a disagreement here?\n\ncorrect - only refinement of understanding","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$oZjtPdfQZenaEOyv7MclPnsBMYs5TEU869RFd1AXQbE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>just so we are clear... there isn&#39;t a disagreement here?</blockquote></mx-reply>correct - only refinement of understanding","m.relates_to":{"m.in_reply_to":{"event_id":"$oZjtPdfQZenaEOyv7MclPnsBMYs5TEU869RFd1AXQbE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> just so we are clear... there isn't a disagreement here?\n\ncorrect - only refinement of understanding","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$oZjtPdfQZenaEOyv7MclPnsBMYs5TEU869RFd1AXQbE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>just so we are clear... there isn&#39;t a disagreement here?</blockquote></mx-reply>correct - only refinement of understanding","mimetype":"text/html"}]},"ts":1658843016008,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$5WmBdjwIHEJgtrY3c_HE-Q1_-CIZhYRncSWyVhvB9cQ"},
{"content":{"body":"Moddable has also brought up sync loading as an important concern for them","msgtype":"m.text","org.matrix.msc1767.text":"Moddable has also brought up sync loading as an important concern for them"},"ts":1658843042073,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZvxAiN4H_rvvqWCH3Cm6Ac0hUZKFDjVps69OWZkKqMc"},
{"content":{"body":"Promises often have too much overhead","msgtype":"m.text","org.matrix.msc1767.text":"Promises often have too much overhead"},"ts":1658843052058,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$xfSgbmeynBeRIPamWxzyGI4fEINDuYawmUUUNQemoOs"},
{"content":{"body":"At the same time, TC39 has so far come down hard on the side of async loading","msgtype":"m.text","org.matrix.msc1767.text":"At the same time, TC39 has so far come down hard on the side of async loading"},"ts":1658843072910,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$hWtPc4KvMAb7DnQ0YtIzK8wnl7jEhBwsaZ3w8FUijSU"},
{"content":{"body":"yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable. ","msgtype":"m.text","org.matrix.msc1767.text":"yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable. "},"ts":1658843079447,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Y65PAcuwqMo_PS5mlaklXJnCFfXt4j1etKjO3G3oMf4"},
{"content":{"body":"There was a big debate at the point of introducing dynamic import, for example.","msgtype":"m.text","org.matrix.msc1767.text":"There was a big debate at the point of introducing dynamic import, for example."},"ts":1658843093260,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$s8p8kj2C80yq-FcidbLiC1TGjSmmbq0qZ9cITen5XEY"},
{"content":{"body":"so, they can be shared across different loading strategies and work roughly the same way","msgtype":"m.text","org.matrix.msc1767.text":"so, they can be shared across different loading strategies and work roughly the same way"},"ts":1658843099655,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$k2_71PG24uBdYVCyXd905Fw9dBhBDdvZHHQ-cEIj6Tc"},
{"content":{"body":"> <@littledan:matrix.org> There was a big debate at the point of introducing dynamic import, for example.\n\nyes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$s8p8kj2C80yq-FcidbLiC1TGjSmmbq0qZ9cITen5XEY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>There was a big debate at the point of introducing dynamic import, for example.</blockquote></mx-reply>yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc","m.relates_to":{"m.in_reply_to":{"event_id":"$s8p8kj2C80yq-FcidbLiC1TGjSmmbq0qZ9cITen5XEY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> There was a big debate at the point of introducing dynamic import, for example.\n\nyes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$s8p8kj2C80yq-FcidbLiC1TGjSmmbq0qZ9cITen5XEY?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>There was a big debate at the point of introducing dynamic import, for example.</blockquote></mx-reply>yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc","mimetype":"text/html"}]},"ts":1658843133066,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y"},
{"content":{"body":"> <@littledan:matrix.org> (TLA would be handled by running the async subgraph eagerly, and only being lazy about the stuff on top of that)\n\nI think this approach would be more general than restricting to just things which are only undetectable","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$HwjrFzkhXbmBdoIskrdOTUWHUaTgJtJCOnF4RzpzyCc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>(TLA would be handled by running the async subgraph eagerly, and only being lazy about the stuff on top of that)</blockquote></mx-reply>I think this approach would be more general than restricting to just things which are only undetectable","m.relates_to":{"m.in_reply_to":{"event_id":"$HwjrFzkhXbmBdoIskrdOTUWHUaTgJtJCOnF4RzpzyCc"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> (TLA would be handled by running the async subgraph eagerly, and only being lazy about the stuff on top of that)\n\nI think this approach would be more general than restricting to just things which are only undetectable","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$HwjrFzkhXbmBdoIskrdOTUWHUaTgJtJCOnF4RzpzyCc?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>(TLA would be handled by running the async subgraph eagerly, and only being lazy about the stuff on top of that)</blockquote></mx-reply>I think this approach would be more general than restricting to just things which are only undetectable","mimetype":"text/html"}]},"ts":1658843164040,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qLdsDVmAFcHygQe3GQxbjhGIDHy7DecGq11lGRzymwU"},
{"content":{"body":"JS doesn't have much of a pure subset--just function declarations basically","msgtype":"m.text","org.matrix.msc1767.text":"JS doesn't have much of a pure subset--just function declarations basically"},"ts":1658843175408,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$oPErzv6-Mo-HgdSMQDGKN9YquQm5y-gCIW6DFmqZI0w"},
{"content":{"body":"Deferred module evaluation, in how I pictured it, would be observable but well-defined","msgtype":"m.text","org.matrix.msc1767.text":"Deferred module evaluation, in how I pictured it, would be observable but well-defined"},"ts":1658843203473,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2Szr2sU-kW9q8OqQau2wCf7WnRb6kV7DJ445VDFkewo"},
{"content":{"body":"My view is: we have a low level utility for customizing loading however necessary. In addition, we have a \"programmer mental model assisting\" way of writing moduels -- where the module is written in a way that it doesn't expose some behaviors. I think we are all discussing the same thing: no TLA. In addition, no modification of globals in my view","msgtype":"m.text","org.matrix.msc1767.text":"My view is: we have a low level utility for customizing loading however necessary. In addition, we have a \"programmer mental model assisting\" way of writing moduels -- where the module is written in a way that it doesn't expose some behaviors. I think we are all discussing the same thing: no TLA. In addition, no modification of globals in my view"},"ts":1658843211879,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$sV-NEPitnuKglTUnIrLhdhqDQaCxm9mxGZD7fYeLTyE"},
{"content":{"body":"yep, there is an observable aspect to it","msgtype":"m.text","org.matrix.msc1767.text":"yep, there is an observable aspect to it"},"ts":1658843227095,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$PkAWjDtQBuhhonlw5mjWftGcQeBwMpsHwGxjGp7dGqo"},
{"content":{"body":"> <@yulia:mozilla.org> yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc\n\nWhat do you mean by this comment on motivation? I thought code splitting was always part of the goal.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc</blockquote></mx-reply>What do you mean by this comment on motivation? I thought code splitting was always part of the goal.","m.relates_to":{"m.in_reply_to":{"event_id":"$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc\n\nWhat do you mean by this comment on motivation? I thought code splitting was always part of the goal.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc</blockquote></mx-reply>What do you mean by this comment on motivation? I thought code splitting was always part of the goal.","mimetype":"text/html"}]},"ts":1658843249888,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$4B6v-tqNApeOBWs-LMNw_rvE3_lOZL4am6k61tUBbgs"},
{"content":{"body":"ideally, its \"just\" timing. in practice -- early errors, and impacts on the module itself would be observable","msgtype":"m.text","org.matrix.msc1767.text":"ideally, its \"just\" timing. in practice -- early errors, and impacts on the module itself would be observable"},"ts":1658843251201,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$XIxSOFO_Hh23kXYW2v-NXGm3kQzjwa6Iwy8NA1pSw10"},
{"content":{"body":"> <@yulia:mozilla.org> yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable.\n\nWhat did you mean by this comment?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$Y65PAcuwqMo_PS5mlaklXJnCFfXt4j1etKjO3G3oMf4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable. </blockquote></mx-reply>What did you mean by this comment?","m.relates_to":{"m.in_reply_to":{"event_id":"$Y65PAcuwqMo_PS5mlaklXJnCFfXt4j1etKjO3G3oMf4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@yulia:mozilla.org> yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable.\n\nWhat did you mean by this comment?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$Y65PAcuwqMo_PS5mlaklXJnCFfXt4j1etKjO3G3oMf4?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br>yes -- I think my goal would be to provide a way of restricting modules to a subset where differences in loading are undetectable. </blockquote></mx-reply>What did you mean by this comment?","mimetype":"text/html"}]},"ts":1658843323051,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$U8VXJ3a0ytf4G_LvrUUq9AE_d7xCWYQ5dS3LtLv8TnY"},
{"content":{"body":"> <@littledan:matrix.org> What do you mean by this comment on motivation? I thought code splitting was always part of the goal.\n\nI would have to dig it up. But there were multiple goals. One stated by the original proposer was cjs","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$4B6v-tqNApeOBWs-LMNw_rvE3_lOZL4am6k61tUBbgs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>What do you mean by this comment on motivation? I thought code splitting was always part of the goal.</blockquote></mx-reply>I would have to dig it up. But there were multiple goals. One stated by the original proposer was cjs","m.relates_to":{"m.in_reply_to":{"event_id":"$4B6v-tqNApeOBWs-LMNw_rvE3_lOZL4am6k61tUBbgs"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> What do you mean by this comment on motivation? I thought code splitting was always part of the goal.\n\nI would have to dig it up. But there were multiple goals. One stated by the original proposer was cjs","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$4B6v-tqNApeOBWs-LMNw_rvE3_lOZL4am6k61tUBbgs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>What do you mean by this comment on motivation? I thought code splitting was always part of the goal.</blockquote></mx-reply>I would have to dig it up. But there were multiple goals. One stated by the original proposer was cjs","mimetype":"text/html"}]},"ts":1658843339063,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$28ml0nrtPySoUDqcKyO29NOEM9EAScVA5jItq9POvLM"},
{"content":{"body":"Yeah no disagreement that something analogous to require was *one* of the goals","format":"org.matrix.custom.html","formatted_body":"Yeah no disagreement that something analogous to require was <em>one</em> of the goals","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yeah no disagreement that something analogous to require was *one* of the goals","mimetype":"text/plain"},{"body":"Yeah no disagreement that something analogous to require was <em>one</em> of the goals","mimetype":"text/html"}]},"ts":1658843373643,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$7wrGKGEW5ZVBAdVz8vY1yDGhkTULCGnCHEvPOKcv-eA"},
{"content":{"body":"> <@yulia:mozilla.org> yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc\n\nAnd now it gets reversed, people use it to load esm from cjs 🤔","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@yulia:mozilla.org\">@yulia:mozilla.org</a><br />yes... i recall this one and reading through it. Dynamic import was initially introduced to allow something like cjs loading iirc</blockquote></mx-reply>And now it gets reversed, people use it to load esm from cjs 🤔","m.relates_to":{"m.in_reply_to":{"event_id":"$2HVBml7im3WOG9h2EvR0C9yzKTm4c05QgV328zDMB_Y"}},"msgtype":"m.text"},"ts":1658843801171,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$S5s85SnsdJDa3kXm4nGoFfvjPxjh-xp7hUnHet7EO30"}
]