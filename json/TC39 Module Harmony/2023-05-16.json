[
{"content":{"body":"> <@littledan:matrix.org> but separately, didn't we want to provide some kind of access to AbstractModuleSource from the global?\n\nI thought if we don't provide any functionality on it, only presented for class heritage, it will be good for the implementors?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$3hvlpv513moRbKdoC5CEUHK0tIiKBp2kXPPTRKyHBic?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>but separately, didn&#39;t we want to provide some kind of access to AbstractModuleSource from the global?</blockquote></mx-reply>I thought if we don't provide any functionality on it, only presented for class heritage, it will be good for the implementors?","m.relates_to":{"m.in_reply_to":{"event_id":"$3hvlpv513moRbKdoC5CEUHK0tIiKBp2kXPPTRKyHBic"}},"msgtype":"m.text"},"ts":1684213968977,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5jESkGXhl5CCwVi9EkKftGkPqHQyC374JH839CfNd7w"},
{"content":{"body":"> <@kriskowal:matrix.org> Consider a very different straw-design: The `importAssetHook` would just return bytes and `parseAssetHook` which accepts the bytes and returns a `Module`.\n\nnot viable... it requires a parser","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$v8_sPEDWtvGNuND1ZB1VTcsOLgQN7Dily_7peYTkaYI?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Consider a very different straw-design: The <code>importAssetHook</code> would just return bytes and <code>parseAssetHook</code> which accepts the bytes and returns a <code>Module</code>.</blockquote></mx-reply>not viable... it requires a parser","m.relates_to":{"m.in_reply_to":{"event_id":"$v8_sPEDWtvGNuND1ZB1VTcsOLgQN7Dily_7peYTkaYI"}},"msgtype":"m.text"},"ts":1684214175388,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE"},
{"content":{"body":"> <@kriskowal:matrix.org> Consider a very different straw-design: The `importAssetHook` would just return bytes and `parseAssetHook` which accepts the bytes and returns a `Module`.\n\n * not viable... it requires a parser (and it basically breaks CSP?)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$v8_sPEDWtvGNuND1ZB1VTcsOLgQN7Dily_7peYTkaYI?via=matrix.org&amp;via=igalia.com&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>Consider a very different straw-design: The <code>importAssetHook</code> would just return bytes and <code>parseAssetHook</code> which accepts the bytes and returns a <code>Module</code>.</blockquote></mx-reply> * not viable... it requires a parser (and it basically breaks CSP?)","m.new_content":{"body":"not viable... it requires a parser (and it basically breaks CSP?)","format":"org.matrix.custom.html","formatted_body":"not viable... it requires a parser (and it basically breaks CSP?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684214391765,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$VIm2u6DE2nhZIk6Eb40RQM5Z13iQ-DA2ok2gTgNTg94"},
{"content":{"body":"> <@jackworks:matrix.org> not viable... it requires a parser (and it basically breaks CSP?)\n\ni would rather imagine a split between `loadHook`, and `instantiateHook` (one corresponding to source phase imports, other to source -> instance)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>not viable... it requires a parser (and it basically breaks CSP?)</blockquote></mx-reply>i would rather imagine a split between <code>loadHook</code>, and <code>instantiateHook</code> (one corresponding to source phase imports, other to source -&gt; instance)","m.relates_to":{"m.in_reply_to":{"event_id":"$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE"}},"msgtype":"m.text"},"ts":1684234713157,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$G4uM68M4HdcYXtAcnRMfdSWaU33pzRojyrUSX4Anmzg"},
{"content":{"body":"> <@jackworks:matrix.org> not viable... it requires a parser (and it basically breaks CSP?)\n\nThe parser would presumably be `ModuleSource` and the analogues for other languages. But it is true that those can’t attach CSP. But also, pure assets are not in general executable, so CSP might not be germane for the cases you’d want this feature.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!RkpmGMjJtqLKXzByOT:matrix.org/$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>not viable... it requires a parser (and it basically breaks CSP?)</blockquote></mx-reply>The parser would presumably be <code>ModuleSource</code> and the analogues for other languages. But it is true that those can’t attach CSP. But also, pure assets are not in general executable, so CSP might not be germane for the cases you’d want this feature.","m.relates_to":{"m.in_reply_to":{"event_id":"$PM-ocDpHXFw-RYwk85KWBwmWca-5nn8yKsgl03ocXgE"}},"msgtype":"m.text"},"ts":1684250549006,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$X0aA5GNkhRXLDjX97aqwF38V-vJJ6FiEie2m2oQWvPM"},
{"content":{"body":"> By making the phase part of the explicit syntax, it is possible to statically distinguish between\na full dynamic import and one that is only for a source (where dependencies don't need to be\nprocessed). – https://github.com/tc39/proposal-import-reflection/pull/45/files\n\nThis is actually a really good change for bundlers","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>By making the phase part of the explicit syntax, it is possible to statically distinguish between<br>a full dynamic import and one that is only for a source (where dependencies don't need to be<br>processed). – https://github.com/tc39/proposal-import-reflection/pull/45/files</p>\n</blockquote>\n<p>This is actually a really good change for bundlers</p>\n","msgtype":"m.text"},"ts":1684250681205,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$a5LIDdkHQL28xkgFoGx8emGNcVNOEI4BejJWms32dG8"},
{"content":{"body":"We'd be able to support the normal case with static analysis, but it if they did anything dynamic we would have deopted the entire graph. This makes it foolproof.","msgtype":"m.text"},"ts":1684250742952,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$vMj7dUHBl5zg7CZScZpMd1wyvaGIo6d_Cc_cinbeS-s"},
{"content":{"body":"Has implications for the properties of a `ModuleSource` instance. We could reveal whether each `import.<phase>` is used.","format":"org.matrix.custom.html","formatted_body":"Has implications for the properties of a <code>ModuleSource</code> instance. We could reveal whether each <code>import.&lt;phase&gt;</code> is used.","msgtype":"m.text"},"ts":1684250924524,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Btslk6fQ_OSfPkLsB9ZeTE1gpOVg5BANrXYodHpiLGE"}
]