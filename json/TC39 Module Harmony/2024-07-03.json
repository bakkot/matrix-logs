[
{"content":{"body":"This very interesting case came up in Node.js today  -https://github.com/bojavou/disambiguate-namespace","m.mentions":{},"msgtype":"m.text"},"ts":1720025507867,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$k_GstK8KkTI28byEH-RXB4HorhQj7WoO7sVaDH9ZQdI"},
{"content":{"body":"Apparently when `export * as X from 'x'` was specified, we inadvertantly specified value deduping!!?????","format":"org.matrix.custom.html","formatted_body":"Apparently when <code>export * as X from 'x'</code> was specified, we inadvertantly specified value deduping!!?????","m.mentions":{},"msgtype":"m.text"},"ts":1720025525771,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$klC-R2VCrzLju59GSXlY7IMhu3BzTn1fIOB3fmTx1aI"},
{"content":{"body":"that is `export * from './a'; export * from './b'` where both `a` and `b` contain the source text `export * as X from 'x'` IS NOT AMBIGUOUS!","format":"org.matrix.custom.html","formatted_body":"that is <code>export * from './a'; export * from './b'</code> where both <code>a</code> and <code>b</code> contain the source text <code>export * as X from 'x'</code> IS NOT AMBIGUOUS!","m.mentions":{},"msgtype":"m.text"},"ts":1720025554223,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$9sngYCu-pPIHYIdjR3VKTjZQKQPdnT5rr-8hsmCNVJg"},
{"content":{"body":"might be some V8 / Firefox divergence in the implementation","m.mentions":{},"msgtype":"m.text"},"ts":1720025572495,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$HjAVxjKY8TrS61oBJ3n26vTTaLUzSVnlF3sYV-DQmbo"},
{"content":{"body":"are we sure this is the correctly specified behaviour and not algorithmically incorrect?","m.mentions":{},"msgtype":"m.text"},"ts":1720025782640,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$qF6jXGZ9Mi3W0_csqCjKqCqs9g4NMOOHppZxaXZqdJY"},
{"content":{"body":"would be interested to hear others' takes on this","m.mentions":{},"msgtype":"m.text"},"ts":1720025826447,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$91A6_qiKAQ74Ds54o9BlU77sXkuh6FWPvxoBcQYU_go"},
{"content":{"body":"I have no idea about what is the expected behaviour, but it'd be interesting to dig up the notes to see if it was every discussed","m.mentions":{},"msgtype":"m.text"},"ts":1720026209980,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$CW_56cfgyPJ2z5gn_WrZ_5lSj5b5lXgt0aJkLeDle3s"},
{"content":{"body":"Firefox and V8 do different things - it's an error in V8 and works in Firefox","m.mentions":{},"msgtype":"m.text"},"ts":1720027231092,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$1w8XXp0RR99z11-132P83k1ZHl6dAucd8y3OqALoizk"},
{"content":{"body":"strictly speaking, Firefox is following the spec correctly","m.mentions":{},"msgtype":"m.text"},"ts":1720027239816,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$fAjDto-4U6Duyyhzkx8_7C0M9f03xg36zsjIfrDZDuQ"},
{"content":{"body":"My intuition is that the spec behaviour is correct, since those two exports are pointing to the same binding internally","m.mentions":{},"msgtype":"m.text"},"ts":1720028000298,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$47JIg7uoFt_-6PiN79rkdl6qLCJ2dQm0mbgSoT8ZGmQ"},
{"content":{"body":"For most people either behaviour would be ok though, since nobody thinks about the binding of the namespace object (but only about its value)","m.mentions":{},"msgtype":"m.text"},"ts":1720028042545,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1ktSypGxS5QqKpqXhQn31MYl70QlhhU02koZUQSSOKU"},
{"content":{"body":"It's the same as `export { foo as X } from \"X\"` in both `a` and `b` is not ambiguous, because they both point to the binding `foo`. `*` is just a special binding name, the same way as `default` is","format":"org.matrix.custom.html","formatted_body":"It's the same as <code>export { foo as X } from \"X\"</code> in both <code>a</code> and <code>b</code> is not ambiguous, because they both point to the binding <code>foo</code>. <code>*</code> is just a special binding name, the same way as <code>default</code> is","m.mentions":{},"msgtype":"m.text"},"ts":1720028113009,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$YAZxfB7Mpsy5zzjJDQdRM993QsrTdqgtvDu7N-6T2J4"},
{"content":{"body":"I suppose so!","m.mentions":{},"msgtype":"m.text"},"ts":1720028137453,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$wxNxHPhN9XKWVWE4UHeimclOhMWc8CPb10B24dMKfUk"},
{"content":{"body":"so for this case, `import {x} from '...'; export {x}` must be reflected as \"reexport\" x from '...'","format":"org.matrix.custom.html","formatted_body":"so for this case, <code>import {x} from '...'; export {x}</code> must be reflected as &quot;reexport&quot; x from '...'","msgtype":"m.text"},"ts":1720030509141,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$DelPXz5wTv9i9Tkjq119ZguZhGzyjSfgTsKZnB5eF7E"}
]