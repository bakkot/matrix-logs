[
{"content":{"body":"i mean, i don't have a concrete use case in mind","m.mentions":{},"msgtype":"m.text"},"ts":1758867158777,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_GMw5DCyFHrVDvJVIS0LXQ6mOGDltSoQrOPLVM867po"},
{"content":{"body":"it's just that, if the language is going to parse something into pieces that matter, it must expose those pieces","m.mentions":{},"msgtype":"m.text"},"ts":1758867173924,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UpnuFwSAE4wcglXvr-codTr2VkVkQhsnDBgT28irnjk"},
{"content":{"body":"That makes this a question of granularity. At a minimum, the \"pieces that matter\" are\n1. A digit string representation of a numerical value, possibly with trailing zeros.\n2. An optional unit identifier\n\nThose are definitely made available in the current API. If there's a need to get more internal details of the numerical value, that should come with a rationalization.","format":"org.matrix.custom.html","formatted_body":"<p>That makes this a question of granularity. At a minimum, the \"pieces that matter\" are</p>\n<ol>\n<li>A digit string representation of a numerical value, possibly with trailing zeros.</li>\n<li>An optional unit identifier</li>\n</ol>\n<p>Those are definitely made available in the current API. If there's a need to get more internal details of the numerical value, that should come with a rationalization.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1758869926256,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$7906ux8ZTZnYnq2h_e8qEEurfH4InZnj3yZ6zITktYs"},
{"content":{"body":"Also, I do not agree that this applies in general. For example, `new Function()` or `eval()` do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.\n\nTo be clear, I'm not saying that I disagree; I just don't think this currently applies to JavaScript.","format":"org.matrix.custom.html","formatted_body":"<p>Also, I do not agree that this applies in general. For example, <code>new Function()</code> or <code>eval()</code> do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.</p>\n<p>To be clear, I'm not saying that I disagree; I just don't think this currently applies to JavaScript.</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$UpnuFwSAE4wcglXvr-codTr2VkVkQhsnDBgT28irnjk"}},"msgtype":"m.text"},"ts":1758870563524,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$rH8L63TEIMmniqZr13yramaqaK0-hJs-Vj1vgd71BR0"},
{"content":{"body":"* Also, I do not agree that this applies in general. For example, `new Function()` or `eval()` do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.\n\nTo be clear, I'm not saying that I disagree about there being value in exposing the piecewise results of parsing; I just don't think this currently applies to JavaScript.","format":"org.matrix.custom.html","formatted_body":"* <p>Also, I do not agree that this applies in general. For example, <code>new Function()</code> or <code>eval()</code> do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.</p>\n<p>To be clear, I'm not saying that I disagree about there being value in exposing the piecewise results of parsing; I just don't think this currently applies to JavaScript.</p>\n","m.mentions":{},"m.new_content":{"body":"Also, I do not agree that this applies in general. For example, `new Function()` or `eval()` do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.\n\nTo be clear, I'm not saying that I disagree about there being value in exposing the piecewise results of parsing; I just don't think this currently applies to JavaScript.","format":"org.matrix.custom.html","formatted_body":"<p>Also, I do not agree that this applies in general. For example, <code>new Function()</code> or <code>eval()</code> do not expose an AST of the JavaScript that they generate. If you think that this is something that ought to be done going forward, then it sounds like a language design question that ought to be presented to the committee for general adoption.</p>\n<p>To be clear, I'm not saying that I disagree about there being value in exposing the piecewise results of parsing; I just don't think this currently applies to JavaScript.</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$rH8L63TEIMmniqZr13yramaqaK0-hJs-Vj1vgd71BR0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758870632041,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$wZiCjik7f6spK_qf6qO_f6756-KhN0uwJYKFGt7FjU8"},
{"content":{"body":"Evalâ€™s a special case","msgtype":"m.text"},"ts":1758898502340,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$S14F-tF6E9P4IqsCdqsvSVCTEgeUo8jlpauhfShukFw"},
{"content":{"body":"Ok, so just consider `new Function()` then.","format":"org.matrix.custom.html","formatted_body":"Ok, so just consider <code>new Function()</code> then.","m.mentions":{},"msgtype":"m.text"},"ts":1758899891911,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$I5qRKFlIQFolNt3r8X6Qxrz2emPbMS708hNChvE0VoQ"}
]