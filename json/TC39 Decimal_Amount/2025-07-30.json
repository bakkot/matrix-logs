[
{"content":{"body":"FWIW, I do not buy this use case. I'm willing to be convinced with concrete worked examples, but conversion isn't even part of Amount right now, and infinite values are just not well-behaved like that (e.g., what would one do with ∞ degrees?)","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5WZmpX-wDCxJGiVW8KWNmSldPkf7hcHWdzraNhhppls"}},"msgtype":"m.text"},"ts":1753846277434,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$b1o4Kyjar6sH7FPc6Ts6OPOUE42acFtON0KhSV-j9NU"},
{"content":{"body":"yeah i don't really buy this either, infinity isn't an amount","m.mentions":{},"msgtype":"m.text"},"ts":1753853272991,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZB3ArHG0zqCys4cy96kJvwIahZER89_oa-4SomMipDU"},
{"content":{"body":"the word \"amount\" is intrinsically finite/discrete","m.mentions":{},"msgtype":"m.text"},"ts":1753853281509,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$omS6IqIZzxFi4j2xn0c6fIkcdOTakiHE2w9F7kpqBUw"},
{"content":{"body":"if you want infinity (or NaN) you could use ±`Infinity` on its own","format":"org.matrix.custom.html","formatted_body":"if you want infinity (or NaN) you could use ±<code>Infinity</code> on its own","m.mentions":{},"msgtype":"m.text"},"ts":1753853304387,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$l1NUbkjK0_X1kDQY-kBBb2DKTN7Z25F-j0nZrhv-KA4"},
{"content":{"body":"* if you want infinity (or NaN) you could use ±`Infinity` on its own, alongside an Amount","format":"org.matrix.custom.html","formatted_body":"* if you want infinity (or NaN) you could use ±<code>Infinity</code> on its own, alongside an Amount","m.mentions":{},"m.new_content":{"body":"if you want infinity (or NaN) you could use ±`Infinity` on its own, alongside an Amount","format":"org.matrix.custom.html","formatted_body":"if you want infinity (or NaN) you could use ±<code>Infinity</code> on its own, alongside an Amount","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$l1NUbkjK0_X1kDQY-kBBb2DKTN7Z25F-j0nZrhv-KA4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753853310551,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$svQxg-TLHbMXLUKsvtu0KVISwNgzqQu6lDkr8jJfNzw"},
{"content":{"body":"Is infinity a valid \"measure\", but not \"amount\"?","m.mentions":{},"msgtype":"m.text"},"ts":1753855379249,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$OWAXYQmom15nPVdDBvCK4ORqjXybHR5NF3iN8S-Hk8g"},
{"content":{"body":"please don't take things in that direction. We don't need synonyms, we need concrete worked examples. And like I said, I _am_ willing to be convinced... it's certainly possible to have an infinite estimated duration due to total lack of progress for e.g. file transfers at 0 bytes/s or speed of 0 m/s, so it's not like the concept is impossible or incomprehensible. But it does also cause problems like lack of valid decimal (and hence JSON number) representation, and we should try to avoid inclusion doing more harm than good—especially since support could be added later, but can never be removed.","format":"org.matrix.custom.html","formatted_body":"please don't take things in that direction. We don't need synonyms, we need concrete worked examples. And like I said, I <em>am</em> willing to be convinced... it's certainly possible to have an infinite estimated duration due to total lack of progress for e.g. file transfers at 0 bytes/s or speed of 0 m/s, so it's not like the concept is impossible or incomprehensible. But it does also cause problems like lack of valid decimal (and hence JSON number) representation, and we should try to avoid inclusion doing more harm than good—especially since support could be added later, but can never be removed.","m.mentions":{},"msgtype":"m.text"},"ts":1753862338841,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$aHXTwAzjZUiVMeKNtZ2WTFWPe0GdSy0ZcEeqPiJkUKc"},
{"content":{"body":"Amount's internal-slot access from Intl.NF was raised as a concern by at least KG and MM. If we want to avoid that, I think we may need to add a `.value: string` readonly property or a `.valueOf(): string` method on Amount instances. At the moment, the only full-precision accessor for the value that's guaranteed to only contain the numeric value is `.toString({ displayUnit: 'never' })`, which doesn't seem like it'd be a sensible thing to encode in a protocol.\n\nAnother alternative would be to have Intl.NF be able to parse the serialized form `1.5[kg]` to a value+unit.\n\nAre there other choices here? The proposal's spec text currently looks for the [[Value]] and [[FractionDigits]] internal slots.","format":"org.matrix.custom.html","formatted_body":"<p>Amount's internal-slot access from Intl.NF was raised as a concern by at least KG and MM. If we want to avoid that, I think we may need to add a <code>.value: string</code> readonly property or a <code>.valueOf(): string</code> method on Amount instances. At the moment, the only full-precision accessor for the value that's guaranteed to only contain the numeric value is <code>.toString({ displayUnit: 'never' })</code>, which doesn't seem like it'd be a sensible thing to encode in a protocol.</p>\n<p>Another alternative would be to have Intl.NF be able to parse the serialized form <code>1.5[kg]</code> to a value+unit.</p>\n<p>Are there other choices here? The proposal's spec text currently looks for the [[Value]] and [[FractionDigits]] internal slots.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1753876001920,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$_kU9LBYGrQDpwrfHQKMgQOmu_H65CSyLHhzrDQhjZPs"},
{"content":{"body":"I'm glad MM and KG brought up the internal slot issue. I like the idea that Intl.NF do lightweight parsing (grabbing the substring of `toString()` up to the first `[`, if any). Having `.valueof()` return a string also strikes me as intuitively appropriate though I wonder if we might be painting ourselves into a corner somehow","format":"org.matrix.custom.html","formatted_body":"I'm glad MM and KG brought up the internal slot issue. I like the idea that Intl.NF do lightweight parsing (grabbing the substring of <code>toString()</code> up to the first <code>[</code>, if any). Having <code>.valueof()</code> return a string also strikes me as intuitively appropriate though I wonder if we might be painting ourselves into a corner somehow","m.mentions":{},"msgtype":"m.text"},"ts":1753879801703,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$C9cUFLYN95E-_xe33MDOdsGvAtkd7NzlZ5LQF2ZtwXE"},
{"content":{"body":"Shane posted an interesting example: https://github.com/tc39/proposal-measure/issues/50#issuecomment-3134873158","m.mentions":{"user_ids":["@gibson042:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aHXTwAzjZUiVMeKNtZ2WTFWPe0GdSy0ZcEeqPiJkUKc"}},"msgtype":"m.text"},"ts":1753879962839,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$DxY7_Fjh2KdnIhja9LrZLaQveDqMux9nt334UPmUJEw"},
{"content":{"body":"so far I think the example uses of infinite amounts arise not from direct use of infinity, but inferred/calculated infinity like division by zero. This makes me wonder whether we should support infinity out-of-the-box, now, or defer the discussion to proposal-smart-units, which is concerned with the kinds of examples we've seen so far","m.mentions":{},"msgtype":"m.text"},"ts":1753880189378,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$riTts8a9eYtjrl_F096Z2g5TG7wjyxCgFBcskSlR_9A"},
{"content":{"body":"regarding Ashley's request for `BigInt(new Amount(bigint))`, I guess that would be solved by having Amount's `valueOf` return a string (without unit)?","format":"org.matrix.custom.html","formatted_body":"regarding Ashley's request for <code>BigInt(new Amount(bigint))</code>, I guess that would be solved by having Amount's <code>valueOf</code> return a string (without unit)?","m.mentions":{},"msgtype":"m.text"},"ts":1753880565101,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$EKpFjibG6YXQ0AugNhSejOqlmaqIZr7nnXbt2-ALQ18"},
{"content":{"body":"(hmm, maybe not, nvm)","m.mentions":{},"msgtype":"m.text"},"ts":1753880809032,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$xdGGQN1JV0Otx4i9T1sdlnFKURgibNZVOCCdahaMINw"},
{"content":{"body":"how feasible would it be to add a new `bigint` hint to `ToPrimitive`?","format":"org.matrix.custom.html","formatted_body":"how feasible would it be to add a new <code>bigint</code> hint to <code>ToPrimitive</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1753880835186,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$XCXwpXbjDFcCJ63v9Qzpa1A1OBaPtOFSDFSYJ_QYi6U"},
{"content":{"body":"What if we just didn't add toPrimitive on amount ","msgtype":"m.text"},"ts":1753880933025,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fk8sPOlypQzmM5XA5a5fWH6vzcTdj4QpKc1f_Vyq6p0"},
{"content":{"body":"And made valueOf return the string","msgtype":"m.text"},"ts":1753880957776,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$UMsyrZqTgU5qrJSNuJx0hkXvWF9HgbsvShbmipYYp9Q"},
{"content":{"body":"It means that amount+amount would do string concatenation, but that seems fine","msgtype":"m.text"},"ts":1753881033677,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hmuGIbnd9h_vRUluIkV3EhbI0HJJanrxgjBk5V3hMLo"},
{"content":{"body":"You should extract the numbers before doing math anyway ","msgtype":"m.text"},"ts":1753881042526,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Zrq1gJt7uqFsvcxGJRmtk4RHXt7IOqhQEegbFNwoLB4"},
{"content":{"body":"I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's `toNumber()` throw if it produces ±Infintiy","format":"org.matrix.custom.html","formatted_body":"I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's <code>toNumber()</code> throw if it produces ±Infintiy","m.mentions":{},"msgtype":"m.text"},"ts":1753881653626,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$w2uMm1hyR3TWwrcTOu_K-qITJ4RnamIaQsehZJ-UerM"},
{"content":{"body":"iow I wonder if the discussion was initially triggered not so much by whether we accept infinity, but whether we emit infinity","m.mentions":{},"msgtype":"m.text"},"ts":1753881682241,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$-_ioUlgpoEMLLkunp2DP_p-Nk0ZDLJiYCq01-xcXiOo"},
{"content":{"body":"* I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's `toNumber()` throw if it would produce ±Infintiy","format":"org.matrix.custom.html","formatted_body":"* I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's <code>toNumber()</code> throw if it would produce ±Infintiy","m.mentions":{},"m.new_content":{"body":"I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's `toNumber()` throw if it would produce ±Infintiy","format":"org.matrix.custom.html","formatted_body":"I might be misremembering but my understanding of the discussion that brought us to the infinity topic was the possibility that Amount might generate an infinite value when converting to Number or BigInt (or, looking into the future, Decimal). There's a kind of mismatch between the vision we offer of (more or less) unlimited finite values and the hard reality that Number (and Decimal) are limited. One way to resolve this would be to have Amount's <code>toNumber()</code> throw if it would produce ±Infintiy","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$w2uMm1hyR3TWwrcTOu_K-qITJ4RnamIaQsehZJ-UerM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753881717836,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$2LUUlIPU10MEpEKX8K5c0cyitbrp6lB_6ak5B_sRBnM"},
{"content":{"body":"there could be an option in `toNumber()` to actually produce ±Infinity, but throw by default","format":"org.matrix.custom.html","formatted_body":"there could be an option in <code>toNumber()</code> to actually produce ±Infinity, but throw by default","m.mentions":{},"msgtype":"m.text"},"ts":1753881882636,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$bBKv-YqVmy9NngZhKHL-ff6WrQ5xyJIrejS8Yb61oZ8"},
{"content":{"body":"My understanding is that infinity was raised as a concern by WH as it's a value that's supported by Number. And that he would also want to see NaN being supported.","m.mentions":{},"msgtype":"m.text"},"ts":1753891123620,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$C9pJIhzrbLolnkVqLD5_sNkn2AjqCHuPNXCJbTnHVCo"},
{"content":{"body":"So their support comes from wanting to have Amount work as an \"annotated Number\".","m.mentions":{},"msgtype":"m.text"},"ts":1753891187837,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$LUgc16bQ5lMC4UiaKZyqeAHTQX_CrRBLwcBFgaZOzSc"},
{"content":{"body":"Before jumping in head-first on this, we should discuss it with TG3. They didn't seem to realize that Intl.DateTimeFormat does the internal slot thing too.\n\nIf we did do this, I think it should be a getter for `.stringNumber()` and `.unit` separately","format":"org.matrix.custom.html","formatted_body":"<p>Before jumping in head-first on this, we should discuss it with TG3. They didn't seem to realize that Intl.DateTimeFormat does the internal slot thing too.</p>\n<p>If we did do this, I think it should be a getter for <code>.stringNumber()</code> and <code>.unit</code> separately</p>\n","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$C9cUFLYN95E-_xe33MDOdsGvAtkd7NzlZ5LQF2ZtwXE"}},"msgtype":"m.text"},"ts":1753893957614,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ltiFr1SdKabDMv26Ruad5QDjpIlH0-HhT8Nj5R7VZO8"},
{"content":{"body":"I could invite MM to the next TG3 call and we could book a bit of time to walk through the internal slots issue","m.mentions":{},"msgtype":"m.text"},"ts":1753894222593,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$w2upW_GKdlYa33jXLdyCeUgAfM6yjS5vHAl7SOwztL0"},
{"content":{"body":"it's neither, it's a concept, not an actual number.","m.mentions":{},"m.relates_to":{"event_id":"$OWAXYQmom15nPVdDBvCK4ORqjXybHR5NF3iN8S-Hk8g","is_falling_back":true,"m.in_reply_to":{"event_id":"$OWAXYQmom15nPVdDBvCK4ORqjXybHR5NF3iN8S-Hk8g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1753894889044,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IjfrpD-_C96cyd9HvZ_ta8O68iOH9tKwcY6rLKGo9Qc"},
{"content":{"body":"do we still want to discuss the infinity issue in a continuation? or would we prefer to iterate on that here and GH?","m.mentions":{},"msgtype":"m.text"},"ts":1753900238131,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$en0xogoudtsH21O_qeb9oAs_dXiposmSWqXmJpK05jY"},
{"content":{"body":"done","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$w2upW_GKdlYa33jXLdyCeUgAfM6yjS5vHAl7SOwztL0"}},"msgtype":"m.text"},"ts":1753900715598,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$uphvY5Rf7EExDdWxEL3Mo9JxdX5Umb1MrJz0YZv1eBE"},
{"content":{"body":"we should make an issue for this and add it to the agenda","m.mentions":{},"msgtype":"m.text"},"ts":1753900733019,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$QPMI_UOSEdd1sFicVF48oG1h-MgHyZe1ZwaTYG4PqnE"},
{"content":{"body":"nice","m.mentions":{},"msgtype":"m.text"},"ts":1753907358791,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RrycnxefBcgGzmQlO7i4FZB6tsQN7fgvMzbaUldNEfc"},
{"content":{"body":"Mark says he'll attend the August 14th TG2 call","m.mentions":{},"msgtype":"m.text"},"ts":1753907808157,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$98jPUEiPt53Pfj8_M6IK1URSmbCGHIadLMbxX55pOIc"},
{"content":{"body":"to talk about internal slots and Intl","m.mentions":{},"msgtype":"m.text"},"ts":1753907817462,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$2r-WH95fzO25csepL2eWpCo0xFrclzyQv5TWyFwoHlo"},
{"content":{"body":"(talking about this in TG3 would also make sense of course)","m.mentions":{},"msgtype":"m.text"},"ts":1753907896473,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$ft6IT7KN9k27_8oRIOSeyc5aQg_9-z_E93tsJ8dRC8c"},
{"content":{"body":"For Infinity, I think we need to get champion group alignment first","m.mentions":{},"msgtype":"m.text"},"ts":1753907924172,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$GctCUz3Xz1x3dXEnSflVQxcOm8DU-tTp6nUiYAHk2d0"},
{"content":{"body":"The Amount repo has been renamed: https://github.com/tc39/proposal-amount","m.mentions":{},"msgtype":"m.text"},"ts":1753907932821,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$zhFR-tUS8hARQrxIdaAZnmCikQy6pl_s1cJt2CdjMH8"},
{"content":{"body":"But I'm going to suggest that we could take some time to discuss the Intl MV limits issue","m.mentions":{},"msgtype":"m.text"},"ts":1753907948670,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$OlZm-QU6xakYx1YDavXxf6oPWLmyNwRJmm_qiSvHSVU"},
{"content":{"body":"sgtm","m.mentions":{},"msgtype":"m.text"},"ts":1753907962024,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$Zq8n6dXjnbSL-Dl3Q1MkM0s7DB84d_1scKM3g_NsyFw"},
{"content":{"body":"I've poked CDA to add a continuation","m.mentions":{},"msgtype":"m.text"},"ts":1753907992870,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$Qojp1YZuOJ904guecN00LcEC21hUE_ZrEyHTPB0MnRk"},
{"content":{"body":"It's less a continuation and more of a new topic, but sure","m.mentions":{},"msgtype":"m.text"},"ts":1753908019853,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ivsc4dpAcAp5tFAs2Pc97MBHtB6h7SpCJIy1B1Q47CU"},
{"content":{"body":"would you like to screenshare that issue?","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$OlZm-QU6xakYx1YDavXxf6oPWLmyNwRJmm_qiSvHSVU"}},"msgtype":"m.text"},"ts":1753908213699,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$vJZAHwsL_OOUsoRs1Nq8pu85Pdv8K0TXju2WEgWtUmw"},
{"content":{"body":"Yeah","m.mentions":{"user_ids":["@jesse:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$vJZAHwsL_OOUsoRs1Nq8pu85Pdv8K0TXju2WEgWtUmw"}},"msgtype":"m.text"},"ts":1753908228733,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$FHnf8Ilv-aXs_w7R9g3qVQy173VYKGW6bBN7HkuVeuQ"},
{"content":{"body":"ryzokuken: Could you rename this channel as \"TC39 Decimal/Amount\"?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a>: Could you rename this channel as \"TC39 Decimal/Amount\"?","m.mentions":{"user_ids":["@usharma:igalia.com"]},"msgtype":"m.text"},"ts":1753909830142,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$xOIy7Xzu4bwfCD7kwZYGPHMcFHlpVY-YQ-0PDD7yGto"}
]