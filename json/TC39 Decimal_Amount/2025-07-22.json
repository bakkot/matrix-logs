[
{"content":{"body":"https://github.com/tc39/proposal-measure/issues/43","m.mentions":{},"msgtype":"m.text"},"ts":1753174403730,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$eq-obg0HDFEN7SfnayGL1m6BrKoj362sUgQ-c5pv2fc"},
{"content":{"body":"At least 3 programming languages have an Amount-like thing in the standard library: Swift, Java, and F#. Several others have it in popular packages. Seems worth highlighting.","m.mentions":{},"msgtype":"m.text"},"ts":1753174476866,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$OX2PfEGSM3BovL1VVjSRC9yDsF2td9g37t_jranehS4"},
{"content":{"body":"thanks for putting that together","m.mentions":{},"msgtype":"m.text"},"ts":1753174494632,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$GT_UVcMTQ68tlHtObaflHV-S55XtEidqvE8Eqipl-N8"},
{"content":{"body":"I can add a slide for this","m.mentions":{},"msgtype":"m.text"},"ts":1753174506030,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$wbAp1K10VbYvZfo52KPkxmrOzBAM5wedS3QfV2dQOpI"},
{"content":{"body":"`Quantity` seems to be the most popular name for it, except in Swift which uses the name `Measurement`. No one I saw uses `Amount`. That doesn't mean it's a bad name, it just means there is less precedent for it","format":"org.matrix.custom.html","formatted_body":"<code>Quantity</code> seems to be the most popular name for it, except in Swift which uses the name <code>Measurement</code>. No one I saw uses <code>Amount</code>. That doesn't mean it's a bad name, it just means there is less precedent for it","m.mentions":{},"msgtype":"m.text"},"ts":1753174597749,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$XO9yk0jmMy6_U9-dumTdIgmzgSn5ee0QLJHdAnBtBrE"},
{"content":{"body":"IIRC we  also floated \"quantity\" a while back but didn't pick it","m.mentions":{},"msgtype":"m.text"},"ts":1753174638901,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$mTN70HS1oQ6q3j4yxwYhLq5mcTWMeIPPwyt7-sahlN8"},
{"content":{"body":"We can do a TG5 study at Stage 2 like we did with Temporal to decide between PlainDate, LocalDate, and CivilDate","m.mentions":{},"msgtype":"m.text"},"ts":1753174700618,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$Ugpu1lz2bGfKvwz9DelmIlb5vbs3a5dOy2SuOAgXDOw"},
{"content":{"body":"Also, the \"Why Amount\" slide should have a bullet point about library interop: introducing a standard data type that third-party libraries can use interoperably","m.mentions":{},"msgtype":"m.text"},"ts":1753174869864,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$Jif_lGkS9GH6AGWI_XdmGVk-4De8iKRebVsECISEEqk"},
{"content":{"body":"For example, a third-party unit conversion library and a third-party widget can talk natively with each other with Amount","m.mentions":{},"msgtype":"m.text"},"ts":1753174918533,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$3S3aD3YvqVv3J694VQscQC5oIJV_2SUI6tGs29avBN8"},
{"content":{"body":"* For example, a third-party unit conversion library and a third-party unit picker widget can talk natively with each other with Amount","m.mentions":{},"m.new_content":{"body":"For example, a third-party unit conversion library and a third-party unit picker widget can talk natively with each other with Amount","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$3S3aD3YvqVv3J694VQscQC5oIJV_2SUI6tGs29avBN8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1753174928712,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$JFriByVF3zAIQMfbTWg2I7ngOJaz_uwfWQmkiWQYOcQ"},
{"content":{"body":"(and of course they can also talk natively with Intl.NumberFormat)","m.mentions":{},"msgtype":"m.text"},"ts":1753174975479,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$vnI2h76RI7jBrHduI9tYpvHmXBvigXTWfLiDjEqFHOo"},
{"content":{"body":"Amount does this better than a protocol because it is immutable with its own prototype and methods for interacting with it","m.mentions":{},"msgtype":"m.text"},"ts":1753175016771,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$-HfQiYvfm2cK3p8TvyTVsIv_fCMyokXBqtYz3DT30a4"},
{"content":{"body":"If anyone in plenary wants to push on the protocol thingâ€¦ there's another topic on the agenda about why Thenables, TC39's most prominent procol, are a security risk due to prototype inheritance. Immutable objects with a specific API are safer.","m.mentions":{},"msgtype":"m.text"},"ts":1753176693711,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$ltfTSDSks-oq7V9ishhM738LMhsflC9MXXU_WKXCiQc"},
{"content":{"body":"This seems like information that ought to be included in the readme, no?","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$eq-obg0HDFEN7SfnayGL1m6BrKoj362sUgQ-c5pv2fc"}},"msgtype":"m.text"},"ts":1753185827935,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$8ZzEwGVnEzHGzjnwFyUJmo6l_fSMJTolOihB5Zfx8H0"},
{"content":{"body":"agree -- I can add that","m.mentions":{},"msgtype":"m.text"},"ts":1753185855181,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$t17g6Xyrfd4hlVy-qR1k0Cm1JsaSCVBhbWcNcEcp3AM"},
{"content":{"body":"I would prefer not opening up the naming discussion again. It's a possibility, yes, but I don't think we should be actively pushing for more bikeshedding.","m.mentions":{"user_ids":["@sffc:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Ugpu1lz2bGfKvwz9DelmIlb5vbs3a5dOy2SuOAgXDOw"}},"msgtype":"m.text"},"ts":1753185915115,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$a1kEmwYtCv0pmpOBpPMPdPz0XTB4FaTc2cExTbjz3MM"},
{"content":{"body":"my recollection is that we've largely settled on a name -- I think with \"amount\" we've been in a steady state for a while now","m.mentions":{},"msgtype":"m.text"},"ts":1753186048331,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$61hHiy9Iy7GT6I6VvatCXGJHRedvHkoVFseeoG-4A0g"},
{"content":{"body":"(though indeed maybe a better name could come up)","m.mentions":{},"msgtype":"m.text"},"ts":1753186062265,"senderName":"Jesse","senderId":"@jesse:igalia.com","id":"$s_OGW_1MZ7x05m8YKh6mfa3Fsb22Jp5IXvU0xIHw5tE"}
]