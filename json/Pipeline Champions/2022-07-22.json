[
{"content":{"body":"Hi all, jschoi invited me to this channel. I expressed the position during the meeting today that I think it would be worthwhile to continue exploring the space of API functions for method chaining. Although the Function.pipe proposal didn't reach Stage 1, I think it would be helpful to consider that direction in the context of the Pipeline proposal.\n\nThe Pipeline champions considered \"hack style\" and \"F# style\" options for the pipeline proposal. I would like to see how the use cases would pan out with a third \"API style\" option. In other words, take the examples that motivate the pipeline syntax operator and show how they would work with Function.pipe, Function.pipeAsync, etc.","format":"org.matrix.custom.html","formatted_body":"<p>Hi all, <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a> invited me to this channel. I expressed the position during the meeting today that I think it would be worthwhile to continue exploring the space of API functions for method chaining. Although the Function.pipe proposal didn't reach Stage 1, I think it would be helpful to consider that direction in the context of the Pipeline proposal.</p>\n<p>The Pipeline champions considered &quot;hack style&quot; and &quot;F# style&quot; options for the pipeline proposal. I would like to see how the use cases would pan out with a third &quot;API style&quot; option. In other words, take the examples that motivate the pipeline syntax operator and show how they would work with Function.pipe, Function.pipeAsync, etc.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Hi all, jschoi invited me to this channel. I expressed the position during the meeting today that I think it would be worthwhile to continue exploring the space of API functions for method chaining. Although the Function.pipe proposal didn't reach Stage 1, I think it would be helpful to consider that direction in the context of the Pipeline proposal.\n\nThe Pipeline champions considered \"hack style\" and \"F# style\" options for the pipeline proposal. I would like to see how the use cases would pan out with a third \"API style\" option. In other words, take the examples that motivate the pipeline syntax operator and show how they would work with Function.pipe, Function.pipeAsync, etc.","mimetype":"text/plain"},{"body":"<p>Hi all, <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a> invited me to this channel. I expressed the position during the meeting today that I think it would be worthwhile to continue exploring the space of API functions for method chaining. Although the Function.pipe proposal didn't reach Stage 1, I think it would be helpful to consider that direction in the context of the Pipeline proposal.</p>\n<p>The Pipeline champions considered &quot;hack style&quot; and &quot;F# style&quot; options for the pipeline proposal. I would like to see how the use cases would pan out with a third &quot;API style&quot; option. In other words, take the examples that motivate the pipeline syntax operator and show how they would work with Function.pipe, Function.pipeAsync, etc.</p>\n","mimetype":"text/html"}]},"ts":1658451420153,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$r-eZ-rffPma8Gpt_IamkyNTvcOeDli8fvmAfd3FX-Xs"},
{"content":{"body":"Opened an issue: https://github.com/tc39/proposal-pipeline-operator/issues/273","msgtype":"m.text","org.matrix.msc1767.text":"Opened an issue: https://github.com/tc39/proposal-pipeline-operator/issues/273"},"ts":1658451934083,"senderName":"sffc","senderId":"@sffc:mozilla.org","id":"$aVTEFI4Xy7ISEIFbf0E0TeyVhF7xF1YjJiyc62caslA"}
]