[
{"content":{"body":"> Call-this + pipe have the advantage of no overlap,\n\nI think I just refuted that.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Call-this + pipe have the advantage of no overlap,</p>\n</blockquote>\n<p>I think I just refuted that.</p>\n","msgtype":"m.text"},"ts":1641513638671,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$uS30BK5s58tBu-oFnELbV2T4acFkIweiR2MOKUby-io"},
{"content":{"body":"It exactly overlaps with pipeline+uncurry","msgtype":"m.text"},"ts":1641513651802,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$zbwkifdHAJdveIQCdMZxFSXVblxaFVQjR6LVccL1Yls"},
{"content":{"body":"No? You said call-this overlaps with uncurry.","msgtype":"m.text"},"ts":1641513654218,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$0dfoOnfc3IVownESu0_g8d2krfk9DtLA9O3khWrTWqw"},
{"content":{"body":"Right, because call-this and uncurry are the same thing in different syntaxes.","msgtype":"m.text"},"ts":1641513667738,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$VodLjIZM36P4otm6pBa-C8-ULgA1GA6-AI9iQ281Ya4"},
{"content":{"body":"My goal here is to allow fluent APIs with acceptable synatx","msgtype":"m.text"},"ts":1641513786991,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$BS7OL8PCiI8dG_piHIFCbHBfO0nV1v7zKQrDaDiRruE"},
{"content":{"body":"is heading home for the day, will have to continue later","msgtype":"m.emote"},"ts":1641513801016,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$4tu9pAIvnKqFJSlEYxv2TCiWN42OdqKUrIVN43OBmIM"},
{"content":{"body":"I don't think pipeline and normal methods looks appealing","msgtype":"m.text"},"ts":1641513822637,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$7oSo1onqtZke9skKfKKJ9fvLVv13X8MOh7fyJm5yii0"},
{"content":{"body":"Pipeline as a chain of free functions is fine","msgtype":"m.text"},"ts":1641513830492,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$EB7sL3Cq4gDFk0vMA02FBMxpXkZhxel_snJP9_wgr1k"},
{"content":{"body":"But mixing in a chained method on an object in the pipe and it starts to have warts","msgtype":"m.text"},"ts":1641513845942,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$ZcQo2xfpM5Yn14SkPQBoJfemC5xF6e06FVyg16cQnwk"},
{"content":{"body":"Mixing methods and bind-ops works perfectly","msgtype":"m.text"},"ts":1641513860806,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$CIg9a2qVfnBy_fSO2CJEMlkfLavQ8OXpW8mTcrFCUtI"},
{"content":{"body":"pipeline can’t handle call-this/uncurry without a special operator ","format":"org.matrix.custom.html","formatted_body":"pipeline can’t handle call-this/uncurry without a special operator","msgtype":"m.text"},"ts":1641531221666,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$O5Bb9g0ySjmmBJ8Kq2QAn1UBdpLTryKo9jT-KVsPxxA"},
{"content":{"body":"the operator could be call-this, or bind-this, or something else, but it can’t be done with pipeline alone ","format":"org.matrix.custom.html","formatted_body":"the operator could be call-this, or bind-this, or something else, but it can’t be done with pipeline alone","msgtype":"m.text"},"ts":1641531240935,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zRxSV0hSqH4FivB_ImkPD0M1jd0ZpZBUxWQbmDIPdEU"},
{"content":{"body":"i agree that bind-this is the one that fits into an OOP method chain without pipeline, which is useful.","msgtype":"m.text"},"ts":1641531305477,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LXFLSsoCY7YPpI8Zv-uBx1Hi_ILhpyPuyTTHzsGPqBw"},
{"content":{"body":"So the issue that's gonna continue to bite is that, from the feedback we've gotten, having bind-this able to do essentially the same thing as pipe is a Problem. It might turn out to be sufficiently okay to look past, but as it is this is the precise sort of overlap that has been called out as making committee members uncomfortable.","msgtype":"m.text"},"ts":1641586049792,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$GVZ9cjTT0133nUyYjGzgqCVeL2OUxloMkbioNsoxLfo"}
]