[
{"content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break? \n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\nRight now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true. \n\n(I do agree that we should do our best to avoid any variables, for what it’s worth.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1741069434082,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY"},
{"content":{"body":"* ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{},"m.new_content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741069448830,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$H0Y_1Zkj-KUgjCAyuqWHe-7Hn_cwAq1OGvh76qzVKXg"},
{"content":{"body":"* ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{},"m.new_content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741069458691,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$nHGxV-yJ1QwHXNmYUF3PRI86AW8YlrHbQajsbbZh9fA"},
{"content":{"body":"it's a TODO item in the terminology doc https://github.com/tc39/how-we-work/blob/main/terminology.md#todo-considerations","m.mentions":{},"msgtype":"m.text"},"ts":1741069898812,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$tvncXhEINkpTmyuwNmDun3_ZZcHFYFZ4wvleqiINYzY"},
{"content":{"body":"rkirsling: Nice, thanks for pointing me there. It's been a while.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a>: Nice, thanks for pointing me there. It's been a while.","m.mentions":{"user_ids":["@rkirsling:matrix.org"]},"msgtype":"m.text"},"ts":1741070019824,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$XWs5lQoCbakqKeK8ETcP54ItGXIyyRqxluf5EGL86Ig"},
{"content":{"body":"but yeah it's a deep cut that seems to lack a primary source(??) yet https://fanf.livejournal.com/118421.html gives a clear sentence of \"the meaning of an expression or statement should not change when an extra level of block structure is added around it\"","m.mentions":{},"msgtype":"m.text"},"ts":1741070053517,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$ipoNmm4LLpI--t8tQc7waT3TvhrKSMHSZ8ZJPlDK5Cs"},
{"content":{"body":"It's a pretty good goal. Even if it doesn't seem to actually have been named by Tennent—at least according to Crockford. We might want to give it a better name…","m.mentions":{},"msgtype":"m.text"},"ts":1741070164505,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Wco2MBmynOrgiNcsCFShVWzp33Nqg8Vko1OTa8jZmtY"},
{"content":{"body":"In general, the goal should be to reduce modality and contextuality of code as much as possible, which imposes cognitive burden. ","m.mentions":{},"msgtype":"m.text"},"ts":1741070199687,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$xuJW60eSqhFH5ND98IwRRiPhvDETys-K9Ma2aW_92sQ"},
{"content":{"body":"honestly agree","m.mentions":{},"msgtype":"m.text"},"ts":1741070201240,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Tl7WAXGXoljAjxf-7L3ax14HJc-8A3JGIhHC5d-Y4xs"},
{"content":{"body":"* It's a manifestation of the general goal to reduce modality and contextuality of code as much as possible, which imposes cognitive burden. ","m.mentions":{},"m.new_content":{"body":"It's a manifestation of the general goal to reduce modality and contextuality of code as much as possible, which imposes cognitive burden. ","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$xuJW60eSqhFH5ND98IwRRiPhvDETys-K9Ma2aW_92sQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741070216834,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$4MBDFRW1xAOvQBGp927Y4-T8j7xJyUl7TvvoPxcRgFw"},
{"content":{"body":"* It's a manifestation of the general goal to reduce modality and contextuality of code as much as possible, to reduce cognitive burden. ","m.mentions":{},"m.new_content":{"body":"It's a manifestation of the general goal to reduce modality and contextuality of code as much as possible, to reduce cognitive burden. ","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$xuJW60eSqhFH5ND98IwRRiPhvDETys-K9Ma2aW_92sQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741070220745,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$FabVB-DA8NaWh4Fn59YYGzSJKsNaYq3-htHhEO30218"},
{"content":{"body":"just give it our own name and relay credit for the idea where it's due","m.mentions":{},"msgtype":"m.text"},"ts":1741070222370,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$TIh9iyG9-dpL9IpUcvOuocffVMi3-ND9NoucLHFJU8Y"},
{"content":{"body":"('cause hell, even the acronym is terrible -- who wants to overload TCP :joy:)","m.mentions":{},"msgtype":"m.text"},"ts":1741070359906,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$o7_tpMqTcacKQ7jN2dsO0nf8LNhiBujxmtJ6Q6KCjGU"},
{"content":{"body":"* ('cause hell, even the acronym is terrible -- who wants to overload TCP 😂)","m.mentions":{},"m.new_content":{"body":"('cause hell, even the acronym is terrible -- who wants to overload TCP 😂)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$o7_tpMqTcacKQ7jN2dsO0nf8LNhiBujxmtJ6Q6KCjGU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741070369354,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$nHXF6DoNugbTdEwPtXXbEWawFWqICmThsinUrCHAWiE"},
{"content":{"body":"definitely - https://yehudakatz.com/2012/01/10/javascript-needs-blocks/ https://www.tomshouseofdollars.com/Tennent/","msgtype":"m.text"},"ts":1741073372854,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bwKrCj57hdv0CyQ2shlWLSawP_78hHvl1NfTMoCj_8s"},
{"content":{"body":"it’s been on tc39 bingo for a long time :-p","msgtype":"m.text"},"ts":1741073401528,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$o4UyEAtWrCxL5IsNBV-PYVIbWkaZNXLSMenhL0ThfHw"},
{"content":{"body":"yeah but not like, in a continuous way","m.mentions":{},"msgtype":"m.text"},"ts":1741073438295,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$eJWJLF2jPaDdfs6xmmlpljwkoDvkbp2Sx9_XbYXxDPs"},
{"content":{"body":"it's one of those \"you had to be there, otherwise for years you're just like _what's the deal with that_ anytime it comes up\" phrases","format":"org.matrix.custom.html","formatted_body":"it's one of those \"you had to be there, otherwise for years you're just like <em>what's the deal with that</em> anytime it comes up\" phrases","m.mentions":{},"msgtype":"m.text"},"ts":1741073477026,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$4n8ItLz5su6Y03S_7QQXom6dVp3MyA9JVxnvJx9POVI"},
{"content":{"body":"like it always looks like a misspelling of David Tennant's name and I'm like, what's Dr. Who got to do with it","m.mentions":{},"msgtype":"m.text"},"ts":1741073545700,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$Pr5Psshe7LeiSdkMyI4etpunwSqkiZPgCfYybX_Y_Xk"},
{"content":{"body":"It really does need a better name than a false eponym. Like “block-wrapped equivalence” or “in-block identity”. ","format":"org.matrix.custom.html","formatted_body":"It really does need a better name than a false eponym. Like “block-wrapped equivalence” or “in-block identity”.","msgtype":"m.text"},"ts":1741075397478,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$LWh0nx1rS1AvZsaoaVrneRMpiq8YSa_bj9JYSwi8ZDg"},
{"content":{"body":"or something like \"invariance under rescoping\"","m.mentions":{},"msgtype":"m.text"},"ts":1741076359903,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$hKtd3UelCOq68F7Qf7bGw9dEx1Clk5See5CzAFbDbls"},
{"content":{"body":"* or something like \"invariance under rescoping\" or \"scope context (in)sensitivity\"","m.mentions":{},"m.new_content":{"body":"or something like \"invariance under rescoping\" or \"scope context (in)sensitivity\"","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$hKtd3UelCOq68F7Qf7bGw9dEx1Clk5See5CzAFbDbls","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741076476352,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$LVnSzgCfHJZC_ihaoxzjZ3yLhN6OzYDzhl2WoBl-4OQ"},
{"content":{"body":"Single Semantic Scope","format":"org.matrix.custom.html","formatted_body":"Single Semantic Scope","msgtype":"m.text"},"ts":1741076860179,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$DpQmd2Sd43BFxdaXDOIFES07em5djT36YuJg3cBd6Ek"},
{"content":{"body":"“Stable Under Scope”. “That variable is SUS.”","msgtype":"m.text"},"ts":1741077098086,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qRUadlEX5a3barl560GzN9tSDi6d83sDE5cH_n4CD9Q"},
{"content":{"body":"(I kind of suspect that that new #310 issue was LLM generated; it has that feeling…)","msgtype":"m.text"},"ts":1741077226537,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$kYldtwRfTdx_SFJBiK8o6HVN762Ep6qgYYxsjIuifV0"},
{"content":{"body":"* “Stable Under Scope”. E.g., “That variable is SUS.”","m.new_content":{"body":"“Stable Under Scope”. E.g., “That variable is SUS.”","msgtype":"m.text"},"m.relates_to":{"event_id":"$qRUadlEX5a3barl560GzN9tSDi6d83sDE5cH_n4CD9Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741077278912,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$JvKDBGRbMx4O_COcPBYZpa34AeocaklyeJnbLayDcDI"},
{"content":{"body":"* “Stable Under Scopes”: “That variable is SUS.”\n“Stable Between Scopes”: “That variable is SBS.”","format":"org.matrix.custom.html","formatted_body":"* “Stable Under Scopes”: “That variable is SUS.”<br />\n“Stable Between Scopes”: “That variable is SBS.”","m.new_content":{"body":"“Stable Under Scopes”: “That variable is SUS.”\n“Stable Between Scopes”: “That variable is SBS.”","format":"org.matrix.custom.html","formatted_body":"“Stable Under Scopes”: “That variable is SUS.”<br />\n“Stable Between Scopes”: “That variable is SBS.”","msgtype":"m.text"},"m.relates_to":{"event_id":"$qRUadlEX5a3barl560GzN9tSDi6d83sDE5cH_n4CD9Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741077331555,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$HozylXp7S2Zwp8nA8Fq6yEPKX30dXyBDRi1taIgsQME"}
]