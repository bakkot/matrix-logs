[
{"content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break? \n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\nRight now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true. \n\n(I do agree that we should do our best to avoid any variables, for what it’s worth.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1741069434082,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY"},
{"content":{"body":"* ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{},"m.new_content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741069448830,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$H0Y_1Zkj-KUgjCAyuqWHe-7Hn_cwAq1OGvh76qzVKXg"},
{"content":{"body":"* ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{},"m.new_content":{"body":"ljharb: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?\n\nThe best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.\n\n(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: With regard to https://github.com/tc39/proposal-pipeline-operator/issues/310#issuecomment-2696324408, is there an actual “Tennent’s correspondence principle” of PL design that we’re trying not to break?</p>\n<p>The best answer I can find defining that phrase is https://softwareengineering.stackexchange.com/questions/116395/what-is-the-good-explanation-of-tennents-correspondence-principle, which seems to be some descriptive advice regarding correspondence between variable definitions and producer parameters.</p>\n<p>(I do still agree that we should do our best to avoid any variables, for what it’s worth. Right now, under https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token#disqualified-tokens, variable identifiers are disqualified because variable tokens “may unexpectedly shadow outer variables”. Which is true.)</p>\n","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$R24pqa7xkH9nBRB_4hj-DUu9Td0kefoDvG3oHOkwClY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1741069458691,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$nHGxV-yJ1QwHXNmYUF3PRI86AW8YlrHbQajsbbZh9fA"}
]