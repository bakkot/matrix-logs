[
{"content":{"body":"What does \"keep the `obj` receiver around\" mean in this case? ","format":"org.matrix.custom.html","formatted_body":"What does &quot;keep the <code>obj</code> receiver around&quot; mean in this case?","msgtype":"m.text"},"ts":1641950519423,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$UDe-zuxmCY-1SR_KQ2WuYtKRHCqqkU9OnFn8vlOqKu4"},
{"content":{"body":"Well looking at the diagram examples, it seems like receiver is the method owner or the context passed as `this` in `.bind(this)` or `.call(this)` if it is different from the owner. Why then does `arr.map(obj.meth~(?))` not keep it around?","format":"org.matrix.custom.html","formatted_body":"Well looking at the diagram examples, it seems like receiver is the method owner or the context passed as <code>this</code> in <code>.bind(this)</code> or <code>.call(this)</code> if it is different from the owner. Why then does <code>arr.map(obj.meth~(?))</code> not keep it around?","msgtype":"m.text"},"ts":1641950850601,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$GwfH6v2BB-Cb0_ISLOA6O2Ip58EZleUQmgOOHMDFeGo"},
{"content":{"body":"Tab is saying that `arr.map(obj.method~(?))` does keep `obj` around. He’s saying that `arr.map(obj.method)` does not. \n(Of course, `arr.map(el => obj.meth(el))` keeps `obj` around too.)","format":"org.matrix.custom.html","formatted_body":"Tab is saying that <code>arr.map(obj.method~(?))</code> does keep <code>obj</code> around. He’s saying that <code>arr.map(obj.method)</code> does not.<br />\n(Of course, <code>arr.map(el =&gt; obj.meth(el))</code> keeps <code>obj</code> around too.)","msgtype":"m.text"},"ts":1641952731642,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$z_87uSINRoTIedZhyTMvTyqK4NPa-wdB99bVhI9PCco"}
]