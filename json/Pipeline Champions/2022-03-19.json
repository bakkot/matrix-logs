[
{"content":{"body":"ljharb: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.\nAlthough I will direct the bikeshedding over bind/call-this’s syntax, I will try to push `rec :> f(arg0)` as my favored syntax, since rkirsling and Justin Ridgewell are also fine with it.\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.<br>Although I will direct the bikeshedding over bind/call-this’s syntax, I will try to push <code>rec :&gt; f(arg0)</code> as my favored syntax, since <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> and <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> are also fine with it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.\nAlthough I will direct the bikeshedding over bind/call-this’s syntax, I will try to push `rec :> f(arg0)` as my favored syntax, since rkirsling and Justin Ridgewell are also fine with it.\n","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.<br>Although I will direct the bikeshedding over bind/call-this’s syntax, I will try to push <code>rec :&gt; f(arg0)</code> as my favored syntax, since <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> and <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> are also fine with it.","mimetype":"text/html"}]},"ts":1647649092234,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$q1IZqxEJXDBl-q9hh5D_DZGFzHd6u5Ot5nYKYBZGlX8"},
{"content":{"body":"I will also try to be persuasive to MM and company that both pipe and bind-this deserve to be in the language (“big frequency\n× big clunkiness = worth improving with syntax”). ","msgtype":"m.text","org.matrix.msc1767.text":"I will also try to be persuasive to MM and company that both pipe and bind-this deserve to be in the language (“big frequency\n× big clunkiness = worth improving with syntax”). "},"ts":1647649098783,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$eFv-mdpYF__2Cy47sfPTtdWVW7WE0n6wQbw2ZM1lYuo"},
{"content":{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making `rec :> f` an error)…That would get rid the overlap with PFA syntax and pipe operator.","format":"org.matrix.custom.html","formatted_body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making <code>rec :&gt; f</code> an error)…That would get rid the overlap with PFA syntax and pipe operator.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making `rec :> f` an error)…That would get rid the overlap with PFA syntax and pipe operator.","mimetype":"text/plain"},{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making <code>rec :&gt; f</code> an error)…That would get rid the overlap with PFA syntax and pipe operator.","mimetype":"text/html"}]},"ts":1647649130756,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$6gN74fGmzT-Nt0djQ4i59HbnbtXY2QSfhIxTIoxHemA"},
{"content":{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"ts":1647649178205,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Krf5iwyYD4UoryUdDp-HgQ5HggWzymAjj0nJC3GLGB8"},
{"content":{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","m.new_content":{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Krf5iwyYD4UoryUdDp-HgQ5HggWzymAjj0nJC3GLGB8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"ts":1647649201715,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GE64gMD81LnEgW5xMShaYQSQsH_DFifZb7vT-WUC9aA"}
]