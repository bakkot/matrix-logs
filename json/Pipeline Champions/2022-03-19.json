[
{"content":{"body":"ljharb: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.\nAlthough I will direct the bikeshedding over bind/call-this’s syntax, I will try to push `rec :> f(arg0)` as my favored syntax, since rkirsling and Justin Ridgewell are also fine with it.\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.<br>Although I will direct the bikeshedding over bind/call-this’s syntax, I will try to push <code>rec :&gt; f(arg0)</code> as my favored syntax, since <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> and <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> are also fine with it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.\nAlthough I will direct the bikeshedding over bind/call-this’s syntax, I will try to push `rec :> f(arg0)` as my favored syntax, since rkirsling and Justin Ridgewell are also fine with it.\n","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Got it, thank you. I will not float Function.unThis as an alternative possibility to bind-this/call-this.<br>Although I will direct the bikeshedding over bind/call-this’s syntax, I will try to push <code>rec :&gt; f(arg0)</code> as my favored syntax, since <a href=\"https://matrix.to/#/@rkirsling:matrix.org\">rkirsling</a> and <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> are also fine with it.","mimetype":"text/html"}]},"ts":1647649092234,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$q1IZqxEJXDBl-q9hh5D_DZGFzHd6u5Ot5nYKYBZGlX8"},
{"content":{"body":"I will also try to be persuasive to MM and company that both pipe and bind-this deserve to be in the language (“big frequency\n× big clunkiness = worth improving with syntax”). ","msgtype":"m.text","org.matrix.msc1767.text":"I will also try to be persuasive to MM and company that both pipe and bind-this deserve to be in the language (“big frequency\n× big clunkiness = worth improving with syntax”). "},"ts":1647649098783,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$eFv-mdpYF__2Cy47sfPTtdWVW7WE0n6wQbw2ZM1lYuo"},
{"content":{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making `rec :> f` an error)…That would get rid the overlap with PFA syntax and pipe operator.","format":"org.matrix.custom.html","formatted_body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making <code>rec :&gt; f</code> an error)…That would get rid the overlap with PFA syntax and pipe operator.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making `rec :> f` an error)…That would get rid the overlap with PFA syntax and pipe operator.","mimetype":"text/plain"},{"body":"I wonder if it would be more persuasive if we dropped the binding semantics without arguments (making <code>rec :&gt; f</code> an error)…That would get rid the overlap with PFA syntax and pipe operator.","mimetype":"text/html"}]},"ts":1647649130756,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$6gN74fGmzT-Nt0djQ4i59HbnbtXY2QSfhIxTIoxHemA"},
{"content":{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"ts":1647649178205,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Krf5iwyYD4UoryUdDp-HgQ5HggWzymAjj0nJC3GLGB8"},
{"content":{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","m.new_content":{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Krf5iwyYD4UoryUdDp-HgQ5HggWzymAjj0nJC3GLGB8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"ts":1647649201715,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GE64gMD81LnEgW5xMShaYQSQsH_DFifZb7vT-WUC9aA"},
{"content":{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in <code>rec :&gt; rec.f</code> anyway.","m.new_content":{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in `rec :> rec.f` anyway.","format":"org.matrix.custom.html","formatted_body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in <code>rec :&gt; rec.f</code> anyway.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":"We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Krf5iwyYD4UoryUdDp-HgQ5HggWzymAjj0nJC3GLGB8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in `rec :> rec.f` anyway.","mimetype":"text/plain"},{"body":" * We could always add binding semantics later. And, as people have pointed out, most binding involves extraction from the same original owner object as the receiver, which requires clunky repetition in <code>rec :&gt; rec.f</code> anyway.","mimetype":"text/html"}]},"ts":1647649213962,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$iKGpyaom1DWsNQ3c6zHs0DJ5I-MZmzf1RmoaPEAgrvk"},
{"content":{"body":"i am perfectly content to not have the binding form, but also it seems practically zero-cost to have, so I’m not sure why we’d drop it","msgtype":"m.text"},"ts":1647649218509,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uhCfVw62fM-O56pehD4XHU4oYsYyfFsJh1-VNeVi14Y"},
{"content":{"body":"I personally want a call syntax, and don’t care at all about the binding ability","msgtype":"m.text"},"ts":1647649223511,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$rHhtT1Cf_q5N-EAyTqDMW9u7DtTM9ZZEfM7csI9dwQc"},
{"content":{"body":"** a receiver-first call syntax","msgtype":"m.text"},"ts":1647649270444,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$AjiPWl7_A2ULJy54xTzY5ONkbjJad70_OI39U5bmwPQ"},
{"content":{"body":"Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","format":"org.matrix.custom.html","formatted_body":"Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/plain"},{"body":"Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$uhCfVw62fM-O56pehD4XHU4oYsYyfFsJh1-VNeVi14Y"}}},"ts":1647649397853,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$IuODnbjjg8GgjoEvGZoVgA9NxD_0MoeyIaJHaLD3I5Y"},
{"content":{"body":"We did resolve in the post-plenary meeting, “In general, some overlap is okay, but too much is bad; we have to decide this on a case-by-case basis.”","msgtype":"m.text","org.matrix.msc1767.text":"We did resolve in the post-plenary meeting, “In general, some overlap is okay, but too much is bad; we have to decide this on a case-by-case basis.”"},"ts":1647649400562,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$mHbT8i_F9S3J4gN0gnXdMjHwSoCz5jnH4vK0ayK9SFc"},
{"content":{"body":"In this case, it seems to be “not really much loss, not really much gain, maybe punt to later”. I don’t have strong opinions on this issue myself, other than whatever it takes to garner the most support within Committee…","msgtype":"m.text","org.matrix.msc1767.text":"In this case, it seems to be “not really much loss, not really much gain, maybe punt to later”. I don’t have strong opinions on this issue myself, other than whatever it takes to garner the most support within Committee…"},"ts":1647649441766,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$sFig0JK10LbepQWmfQ-AZH2lWOHKL8RwX32hgWr9F-M"},
{"content":{"body":"> <@ljharb:matrix.org> i am perfectly content to not have the binding form, but also it seems practically zero-cost to have, so I’m not sure why we’d drop it\n\n * Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$uhCfVw62fM-O56pehD4XHU4oYsYyfFsJh1-VNeVi14Y?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i am perfectly content to not have the binding form, but also it seems practically zero-cost to have, so I’m not sure why we’d drop it</blockquote></mx-reply> * Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","m.new_content":{"body":"Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","format":"org.matrix.custom.html","formatted_body":"Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/plain"},{"body":"Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$IuODnbjjg8GgjoEvGZoVgA9NxD_0MoeyIaJHaLD3I5Y","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> i am perfectly content to not have the binding form, but also it seems practically zero-cost to have, so I’m not sure why we’d drop it\n\n * Because some other representatives (definitely TabAtkins, hence his call-this syntax idea…maybe yulia | sick during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$uhCfVw62fM-O56pehD4XHU4oYsYyfFsJh1-VNeVi14Y?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>i am perfectly content to not have the binding form, but also it seems practically zero-cost to have, so I’m not sure why we’d drop it</blockquote></mx-reply> * Because some other representatives (definitely <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, hence his call-this syntax idea…maybe <a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia | sick</a> during January plenary?) have expressed concerns about new proposals overlapping with each other – and the desire to minimize overlap between features where possible. So this may make it more palatable in that sense.","mimetype":"text/html"}]},"ts":1647649459726,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$d10Abtj9dd8ItvOzJTZKwDRF_mAGmaX3X9Vbses9QTA"}
]