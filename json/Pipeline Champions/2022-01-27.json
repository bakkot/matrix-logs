[
{"content":{"body":"you know what, i will write up my view on pipeline and also the intersection. i very much like jschoi  and TabAtkins blog posts, i think they went a long way in furthering this discussion in an archivable way. thanks for the inspiration you two.","format":"org.matrix.custom.html","formatted_body":"you know what, i will write up my view on pipeline and also the intersection. i very much like <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>  and <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> blog posts, i think they went a long way in furthering this discussion in an archivable way. thanks for the inspiration you two.","msgtype":"m.text"},"ts":1643287248110,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$LZ4Tj2OAxOJguAp9uXMCPWFMEn5q_R4IW4CmbzuEDwc"},
{"content":{"body":"i'd prefer to skip the overtime discussion today and read the results later","msgtype":"m.text"},"ts":1643299532095,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2P2mTsHWPAw4VkOK-tqVdBUaO4nma-g8qrwWy6D9ak4"},
{"content":{"body":"but am willing to come if folks anticipate implementation questions?","msgtype":"m.text"},"ts":1643299551948,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$oK1m_sStecWvjRFtfX4X0i0lteXiEX6W1DF2tyyrWSY"},
{"content":{"body":"> <@shuyuguo:matrix.org> but am willing to come if folks anticipate implementation questions?\n\nI donâ€™t anticipate any implementation questions; itâ€™s mostly high-level.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU%3Amatrix.org/%24oK1m_sStecWvjRFtfX4X0i0lteXiEX6W1DF2tyyrWSY\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>but am willing to come if folks anticipate implementation questions?</blockquote></mx-reply>I donâ€™t anticipate any implementation questions; itâ€™s mostly high-level.","m.relates_to":{"m.in_reply_to":{"event_id":"$oK1m_sStecWvjRFtfX4X0i0lteXiEX6W1DF2tyyrWSY"}},"msgtype":"m.text"},"ts":1643302836792,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$DR_9BAmHNO2jU2HfvzpkbARoQ2RrsUqNJUt7x8ym6pA"},
{"content":{"body":"Well, other than the question of PFA syntax and throwaway-callback constructionâ€¦","msgtype":"m.text"},"ts":1643303343064,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$O0JPSKIux8PIV8xcHbxLnOiSirwaoJswtvIB6kq8Fz8"},
{"content":{"body":"â€¦but I think youâ€™ve already expressed your concerns about that clearly enough before, Shu; weâ€™ll continue to keep them in mind in the disucssion.","msgtype":"m.text"},"ts":1643303378763,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$dDNkOdSx9_QLQiUJaSr0e_2LxeRi-ZJSMtJgEeRNUG0"},
{"content":{"body":"Reminder: dataflow meeting starting now","msgtype":"m.text"},"ts":1643306492336,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$SZOtOItpRI5_JzD5Elvvt-qUyTPrQmDQG7XF9kJKp7o"},
{"content":{"body":"Reminder: Let me in!","msgtype":"m.text"},"ts":1643306530256,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$tTcapF0vGkX4DFOagPn2wr0PPZmonf_h05_jkUFkRJM"},
{"content":{"body":"ðŸ˜‰","msgtype":"m.text"},"ts":1643306533609,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$NuZDOYP6DLFsziYYVbdPMoqekMXhwHokocmsqhObvJA"},
{"content":{"body":"it's at the meet not the jitsi yes?","msgtype":"m.text"},"ts":1643306545351,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$jALRVSvOAHctccQiiE5RHbtkysGVlu1kK9bGKbvJojU"},
{"content":{"body":"the Meet, yes","msgtype":"m.text"},"ts":1643306835155,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$M8k17nCjwwqMfO_SfKVJAmVubJZIoVGeghUYTG13sDs"},
{"content":{"body":"Wait, weâ€™re in the Jitsi!","msgtype":"m.text"},"ts":1643306880410,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$sEE5cD7UB5jKHRXkhG_l7aC4S7LI3BHhMB2igtBLFq4"},
{"content":{"body":"HE Shi-Jun: fwiw i don't see any mention in the extensions proposal repo of other languages","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@haxjs:matrix.org\">HE Shi-Jun</a>: fwiw i don't see any mention in the extensions proposal repo of other languages","msgtype":"m.text"},"ts":1643307220979,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$xm8TITLxmij6zPK97bEBIRlMlXnqiSobuOWDasyh4ho"},
{"content":{"body":"TabAtkins: What would you think about an alternative to call-this that didn't use `::` to indicate a different argument order? I'm thinking about something like `fn(this: x, y)`.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: What would you think about an alternative to call-this that didn't use <code>::</code> to indicate a different argument order? I'm thinking about something like <code>fn(this: x, y)</code>.","msgtype":"m.text"},"ts":1643310078604,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$M8FBY1oeWjNhP4kR5KnqU4kNV0XExW8WULpTpc4Xfn8"},
{"content":{"body":"oh *huh*","format":"org.matrix.custom.html","formatted_body":"oh <em>huh</em>","msgtype":"m.text"},"ts":1643310097031,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$YdMxL1h6DFQd-msK1qL1EyVIm1HZM0mn3Fvkm-oPJKY"},
{"content":{"body":"I guess i'm not too against","msgtype":"m.text"},"ts":1643310107237,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$RD7VYImlNy7Kl3KgeKOK0y5lZl_fKfEGPMGIMh6XsIU"},
{"content":{"body":"do we have data on \"everyone is doing OO\"?","msgtype":"m.text"},"ts":1643310163925,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$5bMSu0s414QDIlXuW_whqiU9uSiaaKaMqHZIvcGM0M0"},
{"content":{"body":"Would be more cohesive with _real_ named argument support, as opposed to object binding patterns.","format":"org.matrix.custom.html","formatted_body":"Would be more cohesive with <em>real</em> named argument support, as opposed to object binding patterns.","msgtype":"m.text"},"ts":1643310169569,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$DvoQXSUt7v7W1-4KApKc0SVX1Z1KQd_zFntKyXbNtWA"},
{"content":{"body":"It also would leave `::` for something else rather than locking it up for a very small capability.","format":"org.matrix.custom.html","formatted_body":"It also would leave <code>::</code> for something else rather than locking it up for a very small capability.","msgtype":"m.text"},"ts":1643311721509,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$dLWNDTrbzYCWuXTr2_XwLrSiG92zfgi9F-VKNmvycZA"},
{"content":{"body":"okay yeah i'm getting more in favor of the `this-tagging` syntax","format":"org.matrix.custom.html","formatted_body":"okay yeah i'm getting more in favor of the <code>this-tagging</code> syntax","msgtype":"m.text"},"ts":1643311813618,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$vahI0uNnrEe6_l9A1i1yHIyWo1yRC4UYCXabijlI0BA"},
{"content":{"body":"i forget, i know there was some syntax issues with using `:` in arg lists for named args, right?","format":"org.matrix.custom.html","formatted_body":"i forget, i know there was some syntax issues with using <code>:</code> in arg lists for named args, right?","msgtype":"m.text"},"ts":1643311842144,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2zV1ktvCTX8K7ErVGVoTUu0KgTmS_g11VDqEVcWx-CY"},
{"content":{"body":"Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals/object patterns\n- conditionals\n\nI'm not aware of any other conflicts offhand.","format":"org.matrix.custom.html","formatted_body":"<p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals/object patterns</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand.</p>\n","msgtype":"m.text"},"ts":1643311932527,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$STmzof-wpDQSw5h0K2DhbrIFHgAOJMflbzDGMsrmmLg"},
{"content":{"body":" * Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals\n- conditionals\n\nI'm not aware of any other conflicts offhand?","format":"org.matrix.custom.html","formatted_body":" * <p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand?</p>\n","m.new_content":{"body":"Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals\n- conditionals\n\nI'm not aware of any other conflicts offhand?","format":"org.matrix.custom.html","formatted_body":"<p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$STmzof-wpDQSw5h0K2DhbrIFHgAOJMflbzDGMsrmmLg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643311937494,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$hhtKywwCtxQOvZBgBkkdkGsMrHXFv838ZN9H3VJ6mx0"},
{"content":{"body":" * Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals/object patterns\n- conditionals\n\nI'm not aware of any other conflicts offhand?","format":"org.matrix.custom.html","formatted_body":" * <p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals/object patterns</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand?</p>\n","m.new_content":{"body":"Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals/object patterns\n- conditionals\n\nI'm not aware of any other conflicts offhand?","format":"org.matrix.custom.html","formatted_body":"<p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals/object patterns</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$STmzof-wpDQSw5h0K2DhbrIFHgAOJMflbzDGMsrmmLg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643311960894,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5o3NfIZZnI6i2zmdeuj3PC9ZqvhAeLXgltjTIUgA7lk"},
{"content":{"body":" * Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals/object patterns\n- conditionals\n\nI'm not aware of any other conflicts offhand.","format":"org.matrix.custom.html","formatted_body":" * <p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals/object patterns</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand.</p>\n","m.new_content":{"body":"Is there? `:` is only used in JS for:\n- labeled statements\n- case/default clauses\n- property assignments in object literals/object patterns\n- conditionals\n\nI'm not aware of any other conflicts offhand.","format":"org.matrix.custom.html","formatted_body":"<p>Is there? <code>:</code> is only used in JS for:</p>\n<ul>\n<li>labeled statements</li>\n<li>case/default clauses</li>\n<li>property assignments in object literals/object patterns</li>\n<li>conditionals</li>\n</ul>\n<p>I'm not aware of any other conflicts offhand.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$STmzof-wpDQSw5h0K2DhbrIFHgAOJMflbzDGMsrmmLg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643311968183,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rVeVrTHYbW1KAKC6QU9SYdjfUUenUnkmj82C1BbF_v4"},
{"content":{"body":"I just know that `foo(argname: val)` has been discussed for JS in the past and been rejected; maybe just because options-args swallow enough of the use-case to not make it worthwhile","format":"org.matrix.custom.html","formatted_body":"I just know that <code>foo(argname: val)</code> has been discussed for JS in the past and been rejected; maybe just because options-args swallow enough of the use-case to not make it worthwhile","msgtype":"m.text"},"ts":1643311971579,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$CKM2rToRpIoTnYbXXTkSDAgZlXHIStNk0yvc50s-tWw"},
{"content":{"body":"`keyword:` might be fine though?","format":"org.matrix.custom.html","formatted_body":"<code>keyword:</code> might be fine though?","msgtype":"m.text"},"ts":1643312023492,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$ceEI9hZniupLN5nQElZ4lrb2jiVC51l7kCiQ-2btSPQ"},
{"content":{"body":"might be, like i said, i'm just vaguely remembering something and might be off on the details","msgtype":"m.text"},"ts":1643312090017,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$whz1WCaJ-Ad2GUqvrGZ2RxpDgk_EHKvNfTqePAvVACw"},
{"content":{"body":"Thatâ€™s a good idea, Ron.","msgtype":"m.text"},"ts":1643312427905,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$tnPc9xzseO6HklyhwcKCWNtMs0BNmtQB-hXsWgoeXNc"},
{"content":{"body":"I will make the bikeshedding thread focused on the three choices:","msgtype":"m.text"},"ts":1643312454970,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$vpKcPI5CqxzxVUJ05ir_TBYrsi9sl3NLHGahXynOPTo"},
{"content":{"body":"thisArg::Æ’(arg0)","msgtype":"m.text"},"ts":1643312472089,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$PFiMFPB-qbr2WpIZYWiRTKrlYePrxxas3u93YEovF2c"},
{"content":{"body":"Æ’@.(thisArg, arg0)","msgtype":"m.text"},"ts":1643312484594,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ruj4LcWbhxbE6GyGgrq71UL9LmEEJJUyvntW1nfJNeo"},
{"content":{"body":"Æ’(thisArg: arg0)","msgtype":"m.text"},"ts":1643312491097,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$DxYi8R-5Yi--KV7Pv2giZsp7ri9sybeWMmFAMjaNynA"},
{"content":{"body":"jschoi: Not `thisArg`, as that would be a regular identifier. Specifically the keyword `this:`. So:\nÆ’(this: thisArg, arg0)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: Not <code>thisArg</code>, as that would be a regular identifier. Specifically the keyword <code>this:</code>. So:<br>Æ’(this: thisArg, arg0)","msgtype":"m.text"},"ts":1643313733816,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$rMxsUyUVHI6BELMPkWk1qYsK5YmxOONpbvZxoDEgn7k"},
{"content":{"body":"It would work for PFA too and avoids the bind-this overlap, i.e.: Æ’~(this: thisArg, ?)\n\n```js\n// NOTE: transposition is an approximation (does not capture eager evaluation of PFA)\nf~(?)               // _ => f(_)\n\no.f~(?)             // note: binds `o` as `this`\n                    // _ => o.f(_)\n\nf~(this: ?)         // _ => f(this: _)\n                    // _ => f.call(_)\n\nf~(this: x, ?)      // note: binds `x` as `this`\n                    // _ => f(this: x, _)\n                    // _ => f.call(x, _)\n\no.f~(this: ?)       // _ => o.f(this: _)\n                    // _ => o.f.call(_)\n\no.f~(this: x, ?)    // note: binds `x` as `this`\n                    // _ => o.f(this: x, _)\n                    // _ => o.f.call(x, _)\n\no.f~(this: ?, ...)  // note: uncurry `this`\n                    // (_, ...args) => o.f.call(_, ...args)\n```","format":"org.matrix.custom.html","formatted_body":"<p>It would work for PFA too and avoids the bind-this overlap, i.e.: Æ’~(this: thisArg, ?)</p>\n<pre><code class=\"language-js\">// NOTE: transposition is an approximation (does not capture eager evaluation of PFA)\nf~(?)               // _ =&gt; f(_)\n\no.f~(?)             // note: binds `o` as `this`\n                    // _ =&gt; o.f(_)\n\nf~(this: ?)         // _ =&gt; f(this: _)\n                    // _ =&gt; f.call(_)\n\nf~(this: x, ?)      // note: binds `x` as `this`\n                    // _ =&gt; f(this: x, _)\n                    // _ =&gt; f.call(x, _)\n\no.f~(this: ?)       // _ =&gt; o.f(this: _)\n                    // _ =&gt; o.f.call(_)\n\no.f~(this: x, ?)    // note: binds `x` as `this`\n                    // _ =&gt; o.f(this: x, _)\n                    // _ =&gt; o.f.call(x, _)\n\no.f~(this: ?, ...)  // note: uncurry `this`\n                    // (_, ...args) =&gt; o.f.call(_, ...args)\n</code></pre>\n","msgtype":"m.text"},"ts":1643314291777,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$5biwAwpHk_AKbLWSQoeyd73dHd8qCaJyd0t95wLHdn0"},
{"content":{"body":"> <@rbuckton:matrix.org> jschoi: Not `thisArg`, as that would be a regular identifier. Specifically the keyword `this:`. So:\n> Æ’(this: thisArg, arg0)\n\nWhy canâ€™t the colon distinguish?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$rMxsUyUVHI6BELMPkWk1qYsK5YmxOONpbvZxoDEgn7k?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: Not <code>thisArg</code>, as that would be a regular identifier. Specifically the keyword <code>this:</code>. So:<br />Æ’(this: thisArg, arg0)</blockquote></mx-reply>Why canâ€™t the colon distinguish?","m.relates_to":{"m.in_reply_to":{"event_id":"$rMxsUyUVHI6BELMPkWk1qYsK5YmxOONpbvZxoDEgn7k"}},"msgtype":"m.text"},"ts":1643314800736,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$H4YB44E2v7cz-rE0iVDEcimcwt334KxocqajR5XT9BA"},
{"content":{"body":" * Why canâ€™t the colon alone distinguish?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$rMxsUyUVHI6BELMPkWk1qYsK5YmxOONpbvZxoDEgn7k?via=matrix.org&amp;via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br><a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: Not <code>thisArg</code>, as that would be a regular identifier. Specifically the keyword <code>this:</code>. So:<br>Æ’(this: thisArg, arg0)</blockquote></mx-reply> * Why canâ€™t the colon alone distinguish?","m.new_content":{"body":"Why canâ€™t the colon alone distinguish?","format":"org.matrix.custom.html","formatted_body":"Why canâ€™t the colon alone distinguish?","msgtype":"m.text"},"m.relates_to":{"event_id":"$H4YB44E2v7cz-rE0iVDEcimcwt334KxocqajR5XT9BA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643314804591,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$SEQYL7Z-t2JmAW7gqgrUuUKr2APbaZKmVXn8a2vMR4s"},
{"content":{"body":"Is it because it would preclude general named-argument syntax?","msgtype":"m.text"},"ts":1643314819971,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$VcWxYpz__A16D4NI0oP4ANgoneoDGBQNvfU6G5GxZ2A"},
{"content":{"body":" * Is it because it would preclude general named-argument syntax?","m.new_content":{"body":"Is it because it would preclude general named-argument syntax?","msgtype":"m.text"},"m.relates_to":{"event_id":"$VcWxYpz__A16D4NI0oP4ANgoneoDGBQNvfU6G5GxZ2A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643314824388,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$t0LSo4onCQA3sbJVzMOjsHX-qi-puy57SozIBGoXHCY"},
{"content":{"body":" * Why canâ€™t the colon alone distinguish? `f(receiver:)`.","format":"org.matrix.custom.html","formatted_body":" * Why canâ€™t the colon alone distinguish? <code>f(receiver:)</code>.","m.new_content":{"body":"Why canâ€™t the colon alone distinguish? `f(receiver:)`.","format":"org.matrix.custom.html","formatted_body":"Why canâ€™t the colon alone distinguish? <code>f(receiver:)</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$H4YB44E2v7cz-rE0iVDEcimcwt334KxocqajR5XT9BA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643314843871,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$SbAdXqJZ-DhTutyHhaQwn4-QeGSrrCkwyeJCPX0bLKs"},
{"content":{"body":"yeah I don't mind this new idea either. I'm sorry that my thoughts in the call were disorganized","msgtype":"m.text"},"ts":1643315105272,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$L6e9WeR9SVABKkWEvs3AJywFapdEH7A680rxzFkaF6k"},
{"content":{"body":"I think I prefer options that keep the receiver inside the parens.","msgtype":"m.text"},"ts":1643315127850,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$4T8RJRr5vEixZUlMdUa2kyxQAaFdZVILLZkcVPx5gws"}
]