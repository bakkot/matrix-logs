[
{"content":{"body":"Every time someone says \"non-function use-cases are contrived\" I look back at all the times I've gone \"fuck, I wish I had pipeline right now, this is kinda annoying to write\" and how they're a pretty substantial mix of functions and operators and just go.... really?","msgtype":"m.text","org.matrix.msc1767.text":"Every time someone says \"non-function use-cases are contrived\" I look back at all the times I've gone \"fuck, I wish I had pipeline right now, this is kinda annoying to write\" and how they're a pretty substantial mix of functions and operators and just go.... really?"},"ts":1657334305282,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$MaCkErx0P2BRQVpiqrzRwzLvDAX3IYN46fsuBtUQ2gw"},
{"content":{"body":"I fundamentally do not understand how this assertion can be made when I know for a fact how many times I, personally, want non-functions.","msgtype":"m.text","org.matrix.msc1767.text":"I fundamentally do not understand how this assertion can be made when I know for a fact how many times I, personally, want non-functions."},"ts":1657334354940,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$qceBOfqZshSkLaHvKsUwGgqw5OzJwXBfL4Kde5Ur7rU"},
{"content":{"body":"> <@ljharb:matrix.org> personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler\n\nYes, this is my experience precisely. I often want to pipe into functions (sometimes unary, sometimes not; PFA would address the latter cases), but I also often want to linearize other things (mostly math stuff, calling methods on something complex, and of course `await` every. single. fucking. time). ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$BX_tZJkjlDzmUHA0uxpZFAK_mKOp10z6PHedm9b8ASs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler</blockquote></mx-reply>Yes, this is my experience precisely. I often want to pipe into functions (sometimes unary, sometimes not; PFA would address the latter cases), but I also often want to linearize other things (mostly math stuff, calling methods on something complex, and of course <code>await</code> every. single. fucking. time).","m.relates_to":{"m.in_reply_to":{"event_id":"$BX_tZJkjlDzmUHA0uxpZFAK_mKOp10z6PHedm9b8ASs"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler\n\nYes, this is my experience precisely. I often want to pipe into functions (sometimes unary, sometimes not; PFA would address the latter cases), but I also often want to linearize other things (mostly math stuff, calling methods on something complex, and of course `await` every. single. fucking. time). ","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$BX_tZJkjlDzmUHA0uxpZFAK_mKOp10z6PHedm9b8ASs?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler</blockquote></mx-reply>Yes, this is my experience precisely. I often want to pipe into functions (sometimes unary, sometimes not; PFA would address the latter cases), but I also often want to linearize other things (mostly math stuff, calling methods on something complex, and of course <code>await</code> every. single. fucking. time).","mimetype":"text/html"}]},"ts":1657334562391,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$UUvpuKWwFjLTKEIwsVwdKgld_DPcVJ3MZ95lbzoh_a4"},
{"content":{"body":"I frequently want to construct e.g. a Map or Set, which currently requires `new` (as in `… |> (entries => new Map(entries))` if tacit/point-free or `… |> (new Map(^))` if not)","format":"org.matrix.custom.html","formatted_body":"I frequently want to construct e.g. a Map or Set, which currently requires <code>new</code> (as in <code>… |&gt; (entries =&gt; new Map(entries))</code> if tacit/point-free or <code>… |&gt; (new Map(^))</code> if not)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I frequently want to construct e.g. a Map or Set, which currently requires `new` (as in `… |> (entries => new Map(entries))` if tacit/point-free or `… |> (new Map(^))` if not)","mimetype":"text/plain"},{"body":"I frequently want to construct e.g. a Map or Set, which currently requires <code>new</code> (as in <code>… |&gt; (entries =&gt; new Map(entries))</code> if tacit/point-free or <code>… |&gt; (new Map(^))</code> if not)","mimetype":"text/html"}]},"ts":1657386285583,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$AbpQpGY-VJYYq2di4f5_YXxOnWdQ7spfgGlbeYk-smw"},
{"content":{"body":"Did we ever consider `*` as a topic token? `f() |> g({ x: * })`. I don’t remember why `*` was disqualified, if it was at all.\n\n(Otherwise, the top runner is `^^`, given `@`’s recent problems found by WH.)","format":"org.matrix.custom.html","formatted_body":"<p>Did we ever consider <code>*</code> as a topic token? <code>f() |&gt; g({ x: * })</code>. I don’t remember why <code>*</code> was disqualified, if it was at all.</p>\n<p>(Otherwise, the top runner is <code>^^</code>, given <code>@</code>’s recent problems found by WH.)</p>","msgtype":"m.text"},"ts":1657387447653,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$VwKSUQcdg8YghvwTI5gu9bw1y9rO2rfzjNOPQySbsvg"},
{"content":{"body":"Is it because of yield *? (This is such a rare case that we could require it to be `yield (*)`.)","format":"org.matrix.custom.html","formatted_body":"Is it because of yield *? (This is such a rare case that we could require it to be <code>yield (*)</code>.)","msgtype":"m.text"},"ts":1657387470254,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$pQapHWbfpPbSqS1Fsv1Yd5jmxmpP0HSVw8pwCp6aYFc"},
{"content":{"body":"* Is it because of yield *? (This is such a rare case that we could require it to be `yield (*)`.)","format":"org.matrix.custom.html","formatted_body":"* Is it because of yield *? (This is such a rare case that we could require it to be <code>yield (*)</code>.)","m.new_content":{"body":"Is it because of yield *? (This is such a rare case that we could require it to be `yield (*)`.)","format":"org.matrix.custom.html","formatted_body":"Is it because of yield *? (This is such a rare case that we could require it to be <code>yield (*)</code>.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$pQapHWbfpPbSqS1Fsv1Yd5jmxmpP0HSVw8pwCp6aYFc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657387498058,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Lma2YgMOwhssVUmxEP4GaMfueS_wjC9siCBr0fafEu0"},
{"content":{"body":"* Is it because of `yield *`? (This is such a rare case that we could require it to be `yield (*)`.)","format":"org.matrix.custom.html","formatted_body":"* Is it because of <code>yield *</code>? (This is such a rare case that we could require it to be <code>yield (*)</code>.)","m.new_content":{"body":"Is it because of `yield *`? (This is such a rare case that we could require it to be `yield (*)`.)","format":"org.matrix.custom.html","formatted_body":"Is it because of <code>yield *</code>? (This is such a rare case that we could require it to be <code>yield (*)</code>.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$pQapHWbfpPbSqS1Fsv1Yd5jmxmpP0HSVw8pwCp6aYFc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657387507397,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$LvCq5wASuPR2AluyHawGfE_EXisAWCuM9IXJcXQiM-o"}
]