[
{"content":{"body":"> <@rbuckton:matrix.org> If I were to change the PFA placeholder to a different token, how much traction would `?` have as the topic? I've been considering swapping the placeholder to `~` to match the proposed `f~()` syntax.\n\nWe have considered `?` in the past, and perhaps we should consider it again. Although a reason why we discarded it was because of visual confusion with binary `??`, optional chaining `?.`, and ternary `? :`—these three forms probably would not occur very often inside pipe bodies. For example, `x |> f(?, 0)`. And perhaps we could be okay with requiring parentheses where tokenization would be ambiguous (e.g., `x |> (?).?x`).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU%3Amatrix.org/%24z0s3pqznfWsF0_PlRgDuBAk87MKpxJRktJzIMUmbF6Y\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>If I were to change the PFA placeholder to a different token, how much traction would `?` have as the topic? I've been considering swapping the placeholder to `~` to match the proposed `f~()` syntax.</blockquote></mx-reply>We have considered <code>?</code> in the past, and perhaps we should consider it again. Although a reason why we discarded it was because of visual confusion with binary <code>??</code>, optional chaining <code>?.</code>, and ternary <code>? :</code>—these three forms probably would not occur very often inside pipe bodies. For example, <code>x |&gt; f(?, 0)</code>. And perhaps we could be okay with requiring parentheses where tokenization would be ambiguous (e.g., <code>x |&gt; (?).?x</code>).","m.relates_to":{"m.in_reply_to":{"event_id":"$z0s3pqznfWsF0_PlRgDuBAk87MKpxJRktJzIMUmbF6Y"}},"msgtype":"m.text"},"ts":1644710489363,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$PfO654NPb-rPvK8ucnWQQXEacJC-WeJjBleluqqFrPI"},
{"content":{"body":"With regards to using pipes for unnesting anything other than function calls, I would say that there is a gray zone between “function calls only” and “function calls with other syntax forms”. For example, it is quite common to use an array to supply a single value to a function that expects an iterable, e.g., `f([g(x)])`.","format":"org.matrix.custom.html","formatted_body":"With regards to using pipes for unnesting anything other than function calls, I would say that there is a gray zone between “function calls only” and “function calls with other syntax forms”. For example, it is quite common to use an array to supply a single value to a function that expects an iterable, e.g., <code>f([g(x)])</code>.","msgtype":"m.text"},"ts":1644710631300,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$CzUZpbONl5YUrrHXoik9YSJwskpX-YT_7XxoTsZojHg"},
{"content":{"body":"If you wouldn’t object to it, Ron (and others), I would like to add `?` back to the list for consideration. I’ve come around to it again, especially after `#`’s recently dimming prospects. ","format":"org.matrix.custom.html","formatted_body":"If you wouldn’t object to it, Ron (and others), I would like to add <code>?</code> back to the list for consideration. I’ve come around to it again, especially after <code>#</code>’s recently dimming prospects.","msgtype":"m.text"},"ts":1644710747111,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gMoeZ571zxre3N71SPk55SXDA0nEB0Dwu_VbToBQXCA"},
{"content":{"body":"(See also https://github.com/tc39/proposal-hack-pipes/issues/2.)","msgtype":"m.text"},"ts":1644710990082,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$VpZgYTjzkESGBfMIKFxG6OIxS1SIaLL-BIO1POgY6bM"}
]