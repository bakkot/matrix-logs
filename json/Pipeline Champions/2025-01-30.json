[
{"content":{"body":"hi everyone! new here, sorry if my question has been discussed. I did try and failed to find where it's been covered.\nBasically, if you remember the \"real world chalk example\":\n```js\n  // async is omitted for brevity, see below\n  const pipeline = (initial, ...lambdas) =>\n      lambdas.reduce((acc, fn) => fn(acc), initial)\n  \n  pipeline(\n    Object.keys(envars)\n      .map(envar => `${envar}=${envars[envar]}`)\n      .join(' '),\n    $ => `$ ${$}`,\n    $ => chalk.dim($, 'node', args.join(' ')),\n    $ => console.log($),  \n  )\n```\n\nThis works in today's chrome.\n\n`$ => console.log($ * $)` if you liked jQuery, `_ => console.log(_ * _)` if it gives you goosebumps.","format":"org.matrix.custom.html","formatted_body":"<p>hi everyone! new here, sorry if my question has been discussed. I did try and failed to find where it's been covered.<br>Basically, if you remember the \"real world chalk example\":</p>\n<pre><code class=\"language-js\">  // async is omitted for brevity, see below\n  const pipeline = (initial, ...lambdas) =&gt;\n      lambdas.reduce((acc, fn) =&gt; fn(acc), initial)\n  \n  pipeline(\n    Object.keys(envars)\n      .map(envar =&gt; `${envar}=${envars[envar]}`)\n      .join(' '),\n    $ =&gt; `$ ${$}`,\n    $ =&gt; chalk.dim($, 'node', args.join(' ')),\n    $ =&gt; console.log($),  \n  )\n</code></pre>\n<p>This works in today's chrome.</p>\n<p><code>$ =&gt; console.log($ * $)</code> if you liked jQuery, <code>_ =&gt; console.log(_ * _)</code> if it gives you goosebumps.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1738246570386,"senderName":"paulftw","senderId":"@paulftw:matrix.org","id":"$UDXztkV-4aRJIfZGr1TrXoRgfjN6eheGsZ-eEmBov2Y"},
{"content":{"body":"The proposal includes comparison with different existing solutions (method chaining, deep nesting, temp vars), but not this one. I think it should mention it to help committee (and random bystanders like me) understand the rationale","m.mentions":{},"msgtype":"m.text"},"ts":1738246706859,"senderName":"paulftw","senderId":"@paulftw:matrix.org","id":"$LHaNNHXfQTlwhvbSULOuc16D_pVOkeV_GhHsyGcOYd0"},
{"content":{"body":"what do you think?","m.mentions":{},"msgtype":"m.text"},"ts":1738246770560,"senderName":"paulftw","senderId":"@paulftw:matrix.org","id":"$JqAw8jyNVBDPY4cvLd0eXalwxmhnZkMyp7_3U4tabXI"},
{"content":{"body":"https://github.com/lodash/lodash/issues/5962","m.mentions":{},"msgtype":"m.text"},"ts":1738246824038,"senderName":"paulftw","senderId":"@paulftw:matrix.org","id":"$qw1agaY2_TbsfxkCwwMm97FBsd0VWZka1JNIsk8pvNM"}
]