[
{"content":{"body":"ljharb: Regarding https://github.com/tc39/proposal-pipeline-operator/issues/262#issuecomment-1036323490, `source |> a + (# |> b + #)` is valid. It is the same as `source |> a + (b + #)` and `a + (b + source)`.\n\nHowever, `source |> (a + # |> b) + #` is invalid, because `|> b` does not contain any topic reference.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Regarding https://github.com/tc39/proposal-pipeline-operator/issues/262#issuecomment-1036323490, <code>source |&gt; a + (# |&gt; b + #)</code> is valid. It is the same as <code>source |&gt; a + (b + #)</code> and <code>a + (b + source)</code>.</p>\n<p>However, <code>source |&gt; (a + # |&gt; b) + #</code> is invalid, because <code>|&gt; b</code> does not contain any topic reference.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ljharb: Regarding https://github.com/tc39/proposal-pipeline-operator/issues/262#issuecomment-1036323490, `source |> a + (# |> b + #)` is valid. It is the same as `source |> a + (b + #)` and `a + (b + source)`.\n\nHowever, `source |> (a + # |> b) + #` is invalid, because `|> b` does not contain any topic reference.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: Regarding https://github.com/tc39/proposal-pipeline-operator/issues/262#issuecomment-1036323490, <code>source |&gt; a + (# |&gt; b + #)</code> is valid. It is the same as <code>source |&gt; a + (b + #)</code> and <code>a + (b + source)</code>.</p>\n<p>However, <code>source |&gt; (a + # |&gt; b) + #</code> is invalid, because <code>|&gt; b</code> does not contain any topic reference.</p>\n","mimetype":"text/html"}]},"ts":1644594878870,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$xXTK3LS8d-p71K3Rxz9EW_oIViR_ARbPgENLHezV8fc"},
{"content":{"body":"Also, `source |> a => # + a |> output(#)` is invalid because arrow functions (and all other non-pipe AssignmentExpressions) must be parenthesized in pipe bodies to prevent confusing grouping.","format":"org.matrix.custom.html","formatted_body":"Also, <code>source |&gt; a =&gt; # + a |&gt; output(#)</code> is invalid because arrow functions (and all other non-pipe AssignmentExpressions) must be parenthesized in pipe bodies to prevent confusing grouping.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Also, `source |> a => # + a |> output(#)` is invalid because arrow functions (and all other non-pipe AssignmentExpressions) must be parenthesized in pipe bodies to prevent confusing grouping.","mimetype":"text/plain"},{"body":"Also, <code>source |&gt; a =&gt; # + a |&gt; output(#)</code> is invalid because arrow functions (and all other non-pipe AssignmentExpressions) must be parenthesized in pipe bodies to prevent confusing grouping.","mimetype":"text/html"}]},"ts":1644594918880,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$dK9X8KsSzzmCvKnXEDB41MnsgvJBM6Fc1mZSKJXw4IU"},
{"content":{"body":"Thanks, the rules are straightforward but that doesnâ€™t mean contrived examples are intuitive :-)","msgtype":"m.text"},"ts":1644595346654,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Mr97lcj6l4cKuRLYM-HrN5NZtPLZfP7ME7-Lfai-8L0"}
]