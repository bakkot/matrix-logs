[
{"content":{"body":"Yeah, TabAtkins, thanks for continuing to engage with him and others‚ÄîI‚Äôve been really busy myself, so I haven‚Äôt been able to work much on outreach or updates myself. üòî","format":"org.matrix.custom.html","formatted_body":"Yeah, <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, thanks for continuing to engage with him and others‚ÄîI‚Äôve been really busy myself, so I haven‚Äôt been able to work much on outreach or updates myself. üòî","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yeah, TabAtkins, thanks for continuing to engage with him and others‚ÄîI‚Äôve been really busy myself, so I haven‚Äôt been able to work much on outreach or updates myself. üòî","mimetype":"text/plain"},{"body":"Yeah, <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>, thanks for continuing to engage with him and others‚ÄîI‚Äôve been really busy myself, so I haven‚Äôt been able to work much on outreach or updates myself. üòî","mimetype":"text/html"}]},"ts":1657215159232,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$3hafuZw7lWZrefCUn0OpWGJwkk7p6OuL9QI4EVNV6NE"},
{"content":{"body":"And now I'm back to just closing issue threads because the participants refuse to stay on topic and instead keep relitigating the core question. :/","msgtype":"m.text","org.matrix.msc1767.text":"And now I'm back to just closing issue threads because the participants refuse to stay on topic and instead keep relitigating the core question. :/"},"ts":1657225511750,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$PmsDSHHkoGrVq8mdacygluuqnm1rWd2YNK6JwPHWgtM"},
{"content":{"body":"Should have done that one weeks ago, but I know Kevin personally and wanted to keep things friendly, but good *lord* I do not have time nor interest to engage in dueling essays where every point was brought up and addressed last year.","format":"org.matrix.custom.html","formatted_body":"Should have done that one weeks ago, but I know Kevin personally and wanted to keep things friendly, but good <em>lord</em> I do not have time nor interest to engage in dueling essays where every point was brought up and addressed last year.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Should have done that one weeks ago, but I know Kevin personally and wanted to keep things friendly, but good *lord* I do not have time nor interest to engage in dueling essays where every point was brought up and addressed last year.","mimetype":"text/plain"},{"body":"Should have done that one weeks ago, but I know Kevin personally and wanted to keep things friendly, but good <em>lord</em> I do not have time nor interest to engage in dueling essays where every point was brought up and addressed last year.","mimetype":"text/html"}]},"ts":1657225562737,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$EzFHWUgEpjQRkG9inTVLgxY012_ruJMc5TBFKzChe-c"},
{"content":{"body":"(if he has made novel points I missed them in the screenfuls of text that each post of his produces)","msgtype":"m.text","org.matrix.msc1767.text":"(if he has made novel points I missed them in the screenfuls of text that each post of his produces)"},"ts":1657225740837,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ptN6VMvNJp3cvrf3N5fmACFWqzTxSLhtUoMd3Pz9c3s"},
{"content":{"body":"Insofar that we have already addressed many points of argument that people keep perseverating over, we should add an FAQ section or an FAQ document that summarizes positions, so we could simply point to them every time something gets brought up again. I‚Äôve meant to do this for a year now, but I just haven‚Äôt had time. My apologies about this‚Äîmaybe if I had done so earlier, we would have had you deal with a few less circular threads. ","format":"org.matrix.custom.html","formatted_body":"Insofar that we have already addressed many points of argument that people keep perseverating over, we should add an FAQ section or an FAQ document that summarizes positions, so we could simply point to them every time something gets brought up again. I‚Äôve meant to do this for a year now, but I just haven‚Äôt had time. My apologies about this‚Äîmaybe if I had done so earlier, we would have had you deal with a few less circular threads.","msgtype":"m.text"},"ts":1657225772997,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$FtXO0PK6FGmCNPj9FUUAUgG_MMHNrABoyTlUZL3ICn4"},
{"content":{"body":"I doubt it. ^_^","msgtype":"m.text","org.matrix.msc1767.text":"I doubt it. ^_^"},"ts":1657225785390,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Hx_YdO1Emu97SzctzO6cn6URuEBTVDeNm7AxZ2Yu0gM"},
{"content":{"body":"at least stare decisis have entered people's vocabularies recently","msgtype":"m.text","org.matrix.msc1767.text":"at least stare decisis have entered people's vocabularies recently"},"ts":1657226032041,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VvQIVfnyAkdCRbKeJjVLprfRnNRrWhUZOo-MSsMKEFk"},
{"content":{"body":"ah yes, the \"stand your ground\" rule","msgtype":"m.text","org.matrix.msc1767.text":"ah yes, the \"stand your ground\" rule"},"ts":1657226061454,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$oFiZghoYIH_ugo_zDZcIeX7Nc8dPUuAecbwAYqKRYRY"},
{"content":{"body":"though i guess in this case it's more like res judicata than stare decisis","msgtype":"m.text","org.matrix.msc1767.text":"though i guess in this case it's more like res judicata than stare decisis"},"ts":1657226073866,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$BSQLKTP4BV4Wii9jriDpjC1bMfsM30xkH8gfooMlJsk"},
{"content":{"body":" * though i guess in this case it's more like res judicata than stare decisis","m.new_content":{"body":"though i guess in this case it's more like res judicata than stare decisis","msgtype":"m.text","org.matrix.msc1767.text":"though i guess in this case it's more like res judicata than stare decisis"},"m.relates_to":{"event_id":"$BSQLKTP4BV4Wii9jriDpjC1bMfsM30xkH8gfooMlJsk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * though i guess in this case it's more like res judicata than stare decisis"},"ts":1657226080159,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VZNR-uY5iTj6oMaPX6WKEc4i4hVHSeXIRK08NRxWSes"},
{"content":{"body":"‚ÄúStare decisis‚Äù (n.): The act of staring decisively at each other, without budging.","msgtype":"m.text"},"ts":1657226857559,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ivfMKvr9TJFDhzKAHtBLOfanBaQrKr6frRhzYlwWeaM"},
{"content":{"body":"this has truly been a depressing proposal, sociologically speaking","msgtype":"m.text","org.matrix.msc1767.text":"this has truly been a depressing proposal, sociologically speaking"},"ts":1657228827031,"senderName":"rkirsling","senderId":"@rkirsling:matrix.org","id":"$V-G4JPfJ8VAi9yTRlcqE-iwjoliSAGlTnHhkFwMGWvg"},
{"content":{"body":"huh, for some reason I can't hide Kevin's latest response in https://github.com/tc39/proposal-pipeline-operator/issues/238#issuecomment-1178231937 (but could hide his earlier ones)","msgtype":"m.text","org.matrix.msc1767.text":"huh, for some reason I can't hide Kevin's latest response in https://github.com/tc39/proposal-pipeline-operator/issues/238#issuecomment-1178231937 (but could hide his earlier ones)"},"ts":1657228959842,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$foa7PO7Skhe8flyw1rvt605RAut9gGh-KIOlMDANfAU"},
{"content":{"body":"TabAtkins: sometimes i see no \"hide\" link present, especially when the anchor link points to that specific comment - i usually click the timestamp of another comment and hard-refresh","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: sometimes i see no &quot;hide&quot; link present, especially when the anchor link points to that specific comment - i usually click the timestamp of another comment and hard-refresh","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: sometimes i see no \"hide\" link present, especially when the anchor link points to that specific comment - i usually click the timestamp of another comment and hard-refresh","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: sometimes i see no &quot;hide&quot; link present, especially when the anchor link points to that specific comment - i usually click the timestamp of another comment and hard-refresh","mimetype":"text/html"}]},"ts":1657231772938,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$hTWWMlM1oqNq5pna4CMgO_ENzv9QA9N3qRuNXs-XYOw"},
{"content":{"body":"Ah, that was indeed the problem. How confusing. Thanks!","msgtype":"m.text","org.matrix.msc1767.text":"Ah, that was indeed the problem. How confusing. Thanks!"},"ts":1657231892129,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$kbWKo_X2QLha9YLM00IHQyZP5eM4GaerZlwbgwRxaWM"},
{"content":{"body":"Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill. ","format":"org.matrix.custom.html","formatted_body":"Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill.","msgtype":"m.text"},"ts":1657232559271,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$dvwLnG9Rq4WdXdbS2vx7FmMam3Y2VqAssu-Q2u3lP24"},
{"content":{"body":"do you plan to hire Pew?","msgtype":"m.text","org.matrix.msc1767.text":"do you plan to hire Pew?"},"ts":1657232818909,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PmWZ3-xWXN0EvaB2yfmLAg-WyU6iFmPbhc3H0V5x_DU"},
{"content":{"body":"No, no budget for that","msgtype":"m.text"},"ts":1657232880903,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$5w0RcxGMXhv2GbjyY_LXcHe9_KQfkBjY7zldyb7u700"},
{"content":{"body":"For what it‚Äôs worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#‚Äîor the choice of the topic, for that matter.‚Ä®(That is, Jordan‚Äôs prior condition to pipe‚Äôs advancement to Stage¬†2 that a this-binding-or-calling syntax also ‚Äúeventually‚Äù advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.)‚Ä®This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage¬†4, it‚Äôs going to be because of that critical issue.","msgtype":"m.text","m.relates_to":{"m.in_reply_to":{"event_id":"$dvwLnG9Rq4WdXdbS2vx7FmMam3Y2VqAssu-Q2u3lP24"}}},"ts":1657233200793,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$YuGN0kQg1fyr75KpINX4tnxroFAD69l2mktZgAppewM"},
{"content":{"body":"> <@rbuckton:matrix.org> Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill. \n\n * For what it‚Äôs worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#‚Äîor the choice of the topic, for that matter.‚Ä®(That is, Jordan‚Äôs prior condition to pipe‚Äôs advancement to Stage¬†2 that a this-binding-or-calling syntax also ‚Äúeventually‚Äù advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.)‚Ä®This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage¬†4, it‚Äôs going to be because of that critical issue.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU%3Amatrix.org/%24dvwLnG9Rq4WdXdbS2vx7FmMam3Y2VqAssu-Q2u3lP24\">In reply to</a> <a href=\"https://matrix.to/#/@rbuckton:matrix.org\">@rbuckton:matrix.org</a><br>Have we ever tried to quantify how much of the ecosystem prefers Hack-style vs. F#-style? It's unfortunate that much of the early negative response was so vitrolic, but I still wonder if Hack-style was the right direction. This proposal constantly feels like it's being pushed uphill.</blockquote></mx-reply> * For what it‚Äôs worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#‚Äîor the choice of the topic, for that matter.‚Ä®(That is, Jordan‚Äôs prior condition to pipe‚Äôs advancement to Stage¬†2 that a this-binding-or-calling syntax also ‚Äúeventually‚Äù advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.)‚Ä®This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage¬†4, it‚Äôs going to be because of that critical issue.","m.new_content":{"body":"For what it‚Äôs worth, I view reconciliation with call-this syntax to be a much greater obstacle to pipe operator compared to its syntax particulars like Hack/F#‚Äîor the choice of the topic, for that matter.‚Ä®(That is, Jordan‚Äôs prior condition to pipe‚Äôs advancement to Stage¬†2 that a this-binding-or-calling syntax also ‚Äúeventually‚Äù advance, and the fact that we have some strong opposition to any such this-binding/calling syntax.)‚Ä®This is one of the two topics that the pipe incubator was chartered to discuss, and we might have some time this plenary to discuss it. But if pipe fails to ever reach Stage¬†4, it‚Äôs going to be because of that critical issue.","msgtype":"m.text"},"m.relates_to":{"event_id":"$YuGN0kQg1fyr75KpINX4tnxroFAD69l2mktZgAppewM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657233222026,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$YgjfxHlSCM1Sv0JfCN8dT1XsuvgPwrixbhvQKiYzDEc"},
{"content":{"body":"‚ÄúThe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. Well, I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)","msgtype":"m.text"},"ts":1657233246966,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$0qoFEIYd7KWmg6abrkly9ciJPqvwxukJh7mc_TgFC-s"},
{"content":{"body":"* ‚ÄúThe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. Well, I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)","format":"org.matrix.custom.html","formatted_body":"* (null)","m.new_content":{"body":"‚ÄúThe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. Well, I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)","msgtype":"m.text"},"m.relates_to":{"event_id":"$0qoFEIYd7KWmg6abrkly9ciJPqvwxukJh7mc_TgFC-s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657233280697,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$XrdUZiRDv4_cBDvCtszyXwlFalTsdzJ_ObQNbEUB2dQ"},
{"content":{"body":"I am still, and probably always be, in favor of F#-style + PFA, even with the limitations regarding yield and await. ","format":"org.matrix.custom.html","formatted_body":"I am still, and probably always be, in favor of F#-style + PFA, even with the limitations regarding yield and await.","msgtype":"m.text"},"ts":1657233336171,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$yNmdJhIPiUxxsDsDhqnvEUotLxCuHrDd-Xc-CA9R404"},
{"content":{"body":"* That is to say, Jordan will probably always block Stage¬†4 for pipe unless call-this or something like it reaches Stage¬†3 or 4, as he essentially warned when it reached Stage¬†2 way back c. 2017. \n\nAnd (someone else‚Äôs words) ‚Äúthe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. I suppose I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)","format":"org.matrix.custom.html","formatted_body":"* <p>That is to say, Jordan will probably always block Stage¬†4 for pipe unless call-this or something like it reaches Stage¬†3 or 4, as he essentially warned when it reached Stage¬†2 way back c. 2017.</p>\n<p>And (someone else‚Äôs words) ‚Äúthe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. I suppose I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)</p>","m.new_content":{"body":"That is to say, Jordan will probably always block Stage¬†4 for pipe unless call-this or something like it reaches Stage¬†3 or 4, as he essentially warned when it reached Stage¬†2 way back c. 2017. \n\nAnd (someone else‚Äôs words) ‚Äúthe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. I suppose I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)","format":"org.matrix.custom.html","formatted_body":"<p>That is to say, Jordan will probably always block Stage¬†4 for pipe unless call-this or something like it reaches Stage¬†3 or 4, as he essentially warned when it reached Stage¬†2 way back c. 2017.</p>\n<p>And (someone else‚Äôs words) ‚Äúthe default is that neither proposal advances, and I‚Äôm fine with that,‚Äù so to speak. I suppose I can sympathize with gatekeeping [what‚Äôs left of] the core language‚Äôs simplicity, even if I shed one tear doing so. :‚Äô)</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$0qoFEIYd7KWmg6abrkly9ciJPqvwxukJh7mc_TgFC-s","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657233422585,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$QydFC-rTXttZMyG-TlzgOj8r_ha4xuntLaKdOmvxQSY"},
{"content":{"body":"I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (->, ->>, as->, cond->, etc.), heh.","format":"org.matrix.custom.html","formatted_body":"I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (-&gt;, -&gt;&gt;, as-&gt;, cond-&gt;, etc.), heh.","msgtype":"m.text"},"ts":1657233625270,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$HioujVDZ84R8SNMh7grDbLbuagKwBiykfCynr_1mA8k"},
{"content":{"body":"* I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (->, ->>, as->, cond->, etc.), heh.","format":"org.matrix.custom.html","formatted_body":"* I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (-&gt;, -&gt;&gt;, as-&gt;, cond-&gt;, etc.), heh.","m.new_content":{"body":"I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (->, ->>, as->, cond->, etc.), heh.","format":"org.matrix.custom.html","formatted_body":"I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (-&gt;, -&gt;&gt;, as-&gt;, cond-&gt;, etc.), heh.","msgtype":"m.text"},"m.relates_to":{"event_id":"$HioujVDZ84R8SNMh7grDbLbuagKwBiykfCynr_1mA8k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657233635341,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qSbZmm_VdS6F9eBeOP3abGPTx4-vQ47dCTUdPdiEwvA"},
{"content":{"body":"> <@jschoi:matrix.org> I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (->, ->>, as->, cond->, etc.), heh.\n\nStrongly imposed to Elixir style implicit parameter injection, it just adds more confusion over JS's existing implicit `this`. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$HioujVDZ84R8SNMh7grDbLbuagKwBiykfCynr_1mA8k?via=matrix.org&via=igalia.com&via=t2bot.io\">In reply to</a> <a href=\"https://matrix.to/#/@jschoi:matrix.org\">@jschoi:matrix.org</a><br />I can certainly sympathize, though my perspective is colored by my Clojure heritage. Speaking of which, there‚Äôs always Elixir style. Or Clojure‚Äôs operator-all-the-pipes-they‚Äôre-all-just-macros style (-&gt;, -&gt;&gt;, as-&gt;, cond-&gt;, etc.), heh.</blockquote></mx-reply>Strongly imposed to Elixir style implicit parameter injection, it just adds more confusion over JS's existing implicit <code>this</code>.","m.relates_to":{"m.in_reply_to":{"event_id":"$HioujVDZ84R8SNMh7grDbLbuagKwBiykfCynr_1mA8k"}},"msgtype":"m.text"},"ts":1657234598902,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$w_aWn34a1jGG2P9gU63gWNHmFgtMm_09m1P_IRcHcOE"},
{"content":{"body":"At least both Hack-style and F#-style are explicit. Hack-style with a topic, F#-style with `x |> F` meaning `F(x)` (plus PFA explicit placeholders). ","format":"org.matrix.custom.html","formatted_body":"At least both Hack-style and F#-style are explicit. Hack-style with a topic, F#-style with <code>x |&gt; F</code> meaning <code>F(x)</code> (plus PFA explicit placeholders).","msgtype":"m.text"},"ts":1657234706183,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$5IhMwffy-pp2BPX3oS_XWFwWDhYJYAuIpIKi1nQqqX8"},
{"content":{"body":"And I still feel if you're using `|>` to do simple expressions like `a + b`, you're holding it wrong. Its the wrong tool for the job. ","format":"org.matrix.custom.html","formatted_body":"And I still feel if you're using <code>|&gt;</code> to do simple expressions like <code>a + b</code>, you're holding it wrong. Its the wrong tool for the job.","msgtype":"m.text"},"ts":1657234808272,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$O6grQAMYIFZJKYRmtxKSiyJJd7GzqTBeHLZf1XsttWs"},
{"content":{"body":"Yeah, I agree about Elixir style. Anyways, all of these things are different ways to deal with the dichotomy between unary functional languages and n-ary functional languages. Something like a unary‚Äìn-ary functional impedance mismatch, to varying degrees.","msgtype":"m.text"},"ts":1657234875286,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$4Op-2QWitM9JqCC2Eo3Up6fsFXR36-uBq82B3l-671E"},
{"content":{"body":"* Yeah, I agree about Elixir style. Anyways, all of these things are different ways to deal with the dichotomy between unary functional languages and n-ary functional languages. Something like a unary‚Äìn-ary functional impedance mismatch, to varying degrees.","format":"org.matrix.custom.html","formatted_body":"* (null)","m.new_content":{"body":"Yeah, I agree about Elixir style. Anyways, all of these things are different ways to deal with the dichotomy between unary functional languages and n-ary functional languages. Something like a unary‚Äìn-ary functional impedance mismatch, to varying degrees.","msgtype":"m.text"},"m.relates_to":{"event_id":"$4Op-2QWitM9JqCC2Eo3Up6fsFXR36-uBq82B3l-671E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1657234880809,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$hpRydzm6sl5xWJMjrboFbFWyQyi6TOWJHqVpkVvbWJI"},
{"content":{"body":"i suspect pipeline is the right tool for the job any time you have something complex to pass into a function, or a function call's return value to pass into a function.","msgtype":"m.text","org.matrix.msc1767.text":"i suspect pipeline is the right tool for the job any time you have something complex to pass into a function, or a function call's return value to pass into a function."},"ts":1657234939086,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$TdHGoZesKzzHSlYbCBhqQMEqKiuVHVMCYLlAYt8xwoA"},
{"content":{"body":"> <@ljharb:matrix.org> i suspect pipeline is the right tool for the job any time you have something complex to pass into a function, or a function call's return value to pass into a function.\n\nThat's exactly my point. Piping through functions is the right use. The contrived `x |> % + 1` examples are the ones I think are a poor use.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!mjlgwjKxWUpgSgeCQU:matrix.org/$TdHGoZesKzzHSlYbCBhqQMEqKiuVHVMCYLlAYt8xwoA?via=matrix.org&via=igalia.com&via=t2bot.io\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />i suspect pipeline is the right tool for the job any time you have something complex to pass into a function, or a function call's return value to pass into a function.</blockquote></mx-reply>That's exactly my point. Piping through functions is the right use. The contrived <code>x |&gt; % + 1</code> examples are the ones I think are a poor use.","m.relates_to":{"m.in_reply_to":{"event_id":"$TdHGoZesKzzHSlYbCBhqQMEqKiuVHVMCYLlAYt8xwoA"}},"msgtype":"m.text"},"ts":1657235077360,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$PnL8YrZhiVkzLyjUBix4Hmo03ATUf15uQ2M97GtyrB0"},
{"content":{"body":"sure. but i don't think those are at all the only ones that support hack","msgtype":"m.text","org.matrix.msc1767.text":"sure. but i don't think those are at all the only ones that support hack"},"ts":1657235107864,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$6BT_Rw6oOxQo8f_fvpTjd5xLwdUbs2qeHPJQmJ6Zczw"},
{"content":{"body":"I'd much rather have `do {}` or a `let..in` syntax for those cases.","format":"org.matrix.custom.html","formatted_body":"I'd much rather have <code>do {}</code> or a <code>let..in</code> syntax for those cases.","msgtype":"m.text"},"ts":1657235145586,"senderName":"rbuckton (PTO: 7/5 - 7/16)","senderId":"@rbuckton:matrix.org","id":"$LOhPRjZWpv6PMVzv4863f4VaufiLCmi9bZ-Ga-9ZNMA"},
{"content":{"body":"personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler","msgtype":"m.text","org.matrix.msc1767.text":"personally i have a bunch of examples that would work equally well in either style, and a bunch of examples where hack avoids creating a bunch of extra arrow functions, and close to zero examples (but nonzero) where F# is simpler"},"ts":1657235163177,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$BX_tZJkjlDzmUHA0uxpZFAK_mKOp10z6PHedm9b8ASs"}
]