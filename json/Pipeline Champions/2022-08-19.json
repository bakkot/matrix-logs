[
{"content":{"body":"I think that's the point of the `|> ...` operator? `x |> ...[a, b, c]` is essentially `x |> a(^) |> b(^) |> c(^)`.","format":"org.matrix.custom.html","formatted_body":"I think that's the point of the <code>|&gt; ...</code> operator? <code>x |&gt; ...[a, b, c]</code> is essentially <code>x |&gt; a(^) |&gt; b(^) |&gt; c(^)</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think that's the point of the `|> ...` operator? `x |> ...[a, b, c]` is essentially `x |> a(^) |> b(^) |> c(^)`.","mimetype":"text/plain"},{"body":"I think that's the point of the <code>|&gt; ...</code> operator? <code>x |&gt; ...[a, b, c]</code> is essentially <code>x |&gt; a(^) |&gt; b(^) |&gt; c(^)</code>.","mimetype":"text/html"}]},"ts":1660867372815,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$OfoabbuNJOvuo1XpMgfuNgFokHgdL_p07Nx-n46Zp10"},
{"content":{"body":"It would possibly be better written as `getCustomerNameSteps = [...]`","format":"org.matrix.custom.html","formatted_body":"It would possibly be better written as <code>getCustomerNameSteps = [...]</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It would possibly be better written as `getCustomerNameSteps = [...]`","mimetype":"text/plain"},{"body":"It would possibly be better written as <code>getCustomerNameSteps = [...]</code>","mimetype":"text/html"}]},"ts":1660867390707,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$q65MAR_uTDvXpkzGi8ERm_MT_l9f2T2SWEFYVBK3kAg"},
{"content":{"body":"Also, this would be impossible for a type system like TypeScript to statically type in any meaningful way. You'd have to wait for the `|> ...` to instantiate generics, meaning you have no type inference when composing functions in the array.","format":"org.matrix.custom.html","formatted_body":"Also, this would be impossible for a type system like TypeScript to statically type in any meaningful way. You'd have to wait for the <code>|&gt; ...</code> to instantiate generics, meaning you have no type inference when composing functions in the array.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Also, this would be impossible for a type system like TypeScript to statically type in any meaningful way. You'd have to wait for the `|> ...` to instantiate generics, meaning you have no type inference when composing functions in the array.","mimetype":"text/plain"},{"body":"Also, this would be impossible for a type system like TypeScript to statically type in any meaningful way. You'd have to wait for the <code>|&gt; ...</code> to instantiate generics, meaning you have no type inference when composing functions in the array.","mimetype":"text/html"}]},"ts":1660867494057,"senderName":"rbuckton","senderId":"@rbuckton:matrix.org","id":"$kFG-lbQ6ffuTyE-1BZbdRYNo7kNKY3k4btTpXUn97nU"},
{"content":{"body":"Right, but my point is, carrying around an array of functions instead of just composing them into a single function is odd. If they did that, then it would just be `|> getCustomerName(^^) |>` and be a completely uninteresting example.","format":"org.matrix.custom.html","formatted_body":"Right, but my point is, carrying around an array of functions instead of just composing them into a single function is odd. If they did that, then it would just be <code>|&gt; getCustomerName(^^) |&gt;</code> and be a completely uninteresting example.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Right, but my point is, carrying around an array of functions instead of just composing them into a single function is odd. If they did that, then it would just be `|> getCustomerName(^^) |>` and be a completely uninteresting example.","mimetype":"text/plain"},{"body":"Right, but my point is, carrying around an array of functions instead of just composing them into a single function is odd. If they did that, then it would just be <code>|&gt; getCustomerName(^^) |&gt;</code> and be a completely uninteresting example.","mimetype":"text/html"}]},"ts":1660922823583,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Kww64PuS7N4KtCwaDgMzXSzPBqYxr_h6K58MjXLAbGU"},
{"content":{"body":"It just so happens that, if you're using `pipe()`, carrying around an array can be somewhat ergonomic since you can then spread the functions into the arglist. But that's an accidental quality of the features and syntaxes involved; it's not *intended* as something that should work.","format":"org.matrix.custom.html","formatted_body":"It just so happens that, if you're using <code>pipe()</code>, carrying around an array can be somewhat ergonomic since you can then spread the functions into the arglist. But that's an accidental quality of the features and syntaxes involved; it's not <em>intended</em> as something that should work.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It just so happens that, if you're using `pipe()`, carrying around an array can be somewhat ergonomic since you can then spread the functions into the arglist. But that's an accidental quality of the features and syntaxes involved; it's not *intended* as something that should work.","mimetype":"text/plain"},{"body":"It just so happens that, if you're using <code>pipe()</code>, carrying around an array can be somewhat ergonomic since you can then spread the functions into the arglist. But that's an accidental quality of the features and syntaxes involved; it's not <em>intended</em> as something that should work.","mimetype":"text/html"}]},"ts":1660922900158,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Maf1bBue33ii2M-sJ0ZHzfn-m027u_1YzThqjLaQ5sA"},
{"content":{"body":"But even with pipe(), using a composed function instead of an array is likely better since then you can use it *elsewhere*, rather than just in pipe().","format":"org.matrix.custom.html","formatted_body":"But even with pipe(), using a composed function instead of an array is likely better since then you can use it <em>elsewhere</em>, rather than just in pipe().","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But even with pipe(), using a composed function instead of an array is likely better since then you can use it *elsewhere*, rather than just in pipe().","mimetype":"text/plain"},{"body":"But even with pipe(), using a composed function instead of an array is likely better since then you can use it <em>elsewhere</em>, rather than just in pipe().","mimetype":"text/html"}]},"ts":1660922929225,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$f2zkw9AOWpyeKy0O_uYnqCCCSz-hdz586Rip3oIeP5s"},
{"content":{"body":"It just seems odd that this particular behavior is being defended on FP grounds, when it is actually a pretty weird and not particularly FP-ish thing to do. Good FP programming would use actual function composition.","msgtype":"m.text","org.matrix.msc1767.text":"It just seems odd that this particular behavior is being defended on FP grounds, when it is actually a pretty weird and not particularly FP-ish thing to do. Good FP programming would use actual function composition."},"ts":1660923026630,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$wQXnqtNjev_LqnCdL3P0gw1QY7lzOrfHCjvbi6SFNcM"}
]