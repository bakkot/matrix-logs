[
{"content":{"body":"Sigh, everyone keeps talking past each other, assuming only their own use-cases exist. Justin Ridgewell has said several times, flat-out, that they'd like to use the bind-this operator to produce \"fluent API\" libraries that are slightly more ergonomic than what pipe can do.","format":"org.matrix.custom.html","formatted_body":"Sigh, everyone keeps talking past each other, assuming only their own use-cases exist. <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a> has said several times, flat-out, that they'd like to use the bind-this operator to produce &quot;fluent API&quot; libraries that are slightly more ergonomic than what pipe can do.","msgtype":"m.text"},"ts":1641836783684,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Vy7TazNn_-iHCdhjK9ftp0_STLOasWC9Ne0Nz3nObIo"},
{"content":{"body":"If you're talking instead just about the call-this operator, then yes, it *won't* cause schism, for the reasons I already gave.","format":"org.matrix.custom.html","formatted_body":"If you're talking instead just about the call-this operator, then yes, it <em>won't</em> cause schism, for the reasons I already gave.","msgtype":"m.text"},"ts":1641836808836,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$elgBGTIqZpcNqjbW0KSlwslc0IEquJT5skhWUUBzK54"},
{"content":{"body":"ah, i guess Iâ€™d missed that","msgtype":"m.text"},"ts":1641841193427,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ChC8OMnjciM_5us55m6u6Y8HOeQFksFtzqRHW_uofqw"},
{"content":{"body":"* ah, i guess Iâ€™d missed that","m.new_content":{"body":"ah, i guess Iâ€™d missed that","msgtype":"m.text"},"m.relates_to":{"event_id":"$ChC8OMnjciM_5us55m6u6Y8HOeQFksFtzqRHW_uofqw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641841197625,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pRf6eabaloacZJN1O7m1LJOmVvz6gZrs3MBKUDiv2MA"},
{"content":{"body":"I wonder if space was made to discuss the more general question bringing up the use cases people imagine explicitly might make it easier to think about the proposals more broadly.","msgtype":"m.text"},"ts":1641856196431,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$m8-_ikSH15zsxT7W7skwgZYvOVYIXs9m1gxdZKuDVgk"},
{"content":{"body":"Overall though, this diagram and write-up are so interesting. I do have to say I'm a big pipe op fan and somewhat dubious about the others. Writing free-this functions seems like a big risk in terms of ecosystem bifurcation.","msgtype":"m.text"},"ts":1641856239310,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$fP7yatPMdwT06T2rJwSGJU_Uaqh20DZyAreXr_LEN_Y"},
{"content":{"body":"Elaborating ways to use `this` seems to me possibly undesirable, dev experienceâ€“wise. Anecdotally, I know some slice of devs avoid it & it's often brought up as one of the difficult parts of teaching/using JS (even came across that recently in digging back into React and their motivations for moving to hooks).\n\nI also personally, but maybe only me, worry about PFA quite a lot. It's such a fundamental shift to decouple argument order with the order in which they are provided and I'm not certain there are use cases that aren't achievable by other means / are so common that they are worth the syntax cost / inscrutability trade-off. Even the example of memoizing and expensive operations could be addressed with `(expensiveOp) => (a, b) => { .. }`\n","format":"org.matrix.custom.html","formatted_body":"<p>Elaborating ways to use <code>this</code> seems to me possibly undesirable, dev experienceâ€“wise. Anecdotally, I know some slice of devs avoid it &amp; it's often brought up as one of the difficult parts of teaching/using JS (even came across that recently in digging back into React and their motivations for moving to hooks).</p>\n<p>I also personally, but maybe only me, worry about PFA quite a lot. It's such a fundamental shift to decouple argument order with the order in which they are provided and I'm not certain there are use cases that aren't achievable by other means / are so common that they are worth the syntax cost / inscrutability trade-off. Even the example of memoizing and expensive operations could be addressed with <code>(expensiveOp) =&gt; (a, b) =&gt; { .. }</code></p>\n","msgtype":"m.text"},"ts":1641856258494,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$k2Xv2lZ5MdDYS32W1Q9GFtnrwTIowqB0M2jGMSvnJ98"},
{"content":{"body":"Also, I think the example in Tab's gist is slightly incorrect, right? `fn~(arg0, ?, arg2, ?)` becomes `(a)=>fn(arg0, a, arg2, a)` and `fn~(arg0, ?1, arg2, ?2)` would be `(a,b)=>fn(arg0, a, arg2, b)`. \n","format":"org.matrix.custom.html","formatted_body":"Also, I think the example in Tab's gist is slightly incorrect, right? <code>fn~(arg0, ?, arg2, ?)</code> becomes <code>(a)=&gt;fn(arg0, a, arg2, a)</code> and <code>fn~(arg0, ?1, arg2, ?2)</code> would be <code>(a,b)=&gt;fn(arg0, a, arg2, b)</code>.","msgtype":"m.text"},"ts":1641856276697,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$MJQ4IUm22KcCUYzfgdfE25piXpfUat4THQoaur8Fvc8"},
{"content":{"body":"Anyways, this is suddenly a lot of thoughts. I should probably write a gist too, ðŸ˜†","msgtype":"m.text"},"ts":1641856290055,"senderName":"sarahghp","senderId":"@sarahghp:matrix.org","id":"$QZDgQQWYuMRgupLeMo9U8tew6uNn3cgv6vUB1JOFlOA"}
]