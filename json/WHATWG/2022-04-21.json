[
{"content":{"body":"looking at https://github.com/mdn/content/issues/15129 — when `setTimeout(handler, timeout, ...arguments)` is called with a _timeout_ that’s not a number, what spec defines how it gets coerced into a number?","format":"org.matrix.custom.html","formatted_body":"looking at https://github.com/mdn/content/issues/15129 — when <code>setTimeout(handler, timeout, ...arguments)</code> is called with a <em>timeout</em> that’s not a number, what spec defines how it gets coerced into a number?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"looking at https://github.com/mdn/content/issues/15129 — when `setTimeout(handler, timeout, ...arguments)` is called with a _timeout_ that’s not a number, what spec defines how it gets coerced into a number?","mimetype":"text/plain"},{"body":"looking at https://github.com/mdn/content/issues/15129 — when <code>setTimeout(handler, timeout, ...arguments)</code> is called with a <em>timeout</em> that’s not a number, what spec defines how it gets coerced into a number?","mimetype":"text/html"}]},"ts":1650513793235,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$ffABy_wxiCq_RTwPxv0gcjYfeo_2hPMjgfyQDOqkj9M"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing _timeout_ to a number but instead assumes it’s already a number","format":"org.matrix.custom.html","formatted_body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing <em>timeout</em> to a number but instead assumes it’s already a number","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing _timeout_ to a number but instead assumes it’s already a number","mimetype":"text/plain"},{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing <em>timeout</em> to a number but instead assumes it’s already a number","mimetype":"text/html"}]},"ts":1650513864783,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$4KlcVnY-f2CZFssbhLN0-7VVvzZtwIu8dRYvecW2Uu0"},
{"content":{"body":"I guess somehow I end up at https://webidl.spec.whatwg.org/#abstract-opdef-converttoint","msgtype":"m.text","org.matrix.msc1767.text":"I guess somehow I end up at https://webidl.spec.whatwg.org/#abstract-opdef-converttoint"},"ts":1650515388138,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$xVgEsWOGyRw0M5li7yZnbQweftzMcppbuc9T5vHcfCU"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin says the definition is `long setTimeout(TimerHandler handler, optional long timeout = 0, any... arguments);`","format":"org.matrix.custom.html","formatted_body":"https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin says the definition is <code>long setTimeout(TimerHandler handler, optional long timeout = 0, any... arguments);</code>","msgtype":"m.text"},"ts":1650524198532,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$qHaxEVDh_20fIcvtHk4__ViTfeK17Uq3MmYv1upGAKs"},
{"content":{"body":"so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens","msgtype":"m.text"},"ts":1650524236163,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8"},
{"content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8"}}},"ts":1650533268528,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE"},
{"content":{"body":"> <@arai:mozilla.org> so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens\n\n * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@arai:mozilla.org\">@arai:mozilla.org</a><br>so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens</blockquote></mx-reply> * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","m.new_content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@arai:mozilla.org> so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens\n\n * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@arai:mozilla.org\">@arai:mozilla.org</a><br>so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens</blockquote></mx-reply> * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"ts":1650533320409,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$WKUJJt3yTlMw5GYNtL5QnEHPTKT06BZJhffXkJdx9ro"},
{"content":{"body":" * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":" * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","m.new_content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":" * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"ts":1650533473244,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$KNQnlyeexdbiCnmzkpxaYJWoHeyuLAcYnaYBcfmBAaI"},
{"content":{"body":" * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":" * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","m.new_content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(_text_, _StringNumericLiteral_) — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":" * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(<em>text</em>, <em>StringNumericLiteral</em>) — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"ts":1650533486915,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$vDmn9S4Jd8I2sP-VsSQ6ascMw0_FObGIUMnhbH6xiyg"},
{"content":{"body":"let me check","msgtype":"m.text","org.matrix.msc1767.text":"let me check"},"ts":1650533618360,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$f-AWbHC1iPve18qcw_wyh2o_SCwTf75e66XdmE2g5XY"},
{"content":{"body":"yes, that sounds right","msgtype":"m.text","org.matrix.msc1767.text":"yes, that sounds right"},"ts":1650533827021,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$YLWmI8cX5Tucu2MTV2Q9pwem5lMDSh6UHw4TTe7oW5Q"},
{"content":{"body":"OK, thanks much","msgtype":"m.text","org.matrix.msc1767.text":"OK, thanks much"},"ts":1650533839702,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$1TZl4bC9KjFssg7Lita2qYTpAJbTgHoW0daUwDYJjD4"},
{"content":{"body":"I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue","msgtype":"m.text","org.matrix.msc1767.text":"I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue"},"ts":1650537043193,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$cC9t9FU8n5Su1XrUgVlUsT6l4J6y4lZKHn8KonCmDhI"},
{"content":{"body":"https://github.com/whatwg/html/issues/7840","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/whatwg/html/issues/7840"},"ts":1650537048190,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$t0sk7b9SySL9Jk9ICyZcEN32F-gWvzUiLaPQpy2ntrc"},
{"content":{"body":" * I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue","m.new_content":{"body":"I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue","msgtype":"m.text","org.matrix.msc1767.text":"I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue"},"m.relates_to":{"event_id":"$cC9t9FU8n5Su1XrUgVlUsT6l4J6y4lZKHn8KonCmDhI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as \"not that important\" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue"},"ts":1650537068679,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$GtUrAvMrDPnuQR40yyHBz_Ob9wpCCLgCFDZQRzd5L5U"},
{"content":{"body":"Does anyone know the history of `DOMContentLoaded`, as in, why is it named using a different pattern to other events?","format":"org.matrix.custom.html","formatted_body":"Does anyone know the history of <code>DOMContentLoaded</code>, as in, why is it named using a different pattern to other events?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Does anyone know the history of `DOMContentLoaded`, as in, why is it named using a different pattern to other events?","mimetype":"text/plain"},{"body":"Does anyone know the history of <code>DOMContentLoaded</code>, as in, why is it named using a different pattern to other events?","mimetype":"text/html"}]},"ts":1650543597424,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$RUR9_frQHZYynrJ6wUmHS9Lu7goCtatluYtV30saca8"},
{"content":{"body":"I guess the mattern started with mutation events in DOM-level-2","msgtype":"m.text","org.matrix.msc1767.text":"I guess the mattern started with mutation events in DOM-level-2"},"ts":1650543810399,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$V9XhzmEZou3ejdDWjlBMuUu9Qbxi37xAX1SA6OsyTxY"},
{"content":{"body":"Jake Archibald: yeah, there was a group of people that thought we should prefix and case event names in that manner, see also DOMFocusIn and the like","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: yeah, there was a group of people that thought we should prefix and case event names in that manner, see also DOMFocusIn and the like","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jake Archibald: yeah, there was a group of people that thought we should prefix and case event names in that manner, see also DOMFocusIn and the like","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: yeah, there was a group of people that thought we should prefix and case event names in that manner, see also DOMFocusIn and the like","mimetype":"text/html"}]},"ts":1650545339127,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Itl3kjdlrvQ9SeOYo603q3jhsQ0lg6xviVVm636PAoc"},
{"content":{"body":"Jake Archibald: I suspect it had strong overlap with the Java people, but I don't know for sure, predates me","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I suspect it had strong overlap with the Java people, but I don't know for sure, predates me","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jake Archibald: I suspect it had strong overlap with the Java people, but I don't know for sure, predates me","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I suspect it had strong overlap with the Java people, but I don't know for sure, predates me","mimetype":"text/html"}]},"ts":1650545377424,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$LHk-Uf3zsC9kFKbT8hoMPEs8QiBpla8-xqRRgW46Juw"},
{"content":{"body":" * I guess the pattern started with mutation events in DOM-level-2","m.new_content":{"body":"I guess the pattern started with mutation events in DOM-level-2","msgtype":"m.text","org.matrix.msc1767.text":"I guess the pattern started with mutation events in DOM-level-2"},"m.relates_to":{"event_id":"$V9XhzmEZou3ejdDWjlBMuUu9Qbxi37xAX1SA6OsyTxY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I guess the pattern started with mutation events in DOM-level-2"},"ts":1650546205741,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$fFqhow0vQTdn11c8JCtEsBN3RQRkl19U1KYmUSmgH3k"},
{"content":{"body":"ta!","msgtype":"m.text","org.matrix.msc1767.text":"ta!"},"ts":1650546238598,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$TYcwANTQd0ENuJ4SfQayINo_dl7JOyQU0bnye726Swo"},
{"content":{"body":"TabAtkins: In MDN, for https://drafts.csswg.org/css-scroll-snap/ we now have a bunch of links with broken fragments.\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: In MDN, for https://drafts.csswg.org/css-scroll-snap/ we now have a bunch of links with broken fragments.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: In MDN, for https://drafts.csswg.org/css-scroll-snap/ we now have a bunch of links with broken fragments.\n","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: In MDN, for https://drafts.csswg.org/css-scroll-snap/ we now have a bunch of links with broken fragments.","mimetype":"text/html"}]},"ts":1650579574660,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$PaPr4jT4pcnrtj_dakHxYlcqpTm-Jhua-3EOs2VeJWM"}
]