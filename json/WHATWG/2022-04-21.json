[
{"content":{"body":"looking at https://github.com/mdn/content/issues/15129 — when `setTimeout(handler, timeout, ...arguments)` is called with a _timeout_ that’s not a number, what spec defines how it gets coerced into a number?","format":"org.matrix.custom.html","formatted_body":"looking at https://github.com/mdn/content/issues/15129 — when <code>setTimeout(handler, timeout, ...arguments)</code> is called with a <em>timeout</em> that’s not a number, what spec defines how it gets coerced into a number?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"looking at https://github.com/mdn/content/issues/15129 — when `setTimeout(handler, timeout, ...arguments)` is called with a _timeout_ that’s not a number, what spec defines how it gets coerced into a number?","mimetype":"text/plain"},{"body":"looking at https://github.com/mdn/content/issues/15129 — when <code>setTimeout(handler, timeout, ...arguments)</code> is called with a <em>timeout</em> that’s not a number, what spec defines how it gets coerced into a number?","mimetype":"text/html"}]},"ts":1650513793235,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$ffABy_wxiCq_RTwPxv0gcjYfeo_2hPMjgfyQDOqkj9M"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing _timeout_ to a number but instead assumes it’s already a number","format":"org.matrix.custom.html","formatted_body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing <em>timeout</em> to a number but instead assumes it’s already a number","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing _timeout_ to a number but instead assumes it’s already a number","mimetype":"text/plain"},{"body":"https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing <em>timeout</em> to a number but instead assumes it’s already a number","mimetype":"text/html"}]},"ts":1650513864783,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$4KlcVnY-f2CZFssbhLN0-7VVvzZtwIu8dRYvecW2Uu0"},
{"content":{"body":"I guess somehow I end up at https://webidl.spec.whatwg.org/#abstract-opdef-converttoint","msgtype":"m.text","org.matrix.msc1767.text":"I guess somehow I end up at https://webidl.spec.whatwg.org/#abstract-opdef-converttoint"},"ts":1650515388138,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$xVgEsWOGyRw0M5li7yZnbQweftzMcppbuc9T5vHcfCU"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin says the definition is `long setTimeout(TimerHandler handler, optional long timeout = 0, any... arguments);`","format":"org.matrix.custom.html","formatted_body":"https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin says the definition is <code>long setTimeout(TimerHandler handler, optional long timeout = 0, any... arguments);</code>","msgtype":"m.text"},"ts":1650524198532,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$qHaxEVDh_20fIcvtHk4__ViTfeK17Uq3MmYv1upGAKs"},
{"content":{"body":"so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens","msgtype":"m.text"},"ts":1650524236163,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8"},
{"content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8"}}},"ts":1650533268528,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE"},
{"content":{"body":"> <@arai:mozilla.org> so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens\n\n * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@arai:mozilla.org\">@arai:mozilla.org</a><br>so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens</blockquote></mx-reply> * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","m.new_content":{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","format":"org.matrix.custom.html","formatted_body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$CQ2WQ5wNa-Aii0kG3Jy-cU3JoydleMIp8HKZz20WGBE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@arai:mozilla.org> so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens\n\n * OK, so then for a string like `\"1 second\"`, I think ultimately that:\n\n1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:\n2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `\"1 second\"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:\n3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“\n4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“\n\nDoes that sound right?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$EBxRNea1JlEUKV_AHY3W6hN2-j2hoPF0msQF0XA0Gu8?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@arai:mozilla.org\">@arai:mozilla.org</a><br>so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens</blockquote></mx-reply> * <p>OK, so then for a string like <code>&quot;1 second&quot;</code>, I think ultimately that:</p>\n<ol>\n<li>calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:</li>\n<li>calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with<code>ParseText(_text_, _StringNumericLiteral_)</code> — which for a string like <code>&quot;1 second&quot;</code> fails to be parsed as a <em>StringNumericLiteral</em>, and instead returns a List of errors, and so then:</li>\n<li>we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If <em>literal</em> is a List of errors, return <strong>NaN</strong>.“</li>\n<li>we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If <em>x</em> is <strong>NaN</strong>, +0, +∞, or −∞, then return +0“</li>\n</ol>\n<p>Does that sound right?</p>\n","mimetype":"text/html"}]},"ts":1650533320409,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$WKUJJt3yTlMw5GYNtL5QnEHPTKT06BZJhffXkJdx9ro"}
]