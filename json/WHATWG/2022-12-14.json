[
{"content":{"body":"I don't know what `ReadableWritablePair` is, but indeed, any `{ readable, writable }` object works with `pipeThrough()`.","format":"org.matrix.custom.html","formatted_body":"I don't know what <code>ReadableWritablePair</code> is, but indeed, any <code>{ readable, writable }</code> object works with <code>pipeThrough()</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't know what `ReadableWritablePair` is, but indeed, any `{ readable, writable }` object works with `pipeThrough()`.","mimetype":"text/plain"},{"body":"I don't know what <code>ReadableWritablePair</code> is, but indeed, any <code>{ readable, writable }</code> object works with <code>pipeThrough()</code>.","mimetype":"text/html"}]},"ts":1670976982236,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2D1qaLavBe60-Q2oAgYfoqurEQdpVGcd8Z0mfBUkNWs"},
{"content":{"body":"That's the dictionary type name for `{readable, writable}`","format":"org.matrix.custom.html","formatted_body":"That's the dictionary type name for <code>{readable, writable}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That's the dictionary type name for `{readable, writable}`","mimetype":"text/plain"},{"body":"That's the dictionary type name for <code>{readable, writable}</code>","mimetype":"text/html"}]},"ts":1670977016341,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$6tbWoRXQDHG3s8KeK29ySKLiTzmRW8AYqIlJ1MOnUVo"},
{"content":{"body":"https://streams.spec.whatwg.org/#dictdef-readablewritablepair","msgtype":"m.text","org.matrix.msc1767.text":"https://streams.spec.whatwg.org/#dictdef-readablewritablepair"},"ts":1670977022085,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$0mfkAeOWnyz0170hS4y-Tzw02Is3wGb-uvxxIDFZMbc"},
{"content":{"body":" * That's the dictionary type name for `{readable, writable}`","format":"org.matrix.custom.html","formatted_body":" * That's the dictionary type name for <code>{readable, writable}</code>","m.new_content":{"body":"That's the dictionary type name for `{readable, writable}`","format":"org.matrix.custom.html","formatted_body":"That's the dictionary type name for <code>{readable, writable}</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That's the dictionary type name for `{readable, writable}`","mimetype":"text/plain"},{"body":"That's the dictionary type name for <code>{readable, writable}</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$6tbWoRXQDHG3s8KeK29ySKLiTzmRW8AYqIlJ1MOnUVo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * That's the dictionary type name for `{readable, writable}`","mimetype":"text/plain"},{"body":" * That's the dictionary type name for <code>{readable, writable}</code>","mimetype":"text/html"}]},"ts":1670977031217,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$21K7SXKz_cqBoeCGja3ocnS8hH7v0PGlpWgcVnak_V4"},
{"content":{"body":"Ah, so it is.","msgtype":"m.text","org.matrix.msc1767.text":"Ah, so it is."},"ts":1670977037718,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$FMX-GgNb_uVhyNX69uZWRdORx9CTTWCWFMgX14CUFqw"},
{"content":{"body":"sideshowbarker: please don't, as Domenic mentioned I hit a rather unusual case.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: please don't, as <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> mentioned I hit a rather unusual case.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: please don't, as Domenic mentioned I hit a rather unusual case.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: please don't, as <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> mentioned I hit a rather unusual case.","mimetype":"text/html"}]},"ts":1671009573896,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hzPzY56LqPo1TbEXok01pVfB4w9imk8mGyW1P2DRYDk"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: please don't, as Domenic mentioned I hit a rather unusual case.\n\nAh ok, I hadn't managed to make time yet to look anyway :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$hzPzY56LqPo1TbEXok01pVfB4w9imk8mGyW1P2DRYDk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: please don't, as <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> mentioned I hit a rather unusual case.</blockquote></mx-reply>Ah ok, I hadn't managed to make time yet to look anyway :)","m.relates_to":{"m.in_reply_to":{"event_id":"$hzPzY56LqPo1TbEXok01pVfB4w9imk8mGyW1P2DRYDk"}},"msgtype":"m.text"},"ts":1671012155937,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$F3L5oODxC2sR-glk8R6cBRuh6bPM0RbxiURDZTLVJZQ"},
{"content":{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","format":"org.matrix.custom.html","formatted_body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","mimetype":"text/plain"},{"body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","mimetype":"text/html"}]},"ts":1671017502532,"senderName":"krosylight|out-until-Jan-6","senderId":"@krosylight:mozilla.org","id":"$hooITTFmHBLhOlyVu-1zrybc_UiS9Ik_YHO7BFZnyu0"},
{"content":{"body":" * A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?","format":"org.matrix.custom.html","formatted_body":" * <p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?</p>\n","m.new_content":{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?","format":"org.matrix.custom.html","formatted_body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?","mimetype":"text/plain"},{"body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$hooITTFmHBLhOlyVu-1zrybc_UiS9Ik_YHO7BFZnyu0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?","mimetype":"text/plain"},{"body":" * <p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?</p>\n","mimetype":"text/html"}]},"ts":1671017512063,"senderName":"krosylight|out-until-Jan-6","senderId":"@krosylight:mozilla.org","id":"$nzAi6NTF0X6WWD65njSpP3Ua-_y-_xBdmMU_f1J1AmQ"},
{"content":{"body":"krosylight|out-until-Jan-6: ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@krosylight:mozilla.org\">krosylight|out-until-Jan-6</a>:","msgtype":"m.text"},"ts":1671017534410,"senderName":"mztea9281","senderId":"@mztea9281:matrix.org","id":"$CbJHk9CdeZSomIi7_DM1P0pzBmZIaw-V4ibfO9BIPjI"},
{"content":{"body":" * A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","format":"org.matrix.custom.html","formatted_body":" * <p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","m.new_content":{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","format":"org.matrix.custom.html","formatted_body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","mimetype":"text/plain"},{"body":"<p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$hooITTFmHBLhOlyVu-1zrybc_UiS9Ik_YHO7BFZnyu0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * A stream question:\n\n```js\nvar readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n```\n\nThe first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?","mimetype":"text/plain"},{"body":" * <p>A stream question:</p>\n<pre><code class=\"language-js\">var readableStream = new ReadableStream({\n  start(controller) {\n    controller.enqueue(new Uint8Array(40));\n  },\n  type: 'bytes'\n});\nvar [branch1, branch2] = readableStream.tee();\nreader1 = branch1.getReader({mode: 'byob'});\nconsole.log(await reader1.read(new Uint8Array(8)))\nreader2 = branch2.getReader({mode: 'byob'});\nconsole.log(await reader2.read(new Uint8Array(12)))\n</code></pre>\n<p>The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?</p>\n","mimetype":"text/html"}]},"ts":1671017544395,"senderName":"krosylight|out-until-Jan-6","senderId":"@krosylight:mozilla.org","id":"$UVa-HuarI_PgHHUIEyXLWi1oA-ua6k6YwsMWW6xrBXs"},
{"content":{"body":"Hmm, Blink somehow fails to get byte stream from tee() while Node.js has the same behavior with Gecko","msgtype":"m.text","org.matrix.msc1767.text":"Hmm, Blink somehow fails to get byte stream from tee() while Node.js has the same behavior with Gecko"},"ts":1671018045288,"senderName":"krosylight|out-until-Jan-6","senderId":"@krosylight:mozilla.org","id":"$v5HOj2amJOMFQ5quoG6jhtqO4BFD2hGPcTeuK8OxU5E"},
{"content":{"body":"Blink indeed is still working on implementing https://github.com/whatwg/streams/commit/cada8129edcc4803b2878a7a3f5e1d8325dc0c23","msgtype":"m.text","org.matrix.msc1767.text":"Blink indeed is still working on implementing https://github.com/whatwg/streams/commit/cada8129edcc4803b2878a7a3f5e1d8325dc0c23"},"ts":1671021812422,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Yzst3Q6RpHK-BwejLsj6lBRNjYC5g0tzBHQ3_unQcWU"},
{"content":{"body":"That behavior is expected because the source readableStream has already sliced out 8 bytes and handed that chunk to each branch","msgtype":"m.text","org.matrix.msc1767.text":"That behavior is expected because the source readableStream has already sliced out 8 bytes and handed that chunk to each branch"},"ts":1671021850754,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$l-aHrMVlPp8mDSC1z8zX5JTOOXsPU9zfxof1G3_9nIc"},
{"content":{"body":"If you want 4 more bytes you'd need to request them. (That will then slice another 4-byte chunk for each branch.)","msgtype":"m.text","org.matrix.msc1767.text":"If you want 4 more bytes you'd need to request them. (That will then slice another 4-byte chunk for each branch.)"},"ts":1671021872384,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$3BcQEB01f2uCrH5lJJvVHMs-pIGk0q5x5N5HVVMSguI"},
{"content":{"body":"https://github.com/whatwg/streams/pull/1145 would be helpful for that, as it would aggregate the 8-byte and 4-byte chunks for you","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/whatwg/streams/pull/1145 would be helpful for that, as it would aggregate the 8-byte and 4-byte chunks for you"},"ts":1671021936804,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$PuHMCll7KxiDfX69xyMOZHwzufGeJL5uZlHR6DIkW-c"},
{"content":{"body":"If Firefox is interested in implementing that I believe we can merge it.","msgtype":"m.text","org.matrix.msc1767.text":"If Firefox is interested in implementing that I believe we can merge it."},"ts":1671021979308,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$m1yIykYy7gpJslE-uvw92n-Y8-l07qqNQbvzhYHj3Lo"}
]