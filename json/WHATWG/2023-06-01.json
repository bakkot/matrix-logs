[
{"content":{"body":"is there a spec reference for prefetch using `Sec-Fetch-Dest: empty`? (cc Noam Rosenthal)","format":"org.matrix.custom.html","formatted_body":"is there a spec reference for prefetch using <code>Sec-Fetch-Dest: empty</code>? (cc <a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>)","msgtype":"m.text"},"ts":1685607969064,"senderName":"canadahonk","senderId":"@canada_goose:mozilla.org","id":"$4WDjzF1QgsFde9VvIjTME1NMgp6cHV2Ddubvy1fuBT8"},
{"content":{"body":" * is there a spec reference for prefetch using `Sec-Fetch-Dest: empty`? (cc Noam Rosenthal)\nit makes sense (to me) but not sure if there's an explicit reference which should be used","format":"org.matrix.custom.html","formatted_body":" * is there a spec reference for prefetch using <code>Sec-Fetch-Dest: empty</code>? (cc <a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>)<br>it makes sense (to me) but not sure if there's an explicit reference which should be used","m.new_content":{"body":"is there a spec reference for prefetch using `Sec-Fetch-Dest: empty`? (cc Noam Rosenthal)\nit makes sense (to me) but not sure if there's an explicit reference which should be used","format":"org.matrix.custom.html","formatted_body":"is there a spec reference for prefetch using <code>Sec-Fetch-Dest: empty</code>? (cc <a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>)<br>it makes sense (to me) but not sure if there's an explicit reference which should be used","msgtype":"m.text"},"m.relates_to":{"event_id":"$4WDjzF1QgsFde9VvIjTME1NMgp6cHV2Ddubvy1fuBT8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685608256995,"senderName":"canadahonk","senderId":"@canada_goose:mozilla.org","id":"$qZZsDlSraAgLrMcZroyNUidGsqlBzrEmW3DEvGUawc4"},
{"content":{"body":"canadahonk: yes! https://html.spec.whatwg.org/#link-type-prefetch:fetch-and-process-the-linked-resource (#3)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@canada_goose:mozilla.org\">canadahonk</a>: yes! https://html.spec.whatwg.org/#link-type-prefetch:fetch-and-process-the-linked-resource (#3)","msgtype":"m.text"},"ts":1685608267666,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uu-6739vhyidDXuwy5PPwNr7B3b2ioj634Jq5BcfiB4"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1685608362397,"senderName":"canadahonk","senderId":"@canada_goose:mozilla.org","id":"$-9Cgrrg7PikqYrcV742D1RLcytFLffTwCzamoxCcsE8"},
{"content":{"body":"Domenic: so when I click on any of the types/objects in https://webidl.spec.whatwg.org/#ArrayBufferView I end up in the same place as when I click those linked from https://webidl.spec.whatwg.org/#dfn-typed-array-type","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: so when I click on any of the types/objects in https://webidl.spec.whatwg.org/#ArrayBufferView I end up in the same place as when I click those linked from https://webidl.spec.whatwg.org/#dfn-typed-array-type","msgtype":"m.text"},"ts":1685621980255,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$kK7VxX_2z3PISuqyt3LGAneHL18oiEUyF8oqDYuoojc"},
{"content":{"body":"Domenic: so at least fundamentally it seems like Web IDL treats them as interchangeable already","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: so at least fundamentally it seems like Web IDL treats them as interchangeable already","msgtype":"m.text"},"ts":1685622047988,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iTAtz8lTgTTGRVPGl4x72pBh2Po48CeIh1ZJXx210x0"},
{"content":{"body":"I guess I should leave that as a comment in the PR. Also found https://w3c.github.io/IndexedDB/#convert-value-to-key thanks to dontcallmedom","msgtype":"m.text"},"ts":1685622125129,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9nHHuzEQjjhjWub3D_KRpR-ulab3G-LTzf67s4XQX1E"},
{"content":{"body":"annevk: yes. I don't think that changes my point that \"typed array types\" is a concept you reference when talking about types, whereas `Uint8Array` is a concept you reference when talking about either types or instances.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: yes. I don't think that changes my point that &quot;typed array types&quot; is a concept you reference when talking about types, whereas <code>Uint8Array</code> is a concept you reference when talking about either types or instances.","msgtype":"m.text"},"ts":1685622527839,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IG9IGBbC6oJR6SZL06twT7J0aTLZeCLXlaXB1-72Uac"},
{"content":{"body":"We say \"a `Uint8Array`\" as a shorthand for \"a `Uint8Array` instance\", and we say \"`Uint8Array`\" as a shorthand for \"the `Uint8Array` type\". But we don't say \"x is a typed array type\" when x is an instance. We can say \"x is a `ArrayBufferView` (instance)\" if we want though.","format":"org.matrix.custom.html","formatted_body":"We say &quot;a <code>Uint8Array</code>&quot; as a shorthand for &quot;a <code>Uint8Array</code> instance&quot;, and we say &quot;<code>Uint8Array</code>&quot; as a shorthand for &quot;the <code>Uint8Array</code> type&quot;. But we don't say &quot;x is a typed array type&quot; when x is an instance. We can say &quot;x is a <code>ArrayBufferView</code> (instance)&quot; if we want though.","msgtype":"m.text"},"ts":1685622614021,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$O6H8K8JzywPdoweZxr2CYha5yNtZua6_Rk95gJMrXUM"},
{"content":{"body":"Domenic: I'm pretty sure there's precedent for \"x is A or B\" and then using \"x\" in that sense, e.g., in DOM","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I'm pretty sure there's precedent for &quot;x is A or B&quot; and then using &quot;x&quot; in that sense, e.g., in DOM","msgtype":"m.text"},"ts":1685622711205,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gl4g_F9fzUbMPF4x6y93tDBh4DyVHPJB7wYeM6rcoRg"},
{"content":{"body":"Domenic: I guess you're saying there's some magic imbued by it being in Web IDL in this particular section, but that seems super weird","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I guess you're saying there's some magic imbued by it being in Web IDL in this particular section, but that seems super weird","msgtype":"m.text"},"ts":1685622731708,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$tw6cADQRR19q5MCEP0SN8spWIUuZw8igMCrY260YdT4"},
{"content":{"body":"I don't think there is when \"A\" or \"B\" have \"type\" in their <dfn> string.","msgtype":"m.text"},"ts":1685622742833,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$55pJMos4VcsrrzvZUXyhXUaq3QnUwGF-yHPTuhSjze8"},
{"content":{"body":"Okay, so the magic is imbued by \"type\", that seems even worse, if we ever had `MIMEType` or equivalent","format":"org.matrix.custom.html","formatted_body":"Okay, so the magic is imbued by &quot;type&quot;, that seems even worse, if we ever had <code>MIMEType</code> or equivalent","msgtype":"m.text"},"ts":1685622880907,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$3B-PVUjsZN2FSsdcLMGi5De5Uquy5GA4hJoYRmgbw9Y"},
{"content":{"body":"I don't mind upholding the fiction for now and no longer exporting these terms (apart from buffer source types they don't appear to be used elsewhere), but this doesn't seem like a tenable solution long term","msgtype":"m.text"},"ts":1685622929127,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IfOWW2Q0aE0QgEdEYwWJmVq5xtB2RKV1iT_MzzrDOf8"},
{"content":{"body":"I don't think it's magic, it's just staying consistent with how Web IDL is defining terms.","msgtype":"m.text"},"ts":1685622980285,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ZEamv5owuWN27vf9zjtSmc_AzWrLsBrFtpsAySpE7d0"},
{"content":{"body":"Like definitely if you're using \"type\" in some sense other than \"type in a formal type system\" (e.g., MIME type) then you don't need to follow this idea.","msgtype":"m.text"},"ts":1685623011226,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$e8QUFE97t8uvp8vVICH4z_j-lNxDODE7NJcONdhH86U"},
{"content":{"body":"ES has a similar distinction since it's also defining a formal type system","msgtype":"m.text"},"ts":1685623040897,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gXcIeydW70Nq-FS7x8FoQlu2asDQVxL8mnVRrQtUyzw"},
{"content":{"body":"https://tc39.es/ecma262/#sec-ecmascript-language-types-boolean-type vs. https://tc39.es/ecma262/#sec-terms-and-definitions-boolean-value","msgtype":"m.text"},"ts":1685623095640,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$n30ksq3rLjLdVDKWB65MjC4LpsLu2QDiPflYHLMdNzY"},
{"content":{"body":"and then informally \"a Boolean\" is shorthand for \"a Boolean value\", but you don't say \"true is a Boolean type\"","msgtype":"m.text"},"ts":1685623140338,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$8sTG0rJoM-YXux7OlmVVJRTVa4F5d07QdwNaj3yNsbM"}
]