[
{"content":{"body":"Hi all","msgtype":"m.text"},"ts":1634002840646,"senderName":"msmith12","senderId":"@msmith12:matrix.org","id":"$GiupMEGp1uBviv3G7c7GZsNqtAwejnJEHeESdfy4gFw"},
{"content":{"body":"Just sumbitted patch, hopefully its the start of something great","msgtype":"m.text"},"ts":1634002857017,"senderName":"msmith12","senderId":"@msmith12:matrix.org","id":"$uLx346KpGN6ue-4jZt1a5_kvRyzeW8_ZzqLwbHZS234"},
{"content":{"body":"Good morning annevk, some longish morning thought. I was thinking a lot about the fetch/timing integration. Maybe it was not right to associate the timing info with a response? A response is something that can be shared between fetches (service workers, cache), and would have different timing in each fetch context as some of the timing is measured before the response is created. Perhaps reporting the timing should be a method of the fetch instance rather than the response, and all the \"attaching\" is not necessary? Contemplating https://github.com/whatwg/fetch/issues/1208 and https://github.com/whatwg/fetch/issues/1215","format":"org.matrix.custom.html","formatted_body":"Good morning <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>, some longish morning thought. I was thinking a lot about the fetch/timing integration. Maybe it was not right to associate the timing info with a response? A response is something that can be shared between fetches (service workers, cache), and would have different timing in each fetch context as some of the timing is measured before the response is created. Perhaps reporting the timing should be a method of the fetch instance rather than the response, and all the &quot;attaching&quot; is not necessary? Contemplating https://github.com/whatwg/fetch/issues/1208 and https://github.com/whatwg/fetch/issues/1215","msgtype":"m.text"},"ts":1634018533258,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$EjTfbapMD4d4uJiyOoiSrct9IbABv9ED7Zn9h-T2H2w"},
{"content":{"body":"Noam Rosenthal: by the way, thanks much for doing that PR for proper Fetch integration into CSS","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: by the way, thanks much for doing that PR for proper Fetch integration into CSS","msgtype":"m.text"},"ts":1634018636713,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$FuJ9uYAJn1zyqgWz3DDoL8m7rkp9eDB7z8W0QIhjFis"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> Noam Rosenthal: by the way, thanks much for doing that PR for proper Fetch integration into CSS\n\nPleasure, it felt necessary ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24FuJ9uYAJn1zyqgWz3DDoL8m7rkp9eDB7z8W0QIhjFis\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: by the way, thanks much for doing that PR for proper Fetch integration into CSS</blockquote></mx-reply>Pleasure, it felt necessary","m.relates_to":{"m.in_reply_to":{"event_id":"$FuJ9uYAJn1zyqgWz3DDoL8m7rkp9eDB7z8W0QIhjFis"}},"msgtype":"m.text"},"ts":1634019096151,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$O7t_5RpO8y1xXiTtRVbtbGwRHtGUe9q--LssfF61UdE"},
{"content":{"body":"yeah it was kind of long overdue","msgtype":"m.text"},"ts":1634019133770,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$GwpHkkZAxFHlBDvyIYt6cAPDkDLofSn28GNZmcn4CCk"},
{"content":{"body":"and for any given spec, itâ€™s not trivial to figure how to call into the Fetch algorithms in the right way","msgtype":"m.text"},"ts":1634019194844,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$6MYB3A8XsLblhX_pZjwcDUSSHsWg7AlrSyhP4vkZqn0"},
{"content":{"body":"*for any given request scenario","msgtype":"m.text"},"ts":1634019281137,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$s-6EPBZGECe5HOFKqGpMKFumO5aW6hf2EUhEZtI-izc"},
{"content":{"body":"trying to figure it out for multiple specs... For the CSS one it's a bit of a one-size-fits all because there are no load/error events, but still there are issues with referrers and CORS etc.","msgtype":"m.text"},"ts":1634021255439,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$vOVGk1ZqT6jctu1cWL2UxEvESHue5S4zinSsaCi8EZc"},
{"content":{"body":"Noam Rosenthal: I guess conceptually you'd want fetch to return a response and timing info, but since the handshake is fetch(request) -> response it's hard to change that","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I guess conceptually you'd want fetch to return a response and timing info, but since the handshake is fetch(request) -&gt; response it's hard to change that","msgtype":"m.text"},"ts":1634022555512,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$lowmXdMO5z_HMXSTKJbyVEkKcQXE0YFjHOmrSxLCJEs"},
{"content":{"body":"Noam Rosenthal: though maybe it's changeable more easily now that we have callbacks","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: though maybe it's changeable more easily now that we have callbacks","msgtype":"m.text"},"ts":1634022569302,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$1KSDngLwlmK0nfzmiBHeS6JwaFjDvRRFyc-wjTeZRE4"},
{"content":{"body":"Noam Rosenthal: the other thing we probably still want to do at some point is FetchObserver (there's an issue if you search for this), which would also be a somewhat natural point to expose this on","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: the other thing we probably still want to do at some point is FetchObserver (there's an issue if you search for this), which would also be a somewhat natural point to expose this on","msgtype":"m.text"},"ts":1634022617777,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$wUn6dpjyDDCz2oBdGI36R0Bv-XJ2gMyL3Thjq8d3Zhk"},
{"content":{"body":"annevk: Fetch doesn't really return anything, but rather takes in callbacks that accept responses. I think that it could return some controller object that represents the fetch instance, which could have things like \"report resource timing\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Fetch doesn't really return anything, but rather takes in callbacks that accept responses. I think that it could return some controller object that represents the fetch instance, which could have things like &quot;report resource timing&quot;","msgtype":"m.text"},"ts":1634022777990,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$31E-wcdH6Ytav2mfcum11s3Ji4cqzRX2GpGEmiyZOJ0"},
{"content":{"body":"Noam Rosenthal: sure, I meant at a high-level, but yeah, at a concrete level I suspect we'd want to return the controller directly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: sure, I meant at a high-level, but yeah, at a concrete level I suspect we'd want to return the controller directly","msgtype":"m.text"},"ts":1634022826908,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$XKVpopvcqqkfQvaK-xwgor7th_Xu3q0cLOdWLzopTqM"},
{"content":{"body":"Noam Rosenthal: that would also give us a way to do abort more cleanly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: that would also give us a way to do abort more cleanly","msgtype":"m.text"},"ts":1634022842115,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Qvww-tq_pnmfVDXIwRTn_eMHNGN4vMcflZgRoNFgUfk"},
{"content":{"body":"Noam Rosenthal: that's probably what I'd want to start with","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: that's probably what I'd want to start with","msgtype":"m.text"},"ts":1634022851866,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$wG36Bnfx3DzaReOtjzmLiKByVEg_l0HHu4nt5Av7Czw"},
{"content":{"body":"it would be easy to hook that return value into the fetch caller for the purposes of resource timing","msgtype":"m.text"},"ts":1634022866443,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$SXYJodvb3odHvTAEhw0xfCA9ru0i6jzoqJiFwlYBVkY"},
{"content":{"body":"We'd still want to use the timings of the callbacks to expose the information, though","msgtype":"m.text"},"ts":1634022915980,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$sp0osda7_dRwc2mhg7Q87colGCbrk1QA7QdJdKvZrGc"},
{"content":{"body":"I guess the idea of FetchObserver is conceptually that? I'll check the issue","msgtype":"m.text"},"ts":1634022918176,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$YPApH2k5EJrGBiX35heqhjt5FMgZPbwontiGg19Dk7M"},
{"content":{"body":"yes, the callbacks will be there in the same way, but there will be no \"attaching timing info to a response\"","msgtype":"m.text"},"ts":1634022958484,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$wlaZBETzfs-t2AKI-zY1iYOnKw3cLiKfYVhj9avRZuc"},
{"content":{"body":"Noam Rosenthal: yeah, FetchObserver is/was for progress events and HTTP/2 push, but the latter died and there was never enough interest in the former (and it can be polyfilled using streams)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: yeah, FetchObserver is/was for progress events and HTTP/2 push, but the latter died and there was never enough interest in the former (and it can be polyfilled using streams)","msgtype":"m.text"},"ts":1634022960595,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$XEejvJSIgH4pV4f7MYhVlrhc3vVNuogH9I6w5HeGmNs"},
{"content":{"body":"Yeah, we'd attach it to the controller","msgtype":"m.text"},"ts":1634022982636,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4PrZTZ6_5swFVyEwhVN5slMAzeqno6Xl_4njn9ENj9g"},
{"content":{"body":"I think the controller will have access to the fetch params","msgtype":"m.text"},"ts":1634023005097,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$tQmIBCTLxa1rNMJsxoACN7cNwcACSGTtLGo9hurYWTw"},
{"content":{"body":"like a public facade for stuff you can do with things from the fetch params","msgtype":"m.text"},"ts":1634023038163,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uskV5rj5pcOYXTblG8rwFHueIjb14cDZJm--VfWkmUY"},
{"content":{"body":"Yeah, I think we'd want a facade of sorts (or asserts) to ensure specs don't do weird things","msgtype":"m.text"},"ts":1634023065856,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$TS1EfIxiej_iBKul5WbQlzn3225gNyMNkDvuNcJ0tp4"},
{"content":{"body":"Great, let me jot down something","msgtype":"m.text"},"ts":1634023084951,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xZk3yhu1D5m1KZxWm9Yg8uDo0EjaoYdoMAGObk2ETm4"},
{"content":{"body":"this would also make it possible to update resource timing entries after they're created, e.g. if in the future we would want to spec that a `video` resource timing entry is created when the response is ready but updated with its `responseEnd` when it's done","format":"org.matrix.custom.html","formatted_body":"this would also make it possible to update resource timing entries after they're created, e.g. if in the future we would want to spec that a <code>video</code> resource timing entry is created when the response is ready but updated with its <code>responseEnd</code> when it's done","msgtype":"m.text"},"ts":1634025101788,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$wjyMf0BHophJYIXIQKpBMqEPb5cC3r1slyblBLdlLvA"},
{"content":{"body":"Noam Rosenthal: I think in principle that should be possible either way, but this might make it easier","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I think in principle that should be possible either way, but this might make it easier","msgtype":"m.text"},"ts":1634026758752,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ZxteyqbeS3NMs5eqxmpYi5O1EmWOiHKmTDoxSavKuB4"},
{"content":{"body":"yea exactly","msgtype":"m.text"},"ts":1634026781982,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$z22bg3gXVCsZrSqbcttK6_6zq57G3dQIez6thCnFeS4"},
{"content":{"body":"Noam Rosenthal: now that you mention it though, how do we account for media elements currently? They always make range requests so they get responses quite quickly. The spec for them doesn't quite reflect this (or at least not in sufficient detail)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: now that you mention it though, how do we account for media elements currently? They always make range requests so they get responses quite quickly. The spec for them doesn't quite reflect this (or at least not in sufficient detail)","msgtype":"m.text"},"ts":1634026810931,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$mOvSY8OqMpD09TZn3YAfeYqDap4REISwS7rBYziyqZM"},
{"content":{"body":"I guess the current setup might end up with an entry per range request potentially?","msgtype":"m.text"},"ts":1634026840141,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$v8AlI4lij5U_0ZyCltzCZ0opDo-7p03YA1KzhnpIl3U"},
{"content":{"body":"annevk: currently in the spec, that integration is not done yet. I need to research how it's done in implementations. I wanted to have a good infrastructure with the simpler requests first","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: currently in the spec, that integration is not done yet. I need to research how it's done in implementations. I wanted to have a good infrastructure with the simpler requests first","msgtype":"m.text"},"ts":1634026966887,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$IDJ4YKkOarpKwo9gx2RkTr84Gk06KhoP2wa7XbY4Fh0"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/pull/1329","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: https://github.com/whatwg/fetch/pull/1329","msgtype":"m.text"},"ts":1634028010740,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$WBYpuOBThpcqXsD4YZUjY1bBGP1G1SbelLst_cqYq1E"},
{"content":{"body":"annevk: btw, I think also `cacheState` and `timing allow passed flag` should be associated with a fetch and not with a response, for the same reasons. It's not clear how they're forwarded from service workers or restored from cache","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: btw, I think also <code>cacheState</code> and <code>timing allow passed flag</code> should be associated with a fetch and not with a response, for the same reasons. It's not clear how they're forwarded from service workers or restored from cache","msgtype":"m.text"},"ts":1634028974801,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$WKdGG-Dbdw50RKrsJ4hRUyuOo330-3QITAMUOo8nDVM"},
{"content":{"body":"By restored from cache you mean restored from the Cache API? That might make sense. There's a general issue with that API not getting as much attention as it deserves.","msgtype":"m.text"},"ts":1634029117455,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$CwczvSOEIYVd5qKUTl4XXqX_8XUNxWzrR3X9a2tLE0Q"},
{"content":{"body":"annevk: I meant also from HTTP cache. It's not spec`ed how those responses are stored, and as far as the spec is concerned the response stored in the cache is a reference to the same one that's restored.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: I meant also from HTTP cache. It's not spec`ed how those responses are stored, and as far as the spec is concerned the response stored in the cache is a reference to the same one that's restored.","msgtype":"m.text"},"ts":1634030001207,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$0Y6cOyd_VDo6lu6Rviz3xMh4Y4CFTD4_0UXOjhqcfl4"}
]