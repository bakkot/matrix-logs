[
{"content":{"body":"Sounds like a plan","m.mentions":{},"m.relates_to":{"event_id":"$pM4f5271hghol5PMgoUtZMvIPxbzYVwMiOvqSnv_X0g","is_falling_back":true,"m.in_reply_to":{"event_id":"$pM4f5271hghol5PMgoUtZMvIPxbzYVwMiOvqSnv_X0g"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1706140920667,"senderName":"Panos Astithas","senderId":"@pastith:matrix.org","id":"$9-CS0iCHA1IFb7Dd95D9NVDoMNNavBSey3EMgpHNyIc"},
{"content":{"body":"I have one additional question about how the spec is written. In defining the dirty checkedness flag, it says: \"[the dirty checkedness flag] must be set to true whenever the user interacts with the control in a way that changes the checkedness\". However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of \"user\" that the spec is using, including both human and script users? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says \"(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)\", which makes me think the answer is the latter?","m.mentions":{},"msgtype":"m.text"},"ts":1706145429859,"senderName":"Ari Entlich","senderId":"@atrigent:matrix.org","id":"$MJ_NwnktNi1CoybZoaDTrFvJI5GET4u81phw0in_vko"},
{"content":{"body":" * I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: \"\\[the dirty checkedness flag\\] must be set to true whenever the user interacts with the control in a way that changes the checkedness\". However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of \"user\" that the spec is using, including both human and script users? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says \"(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)\", which makes me think the answer is the latter?","format":"org.matrix.custom.html","formatted_body":" * I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: &quot;[the dirty checkedness flag] must be set to true whenever the user interacts with the control in a way that changes the checkedness&quot;. However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of &quot;user&quot; that the spec is using, including both human and script users? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says &quot;(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)&quot;, which makes me think the answer is the latter?","m.mentions":{},"m.new_content":{"body":"I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: \"\\[the dirty checkedness flag\\] must be set to true whenever the user interacts with the control in a way that changes the checkedness\". However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of \"user\" that the spec is using, including both human and script users? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says \"(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)\", which makes me think the answer is the latter?","format":"org.matrix.custom.html","formatted_body":"I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: &quot;[the dirty checkedness flag] must be set to true whenever the user interacts with the control in a way that changes the checkedness&quot;. However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of &quot;user&quot; that the spec is using, including both human and script users? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says &quot;(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)&quot;, which makes me think the answer is the latter?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MJ_NwnktNi1CoybZoaDTrFvJI5GET4u81phw0in_vko","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1706146267668,"senderName":"Ari Entlich","senderId":"@atrigent:matrix.org","id":"$ci62SMP3FgTV_chCS65RMg7dAXZYfbCeu7OZPDdlitI"},
{"content":{"body":" * I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: \"\\[the dirty checkedness flag\\] must be set to true whenever the user interacts with the control in a way that changes the checkedness\". However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of \"user\" that the spec is using, including both human and script \"users\"? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says \"(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)\", which makes me think the answer is the latter?","format":"org.matrix.custom.html","formatted_body":" * I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: &quot;[the dirty checkedness flag] must be set to true whenever the user interacts with the control in a way that changes the checkedness&quot;. However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of &quot;user&quot; that the spec is using, including both human and script &quot;users&quot;? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says &quot;(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)&quot;, which makes me think the answer is the latter?","m.mentions":{},"m.new_content":{"body":"I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: \"\\[the dirty checkedness flag\\] must be set to true whenever the user interacts with the control in a way that changes the checkedness\". However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of \"user\" that the spec is using, including both human and script \"users\"? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says \"(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)\", which makes me think the answer is the latter?","format":"org.matrix.custom.html","formatted_body":"I have one additional question about how the spec is written. To define the dirty checkedness flag, it says: &quot;[the dirty checkedness flag] must be set to true whenever the user interacts with the control in a way that changes the checkedness&quot;. However, elsewhere it states that setting the checked IDL attribute also sets the flag. Is this some special definition of &quot;user&quot; that the spec is using, including both human and script &quot;users&quot;? Or is it just incorrect/incomplete/ambiguous? The definition of the dirty value flag includes similar language but also says &quot;(It is also set to true when the value is programmatically changed, as described in the definition of the value IDL attribute.)&quot;, which makes me think the answer is the latter?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MJ_NwnktNi1CoybZoaDTrFvJI5GET4u81phw0in_vko","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1706150335223,"senderName":"Ari Entlich","senderId":"@atrigent:matrix.org","id":"$59Zkv6QNj__a2jdNndrNbnFl484T91MOsCQ0kpk5XMU"},
{"content":{"body":"> <@akaster:serenityos.org> Hmm. For https://github.com/whatwg/html/pull/10085 how should I properly refer to `NavigationHistoryEntry`, which is defined in browsing-the-web, in Location, which is part of nav-history-apis?\n\nThe multipage filenames do not have any impact, really :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$J2xEcm38_Wo3_k3bOMjTFxQtF0wtfLs7RCG5uMBDvwc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@akaster:serenityos.org\">@akaster:serenityos.org</a><br>Hmm. For https://github.com/whatwg/html/pull/10085 how should I properly refer to `NavigationHistoryEntry`, which is defined in browsing-the-web, in Location, which is part of nav-history-apis?</blockquote></mx-reply>The multipage filenames do not have any impact, really :)","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$J2xEcm38_Wo3_k3bOMjTFxQtF0wtfLs7RCG5uMBDvwc"}},"msgtype":"m.text"},"ts":1706150335225,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$V7DG6JcIJZYL7HZl7Wd5xQ7CQOr6KLKxMdsEHuHsm2A"},
{"content":{"body":"Ari Entlich: those are complimentary requirements.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@atrigent:matrix.org\">Ari Entlich</a>: those are complimentary requirements.","m.mentions":{"user_ids":["@atrigent:matrix.org"]},"msgtype":"m.text"},"ts":1706164341635,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vfYtA-FxrZ5HSG8Q0VhoXOBZrJpWyiWBBK_SQWODq28"},
{"content":{"body":"It doesn't say \"must be set to true *only* when the user interacts\".","format":"org.matrix.custom.html","formatted_body":"It doesn't say \"must be set to true <em>only</em> when the user interacts\".","m.mentions":{},"msgtype":"m.text"},"ts":1706164555331,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$O8WGF-yOlMV5pCbaT9nMtyayJvnuZPFFzF2TRQTjZhg"},
{"content":{"body":"annevk: with URLSearchParams no longer being serializable, we have a problem for such objects stored in an indexeddb. The spec afaict assumes deserialization steps will be defined (step 22 .. 24 in https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize )","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: with URLSearchParams no longer being serializable, we have a problem for such objects stored in an indexeddb. The spec afaict assumes deserialization steps will be defined (step 22 .. 24 in https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize )","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1706170538860,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$jkfxFjSYSrqFA0PGIujW9do0IY_COgPSqnyi9wx1oMI"},
{"content":{"body":"annevk: options: throw (data loss), {} (data loss), serialize to a string, serialize to a plain object, serialize to URLSearchParams","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: options: throw (data loss), {} (data loss), serialize to a string, serialize to a plain object, serialize to URLSearchParams","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1706170691511,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$1QwR_EbsdAKulC9flIPyGQmfchXrQNK1iSWIPV_rzQM"},
{"content":{"body":"I think deserializing to URLSearchParams is best. At some point in the future we can throw or return null instead","m.mentions":{},"msgtype":"m.text"},"ts":1706170955640,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$qzgdNH1QIpY6RpehpZDsBkGo-jMGeT8e3sv0mp040Fk"},
{"content":{"body":"It never was serializable? But maybe it was in Gecko? In any event, throwing or continuing to return the object seems okay I suppose. But that's not really a web platform problem as the web platform didn't support serialization to begin with.","m.mentions":{},"msgtype":"m.text"},"ts":1706171718445,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SHn6ypIyPMxcCM22O_DrpKoJ2XKsvTBmoifKoP-2Wnk"},
{"content":{"body":" * Ari Entlich: those are complementary requirements.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@atrigent:matrix.org\">Ari Entlich</a>: those are complementary requirements.","m.mentions":{},"m.new_content":{"body":"Ari Entlich: those are complementary requirements.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@atrigent:matrix.org\">Ari Entlich</a>: those are complementary requirements.","m.mentions":{"user_ids":["@atrigent:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$vfYtA-FxrZ5HSG8Q0VhoXOBZrJpWyiWBBK_SQWODq28","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1706171805468,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$B6n8guXgp-OQZZVzrx2XRAuD22OdM2-7h89DoTnpVRs"},
{"content":{"body":"annevk: it was in Gecko","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: it was in Gecko","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1706171963393,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$VS_IITymG1TpvolDUmNO1717gisJn0Ucsru500SjV84"},
{"content":{"body":"how did gecko serialize? toString?","m.mentions":{},"msgtype":"m.text"},"ts":1706175445011,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$h3BXS02KBStqN7mYWXdqNDN2cC3R5paM1-HW2c6Ajbk"},
{"content":{"body":"TabAtkins: heya, just in case you didn't see my GitHub ping: https://github.com/whatwg/url/pull/812","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: heya, just in case you didn't see my GitHub ping: https://github.com/whatwg/url/pull/812","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"ts":1706175538856,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$LbQRHPFkgAwAMeysFDXUn7mhOyoCpZe1Wsdf29mUks8"},
{"content":{"body":"freddy: to something that deserializes back to a URLSearchParams object","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: to something that deserializes back to a URLSearchParams object","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"msgtype":"m.text"},"ts":1706176398235,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$2LG1X03eoy1jQMg7X8PW1lhujVsTmIcDr-Ng7PgA_XA"},
{"content":{"body":"oh, so a custom serialization that wasn't fully exposed in itself, just as observable behavior. Gotcha :)","m.mentions":{},"msgtype":"m.text"},"ts":1706176445680,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$DqhtcYAjAsyi45Y7RVxJ_JWK8pnZ2zrccxcaubh-zEg"}
]