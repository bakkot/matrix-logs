[
{"content":{"body":"evilpie: https://fetch.spec.whatwg.org/#http-x-content-type-options","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: https://fetch.spec.whatwg.org/#http-x-content-type-options","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1761733581452,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$-Tqdx1KGq8AAAegge54FnTaheGccmzSB73PZ88JXAsM"},
{"content":{"body":"evilpie: what do browsers do with nosniff for document loads?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: what do browsers do with nosniff for document loads?","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1761733861938,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$shc7qt3JsV98dtUtVmbAeV9hVPVMBFuh7wTno8JgGL8"},
{"content":{"body":"https://mimesniff.spec.whatwg.org/#mime-type-sniffing-algorithm","msgtype":"m.text"},"ts":1761734103670,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$zv_fKNCqVvi3gOa2uMyMOkWlqvMx4gFoRbyiswp55SM"},
{"content":{"body":"> <@zcorpan:mozilla.org> evilpie: what do browsers do with nosniff for document loads?\n\nNot sniff HTML when the mimetype is missing or */* etc","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$shc7qt3JsV98dtUtVmbAeV9hVPVMBFuh7wTno8JgGL8?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br /><a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: what do browsers do with nosniff for document loads?</blockquote></mx-reply>Not sniff HTML when the mimetype is missing or <em>/</em> etc","m.relates_to":{"m.in_reply_to":{"event_id":"$shc7qt3JsV98dtUtVmbAeV9hVPVMBFuh7wTno8JgGL8"}},"msgtype":"m.text"},"ts":1761734131547,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$Ia9MsHXSNpctTi8DxwCAEy3U6dZNascYZlSpMeRy4NA"},
{"content":{"body":"* Not sniff HTML when the mimetype is missing or \n`*/*` etc","m.new_content":{"body":"> <@zcorpan:mozilla.org> evilpie: what do browsers do with nosniff for document loads?\n\nNot sniff HTML when the mimetype is missing or \n`*/*` etc","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$shc7qt3JsV98dtUtVmbAeV9hVPVMBFuh7wTno8JgGL8?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a><br /><a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: what do browsers do with nosniff for document loads?</blockquote></mx-reply>Not sniff HTML when the mimetype is missing or<br /><code>*/*</code> etc","msgtype":"m.text"},"m.relates_to":{"event_id":"$Ia9MsHXSNpctTi8DxwCAEy3U6dZNascYZlSpMeRy4NA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761734163051,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$OYyY0an0De__UyUSg1KRzaKwwcu7c9zW2z1tV5QFEYc"},
{"content":{"body":"evilpie: https://mimesniff.spec.whatwg.org/#no-sniff-flag:~:text=A%20no%2Dsniff%20flag%2C%20which%20defaults%20to%20set%20if%20the%20user%20agent%20does%20not%20wish%20to%20perform%20sniffing%20on%20the%20resource%20and%20unset%20otherwise%2E seems to suggest it's a pref or so, not based on X-Content-Type-Options?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: https://mimesniff.spec.whatwg.org/#no-sniff-flag:~:text=A%20no%2Dsniff%20flag%2C%20which%20defaults%20to%20set%20if%20the%20user%20agent%20does%20not%20wish%20to%20perform%20sniffing%20on%20the%20resource%20and%20unset%20otherwise%2E seems to suggest it's a pref or so, not based on X-Content-Type-Options?","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1761734292732,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$n2lbB06Kj4GJarcDjRar4uCTrFexKbs9L3EmKB8xYUY"},
{"content":{"body":"I am not sure how mime sniff is integrated with e.g. HTML, but that is the only thing that makes sense. And how it works in browsers.","msgtype":"m.text"},"ts":1761734830585,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$y3LPYEpI3Cv5K3OhBAiRD7DKA4mP-evUuWVG0GHHvBk"},
{"content":{"body":"https://github.com/whatwg/mimesniff/issues/98","m.mentions":{},"msgtype":"m.text"},"ts":1761735023115,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$7_1VqPyCK6pGfiOnIunr6OxcJ9sEE_owdlHfKNsbpGs"},
{"content":{"body":"smaug: can you take another look at https://github.com/whatwg/dom/pull/1268? Doesn't have to happen before TPAC I suppose, but it would be nice to get these Trusted Types integration points landed. cc Luke Warlow ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: can you take another look at https://github.com/whatwg/dom/pull/1268? Doesn't have to happen before TPAC I suppose, but it would be nice to get these Trusted Types integration points landed. cc <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>","m.mentions":{"user_ids":["@smaug:mozilla.org","@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1761744429122,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ku0E6JcST8sPJVCMX_dfNOgmtXjVvJPn6PdFM9p7oIY"},
{"content":{"body":"sure, tomorrow (when there is a TT meeting anyhow)","m.mentions":{},"msgtype":"m.text"},"ts":1761744474224,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$2qR7DHv8InZ6W6N7DeGAnYApgpqSA6846N3Ug_DNa0I"},
{"content":{"body":"Is that a Mozilla-specific meeting? If not I might be interested in joining.","m.mentions":{},"msgtype":"m.text"},"ts":1761744555544,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$WG-SNpfHU39m2CCtsd_v7CL0jns50G0LiBFdqTCoKCE"},
{"content":{"body":"Fwiw I've just landed a WebKit PR so we now pass all of the subtests for this PR, likewise so does Firefox, Chromium (experimentally) and even Servo.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Ku0E6JcST8sPJVCMX_dfNOgmtXjVvJPn6PdFM9p7oIY"}},"msgtype":"m.text"},"ts":1761744583595,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$lvRnxSPvnyxIOPS31pups2p-A8rJuv_mO1Kr6IR_W10"},
{"content":{"body":"* Fwiw I've just landed a WebKit PR so we now pass all of the subtests for this PR, likewise so does Firefox, Chromium (experimentally) and even Servo.\n\nhttps://wpt.fyi/results/trusted-types/set-attributes-mutations-in-callback.tentative.html?label=master&label=experimental&product=chrome&product=firefox&product=safari&product=servo&aligned","m.mentions":{},"m.new_content":{"body":"Fwiw I've just landed a WebKit PR so we now pass all of the subtests for this PR, likewise so does Firefox, Chromium (experimentally) and even Servo.\n\nhttps://wpt.fyi/results/trusted-types/set-attributes-mutations-in-callback.tentative.html?label=master&label=experimental&product=chrome&product=firefox&product=safari&product=servo&aligned","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$lvRnxSPvnyxIOPS31pups2p-A8rJuv_mO1Kr6IR_W10","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761744603677,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$hqNXf72YqSjJtT8yd36OjRSyKXZUbtHVlSuYuXbnVao"},
{"content":{"body":"> <@zcorpan:mozilla.org> https://github.com/whatwg/mimesniff/issues/98\n\nMDN is also wrong (only mentions script/style), I will file an issue.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$7_1VqPyCK6pGfiOnIunr6OxcJ9sEE_owdlHfKNsbpGs?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br />https://github.com/whatwg/mimesniff/issues/98</blockquote></mx-reply>MDN is also wrong (only mentions script/style), I will file an issue.","m.relates_to":{"m.in_reply_to":{"event_id":"$7_1VqPyCK6pGfiOnIunr6OxcJ9sEE_owdlHfKNsbpGs"}},"msgtype":"m.text"},"ts":1761745312145,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$ARXYjSvmmHzIT4AdgqcSMmU6PtbscjJfo70q7L77D4c"},
{"content":{"body":"annevk: it is Moz, Google, Igalia. It has been about the implementation ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: it is Moz, Google, Igalia. It has been about the implementation","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1761745341115,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$h9jxSeBMxZCUWo2OjtA66PzIpvBPqYQiF0W5zH0flr4"},
{"content":{"body":"annevk: btw, I think https://github.com/whatwg/html/issues/11821#issuecomment-3434680157 will need feedback especially from Apple.  ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: btw, I think https://github.com/whatwg/html/issues/11821#issuecomment-3434680157 will need feedback especially from Apple.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1761745875349,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$ZIhK2oZlvfxKKgg7JFKxZBwgbu1duKvB1I9pBPW4hls"},
{"content":{"body":"(not that I see even a webkit s-p for that. Andreu Botella )","format":"org.matrix.custom.html","formatted_body":"(not that I see even a webkit s-p for that. <a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a> )","m.mentions":{"user_ids":["@abotella:igalia.com"]},"msgtype":"m.text"},"ts":1761745928024,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$jPNfx-QD0bWZz4U57IJmWbK2eq-YzKDfqcz9Gt_Y-y0"},
{"content":{"body":"I was going to open one, hadn't gotten around to it though","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$jPNfx-QD0bWZz4U57IJmWbK2eq-YzKDfqcz9Gt_Y-y0"}},"msgtype":"m.text"},"ts":1761746101076,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$6Xu8N67iv-w30k3Ffu9LkGVSHkLmxlWHXh-Cl1ZotSM"},
{"content":{"body":"will do today","m.mentions":{},"msgtype":"m.text"},"ts":1761746103718,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$XYsDEsWdt44AC-96tUQ2ov8oplVZDkj6ZL_4QCg9s9U"},
{"content":{"body":"smaug: the story for how this should work for events keeps changing and it also seems some server-side implementations have already shipped? I kinda lost the plot, but I've the feeling nobody is particularly enthusiastic about the complexity it adds to engines...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: the story for how this should work for events keeps changing and it also seems some server-side implementations have already shipped? I kinda lost the plot, but I've the feeling nobody is particularly enthusiastic about the complexity it adds to engines...","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1761746211654,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$7kabA-xk51E12LddHh69kV3DknuSNEpp_bc6CaWUKK0"},
{"content":{"body":"I haven't heard anything from webkit side. (this is not Shadowrealm 🙂 )","m.mentions":{},"msgtype":"m.text"},"ts":1761746271499,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$SDDOrJmMmOM897P-H9ifFKROZ-7pbZtnAdVoY_vIWmw"},
{"content":{"body":"AsyncContext is complicated, and the integration with web APIs seems to be a bit inconsistent ","m.mentions":{},"msgtype":"m.text"},"ts":1761746321117,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$-CyJXDJU3veXd9RVKSDNktobWAUJ9NThvFFAc3a5lZI"},
{"content":{"body":"It's been discussed a couple times at TPAC (though as a side chat) and at Web Engines Hackfest.","m.mentions":{},"msgtype":"m.text"},"ts":1761746330490,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rVizHFEH0yp2UEFp_OiQOz4nzBteKTpwU1EOLuOeqDk"},
{"content":{"body":"The main concern I see is that for web APIs each API designer has to be aware of it and make it work well (at least for one design iteration of AsyncContext), which seems unlikely to happen. People already can't hold their promises and events straight...","m.mentions":{},"msgtype":"m.text"},"ts":1761746395429,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wrxCBo7rIJ5p725EkCrdiIf8xXOatXKBtM_YoQ3Zrig"},
{"content":{"body":"(small rant, not directed to anybody in particular) What's difficult about that proposal is that web developers are excited about some more \"core\" parts of the proposal, and a lot do not care about what we end up doing for a lot of web APIs. It's quite unfortunate that large part of the complexity comes from things that we need to figure out an answer to, but which answer exactly we pick doesn't matter for most people.","m.mentions":{},"msgtype":"m.text"},"ts":1761746447166,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$G6r5imLp_--NqvstEMZ25EIHUyIjg4VmeeyQDV56XrY"},
{"content":{"body":"async/await and setTimeout&friends would probably make 90% of devs that ask for the proposal satisfied 😅","m.mentions":{},"msgtype":"m.text"},"ts":1761746483138,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$SQztn3cY6IpXOLLkRzpaVJXjGCKZVU08ZSudv0F9PcY"},
{"content":{"body":"Which is btw the answer to events has changed over time","m.mentions":{},"msgtype":"m.text"},"ts":1761746510867,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$4VWqAkoGQWZYEkV5RPOiKI2zp8QvBe0Kj_gnInVAt3k"},
{"content":{"body":"If we can find a solution that solves it just for those and makes extensions possible going forward, I'd expect you'd get support.","m.mentions":{},"msgtype":"m.text"},"ts":1761746517726,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QsI9WcZRBYNGQZ3ECT3oo270Uzoc8FXTaIVK3pj6zqE"},
{"content":{"body":"* Which is btw why the answer to events has changed over time","m.mentions":{},"m.new_content":{"body":"Which is btw why the answer to events has changed over time","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4VWqAkoGQWZYEkV5RPOiKI2zp8QvBe0Kj_gnInVAt3k","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761746518571,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tZ9fyco4bF9EGCmgcbIXFccL2w-1YFbLkI4ZBso15Os"},
{"content":{"body":"Well, I don't see a realistic way to make extensions possible going forward, because those might change existing behavior","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$QsI9WcZRBYNGQZ3ECT3oo270Uzoc8FXTaIVK3pj6zqE"}},"msgtype":"m.text"},"ts":1761746612986,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$cAbcxog770aY-wQVwFDBHukNtrQr4Y3YOst07l8GC7I"},
{"content":{"body":"Yeah extensions cannot look like \"oh this API now will start automatically propagating context\"","m.mentions":{},"msgtype":"m.text"},"ts":1761746662913,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$veX-NuutfimfNxxt7s54fAycRPJ_95mgyzIh445V0XI"},
{"content":{"body":"We did discuss having something like `event.otherContext()`. I could also imagine something like `new API({propagateContext: true})`.","format":"org.matrix.custom.html","formatted_body":"We did discuss having something like <code>event.otherContext()</code>. I could also imagine something like <code>new API({propagateContext: true})</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1761746906307,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wPKq0dp7EptoK0MQTvjyL7B9P2m-vbLu-ZCKAdP2iEI"},
{"content":{"body":"(I am still, as always, worried about memory leaks on web pages)","m.mentions":{},"msgtype":"m.text"},"ts":1761747136468,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$sz-RnO1Lx2L5XQPLtaFUdUZilv3Jspyxw5OZqqa-jeI"},
{"content":{"body":"Hi I'm implementing WHATWG specs in Zig, I'm separating each spec out into its own library. However, I'm seeing cyclic dependencies between specs. For example, Encoding defined types that depend on API defined in the Streams spec (i.e. TextEncoderStream). This creates a cycle of depencies where the Streams spec depends on the DOM spec and the DOM spec depends on Encoding and apparently Encoding depends on Streams.\n\nAre the specs intended to be cycle free?","m.mentions":{},"msgtype":"m.text"},"ts":1761750462665,"senderName":"Brian Cardarella","senderId":"@bcardarella:matrix.org","id":"$88FbA2El-ZE9mFsVxUHzaXd7DVHSlmVtS8AbEsO7ajc"},
{"content":{"body":"No, the specs are all very interdependent, especially for concepts (aka types). Some things you can probably create API surfaces to integrate but others such as types you might need a shared library definition for them all?","msgtype":"m.text"},"ts":1761751025905,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$uE4rViMQcJDMbINV0PPmAoNk3JFH0-uw5WRhT9S3k4k"},
{"content":{"body":"That's something I'm considerig, I'm also thinking of just breaking out the speciifc APIs that introduce cycles into their own lib. So for the Encoding <-> Streams issue having an EcodingStreams library. That should solve the issue.","m.mentions":{},"msgtype":"m.text"},"ts":1761751168623,"senderName":"Brian Cardarella","senderId":"@bcardarella:matrix.org","id":"$4_Bcpsu30TgXVE7uG-RnMcp4ysqdi9HEx2PHXXVg2Wo"},
{"content":{"body":"* That's something I'm considerig, I'm also thinking of just breaking out the speciifc APIs that introduce cycles into their own lib. So for the Encoding \\<-> Streams issue having an EncodingStreams library. That should solve the issue.","format":"org.matrix.custom.html","formatted_body":"* That&#39;s something I&#39;m considerig, I&#39;m also thinking of just breaking out the speciifc APIs that introduce cycles into their own lib. So for the Encoding &lt;-&gt; Streams issue having an EncodingStreams library. That should solve the issue.","m.mentions":{},"m.new_content":{"body":"That's something I'm considerig, I'm also thinking of just breaking out the speciifc APIs that introduce cycles into their own lib. So for the Encoding \\<-> Streams issue having an EncodingStreams library. That should solve the issue.","format":"org.matrix.custom.html","formatted_body":"That&#39;s something I&#39;m considerig, I&#39;m also thinking of just breaking out the speciifc APIs that introduce cycles into their own lib. So for the Encoding &lt;-&gt; Streams issue having an EncodingStreams library. That should solve the issue.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4_Bcpsu30TgXVE7uG-RnMcp4ysqdi9HEx2PHXXVg2Wo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761751204051,"senderName":"Brian Cardarella","senderId":"@bcardarella:matrix.org","id":"$F5WvHVV8qUezxSYjAPIbgZMR3tEge1haEjytvoiFu6Q"},
{"content":{"body":"I think if there's a clearly better way to organize the types we'd certainly welcome such an improvement, but sometimes it's hard to avoid. Most browser engines are kinda monolithic and you'll find that reflected in specifications. But again, I do think we should try to improve that whenever it's possible.","m.mentions":{},"msgtype":"m.text"},"ts":1761752569490,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gLPMsm7htHGA5oPV3MhWL_jk-0CgCMXLe-nKr1GVL64"},
{"content":{"body":"annevk: yeah I understand, these have been around for 20+ years. I've been making heavy use of AI to help separate the concerns into isolated libraries and for the most part it does seem to be working.\n\nOn another note, it would be fantastic if there was a way to get markdown specs instead of the html rendered ones for the purposes of LLM token consumption. I've gone through the effort of doing that for myself here: https://github.com/zig-whatwg/specs/tree/main/whatwg but it would be nice if there was a markdown ACCEPT header or .md extension on the whatwg site","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: yeah I understand, these have been around for 20+ years. I've been making heavy use of AI to help separate the concerns into isolated libraries and for the most part it does seem to be working.</p>\n<p>On another note, it would be fantastic if there was a way to get markdown specs instead of the html rendered ones for the purposes of LLM token consumption. I've gone through the effort of doing that for myself here: https://github.com/zig-whatwg/specs/tree/main/whatwg but it would be nice if there was a markdown ACCEPT header or .md extension on the whatwg site</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1761752998187,"senderName":"Brian Cardarella","senderId":"@bcardarella:matrix.org","id":"$y7Ekj2jbG5yIo9tFN6L4aofQwO7DrO2zMkWaEwvAAkA"},
{"content":{"body":"You could get the .bs file from github?","m.mentions":{},"msgtype":"m.text"},"ts":1761753162116,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$KeyGrRKwmxNv5gHa6ZzZc8yGZhDR2mgrm2wy4H8aYJg"},
{"content":{"body":"jmdyck: aren't those still just in a markup? For certain specs like DOM or HTML that are very large the additional tokens exhausts the context window pretty quickly","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: aren't those still just in a markup? For certain specs like DOM or HTML that are very large the additional tokens exhausts the context window pretty quickly","m.mentions":{"user_ids":["@jmdyck:matrix.org"]},"msgtype":"m.text"},"ts":1761753248956,"senderName":"Brian Cardarella","senderId":"@bcardarella:matrix.org","id":"$2ay-HWqmKs31SFE14DXxe3lRBFCK6l4ccuBYSHhF1dc"}
]