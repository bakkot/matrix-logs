[
{"content":{"body":"Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.","format":"org.matrix.custom.html","formatted_body":"Yeah, the plan is to obsolete <code>embed</code>/<code>object</code>. <code>object</code> in particular has some capabilities that are unique to it still, but we're chipping away at those.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.","mimetype":"text/plain"},{"body":"Yeah, the plan is to obsolete <code>embed</code>/<code>object</code>. <code>object</code> in particular has some capabilities that are unique to it still, but we're chipping away at those.","mimetype":"text/html"}]},"ts":1649226957122,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$S9ckiv_jFRLecWwfKbz89684F-1Bqgv2e75UJAqnaDo"},
{"content":{"body":"GitHub's \"smart URL paste\" continues to trip me up, I keep forgetting it's there and ending up with a result I don't want","msgtype":"m.text","org.matrix.msc1767.text":"GitHub's \"smart URL paste\" continues to trip me up, I keep forgetting it's there and ending up with a result I don't want"},"ts":1649232171320,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$bi06bA3evm8VBAynnn0h-QxTtXS8xUmatGx1FCm_nqQ"},
{"content":{"body":"And I kinda worry that if I learn it I'll expect it in other places and run into trouble there","msgtype":"m.text","org.matrix.msc1767.text":"And I kinda worry that if I learn it I'll expect it in other places and run into trouble there"},"ts":1649232198944,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$c62PiW2akXBs-bo3TkSsb9H8sYASPSxBzZpThdpDxQY"},
{"content":{"body":"I'm looking for something that resets a whole document, including expando attributes etc. - I suppose I could emulate this by serializing+parsing the whole document or by cloning it. But, ideally, I'm looking for existing patterns for this \"reset\" or at least individual puzzle pieces. It seems to me that even the puzzle piece that removes \"all\" event handlers from an element seems to be a \"no\" already :/","msgtype":"m.text","org.matrix.msc1767.text":"I'm looking for something that resets a whole document, including expando attributes etc. - I suppose I could emulate this by serializing+parsing the whole document or by cloning it. But, ideally, I'm looking for existing patterns for this \"reset\" or at least individual puzzle pieces. It seems to me that even the puzzle piece that removes \"all\" event handlers from an element seems to be a \"no\" already :/"},"ts":1649237037117,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$4eDx54tbNW2yy_A1SFT3Z5A4Bp91GNwL5R-ty7XDLRM"},
{"content":{"body":"freddy: \"document open steps\" does a bunch of that","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: &quot;document open steps&quot; does a bunch of that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"freddy: \"document open steps\" does a bunch of that","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: &quot;document open steps&quot; does a bunch of that","mimetype":"text/html"}]},"ts":1649246043550,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DA_N1qphm5fncCqRoYIz7tPeDkZO4az1CfKcN-uGaOc"},
{"content":{"body":"I _did_ see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it \"replace the document with a new object\" sounded to me as if the corresponding element-tree would be gone?!","format":"org.matrix.custom.html","formatted_body":"I <em>did</em> see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it &quot;replace the document with a new object&quot; sounded to me as if the corresponding element-tree would be gone?!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I _did_ see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it \"replace the document with a new object\" sounded to me as if the corresponding element-tree would be gone?!","mimetype":"text/plain"},{"body":"I <em>did</em> see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it &quot;replace the document with a new object&quot; sounded to me as if the corresponding element-tree would be gone?!","mimetype":"text/html"}]},"ts":1649246120364,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$szIQh6M4hTy0VmaeQXywrx7ii4oW3MH44OjXBPiW7EI"},
{"content":{"body":"OK, I realize I only read the non-normative stuff (I feel bad now)","msgtype":"m.text","org.matrix.msc1767.text":"OK, I realize I only read the non-normative stuff (I feel bad now)"},"ts":1649246163246,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$4U7wKMw8dCzEESx00PBZT5QHuxBJfyS_vbrLIFt-v2o"},
{"content":{"body":" * OK, I realize I only read the non-normative stuff (I feel bad now)","m.new_content":{"body":"OK, I realize I only read the non-normative stuff (I feel bad now)","msgtype":"m.text","org.matrix.msc1767.text":"OK, I realize I only read the non-normative stuff (I feel bad now)"},"m.relates_to":{"event_id":"$4U7wKMw8dCzEESx00PBZT5QHuxBJfyS_vbrLIFt-v2o","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * OK, I realize I only read the non-normative stuff (I feel bad now)"},"ts":1649246168438,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$VIoHTmqCia_GY4QxBmxRdawe9sW6a10IA5E866imRzg"},
{"content":{"body":"freddy: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"freddy: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are","mimetype":"text/html"}]},"ts":1649246256122,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$rK_TbhyK843UyPfBykbPoxMoLUMGWtumTanSKdWuG64"},
{"content":{"body":"But we do have primitives such as \"remove all listeners\" in the platform, but they're not widely available","msgtype":"m.text","org.matrix.msc1767.text":"But we do have primitives such as \"remove all listeners\" in the platform, but they're not widely available"},"ts":1649246293194,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4ep03kfQxjI29hZ7QO2r0NHDcWZ6F5rWTq63M737ePs"},
{"content":{"body":"Yeah, so the thing is that there's an apparent lack of \"inside knowledge\" from the sanitizer folks (freddy, otherdaniel, koto) about the potential state that could be attached to the document. The lack of knowledge lead to a security-conservative \"we want it all gone\" design goal. Similar to the other security-conservative choices we made (can't just a string-to-string API and hope for the best, can't parse a string with implicit/wrong context element, etc.).","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, so the thing is that there's an apparent lack of \"inside knowledge\" from the sanitizer folks (freddy, otherdaniel, koto) about the potential state that could be attached to the document. The lack of knowledge lead to a security-conservative \"we want it all gone\" design goal. Similar to the other security-conservative choices we made (can't just a string-to-string API and hope for the best, can't parse a string with implicit/wrong context element, etc.)."},"ts":1649246381350,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$2wRBAUcJcKB37DB5wYvzANnJc5gL55T5IcnpcRJ8phY"},
{"content":{"body":"So, one ideas is that I'm trying to find out if there's an algorithm that would a) shine some light on the apparent lack of details and b) alleviate the concerns by being an existing thing.","msgtype":"m.text","org.matrix.msc1767.text":"So, one ideas is that I'm trying to find out if there's an algorithm that would a) shine some light on the apparent lack of details and b) alleviate the concerns by being an existing thing."},"ts":1649246417222,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$CCabzK_BjuOMlaN65e6hjDwzfLjThfJ7Y8edLEhJVSY"},
{"content":{"body":"Again though, what's the actual input here? If you start with a tree, don't you have to trust that tree already?","msgtype":"m.text","org.matrix.msc1767.text":"Again though, what's the actual input here? If you start with a tree, don't you have to trust that tree already?"},"ts":1649246454823,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$XOfBGFKOVJM_eddFe-woaoc3EDGm37GzXJ9CIPOExgQ"},
{"content":{"body":"On the other hand, I know that all other sanitizer libraries traverse a DOM tree based on the input (or parse it based on the input) and not even re-use those elements but create completely new ones and copy the bits over selectively. Which is a bit like a clone, but more... iterative","msgtype":"m.text","org.matrix.msc1767.text":"On the other hand, I know that all other sanitizer libraries traverse a DOM tree based on the input (or parse it based on the input) and not even re-use those elements but create completely new ones and copy the bits over selectively. Which is a bit like a clone, but more... iterative"},"ts":1649246468909,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$MiSv6SGLLOkaGZmTtXsWLPAYwdW6poc1h54H6RcaEDU"},
{"content":{"body":"No. You don't. E.g., `<iframe sandbox=\"allow-same-origin\" src=\"bad stuff>` contains attacker-controlled stuff and you want to \"promote\" it into the current document, but need it to be sanitized first","format":"org.matrix.custom.html","formatted_body":"No. You don't. E.g., <code>&lt;iframe sandbox=&quot;allow-same-origin&quot; src=&quot;bad stuff&gt;</code> contains attacker-controlled stuff and you want to &quot;promote&quot; it into the current document, but need it to be sanitized first","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"No. You don't. E.g., `<iframe sandbox=\"allow-same-origin\" src=\"bad stuff>` contains attacker-controlled stuff and you want to \"promote\" it into the current document, but need it to be sanitized first","mimetype":"text/plain"},{"body":"No. You don't. E.g., <code>&lt;iframe sandbox=&quot;allow-same-origin&quot; src=&quot;bad stuff&gt;</code> contains attacker-controlled stuff and you want to &quot;promote&quot; it into the current document, but need it to be sanitized first","mimetype":"text/html"}]},"ts":1649246516050,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$To6WSb3DWT57EjclfYnbhcM3sWi9XDZdeABf9ly-zOQ"},
{"content":{"body":"so `sanitize(iframe.contentDocument)`","format":"org.matrix.custom.html","formatted_body":"so <code>sanitize(iframe.contentDocument)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so `sanitize(iframe.contentDocument)`","mimetype":"text/plain"},{"body":"so <code>sanitize(iframe.contentDocument)</code>","mimetype":"text/html"}]},"ts":1649246533997,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$dmWHvPzkGPUxsrqrdfrMQtRkZmW30W3x5bJtq-y5JSs"},
{"content":{"body":"OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","format":"org.matrix.custom.html","formatted_body":"OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","mimetype":"text/plain"},{"body":"OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","mimetype":"text/html"}]},"ts":1649246630083,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$thl_O7_1jkaQMOsVlm8BBuE81cNniuTrbFRmThIoPHw"},
{"content":{"body":" * OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","format":"org.matrix.custom.html","formatted_body":" * OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","m.new_content":{"body":"OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","format":"org.matrix.custom.html","formatted_body":"OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","mimetype":"text/plain"},{"body":"OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$thl_O7_1jkaQMOsVlm8BBuE81cNniuTrbFRmThIoPHw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox=\"allow-script\" src=\"some-sandbox-domain-for-user-content\">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`","mimetype":"text/plain"},{"body":" * OK, admittedly a <code>sandbox</code>ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is <code>&lt;iframe sandbox=&quot;allow-script&quot; src=&quot;some-sandbox-domain-for-user-content&quot;&gt;</code> (google, github, mdn, bugzilla use those sandbox-domains <em>A LOT</em>). And if you'd want to promote that into a current document you wouldn't iframe it, but instead <code>XHR()</code> it and sanitize the returned <code>document</code>","mimetype":"text/html"}]},"ts":1649246643954,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$ORymQXPCvQyb9OMjcb_0XBx4swTZzt6RmBJujd-T6L8"},
{"content":{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$S9ckiv_jFRLecWwfKbz89684F-1Bqgv2e75UJAqnaDo"}}},"ts":1649261611461,"senderName":"vrafaeli","senderId":"@vrafaeli:matrix.org","id":"$GL11L1jy8PoL7-SRGvRvnYI20EUYvwvZ4QHEjRQNLOo"},
{"content":{"body":"> <@annevk:mozilla.org> Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.\n\n * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browsers PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$S9ckiv_jFRLecWwfKbz89684F-1Bqgv2e75UJAqnaDo?via=mozilla.org&amp;via=matrix.org&amp;via=kde.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>Yeah, the plan is to obsolete <code>embed</code>/<code>object</code>. <code>object</code> in particular has some capabilities that are unique to it still, but we're chipping away at those.</blockquote></mx-reply> * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browsers PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","m.new_content":{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browsers PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browsers PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browsers PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browsers PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$GL11L1jy8PoL7-SRGvRvnYI20EUYvwvZ4QHEjRQNLOo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@annevk:mozilla.org> Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.\n\n * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browsers PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$S9ckiv_jFRLecWwfKbz89684F-1Bqgv2e75UJAqnaDo?via=mozilla.org&amp;via=matrix.org&amp;via=kde.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>Yeah, the plan is to obsolete <code>embed</code>/<code>object</code>. <code>object</code> in particular has some capabilities that are unique to it still, but we're chipping away at those.</blockquote></mx-reply> * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browsers PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"ts":1649261651833,"senderName":"vrafaeli","senderId":"@vrafaeli:matrix.org","id":"$a610PsizY8_e0lKA2eFgG1JKiaohMS3E6M-w4PLxCwM"},
{"content":{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","m.new_content":{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$GL11L1jy8PoL7-SRGvRvnYI20EUYvwvZ4QHEjRQNLOo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will do the \"remount\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will do the &quot;remount&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"ts":1649261680987,"senderName":"vrafaeli","senderId":"@vrafaeli:matrix.org","id":"$1pumkUvleDDiZlH0q7sq0zcL2q4in-23BLv8RNCJD0M"},
{"content":{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","m.new_content":{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$GL11L1jy8PoL7-SRGvRvnYI20EUYvwvZ4QHEjRQNLOo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"ts":1649261695456,"senderName":"vrafaeli","senderId":"@vrafaeli:matrix.org","id":"$XsuN6WFdeQJKzdGUyyGpZVQCueBIhbZ52MWFHre0kVE"},
{"content":{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information because it doesn't have the \"type\" attribute.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information because it doesn't have the &quot;type&quot; attribute.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","m.new_content":{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information because it doesn't have the \"type\" attribute.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","format":"org.matrix.custom.html","formatted_body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information because it doesn't have the &quot;type&quot; attribute.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information because it doesn't have the \"type\" attribute.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":"<p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information because it doesn't have the &quot;type&quot; attribute.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$GL11L1jy8PoL7-SRGvRvnYI20EUYvwvZ4QHEjRQNLOo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Let me explain one thing that I'm concerned now. Imagine the following scenario.\nYou list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.\n\nBut I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?\nWe can hide this HTML element using CSS I guess which is probably optimal.\nOne of the alternatives is to put \"about:blank\" in the \"src\" attribute. But then \"iframe\" will lose the type information because it doesn't have the \"type\" attribute.\nSo I'm concerned that in this alternative the browser's PDF engine will get \"remounted\" which might cause performance penalty?\n\n(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)","mimetype":"text/plain"},{"body":" * <p>Let me explain one thing that I'm concerned now. Imagine the following scenario.<br>You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.</p>\n<p>But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?<br>We can hide this HTML element using CSS I guess which is probably optimal.<br>One of the alternatives is to put &quot;about:blank&quot; in the &quot;src&quot; attribute. But then &quot;iframe&quot; will lose the type information because it doesn't have the &quot;type&quot; attribute.<br>So I'm concerned that in this alternative the browser's PDF engine will get &quot;remounted&quot; which might cause performance penalty?</p>\n<p>(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)</p>\n","mimetype":"text/html"}]},"ts":1649261752811,"senderName":"vrafaeli","senderId":"@vrafaeli:matrix.org","id":"$Z_dq-AU-QbHjit8Q1NFPryDMY2G8EjIg93fWEr9RCsQ"}
]