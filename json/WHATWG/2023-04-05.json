[
{"content":{"body":"streams question:\n\n```\n(async () => {\n  let stream = new ReadableStream(\n    {\n      start(controller) {\n          controller.enqueue(Promise.resolve(0)); // NOTE: enqueuing a promise\n          controller.close();\n      },\n    },\n  );\n  for await (let item of stream) {\n    console.log({ item });\n  }\n})();\n```\n\n(Streams are async iterable as of https://github.com/whatwg/streams/pull/980, though only FF has implemented as far as I know.)\n\nHere, should the `console.log` be of `0` or of a Promise for `0`? If I'm reading the various specs right, it should be a Promise. FF has it as an actual 0. The original conversation about async iterators which yield promises (in the iterator result object) decided that it should be considered a contract violation to do so - see slide 27 of https://docs.google.com/presentation/d/1U6PivKbFO0YgoFlrYB82MtXf1ofCp1xSVOODOvranBM/edit#slide=id.g223fba4116_0_196\n\nthis is really an edge case, so maybe the \"contract violation\" is fine? it's not like the language enforces that contract. but if the intent is that it should be a Promise for 0, that probably warrants a WPT","format":"org.matrix.custom.html","formatted_body":"<p>streams question:</p>\n<pre><code>(async () =&gt; {\n  let stream = new ReadableStream(\n    {\n      start(controller) {\n          controller.enqueue(Promise.resolve(0)); // NOTE: enqueuing a promise\n          controller.close();\n      },\n    },\n  );\n  for await (let item of stream) {\n    console.log({ item });\n  }\n})();\n</code></pre>\n<p>(Streams are async iterable as of https://github.com/whatwg/streams/pull/980, though only FF has implemented as far as I know.)</p>\n<p>Here, should the <code>console.log</code> be of <code>0</code> or of a Promise for <code>0</code>? If I'm reading the various specs right, it should be a Promise. FF has it as an actual 0. The original conversation about async iterators which yield promises (in the iterator result object) decided that it should be considered a contract violation to do so - see slide 27 of https://docs.google.com/presentation/d/1U6PivKbFO0YgoFlrYB82MtXf1ofCp1xSVOODOvranBM/edit#slide=id.g223fba4116_0_196</p>\n<p>this is really an edge case, so maybe the &quot;contract violation&quot; is fine? it's not like the language enforces that contract. but if the intent is that it should be a Promise for 0, that probably warrants a WPT</p>\n","msgtype":"m.text"},"ts":1680655162737,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iuo2aP5SS1FFYJuEGxoBDb6LXU2FOYOo2TkQG--9waM"},
{"content":{"body":"a document loading question:\n\nhttps://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline\nstep 3 assumes there is \"response\" from which URL can be obtained but \"response\" is not listed in the parameters.\nstep 4 initialize navigationParams params with newly created response but step 5 that creates document using these navigationParams seems to assume that response always has non-empty URL.\n\nam I missing something or there is a bug that \"Loading a document for inline content that doesn't have a DOM\" should accept url?","msgtype":"m.text"},"ts":1680656307638,"senderName":"Alexander Kalenik","senderId":"@aliaksandr.kalenik:matrix.org","id":"$1NZWGvVJGtHKSyQK4jYbYQBsBAiP91pd9H1JKvI-zds"}
]