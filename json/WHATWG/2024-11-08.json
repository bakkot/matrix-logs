[
{"content":{"body":"smaug: I think mutation events were already removed: https://github.com/whatwg/html/pull/10573. But yes I agree, shouldn't block stage 3.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: I think mutation events were already removed: https://github.com/whatwg/html/pull/10573. But yes I agree, shouldn't block stage 3.","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1731025600372,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$4bkMeE-NxVMUpQJmZHrnE0p3AhbOLdWGg1xsI2JwAWg"},
{"content":{"body":"(Implementations haven't removed mutation events)","m.mentions":{},"msgtype":"m.text"},"ts":1731025654109,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU"},
{"content":{"body":" * (Implementations haven't removed mutation events, https://github.com/whatwg/dom/issues/305#issuecomment-2306411923)","m.mentions":{},"m.new_content":{"body":"(Implementations haven't removed mutation events, https://github.com/whatwg/dom/issues/305#issuecomment-2306411923)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731025729168,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$QwgMZvmhTZyY2HcdVS8_zFFqY9enRX0LrRaMdk3ZDgU"},
{"content":{"body":"(for those who care about the document-conformance/authoring parts of the requirements in the spec) https://github.com/whatwg/html/pull/10752","m.mentions":{},"msgtype":"m.text"},"ts":1731034737817,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Vf1GuQiw__XdAxjVjccRle0z-QVOzYufFJwZN3Yt-ho"},
{"content":{"body":"push-api apparently allows (and enforces in certain cases) wrapping after an equals sign of an attribute. That's a new one.","m.mentions":{},"msgtype":"m.text"},"ts":1731050146286,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sgXChYFhGwqN0-ZATKCyqiStNTK6NfVA0J0U4djtb8c"},
{"content":{"body":"hi all! I'm the main guy who runs the State of JS/CSS/etc. surveys. Always happy to get feedback to help make them more helpful for the community :)","m.mentions":{},"msgtype":"m.text"},"ts":1731053239684,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$TrEx2MuPbk3oX2zxavNvWR8xjXqp7RQlvhA-Ebt_qNg"},
{"content":{"body":"keithamus: heya, I could make time today for https://github.com/whatwg/html/pull/9841, but I was wondering if you could squash all the commits and rebase on top of main as there are conflicts at the moment","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: heya, I could make time today for https://github.com/whatwg/html/pull/9841, but I was wondering if you could squash all the commits and rebase on top of main as there are conflicts at the moment","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731055014430,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$WAt9kTplvBd3zoQcExna-qQVlinBhcCtGtOQYaq2tKo"},
{"content":{"body":"keithamus: I also see some minor issues such as wrapping before a closing tag (`</code></dfn>`) and indentation beyond the start tag on the preceding line that you might want to tackle while doing that?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: I also see some minor issues such as wrapping before a closing tag (<code>&lt;/code&gt;&lt;/dfn&gt;</code>) and indentation beyond the start tag on the preceding line that you might want to tackle while doing that?","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731055087035,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ucSvgOJKXQyK9zq-DZIcO9kkncZz3kMMFiHVR_CJlRo"},
{"content":{"body":"WPT PR is also out-of-date it seems","m.mentions":{},"msgtype":"m.text"},"ts":1731055238508,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$j-50Vs6CgsASP7cu44RA34I9d6_RvPXn-WB9gccIrGU"},
{"content":{"body":"annevk: sure, I’m just about to get on the road but in about an hour I’ll update both spec and wpt pr ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sure, I’m just about to get on the road but in about an hour I’ll update both spec and wpt pr","msgtype":"m.text"},"ts":1731055251683,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$MHKTDqleySeCnQE2nq6sc8IJ5NHNtB1vaTQvK6O7RZk"},
{"content":{"body":"keithamus: oh I see that in August 27 I also expressed confusion as to how this event could work. That comment was never addressed.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: oh I see that in August 27 I also expressed confusion as to how this event could work. That comment was never addressed.","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731063865020,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yy2yJFVl6IHRsTvrhWBKjhqFsQZMfc-61kspDa3_SPs"},
{"content":{"body":"I'm also once again confused at the compatibility story we ended up with around potentially changing the default of button type. Trying to find the relevant minutes...","m.mentions":{},"msgtype":"m.text"},"ts":1731063939168,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZeYVa61QTrP8TXRrcsLFnELAd3sCkGrsdW2-yq3sK1E"},
{"content":{"body":"Found it: https://github.com/whatwg/html/issues/10441","m.mentions":{},"msgtype":"m.text"},"ts":1731064366535,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$imQzyFp8pQ4u1wvrvArqKwl2Shi_-Bsvi19D6DNsYFU"},
{"content":{"body":"keithamus: so what I think I'm missing is changes to the `button` element `type` attribute reflection that take that into account","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: so what I think I'm missing is changes to the <code>button</code> element <code>type</code> attribute reflection that take that into account","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731064421337,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ah1yjyeOp8bYJZbCx09hDwLVIoAH4no9zbUpKZ6J3ec"},
{"content":{"body":"keithamus: in that we want the `type` getter to return `button` when the `button` element has `command` and `commandfor` attributes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: in that we want the <code>type</code> getter to return <code>button</code> when the <code>button</code> element has <code>command</code> and <code>commandfor</code> attributes","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731064464571,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$KCloehYxcmiVGBExe-07g_FQvvUaW5MRXVoe8j3GAJA"},
{"content":{"body":"It's a bit subtle as the `type` getter can mismatch with the actual state, but that seems okay-ish.","format":"org.matrix.custom.html","formatted_body":"It's a bit subtle as the <code>type</code> getter can mismatch with the actual state, but that seems okay-ish.","m.mentions":{},"msgtype":"m.text"},"ts":1731064708443,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ty7aTk1p7IrdY7ABnr34s2wvpKIrlA2Y_sic1DW8o-M"},
{"content":{"body":"Okay, apologies I thought we resolved the other way around. So we want the button to _not_ be a submit button if it has `command` or `commandfor`? It should be in the `button` state.","format":"org.matrix.custom.html","formatted_body":"Okay, apologies I thought we resolved the other way around. So we want the button to <em>not</em> be a submit button if it has <code>command</code> or <code>commandfor</code>? It should be in the <code>button</code> state.","m.mentions":{},"msgtype":"m.text"},"ts":1731065003909,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$8HDZ9_elOo8bqBMkSv3VdMJA_K_XdlJ_xegi2sV_ss0"},
{"content":{"body":"keithamus: I suspect the easiest way to do this is to introduce a Maybe Button state. The type getter would return \"button\" in that state. When associated with a form the button wouldn't work and when outside a form it would act like a button.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: I suspect the easiest way to do this is to introduce a Maybe Button state. The type getter would return \"button\" in that state. When associated with a form the button wouldn't work and when outside a form it would act like a button.","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731065120653,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pIHN3WLjz2pZLF1y3x4hRSjhBHFIg6V6xlXRiQs6uEo"},
{"content":{"body":"So I think behavior-wise it's pretty much what you have, except that it doesn't account for the `type` getter.","format":"org.matrix.custom.html","formatted_body":"So I think behavior-wise it's pretty much what you have, except that it doesn't account for the <code>type</code> getter.","m.mentions":{},"msgtype":"m.text"},"ts":1731065146940,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cNV0--mAyMcb0UhvhDjy1LAIPO-veWp_H5TtJ1KD_So"},
{"content":{"body":"so i could have a type submit that isn't a submit button? O.o that seems bad","m.mentions":{},"msgtype":"m.text"},"ts":1731065215806,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$oCfxvn8_Dw_UASf1VdgD417az7rhQ_T2gl8EE73opHo"},
{"content":{"body":" * so i could have an explicit type submit that isn't a submit button? O.o that seems bad","m.mentions":{},"m.new_content":{"body":"so i could have an explicit type submit that isn't a submit button? O.o that seems bad","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$oCfxvn8_Dw_UASf1VdgD417az7rhQ_T2gl8EE73opHo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731065225427,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Arg95QN5izSMVS0HrFNLS2zpHf59ZC-vsDbvR52j_9k"},
{"content":{"body":"And then I think there's the separate question of what should happen when type is set to submit or reset and you have these command/commandfor attributes. Perhaps in that case the command/commandfor attributes are to be ignored? Luke Warlow was looking at this for popover at some point.","format":"org.matrix.custom.html","formatted_body":"And then I think there's the separate question of what should happen when type is set to submit or reset and you have these command/commandfor attributes. Perhaps in that case the command/commandfor attributes are to be ignored? <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a> was looking at this for popover at some point.","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1731065226777,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$EfUAdgex5gbYnxgMVAzAXt84IZa6vS8JxFGO0eu-eo0"},
{"content":{"body":" * so i could have an explicit type submit that isn't a submit button? O.o that seems bad (when no `type` is provided, anything that lets it default to `button` is an improvement, defaulting to `submit` is painful)","format":"org.matrix.custom.html","formatted_body":" * so i could have an explicit type submit that isn't a submit button? O.o that seems bad (when no <code>type</code> is provided, anything that lets it default to <code>button</code> is an improvement, defaulting to <code>submit</code> is painful)","m.mentions":{},"m.new_content":{"body":"so i could have an explicit type submit that isn't a submit button? O.o that seems bad (when no `type` is provided, anything that lets it default to `button` is an improvement, defaulting to `submit` is painful)","format":"org.matrix.custom.html","formatted_body":"so i could have an explicit type submit that isn't a submit button? O.o that seems bad (when no <code>type</code> is provided, anything that lets it default to <code>button</code> is an improvement, defaulting to <code>submit</code> is painful)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$oCfxvn8_Dw_UASf1VdgD417az7rhQ_T2gl8EE73opHo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731065253567,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$sHJ7fBPOBSgd9rTunhMdVHErH8EwnUIxHI_x_1E16TE"},
{"content":{"body":"ljharb: the problem is that `<button>` defaults to being a submit button, which is not necessarily great for new use cases.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: the problem is that <code>&lt;button&gt;</code> defaults to being a submit button, which is not necessarily great for new use cases.","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1731065273302,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yXa1wEDDflJn-xaICq9u7ivBV9qZS4jG76LxQnJy1L8"},
{"content":{"body":"right - it's a very bad default, and when `type` is omitted, i think it's totally fine to quietly make it `button` when it has a new attribute","format":"org.matrix.custom.html","formatted_body":"right - it's a very bad default, and when <code>type</code> is omitted, i think it's totally fine to quietly make it <code>button</code> when it has a new attribute","m.mentions":{},"msgtype":"m.text"},"ts":1731065295935,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mMWbRHz7pwpMWcqql0dRn19wSzkPCizNEOTvB4Mf9VU"},
{"content":{"body":"but if i explicitly put `type=\"submit\"` then violating that seems bad to me","format":"org.matrix.custom.html","formatted_body":"but if i explicitly put <code>type=\"submit\"</code> then violating that seems bad to me","m.mentions":{},"msgtype":"m.text"},"ts":1731065314169,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8oxck8sfMzCsKoTljfP3efc4PGeQIb8jEhrc_Z9trv4"},
{"content":{"body":"Yeah agreed.","m.mentions":{},"msgtype":"m.text"},"ts":1731065324003,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$kd8A5sCveKHRrzhM7eYV_CteV_rcEItamMe7wmepwzQ"},
{"content":{"body":"(i just learned about command/commandFor recently, btw, and it seems very cool - is there a polyfill anywhere for its behavior?)","m.mentions":{},"msgtype":"m.text"},"ts":1731065380661,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$uAixYQvyuekO76AgpPyZ74MsdoVclK_tN56dXvRZ_5Q"},
{"content":{"body":"(The main reason why we're not defaulting to button inside a form immediately is because of backwards compatibility with browsers where it would submit the form. But five years from now or so we can change that as well.)","m.mentions":{},"msgtype":"m.text"},"ts":1731065423123,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$n0mAGsss8R3Nvp8hZapN-lDwBKjylGfB2NnnJKnkoOA"},
{"content":{"body":"> <@ljharb:matrix.org> (i just learned about command/commandFor recently, btw, and it seems very cool - is there a polyfill anywhere for its behavior?)\n\nhttps://github.com/keithamus/invokers-polyfill is what I have so far","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$uAixYQvyuekO76AgpPyZ74MsdoVclK_tN56dXvRZ_5Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>(i just learned about command/commandFor recently, btw, and it seems very cool - is there a polyfill anywhere for its behavior?)</blockquote></mx-reply>https://github.com/keithamus/invokers-polyfill is what I have so far","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$uAixYQvyuekO76AgpPyZ74MsdoVclK_tN56dXvRZ_5Q"}},"msgtype":"m.text"},"ts":1731065449762,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$RyXiytkfrj2jrBDq-f9CbkAPnwjETijGCEhCfU2bwKE"},
{"content":{"body":"> <@annevk:matrix.org> And then I think there's the separate question of what should happen when type is set to submit or reset and you have these command/commandfor attributes. Perhaps in that case the command/commandfor attributes are to be ignored? Luke Warlow was looking at this for popover at some point.\n\nSo I think if the button is explicit submit and has commandfor/command we should make it submit, ignore the command stuff, and browsers can log a warning to the console telling the user they've made a mistake","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$EfUAdgex5gbYnxgMVAzAXt84IZa6vS8JxFGO0eu-eo0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>And then I think there's the separate question of what should happen when type is set to submit or reset and you have these command/commandfor attributes. Perhaps in that case the command/commandfor attributes are to be ignored? <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a> was looking at this for popover at some point.</blockquote></mx-reply>So I think if the button is explicit submit and has commandfor/command we should make it submit, ignore the command stuff, and browsers can log a warning to the console telling the user they've made a mistake","m.mentions":{"user_ids":["@annevk:matrix.org","@lwarlow:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$EfUAdgex5gbYnxgMVAzAXt84IZa6vS8JxFGO0eu-eo0"}},"msgtype":"m.text"},"ts":1731065687750,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$XrF8XM7LWC-xaD51AZbLdwKqxoY9-xQjREs1nRcsarU"},
{"content":{"body":"The other choice is to not do either behaviour (submit nor command/commandfor)","m.mentions":{},"msgtype":"m.text"},"ts":1731065702176,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$j6_zoXz9nq5p5eI3s5WwPQXTwWFWEDb-pJQwZgyIHz0"},
{"content":{"body":"Agreed, I just wrote that down in https://github.com/whatwg/html/issues/9625#issuecomment-2464496320","m.mentions":{},"msgtype":"m.text"},"ts":1731065860600,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$EZOzuuicaJGDZi2pP4QvUiJ_MMI1nY0iBk-bN0ITVf0"},
{"content":{"body":"annevk: how would I type the command attribute state? (Trying to address https://github.com/whatwg/html/pull/9841/files#r1834138912). It's not a string, I presume (it's an enum in the impls).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: how would I type the command attribute state? (Trying to address https://github.com/whatwg/html/pull/9841/files#r1834138912). It's not a string, I presume (it's an enum in the impls).","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1731066317549,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$BIjhlnqyqsnDj_8aUoXTgahcy86wMk9SkwP-Ucy3v0c"},
{"content":{"body":"keithamus: in HTML it's a string, unless you introduced a concept that only contains the relevant string values, in which case you could use that concept, but I don't think that exists","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: in HTML it's a string, unless you introduced a concept that only contains the relevant string values, in which case you could use that concept, but I don't think that exists","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731066394524,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xbTRPEGUh0NpiJIBuGoSyxBrLnkZaNv1d-quff70bCQ"},
{"content":{"body":"okay great I'll use a string","m.mentions":{},"msgtype":"m.text"},"ts":1731066414038,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$8GR5zIJZRJlHYeP-WE4jJHr5kumMTWdxvtRgF6v1XEg"},
{"content":{"body":"Oh wait, the state hmm","m.mentions":{},"msgtype":"m.text"},"ts":1731066422880,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$35hv3jkbZCI6ubowOlRJZPSU8qCqagkmsdMeaR27tfc"},
{"content":{"body":"I was thinking the actual value","m.mentions":{},"msgtype":"m.text"},"ts":1731066435343,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2uNUlS7p8ZQlR_fUKNSKhUedSNh5S83k_CINRHEr4iU"},
{"content":{"body":"keithamus: hmm maybe it's easier to just pass in the element that has the attribute or some such","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: hmm maybe it's easier to just pass in the element that has the attribute or some such","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731066497227,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$MqcOznX6RIOvRVRQLpYuzI3iTdvYQCocTlHk5U-NOuY"},
{"content":{"body":"oh yeah okay","m.mentions":{},"msgtype":"m.text"},"ts":1731066519652,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$bmmpXvzr5l4m1o_JzH3U4gtUYng3AFPxLPQSNLRSHbU"},
{"content":{"body":"hmm... but an event is dispatched before the steps are called so referencing the element might be bad, it could change during the event phase...","m.mentions":{},"msgtype":"m.text"},"ts":1731066562673,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$qI6W3Wyymw9Qbzl-NU7jI5_BAKeeanFy-MzQ_4vM-eY"},
{"content":{"body":"keithamus: maybe just do state _state_ for now then. And don't talk about it being in a state, but being a state. \"If command is the Close or Show Modal state, then return true.\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: maybe just do state <em>state</em> for now then. And don't talk about it being in a state, but being a state. \"If command is the Close or Show Modal state, then return true.\"","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1731066749108,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$x_8HkT6vESW9V5R9rXpcn8vz1qratDNzTPkJqYiKnc8"},
{"content":{"body":"Why would reordering them change anything spec-wise?","m.mentions":{},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$5nBxJHDqY1Dy88BagskURK7rDP9NQlcnlKQIZQXyAyU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731073728202,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$QPo1xYABT1soPJMCW9HhaNvcyY2VX1T4E9iU6LbHPiY"},
{"content":{"body":"This seems like an implementation concern. I couldn't find anything in the spec that would be problematic because of this, and we've added pretty good test coverage for this type of scenario (though there could always be more)","m.mentions":{},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$QPo1xYABT1soPJMCW9HhaNvcyY2VX1T4E9iU6LbHPiY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731073774640,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$9uQdXe73pEnNmi_2IZaGKMh8YKdragIDjCWOz4UpT_Y"},
{"content":{"body":"Dominic Farolino did the iframe work though so perhaps I'm missing something.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> did the iframe work though so perhaps I'm missing something.","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$9uQdXe73pEnNmi_2IZaGKMh8YKdragIDjCWOz4UpT_Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731073787863,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$sWa_DpMoqAC32AWYFnJARBnWBuhK7rtWKc6KQLerSyI"},
{"content":{"body":"Ms2ger: one thing that needs to be done for https://github.com/whatwg/html/pull/9893 is filling out OP. Having a clear proposed commit message there, ideally outlining some of the design, test strategy, impl bugs, MDN coverage, etc. goes a long way to making reviewing easier.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ms2ger:igalia.com\">Ms2ger</a>: one thing that needs to be done for https://github.com/whatwg/html/pull/9893 is filling out OP. Having a clear proposed commit message there, ideally outlining some of the design, test strategy, impl bugs, MDN coverage, etc. goes a long way to making reviewing easier.","m.mentions":{"user_ids":["@ms2ger:igalia.com"]},"msgtype":"m.text"},"ts":1731079716749,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$L0rzkw2Zo2xzrQp9cRLubn8jAKJP1a7AVP0sxR_l4gs"},
{"content":{"body":"Will do, thanks for the reminder","m.mentions":{},"msgtype":"m.text"},"ts":1731079741136,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$ergd4dGS21r-35msuaBIapGAWxvyHfKqC5HSAveiS7s"},
{"content":{"body":"That also makes it scary, but I'll have another look anyway as it's been a long time.","m.mentions":{},"msgtype":"m.text"},"ts":1731080057436,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$svMUHapeRUj5aUNodxdt13OU4myfF-ZHf6PtXHSmJ8k"},
{"content":{"body":"Hmm, I remember we had a discussion before about renaming all the \"concepts\" to \"principal concepts\" not being great.","m.mentions":{},"msgtype":"m.text"},"ts":1731080200052,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$LDq1uosulacNuKT5hjpgaBfglGbl3md481ZbiYMjWbs"},
{"content":{"body":"Ms2ger: hopefully I gave you a few things to look into. Overall this still looks good and I guess impl/TC39-wise it's more accepted now so maybe this can be done soonish modulo the massive number of needed PRs that it appears you all have signed up for...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ms2ger:igalia.com\">Ms2ger</a>: hopefully I gave you a few things to look into. Overall this still looks good and I guess impl/TC39-wise it's more accepted now so maybe this can be done soonish modulo the massive number of needed PRs that it appears you all have signed up for...","m.mentions":{"user_ids":["@ms2ger:igalia.com"]},"msgtype":"m.text"},"ts":1731081170985,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wgJ7dd7U5kBsyM7CmZqO_zBkqiqydZ5Hga2Tlf58_pg"},
{"content":{"body":"> <@smaug:mozilla.org> (Implementations haven't removed mutation events)\n\nIt should be trivial to not fire them during moveBefore though, and they’re not in the spec  ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>(Implementations haven't removed mutation events)</blockquote></mx-reply>It should be trivial to not fire them during moveBefore though, and they’re not in the spec","m.relates_to":{"m.in_reply_to":{"event_id":"$ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU"}},"msgtype":"m.text"},"ts":1731081546334,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$HdKO01ecCxr_2spPijcc-mFogY3cOgOizSutjcdWOQE"},
{"content":{"body":"(Oh and it seems that Shannon Booth from Ladybird also has some good ShadowRealm feedback.)","m.mentions":{},"msgtype":"m.text"},"ts":1731082184292,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sHXpma_3ZgBiReGcR6w2skcLnbgHOtvxSHfd--zWkR4"},
{"content":{"body":"Thanks again, I think :)","m.mentions":{},"msgtype":"m.text"},"ts":1731082455050,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$kuq74mGWB3GstfDZU60hCERS3_No6Fm3iV2ZLuM101A"},
{"content":{"body":"There's nothing in the spec that's problematic regarding to this simply because the spec doesn't handle (at all) what we've referred to colloquially as the session history re-parenting issue — i.e., the case where upon going back to a non-bfcached page, the browser tries to reconcile the structure of the DOM with the structure of the nested session history, and load the latest nested session history items into the corresponding iframes.","m.mentions":{},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$sWa_DpMoqAC32AWYFnJARBnWBuhK7rtWKc6KQLerSyI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731094203150,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$rHZhhjwPPuncfjugC0qAqEA-krbyzprbnNf6LF7Vk9E"},
{"content":{"body":"So first, that's bad in general. But I don't think it intersects too much with moveBefore(). moveBefore() doesn't change the order of the iframes from the perspective of the browser process, session history, or other iframes that can reach these iframes via proxies. That is, it doesn't re-order window.frames: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/external/wpt/dom/nodes/moveBefore/tentative/iframe-document-preserve.window.js;l=110-116;drc=0ba2bf02d3c2d6bf52c53012cdb5993b50ba82ed","m.mentions":{},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$rHZhhjwPPuncfjugC0qAqEA-krbyzprbnNf6LF7Vk9E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731094459773,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$A3p6RhZWOEy6MYQWF9GBA-Ii3cnWaTjvP5ISd9hj0PU"},
{"content":{"body":" * So first, that's bad in general. But I don't think it intersects too much with moveBefore(). moveBefore() doesn't change the order of the iframes from the perspective of the browser process, session history, or other iframes that can reach the moved iframes via proxies. That is, it doesn't re-order window.frames: https://source.chromium.org/chromium/chromium/src/+/main:third\\_party/blink/web\\_tests/external/wpt/dom/nodes/moveBefore/tentative/iframe-document-preserve.window.js;l=110-116;drc=0ba2bf02d3c2d6bf52c53012cdb5993b50ba82ed","format":"org.matrix.custom.html","formatted_body":" * So first, that's bad in general. But I don't think it intersects too much with moveBefore(). moveBefore() doesn't change the order of the iframes from the perspective of the browser process, session history, or other iframes that can reach the moved iframes via proxies. That is, it doesn't re-order window.frames: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/external/wpt/dom/nodes/moveBefore/tentative/iframe-document-preserve.window.js;l=110-116;drc=0ba2bf02d3c2d6bf52c53012cdb5993b50ba82ed","m.mentions":{},"m.new_content":{"body":"So first, that's bad in general. But I don't think it intersects too much with moveBefore(). moveBefore() doesn't change the order of the iframes from the perspective of the browser process, session history, or other iframes that can reach the moved iframes via proxies. That is, it doesn't re-order window.frames: https://source.chromium.org/chromium/chromium/src/+/main:third\\_party/blink/web\\_tests/external/wpt/dom/nodes/moveBefore/tentative/iframe-document-preserve.window.js;l=110-116;drc=0ba2bf02d3c2d6bf52c53012cdb5993b50ba82ed","format":"org.matrix.custom.html","formatted_body":"So first, that's bad in general. But I don't think it intersects too much with moveBefore(). moveBefore() doesn't change the order of the iframes from the perspective of the browser process, session history, or other iframes that can reach the moved iframes via proxies. That is, it doesn't re-order window.frames: https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/external/wpt/dom/nodes/moveBefore/tentative/iframe-document-preserve.window.js;l=110-116;drc=0ba2bf02d3c2d6bf52c53012cdb5993b50ba82ed","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A3p6RhZWOEy6MYQWF9GBA-Ii3cnWaTjvP5ISd9hj0PU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731094535564,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$d9NVn9Pr2xxHxL57_ce6nfhM0MJdjEnxvkjd6-vGBKA"},
{"content":{"body":"So I think navigating backwards to the non-bfcached top-level page should behave the same as it would be if said page did not use moveBefore() before it was navigated away.","m.mentions":{},"m.relates_to":{"event_id":"$bEB56GfQzP6UwFnY4xmCC9qHZkfo56O1LnPfHW68AGU","is_falling_back":true,"m.in_reply_to":{"event_id":"$A3p6RhZWOEy6MYQWF9GBA-Ii3cnWaTjvP5ISd9hj0PU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731094605251,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$voM2Gi_hCb3rfUdZmHEnCZt_HXnT7jVLDRSceKq1rzE"},
{"content":{"body":"> <@smaug:mozilla.org> (Implementations haven't removed mutation events, https://github.com/whatwg/dom/issues/305#issuecomment-2306411923)\n\nsmaug: Implementations must disable mutation events when this API runs: https://github.com/web-platform-tests/wpt/blob/master/dom/nodes/moveBefore/tentative/mutation-events.html. We can't spec it because mutation events don't exist in DOM, but we've tested it. either way, yeah I don't think this blocks stage 3 or shipping.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>(Implementations haven&#39;t removed mutation events, https://github.com/whatwg/dom/issues/305#issuecomment-2306411923)</blockquote></mx-reply><a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: Implementations must disable mutation events when this API runs: https://github.com/web-platform-tests/wpt/blob/master/dom/nodes/moveBefore/tentative/mutation-events.html. We can't spec it because mutation events don't exist in DOM, but we've tested it. either way, yeah I don't think this blocks stage 3 or shipping.","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZbbsA98Zzismp93PvkSqc9t5LrMCBLaFKa47qcBsxJU"}},"msgtype":"m.text"},"ts":1731094708042,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$ZFPUV9nhqrO1e3Rp3fAIth1v07fe9Bemvg8Hu1P-9ag"},
{"content":{"body":"Domenic: I've looked but I can't find a bug tracking the iframe session history reparent/restoration problem. Do you know if one exists? This is the case where you navigate backwards to a top-level non-bfcached page with iframes, and try and reconcile the page's iframe structure with the nested iframe history structure, to load the latest iframe history entries in the page's iframes..","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I've looked but I can't find a bug tracking the iframe session history reparent/restoration problem. Do you know if one exists? This is the case where you navigate backwards to a top-level non-bfcached page with iframes, and try and reconcile the page's iframe structure with the nested iframe history structure, to load the latest iframe history entries in the page's iframes..","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1731095134781,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$fAGHQ3pJ264fRoywiO_mIJUqZJiUM5Sx4En1-P5QUHI"},
{"content":{"body":"have you tested session history?","m.mentions":{},"msgtype":"m.text"},"ts":1731095136261,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Krm60Tz24B7YIbev3OfwONKumx5PdPlflzz5NZ-4lTc"},
{"content":{"body":"(you have 🙂 )","m.mentions":{},"msgtype":"m.text"},"ts":1731095162664,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$S9KTu-WtXCBxJ3GEMt8LC8VcR2KzSu9qGKMqYg0l_h4"},
{"content":{"body":" * (you have 🙂 ,  or at least have thought about it)","m.mentions":{},"m.new_content":{"body":"(you have 🙂 ,  or at least have thought about it)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S9KTu-WtXCBxJ3GEMt8LC8VcR2KzSu9qGKMqYg0l_h4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731095193103,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$CcLQstT9zg8AAo2VH2lDKKDnte0DaslX74GESbh2zbM"},
{"content":{"body":"smaug: both session history reparenting and mutation events are important/interesting things to consider for implementation but they're both also not in the HTML standard... given that I'm a bit confused about the level of expectations here in terms of spec/interop, apart from each implementation having internal tests to make sure things stay sane","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: both session history reparenting and mutation events are important/interesting things to consider for implementation but they're both also not in the HTML standard... given that I'm a bit confused about the level of expectations here in terms of spec/interop, apart from each implementation having internal tests to make sure things stay sane","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1731098940463,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$gOCDpnhMJ8WRrVvd-WX6wZJbefbvzySiLqSDgTU8OD8"},
{"content":{"body":"session history is in HTML spec, and seems like moveBefore may change its behavior ","m.mentions":{},"msgtype":"m.text"},"ts":1731099059977,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$mQCBmSSWot1iRk1gTe4q_oZRBLRZQn1He4fPUKl9jKI"},
{"content":{"body":"> <@smaug:mozilla.org> session history is in HTML spec, and seems like moveBefore may change its behavior\n\nIt doesn't though. As I said earlier, there are no places in the HTML spec that `moveBefore` changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$mQCBmSSWot1iRk1gTe4q_oZRBLRZQn1He4fPUKl9jKI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>session history is in HTML spec, and seems like moveBefore may change its behavior </blockquote></mx-reply>It doesn't though. As I said earlier, there are no places in the HTML spec that <code>moveBefore</code> changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mQCBmSSWot1iRk1gTe4q_oZRBLRZQn1He4fPUKl9jKI"}},"msgtype":"m.text"},"ts":1731099138452,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$phtBpiZHKymVgpLEyKXIPkX_AWDhKE9EpP8Nl7RjukY"},
{"content":{"body":"> <@smaug:mozilla.org> session history is in HTML spec, and seems like moveBefore may change its behavior\n\n * It doesn't though. As I said earlier, there are no places in the HTML spec around session history that `moveBefore` changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$mQCBmSSWot1iRk1gTe4q_oZRBLRZQn1He4fPUKl9jKI?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>session history is in HTML spec, and seems like moveBefore may change its behavior </blockquote></mx-reply> * It doesn't though. As I said earlier, there are no places in the HTML spec around session history that <code>moveBefore</code> changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","m.mentions":{},"m.new_content":{"body":"It doesn't though. As I said earlier, there are no places in the HTML spec around session history that `moveBefore` changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","format":"org.matrix.custom.html","formatted_body":"It doesn't though. As I said earlier, there are no places in the HTML spec around session history that <code>moveBefore</code> changes. We have looked at it in pretty deeply... if you find a place where it does please be specific","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$phtBpiZHKymVgpLEyKXIPkX_AWDhKE9EpP8Nl7RjukY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731099157192,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$EYAon5cHh9oGYHVAoByTngIFrq2k3VLvMeESkwGlMmA"},
{"content":{"body":"Well, it may break the behavior, let's say so.","m.mentions":{},"msgtype":"m.text"},"ts":1731099173848,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$_QW1H9oczEgKuHPxqt6RG5uSKiDMm_Hvqj764QC9IeU"},
{"content":{"body":"> <@smaug:mozilla.org> Well, it may break the behavior, let's say so.\n\nAgain, please be specific. The behavior that it might break that you've mentioned before around session history reparenting is not a standardized part of session history traversal AFAIK","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$_QW1H9oczEgKuHPxqt6RG5uSKiDMm_Hvqj764QC9IeU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>Well, it may break the behavior, let&#39;s say so.</blockquote></mx-reply>Again, please be specific. The behavior that it might break that you've mentioned before around session history reparenting is not a standardized part of session history traversal AFAIK","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_QW1H9oczEgKuHPxqt6RG5uSKiDMm_Hvqj764QC9IeU"}},"msgtype":"m.text"},"ts":1731099259711,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$X5T2t2Eqgs6ZIYZA36Yon83gMSOR66HfBeX6eCRSiGg"},
{"content":{"body":"Well, there hasn't been any need for \"reparenting\" before","m.mentions":{},"msgtype":"m.text"},"ts":1731099311964,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$-iRwqe6Udo0aX73ClAzS9liJO_t_nMzSgqEuj5BwJLU"},
{"content":{"body":"We've tested that `moveBefore` doesn't reorder `window.frames`, and some of the places in the spec collect `navigables` in tree order","format":"org.matrix.custom.html","formatted_body":"We've tested that <code>moveBefore</code> doesn't reorder <code>window.frames</code>, and some of the places in the spec collect <code>navigables</code> in tree order","m.mentions":{},"msgtype":"m.text"},"ts":1731099318375,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$V7dlRaPPGdBEf3JuOo2hV0lZnDgs-81g3o94l2OA9tg"},
{"content":{"body":"This is a new thing caused by moveBefore","m.mentions":{},"msgtype":"m.text"},"ts":1731099320033,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$28IbPNz3euULtU-4W4GXKAeYEf4YvtIEPQHudWY08vM"},
{"content":{"body":"Ok, and if you go back to a page which had iframes reordered, what gets restored to iframes?","m.mentions":{},"msgtype":"m.text"},"ts":1731099380930,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$P01GSckT6pI-Gh7p3UDTLNz1MIGJ6HHo0_pX76F35ns"},
{"content":{"body":"No change from before I guess?","m.mentions":{},"msgtype":"m.text"},"ts":1731099424494,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$hSx2t5xJSZkC2BGCWtgU8mWNIg_LCQiuQdEowdZJVMc"},
{"content":{"body":"For this kind of bug to occur you need to save the tree order of navigables somehow separate from the tree order of frames and have them out of sync due to `moveBefore`. I can see how a bug like that might occur in implementation but not in the spec","format":"org.matrix.custom.html","formatted_body":"For this kind of bug to occur you need to save the tree order of navigables somehow separate from the tree order of frames and have them out of sync due to <code>moveBefore</code>. I can see how a bug like that might occur in implementation but not in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1731099508994,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$X0OBcHV1pL152NoZoso3O1kXve3bSLgqnSOBR5EzvKc"},
{"content":{"body":"(Again, this goes back to auto iframe-restore, which is a non-standard part of session history)","m.mentions":{},"msgtype":"m.text"},"ts":1731099590599,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$dLSJzgwzPhX4yji_f0drCXEEr5L_cbv5X94ZkX44o78"},
{"content":{"body":"> <@smaug:mozilla.org> Ok, and if you go back to a page which had iframes reordered, what gets restored to iframes?\n\nBasically what Dominic Farolino said here: https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$rHZhhjwPPuncfjugC0qAqEA-krbyzprbnNf6LF7Vk9E?via=matrix.org&via=mozilla.org&via=igalia.com","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$P01GSckT6pI-Gh7p3UDTLNz1MIGJ6HHo0_pX76F35ns?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>Ok, and if you go back to a page which had iframes reordered, what gets restored to iframes?</blockquote></mx-reply>Basically what <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> said here: https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$rHZhhjwPPuncfjugC0qAqEA-krbyzprbnNf6LF7Vk9E?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com","m.mentions":{"user_ids":["@smaug:mozilla.org","@domfarolino:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$P01GSckT6pI-Gh7p3UDTLNz1MIGJ6HHo0_pX76F35ns"}},"msgtype":"m.text"},"ts":1731099709194,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xmrTSkWOYAsceYSUB1iTZqdmrozBY__IZf5o2hnKfy8"},
{"content":{"body":"ok, I guess if window.frames doesn't change, this might not be as big issue","m.mentions":{},"msgtype":"m.text"},"ts":1731099709666,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$gdB7hW9JXjyMM4aSf0ZdyHGCRoR49twRHyl7JEK0R-Y"},
{"content":{"body":"oh, Element had hidden those messages well from me","m.mentions":{},"msgtype":"m.text"},"ts":1731099750967,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$qOqmpZQM9gjC6gfcNzodNKp9Wya6hP6jTPP7QeLfV9I"},
{"content":{"body":"haha no worries. Yeah I understand the concern here, but I think from the perspective of things outside of the local DOM inside of the Document that experienced the moveBefore, nothing changes regarding child frame order, including in session history.","m.mentions":{},"msgtype":"m.text"},"ts":1731101818332,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$MzORMK_4qfdQ0j8YfWgEPgUBoiElE7YrgI2ws1iVWCE"},
{"content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an *“ld: library 'System' not found”* error (in the Rust part of the build), the run the build script like this:\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib \\\n./build.sh\n```\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or wherever).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), the run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or wherever).</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1731106931660,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), the run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or wherever).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), the run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or wherever).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), the run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or wherever).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), the run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or wherever).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731106970649,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$AGltT19eBUpMYrnbhFddifeU0r7lAhZNwhg220k4rLs"}
]