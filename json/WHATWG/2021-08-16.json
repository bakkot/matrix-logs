[
{"content":{"body":"Regarding the `meta` prescan discussion from mid-July, I filed https://github.com/whatwg/html/issues/6962","format":"org.matrix.custom.html","formatted_body":"Regarding the <code>meta</code> prescan discussion from mid-July, I filed https://github.com/whatwg/html/issues/6962","msgtype":"m.text"},"ts":1629090682491,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$EwMeHrA6ECdRlLHsCODeJ0jY4gNOMkwphUxgnFiMBvA"},
{"content":{"body":"annevk: is the answer at https://stackoverflow.com/questions/68793536/why-cant-i-use-a-wildcard-on-access-control-allow-headers-when-allow-credenti/68799055#68799055 a correct reading of that note in the spec?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: is the answer at https://stackoverflow.com/questions/68793536/why-cant-i-use-a-wildcard-on-access-control-allow-headers-when-allow-credenti/68799055#68799055 a correct reading of that note in the spec?","msgtype":"m.text"},"ts":1629100279046,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$3mVQZ-XrasPvrFGGuYnx306aS0KJ2MFYHAnV0Y2qIto"},
{"content":{"body":"that is, responses that include credentials can’t have `Access-Control-Allow-Headers: *` but must instead explicitly list all the allowed header names?","format":"org.matrix.custom.html","formatted_body":"that is, responses that include credentials can’t have <code>Access-Control-Allow-Headers: *</code> but must instead explicitly list all the allowed header names?","msgtype":"m.text"},"ts":1629100401135,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$XTJ8Qds3HyJG6FAH-Ei6TMtVeywKRh9SmQe3P7NEYlY"},
{"content":{"body":"(or more precisely, in responses that include credentials, the `*` in the `Access-Control-Allow-Headers` is interpreted by browsers as the literal header name `*` — not as the wildcard meaning “any header name”)","format":"org.matrix.custom.html","formatted_body":"(or more precisely, in responses that include credentials, the <code>*</code> in the <code>Access-Control-Allow-Headers</code> is interpreted by browsers as the literal header name <code>*</code> — not as the wildcard meaning “any header name”)","msgtype":"m.text"},"ts":1629100481472,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$2vpY0JGb4kuzwYpejk6wzdXwFJfZAXcBlDfAS8MIjd4"},
{"content":{"body":" * (or more precisely, in responses that include credentials, the `*` in the `Access-Control-Allow-Headers` value is interpreted by browsers as the literal header name `*` — not as the wildcard meaning “any header name”)","format":"org.matrix.custom.html","formatted_body":" * (or more precisely, in responses that include credentials, the <code>*</code> in the <code>Access-Control-Allow-Headers</code> value is interpreted by browsers as the literal header name <code>*</code> — not as the wildcard meaning “any header name”)","m.new_content":{"body":"(or more precisely, in responses that include credentials, the `*` in the `Access-Control-Allow-Headers` value is interpreted by browsers as the literal header name `*` — not as the wildcard meaning “any header name”)","format":"org.matrix.custom.html","formatted_body":"(or more precisely, in responses that include credentials, the <code>*</code> in the <code>Access-Control-Allow-Headers</code> value is interpreted by browsers as the literal header name <code>*</code> — not as the wildcard meaning “any header name”)","msgtype":"m.text"},"m.relates_to":{"event_id":"$2vpY0JGb4kuzwYpejk6wzdXwFJfZAXcBlDfAS8MIjd4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1629100502651,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$WzJLqhbMJoKoEIgwxe_3Xh6Qw-oBC4rqV_legLGBvSY"},
{"content":{"body":"sideshowbarker: yeah","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: yeah","msgtype":"m.text"},"ts":1629113902540,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$49c5CWs6kj492iiTwllFMQer919FfpcR63XaCcvkqlA"},
{"content":{"body":"html5lib-tests expect `<!DOCTYPE>` to have `null` name. See https://github.com/validator/htmlparser/issues/35 . Yet, per https://dom.spec.whatwg.org/#documenttype , the name isn't nullable in the DOM, and is `\"\"` rather than `null` in Chrome. Is the difference between `null` and `\"\"` visible via the Web? Should the spec and test suite change instead of implementations?","format":"org.matrix.custom.html","formatted_body":"html5lib-tests expect <code>&lt;!DOCTYPE&gt;</code> to have <code>null</code> name. See https://github.com/validator/htmlparser/issues/35 . Yet, per https://dom.spec.whatwg.org/#documenttype , the name isn't nullable in the DOM, and is <code>&quot;&quot;</code> rather than <code>null</code> in Chrome. Is the difference between <code>null</code> and <code>&quot;&quot;</code> visible via the Web? Should the spec and test suite change instead of implementations?","msgtype":"m.text"},"ts":1629118972153,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$nr7xOrzQrlPoqJ9TFt85khkiY4K0hfhmQrgxhH4qKk4"},
{"content":{"body":"(Context, trying to merge https://github.com/validator/htmlparser/commit/3be25a0e44adda338c99bcc85ae9b6167522bc75 to Gecko and wrote a WPT expecting `null`.)","format":"org.matrix.custom.html","formatted_body":"(Context, trying to merge https://github.com/validator/htmlparser/commit/3be25a0e44adda338c99bcc85ae9b6167522bc75 to Gecko and wrote a WPT expecting <code>null</code>.)","msgtype":"m.text"},"ts":1629119033271,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$O7RtC_CqKPq4Gpc7rh8sRcqrZ3ckgIkX4U30KRcTez8"},
{"content":{"body":"> <@hsivonen:mozilla.org> html5lib-tests expect `<!DOCTYPE>` to have `null` name. See https://github.com/validator/htmlparser/issues/35 . Yet, per https://dom.spec.whatwg.org/#documenttype , the name isn't nullable in the DOM, and is `\"\"` rather than `null` in Chrome. Is the difference between `null` and `\"\"` visible via the Web? Should the spec and test suite change instead of implementations?\n\n> DOCTYPE tokens have a name, a public identifier, a system identifier, and a force-quirks flag. When a DOCTYPE token is created, its name, public identifier, and system identifier must be marked as missing (which is a distinct state from the empty string), and the force-quirks flag must be set to off (its other state is on).\n\nThat said, I don't think _anything_ (even parse errors) differ between null and \"\" for the name","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$nr7xOrzQrlPoqJ9TFt85khkiY4K0hfhmQrgxhH4qKk4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br>html5lib-tests expect <code>&lt;!DOCTYPE&gt;</code> to have <code>null</code> name. See https://github.com/validator/htmlparser/issues/35 . Yet, per https://dom.spec.whatwg.org/#documenttype , the name isn't nullable in the DOM, and is <code>\"\"</code> rather than <code>null</code> in Chrome. Is the difference between <code>null</code> and <code>\"\"</code> visible via the Web? Should the spec and test suite change instead of implementations?</blockquote></mx-reply><blockquote>\n<p>DOCTYPE tokens have a name, a public identifier, a system identifier, and a force-quirks flag. When a DOCTYPE token is created, its name, public identifier, and system identifier must be marked as missing (which is a distinct state from the empty string), and the force-quirks flag must be set to off (its other state is on).</p>\n</blockquote>\n<p>That said, I don't think <em>anything</em> (even parse errors) differ between null and &quot;&quot; for the name</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$nr7xOrzQrlPoqJ9TFt85khkiY4K0hfhmQrgxhH4qKk4"}},"msgtype":"m.text"},"ts":1629120851139,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$biRPv0ndqwrupchthZNm8kn8UknmV8ruwM3LEC8vuw0"},
{"content":{"body":"(for public identifiers and system identifiers it can be observed _if_ you can observe parse errors, and in certain combinations by quirks mode activation)","format":"org.matrix.custom.html","formatted_body":"(for public identifiers and system identifiers it can be observed <em>if</em> you can observe parse errors, and in certain combinations by quirks mode activation)","msgtype":"m.text"},"ts":1629120987333,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$7LQKbw5q_YpLgWfGzhXxOGO0yBs8F2SpqNkCHXn-zMY"},
{"content":{"body":"there's some kinda broad questions about how useful/accurate the tokeniser tests are, given for many implementations it's not possible to run the tokeniser in isolation ","msgtype":"m.text"},"ts":1629121054028,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$8JCtxG8FNPWfugK1K5f4AZOYyyxBPDjb8ejgzNc5MDg"},
{"content":{"body":"\"Each Entity must: identify individuals who are authorized to participate in each Workstream, \" - how do I do this?","msgtype":"m.text"},"ts":1629122970091,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$4uDwhyqBmn3su0Gzk-ENUlMT5CdXl_ZdnwsrdNNjSb8"}
]