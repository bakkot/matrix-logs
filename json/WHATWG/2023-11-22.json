[
{"content":{"body":"Has anybody made a diagram that shows the relationship/structure for navigables, browsing contexts, Windows, documents?\n\nFor example, something similar to https://docs.google.com/presentation/d/1ZRIQbUKw9Tf077odCh66OrrwRIVNLvI_nhLm2Gi__F0/embed?start=false&loop=false&delayms=3000&slide=id.g30f0fc55_0_152","m.mentions":{},"msgtype":"m.text"},"ts":1700615303834,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CZRfMEskHFJdtcvJ7MJwbRjYDckp4qt6e4lnrbPA27I"},
{"content":{"body":"Some attempts in https://github.com/whatwg/html/issues/3863 , outdated by now","m.mentions":{},"msgtype":"m.text"},"ts":1700616164025,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DqNxJNIfZg1uJEAJst6TJp2jp51DnlbgPEGgmfxnyMg"},
{"content":{"body":"One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to an observable/JavaScript-testable condition.\n\nExample: `if (!frame->page()`)\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":"<p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to an observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page()</code>)</p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700618054264,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$n1OKoNdy74mgbFzXKvYtI63wtoeSErtDHsjGGf4dCOg"},
{"content":{"body":" * One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to an observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":" * <p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to an observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"m.new_content":{"body":"One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to an observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":"<p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to an observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$n1OKoNdy74mgbFzXKvYtI63wtoeSErtDHsjGGf4dCOg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700618101968,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$9BxkBV33rnTBDSQ8fjAT_8__3Rq6aITjH9nYuUR8KNE"},
{"content":{"body":" * One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to an observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":" * <p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to an observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"m.new_content":{"body":"One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to an observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":"<p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to an observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$n1OKoNdy74mgbFzXKvYtI63wtoeSErtDHsjGGf4dCOg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700618125290,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jjB8Yrp7O4aO3XZYcJx93OPKa-a-kWgRvJ6zpBd7RR4"},
{"content":{"body":" * One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to _any_ observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":" * <p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to <em>any</em> observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"m.new_content":{"body":"One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.\n\nI mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.\n\nAnd then WebKit and Blink have a Page class — which in Gecko corresponds maybe to a _docshell_? But neither Page nor docshell seem to map clearly to anything in the spec.\n\nAnd because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even _if_ it corresponds to _any_ observable/JavaScript-testable condition.\n\nExample: `if (!frame->page())`\n\nSince I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.","format":"org.matrix.custom.html","formatted_body":"<p>One thing that’s challenging about implementing spec features is that the abstractions/classes used in browser-engine source — other than Document and maybe Window — don’t clearly map to spec constructs.</p>\n<p>I mean the fact that, for example, there’s no, say, BrowsingContext class in WebKit/Blink — instead the closest thing to that (and to a navigable) is called Frame, and it’s not completely clear that really does correspond very directly to the spec constructs.</p>\n<p>And then WebKit and Blink have a Page class —&nbsp;which in Gecko corresponds maybe to a <em>docshell</em>? But neither Page nor docshell seem to map clearly to anything in the spec.</p>\n<p>And because of all that, sometimes when I look at some particular conditional check in the engine sources, I can’t see what particular observable (JavaScript-testable) condition in frontend JavaScript code that condition corresponds to — or even <em>if</em> it corresponds to <em>any</em> observable/JavaScript-testable condition.</p>\n<p>Example: <code>if (!frame-&gt;page())</code></p>\n<p>Since I don’t know what (if anything) a Page maps to in the spec, I also don’t know what it means for a Frame to not have an associated Page, and whether a change to the code block for that condition is something that will be observable from frontend code and potentially affect existing tests — or that should require new tests.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$n1OKoNdy74mgbFzXKvYtI63wtoeSErtDHsjGGf4dCOg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700618223844,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xv91BlsZwCnnQ2gDDcqrHltU3T82OFgOLFFm5XYz_-8"},
{"content":{"body":"Dominic Farolino has thought a lot about these things in Chromium","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> has thought a lot about these things in Chromium","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1700625108323,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$voMph4yREsFxAlOIzCDZHraejFjm0vWRLMCzzf6i2-c"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Dominic Farolino has thought a lot about these things in Chromium\n\nI'll look forward to chatting with Dom about it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$voMph4yREsFxAlOIzCDZHraejFjm0vWRLMCzzf6i2-c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br /><a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> has thought a lot about these things in Chromium</blockquote></mx-reply>I'll look forward to chatting with Dom about it","m.relates_to":{"m.in_reply_to":{"event_id":"$voMph4yREsFxAlOIzCDZHraejFjm0vWRLMCzzf6i2-c"}},"msgtype":"m.text"},"ts":1700633948933,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$8xE-eIEvmWPCqOOEqWd5C09p6AMxUR2Nbnf9Q32GUoM"},
{"content":{"body":"Domenic: do you recall the story around Uint8Array in more detail? https://github.com/whatwg/fetch/issues/1724","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: do you recall the story around Uint8Array in more detail? https://github.com/whatwg/fetch/issues/1724","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1700637323343,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cjEZ3lQrXRjxlop0ijFHOML-kyfiDw4bAZoy2FGTf8Y"},
{"content":{"body":"It certainly wasn't about what implementations were doing","m.mentions":{},"msgtype":"m.text"},"ts":1700637332826,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2Tk65tSfAziEqpPEgm-N6VRsjVWX3VokvMjpwAaKdhU"},
{"content":{"body":"It was originally a constraint on outputs. Then for upload streams we decided not to allow anything else... not sure exactly why. Maybe because you should only be upload-streaming bytes, not float32s?","m.mentions":{},"msgtype":"m.text"},"ts":1700637405610,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$CF05ykJhJqHYPnV_DtlvvmsX2Ta7wJqtO7WMS8w5G-8"},
{"content":{"body":"For arguments to methods, accepting BufferSource seems like the general rule.","m.mentions":{},"msgtype":"m.text"},"ts":1700637413557,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$aaMVaE-p7pxRcdfE2an5IVUqoOfRCRQwfxkvh_dABSA"},
{"content":{"body":"Maybe for upload streams it was so that code path could be optimized? But okay, that matches my general recollection.","m.mentions":{},"msgtype":"m.text"},"ts":1700637518892,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ptLs0iDUjtKEFbl1bYsKRhIkhe0DcsaHmk4vnkvaCag"},
{"content":{"body":"😜","m.mentions":{},"msgtype":"m.text"},"ts":1700667243488,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$98JB92P9Oq4tclu8JRI2C_Qo43PFtTByWqAd5xg8YKI"},
{"content":{"body":"apparently the ca thas been at the keyboard","m.mentions":{},"msgtype":"m.text"},"ts":1700674638830,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$t1LhFyC5k8pHTZh-dyoluWKK9IbpXk134g6i2AW2ApI"},
{"content":{"body":" * apparently the cat tas been at the keyboard","m.mentions":{},"m.new_content":{"body":"apparently the cat tas been at the keyboard","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$t1LhFyC5k8pHTZh-dyoluWKK9IbpXk134g6i2AW2ApI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700674643258,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$YnN27n3HrJKueXyt7HACBZ_NjxqAIeCfqC5ywdYIqn0"},
{"content":{"body":" * ☝️ apparently the cat has been at the keyboard","m.mentions":{},"m.new_content":{"body":"☝️ apparently the cat has been at the keyboard","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$t1LhFyC5k8pHTZh-dyoluWKK9IbpXk134g6i2AW2ApI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700674657294,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$L95weAifKzQHTYOXFQO378fPGfS4MrU8joFwCVYmYxI"},
{"content":{"body":"Is it intended that a browsing context group should be 1-1 with an agent cluster, and a browsing context should be 1-1 with an agent, from ECMA 262? ","msgtype":"m.text"},"ts":1700690603973,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$iChATiWJkYOM4lBhauyEuE8qmleVCqwe1QQ5Yutjnic"},
{"content":{"body":"It seems like the AO to create a new browsing context and document is essentially saying, \"create a new agent\". But it's not clear to me what part of the algorithms following from the rules for choosing a target navigable tell me whether I need to create a new process for the browsing context. Or rather, what part of the rules tell me whether a new navigable should live within the same agent cluster or not.","msgtype":"m.text"},"ts":1700690847401,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$hh5HpORfRtfEzyLumNJBo08epLn01tLNjTulUdVYX7U"},
{"content":{"body":"Or wait no. Create a new browsing context and document says to create a new realm. Which is not the same as an agent. 😵‍💫","msgtype":"m.text"},"ts":1700691023234,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$1c6IivI6O88awX8NDQ567EB66QXDLxXCB-U4Ie9e_eA"}
]