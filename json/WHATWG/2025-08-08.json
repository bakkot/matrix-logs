[
{"content":{"body":"Are there any other popular matrix servers worth joining? Being in only one for a platform seems lonely.","m.mentions":{},"msgtype":"m.text"},"ts":1754629661053,"senderName":"Doctor","senderId":"@blackaslight:matrix.org","id":"$pBIm6YrTPiBMcP33egeOmVmU5_coZ3Cp_YJGWZwXswY"},
{"content":{"body":"Is there any reason why WebIDL allows a return type for setters? https://webidl.spec.whatwg.org/#idl-indexed-properties https://drafts.css-houdini.org/css-typed-om-1/#csstransformvalue","m.mentions":{},"msgtype":"m.text"},"ts":1754643955617,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$LGVDnTDzV6YvFYSj6GkmSokjUjZVIIV12lTNtsRJmUU"},
{"content":{"body":"We are discussing this in https://bugzilla.mozilla.org/show_bug.cgi?id=1981764","m.mentions":{},"msgtype":"m.text"},"ts":1754644003458,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$-EvS8jYfOG-erNBvhjSs3bFYWQf476GtyyWd8myClPo"},
{"content":{"body":"filed https://github.com/whatwg/webidl/issues/1516","m.mentions":{},"msgtype":"m.emote"},"ts":1754644385121,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$c8DfPDtBH9j6N6q1o0ixBvNxg3ACQq975JDKQkolpg8"},
{"content":{"body":"janvarga: I think emilio is correct and we should either enforce undefined or forbid a type declaration altogether if possible ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@janvarga:matrix.org\">janvarga</a>: I think <a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a> is correct and we should either enforce undefined or forbid a type declaration altogether if possible","m.mentions":{"user_ids":["@janvarga:matrix.org","@emilio:mozilla.org"]},"msgtype":"m.text"},"ts":1754644411242,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xYv1Q3X5MwSQ1ZxUJGdNRbyx3k9APqAdc8fXhMH95mM"},
{"content":{"body":"Sounds good.","m.mentions":{},"msgtype":"m.text"},"ts":1754644476047,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$FKrUk82Iq3SsH6rD7J-7x32LTK9FWrrogJ_VS_nZL_s"},
{"content":{"body":"Interesting how this started spreading. I mean, allowed in WebIDL, then CSS Typed OM used that, then chrome and webkit copied that :)","m.mentions":{},"msgtype":"m.text"},"ts":1754644615178,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$tfepwpJzog1ZwDZ0sZHtPifjdyb6ePwfbiCelx-5Nmw"},
{"content":{"body":"Well if it wasn't for that compiler warning about unused results we wouldn't have noticed either probably","m.mentions":{},"msgtype":"m.text"},"ts":1754644684464,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$KMCKOW9qVgbLcFM7gM16ZDveLbY-E0Lx9bTD2OK3vuI"},
{"content":{"body":"Yeah :)","m.mentions":{},"msgtype":"m.text"},"ts":1754644704796,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$1j6wFDeXOnYvkrW9pp8fBsPEFAma1W0YW_PaprbuHIs"},
{"content":{"body":"Sent https://github.com/w3c/css-houdini-drafts/pull/1143 to the typedom spec","m.mentions":{},"msgtype":"m.text"},"ts":1754644734932,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$UNhuafhAeyT4hDags0QYbLDD9DunHJLSCRSPX-6qu9k"},
{"content":{"body":"Even CSSUnparsedValue was ok, because the generated code used an out param ...","m.mentions":{},"msgtype":"m.text"},"ts":1754644740903,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$q-NIb7eHd8bP08W3S69d0MSS-d0V92xCXsi1b00nC24"},
{"content":{"body":"Hah, so mostly by chance...","m.mentions":{},"msgtype":"m.text"},"ts":1754644760709,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$rd0eaBP4vGHNdbrnWd3Qf93_GkePnLYhqGQN85tjPHk"},
{"content":{"body":"So I guess, the way to go now, should be changing the WebIDL in Gecko to return undefined and maybe also provide a simple patch for WebIDL.py to assert that ?","m.mentions":{},"msgtype":"m.text"},"ts":1754644828089,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$ffJX9j8ErTB9lQoE9sanm98LULYTA-Fjgr7W9PCmK1k"},
{"content":{"body":"That sounds good to me. That way we hopefully identify other cases as well.","m.mentions":{},"msgtype":"m.text"},"ts":1754644882059,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vZ53YsOUJV6hxBanq8UYtLMIiu_rC31_vVbElvenLPs"},
{"content":{"body":"I don't think WebKit has shipped CSS Typed OM  btw, there were too many issues with that.","m.mentions":{},"msgtype":"m.text"},"ts":1754644937638,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cNoyjnlPxUymLCc1zH90IKAxraTIlzh_J-tjGYL9bpg"},
{"content":{"body":"* I don't think WebKit has shipped CSS Typed OM  btw, there were too many issues with that specification.","m.mentions":{},"m.new_content":{"body":"I don't think WebKit has shipped CSS Typed OM  btw, there were too many issues with that specification.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$cNoyjnlPxUymLCc1zH90IKAxraTIlzh_J-tjGYL9bpg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754644944579,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xzguJcOqNzMdFISFvmkDgWkzj2mYoX9TFfyVTkZLrhw"},
{"content":{"body":"Hm","m.mentions":{},"msgtype":"m.text"},"ts":1754644950823,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$KEl_MHnXriJeA4HBgC211eLUcIRu0IwXjgK8sPPWBn4"},
{"content":{"body":"annevk: epiphany does support it at least, can't check Safari r/n tho...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: epiphany does support it at least, can't check Safari r/n tho...","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1754645002170,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$Lwz4PL7sDzZQYnLTLjQMgKKF_b39rvHUcmU6hTAqG-o"},
{"content":{"body":"`let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.lenth` returns 1","format":"org.matrix.custom.html","formatted_body":"<code>let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.lenth</code> returns 1","m.mentions":{},"msgtype":"m.text"},"ts":1754645034426,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$LkmhVbW4rSxhKLy_8dDOiNC9GK7y3-bF3VRT7SYavVI"},
{"content":{"body":"in Safari on mac","m.mentions":{},"msgtype":"m.text"},"ts":1754645039849,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$om2daa9Co0cH7gGbPumcBV9vC54IQgZr0kWwBEp6zDs"},
{"content":{"body":"* `let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.length` returns 1","format":"org.matrix.custom.html","formatted_body":"* <code>let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.length</code> returns 1","m.mentions":{},"m.new_content":{"body":"`let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.length` returns 1","format":"org.matrix.custom.html","formatted_body":"<code>let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.length</code> returns 1","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$LkmhVbW4rSxhKLy_8dDOiNC9GK7y3-bF3VRT7SYavVI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754645057153,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$5zVoEjkqeL4Gxxn0drzlnwRWrsN0d4Aw_T_qGtgt_Ns"},
{"content":{"body":"janvarga: emilio: I misremembered. It's only CSSTypedOMColorEnabled that's disabled.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@janvarga:matrix.org\">janvarga</a>: <a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>: I misremembered. It's only CSSTypedOMColorEnabled that's disabled.","m.mentions":{"user_ids":["@janvarga:matrix.org","@emilio:mozilla.org"]},"msgtype":"m.text"},"ts":1754645486876,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$dWiCrMIWU1yafmPAw3byJqe3I8x9BMWfvRC2YBP9O6s"},
{"content":{"body":"I wanted to use that for `<input type=color>`, but alas.","format":"org.matrix.custom.html","formatted_body":"I wanted to use that for <code>&lt;input type=color&gt;</code>, but alas.","m.mentions":{},"msgtype":"m.text"},"ts":1754645577156,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$lV58XAfyVSlg9hqIKuq5ODWtZlBeKZVXsTHKU_jPRko"},
{"content":{"body":"FWIW I only find one instance of named setters in Gecko (`Storage.setItem`, which does return `undefined`)","format":"org.matrix.custom.html","formatted_body":"FWIW I only find one instance of named setters in Gecko (<code>Storage.setItem</code>, which does return <code>undefined</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1754645619585,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$85uL-75oiCcS_rjj0njcXsn067sN0SOjUYJuYbkq9W4"},
{"content":{"body":"Same on WebKit and Blink","m.mentions":{},"msgtype":"m.text"},"ts":1754645827682,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$5S9a2I2UhGGmnDTpNYKtbpndFxlviw2AEqul9ThTHAU"},
{"content":{"body":"There's also `DOMStringMap`, `HTMLSelectElement`, and `HTMLOptionsCollection` per HTML, but they're all correct.","format":"org.matrix.custom.html","formatted_body":"There's also <code>DOMStringMap</code>, <code>HTMLSelectElement</code>, and <code>HTMLOptionsCollection</code> per HTML, but they're all correct.","m.mentions":{},"msgtype":"m.text"},"ts":1754645845461,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$APSjmlLnyhwpYCeqqH8ee0a5r7k-kowQ6y4yqJOgWKQ"},
{"content":{"body":"Right but those are not named right?","m.mentions":{},"msgtype":"m.text"},"ts":1754645859868,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$1pJ6B02hgfCO8E5EM6d4S_L_1Bsb4sHaxglepl_GCBA"},
{"content":{"body":"I was just thinking that, syntax wise, it might make sense to remove the return type for setters/deleters altogether","m.mentions":{},"msgtype":"m.text"},"ts":1754645887927,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$4BP7WUd0g6-LdVTZPlYrjXBPgX6aVuSD8-pt_taJjRY"},
{"content":{"body":"But at that point may as well remove the name","m.mentions":{},"msgtype":"m.text"},"ts":1754645930491,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$dK7pgUI4hp3yvPua6c4zOvxfWqYcHQouV1SI1VXoWEs"},
{"content":{"body":"It seems only Storage would need to change?","m.mentions":{},"msgtype":"m.text"},"ts":1754645941212,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$k2JjaWTtf5s9RPO8cQx-CtdZw6SE5UJE7hoG_ZHCjMY"},
{"content":{"body":"I wonder if that creates an ambiguity as then for a named setter it might look like it returns a setter type.","m.mentions":{},"msgtype":"m.text"},"ts":1754645948781,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$U7Grj7yDQ1XZRMVzSlLrra6b5DJ3GGyAenWiTCvTFo4"},
{"content":{"body":"(As in, add a `undefined setItem(...);` on top of the setter ","format":"org.matrix.custom.html","formatted_body":"(As in, add a <code>undefined setItem(...);</code> on top of the setter","m.mentions":{},"msgtype":"m.text"},"ts":1754645968093,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$3-RPyBUJw-pZ8XQDN49aUQY8q6hXwd1_RoQY4RMeq-w"},
{"content":{"body":"* (As in, add a `undefined setItem(...);` on top of the setter)","format":"org.matrix.custom.html","formatted_body":"* (As in, add a <code>undefined setItem(...);</code> on top of the setter)","m.mentions":{},"m.new_content":{"body":"(As in, add a `undefined setItem(...);` on top of the setter)","format":"org.matrix.custom.html","formatted_body":"(As in, add a <code>undefined setItem(...);</code> on top of the setter)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$3-RPyBUJw-pZ8XQDN49aUQY8q6hXwd1_RoQY4RMeq-w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754645978422,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$rgvB-EbhQfukJxGCOCzq51jjLgNn1E-xFrJ1onw3HF0"},
{"content":{"body":"I see, if that's really the only setter we have that might be reasonable, but it will make it inconsistent with getters, where I don't think we'd want to make such a change. So hmm.","m.mentions":{},"msgtype":"m.text"},"ts":1754646517483,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$lY5kxmBL6nj4eb8GQZoFX5TB-WwVQWvpp9gduf7Bu3Y"},
{"content":{"body":"Right, my point is we'd remove named setters altogether","m.mentions":{},"msgtype":"m.text"},"ts":1754646611363,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$ZqAqvo-4or7z4QpCGcDyZ3JgMdG12ol3I9OiIzmMUkg"},
{"content":{"body":"Ok... It was just an idea, I don't have very strong opinions either way. It's just that restricting it in prose tends to not be super effective in my experience :)","m.mentions":{},"msgtype":"m.text"},"ts":1754646669708,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$RxP6bqwA-28MnpLhgkT9A7vKYccMePf1MAk7Ykcgi4Q"},
{"content":{"body":"Yeah I guess named getters are used pretty often","m.mentions":{},"msgtype":"m.text"},"ts":1754646751922,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$y4hlo1khjjgsUpXZoFJRvX683NP_lsSdadjzhUpYbNY"},
{"content":{"body":"Interesting, Gecko has a WebIDL parser tests containing: ```interface SpecialMethodsCombination {\n  getter deleter boolean (DOMString name);\n};```\n","format":"org.matrix.custom.html","formatted_body":"Interesting, Gecko has a WebIDL parser tests containing: <code>interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };</code>","m.mentions":{},"msgtype":"m.text"},"ts":1754652136933,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$TYdbJnCCUQfS6TuU1N7nlNVb4lKzNqxxtCZzzlxRDhY"},
{"content":{"body":"Obviously changing boolean to undefined doesn't work because getters must have non-undefined return type, maybe this was the reason for having return type for setters and deleters","m.mentions":{},"msgtype":"m.text"},"ts":1754652273256,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$p8kiC2d4gogSmBnD-mRR27Yrx-S7xRfegVKIzknxxSw"},
{"content":{"body":"* Interesting, Gecko has a WebIDL parser test containing: `interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };`","format":"org.matrix.custom.html","formatted_body":"* Interesting, Gecko has a WebIDL parser test containing: <code>interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };</code>","m.mentions":{},"m.new_content":{"body":"Interesting, Gecko has a WebIDL parser test containing: `interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };`","format":"org.matrix.custom.html","formatted_body":"Interesting, Gecko has a WebIDL parser test containing: <code>interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$TYdbJnCCUQfS6TuU1N7nlNVb4lKzNqxxtCZzzlxRDhY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1754652297305,"senderName":"janvarga","senderId":"@janvarga:matrix.org","id":"$CpmPfSlsBoBm8ld98WaMkhkuLOo5NGKa1qk-Jl9Ggok"}
]