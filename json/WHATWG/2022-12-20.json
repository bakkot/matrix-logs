[
{"content":{"body":"Is there a syntactic convention for enum values?","msgtype":"m.text","org.matrix.msc1767.text":"Is there a syntactic convention for enum values?"},"ts":1671495803983,"senderName":"jugglinmike","senderId":"@jugglinmike:matrix.org","id":"$9Ydu0I95WGwKuD-og8ESr63AnjNrcD1nY7JS7_2XTRg"},
{"content":{"body":"It looks like they're indistinguishable from strings https://webidl.spec.whatwg.org/#idl-enums","msgtype":"m.text","org.matrix.msc1767.text":"It looks like they're indistinguishable from strings https://webidl.spec.whatwg.org/#idl-enums"},"ts":1671496547373,"senderName":"jugglinmike","senderId":"@jugglinmike:matrix.org","id":"$S8tompvH1wm8auNNGmO9QtTYusCHRr_G7NMJXv8QQ_Y"},
{"content":{"body":"ðŸ‘»","msgtype":"m.text"},"ts":1671518751424,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$9_FTq91MykZ3kMrsOBLgeel33sTSRC-4Rc_VPJYNcRc"},
{"content":{"body":"jugglinmike: they are, but also: https://w3ctag.github.io/design-principles/#casing-rules","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a>: they are, but also: https://w3ctag.github.io/design-principles/#casing-rules","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jugglinmike: they are, but also: https://w3ctag.github.io/design-principles/#casing-rules","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a>: they are, but also: https://w3ctag.github.io/design-principles/#casing-rules","mimetype":"text/html"}]},"ts":1671525315341,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Xf7KWUCfJemnRfHF1Jp3VfiM7CPjhXAR33XxBPCsGRs"},
{"content":{"body":"(perhaps we should enforce those casing rules in IDL)","msgtype":"m.text","org.matrix.msc1767.text":"(perhaps we should enforce those casing rules in IDL)"},"ts":1671525338629,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$eZeCtS0AtXGC_hMrUmASw1VGC4jVLl303FXH6yWxELs"},
{"content":{"body":"But im back with same question as yesterday?","msgtype":"m.text"},"ts":1671525878498,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$AlU_TnDcIE83xZw87nXetvnZlVE57oBjR9q5WTc3i0M"},
{"content":{"body":"hacknorris: It sounds like you're asking for more of https://w3c.github.io/csswg-drafts/css-values-5/#attr-notation to be supported?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: It sounds like you're asking for more of https://w3c.github.io/csswg-drafts/css-values-5/#attr-notation to be supported?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hacknorris: It sounds like you're asking for more of https://w3c.github.io/csswg-drafts/css-values-5/#attr-notation to be supported?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: It sounds like you're asking for more of https://w3c.github.io/csswg-drafts/css-values-5/#attr-notation to be supported?","mimetype":"text/html"}]},"ts":1671525980939,"senderName":"foolip","senderId":"@foolip:matrix.org","id":"$-PBnuOBwqZZLBxzt0Q3JLLjXYNfCUeMVUMJoYrXHwn8"},
{"content":{"body":"sort of too but also for a way to imitiate img tag with only css","msgtype":"m.text"},"ts":1671528089588,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$ZS2B8mbx6KPt4HssBl36xeCf69nuJRhAoW9ik6H8Xks"},
{"content":{"body":"* sort of too but also for a way to imitiate img tag with only css","m.new_content":{"body":"sort of too but also for a way to imitiate img tag with only css","msgtype":"m.text"},"m.relates_to":{"event_id":"$ZS2B8mbx6KPt4HssBl36xeCf69nuJRhAoW9ik6H8Xks","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1671528096173,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$bJdPJAyl4TSRuQQFHkdC120djYOZvzUFcYJyAkKAxIM"},
{"content":{"body":"And making ot automated for different image sizes","msgtype":"m.text"},"ts":1671528140038,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$8_r44n7DBSzTJLfvYp-IUwAFT9FjjMPO80e49uVzx1w"},
{"content":{"body":"Image source","msgtype":"m.text"},"ts":1671528241863,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$D6JfpsRZuoHln096NlVhRZYmozvxmfFkTe85oPtRZl0"},
{"content":{"body":"Containers source","msgtype":"m.text"},"ts":1671528277746,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$CPzSCBuaWPSgQazM11BpIb4fum3AVrJufB0A_53f3No"},
{"content":{"body":"App-container > app-box > app-icon","msgtype":"m.text"},"ts":1671528307056,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$xDuMteerTY1dLMM7UrXIKCoMLpcYzMJEgUFJb6t_8_U"},
{"content":{"body":"hacknorris: I'm not sure that I understand, but WHATWG doesn't maintain CSS, if it's one or more new CSS features you'd like to suggest, https://github.com/w3c/csswg-drafts/issues is the place for that. Although just filing an issue and waiting will probably be a bad first experience, https://www.w3.org/Style/CSS/current-work#contribute might be a better place to start.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: I'm not sure that I understand, but WHATWG doesn't maintain CSS, if it's one or more new CSS features you'd like to suggest, https://github.com/w3c/csswg-drafts/issues is the place for that. Although just filing an issue and waiting will probably be a bad first experience, https://www.w3.org/Style/CSS/current-work#contribute might be a better place to start.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hacknorris: I'm not sure that I understand, but WHATWG doesn't maintain CSS, if it's one or more new CSS features you'd like to suggest, https://github.com/w3c/csswg-drafts/issues is the place for that. Although just filing an issue and waiting will probably be a bad first experience, https://www.w3.org/Style/CSS/current-work#contribute might be a better place to start.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: I'm not sure that I understand, but WHATWG doesn't maintain CSS, if it's one or more new CSS features you'd like to suggest, https://github.com/w3c/csswg-drafts/issues is the place for that. Although just filing an issue and waiting will probably be a bad first experience, https://www.w3.org/Style/CSS/current-work#contribute might be a better place to start.","mimetype":"text/html"}]},"ts":1671529523661,"senderName":"foolip","senderId":"@foolip:matrix.org","id":"$xQNfsm97PNmHZu91Fqc_GcKg3-GfZ5wo9LGCiQVgyIY"},
{"content":{"body":"But attr() url property is documented?","msgtype":"m.text"},"ts":1671529628568,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$eZKRG0T4drtRZhICte98-yQdWgKr2JgIDwwDdU6D96A"},
{"content":{"body":"just not used","msgtype":"m.text"},"ts":1671529632888,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$W5XDAEf45-6li1WVCg5J8a2Xr3DKFrnyqTExIGDKr1A"},
{"content":{"body":"And i'd like to know if there is any other way to convert custom tag to embed/img","msgtype":"m.text"},"ts":1671530563422,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$p8EeQKoHuy_Svj41E46huOWIrC7eC_7YVm-7xZzswxo"},
{"content":{"body":"It's only partially implemented, in particular using it for URLs isn't supported and a topic of security discussion, see https://github.com/w3c/csswg-drafts/issues/5092","msgtype":"m.text","org.matrix.msc1767.text":"It's only partially implemented, in particular using it for URLs isn't supported and a topic of security discussion, see https://github.com/w3c/csswg-drafts/issues/5092"},"ts":1671530613848,"senderName":"foolip","senderId":"@foolip:matrix.org","id":"$j3v-0Bl-pcxL1I_SI9AXDM4BBxJzvbibYlovPjNmieE"},
{"content":{"body":"* And i'd like to know if there is any other way to convert custom tag to embed/img","m.new_content":{"body":"And i'd like to know if there is any other way to convert custom tag to embed/img","msgtype":"m.text"},"m.relates_to":{"event_id":"$p8EeQKoHuy_Svj41E46huOWIrC7eC_7YVm-7xZzswxo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1671530634624,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$x7uvDP96umzO2nPae0jK4yf--_qyel9OAGdlHsi0VtA"},
{"content":{"body":"hacknorris: assuming you want something that works today, can you use a framework with a template system, to generate the complex markup from much simpler inputs?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: assuming you want something that works today, can you use a framework with a template system, to generate the complex markup from much simpler inputs?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hacknorris: assuming you want something that works today, can you use a framework with a template system, to generate the complex markup from much simpler inputs?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@hacknorris:arcticfoxes.net\">hacknorris</a>: assuming you want something that works today, can you use a framework with a template system, to generate the complex markup from much simpler inputs?","mimetype":"text/html"}]},"ts":1671530706253,"senderName":"foolip","senderId":"@foolip:matrix.org","id":"$NHDxcgfuheXYuOwDZUKqH4EQ1KLVLH1M2lxq65lePIY"},
{"content":{"body":"Mhm","msgtype":"m.text"},"ts":1671531260886,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$zgCSEueUQGYYandNn6RnK0BbsOJ7_fvcdweLTLvn3mU"},
{"content":{"body":"Dtd?","msgtype":"m.text"},"ts":1671531316527,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$9uQdijpO4WXBgtzQ_Qb_4qIXitq4oMPwKuF7-KEcxMg"},
{"content":{"body":"> <@foolip:matrix.org> It's only partially implemented, in particular using it for URLs isn't supported and a topic of security discussion, see https://github.com/w3c/csswg-drafts/issues/5092\n\nwill check later - temporary problems in hosting service","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$j3v-0Bl-pcxL1I_SI9AXDM4BBxJzvbibYlovPjNmieE\">In reply to</a> <a href=\"https://matrix.to/#/@foolip:matrix.org\">@foolip:matrix.org</a><br>It&#39;s only partially implemented, in particular using it for URLs isn&#39;t supported and a topic of security discussion, see https:&#47;&#47;github.com&#47;w3c&#47;csswg-drafts&#47;issues&#47;5092</blockquote></mx-reply>will check later - temporary problems in hosting service","m.relates_to":{"m.in_reply_to":{"event_id":"$j3v-0Bl-pcxL1I_SI9AXDM4BBxJzvbibYlovPjNmieE"}},"msgtype":"m.text"},"ts":1671532629009,"senderName":"hacknorris","senderId":"@hacknorris:arcticfoxes.net","id":"$0zEjQKtLV8pbjinAr04KJ_HKt7opZOER8ftlHtI7miA"},
{"content":{"body":"Hello,\n\nI've been playing around with the File System Access API. I experimented with it and found it may lack of a functionality. As I'm new to the WHATWG / specification world I'd rather ask here before submitting anything on the repository (https://github.com/whatwg/fs).\n\nWhen retrieving a FileSystemHandle (either a file or a directory) from IndexedDB storage, there is currently no direct way to test if an entry exists on user's device. While trying (on Chrome at least), you need to call a method (like `createWritable` / `getFileHandle`) which will ultimately test that such entry does exist, when it does not, returned Promise rejects with a NotFoundError.\n\nMay I suggest to add a new method on the FileSystemHandle interface, something like `Promise<boolean> exists()` to test it? Apart from this storage use-case, I think it could be used in other use-cases (e.g. watch-like feature).\n\nBtw, what difference is there between specification of WICG and WHATWG? I don't see which one would be more suited to eventually post my issue.","format":"org.matrix.custom.html","formatted_body":"<p>Hello,</p>\n<p>I've been playing around with the File System Access API. I experimented with it and found it may lack of a functionality. As I'm new to the WHATWG / specification world I'd rather ask here before submitting anything on the repository (https://github.com/whatwg/fs).</p>\n<p>When retrieving a FileSystemHandle (either a file or a directory) from IndexedDB storage, there is currently no direct way to test if an entry exists on user's device. While trying (on Chrome at least), you need to call a method (like <code>createWritable</code> / <code>getFileHandle</code>) which will ultimately test that such entry does exist, when it does not, returned Promise rejects with a NotFoundError.</p>\n<p>May I suggest to add a new method on the FileSystemHandle interface, something like <code>Promise&lt;boolean&gt; exists()</code> to test it? Apart from this storage use-case, I think it could be used in other use-cases (e.g. watch-like feature).</p>\n<p>Btw, what difference is there between specification of WICG and WHATWG? I don't see which one would be more suited to eventually post my issue.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Hello,\n\nI've been playing around with the File System Access API. I experimented with it and found it may lack of a functionality. As I'm new to the WHATWG / specification world I'd rather ask here before submitting anything on the repository (https://github.com/whatwg/fs).\n\nWhen retrieving a FileSystemHandle (either a file or a directory) from IndexedDB storage, there is currently no direct way to test if an entry exists on user's device. While trying (on Chrome at least), you need to call a method (like `createWritable` / `getFileHandle`) which will ultimately test that such entry does exist, when it does not, returned Promise rejects with a NotFoundError.\n\nMay I suggest to add a new method on the FileSystemHandle interface, something like `Promise<boolean> exists()` to test it? Apart from this storage use-case, I think it could be used in other use-cases (e.g. watch-like feature).\n\nBtw, what difference is there between specification of WICG and WHATWG? I don't see which one would be more suited to eventually post my issue.","mimetype":"text/plain"},{"body":"<p>Hello,</p>\n<p>I've been playing around with the File System Access API. I experimented with it and found it may lack of a functionality. As I'm new to the WHATWG / specification world I'd rather ask here before submitting anything on the repository (https://github.com/whatwg/fs).</p>\n<p>When retrieving a FileSystemHandle (either a file or a directory) from IndexedDB storage, there is currently no direct way to test if an entry exists on user's device. While trying (on Chrome at least), you need to call a method (like <code>createWritable</code> / <code>getFileHandle</code>) which will ultimately test that such entry does exist, when it does not, returned Promise rejects with a NotFoundError.</p>\n<p>May I suggest to add a new method on the FileSystemHandle interface, something like <code>Promise&lt;boolean&gt; exists()</code> to test it? Apart from this storage use-case, I think it could be used in other use-cases (e.g. watch-like feature).</p>\n<p>Btw, what difference is there between specification of WICG and WHATWG? I don't see which one would be more suited to eventually post my issue.</p>\n","mimetype":"text/html"}]},"ts":1671536088310,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$BhsNF0HzpMRs3r_I1YxNkxCh-g_fbLcOxn0eaotLcxY"},
{"content":{"body":"In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use","msgtype":"m.text","org.matrix.msc1767.text":"In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use"},"ts":1671537172981,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DpkEgsgllSyjUWxC5ktO1HDll3zTaYn3OAYvQpE8LPE"},
{"content":{"body":"It's better to do the thing you want to do, and if it fails, handle the error, instead of checking if what you want to do is possible, then trying to do it (which might still fail)","msgtype":"m.text","org.matrix.msc1767.text":"It's better to do the thing you want to do, and if it fails, handle the error, instead of checking if what you want to do is possible, then trying to do it (which might still fail)"},"ts":1671537198743,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$m88SXeJIvHxX9bkOgnUGuZJ9HzZaRlWCgP6V1s7_8lY"},
{"content":{"body":"See also https://nodejs.org/api/fs.html#fsaccesspath-mode-callback for a different ecosystem's documentation of the problem","msgtype":"m.text","org.matrix.msc1767.text":"See also https://nodejs.org/api/fs.html#fsaccesspath-mode-callback for a different ecosystem's documentation of the problem"},"ts":1671537257579,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$0NQmXA9jlksbZGl_tGOWz55G98kBaMuSiHscxxPVfcI"},
{"content":{"body":"Can there be an attribute's getter steps which has side effect?  or is it prohibited?  I'm wondering if we can assume all DOM-related getters (represented by `attribute` in `WebIDL`) can be considered side-effect free.  the context is https://bugzilla.mozilla.org/show_bug.cgi?id=1806598 , where we're trying to figure out the list of side-effect free native functions in getters","format":"org.matrix.custom.html","formatted_body":"Can there be an attribute's getter steps which has side effect?  or is it prohibited?  I'm wondering if we can assume all DOM-related getters (represented by <code>attribute</code> in <code>WebIDL</code>) can be considered side-effect free.  the context is https://bugzilla.mozilla.org/show_bug.cgi?id=1806598 , where we're trying to figure out the list of side-effect free native functions in getters","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Can there be an attribute's getter steps which has side effect?  or is it prohibited?  I'm wondering if we can assume all DOM-related getters (represented by `attribute` in `WebIDL`) can be considered side-effect free.  the context is https://bugzilla.mozilla.org/show_bug.cgi?id=1806598 , where we're trying to figure out the list of side-effect free native functions in getters","mimetype":"text/plain"},{"body":"Can there be an attribute's getter steps which has side effect?  or is it prohibited?  I'm wondering if we can assume all DOM-related getters (represented by <code>attribute</code> in <code>WebIDL</code>) can be considered side-effect free.  the context is https://bugzilla.mozilla.org/show_bug.cgi?id=1806598 , where we're trying to figure out the list of side-effect free native functions in getters","mimetype":"text/html"}]},"ts":1671537505111,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$4planh2w20eVJvEFj8al1R_WiFq77CLJT8qWCEIIQgo"},
{"content":{"body":"Well thank you for the definition of TOCTTOU !\nI understand, it makes sense and I didn't have this edge-case in mind, hence the  `FileSystemSyncAccessHandle` interface with an exclusive lock, I guess.\nI'll look into the documentation, many thanks and good day ðŸ™‚","m.relates_to":{"event_id":"$m88SXeJIvHxX9bkOgnUGuZJ9HzZaRlWCgP6V1s7_8lY","is_falling_back":true,"m.in_reply_to":{"event_id":"$m88SXeJIvHxX9bkOgnUGuZJ9HzZaRlWCgP6V1s7_8lY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1671538220359,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$xJ8YvLveLQBwXcaLywIbpNhEkB0Ycq5xB4UOaWu8xeE"},
{"content":{"body":"arai: what kind of side effects are you concerned about? A lot of are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"arai: what kind of side effects are you concerned about? A lot of are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","mimetype":"text/html"}]},"ts":1671538479133,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yJtIMNFp1RShJdijhSJwoDvPivE-YOXZCu20ynxsjeE"},
{"content":{"body":"arai: we generally want `x.getter === x.getter` to be true, but that is sometimes violated as well (e.g., `input.valueAsDate`)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: we generally want <code>x.getter === x.getter</code> to be true, but that is sometimes violated as well (e.g., <code>input.valueAsDate</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"arai: we generally want `x.getter === x.getter` to be true, but that is sometimes violated as well (e.g., `input.valueAsDate`)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: we generally want <code>x.getter === x.getter</code> to be true, but that is sometimes violated as well (e.g., <code>input.valueAsDate</code>)","mimetype":"text/html"}]},"ts":1671538592537,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Fkozgb0uo0_uGZYnuekfGLS_ZO-u1CURwBoxjBMAkaI"},
{"content":{"body":"good point.  let me think","msgtype":"m.text","org.matrix.msc1767.text":"good point.  let me think"},"ts":1671538677457,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$S7VUKiFKsZ4zY5Z7v0ICmVAf7-AoZ_2rjHrNboascEs"},
{"content":{"body":"arai: https://github.com/whatwg/webidl/issues/212 last comment there might be of interest","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: https://github.com/whatwg/webidl/issues/212 last comment there might be of interest","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"arai: https://github.com/whatwg/webidl/issues/212 last comment there might be of interest","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: https://github.com/whatwg/webidl/issues/212 last comment there might be of interest","mimetype":"text/html"}]},"ts":1671538684734,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qNT2HDWAVM1sZNFh3JW0x37czgWfm7UiEhxD40fyN2k"},
{"content":{"body":" * arai: what kind of side effects are you concerned about? A lot of them are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of them are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","m.new_content":{"body":"arai: what kind of side effects are you concerned about? A lot of them are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of them are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"arai: what kind of side effects are you concerned about? A lot of them are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of them are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$yJtIMNFp1RShJdijhSJwoDvPivE-YOXZCu20ynxsjeE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * arai: what kind of side effects are you concerned about? A lot of them are so-called \"lazy\" getters, so they'd end up allocating objects when first invoked","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: what kind of side effects are you concerned about? A lot of them are so-called &quot;lazy&quot; getters, so they'd end up allocating objects when first invoked","mimetype":"text/html"}]},"ts":1671538713193,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Zh_W_nEVDPDujpJGuWK5RRQVfsRGDR1dT5RBZbjEIAQ"},
{"content":{"body":"returning different value for each access is fine for out case.  lazy getter is somewhat problematic if it can modify internal state of objects too much (let me think what \"too much\" is...)","msgtype":"m.text","org.matrix.msc1767.text":"returning different value for each access is fine for out case.  lazy getter is somewhat problematic if it can modify internal state of objects too much (let me think what \"too much\" is...)"},"ts":1671538942693,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$3Exh7JuhUi-g5HrEoeN820-4fLohQm-mkc4s_jz1ZoI"},
{"content":{"body":"hm, let me explain the context a bit more.  the context is eager evaluation in the developer tools console, where the value of the given JS codelet is evaluated before user hits Enter.  and we want to check if given native function can be called there","msgtype":"m.text","org.matrix.msc1767.text":"hm, let me explain the context a bit more.  the context is eager evaluation in the developer tools console, where the value of the given JS codelet is evaluated before user hits Enter.  and we want to check if given native function can be called there"},"ts":1671539133642,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$3IMhmVWkRBJUAoMhYP3cG1GJnlF3UA22VdWP9g3ueYE"},
{"content":{"body":"so allocating objects and storing the result in the cache should be fine","msgtype":"m.text","org.matrix.msc1767.text":"so allocating objects and storing the result in the cache should be fine"},"ts":1671539485152,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$XsSG4aoLDib1KEOa_CSdkd41HQJBSUDgD-Czeav7mDk"},
{"content":{"body":"possible problematic case is that `x.something_else` returns different value between before/after calling `x.getter`","format":"org.matrix.custom.html","formatted_body":"possible problematic case is that <code>x.something_else</code> returns different value between before/after calling <code>x.getter</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"possible problematic case is that `x.something_else` returns different value between before/after calling `x.getter`","mimetype":"text/plain"},{"body":"possible problematic case is that <code>x.something_else</code> returns different value between before/after calling <code>x.getter</code>","mimetype":"text/html"}]},"ts":1671540068487,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$WPmb0qHpWJkrDUQCH_aPjZtjKVHNxhrBgZgQKvNR9dA"},
{"content":{"body":"> <@domenicdenicola:matrix.org> In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use\n\nAfter thinking about it. Could such method be implemented with a documentation alike to the one in Node.js to inform end-user?\nI understand the principle of TOCTTOU and EAFP. Errors must be taken care of any way. But don't it prevent any chance at green code practice without such method?\n\ne.g. I retrieve a file from storage, I don't know if it exists, I need to save data in it. But doing so requires me to run long computation / algorithm to prepare data before writing it in the file. In such case, wouldn't it be preferable to be able to test if the file exists before running computation / algorithm? And indeed, still handle edge-case and test for any error when actually writing in the file.\n\nWhat do you think?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DpkEgsgllSyjUWxC5ktO1HDll3zTaYn3OAYvQpE8LPE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use</blockquote></mx-reply><p>After thinking about it. Could such method be implemented with a documentation alike to the one in Node.js to inform end-user?<br>I understand the principle of TOCTTOU and EAFP. Errors must be taken care of any way. But don't it prevent any chance at green code practice without such method?</p>\n<p>e.g. I retrieve a file from storage, I don't know if it exists, I need to save data in it. But doing so requires me to run long computation / algorithm to prepare data before writing it in the file. In such case, wouldn't it be preferable to be able to test if the file exists before running computation / algorithm? And indeed, still handle edge-case and test for any error when actually writing in the file.</p>\n<p>What do you think?</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$DpkEgsgllSyjUWxC5ktO1HDll3zTaYn3OAYvQpE8LPE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@domenicdenicola:matrix.org> In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use\n\nAfter thinking about it. Could such method be implemented with a documentation alike to the one in Node.js to inform end-user?\nI understand the principle of TOCTTOU and EAFP. Errors must be taken care of any way. But don't it prevent any chance at green code practice without such method?\n\ne.g. I retrieve a file from storage, I don't know if it exists, I need to save data in it. But doing so requires me to run long computation / algorithm to prepare data before writing it in the file. In such case, wouldn't it be preferable to be able to test if the file exists before running computation / algorithm? And indeed, still handle edge-case and test for any error when actually writing in the file.\n\nWhat do you think?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DpkEgsgllSyjUWxC5ktO1HDll3zTaYn3OAYvQpE8LPE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use</blockquote></mx-reply><p>After thinking about it. Could such method be implemented with a documentation alike to the one in Node.js to inform end-user?<br>I understand the principle of TOCTTOU and EAFP. Errors must be taken care of any way. But don't it prevent any chance at green code practice without such method?</p>\n<p>e.g. I retrieve a file from storage, I don't know if it exists, I need to save data in it. But doing so requires me to run long computation / algorithm to prepare data before writing it in the file. In such case, wouldn't it be preferable to be able to test if the file exists before running computation / algorithm? And indeed, still handle edge-case and test for any error when actually writing in the file.</p>\n<p>What do you think?</p>\n","mimetype":"text/html"}]},"ts":1671540474258,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$z-cw4xCdNIrWP-iUCa8ljAPbB9QbA1193c_1xQ4XBPY"},
{"content":{"body":"lpfreelance: getting a handle shouldn't really require any computation?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: getting a handle shouldn't really require any computation?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"lpfreelance: getting a handle shouldn't really require any computation?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: getting a handle shouldn't really require any computation?","mimetype":"text/html"}]},"ts":1671541007983,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1ZhMlcXEvAVql2LPr1Bg_Bszry_b7laDwH_rxgVC990"},
{"content":{"body":"to my understanding, the extended attributes mentioned in https://github.com/whatwg/webidl/issues/212 are about the restriction on the return value across multiple calls.  and I think that's slightly different about our concern in the eager evaluation case, where the focus is \"whether calling the getter is visible to remaining code\"","msgtype":"m.text","org.matrix.msc1767.text":"to my understanding, the extended attributes mentioned in https://github.com/whatwg/webidl/issues/212 are about the restriction on the return value across multiple calls.  and I think that's slightly different about our concern in the eager evaluation case, where the focus is \"whether calling the getter is visible to remaining code\""},"ts":1671541109221,"senderName":"arai","senderId":"@arai:mozilla.org","id":"$a4YLv4Y2To9Asn8wflFaL23W6nGGjMpSYFSpjfAA_MM"},
{"content":{"body":"annevk:  I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>:  I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","msgtype":"m.text"},"ts":1671541375818,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$Akz6AWNz33v1nz0482IPJqEqwJoOoeJSg5SPcUVdJnw"},
{"content":{"body":"* annevk: I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","m.new_content":{"body":"annevk: I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","msgtype":"m.text"},"m.relates_to":{"event_id":"$Akz6AWNz33v1nz0482IPJqEqwJoOoeJSg5SPcUVdJnw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1671541416538,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$E6bI5VeIWLymBZJktygLXT8g_z-g6bQ_k3EDwC1hY78"},
{"content":{"body":"* annevk:  I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","m.new_content":{"body":"annevk:  I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>:  I mean preparing data to write in the file/handle:\n\nCode flow currently: \n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","msgtype":"m.text"},"m.relates_to":{"event_id":"$Akz6AWNz33v1nz0482IPJqEqwJoOoeJSg5SPcUVdJnw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1671541464061,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$A3Z7JbsTNMSiP1a9by6dHZSWTqXp8C2vdPSdW-IUc5Y"},
{"content":{"body":"* annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","m.new_content":{"body":"annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n\n2. Prepare data\n\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n\n2. File exists?\n\n> no: stop\n\n> yes: continue to (3)\n\n3. Prepare data\n\n4. Write data in file","msgtype":"m.text"},"m.relates_to":{"event_id":"$Akz6AWNz33v1nz0482IPJqEqwJoOoeJSg5SPcUVdJnw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1671541568599,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$hpHrn1Dbnj3IoGqw0O_pm_2kg983GGLheeMBmoOWKPE"},
{"content":{"body":"2. Prepare data, is where it requires computation.","msgtype":"m.text"},"ts":1671541656264,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$GgqWy8yMTc6q25jn7qOV80WS6rGqGUFjsqvjyXYEYFQ"},
{"content":{"body":"Hmm I see that we only perform the microtask checkpoint for regular tasks, but not during \"update the rendering\". This would mean that microtasks queued inside requestAnimationFrame/ResizeObserver callbacks would only be triggered as part of the next task. This is not how implementations work... am I missing something?","msgtype":"m.text","org.matrix.msc1767.text":"Hmm I see that we only perform the microtask checkpoint for regular tasks, but not during \"update the rendering\". This would mean that microtasks queued inside requestAnimationFrame/ResizeObserver callbacks would only be triggered as part of the next task. This is not how implementations work... am I missing something?"},"ts":1671542394071,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$nFxbhmF3isQoQaCBr-nrnCdiEXwSnPSD21Qk8VAel3A"},
{"content":{"body":" * annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n2. Prepare data\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n2. File exists?\n> no: stop\n> yes: continue to (3)\n3. Prepare data\n4. Write data in file","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I mean preparing data to write in the file/handle.</p>\n<p>Code flow currently:</p>\n<ol>\n<li>Get handle of file</li>\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n<p>With <code>exists</code> method:</p>\n<ol>\n<li>Get handle of file</li>\n<li>File exists?</li>\n</ol>\n<blockquote>\n<p>no: stop<br>yes: continue to (3)</p>\n</blockquote>\n<ol start=\"3\">\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n","m.new_content":{"body":"annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n2. Prepare data\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n2. File exists?\n> no: stop\n> yes: continue to (3)\n3. Prepare data\n4. Write data in file","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I mean preparing data to write in the file/handle.</p>\n<p>Code flow currently:</p>\n<ol>\n<li>Get handle of file</li>\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n<p>With <code>exists</code> method:</p>\n<ol>\n<li>Get handle of file</li>\n<li>File exists?</li>\n</ol>\n<blockquote>\n<p>no: stop<br>yes: continue to (3)</p>\n</blockquote>\n<ol start=\"3\">\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n2. Prepare data\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n2. File exists?\n> no: stop\n> yes: continue to (3)\n3. Prepare data\n4. Write data in file","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I mean preparing data to write in the file/handle.</p>\n<p>Code flow currently:</p>\n<ol>\n<li>Get handle of file</li>\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n<p>With <code>exists</code> method:</p>\n<ol>\n<li>Get handle of file</li>\n<li>File exists?</li>\n</ol>\n<blockquote>\n<p>no: stop<br>yes: continue to (3)</p>\n</blockquote>\n<ol start=\"3\">\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Akz6AWNz33v1nz0482IPJqEqwJoOoeJSg5SPcUVdJnw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * annevk: I mean preparing data to write in the file/handle.\n\nCode flow currently:\n\n1. Get handle of file\n2. Prepare data\n3. Write data in file\n\nWith `exists` method:\n\n1. Get handle of file\n2. File exists?\n> no: stop\n> yes: continue to (3)\n3. Prepare data\n4. Write data in file","mimetype":"text/plain"},{"body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I mean preparing data to write in the file/handle.</p>\n<p>Code flow currently:</p>\n<ol>\n<li>Get handle of file</li>\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n<p>With <code>exists</code> method:</p>\n<ol>\n<li>Get handle of file</li>\n<li>File exists?</li>\n</ol>\n<blockquote>\n<p>no: stop<br>yes: continue to (3)</p>\n</blockquote>\n<ol start=\"3\">\n<li>Prepare data</li>\n<li>Write data in file</li>\n</ol>\n","mimetype":"text/html"}]},"ts":1671542695094,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$XsrFfRkyPdLXOzkGFqAGChVFksBtzYaOEB-S35JeG_o"},
{"content":{"body":"> <@miketayl_r:mozilla.org> i'm going to start using `<html id=jQuery>` just to spite future me\n\n```\n<form name=documentElement><input name=scrollTop>\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$24NQFRJNb5YSw5DRghdzZaefN2UV_J2FWE0OLd-Fa6M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@miketayl_r:mozilla.org\">@miketayl_r:mozilla.org</a><br>i'm going to start using <code>&lt;html id=jQuery&gt;</code> just to spite future me</blockquote></mx-reply><pre><code>&lt;form name=documentElement&gt;&lt;input name=scrollTop&gt;\n</code></pre>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$24NQFRJNb5YSw5DRghdzZaefN2UV_J2FWE0OLd-Fa6M"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@miketayl_r:mozilla.org> i'm going to start using `<html id=jQuery>` just to spite future me\n\n```\n<form name=documentElement><input name=scrollTop>\n```","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$24NQFRJNb5YSw5DRghdzZaefN2UV_J2FWE0OLd-Fa6M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@miketayl_r:mozilla.org\">@miketayl_r:mozilla.org</a><br>i'm going to start using <code>&lt;html id=jQuery&gt;</code> just to spite future me</blockquote></mx-reply><pre><code>&lt;form name=documentElement&gt;&lt;input name=scrollTop&gt;\n</code></pre>\n","mimetype":"text/html"}]},"ts":1671543115389,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$Qp5zyUjdhmhsP9pfNeRXTgJHeHDy7_0qGeERi5z27XA"},
{"content":{"body":"Noam Rosenthal: there's also some kind of cleanup","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: there's also some kind of cleanup","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: there's also some kind of cleanup","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: there's also some kind of cleanup","mimetype":"text/html"}]},"ts":1671544924277,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$7dDlz7bQV-DEgGg_BYFnfpA6biXpCasesqi4Nsgo6fw"},
{"content":{"body":"Noam Rosenthal: Jake Archibald prolly knows off the top","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a> prolly knows off the top","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: Jake Archibald prolly knows off the top","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a> prolly knows off the top","mimetype":"text/html"}]},"ts":1671544944182,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$HxZ1zX-jsXEtunRnXlP2A_gJiX_NglBuzdJ1Z-yakCk"},
{"content":{"body":"Noam Rosenthal: there's a microtask checkpoint after calling a callback","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: there's a microtask checkpoint after calling a callback","msgtype":"m.text"},"ts":1671545394022,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$yQtuHxiNOgTdLfx2QZfMeLVBA5HAQgTv_XB7sSQppd4"},
{"content":{"body":"Whether it's in a task or the render steps","msgtype":"m.text"},"ts":1671545405597,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$z0aGX7SxNTXewjOQWOJ1hQhn8mNwLlOhHyGAyxapRa8"},
{"content":{"body":"So, `Promise.resolve().then(callback)` if you run this in a raf callback, `callback` will be called as soon as the JS stack empties ","msgtype":"m.text"},"ts":1671545464057,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$d3H_KyRap4qjK4dGNOn8pVD9KPbxltYqyw03gRdF4nA"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script","msgtype":"m.text"},"ts":1671545640684,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$bBDtk9H65lhMGqUhY-RGJAHe5b1JArmtwfsex7tfkyw"},
{"content":{"body":"thanks Jake Archibald , that explains it!","format":"org.matrix.custom.html","formatted_body":"thanks <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a> , that explains it!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"thanks Jake Archibald , that explains it!","mimetype":"text/plain"},{"body":"thanks <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a> , that explains it!","mimetype":"text/html"}]},"ts":1671545714517,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$WzwWSGjsZD1mUmbWDZD5q6vw7MgDoE_b8cJgtAiaMV4"},
{"content":{"body":"ah right, it's the same thing non-JS dispatched events use","msgtype":"m.text","org.matrix.msc1767.text":"ah right, it's the same thing non-JS dispatched events use"},"ts":1671545948807,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8OPUQayxNoeI_0mpbUPaS7vNLfQq_rRLkIhdQR44XEM"},
{"content":{"body":"summarized as \"is there still JS on the stack?\"","msgtype":"m.text","org.matrix.msc1767.text":"summarized as \"is there still JS on the stack?\""},"ts":1671545985324,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$_cm1KvOB-giDGhjaua9ZHbbXkoVQzFbSw-Y7-QeSxtc"},
{"content":{"body":"arai: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"arai: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@arai:mozilla.org\">arai</a>: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it","mimetype":"text/html"}]},"ts":1671549156192,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cw1Ypk7UY5oWZlgDp2U_-2RDJatfsUyALBIYwlUnFAc"},
{"content":{"body":"lpfreelance: somewhat fair, although what you really want I think is to tack a lock on the file so you're relatively sure your eventual write won't fail either. Taking https://whatwg.org/faq#adding-new-features into account filing an issue against whatwg/fs and asking for thoughts seems like a good next step to me.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: somewhat fair, although what you really want I think is to tack a lock on the file so you're relatively sure your eventual write won't fail either. Taking https://whatwg.org/faq#adding-new-features into account filing an issue against whatwg/fs and asking for thoughts seems like a good next step to me.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"lpfreelance: somewhat fair, although what you really want I think is to tack a lock on the file so you're relatively sure your eventual write won't fail either. Taking https://whatwg.org/faq#adding-new-features into account filing an issue against whatwg/fs and asking for thoughts seems like a good next step to me.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: somewhat fair, although what you really want I think is to tack a lock on the file so you're relatively sure your eventual write won't fail either. Taking https://whatwg.org/faq#adding-new-features into account filing an issue against whatwg/fs and asking for thoughts seems like a good next step to me.","mimetype":"text/html"}]},"ts":1671549373842,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hSI9q_TIIObsAMcGUr-0YiLB9Wn71pp-RAr6nFT55ks"},
{"content":{"body":"annevk: In such case indeed, to tack a lock on the file could be ideal. It might also be useful with a directory entry. Alright, I will also check for any related issues before filling one. Thanks for your feedback!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: In such case indeed, to tack a lock on the file could be ideal. It might also be useful with a directory entry. Alright, I will also check for any related issues before filling one. Thanks for your feedback!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: In such case indeed, to tack a lock on the file could be ideal. It might also be useful with a directory entry. Alright, I will also check for any related issues before filling one. Thanks for your feedback!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: In such case indeed, to tack a lock on the file could be ideal. It might also be useful with a directory entry. Alright, I will also check for any related issues before filling one. Thanks for your feedback!","mimetype":"text/html"}]},"ts":1671551813208,"senderName":"lpfreelance","senderId":"@lpfreelance:matrix.org","id":"$OREAsKjJhsoQ-biHNRq-NIFAD575MY91XZp5D0K-fsw"},
{"content":{"body":"lpfreelance: btw, the difference with the WICG draft is that the WHATWG spec defines the fundamentals only; the WICG draft builds on that and adds end user file system access, but there's no agreement that that should be exposed across browsers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: btw, the difference with the WICG draft is that the WHATWG spec defines the fundamentals only; the WICG draft builds on that and adds end user file system access, but there's no agreement that that should be exposed across browsers","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"lpfreelance: btw, the difference with the WICG draft is that the WHATWG spec defines the fundamentals only; the WICG draft builds on that and adds end user file system access, but there's no agreement that that should be exposed across browsers","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lpfreelance:matrix.org\">lpfreelance</a>: btw, the difference with the WICG draft is that the WHATWG spec defines the fundamentals only; the WICG draft builds on that and adds end user file system access, but there's no agreement that that should be exposed across browsers","mimetype":"text/html"}]},"ts":1671552252699,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bARwpGB0shPFweey-gmIF9R9iC-pNMzOTlAB1IkxLOw"}
]