[
{"content":{"body":"sideshowbarker: found another w3c HTML5 spec that's not redirecting https://www.w3.org/TR/2011/WD-html5-20110525/","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: found another w3c HTML5 spec that's not redirecting https://www.w3.org/TR/2011/WD-html5-20110525/","msgtype":"m.text"},"ts":1635197958208,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$LGCf5qh6C54BRPAxOoILOfgTzaKW6F-pJ492Z-7aLMQ"},
{"content":{"body":"zcorpan: pretty sure those versions with dated URLs are intentionally not redirected","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan_:matrix.org\">zcorpan</a>: pretty sure those versions with dated URLs are intentionally not redirected","msgtype":"m.text"},"ts":1635200553533,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Koh1Qt28nZyND6iDLfX7T0xwRr3R7dMaXPp6QWs7t1U"},
{"content":{"body":"sideshowbarker: oh, ok. Then at least I found and fixed links to such a dated URL","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: oh, ok. Then at least I found and fixed links to such a dated URL","msgtype":"m.text"},"ts":1635200618689,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$RRcX2_KsGOw-HH8_dwq5Z1sb99jIx7BEoINVocByw1k"},
{"content":{"body":"yeah I think in general if there are resources elsewhere which are referencing those dated URLs, the solution is to update the links","msgtype":"m.text"},"ts":1635200699446,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$2CDJyQ6Kgefs5Q-9me8MYD4hbIwA_QB4DgqvES2KRn8"},
{"content":{"body":"foolip: https://bugs.chromium.org/p/chromium/issues/detail?id=1196138 we got another report for web-share self issue.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@foolip:matrix.org\">foolip</a>: https://bugs.chromium.org/p/chromium/issues/detail?id=1196138 we got another report for web-share self issue.","msgtype":"m.text"},"ts":1635203111592,"senderName":"karlcow","senderId":"@karlcow:mozilla.org","id":"$GRxa5Q1t-dz9oSFVrm4mUbIffI_DMDA9tSUL8z5QQok"},
{"content":{"body":"annevk: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?\n> Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.\n> \n> To get past this either unset the ETag header or vary it based on request origin.\nIf so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).\nIf it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the `Vary` header).","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?</p>\n<blockquote>\n<p>Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.</p>\n<p>To get past this either unset the ETag header or vary it based on request origin.<br>If so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).<br>If it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the <code>Vary</code> header).</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1635205480100,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$wlUKfQ_KE1Vh7iwqqsFqi_yIA5u5GNwPJ74zXcaVjd8"},
{"content":{"body":" * annevk: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?\n> Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.\n> \n> To get past this either unset the ETag header or vary it based on request origin.\n\nIf so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).\n\nIf it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the `Vary` header).","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?</p>\n<blockquote>\n<p>Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.</p>\n<p>To get past this either unset the ETag header or vary it based on request origin.</p>\n</blockquote>\n<p>If so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).</p>\n<p>If it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the <code>Vary</code> header).</p>\n","m.new_content":{"body":"annevk: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?\n> Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.\n> \n> To get past this either unset the ETag header or vary it based on request origin.\n\nIf so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).\n\nIf it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the `Vary` header).","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Does the answer at https://stackoverflow.com/questions/69673929/access-control-allow-origin-response-seems-to-be-getting-cached/69706903#69706903 sound correct?</p>\n<blockquote>\n<p>Chrome will still use the cached header even if the origins differ and the Vary header is present and set to 'Origin' if the ETags still match.</p>\n<p>To get past this either unset the ETag header or vary it based on request origin.</p>\n</blockquote>\n<p>If so, is that non-conforming behavior, or is it conforming per-spec? (per the HTTP spec requirements, I guess).</p>\n<p>If it’s conforming, I wonder whether it’s something we should document in the Fetch spec (in the same note that currently covers using the <code>Vary</code> header).</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$wlUKfQ_KE1Vh7iwqqsFqi_yIA5u5GNwPJ74zXcaVjd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635205502254,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$ZcaXaGJ1MahCUUOe7jtj1A3SaARIeTne9ODjOUrsfwo"}
]