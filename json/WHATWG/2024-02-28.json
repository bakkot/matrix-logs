[
{"content":{"body":"akaster: might be relevant, but `fetch` also accepts a `reserved client` in the cases where you don't have a Realm yet (e.g. you're navigating to a new document, loading a new worker)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: might be relevant, but <code>fetch</code> also accepts a <code>reserved client</code> in the cases where you don't have a Realm yet (e.g. you're navigating to a new document, loading a new worker)","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1709117689428,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$A6oHXsb5svO18vHBF-xoUi4XRlNCtp0xyjliV_-VWcg"},
{"content":{"body":"akaster: https://html.spec.whatwg.org/multipage/workers.html#run-a-worker, search for `reserved client`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: https://html.spec.whatwg.org/multipage/workers.html#run-a-worker, search for <code>reserved client</code>","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1709117727869,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$l-cXQjjX1ylzQ-pNRRwTe0ANWZfhlZJ-G1JIYIOw9X0"},
{"content":{"body":"> <@akaster:serenityos.org> I'm not entirely sure what fields/algorithms from the environment settings object \"fetch a classic worker script\" and \"fetch a module script graph\" need, but I'm hoping it's only like, the origin and url and other easily serializable data? But Fetch Request explicitly says that its client must be an environment settings object or null\n\nOne of the things ESO holds that fetch needs deeply inside of its parallel-ness, is a handle to the global to post tasks to when the response comes in etc.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$PeES4CP_x-Sz-msQhAGEU27xuXA-Z6FImUcW9CD_CqE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@akaster:serenityos.org\">@akaster:serenityos.org</a><br>I&#39;m not entirely sure what fields/algorithms from the environment settings object &quot;fetch a classic worker script&quot; and &quot;fetch a module script graph&quot; need, but I&#39;m hoping it&#39;s only like, the origin and url and other easily serializable data? But Fetch Request explicitly says that its client must be an environment settings object or null</blockquote></mx-reply>One of the things ESO holds that fetch needs deeply inside of its parallel-ness, is a handle to the global to post tasks to when the response comes in etc.","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$PeES4CP_x-Sz-msQhAGEU27xuXA-Z6FImUcW9CD_CqE"}},"msgtype":"m.text"},"ts":1709132296075,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$im8KkV9PsfvFztS7DFdVQONPCt_cJt21e5xneti9Ztc"},
{"content":{"body":"Hmm. But in that case we want the inside settings object of the worker. We also set the reserved client to the inside settings. The issue I'm seeing with our implementation right now is down to checks about same origin, about CORS, etc when overriding things set to \"client\" with those from the outside settings","msgtype":"m.text"},"ts":1709132520286,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$mP7X7zrwESCZ3oIKAZYg0oTuN4Aq7EkJQngfEMGWz94"},
{"content":{"body":"akaster: that sounds about right. Ideally we'd convert a client to such a concrete struct, but I never really got there and don't want to make the time for it at the moment.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: that sounds about right. Ideally we'd convert a client to such a concrete struct, but I never really got there and don't want to make the time for it at the moment.","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1709132551893,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$0wQzlvs8yL7mm1c8R9iwDVT0kdGomX5wWxc_bNi1jAU"},
{"content":{"body":"And by issues I mean, I called fetch with \"inside settings\" as the client and it doesn't work well ðŸ˜…","msgtype":"m.text"},"ts":1709132625072,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$3Eo1MG1C96widRbGw2k7yhOy9R4jXXpIrp2S9m5qN1k"},
{"content":{"body":"I think ideally we'd rewrite most specs to call fetch from a JS thread (i.e., not from in parallel) and then have fetch snapshot state that it needs early on as well as keep a handle around in order to post tasks back (that may end up going nowhere due to race conditions). And then have a dedicated entry point for calling fetch from in parallel where you are responsible for handing fetch the correct state.","m.mentions":{},"msgtype":"m.text"},"ts":1709132733535,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$o-efTPQFJHEihQJuOOhCi-67UZGUS4cfm4df4z60Ztg"},
{"content":{"body":"By-and-large things should be like this already, but there's certainly exceptions.","m.mentions":{},"msgtype":"m.text"},"ts":1709132788547,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZC4yGVDi1VUCnshrl8i7G9ZRKrtpZkaXdfW0otFx0J4"},
{"content":{"body":"So it sounds like there probably wouldn't be an issue with replacing the request's client with some record that has origin, URL, some policy flags, etc, as anything that needs to post tasks or events or generally do callbacks should be using the reserved client? Or should be handled through other hooks that are already in place. ","msgtype":"m.text"},"ts":1709133108352,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$7X2CGVMNjC7Y4q0qaQrxwlFFnkLn5U3VB1vf8L2nkwM"},
{"content":{"body":"At least, at the implementation level anyway ","msgtype":"m.text"},"ts":1709133117301,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$S3PxbAGKDpdYT97KNL4HXLHOAYICNuVVf42pzn75YlY"},
{"content":{"body":"akaster: yeah, that should be fine. And in fact implementations will have to do something like that as some policies are mutable and fetch will have to operate on the policy as it was at the time of fetching. Though note that policy flags can get quite involved (CSP for instance).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: yeah, that should be fine. And in fact implementations will have to do something like that as some policies are mutable and fetch will have to operate on the policy as it was at the time of fetching. Though note that policy flags can get quite involved (CSP for instance).","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1709135851114,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$aSmf8vqcZpVJEUIBYRgfc00iUDtbnoK0Fp0T6Lr3lCc"}
]