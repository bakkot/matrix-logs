[
{"content":{"body":"zcorpan: should have CCed you on the email, but FYI in https://groups.google.com/a/chromium.org/g/blink-dev/c/UquTxWTNON0 we're discussing UA styles for <meter> + appearance: none, which might be interesting given your past work in the area.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: should have CCed you on the email, but FYI in https://groups.google.com/a/chromium.org/g/blink-dev/c/UquTxWTNON0 we're discussing UA styles for &lt;meter&gt; + appearance: none, which might be interesting given your past work in the area.","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1723783186528,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$RwUA0MZiGW_KP6DsXSUG8iEdkeVJX5bgL2x3ELnv-dM"},
{"content":{"body":"> <@domfarolino:matrix.org> zcorpan: I want to confirm something about https://github.com/web-platform-tests/wpt/blob/master/html/semantics/embedded-content/the-iframe-element/iframe-loading-lazy-reload-navigation-reload.html#L9-L10. Is this statement true because reloads don't go through the \"normal\" #navigate path, and it is only the normal #navigate path that clears the lazyload resumption steps? (https://html.spec.whatwg.org/C#beginning-navigation:lazy-load-resumption-steps). Is that the idea?\n\nRight. https://html.spec.whatwg.org/#reload doesn't call \"navigate\"","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$SUi05f73pwN1dgGgI1SwXYhaPqCr9V_He8Os3ybNH3Q?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">@domfarolino:matrix.org</a><br /><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I want to confirm something about https://github.com/web-platform-tests/wpt/blob/master/html/semantics/embedded-content/the-iframe-element/iframe-loading-lazy-reload-navigation-reload.html#L9-L10. Is this statement true because reloads don't go through the \"normal\" #navigate path, and it is only the normal #navigate path that clears the lazyload resumption steps? (https://html.spec.whatwg.org/C#beginning-navigation:lazy-load-resumption-steps). Is that the idea?</blockquote></mx-reply>Right. https://html.spec.whatwg.org/#reload doesn't call &quot;navigate&quot;","m.relates_to":{"m.in_reply_to":{"event_id":"$SUi05f73pwN1dgGgI1SwXYhaPqCr9V_He8Os3ybNH3Q"}},"msgtype":"m.text"},"ts":1723795287178,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$nS_1cdoOFlWYHxfco55PBlFdRcVzqKnG8pjI0U2_0ow"},
{"content":{"body":"> <@domenicdenicola:matrix.org> zcorpan: should have CCed you on the email, but FYI in https://groups.google.com/a/chromium.org/g/blink-dev/c/UquTxWTNON0 we're discussing UA styles for <meter> + appearance: none, which might be interesting given your past work in the area.\n\nThanks","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$RwUA0MZiGW_KP6DsXSUG8iEdkeVJX5bgL2x3ELnv-dM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br /><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: should have CCed you on the email, but FYI in https://groups.google.com/a/chromium.org/g/blink-dev/c/UquTxWTNON0 we're discussing UA styles for &lt;meter&gt; + appearance: none, which might be interesting given your past work in the area.</blockquote></mx-reply>Thanks","m.relates_to":{"m.in_reply_to":{"event_id":"$RwUA0MZiGW_KP6DsXSUG8iEdkeVJX5bgL2x3ELnv-dM"}},"msgtype":"m.text"},"ts":1723795394320,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$rk9ANzTSoriQmO-x3gE1X4ybcpyPjrrEFl56cKjpFC0"},
{"content":{"body":"Domenic: iirc I left primitive style for meter undefined because there wasn't consensus, but it seems now we might have consensus","msgtype":"m.text"},"ts":1723795607183,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$zuntIk-nVP22yOBot5M5UQATDEvBepx8id88POVLh_Y"},
{"content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\nbecomes\n```http\nA\n```\nwhich I believe is non-compliant","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">A\n</code></pre>\n<p>which I believe is non-compliant</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1723807144780,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY"},
{"content":{"body":" * I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nwhich I believe is non-compliant","format":"org.matrix.custom.html","formatted_body":" * <p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>which I believe is non-compliant</p>\n","m.mentions":{},"m.new_content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nwhich I believe is non-compliant","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>which I believe is non-compliant</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723807157400,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$6F4gz_aw5WtAl7CygO3YjLxxpxhVU-xUtN6KrSwiM2g"},
{"content":{"body":" * I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?","format":"org.matrix.custom.html","formatted_body":" * <p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?</p>\n","m.mentions":{},"m.new_content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723807247746,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$mNG8JbOxPHHa8YRnow1b9fy6FGlkW97slCkETVRhftI"},
{"content":{"body":" * I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?","format":"org.matrix.custom.html","formatted_body":" * <p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?</p>\n","m.mentions":{},"m.new_content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is such a proxy behaviour allowed?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723807297424,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$rDLE9sElYx3iy61ShnAzjvbzb5tOhv_W3p6wD5Y3aH8"},
{"content":{"body":" * I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?","format":"org.matrix.custom.html","formatted_body":" * <p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?</p>\n","m.mentions":{},"m.new_content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723807353021,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$P2t8PYbbXXr9z6c0sCRD5UCnYlXznom2OuXcPOS8hC0"},
{"content":{"body":" * I'm told that AWS API Gateway exhibits a weird behaviour: it allegedly (I haven't verified this yet) splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?","format":"org.matrix.custom.html","formatted_body":" * <p>I'm told that AWS API Gateway exhibits a weird behaviour: it allegedly (I haven't verified this yet) splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?</p>\n","m.mentions":{},"m.new_content":{"body":"I'm told that AWS API Gateway exhibits a weird behaviour: it allegedly (I haven't verified this yet) splits a list-based field (`Access-Control-Request-Headers`) into multiple field lines. Example:\n\n```http\nAccess-Control-Request-Headers: bar,baz,foo\n```\n\nbecomes\n\n```http\nAccess-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n```\n\nwhich I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?","format":"org.matrix.custom.html","formatted_body":"<p>I'm told that AWS API Gateway exhibits a weird behaviour: it allegedly (I haven't verified this yet) splits a list-based field (<code>Access-Control-Request-Headers</code>) into multiple field lines. Example:</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar,baz,foo\n</code></pre>\n<p>becomes</p>\n<pre><code class=\"language-http\">Access-Control-Request-Headers: bar\nAccess-Control-Request-Headers: baz\nAccess-Control-Request-Headers: foo\n</code></pre>\n<p>which I believe is non-compliant. I haven't found anything in RFC 9110 that describes this \"splitting\" behaviour (only the reverse, i.e. merging multiple field lines of the same name into one). Am I missing something? Is a proxy allowed to split list-based fields like this?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WwkCye0V2yLzpN4EEdPaJbX-kNABNl3TmXT-AnU4hPY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723807388226,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$QxHd7fjFjO_66P780ulh-gRxZ-lJMbarfrSDgxr9AnI"},
{"content":{"body":"it's allowed; see https://www.rfc-editor.org/rfc/rfc9110#section-5.3 (emphasis mine):\n> a sender MUST NOT generate multiple field lines with the same name in a message (whether in the headers or trailers) or append a field line when a field line of the same name already exists in the message, **_unless_ that field's definition allows multiple field line values to be recombined as a comma-separated list** (i.e., at least one alternative of the field's definition allows a comma-separated list, **such as an ABNF rule of #(values) defined in [Section 5.6.1](https://www.rfc-editor.org/rfc/rfc9110#abnf.extension)**).\n\n[Section 5.6.1](https://www.rfc-editor.org/rfc/rfc9110#section-5.6.1) defines \"_a #rule extension to the ABNF rules of [RFC5234](https://www.rfc-editor.org/rfc/rfc9110#RFC5234)… for defining comma-delimited lists of elements… and optional whitespace_\".\n\n[`Access-Control-Request-Headers` is registered](https://www.iana.org/assignments/http-fields/http-fields.xhtml#field-names) with reference to WHATWG Fetch, which [describes its values](https://fetch.spec.whatwg.org/#http-new-header-syntax) as ABNF `1#field-name`, where [\"ABNF\" explicitly includes HTTP `#`](https://fetch.spec.whatwg.org/#infrastructure).","format":"org.matrix.custom.html","formatted_body":"<p>it's allowed; see https://www.rfc-editor.org/rfc/rfc9110#section-5.3 (emphasis mine):</p>\n<blockquote>\n<p>a sender MUST NOT generate multiple field lines with the same name in a message (whether in the headers or trailers) or append a field line when a field line of the same name already exists in the message, <strong><em>unless</em> that field's definition allows multiple field line values to be recombined as a comma-separated list</strong> (i.e., at least one alternative of the field's definition allows a comma-separated list, <strong>such as an ABNF rule of #(values) defined in <a href=\"https://www.rfc-editor.org/rfc/rfc9110#abnf.extension\">Section 5.6.1</a></strong>).</p>\n</blockquote>\n<p><a href=\"https://www.rfc-editor.org/rfc/rfc9110#section-5.6.1\">Section 5.6.1</a> defines \"<em>a #rule extension to the ABNF rules of <a href=\"https://www.rfc-editor.org/rfc/rfc9110#RFC5234\">RFC5234</a>… for defining comma-delimited lists of elements… and optional whitespace</em>\".</p>\n<p><a href=\"https://www.iana.org/assignments/http-fields/http-fields.xhtml#field-names\"><code>Access-Control-Request-Headers</code> is registered</a> with reference to WHATWG Fetch, which <a href=\"https://fetch.spec.whatwg.org/#http-new-header-syntax\">describes its values</a> as ABNF <code>1#field-name</code>, where <a href=\"https://fetch.spec.whatwg.org/#infrastructure\">\"ABNF\" explicitly includes HTTP <code>#</code></a>.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1723818620531,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$31wEzybNU-BhcJTj7InnRV9B6ZJxCgUeMcXlD3dCs4o"},
{"content":{"body":"annevk: TIL: https://www.ietf.org/archive/id/draft-gulbrandsen-smtputf8-nice-addresses-00.html","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: TIL: https://www.ietf.org/archive/id/draft-gulbrandsen-smtputf8-nice-addresses-00.html","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1723825353943,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$5LesWR4nasjPjbkeNWBiL3F4cZ-W5ywtAUcuDcnWATQ"},
{"content":{"body":"> <@hsivonen:mozilla.org> annevk: TIL: https://www.ietf.org/archive/id/draft-gulbrandsen-smtputf8-nice-addresses-00.html\n\n(Not particularly relevant to what HTML forms need to support, but there's a normative reference to the BNF currently in HTML!)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$5LesWR4nasjPjbkeNWBiL3F4cZ-W5ywtAUcuDcnWATQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: TIL: https://www.ietf.org/archive/id/draft-gulbrandsen-smtputf8-nice-addresses-00.html</blockquote></mx-reply>(Not particularly relevant to what HTML forms need to support, but there's a normative reference to the BNF currently in HTML!)","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$5LesWR4nasjPjbkeNWBiL3F4cZ-W5ywtAUcuDcnWATQ"}},"msgtype":"m.text"},"ts":1723825389508,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$9Ziu4A3VVlpkJr_eGhXYuuMuQsmKfhkQE-_-_-69EuA"},
{"content":{"body":"I guess we should email the authors if we manage to make progress on `<input type=email>` soon.","format":"org.matrix.custom.html","formatted_body":"I guess we should email the authors if we manage to make progress on <code>&lt;input type=email&gt;</code> soon.","m.mentions":{},"msgtype":"m.text"},"ts":1723825660880,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZLK4Fz2pvZq1EOezJtJN8XPI33mRqz1ftuKuCgnUGJU"},
{"content":{"body":"At the same time it won’t hurt having someone from the existing implementations check this retroactive speccing is aligned with how they’ve been understanding it for what’s shipped in the first place.","m.relates_to":{"event_id":"$mmv2oFmeWM4naWodgTFsJf1h0EKJEaT2jRG6MUftFYQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$mmv2oFmeWM4naWodgTFsJf1h0EKJEaT2jRG6MUftFYQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1723834984281,"senderName":"janbrasna","senderId":"@janbrasna:mozilla.org","id":"$O8D0R_ZHZ-Im0Demm1bFLMnHwWar7irIHJpm5mSpzRs"}
]