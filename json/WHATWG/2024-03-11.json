[
{"content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1710142318118,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142337859,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$voeLbuQ7sBbFfN6-tkkSzXxMXFGd-3r_fejSorbAcnU"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142344521,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CZv9xpy3gsxjpwEkEX0YEah4lfT_8nQZi4DAeAzS0BU"},
{"content":{"body":"sideshowbarker: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1710142459030,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$k7o1ORWE85PFCvZ5poyMfn1Dml-ex9yrTsNnBRqZe0A"}
]