[
{"content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1710142318118,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142337859,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$voeLbuQ7sBbFfN6-tkkSzXxMXFGd-3r_fejSorbAcnU"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142344521,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CZv9xpy3gsxjpwEkEX0YEah4lfT_8nQZi4DAeAzS0BU"},
{"content":{"body":"sideshowbarker: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1710142459030,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$k7o1ORWE85PFCvZ5poyMfn1Dml-ex9yrTsNnBRqZe0A"},
{"content":{"body":"I'm not sure, but I think there's definitely a worry about changing the existing contract drastically as it'll impact many websites.","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$5pCxaTEuwmhAesd-qaDR9h8qpE37yMpQCcLMif8v_TI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710142682335,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$X-8zAlTTRlCpYwRpiz5uqneD4JDEeQm2jehDdR79KCI"},
{"content":{"body":"So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or any error?","m.mentions":{},"msgtype":"m.text"},"ts":1710142705109,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CqfqDv9P6W4NlL5u5eBwj7K4zcKfxJEi1SOQxpxqwAU"},
{"content":{"body":" * So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or an error?","m.mentions":{},"m.new_content":{"body":"So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or an error?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CqfqDv9P6W4NlL5u5eBwj7K4zcKfxJEi1SOQxpxqwAU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142719287,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pkcFzIBIF40rC9mc96NM32h22OzYpFNpxCfIm_ReLoc"},
{"content":{"body":"That looks correct, from a quick glance.","m.mentions":{},"msgtype":"m.text"},"ts":1710142794999,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ScfB6DE7YcCcH8CsvZtNiVJPWZVoO8hXGtzVwhQbBQs"},
{"content":{"body":"The latter statement seems correct. But the former doesn't. If the algorithm were given \"Infinity\" or \"NaN\" as an input, then it would return error, not Infinity or NaN.","m.mentions":{},"msgtype":"m.text"},"ts":1710143033623,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UsgOB8rfJHhmh21KcOgKRYirEhKiTibX3r0oY1u7QVU"},
{"content":{"body":"Right, sorry — I misspoke there. I guess meant to say something more like, The only way something would end up getting _evaluated_ (not returned) by the algorithm as Inifinity or NaN would be if it the algorithm were given the strings \"Infinity\" or \"NaN\"  as input.","format":"org.matrix.custom.html","formatted_body":"Right, sorry — I misspoke there. I guess meant to say something more like, The only way something would end up getting <em>evaluated</em> (not returned) by the algorithm as Inifinity or NaN would be if it the algorithm were given the strings \"Infinity\" or \"NaN\"  as input.","m.mentions":{},"msgtype":"m.text"},"ts":1710143141791,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$N5HubNjGTTXxa4NHJYQcCgtFb545JV4o32vjnUFPqQI"},
{"content":{"body":"The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC annevk ","format":"org.matrix.custom.html","formatted_body":"The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1710153761855,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$-GVLVMlNW1DGWDCODJzHOwwG-Tk-jlj8hdyQitP6LAM"},
{"content":{"body":"> <@hsivonen:mozilla.org> The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC annevk\n\nOoh. I noticed the \"lookup\" column just now. That explains fetchability vs. display.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$-GVLVMlNW1DGWDCODJzHOwwG-Tk-jlj8hdyQitP6LAM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br>The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a></blockquote></mx-reply>Ooh. I noticed the \"lookup\" column just now. That explains fetchability vs. display.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$-GVLVMlNW1DGWDCODJzHOwwG-Tk-jlj8hdyQitP6LAM"}},"msgtype":"m.text"},"ts":1710155534154,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$kFNBOodVxv1M79VW-8u3Kgr_VV3wJHkTmvc6Rqjuk6Q"},
{"content":{"body":"annevk: I'm looking at the unit tests of the IDNA crate and have trouble believing what I'm seeing. Is it really intentional that empty DNS labels are allowed in URLs as long as the domain as a whole isn't empty? (Somehow I imagined that only a trailing empty label was allowed.) Browsers don't seem to treat hsivonen.fi.xn-- as equivalent to hsivonen.fi. , but I fail to find spec text that says so. What am I missing?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I'm looking at the unit tests of the IDNA crate and have trouble believing what I'm seeing. Is it really intentional that empty DNS labels are allowed in URLs as long as the domain as a whole isn't empty? (Somehow I imagined that only a trailing empty label was allowed.) Browsers don't seem to treat hsivonen.fi.xn-- as equivalent to hsivonen.fi. , but I fail to find spec text that says so. What am I missing?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1710160739688,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$wm9cAGrFdO5dk5BLJL3XFeQlot2Hyj0kjHsa0AU57XI"},
{"content":{"body":"So `https://example..com/` parses. I think I was surprised by that as well. Not sure about `xn--` though.","format":"org.matrix.custom.html","formatted_body":"So <code>https://example..com/</code> parses. I think I was surprised by that as well. Not sure about <code>xn--</code> though.","m.mentions":{},"msgtype":"m.text"},"ts":1710160941971,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2GViNwFNFLWl913JVigV6BQtgxNb8WYRqFV_LOVzEhY"},
{"content":{"body":"hsivonen: I guess what's not clear is where decoding `xn--` fails. It does seem good for it to fail though as it would normalize away, which seems bad.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: I guess what's not clear is where decoding <code>xn--</code> fails. It does seem good for it to fail though as it would normalize away, which seems bad.","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"msgtype":"m.text"},"ts":1710161285652,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$N9uAt01R6kxKq_bs9C-T5NhKxafkib7CXTKtIS5lw4g"},
{"content":{"body":"> <@annevk:matrix.org> hsivonen: I guess what's not clear is where decoding `xn--` fails. It does seem good for it to fail though as it would normalize away, which seems bad.\n\nWhen reading the RFC, I don't see `xn--` failing at all.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$N9uAt01R6kxKq_bs9C-T5NhKxafkib7CXTKtIS5lw4g?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: I guess what's not clear is where decoding <code>xn--</code> fails. It does seem good for it to fail though as it would normalize away, which seems bad.</blockquote></mx-reply>When reading the RFC, I don't see <code>xn--</code> failing at all.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$N9uAt01R6kxKq_bs9C-T5NhKxafkib7CXTKtIS5lw4g"}},"msgtype":"m.text"},"ts":1710161339125,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$skaqeRmt2CK8Gi1fYeswaVVo65U7NjvVfd6A7IYV2_4"},
{"content":{"body":"annevk: But are other empty labels supposed to be allowed. Is hsivonen..fi really supposed to be allowed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: But are other empty labels supposed to be allowed. Is hsivonen..fi really supposed to be allowed?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1710161361422,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$oXML6JmR8c9KqNGrOZAC0wGlmU1lB2daowoh2sBePJc"},
{"content":{"body":"hsivonen: I think it has worked in all browsers since forever?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: I think it has worked in all browsers since forever?","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"msgtype":"m.text"},"ts":1710161385343,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$i_LJcrpIxPWUTf-i55gbS9p-lpafMNCEpCzYIGZcXMg"},
{"content":{"body":"If we just did DNS there's a whole bunch of things we could ban, but we don't and therefore it's trickier.","m.mentions":{},"msgtype":"m.text"},"ts":1710161436460,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$dXYa49WjEzAQnXEyUyGgQcoOufRZdwLvZVhMvqYmgzY"},
{"content":{"body":"> <@annevk:matrix.org> hsivonen: I think it has worked in all browsers since forever?\n\nAh, in Firefox the URL bar behavior depends on the URL scheme being there","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$i_LJcrpIxPWUTf-i55gbS9p-lpafMNCEpCzYIGZcXMg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: I think it has worked in all browsers since forever?</blockquote></mx-reply>Ah, in Firefox the URL bar behavior depends on the URL scheme being there","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$i_LJcrpIxPWUTf-i55gbS9p-lpafMNCEpCzYIGZcXMg"}},"msgtype":"m.text"},"ts":1710161493997,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$j5ZA39SPb12oV25nAlzNwmLpsV9d5G6_i8iMyNhEXTo"},
{"content":{"body":"I think per https://www.unicode.org/reports/tr46/#ProcessingStepPunycode and https://www.rfc-editor.org/rfc/rfc3492.html `xn--` is indeed expected to become the empty string. That seems like a bug though.","format":"org.matrix.custom.html","formatted_body":"I think per https://www.unicode.org/reports/tr46/#ProcessingStepPunycode and https://www.rfc-editor.org/rfc/rfc3492.html <code>xn--</code> is indeed expected to become the empty string. That seems like a bug though.","m.mentions":{},"msgtype":"m.text"},"ts":1710161634222,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ody7AsjIu3OmiLYGAWUwV8c8lgTAQu_XfbJ7Uoek3lc"},
{"content":{"body":"hsivonen: r? https://github.com/whatwg/encoding/pull/328","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: r? https://github.com/whatwg/encoding/pull/328","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"msgtype":"m.text"},"ts":1710161855343,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZqQ62dvfBxt6K0W2qEhnBVX3-QVGvccyNO4mLBK703s"},
{"content":{"body":"> <@jub0bs:matrix.org> Do you mean \"reasonable options\" for fixing the CORS error? I'm not sure I can think of more than what I've already suggested, tbh. One difficulty is that browsers are often left with insufficient contextual information about a preflight failure to produce a helpful CORS error message. For a typical example, see https://jub0bs.com/posts/2023-02-08-fearless-cors/#9-ease-troubleshooting-by-eschewing-shortcuts-during-preflight\n\nI haven't checked closely what the status quo is, but the message can include a link at least. It seems Firefox currently links to https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin but Chrome doesn't have a link","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$xybZ7D8B7RsFJmCB_JEfK4XmVm_mvRrTyBpWTji9Np8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jub0bs:matrix.org\">@jub0bs:matrix.org</a><br>Do you mean \"reasonable options\" for fixing the CORS error? I'm not sure I can think of more than what I've already suggested, tbh. One difficulty is that browsers are often left with insufficient contextual information about a preflight failure to produce a helpful CORS error message. For a typical example, see https://jub0bs.com/posts/2023-02-08-fearless-cors/#9-ease-troubleshooting-by-eschewing-shortcuts-during-preflight</blockquote></mx-reply>I haven't checked closely what the status quo is, but the message can include a link at least. It seems Firefox currently links to https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin but Chrome doesn't have a link","m.mentions":{"user_ids":["@jub0bs:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$xybZ7D8B7RsFJmCB_JEfK4XmVm_mvRrTyBpWTji9Np8"}},"msgtype":"m.text"},"ts":1710165497674,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$DP_2u6cr23DmEzu_Q9r5DVI5L2GzaNiD6E5qFGbUi9w"},
{"content":{"body":"> <@annevk:matrix.org> I think per https://www.unicode.org/reports/tr46/#ProcessingStepPunycode and https://www.rfc-editor.org/rfc/rfc3492.html `xn--` is indeed expected to become the empty string. That seems like a bug though.\n\nMore generally, it seems like a bug not to require Punycode decode to output at least one non-ASCII code point.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Ody7AsjIu3OmiLYGAWUwV8c8lgTAQu_XfbJ7Uoek3lc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>I think per https://www.unicode.org/reports/tr46/#ProcessingStepPunycode and https://www.rfc-editor.org/rfc/rfc3492.html <code>xn--</code> is indeed expected to become the empty string. That seems like a bug though.</blockquote></mx-reply>More generally, it seems like a bug not to require Punycode decode to output at least one non-ASCII code point.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Ody7AsjIu3OmiLYGAWUwV8c8lgTAQu_XfbJ7Uoek3lc"}},"msgtype":"m.text"},"ts":1710168123913,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$gat62wLlME5EjwXndE1bhQmCZ0509LxUK3GsOpu7h4g"},
{"content":{"body":"The existing HTML spec respects no RFC (5321 or 5322), instead invents a new syntax for email addresses. This new syntax rejects perfectly valid us-ascii mailbox addresses that are and have been valid (since at least 1982) with no apparent basis. This is harmful. I have seen this new syntax used by other projects, citing the HTML spec as the authority for their \"willful violation of RFC 5322\" -- with no mention of the standard they *should* be looking at, RFC-5321.\nI understand the practical considerations of wanting a simple grammar to check against. Could we specify a simple syntax check that would not reject any mailbox address considered valid by RFC-5321?\nA strict check could be used to test *exact* adherence to the RFC, such checkers exist for many languages. (https://www.npmjs.com/package/smtp-address-parser for JavaScript.)\nThe HTML spec is a \"living standard\" so should be open to change. Please can we fix it?\n","format":"org.matrix.custom.html","formatted_body":"The existing HTML spec respects no RFC (5321 or 5322), instead invents a new syntax for email addresses. This new syntax rejects perfectly valid us-ascii mailbox addresses that are and have been valid (since at least 1982) with no apparent basis. This is harmful. I have seen this new syntax used by other projects, citing the HTML spec as the authority for their \"willful violation of RFC 5322\" -- with no mention of the standard they <em>should</em> be looking at, RFC-5321.<br>I understand the practical considerations of wanting a simple grammar to check against. Could we specify a simple syntax check that would not reject any mailbox address considered valid by RFC-5321?<br>A strict check could be used to test <em>exact</em> adherence to the RFC, such checkers exist for many languages. (https://www.npmjs.com/package/smtp-address-parser for JavaScript.)<br>The HTML spec is a \"living standard\" so should be open to change. Please can we fix it?","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$X-8zAlTTRlCpYwRpiz5uqneD4JDEeQm2jehDdR79KCI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710168184088,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$FghF8AO3GihNc8m2DurxMH1KVHOA_j_RsmuJDXkHwbg"},
{"content":{"body":"hsivonen: that would probably be a good property, yeah!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: that would probably be a good property, yeah!","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"msgtype":"m.text"},"ts":1710168575258,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xofKybyPnOoUCxa3f5mEK6CaoKrxazQ760jpCoIfna0"},
{"content":{"body":"It's not about wanting a simple grammar, it's a worry about breaking existing websites.","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$FghF8AO3GihNc8m2DurxMH1KVHOA_j_RsmuJDXkHwbg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710168721750,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$VBgM0guQtfeJ1z5o8mopmj43jdUl3L3Diw0N3bPpIQU"},
{"content":{"body":"> <@annevk:matrix.org> It's not about wanting a simple grammar, it's a worry about breaking existing websites.\n\nWell, *changing* them -- I would say they're broken now, so fixing them.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$VBgM0guQtfeJ1z5o8mopmj43jdUl3L3Diw0N3bPpIQU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>It&#39;s not about wanting a simple grammar, it&#39;s a worry about breaking existing websites.</blockquote></mx-reply>Well, <em>changing</em> them -- I would say they're broken now, so fixing them.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":false,"m.in_reply_to":{"event_id":"$VBgM0guQtfeJ1z5o8mopmj43jdUl3L3Diw0N3bPpIQU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710168945618,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$wG0rRXX0augAu9i3WllnkikpPuRKFUdqb4Qs5zNq1V0"},
{"content":{"body":"😀","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$wG0rRXX0augAu9i3WllnkikpPuRKFUdqb4Qs5zNq1V0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710168970933,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$cIdM5X6J3HHRqRwEu9TMjCqe3Cat6oJ3gKyA6lsc7FU"},
{"content":{"body":"Right, I'm well familiar with both sides of this debate. You asked why people might be reluctant so I attempted to explain.","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$cIdM5X6J3HHRqRwEu9TMjCqe3Cat6oJ3gKyA6lsc7FU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710169110831,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8fV7axcnLW4e2L58-WKLHnP1VXvX0bNC8taplDdX0jI"},
{"content":{"body":"Okay, does anybody think that RFC-5322 is the right standard to be looking to for mailbox address syntax?\nI think this is the underlying mistake (not recognizing RFC-5321 as the relavent document) that lead the HTML spec into inventing it's own syntax. (That's like swallowing a spider to catch the fly...)\n","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$8fV7axcnLW4e2L58-WKLHnP1VXvX0bNC8taplDdX0jI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710169525753,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$0H7-AalZ52_ZUx0NppzhkTpgSH4qTv9APzGhRPKe9mk"},
{"content":{"body":"no blame here, email standard are complex","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$x-yUy3bLxNo8lAZGjr1gUlvS_9I8MPqOn0Prqyg1p_8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710169885833,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$q1vtyw_IRcG5fodR3B5Z5_7whYkzAFF56vEudLl_AOU"},
{"content":{"body":"it's easy to get confused","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$q1vtyw_IRcG5fodR3B5Z5_7whYkzAFF56vEudLl_AOU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710169916575,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$7wdwPvXMEgSfE1JlSTfE-2RMjSjpnaErSsbU3eSY6vQ"},
{"content":{"body":"this is the count of RFC related to DNS and mail","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$7wdwPvXMEgSfE1JlSTfE-2RMjSjpnaErSsbU3eSY6vQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710169945321,"senderName":"dean.highpower","senderId":"@dean.highpower:matrix.org","id":"$w4Kp__iBv1doK773-ilDltQdRUhyaPef_LkGjoMeSvo"},
{"content":{"body":"I'm taking a look at which parts of event handling in the DOM spec server-side runtimes and other non-DOM implementations need to implement and which don't","m.mentions":{},"msgtype":"m.text"},"ts":1710170077550,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$5BN9lVHToKbyRbLI-6fC5MgS4Iu5qr1djesP1hvz4K8"},
{"content":{"body":"and I'm wondering about the behavior of an event's path if the same event gets dispatched from an event listener","m.mentions":{},"msgtype":"m.text"},"ts":1710170115032,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$5zCnQBspkCSiKKXsTWHEmqQYWz4gxKsKi7-0ZCsuZzU"},
{"content":{"body":"in dispatch 5.3, before running the listeners, an item is added to the event's path, and then after running the listeners in step 8 the path is cleared","m.mentions":{},"msgtype":"m.text"},"ts":1710170223168,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$3goeRt-GC6ANAmhi3b18dFDFSOhua0dBGDtmmXuN4Kc"},
{"content":{"body":"but if you have an event dispatch inside a listener, any \"outer\" listeners that haven't yet run will have an empty path","m.mentions":{},"msgtype":"m.text"},"ts":1710170250029,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$PsWdHa_UZoN9xTeFNJfpe4I-Yoffwg9ZTsJ58a7ZUQo"},
{"content":{"body":"am I reading this right?","m.mentions":{},"msgtype":"m.text"},"ts":1710170272390,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$L4pxfIGq4s51f1tZjFbncJk_f0K12E3VRCsZfabz1rY"},
{"content":{"body":"annevk:","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>:","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1710170377044,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$X1T6EIoLJW2wvPaus_1PfpozJ6UnO4Vi0vC9Tf07uto"},
{"content":{"body":"I guess I don't think that's a relevant question here. Pretty much everyone is in agreement that this should change. The question is really how, what the processing model is going to be, and what the impact of that change will be (which likely requires some amount of testing and perhaps incremental rollout in some browser).","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$w4Kp__iBv1doK773-ilDltQdRUhyaPef_LkGjoMeSvo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710170793130,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1HK9SdFrg4xC0_A2U9K_L3iZGqXB5PX8XFaiRvaDyDg"},
{"content":{"body":"oh, I just realized that the dispatch flag is meant to avoid this kind of thing","m.mentions":{},"msgtype":"m.text"},"ts":1710170978952,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$pVz8i0TfsGdtHVEeusQCcLr9x5Re2cOPKxT_Tz0JM4A"}
]