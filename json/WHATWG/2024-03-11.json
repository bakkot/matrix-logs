[
{"content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1710142318118,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementation return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142337859,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$voeLbuQ7sBbFfN6-tkkSzXxMXFGd-3r_fejSorbAcnU"},
{"content":{"body":" * Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":" * <p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?\n\nIn that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:\n\n> `Infinity`, `-Infinity` and `NaN` must not be used as the value of a `float` or `double`","format":"org.matrix.custom.html","formatted_body":"<p>Per https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values, when parsing floating-point number values: Should implementations return Infinity and NaN if that’s the number value a string parses to — or instead should implementations treat Infinity and NaN be treated as errors ?</p>\n<p>In that HTML spec algorithm itself, there’s nothing explicit about handling Infinity and NaN — but in the WebIDL spec at https://webidl.spec.whatwg.org/#ref-for-idl-float①, I see:</p>\n<blockquote>\n<p><code>Infinity</code>, <code>-Infinity</code> and <code>NaN</code> must not be used as the value of a <code>float</code> or <code>double</code></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MWN3FQVOqSr545FzRSP-6NnROR_OInYCuE2TQbI8Yr8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142344521,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CZv9xpy3gsxjpwEkEX0YEah4lfT_8nQZi4DAeAzS0BU"},
{"content":{"body":"sideshowbarker: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: the HTML algorithm treats strings like \"Infinity\" or \"NaN\" as errors, if that's what you're asking. It's completely separate from the Web IDL algorithm, and has different call sites.","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1710142459030,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$k7o1ORWE85PFCvZ5poyMfn1Dml-ex9yrTsNnBRqZe0A"},
{"content":{"body":"I'm not sure, but I think there's definitely a worry about changing the existing contract drastically as it'll impact many websites.","m.mentions":{},"m.relates_to":{"event_id":"$837kiHuvdITI_8xmWtbK5Ot9yXxtcY_VD9UqKgE88jk","is_falling_back":true,"m.in_reply_to":{"event_id":"$5pCxaTEuwmhAesd-qaDR9h8qpE37yMpQCcLMif8v_TI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1710142682335,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$X-8zAlTTRlCpYwRpiz5uqneD4JDEeQm2jehDdR79KCI"},
{"content":{"body":"So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or any error?","m.mentions":{},"msgtype":"m.text"},"ts":1710142705109,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CqfqDv9P6W4NlL5u5eBwj7K4zcKfxJEi1SOQxpxqwAU"},
{"content":{"body":" * So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or an error?","m.mentions":{},"m.new_content":{"body":"So I guess the only way that algorithm would ever return Inifinity or NaN is if it were given \"Infinity\" or \"NaN\"  as input? If so then I guess another way to state it is: The algorithm never returns \"Infinity\" or \"NaN\" — it always returns either an actual number, or an error?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CqfqDv9P6W4NlL5u5eBwj7K4zcKfxJEi1SOQxpxqwAU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710142719287,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pkcFzIBIF40rC9mc96NM32h22OzYpFNpxCfIm_ReLoc"},
{"content":{"body":"That looks correct, from a quick glance.","m.mentions":{},"msgtype":"m.text"},"ts":1710142794999,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ScfB6DE7YcCcH8CsvZtNiVJPWZVoO8hXGtzVwhQbBQs"},
{"content":{"body":"The latter statement seems correct. But the former doesn't. If the algorithm were given \"Infinity\" or \"NaN\" as an input, then it would return error, not Infinity or NaN.","m.mentions":{},"msgtype":"m.text"},"ts":1710143033623,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UsgOB8rfJHhmh21KcOgKRYirEhKiTibX3r0oY1u7QVU"},
{"content":{"body":"Right, sorry — I misspoke there. I guess meant to say something more like, The only way something would end up getting _evaluated_ (not returned) by the algorithm as Inifinity or NaN would be if it the algorithm were given the strings \"Infinity\" or \"NaN\"  as input.","format":"org.matrix.custom.html","formatted_body":"Right, sorry — I misspoke there. I guess meant to say something more like, The only way something would end up getting <em>evaluated</em> (not returned) by the algorithm as Inifinity or NaN would be if it the algorithm were given the strings \"Infinity\" or \"NaN\"  as input.","m.mentions":{},"msgtype":"m.text"},"ts":1710143141791,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$N5HubNjGTTXxa4NHJYQcCgtFb545JV4o32vjnUFPqQI"},
{"content":{"body":"The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC annevk ","format":"org.matrix.custom.html","formatted_body":"The ZWNJ and ZWJ rules at https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context affect whether a URL is fetchable, but the middle dot rule seems to affect only the URL bar display the domain. Has anyone researched what the effect of this list should be on browser behavior? https://www.iana.org/assignments/idna-tables-12.0.0/idna-tables-12.0.0.xhtml#idna-tables-context CC <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1710153761855,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$-GVLVMlNW1DGWDCODJzHOwwG-Tk-jlj8hdyQitP6LAM"}
]