[
{"content":{"body":"> <@tabatkins:matrix.org> sideshowbarker: version 3.0.4 published\n\nThanks much ‚Äî that got me past the previous errors I was having with the Secure Context spec","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ep9WhSr0i2-mHBCwGgjTACJwmf68zV2NrEr-5PEAwK4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: version 3.0.4 published</blockquote></mx-reply>Thanks much ‚Äî that got me past the previous errors I was having with the Secure Context spec","m.relates_to":{"m.in_reply_to":{"event_id":"$ep9WhSr0i2-mHBCwGgjTACJwmf68zV2NrEr-5PEAwK4"}},"msgtype":"m.text"},"ts":1631497767178,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$SEP_oPdyE7g3V0OmMnk-ikiKa6nC2Sc3fzAfTPfNd20"},
{"content":{"body":"‚Ä¶but now having new errors: https://github.com/w3c/webappsec-secure-contexts/runs/3582240315?check_suite_focus=true#step:3:607","msgtype":"m.text"},"ts":1631497779570,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$kn5kDRuQ1Ao9FAu392coF5O1oShmLPED0UkRx4uPxPM"},
{"content":{"body":"> Copyright string does not match requirements","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nCopyright string does not match requirements\n</blockquote>\n","msgtype":"m.text"},"ts":1631497799352,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$tMczHkE3MaUVxckR3ka-CrIotdn-fKCSrQnJZmtcfd4"},
{"content":{"body":"now tries to figure out from the the Copyright text is generated","msgtype":"m.emote"},"ts":1631497826034,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$LqVBmw4vhXuKPpg66eCoVHZimsFAJHtyQrWENhz41aA"},
{"content":{"body":"finds `bikeshed/boilerplate/webappsec/copyright.include`","format":"org.matrix.custom.html","formatted_body":"finds <code>bikeshed/boilerplate/webappsec/copyright.include</code>","msgtype":"m.emote"},"ts":1631497859463,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$SL7ORpihzXfYOW47Vf2LuapnNslWeajLW7oVORwJQyw"},
{"content":{"body":"Sigh, so many undocumented changes","msgtype":"m.text"},"ts":1631498067948,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$7wZz8pgPnrHs1LWNRh8m0YuvMsOIehePKshkAARP5vA"},
{"content":{"body":"TabAtkins: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get locally-generated CRD of Secure Contexts to pass pubrules/specberus)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get locally-generated CRD of Secure Contexts to pass pubrules/specberus)","msgtype":"m.text"},"ts":1631500359950,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$xKhf0yEoBE-T6OlJ_Vfs_F1GU6lraZpYT5-zi0b0A2U"},
{"content":{"body":" * TabAtkins: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get a locally-generated CRD of Secure Contexts to pass pubrules/specberus)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get a locally-generated CRD of Secure Contexts to pass pubrules/specberus)","m.new_content":{"body":"TabAtkins: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get a locally-generated CRD of Secure Contexts to pass pubrules/specberus)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: r? https://github.com/tabatkins/bikeshed/pull/2138 (with those changes, I can get a locally-generated CRD of Secure Contexts to pass pubrules/specberus)","msgtype":"m.text"},"m.relates_to":{"event_id":"$xKhf0yEoBE-T6OlJ_Vfs_F1GU6lraZpYT5-zi0b0A2U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631500380269,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$OXUCsZucQahHuTGlcMb96sD8h8GbwV3NMKo0VHavAn4"},
{"content":{"body":"tusf: it's a tree. Not aware of articles, but in the early days linked list vs array for representing children was a topic.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tusf:matrix.org\">tusf</a>: it's a tree. Not aware of articles, but in the early days linked list vs array for representing children was a topic.","msgtype":"m.text"},"ts":1631514368915,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$mH4nYa5UJIQkUNfVWvt2vTvOC0mPu_9VwmddiBX7VEE"},
{"content":{"body":"Jake Archibald: re https://github.com/WICG/app-history/issues/167; what about the example I gave is not possible? I.e., you have a sandboxed document that can execute script. It creates a blob URL and navigates to that. How are those not two documents that are same-origin?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: re https://github.com/WICG/app-history/issues/167; what about the example I gave is not possible? I.e., you have a sandboxed document that can execute script. It creates a blob URL and navigates to that. How are those not two documents that are same-origin?","msgtype":"m.text"},"ts":1631515942478,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$uiy-ACqFsK5UEYuV1WydOtqeRzX6dKYJjBug_38hWu4"},
{"content":{"body":"annevk ah, I missed your reference to blob URLs there","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> ah, I missed your reference to blob URLs there","msgtype":"m.text"},"ts":1631518646432,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$E3cGuQFSOWzA59Nb4zQpN3s1UQRVcuOgsffr9Q0EdDM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> The second throw prevents the method from going through in browsers that don't support the API\n\nbut you need to know that the second throw _is_ supported, right? ‚òπÔ∏è","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$HId2rTqCdgc7aE2duyk0n9GLSKrBSRE9XXOhUHtZACg?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>The second throw prevents the method from going through in browsers that don&#39;t support the API</blockquote></mx-reply>but you need to know that the second throw <em>is</em> supported, right? ‚òπÔ∏è","m.relates_to":{"m.in_reply_to":{"event_id":"$HId2rTqCdgc7aE2duyk0n9GLSKrBSRE9XXOhUHtZACg"}},"msgtype":"m.text"},"ts":1631531847968,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$7N_gL4Z8soByY7EodvqIhcz8qRhYsFf8HoPshlbtWqU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> (but more seriously this is a long-running thread: https://github.com/heycam/webidl/issues/107 )\n\noh hey apparently I already thumbed up that! üòÜ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$jYDY5TFQE6swZ2pW795D-YMvDl5RS2AP1u8Gd_3s8Ak?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>(but more seriously this is a long-running thread: https://github.com/heycam/webidl/issues/107 )</blockquote></mx-reply>oh hey apparently I already thumbed up that! üòÜ","m.relates_to":{"m.in_reply_to":{"event_id":"$jYDY5TFQE6swZ2pW795D-YMvDl5RS2AP1u8Gd_3s8Ak"}},"msgtype":"m.text"},"ts":1631531878250,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$Tnm3esXdmVbiBP0LWrmTBAjT_Ld0YXo0M1dJxNggdG0"},
{"content":{"body":"So if, in a spec, I have an exception and want to create a stack trace, what kind of handwaving do these days? I assume that js still pretends that's not a thing. ","msgtype":"m.text"},"ts":1631547056082,"senderName":"jgraham","senderId":"@jgraham_:matrix.org","id":"$UMU46JNmJubF6qYJJI6deXdAd7d-ZLo92-gtHM8vyS0"},
{"content":{"body":"Domenic: what would you think it would take for you to support a CancelToken like proposal (as in you personally - not as in Chrome/WHATWG or anyone else)? I'm asking because you have the most experience thinking about this problem (maybe Petka or Kris too? IDK).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: what would you think it would take for you to support a CancelToken like proposal (as in you personally - not as in Chrome/WHATWG or anyone else)? I'm asking because you have the most experience thinking about this problem (maybe Petka or Kris too? IDK).","msgtype":"m.text"},"ts":1631547447805,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$Oas4JxzwWb_sl02QoOgafxWz-AlhaEPtQEzXyBCNuvU"},
{"content":{"body":"(Mainly interested because I'd love language-level sugar)","msgtype":"m.text"},"ts":1631547914515,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$Md4YrYDz40Z-0u3S6r-NJv8tvPcM98EGV1eD-7Fb8Yk"},
{"content":{"body":"> <@benjamin.gruenbaum:matrix.org> Domenic: what would you think it would take for you to support a CancelToken like proposal (as in you personally - not as in Chrome/WHATWG or anyone else)? I'm asking because you have the most experience thinking about this problem (maybe Petka or Kris too? IDK).\n\nI think it would be net harmful for there to be a protocol now that we have a cross-environment standard object. So I can't really think of anything. Syntax-level support for AbortSignal would be nice but it should be through host hooks not through a protocol that allows a proliferation of different types.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Oas4JxzwWb_sl02QoOgafxWz-AlhaEPtQEzXyBCNuvU?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@benjamin.gruenbaum:matrix.org\">@benjamin.gruenbaum:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: what would you think it would take for you to support a CancelToken like proposal (as in you personally - not as in Chrome/WHATWG or anyone else)? I'm asking because you have the most experience thinking about this problem (maybe Petka or Kris too? IDK).</blockquote></mx-reply>I think it would be net harmful for there to be a protocol now that we have a cross-environment standard object. So I can't really think of anything. Syntax-level support for AbortSignal would be nice but it should be through host hooks not through a protocol that allows a proliferation of different types.","m.relates_to":{"m.in_reply_to":{"event_id":"$Oas4JxzwWb_sl02QoOgafxWz-AlhaEPtQEzXyBCNuvU"}},"msgtype":"m.text"},"ts":1631548357729,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kqsszndvZbRFjNN3iQY4fx78h58Xj94hjlc0qn9YfSY"},
{"content":{"body":"> <@jgraham_:matrix.org> So if, in a spec, I have an exception and want to create a stack trace, what kind of handwaving do these days? I assume that js still pretends that's not a thing.\n\nThere is a long-standing HTML issue about making this better, so nothing very good. I have been doing the following handwaving: https://wicg.github.io/app-history/#finalize-with-an-aborted-navigation-error step 4","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UMU46JNmJubF6qYJJI6deXdAd7d-ZLo92-gtHM8vyS0?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jgraham_:matrix.org\">@jgraham_:matrix.org</a><br>So if, in a spec, I have an exception and want to create a stack trace, what kind of handwaving do these days? I assume that js still pretends that&#39;s not a thing. </blockquote></mx-reply>There is a long-standing HTML issue about making this better, so nothing very good. I have been doing the following handwaving: https://wicg.github.io/app-history/#finalize-with-an-aborted-navigation-error step 4","m.relates_to":{"m.in_reply_to":{"event_id":"$UMU46JNmJubF6qYJJI6deXdAd7d-ZLo92-gtHM8vyS0"}},"msgtype":"m.text"},"ts":1631548405154,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gz5uDcBKuCm8eZ8alEm2CS8JJ1t1soV3pKp1dY_5pYM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> I think it would be net harmful for there to be a protocol now that we have a cross-environment standard object. So I can't really think of anything. Syntax-level support for AbortSignal would be nice but it should be through host hooks not through a protocol that allows a proliferation of different types.\n\nHey, thanks for the super-quick reply. I'm wondering if there can still be a `then`able like interop with `AbortSignal` implementing that (doesn't have to be Ron's protocol exactly) so that the language can provide syntactic assist.\n\nWhat would host-hooks look like? If that gives the capability for language-level syntax support and debugging help that would totally address the things I care about (similarly to async/await being easy to debug compared to raw-promises because of browser tooling)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$kqsszndvZbRFjNN3iQY4fx78h58Xj94hjlc0qn9YfSY?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>I think it would be net harmful for there to be a protocol now that we have a cross-environment standard object. So I can't really think of anything. Syntax-level support for AbortSignal would be nice but it should be through host hooks not through a protocol that allows a proliferation of different types.</blockquote></mx-reply><p>Hey, thanks for the super-quick reply. I'm wondering if there can still be a <code>then</code>able like interop with <code>AbortSignal</code> implementing that (doesn't have to be Ron's protocol exactly) so that the language can provide syntactic assist.</p>\n<p>What would host-hooks look like? If that gives the capability for language-level syntax support and debugging help that would totally address the things I care about (similarly to async/await being easy to debug compared to raw-promises because of browser tooling)</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$kqsszndvZbRFjNN3iQY4fx78h58Xj94hjlc0qn9YfSY"}},"msgtype":"m.text"},"ts":1631548761040,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$DKTH16B_iBonps_JAoeEg4OZYSG9i1ysnqKQJ6Le8iw"},
{"content":{"body":"I think the `then` protocol was a bit of a mistake; it wasn't as useful for the transition as anticipated, and in the long term it isn't good to have different thenables in the ecosystem at all. I strongly believe we should not do a general protocol for new things like AbortSignal; instead everyone should use and collaborate on the single thing (i.e. AbortSignal).","format":"org.matrix.custom.html","formatted_body":"I think the <code>then</code> protocol was a bit of a mistake; it wasn't as useful for the transition as anticipated, and in the long term it isn't good to have different thenables in the ecosystem at all. I strongly believe we should not do a general protocol for new things like AbortSignal; instead everyone should use and collaborate on the single thing (i.e. AbortSignal).","msgtype":"m.text"},"ts":1631548837421,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$JTSi3oVZ7X345g3PriT0TbuVoeRSmdhNGra9vNQ5ZXU"},
{"content":{"body":"Host hooks would look like: HostAddAbortListener(signal, listener), which the DOM spec would define to use \"add an abort algorithm\" in web browsers/Node/Deno/etc. Then the ES spec could call HostAddAbortListener whenever it gets an AbortSignal from a developer and wants to add some abort steps.","msgtype":"m.text"},"ts":1631548932376,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$s8b7mRtVVnTtuAJhWMZd7y-To6rhhjzBP29546Pq6z4"},
{"content":{"body":"So for example that would easily allow you to add AbortSignal support to import()","msgtype":"m.text"},"ts":1631548961733,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$O2iUiFJnvR53DV1IfP-V1sg_ikJzZqngYWOMwFsiVM0"},
{"content":{"body":"For syntax-level support it depends on what you mean. So far I have seen no real proposals for syntactic aborting that people generally agree as being workable or good. But if they use AbortSignal then some kind of host hook to abstract over AbortSignal vs. theoretical other-host cancel tokens would be fine.","msgtype":"m.text"},"ts":1631549023898,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$xwoQnwUx4eLdEI23aJ6kdM89Sr53f18CDgDNiwygO4w"},
{"content":{"body":"https://github.com/tc39/proposal-cancelable-promises/blob/0e769fda8e16bff0feffe964fddc43dcd86668ba/Cancel%20Tokens.md#advanced-usage-within-async-functions-awaitcanceltoken was my idea back in the day but nobody liked it in committee and I haven't seen a lot of demand for it since. So, shrug.","msgtype":"m.text"},"ts":1631549107946,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$nSKF0IKnaqJIuURlw7MERGckvML3tJD2GsKM-bt9Rzo"},
{"content":{"body":"Yeah I remember that proposal - if you recall I was very much in favour and I think not having third-state cancellation (except in like 2-3 places but don't tell anyone about generators!) is one of the biggest mistakes in the (modern) language IMO.","msgtype":"m.text"},"ts":1631549294140,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$sV5OQawgj38t7aUgigMWd7TwITgjS5SQxP758oATPRY"},
{"content":{"body":"I tend to agree about `then`ables, I've added a \"consider native promises\" banner to bluebird ¬±3 years ago - hopefully it's slowly dying soon. I still can't wrap my head around twilio using the Q V2 beta in production :D ","format":"org.matrix.custom.html","formatted_body":"I tend to agree about <code>then</code>ables, I've added a &quot;consider native promises&quot; banner to bluebird ¬±3 years ago - hopefully it's slowly dying soon. I still can't wrap my head around twilio using the Q V2 beta in production :D","msgtype":"m.text"},"ts":1631549350113,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$rkETgBbR3_MeY2npyNsyUxnS8oMQ0GFSPA05Zs2R1UQ"},
{"content":{"body":"And while mistakes were made around promises I think we can agree the value they brought to the language and the web ecosystem was/is tremendous and stuff like `then`ables and subclassable promises is somewhat unfortunate but negligible compared to the time saved.","format":"org.matrix.custom.html","formatted_body":"And while mistakes were made around promises I think we can agree the value they brought to the language and the web ecosystem was/is tremendous and stuff like <code>then</code>ables and subclassable promises is somewhat unfortunate but negligible compared to the time saved.","msgtype":"m.text"},"ts":1631549508993,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$RpspBk_bjJvaLoa4rDnCocM7aq1ckY6T0HhwABwktuY"},
{"content":{"body":"So if I understand correctly a possible concern is that if we have a `then` like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with _eventually_ is the language level one (i.e. `CancelToken`) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?\n\nWith hooks on the other hand you'd still have the one API (AbortSignal)","format":"org.matrix.custom.html","formatted_body":"<p>So if I understand correctly a possible concern is that if we have a <code>then</code> like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with <em>eventually</em> is the language level one (i.e. <code>CancelToken</code>) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?</p>\n<p>With hooks on the other hand you'd still have the one API (AbortSignal)</p>\n","msgtype":"m.text"},"ts":1631549646340,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$IOU_-trk8r4cefeRE029Y1qKYXCojt6bYQBQaWxFbp0"},
{"content":{"body":"Domenic: Thanks, that's a useful reference point.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Thanks, that's a useful reference point.","msgtype":"m.text"},"ts":1631549708841,"senderName":"jgraham","senderId":"@jgraham_:matrix.org","id":"$G-uq543pLPY-2En97j3a0AS9Fi2aJLlRWo9etrjpOl4"},
{"content":{"body":" * So if I understand correctly a possible concern is that if we have a `then` like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with _eventually_ is the language level one (i.e. `CancelToken`) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?\n\nWith hooks on the other hand you'd still have the one API (AbortSignal) and we'd be able to iterate on it effectively in WHATWG and not TC39.","format":"org.matrix.custom.html","formatted_body":" * <p>So if I understand correctly a possible concern is that if we have a <code>then</code> like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with <em>eventually</em> is the language level one (i.e. <code>CancelToken</code>) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?</p>\n<p>With hooks on the other hand you'd still have the one API (AbortSignal) and we'd be able to iterate on it effectively in WHATWG and not TC39.</p>\n","m.new_content":{"body":"So if I understand correctly a possible concern is that if we have a `then` like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with _eventually_ is the language level one (i.e. `CancelToken`) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?\n\nWith hooks on the other hand you'd still have the one API (AbortSignal) and we'd be able to iterate on it effectively in WHATWG and not TC39.","format":"org.matrix.custom.html","formatted_body":"<p>So if I understand correctly a possible concern is that if we have a <code>then</code> like cancellation protocol proposal the web would be stuck with two similar but slightly different APIs and if it's like promises the API we'd end up with <em>eventually</em> is the language level one (i.e. <code>CancelToken</code>) with AbortSignal being eventually side-stepped and that API would be much harder to iterate or work on because the language moves slowly + it'd be confusing to developers?</p>\n<p>With hooks on the other hand you'd still have the one API (AbortSignal) and we'd be able to iterate on it effectively in WHATWG and not TC39.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$IOU_-trk8r4cefeRE029Y1qKYXCojt6bYQBQaWxFbp0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631549709902,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$GWTdB6F8WhtETtJ3z8qVAk7Hrtvnh25Q9RHLbgLUDNk"},
{"content":{"body":"On a fun tangent - I recalled https://github.com/tc39/proposal-cancelable-promises/issues/14#issuecomment-227671239 when non-third-state cancellation woke me up a few weeks ago ^^","msgtype":"m.text"},"ts":1631549824522,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$AEyforqvQMnVcZH1YUb8LP-Dwtl4Meef_hm1M9tRAo4"},
{"content":{"body":"Benjamin Gruenbaum: the concern is a bit different than that. The core goal is that we should have exactly one cancel token primitive. 2 (AbortSignal + whatever TC39 comes up with) is bad. But N (AbortSignal + a bunch of userland stuff using [Symbol.cancelToken]()) is also bad.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamin.gruenbaum:matrix.org\">Benjamin Gruenbaum</a>: the concern is a bit different than that. The core goal is that we should have exactly one cancel token primitive. 2 (AbortSignal + whatever TC39 comes up with) is bad. But N (AbortSignal + a bunch of userland stuff using <a href>Symbol.cancelToken</a>) is also bad.","msgtype":"m.text"},"ts":1631549920841,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$AqrWW7d6kY_X_IawD2CwKD_Ji6l6LSUa4r7scwLW6GI"},
{"content":{"body":"Benjamin Gruenbaum: also it's just frustrating wasted effort that these people are busy fighting a turf war to get cancel tokens over in TC39 instead of working (like you!) to improve AbortSignal, which benefits all the same consumers (web, Node, Deno, anyone else who implements it, ...)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamin.gruenbaum:matrix.org\">Benjamin Gruenbaum</a>: also it's just frustrating wasted effort that these people are busy fighting a turf war to get cancel tokens over in TC39 instead of working (like you!) to improve AbortSignal, which benefits all the same consumers (web, Node, Deno, anyone else who implements it, ...)","msgtype":"m.text"},"ts":1631549961394,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$1rTj_EMD_xwEXusT2UOgWk8Yvcaqp6jY6IvZcmaoFtk"}
]