[
{"content":{"body":"HTML says \"This specification does not specify which image types are to be supported.\"","msgtype":"m.text","org.matrix.msc1767.text":"HTML says \"This specification does not specify which image types are to be supported.\""},"ts":1676013203028,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$lb0zFM9syZbzeIVfsYcdQvCdi4S1WnhjP4_zS8NS0us"},
{"content":{"body":"Hi folks, coming here from https://github.com/whatwg/dom/issues/586 per @annevk's suggestion","msgtype":"m.text"},"ts":1676016181761,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$D_tusfHHRLzm_nPW23Jj_opEgzk1yQE_vv0wA4_cdkk"},
{"content":{"body":"The proposed API looks to me like a \"better horse\" situation, hence my comments...","msgtype":"m.text"},"ts":1676016281808,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$f2UmFrbFcC8u68EziFmpGxxpR1-zy0ZATk4hgvUZSXY"},
{"content":{"body":"Pierre-Yves Gérardy: hey welcome, thanks for joining! And thanks for giving feedback, but note that for effective participation it's usually better to support an existing comment that says as much or leave a single comment that clearly makes your point. Adding a lot of comments to an issue will make them look noisy and more easily ignorable.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pygy_:matrix.org\">Pierre-Yves Gérardy</a>: hey welcome, thanks for joining! And thanks for giving feedback, but note that for effective participation it's usually better to support an existing comment that says as much or leave a single comment that clearly makes your point. Adding a lot of comments to an issue will make them look noisy and more easily ignorable.","msgtype":"m.text"},"ts":1676016448281,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Lq2vbiEqLVkmhIpv-TFJTEHljEM-k7xoItw97Syo7Zc"},
{"content":{"body":"And to be clear, the API as proposed wouldn't make it in. If we actually want CSS parity it would need move semantics as discussed in the issue I linked.","msgtype":"m.text"},"ts":1676016537267,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$nIDr5_8vgRu_6QbTKpHXqdIxJ5tXgmPoK3YKwown9rs"},
{"content":{"body":"Move semantics... could you explain? As in not detaching the nodes from the document/parent while moving them around? If so I'm with you from my first comment on...","msgtype":"m.text"},"ts":1676017021908,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$LIRKHmZunnAmK45v2E6TqO36nAn9RJlwmN8G0FUjkNA"},
{"content":{"body":"Losing the state of media elements, iframes, and the focus when moving nodes is an anti-feature of the current DOM methods.","msgtype":"m.text"},"ts":1676017183285,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$y6CEDFZseQ4CYoDwwyRBSCUwP7ZQvzNBA9cx30NTDFk"},
{"content":{"body":"A single `parent.spliceChildren(nodes: Nodes[], {previousSibling?, nextSibling?, delayRemoval?: (n:Node)=>Promise)` method would cover all the cases used in the wild in frameworks AFAIK, and would be more ergonomic than asking users to tag nodes with an attribute for the browser to reorder","format":"org.matrix.custom.html","formatted_body":"A single <code>parent.spliceChildren(nodes: Nodes[], {previousSibling?, nextSibling?, delayRemoval?: (n:Node)=&gt;Promise)</code> method would cover all the cases used in the wild in frameworks AFAIK, and would be more ergonomic than asking users to tag nodes with an attribute for the browser to reorder","msgtype":"m.text"},"ts":1676017859221,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$x4tX3Kc94VWuKMm1eWCRidzmhFgsyVlwpWIiits1x4k"},
{"content":{"body":"Pierre-Yves Gérardy: right, at the moment the DOM only has insert, remove, and replace all, essentially.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pygy_:matrix.org\">Pierre-Yves Gérardy</a>: right, at the moment the DOM only has insert, remove, and replace all, essentially.","msgtype":"m.text"},"ts":1676017925660,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$TbCDIlhD0IDvgTReYCTaf8HgSmOp9PWEJy9oYcy2-gA"},
{"content":{"body":"That signature looks more complex than what I had in mind, but there's a lot of pre-requisites to sort out first anyway. (As noted in my comment.)","msgtype":"m.text"},"ts":1676017962482,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iEn1zo8EbcG9Fn7F1rbYrbFHdFXdWinyDt3twhW6ako"},
{"content":{"body":"Do you mean https://github.com/whatwg/dom/issues/808?","msgtype":"m.text"},"ts":1676018387654,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$HiP1H_dF0MnX42dJ0V6O0BhejlB9D2G-XmJjh7Ij9RM"},
{"content":{"body":"Re. signature,  `(nodes, options?)` has the advantage of future extensibility. For the simple case(reorder all nodes) the options are not needed. If you want to move a subset of nodes from one point to another, it becomes `splice(nodes, splicePoint)` which is as convenient as it gets...","format":"org.matrix.custom.html","formatted_body":"Re. signature,  <code>(nodes, options?)</code> has the advantage of future extensibility. For the simple case(reorder all nodes) the options are not needed. If you want to move a subset of nodes from one point to another, it becomes <code>splice(nodes, splicePoint)</code> which is as convenient as it gets...","msgtype":"m.text"},"ts":1676018956032,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$7Is6e-S4qhX96wRO8nQJUImmnqr5TNfOQvegTnKpDHY"},
{"content":{"body":"What would prevent us from adding a dictionary when we need it?","msgtype":"m.text"},"ts":1676018994959,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$eS0PZWW8nHdEnhoVXIuevLr2v__jXzjExU6P0WxHHU4"},
{"content":{"body":"The modern DOM methods are variadic","msgtype":"m.text"},"ts":1676019019893,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$VLZWJDauec7QHswBGVZBjSmpbWmt3ilakwOyWhIE_uw"},
{"content":{"body":"Those could still have a dictionary at the end if we wanted to. And yeah, that issue is a pre-requisite. The other issue that's referenced discusses move semantics.","msgtype":"m.text"},"ts":1676019075699,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OmRMXfdwz8SzbyWEQEXrxW7C6x3VTct14lNAP5RfzZ0"},
{"content":{"body":"In my ideal world, moving nodes within a document wouldn't tigger a state teardown/init if done atomically. A manual `remove`/`insert` would though.\n\nCould these APIs be extended to accept arrays of nodes, so that we don't have to splice them in? That would avoid iterating twice over the list.","format":"org.matrix.custom.html","formatted_body":"<p>In my ideal world, moving nodes within a document wouldn't tigger a state teardown/init if done atomically. A manual <code>remove</code>/<code>insert</code> would though.</p>\n<p>Could these APIs be extended to accept arrays of nodes, so that we don't have to splice them in? That would avoid iterating twice over the list.</p>\n","msgtype":"m.text"},"ts":1676019583704,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$xb4Y1ja4S-lfYBDMlxkMVJK28VvwB3iulfDIQvGrnvc"},
{"content":{"body":"They already do, my bad :-)","msgtype":"m.text"},"ts":1676020395183,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$ve0sT2FFa_o81i3MIFrsCCgPqpNRQ4w_d74kJtab5r0"},
{"content":{"body":"Actually, they don't, and can't be updated for Web compat reasons I guess, since arrays are stringified :-/","msgtype":"m.text"},"ts":1676020630228,"senderName":"Pierre-Yves Gérardy","senderId":"@pygy_:matrix.org","id":"$msu1Q9VPMxckIvZrUnvstvf7HWWDj_oIGqe7PA1dW58"},
{"content":{"body":"Pierre-Yves Gérardy: you can use apply, it's fine","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pygy_:matrix.org\">Pierre-Yves Gérardy</a>: you can use apply, it's fine","msgtype":"m.text"},"ts":1676021073741,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pvLMycW5gxl0j9z-AbjRuvJdnR4ISB29XsknPOLFLBs"}
]