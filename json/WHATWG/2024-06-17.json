[
{"content":{"body":"Dominic Farolino: hey I was curious about something with Observables; when you subscribe with a signal, how would you then use that signal in any of your callback handling? Such as passing it to a fetch you might start based on a click?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: hey I was curious about something with Observables; when you subscribe with a signal, how would you then use that signal in any of your callback handling? Such as passing it to a fetch you might start based on a click?","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1718609786284,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$BZbgKfiUQMzX6zJytcPHII96CsvElUqjIMk1CWaQi9w"},
{"content":{"body":"I guess you can always close over that AbortSignal separately, but I wonder if we should make this more automatic by having an implicit AsyncContext variable propagate things (if there wasn’t already a plan for that)","msgtype":"m.text"},"ts":1718611260356,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Rsnnyp4cr26gx5Bv2nfIW_Kj7O3GwPJhf5ExKUFBUr0"},
{"content":{"body":"* I guess you can always close over that AbortSignal separately, but I wonder if we should make this more automatic by having an implicit AsyncContext variable propagate the AbortSignal (if there wasn’t already a plan for that)","m.new_content":{"body":"I guess you can always close over that AbortSignal separately, but I wonder if we should make this more automatic by having an implicit AsyncContext variable propagate the AbortSignal (if there wasn’t already a plan for that)","msgtype":"m.text"},"m.relates_to":{"event_id":"$Rsnnyp4cr26gx5Bv2nfIW_Kj7O3GwPJhf5ExKUFBUr0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718611279714,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZgYBqpAMc41QiLqzmbXsVMOKsE06vJNwm2NDNDRmKVc"},
{"content":{"body":"Does AsyncContext also work for 'synchronous' events?","m.mentions":{},"msgtype":"m.text"},"ts":1718611322037,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ehoX5wDzxOA3eY76Zg7p6Q9I1lWKsxVBj4JkgX2dwI4"},
{"content":{"body":" * Does AsyncContext also work for 'synchronous' events? (I guess it does, given what we discussed.)","m.mentions":{},"m.new_content":{"body":"Does AsyncContext also work for 'synchronous' events? (I guess it does, given what we discussed.)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ehoX5wDzxOA3eY76Zg7p6Q9I1lWKsxVBj4JkgX2dwI4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718611380806,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jZBFvA8kQ0V9H8bFWA8ts3ez6W92cT8ACOcp0fkGp6M"},
{"content":{"body":"Yes, it is just a mechanism for saving and restoring dynamically scoped variables. The only thing async about it is that it does this around await by default ","format":"org.matrix.custom.html","formatted_body":"Yes, it is just a mechanism for saving and restoring dynamically scoped variables. The only thing async about it is that it does this around await by default","msgtype":"m.text"},"ts":1718611471148,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wlFyQvaPz6nuxN5DHBjgpFCcmzUDZpVAeBVu6hHNf78"},
{"content":{"body":"The whole API is synchronous ","format":"org.matrix.custom.html","formatted_body":"The whole API is synchronous","msgtype":"m.text"},"ts":1718611487058,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Y6ftS9345aHLEGaBZHgInfw0OEGIpaQMITWAzVzoklc"},
{"content":{"body":"annevk: I'm actually not sure I get the question. The signal you subscribe with is for the observable/producer to be aware of consumer-initiated unsubscription. I don't think you want to use the signal in the consumer's callbacks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I'm actually not sure I get the question. The signal you subscribe with is for the observable/producer to be aware of consumer-initiated unsubscription. I don't think you want to use the signal in the consumer's callbacks.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1718631301623,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$rAE05SebkoRm3jKvtwKuFaZrgrubpNAIyAs_mbO3mQ0"},
{"content":{"body":"Dominic Farolino: why not?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: why not?","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1718640010579,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IXeiFBTg835yqBS8shafsp5jyioyxhRP4u-sBnrw2AA"},
{"content":{"body":"\"I'm no longer interested in this event and if it started any activity on my behalf I'm no longer interested in that either\" seems quite reasonable to me.","m.mentions":{},"msgtype":"m.text"},"ts":1718640063429,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$4fD09zaHcDYA2iwPfLFKUaevwgD3DZB9MB21v7zzQFg"}
]