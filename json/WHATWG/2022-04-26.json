[
{"content":{"body":"Is there any mechanism to enforce subresource integrity upon a document, such that one can know that a document-like entity (e.g. an iframe or Document object) was initialized from a resource with a given content hash?","msgtype":"m.text","org.matrix.msc1767.text":"Is there any mechanism to enforce subresource integrity upon a document, such that one can know that a document-like entity (e.g. an iframe or Document object) was initialized from a resource with a given content hash?"},"ts":1650935948196,"senderName":"Justin Martin","senderId":"@thefrozenfire:matrix.org","id":"$7rBuHhJ09NCPaJXrRmPCxDNcM4wDcNHWaKrD_dXtRKA"},
{"content":{"body":"Justin Martin: no and no plans for that either at this point that I know of","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@thefrozenfire:matrix.org\">Justin Martin</a>: no and no plans for that either at this point that I know of","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Justin Martin: no and no plans for that either at this point that I know of","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@thefrozenfire:matrix.org\">Justin Martin</a>: no and no plans for that either at this point that I know of","mimetype":"text/html"}]},"ts":1650950171985,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$YCR9szIehIFed352_Nxk4O7sjpX41RglbNZZ0HWD21s"},
{"content":{"body":"Domenic: to be clear, I agree that ideally <link rel=preload> does not do type-specific fetching, but how is it not a layering violation for `fetch()` to act on `Link` headers? At that point it would no longer be the lowest-level primitive we could offer. Definitely seems counter to its design goals.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: to be clear, I agree that ideally &lt;link rel=preload&gt; does not do type-specific fetching, but how is it not a layering violation for <code>fetch()</code> to act on <code>Link</code> headers? At that point it would no longer be the lowest-level primitive we could offer. Definitely seems counter to its design goals.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: to be clear, I agree that ideally <link rel=preload> does not do type-specific fetching, but how is it not a layering violation for `fetch()` to act on `Link` headers? At that point it would no longer be the lowest-level primitive we could offer. Definitely seems counter to its design goals.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: to be clear, I agree that ideally &lt;link rel=preload&gt; does not do type-specific fetching, but how is it not a layering violation for <code>fetch()</code> to act on <code>Link</code> headers? At that point it would no longer be the lowest-level primitive we could offer. Definitely seems counter to its design goals.","mimetype":"text/html"}]},"ts":1650987450389,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$tr38YVefaqEZMP-KUovPnDZNjqllp7frvrJEGNkaN3Q"},
{"content":{"body":"fetch() is already not the lowest-level primitive; it builds on top of HTTP which has a bunch of header-triggered behaviors (including further fetches), like Location, CORS, etc.","msgtype":"m.text","org.matrix.msc1767.text":"fetch() is already not the lowest-level primitive; it builds on top of HTTP which has a bunch of header-triggered behaviors (including further fetches), like Location, CORS, etc."},"ts":1650987506624,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$vKNDnEUDGgpBf63D9DsqCuYiKDutdhAInbLwvKm0wTQ"},
{"content":{"body":"Link being another one of those seems reasonable to me; there's a bit of an IETF/WHATWG mess where IETF doesn't have the toolbox to specify Link caches in proper detail but that's fine, we can do it.","msgtype":"m.text","org.matrix.msc1767.text":"Link being another one of those seems reasonable to me; there's a bit of an IETF/WHATWG mess where IETF doesn't have the toolbox to specify Link caches in proper detail but that's fine, we can do it."},"ts":1650987560128,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$eS5-0XCEx2ZdwD3Yw04yWF0qIxK9qx166MMJAGee1jg"},
{"content":{"body":"(We already have to specify things like Location redirect limits)","msgtype":"m.text","org.matrix.msc1767.text":"(We already have to specify things like Location redirect limits)"},"ts":1650987581566,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7HVjO6z9K5VZeuGgfsaAfibPyNbDfiVsvPmSZkSW_HQ"},
{"content":{"body":"The Link header is not part of HTTP proper though, Location is.","msgtype":"m.text","org.matrix.msc1767.text":"The Link header is not part of HTTP proper though, Location is."},"ts":1650987618246,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$IY66aFkk1v8_3pt-fjxVNG98rOu7Zz2SAamjckOhhMc"},
{"content":{"body":"I think that's just a SDO split and does not reflect any interesting architecture","msgtype":"m.text","org.matrix.msc1767.text":"I think that's just a SDO split and does not reflect any interesting architecture"},"ts":1650987632537,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$EG_AygTKkCUOysTtoYoUMbUwQ1vs8tlhjCXbCPBVmks"},
{"content":{"body":"It's the same SDO and that SDO has pulled in headers that are part of the core HTTP architecture into HTTP, so I'm not really sure you understand the setup...","msgtype":"m.text","org.matrix.msc1767.text":"It's the same SDO and that SDO has pulled in headers that are part of the core HTTP architecture into HTTP, so I'm not really sure you understand the setup..."},"ts":1650987676688,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$q1TjYDWuQniYMjR2orpVU8rfq0hnIqBsAlKrX7Y3mWI"},
{"content":{"body":"I think I understand the IETF's desired setup. I don't think it matches how the web actually works in browsers.","msgtype":"m.text","org.matrix.msc1767.text":"I think I understand the IETF's desired setup. I don't think it matches how the web actually works in browsers."},"ts":1650987705567,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$c79UEHWfxEVJ0KlzypyUaOutE7JoYMzcoIBhwZ_y0Bg"},
{"content":{"body":"Or how it is experienced by web developers","msgtype":"m.text","org.matrix.msc1767.text":"Or how it is experienced by web developers"},"ts":1650987716540,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$fAr_e5JgqPdjaqEDfOOVWvK47-2-aiCailDd136YcJ0"},
{"content":{"body":"I don't think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack.","msgtype":"m.text","org.matrix.msc1767.text":"I don't think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack."},"ts":1650987745751,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$3LojiMO_JylFjWIpYPUe5hjsqXlzqxrIPF0WcrN8uw4"},
{"content":{"body":"And I don't think they should have to","msgtype":"m.text","org.matrix.msc1767.text":"And I don't think they should have to"},"ts":1650987758532,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$XP2fDwPBnthdLlnkWgCCxF0RJ_eZH_OBaNV3H72hZyo"},
{"content":{"body":"And I don't think that reflects any implementation split (in web browsers at least)","msgtype":"m.text","org.matrix.msc1767.text":"And I don't think that reflects any implementation split (in web browsers at least)"},"ts":1650987773570,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$NdZ6TtT183HjOq1nHD4v-aWn3xVKBvJRsWYnx7O5jEw"},
{"content":{"body":"Web browsers actually have that kind of split quite a bit (and match Fetch far less than would be ideal)","msgtype":"m.text","org.matrix.msc1767.text":"Web browsers actually have that kind of split quite a bit (and match Fetch far less than would be ideal)"},"ts":1650987820457,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$-AjCo3IWxMaZbJjemw5FgvbLdajZB4C38DJH812okXQ"},
{"content":{"body":"That is not my understanding of the Chromium and Gecko codebases.","msgtype":"m.text","org.matrix.msc1767.text":"That is not my understanding of the Chromium and Gecko codebases."},"ts":1650987856467,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$csBQm8WvtdAseL5Q6x24vFWBtxZx0bPHGKg18h2NHqc"},
{"content":{"body":"I agree that web developers might perceive things differently","msgtype":"m.text","org.matrix.msc1767.text":"I agree that web developers might perceive things differently"},"ts":1650987871397,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$WvTT8ka-CeWmmgQNKsAUAAbzO2G6XLiNmB1Yb75eT6o"},
{"content":{"body":"The main split there is renderer vs. browser/network processes","msgtype":"m.text","org.matrix.msc1767.text":"The main split there is renderer vs. browser/network processes"},"ts":1650987875276,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qGNFdcjXIFn2Jw94RKKH9bbhBq-dAJnz88FCRhAmfJU"},
{"content":{"body":"And that largely has to do with whether stuff should or needs to be accessible to the main thread","msgtype":"m.text","org.matrix.msc1767.text":"And that largely has to do with whether stuff should or needs to be accessible to the main thread"},"ts":1650987895636,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dSfri4HilvUmUshw_wCsRHE7MbViE33uQJIcFZTAJXU"},
{"content":{"body":"E.g. ACAO (Fetch-level, not HTTP-level) stays in the network stack, and this helps against Spectre defenses.","msgtype":"m.text","org.matrix.msc1767.text":"E.g. ACAO (Fetch-level, not HTTP-level) stays in the network stack, and this helps against Spectre defenses."},"ts":1650987917613,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$TmW45KygTVwh1etb3RAMRukAbiFg_1UCuQ5k9sh2woo"},
{"content":{"body":"Both Chrome and Gecko wrap network code with a bunch of Fetch thingies","msgtype":"m.text","org.matrix.msc1767.text":"Both Chrome and Gecko wrap network code with a bunch of Fetch thingies"},"ts":1650987946219,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Z2YzI3GVC9ngQd2rHkt1STPcuuDUm6Q2IKfiMYBPoeU"},
{"content":{"body":"Yep, but their headers are implemented all over the place, e.g. a lot of stuff supposedly in Fetch is in the network code.","msgtype":"m.text","org.matrix.msc1767.text":"Yep, but their headers are implemented all over the place, e.g. a lot of stuff supposedly in Fetch is in the network code."},"ts":1650987967003,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$TNtoj4vpOM-ZmUmMFdPwq6CKCXmAsBUMqUudt-ktOBc"},
{"content":{"body":"The layering is not based on specs, it's based on security mostly.","msgtype":"m.text","org.matrix.msc1767.text":"The layering is not based on specs, it's based on security mostly."},"ts":1650987995967,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$HYjN2IsbA4Gh-Jj6e122nO9Z6ohpCCzxtjvOe3yRklk"},
{"content":{"body":"And some of it has shifted over time, that's fair, but I don't think browsers necessarily represent an ideal architecture either 🙂","msgtype":"m.text","org.matrix.msc1767.text":"And some of it has shifted over time, that's fair, but I don't think browsers necessarily represent an ideal architecture either 🙂"},"ts":1650987999524,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$699DAXHgrurSkA8h_vP_F-0u93SOEOmoIjTQkgp8ZOU"},
{"content":{"body":"For sure, I don't think there is a single ideal architecture, it depends on your goals. Security vs. aligning with web developer expectations vs. writing well-factored specs across SDO boundaries are all different goals.","msgtype":"m.text","org.matrix.msc1767.text":"For sure, I don't think there is a single ideal architecture, it depends on your goals. Security vs. aligning with web developer expectations vs. writing well-factored specs across SDO boundaries are all different goals."},"ts":1650988034535,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Ct04nDu3aMe9rhPh015Gk47ApDw613FPdzBofOPWOFU"},
{"content":{"body":"It'd be interesting to know if web developers expect `Link` headers to take effect when you use `fetch()`","format":"org.matrix.custom.html","formatted_body":"It'd be interesting to know if web developers expect <code>Link</code> headers to take effect when you use <code>fetch()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"It'd be interesting to know if web developers expect `Link` headers to take effect when you use `fetch()`","mimetype":"text/plain"},{"body":"It'd be interesting to know if web developers expect <code>Link</code> headers to take effect when you use <code>fetch()</code>","mimetype":"text/html"}]},"ts":1650988076460,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$pnZ09YIB7pcEknhZQEKEIXKyewo4HmYDJlSCWeFIb-c"},
{"content":{"body":"+1","msgtype":"m.text","org.matrix.msc1767.text":"+1"},"ts":1650988082148,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ForAEVR_tl3T8gz8CncqbNdlKNkuyEloZx9IQT2hNz8"},
{"content":{"body":"I suspect they wouldn't expect that when using it in Deno or Node.js and I kinda doubt they expect it from browsers, but who knows","msgtype":"m.text","org.matrix.msc1767.text":"I suspect they wouldn't expect that when using it in Deno or Node.js and I kinda doubt they expect it from browsers, but who knows"},"ts":1650988104838,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DSueQrJMivv_1fgMLU0TEwqWsqeM5oI5pZf6WN0AS5M"},
{"content":{"body":"+1","msgtype":"m.text","org.matrix.msc1767.text":"+1"},"ts":1650988119115,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$gy61ERwz4fO-_rNv-x3w8RKyI6Aw7A1HpXB-9PhRLIM"},
{"content":{"body":"Deno has some similar stuff for import(), but yeah I dunno about fetch().","msgtype":"m.text","org.matrix.msc1767.text":"Deno has some similar stuff for import(), but yeah I dunno about fetch()."},"ts":1650988127325,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2HZlPYZjqpDdR3pN9TuMCZQN9DovHycywxugzU8UPjQ"},
{"content":{"body":"(It'll auto-fetch types based on certain headers.)","msgtype":"m.text","org.matrix.msc1767.text":"(It'll auto-fetch types based on certain headers.)"},"ts":1650988143376,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$oNMbza8fqYLkjY0_SRCucEE-hs4Z5kEg1aCXSgxLNec"},
{"content":{"body":"What would `Link` headers in fetch even do?","format":"org.matrix.custom.html","formatted_body":"What would <code>Link</code> headers in fetch even do?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"What would `Link` headers in fetch even do?","mimetype":"text/plain"},{"body":"What would <code>Link</code> headers in fetch even do?","mimetype":"text/html"}]},"ts":1650988144848,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$TV368Cp-5nknljnF2TOsJ4j8Olbt1maCEPbECLuNWBI"},
{"content":{"body":"preload and preconnect","msgtype":"m.text","org.matrix.msc1767.text":"preload and preconnect"},"ts":1650988155936,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Q2Sz9pP9Gl7viSSouryZl0l8XL0q9Z-0ASDmn2brbbw"},
{"content":{"body":"ah","msgtype":"m.text","org.matrix.msc1767.text":"ah"},"ts":1650988170863,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$jvQ2snXOLogJGUv3_bcTxHUOVF6TwZ0w4mx9TjDT89g"},
{"content":{"body":"and modulepreload","msgtype":"m.text","org.matrix.msc1767.text":"and modulepreload"},"ts":1650988171189,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mppgVJa57LomMSbOej6hq4_L8tA89uFeFd0MeY6ES4M"},
{"content":{"body":"> <@domenicdenicola:matrix.org> (It'll auto-fetch types based on certain headers.)\n\nYup, but I think most folks understand that as happening in the module loader, not on the http layer (it is an additional parallel request unlike `Location` which redirects the current chain of fetches)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$oNMbza8fqYLkjY0_SRCucEE-hs4Z5kEg1aCXSgxLNec?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>(It&#39;ll auto-fetch types based on certain headers.)</blockquote></mx-reply>Yup, but I think most folks understand that as happening in the module loader, not on the http layer (it is an additional parallel request unlike <code>Location</code> which redirects the current chain of fetches)","m.relates_to":{"m.in_reply_to":{"event_id":"$oNMbza8fqYLkjY0_SRCucEE-hs4Z5kEg1aCXSgxLNec"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@domenicdenicola:matrix.org> (It'll auto-fetch types based on certain headers.)\n\nYup, but I think most folks understand that as happening in the module loader, not on the http layer (it is an additional parallel request unlike `Location` which redirects the current chain of fetches)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$oNMbza8fqYLkjY0_SRCucEE-hs4Z5kEg1aCXSgxLNec?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>(It&#39;ll auto-fetch types based on certain headers.)</blockquote></mx-reply>Yup, but I think most folks understand that as happening in the module loader, not on the http layer (it is an additional parallel request unlike <code>Location</code> which redirects the current chain of fetches)","mimetype":"text/html"}]},"ts":1650988227614,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$OwQNzAZMeqbUw1Rk4CYmSMjVFBZakeOdvhaKJnkedyM"},
{"content":{"body":"I think most devs expect `fetch` et al (low level network primitives) to be relatively stateless. Ie they don't go and trigger something to happen out of bounds that you can't really observe","format":"org.matrix.custom.html","formatted_body":"I think most devs expect <code>fetch</code> et al (low level network primitives) to be relatively stateless. Ie they don't go and trigger something to happen out of bounds that you can't really observe","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think most devs expect `fetch` et al (low level network primitives) to be relatively stateless. Ie they don't go and trigger something to happen out of bounds that you can't really observe","mimetype":"text/plain"},{"body":"I think most devs expect <code>fetch</code> et al (low level network primitives) to be relatively stateless. Ie they don't go and trigger something to happen out of bounds that you can't really observe","mimetype":"text/html"}]},"ts":1650988288412,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$DI1BzPVr-pwlgI_1GCHRA4tDOt34nLRN682COXukqZw"},
{"content":{"body":"(I also don't think that the layering in browsers is necessarily based on security. A lot of it is just \"happened to be easy to do this way\". There's some higher-level layering that's for security reasons, but a lot of the decisions within a single security \"zone\" are rather arbitrary. And sometimes confusing, with both the networking and application code parsing the same header.)","msgtype":"m.text","org.matrix.msc1767.text":"(I also don't think that the layering in browsers is necessarily based on security. A lot of it is just \"happened to be easy to do this way\". There's some higher-level layering that's for security reasons, but a lot of the decisions within a single security \"zone\" are rather arbitrary. And sometimes confusing, with both the networking and application code parsing the same header.)"},"ts":1650988400854,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ayWhxn0shoUn_rTcZl4SZmVxypA6QBl8O6v3nFIeW0Y"},
{"content":{"body":"I'll say that on Chromium parts the layering is extremely security-motivated; we have multiple year+ projects to move things between processes and parts of the codebase for security.","msgtype":"m.text","org.matrix.msc1767.text":"I'll say that on Chromium parts the layering is extremely security-motivated; we have multiple year+ projects to move things between processes and parts of the codebase for security."},"ts":1650988527201,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$PNnko9Gh0ivyikvpatRPf3XwuooIgbjD_tFPRqznTKk"},
{"content":{"body":"FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","format":"org.matrix.custom.html","formatted_body":"FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/plain"},{"body":"FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/html"}]},"ts":1650988529315,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Bb6LhBBLfW_6LLaV-lKx6kYWUO9zJ_daLGEBaaIuzv4"},
{"content":{"body":"Maybe that's just us though","msgtype":"m.text","org.matrix.msc1767.text":"Maybe that's just us though"},"ts":1650988547952,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$cNVLQyCuVWTDRkxieF3hOX9ucD_M9w_QLMcyMNUdKDk"},
{"content":{"body":" * FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","format":"org.matrix.custom.html","formatted_body":" * FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","m.new_content":{"body":"FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","format":"org.matrix.custom.html","formatted_body":"FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/plain"},{"body":"FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Bb6LhBBLfW_6LLaV-lKx6kYWUO9zJ_daLGEBaaIuzv4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * FWIW, i don't think `fetch` should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/plain"},{"body":" * FWIW, i don't think <code>fetch</code> should respect preload or preconnect. it makes for very confusing debugging if a server can trigger an additional background fetch by just setting a header on the response imo","mimetype":"text/html"}]},"ts":1650988547955,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$8p9f1_2z1lo70UAgLR1-tQDA1RcvpswU4jxqsskIW78"},
{"content":{"body":"Domenic: that's the higher-level layering","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: that's the higher-level layering","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: that's the higher-level layering","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: that's the higher-level layering","mimetype":"text/html"}]},"ts":1650988571882,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$QYignROt-fqKuQyxGUPcAUstQi5qUKD3sx8BgHBBmko"},
{"content":{"body":"I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)","msgtype":"m.text","org.matrix.msc1767.text":"I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)"},"ts":1650988629340,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2voRIo0l8SOS1u_fBWRxHvi0hKwuUvOB8UaNnpcTm1s"},
{"content":{"body":" * I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)","m.new_content":{"body":"I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)","msgtype":"m.text","org.matrix.msc1767.text":"I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)"},"m.relates_to":{"event_id":"$2voRIo0l8SOS1u_fBWRxHvi0hKwuUvOB8UaNnpcTm1s","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I'm not sure how many \"levels of layering\" you have in mind, but I think we don't conceptualize the Chromium codebase that way at least :)"},"ts":1650988652310,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$0pzhkVUl8kv6Hnhg5aKcoZ5dQVi3_6UW0j_bjsRCfG8"},
{"content":{"body":"Domenic: a great many","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: a great many","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: a great many","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: a great many","mimetype":"text/html"}]},"ts":1650988693120,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$9EzrVFEMigIUl7dA-QBZ32KzcrCZWo7CBiivZR8FzIA"},
{"content":{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","format":"org.matrix.custom.html","formatted_body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/plain"},{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$cNVLQyCuVWTDRkxieF3hOX9ucD_M9w_QLMcyMNUdKDk"}}},"ts":1650988903208,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$VnnlM1QqGkseV19_Mgui3WSljzbuecFtKZY704gYzO8"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Maybe that's just us though\n\n * No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cNVLQyCuVWTDRkxieF3hOX9ucD_M9w_QLMcyMNUdKDk?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Maybe that's just us though</blockquote></mx-reply> * No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","m.new_content":{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","format":"org.matrix.custom.html","formatted_body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/plain"},{"body":"No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$VnnlM1QqGkseV19_Mgui3WSljzbuecFtKZY704gYzO8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@domenicdenicola:matrix.org> Maybe that's just us though\n\n * No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cNVLQyCuVWTDRkxieF3hOX9ucD_M9w_QLMcyMNUdKDk?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Maybe that's just us though</blockquote></mx-reply> * No, we also maintain this split between privileged and unprivileged sides in Deno. But it's a really tricky thing for this networking stuff, because there are so many interconnected pieces that all operate on slightly different layers of the system. Any time any of these layers can have side effects, it makes for much much more complex implementation because then we may need to jump from deep inside of trusted code, back into untrusted code.","mimetype":"text/html"}]},"ts":1650988918525,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$T8HWhQDjdYNa-0D9LlSJggEgGK4iaPbRESProUdWos4"},
{"content":{"body":"Luca Casonato: for the multipart issue, Domenic was playing with `multipart/x-mixed-replace`; from your response it seems you are not?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: for the multipart issue, <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> was playing with <code>multipart/x-mixed-replace</code>; from your response it seems you are not?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Luca Casonato: for the multipart issue, Domenic was playing with `multipart/x-mixed-replace`; from your response it seems you are not?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: for the multipart issue, <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> was playing with <code>multipart/x-mixed-replace</code>; from your response it seems you are not?","mimetype":"text/html"}]},"ts":1650991791001,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$dl-e8PX7yjn-hpxVo70b00wS8gv6uiXdXh4Lmk_9Hj8"},
{"content":{"body":"(Context: https://github.com/whatwg/fetch/issues/1021.)","msgtype":"m.text","org.matrix.msc1767.text":"(Context: https://github.com/whatwg/fetch/issues/1021.)"},"ts":1650991810218,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$YAsXBcBpQQYKogyvPj0HmNBIT8DoS5AKvrAFt0aZ4OI"},
{"content":{"body":"Yeah, multipart/form-data is extremely different from multipart/x-mixed-replace","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, multipart/form-data is extremely different from multipart/x-mixed-replace"},"ts":1650991904074,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$N_Tp9_iAVcIOSTEdNqlx31TIEIrYkKpmXASui6QscfM"},
{"content":{"body":"Also I don't see why we would close the issue? We didn't satisfy the feature request of adding a native TransformStream for multipart responses...","msgtype":"m.text","org.matrix.msc1767.text":"Also I don't see why we would close the issue? We didn't satisfy the feature request of adding a native TransformStream for multipart responses..."},"ts":1650991969542,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2EAf4fI7GSbrfQuaZv1Te2GQ9AIHS5GPsQmrq2nkFJM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> I don't think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack.\n\nAs a web dev, I had no idea that was even possibly a thing that could be true. All the headers are partitioned into \"something something HTTP\" in my head.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$3LojiMO_JylFjWIpYPUe5hjsqXlzqxrIPF0WcrN8uw4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>I don&#39;t think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack.</blockquote></mx-reply>As a web dev, I had no idea that was even possibly a thing that could be true. All the headers are partitioned into &quot;something something HTTP&quot; in my head.","m.relates_to":{"m.in_reply_to":{"event_id":"$3LojiMO_JylFjWIpYPUe5hjsqXlzqxrIPF0WcrN8uw4"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@domenicdenicola:matrix.org> I don't think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack.\n\nAs a web dev, I had no idea that was even possibly a thing that could be true. All the headers are partitioned into \"something something HTTP\" in my head.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$3LojiMO_JylFjWIpYPUe5hjsqXlzqxrIPF0WcrN8uw4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>I don&#39;t think any web developer thinks of Link and Location and X-Content-Type-Options and Access-Control-Allow-Origin as on different layers of the stack.</blockquote></mx-reply>As a web dev, I had no idea that was even possibly a thing that could be true. All the headers are partitioned into &quot;something something HTTP&quot; in my head.","mimetype":"text/html"}]},"ts":1650993570633,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$uf_LDcBqzwrnjWSrutD2YRIAmSNlbWzoBjg_Oi4EmcY"},
{"content":{"body":"hello","msgtype":"m.text","org.matrix.msc1767.text":"hello"},"ts":1650993648694,"senderName":"legostarwars_saga","senderId":"@legostarwars_saga:matrix.org","id":"$a13RATyL6Li_QBMG_ibPh_5IIlPU5YRQTBdPJMwygd8"},
{"content":{"body":"Domenic annevk my bad. I only skimmed over the issue. Disregard my comment. ","format":"org.matrix.custom.html","formatted_body":"Domenic annevk my bad. I only skimmed over the issue. Disregard my comment.","msgtype":"m.text"},"ts":1650995537029,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$ptoOK71HfK458r_a2yEC0Xbeb6nKxg9NIotq-jeoLa8"}
]