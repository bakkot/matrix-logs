[
{"content":{"body":"annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method with another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method with another API decorated by CEReations. Thanks.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1704242626900,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$VgprGaK8brfjEOgH3zKS_SL2y51cJ4_HKIWhDCBo1UQ"},
{"content":{"body":" * annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which calls another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which calls another API decorated by CEReations. Thanks.","m.mentions":{},"m.new_content":{"body":"annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which calls another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which calls another API decorated by CEReations. Thanks.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VgprGaK8brfjEOgH3zKS_SL2y51cJ4_HKIWhDCBo1UQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1704242848939,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$ERlGx1B8nSzKPVnMK9VVGYqE3RLqJLJ9jdh0TMHPlOQ"},
{"content":{"body":" * annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called another API decorated by CEReations. Thanks.","m.mentions":{},"m.new_content":{"body":"annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called another API decorated by CEReations. Thanks.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VgprGaK8brfjEOgH3zKS_SL2y51cJ4_HKIWhDCBo1UQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1704262727431,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$mR6Ax7hLNeRsAYUCHp4GD8ZeEyxi5Jh-sQ5Syn59ISk"},
{"content":{"body":" * annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called an another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called an another API decorated by CEReations. Thanks.","m.mentions":{},"m.new_content":{"body":"annevk: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called an another API decorated by CEReations. Thanks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: well, you confirm my suggestions about API that decorated by CEReactions that can create an element and invoke constructor method in the code of which is called an another API decorated by CEReations. Thanks.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VgprGaK8brfjEOgH3zKS_SL2y51cJ4_HKIWhDCBo1UQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1704262865573,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$n1lYhKXhpyKFD4KrCBenuIVnBKZ1mvEdEnSRgcWREh4"},
{"content":{"body":"Jeffrey Yasskin: I don't think WHATWG specs mention it. IDL doesn't either. It is typically mentioned in domintro boxes though. But we could change all of that I suppose.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jyasskin:matrix.org\">Jeffrey Yasskin</a>: I don't think WHATWG specs mention it. IDL doesn't either. It is typically mentioned in domintro boxes though. But we could change all of that I suppose.","m.mentions":{"user_ids":["@jyasskin:matrix.org"]},"msgtype":"m.text"},"ts":1704269920742,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$-VqE21PcmbusbTg6r9w2Mf-MarbmI_x9019nSC5rqyg"},
{"content":{"body":"> <@noamr:matrix.org> I want to propose allowing `blocking=render` on inline scripts, would that be a \"new feature\" or a \"new issue\"?\n\nhttps://github.com/whatwg/html/issues/10034","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ghoUpoWFAtoqpJJWKZ4kOm4LYJmrj3gXoKItrycVRDU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br>I want to propose allowing <code>blocking=render</code> on inline scripts, would that be a \"new feature\" or a \"new issue\"?</blockquote></mx-reply>https://github.com/whatwg/html/issues/10034","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$ghoUpoWFAtoqpJJWKZ4kOm4LYJmrj3gXoKItrycVRDU"}},"msgtype":"m.text"},"ts":1704275580559,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$RPOJ6RPdrLLg26CynvNMPW8Wu_xIY96BsqkijcAl-pk"},
{"content":{"body":"Is there something in HTML that would trim whitespace from nonce attributes? https://html.spec.whatwg.org/multipage/urls-and-fetching.html#nonce-does-not-update-dom doesn't at least, but I am not sure how attributes from the parser are handled.","m.mentions":{},"msgtype":"m.text"},"ts":1704289727001,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$lvxKPfuWQpFxCRQ9-HqhH6tZ3M_USeNkTvVEw0YdTHk"},
{"content":{"body":"evilpie: typically preserved","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: typically preserved","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1704297151439,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$HrLk0IOBxzhRwn_RiGY8nG1hkKLwj4SlZbnZmknrF9E"},
{"content":{"body":"> <@annevk:matrix.org> Jeffrey Yasskin: I don't think WHATWG specs mention it. IDL doesn't either. It is typically mentioned in domintro boxes though. But we could change all of that I suppose.\n\nI don't want to change what experienced spec authors are doing, just try to document it better, if there is actually a pattern to document. My impression was that WHATWG specs usually return \"failure\" from algorithm steps and then only convert that to an exception when implementing a WebIDL operation. For example, https://url.spec.whatwg.org/#dom-url-url converts failure to an exception in the URL constructor, and https://fetch.spec.whatwg.org/#dom-global-fetch does the same conversion from network error to rejection. Some of the helper algorithms for WebIDL operations do throw without mentioning it in their interfaces, but the deeper layers seem to prefer returns. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$-VqE21PcmbusbTg6r9w2Mf-MarbmI_x9019nSC5rqyg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@jyasskin:matrix.org\">Jeffrey Yasskin</a>: I don't think WHATWG specs mention it. IDL doesn't either. It is typically mentioned in domintro boxes though. But we could change all of that I suppose.</blockquote></mx-reply>I don't want to change what experienced spec authors are doing, just try to document it better, if there is actually a pattern to document. My impression was that WHATWG specs usually return \"failure\" from algorithm steps and then only convert that to an exception when implementing a WebIDL operation. For example, https://url.spec.whatwg.org/#dom-url-url converts failure to an exception in the URL constructor, and https://fetch.spec.whatwg.org/#dom-global-fetch does the same conversion from network error to rejection. Some of the helper algorithms for WebIDL operations do throw without mentioning it in their interfaces, but the deeper layers seem to prefer returns.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$-VqE21PcmbusbTg6r9w2Mf-MarbmI_x9019nSC5rqyg"}},"msgtype":"m.text"},"ts":1704304820884,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$iPjinT0pCDAiURYRE2P2SqiOEMAbWKz4dLSVczk3F_k"},
{"content":{"body":"> <@jyasskin:matrix.org> I don't want to change what experienced spec authors are doing, just try to document it better, if there is actually a pattern to document. My impression was that WHATWG specs usually return \"failure\" from algorithm steps and then only convert that to an exception when implementing a WebIDL operation. For example, https://url.spec.whatwg.org/#dom-url-url converts failure to an exception in the URL constructor, and https://fetch.spec.whatwg.org/#dom-global-fetch does the same conversion from network error to rejection. Some of the helper algorithms for WebIDL operations do throw without mentioning it in their interfaces, but the deeper layers seem to prefer returns.\n\nThis usually makes sense to me because \"throwing\" means that there's some catching semantic, and that's not guaranteed when you're in an internal operation (e.g. it could be an `in parallel` operation)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$iPjinT0pCDAiURYRE2P2SqiOEMAbWKz4dLSVczk3F_k?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jyasskin:matrix.org\">@jyasskin:matrix.org</a><br>I don't want to change what experienced spec authors are doing, just try to document it better, if there is actually a pattern to document. My impression was that WHATWG specs usually return \"failure\" from algorithm steps and then only convert that to an exception when implementing a WebIDL operation. For example, https://url.spec.whatwg.org/#dom-url-url converts failure to an exception in the URL constructor, and https://fetch.spec.whatwg.org/#dom-global-fetch does the same conversion from network error to rejection. Some of the helper algorithms for WebIDL operations do throw without mentioning it in their interfaces, but the deeper layers seem to prefer returns.</blockquote></mx-reply>This usually makes sense to me because \"throwing\" means that there's some catching semantic, and that's not guaranteed when you're in an internal operation (e.g. it could be an <code>in parallel</code> operation)","m.mentions":{"user_ids":["@jyasskin:matrix.org","@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$iPjinT0pCDAiURYRE2P2SqiOEMAbWKz4dLSVczk3F_k"}},"msgtype":"m.text"},"ts":1704311075109,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$u-_0urfXaW05p0Cs8w8f-JKnDfrv2bQbhWPjulVpyb0"},
{"content":{"body":"does anyone know why getRandomValues has a size limit? I poked around the git history and mailing lists but couldn't find it offhand","m.mentions":{},"msgtype":"m.text"},"ts":1704311654704,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WHTmxAyQfqS9gUQH3DER7WAcPaH_JlJ1gZUJxuZBfow"},
{"content":{"body":"Jeffrey Yasskin: I think that's right. Just like you would (might?) return std::nullopt in C++ over an exception.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jyasskin:matrix.org\">Jeffrey Yasskin</a>: I think that's right. Just like you would (might?) return std::nullopt in C++ over an exception.","m.mentions":{"user_ids":["@jyasskin:matrix.org"]},"msgtype":"m.text"},"ts":1704318803892,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$owxmcT-9qesVT3xQFgOyqv7ixiLVz3-KD2HLR4plsYg"},
{"content":{"body":"bakkot: I found it predates git but not super motivated to dig into the CVS history","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: I found it predates git but not super motivated to dig into the CVS history","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1704319153895,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$UV0upQG9oqAVPusR93gY6LwhgOcLq660JrbG8dR4jcQ"},
{"content":{"body":"bakkot: emailing Ryan Sleevi or dm'ing him somewhere might work","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: emailing Ryan Sleevi or dm'ing him somewhere might work","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"msgtype":"m.text"},"ts":1704319175206,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$w1VYc-SAdezdRTm9ZonReDwJ0w7Kx_kQX9Us8_iyiFI"},
{"content":{"body":"> <@evilpie:mozilla.org> Is there something in HTML that would trim whitespace from nonce attributes? https://html.spec.whatwg.org/multipage/urls-and-fetching.html#nonce-does-not-update-dom doesn't at least, but I am not sure how attributes from the parser are handled.\n\n\"becomes browsing-context connected\" also applies for parser-inserted elements. The parser doesn't trim whitespace for nonce attributes, nor anything else in the spec AFAICT.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$lvxKPfuWQpFxCRQ9-HqhH6tZ3M_USeNkTvVEw0YdTHk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@evilpie:mozilla.org\">@evilpie:mozilla.org</a><br>Is there something in HTML that would trim whitespace from nonce attributes? https://html.spec.whatwg.org/multipage/urls-and-fetching.html#nonce-does-not-update-dom doesn&#39;t at least, but I am not sure how attributes from the parser are handled.</blockquote></mx-reply>\"becomes browsing-context connected\" also applies for parser-inserted elements. The parser doesn't trim whitespace for nonce attributes, nor anything else in the spec AFAICT.","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$lvxKPfuWQpFxCRQ9-HqhH6tZ3M_USeNkTvVEw0YdTHk"}},"msgtype":"m.text"},"ts":1704323354583,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$fWHtQqm-e-XeFAX-Q0MRjVRtq7i43AvoGA5J8z8zQfw"},
{"content":{"body":"annevk: if you know where the CVS history is I am happy to dig into it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: if you know where the CVS history is I am happy to dig into it","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1704324718616,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p7sEUKJcXOZhHExvkeyLyuDc0iobHKzyxSGtoDd8Q7o"}
]