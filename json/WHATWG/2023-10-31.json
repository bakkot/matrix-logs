[
{"content":{"body":"> <@zcorpan:mozilla.org> File an issue. (Looks like you did, https://github.com/whatwg/html/issues/9894 ) But also see https://github.com/whatwg/html/issues/9158\n\nThanks a lot zcorpan ! ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ax9CJhOJVMfXtatKcWsf4LVwh9JUcRVtYVzZF7p3ptw?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br>File an issue. (Looks like you did, https://github.com/whatwg/html/issues/9894 ) But also see https://github.com/whatwg/html/issues/9158</blockquote></mx-reply>Thanks a lot <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a> !","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ax9CJhOJVMfXtatKcWsf4LVwh9JUcRVtYVzZF7p3ptw"}},"msgtype":"m.text"},"ts":1698735545439,"senderName":"draginfable","senderId":"@draginfable:matrix.org","id":"$7RTDYW2r42qdMFO-tH19rxSyFYzuhrV_sAvOrqE9rs4"},
{"content":{"body":"> <@tabatkins:matrix.org> You mean ones which will never match without JS doing something? There is no easy way, no. (And :fullscreen can match without JS; you can click the fullscreen button on a <video>, for instance.)\n\nThe video interface currently has native support for triggering fullscreen mode, but other elements require JavaScript coding to achieve the same effect. I have observed that the :modal pseudo class does not work without JavaScript, which raises the question of which other pseudo classes also require JavaScript to function properly.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$M7c2T5b_ZwQVYw8yizPNFqL_v-lLCDT8okUtSL6Ih40?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>You mean ones which will never match without JS doing something? There is no easy way, no. (And :fullscreen can match without JS; you can click the fullscreen button on a &lt;video&gt;, for instance.)</blockquote></mx-reply>The video interface currently has native support for triggering fullscreen mode, but other elements require JavaScript coding to achieve the same effect. I have observed that the :modal pseudo class does not work without JavaScript, which raises the question of which other pseudo classes also require JavaScript to function properly.","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$M7c2T5b_ZwQVYw8yizPNFqL_v-lLCDT8okUtSL6Ih40"}},"msgtype":"m.text"},"ts":1698736985780,"senderName":"chargeitall","senderId":"@chargeitall:matrix.org","id":"$neZNiZFyG8N1X2VMc1IB3grvBC5QKiams4BmLBIdDus"},
{"content":{"body":"annevk: I wonder if you have an opinion on whether an `InvokeEvent` should be composed or not? smaug raised that they perhaps should be (https://phabricator.services.mozilla.com/D190449#inline-1066299), which sounds good to me. But then in patching Chrome's impl (https://chromium-review.googlesource.com/c/chromium/src/+/4987342) jarhar pointed out https://github.com/whatwg/html/issues/9381#issuecomment-1735259937 where `toggle` events aren't composed because they leak the shadow tree.\n\nI have no strong opinions either way on this, other than to get it resolved ;)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I wonder if you have an opinion on whether an <code>InvokeEvent</code> should be composed or not? <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> raised that they perhaps should be (https://phabricator.services.mozilla.com/D190449#inline-1066299), which sounds good to me. But then in patching Chrome's impl (https://chromium-review.googlesource.com/c/chromium/src/+/4987342) <a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a> pointed out https://github.com/whatwg/html/issues/9381#issuecomment-1735259937 where <code>toggle</code> events aren't composed because they leak the shadow tree.</p>\n<p>I have no strong opinions either way on this, other than to get it resolved ;)</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org","@smaug:mozilla.org","@jarhar:matrix.org"]},"msgtype":"m.text"},"ts":1698749719476,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$_lNM7kzsK1cY9w4eLFNM0dlDxN_IU2xqlvuXR3UaWh0"},
{"content":{"body":"Based on your commentary in the above issue, I'd say that given invoke events _would_ occur on a shadow host, then it is reasonable/desirable for them to be composed.","format":"org.matrix.custom.html","formatted_body":"Based on your commentary in the above issue, I'd say that given invoke events <em>would</em> occur on a shadow host, then it is reasonable/desirable for them to be composed.","m.mentions":{},"msgtype":"m.text"},"ts":1698749799236,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$THJbWNb6NtSMm_RGXl2UZp553VrLaLK1AeEiBd-QVTI"},
{"content":{"body":" * Based on your commentary in the above issue, I'd say that given invoke events _could_ occur on a shadow host, then it is reasonable/desirable for them to be composed.","format":"org.matrix.custom.html","formatted_body":" * Based on your commentary in the above issue, I'd say that given invoke events <em>could</em> occur on a shadow host, then it is reasonable/desirable for them to be composed.","m.mentions":{},"m.new_content":{"body":"Based on your commentary in the above issue, I'd say that given invoke events _could_ occur on a shadow host, then it is reasonable/desirable for them to be composed.","format":"org.matrix.custom.html","formatted_body":"Based on your commentary in the above issue, I'd say that given invoke events <em>could</em> occur on a shadow host, then it is reasonable/desirable for them to be composed.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$THJbWNb6NtSMm_RGXl2UZp553VrLaLK1AeEiBd-QVTI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1698749810793,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$ubHM7NivLdjrd4QDudpzkWQTsBYP-B1vH5fgRhgEktU"},
{"content":{"body":"(click isn't user input)","m.mentions":{},"msgtype":"m.text"},"ts":1698750008701,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$H8CGu5mMK1Y_z-0s6y-CFj3R5Nik5ijzwz_ycWtPeyo"},
{"content":{"body":"because domactivate is? Or because events aren't input?","m.mentions":{},"msgtype":"m.text"},"ts":1698750161326,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$DSoergXQVN29WlgC9fAC-3PQ3zt8YpO2HnJa3PX0Kd4"},
{"content":{"body":"Click is dispatched as a reaction to *down/*up events, or keypress or what not, or one can trigger it using click() etc. Click is quite special.","m.mentions":{},"msgtype":"m.text"},"ts":1698750364228,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$2BF8xOB4rYAWKoHbIs78WY9s3S9tWQOFZd6RmUvXxZI"},
{"content":{"body":"right yes, makes sense, thanks","m.mentions":{},"msgtype":"m.text"},"ts":1698750379434,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$ORo-GgKpF8QmqUdnhhkJmu1EbwGQJHAWD76KLatP-G8"},
{"content":{"body":"And in some sense invoke is similar-ish activation event","m.mentions":{},"msgtype":"m.text"},"ts":1698750405396,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$NEUcwKo0sQmq2hU6qtpiLuyJgkNre6FUlhzqnRrrmwU"},
{"content":{"body":"My main question is that if invoke isn't composed, doesn't that lead the user of the component to then usually rely on click?","m.mentions":{},"msgtype":"m.text"},"ts":1698750460675,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$2mSXDZWJ90kGiMHbOglpvlGhz6ISPTZDAfHp1cwTypo"},
{"content":{"body":"I don't feel very strongly about this. But if it is not composed, then invokeEvent.invoker doesn't need to be retargeted since, nothing should be leaked.","m.mentions":{},"msgtype":"m.text"},"ts":1698750529800,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$_K7R3RzWziri0SB1n69D3p4onnU2zsUEMy1J2kWf9Xw"},
{"content":{"body":" * I don't feel very strongly about this. But if it is not composed, then invokeEvent.invoker doesn't need to be retargeted, since nothing should be leaked.","m.mentions":{},"m.new_content":{"body":"I don't feel very strongly about this. But if it is not composed, then invokeEvent.invoker doesn't need to be retargeted, since nothing should be leaked.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$_K7R3RzWziri0SB1n69D3p4onnU2zsUEMy1J2kWf9Xw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1698750543511,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$mfj694tiCIUxJVI1J2w4It9RzEX2V15RVPLYUbDT_uQ"},
{"content":{"body":"For manual dispatch it will leak but I suppose that's considered okay?","m.mentions":{},"msgtype":"m.text"},"ts":1698750609806,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$ugebU-_Vo5SsZqTCUVO7TUlJsL6JB_jbhopdBUMQnqA"},
{"content":{"body":"well, sure, if you explicitly dispatch composed event. It is like dispatching CustomEvent with detail pointing to something inside the shadow dom.","m.mentions":{},"msgtype":"m.text"},"ts":1698750707424,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$kB3igE4FVO9xMgpdtT_4S6BB25sSkPwapPySFk6Uqgg"},
{"content":{"body":"Right. FWIW I like the idea of making it composed, I think it makes sense especially if we consider the idea of having built ins dispatch invoke events to announce their own internal behaviours (such as a summary opening the details) - it seems to explain those better.","m.mentions":{},"msgtype":"m.text"},"ts":1698750803579,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$f1-Nxol6_CUUvAkAPLAZlYHhgYXgGRKVdx4dNLIo1-4"},
{"content":{"body":"Relatedly, are there use cases where one should be able to target host as invokee, and then somehow we'd retarget that invoking operation to something inside the shadow dom? I guess it would mean the component announcing their behaviors. I could imagine <video> inside shadow dom, and then action being \"play\" or \"pause\" etc","m.mentions":{},"msgtype":"m.text"},"ts":1698750959978,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$OxfTaNNGHoJOCyT1hSQk934ecWPmVQT-XowJb18D_Hw"},
{"content":{"body":"I would imagine in those use cases you would use scripting to dispatch correctly to elements in the shadowdom","m.mentions":{},"msgtype":"m.text"},"ts":1698751077778,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$N5TmIR_PJW61RFuZpTajfqD8IQ6MV0nz7uyjSnOuJRs"},
{"content":{"body":"> <@chargeitall:matrix.org> The video interface currently has native support for triggering fullscreen mode, but other elements require JavaScript coding to achieve the same effect. I have observed that the :modal pseudo class does not work without JavaScript, which raises the question of which other pseudo classes also require JavaScript to function properly.\n\n:modal also is getting declarative invocation behavior, via the dialog/popover stuff 😃","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$neZNiZFyG8N1X2VMc1IB3grvBC5QKiams4BmLBIdDus?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@chargeitall:matrix.org\">@chargeitall:matrix.org</a><br />The video interface currently has native support for triggering fullscreen mode, but other elements require JavaScript coding to achieve the same effect. I have observed that the :modal pseudo class does not work without JavaScript, which raises the question of which other pseudo classes also require JavaScript to function properly.</blockquote></mx-reply>:modal also is getting declarative invocation behavior, via the dialog/popover stuff 😃","m.relates_to":{"m.in_reply_to":{"event_id":"$neZNiZFyG8N1X2VMc1IB3grvBC5QKiams4BmLBIdDus"}},"msgtype":"m.text"},"ts":1698762243387,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$A-6sTFFCMNiXy0nCsBrepZuLhdc2M6YFApQyM4rDGsc"},
{"content":{"body":"So like I said, there is no list, and the set will change over time.","msgtype":"m.text"},"ts":1698762267197,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Z03YaCqaG0R5pD-7Do6-BgGt2KG7doBYoDdX1ivIwvk"},
{"content":{"body":"> <@tabatkins:matrix.org> :modal also is getting declarative invocation behavior, via the dialog/popover stuff 😃\n\nAs is ':fullscreen' by the same proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$A-6sTFFCMNiXy0nCsBrepZuLhdc2M6YFApQyM4rDGsc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br />:modal also is getting declarative invocation behavior, via the dialog/popover stuff 😃</blockquote></mx-reply>As is ':fullscreen' by the same proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$A-6sTFFCMNiXy0nCsBrepZuLhdc2M6YFApQyM4rDGsc"}},"msgtype":"m.text"},"ts":1698775579609,"senderName":"Luke Warlow","senderId":"@luke_warlow:matrix.org","id":"$U93LBj7EyCxlOIa8pSzSBG1uiQ_G7DTspY6VEdDH6aA"},
{"content":{"body":"keithamus: where is the most up-to-date custom state pseudo class spec?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: where is the most up-to-date custom state pseudo class spec?","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1698790575571,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$4MGa_SPSpbrn56NYGVUZDwjvA60Hw7VoM8UNTYSZKCA"},
{"content":{"body":"https://github.com/whatwg/html/pull/8467","msgtype":"m.text"},"ts":1698790626567,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$RrASH28I_UPpwFbqoxBp75c27immU6Id8oJHfh3LJ0I"},
{"content":{"body":"nicolo-ribaudo: do you know why WPT still has a lot of tests assuming support for import assertions rather than import attributes? That seems incorrect.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: do you know why WPT still has a lot of tests assuming support for import assertions rather than import attributes? That seems incorrect.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1698790641258,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$4Dkc52i87atDAaxaOLluSQQcEJzWUX74qFe2oA6dqVE"},
{"content":{"body":"I filed https://github.com/web-platform-tests/wpt/issues/42875 to discuss further.","m.mentions":{},"msgtype":"m.text"},"ts":1698791206520,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IkCZqreOx6UMtTfSl5ahkDoBVo7OLOnY9z5o8etLjWM"},
{"content":{"body":"keithamus: thanks. I just couldn't (and still can't 🙂 ) understand what values can be passed in.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: thanks. I just couldn't (and still can't 🙂 ) understand what values can be passed in.","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1698791639029,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$GdlKLcyeiojqlIxs1K4CmisIGnZbwL9aGRnEh7pMB7Q"},
{"content":{"body":"I'm probably missing something obvious","m.mentions":{},"msgtype":"m.text"},"ts":1698791653156,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$LhA0aW4Yx-FNYsjZgAq8iZjvXiCtV8pgDFK3cYZ4HM4"},
{"content":{"body":"An ident production ","format":"org.matrix.custom.html","formatted_body":"An ident production","msgtype":"m.text"},"ts":1698791653558,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$941JNtEwel1KQCRfeMPbvs39-pA7blmXxUIRy8P-mSQ"},
{"content":{"body":"Or a dashed ident ","format":"org.matrix.custom.html","formatted_body":"Or a dashed ident","msgtype":"m.text"},"ts":1698791660341,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$94ja0kIJpxOTbE4AcrkrKtGasu0wpXPB_0HH6-h7xAA"},
{"content":{"body":"but dashed idents can't be for example --default","m.mentions":{},"msgtype":"m.text"},"ts":1698791715867,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$aef-JmSctd-AMAKtkx6KjQocxcHsxYooffMfN8Unzfs"},
{"content":{"body":"And I couldn't find in the pr any validation ","m.mentions":{},"msgtype":"m.text"},"ts":1698791751792,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$pY91j9vDDWxrvUlTyiayGc5L4GiLwybIZH8AqAGf04E"},
{"content":{"body":"the old spec proposal does have that","m.mentions":{},"msgtype":"m.text"},"ts":1698791759724,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Ht2JuirchfVoK3CVMNrs5wzXBPGv5Aw40K8m50if-Rc"},
{"content":{"body":"I agree ","format":"org.matrix.custom.html","formatted_body":"I agree","msgtype":"m.text"},"ts":1698791764126,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$ay6-ilCcSsbhBnIsextbq8Gv7E0KoPrQzMG3JH1Nhf4"},
{"content":{"body":"There’s also https://github.com/w3c/csswg-drafts/pull/8213 which says the production is the `:state(` function followed by a `<string>` followed by `)` but I think that’s a mistake because every example I see discussed does not seem to use quotes and I don’t know why you would; it seems like it should be custom-ident or dashed-ident but I think that should be validated against in the html customstateset class. ","format":"org.matrix.custom.html","formatted_body":"There’s also https://github.com/w3c/csswg-drafts/pull/8213 which says the production is the <code>:state(</code> function followed by a <code>&lt;string&gt;</code> followed by <code>)</code> but I think that’s a mistake because every example I see discussed does not seem to use quotes and I don’t know why you would; it seems like it should be custom-ident or dashed-ident but I think that should be validated against in the html customstateset class.","msgtype":"m.text"},"ts":1698792251614,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$tNK4qorVlwTa6yHrIfZwcpbU-a83V7ZDFbcBWP29YV0"}
]