[
{"content":{"body":"EveryOS: thanks","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@everyos:matrix.org\">EveryOS</a>: thanks","msgtype":"m.text"},"ts":1641255681605,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$btazhsp53syLYM7FXW7ogmOgsvlSguwlj2tjVQLh174"},
{"content":{"body":"You're welcome","msgtype":"m.text"},"ts":1641255701078,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$Nvl9D8APNE4F_d0Hr7dd7mAcoo4XUI4UoqG1tbpbGVo"},
{"content":{"body":"looking now at https://github.com/mdn/content/issues/11697 I find that the CSP spec no browsers seem to conform to the CSP spec requirement to block `element.style.cssText = 'display:none'` in the same way they block `element.setAttribute('style', 'display:none;')`","format":"org.matrix.custom.html","formatted_body":"looking now at https://github.com/mdn/content/issues/11697 I find that the CSP spec no browsers seem to conform to the CSP spec requirement to block <code>element.style.cssText = 'display:none'</code> in the same way they block <code>element.setAttribute('style', 'display:none;')</code>","msgtype":"m.text"},"ts":1641255881236,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$oVSsdE20iuSYCp16yh7YdSCNgq8o2D5CUzzoxe8cEt0"},
{"content":{"body":"and looking at WPT, I find we have no tests for it https://wpt.fyi/results/content-security-policy/style-src?label=experimental&label=master&aligned","msgtype":"m.text"},"ts":1641255911672,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$RN4LYorJTy1AVyIPmBQHStKM0jA703T1RP-d_2prB_E"},
{"content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:\n> This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":"<p>step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:</p>\n<blockquote>\n<p>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1641256027381,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI"},
{"content":{"body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, <i>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</i>","m.new_content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, <i>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</i>","msgtype":"m.text"},"m.relates_to":{"event_id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256058826,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$RXsnlElFQi4yT24kc7H97gKn_t5bwBAa3NMSJcfr1Jo"},
{"content":{"body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, *This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods*","m.new_content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, *This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods*","msgtype":"m.text"},"m.relates_to":{"event_id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256095608,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$M1tquKkGrSeJzLz1W3jjNDIDWfGFTYjxvvz_LtCardA"},
{"content":{"body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods","m.new_content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions, This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods","msgtype":"m.text"},"m.relates_to":{"event_id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256107456,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$QW_bl-1gUvqjkVtKwlJIP80ngJ0JqH2WQGmG8Y9NLho"},
{"content":{"body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions\n> This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":" * <p>step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions</p>\n<blockquote>\n<p>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</p>\n</blockquote>\n","m.new_content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions\n> This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":"<p>step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions</p>\n<blockquote>\n<p>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</p>\n</blockquote>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256117917,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$D6Pvf9zXvCCTV9OKY5JMpulMeOAT5qcJ65LKd4RNK3k"},
{"content":{"body":" * step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:\n> This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":" * <p>step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:</p>\n<blockquote>\n<p>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</p>\n</blockquote>\n","m.new_content":{"body":"step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:\n> This would include, for example, all invocations of CSSOM’s various `cssText` setters and `insertRule` methods","format":"org.matrix.custom.html","formatted_body":"<p>step 4 at https://w3c.github.io/webappsec-csp/#directive-style-src is where the relevant requirement is defined, and it even explicitly mentions:</p>\n<blockquote>\n<p>This would include, for example, all invocations of CSSOM’s various <code>cssText</code> setters and <code>insertRule</code> methods</p>\n</blockquote>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$5npyfaLoUTyyx3CObqAdKmxIDFEYKGfqg4BCh76hqhI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256128025,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$juhP9b8j69gzfvWzezD1P2E-fPlBzBBfBb05poAnhLw"},
{"content":{"body":" * looking now at https://github.com/mdn/content/issues/11697 I find that no browsers seem to conform to the CSP spec requirement to block `element.style.cssText = 'display:none'` in the same way they block `element.setAttribute('style', 'display:none;')`","format":"org.matrix.custom.html","formatted_body":" * looking now at https://github.com/mdn/content/issues/11697 I find that no browsers seem to conform to the CSP spec requirement to block <code>element.style.cssText = 'display:none'</code> in the same way they block <code>element.setAttribute('style', 'display:none;')</code>","m.new_content":{"body":"looking now at https://github.com/mdn/content/issues/11697 I find that no browsers seem to conform to the CSP spec requirement to block `element.style.cssText = 'display:none'` in the same way they block `element.setAttribute('style', 'display:none;')`","format":"org.matrix.custom.html","formatted_body":"looking now at https://github.com/mdn/content/issues/11697 I find that no browsers seem to conform to the CSP spec requirement to block <code>element.style.cssText = 'display:none'</code> in the same way they block <code>element.setAttribute('style', 'display:none;')</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$oVSsdE20iuSYCp16yh7YdSCNgq8o2D5CUzzoxe8cEt0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641256169068,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$q9rExDx0qpS0VnvGuTWwxgyddnFsdh2jvmfUeT_fdg8"}
]