[
{"content":{"body":"We definitely would do simple reflection, whether it's value <-> value=\"\" or initialValue <-> initialvalue=\"\". Whether we would then have a getter/setter for the current value... probably?","m.mentions":{},"msgtype":"m.text"},"ts":1700017454606,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$lNOJEGO63OwMhyenXcZ9Pn0u6qbJ6UZqN4eqIVEVk1o"},
{"content":{"body":"Some previous discussion in https://github.com/tkent-google/std-switch/issues/4","m.mentions":{},"msgtype":"m.text"},"ts":1700017595874,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$n1QHjZKqNbZ6jxLzcQ_UhXGa9uBcWi7mIurSxr7cPMI"},
{"content":{"body":"I think all that's weird is that the IDL and content attribute have a different name, otherwise the design still seems reasonable to me.","m.mentions":{},"msgtype":"m.text"},"ts":1700034357332,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jrw-W452Cn978YRZvg6x2gpJEoC3av0TglvlXMuWrYg"},
{"content":{"body":"To summarise, it's agreed that `input.value`'s behaviour is bad, but it isn't clear which of the following should have been 'the way'\n\n- `initialValue` property & `initialvalue` attribute pair that reflect. And a `value` property (no attribute) which gets/sets the current value.\n- `value` property & attribute pair that reflect.","format":"org.matrix.custom.html","formatted_body":"<p>To summarise, it's agreed that <code>input.value</code>'s behaviour is bad, but it isn't clear which of the following should have been 'the way'</p>\n<ul>\n<li><code>initialValue</code> property &amp; <code>initialvalue</code> attribute pair that reflect. And a <code>value</code> property (no attribute) which gets/sets the current value.</li>\n<li><code>value</code> property &amp; attribute pair that reflect.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1700046470409,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$mnvDJvCh_34CqAFHf-YRA4ZmfPEBA_3AHJz9WDsyFwM"},
{"content":{"body":"The latter seems simpler, but that means interaction with the element results in attribute changes, which has surprised some (eg triggering DOM mutation listeners/observers).","m.mentions":{},"msgtype":"m.text"},"ts":1700046676203,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$IiSXKtWZ9JcWAfLzk7c3sckEQ4pwoa82glecZ50TJAM"},
{"content":{"body":" * To summarise, it's agreed that `input.value`'s behaviour is bad, but it isn't clear which of the following should have been 'the way'\n\n- `defaultValue` property & `defaultvalue` attribute pair that reflect. And a `value` property (no attribute) which gets/sets the current value.\n- `value` property & attribute pair that reflect.","format":"org.matrix.custom.html","formatted_body":" * <p>To summarise, it's agreed that <code>input.value</code>'s behaviour is bad, but it isn't clear which of the following should have been 'the way'</p>\n<ul>\n<li><code>defaultValue</code> property &amp; <code>defaultvalue</code> attribute pair that reflect. And a <code>value</code> property (no attribute) which gets/sets the current value.</li>\n<li><code>value</code> property &amp; attribute pair that reflect.</li>\n</ul>\n","m.mentions":{},"m.new_content":{"body":"To summarise, it's agreed that `input.value`'s behaviour is bad, but it isn't clear which of the following should have been 'the way'\n\n- `defaultValue` property & `defaultvalue` attribute pair that reflect. And a `value` property (no attribute) which gets/sets the current value.\n- `value` property & attribute pair that reflect.","format":"org.matrix.custom.html","formatted_body":"<p>To summarise, it's agreed that <code>input.value</code>'s behaviour is bad, but it isn't clear which of the following should have been 'the way'</p>\n<ul>\n<li><code>defaultValue</code> property &amp; <code>defaultvalue</code> attribute pair that reflect. And a <code>value</code> property (no attribute) which gets/sets the current value.</li>\n<li><code>value</code> property &amp; attribute pair that reflect.</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mnvDJvCh_34CqAFHf-YRA4ZmfPEBA_3AHJz9WDsyFwM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700046988705,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$86FG65eNetsB8BtatQ_y_KcJuT2xxxlMSRmaR1R_zio"},
{"content":{"body":"The former has better DX for frameworks that have 'controlled' vs 'uncontrolled' patterns, where they either want to declare the current value or the initial value respectively.","m.mentions":{},"msgtype":"m.text"},"ts":1700047175473,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$SplPQyrZE51ipCZ4BjWw0cLmeauqK3TSeO4CAfJm_l8"},
{"content":{"body":"If we went for the `defaultValue` + `value` model, I assume that the `value` getter would get from `defaultValue` if its own internal value wasn't set.","format":"org.matrix.custom.html","formatted_body":"If we went for the <code>defaultValue</code> + <code>value</code> model, I assume that the <code>value</code> getter would get from <code>defaultValue</code> if its own internal value wasn't set.","m.mentions":{},"msgtype":"m.text"},"ts":1700048068039,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$EmVQjsEGdF00tJcg1Q2GqV6fYB_75qBHSOt1BcL4VHY"},
{"content":{"body":" * If we went for the `defaultValue` + `value` model, I assume that the `value` getter would get from `defaultValue` if its own internal value wasn't set?","format":"org.matrix.custom.html","formatted_body":" * If we went for the <code>defaultValue</code> + <code>value</code> model, I assume that the <code>value</code> getter would get from <code>defaultValue</code> if its own internal value wasn't set?","m.mentions":{},"m.new_content":{"body":"If we went for the `defaultValue` + `value` model, I assume that the `value` getter would get from `defaultValue` if its own internal value wasn't set?","format":"org.matrix.custom.html","formatted_body":"If we went for the <code>defaultValue</code> + <code>value</code> model, I assume that the <code>value</code> getter would get from <code>defaultValue</code> if its own internal value wasn't set?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$EmVQjsEGdF00tJcg1Q2GqV6fYB_75qBHSOt1BcL4VHY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700048074711,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$lReDHwaRUSTYgyPTRk2KIaO9oj502RFWsET4c5Byoxg"}
]