[
{"content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): Not part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): Not part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1740709299158,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c"},
{"content":{"body":"Context is, I’m working on implementing the constraint-validation requirements for `type=url` `input` elements. And I’m hoping to avoid needing to write an actual lexer for “absolute-URL string” — and instead just actually run the URL parser on the URLs, with some preprocessing and post-processing","format":"org.matrix.custom.html","formatted_body":"Context is, I’m working on implementing the constraint-validation requirements for <code>type=url</code> <code>input</code> elements. And I’m hoping to avoid needing to write an actual lexer for “absolute-URL string” —&nbsp;and instead just actually run the URL parser on the URLs, with some preprocessing and post-processing","m.mentions":{},"msgtype":"m.text"},"ts":1740709549718,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lRTsIUs1Bc46alk_GRFMYZRLFDUIaf5ylakEXUerBag"},
{"content":{"body":"And it _seems_ like one pre-processing step that’d work is to return not-valid for any strings that contain ASCII whitespace","format":"org.matrix.custom.html","formatted_body":"And it <em>seems</em> like one pre-processing step that’d work is to return not-valid for any strings that contain ASCII whitespace","m.mentions":{},"msgtype":"m.text"},"ts":1740709649421,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$vDvdjiDcPFjDcLv7IpGTfo9D_qu2k0YRKQWZ30JfNl4"},
{"content":{"body":"* annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{},"m.new_content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740709734925,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$y_KtkMWEaFoimwMGaRNbyYSFkcP20cvqBiuS8CLjrkI"},
{"content":{"body":"* annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","m.mentions":{},"m.new_content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740709744287,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$4vdovapWwYg6STROmEi9oFucarG7tJtx15nHsrDyrnM"},
{"content":{"body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-*with-fragment* string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations much handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations much handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"msgtype":"m.text"},"ts":1740716465757,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$twPvcR1ZnwLZW3s4KvNN6IRjEJN7Udg8CzZJcKSe0vM"},
{"content":{"body":"* hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-_with-fragment_ string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"* hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"m.new_content":{"body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-_with-fragment_ string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$twPvcR1ZnwLZW3s4KvNN6IRjEJN7Udg8CzZJcKSe0vM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740716488836,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$R-ZzEa6urFhfXM6JdZRItVSkwOdlVEZXQME5W6gA1cs"},
{"content":{"body":"I am 95% sure browsers do not implement that...","m.mentions":{},"msgtype":"m.text"},"ts":1740720043726,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sbBRQsLl177gl7H_wX1BVJ6elVhtU0-DqnMFXdc_WC4"},
{"content":{"body":"well that’s the thing","m.mentions":{},"msgtype":"m.text"},"ts":1740720128860,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7--HaGQqrbSmE8wA_2b4I9dXVln25XecO1aDy5xn0d0"},
{"content":{"body":"I am implementing it","m.mentions":{},"msgtype":"m.text"},"ts":1740720136393,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$C5PkUPzRk_YKOBchXKzpdS7FuR0_HFfFD7SR7NVmy-8"},
{"content":{"body":"Attempting to — per the actual spec requirements","m.mentions":{},"msgtype":"m.text"},"ts":1740720152464,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$otlZFwg0xPVeT9GHStGCFarDpHCch7j3_xAA5EnFAOA"},
{"content":{"body":"So if the requirements don’t actually match what other implementors are interested in, then I guess we need to update the spec","m.mentions":{},"msgtype":"m.text"},"ts":1740720198850,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$TO5wl-32r___bUc__ZOOwXuYAOj4pLdQjZay1GwwIrQ"},
{"content":{"body":"But yeah you’re right — other engines don’t implement it per-spec","m.mentions":{},"msgtype":"m.text"},"ts":1740720246687,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$fI9R6DHK-e5B7MHMGtQyTD4S4_Guj5RJm0AIPOter38"},
{"content":{"body":"And I have not looked at their code, but I strongly suspect that one big reason is that no existing implementations are actually running a lexer to check that “absolute-URL string” requirement","m.mentions":{},"msgtype":"m.text"},"ts":1740720302593,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$2i4swKR_qI07bkCzLFP0mETD_HqFQFTI0xhO9Nt6D4I"},
{"content":{"body":"Instead, they’re probably all just parsing the value into a URL, and only returning invalid if they don’t get any URL value back from that","m.mentions":{},"msgtype":"m.text"},"ts":1740720357474,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$QrdKWiaGToqvt4OqNR6eJUMdlNuBgduy-w1Wz8PmJgQ"},
{"content":{"body":"At least I can see that seems to be the case from the tests I’ve run so far — with some dozens of cases from https://github.com/web-platform-tests/wpt/blob/275544eab54a0d0c7f74ccc2baae9711293d8908/url/urltestdata.txt","m.mentions":{},"msgtype":"m.text"},"ts":1740720410224,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$-d_eygIrzNfqlhyoyvAMXtHlsj6u4ccvYMFSUiUXpOI"},
{"content":{"body":"I’d be happy to just make my implementation match what other engines are doing, and add a comment in our code saying that. But then, we also rightly should have many more tests in WPT for this. And I have tests I can upstream. But if I make the test results match what other engines are doing, then those tests are not actually going to be conforming to the spec requirements…","m.mentions":{},"msgtype":"m.text"},"ts":1740720664681,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$zVVwq9OdbuZu2DtxUqJ3XPRYIkKIOUBAdwMUYJafRD0"},
{"content":{"body":"The existing test for this in WPT at https://github.com/web-platform-tests/wpt/blob/6618dc6e2a580d6d816f7a5b291c016f7a2c0204/html/semantics/forms/constraints/form-validation-checkValidity.html#L30 has exactly one case: the string `abc`","format":"org.matrix.custom.html","formatted_body":"The existing test for this in WPT at https://github.com/web-platform-tests/wpt/blob/6618dc6e2a580d6d816f7a5b291c016f7a2c0204/html/semantics/forms/constraints/form-validation-checkValidity.html#L30 has exactly one case: the string <code>abc</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740720766057,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$e9PfWPHAD7I0oZRDhgDVT1fupAzGpJ9Ys1vBHK0eR7s"},
{"content":{"body":"Yeah, I'm just saying if it were me, I would drop implementation work and instead open a spec issue to get this sorted.","m.mentions":{},"msgtype":"m.text"},"ts":1740720779066,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kOjmObyFdGy_SzstInJKx1Eo1jybrzRG1Y1aII8M-Js"},
{"content":{"body":"ah OK yeah there’s plenty of other stuff we need that I can work on the meantime","m.mentions":{},"msgtype":"m.text"},"ts":1740720825034,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ocoQ4_INGPiEJxpZSD_qs6_2hG-0vQUiXEI2a3LC7lY"},
{"content":{"body":"(but when I started out on implementing this, it looked to me (naïvely) like it was going to be relatively low-hanging fruit…))","m.mentions":{},"msgtype":"m.text"},"ts":1740720898299,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_rs5T5kLgsa09pPJgGhW6xOwgFYSFoYBIJtG10DHH4I"},
{"content":{"body":"Made a WPT PR at https://github.com/web-platform-tests/wpt/pull/51011/files with the added tests","m.mentions":{},"msgtype":"m.text"},"ts":1740721696105,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MMM-6eGoN3G0UBZrnYGS-x2olE3TslYT3Nw_YVnLNQk"},
{"content":{"body":"Do we currently have a way of hosting/enabling people to run WPT tests from a PR branch?","m.mentions":{},"msgtype":"m.text"},"ts":1740721741633,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$tH1iR3wgdKhqOLzw__Yg2X0U2wfZanru8AmMetU6vOQ"},
{"content":{"body":"I kind of vaguely recall seeing something a while back. Like, with w3c-test.org (predecessor to wpt.live) we used to have a thing that created subdirectories for every pull request","m.mentions":{},"msgtype":"m.text"},"ts":1740721837019,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jkbaCKZ5v1Ea2KiNl_7TrwKodJgV2s45HKW78naKhWs"},
{"content":{"body":"I think there might be an existing issue on type=url. It needs something similar to type=email work.","m.mentions":{},"msgtype":"m.text"},"ts":1740722160711,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OqPmrkm-0xE5MYlSmlFXIhrCup6eRyaB1sYTQhh30hM"},
{"content":{"body":"ah OK, I’ll look now","m.mentions":{},"msgtype":"m.text"},"ts":1740722185257,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$0UllIS-rTRj1_VL3AjeO3HL5SPz4x0uE2Weg0J4JFug"},
{"content":{"body":"Well, didn’t find it yet. Not in whatwg/html at least","m.mentions":{},"msgtype":"m.text"},"ts":1740722378794,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$F3GlRC1nDMOFLIn_TBXgqdBOzfyasYnvd077TNMrNHk"},
{"content":{"body":"sideshowbarker: can't find it either, please file one? Non-ASCII input in various parts of the URL would also be good to test. Including what ends up getting submitted.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: can't find it either, please file one? Non-ASCII input in various parts of the URL would also be good to test. Including what ends up getting submitted.","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1740724029747,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$7_nlo43aahfBDGAp2O0smXn9ZhVZvMheWTSCApZqGV8"},
{"content":{"body":"smaug: is it reasonable to ask you to review moveBefore() by Monday?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: is it reasonable to ask you to review moveBefore() by Monday?","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1740724045646,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$mw_f5NjchgWS5Swy-41k_XvnHBuHn1nY7CWmtz-lFFo"},
{"content":{"body":"* smaug: is it reasonable to ask you to review moveBefore() by Monday? (Somewhat arbitrary deadline.)","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: is it reasonable to ask you to review moveBefore() by Monday? (Somewhat arbitrary deadline.)","m.mentions":{},"m.new_content":{"body":"smaug: is it reasonable to ask you to review moveBefore() by Monday? (Somewhat arbitrary deadline.)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: is it reasonable to ask you to review moveBefore() by Monday? (Somewhat arbitrary deadline.)","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mw_f5NjchgWS5Swy-41k_XvnHBuHn1nY7CWmtz-lFFo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740724068034,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qB1ZkcUa3llkG4FprbaEMauIbaaulzFAlBQcKkQ3kNs"},
{"content":{"body":"Raised https://github.com/whatwg/html/issues/11083","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$7_nlo43aahfBDGAp2O0smXn9ZhVZvMheWTSCApZqGV8"}},"msgtype":"m.text"},"ts":1740732643330,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$B0uO_33ZHIShxwQP4M_wlGUhkUcQKjnQ4WSsD6WyyhQ"},
{"content":{"body":"Clear-Site-Data is desperately in need of maintenance... https://github.com/w3c/webappsec-clear-site-data/issues/87","m.mentions":{},"msgtype":"m.text"},"ts":1740736237540,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qiqhgdiEoW1HpN4UR9DLkB1ghoZO1O293ctXRioA-AA"},
{"content":{"body":"annevk: I could review it on Monday.  (though it feels a bit odd that reviews need to happen fast, while the pr wasn't updated for quite some time)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I could review it on Monday.  (though it feels a bit odd that reviews need to happen fast, while the pr wasn't updated for quite some time)","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1740737195958,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$yirWlfxif-PQo8DZsuQim79bDqvz5rJUJrLukVC1oe4"},
{"content":{"body":"We should adopt a policy that anybody who abandons a spec — or neglects/leaves it unmaintained over N number of months/years — is barred for life from ever being able to write another spec","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$qiqhgdiEoW1HpN4UR9DLkB1ghoZO1O293ctXRioA-AA"}},"msgtype":"m.text"},"ts":1740737430334,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$t5sxNCsT6NphoVY4zzfcoXg1lhOvgouq8AThjhVuB1w"},
{"content":{"body":"smaug: you're right. I didn't want to punish with incremental backoff, but it doesn't have to be done immediately either. I guess I just kinda want it over with myself.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: you're right. I didn't want to punish with incremental backoff, but it doesn't have to be done immediately either. I guess I just kinda want it over with myself.","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1740737857400,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xTboQYc4QoKPIeVeeW7HRwEjiRsojIaE9gX5kE3atcI"},
{"content":{"body":"If it's done somewhere next week that's good enough for me.","m.mentions":{},"msgtype":"m.text"},"ts":1740737879099,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$R8no0ynwpfwiPB3bSnDYNmBP5XJ4I2HvbKxtdsLWQq8"},
{"content":{"body":"I want the pr landed too, such a nice feature. It is just that when there is lots of time between pr updates, I need to basically re-review everything in order to remind myself what all it is changing.","m.mentions":{},"msgtype":"m.text"},"ts":1740738009549,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$vQ3w92WAfP2ZjCYf9W_PeoBmT_GgI5kAUaXXQQIKMa8"},
{"content":{"body":"Very much same, which is maybe why I want you to review it quickly, but it would also require Dominic Farolino to then update it quickly again.","format":"org.matrix.custom.html","formatted_body":"Very much same, which is maybe why I want you to review it quickly, but it would also require <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> to then update it quickly again.","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1740738051392,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rWnNsguXQ8yqRTqUWjIo92Rqk6wY4ZhkNUBIB6zS8QI"},
{"content":{"body":"> <@sideshowbarker:matrix.org> We should adopt a policy that anybody who abandons a spec — or neglects/leaves it unmaintained over N number of months/years — is barred for life from ever being able to write another spec\n\nI'm freeeeeeeeeeeeeee","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$t5sxNCsT6NphoVY4zzfcoXg1lhOvgouq8AThjhVuB1w?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">@sideshowbarker:matrix.org</a><br>We should adopt a policy that anybody who abandons a spec — or neglects/leaves it unmaintained over N number of months/years — is barred for life from ever being able to write another spec</blockquote></mx-reply>I'm freeeeeeeeeeeeeee","m.mentions":{"user_ids":["@sideshowbarker:matrix.org","@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$t5sxNCsT6NphoVY4zzfcoXg1lhOvgouq8AThjhVuB1w"}},"msgtype":"m.text"},"ts":1740738341096,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$AWd553kKWWIelHiJ7a-2mHzAdziHwFIlgJ_FE-tt0Yg"},
{"content":{"body":"about Client Hints, I added a comment at https://bugzilla.mozilla.org/show_bug.cgi?id=935216#c73 that I hope isn’t out of line. Just an attempt at a heads-up, out of empathy with whoever might wander into trying to implement it next","m.mentions":{},"msgtype":"m.text"},"ts":1740738857728,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_AzKW3vU712b3a0S6OtMI1qa-Exj1NR41jGHtI3izuU"},
{"content":{"body":"sideshowbarker: Client-Hints != Clear-Site-Data though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: Client-Hints != Clear-Site-Data though","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1740739270551,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hGnNWWKlvwPQEmo5niZS9TMHx9aqBbubZNiK0H0swx8"},
{"content":{"body":"ah","m.mentions":{},"msgtype":"m.text"},"ts":1740739295485,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oczMxVHZob5yRdQHcll8lvqjmXhwH7izsW4jYrpLYz0"},
{"content":{"body":"Now I'm pretty certain Client-Hints also has unresolved issues (including some in Fetch), but they're at different URLs. 😀","m.mentions":{},"msgtype":"m.text"},"ts":1740739345463,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$atLMPQ-Xomw_ysnsxFZt7G2rE1RW4fFudPdHXLwTZhs"}
]