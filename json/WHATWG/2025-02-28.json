[
{"content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): Not part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): Not part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1740709299158,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c"},
{"content":{"body":"Context is, I’m working on implementing the constraint-validation requirements for `type=url` `input` elements. And I’m hoping to avoid needing to write an actual lexer for “absolute-URL string” — and instead just actually run the URL parser on the URLs, with some preprocessing and post-processing","format":"org.matrix.custom.html","formatted_body":"Context is, I’m working on implementing the constraint-validation requirements for <code>type=url</code> <code>input</code> elements. And I’m hoping to avoid needing to write an actual lexer for “absolute-URL string” —&nbsp;and instead just actually run the URL parser on the URLs, with some preprocessing and post-processing","m.mentions":{},"msgtype":"m.text"},"ts":1740709549718,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lRTsIUs1Bc46alk_GRFMYZRLFDUIaf5ylakEXUerBag"},
{"content":{"body":"And it _seems_ like one pre-processing step that’d work is to return not-valid for any strings that contain ASCII whitespace","format":"org.matrix.custom.html","formatted_body":"And it <em>seems</em> like one pre-processing step that’d work is to return not-valid for any strings that contain ASCII whitespace","m.mentions":{},"msgtype":"m.text"},"ts":1740709649421,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$vDvdjiDcPFjDcLv7IpGTfo9D_qu2k0YRKQWZ30JfNl4"},
{"content":{"body":"* annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{},"m.new_content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can never contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740709734925,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$y_KtkMWEaFoimwMGaRNbyYSFkcP20cvqBiuS8CLjrkI"},
{"content":{"body":"* annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","m.mentions":{},"m.new_content":{"body":"annevk (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> (or anyone else who loves answering questions about the URL spec): No part of a conforming “absolute-URL string” https://url.spec.whatwg.org/#absolute-url-string can ever contain any ASCII whitespace, right?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A6wNxmtcig9PJgU6Xi9thVaqvppONzNb8GIAqy_Q_4c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740709744287,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$4vdovapWwYg6STROmEi9oFucarG7tJtx15nHsrDyrnM"},
{"content":{"body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-*with-fragment* string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations much handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations much handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"msgtype":"m.text"},"ts":1740716465757,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$twPvcR1ZnwLZW3s4KvNN6IRjEJN7Udg8CzZJcKSe0vM"},
{"content":{"body":"* hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-_with-fragment_ string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"* hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"m.new_content":{"body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references [“absolute-URL string”](https://url.spec.whatwg.org/#syntax-url-absolute) and _not_ [“absolute-URL-_with-fragment_ string”](https://url.spec.whatwg.org/#absolute-url-with-fragment-string), then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for `type=url` `input` element (for the purposes of the constraint-validation API)?","format":"org.matrix.custom.html","formatted_body":"hmm, given that in https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url), the spec specifically and normatively references <a href=\"https://url.spec.whatwg.org/#syntax-url-absolute\">“absolute-URL string”</a> and <em>not</em> <a href=\"https://url.spec.whatwg.org/#absolute-url-with-fragment-string\">“absolute-URL-<em>with-fragment</em> string”</a>, then that means: if a URL has any fragment at all, then the requirement is that implementations must handle it as an invalid value for <code>type=url</code> <code>input</code> element (for the purposes of the constraint-validation API)?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$twPvcR1ZnwLZW3s4KvNN6IRjEJN7Udg8CzZJcKSe0vM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1740716488836,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$R-ZzEa6urFhfXM6JdZRItVSkwOdlVEZXQME5W6gA1cs"},
{"content":{"body":"I am 95% sure browsers do not implement that...","m.mentions":{},"msgtype":"m.text"},"ts":1740720043726,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sbBRQsLl177gl7H_wX1BVJ6elVhtU0-DqnMFXdc_WC4"},
{"content":{"body":"well that’s the thing","m.mentions":{},"msgtype":"m.text"},"ts":1740720128860,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7--HaGQqrbSmE8wA_2b4I9dXVln25XecO1aDy5xn0d0"},
{"content":{"body":"I am implementing it","m.mentions":{},"msgtype":"m.text"},"ts":1740720136393,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$C5PkUPzRk_YKOBchXKzpdS7FuR0_HFfFD7SR7NVmy-8"},
{"content":{"body":"Attempting to — per the actual spec requirements","m.mentions":{},"msgtype":"m.text"},"ts":1740720152464,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$otlZFwg0xPVeT9GHStGCFarDpHCch7j3_xAA5EnFAOA"},
{"content":{"body":"So if the requirements don’t actually match what other implementors are interested in, then I guess we need to update the spec","m.mentions":{},"msgtype":"m.text"},"ts":1740720198850,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$TO5wl-32r___bUc__ZOOwXuYAOj4pLdQjZay1GwwIrQ"},
{"content":{"body":"But yeah you’re right — other engines don’t implement it per-spec","m.mentions":{},"msgtype":"m.text"},"ts":1740720246687,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$fI9R6DHK-e5B7MHMGtQyTD4S4_Guj5RJm0AIPOter38"},
{"content":{"body":"And I have not looked at their code, but I strongly suspect that one big reason is that no existing implementations are actually running a lexer to check that “absolute-URL string” requirement","m.mentions":{},"msgtype":"m.text"},"ts":1740720302593,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$2i4swKR_qI07bkCzLFP0mETD_HqFQFTI0xhO9Nt6D4I"},
{"content":{"body":"Instead, they’re probably all just parsing the value into a URL, and only returning invalid if they don’t get any URL value back from that","m.mentions":{},"msgtype":"m.text"},"ts":1740720357474,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$QrdKWiaGToqvt4OqNR6eJUMdlNuBgduy-w1Wz8PmJgQ"},
{"content":{"body":"At least I can see that seems to be the case from the tests I’ve run so far — with some dozens of cases from https://github.com/web-platform-tests/wpt/blob/275544eab54a0d0c7f74ccc2baae9711293d8908/url/urltestdata.txt","m.mentions":{},"msgtype":"m.text"},"ts":1740720410224,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$-d_eygIrzNfqlhyoyvAMXtHlsj6u4ccvYMFSUiUXpOI"},
{"content":{"body":"I’d be happy to just make my implementation match what other engines are doing, and add a comment in our code saying that. But then, we also rightly should have many more tests in WPT for this. And I have tests I can upstream. But if I make the test results match what other engines are doing, then those tests are not actually going to be conforming to the spec requirements…","m.mentions":{},"msgtype":"m.text"},"ts":1740720664681,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$zVVwq9OdbuZu2DtxUqJ3XPRYIkKIOUBAdwMUYJafRD0"},
{"content":{"body":"The existing test for this in WPT at https://github.com/web-platform-tests/wpt/blob/6618dc6e2a580d6d816f7a5b291c016f7a2c0204/html/semantics/forms/constraints/form-validation-checkValidity.html#L30 has exactly one case: the string `abc`","format":"org.matrix.custom.html","formatted_body":"The existing test for this in WPT at https://github.com/web-platform-tests/wpt/blob/6618dc6e2a580d6d816f7a5b291c016f7a2c0204/html/semantics/forms/constraints/form-validation-checkValidity.html#L30 has exactly one case: the string <code>abc</code>","m.mentions":{},"msgtype":"m.text"},"ts":1740720766057,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$e9PfWPHAD7I0oZRDhgDVT1fupAzGpJ9Ys1vBHK0eR7s"},
{"content":{"body":"Yeah, I'm just saying if it were me, I would drop implementation work and instead open a spec issue to get this sorted.","m.mentions":{},"msgtype":"m.text"},"ts":1740720779066,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kOjmObyFdGy_SzstInJKx1Eo1jybrzRG1Y1aII8M-Js"},
{"content":{"body":"ah OK yeah there’s plenty of other stuff we need that I can work on the meantime","m.mentions":{},"msgtype":"m.text"},"ts":1740720825034,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ocoQ4_INGPiEJxpZSD_qs6_2hG-0vQUiXEI2a3LC7lY"},
{"content":{"body":"(but when I started out on implementing this, it looked to me (naïvely) like it was going to be relatively low-hanging fruit…))","m.mentions":{},"msgtype":"m.text"},"ts":1740720898299,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_rs5T5kLgsa09pPJgGhW6xOwgFYSFoYBIJtG10DHH4I"}
]