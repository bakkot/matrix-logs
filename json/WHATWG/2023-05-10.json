[
{"content":{"body":"> <@tabatkins:matrix.org> Maybe I tested the versions before my new fragment code got built in\n\nSo I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.\n\nGiven what I understand about what’s possible in on GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they _could_ actually even work.\n\nThe only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.\n\nSo I’m pretty much stumped :(","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KLrlcaQUAeUTCIexScSjsrV8cL2syxoUD8t3hQyx7sc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Maybe I tested the versions before my new fragment code got built in</blockquote></mx-reply><p>So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.</p>\n<p>Given what I understand about what’s possible in on GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they <em>could</em> actually even work.</p>\n<p>The only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.</p>\n<p>So I’m pretty much stumped :(</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$KLrlcaQUAeUTCIexScSjsrV8cL2syxoUD8t3hQyx7sc"}},"msgtype":"m.text"},"ts":1683721104901,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$UIEiihejT9hAltbGBquqrKd-AKa_UDLTJT6innjoTgk"},
{"content":{"body":"> <@tabatkins:matrix.org> Maybe I tested the versions before my new fragment code got built in\n\n * So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.\n\nGiven what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they _could_ actually even work.\n\nThe only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.\n\nSo I’m pretty much stumped :(","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KLrlcaQUAeUTCIexScSjsrV8cL2syxoUD8t3hQyx7sc?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Maybe I tested the versions before my new fragment code got built in</blockquote></mx-reply> * <p>So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.</p>\n<p>Given what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they <em>could</em> actually even work.</p>\n<p>The only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.</p>\n<p>So I’m pretty much stumped :(</p>\n","m.new_content":{"body":"So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.\n\nGiven what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they _could_ actually even work.\n\nThe only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.\n\nSo I’m pretty much stumped :(","format":"org.matrix.custom.html","formatted_body":"<p>So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.</p>\n<p>Given what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, or how they <em>could</em> actually even work.</p>\n<p>The only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.</p>\n<p>So I’m pretty much stumped :(</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$UIEiihejT9hAltbGBquqrKd-AKa_UDLTJT6innjoTgk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683721118635,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$nK5fsFWUFW7Psif_phKD0jCIyX5B_ohgzGAX830qhAo"},
{"content":{"body":"I actually made some progress while investigating that","msgtype":"m.text"},"ts":1683721176234,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ee2n1mCf9w8OIeGPnIb-FVv3U32c-q60kotc4GFrwLM"},
{"content":{"body":"https://github.com/speced/bikeshed-boilerplate/blob/main/boilerplate/csswg/abstract.include <- this is where that macro is used","msgtype":"m.text"},"ts":1683721184119,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4R5DMrsimho_IJrzDHwE9x_vDD5Mao4XeQ3MnxVwkJ4"},
{"content":{"body":" * So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.\n\nGiven what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, and however they’re set up, how they could actually even work.\n\nThe only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.\n\nSo I’m pretty much stumped :(","format":"org.matrix.custom.html","formatted_body":" * <p>So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.</p>\n<p>Given what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, and however they’re set up, how they could actually even work.</p>\n<p>The only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.</p>\n<p>So I’m pretty much stumped :(</p>\n","m.new_content":{"body":"So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.\n\nGiven what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, and however they’re set up, how they could actually even work.\n\nThe only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.\n\nSo I’m pretty much stumped :(","format":"org.matrix.custom.html","formatted_body":"<p>So I spent some time trying to learn how the redirects are set up, and to find where the code for the redirects lives — but so I’ve not been able to find anything at all, really.</p>\n<p>Given what I understand about what’s possible in GitHub Pages hosting, and given that when I make requests with curl, I just get a 200s, and the index files that come back from curl requests don’t seem to have any kind of client-side redirects in them, at this point it’s kind of baffling to me how the redirects are actually work, and however they’re set up, how they could actually even work.</p>\n<p>The only clue I have so for is the BUILTBYGITHUBCI text macro I see in the bikeshed calls in the workflow file — but grepping around for that, I don’t find anywhere that’s actually used for anything.</p>\n<p>So I’m pretty much stumped :(</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$UIEiihejT9hAltbGBquqrKd-AKa_UDLTJT6innjoTgk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683721188460,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7k2UZx21BFDxrHU954EqxFcedtWg8oME0mr8BAyD-GM"},
{"content":{"body":"oh — I’ll look right now","msgtype":"m.text"},"ts":1683721204914,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LnPQ1KqvMIzF2A0h-O9aflCBt55cGYKUutvYVvctzig"},
{"content":{"body":"that script only redirects if the page isn't being served by drafts.csswg.org","msgtype":"m.text"},"ts":1683721249510,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$4MEvJBNXslq1aeFT3euhSI9D0nzsm06HVxgsY5GRSck"},
{"content":{"body":"ah, the separate bikeshed-boilerplate repo — that’s the one place I had not thought to look at so far. Now it seems obvious that’s where I should have looked ","msgtype":"m.text"},"ts":1683721265811,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$vG0nvQKqPFNKzrx6yOYM5cvMf_xjMEtLlkFDLENP8WU"},
{"content":{"body":"> <@abotella:igalia.com> https://github.com/speced/bikeshed-boilerplate/blob/main/boilerplate/csswg/abstract.include <- this is where that macro is used\n\nOK yeah so it seems the `draftUrl += \"#\"+location.hash` step isn’t needed at all, maybe?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$4R5DMrsimho_IJrzDHwE9x_vDD5Mao4XeQ3MnxVwkJ4?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>https://github.com/speced/bikeshed-boilerplate/blob/main/boilerplate/csswg/abstract.include &lt;- this is where that macro is used</blockquote></mx-reply>OK yeah so it seems the <code>draftUrl += &quot;#&quot;+location.hash</code> step isn’t needed at all, maybe?","m.relates_to":{"m.in_reply_to":{"event_id":"$4R5DMrsimho_IJrzDHwE9x_vDD5Mao4XeQ3MnxVwkJ4"}},"msgtype":"m.text"},"ts":1683721353059,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ARfp5LkWAO8Vv3ySwDnoBveflqZ0RMQiX6lwR21IvtQ"},
{"content":{"body":"yeah, shouldn't be","msgtype":"m.text"},"ts":1683721394295,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$uK9TJ8q5fuDaeWJ4wZxQJo0xiL6UoR6IVSsGKVj9qF4"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1683721402755,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$QE0z0teK_wWUnHqFzhIup6ZkNFDVaJYqXrww4NLjI5M"},
{"content":{"body":"(but even if that step were needed, it should instead be `draftUrl += location.hash`, since `location.hash already includes the `#`","format":"org.matrix.custom.html","formatted_body":"(but even if that step were needed, it should instead be <code>draftUrl += location.hash</code>, since <code>location.hash already includes the </code>#`","msgtype":"m.text"},"ts":1683721451424,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$kQXq7Qli23ClaSOUHjZ1p1ybuRKotNBTu53eIZAomj8"},
{"content":{"body":" * (but even if that step were needed, it should instead be `draftUrl += location.hash`, since `location.hash` already includes the `#\\`","format":"org.matrix.custom.html","formatted_body":" * (but even if that step were needed, it should instead be <code>draftUrl += location.hash</code>, since <code>location.hash</code> already includes the <code>#\\</code>","m.new_content":{"body":"(but even if that step were needed, it should instead be `draftUrl += location.hash`, since `location.hash` already includes the `#\\`","format":"org.matrix.custom.html","formatted_body":"(but even if that step were needed, it should instead be <code>draftUrl += location.hash</code>, since <code>location.hash</code> already includes the <code>#\\</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$kQXq7Qli23ClaSOUHjZ1p1ybuRKotNBTu53eIZAomj8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683721458280,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ih_0eSRzt2Ppa_TBr_5KOZIu8FA_I0E-vwjA6tKtgnk"},
{"content":{"body":" * (but even if that step were needed, it should instead be `draftUrl += location.hash`, since `location.hash` already includes the `#`","format":"org.matrix.custom.html","formatted_body":" * (but even if that step were needed, it should instead be <code>draftUrl += location.hash</code>, since <code>location.hash</code> already includes the <code>#</code>","m.new_content":{"body":"(but even if that step were needed, it should instead be `draftUrl += location.hash`, since `location.hash` already includes the `#`","format":"org.matrix.custom.html","formatted_body":"(but even if that step were needed, it should instead be <code>draftUrl += location.hash</code>, since <code>location.hash</code> already includes the <code>#</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$kQXq7Qli23ClaSOUHjZ1p1ybuRKotNBTu53eIZAomj8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683721468240,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$p7To_vddV1GdcOKqW9M9Dau43_vmUjXDBG5_A376cxE"},
{"content":{"body":"so I see now that‘s why we end up with the doubled `##`","format":"org.matrix.custom.html","formatted_body":"so I see now that‘s why we end up with the doubled <code>##</code>","msgtype":"m.text"},"ts":1683721491440,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$uEPtCN5EM0qESB2eh_KP9gZ1RtQGgsSNz9Pax5vymmU"},
{"content":{"body":"e.g., https://drafts.csswg.org/css-backgrounds/#the-background##the-background","msgtype":"m.text"},"ts":1683721503605,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$KqfP2TOdZInXIPb8a6EfN7USbQDPnoyWWM3ESxnjw6w"},
{"content":{"body":"For unversioned specs, it seems like the mapping to a version is handled purely in the drafts server, and then the versioned spec is proxied from the github pages site","msgtype":"m.text"},"ts":1683721560390,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$792pv1UsKwi9a9aVBZBOBJEf0zlO3hyxbsdQf0p1gNM"},
{"content":{"body":"but since the github pages site doesn't build the index or the unversioned copies, opening those on the gihtub page","msgtype":"m.text"},"ts":1683721591933,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$7ZCYqUge2HdP0-DtDKZAWgiEeMRs55McZMDt7CH95D4"},
{"content":{"body":" * but since the github pages site doesn't build the index or the unversioned copies, opening those on the github pages site doesn't redirect to the drafts site","m.new_content":{"body":"but since the github pages site doesn't build the index or the unversioned copies, opening those on the github pages site doesn't redirect to the drafts site","msgtype":"m.text"},"m.relates_to":{"event_id":"$7ZCYqUge2HdP0-DtDKZAWgiEeMRs55McZMDt7CH95D4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1683721602478,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$PgLISrsGO7PxmmN3ybQ4TbsILHiBMUuhpyc2NUAqA78"}
]