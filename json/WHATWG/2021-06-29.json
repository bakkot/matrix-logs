[
{"content":{"body":"Domenic: would be good to have you take a look at https://github.com/tabatkins/bikeshed/pull/2094 when you have time","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: would be good to have you take a look at https://github.com/tabatkins/bikeshed/pull/2094 when you have time","msgtype":"m.text"},"ts":1624970687291,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$_Dz_l1SLf4_q9VMi0qKp-zx52c92IFLXuC1w9E_HP5o"},
{"content":{"body":"basically, for domintro sections, it causes Bikeshed to output `-dev`-suffixed IDs in the same way as we do for the HTML spec","format":"org.matrix.custom.html","formatted_body":"basically, for domintro sections, it causes Bikeshed to output <code>-dev</code>-suffixed IDs in the same way as we do for the HTML spec","msgtype":"m.text"},"ts":1624970755136,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ"},
{"content":{"body":"however, unlike what we do for the HTML spec — which relies on hardcoding `subdfn` attributes (and which we anyway added for a different purpose, for preserving link targets in the developer version) — that Bikeshed patch doesn’t require any new markup in the spec source; instead it does it solely based on the presence of a `class=domintro` ancestor","format":"org.matrix.custom.html","formatted_body":"however, unlike what we do for the HTML spec — which relies on hardcoding <code>subdfn</code> attributes (and which we anyway added for a different purpose, for preserving link targets in the developer version) — that Bikeshed patch doesn’t require any new markup in the spec source; instead it does it solely based on the presence of a <code>class=domintro</code> ancestor","msgtype":"m.text"},"ts":1624970987444,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$C0i5KRLkYEFpfSmpJlI1nEygmqcMOPsb6sUeeuqtZgg"},
{"content":{"body":"if it were to turn out that doing it solely based on the presence of a `class=domintro` ancestor doesn’t actually ensure stable `-dev` IDs for the stuff we want, then I guess we would need to add some hardcoded attributes in the spec sources — but from testing I’ve done thus far, it seems like it’s not in fact going to be necessary to change the spec sources at all","format":"org.matrix.custom.html","formatted_body":"if it were to turn out that doing it solely based on the presence of a <code>class=domintro</code> ancestor doesn’t actually ensure stable <code>-dev</code> IDs for the stuff we want, then I guess we would need to add some hardcoded attributes in the spec sources — but from testing I’ve done thus far, it seems like it’s not in fact going to be necessary to change the spec sources at all","msgtype":"m.text"},"ts":1624971186267,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$0NTySWaytkfYnk_7fRjc8OchQ9rBRCai310KSU1D4Ck"},
{"content":{"body":"Hm, wiki.whatwg.org still links to IRC if you're not logged in","msgtype":"m.text"},"ts":1624974093901,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE"},
{"content":{"body":"> <@ms2ger:igalia.com> Hm, wiki.whatwg.org still links to IRC if you're not logged in\n\nOh, interesting, I probably messed up the caching config. Thank you for finding that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ms2ger:igalia.com\">@ms2ger:igalia.com</a><br>Hm, wiki.whatwg.org still links to IRC if you&#39;re not logged in</blockquote></mx-reply>Oh, interesting, I probably messed up the caching config. Thank you for finding that.","m.relates_to":{"m.in_reply_to":{"event_id":"$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE"}},"msgtype":"m.text"},"ts":1624978805179,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> basically, for domintro sections, it causes Bikeshed to output `-dev`-suffixed IDs in the same way as we do for the HTML spec\n\nThis seems really cool and elegant!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>basically, for domintro sections, it causes Bikeshed to output <code>-dev</code>-suffixed IDs in the same way as we do for the HTML spec</blockquote></mx-reply>This seems really cool and elegant!","m.relates_to":{"m.in_reply_to":{"event_id":"$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ"}},"msgtype":"m.text"},"ts":1624979100813,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mprd-J4vMpOjEbipVbUsp39wJJ8giP7KKNdr0kUitow"},
{"content":{"body":"we’ll see what tabatkins thinks of it","format":"org.matrix.custom.html","formatted_body":"we’ll see what <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">tabatkins</a> thinks of it","msgtype":"m.text"},"ts":1624979144961,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$GipN0u-yRMraRYVg3eLjqXpVXspqUmPzyoRXUqqkJlU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Oh, interesting, I probably messed up the caching config. Thank you for finding that.\n\nCannot reproduce across a couple computers...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Oh, interesting, I probably messed up the caching config. Thank you for finding that.</blockquote></mx-reply>Cannot reproduce across a couple computers...","m.relates_to":{"m.in_reply_to":{"event_id":"$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI"}},"msgtype":"m.text"},"ts":1624979147448,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IP_rDWqXms3VLtUDvqUqzGNq-mxmAyuyAG0q-hcwaYs"},
{"content":{"body":"Oh, that message, I thought you meant the sidebar or homepage links","msgtype":"m.text"},"ts":1624981754725,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IampUAMqRvxkqXhugm8udmPbU7kCbUCefEllboQ7YoM"},
{"content":{"body":"I fixed https://wiki.whatwg.org/wiki/MediaWiki:Anonnotice but now I think there's some caching issue...","msgtype":"m.text"},"ts":1624981948638,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$zFd3pr1Q1AElkHRzimgjEgq47PJNXCCPyVoLeKyPVnU"},
{"content":{"body":"`?action=purge` fixes it, thanks","format":"org.matrix.custom.html","formatted_body":"<code>?action=purge</code> fixes it, thanks","msgtype":"m.text"},"ts":1624982087883,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$u6A-zeS4iMRVTDiJ5J7FGzLb_lGpVTJe47WDV9Y-70k"},
{"content":{"body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard i","format":"org.matrix.custom.html","formatted_body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard i","msgtype":"m.text"},"ts":1624984343497,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KHdvBTVrdED1Dz9jz6UVUnaDJ-PY2-esEna9DrYlqjE"},
{"content":{"body":" * does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","format":"org.matrix.custom.html","formatted_body":" * does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","m.new_content":{"body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","format":"org.matrix.custom.html","formatted_body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","msgtype":"m.text"},"m.relates_to":{"event_id":"$KHdvBTVrdED1Dz9jz6UVUnaDJ-PY2-esEna9DrYlqjE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624984350793,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bW6L5gfFPhdYTHxkU8gEDQ6XZ0bGjqHCje1bBDqidQg"},
{"content":{"body":"bakkot I assume to mirror the decoder interface which is stateful because it is capable of streaming? It would be nice to have a static method on `TextEncoder` / `TextDecoder` for single use encoding...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> I assume to mirror the decoder interface which is stateful because it is capable of streaming? It would be nice to have a static method on <code>TextEncoder</code> / <code>TextDecoder</code> for single use encoding...","msgtype":"m.text"},"ts":1624984634972,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$9iL0eFIqSEke4RicQocs7MiGmFqzTAHRqrOdURbjzDg"},
{"content":{"body":"bleh. the stream transformer usage is fundamentally pretty different, it seems a shame they were conflated in TextEncoder","msgtype":"m.text"},"ts":1624989500662,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbqlxJC9aDQ61WPTAaXH5kdT6DMwbxHnRzJspaDk56c"},
{"content":{"body":"ah well","msgtype":"m.text"},"ts":1624989501507,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Lz1SF70zzIai1pQf5fOZ3Ns6EHxovVjctQUbwDXPqQI"},
{"content":{"body":"+1 to a static method. A bit dangerous people will use a sequence of static method calls when they should use the stateful instance, but probably worth it on the balance.","msgtype":"m.text"},"ts":1624995206480,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$4h2C83NZockxulM2_JnC-tKBrKd6DPZijBFwo4uqLQM"}
]