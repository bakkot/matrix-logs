[
{"content":{"body":"Domenic: would be good to have you take a look at https://github.com/tabatkins/bikeshed/pull/2094 when you have time","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: would be good to have you take a look at https://github.com/tabatkins/bikeshed/pull/2094 when you have time","msgtype":"m.text"},"ts":1624970687291,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$_Dz_l1SLf4_q9VMi0qKp-zx52c92IFLXuC1w9E_HP5o"},
{"content":{"body":"basically, for domintro sections, it causes Bikeshed to output `-dev`-suffixed IDs in the same way as we do for the HTML spec","format":"org.matrix.custom.html","formatted_body":"basically, for domintro sections, it causes Bikeshed to output <code>-dev</code>-suffixed IDs in the same way as we do for the HTML spec","msgtype":"m.text"},"ts":1624970755136,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ"},
{"content":{"body":"however, unlike what we do for the HTML spec — which relies on hardcoding `subdfn` attributes (and which we anyway added for a different purpose, for preserving link targets in the developer version) — that Bikeshed patch doesn’t require any new markup in the spec source; instead it does it solely based on the presence of a `class=domintro` ancestor","format":"org.matrix.custom.html","formatted_body":"however, unlike what we do for the HTML spec — which relies on hardcoding <code>subdfn</code> attributes (and which we anyway added for a different purpose, for preserving link targets in the developer version) — that Bikeshed patch doesn’t require any new markup in the spec source; instead it does it solely based on the presence of a <code>class=domintro</code> ancestor","msgtype":"m.text"},"ts":1624970987444,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$C0i5KRLkYEFpfSmpJlI1nEygmqcMOPsb6sUeeuqtZgg"},
{"content":{"body":"if it were to turn out that doing it solely based on the presence of a `class=domintro` ancestor doesn’t actually ensure stable `-dev` IDs for the stuff we want, then I guess we would need to add some hardcoded attributes in the spec sources — but from testing I’ve done thus far, it seems like it’s not in fact going to be necessary to change the spec sources at all","format":"org.matrix.custom.html","formatted_body":"if it were to turn out that doing it solely based on the presence of a <code>class=domintro</code> ancestor doesn’t actually ensure stable <code>-dev</code> IDs for the stuff we want, then I guess we would need to add some hardcoded attributes in the spec sources — but from testing I’ve done thus far, it seems like it’s not in fact going to be necessary to change the spec sources at all","msgtype":"m.text"},"ts":1624971186267,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$0NTySWaytkfYnk_7fRjc8OchQ9rBRCai310KSU1D4Ck"},
{"content":{"body":"Hm, wiki.whatwg.org still links to IRC if you're not logged in","msgtype":"m.text"},"ts":1624974093901,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE"},
{"content":{"body":"> <@ms2ger:igalia.com> Hm, wiki.whatwg.org still links to IRC if you're not logged in\n\nOh, interesting, I probably messed up the caching config. Thank you for finding that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ms2ger:igalia.com\">@ms2ger:igalia.com</a><br>Hm, wiki.whatwg.org still links to IRC if you&#39;re not logged in</blockquote></mx-reply>Oh, interesting, I probably messed up the caching config. Thank you for finding that.","m.relates_to":{"m.in_reply_to":{"event_id":"$RQswhIe3XSrHAy_SdarZQXNaV0_-_tBHd-HDIrSmCuE"}},"msgtype":"m.text"},"ts":1624978805179,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> basically, for domintro sections, it causes Bikeshed to output `-dev`-suffixed IDs in the same way as we do for the HTML spec\n\nThis seems really cool and elegant!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>basically, for domintro sections, it causes Bikeshed to output <code>-dev</code>-suffixed IDs in the same way as we do for the HTML spec</blockquote></mx-reply>This seems really cool and elegant!","m.relates_to":{"m.in_reply_to":{"event_id":"$KVA3o7U4m3jbHqmqX-dEslxXfmOqA6Ty7mg_KzKQYUQ"}},"msgtype":"m.text"},"ts":1624979100813,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mprd-J4vMpOjEbipVbUsp39wJJ8giP7KKNdr0kUitow"},
{"content":{"body":"we’ll see what tabatkins thinks of it","format":"org.matrix.custom.html","formatted_body":"we’ll see what <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">tabatkins</a> thinks of it","msgtype":"m.text"},"ts":1624979144961,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$GipN0u-yRMraRYVg3eLjqXpVXspqUmPzyoRXUqqkJlU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Oh, interesting, I probably messed up the caching config. Thank you for finding that.\n\nCannot reproduce across a couple computers...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Oh, interesting, I probably messed up the caching config. Thank you for finding that.</blockquote></mx-reply>Cannot reproduce across a couple computers...","m.relates_to":{"m.in_reply_to":{"event_id":"$UfZ3ukrCFbrwp9I-t4o6M-irzZI9NhOEOJEWFy17IzI"}},"msgtype":"m.text"},"ts":1624979147448,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IP_rDWqXms3VLtUDvqUqzGNq-mxmAyuyAG0q-hcwaYs"},
{"content":{"body":"Oh, that message, I thought you meant the sidebar or homepage links","msgtype":"m.text"},"ts":1624981754725,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IampUAMqRvxkqXhugm8udmPbU7kCbUCefEllboQ7YoM"},
{"content":{"body":"I fixed https://wiki.whatwg.org/wiki/MediaWiki:Anonnotice but now I think there's some caching issue...","msgtype":"m.text"},"ts":1624981948638,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$zFd3pr1Q1AElkHRzimgjEgq47PJNXCCPyVoLeKyPVnU"},
{"content":{"body":"`?action=purge` fixes it, thanks","format":"org.matrix.custom.html","formatted_body":"<code>?action=purge</code> fixes it, thanks","msgtype":"m.text"},"ts":1624982087883,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$u6A-zeS4iMRVTDiJ5J7FGzLb_lGpVTJe47WDV9Y-70k"},
{"content":{"body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard i","format":"org.matrix.custom.html","formatted_body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard i","msgtype":"m.text"},"ts":1624984343497,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KHdvBTVrdED1Dz9jz6UVUnaDJ-PY2-esEna9DrYlqjE"},
{"content":{"body":" * does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","format":"org.matrix.custom.html","formatted_body":" * does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","m.new_content":{"body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like `TextEncoder.encode('string')`? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","format":"org.matrix.custom.html","formatted_body":"does anyone know how the TextEncoder interface came to be so... java-y, instead of just like <code>TextEncoder.encode('string')</code>? I think that every single time I have ever constructed a TextEncoder or TextDecoder it has been to invoke a single method on the new instance and then discard it","msgtype":"m.text"},"m.relates_to":{"event_id":"$KHdvBTVrdED1Dz9jz6UVUnaDJ-PY2-esEna9DrYlqjE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624984350793,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bW6L5gfFPhdYTHxkU8gEDQ6XZ0bGjqHCje1bBDqidQg"},
{"content":{"body":"bakkot I assume to mirror the decoder interface which is stateful because it is capable of streaming? It would be nice to have a static method on `TextEncoder` / `TextDecoder` for single use encoding...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> I assume to mirror the decoder interface which is stateful because it is capable of streaming? It would be nice to have a static method on <code>TextEncoder</code> / <code>TextDecoder</code> for single use encoding...","msgtype":"m.text"},"ts":1624984634972,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$9iL0eFIqSEke4RicQocs7MiGmFqzTAHRqrOdURbjzDg"},
{"content":{"body":"bleh. the stream transformer usage is fundamentally pretty different, it seems a shame they were conflated in TextEncoder","msgtype":"m.text"},"ts":1624989500662,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cbqlxJC9aDQ61WPTAaXH5kdT6DMwbxHnRzJspaDk56c"},
{"content":{"body":"ah well","msgtype":"m.text"},"ts":1624989501507,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Lz1SF70zzIai1pQf5fOZ3Ns6EHxovVjctQUbwDXPqQI"},
{"content":{"body":"+1 to a static method. A bit dangerous people will use a sequence of static method calls when they should use the stateful instance, but probably worth it on the balance.","msgtype":"m.text"},"ts":1624995206480,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$4h2C83NZockxulM2_JnC-tKBrKd6DPZijBFwo4uqLQM"},
{"content":{"body":"I'll open a spec issue","msgtype":"m.text"},"ts":1624995509713,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$RuQyAUScpMnBXJOPiI4Uq-gjlnhc44iZ-gHYPbDXgX0"},
{"content":{"body":"https://github.com/whatwg/encoding/issues/267","msgtype":"m.text"},"ts":1624996158240,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1NzkUpCLXwkyKGPJ8E7sSE9AFaqqs3Y1EDjmMiNN6IY"},
{"content":{"body":"> <@domenicdenicola:matrix.org> +1 to a static method. A bit dangerous people will use a sequence of static method calls when they should use the stateful instance, but probably worth it on the balance.\n\nis the instance actually stateful in any way other than holding onto its options bag?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$4h2C83NZockxulM2_JnC-tKBrKd6DPZijBFwo4uqLQM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>+1 to a static method. A bit dangerous people will use a sequence of static method calls when they should use the stateful instance, but probably worth it on the balance.</blockquote></mx-reply>is the instance actually stateful in any way other than holding onto its options bag?","m.relates_to":{"m.in_reply_to":{"event_id":"$4h2C83NZockxulM2_JnC-tKBrKd6DPZijBFwo4uqLQM"}},"msgtype":"m.text"},"ts":1625005564141,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TQmKMR6btXiHefup4aHXKwssBgCZKQWfwHuNGhAfnM4"},
{"content":{"body":"Yes it can hold half of a surrogate pair","msgtype":"m.text"},"ts":1625005595594,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$R4dk1CpeP_N5OmI-20ICCAiLn26sIkEXVtJ6MdEeLcY"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yes it can hold half of a surrogate pair\n\nNo, `TextEncoder` doesn't have a streaming mode","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$R4dk1CpeP_N5OmI-20ICCAiLn26sIkEXVtJ6MdEeLcY?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yes it can hold half of a surrogate pair</blockquote></mx-reply>No, <code>TextEncoder</code> doesn't have a streaming mode","m.relates_to":{"m.in_reply_to":{"event_id":"$R4dk1CpeP_N5OmI-20ICCAiLn26sIkEXVtJ6MdEeLcY"}},"msgtype":"m.text"},"ts":1625005640554,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$_Lt-HdZ1czwKEYDfvfYn-PUiH-Fr_ZHV06oFndqoPJA"},
{"content":{"body":"`TextDecoder` does keep the decoder state in streaming mode though","format":"org.matrix.custom.html","formatted_body":"<code>TextDecoder</code> does keep the decoder state in streaming mode though","msgtype":"m.text"},"ts":1625005655412,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$ZikmO_LLDQc0kVmrlTzQTVFzdioFjgKp6CRk3rEbnz0"},
{"content":{"body":"That's `TextDecoderStream`, right?","format":"org.matrix.custom.html","formatted_body":"That's <code>TextDecoderStream</code>, right?","msgtype":"m.text"},"ts":1625005683688,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eSi1G_TsJccWPTQ_DDoprHjwWyPV7GHzB3_tiW43Qv8"},
{"content":{"body":"not actually `TextDecoder` itself?","format":"org.matrix.custom.html","formatted_body":"not actually <code>TextDecoder</code> itself?","msgtype":"m.text"},"ts":1625005688272,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$h9-C3g-prtq89mo8J9VX1aHMX2WW8S1kFEBeI1PW4Tw"},
{"content":{"body":"TextDecoder itself","msgtype":"m.text"},"ts":1625005693724,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$O9JumZ71oPrToVNr2cfHH5NmqVmDlaMeOckewfXpGZk"},
{"content":{"body":"See the stream option on .decode ","format":"org.matrix.custom.html","formatted_body":"See the stream option on .decode","msgtype":"m.text"},"ts":1625005723644,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Uw6gmmyixZ0_1Os2USYfOjn_gEk9EAKcrHL5HbHfCIM"},
{"content":{"body":"The danger is people will think because it's safe with TextEncoder, it's safe with TextDecoder. Or they will just always use the static method with TextDecoder for one-shots (where it's OK) but then carry over that experience to use it for chunks of a larger byte stream (where it's not)","msgtype":"m.text"},"ts":1625005754783,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$T3ArvKsWkxlRsVgpTs725afw2U9tuxyBHqTJyUnydeA"},
{"content":{"body":"oh, right, I forgot the decoder is not the same as the encoder here","msgtype":"m.text"},"ts":1625005759801,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rQlw8YYX3GL4EpI13CfmJvaVfEdEeXOElUwB7cGDlHc"},
{"content":{"body":"i.e. `let str = \"\"; while (hasBytes()) { str += TextDecoder.decode(getBytes()); }` is very bad.","format":"org.matrix.custom.html","formatted_body":"i.e. <code>let str = &quot;&quot;; while (hasBytes()) { str += TextDecoder.decode(getBytes()); }</code> is very bad.","msgtype":"m.text"},"ts":1625005800104,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$f9V18Z5RKz1DxrmCKOV4XvMUuJ1u0lfWgbSVOyKrug0"},
{"content":{"body":"```js\nconst decoder = new TextDecoder();\nconsole.log(decoder.decode(new Uint8Array([0xC3]), {stream: true})); // \"\"\nconsole.log(decoder.decode(new Uint8Array([0xA1])));  // \"á\"\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const decoder = new TextDecoder();\nconsole.log(decoder.decode(new Uint8Array([0xC3]), {stream: true})); // &quot;&quot;\nconsole.log(decoder.decode(new Uint8Array([0xA1])));  // &quot;á&quot;\n</code></pre>\n","msgtype":"m.text"},"ts":1625005805326,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$EJGrCrmGZfu786jWS6Dpz0XzuO57okF8a2bfH2FGWe8"},
{"content":{"body":"> <@domenicdenicola:matrix.org> The danger is people will think because it's safe with TextEncoder, it's safe with TextDecoder. Or they will just always use the static method with TextDecoder for one-shots (where it's OK) but then carry over that experience to use it for chunks of a larger byte stream (where it's not)\n\nFeel like we already have this though as stream: true is not the default.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24T3ArvKsWkxlRsVgpTs725afw2U9tuxyBHqTJyUnydeA\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>The danger is people will think because it's safe with TextEncoder, it's safe with TextDecoder. Or they will just always use the static method with TextDecoder for one-shots (where it's OK) but then carry over that experience to use it for chunks of a larger byte stream (where it's not)</blockquote></mx-reply>Feel like we already have this though as stream: true is not the default.","m.relates_to":{"m.in_reply_to":{"event_id":"$T3ArvKsWkxlRsVgpTs725afw2U9tuxyBHqTJyUnydeA"}},"msgtype":"m.text"},"ts":1625005819602,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$CB55U5dR4QCS4nQliFPz0gxJrKHse5Vk0HcY6OWOZcc"},
{"content":{"body":"Yeah fair point","msgtype":"m.text"},"ts":1625005827355,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$SVWTdCj5ISpFE_tnJblXq-INhLENlCkbqUPmzAkeLjM"},
{"content":{"body":"People should just use the whatwg stream variant anyway 🙃","msgtype":"m.text"},"ts":1625005850502,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$sjX8ZCX5JtCsyCP_cLN5n_z2XwyFxRF4q8J3-zJY-rc"},
{"content":{"body":"(Cough cough Firefox)","msgtype":"m.text"},"ts":1625005899265,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$KOmy6r72ZYH8iz5ieALgoXDbUoDMoPIvLjxnrZFLAJE"},
{"content":{"body":"manually feeding items to a stream is a bit annoying IIRC","msgtype":"m.text"},"ts":1625006104418,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dIJfIKh4ti5a-EMZt60w1RqNDMQ_-HGAmZb_oN_9XjE"},
{"content":{"body":"but yeah does seem like using a stream for that case seems better than having a `stream` option","format":"org.matrix.custom.html","formatted_body":"but yeah does seem like using a stream for that case seems better than having a <code>stream</code> option","msgtype":"m.text"},"ts":1625006123578,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OwFd9ENql7YUB90zuKW4tfrpwTVL366SPQqmpvqgwYM"},
{"content":{"body":"> <@bakkot:matrix.org> manually feeding items to a stream is a bit annoying IIRC\n\nTextDecoderStream is a TransformStream style API with a readable and writable, so should be as easy as `writable.write(chunk)`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24dIJfIKh4ti5a-EMZt60w1RqNDMQ_-HGAmZb_oN_9XjE\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>manually feeding items to a stream is a bit annoying IIRC</blockquote></mx-reply>TextDecoderStream is a TransformStream style API with a readable and writable, so should be as easy as <code>writable.write(chunk)</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$dIJfIKh4ti5a-EMZt60w1RqNDMQ_-HGAmZb_oN_9XjE"}},"msgtype":"m.text"},"ts":1625006237770,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$GshKa_VPQUaXEk6Ew8mYgHZMkgjtsDDY6yFqSPDtYcM"},
{"content":{"body":"Or if you already have a ReadableStream (for example a fetch response body or Blob) you can just call .pipeThrough on it 🙂 ","format":"org.matrix.custom.html","formatted_body":"Or if you already have a ReadableStream (for example a fetch response body or Blob) you can just call .pipeThrough on it 🙂","msgtype":"m.text"},"ts":1625006332866,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$0L_IbxBqysmUzrQ2HH_ICDUsvjoelFdIDZXc80YPRIY"},
{"content":{"body":"```js\n> (new TextDecoderStream).write\nundefined\n```\nhmmmm nope","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">&gt; (new TextDecoderStream).write\nundefined\n</code></pre>\n<p>hmmmm nope</p>\n","msgtype":"m.text"},"ts":1625006367882,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gsiXaTRmAdAfS0xvaftmvsB9dXPU99135fBxUmoDW40"},
{"content":{"body":"well, right, if you have streams already gluing them together is pretty easy, but I rarely do","msgtype":"m.text"},"ts":1625006382060,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Zna-CKnXDgUmhgjHr0yHlURXHRmTWeYCMfkCsNb9xz8"},
{"content":{"body":"new TextDecoderStream().writable.write","msgtype":"m.text"},"ts":1625006397276,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$4-gmm2arsyyWANwMKoQK2PjF3fDFLLEAauTATUXtjWY"}
]