[
{"content":{"body":"i'm looking at the wpt test data for URLs, and i'm a little confused by https://github.com/web-platform-tests/wpt/blob/master/url/resources/urltestdata.json#L4725","msgtype":"m.text"},"ts":1691200127643,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$SiG9hhR1QNta0q46SuNSy6ib57k5qV0-FLDdyccAiUo"},
{"content":{"body":"\\uD800 \\uD801 isn't a valid surrogate pair, so what exactly is meant by this particular input?","format":"org.matrix.custom.html","formatted_body":"\\uD800 \\uD801 isn't a valid surrogate pair, so what exactly is meant by this particular input?","msgtype":"m.text"},"ts":1691200155481,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$T-7Kydcn7M9yhvx1YFYLPBm-YWOEIJjTfWG_-u0Iy0I"},
{"content":{"body":"my json parser chokes on it, understandably","msgtype":"m.text"},"ts":1691200168165,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$WtucfVir8dTFVabhMR-vzF3bJTcvL-nHJQTSK-ZvGKM"},
{"content":{"body":"What is meant is to test what the URL parser does on invalid surrogate pairs","msgtype":"m.text"},"ts":1691217683977,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mJkwGb8Z_GLuWrftCQBW9dxACtH4VRJg0yTri5qtpT8"},
{"content":{"body":"The algorithm handles them just fine (since it operates on strings, which are sequences of 16-bit code units, including invalid surrogates)","msgtype":"m.text"},"ts":1691217708691,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Dlxx1geSD-uyhGVKD18TMPoV6roTW4E3sll6MYFNYrY"},
{"content":{"body":"I'm sure the URL parser handles it fine, but I think this is invalid JSON","msgtype":"m.text"},"ts":1691220239027,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$ZRhDIVL22n9PD-LIGxeKHNEjo_NUZIgZU8kMLcZP6Uk"},
{"content":{"body":"will need to dig up a parser that I can tell to ignore invalid surrogate pairs","msgtype":"m.text"},"ts":1691220332474,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$kEuojVIIliOs9pVuEDFuZOZGhSHp479N1zKnOj6iGkM"},
{"content":{"body":"* will need to dig up a JSON parser that I can tell to ignore invalid surrogate pairs","m.new_content":{"body":"will need to dig up a JSON parser that I can tell to ignore invalid surrogate pairs","msgtype":"m.text"},"m.relates_to":{"event_id":"$kEuojVIIliOs9pVuEDFuZOZGhSHp479N1zKnOj6iGkM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1691220351781,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$ly7E9h2NeOUHt3W7e-LSqCDnrLyHcIzWM54Knp7UJt0"},
{"content":{"body":"JSON.parse() works fine on it","msgtype":"m.text"},"ts":1691224490074,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$8FXl8x3MSYssKokqoxD7WwJSiRpxlVHixpBWORg8dvM"},
{"content":{"body":"`\"\\uD800\\uD801\"` is valid JSON but not guaranteed to be interoperable (especially if the decoder is in a language that internally uses UTF-8 for strings), cf. https://www.rfc-editor.org/rfc/rfc8259#section-8.2\n> However, the ABNF in this specification allows member names and string values to contain bit sequences that cannot encode Unicode characters; for example, \"\\uDEAD\" (a single unpaired UTF-16 surrogate)… The behavior of software that receives JSON texts containing such values is unpredictable; for example, implementations might return different values for the length of a string value or even suffer fatal runtime exceptions.","format":"org.matrix.custom.html","formatted_body":"<p><code>\"\\uD800\\uD801\"</code> is valid JSON but not guaranteed to be interoperable (especially if the decoder is in a language that internally uses UTF-8 for strings), cf. https://www.rfc-editor.org/rfc/rfc8259#section-8.2</p>\n<blockquote>\n<p>However, the ABNF in this specification allows member names and string values to contain bit sequences that cannot encode Unicode characters; for example, \"\\uDEAD\" (a single unpaired UTF-16 surrogate)… The behavior of software that receives JSON texts containing such values is unpredictable; for example, implementations might return different values for the length of a string value or even suffer fatal runtime exceptions.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1691246048851,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$d9vHLTMujGN_lhktyKdqGRFgsTnKGwY924Gq3JbRpic"}
]