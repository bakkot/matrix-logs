[
{"content":{"body":"> <@annevk:matrix.org> or even _String type_ vs String\n\nIn ES, <dfn>'s CSS is italics.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$dTV_7QJj36ZJX10_Aqt7E_N5nvtCN4B0bq9GNWkBkTE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>or even <em>String type</em> vs String</blockquote></mx-reply>In ES, &lt;dfn&gt;'s CSS is italics.","m.relates_to":{"m.in_reply_to":{"event_id":"$dTV_7QJj36ZJX10_Aqt7E_N5nvtCN4B0bq9GNWkBkTE"}},"msgtype":"m.text"},"ts":1685664743289,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$b5Rme6KBJiyfR2bHFKKANntVRhLEorDQODSYJq1BjwA"},
{"content":{"body":"Domenic: fair. I think I still can't use the typedefs though because that would not obviously allow for resizable buffers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: fair. I think I still can't use the typedefs though because that would not obviously allow for resizable buffers","msgtype":"m.text"},"ts":1685688354607,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$osmbQo3BMnn3JiufAtRG7bMDjmgMOwhY34dC5NyGhqw"},
{"content":{"body":"Domenic: I guess I should just introduce some terms for the \"values\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I guess I should just introduce some terms for the &quot;values&quot;","msgtype":"m.text"},"ts":1685688432187,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yWUM0D2wkg3NTrt0UMN9mcLd2PpXr42uGYb7vy2YEFY"},
{"content":{"body":"Or just say \"an instance of one of the buffer source types\"","msgtype":"m.text"},"ts":1685688442316,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qUwGkvInFzn6DXNlOLHgV9MJtxbz01caQ-FS1e_f484"},
{"content":{"body":"Or define new typedefs if they're useful","msgtype":"m.text"},"ts":1685688450621,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ZCq6wSLy7tvZizfdsXVAn06K4HUBOIemRx7dHNFZld0"},
{"content":{"body":"Actually I'm not sure what's wrong with the typedefs...","msgtype":"m.text"},"ts":1685688480625,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$WJlu_ZgyWSbhuutMKw9-b9Qs2e3SxIEH8SSOa0xsF2M"},
{"content":{"body":"> To create one of the buffer view types from a byte sequence bytes in a realm realm:\n\nHere \"buffer view types\" links to a dfn that says it's DataView + Uint8Array + ...","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>To create one of the buffer view types from a byte sequence bytes in a realm realm:</p>\n</blockquote>\n<p>Here &quot;buffer view types&quot; links to a dfn that says it's DataView + Uint8Array + ...</p>\n","msgtype":"m.text"},"ts":1685688512728,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9GuOUYgTibN_hTJR7VrY14N7Es2LcXHCI7M-T-JujkY"},
{"content":{"body":"But we already have a typedef for that: ArrayBufferView","msgtype":"m.text"},"ts":1685688530325,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Pi8Q_PoKuhoz1S0n2SXeQ4VbRHX6YpG5WbFyWQwph3M"},
{"content":{"body":"I'm not saying my current wording works with my new understanding of types, but https://webidl.spec.whatwg.org/#AllowResizable suggests it creates a new IDL type","msgtype":"m.text"},"ts":1685688585269,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$nHruKb2b4h2M_IYBsoZB-H7axZqe7YuxQOjnLN78JWQ"},
{"content":{"body":"Yeah, I guess the question is whether the \"create\" algorithm is meant to allow creating resizable ABs etc.","msgtype":"m.text"},"ts":1685688650145,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Mpl6SilyE6Xpna9wg9XsbMXqVGaEmYuHlDjTlHbGuPk"},
{"content":{"body":"But presumably some of them are","msgtype":"m.text"},"ts":1685688656946,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$YXs7Xt1horr-ncV4oMno-FNtusCf4APRkFbN79eFs9g"},
{"content":{"body":"E.g. \"byte length\"","msgtype":"m.text"},"ts":1685688676744,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$t4eErOND5nnTjfsh8xdqRcoNEusINzeRRDe8gvoWudg"},
{"content":{"body":"So for \"byte length\" could you use `AllowSharedBufferSource`?","format":"org.matrix.custom.html","formatted_body":"So for &quot;byte length&quot; could you use <code>AllowSharedBufferSource</code>?","msgtype":"m.text"},"ts":1685688690739,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_i6ZMF4LsqiCneovUIeh5a-5S-Ay-IjIxAzot9R2qVo"},
{"content":{"body":"That still doesn't include AllowResizable","msgtype":"m.text"},"ts":1685688704290,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$MBjjhiUXnfKZakWqqPqqDDwB5bDdPl76HrqO4mhw3OQ"},
{"content":{"body":"Got it","msgtype":"m.text"},"ts":1685688714594,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$6_og9msiZPREh6fHjyoLaA9dL5NSueN91wc2M7IRQes"},
{"content":{"body":"So, preexisting issue","msgtype":"m.text"},"ts":1685688718198,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IPhnkhtpZlH0gMSYM8kzDPX2CYn-ST8huwOXqUEHg2c"},
{"content":{"body":"I guess you have to say \"annotated type whose inner type is...\" and then you have to use \"instance\" because you're in type-land","msgtype":"m.text"},"ts":1685688762025,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7PmAxBcomD4AqhF5XhkmRzau4-UcdLaBrbBSqNYK7Ws"},
{"content":{"body":"Yeah I suppose, WebKit doesn't seem to have AllowResizable","msgtype":"m.text"},"ts":1685688763162,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rseU2_4NIE48w2F2qTwQfDC-O1Ld_tm_9-lt1d0Ozi8"},
{"content":{"body":"Domenic: that doesn't help with `for` though","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: that doesn't help with <code>for</code> though","msgtype":"m.text"},"ts":1685688780273,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$-tV2PpAhD8FZG7PKFkRH7wLT6tVOWYPTWl3tiU-pRqU"},
{"content":{"body":"I think having `for` not be rigorous is OK","format":"org.matrix.custom.html","formatted_body":"I think having <code>for</code> not be rigorous is OK","msgtype":"m.text"},"ts":1685688803440,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$6_VPcYzeC1F_PrV6L0bWmZVdMbT5vYXAz6qZ5XmhzTM"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1685688810552,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$FNibdCasiVVRr7v5WT9W3MqC6AUUcSzdr_I10NJoRxw"},
{"content":{"body":"Making people type `[=[AllowResizable] Uint8Array/byte length=]` instead of `[=Uint8Array/byte length=]` seems unnecessary, even if they're technically operating on a value whose type is `[AllowResizable] Uint8Array`","format":"org.matrix.custom.html","formatted_body":"Making people type <code>[=[AllowResizable] Uint8Array/byte length=]</code> instead of <code>[=Uint8Array/byte length=]</code> seems unnecessary, even if they're technically operating on a value whose type is <code>[AllowResizable] Uint8Array</code>","msgtype":"m.text"},"ts":1685688865666,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Io1aUvBM7DENWswuVS0rM7vtCuetzEh4jQ_d14hcDNQ"},
{"content":{"body":"We could define `InclusiveAllowSharedBufferSource` I suppose, hmm","format":"org.matrix.custom.html","formatted_body":"We could define <code>InclusiveAllowSharedBufferSource</code> I suppose, hmm","msgtype":"m.text"},"ts":1685688920565,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9145iZhUFIFTNAa34kuJ1kDIeRuBzt9O8yYDZjtA1W0"},
{"content":{"body":"Well I would expect something like \"buffer objects/byte length\" maybe","msgtype":"m.text"},"ts":1685688939485,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$PlVZHpr30JeLDovlZZ6EzHAOySEnh5TT9nZ9hthWAs8"},
{"content":{"body":"But I could live with not fixing it, certainly less to fix downstream","msgtype":"m.text"},"ts":1685688953574,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$KLyaKawsg4TGICyzPcKjsbo4ZFq5vuCGxxfR-DW9oBw"},
{"content":{"body":"It's true we probably do need a typedef that includes [AllowResizable]","msgtype":"m.text"},"ts":1685688969861,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$H7zcO8Uy7TY53Cn-zL06DDV04P4lvdf-98VzqmPFYKs"},
{"content":{"body":"Is anyone using [AllowResizable]? Hmm.","msgtype":"m.text"},"ts":1685688979745,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$bZ398-fU-ftQ840bWewDFGmwbGg5aJnoTiGwc4sAAzk"},
{"content":{"body":"WebDex says no https://dontcallmedom.github.io/webdex/a.html#AllowResizable%40%40%40%40extended-attribute","msgtype":"m.text"},"ts":1685688993280,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$A-VkS2ZbGTIXoEV1BMBRQfq7ZLmHLZTfTzO70E-FQ-I"},
{"content":{"body":"But yeah it seems likely anyone who did use it would quickly want a typedef","msgtype":"m.text"},"ts":1685689007316,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$NbOg4lGZlAi5TtoAo5FtlcOWBAlBCMlU_rpp3u-AAM4"},
{"content":{"body":"Either AllowResizableBufferSource or AllowSharedAndResizableBufferSource","msgtype":"m.text"},"ts":1685689020895,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gOcHrxMcE6fN5eWLmBeexFunLUOZfn1Pors6jehzNi8"},
{"content":{"body":"(shared and resizable = growable, I guess??)","msgtype":"m.text"},"ts":1685689036680,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2sU4IcigjVZlCVJlKdkQA3IlsGXzIkVKbTwzGYH5hNU"},
{"content":{"body":"Domenic: yeah maybe, I don't really know what kind of operations you need with resizable, perhaps we should wait until someone actually attempts to do it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: yeah maybe, I don't really know what kind of operations you need with resizable, perhaps we should wait until someone actually attempts to do it","msgtype":"m.text"},"ts":1685689626252,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$s8R7b1MkvEQW5RYjQGQec0jdl4NjPSExZGpPSrShwMw"},
{"content":{"body":"Yeah fair enough","msgtype":"m.text"},"ts":1685689636768,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DHZ4HwDDO70yHoKR4kFdnbHt1e-3JRcDGi5dubqNUjg"},
{"content":{"body":"Domenic: I guess I'll restore the existing `for` attributes and such and file a follow-up issue","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I guess I'll restore the existing <code>for</code> attributes and such and file a follow-up issue","msgtype":"m.text"},"ts":1685689678652,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$7usaYpvzmoZQqM0IpgiWxL4ZV0SaRA_lJtx9PFUQdMs"},
{"content":{"body":"zcorpan: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:\n\n- the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s to first commit at https://github.com/validator/htmlparser/pull/30/commits\n- as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82\n- the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243\n- so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:</p>\n<ul>\n<li>the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s to first commit at https://github.com/validator/htmlparser/pull/30/commits</li>\n<li>as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82</li>\n<li>the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243</li>\n<li>so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced</li>\n</ul>\n","msgtype":"m.text"},"ts":1685705353141,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$OlZ7vFh9XZBVHDsVE0PjCkXpNXdDh_NFUrH1SEUKMh4"},
{"content":{"body":"Are there emcascript type IDL definitions or in another machine readable format? im working on some bindings to another language and would rather not have to manually write it all out","msgtype":"m.text"},"ts":1685708077666,"senderName":"Zomatree","senderId":"@zomatree0:matrix.org","id":"$6FLGIfu6-F03AskeZP7FYRJOTXlrUgjmki7tx0ezX1E"},
{"content":{"body":"Zomatree: TypeScript has those, maybe?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zomatree0:matrix.org\">Zomatree</a>: TypeScript has those, maybe?","msgtype":"m.text"},"ts":1685708809318,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$R-vA9GHzhsAnLRhIGFBgYYLvTxceIJGPcuJMubuMtp4"},
{"content":{"body":"parsing ts types would be a nightmare with how complex the type system is","msgtype":"m.text"},"ts":1685708995363,"senderName":"Zomatree","senderId":"@zomatree0:matrix.org","id":"$9nocQA5leQeaky09gX2i4UwNki3EF5hu7t5GraRXEA4"},
{"content":{"body":"sideshowbarker: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge","msgtype":"m.text"},"ts":1685709588598,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1s3zn1kfZO9VrTOwN5SWR3ujPal8Z8zAFTddf-HFduw"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge\n\nLooking now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$1s3zn1kfZO9VrTOwN5SWR3ujPal8Z8zAFTddf-HFduw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge</blockquote></mx-reply>Looking now","m.relates_to":{"m.in_reply_to":{"event_id":"$1s3zn1kfZO9VrTOwN5SWR3ujPal8Z8zAFTddf-HFduw"}},"msgtype":"m.text"},"ts":1685710301293,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$yUeOCHRS1LLkY_yzL2jjKKypbDkG9FPXISkgQBQKgfo"},
{"content":{"body":"It's not exactly what you are looking for, but with https://github.com/es-meta/esmeta you can parse the ecmascript spec and extract type definitions from it","m.relates_to":{"event_id":"$6FLGIfu6-F03AskeZP7FYRJOTXlrUgjmki7tx0ezX1E","is_falling_back":true,"m.in_reply_to":{"event_id":"$6FLGIfu6-F03AskeZP7FYRJOTXlrUgjmki7tx0ezX1E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1685710444672,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RgUGaUkDhhcRPvOc5ufVJ_AZy_hl1EqWg9lvs0dm9LQ"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge\n\nQuick answer for now for here is: I think I am unliking to willingly implement this in the HTML Checker, because I think that on balance this restriction will end up wasting more time of HTML developer-authors than it helps others. Use cases for `summary` are very different from use cases for `button`.\n\nFor one thing, a `summary` often acts essentially as a title/heading, as far as its informational purposes go, rather than just its function. I understand and recognize the very-real accessibility problems with allowing it, and I am in no way dismissing those as being ignorable and unimportant.  But in this particular very special case, I do not judge the accessibility problems to be sufficient to merit the restriction being implemented in the HTML checker.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$1s3zn1kfZO9VrTOwN5SWR3ujPal8Z8zAFTddf-HFduw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: if you're still around, does https://github.com/whatwg/html/pull/9372 look good to you? I'll merge</blockquote></mx-reply><p>Quick answer for now for here is: I think I am unliking to willingly implement this in the HTML Checker, because I think that on balance this restriction will end up wasting more time of HTML developer-authors than it helps others. Use cases for <code>summary</code> are very different from use cases for <code>button</code>.</p>\n<p>For one thing, a <code>summary</code> often acts essentially as a title/heading, as far as its informational purposes go, rather than just its function. I understand and recognize the very-real accessibility problems with allowing it, and I am in no way dismissing those as being ignorable and unimportant.  But in this particular very special case, I do not judge the accessibility problems to be sufficient to merit the restriction being implemented in the HTML checker.</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$1s3zn1kfZO9VrTOwN5SWR3ujPal8Z8zAFTddf-HFduw"}},"msgtype":"m.text"},"ts":1685710838057,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$M0nmHqWGhvvR4knlYh3ylWiZ6wk9Ib50Lm4UinAQYTA"},
{"content":{"body":"Incidentally, all that said, I would have sworn that the spec previously already this restriction (and I had been already intentionally not implementing it), and I so I am a bit surprised to discover that the spec has actually not had this restriction, and this PR is needed to add it.","msgtype":"m.text"},"ts":1685710942349,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$eUErZ_BJ1iArPqvFNzzWfORTs-Wn1C5KufzlnR59PmY"},
{"content":{"body":"I need to make time to go back and figure out _why_ I had thought this restriction was already in the spec.","format":"org.matrix.custom.html","formatted_body":"I need to make time to go back and figure out <em>why</em> I had thought this restriction was already in the spec.","msgtype":"m.text"},"ts":1685710977830,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$BylBMRCFWCF__aqs3AWFmrCUbRhdz7RMZEsACNV2qNs"},
{"content":{"body":"Alright, if you could put your concerns in the issue or PR that would be good. If it's not going to be enforced there's no real reason to make the change.","msgtype":"m.text"},"ts":1685711013867,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$obAzYZohoqYarl7A_raQk42kS_F56R4Gl-u6ONPvcLs"},
{"content":{"body":"Well I may really be in the wrong side of this","msgtype":"m.text"},"ts":1685711033063,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$9u-EHiaPYPa4hJemdjpd3w0O0Hg_19nEeFuItkU47Cs"},
{"content":{"body":"Or at least it warrants some further discussion I think","msgtype":"m.text"},"ts":1685711036869,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sZ5gLWq83w_GlPQQnfu0WrEkrsItJScCzGVgdjsEgYk"},
{"content":{"body":"for sure","msgtype":"m.text"},"ts":1685711047522,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$r9A7peaw59ffumbFnftzjMdkhZLH-19HnFBwOk8CQxw"},
{"content":{"body":"and for now, I will put the comments into the PR — and then find some time to look back through my stuff and try to see what had confused previously about this already being in the spec. I guess that’s moot/irrelevant anyway as far as this PR goes — but it’s just I feel unsettled about not being able to remember yet why I had this apparent misapprehension so far, about this being in the spec already","msgtype":"m.text"},"ts":1685711191657,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Q-VY-dEgAQatrJTE7I2T2wvYSaNMPxQ4SvDo_WXZNwg"},
{"content":{"body":"thanks for the heads-up about the PR","msgtype":"m.text"},"ts":1685711206400,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$6AC2OE3WMRAiHxRfPU5joCJrunsLoI8d8UrjoFFaTTU"},
{"content":{"body":"I had actually seen notifications about that PR rolling by, but been lazy about not actually going to take a look and read the issue description","msgtype":"m.text"},"ts":1685711248121,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$JzDQJdnojVwdGXIgbPhMjfeoh5t22wLx_rHh749W_ds"},
{"content":{"body":"sideshowbarker: I just realized this would also outlaw WebKit's PR bot comments","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: I just realized this would also outlaw WebKit's PR bot comments","msgtype":"m.text"},"ts":1685716125104,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$exz8-JZbrlkYAvHGwK1vbDGzGEqErYXModBP7UU45mA"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: I just realized this would also outlaw WebKit's PR bot comments\n\nThere you go. I think there are many other existing uses that it would outlaw — all over the place. I think if we look, we could find plenty of them — because it’s actually a logical normal natural reasonable use case to anybody","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$exz8-JZbrlkYAvHGwK1vbDGzGEqErYXModBP7UU45mA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: I just realized this would also outlaw WebKit's PR bot comments</blockquote></mx-reply>There you go. I think there are many other existing uses that it would outlaw — all over the place. I think if we look, we could find plenty of them — because it’s actually a logical normal natural reasonable use case to anybody","m.relates_to":{"m.in_reply_to":{"event_id":"$exz8-JZbrlkYAvHGwK1vbDGzGEqErYXModBP7UU45mA"}},"msgtype":"m.text"},"ts":1685716321445,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$k6YRmI7q74eVOt2nKofXlOhywHX28KsDOP8-CUpgd4g"},
{"content":{"body":"I am recalling some of this, and what led me before to already having come to the the conclusion that I would not implement it","msgtype":"m.text"},"ts":1685716396454,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lnmDLdbiU60CCF5Q_NTFn-kCSniI8WeQliIo2Z0s9OI"},
{"content":{"body":" * I am recalling some of this, and what led me before to already having come to the conclusion that I would not implement it","m.new_content":{"body":"I am recalling some of this, and what led me before to already having come to the conclusion that I would not implement it","msgtype":"m.text"},"m.relates_to":{"event_id":"$lnmDLdbiU60CCF5Q_NTFn-kCSniI8WeQliIo2Z0s9OI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685716404624,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$fk7g-L56oJVJ08tjH1379v3MM2rued3-bQq3cUhekZw"},
{"content":{"body":"Yeah, this no longer seems like a good fix","msgtype":"m.text"},"ts":1685716406217,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$n_dfAiJ88-fyVRIanAyC83nd1HrJYRkwv5ASuuH9CHk"},
{"content":{"body":"I hope you did not provide pushback before and that was not conveyed to us this time around...","msgtype":"m.text"},"ts":1685716445568,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8SvDLY-fRYDwtaZwd7g1VcMJkSobHZuzU0CeHO5PsUQ"},
{"content":{"body":"Anyway, no harm done (and we could have always reverted had it been merged, although that would be somewhat bad)","msgtype":"m.text"},"ts":1685716503028,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$O9AhiWESls8LWbPYaJyjure87KJozWc7654beIHhB4Y"},
{"content":{"body":"Yeah — and I know when I say this that it’s a standard cop-out we have been accused of using since forever in discussions with the accessibility advocates — but it really seems like what needs to happen here is for the AT to be refined to provide the right UX for this","msgtype":"m.text"},"ts":1685716575627,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$L7x5RuxnxKUx66UFbfafGASeX-iePcleOZveHceTWy8"},
{"content":{"body":"I mean, it’s in the wild already being used very commonly for years","msgtype":"m.text"},"ts":1685716596542,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lnGzP2MIeS0v2-7SydKVYFk9oSw0ckRJcWQnn7smoVE"},
{"content":{"body":"And we know that developers are not going to change there existing stuff just because the HTML checker starts barking at them","msgtype":"m.text"},"ts":1685716631438,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$qVO--3PH_AD4WEVqZK1bT5gaa-o0B7khqWvcPJikHGw"},
{"content":{"body":" * And we know that many (or most) developers are not going to change their existing stuff just because the HTML checker starts barking at them","m.new_content":{"body":"And we know that many (or most) developers are not going to change their existing stuff just because the HTML checker starts barking at them","msgtype":"m.text"},"m.relates_to":{"event_id":"$qVO--3PH_AD4WEVqZK1bT5gaa-o0B7khqWvcPJikHGw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685716643183,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$aWPK7T4A5S-YnhMCyZkP31jm29tx8-gIjZcM9-QoHe8"},
{"content":{"body":"sideshowbarker: oops I was wrong, the WebKit PR bot doesn't put interactive content in `summary`, just in `details`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: oops I was wrong, the WebKit PR bot doesn't put interactive content in <code>summary</code>, just in <code>details</code>","msgtype":"m.text"},"ts":1685720847476,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$m7boQvtqPC_gFyTYypAHu6_aaCIqeDqWCHe0CMxalrU"},
{"content":{"body":"sideshowbarker: for `summary` it does seem less likely, but there are probably existing cases","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: for <code>summary</code> it does seem less likely, but there are probably existing cases","msgtype":"m.text"},"ts":1685720871264,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jgM33QEmhoj6d64MkY8DjJyG_kqQbhn2Pu0UUQlAugU"},
{"content":{"body":"Wait, why does the selector *|test serialize as test?","msgtype":"m.text"},"ts":1685722160887,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iGhnuqbVBCcA5crwhhPPmwkEFnnpDM3tcdtNyusf5jo"},
{"content":{"body":"I guess that's just how it works, unless you use @namespace it's all global","msgtype":"m.text"},"ts":1685723042290,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$coZ5RYe0u5UsiBRH4uHE9J1-oEbLAN84bzCsp43kh1o"},
{"content":{"body":"So there's no need for *|* if you don't have @namespace either, something to keep in mind for the \"global style sheet\" I suppose","format":"org.matrix.custom.html","formatted_body":"So there's no need for <em>|</em> if you don't have @namespace either, something to keep in mind for the &quot;global style sheet&quot; I suppose","msgtype":"m.text"},"ts":1685723071578,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iwfOY79JJPm5YF_mIN1aAoJkE6dafk_-ybwAd7DWiXU"},
{"content":{"body":" * So there's no need for `*|*` if you don't have @namespace either, something to keep in mind for the \"global style sheet\" I suppose","format":"org.matrix.custom.html","formatted_body":" * So there's no need for <code>*|*</code> if you don't have @namespace either, something to keep in mind for the &quot;global style sheet&quot; I suppose","m.new_content":{"body":"So there's no need for `*|*` if you don't have @namespace either, something to keep in mind for the \"global style sheet\" I suppose","format":"org.matrix.custom.html","formatted_body":"So there's no need for <code>*|*</code> if you don't have @namespace either, something to keep in mind for the &quot;global style sheet&quot; I suppose","msgtype":"m.text"},"m.relates_to":{"event_id":"$iwfOY79JJPm5YF_mIN1aAoJkE6dafk_-ybwAd7DWiXU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685723083670,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ABOB2fhY5xpjwAbThZ5b8ri3WVzKh6BhRxm6t3m0yYk"},
{"content":{"body":" * zcorpan: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:\n\n- the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s the first commit at https://github.com/validator/htmlparser/pull/30/commits\n- as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82\n- the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243\n- so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:</p>\n<ul>\n<li>the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s the first commit at https://github.com/validator/htmlparser/pull/30/commits</li>\n<li>as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82</li>\n<li>the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243</li>\n<li>so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced</li>\n</ul>\n","m.new_content":{"body":"zcorpan: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:\n\n- the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s the first commit at https://github.com/validator/htmlparser/pull/30/commits\n- as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82\n- the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243\n- so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: (and on the off chance there might be actually be any others here that care about the error-checking behavior of the vnu/mozilla HTML parser) Good news about my investigation of the fubarred behavior for error checking for ampersands is: From testing now, I can say:</p>\n<ul>\n<li>the relevant patch as I had originally written it myself (almost 3 years ago now) was actually passing all the tests; that’s the first commit at https://github.com/validator/htmlparser/pull/30/commits</li>\n<li>as Henri and I were reviewing my patch, we somewhere introduced the bug that caused the regression we only recently discovered we had — from it being reported in the issue at https://github.com/validator/htmlparser/issues/82</li>\n<li>the exact commit where we introduced the bug that caused the regression is https://github.com/validator/htmlparser/pull/30/commits/9814070b66f5d48f7798f97820fac14d36950243</li>\n<li>so I need to back at that commit in fine detail, and trace through it, and test changes to it to try to pinpoint exactly what part of it is where the regression bug was introduced</li>\n</ul>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$OlZ7vFh9XZBVHDsVE0PjCkXpNXdDh_NFUrH1SEUKMh4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685723879485,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$tq09FGSmSzaWwsw4buSj3VW7X0QWvJ1nEKh0EBkqA_8"},
{"content":{"body":"zcorpan: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa","msgtype":"m.text"},"ts":1685727477086,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$PoXiqtOlj2nSz4DoDPmkU9DE5jWYIrzU4_eOrGLw7Q0"},
{"content":{"body":"We just released Ada's website, as well as Rust, Python and Go clients. Appreciate any feedback from WHATWG. http://ada-url.com","msgtype":"m.text"},"ts":1685727521779,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$y0VHDExgTTSsFGCBaiEkj4Ag724wCmoX8Kq_NrnPCXg"},
{"content":{"body":"> <@etportis:matrix.org> zcorpan: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa\n\n(thinking through a new wrinkle, adding an example with height: auto...)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$PoXiqtOlj2nSz4DoDPmkU9DE5jWYIrzU4_eOrGLw7Q0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@etportis:matrix.org\">@etportis:matrix.org</a><br><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa</blockquote></mx-reply>(thinking through a new wrinkle, adding an example with height: auto...)","m.relates_to":{"m.in_reply_to":{"event_id":"$PoXiqtOlj2nSz4DoDPmkU9DE5jWYIrzU4_eOrGLw7Q0"}},"msgtype":"m.text"},"ts":1685727626747,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$qOseWujkyrOJXTuOtc12Xnit2a-XDGVPqG63PhBxt5U"},
{"content":{"body":"> <@etportis:matrix.org> zcorpan: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa\n\n * <del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$PoXiqtOlj2nSz4DoDPmkU9DE5jWYIrzU4_eOrGLw7Q0?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@etportis:matrix.org\">@etportis:matrix.org</a><br><a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: Trying to wrap my head around concrete object size ignoring natural dimensions. Is this correct? https://gist.github.com/eeeps/3b6c4b90f7275526534d5928a978fbaa</blockquote></mx-reply> * <del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me...","m.new_content":{"body":"<del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me...","format":"org.matrix.custom.html","formatted_body":"<del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me...","msgtype":"m.text"},"m.relates_to":{"event_id":"$qOseWujkyrOJXTuOtc12Xnit2a-XDGVPqG63PhBxt5U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685727945379,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$0VPS-v-R8W7o9-9e7znxEXD3h1wf-_nCO4xOfsbiLg8"},
{"content":{"body":" * <del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me... still curious to check my understanding of the two examples in the gist though","format":"org.matrix.custom.html","formatted_body":" * <del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me... still curious to check my understanding of the two examples in the gist though","m.new_content":{"body":"<del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me... still curious to check my understanding of the two examples in the gist though","format":"org.matrix.custom.html","formatted_body":"<del>(thinking through a new wrinkle, adding an example with height: auto...)</del> nevermind, I forgot how height:auto + width and height work, ignore me... still curious to check my understanding of the two examples in the gist though","msgtype":"m.text"},"m.relates_to":{"event_id":"$qOseWujkyrOJXTuOtc12Xnit2a-XDGVPqG63PhBxt5U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685727984598,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$8wOuko1QMeARYqsmBrrS85mjOiwIvd20S4n7aJET2wE"},
{"content":{"body":"Also, my reading of https://whatpr.org/html/8008/images.html#parsing-a-sizes-attribute is that once you've specified `loading=lazy`, an img will behave equivalently with or without `sizes=auto`. Aka lazy-loaded images get auto-sizes by default. Is that right?","format":"org.matrix.custom.html","formatted_body":"Also, my reading of https://whatpr.org/html/8008/images.html#parsing-a-sizes-attribute is that once you've specified <code>loading=lazy</code>, an img will behave equivalently with or without <code>sizes=auto</code>. Aka lazy-loaded images get auto-sizes by default. Is that right?","msgtype":"m.text"},"ts":1685728610479,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$Fw6NDVoFuV1OsiMg6OU6o25utw93W5hRNwdMMCsBons"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: for `summary` it does seem less likely, but there are probably existing cases\n\nOne concrete thing I can do that with give us some actual data ー though _aggregated_ data, as opposed to a list of sites ー is: I can add a use counter to the HTML checker, and then take a look at the number from that, after the counter has been in there for a few days","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$jgM33QEmhoj6d64MkY8DjJyG_kqQbhn2Pu0UUQlAugU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: for <code>summary</code> it does seem less likely, but there are probably existing cases</blockquote></mx-reply>One concrete thing I can do that with give us some actual data ー though <em>aggregated</em> data, as opposed to a list of sites ー is: I can add a use counter to the HTML checker, and then take a look at the number from that, after the counter has been in there for a few days","m.relates_to":{"m.in_reply_to":{"event_id":"$jgM33QEmhoj6d64MkY8DjJyG_kqQbhn2Pu0UUQlAugU"}},"msgtype":"m.text"},"ts":1685743183119,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$GYPsHNeijM4NW00eSxffGoMeG1rCYMK7fgGDrqluKN0"},
{"content":{"body":"That is, the counter will give us a percentage of sites which are using interactive content or tabindex inside `summary`","msgtype":"m.text"},"ts":1685743625566,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$hrs5gZSalm8xd1O7fQVBrVVE1g5011UKt_ZixvhAzFA"},
{"content":{"body":"...and in parallel to me adding that ice counter, zcorpan or somebody else here who's set up to run HTTPArchive queries can run one for this","format":"org.matrix.custom.html","formatted_body":"...and in parallel to me adding that ice counter, <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a> or somebody else here who's set up to run HTTPArchive queries can run one for this","msgtype":"m.text"},"ts":1685743747422,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7J-fdxoXRzpKyENZt8ZjvS3UpWTxVNSxle0ld80HVII"},
{"content":{"body":"* ...and in parallel to me adding that use counter, zcorpan or somebody else here who's set up to run HTTPArchive queries can run one for this","m.new_content":{"body":"...and in parallel to me adding that use counter, zcorpan or somebody else here who's set up to run HTTPArchive queries can run one for this","msgtype":"m.text"},"m.relates_to":{"event_id":"$7J-fdxoXRzpKyENZt8ZjvS3UpWTxVNSxle0ld80HVII","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1685743762675,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$EMvyTDR6qx7hGQskfkT4kinF7wuT4Ka76UHRWZhKfNo"},
{"content":{"body":"But separate still from both of those, it would be greatly helpful for somebody to try to create a list of existing widely-visited sites which are using it (interactive content or tabindex inside `summary`)","msgtype":"m.text"},"ts":1685743958764,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$1UlMWOEYgY1t-m4oNpHqA-x1LkBPM8O_eP3QSFyOZ-s"},
{"content":{"body":"Maybe Scott Ohara or Steve Faulkner already know of some big sites which are","msgtype":"m.text"},"ts":1685744075831,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_NfG9h5oyhNewT6IMrkyNBmqwg-00CyjmH4P5CKBCqM"}
]