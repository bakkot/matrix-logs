[
{"content":{"body":"Noam Rosenthal: I am fixing https://github.com/web-platform-tests/wpt/blob/cff0ff1898/resource-timing/SO-XO-SO-redirect-chain-tao.https.html#L56-L61 for Firefox. I wonder which redirect should cause the TAO check to fail? ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I am fixing https://github.com/web-platform-tests/wpt/blob/cff0ff1898/resource-timing/SO-XO-SO-redirect-chain-tao.https.html#L56-L61 for Firefox. I wonder which redirect should cause the TAO check to fail?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: I am fixing https://github.com/web-platform-tests/wpt/blob/cff0ff1898/resource-timing/SO-XO-SO-redirect-chain-tao.https.html#L56-L61 for Firefox. I wonder which redirect should cause the TAO check to fail? ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I am fixing https://github.com/web-platform-tests/wpt/blob/cff0ff1898/resource-timing/SO-XO-SO-redirect-chain-tao.https.html#L56-L61 for Firefox. I wonder which redirect should cause the TAO check to fail?","mimetype":"text/html"}]},"ts":1652410308268,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$VRSzoIKsiXz2biw3kXhxlfx9WiQKsQtCE1I0cRvXYmA"},
{"content":{"body":"is it because the last redirect from `cross-origin` to `same-origin`? ","format":"org.matrix.custom.html","formatted_body":"is it because the last redirect from <code>cross-origin</code> to <code>same-origin</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"is it because the last redirect from `cross-origin` to `same-origin`? ","mimetype":"text/plain"},{"body":"is it because the last redirect from <code>cross-origin</code> to <code>same-origin</code>?","mimetype":"text/html"}]},"ts":1652410386306,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$60v02idnGr6lIWcA6kzWmppuOomwtu08SecRqqPN7oQ"},
{"content":{"body":"I am asking because in Firefox, the TAO check is done by always againsting the origin that started the load ","msgtype":"m.text","org.matrix.msc1767.text":"I am asking because in Firefox, the TAO check is done by always againsting the origin that started the load "},"ts":1652410432072,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$J7TqyB0RTAszakaTgPLdmunC7TnQR8b7NecGIm7Pd-4"},
{"content":{"body":"which is probably wrong I guess. I am still not familiar with the FETCH spec, is it supposed to be done by against the current origin?  ","msgtype":"m.text","org.matrix.msc1767.text":"which is probably wrong I guess. I am still not familiar with the FETCH spec, is it supposed to be done by against the current origin?  "},"ts":1652410549423,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$vdwtqN1ZNrwi-M-YJUD1Oq8UQxK2NPqHZK6OJOM8OFk"},
{"content":{"body":"Does emitting the token happen regardless of the previous if-otherwise?","msgtype":"m.text","org.matrix.msc1767.text":"Does emitting the token happen regardless of the previous if-otherwise?"},"ts":1652410699883,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$cgrnk_c5RxUtKzYUVhfDFBqJMwErX-3i7491FR6-_Dk"},
{"content":{"body":" * Does emitting the token happen regardless of the previous if-otherwise?","m.new_content":{"body":"Does emitting the token happen regardless of the previous if-otherwise?","msgtype":"m.text","org.matrix.msc1767.text":"Does emitting the token happen regardless of the previous if-otherwise?"},"m.relates_to":{"event_id":"$cgrnk_c5RxUtKzYUVhfDFBqJMwErX-3i7491FR6-_Dk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Does emitting the token happen regardless of the previous if-otherwise?"},"ts":1652410721036,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$d6Jp6A2UIeInTUvzqgINniCAaAmtTznsZX5uUBJ8koY"},
{"content":{"body":"sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/html"}]},"ts":1652415625347,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Niml03p8T1ld7czeeAO_mSAwpclNwjogEFsZiFjIA2A"},
{"content":{"body":" * sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","m.new_content":{"body":"sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$Niml03p8T1ld7czeeAO_mSAwpclNwjogEFsZiFjIA2A","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to <code>null</code> (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.","mimetype":"text/html"}]},"ts":1652415647068,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$qAVdmxvwEC9dMUBRGc9Qd0LnnrlhyjObsqC6wXShkqo"},
{"content":{"body":"Andrew Williams: that's a very good question, I think it's closely related to https://github.com/whatwg/html/issues/5254","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@recvfrom:matrix.org\">Andrew Williams</a>: that's a very good question, I think it's closely related to https://github.com/whatwg/html/issues/5254","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Andrew Williams: that's a very good question, I think it's closely related to https://github.com/whatwg/html/issues/5254","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@recvfrom:matrix.org\">Andrew Williams</a>: that's a very good question, I think it's closely related to https://github.com/whatwg/html/issues/5254","mimetype":"text/html"}]},"ts":1652424995043,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$6brPuYO6GiXzUePrfCzqa4D1T5YD4U_7MulagQAhqhQ"},
{"content":{"body":"Andrew Williams: my inclination would be yes, as the entire chain is HTTPS","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@recvfrom:matrix.org\">Andrew Williams</a>: my inclination would be yes, as the entire chain is HTTPS","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Andrew Williams: my inclination would be yes, as the entire chain is HTTPS","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@recvfrom:matrix.org\">Andrew Williams</a>: my inclination would be yes, as the entire chain is HTTPS","mimetype":"text/html"}]},"ts":1652425032939,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DtTu15GNPROhJMpDJ5frdiB92SatjR8hDFxRyxyhRJ4"},
{"content":{"body":"It's somewhat unfortunate the entire world went with application/json rather than text/json.","msgtype":"m.text","org.matrix.msc1767.text":"It's somewhat unfortunate the entire world went with application/json rather than text/json."},"ts":1652425291629,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$_wEvE_ynOiYNaklLd2zM5sYrLInA5zB1-O4f-VpJAEY"},
{"content":{"body":"> <@everyos:matrix.org> Does emitting the token happen regardless of the previous if-otherwise?\n\nI'd read that as \"yes\". Maybe two paragraphs would be clearer","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cgrnk_c5RxUtKzYUVhfDFBqJMwErX-3i7491FR6-_Dk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@everyos:matrix.org\">@everyos:matrix.org</a><br>Does emitting the token happen regardless of the previous if-otherwise?</blockquote></mx-reply>I'd read that as &quot;yes&quot;. Maybe two paragraphs would be clearer","m.relates_to":{"m.in_reply_to":{"event_id":"$cgrnk_c5RxUtKzYUVhfDFBqJMwErX-3i7491FR6-_Dk"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@everyos:matrix.org> Does emitting the token happen regardless of the previous if-otherwise?\n\nI'd read that as \"yes\". Maybe two paragraphs would be clearer","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cgrnk_c5RxUtKzYUVhfDFBqJMwErX-3i7491FR6-_Dk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@everyos:matrix.org\">@everyos:matrix.org</a><br>Does emitting the token happen regardless of the previous if-otherwise?</blockquote></mx-reply>I'd read that as &quot;yes&quot;. Maybe two paragraphs would be clearer","mimetype":"text/html"}]},"ts":1652426383555,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$hAkfeXw6S2_K2MOgUHP9zuL-PDcl03BTX8n_nJaP0kk"},
{"content":{"body":"Ok. Thank you!","msgtype":"m.text"},"ts":1652446829584,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$XMQpycOXSttZLR5p2FCX3Z1KMHYoShM1MzkKlhZYl2Q"},
{"content":{"body":"Noam Rosenthal: thanks. So say have a `A->B->A` redirect chains, when should the tainted origin returns true?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: thanks. So say have a <code>A-&gt;B-&gt;A</code> redirect chains, when should the tainted origin returns true?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: thanks. So say have a `A->B->A` redirect chains, when should the tainted origin returns true?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: thanks. So say have a <code>A-&gt;B-&gt;A</code> redirect chains, when should the tainted origin returns true?","mimetype":"text/html"}]},"ts":1652456176556,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$PA6sEMo5m-_idboa2ZSxL-7Q3-uMIN4Bh5fezGas1-U"},
{"content":{"body":"the spec says `If url’s origin is not same origin with lastURL’s origin and request’s origin is not same origin with lastURL’s origin, then return true`","format":"org.matrix.custom.html","formatted_body":"the spec says <code>If url’s origin is not same origin with lastURL’s origin and request’s origin is not same origin with lastURL’s origin, then return true</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the spec says `If url’s origin is not same origin with lastURL’s origin and request’s origin is not same origin with lastURL’s origin, then return true`","mimetype":"text/plain"},{"body":"the spec says <code>If url’s origin is not same origin with lastURL’s origin and request’s origin is not same origin with lastURL’s origin, then return true</code>","mimetype":"text/html"}]},"ts":1652456189322,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$Z4WSGVoPWvG8Qv9gegRe6CzJC7K3CPW_pMzD6JLJ9YQ"},
{"content":{"body":"I'd assume we want it to return true when doing the`last redirect`, but doesn't `last redirect` which is A have the same origin as the `lastURL's origin`?","format":"org.matrix.custom.html","formatted_body":"I'd assume we want it to return true when doing the<code>last redirect</code>, but doesn't <code>last redirect</code> which is A have the same origin as the <code>lastURL's origin</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'd assume we want it to return true when doing the`last redirect`, but doesn't `last redirect` which is A have the same origin as the `lastURL's origin`?","mimetype":"text/plain"},{"body":"I'd assume we want it to return true when doing the<code>last redirect</code>, but doesn't <code>last redirect</code> which is A have the same origin as the <code>lastURL's origin</code>?","mimetype":"text/html"}]},"ts":1652456289153,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$R6bxjSRmqem9LSUWHbpHGyKnfYDx_ZX3hRObt8-SZ3w"},
{"content":{"body":"at this point, `url` is `B`, `lastURL` is `A`, and `request's origin` is 'A'","format":"org.matrix.custom.html","formatted_body":"at this point, <code>url</code> is <code>B</code>, <code>lastURL</code> is <code>A</code>, and <code>request's origin</code> is 'A'","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"at this point, `url` is `B`, `lastURL` is `A`, and `request's origin` is 'A'","mimetype":"text/plain"},{"body":"at this point, <code>url</code> is <code>B</code>, <code>lastURL</code> is <code>A</code>, and <code>request's origin</code> is 'A'","mimetype":"text/html"}]},"ts":1652456323735,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$7N1bRSRacRqSUEEiuw_DaQBmsAuPthdNA39lBxr_6wU"},
{"content":{"body":"what do I miss?","msgtype":"m.text","org.matrix.msc1767.text":"what do I miss?"},"ts":1652456327408,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$Ra1ms26CSy8NxYRmMOLYm0qil6WnQUaCXvz-uj3hkIY"},
{"content":{"body":" * what do I miss?","m.new_content":{"body":"what do I miss?","msgtype":"m.text","org.matrix.msc1767.text":"what do I miss?"},"m.relates_to":{"event_id":"$Ra1ms26CSy8NxYRmMOLYm0qil6WnQUaCXvz-uj3hkIY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * what do I miss?"},"ts":1652456335388,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$XWy_o3cLev4kpRLhLXV0O6bHwGSeUwP1OIdwV98nEXY"},
{"content":{"body":"oh perhaps the `URL list` contains the `last redirect` already before doing the TAO check of the `last redirect`, so I can continue the loop to make `lastURI=B`, `url=A` and `request=A`? ","format":"org.matrix.custom.html","formatted_body":"oh perhaps the <code>URL list</code> contains the <code>last redirect</code> already before doing the TAO check of the <code>last redirect</code>, so I can continue the loop to make <code>lastURI=B</code>, <code>url=A</code> and <code>request=A</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"oh perhaps the `URL list` contains the `last redirect` already before doing the TAO check of the `last redirect`, so I can continue the loop to make `lastURI=B`, `url=A` and `request=A`? ","mimetype":"text/plain"},{"body":"oh perhaps the <code>URL list</code> contains the <code>last redirect</code> already before doing the TAO check of the <code>last redirect</code>, so I can continue the loop to make <code>lastURI=B</code>, <code>url=A</code> and <code>request=A</code>?","mimetype":"text/html"}]},"ts":1652456815028,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$vUNVU8dNgFAmcos0JNiWmPhfy9SC4OBG3SNNAD1Ra7U"},
{"content":{"body":"sefeng: I don't remember exactly, but I think you can't make TAO succeed for redirect-tainted origins, even A->B->A, just like CORS can't. annevk / Yoav Weiss perhaps have more context about this","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: I don't remember exactly, but I think you can't make TAO succeed for redirect-tainted origins, even A-&gt;B-&gt;A, just like CORS can't. <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> / <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> perhaps have more context about this","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sefeng: I don't remember exactly, but I think you can't make TAO succeed for redirect-tainted origins, even A->B->A, just like CORS can't. annevk / Yoav Weiss perhaps have more context about this","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: I don't remember exactly, but I think you can't make TAO succeed for redirect-tainted origins, even A-&gt;B-&gt;A, just like CORS can't. <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> / <a href=\"https://matrix.to/#/@yoavweiss:matrix.org\">Yoav Weiss</a> perhaps have more context about this","mimetype":"text/html"}]},"ts":1652457370041,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$i5Np4ZuJIWiHzC3vGcdCTiE05gA1gZf_ERU52JDQ-UU"},
{"content":{"body":"sefeng: in A -> B -> A, when this check happens request's URL list will contain [A, B, A] because otherwise it can't request the final A","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: in A -&gt; B -&gt; A, when this check happens request's URL list will contain [A, B, A] because otherwise it can't request the final A","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sefeng: in A -> B -> A, when this check happens request's URL list will contain [A, B, A] because otherwise it can't request the final A","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: in A -&gt; B -&gt; A, when this check happens request's URL list will contain [A, B, A] because otherwise it can't request the final A","mimetype":"text/html"}]},"ts":1652457696278,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$8ViRP_WtSlJeMGTk3X2bUOuJ9hXU8inPHbEsQI7yAss"},
{"content":{"body":"The underlying security problem is https://en.wikipedia.org/wiki/Confused_deputy_problem","msgtype":"m.text","org.matrix.msc1767.text":"The underlying security problem is https://en.wikipedia.org/wiki/Confused_deputy_problem"},"ts":1652457736119,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$SkHuoGJzYCrWJ_NDGHH6jnYgWLeiUT1EEhr1w7xTkxM"},
{"content":{"body":"(I also have to re-read this algorithm each time to see if it works, if someone would be willing to add some examples underneath that'd be much appreciated!)","msgtype":"m.text","org.matrix.msc1767.text":"(I also have to re-read this algorithm each time to see if it works, if someone would be willing to add some examples underneath that'd be much appreciated!)"},"ts":1652457795366,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$-56NSxp8viYUu_HtLDg7abKrKNjfmoErgbkeIyCpiJU"},
{"content":{"body":"annevk: ok, so IIUC, for CORS it protects from CSRF amongst other things, where e.g. a POST to another site would redirect you to a different authenticated POST in the original site. And we added that limitation to TAO to align with CORS. The attack vector on TAO is a bit less clearer to me in this case but the alignment makes some sense.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: ok, so IIUC, for CORS it protects from CSRF amongst other things, where e.g. a POST to another site would redirect you to a different authenticated POST in the original site. And we added that limitation to TAO to align with CORS. The attack vector on TAO is a bit less clearer to me in this case but the alignment makes some sense.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: ok, so IIUC, for CORS it protects from CSRF amongst other things, where e.g. a POST to another site would redirect you to a different authenticated POST in the original site. And we added that limitation to TAO to align with CORS. The attack vector on TAO is a bit less clearer to me in this case but the alignment makes some sense.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: ok, so IIUC, for CORS it protects from CSRF amongst other things, where e.g. a POST to another site would redirect you to a different authenticated POST in the original site. And we added that limitation to TAO to align with CORS. The attack vector on TAO is a bit less clearer to me in this case but the alignment makes some sense.","mimetype":"text/html"}]},"ts":1652465183303,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$R-kLjxvFa4wFSgjQIhFXlqV9pwZsik7R7GXwREvKch8"},
{"content":{"body":"sefeng: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: ^^","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sefeng: ^^","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: ^^","mimetype":"text/html"}]},"ts":1652465187969,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$8ZbJ3G9XcBa0O-WewtRnX4cA6L_EyAXk3y-_zy5MyJw"},
{"content":{"body":"A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with `Access-Control-Allow-Origin: *`, why would I ever *not* want to grant embed access via `Cross-Origin-Resource-Policy: cross-origin`?","format":"org.matrix.custom.html","formatted_body":"A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with <code>Access-Control-Allow-Origin: *</code>, why would I ever <em>not</em> want to grant embed access via <code>Cross-Origin-Resource-Policy: cross-origin</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with `Access-Control-Allow-Origin: *`, why would I ever *not* want to grant embed access via `Cross-Origin-Resource-Policy: cross-origin`?","mimetype":"text/plain"},{"body":"A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with <code>Access-Control-Allow-Origin: *</code>, why would I ever <em>not</em> want to grant embed access via <code>Cross-Origin-Resource-Policy: cross-origin</code>?","mimetype":"text/html"}]},"ts":1652470155943,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$m_q8YDXlcEPv-t4vyB-2GyuDfFhaVpQbH-bL6ld6T6E"},
{"content":{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","format":"org.matrix.custom.html","formatted_body":"Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/plain"},{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/html"}]},"ts":1652470263091,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$2yTDVd5UIeVaFSSuSH23J5OVAB8lKM33UhdW894Rqaw"},
{"content":{"body":" * Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","format":"org.matrix.custom.html","formatted_body":" * Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","m.new_content":{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","format":"org.matrix.custom.html","formatted_body":"Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/plain"},{"body":"Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$2yTDVd5UIeVaFSSuSH23J5OVAB8lKM33UhdW894Rqaw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Which is to say, why do I have to set both? Why doesn't ACAO:\\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/plain"},{"body":" * Which is to say, why do I have to set both? Why doesn't ACAO:* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?","mimetype":"text/html"}]},"ts":1652470303033,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$RlcddznOBfqkr2HiSuwuQX306QYq99Bvd5DwLmhjgyA"},
{"content":{"body":"If you squint, both headers say, \"this resource doesn't contain any private data\"","msgtype":"m.text","org.matrix.msc1767.text":"If you squint, both headers say, \"this resource doesn't contain any private data\""},"ts":1652471282910,"senderName":"Eric Portis (he/him)","senderId":"@etportis:matrix.org","id":"$RHnyODFHOf348HbdBjjYzVJDKrstZo4RHpXnAbiUias"},
{"content":{"body":"ah interesting, thanks for the link and feedback annevk ","format":"org.matrix.custom.html","formatted_body":"ah interesting, thanks for the link and feedback <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ah interesting, thanks for the link and feedback annevk ","mimetype":"text/plain"},{"body":"ah interesting, thanks for the link and feedback <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>","mimetype":"text/html"}]},"ts":1652472822979,"senderName":"Andrew Williams","senderId":"@recvfrom:matrix.org","id":"$BUJKRokS_tnGlQQBR3HdmJXa-mUTdk2ElkI_3tJ9Llo"}
]