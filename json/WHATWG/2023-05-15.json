[
{"content":{"body":"Did https://hacks.mozilla.org/2021/12/webassembly-and-back-again-fine-grained-sandboxing-in-firefox-95/ end up regressing how Firefox deals with innerHTML in XML? C.f. https://bugs.webkit.org/show_bug.cgi?id=181642","msgtype":"m.text"},"ts":1684135290535,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sm8xkk2pBfXOl2CgnwrW0sI-_bEqMSylmXIasu7YhQU"},
{"content":{"body":"sorry, it was already end of day for me when this thread continued. I am fbraun@mozilla.com","m.relates_to":{"event_id":"$zCdWZN4McrVfCioYGz6avZoBOygdONgeWy9RIjbwFm0","is_falling_back":true,"m.in_reply_to":{"event_id":"$acHrz1738-WIaPq5eZtzjZY3InCe4vri-2Yf4mJ-eIE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1684135420003,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$0j-tNnPSILToNn-wUZQ05WE18Ly8BkVI9mWxwrU4Oh8"},
{"content":{"body":"Does clicking accept/commit suggestions on a PR against HTML just not work because of the size of it or something? I always get an error suggesting that there's been new commits and I need to refresh, but it's never the case","msgtype":"m.text"},"ts":1684168707030,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$r8WvsWF6N-aMiq0f_sbMD6KAXs8R0t3SBfr6xQTUlug"},
{"content":{"body":"bkardell: that is correct, they won't work","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: that is correct, they won't work","msgtype":"m.text"},"ts":1684171542183,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YxgT5q_Z6JEUxHtDRIdk961I_f7HEZEGC6p9O8OHEdo"},
{"content":{"body":"They're still a very useful way to get the point across, so that's why they're still used. But yeah, it's not the best.","msgtype":"m.text"},"ts":1684171586572,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9FGJfsCRZNk1Ru_R3Tnjfz8h2Rex9PQFD715Zn-s6wc"},
{"content":{"body":"> <@annevk:matrix.org> They're still a very useful way to get the point across, so that's why they're still used. But yeah, it's not the best.\n\nIt's good to know for sure, thanks annevk ... frustrating that the error is so misleading ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$9FGJfsCRZNk1Ru_R3Tnjfz8h2Rex9PQFD715Zn-s6wc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>They&#39;re still a very useful way to get the point across, so that&#39;s why they&#39;re still used. But yeah, it&#39;s not the best.</blockquote></mx-reply>It's good to know for sure, thanks <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> ... frustrating that the error is so misleading","m.relates_to":{"m.in_reply_to":{"event_id":"$9FGJfsCRZNk1Ru_R3Tnjfz8h2Rex9PQFD715Zn-s6wc"}},"msgtype":"m.text"},"ts":1684174741532,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$-_GE73fgkNgaGUdZaTaJqdJPdfoHjhQHeid50mzUu68"},
{"content":{"body":"annevk: Domenic : so for WebSocket, since it's a constructor rather than a method, you can't use `.call(relevantGlobal)` and therefore relevant settings object doesn't make sense. Workers use current settings object: https://html.spec.whatwg.org/#dom-worker","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> : so for WebSocket, since it's a constructor rather than a method, you can't use <code>.call(relevantGlobal)</code> and therefore relevant settings object doesn't make sense. Workers use current settings object: https://html.spec.whatwg.org/#dom-worker","msgtype":"m.text"},"ts":1684181787323,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$uI53hq3vkRk69ddGvEzaIlmuJXQu5AC42EtvQZ7U29E"},
{"content":{"body":"now that we ~have growable arraybuffers, thoughts on making TextEncoder's `encodeInto` able to grow the backing buffer? (probably as an opt-in option)","format":"org.matrix.custom.html","formatted_body":"now that we ~have growable arraybuffers, thoughts on making TextEncoder's <code>encodeInto</code> able to grow the backing buffer? (probably as an opt-in option)","msgtype":"m.text"},"ts":1684184248641,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UlcP2S3GrmI2vq47fLFysNbdRQAgBCKDmgCs5fg5_rk"},
{"content":{"body":"e.g. if you are getting a stream of strings from somewhere and concatenating them all into a single buffer","msgtype":"m.text"},"ts":1684184287865,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KGev4rFJoY_8EB8tDzEnyDx_szvl0INp2DA25QaGObs"}
]