[
{"content":{"body":"Domenic: I think WebKit folks were interested in implementing, but wanted a real spec first","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I think WebKit folks were interested in implementing, but wanted a real spec first","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: I think WebKit folks were interested in implementing, but wanted a real spec first","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I think WebKit folks were interested in implementing, but wanted a real spec first","mimetype":"text/html"}]},"ts":1666074555547,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Rsl0l2jQEN4GkgI--7fCRYge9UVUEet3lpAheUHfQVU"},
{"content":{"body":"From what I understand the draft PR is such a spec?","msgtype":"m.text","org.matrix.msc1767.text":"From what I understand the draft PR is such a spec?"},"ts":1666074573981,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_o0GT0ru3QlxATyUMc7iiXk2EaNYp7TrPnFCKDae11s"},
{"content":{"body":"Well yeah, but also tentative","msgtype":"m.text","org.matrix.msc1767.text":"Well yeah, but also tentative"},"ts":1666074680819,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bfn7prdMUBqnNcH_7qRf4VhzRte04y1wbDtN8faeZik"},
{"content":{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","format":"org.matrix.custom.html","formatted_body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/plain"},{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/html"}]},"ts":1666081604120,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$HB43gIgvllpA04jUtKGnxHW9Fdla4kq1qAnodx1Bdi0"},
{"content":{"body":" * PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","format":"org.matrix.custom.html","formatted_body":" * PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","m.new_content":{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","format":"org.matrix.custom.html","formatted_body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/plain"},{"body":"PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$HB43gIgvllpA04jUtKGnxHW9Fdla4kq1qAnodx1Bdi0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/plain"},{"body":" * PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)","mimetype":"text/html"}]},"ts":1666081612078,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$QdFOOEW8HtT7VXZXH4DDtUPrXIE4yDSNeq0CebP5scs"},
{"content":{"body":"Domenic: ↑","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ↑","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: ↑","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ↑","mimetype":"text/html"}]},"ts":1666081627618,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CPgAU3U_0XUsKEl1q7h6i4qbxNpZ83f5kIEUoj8NRuA"},
{"content":{"body":"I was gonna look at Bikeshed for inspiration, but it seems it might still put these all in the same namespace and the reason it didn't cause a problem is because the instance `json()` is on the `Body` interface.","format":"org.matrix.custom.html","formatted_body":"I was gonna look at Bikeshed for inspiration, but it seems it might still put these all in the same namespace and the reason it didn't cause a problem is because the instance <code>json()</code> is on the <code>Body</code> interface.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I was gonna look at Bikeshed for inspiration, but it seems it might still put these all in the same namespace and the reason it didn't cause a problem is because the instance `json()` is on the `Body` interface.","mimetype":"text/plain"},{"body":"I was gonna look at Bikeshed for inspiration, but it seems it might still put these all in the same namespace and the reason it didn't cause a problem is because the instance <code>json()</code> is on the <code>Body</code> interface.","mimetype":"text/html"}]},"ts":1666081703274,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$LbBRFErqrLKQZuGgbt5wKJR90qvpAQVBRzZPTWvzC_I"},
{"content":{"body":"ah","msgtype":"m.text","org.matrix.msc1767.text":"ah"},"ts":1666081719486,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7IVJUGqf0G70D1KtBqPQTX7XLgjdy-RWJuW9GPfiga4"},
{"content":{"body":"it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces","msgtype":"m.text","org.matrix.msc1767.text":"it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces"},"ts":1666081763849,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$yv65hZQkmpYT_qHLmx2STd0q0I_LJYlPsADtL0CO4p4"},
{"content":{"body":" * it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces","m.new_content":{"body":"it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces","msgtype":"m.text","org.matrix.msc1767.text":"it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces"},"m.relates_to":{"event_id":"$yv65hZQkmpYT_qHLmx2STd0q0I_LJYlPsADtL0CO4p4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it sounds like that might cause issues the moment that Bikeshed updates to have different namespaces"},"ts":1666081773629,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$C-u_JBwYL5f7SVV6sTUYH_Y6J8SO28RRlMRGnUjJ5Ao"},
{"content":{"body":"with builds using an earlier version of Bikeshed but the new data","msgtype":"m.text","org.matrix.msc1767.text":"with builds using an earlier version of Bikeshed but the new data"},"ts":1666081791291,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$XWGSNIZ5ODSRqz3WjzG5tPmTeO0VvesEi08-B_8E61k"},
{"content":{"body":"Yeah, we'd get a bunch of broken IDs. Probably have to hardcode all the existing statics and coordinate with TabAtkins on the rollout","format":"org.matrix.custom.html","formatted_body":"Yeah, we'd get a bunch of broken IDs. Probably have to hardcode all the existing statics and coordinate with <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> on the rollout","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yeah, we'd get a bunch of broken IDs. Probably have to hardcode all the existing statics and coordinate with TabAtkins on the rollout","mimetype":"text/plain"},{"body":"Yeah, we'd get a bunch of broken IDs. Probably have to hardcode all the existing statics and coordinate with <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> on the rollout","mimetype":"text/html"}]},"ts":1666081854929,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$BFFI2eXDnbmR3eFi89kEqtnepEavb_DtBB06qp6u6Tk"},
{"content":{"body":"We should have just called the static method fromJSON 😅","msgtype":"m.text"},"ts":1666082016511,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Zs79x8RGnSQmQll-GZxDXAPztvZklVgaiOO1QON6-bc"},
{"content":{"body":"As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…","msgtype":"m.text","org.matrix.msc1767.text":"As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…"},"ts":1666082352462,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$4DweZ_xuAI32goo2chWJVhMMhZ16De8gAAd0zANIU6k"},
{"content":{"body":"Luca Casonato: maybe, but also, specs don't matter when it comes to design decisions: https://www.w3.org/TR/html-design-principles/#priority-of-constituencies ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: maybe, but also, specs don't matter when it comes to design decisions: https://www.w3.org/TR/html-design-principles/#priority-of-constituencies","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Luca Casonato: maybe, but also, specs don't matter when it comes to design decisions: https://www.w3.org/TR/html-design-principles/#priority-of-constituencies ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: maybe, but also, specs don't matter when it comes to design decisions: https://www.w3.org/TR/html-design-principles/#priority-of-constituencies","mimetype":"text/html"}]},"ts":1666082362401,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$aRN9RuF6I7PvNlencZeQqCCBA4bGQmdnQl2N7xd6Z5k"},
{"content":{"body":" * As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…","m.new_content":{"body":"As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…","msgtype":"m.text","org.matrix.msc1767.text":"As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…"},"m.relates_to":{"event_id":"$4DweZ_xuAI32goo2chWJVhMMhZ16De8gAAd0zANIU6k","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * As far as MDN goes, I am thankful that for the JavaScript docs at least, the titles/names and URLs for methods were done right from the beginning — so there’s no problem to fix there\n\nThat said, there’s also been some suggestion that when (if) the title/name/URL changes get made to the API pages, then the JavaScript pages should also be changed to match what ends up being done for the API pages…"},"ts":1666082388095,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$NJvLxyCXllZODGRcQyXw6RHF7OPs8vUhXciV0SvZQgI"},
{"content":{"body":"> <@sideshowbarker:matrix.org> PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)\n\nI basically agree with your reasoning; it would be nice to use /prototype/ in the URLs, but if that's costly then _static seems reasonable too.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$HB43gIgvllpA04jUtKGnxHW9Fdla4kq1qAnodx1Bdi0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">@sideshowbarker:matrix.org</a><br>PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)</blockquote></mx-reply>I basically agree with your reasoning; it would be nice to use /prototype/ in the URLs, but if that's costly then _static seems reasonable too.","m.relates_to":{"m.in_reply_to":{"event_id":"$HB43gIgvllpA04jUtKGnxHW9Fdla4kq1qAnodx1Bdi0"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@sideshowbarker:matrix.org> PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the _URLs_ in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)\n\nI basically agree with your reasoning; it would be nice to use /prototype/ in the URLs, but if that's costly then _static seems reasonable too.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$HB43gIgvllpA04jUtKGnxHW9Fdla4kq1qAnodx1Bdi0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">@sideshowbarker:matrix.org</a><br>PSA: Comments at https://github.com/orgs/mdn/discussions/264#discussioncomment-3903551 welcome — specifically on what the <em>URLs</em> in MDN for Web/DOM API static methods and instance methods should look like (a separate question from what the actual article titles should look like)</blockquote></mx-reply>I basically agree with your reasoning; it would be nice to use /prototype/ in the URLs, but if that's costly then _static seems reasonable too.","mimetype":"text/html"}]},"ts":1666082826744,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$WuDNC6JgqncrjnHklo5A0Mrab_bOKzT25ihGFVumYY0"},
{"content":{"body":"I will try not to introduce any instance methods named `foo_static` ;)","format":"org.matrix.custom.html","formatted_body":"I will try not to introduce any instance methods named <code>foo_static</code> ;)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I will try not to introduce any instance methods named `foo_static` ;)","mimetype":"text/plain"},{"body":"I will try not to introduce any instance methods named <code>foo_static</code> ;)","mimetype":"text/html"}]},"ts":1666082853080,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$P6Xw1bUSU0WRXB1fny3zmnGwwSINSyGoYRoqwx5PjN0"},
{"content":{"body":"Domenic: also so Chrome is no longer interested in ShadowRealm?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: also so Chrome is no longer interested in ShadowRealm?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: also so Chrome is no longer interested in ShadowRealm?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: also so Chrome is no longer interested in ShadowRealm?","mimetype":"text/html"}]},"ts":1666083885510,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$JTOU5EOQCDtSGR7iLhSQsnrlL_CF7HH5ZVMhDgOJ5AM"},
{"content":{"body":"I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary.","msgtype":"m.text","org.matrix.msc1767.text":"I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary."},"ts":1666083928334,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$D7awltnfQqGtz8qqLcwZ4qRjUPjB5nPlMKGMTH55xe4"},
{"content":{"body":"We already did all the Exposed=* work, which should have been blocked on the HTML PR, but I forgot that was still outstanding.","msgtype":"m.text","org.matrix.msc1767.text":"We already did all the Exposed=* work, which should have been blocked on the HTML PR, but I forgot that was still outstanding."},"ts":1666083929550,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ak218PnnplJUHl_f2fMWcUC-1AJoVnfE_vgRrxdfDwE"},
{"content":{"body":"I think there might be community contributors, but IIUC they have done V8 work, not Chrome work","msgtype":"m.text","org.matrix.msc1767.text":"I think there might be community contributors, but IIUC they have done V8 work, not Chrome work"},"ts":1666083955863,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$K231plTsmikOe8NSzVOQtQWIvLutJ6JomzRn8N_ssQI"},
{"content":{"body":" * I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary.","m.new_content":{"body":"I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary.","msgtype":"m.text","org.matrix.msc1767.text":"I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary."},"m.relates_to":{"event_id":"$D7awltnfQqGtz8qqLcwZ4qRjUPjB5nPlMKGMTH55xe4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I don't believe anyone is currently working on ShadowRealm at Google, but as with all TC39 features that have reached stage 3, we decided not to object to it in plenary."},"ts":1666083968381,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sv3L9E57cvv6OKXK7PYKMkJrBpIRrf03UhKC7QuXLAU"},
{"content":{"body":"yulia: if you're around do you happen to know if Gecko is doing any of the non-JS work on ShadowRealm?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: if you're around do you happen to know if Gecko is doing any of the non-JS work on ShadowRealm?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: if you're around do you happen to know if Gecko is doing any of the non-JS work on ShadowRealm?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: if you're around do you happen to know if Gecko is doing any of the non-JS work on ShadowRealm?","mimetype":"text/html"}]},"ts":1666084024975,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$nndflX0RM5B8PrUItlAJs1eCBf8c8t1eA7EbK-h_RwE"},
{"content":{"body":"mgaudet: might be a good person to answer that","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">mgaudet</a>: might be a good person to answer that","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"mgaudet: might be a good person to answer that","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mgaudet:mozilla.org\">mgaudet</a>: might be a good person to answer that","mimetype":"text/html"}]},"ts":1666084053449,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$Jr5E93J8i4m6fOvi1PA4rw5D_6O557IXYYUizP0N0yA"},
{"content":{"body":"Friggin javascript: URLs are a fractal of badness...","msgtype":"m.text","org.matrix.msc1767.text":"Friggin javascript: URLs are a fractal of badness..."},"ts":1666084421920,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$KaBGQsMFDUPaTW9xgvaYCQXVsNXFz0N-QSsiC6CPFfE"},
{"content":{"body":"The new model makes obvious questions like \"do they interrupt ongoing navigations?\" \"when do they snapshot the previous page's URL?\" \"what state does the new document carry over from the previous document?\" \"what referrer is used for creating the new document?\"... and now I need to test everything, I guess. Or at least put a bunch of XXX boxes to investigate.","msgtype":"m.text","org.matrix.msc1767.text":"The new model makes obvious questions like \"do they interrupt ongoing navigations?\" \"when do they snapshot the previous page's URL?\" \"what state does the new document carry over from the previous document?\" \"what referrer is used for creating the new document?\"... and now I need to test everything, I guess. Or at least put a bunch of XXX boxes to investigate."},"ts":1666084540861,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ZOB-UdBybwT-C8OSHKryPojKLVTxuTlMywWwkiTF-h0"},
{"content":{"body":"I think you can celebrate it as a win that it reveals these kind of questions","msgtype":"m.text","org.matrix.msc1767.text":"I think you can celebrate it as a win that it reveals these kind of questions"},"ts":1666085353737,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$H-lKiGbsHuVd6psvN27Vw5K1Q-1JJlHUgfwzsrwaBnk"},
{"content":{"body":"I think that's something that typically happens (or maybe is supposed to happen) when you take a bad spec and formalize it better","msgtype":"m.text","org.matrix.msc1767.text":"I think that's something that typically happens (or maybe is supposed to happen) when you take a bad spec and formalize it better"},"ts":1666085394579,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Z05HRgIi-1hpD2Ayh8dYP5iMgG1a9VHO7pYZPhVII9Y"}
]