[
{"content":{"body":"Two.txt","msgtype":"m.text"},"ts":1676886125121,"senderName":"misty1peters2022","senderId":"@misty1peters2022:matrix.org","id":"$iWskKyLy4eMosFF7zC5-ceLWQTcFTjqZKWKdakmuYyA"},
{"content":{"body":"Why is it that `Set-Cookie` headers are never exposed on `Response` objects?","format":"org.matrix.custom.html","formatted_body":"Why is it that <code>Set-Cookie</code> headers are never exposed on <code>Response</code> objects?","msgtype":"m.text"},"ts":1676894615768,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$PhqVdxEJQX3wV_iKIY52wrptltRuOfLxp3dziGnQO6Y"},
{"content":{"body":"https://jakearchibald.com/2021/cors/ says this is to avoid leaking cookies across sites, but that doesn't explain why they're not exposed even for same-origin fetches (since you can observe the cookies either way with `document.cookie`)","format":"org.matrix.custom.html","formatted_body":"https://jakearchibald.com/2021/cors/ says this is to avoid leaking cookies across sites, but that doesn't explain why they're not exposed even for same-origin fetches (since you can observe the cookies either way with <code>document.cookie</code>)","msgtype":"m.text"},"ts":1676894682307,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$hGIRXdCPkuDV4OTUgTyleHyM9Zd1VvwPIC63dUOtMrY"},
{"content":{"body":"I'm also not convinced it would leak anything for third-party origins/sites, since the request is made without credentials, and any `Set-Cookie` headers wouldn't make it into the cookie jar either way","format":"org.matrix.custom.html","formatted_body":"I'm also not convinced it would leak anything for third-party origins/sites, since the request is made without credentials, and any <code>Set-Cookie</code> headers wouldn't make it into the cookie jar either way","msgtype":"m.text"},"ts":1676894777006,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$P-28TFXP-X0Cru55bmcVrFIv70wpsWHtxJpz35nXb_w"},
{"content":{"body":"Same for not allowing authors to add `Cookie` headers to requests","format":"org.matrix.custom.html","formatted_body":"Same for not allowing authors to add <code>Cookie</code> headers to requests","msgtype":"m.text"},"ts":1676894882023,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$tlni4dROiGdQTBHcUzvuy7FCZcGrG7abx5CkViWumWc"},
{"content":{"body":"A use case for allowing it would be \"faking\" a third-party-site/origin cookie jar","msgtype":"m.text"},"ts":1676894903369,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ZqGtTb0Ef8mPBQEG9APXVxnV7kAem65c3js6_uYm344"},
{"content":{"body":"Andreu Botella: are you familiar with HttpOnly cookies?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: are you familiar with HttpOnly cookies?","msgtype":"m.text"},"ts":1676896697327,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bEcfjwK0d1S8z8PVBGeqv01FNFji6hYbbvFu6dA7OZY"},
{"content":{"body":"oh, that's right","msgtype":"m.text"},"ts":1676896726653,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$dWskLgNHZGz_-w0K3awPS2UIRToIzSoP1TSM9tsvo_o"},
{"content":{"body":"I'd completely forgotten `HttpOnly` cookies existed ðŸ˜…","format":"org.matrix.custom.html","formatted_body":"I'd completely forgotten <code>HttpOnly</code> cookies existed ðŸ˜…","msgtype":"m.text"},"ts":1676897260003,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$8ycCzoCzVF5YlN4umHs5LbJFerZC-27N4O3QRw4Aqho"},
{"content":{"body":"HTML has this note under reflecting of an `unrestricted double`: \"The values Infinity and Not-a-Number (NaN) values throw an exception on setting, as defined in Web IDL.\"","format":"org.matrix.custom.html","formatted_body":"HTML has this note under reflecting of an <code>unrestricted double</code>: &quot;The values Infinity and Not-a-Number (NaN) values throw an exception on setting, as defined in Web IDL.&quot;","msgtype":"m.text"},"ts":1676900105552,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cwdMVR_kvBY8gqUe8FgRKF8qR4gqkK2orSN8lVLY3LU"},
{"content":{"body":"I guess that's wrong given https://webidl.spec.whatwg.org/#es-unrestricted-double?","msgtype":"m.text"},"ts":1676900114069,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$K2EBt0sBtEL3x1xrXViudgv_a9xxq0DKJ4RoNEoVOyQ"},
{"content":{"body":"Wow, `unrestricted double` is older than I thought, Hixie-era","format":"org.matrix.custom.html","formatted_body":"Wow, <code>unrestricted double</code> is older than I thought, Hixie-era","msgtype":"m.text"},"ts":1676900231186,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$BlH1ye9y1zFH53Ffwbdh3hfrbGBCjGDZUkfFw1WpWik"},
{"content":{"body":"Well, there are no reflected attributes using it, so I guess I'll remove it","msgtype":"m.text"},"ts":1676900690032,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Z6wQkXBBjdh6a81isFR2SVH0_3bXvXQN-_n3rfkeRqg"},
{"content":{"body":"Can I interest anyone else in reviewing a refactor of reflection? Domenic did a couple earlier rounds and I just did self-review: https://github.com/whatwg/html/pull/8496","msgtype":"m.text"},"ts":1676909325900,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rekPOXQJcgatshSpqORTJ8DolF1SZXz1Q8zAMK4flM4"},
{"content":{"body":"Also, if someone can come up with enumerated attribute IDL syntax for https://github.com/whatwg/html/issues/3238 that would be really cool","msgtype":"m.text"},"ts":1676909384512,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$suMfb5Ojw6N_vnU1Ja5I_7kwlObdn8Br8SYIfub3huY"},
{"content":{"body":"annevk: the service worker spec wants to abort one fetch if another is aborted. Right now it's referring to `[=fetch controller/state=]` which isn't exported. Should I create a PR to export that, or is there a 'proper' way to listen for that state change?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: the service worker spec wants to abort one fetch if another is aborted. Right now it's referring to <code>[=fetch controller/state=]</code> which isn't exported. Should I create a PR to export that, or is there a 'proper' way to listen for that state change?","msgtype":"m.text"},"ts":1676912690614,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$RJ-9DhVim5U3lyADeUjfMV7Drg-RghhZht5XkgsH2Rc"},
{"content":{"body":"https://github.com/whatwg/fetch/pull/1608 PR for that","msgtype":"m.text"},"ts":1676912934309,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$qJ0GAs9VB-C3cYXTrESODgk8IJah_pYTybq2LKaEco8"},
{"content":{"body":"For anybody interested, I'm trying to bench all existing WHATWG supported URL parsers in Ada. I've added servo/url, whatwg (c++), curl. Do you know any other available standard compliant parsers? Referencing: https://github.com/ada-url/ada/pull/223","msgtype":"m.text"},"ts":1676913021959,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$AH9Jv-PXMubuf1fjmVzeumixn2bsLmod3xwU2IROB34"},
{"content":{"body":"(Curl does not follow whatwg, but widely used)","msgtype":"m.text"},"ts":1676913111754,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$YfzxP_sX8cRMkoWAPPTweFhVesqJMC7eCc7jPuEbgpI"},
{"content":{"body":"I think curl isn't interested in complying with any spec... But does like to make a lot of noise whenever following the WHATWG would have helped them.","msgtype":"m.text"},"ts":1676913143925,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rkZnkS3B5CvJU7fm5D74Kq4dImqXKMF9xF3OJzW3nrg"},
{"content":{"body":"Yes, Curl is following RFC 3986 with additional quirks","msgtype":"m.text"},"ts":1676913177329,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$11PHTZ-hZT7A_1wXqDIBH_vdfXzWSzXJL7BO2wJMyHk"},
{"content":{"body":"It is? I thought it was mostly garbage in, garbage out","msgtype":"m.text"},"ts":1676914128724,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZCfBnuR5CR8VANV1HMUjdpL3-OxJYpZDejjtbksu1u8"},
{"content":{"body":"Referencing docs: \"curl recognizes a URL syntax that we call \"RFC 3986 plus\". - https://curl.se/docs/url-syntax.html","msgtype":"m.text"},"ts":1676914190948,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$GyqKzsQPKwGdG0508NhiUO4WlIDTsVnu3BHy9OLXMkA"},
{"content":{"body":"rego: smaug: would appreciate your input on https://github.com/whatwg/html/issues/8545","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mrego:igalia.com\">rego</a>: <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: would appreciate your input on https://github.com/whatwg/html/issues/8545","msgtype":"m.text"},"ts":1676914244466,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OwP3Md3NmYtbjuL4ssDrzaNAZQ3q6Z1-lhL4sTAINFc"},
{"content":{"body":"annevk: the expando surviving or not surviving could be done similarly to https://dom.spec.whatwg.org/#concept-getelementsbytagname ? i.e. allow it to be GCed even if it has an expando","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: the expando surviving or not surviving could be done similarly to https://dom.spec.whatwg.org/#concept-getelementsbytagname ? i.e. allow it to be GCed even if it has an expando","msgtype":"m.text"},"ts":1676914761804,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$4O8uxXZihnGzL3VL5Rga8SbDy7q6QsN-QVrle4FNDa8"},
{"content":{"body":"zcorpan: that makes GC observable and ideally we wouldn't do that I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: that makes GC observable and ideally we wouldn't do that I think","msgtype":"m.text"},"ts":1676914883551,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SjqD2wV3nM5Tsu_hsV8lDbzaMqiz1t_7XMJsVq1VPHM"}
]