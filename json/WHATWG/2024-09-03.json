[
{"content":{"body":"Very slightly related to import maps. I talked to someone about Subresource Integrity and they complained that `<script src=.. integrity..>` has no declarative fallback to a canonical/fallback URL if the `src` resource doesn't match. E.g., point to CDN for speed but fallback to same-origin resource for robustness. I recall that we cut `fallbacksrc` (name TBD) out of SRI v1 for a couple of reason. The main one I remember is that I was too cautious to break assumptions w/ HTML/XSS sanitizers and other security libraries. Essentially not allowing a \"new\" XSS vector like `<script src=x integrity=x fallbacksrc=xssurl>`.","format":"org.matrix.custom.html","formatted_body":"Very slightly related to import maps. I talked to someone about Subresource Integrity and they complained that <code>&lt;script src=.. integrity..&gt;</code> has no declarative fallback to a canonical/fallback URL if the <code>src</code> resource doesn't match. E.g., point to CDN for speed but fallback to same-origin resource for robustness. I recall that we cut <code>fallbacksrc</code> (name TBD) out of SRI v1 for a couple of reason. The main one I remember is that I was too cautious to break assumptions w/ HTML/XSS sanitizers and other security libraries. Essentially not allowing a \"new\" XSS vector like <code>&lt;script src=x integrity=x fallbacksrc=xssurl&gt;</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1725345213924,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$rW_guIH0R-RNl397nAKgfChZ77rar2lzk5cG3iibh8A"},
{"content":{"body":"I wonder if fallback-URLs would be an interesting thing to consider for import maps, as their syntax is not in HTML and less likely to break assumptions (because most libraries will block/remove inline `<script>`, likely including those of type import maps)","format":"org.matrix.custom.html","formatted_body":"I wonder if fallback-URLs would be an interesting thing to consider for import maps, as their syntax is not in HTML and less likely to break assumptions (because most libraries will block/remove inline <code>&lt;script&gt;</code>, likely including those of type import maps)","m.mentions":{},"msgtype":"m.text"},"ts":1725345289872,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$Ypfhtq78TLG8lO-K8oqIXovndK2d8Psjm54wgrVgzMs"},
{"content":{"body":"freddy: I guess that could fit into importmaps somehow, but would only work for modules. At the same time, I'm not sure the use case is worth the complexity. Is this a real issue people are trying to solve for? Can they do that with e.g. onerror handlers that rewrite the `src`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: I guess that could fit into importmaps somehow, but would only work for modules. At the same time, I'm not sure the use case is worth the complexity. Is this a real issue people are trying to solve for? Can they do that with e.g. onerror handlers that rewrite the <code>src</code>?","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"msgtype":"m.text"},"ts":1725362414190,"senderName":"Yoav Weiss","senderId":"@yoavweiss:matrix.org","id":"$TQTz6lZ53nrMwKXzy_YJwhmINauQTJJ3TdRTafPKliI"},
{"content":{"body":"they _can_ solve it with onerror handlers, but it requires more script","format":"org.matrix.custom.html","formatted_body":"they <em>can</em> solve it with onerror handlers, but it requires more script","m.mentions":{},"msgtype":"m.text"},"ts":1725362437524,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$IbOaCFztqpvRHBCODs8ZaHXvqjyDM3YAdjxJLuRgbpo"},
{"content":{"body":"(script that needs to load first. stuff you originally set out to put on a CDN)","m.mentions":{},"msgtype":"m.text"},"ts":1725362455758,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$86MnRAvIRZ-NyKyh301YMHxAMnpa5mc80LDkonbLRBw"}
]