[
{"content":{"body":"GPHemsley: some combination of HTML/MIME Sniffing/Fetch, not sure; depends on where we end up needing it the most I guess","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@gphemsley:matrix.org\">GPHemsley</a>: some combination of HTML/MIME Sniffing/Fetch, not sure; depends on where we end up needing it the most I guess","msgtype":"m.text"},"ts":1631353720282,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$BD4BpVsEu0UfNb5PVXBlBRnHmE5b_0Mh38bRHTrhCjc"},
{"content":{"body":"annevk: Right now mimesniff says stuff like \"User agents may implicitly extend this table to support additional MIME types.\" which seems bad for interop. And I'm writing some of the tests to say \"I explicitly expect you to download this resource\". So, in that context, it seems to me like a minimum list of supported MIME types (and maybe explicitly unsupported MIME types?) would be beneficial.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Right now mimesniff says stuff like &quot;User agents may implicitly extend this table to support additional MIME types.&quot; which seems bad for interop. And I'm writing some of the tests to say &quot;I explicitly expect you to download this resource&quot;. So, in that context, it seems to me like a minimum list of supported MIME types (and maybe explicitly unsupported MIME types?) would be beneficial.","msgtype":"m.text"},"ts":1631368948384,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$O5tmsJCtCp8bcIqoeQqWBcqnXQ3WeGbnWeFpe7lgK8U"},
{"content":{"body":"annevk: Alright, calling this dev-complete. https://github.com/web-platform-tests/wpt/pull/30403","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Alright, calling this dev-complete. https://github.com/web-platform-tests/wpt/pull/30403","msgtype":"m.text"},"ts":1631394999219,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$DkjFZOCDkfFn6hjGFaf-XXC453rusPPSAi4RRqp0Vz8"},
{"content":{"body":"jgraham, foolip: GitHub suggests you may also be stakeholders ^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jgraham_:matrix.org\">jgraham</a>, <a href=\"https://matrix.to/#/@foolip:matrix.org\">foolip</a>: GitHub suggests you may also be stakeholders ^","msgtype":"m.text"},"ts":1631395104916,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$MfdTnosR2FCioDpI_kqIB5-O1QaDoqP1KWPtIojgsuE"},
{"content":{"body":"(Safari didn't want to run my tests)","msgtype":"m.text"},"ts":1631395242330,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$7b6jSHHKFLnxxHPBsu3LMSFDvDJ0rdu2I_dGsTtCUSU"},
{"content":{"body":"TabAtkins: The old (anolis) way of referencing other specs allowed \"HTTP\" to refer to the multiple RFCs involved: https://github.com/whatwg/xref/blob/c275b8f3c9d1ae654b42c3db5ad2c723e77c8e8e/references.json#L339-L369\nIt doesn't look like SpecRef supports that format? Is there any way to replicate it in Bikeshed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: The old (anolis) way of referencing other specs allowed &quot;HTTP&quot; to refer to the multiple RFCs involved: https://github.com/whatwg/xref/blob/c275b8f3c9d1ae654b42c3db5ad2c723e77c8e8e/references.json#L339-L369<br>It doesn't look like SpecRef supports that format? Is there any way to replicate it in Bikeshed?","msgtype":"m.text"},"ts":1631401588836,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$C4ZOdwygG5wNX7LtxFrio-1iG7LyGGrlKfKujIsdBd4"},
{"content":{"body":"Nope, could you file an issue with details?","msgtype":"m.text"},"ts":1631401926969,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$U_MmLgogN1JoT6c-MzbUQiZ6LVfEMplqgK5b8556Iak"},
{"content":{"body":"at Bikeshed?","msgtype":"m.text"},"ts":1631402022865,"senderName":"GPHemsley","senderId":"@gphemsley:matrix.org","id":"$7ln-tssvXVrViKqpoKOleZNRSlC6i3n4YUEt2PWTIvU"}
]