[
{"content":{"body":"Domenic: now I wonder what happens when you assign to a long and it's out-of-range","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: now I wonder what happens when you assign to a long and it's out-of-range","msgtype":"m.text"},"ts":1676963278808,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$L4V5a3kSQFBm9y7P4n7g-cM-_hweJ3M9jomZ06ZiStY"},
{"content":{"body":"annevk: The setter will never receive it, but yeah if you have `contentattribute=\"1111111111111111111111111\"`... I suspect that does fall back to the default, but I wonder.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: The setter will never receive it, but yeah if you have <code>contentattribute=&quot;1111111111111111111111111&quot;</code>... I suspect that does fall back to the default, but I wonder.","msgtype":"m.text"},"ts":1676963343304,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$S7C9hB56uJgmfaXM1Me6FngvRsbvERcQT5U_61nekEM"},
{"content":{"body":"Domenic: oh right, it's because all the magic is in the getters that we can't rely on Clamp and such, meh","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: oh right, it's because all the magic is in the getters that we can't rely on Clamp and such, meh","msgtype":"m.text"},"ts":1676963389834,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OJ1gQtWcBtHSocU_9wg5nu6N6O3oXpIm_PseGm4s7Sw"},
{"content":{"body":"Although, maybe if ConvertToInt took EnforceRange and Clamp as arguments of sorts we could actually be using that","msgtype":"m.text"},"ts":1676963472721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jnH_b5SF4P1GWKPDf0xtuS0IVTMKjqWqmNYQnBav6cU"},
{"content":{"body":"It would be nice to investigate if we could have fewer number parsers, but that would be a hell of a yak shave for this project, probably worth at least a follow-up issue though","msgtype":"m.text"},"ts":1676963818764,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$0Y4kliSgGiMQ2ctyqUn-BpZeXANutXMzGOYhWlwxq0c"},
{"content":{"body":"Domenic: I was also thinking that we could express enumerated attribute tables as two arrays/sets in Web IDL, but it might get rather unwieldy and we'd have two sources of information; arguably that's the case with something like [ReflectURL] as well, but that would make it pretty glaring","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I was also thinking that we could express enumerated attribute tables as two arrays/sets in Web IDL, but it might get rather unwieldy and we'd have two sources of information; arguably that's the case with something like [ReflectURL] as well, but that would make it pretty glaring","msgtype":"m.text"},"ts":1676963954750,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$98kuDi2S19bD8VYAKzwa0h4RD5EnCimCsWooHXGkc8c"},
{"content":{"body":"Yes, I have had similar thoughts. However I believe most engines have some sort of IDL for enumerated attributes. It doesn't match the spec's model that well, but somehow gives the same observable results.","msgtype":"m.text"},"ts":1676964003409,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sYJ3rNqQ75qxxRuYmmwVxPIFYZv-Yd1OPwVltHt_754"},
{"content":{"body":"I think maybe it only takes care of the getter/setter behavior and doesn't take care of producing a \"state\" which the rest of the spec/implementation can consult?","msgtype":"m.text"},"ts":1676964066817,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$uS4wLCLaCt9FLqMWgaL-IIqGwCqN_XkEMGbkGS99qBQ"},
{"content":{"body":"Hmm, perhaps with some custom logic for the bad cases? I guess we need to look into that first then.","msgtype":"m.text"},"ts":1676964067541,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Tp_wX_Sf2u-TICuW_bVTF5TO8pxmAh2ICRiRN2f4REE"},
{"content":{"body":"So like you don't need to identify that \"rect\" and \"rectangle\" both go to the same state, in the IDL.","msgtype":"m.text"},"ts":1676964096327,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$rdLuGMdh4_5Qjd8k4vdrSpyfk7r97bmv_M1O_j7hF5c"},
{"content":{"body":"Hmm, but if you set to one you get the other back, right? You'd have to encode that somehow.","msgtype":"m.text"},"ts":1676964128909,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$6kSHIqB6m8OiNDrSLXDRwzutbsppt8w40ypvcrxt80w"},
{"content":{"body":"Ah, only if \"limited to only known values\", and area's shape=\"\" is not one of those...","msgtype":"m.text"},"ts":1676964193839,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$R0HBRo_OCtMZ6edK505LWJ4jcdxTtntJOTgyM_indLs"},
{"content":{"body":"Let's see...","msgtype":"m.text"},"ts":1676964195740,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$T6VWlHyjzEkpE_d61jpN4YTbj4xYeGnHXTssQ_WhTEY"},
{"content":{"body":"I gotta go for a bit, prolly back when you're away, but happy to see a thought dump ðŸ˜€","msgtype":"m.text"},"ts":1676964244297,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jG6VGecJnZQrLyMV5mU0w7Uu_NGJ73oI3d66ZtpqPnQ"},
{"content":{"body":"In Chromium at least it appears to be all hacks that are just enough to work with the spec's current model. There's a special ReflectEmpty which you can use for cases where the empty string maps to another keyword and is not the canonical keyword. If we ever created something that was both (a) limited to only known values; and (b) had two non-empty-string values mapping to a single state, Chromium would be unable to cope.","msgtype":"m.text"},"ts":1676964410681,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$AN330j1cp-5UhQLOEHBsSm0pUfg-QQTzGN8pnhuo8co"},
{"content":{"body":"Or would need to hack around it some more :)","msgtype":"m.text","org.matrix.msc1767.text":"Or would need to hack around it some more :)"},"ts":1676965547074,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$7FUgsBABPSD6sB9X2zeof5i3LxNoo7WxAhgoA-hGK9g"},
{"content":{"body":"Right, or just write custom bindings. It's just sad that there's no ready-made answer waiting for us that fits with the spec's model.","msgtype":"m.text"},"ts":1676965648497,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$BJF8jh0k1-BT8tYJndEYJvrT8EOsOPCJ9pLhnOmIKBU"},
{"content":{"body":"Domenic: on the other hand, maybe we shouldn't add such stuff?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: on the other hand, maybe we shouldn't add such stuff?","msgtype":"m.text"},"ts":1676968199997,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Oak4lXtDcWUSiBrq-h7COKwkQrTB5PRihROFVJ6tVrI"},
{"content":{"body":"So clamping doesn't affect the setter steps apparently. How is that even useful? The getter will give you 1000, but the content attribute (which carries the semantics, supposedly) will indicate 5000 or whatever it was set to...","msgtype":"m.text"},"ts":1676972439595,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$7K-ysJ0QeR6p91TbnBEVlO_5SBjt8ZOWAc1aYgjfSsc"},
{"content":{"body":"Some of this stuff we should probably prefix with legacy to discourage further usage of.","msgtype":"m.text"},"ts":1676972470228,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$JzD_VyoegCzgoZ3NkXR6SY17bleRfbYbSb6D2631FkM"},
{"content":{"body":"Did you test the setter in implementations? I don't really trust the spec very much...","msgtype":"m.text"},"ts":1676978690400,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gWrH1LVi4VBUuWa2x9i7g0YU4RbTwhAtuVoNGXQd9JA"},
{"content":{"body":"Domenic: yeah I did","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: yeah I did","msgtype":"m.text"},"ts":1676984284305,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gHLlkWAdOQhQdY9ry3j4oJ31ixwOVX2yPu43QaQ6uaE"},
{"content":{"body":"Domenic: and I guess it makes some sense because you cannot constrain `setAttribute()` anyway, but still, it all seems rather awkward","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: and I guess it makes some sense because you cannot constrain <code>setAttribute()</code> anyway, but still, it all seems rather awkward","msgtype":"m.text"},"ts":1676984313694,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$79S2tcd9PtEdq7QmjMK5Xyz7Aa5oPfQfOFxjpt7BE8I"},
{"content":{"body":"Domenic: there is definitely some redundancy in the specification around clamping, the default value concept, positive numbers; I think we could simplify that somewhat and at the very least remove some redundancy here and there, but would prefer to sort that out as a follow-up to ease review and make it clearer to future people where we made mistakes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: there is definitely some redundancy in the specification around clamping, the default value concept, positive numbers; I think we could simplify that somewhat and at the very least remove some redundancy here and there, but would prefer to sort that out as a follow-up to ease review and make it clearer to future people where we made mistakes","msgtype":"m.text"},"ts":1676984418019,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$X0hCzXxRKh1flgWinDwNT7yqORBbVAvkHe7jT8Vmi40"},
{"content":{"body":"> <@annevk:matrix.org> Andreu Botella: are you familiar with HttpOnly cookies?\n\nJust to check my understanding: the reasoning here is, there isn't much point in exposing an API only for non-HttpOnly cookies since we're encouraging a move towards those anyway for security purposes?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$bEcfjwK0d1S8z8PVBGeqv01FNFji6hYbbvFu6dA7OZY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: are you familiar with HttpOnly cookies?</blockquote></mx-reply>Just to check my understanding: the reasoning here is, there isn't much point in exposing an API only for non-HttpOnly cookies since we're encouraging a move towards those anyway for security purposes?","m.relates_to":{"m.in_reply_to":{"event_id":"$bEcfjwK0d1S8z8PVBGeqv01FNFji6hYbbvFu6dA7OZY"}},"msgtype":"m.text"},"ts":1676991474846,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$QsvPg2CA-7IWSvigPT86o96txbNZv7MJjfjXmgwHFu4"},
{"content":{"body":"I thought the issue was that `response.headers.get(\"Set-Cookie\")` would expose cookies to scripts that shouldn't be","format":"org.matrix.custom.html","formatted_body":"I thought the issue was that <code>response.headers.get(&quot;Set-Cookie&quot;)</code> would expose cookies to scripts that shouldn't be","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I thought the issue was that `response.headers.get(\"Set-Cookie\")` would expose cookies to scripts that shouldn't be","mimetype":"text/plain"},{"body":"I thought the issue was that <code>response.headers.get(&quot;Set-Cookie&quot;)</code> would expose cookies to scripts that shouldn't be","mimetype":"text/html"}]},"ts":1676991628216,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$P-oXsmomz7GkIMDHX2N8pGKS4aIY77VOoOoezP07NTQ"},
{"content":{"body":"Domenic: are we changing how html numbers in attributes are parsed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: are we changing how html numbers in attributes are parsed?","msgtype":"m.text"},"ts":1676991659445,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$AcPbWUTknNhLH17YxTtmSgRv0FDWZfjgWNoa_9xfBQw"},
{"content":{"body":"I guess you could filter `Set-Cookie` headers depending on whether they are `HttpOnly`, but that would mean parsing the header at filter time, which could cause parsing differences to result in XSS I guess","format":"org.matrix.custom.html","formatted_body":"I guess you could filter <code>Set-Cookie</code> headers depending on whether they are <code>HttpOnly</code>, but that would mean parsing the header at filter time, which could cause parsing differences to result in XSS I guess","msgtype":"m.text"},"ts":1676991717214,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$JKGFGP5Y-i9B4HoUNLPapyjCheJxaozfyRlO7f_iWlw"},
{"content":{"body":"Does `response.headers` do any normalization right now?","format":"org.matrix.custom.html","formatted_body":"Does <code>response.headers</code> do any normalization right now?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Does `response.headers` do any normalization right now?","mimetype":"text/plain"},{"body":"Does <code>response.headers</code> do any normalization right now?","mimetype":"text/html"}]},"ts":1676991800399,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$fQcKcwWtxek-yIuDE8aUSf-pulxHDPWl4T7rhmT4rgY"},
{"content":{"body":"littledan: are you talking about an API for the cookie store or an API for cookie \"suggestions\" on a Set-Cookie header of a response, minus those marked HttpOnly?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: are you talking about an API for the cookie store or an API for cookie &quot;suggestions&quot; on a Set-Cookie header of a response, minus those marked HttpOnly?","msgtype":"m.text"},"ts":1676991996007,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vRS-HLsp5VHFaCLTyPs0I0DynUmiJkbw8_SRkUPEaT4"},
{"content":{"body":"littledan: the former has some difficulties as per the review feedback from Mozilla (and WebKit?) on the Cookie Store API, not sure anyone seriously proposed the latter ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: the former has some difficulties as per the review feedback from Mozilla (and WebKit?) on the Cookie Store API, not sure anyone seriously proposed the latter","msgtype":"m.text"},"ts":1676992039992,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$E8r1ejehjrP29BMBqPad3F0oggKc_yowpJy7M4vZGvo"},
{"content":{"body":"Ms2ger: no, it either happens in the HTTP parser or is passed along as-is, but we do filter on top...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ms2ger:igalia.com\">Ms2ger</a>: no, it either happens in the HTTP parser or is passed along as-is, but we do filter on top...","msgtype":"m.text"},"ts":1676992111334,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$_CEJ1n4UOheSuVr3bfAvZ_SDlguxiFfTnOaAzKvcLlU"},
{"content":{"body":"zcorpan: no, we're fixing some aspects of reflection in https://github.com/whatwg/html/pull/8496","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: no, we're fixing some aspects of reflection in https://github.com/whatwg/html/pull/8496","msgtype":"m.text"},"ts":1676992141413,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$J1-uSMxffWykTHXjtVzOrlH6N-zz8cPDoPDcT9ZRZ5A"},
{"content":{"body":"https://twitter.com/jaffathecake/status/1628001142037745664 is pretty interesting Jake Archibald ","format":"org.matrix.custom.html","formatted_body":"https://twitter.com/jaffathecake/status/1628001142037745664 is pretty interesting <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>","msgtype":"m.text"},"ts":1676993453605,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$02L_GmZO1ZJhIi1F_TEq2aruxAEnHKAz2uAstg99Mp4"},
{"content":{"body":"I wonder what happens when you present folks with `Response.json()` and `response.json()`","format":"org.matrix.custom.html","formatted_body":"I wonder what happens when you present folks with <code>Response.json()</code> and <code>response.json()</code>","msgtype":"m.text"},"ts":1676993512831,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$mKdgSX4Jzrh-rz6coSCKvH6EQhFpgqvwNP_t_x8Lh-o"},
{"content":{"body":"annevk: ohh, I brought up `Response.redirect()` vs `response.json()` in one of the replies, but I'd forgotten that `Response.json()` was a thing.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: ohh, I brought up <code>Response.redirect()</code> vs <code>response.json()</code> in one of the replies, but I'd forgotten that <code>Response.json()</code> was a thing.","msgtype":"m.text"},"ts":1676993642555,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$uXGT0ODHD9OlDtZWJsqQGZm2NVbto8U9iZzqpX9nb4I"},
{"content":{"body":"Oh lol, Mastodon is worse https://hachyderm.io/@jaffathecake@mastodon.social/109902664880383769","msgtype":"m.text"},"ts":1676993642849,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$kLVkEpvHZh3r8IuLWGrIh_3S42ZXkhsLzoEDDmfOKJg"},
{"content":{"body":"annevk: the difference in the results for `EventTarget` on Mastodon is blowing my mind a bit","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: the difference in the results for <code>EventTarget</code> on Mastodon is blowing my mind a bit","msgtype":"m.text"},"ts":1676993693216,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$vA3pqHOTlNXR1SXUrbLl2zXDX-P2IqzfYLsNqXtQlSU"}
]