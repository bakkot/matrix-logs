[
{"content":{"body":"Domenic: now I wonder what happens when you assign to a long and it's out-of-range","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: now I wonder what happens when you assign to a long and it's out-of-range","msgtype":"m.text"},"ts":1676963278808,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$L4V5a3kSQFBm9y7P4n7g-cM-_hweJ3M9jomZ06ZiStY"},
{"content":{"body":"annevk: The setter will never receive it, but yeah if you have `contentattribute=\"1111111111111111111111111\"`... I suspect that does fall back to the default, but I wonder.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: The setter will never receive it, but yeah if you have <code>contentattribute=&quot;1111111111111111111111111&quot;</code>... I suspect that does fall back to the default, but I wonder.","msgtype":"m.text"},"ts":1676963343304,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$S7C9hB56uJgmfaXM1Me6FngvRsbvERcQT5U_61nekEM"},
{"content":{"body":"Domenic: oh right, it's because all the magic is in the getters that we can't rely on Clamp and such, meh","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: oh right, it's because all the magic is in the getters that we can't rely on Clamp and such, meh","msgtype":"m.text"},"ts":1676963389834,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OJ1gQtWcBtHSocU_9wg5nu6N6O3oXpIm_PseGm4s7Sw"},
{"content":{"body":"Although, maybe if ConvertToInt took EnforceRange and Clamp as arguments of sorts we could actually be using that","msgtype":"m.text"},"ts":1676963472721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jnH_b5SF4P1GWKPDf0xtuS0IVTMKjqWqmNYQnBav6cU"},
{"content":{"body":"It would be nice to investigate if we could have fewer number parsers, but that would be a hell of a yak shave for this project, probably worth at least a follow-up issue though","msgtype":"m.text"},"ts":1676963818764,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$0Y4kliSgGiMQ2ctyqUn-BpZeXANutXMzGOYhWlwxq0c"},
{"content":{"body":"Domenic: I was also thinking that we could express enumerated attribute tables as two arrays/sets in Web IDL, but it might get rather unwieldy and we'd have two sources of information; arguably that's the case with something like [ReflectURL] as well, but that would make it pretty glaring","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I was also thinking that we could express enumerated attribute tables as two arrays/sets in Web IDL, but it might get rather unwieldy and we'd have two sources of information; arguably that's the case with something like [ReflectURL] as well, but that would make it pretty glaring","msgtype":"m.text"},"ts":1676963954750,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$98kuDi2S19bD8VYAKzwa0h4RD5EnCimCsWooHXGkc8c"},
{"content":{"body":"Yes, I have had similar thoughts. However I believe most engines have some sort of IDL for enumerated attributes. It doesn't match the spec's model that well, but somehow gives the same observable results.","msgtype":"m.text"},"ts":1676964003409,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sYJ3rNqQ75qxxRuYmmwVxPIFYZv-Yd1OPwVltHt_754"},
{"content":{"body":"I think maybe it only takes care of the getter/setter behavior and doesn't take care of producing a \"state\" which the rest of the spec/implementation can consult?","msgtype":"m.text"},"ts":1676964066817,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$uS4wLCLaCt9FLqMWgaL-IIqGwCqN_XkEMGbkGS99qBQ"},
{"content":{"body":"Hmm, perhaps with some custom logic for the bad cases? I guess we need to look into that first then.","msgtype":"m.text"},"ts":1676964067541,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Tp_wX_Sf2u-TICuW_bVTF5TO8pxmAh2ICRiRN2f4REE"},
{"content":{"body":"So like you don't need to identify that \"rect\" and \"rectangle\" both go to the same state, in the IDL.","msgtype":"m.text"},"ts":1676964096327,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$rdLuGMdh4_5Qjd8k4vdrSpyfk7r97bmv_M1O_j7hF5c"},
{"content":{"body":"Hmm, but if you set to one you get the other back, right? You'd have to encode that somehow.","msgtype":"m.text"},"ts":1676964128909,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$6kSHIqB6m8OiNDrSLXDRwzutbsppt8w40ypvcrxt80w"},
{"content":{"body":"Ah, only if \"limited to only known values\", and area's shape=\"\" is not one of those...","msgtype":"m.text"},"ts":1676964193839,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$R0HBRo_OCtMZ6edK505LWJ4jcdxTtntJOTgyM_indLs"},
{"content":{"body":"Let's see...","msgtype":"m.text"},"ts":1676964195740,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$T6VWlHyjzEkpE_d61jpN4YTbj4xYeGnHXTssQ_WhTEY"},
{"content":{"body":"I gotta go for a bit, prolly back when you're away, but happy to see a thought dump ðŸ˜€","msgtype":"m.text"},"ts":1676964244297,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jG6VGecJnZQrLyMV5mU0w7Uu_NGJ73oI3d66ZtpqPnQ"},
{"content":{"body":"In Chromium at least it appears to be all hacks that are just enough to work with the spec's current model. There's a special ReflectEmpty which you can use for cases where the empty string maps to another keyword and is not the canonical keyword. If we ever created something that was both (a) limited to only known values; and (b) had two non-empty-string values mapping to a single state, Chromium would be unable to cope.","msgtype":"m.text"},"ts":1676964410681,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$AN330j1cp-5UhQLOEHBsSm0pUfg-QQTzGN8pnhuo8co"}
]