[
{"content":{"body":"Domenic: I don’t disagree. But as far as the MDN side goes, a specific problem we chronically run into is that historically (and still) we have only had Deprecated and Obsolete flags. The current policy is to completely stop using Obsolete flag and only use the Deprecated flag. But if we mark a feature as Deprecated when the relevant spec doesn’t actually indicate that feature is deprecated, then we get reports from (sometimes angry) developers who somewhat-rightly take issue with MDN saying that something’s deprecated when it’s actually not.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I don’t disagree. But as far as the MDN side goes, a specific problem we chronically run into is that historically (and still) we have only had Deprecated and Obsolete flags. The current policy is to completely stop using Obsolete flag and only use the Deprecated flag. But if we mark a feature as Deprecated when the relevant spec doesn’t actually indicate that feature is deprecated, then we get reports from (sometimes angry) developers who somewhat-rightly take issue with MDN saying that something’s deprecated when it’s actually not.","msgtype":"m.text"},"ts":1631154128825,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$39unwJLuQySkWXKU7v6jdoJw59m-1rYI264i4ppMBEM"},
{"content":{"body":"The solution I support for that is:\n* We stop using the term _Deprecated_ altogether.\n* We instead use the term _Discouraged_.\n…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689","format":"org.matrix.custom.html","formatted_body":"<p>The solution I support for that is:</p>\n<ul>\n<li>We stop using the term <em>Deprecated</em> altogether.</li>\n<li>We instead use the term <em>Discouraged</em>.<br>…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689</li>\n</ul>\n","msgtype":"m.text"},"ts":1631154205781,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$tBmwcbLKDItwPOZwtfKm8XeNNBG5vtouD0maV7fmAZ4"},
{"content":{"body":" * The solution I support for that is:\n- We stop using the term _Deprecated_ altogether.\n- We instead use the term _Discouraged_.\n\n…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689","format":"org.matrix.custom.html","formatted_body":" * <p>The solution I support for that is:</p>\n<ul>\n<li>We stop using the term <em>Deprecated</em> altogether.</li>\n<li>We instead use the term <em>Discouraged</em>.</li>\n</ul>\n<p>…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689</p>\n","m.new_content":{"body":"The solution I support for that is:\n- We stop using the term _Deprecated_ altogether.\n- We instead use the term _Discouraged_.\n\n…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689","format":"org.matrix.custom.html","formatted_body":"<p>The solution I support for that is:</p>\n<ul>\n<li>We stop using the term <em>Deprecated</em> altogether.</li>\n<li>We instead use the term <em>Discouraged</em>.</li>\n</ul>\n<p>…for reasons outlined in https://github.com/mdn/content/discussions/5549#discussioncomment-814689</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$tBmwcbLKDItwPOZwtfKm8XeNNBG5vtouD0maV7fmAZ4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631154213212,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$FK1c8alSukDmYFqG5Z_x59jjEGOpBbZiNf2o1dWC8PA"},
{"content":{"body":"> <@bakkot:matrix.org> yeah, tc39 has largely come to the understanding that this was a mistake, and we're (very) slowly moving bits into the body of the main specification, marked as \"Legacy\" meaning \"we don't like this but we can't take it out, please don't use it\"\n\nI like *Legacy* but also be happy to see some accompanying “discouraged” language where appropriated. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$2MBnrqsFtDG3Sk_jggTxDvqpFq6QkxHSCCyAiPVqiCU?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>yeah, tc39 has largely come to the understanding that this was a mistake, and we're (very) slowly moving bits into the body of the main specification, marked as \"Legacy\" meaning \"we don't like this but we can't take it out, please don't use it\"</blockquote></mx-reply>I like <em>Legacy</em> but also be happy to see some accompanying “discouraged” language where appropriated. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","m.relates_to":{"m.in_reply_to":{"event_id":"$2MBnrqsFtDG3Sk_jggTxDvqpFq6QkxHSCCyAiPVqiCU"}},"msgtype":"m.text"},"ts":1631155105782,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$cRIrg6j9_Xcyw4e0Mmml17YpbYMMgT4Cck4l8y84AVo"},
{"content":{"body":"> <@bakkot:matrix.org> yeah, tc39 has largely come to the understanding that this was a mistake, and we're (very) slowly moving bits into the body of the main specification, marked as \"Legacy\" meaning \"we don't like this but we can't take it out, please don't use it\"\n\n * I like _Legacy_ but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$2MBnrqsFtDG3Sk_jggTxDvqpFq6QkxHSCCyAiPVqiCU?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>yeah, tc39 has largely come to the understanding that this was a mistake, and we're (very) slowly moving bits into the body of the main specification, marked as \"Legacy\" meaning \"we don't like this but we can't take it out, please don't use it\"</blockquote></mx-reply> * I like <em>Legacy</em> but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","m.new_content":{"body":"I like _Legacy_ but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","format":"org.matrix.custom.html","formatted_body":"I like <em>Legacy</em> but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much after at https://github.com/tc39/ecma262/pull/2441/files#r704904382","msgtype":"m.text"},"m.relates_to":{"event_id":"$cRIrg6j9_Xcyw4e0Mmml17YpbYMMgT4Cck4l8y84AVo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631155130197,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$GNrW8jjINQvf31rJsKS28xF-Rx705LibY30iBoFIN9c"},
{"content":{"body":" * I like _Legacy_ but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much over at https://github.com/tc39/ecma262/pull/2441/files#r704904382","format":"org.matrix.custom.html","formatted_body":" * I like <em>Legacy</em> but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much over at https://github.com/tc39/ecma262/pull/2441/files#r704904382","m.new_content":{"body":"I like _Legacy_ but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much over at https://github.com/tc39/ecma262/pull/2441/files#r704904382","format":"org.matrix.custom.html","formatted_body":"I like <em>Legacy</em> but also be happy to see some accompanying “discouraged” language where appropriate. Commented to say as much over at https://github.com/tc39/ecma262/pull/2441/files#r704904382","msgtype":"m.text"},"m.relates_to":{"event_id":"$cRIrg6j9_Xcyw4e0Mmml17YpbYMMgT4Cck4l8y84AVo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631155141916,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$yhD6_rLkuu-Db6FgXhqxndkxf7it7wQhHIyhIXJ9aHQ"},
{"content":{"body":"> <@jgraham_:matrix.org> Historically HTML in particular has given a lot of attention to what authors ought to do seperate to what works (the entire concept of a \"valid\" document). So it's very understandable that people would expect it to continue doing so, and that they take lack of negative indicators as implicit endorsement.\n\nExactly — though the cases where the spec states those kind of restrictions for authors/documents has mostly been limited to markup, with the rationale documented in https://html.spec.whatwg.org/multipage/introduction.html#restrictions-on-content-models-and-on-attribute-values and in https://html.spec.whatwg.org/multipage/introduction.html#syntax-errors. So I guess if we were to really want to venture into doing something similar for methods and properties, we’d ideally want to have some similar documented rationale guiding the choices.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Bg_nnj2fnftLBgFw_xLKn-Ber7WoNAtLWlXhhbA5d6M?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jgraham_:matrix.org\">@jgraham_:matrix.org</a><br>Historically HTML in particular has given a lot of attention to what authors ought to do seperate to what works (the entire concept of a &quot;valid&quot; document). So it&#39;s very understandable that people would expect it to continue doing so, and that they take lack of negative indicators as implicit endorsement.</blockquote></mx-reply>Exactly — though the cases where the spec states those kind of restrictions for authors/documents has mostly been limited to markup, with the rationale documented in https://html.spec.whatwg.org/multipage/introduction.html#restrictions-on-content-models-and-on-attribute-values and in https://html.spec.whatwg.org/multipage/introduction.html#syntax-errors. So I guess if we were to really want to venture into doing something similar for methods and properties, we’d ideally want to have some similar documented rationale guiding the choices.","m.relates_to":{"m.in_reply_to":{"event_id":"$Bg_nnj2fnftLBgFw_xLKn-Ber7WoNAtLWlXhhbA5d6M"}},"msgtype":"m.text"},"ts":1631155506564,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$5c0EWthaRUqJ3XE2LjVKk1mBLvrzzP1-PdUgv3Pc5OM"},
{"content":{"body":"But given the reasons Domenic mentioned at https://matrixlogs.bakkot.com/WHATWG/2021-09-08#L40, it seems it might be more difficult to articulate some consistent rationale than it is for the markup case.","msgtype":"m.text"},"ts":1631155694183,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$W8FZDE32lD-BSZ80Yh4foZmequkZwOedef0EGA6iiIc"},
{"content":{"body":"miketayl_r: I think a web developer should be able to read a spec directly if they want and I also think that information in a specification addressed to them should be focused if possible (i.e., not introduce multiple ways of doing the same thing when one suffices), but I realize that is somewhat idealized","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@miketayl_r:mozilla.org\">miketayl_r</a>: I think a web developer should be able to read a spec directly if they want and I also think that information in a specification addressed to them should be focused if possible (i.e., not introduce multiple ways of doing the same thing when one suffices), but I realize that is somewhat idealized","msgtype":"m.text"},"ts":1631168959925,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$kEJaitNSHZVtIHeYKmMVI4UGlHMbxSGQ8ZH-utTv1Qg"},
{"content":{"body":"> <@miketayl_r:mozilla.org> sent an image.\n\nI actually feel the second note is unnecessarily harsh even for MDN. It really doesn't hurt anyone to keep using those other properties. I don't mind discouraging people from using old features that have surprising behavior (like doc.all), but this is just an alias...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$pzqk0NmhXWhg9xqf40aL36PTWPBAUVpIKC8WB-_ruc4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@miketayl_r:mozilla.org\">@miketayl_r:mozilla.org</a><br>sent an image.</blockquote></mx-reply>I actually feel the second note is unnecessarily harsh even for MDN. It really doesn't hurt anyone to keep using those other properties. I don't mind discouraging people from using old features that have surprising behavior (like doc.all), but this is just an alias...","m.relates_to":{"m.in_reply_to":{"event_id":"$pzqk0NmhXWhg9xqf40aL36PTWPBAUVpIKC8WB-_ruc4"}},"msgtype":"m.text"},"ts":1631170101901,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$6sES2cafNhdryfS8DWM-NEpvABvvTe3Rm6eDPNc23wc"},
{"content":{"body":"I think at the time that note was added the other properties were not uniformly supported. Perhaps at this point it doesn't matter, but it still seems preferable for everyone to align on one of them.","msgtype":"m.text"},"ts":1631177662836,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$M764QCdo_mp8q9ehmIDrm59tz8UK3AE3N80nCvLG98E"},
{"content":{"body":"\"This one is more widely supported\" seems like a useful note. I guess I just don't see the value in practice of the alignment","msgtype":"m.text"},"ts":1631177882771,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$I_7tGn3fmIV1n0X4lz5yFu3jyg9Y_nYyWBe6Xynzfgs"},
{"content":{"body":"returns to work","msgtype":"m.emote"},"ts":1631177886468,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$-Fa-br4lzRASzgnxk1-bFGcPimtsRvvqHgoCdSJHszo"},
{"content":{"body":"annevk: I'm planning on adding 'origin' to history entries, so when a document is brought back to life it'll use the same origin as it did before, unless something happens which changes the origin along the way, such as a redirect to another origin.\n\nThis should cater for things like `about:blank` that take their origin from their creator.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: I'm planning on adding 'origin' to history entries, so when a document is brought back to life it'll use the same origin as it did before, unless something happens which changes the origin along the way, such as a redirect to another origin.</p>\n<p>This should cater for things like <code>about:blank</code> that take their origin from their creator.</p>\n","msgtype":"m.text"},"ts":1631183768178,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$0Q48ahvsDvGMQKQVr02vvUgffA_G4m_BV1BCY2oPgG4"},
{"content":{"body":"Does that make sense?","msgtype":"m.text"},"ts":1631183774557,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$wgUztw8h_BF0AlJAlOEWGLVF0PmplUm58o5BnIXeKoU"},
{"content":{"body":"I wonder if we should only do that for cases where we cannot derive it from elsewhere to avoid accidental dependencies. Do we have many other cases besides about:blank? smaug ^^ ","format":"org.matrix.custom.html","formatted_body":"I wonder if we should only do that for cases where we cannot derive it from elsewhere to avoid accidental dependencies. Do we have many other cases besides about:blank? <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> ^^","msgtype":"m.text"},"ts":1631184238603,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$_EqszWNdn2f73PJFXZNRAde0J08BdIw74Ky3sg1GxUM"},
{"content":{"body":"I can't remember exactly what data/blob URLs do here. I know they're an 'opaque' origin, but does that mean all storage is blocked, or is a temporary origin created?","msgtype":"m.text"},"ts":1631184536792,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$ulUQITQDn4-XjTt5VpSjim88CJKQaqxz7nz_3_IFkYY"},
{"content":{"body":"storage is blocked","msgtype":"m.text"},"ts":1631184782255,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$NzIXrfWUNWAuoovKsIBOY3PW9bnbkiVguu5S2F2YEpE"},
{"content":{"body":"`data:text/html,<script>try { localStorage.setItem(\"foo\", \"foo\") } catch(err) { alert(err) }</script>`","format":"org.matrix.custom.html","formatted_body":"<code>data:text/html,&lt;script&gt;try { localStorage.setItem(&quot;foo&quot;, &quot;foo&quot;) } catch(err) { alert(err) }&lt;/script&gt;</code>","msgtype":"m.text"},"ts":1631184826574,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$SKXzW-sRJxIKqx62yieDsisgTYZOWqKpUvcbVM0Wl0k"},
{"content":{"body":"There's srcdoc, but I guess you could always get the origin from the parent in that case","msgtype":"m.text"},"ts":1631185280365,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$xJqpNhmXFY3qR8EraweNLp8CcLk0yVqYaBJWAm0DxEI"},
{"content":{"body":"Jake Archibald: blob URLs get their origin from the blob URL store","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: blob URLs get their origin from the blob URL store","msgtype":"m.text"},"ts":1631185853728,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Dif6jDjFRBbzOb_nT7XZ8LCEOYIRc1e751ymStROjCs"},
{"content":{"body":" * Jake Archibald: blob URLs get their origin from the blob URL store (definitely not always opaque)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: blob URLs get their origin from the blob URL store (definitely not always opaque)","m.new_content":{"body":"Jake Archibald: blob URLs get their origin from the blob URL store (definitely not always opaque)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: blob URLs get their origin from the blob URL store (definitely not always opaque)","msgtype":"m.text"},"m.relates_to":{"event_id":"$Dif6jDjFRBbzOb_nT7XZ8LCEOYIRc1e751ymStROjCs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631185885642,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$rsi4johNTt2qPGmYsxjoYAco2o985SSipmbCHtxYIdk"},
{"content":{"body":"If it's just `about:blank` then I agree it should be special-cased","format":"org.matrix.custom.html","formatted_body":"If it's just <code>about:blank</code> then I agree it should be special-cased","msgtype":"m.text"},"ts":1631186423697,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$VLRVohPZPKr4xGuSYK_HtvSCL-lE8kznz7qzUYYaVEk"},
{"content":{"body":"starts thinking about `document.domain`","format":"org.matrix.custom.html","formatted_body":"starts thinking about <code>document.domain</code>","msgtype":"m.emote"},"ts":1631186750619,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$B6uiJ6ClMFHbgAdZ2q8gggGLjXn8VrVSS2kxbJIB388"},
{"content":{"body":"Jake Archibald: I think in the case where you navigate to something again that isn't in bfcache, you wouldn't want things like a document.domain set to be restored, although maybe you do for about:blank? Not sure there is a correct answer here. History is hard.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I think in the case where you navigate to something again that isn't in bfcache, you wouldn't want things like a document.domain set to be restored, although maybe you do for about:blank? Not sure there is a correct answer here. History is hard.","msgtype":"m.text"},"ts":1631188724062,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$TF3NXEGwq_Ny68RBK82JSDgHQKx0acG7_C3qkSYo3-I"},
{"content":{"body":"It doesn't seem like `document.domain` is restored","format":"org.matrix.custom.html","formatted_body":"It doesn't seem like <code>document.domain</code> is restored","msgtype":"m.text"},"ts":1631188751371,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$RMlIREvMqPXsdbEUDcfKEC7CBC33NbvDgq963XiHfl8"},
{"content":{"body":"But, I think apphistory needs history entries to have an origin to it knows which entries are same-origin.","msgtype":"m.text"},"ts":1631188793359,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$SPaNWcxW4G2V5qtqmTnXc8xTPp3nFt-_650tbf7BthQ"},
{"content":{"body":"Though note that the origin about:blank inherits could be a document.domain-type origin.","msgtype":"m.text"},"ts":1631188799145,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$3_fT9yw4Rz6gzZ9Lmjd4xDl8S15KKmQSti6ppzM62-A"},
{"content":{"body":"That didn't seem to be the case in a quick test I did in Chrome. Although it could be different in other browsers","msgtype":"m.text"},"ts":1631188874185,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$Edj1J2PotGUqodvszP68qd2NriypkkJ1La2KmLcmN48"},
{"content":{"body":"haha this stuff is all so messy","msgtype":"m.text"},"ts":1631188895775,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$RanOO-E4HCgkET_C_wmoTac2Oav0ityI1c-zWgm8QNA"},
{"content":{"body":"Jake Archibald: if the parent sets document.domain and then you create the about:blank child, how could it not inherit it?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: if the parent sets document.domain and then you create the about:blank child, how could it not inherit it?","msgtype":"m.text"},"ts":1631188946416,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$NiAkEsDU-Iuj1MzKYRPHv8zwG_6D23XwCjogqvXZ2nY"},
{"content":{"body":"hmm, I see what you mean","msgtype":"m.text"},"ts":1631188972113,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$7fANH2UUwRBMCnrF9jE3Zxa1woaX0WrSR8LS2dYdCVU"},
{"content":{"body":"The child ends up being cross-origin? Or after navigating the child and then going back it's cross-origin?","msgtype":"m.text"},"ts":1631188976937,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$2KgBVjJAt-W0kPJjTRmzI0UV7JA6qum-Z2xtGmyIzhc"},
{"content":{"body":"testing again…","msgtype":"m.text"},"ts":1631189008644,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$XP9tY3H5pwZc1Ru_pp7jRjNN3rjKaMRVn94_XcIY4I4"},
{"content":{"body":"> * <@jakea:matrix.org> starts thinking about `document.domain`\n\nI'm so sorry","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$B6uiJ6ClMFHbgAdZ2q8gggGLjXn8VrVSS2kxbJIB388?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> * <a href=\"https://matrix.to/#/@jakea:matrix.org\">@jakea:matrix.org</a><br>starts thinking about <code>document.domain</code></blockquote></mx-reply>I'm so sorry","m.relates_to":{"m.in_reply_to":{"event_id":"$B6uiJ6ClMFHbgAdZ2q8gggGLjXn8VrVSS2kxbJIB388"}},"msgtype":"m.text"},"ts":1631189010785,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$mQz5fU93NQVcUpGJ1XIg5q07S2CRgoSxZot-GEhka0A"},
{"content":{"body":"As for your question, it seems you could mainly use URLs for determining same-origin-ness, except for sandboxing cases and document.domain. Ignoring document.domain for this seems fine, sandboxing is unclear. But sandboxing is also something that could change if the entries are not bfcache-backed.","msgtype":"m.text"},"ts":1631189115279,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$E8oPRWz6xEDS1-i-DNj1VSmTZsFE8cuPyy6kKHCjqw4"},
{"content":{"body":"There's an open question on whether the sandbox stuff should be in the history entry","msgtype":"m.text"},"ts":1631189177626,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$KTASglambriOR9swv1DBaOAgUa76oEHjazVo9zYeSHM"},
{"content":{"body":"I still think we should cycle the iframe browsing context when sandboxing changes","msgtype":"m.text"},"ts":1631189198358,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$OaGgbdYljsDE2LxFqJCfNhW-TubWcofXo_-Ia8h8kjs"},
{"content":{"body":"(or, the navigation after sandboxing changes)","msgtype":"m.text"},"ts":1631189215338,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$EsIPQoTGA17pYDC92DwhybExse46kuiU3wLqEMOuZdA"},
{"content":{"body":"Is there an API that gives me the origin of a document?","msgtype":"m.text"},"ts":1631189252143,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$aLTr7eAz9WgDKmmX6FDZM013e6iZ_j7YiFI0zCBKPys"},
{"content":{"body":"I suspect we don't want to take sandboxing into account for same-origin-ness though.","msgtype":"m.text"},"ts":1631189263205,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$gGbrONCfQZQ_DGjunonnxdMUt8E7hw3f0v_BlRlGGcA"},
{"content":{"body":"Jake Archibald: self.origin","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: self.origin","msgtype":"m.text"},"ts":1631189267563,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$lWz1kiraoVErMOIlzOsTJsITh84gbKNeivFMrakDQyM"},
{"content":{"body":"self.origin doesn't update with document.domain","msgtype":"m.text"},"ts":1631189282773,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$QrdC1IclU2KViPolBI_Q7k927dWsWmfHxeScl2eXLW4"},
{"content":{"body":"Jake Archibald: document.domain things you can only reveal through script access and such","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: document.domain things you can only reveal through script access and such","msgtype":"m.text"},"ts":1631189302565,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$B_PsXPgt0rsYxJwgaxSHM6vJVJo18keqJyKt0ATmRrA"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1631189311683,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$g0VzVf3lFMq4NG-QjgRk3ku7pL7aXC4Czy9JO6fb0Mg"},
{"content":{"body":"Because if you go from /a to /b to /c initially, we'd consider those all same-origin. If /b happens to be sandboxed, it'd be weird if the navigation to /c and going back to /a would suddenly be seen as cross-origin I think.","msgtype":"m.text"},"ts":1631189406080,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$-TOsqaP5kwTxnz3tjAaKn8KiZKDw6j7WWV-5QzjbuB8"},
{"content":{"body":"/c to /a wouldn't be cross-origin, but /a to /b would be, right?","msgtype":"m.text"},"ts":1631189504324,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$mMlCoCiWRT12MUhRk8vxUdsolj6Suk0V-NPKav2v9w0"},
{"content":{"body":"Jake Archibald: sorry, I meant if you navigate to /b (which you then discover to be sandboxed) and then go to /c or back to /a.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: sorry, I meant if you navigate to /b (which you then discover to be sandboxed) and then go to /c or back to /a.","msgtype":"m.text"},"ts":1631189632293,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$e5NvixZYAXsYfRp40FDJ5sm0SasWf_m4xSY5rFpJ-Cs"},
{"content":{"body":"annevk: navigating from an opaque origin would always be a cross origin navigation, no?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: navigating from an opaque origin would always be a cross origin navigation, no?","msgtype":"m.text"},"ts":1631189757567,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$HKJDSXYygDwq9USrGD2K-uPjRf9oMFvcU3EZmwYNlyU"},
{"content":{"body":"Jake Archibald: yeah, true, I'm not sure what to make of this. Is app history even available on opaque origins?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: yeah, true, I'm not sure what to make of this. Is app history even available on opaque origins?","msgtype":"m.text"},"ts":1631189869964,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ZL4hJTnAnvMc-6RcqnoT2EXqqqoX0Wf8IgXWC10bHmw"},
{"content":{"body":"annevk: Good question. I assumed yes, but it'd have no visibility of other entries since they're other-origin both forwards and back. I think history entries need an origin with app history because: /a to (same origin blob url) to /c - the final page should have visibility into the two history entries before it because they're contiguously same origin, even if the blob url is revoked. Domenic does that make sense?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Good question. I assumed yes, but it'd have no visibility of other entries since they're other-origin both forwards and back. I think history entries need an origin with app history because: /a to (same origin blob url) to /c - the final page should have visibility into the two history entries before it because they're contiguously same origin, even if the blob url is revoked. <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> does that make sense?","msgtype":"m.text"},"ts":1631190038677,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$15aQONN-8jXGCnuulj3na1ZkCYjGSSQBTU80jS_-33U"},
{"content":{"body":"A same-origin blob URL always has the origin in the URL itself, so even if it's revoked you get it. See also https://url.spec.whatwg.org/#origin.","msgtype":"m.text"},"ts":1631190146881,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$o9tUQK7iK64ziJoAbf8614clVPJSsgGpOz7RBLhpCHY"},
{"content":{"body":"ah, fair enough","msgtype":"m.text"},"ts":1631190180589,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$wTgLxdt9trVkBgokB8qgjrwLXQKD5cKUKkO68D9Vk2c"},
{"content":{"body":"Ah, except in the case where an opaque origin minted the blob URL. You could then get a blob URL that's same-origin with the opaque origin. But at that point I guess the question that's important is whether we want to support opaque origins at all.","msgtype":"m.text"},"ts":1631190196939,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$YnGpsNWq8O_YZpzrqdP2nYWtayIfCpNitv5ZRzVobDw"},
{"content":{"body":"I forgot that blob urls have an origin in them","msgtype":"m.text"},"ts":1631190251544,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$VNwZaCXcmBjUHvh-H2RrF8ZHRUexbmP_0jXWzdJUON8"},
{"content":{"body":"(One oddity here is that while (same origin blob url) can have the same origin as /a, if it's revoked traversing to it will result in a document with an opaque origin (network error).)","msgtype":"m.text"},"ts":1631190334535,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$t_5w4QcRqgEHRHSPY_-3BmZ_a2DaU8BLq4nrUHOrilo"},
{"content":{"body":"Yeah, but redirects can happen too","msgtype":"m.text"},"ts":1631190373448,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$3JWPD7xsmr5gtP2QbMCyH9l76rVuFtj8BJ1NFvplLog"},
{"content":{"body":"there's no guarantee that a history entry will be the same origin when you traverse to it","msgtype":"m.text"},"ts":1631190391497,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$8Z7eOYmGrexyYrlT4doMpCgC6vhu9r_dRVkSlBNHgB0"},
{"content":{"body":"hm, wait, I see what you mean","msgtype":"m.text"},"ts":1631190425083,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$2bSeByuSEbG_bkuSNusojK3ZBkst3kotxAnfakra20Y"},
{"content":{"body":"is it now an opaque origin history entry","msgtype":"m.text"},"ts":1631190437583,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$aIV-Z4WXocZjYeS6i8SLos_1Y_to668pELLnZN6Rfgs"},
{"content":{"body":"that's an interesting question for app history in general","msgtype":"m.text"},"ts":1631190463412,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$4RFxXEe7-1RxhdhdOp3KxlRdEmWN01urLBpTyCd47HQ"},
{"content":{"body":"Ah ok, now I think it through, I don't think network error pages would change the origin of the history entry, in the same way it wouldn't change the referrer or form state","msgtype":"m.text"},"ts":1631190941817,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$AI3s7u4rH8i4pVOCH6buRqoIm5m08GiWbjIrq8C5jLs"},
{"content":{"body":"Yeah, didn't mean to send you astray","msgtype":"m.text"},"ts":1631191175266,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Ofinq3hERIOwUOrxr1EaTQBYrf34OMBXU6q-uFdVhXA"},
{"content":{"body":"Jake Archibald: I realized just now that SVGOMG doesn't remove the version attribute","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I realized just now that SVGOMG doesn't remove the version attribute","msgtype":"m.text"},"ts":1631192659510,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$f2SmI_kgnPfsFRIRf1BKuWXshUg8y1SCPMM4sKcM19A"},
{"content":{"body":"annevk: huh, it does on the demo image","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: huh, it does on the demo image","msgtype":"m.text"},"ts":1631192830568,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$m0AS1Kmfx4hq6ClRG3IqNRGyHh4ejRLq4xsNJQwOCwk"},
{"content":{"body":"Jake Archibald: view-source:https://resources.whatwg.org/logo-testutils.svg is my test","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: view-source:https://resources.whatwg.org/logo-testutils.svg is my test","msgtype":"m.text"},"ts":1631192903936,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KZMFwtFrYbymlXCiIcd_D6vzbMHfonzakQ3JsntimSQ"},
{"content":{"body":"I've used your tool to optimize some of the new logos I created, but looking at the new SVGOMG today I realized it still had the version attribute","msgtype":"m.text"},"ts":1631192970980,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Pe2v5Q6CobkCWOsb9_w5IjE4zRI0m2-cw63A3hU1Ni8"},
{"content":{"body":"@annevk aha, so SVGO removes attributes that are set to their 'default', and it has the default as '1.1'","msgtype":"m.text"},"ts":1631193322411,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$tI2ux35FLUQ08JLH9Fo25wutj-fD8F_Obs85lsMa_JI"},
{"content":{"body":"I'll file an issue with them","msgtype":"m.text"},"ts":1631193329493,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$OF2zMYU9y1W1WJkrmL5NISi--M69hCTSkPPb3fuqRko"},
{"content":{"body":"Jake Archibald: ah I see, I'm pretty sure browsers ignore this attribute completely","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: ah I see, I'm pretty sure browsers ignore this attribute completely","msgtype":"m.text"},"ts":1631193395015,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$HLtkSE8ac9MSTWaiWgco06vju8vxmDCY4HjO58Tn0sw"},
{"content":{"body":"> <@annevk:mozilla.org> miketayl_r: I think a web developer should be able to read a spec directly if they want and I also think that information in a specification addressed to them should be focused if possible (i.e., not introduce multiple ways of doing the same thing when one suffices), but I realize that is somewhat idealized\n\nyeah - i used to read specs back when doing web-dev - i agree it should be useful. but yeah, also a challenge to to expect all editors to keep up with useful author-level guidance. i feel like good tech writing is harder than writing specs (i say this as someone who is skilled at neither)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$kEJaitNSHZVtIHeYKmMVI4UGlHMbxSGQ8ZH-utTv1Qg?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@miketayl_r:mozilla.org\">miketayl_r</a>: I think a web developer should be able to read a spec directly if they want and I also think that information in a specification addressed to them should be focused if possible (i.e., not introduce multiple ways of doing the same thing when one suffices), but I realize that is somewhat idealized</blockquote></mx-reply>yeah - i used to read specs back when doing web-dev - i agree it should be useful. but yeah, also a challenge to to expect all editors to keep up with useful author-level guidance. i feel like good tech writing is harder than writing specs (i say this as someone who is skilled at neither)","m.relates_to":{"m.in_reply_to":{"event_id":"$kEJaitNSHZVtIHeYKmMVI4UGlHMbxSGQ8ZH-utTv1Qg"}},"msgtype":"m.text"},"ts":1631193480981,"senderName":"miketayl_r","senderId":"@miketayl_r:mozilla.org","id":"$g8VP5UhBw1kLEaKFkqBJEMvVGYU5CTiCVMRV1qG2Mqc"},
{"content":{"body":"Domenic: what prevents a CSS module script from working in a worker? It seems the standard doesn't branch anywhere at the moment.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: what prevents a CSS module script from working in a worker? It seems the standard doesn't branch anywhere at the moment.","msgtype":"m.text"},"ts":1631198891240,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$xL93CyaWx-dQ5yFUK_E-kbr0DFX9uEp35MQqYzbkExg"},
{"content":{"body":"Domenic: this was one of the things I raised in https://github.com/tc39/proposal-import-assertions/pull/111.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: this was one of the things I raised in https://github.com/tc39/proposal-import-assertions/pull/111.","msgtype":"m.text"},"ts":1631198922866,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$h_z9OTtsJXVPEXMJquiP8UjBRZEPvcSEN_zZ5Tp1aiI"},
{"content":{"body":"dandclark: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dandclark:matrix.org\">dandclark</a>: ^^","msgtype":"m.text"},"ts":1631198937295,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Tj_pXDq-lP-CgbXEwqUTZZS_DzoT2-zQfLrHMytr3T0"},
{"content":{"body":"Never mind, I see now:\n\n> If the CSSStyleSheet interface is not exposed in setting's Realm, then return null.","format":"org.matrix.custom.html","formatted_body":"<p>Never mind, I see now:</p>\n<blockquote>\n<p>If the CSSStyleSheet interface is not exposed in setting's Realm, then return null.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1631198982068,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$T9mEkDLH5Gc0-OZei_2eVZIEMCVIgkFQOgGSxLfw-xc"},
{"content":{"body":"Which I guess means things are being fetched still.","msgtype":"m.text"},"ts":1631199064179,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$--yISj1_2zDRMe-PSDs71GS_5GGQYklvupptkOiSjyY"},
{"content":{"body":"> <@annevk:mozilla.org> Which I guess means things are being fetched still.\n\nOh true, we should probably fix that to not happen? If you file a bug I bet Dan will fix spec and write tests in short order :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$--yISj1_2zDRMe-PSDs71GS_5GGQYklvupptkOiSjyY?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>Which I guess means things are being fetched still.</blockquote></mx-reply>Oh true, we should probably fix that to not happen? If you file a bug I bet Dan will fix spec and write tests in short order :)","m.relates_to":{"m.in_reply_to":{"event_id":"$--yISj1_2zDRMe-PSDs71GS_5GGQYklvupptkOiSjyY"}},"msgtype":"m.text"},"ts":1631200225238,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$f1-q-GcYUXpbp1JCeoS3CVcF_mdhLYS1Ukcz_34IT5g"},
{"content":{"body":"Yeah, I think it makes more sense that we claim it's not supported when we do the type check, similar to how you are proposing the new method to work. I'll file.","msgtype":"m.text"},"ts":1631200371616,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$FWUenfwF5-GjYGOV2XOGTtVkNLS9ySTyU4DGIzh4WbQ"},
{"content":{"body":"Jake Archibald: so if opaque origins cannot access app history, we could maybe not take sandboxing into account for the same origin check; sandbox + allow-same-origin could then participate fully, and sandbox without that would create a same origin entry, but wouldn't be able to look at entries itself","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: so if opaque origins cannot access app history, we could maybe not take sandboxing into account for the same origin check; sandbox + allow-same-origin could then participate fully, and sandbox without that would create a same origin entry, but wouldn't be able to look at entries itself","msgtype":"m.text"},"ts":1631202310848,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$OazIYGWweMD0_me-PzXhUtiFJrlBbCbVdCiTOhVWYYA"},
{"content":{"body":"Jake Archibald: I think that also covers the error pages. The error pages do not get access (and cannot modify presumably), but they continue to be in the session history of the respective origin.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I think that also covers the error pages. The error pages do not get access (and cannot modify presumably), but they continue to be in the session history of the respective origin.","msgtype":"m.text"},"ts":1631202389117,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$3pNKKceH47Z2jBr3OuHWNk0mm9xepz4LxJOZYPXZU_0"},
{"content":{"body":"annevk: I don't think sandboxed pages can be same-origin for apphistory. Eg, if an opaque origin page does a `replaceState` type thing, isn't it a cross-origin leak to expose that new URL and state object to the other pages?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: I don't think sandboxed pages can be same-origin for apphistory. Eg, if an opaque origin page does a <code>replaceState</code> type thing, isn't it a cross-origin leak to expose that new URL and state object to the other pages?","msgtype":"m.text"},"ts":1631202669404,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$jRGevgJfUpQYhP_45IYcLiy8ePEUtHIBPinndaR0J0g"},
{"content":{"body":"Jake Archibald: I meant sandbox + allow-same-origin","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I meant sandbox + allow-same-origin","msgtype":"m.text"},"ts":1631202742764,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$5ywVgigGeLGhZRgmlAkzhlrhK7HQs3aIeFIJ98qaFgc"},
{"content":{"body":"annevk: \"sandbox without that would create a same origin entry\" that's the bit I don't think works","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: &quot;sandbox without that would create a same origin entry&quot; that's the bit I don't think works","msgtype":"m.text"},"ts":1631202799250,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$q3vWkt4HMIUxYiukaZ_QU7j3uHpaDgEqDa6NrGMg7po"},
{"content":{"body":"Jake Archibald: ah, there's the legacy history APIs too","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: ah, there's the legacy history APIs too","msgtype":"m.text"},"ts":1631202826583,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Ukmfv2cN7jUasMkU3Xd0IzjmbQVFBRxLh_bg_uGvoio"},
{"content":{"body":"annevk: I think the issue is with the new APIs, but maybe I'm missing something","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: I think the issue is with the new APIs, but maybe I'm missing something","msgtype":"m.text"},"ts":1631202858600,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$1CuE-06z2fAceiqjxvayjoLbfrYFcikm_vn7CugXJ9I"},
{"content":{"body":"Jake Archibald: I was thinking that opaque origins wouldn't have access to session history","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I was thinking that opaque origins wouldn't have access to session history","msgtype":"m.text"},"ts":1631202887095,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$vhZeQ9lmh1t054ft6To8Dt5NqDFIJFRYpU42KnXm0No"},
{"content":{"body":"Jake Archibald: in such a setup, it would be okay if they were same origin for the purposes of session history, I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: in such a setup, it would be okay if they were same origin for the purposes of session history, I think","msgtype":"m.text"},"ts":1631202916774,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$MS3tYlPE2S7DYQp2i_AUewI4bYjWpgrsxNtNaZOVFns"},
{"content":{"body":"Jake Archibald: but history.friends breaks it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: but history.friends breaks it","msgtype":"m.text"},"ts":1631202932838,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$3xcwPccZGxoqbLooL6BxpBmDDGb7wZezM6I5ULF97X8"},
{"content":{"body":"annevk: or just a hash navigation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: or just a hash navigation","msgtype":"m.text"},"ts":1631202944716,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$S5lo2FEUr00fbhKo-P6Z2xdgjbj0VIKOTOjwZQaBrIQ"},
{"content":{"body":"If an opaque origin page navigates to #super-secret, the non-opaque pages shouldn't be able to see that","msgtype":"m.text"},"ts":1631202977859,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$ct44QGynCfjOIgmyiXkyVCxDC0fbo5dWN1efGJfB3tA"},
{"content":{"body":"Yeah, I don't really want to special case error pages and such though. Ideally they'd follow the same model.","msgtype":"m.text"},"ts":1631203033168,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$U_vufkrD7obLx8_-Fl_x8GrQveH6lD03WuELsLOLXvU"},
{"content":{"body":"I guess I'd be okay with network errors being somewhat weird as they are also somewhat unusual (and you could use a service worker if you worry about them).","msgtype":"m.text"},"ts":1631203357429,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$hR1QciaQ-e_o8OcKygSfdhgSBONxc_QTBpKF3sNlOdE"},
{"content":{"body":"annevk: yeah, there are other special cases that I don't think the current spec handles. Eg, error documents must always be discarded when traversing away.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: yeah, there are other special cases that I don't think the current spec handles. Eg, error documents must always be discarded when traversing away.","msgtype":"m.text"},"ts":1631203422170,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$4deXpQoeXAk-TBUU0uLcvJqp7kaaTrNIvNMK-B6c4Bs"},
{"content":{"body":"Jake Archibald: ah, so that means we don't have to store an origin for them as they go away","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: ah, so that means we don't have to store an origin for them as they go away","msgtype":"m.text"},"ts":1631203492427,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$vpQ9ScEOta9klBcsuqiMuNY-DjWtzpC83xcKhAi-Cgk"}
]