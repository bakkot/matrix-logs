[
{"content":{"body":"Oh, I thought https://github.com/whatwg/wattsi/pull/161 would fix this...","m.mentions":{},"msgtype":"m.text"},"ts":1736823655145,"senderName":"Kaiido","senderId":"@kaiido:matrix.org","id":"$_ml5pXAwpP96FgNFm81o9U1iEbvlVt7T0LCiZN8DXpQ"},
{"content":{"body":"not also fixed in bikeshed yet, maybe?","m.mentions":{"user_ids":["@kaiido:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_ml5pXAwpP96FgNFm81o9U1iEbvlVt7T0LCiZN8DXpQ"}},"msgtype":"m.text"},"ts":1736825958945,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$RyZsNufABM74ZARs1yAFGCEq4tHGoWYgEsC15BH-XJQ"},
{"content":{"body":"Yes, TabAtkins fixed it for bikeshed in https://github.com/speced/bikeshed/commit/72e42de7d16654bc6059cf0d622d14d4035fe536","format":"org.matrix.custom.html","formatted_body":"Yes, <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a> fixed it for bikeshed in https://github.com/speced/bikeshed/commit/72e42de7d16654bc6059cf0d622d14d4035fe536","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"ts":1736828545747,"senderName":"Kaiido","senderId":"@kaiido:matrix.org","id":"$pyjy5C_xuz2S4LzlhRsQ-BAJBA4l8jDb6jllcID_KTg"},
{"content":{"body":"Maybe HTML's stylesheet doesn't do the darkmode-aware thing? Although I thought that part was shared between HTML and Bikeshed specs.","m.mentions":{},"msgtype":"m.text"},"ts":1736833251253,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UBFl-JPvn6_DN8qGQX_drHQkfFbQBsKAR6HmMFrqXWA"},
{"content":{"body":"The fix there is in the markup of the image itself, html is using its own file.","msgtype":"m.text"},"ts":1736835031839,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$l7Waaak6aK-AGWIYnobC_p8hTPoZ7XIZJi046JFoZ00"},
{"content":{"body":"HTML uses https://resources.whatwg.org/tracking-vector.svg which responds to dark mode. But the `img` needs `class=darkmode-aware`","format":"org.matrix.custom.html","formatted_body":"HTML uses https://resources.whatwg.org/tracking-vector.svg which responds to dark mode. But the <code>img</code> needs <code>class=darkmode-aware</code>","m.mentions":{},"msgtype":"m.text"},"ts":1736848524739,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$9nqOm7xllS_s1q5sTwE89nzy5G5ejNl7WQdQF6TBZTk"},
{"content":{"body":"But now I'm confused why it doesn't - https://github.com/whatwg/wattsi/blob/main/src/wattsi.pas#L1695","m.mentions":{},"msgtype":"m.text"},"ts":1736848742898,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$nJ9gG7fzuUBFarbgEQe2lb1_2eS0UJYifkJO8866tME"},
{"content":{"body":"zcorpan: I was thinking about the async-CSS discussion... `font-display: swap` is a valid use case (though I personally really dislike that UX)\nI thought of an option to add `<link rel=\"font stylesheet\">`, where `rel=font` would be non-blocking, but only allow font-descriptors","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I was thinking about the async-CSS discussion... <code>font-display: swap</code> is a valid use case (though I personally really dislike that UX)<br>I thought of an option to add <code>&lt;link rel=\"font stylesheet\"&gt;</code>, where <code>rel=font</code> would be non-blocking, but only allow font-descriptors","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736851698422,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$s14eISc3zHWt4hCWNLx6A6u9f8bj3jat6Qx3uoI1x8U"},
{"content":{"body":"Noam Rosenthal: I assume people use the onload hack for more than fonts","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I assume people use the onload hack for more than fonts","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1736851796552,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$tIf8AlZCUxx6e-yobhPeIcDV6giRVER3AjqFkke8-I8"},
{"content":{"body":"zcorpan: for that, I thought to have `<link rel=stylesheet for=some-id>` where the stylesheet would load, but would only apply when we see an element with that ID","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: for that, I thought to have <code>&lt;link rel=stylesheet for=some-id&gt;</code> where the stylesheet would load, but would only apply when we see an element with that ID","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736851955323,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$bBgkaUbFznXkGWYLtrN1_6A9BbWfVeHTdOSEdWUsrA4"},
{"content":{"body":"zcorpan: I kind of see these as separate use-cases, where in one of them you actively opt-in to an FOUT and in the other one you probably don't want it but you don't know when the element will come","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I kind of see these as separate use-cases, where in one of them you actively opt-in to an FOUT and in the other one you probably don't want it but you don't know when the element will come","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736851991397,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$A73cXeELlKgu4_H01hsurHCFB0FF-SI62cqJIyiownc"},
{"content":{"body":"* zcorpan: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the element will come","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the element will come","m.mentions":{},"m.new_content":{"body":"zcorpan: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the element will come","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the element will come","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A73cXeELlKgu4_H01hsurHCFB0FF-SI62cqJIyiownc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1736852000889,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$bRHzLbseBgY9BDYbE80qHauzdD-lrUZXhkm4wVbLZJ0"},
{"content":{"body":"If we had a general `async` people would use it for \"below the fold\" and then they'd have a FoUCy race between scrolling and CSS loading","format":"org.matrix.custom.html","formatted_body":"If we had a general <code>async</code> people would use it for \"below the fold\" and then they'd have a FoUCy race between scrolling and CSS loading","m.mentions":{},"msgtype":"m.text"},"ts":1736852053884,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$gIJgwrCpUOSUgtiqefGJ0-EljAhuMB4F0qKdkJXkOb8"},
{"content":{"body":"* zcorpan: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the content will come","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the content will come","m.mentions":{},"m.new_content":{"body":"zcorpan: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the content will come","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: I kind of see these as separate use-cases, where in one of them you actively opt-in to a FOUT and in the other one you probably don't want it but you don't know when the content will come","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$A73cXeELlKgu4_H01hsurHCFB0FF-SI62cqJIyiownc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1736852142581,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$cka6A8w-5DoIRzJTzWZRLa0SEoLCLUQSS149_0OpPXY"},
{"content":{"body":"Would the parser block on that stylesheet when it sees an element with `some-id`?","format":"org.matrix.custom.html","formatted_body":"Would the parser block on that stylesheet when it sees an element with <code>some-id</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1736852156490,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$pOroB6HXJprtOhkzPY1GcmQ1z7veBEVT3dCldhDpci8"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1736852162953,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Ze0Yi5d0nlBk0OYAJqaslg1shag_FMfLjNQibJtK0Zc"},
{"content":{"body":"Interesting, so same effect as putting the link just before that element (in chromium currently), but you can do it from `head`","format":"org.matrix.custom.html","formatted_body":"Interesting, so same effect as putting the link just before that element (in chromium currently), but you can do it from <code>head</code>","m.mentions":{},"msgtype":"m.text"},"ts":1736852233060,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$p2g98uUTeDXZWX4RvDB7PV4hSH_4KOzAHjP-tiL31Wg"},
{"content":{"body":"exactly","m.mentions":{},"msgtype":"m.text"},"ts":1736852241312,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$LQPiar7XzmEhBXHupr-iG_d5USg-G_mVNd9q5jbg4M8"},
{"content":{"body":"That seems reasonable, at least if webkit and gecko are onboard with the general stylesheets block the parser thing","m.mentions":{},"msgtype":"m.text"},"ts":1736852333725,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$sKK9b2HkVcVN2kKUVAi1PzV5FoVJxMR2L9906VEAB3k"},
{"content":{"body":"zcorpan: also render-blocking rather than parser-blocking at that point would be non-FoUCy","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: also render-blocking rather than parser-blocking at that point would be non-FoUCy","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736852361455,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$vGh8LUC4fMvjTvF9W0x2HpIkUkPV59OKaBJUUoPITtY"},
{"content":{"body":"though probably it would mean freezing the entire frame, might be worse UX than parser blocking where JS still runs","m.mentions":{},"msgtype":"m.text"},"ts":1736852399041,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$vjFYNO0DzjKl87kXcsBYWDKpCNEEFGn166MoeyDyfQA"},
{"content":{"body":"Right we don't currently block rendering after the first paint, and might cause issues to start freezing what the user sees","m.mentions":{},"msgtype":"m.text"},"ts":1736852462872,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$cmstcnTzgUZ_4aWbV8h7eapQDOr70u3q7iQpWRBNqnc"},
{"content":{"body":"I want to see from he thread if more use cases come up. So far we've heard of:\n1. `font-display: swap`\n2. Non-critical/below-the-fold CSS, where for several reasons the dev can only put stylesheets in the head","format":"org.matrix.custom.html","formatted_body":"<p>I want to see from he thread if more use cases come up. So far we've heard of:</p>\n<ol>\n<li><code>font-display: swap</code></li>\n<li>Non-critical/below-the-fold CSS, where for several reasons the dev can only put stylesheets in the head</li>\n</ol>\n","m.mentions":{},"msgtype":"m.text"},"ts":1736852493886,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xwlfGngCNo8mF0hkGvoOO7EgyzOI-1F0YhLMhTG-yGs"},
{"content":{"body":"I think things that are initially hidden could be a use case. For that, ideally you don't want to block the parser, since that would hold up anything after the non-critical widget","m.mentions":{},"msgtype":"m.text"},"ts":1736852612826,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$wN8fhw9vdbtPglRz2vofGM8F-FU9raswJj6HlvoE9MI"},
{"content":{"body":"zcorpan: yea but you probably want to block the JS that allows showing them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: yea but you probably want to block the JS that allows showing them","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736852658658,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$1qX9dOlnnVAoHW5RuwaSqkO2XNaE4UJ0PP_WR_92ML8"},
{"content":{"body":"Otherwise you're racing between the interaction that shows them and the CSS loading (FoUC again)O","m.mentions":{},"msgtype":"m.text"},"ts":1736852672055,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$71xi34M6RpL1NxGmTfnKjOYLXVCGy4CEuc5dRV9T9o0"},
{"content":{"body":"Yeah. So if `for` points to a script element, wait with running that script until the stylesheet is loaded? (The script could be `async`)","format":"org.matrix.custom.html","formatted_body":"Yeah. So if <code>for</code> points to a script element, wait with running that script until the stylesheet is loaded? (The script could be <code>async</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1736852755124,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$yRi-LaWs2QUO6oMv89P28Lvr9361YIHvt1UPJIPSErI"},
{"content":{"body":"zcorpan: Yea, parser-blocking would do that automatically. Or alternatively, `import` the style from the script and adopt it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: Yea, parser-blocking would do that automatically. Or alternatively, <code>import</code> the style from the script and adopt it","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1736852954126,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uFzVEHT8nvv0t7hN4zCJvcjwr5iz9mk9fLOVtoMJX5Q"},
{"content":{"body":"Thought: Maybe in the future this could be extended to a behavior where the target element is not parser-blocked, but instead received `display: none` until its stylesheet is loaded. So you'd have those elements appearing asynchronously, but at least each of them would be fully styled","format":"org.matrix.custom.html","formatted_body":"Thought: Maybe in the future this could be extended to a behavior where the target element is not parser-blocked, but instead received <code>display: none</code> until its stylesheet is loaded. So you'd have those elements appearing asynchronously, but at least each of them would be fully styled","m.mentions":{},"msgtype":"m.text"},"ts":1736853487253,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xENYrMz1VRQ99_Gx3pceOcAhMrHWqvDKJ9NV-XNqBiA"},
{"content":{"body":"smaug: were you planning on looking at `moveBefore()` once more before it lands?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: were you planning on looking at <code>moveBefore()</code> once more before it lands?","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1736854082824,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Xm-irtHmGLrQpbum5ZrAcowxEzVHZIBoXwwxasjrLA4"},
{"content":{"body":"yes","m.mentions":{},"msgtype":"m.text"},"ts":1736854140773,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$E7vwH5X2D_bMkb1FRSwU8Woy0CbXzzIIWfAvwLPkfps"},
{"content":{"body":"I was out sick last week","m.mentions":{},"msgtype":"m.text"},"ts":1736854151842,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$opgPvgfSNJqLzRKC4ETkN6ZJPY8xUG9nkwgvkJBtzlE"},
{"content":{"body":"Domenic: I looked a bit more at the prerender code in WebKit we found a long time ago and it turns out that visibilityState at some point supported a prerender value. It's related to that.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I looked a bit more at the prerender code in WebKit we found a long time ago and it turns out that visibilityState at some point supported a prerender value. It's related to that.","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1736867986847,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$s7d1TZpRTNavG4cKvb__VZKcI-RLOkkMLo_cQrFaYXM"},
{"content":{"body":"I keep seeing people get surprised by the fact that microtasks are not run after callbacks, when JS is on the stack (i.e., user-dispatched events for example). Sometimes it's discussed as a problem that hopefully we can \"fix\" someday. I'm sure it's intentional, but it is weird and confusing. I haven't thought about it too too much, but is there any appetite / possibility to change this? Any ideas how incompatible it would be?","m.mentions":{},"msgtype":"m.text"},"ts":1736873446736,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$GRneyY5HlRgidkLWeydl7tkX2dweejZ3Zxt-yBbb8h4"},
{"content":{"body":"I imagine it'd lead to very observable differences, but I wonder if we'd be in a better state if we changed it. I don't have a good reason except for \"consistency\", with the caveat that changing it might introduce other inconsistencies","m.mentions":{},"msgtype":"m.text"},"ts":1736873531435,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$Hd6p1KIl4eQ-wNN2j1n4j9-O_GhvoTpeC2tLC5gXLLc"},
{"content":{"body":"You should check with server-side runtimes (Node.js, Deno...) because they write most of the runtime's code in JS, and they have in a sense the opposite problem, in that if some runtime-internal JS code runs multiple callbacks, the microtasks would only get run at the end","m.mentions":{},"msgtype":"m.text"},"ts":1736873567521,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$NnuNejXwM2fYrMenKkHKUhS0QAve-0DEUs6aGxtqRbQ"},
{"content":{"body":"That said, making all callbacks behave the same way would also make it easier for them, even if it would mean manually triggering a microtask checkpoint","m.mentions":{},"msgtype":"m.text"},"ts":1736873629843,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$0-skoHtXNI9HGpS1O2TcsI1B2vYCREaS_PswKDtLgmA"},
{"content":{"body":"Funnily enough this is something that I've been digging into a litle recently trying to figure out all of the ins and outs of when microtask checkpoint should be run. E.g with how spin the event loop empties the event loop. And the observability of invoking 'spin the event loop' to implement 'Wait for X', since that performs a microtask checkpoint.","m.mentions":{},"msgtype":"m.text"},"ts":1736884992388,"senderName":"Shannon Booth","senderId":"@shannonbooth:matrix.org","id":"$Z2ggeIEjm7w4XJmwv8V1ilKD6jsI81otGygiyh2lWfU"}
]