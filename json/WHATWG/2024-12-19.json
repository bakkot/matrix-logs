[
{"content":{"body":"Yagiz Nizipli: that's probably because Chromium was also the initial implementer. They are not always careful to ensure the tests match the specification. I've run into this a couple of times as well.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">Yagiz Nizipli</a>: that's probably because Chromium was also the initial implementer. They are not always careful to ensure the tests match the specification. I've run into this a couple of times as well.","m.mentions":{"user_ids":["@yagiznizipli:matrix.org"]},"msgtype":"m.text"},"ts":1734589310901,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$TRuaModCvLzQnIjMqaZS9Yl7nTSwAN1EVPQb0NR7xSw"},
{"content":{"body":"I'm surprised you're the first one to run into this however as there were also other implementers reportedly with a different URL stack.","m.mentions":{},"msgtype":"m.text"},"ts":1734589351476,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$o8DyH-SRiWMjyXSn8rX6jyz5LD3jsOgx6R5w1S8GGNw"},
{"content":{"body":"annevk: So, what do you recommend going forward? Should I open a PR to WPT to remove this, or should the spec be changed?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: So, what do you recommend going forward? Should I open a PR to WPT to remove this, or should the spec be changed?","msgtype":"m.text"},"ts":1734589889800,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$cOL6nwQZ9-s6LM-o0Ke9o5e-WwVLstDP-rIqz2MjHBw"},
{"content":{"body":"Yagiz Nizipli: assuming it's indeed a bug the test should be aligned with the specification. If Chromium (or anyone) has concerns about aligning with the specification that can then be a separate discussion after which the test could in theory be changed back. I hope that Jeremy or Shunya will get back to you relatively quickly. If not, I'm happy to take a look early January.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">Yagiz Nizipli</a>: assuming it's indeed a bug the test should be aligned with the specification. If Chromium (or anyone) has concerns about aligning with the specification that can then be a separate discussion after which the test could in theory be changed back. I hope that Jeremy or Shunya will get back to you relatively quickly. If not, I'm happy to take a look early January.","m.mentions":{"user_ids":["@yagiznizipli:matrix.org"]},"msgtype":"m.text"},"ts":1734592317816,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YAQYFdOM_zRsy6W5kGqfeDE2h5JRI3REfRUe7LCsCUw"},
{"content":{"body":"Generally though we don't want to remove coverage, especially if it led to discovery of some interoperability issue.","m.mentions":{},"msgtype":"m.text"},"ts":1734592376654,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SWqRwZFALrtQe0mbZz121hEyqzXFBvPMgtUyAQQTw-w"},
{"content":{"body":"By the way, it seems Deno’s implementation also parses the port number to unsigned integer to pass it to URL port setter. ","format":"org.matrix.custom.html","formatted_body":"By the way, it seems Deno’s implementation also parses the port number to unsigned integer to pass it to URL port setter.","msgtype":"m.text"},"ts":1734592816845,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$ueKlrIMdWur2pN-LX-s8il7sVWCjcS_NNSkTuHQl1q8"},
{"content":{"body":"Luca Casonato: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: ^^","m.mentions":{"user_ids":["@lucacasonato:matrix.org"]},"msgtype":"m.text"},"ts":1734593220607,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$99-Vn4Il-Tg6E4TkvF5j2mTjGc2jkkuhTyNJihm2TyU"},
{"content":{"body":"> <@yagiznizipli:matrix.org> By the way, it seems Deno’s implementation also parses the port number to unsigned integer to pass it to URL port setter. \n\nOh we do? Can you file a bug?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ueKlrIMdWur2pN-LX-s8il7sVWCjcS_NNSkTuHQl1q8\">In reply to</a> <a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">@yagiznizipli:matrix.org</a><br>By the way, it seems Deno’s implementation also parses the port number to unsigned integer to pass it to URL port setter.</blockquote></mx-reply>Oh we do? Can you file a bug?","m.mentions":{"user_ids":["@yagiznizipli:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ueKlrIMdWur2pN-LX-s8il7sVWCjcS_NNSkTuHQl1q8"}},"msgtype":"m.text"},"ts":1734593962803,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$W0JLH0kOa9Cr560AO9ljftlOh5mJTzCaRJkKn-tYwgE"},
{"content":{"body":"Wash world win","m.mentions":{},"msgtype":"m.text"},"ts":1734603285803,"senderName":"黄宏杨``0111 y_y L0VE r_r","senderId":"@wonghongyang:matrix.org","id":"$tSFZjKDIM0ivu0eXxol2WWADwsWcsmf8Kw5_Tq166Bo"},
{"content":{"body":"> <@lucacasonato:matrix.org> Oh we do? Can you file a bug?\n\nYes, definitely. Sorry to inform you publicly like this. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24W0JLH0kOa9Cr560AO9ljftlOh5mJTzCaRJkKn-tYwgE\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br>Oh we do? Can you file a bug?</blockquote></mx-reply>Yes, definitely. Sorry to inform you publicly like this.","m.relates_to":{"m.in_reply_to":{"event_id":"$W0JLH0kOa9Cr560AO9ljftlOh5mJTzCaRJkKn-tYwgE"}},"msgtype":"m.text"},"ts":1734610542324,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$QoqFCQJStzXkiiDq3AO8_9bl18O3rKQLXDzG8mXGnYY"},
{"content":{"body":"annevk: FWIW, it isn't super clear to me how customElements would be propagated through nested Elements. Would a child get one from parent?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: FWIW, it isn't super clear to me how customElements would be propagated through nested Elements. Would a child get one from parent?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1734613593566,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$jFMQLrUwWugf2GSBDKRuM0pQlZJGz1JMuJiAf1Iz18s"},
{"content":{"body":"What if child is then moved to be a child of another element which uses different registry","m.mentions":{},"msgtype":"m.text"},"ts":1734613609035,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$OT8bVKDBqtxVQ15bYaIUp2ZAg3ciCYxaFrohYA0wUco"},
{"content":{"body":"(I'm rather worried about extra memory use here, if all the elements need to keep track of stuff)","m.mentions":{},"msgtype":"m.text"},"ts":1734613637618,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Bnol8-uhA4w0Gft5pliVA57MKUuarJ9Zm3RxIiT52vU"},
{"content":{"body":"smaug: you'd likely need some extra bits on element and additional bookkeeping when removing an element to keep it all efficient, yeah","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: you'd likely need some extra bits on element and additional bookkeeping when removing an element to keep it all efficient, yeah","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1734616395668,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IwaNt5yuo3XGDqkjWeHFo0MV7jqdvnE2Lf75LIlUcpE"},
{"content":{"body":"smaug: but the idea is that once a registry is assigned to a node, it can't be unassigned","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: but the idea is that once a registry is assigned to a node, it can't be unassigned","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1734616425589,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gKifPem7SM7z0YzOMk2nth4S1EXtof9XHw6TfKUt_-k"},
{"content":{"body":"Is the idea also that if parent has registry, and then you do parent.innerHTML = \"<div>\", that div would get parent's registry?","m.mentions":{},"msgtype":"m.text"},"ts":1734616459431,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$J-JjyLM0ZTohwSlUANj4tB0ns9ylNbIsh31l3-l-A0k"},
{"content":{"body":"Yes","m.mentions":{},"msgtype":"m.text"},"ts":1734616485377,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$x_dqpTzQP_7oYFucGF1BDjYOdRz9WtNm7DHSmNdTTb0"},
{"content":{"body":"if so, wouldn't all the elements get registry from document, well, window?","m.mentions":{},"msgtype":"m.text"},"ts":1734616507126,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$HOtxcbQgk3NL-xrCl0Rbeay8AvfJ884CmGzzBCkxoeo"},
{"content":{"body":"or is that somehow special","m.mentions":{},"msgtype":"m.text"},"ts":1734616516581,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$pflLaApbXn0LCKvD0wpMIrtDz5zsR_GyHkvDANrYojQ"},
{"content":{"body":"In a document with a browsing context, yes.","m.mentions":{},"msgtype":"m.text"},"ts":1734616531228,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$55TyuKLyP93JpgT6KftPCX01Ht-OrqOOqZIq2LR113Q"},
{"content":{"body":"So all the elements would then need to keep track of the global registry in case they are attached later to another parent element which isn't bound to browsing context but has different registry ?","m.mentions":{},"msgtype":"m.text"},"ts":1734616619221,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$VS11Xf0Y2duIZwNPQST-QKBGO75m5_P4-9v4MkR6Hzg"},
{"content":{"body":"That's the model, that's probably not how you'd want to implement it.","m.mentions":{},"msgtype":"m.text"},"ts":1734616656758,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qcHopTgyLvRgKoNWXZlFBNHqJ8d2s-QJ_NIEi9i6giA"},
{"content":{"body":"Assuming that with \"all the elements\" you mean all the elements in a document with a browsing context.","m.mentions":{},"msgtype":"m.text"},"ts":1734616689889,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$k8H3-zAyzQmfzfU92kG0dBdFC7AtBWHUmIjWtUpBuCg"},
{"content":{"body":"right","m.mentions":{},"msgtype":"m.text"},"ts":1734616698080,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Wkq4IFIB_jmSMOy8upgUKP3s_uZJ-YU7Dq0sbPuJgLQ"},
{"content":{"body":"so, I think I'm not too happy with this","m.mentions":{},"msgtype":"m.text"},"ts":1734616705864,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$QJW5sZG1oHtYQ-XdhyJBrUxZy-4YEnwDJXdjCixe6yY"},
{"content":{"body":"too much overhead","m.mentions":{},"msgtype":"m.text"},"ts":1734616716880,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Bbk6LBWO8q1OqpGua6jBXX_i1jsXprMd7y6ac9wjiSs"},
{"content":{"body":"We thought so too, but we found a way to make it work.","m.mentions":{},"msgtype":"m.text"},"ts":1734616784416,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$a2UKGgX1Mx1Ns6xyAXRxrAj2IlAkp2Hb9t_w3xSRarI"},
{"content":{"body":"One may optimize certain cases out, like having just a flag for the global registry","m.mentions":{},"msgtype":"m.text"},"ts":1734616889068,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$5MxU-b_r2AFsxhd-JTbrp3YggMMjrvuSUEQy4-5aLrI"},
{"content":{"body":"but eventually when adopting to a new document or so, a link to the registry needs to be there","m.mentions":{},"msgtype":"m.text"},"ts":1734616922505,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$nh9OJGDTkIt1-3JKNPoqHRKzjBFsACJUKsb8Fwgq4IA"},
{"content":{"body":"You can have that in a side table too","m.mentions":{},"msgtype":"m.text"},"ts":1734616976467,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$GDPNJk-r5vBUIRMxyIcL-uyuGdh87zW6lbs6pWq9iMI"},
{"content":{"body":"The side table needs to still have a pointer for the element ","m.mentions":{},"msgtype":"m.text"},"ts":1734617014521,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$xjSyuXQcP9Pi64nFMcaBD8CfD4J5AP7pk3UqU6BHuR8"},
{"content":{"body":"(and finding the registry from a side (hash)table isn't exactly free)","m.mentions":{},"msgtype":"m.text"},"ts":1734617094192,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$a3HwyHYyeJoSpy_rGU8HGb3uRFtAcs46cjD2j9JWAlA"},
{"content":{"body":"However, I do like the aspect that this all wouldn't be so bound to shadow root ","m.mentions":{},"msgtype":"m.text"},"ts":1734617136029,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$tuaysMgTHiuc_l5Q4Gd1d3Q18lXyEjUcy_MRjKQEMWc"},
{"content":{"body":"In which all cases registry would be propagate from parent to child? Whenever it is set? ","m.mentions":{},"msgtype":"m.text"},"ts":1734619877152,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$e9fwQhjVtUNm21vcJeOYH-wz9cIFmGzdsb5KcEBZQQ0"},
{"content":{"body":"Part of the background btw is the discussion in https://github.com/WICG/webcomponents/issues/1040 and https://github.com/WICG/webcomponents/issues/1043. People wanted disconnected elements from a scoped registry to still have sensible behavior and also get rid of the shadow root requirement.","m.mentions":{},"msgtype":"m.text"},"ts":1734620103231,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pYPshMMpf5f2j9BsVQbUBwd4dYPEVDZDC8Jzz49RiBs"},
{"content":{"body":"* In which all cases registry would be propagate from parent to child? Whenever it is set?  I mean, when adding a child to parent, in which case child would get its registry set based on what is in the parent?","m.mentions":{},"m.new_content":{"body":"In which all cases registry would be propagate from parent to child? Whenever it is set?  I mean, when adding a child to parent, in which case child would get its registry set based on what is in the parent?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$e9fwQhjVtUNm21vcJeOYH-wz9cIFmGzdsb5KcEBZQQ0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734620127571,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$bIwxyQ_B0I68Zrdk7xxOQ1c8z-ZW-UHsOpg5paxmStM"},
{"content":{"body":"Connected insert and the HTML parser are the main places that do it.","m.mentions":{},"msgtype":"m.text"},"ts":1734620222575,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$fG2Nd6LRQHLPQzmnNvnRDnlv6K8BuGYkAwcVlQnltyA"},
{"content":{"body":"I wonder why connectedness matter","m.mentions":{},"msgtype":"m.text"},"ts":1734620266038,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$vcij3lmqoBKxLKx_tmLDqwqHVrz67OF-HeJUIdCnZ34"},
{"content":{"body":"Maybe that can be dropped? I put it in the same branch as we do upgrades, but perhaps that's wrong.","m.mentions":{},"msgtype":"m.text"},"ts":1734620306726,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$z6IPv_qClO4vb7NwbccpemPxXw2LQHr4U6qP_wvXd_E"},
{"content":{"body":"I don't think this WHATNOT call is the place to do it, but I'd love a call with you and rniwa and whoever else is interested and we go over the PRs line-by-line.","m.mentions":{},"msgtype":"m.text"},"ts":1734620372153,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ffTDt9Ug6zl4106KpsOL7jc6_-dEo-_L_ro_unEUsnY"},
{"content":{"body":"But that will have to be in Jan.","m.mentions":{},"msgtype":"m.text"},"ts":1734620385178,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ai1jLrxtuJFhOMRxWlaagPv24if2b5VQcsZulcEABZc"},
{"content":{"body":"hmm, and HTML parser? Does it mean that if I create an element and set its registry, and then create another element and add it as a child, the child won't get registry, but if I do parent.innerHTML = \"<div>\";  then the element gets registry?  I guess no, since innerHTML goes via DocumentFragment in the spec","m.mentions":{},"msgtype":"m.text"},"ts":1734620388339,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Eu8xDfTSSQo8MOGg5oXuEJWtn8lukHWTNyBulJboo4Q"},
{"content":{"body":"annevk: sounds godo","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sounds godo","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1734620411315,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$utVXJO9A30gw8BVmEKedxAvEG2TXMYfzr_tFOt-VsCk"},
{"content":{"body":"* annevk: sounds good","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sounds good","m.mentions":{},"m.new_content":{"body":"annevk: sounds good","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sounds good","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$utVXJO9A30gw8BVmEKedxAvEG2TXMYfzr_tFOt-VsCk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734620416873,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$6-n78oRk8HL2z4iOdRSLFsGTOY2MVG0mjdTna6s7P88"},
{"content":{"body":"* annevk: sounds good, the meeting  🙂 ","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sounds good, the meeting  🙂","m.mentions":{},"m.new_content":{"body":"annevk: sounds good, the meeting  🙂 ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: sounds good, the meeting  🙂","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$utVXJO9A30gw8BVmEKedxAvEG2TXMYfzr_tFOt-VsCk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1734620422966,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Dj8URo9MM-DuA9MUkwganHlM0M5Lw58T2kbWd6tjkcc"},
{"content":{"body":"smaug: if you do innerHTML it will get the registry through the context element. If you create an element yourself, you always have to be conscious about where you create it to end up with the right registry. That's why registries will expose createElement() though perhaps it should be just create() I was thinking the other day as \"element\" in that name is kinda redundant: `customElements.createElement()`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: if you do innerHTML it will get the registry through the context element. If you create an element yourself, you always have to be conscious about where you create it to end up with the right registry. That's why registries will expose createElement() though perhaps it should be just create() I was thinking the other day as \"element\" in that name is kinda redundant: <code>customElements.createElement()</code>","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1734620680282,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IX6Sl0vsbLWdwoqbHaJ5RmyY3eaFDoBeErECpKdjEoo"},
{"content":{"body":"Generally whenever there's \"looking up a custom element definition\" it now needs to be preceded by a \"looking up a custom element registry\" and then instead of a document we pass that registry to the former (which will return early if the registry we found is null)","m.mentions":{},"msgtype":"m.text"},"ts":1734620726747,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$k7QI2zCeEfXuOvhJwOfFKfUf7TleB_1QqTrcVWotdNY"},
{"content":{"body":"I like create()","m.mentions":{},"msgtype":"m.text"},"ts":1734620728850,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$qVLTBHzEKvCGzZcBt8jpw6BgqEoUw_-hPIpA-Pc_yT4"}
]