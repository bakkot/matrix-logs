[
{"content":{"body":"Domenic: sorry about the churn on the domain label PR, \"nailed it\" was not quite correct after all ðŸ˜…","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: sorry about the churn on the domain label PR, &quot;nailed it&quot; was not quite correct after all ðŸ˜…","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: sorry about the churn on the domain label PR, \"nailed it\" was not quite correct after all ðŸ˜…","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: sorry about the churn on the domain label PR, &quot;nailed it&quot; was not quite correct after all ðŸ˜…","mimetype":"text/html"}]},"ts":1673944111650,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SU5eJbZ--ODPpFQCPgWMSd7oT-dUn7S1zqUlWH6UDiI"},
{"content":{"body":"All good","msgtype":"m.text","org.matrix.msc1767.text":"All good"},"ts":1673944127022,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$F2yz2l2YiOj2mFRlYRFO1-OZ2j0nbd7sRJGSsFXos3M"},
{"content":{"body":"I think I'm going to morph https://github.com/whatwg/html/pull/8712 into \"nested navigable\" -> \"navigable\"","msgtype":"m.text","org.matrix.msc1767.text":"I think I'm going to morph https://github.com/whatwg/html/pull/8712 into \"nested navigable\" -> \"navigable\""},"ts":1673944149854,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$rlb_gdrA3Q-U4xdof3QrVB5OosPFPa_MNI7Bnt4oTXA"},
{"content":{"body":"Glad we have CI","msgtype":"m.text","org.matrix.msc1767.text":"Glad we have CI"},"ts":1673944151097,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OuoOyQmiDu2U_U62ANHMMDwein8Bf40YzmyxwpznDzI"},
{"content":{"body":"Hmm, OK, immediately yak-shaved into getting https://github.com/domfarolino/specfmt compiled and working on my work laptop, cuz this is gonna involve a lot of rewrapping","msgtype":"m.text","org.matrix.msc1767.text":"Hmm, OK, immediately yak-shaved into getting https://github.com/domfarolino/specfmt compiled and working on my work laptop, cuz this is gonna involve a lot of rewrapping"},"ts":1673944304536,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$vO2WC2_VBOFV-Knig-YDxwitihC3hJ3fBxl3P-TjF2M"},
{"content":{"body":"when revising a spec, I noticed that it does variable shadowing. E.g., an algorithm is being passed a document fragment called `fragment` and a later step is collecting some nodes in a temporary variable also called `fragment`. Can we assume a separate variable scope for the inner of a loop or is that bad practice? I'll call it `tempfragment` or such for now..","format":"org.matrix.custom.html","formatted_body":"when revising a spec, I noticed that it does variable shadowing. E.g., an algorithm is being passed a document fragment called <code>fragment</code> and a later step is collecting some nodes in a temporary variable also called <code>fragment</code>. Can we assume a separate variable scope for the inner of a loop or is that bad practice? I'll call it <code>tempfragment</code> or such for now..","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"when revising a spec, I noticed that it does variable shadowing. E.g., an algorithm is being passed a document fragment called `fragment` and a later step is collecting some nodes in a temporary variable also called `fragment`. Can we assume a separate variable scope for the inner of a loop or is that bad practice? I'll call it `tempfragment` or such for now..","mimetype":"text/plain"},{"body":"when revising a spec, I noticed that it does variable shadowing. E.g., an algorithm is being passed a document fragment called <code>fragment</code> and a later step is collecting some nodes in a temporary variable also called <code>fragment</code>. Can we assume a separate variable scope for the inner of a loop or is that bad practice? I'll call it <code>tempfragment</code> or such for now..","mimetype":"text/html"}]},"ts":1673948940057,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$0S5xwXhx6rPEoclrDH4E2PzWxDm8SyRDJPgn39zdnU8"},
{"content":{"body":"If you're not immediately sure how it works, maybe you should clarify anyway :)","msgtype":"m.text","org.matrix.msc1767.text":"If you're not immediately sure how it works, maybe you should clarify anyway :)"},"ts":1673948997705,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$oUnG0squcI2J3NbCMlhfN-KXc1DNlTejk0rVmAZpIus"},
{"content":{"body":"I didn't know about \"node navigable\". In that light I guess \"content navigable\" is reasonable.","msgtype":"m.text","org.matrix.msc1767.text":"I didn't know about \"node navigable\". In that light I guess \"content navigable\" is reasonable."},"ts":1673948998566,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$fa75XiL6_DmPSkwMXupGf7-MaLgi1zOXbTocd0v5IFs"},
{"content":{"body":"freddy: they are block scoped, but we also don't want you to initialize the same variable multiple times in a single algorithm to avoid such confusion; see https://infra.spec.whatwg.org/#variables","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: they are block scoped, but we also don't want you to initialize the same variable multiple times in a single algorithm to avoid such confusion; see https://infra.spec.whatwg.org/#variables","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"freddy: they are block scoped, but we also don't want you to initialize the same variable multiple times in a single algorithm to avoid such confusion; see https://infra.spec.whatwg.org/#variables","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: they are block scoped, but we also don't want you to initialize the same variable multiple times in a single algorithm to avoid such confusion; see https://infra.spec.whatwg.org/#variables","mimetype":"text/html"}]},"ts":1673949084805,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$PPusF0fMTN0ELeu4Y_SAXC-Dcr-rzPhpsk9ndKOsmbI"},
{"content":{"body":"uh, is a \"for each\" loop its own block?","msgtype":"m.text","org.matrix.msc1767.text":"uh, is a \"for each\" loop its own block?"},"ts":1673949255895,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$LfdsyWQYS-Re3pMnZh4S8mnlHGBKdNyNO9QKs7FROqM"},
{"content":{"body":" * uh, is a \"for each\" loop its own block?","m.new_content":{"body":"uh, is a \"for each\" loop its own block?","msgtype":"m.text","org.matrix.msc1767.text":"uh, is a \"for each\" loop its own block?"},"m.relates_to":{"event_id":"$LfdsyWQYS-Re3pMnZh4S8mnlHGBKdNyNO9QKs7FROqM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * uh, is a \"for each\" loop its own block?"},"ts":1673949269180,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$AqOxCYnj7-79iYselNQsi_7W2CaVtPw0OU7rcY1FHcg"},
{"content":{"body":"freddy: it's somewhat fuzzy as sometimes you can put it on a single line and sometimes not, but it also shouldn't matter in practice","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: it's somewhat fuzzy as sometimes you can put it on a single line and sometimes not, but it also shouldn't matter in practice","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"freddy: it's somewhat fuzzy as sometimes you can put it on a single line and sometimes not, but it also shouldn't matter in practice","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: it's somewhat fuzzy as sometimes you can put it on a single line and sometimes not, but it also shouldn't matter in practice","mimetype":"text/html"}]},"ts":1673949962033,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cyHLw1sARwz5hVJ5wmdnx_TGOs7hADhf5hmAKAawMfU"},
{"content":{"body":"nods","msgtype":"m.emote","org.matrix.msc1767.text":"nods"},"ts":1673949977838,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$BL06rGGw1zSoWkrrixmnIIVTE3k4iru10RsYiMdZ_zE"},
{"content":{"body":"Noam Rosenthal: nice work on getting prefetch done \\o/","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: nice work on getting prefetch done \\o/","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: nice work on getting prefetch done \\o/","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: nice work on getting prefetch done \\o/","mimetype":"text/html"}]},"ts":1673949990840,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$MVR0gnuvXg9cz55v9vHkduDrUVWdQ10S2p6Ehqac3F8"},
{"content":{"body":"> <@annevk:matrix.org> Noam Rosenthal: nice work on getting prefetch done \\o/\n\nThanks! Was a bigger task than I thought ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24MVR0gnuvXg9cz55v9vHkduDrUVWdQ10S2p6Ehqac3F8\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: nice work on getting prefetch done \\o/</blockquote></mx-reply>Thanks! Was a bigger task than I thought","m.relates_to":{"m.in_reply_to":{"event_id":"$MVR0gnuvXg9cz55v9vHkduDrUVWdQ10S2p6Ehqac3F8"}},"msgtype":"m.text"},"ts":1673950043281,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$QFbs7C5DZ-IMEepXI2tFPlnl6deizUo8sGqXOemiLoA"},
{"content":{"body":"I didn't realize this, but `<div algorithm>` essentially scopes variables and if you then end up with a single unscoped variable elsewhere due to an example, it gets flagged. This is rather nice, but also surprising as the error can be in a completely different place from where you expect.","format":"org.matrix.custom.html","formatted_body":"I didn't realize this, but <code>&lt;div algorithm&gt;</code> essentially scopes variables and if you then end up with a single unscoped variable elsewhere due to an example, it gets flagged. This is rather nice, but also surprising as the error can be in a completely different place from where you expect.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I didn't realize this, but `<div algorithm>` essentially scopes variables and if you then end up with a single unscoped variable elsewhere due to an example, it gets flagged. This is rather nice, but also surprising as the error can be in a completely different place from where you expect.","mimetype":"text/plain"},{"body":"I didn't realize this, but <code>&lt;div algorithm&gt;</code> essentially scopes variables and if you then end up with a single unscoped variable elsewhere due to an example, it gets flagged. This is rather nice, but also surprising as the error can be in a completely different place from where you expect.","mimetype":"text/html"}]},"ts":1673960141527,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$tTqiQPV1RgWOf-RHUo8i_WYrhojSE7KUIuzczr5Aa7I"},
{"content":{"body":"TabAtkins: is there something we could do to make Bikeshed from api.csswg.org output the warning/error location, if a location is known?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: is there something we could do to make Bikeshed from api.csswg.org output the warning/error location, if a location is known?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"TabAtkins: is there something we could do to make Bikeshed from api.csswg.org output the warning/error location, if a location is known?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: is there something we could do to make Bikeshed from api.csswg.org output the warning/error location, if a location is known?","mimetype":"text/html"}]},"ts":1673960182326,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9-gpGai39uCW24zSavy6_me7WuwkxBlR-wMBCTL_SNY"}
]