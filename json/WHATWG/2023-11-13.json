[
{"content":{"body":"About the `Referer` with `location.replace` or `location.assign`: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the _parent_ frame.\n\nI still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.\n\nI need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.","format":"org.matrix.custom.html","formatted_body":"<p>About the <code>Referer</code> with <code>location.replace</code> or <code>location.assign</code>: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the <em>parent</em> frame.</p>\n<p>I still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.</p>\n<p>I need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1699866611145,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$DyGx8F89wqno3HwjRa8NVfZCq7gvhX_D2xtUMnJcgCE"},
{"content":{"body":" * About the `Referer` with `location.replace` or `location.assign` thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion\\_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the _parent_ frame.\n\nI still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.\n\nI need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.","format":"org.matrix.custom.html","formatted_body":" * <p>About the <code>Referer</code> with <code>location.replace</code> or <code>location.assign</code> thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the <em>parent</em> frame.</p>\n<p>I still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.</p>\n<p>I need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.</p>\n","m.mentions":{},"m.new_content":{"body":"About the `Referer` with `location.replace` or `location.assign` thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion\\_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the _parent_ frame.\n\nI still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.\n\nI need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.","format":"org.matrix.custom.html","formatted_body":"<p>About the <code>Referer</code> with <code>location.replace</code> or <code>location.assign</code> thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the <em>parent</em> frame.</p>\n<p>I still don’t clearly know what the particular relevant spec requirement is, so update the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.</p>\n<p>I need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DyGx8F89wqno3HwjRa8NVfZCq7gvhX_D2xtUMnJcgCE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1699866621210,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$AAVvdPrIKn10REBvm0xe6AOFgJEga3lmnLOV6aw-1cs"},
{"content":{"body":" * About the `Referer` with `location.replace` or `location.assign` thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion\\_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the _parent_ frame.\n\nI still don’t clearly know what the particular relevant spec requirement is, so I updated the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.\n\nI need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.","format":"org.matrix.custom.html","formatted_body":" * <p>About the <code>Referer</code> with <code>location.replace</code> or <code>location.assign</code> thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the <em>parent</em> frame.</p>\n<p>I still don’t clearly know what the particular relevant spec requirement is, so I updated the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.</p>\n<p>I need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.</p>\n","m.mentions":{},"m.new_content":{"body":"About the `Referer` with `location.replace` or `location.assign` thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion\\_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the _parent_ frame.\n\nI still don’t clearly know what the particular relevant spec requirement is, so I updated the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.\n\nI need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.","format":"org.matrix.custom.html","formatted_body":"<p>About the <code>Referer</code> with <code>location.replace</code> or <code>location.assign</code> thing: As detailed in my comment at https://github.com/WebKit/WebKit/pull/19093#discussion_r1378090398, testing (from a new test I wrote) indicates that Gecko and Blink set the referrer from the <em>parent</em> frame.</p>\n<p>I still don’t clearly know what the particular relevant spec requirement is, so I updated the commit message to remove any claim that the change makes the implementation spec-conformant — and instead just kept the part of the commit message which states it’s for interop/compat with Gecko and Blink.</p>\n<p>I need to ping Alex to re-review it again, but I otherwise have no remaining changes of my own to make. If the goal is to have interop on this behavior across all engines, then I think the state of the implementation in the PR branch is what’s necessary for doing that.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DyGx8F89wqno3HwjRa8NVfZCq7gvhX_D2xtUMnJcgCE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1699866638378,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$r9Gup1LBORIpkDPb-TmVhbvijAA5SGdViKgkUmU1MyU"},
{"content":{"body":"> <@seirdy:seirdy.one> idk if this is the best place to share this, but I wrote a thing:\n> \n> Proposal: an HTML element for spoilers (https://seirdy.one/posts/2023/11/12/spoiler-element/)\n\nopened an issue in whatwg/html, hope this gains interest","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$U-UjHwZuN1t1E26qyKMxl9dxg8AwxqySx29VOGrFi4g\">In reply to</a> <a href=\"https://matrix.to/#/@seirdy:seirdy.one\">@seirdy:seirdy.one</a><br><p>idk if this is the best place to share this, but I wrote a thing:</p>\n<p><a href=\"https://seirdy.one/posts/2023/11/12/spoiler-element/\">Proposal: an HTML element for spoilers</a></p></blockquote></mx-reply>opened an issue in whatwg&#47;html, hope this gains interest","m.relates_to":{"m.in_reply_to":{"event_id":"$U-UjHwZuN1t1E26qyKMxl9dxg8AwxqySx29VOGrFi4g"}},"msgtype":"m.text"},"ts":1699873529462,"senderName":"Seirdy","senderId":"@seirdy:seirdy.one","id":"$BtvNvkg83p3nt-TrTIJSkEfug8h1EhHB0ETvpb2kPP0"},
{"content":{"body":"krosylight: in https://bugzilla.mozilla.org/show_bug.cgi?id=1864395 is `type=number` a typo?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@krosylight:mozilla.org\">krosylight</a>: in https://bugzilla.mozilla.org/show_bug.cgi?id=1864395 is <code>type=number</code> a typo?","m.mentions":{"user_ids":["@krosylight:mozilla.org"]},"msgtype":"m.text"},"ts":1699875990285,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Vbuw-P1omJANGzpkUtDIiX7VhAFnTWsViBg4TLgNpd8"},
{"content":{"body":"> <@annevk:matrix.org> krosylight: in https://bugzilla.mozilla.org/show_bug.cgi?id=1864395 is `type=number` a typo?\n\nNo, but I guess I shouldn't do that","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24Vbuw-P1omJANGzpkUtDIiX7VhAFnTWsViBg4TLgNpd8\">In reply to</a><a href=\"https://matrix.to/#/%40annevk%3Amatrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@krosylight:mozilla.org\">krosylight</a>: in https://bugzilla.mozilla.org/show_bug.cgi?id=1864395 is <code>type=number</code> a typo?</blockquote></mx-reply>No, but I guess I shouldn&#39;t do that","m.relates_to":{"m.in_reply_to":{"event_id":"$Vbuw-P1omJANGzpkUtDIiX7VhAFnTWsViBg4TLgNpd8"}},"msgtype":"m.text"},"ts":1699876056336,"senderName":"krosylight","senderId":"@krosylight:mozilla.org","id":"$_V9l0z8OaME_KHco22bMh8-LnwOwMESeYrVwztD3It8"},
{"content":{"body":"0009 != 9 😛","msgtype":"m.text"},"ts":1699876086735,"senderName":"krosylight","senderId":"@krosylight:mozilla.org","id":"$-r91wWX5q2avgB6rWYcY7R1ztsdTaliQV_eeuy00BW8"},
{"content":{"body":"`type=number` is so attractive for identifiers, I also saw that mistake with `device-eid`","format":"org.matrix.custom.html","formatted_body":"<code>type=number</code> is so attractive for identifiers, I also saw that mistake with <code>device-eid</code>","m.mentions":{},"msgtype":"m.text"},"ts":1699876133650,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8E97CBAg2ffl29E_tDo2xOPBjjZSgEsDPZHzyG-SeTw"},
{"content":{"body":"Perhaps `inputmode=numeric` needs a more attractive shorthand, but pretty hard to beat `type`","format":"org.matrix.custom.html","formatted_body":"Perhaps <code>inputmode=numeric</code> needs a more attractive shorthand, but pretty hard to beat <code>type</code>","m.mentions":{},"msgtype":"m.text"},"ts":1699876175700,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qacVZybNZYTVJMblojX0K5ILGVSP4YyKqJJpNdltqpw"},
{"content":{"body":"inputmode=numeric also doesn't do anything on desktop, hmm","msgtype":"m.text"},"ts":1699876310096,"senderName":"krosylight","senderId":"@krosylight:mozilla.org","id":"$nJEHVTAqoPW5HFwG5t3FnoyqKzltKsGK6GQpBdn6_Wg"}
]