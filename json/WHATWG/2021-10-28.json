[
{"content":{"body":"Domenic: hey, you could make the ARIA thing right? I could join an hour in, potentially","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: hey, you could make the ARIA thing right? I could join an hour in, potentially","msgtype":"m.text"},"ts":1635432603332,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$eYRy3_vm0-1GNWwgLFolWbO1clIu1ri7loJODA0EJRE"},
{"content":{"body":"annevk: I'm not sure it's really a good use of time...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: I'm not sure it's really a good use of time...","msgtype":"m.text"},"ts":1635434537126,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$GKhqn4bvFcJID3N3LtriF9lEnrOlocSFonbPz1jAQqs"},
{"content":{"body":"Yeah... And they didn't reply to our comments about that either ☹️","msgtype":"m.text"},"ts":1635434657970,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$VoM6ixPpacAC61nvQTQlgRWPUSI_PyKaPtppZEDGx0I"},
{"content":{"body":"> Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects\n\nw/o having read the whole WebIDL spec to find out why, does anyone know what the reason for this is?\n\nalso, would be curious to know if the new IDL Object that we just released (`DOMException`) in Node.js v17.0.0 would be considered a _real_ \"platform object\" or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects</p>\n</blockquote>\n<p>w/o having read the whole WebIDL spec to find out why, does anyone know what the reason for this is?</p>\n<p>also, would be curious to know if the new IDL Object that we just released (<code>DOMException</code>) in Node.js v17.0.0 would be considered a <em>real</em> &quot;platform object&quot; or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?</p>\n","msgtype":"m.text"},"ts":1635443413612,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$Hk3hk9GXXoXX5jbqjG6y3OL_y93tnrzKaSTTjOorIBE"},
{"content":{"body":"DerekNonGeneric: an implementation needs to be able to recognize platform objects so that it can properly implement the \"is a platform object\" checks in the Web IDL spec and elsewhere.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dereknongeneric:mozilla.org\">DerekNonGeneric</a>: an implementation needs to be able to recognize platform objects so that it can properly implement the &quot;is a platform object&quot; checks in the Web IDL spec and elsewhere.","msgtype":"m.text"},"ts":1635443568690,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$wyujvvkHnGbs0C_nZqy9JSmt08xbbLIBqe2o_Xt8Jcs"},
{"content":{"body":"I suspect that DOMException should be considered as such in Node.js, e.g. for structuredClone().","msgtype":"m.text"},"ts":1635443588166,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$tIafSxu7N_6iQJ312KPYQaTPsZeYd19sXOEUVM8xUxQ"},
{"content":{"body":"yeah, so we will likely need to write up something like `isPlatformObject()`, but whether or not we should expose it is another story","format":"org.matrix.custom.html","formatted_body":"yeah, so we will likely need to write up something like <code>isPlatformObject()</code>, but whether or not we should expose it is another story","msgtype":"m.text"},"ts":1635443750056,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$ZwksJRsse-0zpiaRugMatb_2bqp5l8K8FHyB6VW-WKw"},
{"content":{"body":"* > Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects\n\nw/o having read the whole Web IDL spec to find out why, does anyone know what the reason for this is?\n\nalso, would be curious to know if the new IDL Object that we just released (`DOMException`) in Node.js v17.0.0 would be considered a _real_ \"platform object\" or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?","m.new_content":{"body":"> Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects\n\nw/o having read the whole Web IDL spec to find out why, does anyone know what the reason for this is?\n\nalso, would be curious to know if the new IDL Object that we just released (`DOMException`) in Node.js v17.0.0 would be considered a _real_ \"platform object\" or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?","msgtype":"m.text"},"m.relates_to":{"event_id":"$Hk3hk9GXXoXX5jbqjG6y3OL_y93tnrzKaSTTjOorIBE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635448297355,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$FsH3ypUu0ojBmtPsw9OZCI5eukwoJ03Qfw-QUmQWavY"},
{"content":{"body":"I'm not sure how Node does things, but I've been looking into implementing serializable platform objects in Deno, and V8 requires you to have at least one internal field before it lets you define a custom serialization.","msgtype":"m.text"},"ts":1635448402556,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$wfwswd-nDJ_KeofTG7KefxLVJ07NxrdvwgiQkBs9f9c"},
{"content":{"body":" * I'm not sure how Node does things, but I've been looking into implementing serializable platform objects in Deno, and V8 requires you to have at least one internal field before it lets you define a custom serialization.","m.new_content":{"body":"I'm not sure how Node does things, but I've been looking into implementing serializable platform objects in Deno, and V8 requires you to have at least one internal field before it lets you define a custom serialization.","msgtype":"m.text"},"m.relates_to":{"event_id":"$wfwswd-nDJ_KeofTG7KefxLVJ07NxrdvwgiQkBs9f9c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635448414715,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$9VkVQ-MekCmfydSsbbvEXEZNrbCJaa9O3fHx3ht9WUw"},
{"content":{"body":"FTR","msgtype":"m.text"},"ts":1635448432765,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$bkgtcnFcxLKaHXfPzNfMGRO39ui-NlOTIX2OrmnP8ww"},
{"content":{"body":" * > Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects\n\nw/o having read the whole Web IDL spec to find out why does anyone know what the reason for this is?\n\nalso, would be curious to know if the new IDL Object that we just released (`DOMException`) in Node.js v17.0.0 would be considered a _real_ \"platform object\" or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\n<p>Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects</p>\n</blockquote>\n<p>w/o having read the whole Web IDL spec to find out why does anyone know what the reason for this is?</p>\n<p>also, would be curious to know if the new IDL Object that we just released (<code>DOMException</code>) in Node.js v17.0.0 would be considered a <em>real</em> &quot;platform object&quot; or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?</p>\n","m.new_content":{"body":"> Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects\n\nw/o having read the whole Web IDL spec to find out why does anyone know what the reason for this is?\n\nalso, would be curious to know if the new IDL Object that we just released (`DOMException`) in Node.js v17.0.0 would be considered a _real_ \"platform object\" or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Regardless, an implementation of a given set of IDL fragments needs to be able to recognize all platform objects that are created by the implementation. https://webidl.spec.whatwg.org/#idl-objects</p>\n</blockquote>\n<p>w/o having read the whole Web IDL spec to find out why does anyone know what the reason for this is?</p>\n<p>also, would be curious to know if the new IDL Object that we just released (<code>DOMException</code>) in Node.js v17.0.0 would be considered a <em>real</em> &quot;platform object&quot; or if not, how we should classify these new objects that are to be backed by the IDL type system if they aren't already?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Hk3hk9GXXoXX5jbqjG6y3OL_y93tnrzKaSTTjOorIBE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635448606754,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$9XgyUjxRYcoOAJFoMijFTcG-7zZzJwDzgnTP7FE-QKE"},
{"content":{"body":"Andreu Botella (he/they): tbh, i was not the one who originally contributed that error so it's hard for me to know what alternatives were considered to shipping that, but think that we needed to work around the problem we had w/ the `AbortController` error (`AbortError`) not existing..","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">Andreu Botella (he/they)</a>: tbh, i was not the one who originally contributed that error so it's hard for me to know what alternatives were considered to shipping that, but think that we needed to work around the problem we had w/ the <code>AbortController</code> error (<code>AbortError</code>) not existing..","msgtype":"m.text"},"ts":1635449176304,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$3dGZMb6fcJqp8l4k-ea3yMoYFcwaE5OJ-slbCp8rXg0"},
{"content":{"body":"> When `abort()` is called, the `fetch()` promise rejects with an Error of type `DOMException`, with name `AbortError` https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nWhen <code>abort()</code> is called, the <code>fetch()</code> promise rejects with an Error of type <code>DOMException</code>, with name <code>AbortError</code> https://developer.mozilla.org/en-US/docs/Web/API/AbortController/abort\n</blockquote>\n","msgtype":"m.text"},"ts":1635449248010,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$lFaAnlSy-6QHpyWlRNgk6bnEFBWMWCeYMjmSAdhGACs"},
{"content":{"body":"still a bit surprised about what we shipped for `structuredClone()` and am not sure how more people didn't asked more questions about that lol","format":"org.matrix.custom.html","formatted_body":"still a bit surprised about what we shipped for <code>structuredClone()</code> and am not sure how more people didn't asked more questions about that lol","msgtype":"m.text"},"ts":1635449461664,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$P7-viKeFPwUEvd2wRDq6VMqOLJzJ9pC6TnuN5f3OUHM"},
{"content":{"body":"we will probably need to use `isPlatformObject()` to detect whether the deserialized object we are outputting is all correct when implementing the next iteration (hopefully standardized) version of `structuredClone()` if the discuss i was reading made any sense https://github.com/tc39/ecma262/issues/2555","format":"org.matrix.custom.html","formatted_body":"we will probably need to use <code>isPlatformObject()</code> to detect whether the deserialized object we are outputting is all correct when implementing the next iteration (hopefully standardized) version of <code>structuredClone()</code> if the discuss i was reading made any sense https://github.com/tc39/ecma262/issues/2555","msgtype":"m.text"},"ts":1635449688027,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$irtUom3VDTgB4F_OuwaBlGnHsyLpwptRmvak6_am0ro"},
{"content":{"body":"> <@andreubotella:mozilla.org> I'm not sure how Node does things, but I've been looking into implementing serializable platform objects in Deno, and V8 requires you to have at least one internal field before it lets you define a custom serialization.\n\num, not sure about whether or not we have plans to make any more \"platform objects\", but my goal is really just to ensure that the couple we have so far are actually implemented correctly since atm i have very low confidence that those aren't potemkin villagers","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$wfwswd-nDJ_KeofTG7KefxLVJ07NxrdvwgiQkBs9f9c?via=mozilla.org&via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">@andreubotella:mozilla.org</a><br>I&#39;m not sure how Node does things, but I&#39;ve been looking into implementing serializable platform objects in Deno, and V8 requires you to have at least one internal field before it lets you define a custom serialization.</blockquote></mx-reply>um, not sure about whether or not we have plans to make any more &quot;platform objects&quot;, but my goal is really just to ensure that the couple we have so far are actually implemented correctly since atm i have very low confidence that those aren't potemkin villagers","m.relates_to":{"m.in_reply_to":{"event_id":"$wfwswd-nDJ_KeofTG7KefxLVJ07NxrdvwgiQkBs9f9c"}},"msgtype":"m.text"},"ts":1635449942234,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$l4-j5pUDcEvAbsqIGUdTgLUtyACtXWbqXFExVQC48Uk"},
{"content":{"body":"The thing with V8's implementation of structured clone is that the delegate methods that let you override (de)serialization are only called for objects with internal slots","msgtype":"m.text"},"ts":1635450030577,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$C1fQdcXj3nFQhijr5fOR1P0yOVmDp-KP9_qEc44L1rs"},
{"content":{"body":"so effectively V8 already implements its own kind of platform object determination","msgtype":"m.text"},"ts":1635450041447,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$ePm5vjhIYkuj5MuBsxHqf00qYLzHdd1GxBflRbE8KsQ"},
{"content":{"body":"see this bug Luca Casonato filed: https://bugs.chromium.org/p/v8/issues/detail?id=11927","format":"org.matrix.custom.html","formatted_body":"see this bug <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> filed: https://bugs.chromium.org/p/v8/issues/detail?id=11927","msgtype":"m.text"},"ts":1635450051530,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$W6SmFGa6Seiyri4Tx59BZdCNC4_k6OdYofTNkrntWQE"},
{"content":{"body":"ooh, nice, you are sort of making the case for adding more of these in that issue, but definitely going to be having users running code in some kind of hybrid franken-environment","msgtype":"m.text"},"ts":1635450508909,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$8ue9LvYMdPyxPJQQwSJJ02WFBcNVc6DNK-anm3MZoyA"},
{"content":{"body":"Andreu Botella (he/they), Luca Casonato : not too familiar w/ the problem you all are facing, but maybe we can leverage `isV8IntrinsicIdentifier` to at least ensure that those bases are covered and then gradually append the Web IDL type identifiers as we make  use of https://babeljs.io/docs/en/babel-types#v8intrinsicidentifier","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">Andreu Botella (he/they)</a>, <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a> : not too familiar w/ the problem you all are facing, but maybe we can leverage <code>isV8IntrinsicIdentifier</code> to at least ensure that those bases are covered and then gradually append the Web IDL type identifiers as we make  use of https://babeljs.io/docs/en/babel-types#v8intrinsicidentifier","msgtype":"m.text"},"ts":1635458519326,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$egwuayo04sJsE40RqotIGy6bLbG-dgJ60FZbJeVgXSM"},
{"content":{"body":"so, it might just be a union of the identifiers supplied by that predicate and then some other predicate that includes these identifiers listed in Web IDL (?) https://webidl.spec.whatwg.org/#idl-types","msgtype":"m.text"},"ts":1635459582827,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$OVOc4IeJLlH04aAm_UyVPUjoZZcGex3VcPtJtpOv4Rs"}
]