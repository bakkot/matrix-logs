[
{"content":{"body":"Domenic: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?","mimetype":"text/html"}]},"ts":1666942717022,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vwXJwL-CI_s0uNjM9CIiTb9tRLVjSc578IqBqd0G5N8"},
{"content":{"body":"It's not just a single concept after all","msgtype":"m.text","org.matrix.msc1767.text":"It's not just a single concept after all"},"ts":1666942755147,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9pDONSg0fHl4LVWzemMKZeVShQzFanLylNiumBhyqeU"},
{"content":{"body":"Also, I think that we should try to update the ARIA attributes that only allow a couple strings to be enumerated attributes (this indeed doesn't address the problem with how invalid values map to AT, but it might help with it, pending further updates to accname)","msgtype":"m.text","org.matrix.msc1767.text":"Also, I think that we should try to update the ARIA attributes that only allow a couple strings to be enumerated attributes (this indeed doesn't address the problem with how invalid values map to AT, but it might help with it, pending further updates to accname)"},"ts":1666942816936,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Q28VwnQiGUj_ZbPtGnj3Hsn8mw21KUoxU5hzpdzB5DA"},
{"content":{"body":"Domenic: overall it seems somewhat reasonable to attempt to stick the element-references in the map directly, but I think we still need most of my setup if we actually want to improve ARIA attributes overall (which WebKit wants to try at least)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: overall it seems somewhat reasonable to attempt to stick the element-references in the map directly, but I think we still need most of my setup if we actually want to improve ARIA attributes overall (which WebKit wants to try at least)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: overall it seems somewhat reasonable to attempt to stick the element-references in the map directly, but I think we still need most of my setup if we actually want to improve ARIA attributes overall (which WebKit wants to try at least)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: overall it seems somewhat reasonable to attempt to stick the element-references in the map directly, but I think we still need most of my setup if we actually want to improve ARIA attributes overall (which WebKit wants to try at least)","mimetype":"text/html"}]},"ts":1666943249335,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$zdlOQBPW-yLzycDBV_JuxhxsZ42K2yMWSOIg24tIWCU"},
{"content":{"body":"> <@annevk:matrix.org> Domenic: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?\n\nI don't think it does, because the complexity of reflect is the interaction of strings and element references. For ElementInternals it's literally just an element reference (or FrozenArray of them)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$vwXJwL-CI_s0uNjM9CIiTb9tRLVjSc578IqBqd0G5N8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?</blockquote></mx-reply>I don't think it does, because the complexity of reflect is the interaction of strings and element references. For ElementInternals it's literally just an element reference (or FrozenArray of them)","m.relates_to":{"m.in_reply_to":{"event_id":"$vwXJwL-CI_s0uNjM9CIiTb9tRLVjSc578IqBqd0G5N8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@annevk:matrix.org> Domenic: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?\n\nI don't think it does, because the complexity of reflect is the interaction of strings and element references. For ElementInternals it's literally just an element reference (or FrozenArray of them)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$vwXJwL-CI_s0uNjM9CIiTb9tRLVjSc578IqBqd0G5N8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ensuring the map has the correct thing for element-references requires duplicating most of reflect for element-references, no?</blockquote></mx-reply>I don't think it does, because the complexity of reflect is the interaction of strings and element references. For ElementInternals it's literally just an element reference (or FrozenArray of them)","mimetype":"text/html"}]},"ts":1666943290215,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$t0GIytu1jupkvIYe6qf2E8eUascCPE4b3UOByquwV-A"},
{"content":{"body":"Agreed it would be nice if ARIA attributes were enumerated.","msgtype":"m.text","org.matrix.msc1767.text":"Agreed it would be nice if ARIA attributes were enumerated."},"ts":1666943303321,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$1z7YupXMtyXoSiy5AfGqrt-Tf5XlmXze6XCqu8f0wzY"},
{"content":{"body":"Domenic: why do we not need the difference between explicitly set attr-element and attr-associated element for ElementInternals?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why do we not need the difference between explicitly set attr-element and attr-associated element for ElementInternals?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: why do we not need the difference between explicitly set attr-element and attr-associated element for ElementInternals?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why do we not need the difference between explicitly set attr-element and attr-associated element for ElementInternals?","mimetype":"text/html"}]},"ts":1666943344543,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$LRBjub5o3V5wjAF3nytYTUd5OpsRgighsV1TBdfF1I4"},
{"content":{"body":"attr-associated = explicitly set + whatever's going on with the string-valued content attribute","msgtype":"m.text","org.matrix.msc1767.text":"attr-associated = explicitly set + whatever's going on with the string-valued content attribute"},"ts":1666943366951,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$FZvtIgZpWkmOYk-DATz1Eg-i0F4OEFi8T0Xfp_rPBog"},
{"content":{"body":"There is no string-valued content attribute for ElementInternals","msgtype":"m.text","org.matrix.msc1767.text":"There is no string-valued content attribute for ElementInternals"},"ts":1666943381871,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dblEk61-Ft9OQcEPpn9Lrti1aRKZp6s2IGTxEwNBFLc"},
{"content":{"body":"I guess attr-associated also has some shadow root censoring stuff","msgtype":"m.text","org.matrix.msc1767.text":"I guess attr-associated also has some shadow root censoring stuff"},"ts":1666943413266,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ER6YdiU9SoS2-SvdZdcT2KoZjx4KKXCspA8JgiQxoP4"},
{"content":{"body":"I don't think I ever understood that","msgtype":"m.text","org.matrix.msc1767.text":"I don't think I ever understood that"},"ts":1666943446310,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DWfn3nV33hXnwA4ShTN5J9A6O4tpzdwn84wSe3wpMWY"},
{"content":{"body":"That's why the explicitly set thing can be a weak reference, so if you lose access to the shadow tree the element is in and you that reference wasn't allowed anyway you can collect things","msgtype":"m.text","org.matrix.msc1767.text":"That's why the explicitly set thing can be a weak reference, so if you lose access to the shadow tree the element is in and you that reference wasn't allowed anyway you can collect things"},"ts":1666943556174,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$s4FJZa6KPfB-PaWRffyFwcwfeUhlJz2fnWmjZhjku_8"},
{"content":{"body":"And the collecting isn't observable","msgtype":"m.text","org.matrix.msc1767.text":"And the collecting isn't observable"},"ts":1666943594513,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2SAKeDyVQuY8b6mowyoFq017dfg1N3TVgTqhQg7tRmI"},
{"content":{"body":"I guess it just seems weird we're censoring access to something the developer explicitly already had access to and set themselves, but I've never understood the encapsulation invariants attempted here, so shrug","msgtype":"m.text","org.matrix.msc1767.text":"I guess it just seems weird we're censoring access to something the developer explicitly already had access to and set themselves, but I've never understood the encapsulation invariants attempted here, so shrug"},"ts":1666943645281,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Ku2as61Qu9vcrwJxdg2pEsihkHBW-2YJjuaILJ-XgaQ"},
{"content":{"body":"Domenic: we're getting a bit astray here, but there's two reasons for that: 1) avoiding accidental dependency by other scripts on the exact layout of the shadow tree 2) forcing developers to think through encapsulation and come up with a better design such that the shadow tree can be redesigned independent from the outside world","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: we're getting a bit astray here, but there's two reasons for that: 1) avoiding accidental dependency by other scripts on the exact layout of the shadow tree 2) forcing developers to think through encapsulation and come up with a better design such that the shadow tree can be redesigned independent from the outside world","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: we're getting a bit astray here, but there's two reasons for that: 1) avoiding accidental dependency by other scripts on the exact layout of the shadow tree 2) forcing developers to think through encapsulation and come up with a better design such that the shadow tree can be redesigned independent from the outside world","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: we're getting a bit astray here, but there's two reasons for that: 1) avoiding accidental dependency by other scripts on the exact layout of the shadow tree 2) forcing developers to think through encapsulation and come up with a better design such that the shadow tree can be redesigned independent from the outside world","mimetype":"text/html"}]},"ts":1666943788838,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ncPRtbVj1D9n37rqe-3nKm85AbvBLDi1k6DXccsYSjM"},
{"content":{"body":"Domenic: btw, I was hoping reflect callers would continue to do the same thing. So we'd only restructure reflect itself and how ARIA/ElementInternals interact with it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: btw, I was hoping reflect callers would continue to do the same thing. So we'd only restructure reflect itself and how ARIA/ElementInternals interact with it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: btw, I was hoping reflect callers would continue to do the same thing. So we'd only restructure reflect itself and how ARIA/ElementInternals interact with it.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: btw, I was hoping reflect callers would continue to do the same thing. So we'd only restructure reflect itself and how ARIA/ElementInternals interact with it.","mimetype":"text/html"}]},"ts":1666944049953,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$u33GKcV3c_5x1KK6o7iD0tLD_-Nsmqi603_xW_PNNMk"},
{"content":{"body":"Yeah, this just doesn't seem like reflection to me","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, this just doesn't seem like reflection to me"},"ts":1666944319151,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$e9ot9r2N_aSvwZnTQfQPGIRe7695URj6Mz-vmg6MMgo"},
{"content":{"body":"It's only one-directional, and it can be much simpler.","msgtype":"m.text","org.matrix.msc1767.text":"It's only one-directional, and it can be much simpler."},"ts":1666944334398,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Q8CJ22tV0dMUHcsgdNT3M3JOXslGVYZI7HS_guz9ASk"},
{"content":{"body":"We can factor out the shadow DOM hiding stuff and use that, I guess, but we don't need all of (some generalized version of) reflect","msgtype":"m.text","org.matrix.msc1767.text":"We can factor out the shadow DOM hiding stuff and use that, I guess, but we don't need all of (some generalized version of) reflect"},"ts":1666944350323,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$KvXTjezpgKMo4v0ZWwnwqu3MojFEMvZsEKRwPGo9aJY"},
{"content":{"body":"Domenic: why is it only one-directional? Note that I want this to work for numeric and enumerated attributes as well.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why is it only one-directional? Note that I want this to work for numeric and enumerated attributes as well.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: why is it only one-directional? Note that I want this to work for numeric and enumerated attributes as well.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why is it only one-directional? Note that I want this to work for numeric and enumerated attributes as well.","mimetype":"text/html"}]},"ts":1666944886512,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bF3mjU8Gf8suvGBPq4Hxa3XmIDjhn9fn-t2M3XvKHQ4"},
{"content":{"body":"You just need to go number => string. You don't need to go string => number.","msgtype":"m.text","org.matrix.msc1767.text":"You just need to go number => string. You don't need to go string => number."},"ts":1666944906572,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ADdFa6h8Ace2ztIFOAyKfZgol99YZGetgnAb2mXw-64"},
{"content":{"body":"Domenic: why not? How would the getter work?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why not? How would the getter work?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: why not? How would the getter work?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: why not? How would the getter work?","mimetype":"text/html"}]},"ts":1666944922062,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QPRFjT1jHTrRho6c765wKGjf64nTrerf0jrPbqo9H6k"},
{"content":{"body":"It would return the number value stored in the map","msgtype":"m.text","org.matrix.msc1767.text":"It would return the number value stored in the map"},"ts":1666944966342,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Rw5UPOMCuxOrxtWEtSIo7dyUL2I2SwHELUFMsv8_5hY"},
{"content":{"body":"String conversion is only needed for getting values from the map to the AT","msgtype":"m.text","org.matrix.msc1767.text":"String conversion is only needed for getting values from the map to the AT"},"ts":1666944985134,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$fqozUCExBIX_cgKOnUTy0VYz6i_M4DaJ3MHR2Hd2ipI"},
{"content":{"body":"We never need to get values from the AT to the map","msgtype":"m.text","org.matrix.msc1767.text":"We never need to get values from the AT to the map"},"ts":1666944991620,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$D-KoQH9HNb1H2AwMZR3F7_-x5WFqE0zXYfMfeNRPgto"},
{"content":{"body":"Domenic: so you're saying we'd just need string -> number?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: so you're saying we'd just need string -&gt; number?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: so you're saying we'd just need string -> number?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: so you're saying we'd just need string -&gt; number?","mimetype":"text/html"}]},"ts":1666944994957,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8NGbrUNac6b8uf9x2W-_jLGr_fsoRqXL-l4c-4GVbKc"},
{"content":{"body":"Store numbers in the map","msgtype":"m.text","org.matrix.msc1767.text":"Store numbers in the map"},"ts":1666945005366,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$5TdMO75grkij2esxbmIwk2T01qjxTXabMx5ZmWp_UHc"},
{"content":{"body":"Turn them into strings when you give them to the AT, like in my comment","msgtype":"m.text","org.matrix.msc1767.text":"Turn them into strings when you give them to the AT, like in my comment"},"ts":1666945014508,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$PnkHftq2R5n_2f9KTQVErrdVy2thmBLGF0ZTFRA4nhY"},
{"content":{"body":"Return the numbers from the map in the getter","msgtype":"m.text","org.matrix.msc1767.text":"Return the numbers from the map in the getter"},"ts":1666945019414,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$pHfsn8oKHIDKvbZA-dc6OIl5fnV9I3bYNi_FsI5Indo"},
{"content":{"body":"Oh, but that actually makes accname harder to write as now it needs special logic for the map version.","msgtype":"m.text","org.matrix.msc1767.text":"Oh, but that actually makes accname harder to write as now it needs special logic for the map version."},"ts":1666945076793,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$o6CPU8wMSAc7CW20qZ7RkUBkXAUJekMVo7-PP2E9QkE"},
{"content":{"body":"Does it? I thought accname would use the string-or-element returning `getTheCurrent(X, element)` I outlined... I'll go look at the accname PR that's in progress","format":"org.matrix.custom.html","formatted_body":"Does it? I thought accname would use the string-or-element returning <code>getTheCurrent(X, element)</code> I outlined... I'll go look at the accname PR that's in progress","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Does it? I thought accname would use the string-or-element returning `getTheCurrent(X, element)` I outlined... I'll go look at the accname PR that's in progress","mimetype":"text/plain"},{"body":"Does it? I thought accname would use the string-or-element returning <code>getTheCurrent(X, element)</code> I outlined... I'll go look at the accname PR that's in progress","mimetype":"text/html"}]},"ts":1666945142325,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$JQlIMY2EwCZi5gMtyeZpmh8aW-uX62NfQNfeOM105kc"},
{"content":{"body":"It looks like that would work for accname","msgtype":"m.text","org.matrix.msc1767.text":"It looks like that would work for accname"},"ts":1666945193085,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$JpP7GQR-45poZGywfCEPfxTHZSfBKWoKBFAckjQiF9Q"},
{"content":{"body":"They would only ever encounter a list of elements actually, which simplifies their spec a good bit","msgtype":"m.text","org.matrix.msc1767.text":"They would only ever encounter a list of elements actually, which simplifies their spec a good bit"},"ts":1666945222531,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$j6fqy1p6k3s-P-W_Bi1xm7MqXTIFwxlTo8IoZuU_UoA"},
{"content":{"body":"Domenic: I still don't really see how this makes it easy to define a new IDL enumerated attribute for instance","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I still don't really see how this makes it easy to define a new IDL enumerated attribute for instance","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: I still don't really see how this makes it easy to define a new IDL enumerated attribute for instance","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I still don't really see how this makes it easy to define a new IDL enumerated attribute for instance","mimetype":"text/html"}]},"ts":1666945313528,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$dqjcwC31LlueatBQSdSrORt9DOD90eeGkfxql0HEqPQ"},
{"content":{"body":"I think it makes it automatic?","msgtype":"m.text","org.matrix.msc1767.text":"I think it makes it automatic?"},"ts":1666945344626,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$KSfzVv3WfYt8er5hdPAXgNwPayoDBd8pNlUxL3jmpds"},
{"content":{"body":"You state what ARIA content attribute it maps to","msgtype":"m.text","org.matrix.msc1767.text":"You state what ARIA content attribute it maps to"},"ts":1666945359371,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Mdp2FM3q7mg7r1BMgcNqE38V9grKKJdK_UZUHEeZ208"},
{"content":{"body":"Then you're done","msgtype":"m.text","org.matrix.msc1767.text":"Then you're done"},"ts":1666945373105,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_h2VRGQfWK4gibasPQSo6sBR6_jnFehiX_hnOGDV2qI"},
{"content":{"body":"Oh sorry, the operative word was \"enumerated\"","msgtype":"m.text","org.matrix.msc1767.text":"Oh sorry, the operative word was \"enumerated\""},"ts":1666945398859,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$nWD1mqCEpZjsmG6UEl06M1-_NwMUNcVM3sNKWI2aOgo"},
{"content":{"body":"Domenic: but I'd want the behavior where the getter only returns canonical values and such","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: but I'd want the behavior where the getter only returns canonical values and such","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: but I'd want the behavior where the getter only returns canonical values and such","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: but I'd want the behavior where the getter only returns canonical values and such","mimetype":"text/html"}]},"ts":1666945408273,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$INy62e3WTCKo7_yBAX1l_-3Cep9kaUayvRdXfxc47FY"},
{"content":{"body":"Domenic: or if you have a constrained numeric field it throws the correct exception, similar to how it does that for element reflection","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: or if you have a constrained numeric field it throws the correct exception, similar to how it does that for element reflection","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: or if you have a constrained numeric field it throws the correct exception, similar to how it does that for element reflection","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: or if you have a constrained numeric field it throws the correct exception, similar to how it does that for element reflection","mimetype":"text/html"}]},"ts":1666945439663,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jORxtDJpeOHmx8oI0Th-0jAlyumbJuc6-rnLbyf8q1I"},
{"content":{"body":"I think that is simpler with this framework because, unlike with reflect where the DOM can be mutated to contain arbitrary invalid values, the AT cannot be mutated in that way","msgtype":"m.text","org.matrix.msc1767.text":"I think that is simpler with this framework because, unlike with reflect where the DOM can be mutated to contain arbitrary invalid values, the AT cannot be mutated in that way"},"ts":1666945442577,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$EWzEJ7V7mGjdrO5EN0zlWGOTGWXwzZFOQrz0EQ3tArA"},
{"content":{"body":"You need the setter to constrain the incoming values but once the value is the map, the getter remains trivial","msgtype":"m.text","org.matrix.msc1767.text":"You need the setter to constrain the incoming values but once the value is the map, the getter remains trivial"},"ts":1666945462299,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ZNkx23cgvhRAoIF2zxAEpnp8jzv4QEO6VOsLIcgIIqM"},
{"content":{"body":"(for ElementInternals)","msgtype":"m.text","org.matrix.msc1767.text":"(for ElementInternals)"},"ts":1666945481784,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$R9ZUpq2ULGOXVqafN37-qDSwgIMljXIuV-xc88hXCSc"},
{"content":{"body":"So you'd define special behavior for each setter where?","msgtype":"m.text","org.matrix.msc1767.text":"So you'd define special behavior for each setter where?"},"ts":1666945483622,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$R6LilU7fjeegA7HZ-6GCDLC4MKFYTHPpTHoyo-WXkNU"}
]