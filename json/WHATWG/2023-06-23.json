[
{"content":{"body":"Welcome dveditz ðŸ‘‹","format":"org.matrix.custom.html","formatted_body":"Welcome <a href=\"https://matrix.to/#/@dveditz:mozilla.org\">dveditz</a> ðŸ‘‹","msgtype":"m.text"},"ts":1687526105389,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ulImF0FzDjckSCQjgeXwelUpxjHTjHtoJjVslBsz8hk"},
{"content":{"body":"Well https://twitter.com/WeizmanGal/status/1672206009643970560 is cursed, maybe we should address that","msgtype":"m.text"},"ts":1687529937763,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$p1hrTIhh5XX_Rb30kunqxYSlKw80oQ9jvXvMo8oqzUI"},
{"content":{"body":"Do indexed getters have higher precedence than named getters? But I guess you still need to somehow distinguish themâ€¦","msgtype":"m.text"},"ts":1687530089103,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$d4YTcd8-Py8mRMlONQJMWirfhNFKygfh7LbAnz9IGSw"},
{"content":{"body":"Yeah, I'm not sure what \"addressing\" might mean here. I've long thought that a complete opt-out would make sense, but that might not be a meaningful enough improvement on its own","msgtype":"m.text"},"ts":1687530275903,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pJrq1ur8in6Vab_-9sQCw9IPT3odS3pXhRVLnDMsBb0"},
{"content":{"body":"I mean a CSP policy that totally opted out seemsâ€¦ not silly, at first glance?","msgtype":"m.text"},"ts":1687530380514,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$599t4fAtmX9wCSJzN1YvjLtgZutQyZKnXNQGW5lNIJg"},
{"content":{"body":"But also I have thought about this for ~seconds, so, ymmv.","msgtype":"m.text"},"ts":1687530397230,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$hB7NnMLreTSq8rOEYj3gPepm8g1dpRgBPNhaMYvjIn4"},
{"content":{"body":"annevk: was this issue about the mathml core spec? https://github.com/w3c/mathml-core/issues/195","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: was this issue about the mathml core spec? https://github.com/w3c/mathml-core/issues/195","msgtype":"m.text"},"ts":1687531796972,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$qUxsWWgO6hzgDsTKvLUkyfi14lN-WFg6XzSL4r9OE2k"},
{"content":{"body":"bkardell: I was assuming that code was based on something in the spec","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: I was assuming that code was based on something in the spec","msgtype":"m.text"},"ts":1687537042643,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wZ1-Y1IJc-T-hiVJEUfo3jpD3dGyOGnPQ9MRySen0mA"},
{"content":{"body":"bkardell: I'll try to clarify now that I've seen https://w3c.github.io/mathml-core/#html-and-svg","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: I'll try to clarify now that I've seen https://w3c.github.io/mathml-core/#html-and-svg","msgtype":"m.text"},"ts":1687537149054,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$BpAlUDP8D2zw2zBUAeOX6M9DP2nCxRCEelshCBGRPNs"},
{"content":{"body":"hmm the only thing core says is in a note\n\n```\nThe <math> element can be used at position permitted for flow content (e.g. a <foreignObject> element) or phrasing content.\nAny phrasing content can be used inside mi, mo, mn, ms and mtext elements.\nThe <svg> element can be used inside annotation-xml elements.\nAny flow content can be used inside annotation-xml elements with encoding application/xhtml+xml or text/html.\n```","format":"org.matrix.custom.html","formatted_body":"<p>hmm the only thing core says is in a note</p>\n<pre><code>The &lt;math&gt; element can be used at position permitted for flow content (e.g. a &lt;foreignObject&gt; element) or phrasing content.\nAny phrasing content can be used inside mi, mo, mn, ms and mtext elements.\nThe &lt;svg&gt; element can be used inside annotation-xml elements.\nAny flow content can be used inside annotation-xml elements with encoding application/xhtml+xml or text/html.\n</code></pre>\n","msgtype":"m.text"},"ts":1687537168663,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$jQ_5fNFYvwP3wYnDyo_YH61dNBsKXRly8Ey8GCjPQ44"},
{"content":{"body":"ah ok you see that","msgtype":"m.text"},"ts":1687537186284,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$9c7UrsQVm2ctwabeAIrtcNWhSOUKRrEO5Tm5pmrInDI"},
{"content":{"body":"thx annevk ","format":"org.matrix.custom.html","formatted_body":"thx <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","msgtype":"m.text"},"ts":1687537503862,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$3PYNHLVtvuWHmzkKzs1hNAoPmjhywbFZW_n6NEGDnfA"},
{"content":{"body":"> <@gsnedders:mozilla.org> I mean a CSP policy that totally opted out seemsâ€¦ not silly, at first glance?\n\nI love CSP, and at one point envisioned it being used for all security policy things like this, but that was early on when we (Mozilla folks, at least) naively thought servers would mostly go for a site-wide policy served from a URL referenced in the header. It could expand as needed because it would end up cached like the site's large style sheets or JS framework libraries. But given the reality of today's complex header policies in practice I'd prefer seeing if there's a better delivery mechanism for that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$599t4fAtmX9wCSJzN1YvjLtgZutQyZKnXNQGW5lNIJg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@gsnedders:mozilla.org\">@gsnedders:mozilla.org</a><br>I mean a CSP policy that totally opted out seemsâ€¦ not silly, at first glance?</blockquote></mx-reply>I love CSP, and at one point envisioned it being used for all security policy things like this, but that was early on when we (Mozilla folks, at least) naively thought servers would mostly go for a site-wide policy served from a URL referenced in the header. It could expand as needed because it would end up cached like the site's large style sheets or JS framework libraries. But given the reality of today's complex header policies in practice I'd prefer seeing if there's a better delivery mechanism for that.","m.relates_to":{"m.in_reply_to":{"event_id":"$599t4fAtmX9wCSJzN1YvjLtgZutQyZKnXNQGW5lNIJg"}},"msgtype":"m.text"},"ts":1687541191338,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$P5Ilk38Ttz1Pa7HelU1eG48pzivrleuuFylvpxuMQJ0"},
{"content":{"body":"Is \"Document Policy\" going anywhere?","msgtype":"m.text"},"ts":1687541209032,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$jXQ45eNREmujvw_q60CycJ1SvTi_eWBQwze6AXjwauc"},
{"content":{"body":"Opt out of what, exactly? Maybe opt IN to actually enforcing the lowercase \"must\"s in the spec?\n> When specified on HTML elements, the id attribute value must be unique amongst all the IDs in the element's tree and must contain at least one character. The value must not contain any ASCII whitespace.","format":"org.matrix.custom.html","formatted_body":"<p>Opt out of what, exactly? Maybe opt IN to actually enforcing the lowercase \"must\"s in the spec?</p>\n<blockquote>\n<p>When specified on HTML elements, the id attribute value must be unique amongst all the IDs in the element's tree and must contain at least one character. The value must not contain any ASCII whitespace.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1687542111555,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$FLwG2m4LhGfIlypRvdI1XCj8iAUJRDHPjhwOWz1m8oA"},
{"content":{"body":"although what would enforcement mean? probably that \"invalid\" ids are simply ignored (plus a console error) and the web dev has to debug their page","msgtype":"m.text"},"ts":1687542188736,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$YIrnG2nxrVec72syOZTcrQ_0wTeU3fwjvM5wm6lkr-s"},
{"content":{"body":"oops, misread \"character\" as \"alpha character\"","msgtype":"m.text"},"ts":1687542239791,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$QWk60Ea6cksvWFgdg1LwS_7UsCsLdYcd-Jdv1b7yf5U"},
{"content":{"body":" * oops, misread \"character\" as \"alpha character\". that wouldn't solve the problem in the tweet.","m.new_content":{"body":"oops, misread \"character\" as \"alpha character\". that wouldn't solve the problem in the tweet.","msgtype":"m.text"},"m.relates_to":{"event_id":"$QWk60Ea6cksvWFgdg1LwS_7UsCsLdYcd-Jdv1b7yf5U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1687542406542,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$ta0Ml6P4FYxyGLKdEfok4PeqxGnuELKwC89HZPAJTYE"},
{"content":{"body":"> <@dveditz:mozilla.org> Opt out of what, exactly? Maybe opt IN to actually enforcing the lowercase \"must\"s in the spec?\n> > When specified on HTML elements, the id attribute value must be unique amongst all the IDs in the element's tree and must contain at least one character. The value must not contain any ASCII whitespace.\n\nPresumably opt-out of there being a named getter on Window at all","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$FLwG2m4LhGfIlypRvdI1XCj8iAUJRDHPjhwOWz1m8oA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@dveditz:mozilla.org\">@dveditz:mozilla.org</a><br><p>Opt out of what, exactly? Maybe opt IN to actually enforcing the lowercase \"must\"s in the spec?</p>\n<blockquote>\n<p>When specified on HTML elements, the id attribute value must be unique amongst all the IDs in the element's tree and must contain at least one character. The value must not contain any ASCII whitespace.</p>\n</blockquote>\n</blockquote></mx-reply>Presumably opt-out of there being a named getter on Window at all","m.relates_to":{"m.in_reply_to":{"event_id":"$FLwG2m4LhGfIlypRvdI1XCj8iAUJRDHPjhwOWz1m8oA"}},"msgtype":"m.text"},"ts":1687542490281,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$6FTFgsOgN_SPPqQvDl19TqjIKgXhFRqNMBJ60jtsWzc"},
{"content":{"body":"hm, ok. I was trying to go in the direction of only having valid ones. But good point, why should all the elements be stuck willy-nilly on the global in the first place?","msgtype":"m.text"},"ts":1687542615948,"senderName":"dveditz","senderId":"@dveditz:mozilla.org","id":"$kbSnfqBbgcYUr8Zpgj9yyf5_KE8eVKsl_9LAqYJRlLY"}
]