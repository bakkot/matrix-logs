[
{"content":{"body":"I'm looking into StructuredSerializeInternal for Ladybird, and steps 22 and 23 are tripping me up. From looking into blink, it seems like they defer to v8 for the serialization steps, in v8::ValueSerializer. And v8 seems to encode all the data about whether an object (a \"receiver\") is a well known ES object or ES prototype in a tag field. But LibJS doesn't do that, we just have a bunch of classical c++ inheritance. Like there's no \"IsExotic()\" function I can call. \n\nDo all the other engines do this type of tagging of JS objects so that those two catch-all steps are trivial and/or fall out of handling the known object types?","msgtype":"m.text"},"ts":1694630627968,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$fQgmLf_JjgUrPwNAAng7bsbBvWIKg3ecahA7bytE2gA"},
{"content":{"body":"There's certainly no ECMAScript abstract operation I can call to say \"is this a plain old object\" (I think?)","msgtype":"m.text"},"ts":1694630742432,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$0VUZyehYYlKsLQJHuJfUML1SoSfsu4LA7QIHdS4giIQ"}
]