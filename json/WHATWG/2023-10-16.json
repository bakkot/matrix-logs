[
{"content":{"body":"Section 4.2.4.3 (https://html.spec.whatwg.org/multipage/semantics.html#fetching-and-processing-a-resource-from-a-link-element) of the HTML spec references setting the synchronous flag of a fetch request, and links to https://fetch.spec.whatwg.org/#synchronous-flag","m.mentions":{},"msgtype":"m.text"},"ts":1697427347102,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$YR8dLEOcK2eFk12NTpGjkSHhw9xE_QonFfbCH4m-kQg"},
{"content":{"body":"However, that section of the fetch spec seems to no longer exist","m.mentions":{},"msgtype":"m.text"},"ts":1697427364745,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$fZ0aOV-3_POsEuCyLKkT7QKvHh79NnOOhLPFENoZmno"},
{"content":{"body":"So I think it may be out of date","m.mentions":{},"msgtype":"m.text"},"ts":1697427371532,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$MBbkGy4JRPkBcAoePzGj91T-7JsjegSke8_HR5nG2sQ"},
{"content":{"body":"Looks like everything else has been updated but we forgot to delete that step. PR welcome!","m.mentions":{},"msgtype":"m.text"},"ts":1697428053301,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UCpsFwmxCe-VjRpFFi-vNjVsP5o7AfH2PWKuRH9w3ns"},
{"content":{"body":"Sure, will make a PR tomorrow! (It's late here)","m.mentions":{},"msgtype":"m.text"},"ts":1697428106918,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$XG5RnF5cPEconouC86tpNV-p4h-2hrSiRKICAoxDc1I"},
{"content":{"body":"TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n```\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser\n(maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":"<p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code>gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser<br>(maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1697429011086,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$S35CpRAG1uDfki5PV2L1CgzYUASzhkb-pdNjXwVucTQ"},
{"content":{"body":" * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```plain\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser\n(maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":" * <p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-plain\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser<br>(maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"m.new_content":{"body":"TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```plain\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser\n(maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":"<p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-plain\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser<br>(maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S35CpRAG1uDfki5PV2L1CgzYUASzhkb-pdNjXwVucTQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697429030787,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lqYHxMledz_IVkWRfukjNj1JASEahxMgZGr70RpQMUY"},
{"content":{"body":" * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```none\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser\n(maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":" * <p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-none\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser<br>(maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"m.new_content":{"body":"TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```none\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser\n(maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":"<p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-none\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser<br>(maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S35CpRAG1uDfki5PV2L1CgzYUASzhkb-pdNjXwVucTQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697429041336,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$VqFyNP9wK2O3gOQmYA_b_VLj5x3H4AX12IQB3ytBd20"},
{"content":{"body":" * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```none\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser. (Maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":" * <p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-none\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser. (Maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"m.new_content":{"body":"TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:\n\n```none\ngh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n```\n\n…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser. (Maybe I already knew this but subsequently forgot…)","format":"org.matrix.custom.html","formatted_body":"<p>TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run <code>gh browse</code> with the commit hash, like this:</p>\n<pre><code class=\"language-none\">gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d\n</code></pre>\n<p>…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser. (Maybe I already knew this but subsequently forgot…)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S35CpRAG1uDfki5PV2L1CgzYUASzhkb-pdNjXwVucTQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697429062715,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ezsfLI2Uwgf3ky6B1yZJi5bmpK3UzsRzpuiW6uqDdSk"},
{"content":{"body":"I just implemented a proper event loop and network task queue in the code for my browser, but I'm not properly blocking rendering\nSo now you can see the page load each individual external stylesheet. It's quite hilarious, especially on a website with many external stylesheets","m.mentions":{},"msgtype":"m.text"},"ts":1697429275880,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$Pl04hQogW9b8ik0L3EDkPss05pPYcCs-ynnrKCyQ36o"},
{"content":{"body":"sideshowbarker: That's pretty cool. Now I'm wondering if it has a way to open the commit history for a specific file in the browser","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: That's pretty cool. Now I'm wondering if it has a way to open the commit history for a specific file in the browser","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1697429576794,"senderName":"EveryOS","senderId":"@everyos:matrix.org","id":"$4PWQBCKg20ZcYPxGH2AaotPocIGveKHHFFS5hTTOuYk"},
{"content":{"body":"`gh browse fetch.bs` does take you to the file page at least","format":"org.matrix.custom.html","formatted_body":"<code>gh browse fetch.bs</code> does take you to the file page at least","m.mentions":{},"msgtype":"m.text"},"ts":1697429667003,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$GYtrnwRQgvwEKHJMEJaDZr8867x5t1hSuqR0AaT1LPs"},
{"content":{"body":" * annevk: <del>Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter _should_ rightly be named `activeWindow` (or something) and the _second_ one should be named `incumbentWindow` (rather than `firstWindow`).</del>\n\n<del>Does the code seem to make more sense to if it used those names?</del>\n\nRegardless, I can see now that I need to just do `firstWindow.document()->urlForBindings()` to get the right URL — rather than `frame->tree().parent())->document()->urlForBindings()`. So I’ll make that change, and push an update.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: <del>Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter <em>should</em> rightly be named <code>activeWindow</code> (or something) and the <em>second</em> one should be named <code>incumbentWindow</code> (rather than <code>firstWindow</code>).</del></p>\n<p><del>Does the code seem to make more sense to if it used those names?</del></p>\n<p>Regardless, I can see now that I need to just do <code>firstWindow.document()-&gt;urlForBindings()</code> to get the right URL — rather than <code>frame-&gt;tree().parent())-&gt;document()-&gt;urlForBindings()</code>. So I’ll make that change, and push an update.</p>\n","m.mentions":{},"m.new_content":{"body":"annevk: <del>Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter _should_ rightly be named `activeWindow` (or something) and the _second_ one should be named `incumbentWindow` (rather than `firstWindow`).</del>\n\n<del>Does the code seem to make more sense to if it used those names?</del>\n\nRegardless, I can see now that I need to just do `firstWindow.document()->urlForBindings()` to get the right URL — rather than `frame->tree().parent())->document()->urlForBindings()`. So I’ll make that change, and push an update.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: <del>Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter <em>should</em> rightly be named <code>activeWindow</code> (or something) and the <em>second</em> one should be named <code>incumbentWindow</code> (rather than <code>firstWindow</code>).</del></p>\n<p><del>Does the code seem to make more sense to if it used those names?</del></p>\n<p>Regardless, I can see now that I need to just do <code>firstWindow.document()-&gt;urlForBindings()</code> to get the right URL — rather than <code>frame-&gt;tree().parent())-&gt;document()-&gt;urlForBindings()</code>. So I’ll make that change, and push an update.</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$4fJI0I5UuAsaJpXHxLN6bYa7ngYsjbyCdBYiuTjPvfg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697434787185,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$IwkupyhMnyaQ4dZlOAJcSNs3xJ-SBNDR_wSzQj6rp24"},
{"content":{"body":"evilpie: `document.createElementNS(null, \"blah\").namespaceURI === null`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: <code>document.createElementNS(null, \"blah\").namespaceURI === null</code>","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449540566,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$st5YV2eTy1T0Hws-b-nIu-cfp14dMzWC072Tn8vgBWU"},
{"content":{"body":"I am not sure that is possible when parsing something?","m.mentions":{},"msgtype":"m.text"},"ts":1697449631158,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$j162WorcPeLzcdRiXGVbhdR1GejH712zIjndz9VFhM4"},
{"content":{"body":"evilpie: `<div xmlns=\"\">` is also null","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: <code>&lt;div xmlns=\"\"&gt;</code> is also null","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449658558,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9kMSChHj_j0o8OhRDGKEwdmRnYqIrBwTKC7ndaIrs2U"},
{"content":{"body":"evilpie: empty string is canonicalized to null","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: empty string is canonicalized to null","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449677973,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$-46P-X5zfvK2ohY5cUiDpoxmfX4R8HG28OfjD-t6V3c"},
{"content":{"body":"Ok","m.mentions":{},"msgtype":"m.text"},"ts":1697449692465,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$h73VKUvQT303P0IcMUMfc286jacDrGYZwpZNJ8JvBIk"},
{"content":{"body":"evilpie: `data:text/xml,<root><script%20xmlns=\"http://www.w3.org/1999/xhtml\">alert(document.documentElement.namespaceURI%20===%20null)</script></root>`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: <code>data:text/xml,&lt;root&gt;&lt;script%20xmlns=\"http://www.w3.org/1999/xhtml\"&gt;alert(document.documentElement.namespaceURI%20===%20null)&lt;/script&gt;&lt;/root&gt;</code>","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449726799,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$-hNs_30cT_54n8p-g2fH6AJbRI-n5214Ij5TL155lfo"},
{"content":{"body":"evilpie: now, whether the HTML parser can do this, not sure","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: now, whether the HTML parser can do this, not sure","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449777221,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$x6__mpRoQkEOFl6VBaRl182yMN4iMmp8Elzy_2CuLcY"},
{"content":{"body":"evilpie: but it seems best to design the API with the DOM in mind","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: but it seems best to design the API with the DOM in mind","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449822168,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$32MvFbR_phgmDUK1FCh_ow_iGmg7fbxUgtMY2JFkCoA"},
{"content":{"body":"evilpie: at least presumably we're not planning on throwing for namespaces the HTML parser cannot create","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@evilpie:mozilla.org\">evilpie</a>: at least presumably we're not planning on throwing for namespaces the HTML parser cannot create","m.mentions":{"user_ids":["@evilpie:mozilla.org"]},"msgtype":"m.text"},"ts":1697449860483,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$q2ZTFWUba6ysN-qhAnuOhP6Di2M3tnIQ-ff1Z050VxI"},
{"content":{"body":"I think we had discussed at some point throwing for unknown namespaces, because we have a hardcoded list baselines/default/whatever for elements/attributes","m.mentions":{},"msgtype":"m.text"},"ts":1697449940248,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$Pqh60EoIcVbwRNcNiSP-gJUsV19e4KzDUpUPJutBw20"},
{"content":{"body":" * I think we had discussed at some point throwing for unknown namespaces, because we have a hardcoded list baselines/default/whatever for elements/attributes (per NS)","m.mentions":{},"m.new_content":{"body":"I think we had discussed at some point throwing for unknown namespaces, because we have a hardcoded list baselines/default/whatever for elements/attributes (per NS)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Pqh60EoIcVbwRNcNiSP-gJUsV19e4KzDUpUPJutBw20","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1697449952767,"senderName":"evilpie","senderId":"@evilpie:mozilla.org","id":"$x4MH3FUXIXb5XpvI2r5-BNs1BVWVe8q-FD0xNN4JPi4"},
{"content":{"body":"If we do that we could have a narrower type as it comes down to the same thing, but it might be less confusing to have an equally wide type and just throw for null. I'm not entirely convinced it's a good idea to throw though.","m.mentions":{},"msgtype":"m.text"},"ts":1697450245838,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cr3YOfl8Xk-J5MjeLlxNU0Yr9ob8R2kkhRWXulB5zKc"},
{"content":{"body":"Domenic: I gave a first shot at the `navigation.activation` thingy, if you want to take a look: https://github.com/whatwg/html/pull/9856\nStill need to add tests (and implementation of course) but want to make sure I'm on the right track","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I gave a first shot at the <code>navigation.activation</code> thingy, if you want to take a look: https://github.com/whatwg/html/pull/9856<br>Still need to add tests (and implementation of course) but want to make sure I'm on the right track","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1697451047385,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$hS3NyxPwaY7x8KRk6RLtuFAIZZc1V8MNd6S5y4QZ62M"},
{"content":{"body":"Will try to take a look tomorrow!","msgtype":"m.text"},"ts":1697451200916,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$h6covypggQmMbBUotk-rbHK5fCCjzfYQW71aKKfsMxM"},
{"content":{"body":"Thanks, no rush!","m.mentions":{},"msgtype":"m.text"},"ts":1697451746550,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$llGiPL5tCaNe2wR3Nt4RXbz8VUVcB3LEY0nwQJaxfgM"},
{"content":{"body":"Does Gecko have a prototype of declarative shadow roots and if so what does http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cscript%3Ew(document.createElement(%22template%22).shadowRootMode%20%3D%3D%3D%20%22%22)%3C%2Fscript%3E log?","m.mentions":{},"msgtype":"m.text"},"ts":1697461020355,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YB1oktOmXtEgCL-FQDmbxjV_IQhxQSpmRGFBWN9KtA8"},
{"content":{"body":"smaug: ^^ (last open question on the spec PR from my perspective; Chromium and WebKit both log false due to using null, which isn't allowed by the proposed spec text)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: ^^ (last open question on the spec PR from my perspective; Chromium and WebKit both log false due to using null, which isn't allowed by the proposed spec text)","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1697461073296,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ZWBYftZTcyHyd_EuiCuInc8cJCeHtTq60UW96xTbFSw"},
{"content":{"body":"annevk: no prototype yet","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: no prototype yet","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1697462064666,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$4nI-zSB8qcV1frp-97Vdo1s6gbwZQnbaVMwZ305rYAY"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1712140","m.mentions":{},"msgtype":"m.text"},"ts":1697462086314,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$LGvHqXn3lZtdrO27ShUGpEhTExEkmoKEUljSiSU7Osk"}
]