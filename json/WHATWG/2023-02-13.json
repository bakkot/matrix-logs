[
{"content":{"body":"Use the `a` element, that's what it's for","format":"org.matrix.custom.html","formatted_body":"Use the <code>a</code> element, that's what it's for","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Use the `a` element, that's what it's for","mimetype":"text/plain"},{"body":"Use the <code>a</code> element, that's what it's for","mimetype":"text/html"}]},"ts":1676281044592,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$Ef2RGVAKOK_eTPscarAUe2pxx5dut-lHNiqa6HE1X94"},
{"content":{"body":"Hey, I'm having trouble implementing some steps relating to the [WebIDL Promise](https://webidl.spec.whatwg.org/#idl-promise) type:\n\nIn [react to a Promise](https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled)\n\n> 5. Let constructor be promise.[[Promise]].[[Realm]].[[Intrinsics]].[[%Promise%]].\n\nI would assume the `promise` given to be a [PromiseCapability Record](https://tc39.es/ecma262/#sec-promisecapability-records) as the `[[Promise]]` field (containing \"an object that is usable as a promise\") gets accessed.\n\nHowever, in the case of [fetching the descendants of and linking a module script](https://html.spec.whatwg.org/multipage/webappapis.html#fetch-the-descendants-of-and-link-a-module-script)\n\n> 5. Let loadingPromise be record.LoadRequestedModules(state).\n\n> 6. Upon fulfillment of loadingPromise, run the following steps:\n\n`loadingPromise` (which is passed to [fulfillment](https://webidl.spec.whatwg.org/#upon-fulfillment) and [react](https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled) subsequently) is clearly (already?) a promise object and and not a capability record, returned by [LoadRequestedModules](https://tc39.es/ecma262/#sec-LoadRequestedModules):\n\n> 2. Let pc be ! NewPromiseCapability(%Promise%).\n\n> 5. Return pc.[[Promise]].","format":"org.matrix.custom.html","formatted_body":"<p>Hey, I'm having trouble implementing some steps relating to the <a href=\"https://webidl.spec.whatwg.org/#idl-promise\">WebIDL Promise</a> type:</p>\n<p>In <a href=\"https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled\">react to a Promise</a></p>\n<blockquote>\n<ol start=\"5\">\n<li>Let constructor be promise.[[Promise]].[[Realm]].[[Intrinsics]].[[%Promise%]].</li>\n</ol>\n</blockquote>\n<p>I would assume the <code>promise</code> given to be a <a href=\"https://tc39.es/ecma262/#sec-promisecapability-records\">PromiseCapability Record</a> as the <code>[[Promise]]</code> field (containing &quot;an object that is usable as a promise&quot;) gets accessed.</p>\n<p>However, in the case of <a href=\"https://html.spec.whatwg.org/multipage/webappapis.html#fetch-the-descendants-of-and-link-a-module-script\">fetching the descendants of and linking a module script</a></p>\n<blockquote>\n<ol start=\"5\">\n<li>Let loadingPromise be record.LoadRequestedModules(state).</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"6\">\n<li>Upon fulfillment of loadingPromise, run the following steps:</li>\n</ol>\n</blockquote>\n<p><code>loadingPromise</code> (which is passed to <a href=\"https://webidl.spec.whatwg.org/#upon-fulfillment\">fulfillment</a> and <a href=\"https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled\">react</a> subsequently) is clearly (already?) a promise object and and not a capability record, returned by <a href=\"https://tc39.es/ecma262/#sec-LoadRequestedModules\">LoadRequestedModules</a>:</p>\n<blockquote>\n<ol start=\"2\">\n<li>Let pc be ! NewPromiseCapability(%Promise%).</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"5\">\n<li>Return pc.[[Promise]].</li>\n</ol>\n</blockquote>\n","msgtype":"m.text"},"ts":1676282122033,"senderName":"networkException","senderId":"@networkexception:chat.upi.li","id":"$XBtzlYeViZyA0I2uFAlNvYDTJAGWQVmW_taUKimAL7w"},
{"content":{"body":"Looks like a bug in LoadRequestedModules","msgtype":"m.text","org.matrix.msc1767.text":"Looks like a bug in LoadRequestedModules"},"ts":1676282597498,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$n3h8lxzr7s1Tx5wMuKc559Wf7ZS4ezqdXkI0qC1BqI4"},
{"content":{"body":"so the WebIDL promise is supposed to be a capability record then? It would be good to have that clarified","msgtype":"m.text"},"ts":1676283322452,"senderName":"networkException","senderId":"@networkexception:chat.upi.li","id":"$evZ672xPgegF2l0MEmpSQO15G4uQ7kmYa0_n0kN9g1U"},
{"content":{"body":"> IDL promise type values are represented by ECMAScript PromiseCapability records.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>IDL promise type values are represented by ECMAScript PromiseCapability records.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> IDL promise type values are represented by ECMAScript PromiseCapability records.","mimetype":"text/plain"},{"body":"<blockquote>\n<p>IDL promise type values are represented by ECMAScript PromiseCapability records.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1676284039481,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$3mwEK0CdCrrAKkuPiQ2pXdpAqWL-M2d1IUG1y_M_eN4"},
{"content":{"body":"https://webidl.spec.whatwg.org/#es-promise","msgtype":"m.text","org.matrix.msc1767.text":"https://webidl.spec.whatwg.org/#es-promise"},"ts":1676284043757,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$oxLDvTLA4oPGEgyIBLb9fhtSZ5oIgUO9hpyUC6pAKyI"},
{"content":{"body":"wait, does that mean that an operation of the form `Promise<any> identity(Promise<any> input)` cannot return the input promise object?","format":"org.matrix.custom.html","formatted_body":"wait, does that mean that an operation of the form <code>Promise&lt;any&gt; identity(Promise&lt;any&gt; input)</code> cannot return the input promise object?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"wait, does that mean that an operation of the form `Promise<any> identity(Promise<any> input)` cannot return the input promise object?","mimetype":"text/plain"},{"body":"wait, does that mean that an operation of the form <code>Promise&lt;any&gt; identity(Promise&lt;any&gt; input)</code> cannot return the input promise object?","mimetype":"text/html"}]},"ts":1676284139512,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$YN_sFqYEZLwyhytLK4dUXAKrXcCq1OVMtUPlD2qOVqA"},
{"content":{"body":"and that any operation that takes a `Promise<T>` can't resolve or reject the promise","format":"org.matrix.custom.html","formatted_body":"and that any operation that takes a <code>Promise&lt;T&gt;</code> can't resolve or reject the promise","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and that any operation that takes a `Promise<T>` can't resolve or reject the promise","mimetype":"text/plain"},{"body":"and that any operation that takes a <code>Promise&lt;T&gt;</code> can't resolve or reject the promise","mimetype":"text/html"}]},"ts":1676284152475,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$asrizC6pfpFGD8sgrH_hnFz3DGJErYwgotmMEIuW1yA"},
{"content":{"body":"though I guess only the wasm streaming API takes a promise","msgtype":"m.text","org.matrix.msc1767.text":"though I guess only the wasm streaming API takes a promise"},"ts":1676284167958,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$SpvoBH6lx-VidrVuwSLfasOO-GK5BBevcXuYV9ee2pU"},
{"content":{"body":" * though I guess only the wasm streaming API takes a promise","m.new_content":{"body":"though I guess only the wasm streaming API takes a promise","msgtype":"m.text","org.matrix.msc1767.text":"though I guess only the wasm streaming API takes a promise"},"m.relates_to":{"event_id":"$SpvoBH6lx-VidrVuwSLfasOO-GK5BBevcXuYV9ee2pU","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * though I guess only the wasm streaming API takes a promise"},"ts":1676284176110,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$6o2umeXn0XANRBb_-xnHajkiYwhxkcRewP6-EHq2Sg8"}
]