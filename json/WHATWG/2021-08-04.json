[
{"content":{"body":"https://stackoverflow.com/questions/68641231/does-javascripts-abortable-fetch-close-the-http-connection","msgtype":"m.text"},"ts":1628035968437,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$fL3tZ88mI3fvAlqj1RlR1vuKDxXomFSpMD4iCrZdXfk"},
{"content":{"body":"> <@domenicdenicola:matrix.org> https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&base=YWJvdXQ6Ymxhbms=\n\nThank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:\n\n> ...\n> U+2260 ( ≠ ) NOT EQUAL TO\n> U+226E ( ≮ ) NOT LESS-THAN\n> U+226F ( ≯ ) NOT GREATER-THAN \n>\n> ... If an implementation uses `UseSTD3ASCIIRules=false` but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation. \n\nThe URL standard forbids `<` and `>`, so I feel `≮` and `≯` should be banned as well. I am happy to open a GitHub issue on this (smaller issue).\n\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly88&base=YWJvdXQ6Ymxhbms=\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&base=YWJvdXQ6Ymxhbms=","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&amp;base=YWJvdXQ6Ymxhbms=</blockquote></mx-reply><p>Thank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:</p>\n<blockquote>\n<p>...<br>U+2260 ( ≠ ) NOT EQUAL TO<br>U+226E ( ≮ ) NOT LESS-THAN<br>U+226F ( ≯ ) NOT GREATER-THAN</p>\n<p>... If an implementation uses <code>UseSTD3ASCIIRules=false</code> but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation.</p>\n</blockquote>\n<p>The URL standard forbids <code>&lt;</code> and <code>&gt;</code>, so I feel <code>≮</code> and <code>≯</code> should be banned as well. I am happy to open a GitHub issue on this (smaller issue).</p>\n<p>https://jsdom.github.io/whatwg-url/#url=d3M6Ly88&amp;base=YWJvdXQ6Ymxhbms=<br>https://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&amp;base=YWJvdXQ6Ymxhbms=</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc"}},"msgtype":"m.text"},"ts":1628036956097,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$Lc4Ze8m2ZwVA1jRRLtGIXBejVaXZwBVKiM6ecrGylXk"},
{"content":{"body":"Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.","msgtype":"m.text"},"ts":1628037415374,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo"},
{"content":{"body":"It might be clearer if you think of the URL Standard as a standalone document that gives the full processing model. The fact that it calls into some specific Unicode algorithms with some parameters is interesting, but is just an implementation detail and isn't meant to indicate any greater alignment with the philosophies of those documents.","msgtype":"m.text"},"ts":1628037467073,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$OyaDyv_rDgy3FKXvdsgpk3JW2a51heEKSzZvWqe0f5w"},
{"content":{"body":"alright I will skip the reporting. it's perhaps an interesting technical point, though","msgtype":"m.text"},"ts":1628037745204,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$yTSYrhLMtdkZlrjVspNKZxTszERZrEgL8LrqzCfxg_Q"},
{"content":{"body":"Sorry I accidentally pressed Enter to create an issue when doing some complex editing on GitHub. Please give me some time to fix that :-/","msgtype":"m.text"},"ts":1628037982835,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$US50VBOU3M4d-z4wCchqoKmq0w-nL0s3osAt101eJKA"},
{"content":{"body":"Domenic: Is https://jsdom.github.io/whatwg-url some website I can/should cite in my reporting? The tool is very convenient and I wonder if it's \"permanent\" in any sense.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Is https://jsdom.github.io/whatwg-url some website I can/should cite in my reporting? The tool is very convenient and I wonder if it's &quot;permanent&quot; in any sense.","msgtype":"m.text"},"ts":1628039064614,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$2wVNI01A_MO0Lzs071PSOTVN5KKqXGsPrbOUx78HuNM"},
{"content":{"body":"favonia: yes, feel free to use that site.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: yes, feel free to use that site.","msgtype":"m.text"},"ts":1628041151805,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> favonia: yes, feel free to use that site.\n\nDone! https://github.com/whatwg/url/issues/626","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br><a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: yes, feel free to use that site.</blockquote></mx-reply>Done! https://github.com/whatwg/url/issues/626","m.relates_to":{"m.in_reply_to":{"event_id":"$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM"}},"msgtype":"m.text"},"ts":1628044140506,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$DTsRV3WUxoEsTdrfMIMmyEmN4Mh1OuNBXnSHyfjiltI"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.\n\nAfter checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters, then ≮, ≯ or even ≠ could generate <, > or = under NFD.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yes, I think this is a case where conforming to the rules doesn&#39;t really buy anything. Encoding ≮ to punycode seems fine.</blockquote></mx-reply>After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters, then ≮, ≯ or even ≠ could generate &lt;, &gt; or = under NFD.","m.relates_to":{"m.in_reply_to":{"event_id":"$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo"}},"msgtype":"m.text"},"ts":1628087100831,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$dNvRXdjTGwrFvoUJTUzPF1KMTzL3r-PgA1anZ5RsXeA"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.\n\n * After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate <, > or = under NFD and should be banned as well.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.</blockquote></mx-reply> * After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate &lt;, &gt; or = under NFD and should be banned as well.","m.new_content":{"body":"After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate <, > or = under NFD and should be banned as well.","format":"org.matrix.custom.html","formatted_body":"After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate &lt;, &gt; or = under NFD and should be banned as well.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dNvRXdjTGwrFvoUJTUzPF1KMTzL3r-PgA1anZ5RsXeA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628087150989,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$9VsbJfHe316hWfQRZXVw_7wi8Zf581B_09IYhSyWxiI"},
{"content":{"body":"That reading is only correct under the assumption that NFD(URL string) is a valid operation, which it's not; as long as you do URL parser(URL string) I don't think you have demonstrated an issue","msgtype":"m.text"},"ts":1628087699516,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$5d19f7RzCIsEhO9m0Z3yfHBsbD1bD6CPgFen-B1TVOg"},
{"content":{"body":"I could see banning more code points out of caution (though we cannot ban all, e.g., `_` is important), but I wouldn't classify these as a problem with the URL parser","format":"org.matrix.custom.html","formatted_body":"I could see banning more code points out of caution (though we cannot ban all, e.g., <code>_</code> is important), but I wouldn't classify these as a problem with the URL parser","msgtype":"m.text"},"ts":1628087742023,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Wr72XMvbkgPnW6t22EVXFaVIb8PMAP0SPxvo4z-aKLs"},
{"content":{"body":"well... I did not imply that the current URL parser itself is wrong. I was only proposing to restrict valid URLs as you suggested. it would be kind of you to cite exact phrases which gave you such an impression so that I can revise my proposal.","msgtype":"m.text"},"ts":1628087993433,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$kQKCdFLgJoNhJckVNjCBD2zEQJrpd4LZnRwBEKFjxws"},
{"content":{"body":"Another thing is, according to your statements \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. that's against the standard and W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":"Another thing is, according to your statements &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. that's against the standard and W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"ts":1628088137763,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":" * Another thing is, according to your statement &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":"Another thing is, according to your statement &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088239055,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$EPSfNZSSvtTKh8HlQ6Q2oVnaAwJM6UntlDMIqfkC5ZU"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088248933,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$IHY6Mk-3Qme2js3POcfZ9c-U6ArydXv4hXyGQZ5hNOw"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088322929,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$925Lrtx3gKq7IyUPqUAvaIArrnsL6O19KvS6Ov4otTI"},
{"content":{"body":" * Also, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Also, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088434263,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$wP7Zof6V39Y3yJFOAiWHfFQNLlX-oiQwj7rIV2jGmhU"},
{"content":{"body":"favonia: if you apply normalization at that level though, there is nothing the URL parser can do about it, because you cannot distinguish it from a URL that contains ASCII `#`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: if you apply normalization at that level though, there is nothing the URL parser can do about it, because you cannot distinguish it from a URL that contains ASCII <code>#</code>","msgtype":"m.text"},"ts":1628088677049,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$gG03xYxYtjUmaLqT7bDKAsWhKIWtz_OucmxOW5u2ZvE"},
{"content":{"body":"I want to repeat that I never implied that the URL parsing is at fault. Could you possibly cite the phrases that gave you such an impression? It seems we miscommunicated and I want to clear up the misunderstanding.","msgtype":"m.text"},"ts":1628088778271,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$phFleibJvhl7aux5nJKZLAk4_ApohasYrV93oIFKBrE"},
{"content":{"body":"favonia: it might be worth raising with www-international@w3.org as it's a somewhat interesting case; you cannot take a URL from somewhere, validate its scheme and host, then put the input string in HTML that gets normalized; you'd have to put the serialization in which might not be something folks realize","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: it might be worth raising with www-international@w3.org as it's a somewhat interesting case; you cannot take a URL from somewhere, validate its scheme and host, then put the input string in HTML that gets normalized; you'd have to put the serialization in which might not be something folks realize","msgtype":"m.text"},"ts":1628088788197,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Fvjmqsfyw1TZdzxw3YDKGWOBILTqBgOE2w809IwLKXE"},
{"content":{"body":"favonia: you start out with talking about URL records, and URL records are the result of parsing","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: you start out with talking about URL records, and URL records are the result of parsing","msgtype":"m.text"},"ts":1628088850555,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$vNcgob_7muXgzSubRzKHuaenABHZLZAjqdQzsSOofVw"},
{"content":{"body":"yes, but the parser is not the problem. at least not in my opinion.","msgtype":"m.text"},"ts":1628088872077,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$q9urPaDgpa7_zIyrM_V_xG1fxUoudFuiiZeO2ebx7DA"},
{"content":{"body":"\"A proper fix would probably be similar to the sanitization of host names.\" Isn't that a parser change?","msgtype":"m.text"},"ts":1628088909269,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$UIr_CiFkfKmgL61oWp2OaYqjNq9QhCPxetpjByNZfrE"},
{"content":{"body":"> <@annevk:mozilla.org> I could see banning more code points out of caution (though we cannot ban all, e.g., `_` is important), but I wouldn't classify these as a problem with the URL parser\n\nno, this is what I meant. thank you for citing exact phrases so that I can prevent other people from misunderstanding the proposal","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Wr72XMvbkgPnW6t22EVXFaVIb8PMAP0SPxvo4z-aKLs?via=mozilla.org&via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>I could see banning more code points out of caution (though we cannot ban all, e.g., <code>_</code> is important), but I wouldn't classify these as a problem with the URL parser</blockquote></mx-reply>no, this is what I meant. thank you for citing exact phrases so that I can prevent other people from misunderstanding the proposal","m.relates_to":{"m.in_reply_to":{"event_id":"$Wr72XMvbkgPnW6t22EVXFaVIb8PMAP0SPxvo4z-aKLs"}},"msgtype":"m.text"},"ts":1628088952737,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$38ynByCIDXnPLZA3rlvNFNftDhssj5K9OxKWALpL6TY"},
{"content":{"body":"To be clear, that would be a change to the URL parser aimed at helping scenarios where people parse a URL string to validate it and then somehow output NFX(URL string) elsewhere, which is a somewhat problematic practice for various reasons","msgtype":"m.text"},"ts":1628089065024,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$qdz_hmJ1KwaVzTUzXTIuCPkXPs_4Js_abKN0tqlAxRs"},
{"content":{"body":"E.g., the changes to the URL's path or query are not something we could prevent in that way","msgtype":"m.text"},"ts":1628089117261,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$oh81I7n-7hr7qMk0Af2J47GsBIQa7-zPMOERkubhsME"},
{"content":{"body":"(I gotta go for a bit)","msgtype":"m.text"},"ts":1628089136767,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$WR_wbLSjD4ordd1kfknlOaWNHzDug2bEgbtcUHR1DWM"},
{"content":{"body":"> <@annevk:mozilla.org> To be clear, that would be a change to the URL parser aimed at helping scenarios where people parse a URL string to validate it and then somehow output NFX(URL string) elsewhere, which is a somewhat problematic practice for various reasons\n\ntechnically yes, but I think there's a difference between only enlarging the set of forbidden/disrecommended characters and changing the structure of the parser","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$qdz_hmJ1KwaVzTUzXTIuCPkXPs_4Js_abKN0tqlAxRs?via=mozilla.org&via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>To be clear, that would be a change to the URL parser aimed at helping scenarios where people parse a URL string to validate it and then somehow output NFX(URL string) elsewhere, which is a somewhat problematic practice for various reasons</blockquote></mx-reply>technically yes, but I think there's a difference between only enlarging the set of forbidden/disrecommended characters and changing the structure of the parser","m.relates_to":{"m.in_reply_to":{"event_id":"$qdz_hmJ1KwaVzTUzXTIuCPkXPs_4Js_abKN0tqlAxRs"}},"msgtype":"m.text"},"ts":1628089371777,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$ETAgi6lBArdOJm_w3tG2YGGp3phcrK-p1idEKVAfHyc"},
{"content":{"body":"A difference in what sense?","msgtype":"m.text"},"ts":1628089614561,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Y34nrObamZKfasOQe16ouFfuO-XhxLVZTIabfkNpKFU"},
{"content":{"body":"Could you possibly elaborate more so that I can better answer it? I am happy to simply admit it's a change to the parser.","msgtype":"m.text"},"ts":1628091049237,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$I_LmJuOn85W5XaTkldI_d_LLM8JXTa10LVYXaHGn1LA"},
{"content":{"body":"I don't feel how I personally classify different levels of changes matter here. If WHATWG thinks it's a major change, then it's a major change. If WHATWG thinks it's a minor change, then it's a minor change. I am happy to eliminate different usages in terminology. ","msgtype":"m.text"},"ts":1628091173933,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$QREXGN3Gyp3eO2F6QFAMjX3Kb6xcW04q9mIt4mnxDP0"},
{"content":{"body":" * I don't feel how I personally classify different levels of changes matter here. If WHATWG thinks it's a major change, then it's a major change. If WHATWG thinks it's a minor change, then it's a minor change. I am happy to eliminate different usages in terminology in case it helps communication.","m.new_content":{"body":"I don't feel how I personally classify different levels of changes matter here. If WHATWG thinks it's a major change, then it's a major change. If WHATWG thinks it's a minor change, then it's a minor change. I am happy to eliminate different usages in terminology in case it helps communication.","msgtype":"m.text"},"m.relates_to":{"event_id":"$QREXGN3Gyp3eO2F6QFAMjX3Kb6xcW04q9mIt4mnxDP0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628091193528,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$XQPURESRAo8hWm3yIvOb-HJSz-VQC6c3dqMR7dxnjJ8"},
{"content":{"body":" * I don't feel how I personally classify different levels of changes matters here. If WHATWG thinks it's a major change, then it's a major change. If WHATWG thinks it's a minor change, then it's a minor change. I am happy to eliminate different usages in terminology in case it helps communication.","m.new_content":{"body":"I don't feel how I personally classify different levels of changes matters here. If WHATWG thinks it's a major change, then it's a major change. If WHATWG thinks it's a minor change, then it's a minor change. I am happy to eliminate different usages in terminology in case it helps communication.","msgtype":"m.text"},"m.relates_to":{"event_id":"$QREXGN3Gyp3eO2F6QFAMjX3Kb6xcW04q9mIt4mnxDP0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628091213866,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$eIeVo073wmpQT1Fa22dImJ8wzp8ZmmzmbdG5l8RXcaw"},
{"content":{"body":"I just noticed that `＃` is already rejected when it's part of a host, but it's not rejected when used as a username or password. So STD3 Rules wouldn't matter there either way.","format":"org.matrix.custom.html","formatted_body":"I just noticed that <code>＃</code> is already rejected when it's part of a host, but it's not rejected when used as a username or password. So STD3 Rules wouldn't matter there either way.","msgtype":"m.text"},"ts":1628091526203,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$_9MfvkM3p-ohnJ1SJsvZkrW_XxRFLFmLXPQsXm7cMcw"},
{"content":{"body":"As in, `https://test＃test/` results in failure.","format":"org.matrix.custom.html","formatted_body":"As in, <code>https://test＃test/</code> results in failure.","msgtype":"m.text"},"ts":1628091551455,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$IKq1l2yZxRY2RUhWK3nhuozbK42BCtW55jiOm15eTjg"},
{"content":{"body":"that's correct. proper checking has been done for host names in the current standard.","msgtype":"m.text"},"ts":1628091581848,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$wfZtGuUA6iGlZbayLhPp9pR1p7zlMf3kYHjS48v7nPE"},
{"content":{"body":"So yeah, I don't think this is something that can be changed. Those components are expected to allow arbitrary scalar values.","msgtype":"m.text"},"ts":1628091623582,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$sgPMgcDyWtDMvsUYzAHoGscDXI_6XJUuEGgtTKH3kLM"},
{"content":{"body":"It might be worth calling out somewhere though and I also think raising this with www-international could be worthwhile.","msgtype":"m.text"},"ts":1628091703441,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$MVhmvillyk5wuihlbbQMTFWjJLy2NEPxNc5KLH-dyyU"},
{"content":{"body":"as a disclaimer I only read these documents like three days ago. as a naive suggestion how about demanding percentage-encoding? ","msgtype":"m.text"},"ts":1628091727456,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$bwNOOYvS9ZXGHvtYNlZMlT6r7LTz_qRtoymFR_bfyA8"},
{"content":{"body":" * as a disclaimer I only read these documents like three days ago. as a naive suggestion how about demanding percent-encoding? ","m.new_content":{"body":"as a disclaimer I only read these documents like three days ago. as a naive suggestion how about demanding percent-encoding? ","msgtype":"m.text"},"m.relates_to":{"event_id":"$bwNOOYvS9ZXGHvtYNlZMlT6r7LTz_qRtoymFR_bfyA8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628091734217,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$foA_ACq0cB8h1JaxBz1eqygbbDmY5TZht1QSXT2h3Yo"},
{"content":{"body":" * as a disclaimer I only started reading these documents like three days ago. as a naive suggestion how about demanding percent-encoding? ","m.new_content":{"body":"as a disclaimer I only started reading these documents like three days ago. as a naive suggestion how about demanding percent-encoding? ","msgtype":"m.text"},"m.relates_to":{"event_id":"$bwNOOYvS9ZXGHvtYNlZMlT6r7LTz_qRtoymFR_bfyA8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628091744130,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$_XFhjxVyUnLVOXMGvolcfLU1e9eD2_37EZo5ufS-H3E"},
{"content":{"body":" * as a disclaimer I only started reading these documents like 2-3 days ago. as a naive suggestion how about demanding percent-encoding? ","m.new_content":{"body":"as a disclaimer I only started reading these documents like 2-3 days ago. as a naive suggestion how about demanding percent-encoding? ","msgtype":"m.text"},"m.relates_to":{"event_id":"$bwNOOYvS9ZXGHvtYNlZMlT6r7LTz_qRtoymFR_bfyA8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628091750433,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$cSldb9kVyR1sIBnAW0lZLMT0cabeTe9tfvm9yW_n6EY"},
{"content":{"body":"favonia: it would be a breaking change, URL strings have allowed U+FF03 (＃) for well over a decade","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: it would be a breaking change, URL strings have allowed U+FF03 (＃) for well over a decade","msgtype":"m.text"},"ts":1628092070835,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$58qQ8Cs1R8ZNBEnXkmoTt6XTfjd_LZ_vSWVQSHtcAKc"},
{"content":{"body":"It's easier to ban certain things in hosts because they don't resolve anyway, but we cannot do that for paths and such","msgtype":"m.text"},"ts":1628092102050,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$BIha53EijW9DzT5pOQVU7ozBKfjp_3_Dvxpvrb91IfI"},
{"content":{"body":"got it. well, I feel no one is a warning against any normalization forms other than NFC. following your comment, I guess banning ≮, ≯ in host names would be fine, then? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","msgtype":"m.text"},"ts":1628092445685,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$u7_iD5DYAB81xx1qa0qV-rwwbe5yZlWimV8ndyNRUzQ"},
{"content":{"body":" * got it. well, I feel no one is a warning against any normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine, then? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","m.new_content":{"body":"got it. well, I feel no one is a warning against any normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine, then? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","msgtype":"m.text"},"m.relates_to":{"event_id":"$u7_iD5DYAB81xx1qa0qV-rwwbe5yZlWimV8ndyNRUzQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628092469562,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$mXJtWzmBPhzgo6cRrnHfl3TEgbuWfdFF0ZTCpNwnxHI"},
{"content":{"body":" * got it. well, I feel no one is a warning against any normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","m.new_content":{"body":"got it. well, I feel no one is a warning against any normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","msgtype":"m.text"},"m.relates_to":{"event_id":"$u7_iD5DYAB81xx1qa0qV-rwwbe5yZlWimV8ndyNRUzQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628092500241,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$Bjiv9pSDYZHWRHiWbAce_y1rhI_LB2OzkWxE72gaIwU"},
{"content":{"body":" * got it. well, I feel no one is aganist a warning about normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","m.new_content":{"body":"got it. well, I feel no one is aganist a warning about normalization forms other than NFC, then? I can actually be satisfied with just that. following your comment, I guess banning ≮, ≯ in host names would be fine? it has almost zero practical impacts while saving us from some terrible situations due to mishandling of host names.","msgtype":"m.text"},"m.relates_to":{"event_id":"$u7_iD5DYAB81xx1qa0qV-rwwbe5yZlWimV8ndyNRUzQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628092554869,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$WzGq9sdPE8WiW2MaZxKUwHArBzMwFGm-0viAyfcgixw"},
{"content":{"body":"Well, e.g., ≮ becomes xn--gdh, and it's not clear we can make that inaccessible. And generally we forbid things after ToASCII succeeds, not before. So for that one I'm not sure. It would also depend on how we resolve various other longstanding IDNA issues.","msgtype":"m.text"},"ts":1628092647462,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$eZcd1yMD03tGyNTnQpTbWCMG4uOJw8NtVp5bLcm2rCE"},
{"content":{"body":"If you apply NFD or some such to a domain name and then pass it to a host parser you are already likely to end up on the wrong website so it's not clear this would prevent all of these attacks so it might be better if sites address the root cause.","msgtype":"m.text"},"ts":1628092722243,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DaYwykkOygEvTJVd7fIS6c0BhCned5h7GaHEtEqxP5o"},
{"content":{"body":"Heck, if you apply NFD to HTML in general you would open yourself up to all kinds of attacks.","msgtype":"m.text"},"ts":1628092813837,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$2HiKqc8w_oZwWBuWEjkLwuRSIBoWdKSlk37F8fC6CpU"},
{"content":{"body":"There's a reason you want NFC unless you do some kind of specialized text processing.","msgtype":"m.text"},"ts":1628092838270,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KAl3AePMUVHiP95Vfughf3tcy7Fx-QC7LKwk833lMEs"},
{"content":{"body":"You might enjoy http://www.diveintomark.link/2004/unicode-normalization-form-c","msgtype":"m.text"},"ts":1628092893677,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$1PF3f3ZS41Wb3nCoYaG8yvZhDJSv6GIFEHb2dIe19DM"},
{"content":{"body":"Hah, it's funny and to the point. :laugh","msgtype":"m.text"},"ts":1628092973776,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$TWDGcb18DJLAyiy6S4tl2sHXcub57UUCojKM8utsP7Y"},
{"content":{"body":" * Hah, it's funny and to the point. 😆","m.new_content":{"body":"Hah, it's funny and to the point. 😆","msgtype":"m.text"},"m.relates_to":{"event_id":"$TWDGcb18DJLAyiy6S4tl2sHXcub57UUCojKM8utsP7Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628092983746,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$C5Ky0NrFw_RStGAD6i0Y37i8OgBzfKOqp2LUWxkNgqU"},
{"content":{"body":"to be fair KD would be even worse","msgtype":"m.text"},"ts":1628093018073,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$vK2UyKeHV1lQLiYYM2j6pP6wHStnn8CUmfuB6aMH__Y"},
{"content":{"body":"> <@annevk:mozilla.org> If you apply NFD or some such to a domain name and then pass it to a host parser you are already likely to end up on the wrong website so it's not clear this would prevent all of these attacks so it might be better if sites address the root cause.\n\nNo you will be fine even after NFD unless the application has serious bugs. See <https://unicode.org/reports/tr46/#ProcessingStepNormalize>. You need to compute NFC which would undo the \"damage\". At least Firefox got this correct.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DaYwykkOygEvTJVd7fIS6c0BhCned5h7GaHEtEqxP5o?via=mozilla.org&via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>If you apply NFD or some such to a domain name and then pass it to a host parser you are already likely to end up on the wrong website so it&#39;s not clear this would prevent all of these attacks so it might be better if sites address the root cause.</blockquote></mx-reply>No you will be fine even after NFD unless the application has serious bugs. See <a href=\"https://unicode.org/reports/tr46/#ProcessingStepNormalize\">https://unicode.org/reports/tr46/#ProcessingStepNormalize</a>. You need to compute NFC which would undo the &quot;damage&quot;. At least Firefox got this correct.","m.relates_to":{"m.in_reply_to":{"event_id":"$DaYwykkOygEvTJVd7fIS6c0BhCned5h7GaHEtEqxP5o"}},"msgtype":"m.text"},"ts":1628093496849,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$7xpAWllGAyUbix0kO5fozo5uh1I6IWZYsZF2CO91_co"},
{"content":{"body":"`whatwg-url` gives the correct result as well (which is not really surprising because the `tr46` package used by `whatwg-url` correctly implements UTS46) https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly88zLg=&base=YWJvdXQ6Ymxhbms=","format":"org.matrix.custom.html","formatted_body":"<code>whatwg-url</code> gives the correct result as well (which is not really surprising because the <code>tr46</code> package used by <code>whatwg-url</code> correctly implements UTS46) https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly88zLg=&amp;base=YWJvdXQ6Ymxhbms=","msgtype":"m.text"},"ts":1628094038808,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$YwZO5XsHHt8no98ARRZck7cliiLh--XwEBpERv1wCsY"},
{"content":{"body":"anyways, personally I am much less motivated to promote the banning of ≮ and ≯ in host names because it seems significantly harder to construct concrete attacks.","msgtype":"m.text"},"ts":1628094244499,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$_7YEMEldlZQfF0eyBg6mS8rUoBV2Aa1fCFbZVLQjYQY"},
{"content":{"body":" * anyways, personally I am much less motivated to promote the banning of ≮ and ≯ in host names because it seems significantly harder to construct concrete attacks. it's just a possibility.","m.new_content":{"body":"anyways, personally I am much less motivated to promote the banning of ≮ and ≯ in host names because it seems significantly harder to construct concrete attacks. it's just a possibility.","msgtype":"m.text"},"m.relates_to":{"event_id":"$_7YEMEldlZQfF0eyBg6mS8rUoBV2Aa1fCFbZVLQjYQY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628094258614,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$x8-ntz21GCDLbt1RJPybXdbYcfgJ2KyEP6hFuHDVqNY"},
{"content":{"body":"Ah right, I guess you would need to apply one of the NFKx variants as those cannot be reversed if I remember correctly","msgtype":"m.text"},"ts":1628094324236,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$9uJgLsQ2ZXZ872NT3igb32aB9GXgpujnwfcxek_WbGo"},
{"content":{"body":"It's been a long time since I looked at this in detail","msgtype":"m.text"},"ts":1628094332210,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KAKYKwosBiyeHPKec1GZkac5P_5OJjYTAsm5CPT-nbM"},
{"content":{"body":"as far as I have read (did I say I started the reading only days ago?), that seems to be the case. to be more precise, NFX is in general irreversible, but we only care about whether NFC(NFX(input)) = NFC(input) for some X here.","msgtype":"m.text"},"ts":1628094492865,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$rOAgvklZnBpM_27miz66CVTdtgoI3G0GK9EAB5l9wvo"}
]