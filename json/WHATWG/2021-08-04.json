[
{"content":{"body":"https://stackoverflow.com/questions/68641231/does-javascripts-abortable-fetch-close-the-http-connection","msgtype":"m.text"},"ts":1628035968437,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$fL3tZ88mI3fvAlqj1RlR1vuKDxXomFSpMD4iCrZdXfk"},
{"content":{"body":"> <@domenicdenicola:matrix.org> https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&base=YWJvdXQ6Ymxhbms=\n\nThank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:\n\n> ...\n> U+2260 ( ≠ ) NOT EQUAL TO\n> U+226E ( ≮ ) NOT LESS-THAN\n> U+226F ( ≯ ) NOT GREATER-THAN \n>\n> ... If an implementation uses `UseSTD3ASCIIRules=false` but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation. \n\nThe URL standard forbids `<` and `>`, so I feel `≮` and `≯` should be banned as well. I am happy to open a GitHub issue on this (smaller issue).\n\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly88&base=YWJvdXQ6Ymxhbms=\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&base=YWJvdXQ6Ymxhbms=","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&amp;base=YWJvdXQ6Ymxhbms=</blockquote></mx-reply><p>Thank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:</p>\n<blockquote>\n<p>...<br>U+2260 ( ≠ ) NOT EQUAL TO<br>U+226E ( ≮ ) NOT LESS-THAN<br>U+226F ( ≯ ) NOT GREATER-THAN</p>\n<p>... If an implementation uses <code>UseSTD3ASCIIRules=false</code> but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation.</p>\n</blockquote>\n<p>The URL standard forbids <code>&lt;</code> and <code>&gt;</code>, so I feel <code>≮</code> and <code>≯</code> should be banned as well. I am happy to open a GitHub issue on this (smaller issue).</p>\n<p>https://jsdom.github.io/whatwg-url/#url=d3M6Ly88&amp;base=YWJvdXQ6Ymxhbms=<br>https://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&amp;base=YWJvdXQ6Ymxhbms=</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc"}},"msgtype":"m.text"},"ts":1628036956097,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$Lc4Ze8m2ZwVA1jRRLtGIXBejVaXZwBVKiM6ecrGylXk"},
{"content":{"body":"Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.","msgtype":"m.text"},"ts":1628037415374,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo"},
{"content":{"body":"It might be clearer if you think of the URL Standard as a standalone document that gives the full processing model. The fact that it calls into some specific Unicode algorithms with some parameters is interesting, but is just an implementation detail and isn't meant to indicate any greater alignment with the philosophies of those documents.","msgtype":"m.text"},"ts":1628037467073,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$OyaDyv_rDgy3FKXvdsgpk3JW2a51heEKSzZvWqe0f5w"}
]