[
{"content":{"body":"https://stackoverflow.com/questions/68641231/does-javascripts-abortable-fetch-close-the-http-connection","msgtype":"m.text"},"ts":1628035968437,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$fL3tZ88mI3fvAlqj1RlR1vuKDxXomFSpMD4iCrZdXfk"},
{"content":{"body":"> <@domenicdenicola:matrix.org> https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&base=YWJvdXQ6Ymxhbms=\n\nThank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:\n\n> ...\n> U+2260 ( ≠ ) NOT EQUAL TO\n> U+226E ( ≮ ) NOT LESS-THAN\n> U+226F ( ≯ ) NOT GREATER-THAN \n>\n> ... If an implementation uses `UseSTD3ASCIIRules=false` but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation. \n\nThe URL standard forbids `<` and `>`, so I feel `≮` and `≯` should be banned as well. I am happy to open a GitHub issue on this (smaller issue).\n\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly88&base=YWJvdXQ6Ymxhbms=\nhttps://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&base=YWJvdXQ6Ymxhbms=","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>https://cool.asi℀.evil.com is just an invalid URL https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9jb29sLmFzaeKEgC5ldmlsLmNvbQ==&amp;base=YWJvdXQ6Ymxhbms=</blockquote></mx-reply><p>Thank you. Now I see that the Step 7 you mentioned earlier implements a weaker version of the STD3 check that stopped my attack. However, I found another issue showing that whatwg-url probably violated (at least the spirit of) UTS#46. UTS#46 says:</p>\n<blockquote>\n<p>...<br>U+2260 ( ≠ ) NOT EQUAL TO<br>U+226E ( ≮ ) NOT LESS-THAN<br>U+226F ( ≯ ) NOT GREATER-THAN</p>\n<p>... If an implementation uses <code>UseSTD3ASCIIRules=false</code> but disallows any of these three ASCII characters, then it must also disallow the corresponding precomposed character for its negation.</p>\n</blockquote>\n<p>The URL standard forbids <code>&lt;</code> and <code>&gt;</code>, so I feel <code>≮</code> and <code>≯</code> should be banned as well. I am happy to open a GitHub issue on this (smaller issue).</p>\n<p>https://jsdom.github.io/whatwg-url/#url=d3M6Ly88&amp;base=YWJvdXQ6Ymxhbms=<br>https://jsdom.github.io/whatwg-url/#url=d3M6Ly/iia4=&amp;base=YWJvdXQ6Ymxhbms=</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$qKV-jC-tqaWs8-lG3CvMW0i-t7FCuo4T100LquMtMMc"}},"msgtype":"m.text"},"ts":1628036956097,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$Lc4Ze8m2ZwVA1jRRLtGIXBejVaXZwBVKiM6ecrGylXk"},
{"content":{"body":"Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.","msgtype":"m.text"},"ts":1628037415374,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo"},
{"content":{"body":"It might be clearer if you think of the URL Standard as a standalone document that gives the full processing model. The fact that it calls into some specific Unicode algorithms with some parameters is interesting, but is just an implementation detail and isn't meant to indicate any greater alignment with the philosophies of those documents.","msgtype":"m.text"},"ts":1628037467073,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$OyaDyv_rDgy3FKXvdsgpk3JW2a51heEKSzZvWqe0f5w"},
{"content":{"body":"alright I will skip the reporting. it's perhaps an interesting technical point, though","msgtype":"m.text"},"ts":1628037745204,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$yTSYrhLMtdkZlrjVspNKZxTszERZrEgL8LrqzCfxg_Q"},
{"content":{"body":"Sorry I accidentally pressed Enter to create an issue when doing some complex editing on GitHub. Please give me some time to fix that :-/","msgtype":"m.text"},"ts":1628037982835,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$US50VBOU3M4d-z4wCchqoKmq0w-nL0s3osAt101eJKA"},
{"content":{"body":"Domenic: Is https://jsdom.github.io/whatwg-url some website I can/should cite in my reporting? The tool is very convenient and I wonder if it's \"permanent\" in any sense.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Is https://jsdom.github.io/whatwg-url some website I can/should cite in my reporting? The tool is very convenient and I wonder if it's &quot;permanent&quot; in any sense.","msgtype":"m.text"},"ts":1628039064614,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$2wVNI01A_MO0Lzs071PSOTVN5KKqXGsPrbOUx78HuNM"},
{"content":{"body":"favonia: yes, feel free to use that site.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: yes, feel free to use that site.","msgtype":"m.text"},"ts":1628041151805,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> favonia: yes, feel free to use that site.\n\nDone! https://github.com/whatwg/url/issues/626","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br><a href=\"https://matrix.to/#/@favonia:matrix.org\">favonia</a>: yes, feel free to use that site.</blockquote></mx-reply>Done! https://github.com/whatwg/url/issues/626","m.relates_to":{"m.in_reply_to":{"event_id":"$fXpEHNG9FPIM1C1s5NbVlJ-s47o9n2Y6J4K6zN64jBM"}},"msgtype":"m.text"},"ts":1628044140506,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$DTsRV3WUxoEsTdrfMIMmyEmN4Mh1OuNBXnSHyfjiltI"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.\n\nAfter checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters, then ≮, ≯ or even ≠ could generate <, > or = under NFD.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yes, I think this is a case where conforming to the rules doesn&#39;t really buy anything. Encoding ≮ to punycode seems fine.</blockquote></mx-reply>After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters, then ≮, ≯ or even ≠ could generate &lt;, &gt; or = under NFD.","m.relates_to":{"m.in_reply_to":{"event_id":"$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo"}},"msgtype":"m.text"},"ts":1628087100831,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$dNvRXdjTGwrFvoUJTUzPF1KMTzL3r-PgA1anZ5RsXeA"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.\n\n * After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate <, > or = under NFD and should be banned as well.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ad1-jfV5gsMVJqU7KxiPXpywhAz92XBuIt1ZOylWBDo?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yes, I think this is a case where conforming to the rules doesn't really buy anything. Encoding ≮ to punycode seems fine.</blockquote></mx-reply> * After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate &lt;, &gt; or = under NFD and should be banned as well.","m.new_content":{"body":"After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate <, > or = under NFD and should be banned as well.","format":"org.matrix.custom.html","formatted_body":"After checking the Unicode tables more carefully, I must disagree with this judgment and admit UTS#46 has done the right thing. My latest reporting was mainly about NFKC and NFKD, but if we agree that the standard should prevent problematic characters on that basis, then ≮, ≯ or even ≠ could also generate &lt;, &gt; or = under NFD and should be banned as well.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dNvRXdjTGwrFvoUJTUzPF1KMTzL3r-PgA1anZ5RsXeA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628087150989,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$9VsbJfHe316hWfQRZXVw_7wi8Zf581B_09IYhSyWxiI"},
{"content":{"body":"That reading is only correct under the assumption that NFD(URL string) is a valid operation, which it's not; as long as you do URL parser(URL string) I don't think you have demonstrated an issue","msgtype":"m.text"},"ts":1628087699516,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$5d19f7RzCIsEhO9m0Z3yfHBsbD1bD6CPgFen-B1TVOg"},
{"content":{"body":"I could see banning more code points out of caution (though we cannot ban all, e.g., `_` is important), but I wouldn't classify these as a problem with the URL parser","format":"org.matrix.custom.html","formatted_body":"I could see banning more code points out of caution (though we cannot ban all, e.g., <code>_</code> is important), but I wouldn't classify these as a problem with the URL parser","msgtype":"m.text"},"ts":1628087742023,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Wr72XMvbkgPnW6t22EVXFaVIb8PMAP0SPxvo4z-aKLs"},
{"content":{"body":"well... I did not imply that the current URL parser itself is wrong. I was only proposing to restrict valid URLs as you suggested. it would be kind of you to cite exact phrases which gave you such an impression so that I can revise my proposal.","msgtype":"m.text"},"ts":1628087993433,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$kQKCdFLgJoNhJckVNjCBD2zEQJrpd4LZnRwBEKFjxws"},
{"content":{"body":"Another thing is, according to your statements \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. that's against the standard and W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":"Another thing is, according to your statements &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. that's against the standard and W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"ts":1628088137763,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":" * Another thing is, according to your statement &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC _must_ be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","format":"org.matrix.custom.html","formatted_body":"Another thing is, according to your statement &quot;You cannot apply Unicode normalization to all inputs&quot; on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC <em>must</em> be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088239055,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$EPSfNZSSvtTKh8HlQ6Q2oVnaAwJM6UntlDMIqfkC5ZU"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088248933,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$IHY6Mk-3Qme2js3POcfZ9c-U6ArydXv4hXyGQZ5hNOw"},
{"content":{"body":" * Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Another thing is, according to your statement \"You cannot apply Unicode normalization to all inputs\" on GitHub, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088322929,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$925Lrtx3gKq7IyUPqUAvaIArrnsL6O19KvS6Ov4otTI"},
{"content":{"body":" * Also, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","m.new_content":{"body":"Also, you seemed assume no normalization should be applied to URL strings. That's against (at least the spirit of) the W3C recommendations. NFC should be applied to URL strings as well. There is a related page made by W3C Internationalization Activity: https://www.w3.org/International/questions/qa-html-css-normalization","msgtype":"m.text"},"m.relates_to":{"event_id":"$gwszyzng5y1mbnMPxejvpP9GULVtx2Li_NbtgmgNC1Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628088434263,"senderName":"favonia","senderId":"@favonia:matrix.org","id":"$wP7Zof6V39Y3yJFOAiWHfFQNLlX-oiQwj7rIV2jGmhU"}
]