[
{"content":{"body":"[Create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object)\n> 3. Let creationURL be navigationParams's response's URL.\n> 4. If navigationParams's request is non-null, then set creationURL to navigationParams's request's current URL.\n\nCould anyone explain the meaning of these two lines? Why does the request case prevail over the response case?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">Create and initialize a Document object</a></p>\n<blockquote>\n<ol start=\"3\">\n<li>Let creationURL be navigationParams's response's URL.</li>\n<li>If navigationParams's request is non-null, then set creationURL to navigationParams's request's current URL.</li>\n</ol>\n</blockquote>\n<p>Could anyone explain the meaning of these two lines? Why does the request case prevail over the response case?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752470582977,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$ThSX5SxRbUdxU0mXY0y_XDJsKmdXiqgZHqOKY8r0pp4"},
{"content":{"body":"I think it is more, let url = hasRequest ? request's current url : fallback to response url since that's all we have.","m.mentions":{},"msgtype":"m.text"},"ts":1752471365801,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$SSXPp3tLXxoJvKCmeZaAKzxCk0H8Ri3gncRP872NE7s"},
{"content":{"body":"I think the network error case is a good example of when they would be different and request's would be more correct.","m.mentions":{},"msgtype":"m.text"},"ts":1752471437647,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI"},
{"content":{"body":"Luke Warlow: FWIW, I tend to agree with Domenic that mutually exclusive `ReflectX` attributes are nicer. Much easier to tell if someone made a mistake that way and also what something means. I.e., I'd rather see `[ReflectURL]` than `[Reflect, ReflectURL]`.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: FWIW, I tend to agree with Domenic that mutually exclusive <code>ReflectX</code> attributes are nicer. Much easier to tell if someone made a mistake that way and also what something means. I.e., I'd rather see <code>[ReflectURL]</code> than <code>[Reflect, ReflectURL]</code>.","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1752471634902,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QmdF2HOBVlTIvrLu2N9AOzKFsg3A5zlQKw8WxO1lAmA"},
{"content":{"body":"Got it, but what about a network error, could you give an example?","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752471751690,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$R0ahjsFcKZJsjkr8G6b15HQtRm0b2GzoSv5CUYc0_6o"},
{"content":{"body":"A network error is defined in the Fetch spec to be a response whose only property is that its response code is 0. So if the response gets set to a network error, then it'd not be correct to set the resulting document's URL to the network error response's URL (which is left as the default of null).","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$R0ahjsFcKZJsjkr8G6b15HQtRm0b2GzoSv5CUYc0_6o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752472168876,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$StgpdDSQ38phcAKP5IdFtk4kLvTntenOn1Il6XuWIMo"},
{"content":{"body":"* A network error is defined in the Fetch spec to be a response with very few properties set https://fetch.spec.whatwg.org/#concept-network-error. So if the response gets set to a network error, then it'd not be correct to set the resulting document's URL to the network error response's URL (which is left as the default of null).","m.mentions":{"user_ids":["@dmaxim:matrix.org"]},"m.new_content":{"body":"A network error is defined in the Fetch spec to be a response with very few properties set https://fetch.spec.whatwg.org/#concept-network-error. So if the response gets set to a network error, then it'd not be correct to set the resulting document's URL to the network error response's URL (which is left as the default of null).","m.mentions":{"user_ids":["@dmaxim:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$StgpdDSQ38phcAKP5IdFtk4kLvTntenOn1Il6XuWIMo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752472190494,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$YEGUJXU_wYR_0Pnw8JuKI7Q-7l3eZwnM46xoQWdTN4o"},
{"content":{"body":"waz up","m.mentions":{},"msgtype":"m.text"},"ts":1752474988710,"senderName":"Vince Lam","senderId":"@xxddscoolxx:matrix.org","id":"$cUlE1YHIuzZqEJWlrVyEnc_ih2s-MP17PjYMC1lMnXg"},
{"content":{"body":"You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.\n\nYes, [here](https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline) it is clearly visible that request: null, and response, some object where the url is not really obvious. I did not find a place in the specification where this url is explicitly set.\n\nIn any case, the main question is closed.","format":"org.matrix.custom.html","formatted_body":"<p>You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.</p>\n<p>Yes, <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline\">here</a> it is clearly visible that request: null, and response, some object where the url is not really obvious. I did not find a place in the specification where this url is explicitly set.</p>\n<p>In any case, the main question is closed.</p>\n","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":false,"m.in_reply_to":{"event_id":"$StgpdDSQ38phcAKP5IdFtk4kLvTntenOn1Il6XuWIMo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752475897451,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$n0jAosAKW0f561Qt93dHzvNyL6PPeCbvHRlTSlFTuxo"},
{"content":{"body":"* You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.\n\nYes, [here](https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline) it is clearly visible that `request: null`, and `response`, some object where the `url` is not really obvious. I did not find a place in the specification where this url is explicitly set.\n\nIn any case, the main question is closed.","format":"org.matrix.custom.html","formatted_body":"* <p>You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.</p>\n<p>Yes, <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline\">here</a> it is clearly visible that <code>request: null</code>, and <code>response</code>, some object where the <code>url</code> is not really obvious. I did not find a place in the specification where this url is explicitly set.</p>\n<p>In any case, the main question is closed.</p>\n","m.mentions":{},"m.new_content":{"body":"You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.\n\nYes, [here](https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline) it is clearly visible that `request: null`, and `response`, some object where the `url` is not really obvious. I did not find a place in the specification where this url is explicitly set.\n\nIn any case, the main question is closed.","format":"org.matrix.custom.html","formatted_body":"<p>You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.</p>\n<p>Yes, <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline\">here</a> it is clearly visible that <code>request: null</code>, and <code>response</code>, some object where the <code>url</code> is not really obvious. I did not find a place in the specification where this url is explicitly set.</p>\n<p>In any case, the main question is closed.</p>\n","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$n0jAosAKW0f561Qt93dHzvNyL6PPeCbvHRlTSlFTuxo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752475986965,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$m9fNirk6_AJz2t3MSi0frS6cc4Yaz76N6KMasicb6FE"},
{"content":{"body":"Also in `javascript:` and other cases there is no request","format":"org.matrix.custom.html","formatted_body":"Also in <code>javascript:</code> and other cases there is no request","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$n0jAosAKW0f561Qt93dHzvNyL6PPeCbvHRlTSlFTuxo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752479423848,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$rSOOYGbAV3badvjP-VogBAyhX_mK4ZVbviHkqMM34gY"},
{"content":{"body":"See https://html.spec.whatwg.org/#the-javascript:-url-special-case:navigation-params-response\n\nThe `response` would be initialized with a URL but `request` is null","format":"org.matrix.custom.html","formatted_body":"<p>See https://html.spec.whatwg.org/#the-javascript:-url-special-case:navigation-params-response</p>\n<p>The <code>response</code> would be initialized with a URL but <code>request</code> is null</p>\n","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$rSOOYGbAV3badvjP-VogBAyhX_mK4ZVbviHkqMM34gY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752479457899,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xoKsVfo61vqtnKlczxf94GyoMz6Z6qIYnKZcAWn_-RU"},
{"content":{"body":"Okay thanks for the feedback! I'll go with that approach then.","m.mentions":{},"m.relates_to":{"event_id":"$QmdF2HOBVlTIvrLu2N9AOzKFsg3A5zlQKw8WxO1lAmA","is_falling_back":true,"m.in_reply_to":{"event_id":"$QmdF2HOBVlTIvrLu2N9AOzKFsg3A5zlQKw8WxO1lAmA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752482079639,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$RvLW7k4vrw5XD1KehqfpQTQHvqIVU8whOyr0-FcEpaA"},
{"content":{"body":"Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`? In most cases, navigationParams's response's URL is always present. Or is there some case I haven't noticed? Please tell me.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>? In most cases, navigationParams's response's URL is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$xoKsVfo61vqtnKlczxf94GyoMz6Z6qIYnKZcAWn_-RU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752496719430,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk"},
{"content":{"body":"* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`? In most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>? In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{"user_ids":["@noamr:matrix.org"]},"m.new_content":{"body":"Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`? In most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>? In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{"user_ids":["@noamr:matrix.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752496738059,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$Z2ch0T3E4zDHpJ_N0lAYEBwTKrPWzuRFXsYM6D-H4k4"},
{"content":{"body":"* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?\nI mean why not `let url = navigationParams's response's URL`?\nIn most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.\n\n","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>?<br>I mean why not <code>let url = navigationParams's response's URL</code>?<br>In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{},"m.new_content":{"body":"Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?\nI mean why not `let url = navigationParams's response's URL`?\nIn most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.\n\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>?<br>I mean why not <code>let url = navigationParams's response's URL</code>?<br>In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{"user_ids":["@noamr:matrix.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752496929349,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$xZosPDOKyA0ZAW8uSoZR5Ml9Yach4Xq79QJMiwXHFs0"},
{"content":{"body":"Noam Rosenthal: coul you also look at my question above?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: coul you also look at my question above?","m.mentions":{"user_ids":["@noamr:matrix.org"]},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752496989519,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$_RZaK-ht2NtVHImIWLtdM1BUvUSGIhb9ENkPc9Mmy5M"},
{"content":{"body":"* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?\nI mean why not `let creationURL = navigationParams's response's URL`?\nIn most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.","format":"org.matrix.custom.html","formatted_body":"* <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>?<br>I mean why not <code>let creationURL = navigationParams's response's URL</code>?<br>In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{},"m.new_content":{"body":"Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?\nI mean why not `let creationURL = navigationParams's response's URL`?\nIn most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Hmm, wait. Why can't we just use <code>navigationParams's response's URL</code> without <code>navigationParams's request's current URL</code>?<br>I mean why not <code>let creationURL = navigationParams's response's URL</code>?<br>In most cases, <code>navigationParams's response's URL</code> is always present. Or is there some case I haven't noticed? Please tell me.","m.mentions":{"user_ids":["@noamr:matrix.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752497043070,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$NG8ZQggtGZ1ULj946xmZHmNzlblYvYP0odhld_m9MS4"},
{"content":{"body":"I don't remember the whole thing but IIRC if you respond to a request with a constructed response in a service worker, the request would have a URL but not the response","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$_RZaK-ht2NtVHImIWLtdM1BUvUSGIhb9ENkPc9Mmy5M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752497290785,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$kTntoJLx5Zmjo7ZuvhJApWmXUf-HpieKhNPsw8M8-i8"},
{"content":{"body":"... which would make it so that either the request or the response might be null and you want to start with the request before falling back to the response","m.mentions":{},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$kTntoJLx5Zmjo7ZuvhJApWmXUf-HpieKhNPsw8M8-i8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752497690220,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Wd7Afkpp8CBpxJQpaJ_8CRteaGIpES5JPSY5FGGYoks"},
{"content":{"body":"Noam Rosenthal: Thank you, the moment with the service worker in this case is quite interesting. I think I saw something like this when I was browsing the whatwg/html github before 2020","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: Thank you, the moment with the service worker in this case is quite interesting. I think I saw something like this when I was browsing the whatwg/html github before 2020","m.mentions":{"user_ids":["@noamr:matrix.org"]},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":true,"m.in_reply_to":{"event_id":"$Wd7Afkpp8CBpxJQpaJ_8CRteaGIpES5JPSY5FGGYoks"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752499618686,"senderName":"Maxim Vaarwel","senderId":"@dmaxim:matrix.org","id":"$4bQWssKlOWlUq-6xnCHV5H3m84BZ5IufMkJ_0dLmyN0"},
{"content":{"body":"I gave you a very clear example above where response's URL would be incorrect, the network error case. I don't have more time to spend explaining it to you.","m.mentions":{"user_ids":["@dmaxim:matrix.org"]},"m.relates_to":{"event_id":"$4_CY26IFa9f3SYcJ9UADbUagMZYlazZkD_byqQ0z4gI","is_falling_back":false,"m.in_reply_to":{"event_id":"$bOHjcsEmwZCRTxgtJruY6OgQFTQtDRPM6k6iP-FTcsk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1752499900373,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$VvtrGz2q0-SUJ0fwlam98z23lrtl6GBKUFhIqcVWxvM"},
{"content":{"body":"The `shadowrootcustomelementregistry` content attribute is defined as a boolean attribute but then the IDL is currently defined as a `DOMString`, is there a reason for this or is one incorrect? cc annevk ","format":"org.matrix.custom.html","formatted_body":"The <code>shadowrootcustomelementregistry</code> content attribute is defined as a boolean attribute but then the IDL is currently defined as a <code>DOMString</code>, is there a reason for this or is one incorrect? cc <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1752505407678,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$WIUaKK2Tpp6ij5YdgSU0cHaH0ad83H2sz_gafK8gpuA"},
{"content":{"body":"That was intentional to allow for changes.","m.mentions":{},"msgtype":"m.text"},"ts":1752510369859,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$jmx4vin78S1BEUlEmRC2Ege1vC_ME3HXHrLCw1B2D-Y"},
{"content":{"body":"Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.\n\nSpec wise we just need something like [ReflectKnown] and [ReflectKnown=string] which triggers the [limited to only known values](https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values) case, because the actual definition is linked with the content attribute in the HTML spec prose.\n\nThe [ReflectEnum=identifier] along with [MissingValueDefault], [InvalidValueDefault] and [EmptyValueDefault] are realistically purely implementation problems. Rather than spec ones.\n\nSo the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?","format":"org.matrix.custom.html","formatted_body":"<p>Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.</p>\n<p>Spec wise we just need something like [ReflectKnown] and [ReflectKnown=string] which triggers the <a href=\"https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values\">limited to only known values</a> case, because the actual definition is linked with the content attribute in the HTML spec prose.</p>\n<p>The [ReflectEnum=identifier] along with [MissingValueDefault], [InvalidValueDefault] and [EmptyValueDefault] are realistically purely implementation problems. Rather than spec ones.</p>\n<p>So the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752514492100,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$dSO7bJftH90axTILrQiih2LJ1oOqJIC_OdlTBv6925A"},
{"content":{"body":"* Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.\n\nSpec wise we just need something like \\[ReflectKnown\\] and \\[ReflectKnown=string\\] which triggers the [limited to only known values](https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values) case, because the actual definition is linked with the content attribute in the HTML spec prose.\n\nThe \\[ReflectEnum=identifier\\] along with \\[MissingValueDefault\\], \\[InvalidValueDefault\\] and \\[EmptyValueDefault\\] are realistically purely implementation problems. Rather than spec ones.\n\nSo the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?\n\nWondering if anyone has any thoughts on this? Should we perhaps just not handle this in the spec and browsers can do what they feel is best for that specific case? We still win by defining the rest imo.","format":"org.matrix.custom.html","formatted_body":"* <p>Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.</p>\n<p>Spec wise we just need something like [ReflectKnown] and [ReflectKnown=string] which triggers the <a href=\"https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values\">limited to only known values</a> case, because the actual definition is linked with the content attribute in the HTML spec prose.</p>\n<p>The [ReflectEnum=identifier] along with [MissingValueDefault], [InvalidValueDefault] and [EmptyValueDefault] are realistically purely implementation problems. Rather than spec ones.</p>\n<p>So the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?</p>\n<p>Wondering if anyone has any thoughts on this? Should we perhaps just not handle this in the spec and browsers can do what they feel is best for that specific case? We still win by defining the rest imo.</p>\n","m.mentions":{},"m.new_content":{"body":"Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.\n\nSpec wise we just need something like \\[ReflectKnown\\] and \\[ReflectKnown=string\\] which triggers the [limited to only known values](https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values) case, because the actual definition is linked with the content attribute in the HTML spec prose.\n\nThe \\[ReflectEnum=identifier\\] along with \\[MissingValueDefault\\], \\[InvalidValueDefault\\] and \\[EmptyValueDefault\\] are realistically purely implementation problems. Rather than spec ones.\n\nSo the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?\n\nWondering if anyone has any thoughts on this? Should we perhaps just not handle this in the spec and browsers can do what they feel is best for that specific case? We still win by defining the rest imo.","format":"org.matrix.custom.html","formatted_body":"<p>Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.</p>\n<p>Spec wise we just need something like [ReflectKnown] and [ReflectKnown=string] which triggers the <a href=\"https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values\">limited to only known values</a> case, because the actual definition is linked with the content attribute in the HTML spec prose.</p>\n<p>The [ReflectEnum=identifier] along with [MissingValueDefault], [InvalidValueDefault] and [EmptyValueDefault] are realistically purely implementation problems. Rather than spec ones.</p>\n<p>So the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?</p>\n<p>Wondering if anyone has any thoughts on this? Should we perhaps just not handle this in the spec and browsers can do what they feel is best for that specific case? We still win by defining the rest imo.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$dSO7bJftH90axTILrQiih2LJ1oOqJIC_OdlTBv6925A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752514547080,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$bew6TjBx_gTZjvFVJI6VbzpyQ7qc6ybc6hdv2lP_X88"},
{"content":{"body":"Luke Warlow: it will at least obviate the need for the line in prose that says \"x IDL reflects x content\". There might also be some other benefits in acting as a forcing function towards more consistency. Because of how implementations do Reflect there have also been some mismatches in how things are implemented, though I don't recall the exact scenarios right now. Overall I think it's worth doing even if the benefits are modest and there is some increase in the amount of IDL boilerplate, as I think the uniformity will pay of eventually, but it might require some more iteration.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: it will at least obviate the need for the line in prose that says \"x IDL reflects x content\". There might also be some other benefits in acting as a forcing function towards more consistency. Because of how implementations do Reflect there have also been some mismatches in how things are implemented, though I don't recall the exact scenarios right now. Overall I think it's worth doing even if the benefits are modest and there is some increase in the amount of IDL boilerplate, as I think the uniformity will pay of eventually, but it might require some more iteration.","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1752515602268,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$akpNMuJKsDGsknDlHERyI9JcP66KPMtwV2WfWd0Tqbo"}
]