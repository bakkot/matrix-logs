[
{"content":{"body":"> <@timotijhof:matrix.org> I'm trying to preload requests for `<script type=module src=…>` via the HTTP Link header.\n> \n> I'm aware of, and have read, the past discussions around why `rel=modulepreload` was introduced separately instead of within rel=preload. As I understand it, module requests are made with a different CORS setting, plus by signalling the module type this way, browsers can do additional optimizations (e.g. look for indirect imports and preload those as well, and honouring import maps).\n> \n> I'm also aware that at this time, there is no way to apply an import map to preloaded resources, which is fine, since the server-side in my case knows the flat and full list of \"real\" requests that will be made.\n> \n> All that having been said, I can't seem to find in the spec what rel=preload incantation will result in the preloaded result being used by `<script type=module>`.\n> \n> In Chrome, if I use `Link: </static/foo.js>;rel=preload;as=script;crossorigin` it will correctly satisfy the later demand for `<script type=module src=foo.js>` by re-using the preload response (I can tell by the timing, the initiator, the order, and there not being a duplicat req).\n> \n> In Firefox, it doesn't and there's instead a duplicate request made later on.\n\nI've comment at https://github.com/whatwg/html/issues/7854#issuecomment-2033368873 instead. Hoping I've missed something and that there is at least a way to do these \"manually\".","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$_4_YF8Il-D4neXibFNoZh00jh7YepJvXx9q3zhRUiZU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@timotijhof:matrix.org\">@timotijhof:matrix.org</a><br><p>I'm trying to preload requests for <code>&lt;script type=module src=…&gt;</code> via the HTTP Link header.</p>\n<p>I'm aware of, and have read, the past discussions around why <code>rel=modulepreload</code> was introduced separately instead of within rel=preload. As I understand it, module requests are made with a different CORS setting, plus by signalling the module type this way, browsers can do additional optimizations (e.g. look for indirect imports and preload those as well, and honouring import maps).</p>\n<p>I'm also aware that at this time, there is no way to apply an import map to preloaded resources, which is fine, since the server-side in my case knows the flat and full list of \"real\" requests that will be made.</p>\n<p>All that having been said, I can't seem to find in the spec what rel=preload incantation will result in the preloaded result being used by <code>&lt;script type=module&gt;</code>.</p>\n<p>In Chrome, if I use <code>Link: &lt;/static/foo.js&gt;;rel=preload;as=script;crossorigin</code> it will correctly satisfy the later demand for <code>&lt;script type=module src=foo.js&gt;</code> by re-using the preload response (I can tell by the timing, the initiator, the order, and there not being a duplicat req).</p>\n<p>In Firefox, it doesn't and there's instead a duplicate request made later on.</p>\n</blockquote></mx-reply>I've comment at https://github.com/whatwg/html/issues/7854#issuecomment-2033368873 instead. Hoping I've missed something and that there is at least a way to do these \"manually\".","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$_4_YF8Il-D4neXibFNoZh00jh7YepJvXx9q3zhRUiZU"}},"msgtype":"m.text"},"ts":1712107086193,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$s5ZLAgmshRvI8UfukSQwCzgmDyJMbMHxqLTbSM1Poqc"},
{"content":{"body":"Timo Tijhof: we were just discussing this case earlier in this channel; however, with the `crossorigin` attribute set it should in theory match up. Thinking about it again there's another thing however that set module scripts apart and maybe that's why Gecko doesn't reuse the cache. And that would make sense. Module scripts parse differently and so if you eagerly parse and don't store the original text you couldn't reuse the script as both classic and module script.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@timotijhof:matrix.org\">Timo Tijhof</a>: we were just discussing this case earlier in this channel; however, with the <code>crossorigin</code> attribute set it should in theory match up. Thinking about it again there's another thing however that set module scripts apart and maybe that's why Gecko doesn't reuse the cache. And that would make sense. Module scripts parse differently and so if you eagerly parse and don't store the original text you couldn't reuse the script as both classic and module script.","m.mentions":{"user_ids":["@timotijhof:matrix.org"]},"msgtype":"m.text"},"ts":1712121662830,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iGxM8IpGZ1ZfhFMfXDj3UGh6IHfC3xBixCobgvToyKM"},
{"content":{"body":"It felt like that thread had several good implementation bugs that should be filed. Although I can understand that discriminating between impl bugs vs impls following the spec could take some work.","msgtype":"m.text"},"ts":1712121794448,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$osKJyuJEDgN-eRqUnPQTQ1EfUZ31M8yWmbmxrcuit3A"},
{"content":{"body":"I guess that makes me lean towards only endorsing `modulepreload` for this, but I see you also need import maps at that level for that to be an okay solution. It's a bit unclear whether that should be prioritized or we should try to make `rel=preload type=module` be a thing as some kind of inbetweeny solution as well.","format":"org.matrix.custom.html","formatted_body":"I guess that makes me lean towards only endorsing <code>modulepreload</code> for this, but I see you also need import maps at that level for that to be an okay solution. It's a bit unclear whether that should be prioritized or we should try to make <code>rel=preload type=module</code> be a thing as some kind of inbetweeny solution as well.","m.mentions":{},"msgtype":"m.text"},"ts":1712121798335,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$E-gyGqliOIWz_rcyFmmksUVrECAwWLKdv8Q-t88mdgE"},
{"content":{"body":"Domenic: I only saw this Chrome/Firefox mismatch and if anything that's probably a specification bug for suggesting `rel=preload as=script` works for `type=module`. At least I'm quite convinced now that shouldn't work as it would rule out pre-parsing.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I only saw this Chrome/Firefox mismatch and if anything that's probably a specification bug for suggesting <code>rel=preload as=script</code> works for <code>type=module</code>. At least I'm quite convinced now that shouldn't work as it would rule out pre-parsing.","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1712121924709,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9e09NAdp-yOjdjzwbn5Lm5OnliSI_WL7jookg6jSPVo"},
{"content":{"body":"Firefox downloading bare imports seems bad. Safari not using module map to dedupe requests seems bad. Chrome downloading bare imports seems bad.","msgtype":"m.text"},"ts":1712122047818,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$30ZZoN5bDsUIlmRjs4NQLHOQVNTJe3DONfB3Rm2TiFg"},
{"content":{"body":"rel=preload as=script crossorigin seems like it should not work, although it might populate the HTTP cache. Maybe Chrome has some general request deduping happening; I suspect that's not a module specific problem. \"Memory cache\"??","msgtype":"m.text"},"ts":1712122138379,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$pHVID_epXTnbkdf_7MuVENZAIOonZI08IqO_MkD-SsU"},
{"content":{"body":"That said I'm not sure the description is accurate since it includes the <script>. Some of the things Timo Tijhof ascribes to preload/modulepreload are almost certainly due to the <script>","format":"org.matrix.custom.html","formatted_body":"That said I'm not sure the description is accurate since it includes the <script>. Some of the things <a href=\"https://matrix.to/#/@timotijhof:matrix.org\">Timo Tijhof</a> ascribes to preload/modulepreload are almost certainly due to the <script>","msgtype":"m.text"},"ts":1712122223518,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DDZ3fA2ia4jrWE7Dkri13-dlH1_Z05OUbhoFOmHwppA"},
{"content":{"body":"Safari behavior also looks so strange that I wonder if it's a DevTools issue.","msgtype":"m.text"},"ts":1712122290809,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$q1YTpiM_cImlCIEqbYLm52L2JFJLFRqhlsqmF1GLkpU"},
{"content":{"body":"Oh, I guess I should have read the Observations section more carefully.","m.mentions":{},"msgtype":"m.text"},"ts":1712127058406,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Q8TXzKvMZ0VmjwPbxoLKg7GXdEOHuXw3s9qrnAP7qYY"},
{"content":{"body":" * That said I'm not sure the description is accurate since it includes the `<script>`. Some of the things \\<a href=\"https://matrix.to/#/@timotijhof:matrix.org\">Timo Tijhof\\</a> ascribes to preload/modulepreload are almost certainly due to the `<script>`","format":"org.matrix.custom.html","formatted_body":" * That said I'm not sure the description is accurate since it includes the <code>&lt;script&gt;</code>. Some of the things &lt;a href=\"https://matrix.to/#/@timotijhof:matrix.org\"&gt;Timo Tijhof&lt;/a&gt; ascribes to preload/modulepreload are almost certainly due to the <code>&lt;script&gt;</code>","m.mentions":{},"m.new_content":{"body":"That said I'm not sure the description is accurate since it includes the `<script>`. Some of the things \\<a href=\"https://matrix.to/#/@timotijhof:matrix.org\">Timo Tijhof\\</a> ascribes to preload/modulepreload are almost certainly due to the `<script>`","format":"org.matrix.custom.html","formatted_body":"That said I'm not sure the description is accurate since it includes the <code>&lt;script&gt;</code>. Some of the things &lt;a href=\"https://matrix.to/#/@timotijhof:matrix.org\"&gt;Timo Tijhof&lt;/a&gt; ascribes to preload/modulepreload are almost certainly due to the <code>&lt;script&gt;</code>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DDZ3fA2ia4jrWE7Dkri13-dlH1_Z05OUbhoFOmHwppA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712127408446,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$V1mKRXmct_hQ58mQ8Bd3Oay2LwSeYkCEMcbeI7MhN14"},
{"content":{"body":"Oooh another browser engine https://github.com/Wuelle/Stormlicht","m.mentions":{},"msgtype":"m.text"},"ts":1712130087098,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$6gApVF6iKCuqVQv1DUOZm5bRfkUyfZQAgmV5IUsMjC4"},
{"content":{"body":"PSA: Now would be good time to do a thorough review of https://github.com/WICG/sanitizer-api if that kind of API interests you. We're trying to settle the remaining details so if there's anything you don't like please raise it.","m.mentions":{},"msgtype":"m.text"},"ts":1712146089164,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YNUAwe92CSHJ0w_3mzB_Opz3W-LOHbDbGTrCeQ6wHQo"},
{"content":{"body":"annevk: \n> We discussed and agreed we should do what @zcorpan said above for MathML.\n\nJust curious where was that discussion?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>:</p>\n<blockquote>\n<p>We discussed and agreed we should do what @zcorpan said above for MathML.</p>\n</blockquote>\n<p>Just curious where was that discussion?</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1712158224988,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$5qJnkddMGcB3-T--iVlxELw37CwvSBCopoYdJ7aF1Vk"},
{"content":{"body":"bkardell: Sanitizer API meeting","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: Sanitizer API meeting","m.mentions":{"user_ids":["@bkardell:igalia.com"]},"msgtype":"m.text"},"ts":1712158708252,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8ru2175zipyzrQwQT2Ix5upZzLWjEvFsZsHbPi0rlSo"},
{"content":{"body":"what is the meeting organized under? Igalia is interetest in the Sanitizer API but we weren't aware of the meeting","m.mentions":{},"msgtype":"m.text"},"ts":1712158875125,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$e96JyzWote4tg_2SBhzCjyy0tS_hj8y16vgUQzUCnuA"},
{"content":{"body":" * what is the meeting organized under? Igalia is interetest in the Sanitizer API but we weren't aware of the meeting annevk ","format":"org.matrix.custom.html","formatted_body":" * what is the meeting organized under? Igalia is interetest in the Sanitizer API but we weren't aware of the meeting <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.new_content":{"body":"what is the meeting organized under? Igalia is interetest in the Sanitizer API but we weren't aware of the meeting annevk ","format":"org.matrix.custom.html","formatted_body":"what is the meeting organized under? Igalia is interetest in the Sanitizer API but we weren't aware of the meeting <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$e96JyzWote4tg_2SBhzCjyy0tS_hj8y16vgUQzUCnuA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712158883691,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$zCRroLkVjvBdWMKslHJMV3H88P8IAd7bnD3azC3WI3I"},
{"content":{"body":" * what is the meeting organized under? Igalia is interetested in the Sanitizer API but we weren't aware of the meeting annevk","format":"org.matrix.custom.html","formatted_body":" * what is the meeting organized under? Igalia is interetested in the Sanitizer API but we weren't aware of the meeting <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{},"m.new_content":{"body":"what is the meeting organized under? Igalia is interetested in the Sanitizer API but we weren't aware of the meeting annevk","format":"org.matrix.custom.html","formatted_body":"what is the meeting organized under? Igalia is interetested in the Sanitizer API but we weren't aware of the meeting <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$e96JyzWote4tg_2SBhzCjyy0tS_hj8y16vgUQzUCnuA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712158948089,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$_D-lRs3t-MAJnA2quy7HrOe0T-0_HkghN3_qe1fg0Zo"},
{"content":{"body":"we'd like to attend future meetings, and obviously would have liked to have been at that one given the whole mathml thing :)","m.mentions":{},"msgtype":"m.text"},"ts":1712159007713,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$56LB8wKPTXsN1O8G9KAgtxWblf0ABmJk5OiTrDkoCBk"},
{"content":{"body":"freddy: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: ^^","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"msgtype":"m.text"},"ts":1712159035826,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$I71KHRxwFRlSUEuUZV7_9oTbx4HlGOVQ6U5Si7rhvx8"},
{"content":{"body":"for the record, we're not unhappy with that decision or anything - we just would like to be involved and have interests","m.mentions":{},"msgtype":"m.text"},"ts":1712159792342,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$gdM9hkorf1DVf7DONb5LGVspTZzzPFS17qggsluIrPc"},
{"content":{"body":"Oh yeah, happy to send invites. Which timezone do you have folks? We're currently very EMEA friendly ;-)","m.mentions":{},"msgtype":"m.text"},"ts":1712161029319,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$hV_NcXEYEyCUy_g6IvrLvk84bTWFiygnqD7vLaeWdgc"},
{"content":{"body":"> <@fbraun:mozilla.org> Oh yeah, happy to send invites. Which timezone do you have folks? We're currently very EMEA friendly ;-)\n\nOff the top of my head it'd probably be me and Brian most interested, I'm on BST (Europe) so EMEA is perfect for me.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$hV_NcXEYEyCUy_g6IvrLvk84bTWFiygnqD7vLaeWdgc?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@fbraun:mozilla.org\">@fbraun:mozilla.org</a><br />Oh yeah, happy to send invites. Which timezone do you have folks? We're currently very EMEA friendly ;-)</blockquote></mx-reply>Off the top of my head it'd probably be me and Brian most interested, I'm on BST (Europe) so EMEA is perfect for me.","m.relates_to":{"m.in_reply_to":{"event_id":"$hV_NcXEYEyCUy_g6IvrLvk84bTWFiygnqD7vLaeWdgc"}},"msgtype":"m.text"},"ts":1712162131735,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$lknUg5QqWUGaDlYCI6TU8LAHuG_7WnNuQPFNGOEIoqM"},
{"content":{"body":"I'm in ET ","m.mentions":{},"msgtype":"m.text"},"ts":1712164986996,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$H-U6EmmEwBcgDPU40MnDiZGjGCidPF1ftx417fAfZHw"},
{"content":{"body":"It's at 4AM ET.","m.mentions":{},"msgtype":"m.text"},"ts":1712166288095,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OFXcpDpKyDp2TBefaxJAFV891eEIHP3ikj86fuYGGYU"},
{"content":{"body":"🤷 unfortunate, but I can't expect the world to bend to my schedule.  Luke will be there at least. If I need to be there I will ","m.mentions":{},"msgtype":"m.text"},"ts":1712166641290,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$WYbS8AlL3jA6IkUs-QDnf0eFKTCwRnH6dL-oXzNAXsw"},
{"content":{"body":" * 🤷 unfortunate, but I guess I can't expect the world to bend to my schedule :)  Luke will be there at least. If I need to be there I will ","m.mentions":{},"m.new_content":{"body":"🤷 unfortunate, but I guess I can't expect the world to bend to my schedule :)  Luke will be there at least. If I need to be there I will ","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$WYbS8AlL3jA6IkUs-QDnf0eFKTCwRnH6dL-oXzNAXsw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712166660952,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$r2fgBn3NAkaRQypIHeh7lOfqzKBpYKRKwOW7N9VQaV0"}
]