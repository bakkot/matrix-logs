[
{"content":{"body":"Is the https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values algorithm known to differ in any way from the behavior of [`strtod`](https://en.cppreference.com/w/c/string/byte/strtof)?","format":"org.matrix.custom.html","formatted_body":"Is the https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values algorithm known to differ in any way from the behavior of <a href=\"https://en.cppreference.com/w/c/string/byte/strtof\"><code>strtod</code></a>?","m.mentions":{},"msgtype":"m.text"},"ts":1710214952405,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sMT6AOEFEyFwNQ3aV1dvW3RPesw0ewefinBjVxEqtWY"},
{"content":{"body":"I assume you could find any number of differences if you looked, if those are even consistent between platforms","m.mentions":{},"msgtype":"m.text"},"ts":1710239897946,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$jhz2gm68pibmYp4r4nnKpyf9oj_7m4awOH3U7Df1FAk"},
{"content":{"body":"Well the thing is, as far as I can see, in practice none of Blink, Gecko, Servo, or WebKit actually implement that algorithm — at least not intentionally.\n\nInstead, as far as I can see, Blink and Gecko use https://github.com/google/double-conversion — and until a year ago, WebKit did too. WebKit now uses https://github.com/fastfloat/fast_float — which is functionally equivalent to `strtod` — as a drop-in replacement for the double-conversion it had also been using previously.\n\nSo if our goal is interoperability, it seems like what we’d ideally need to specify is, functional equivalence with double-conversion — which essentially seems to mean functional equivalence with `strtod`.","format":"org.matrix.custom.html","formatted_body":"<p>Well the thing is, as far as I can see, in practice none of Blink, Gecko, Servo, or WebKit actually implement that algorithm — at least not intentionally.</p>\n<p>Instead, as far as I can see, Blink and Gecko use https://github.com/google/double-conversion — and until a year ago, WebKit did too. WebKit now uses https://github.com/fastfloat/fast_float — which is functionally equivalent to <code>strtod</code> — as a drop-in replacement for the double-conversion it had also been using previously.</p>\n<p>So if our goal is interoperability, it seems like what we’d ideally need to specify is, functional equivalence with double-conversion — which essentially seems to mean functional equivalence with <code>strtod</code>.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1710240701391,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$8yZIhan0YX3BfPGcalXrpKX0rXb0qjGRTRlCq0rxWRk"},
{"content":{"body":"And for the case of Servo, as far as I can see, it just uses the Rust standard library’s `parse()`","format":"org.matrix.custom.html","formatted_body":"And for the case of Servo, as far as I can see, it just uses the Rust standard library’s <code>parse()</code>","m.mentions":{},"msgtype":"m.text"},"ts":1710240754223,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sKik9GocVc5GztQIGyGZIINdSy3nILg98GGd87-HNco"},
{"content":{"body":"The only engine implementation I have found that seems to attempt to implement its own double parser is the one in Ladybird.","m.mentions":{},"msgtype":"m.text"},"ts":1710240805463,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xdWUe1jw301uLubi823vV_Lh56gG2rCXG2DsWor5_H0"},
{"content":{"body":"But by attempting implement what’s in the spec rather than just using double-conversion or fast_float, it seems like the Ladybird implementation risks lack of interoperability with the other engines.","m.mentions":{},"msgtype":"m.text"},"ts":1710240932338,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$YlTZjQfIvwezQeYQI3PWSNg1q94fQs6R-rDHEdwnlRE"}
]