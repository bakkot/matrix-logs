[
{"content":{"body":"annevk: FYI my _‚ÄúShow HTTP status code in CORS messages‚Äù_ patch landed in the WebKit sources https://trac.webkit.org/changeset/285145/webkit","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: FYI my <em>‚ÄúShow HTTP status code in CORS messages‚Äù</em> patch landed in the WebKit sources https://trac.webkit.org/changeset/285145/webkit","msgtype":"m.text"},"ts":1635820668724,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$7ldN_SFRRDJ2kChLWkfGA01v22k2t6jWET5tXmARErM"},
{"content":{"body":"so that‚Äôll soon be in a Safari TP release ‚Äî and then I guess in Safari 15.x in March or April  ","msgtype":"m.text"},"ts":1635820897031,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$sW5cyydMJs7WBu6ibYyRggIkKx6dFqH97DiAwq0rHP8"},
{"content":{"body":"congrats! was somewhat expecting to see these error messages localized but no browser vendor does error messages correctly, so not surprised if that's the case. might need to make an account over now that you mention it","msgtype":"m.text"},"ts":1635834913693,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$2EvtR7LplVmMDNolOyRsUq25QgfJLoXbUqO6FAIvvSg"},
{"content":{"body":"they are localized in some browsers at least","msgtype":"m.text"},"ts":1635834967825,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$dw3DTd6gWK-uVvqfENK6jMQErDc_tuS3kYT5ZXJ9RcA"},
{"content":{"body":"there are ways to localize error messages, but that doesn't seem to have happened in that changelog -- maybe they go back over it later? doubt it, but have seen great localization for error messages maybe twice","msgtype":"m.text"},"ts":1635835171917,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$qTTgoWoNQ6LflQ7pzs8Bpwmi_5aa3Vskj1UVBaT2VpA"},
{"content":{"body":"the two software projects were Git and TypeScript believe it or not","msgtype":"m.text"},"ts":1635835331041,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$PeNWRHmu5SxfTjYw1NyFsG1auUEolIcGr-_0FYK3xWc"},
{"content":{"body":"why are some tentative openUI tests being mixed with html tests?","msgtype":"m.text"},"ts":1635849444922,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$ygAMTVA99BjHPhzTeVGzziDcwzYk4sMwzXmPkE2qe4s"},
{"content":{"body":"smaug: the intention might be to upstream the feature to HTML?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: the intention might be to upstream the feature to HTML?","msgtype":"m.text"},"ts":1635850523854,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$c0DUGsj5NPXzShAnXGt-7U8foPtlhAOyz06Z8oX_B9U"},
{"content":{"body":"I couldn't find any spec-like text for selectmenu","msgtype":"m.text"},"ts":1635850570886,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Rb1I0wdxe8lRHmv60GltDJgK9iXpdfBq4EFGKIFpdTE"},
{"content":{"body":"perhaps I looked at from wrong places","msgtype":"m.text"},"ts":1635850584037,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$j5KvsHcWukUjfVYYQZ7vNEZswpGrGZ8mThA7KTYuXcM"},
{"content":{"body":"smaug: are they marked as tentative at least?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: are they marked as tentative at least?","msgtype":"m.text"},"ts":1635850612368,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$JynL-1npmYI3Yud1_WzlKcIZTtqwEV0aZMxX-aDIci0"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1635850618934,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$MPjqO5250h63mYJtDX7cLv-cAOhmimMviIVoesCgang"},
{"content":{"body":"seeing \"the-selectmenu-element\" here https://github.com/web-platform-tests/wpt/tree/ca3635d2be104d885837442cc5e7ada030d66b22/html/semantics/forms is a bit surprising. ","msgtype":"m.text"},"ts":1635850716929,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$aqWsOj0E5djxTi1iIBVJ_Cdv65xPTbktOQwBz9UoVus"},
{"content":{"body":"They're all marked `.tentative`","format":"org.matrix.custom.html","formatted_body":"They're all marked <code>.tentative</code>","msgtype":"m.text"},"ts":1635854619423,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$YKDIhPphNeARKrgYbSwOwiIHIFvji5xafyyTbx9kuHg"},
{"content":{"body":"Maybe they didn't know you could do that to a complete directory too","msgtype":"m.text"},"ts":1635854631850,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$o3-eUtkzPNkexAGvT5WxkDuOnIzFD5ojM1tkb3F-yMY"},
{"content":{"body":"annevk, Jake Archibald: I was thinking re. the controller thingy (https://github.com/whatwg/fetch/pull/1329),  \n\nmaybe instead of returning a struct that fetch exported functions for, to return a struct with algorithm fields, that are set before returning the controller, kind of like how the different algorithms are kept in fetch params).\n\nThis way both fetch-params and the state are truly private, and the only thing returned/exported is terminate/abort/finalize or whatever method is operable after the fetch has started. WDYT?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>, <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: I was thinking re. the controller thingy (https://github.com/whatwg/fetch/pull/1329),</p>\n<p>maybe instead of returning a struct that fetch exported functions for, to return a struct with algorithm fields, that are set before returning the controller, kind of like how the different algorithms are kept in fetch params).</p>\n<p>This way both fetch-params and the state are truly private, and the only thing returned/exported is terminate/abort/finalize or whatever method is operable after the fetch has started. WDYT?</p>\n","msgtype":"m.text"},"ts":1635858059368,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$-BGMqbM6rta_AaeohOxuVk49cLIg6vL9AzhVsBQmaR4"},
{"content":{"body":"Noam Rosenthal: I think algorithm fields are for cases where the algorithm is _set_ by some other spec, but annevk will know more","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I think algorithm fields are for cases where the algorithm is <em>set</em> by some other spec, but <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> will know more","msgtype":"m.text"},"ts":1635858206453,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$HdA-BnrgHVkQOTysVycTxt3D3qgNCUjjLilDf4k3Cw4"},
{"content":{"body":"Yeah, generally concepts are \"plain\" structs and algorithms get everything they need passed as parameters","msgtype":"m.text"},"ts":1635858309581,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$0_tebfLjy1KR-0rFMnf9Q0aBZfDzxmxNSBDtVP04WHQ"},
{"content":{"body":"... Trying to prevent a situation where by putting the state information inside controller we make it \"public\", while what we want to publicize is only some methods to manipulate the fetch.","msgtype":"m.text"},"ts":1635858322694,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Facn1Bhg3nWhFZxgRWdKRGYB6jbqyy96i49tm3IyT4g"},
{"content":{"body":" * ... Trying to prevent a situation where by putting the state information inside controller we make it \"public\", while what we want to publicize is only some methods to manipulate the fetch.","m.new_content":{"body":"... Trying to prevent a situation where by putting the state information inside controller we make it \"public\", while what we want to publicize is only some methods to manipulate the fetch.","msgtype":"m.text"},"m.relates_to":{"event_id":"$Facn1Bhg3nWhFZxgRWdKRGYB6jbqyy96i49tm3IyT4g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635858338665,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$d5tqWDdFn5_0mguC0AIVG-xokNztgLCZL1bRDLO58aU"},
{"content":{"body":"Can't the controller just have the public data?","msgtype":"m.text"},"ts":1635858348608,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$sZMwINNfMlAYMqD34QKOI1uNehtNiq3Zk9riwlvx6H8"},
{"content":{"body":"I think exposing the state of the fetch is reasonable","msgtype":"m.text"},"ts":1635858352898,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$9-bersUgFq_b2FyYGmuCP3b7br6PHKN-vQohFbPilQU"},
{"content":{"body":"fetch params can have the private data","msgtype":"m.text"},"ts":1635858360950,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$eXShTzmchGSXq3Ne62Qoa9IpR908CISHPvtdzDfnhRM"},
{"content":{"body":"Assuming that we're talking about \"ongoing\" vs terminated","msgtype":"m.text"},"ts":1635858370176,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$tInMJCP-kEdbSOLpn486fwowQaNrJkGT1ldtUDiOg2o"},
{"content":{"body":"so it exposes state, and later cacheState and timing info","msgtype":"m.text"},"ts":1635858381541,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$EeNDSfc64wj6vMO3rajp0Ezs-S08i3C1y3xaJAHyzlI"},
{"content":{"body":"... which are needed when finalizing","msgtype":"m.text"},"ts":1635858391985,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$lMj305tmadiH1VGQyy-x2PJw2Lt2wRBUGYGIibk1P3c"},
{"content":{"body":"Yeah, but we'd only set those on the controller when they are meant to become public (so we might duplicate them there, essentially)","msgtype":"m.text"},"ts":1635858417453,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$G18RDnslobMpn3aHz3AH0MMvfRiVF7Vm9fcOx8rNM_o"},
{"content":{"body":"I guess cacheState can only be set before fetch finale, right?","msgtype":"m.text"},"ts":1635858446817,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$fNF0vd8EBneHPfLs31qaGOWxaRXvfQGH5ANKfD__I1c"},
{"content":{"body":"which would make this sort of work","msgtype":"m.text"},"ts":1635858452069,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$C_NDNlG703NONpmpl3dE1t7aZ4Duw3DAZHpHHflxcJc"},
{"content":{"body":"As in, we'd write to those fields on \"fetch params\", and then at some point copy the whole lot over to the controller","msgtype":"m.text"},"ts":1635858461646,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$tUDS6edq5fKWAsuyEIbQSgTSjPMrmvfcUDYoeoLX87k"},
{"content":{"body":"yea, fetch finale would probably be where this happens, as that's where it's currently copied to the response","msgtype":"m.text"},"ts":1635858503107,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$yet34kU0v8kRLTBrlyLDYP2Q2jE2_F5-Q6wl8WYRmgs"},
{"content":{"body":"So we'll end up with some duplication, but it also clarifies things in a way","msgtype":"m.text"},"ts":1635858540969,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$Tmlgv0CTG-O8dQ_YIXLdjLSc5Sewg6ccBc8PYn0PX_U"},
{"content":{"body":"OK this makes more sense to me. Thanks!","msgtype":"m.text"},"ts":1635858546024,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$EZTyN3dIBVhqDDuQGKmPZCU4fnTE73-iCAwURFWMYyw"},
{"content":{"body":"\\o/","format":"org.matrix.custom.html","formatted_body":"\\o/","msgtype":"m.text"},"ts":1635858553553,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$L7bp8c2pZin_IUD6cEHbrECBOllMf23uuNJ6_gCBGFI"},
{"content":{"body":"(Done with bikesheeding about this corner, going back to work)","msgtype":"m.text"},"ts":1635858566451,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$hjwWij54aMedssTsFN3KmY_lsUal16h4FtzIdGmVWwk"},
{"content":{"body":" * (Done with bikesheeding about this corner, going back to work)","m.new_content":{"body":"(Done with bikesheeding about this corner, going back to work)","msgtype":"m.text"},"m.relates_to":{"event_id":"$hjwWij54aMedssTsFN3KmY_lsUal16h4FtzIdGmVWwk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635858580837,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$n4D59UmVOCVFqQhpTNWUQJ8X1-54cjHZe_ATI1vccOc"},
{"content":{"body":"I wish I had more painted bikesheds to show for it, but I guess that's why it's called that way","msgtype":"m.text"},"ts":1635858671321,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$l__sj5Q-yGaperny5ha5h3FQ4KhB60GwqWs-tiRTMLs"},
{"content":{"body":"Jake Archibald, annevk : followed your suggestion (https://github.com/whatwg/fetch/pull/1329), hope it's on the right track :)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>, <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> : followed your suggestion (https://github.com/whatwg/fetch/pull/1329), hope it's on the right track :)","msgtype":"m.text"},"ts":1635860201706,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Nj3QmbTYs7AcbKXbmXcoGM4TSegyGh-0752iRdg9dVY"},
{"content":{"body":"Noam Rosenthal: I haven't had a chance yet, but one thing we need to figure out is the interaction of this with service workers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I haven't had a chance yet, but one thing we need to figure out is the interaction of this with service workers","msgtype":"m.text"},"ts":1635861446401,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$yKo_jjdBFgood8_8VWSC9h9hSatAYwr1pyyk3WOTpjU"},
{"content":{"body":"Noam Rosenthal: I just realized that while writing https://github.com/whatwg/fetch/pull/1343#issuecomment-957631425","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I just realized that while writing https://github.com/whatwg/fetch/pull/1343#issuecomment-957631425","msgtype":"m.text"},"ts":1635861462778,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$sznE7E5GLFEAa7gyZxNl2cV2gFg2vz2UY0KiKSOogPE"},
{"content":{"body":"Noam Rosenthal: service workers observe the termination for some things so they might need access to the controller or the state or some such","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: service workers observe the termination for some things so they might need access to the controller or the state or some such","msgtype":"m.text"},"ts":1635861495988,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$mByJiCjMfSxAuntolu90nNtET-4idx8s_5BPTJUeMMc"},
{"content":{"body":"Jake Archibald: did you consider that already perhaps?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: did you consider that already perhaps?","msgtype":"m.text"},"ts":1635861516457,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$wvlSU6TJrJKB5I4RJCGPtfOpfPNTL6KZZA9KU2s49lQ"},
{"content":{"body":"annevk: service worker is hand-waving this in a couple of places, so yeah, it's be great to switch this to an \"abort when\" based on some state","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: service worker is hand-waving this in a couple of places, so yeah, it's be great to switch this to an &quot;abort when&quot; based on some state","msgtype":"m.text"},"ts":1635862363332,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$wC3yscZ9SwXGRzeAr4yNLnk09YtJ2viWVGTFlmWZS8M"},
{"content":{"body":"> <@annevk:mozilla.org> Noam Rosenthal: I haven't had a chance yet, but one thing we need to figure out is the interaction of this with service workers\n\nI will get more acquainted with this","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24yKo_jjdBFgood8_8VWSC9h9hSatAYwr1pyyk3WOTpjU\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I haven't had a chance yet, but one thing we need to figure out is the interaction of this with service workers</blockquote></mx-reply>I will get more acquainted with this","m.relates_to":{"m.in_reply_to":{"event_id":"$yKo_jjdBFgood8_8VWSC9h9hSatAYwr1pyyk3WOTpjU"}},"msgtype":"m.text"},"ts":1635863487838,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xJVSTWRSc0FNtNWLhvie-8tV7ZTRvtuhf355z0CDdz4"},
{"content":{"body":"Noam Rosenthal: cool! I think we need to expose the controller, essentially; I guess we only need to read state from it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: cool! I think we need to expose the controller, essentially; I guess we only need to read state from it","msgtype":"m.text"},"ts":1635866458888,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ZwVptfRgvkv93_rRVUmspiWvC3ashOe6lfZkRu9ziIg"},
{"content":{"body":"Noam Rosenthal: I'm not sure if that means we should stuff the controller on the request or just add an argument to \"handle fetch\", I guess the latter would be better","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I'm not sure if that means we should stuff the controller on the request or just add an argument to &quot;handle fetch&quot;, I guess the latter would be better","msgtype":"m.text"},"ts":1635866496271,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$0qLcxLr7YI6KCIHN8Qf9XqKN1Aaoog976-9YNWmlICk"},
{"content":{"body":"Anyway, this is a bit off the cuff","msgtype":"m.text"},"ts":1635866515573,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$VBXnQh4C5XD8hNZrEZMbl29-uh6fjsjEIwjFWvm0Bpg"},
{"content":{"body":"Domenic: In the streams spec, in `ReadableStreamPipeTo`, the spec says:\n> If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.\n\n(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: In the streams spec, in <code>ReadableStreamPipeTo</code>, the spec says:</p>\n<blockquote>\n<p>If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.</p>\n</blockquote>\n<p>(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.</p>\n","msgtype":"m.text"},"ts":1635868109364,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$UEUptoUgkRJ00OezCGtCG1lD0ptQWW_X2Gclw__uDfU"},
{"content":{"body":" * Domenic: In the streams spec, in `ReadableStreamPipeTo`, the spec says:\n> If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.\n\n(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: In the streams spec, in <code>ReadableStreamPipeTo</code>, the spec says:</p>\n<blockquote>\n<p>If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.</p>\n</blockquote>\n<p>(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.</p>\n","m.new_content":{"body":"Domenic: In the streams spec, in `ReadableStreamPipeTo`, the spec says:\n> If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.\n\n(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: In the streams spec, in <code>ReadableStreamPipeTo</code>, the spec says:</p>\n<blockquote>\n<p>If source.[[controller]] implements ReadableByteStreamController, let reader be either ! AcquireReadableStreamBYOBReader(source) or ! AcquireReadableStreamDefaultReader(source), at the user agent‚Äôs discretion.</p>\n</blockquote>\n<p>(since the beginning of time: https://github.com/whatwg/streams/pull/512). What does this mean? In what cases should the user agent use which reader type? I can't find any docs in surrounding code snippets.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$UEUptoUgkRJ00OezCGtCG1lD0ptQWW_X2Gclw__uDfU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1635868115315,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$ySFwIIy1sgdpm5uVZt3-0g_EZM8oUo3tlqcLImk0q6s"},
{"content":{"body":"Luca Casonato: this is basically saying that the choice of reader is unobservable, so if you want to use a byte reader because you think you can do smart byte thingies with it while piping, go ahead","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: this is basically saying that the choice of reader is unobservable, so if you want to use a byte reader because you think you can do smart byte thingies with it while piping, go ahead","msgtype":"m.text"},"ts":1635869315954,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7ptZuetZHMi8vkESfsWXsO5iwee_u0G6Yc-mFxsKsRg"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1635869332942,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$AxIxgrzwoP01JvewJuG9cuCXp2cYdBQn2gUE5LkDlTA"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1635869364542,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$yuCnq--moOLay3ijE-Md9P-Rag--IHnFrz0Kf7nQGZs"},
{"content":{"body":"sefeng: hey welcome! https://github.com/whatwg/html/pull/7285 could use your review I think. And potentially that of emilio.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sefeng:mozilla.org\">sefeng</a>: hey welcome! https://github.com/whatwg/html/pull/7285 could use your review I think. And potentially that of <a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>.","msgtype":"m.text"},"ts":1635869760230,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$WHVWtgeRKyUuYfWq26HuY_lrM7GGUUU1Up9EadsA4cI"},
{"content":{"body":"roger, will do","msgtype":"m.text"},"ts":1635869804467,"senderName":"sefeng","senderId":"@sefeng:mozilla.org","id":"$MSwezndrrsBA3m-7gIjlhjkKby6dXVeEFgd4c1idJ6U"},
{"content":{"body":"Domenic: if `x in y` is false, will `y[x]` always be undefined?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: if <code>x in y</code> is false, will <code>y[x]</code> always be undefined?","msgtype":"m.text"},"ts":1635871835702,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$FBRvSvsVp0QgHR9mcICqryqoOwhblb-oIMe0UM5F2t4"},
{"content":{"body":"wonders whether to merge https://github.com/web-platform-tests/wpt/pull/31461","msgtype":"m.emote"},"ts":1635871856351,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$6jLGvkY4lzNgLFTAWme1bzMfByw9WW68fdXvU1HeWdk"},
{"content":{"body":"> <@annevk:mozilla.org> Domenic: if `x in y` is false, will `y[x]` always be undefined?\n\nNo (because Proxy)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24FBRvSvsVp0QgHR9mcICqryqoOwhblb-oIMe0UM5F2t4\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: if <code>x in y</code> is false, will <code>y[x]</code> always be undefined?</blockquote></mx-reply>No (because Proxy)","m.relates_to":{"m.in_reply_to":{"event_id":"$FBRvSvsVp0QgHR9mcICqryqoOwhblb-oIMe0UM5F2t4"}},"msgtype":"m.text"},"ts":1635871946766,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$gAfSHl7ysoi1P9IMbHUI12xGWibSXhgNQH5BWclMFg0"},
{"content":{"body":"Luca Casonato: fair, but that doesn't seem applicable here","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: fair, but that doesn't seem applicable here","msgtype":"m.text"},"ts":1635871991042,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$MxQrF4LNKyMj6z5XujOlrc3u226QSJfAmqDNP-AM91g"},
{"content":{"body":"Oh ok, then idk","msgtype":"m.text"},"ts":1635872001779,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$9j6LZ8RtiM4kg79jI2AdRiZP3SJFGDp509BaeXzHe9E"},
{"content":{"body":"Seems fine","msgtype":"m.text"},"ts":1635872227663,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$Hmb-YZLt3bHnTrn54EOb1pYNrbAIfsa9CeKwaNEH6WI"},
{"content":{"body":"> <@noamr:matrix.org> Jake Archibald, annevk : followed your suggestion (https://github.com/whatwg/fetch/pull/1329), hope it's on the right track :)\n\nreally nice! ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Nj3QmbTYs7AcbKXbmXcoGM4TSegyGh-0752iRdg9dVY?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br><a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>, <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> : followed your suggestion (https://github.com/whatwg/fetch/pull/1329), hope it's on the right track :)</blockquote></mx-reply>really nice!","m.relates_to":{"m.in_reply_to":{"event_id":"$Nj3QmbTYs7AcbKXbmXcoGM4TSegyGh-0752iRdg9dVY"}},"msgtype":"m.text"},"ts":1635872338892,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$2tpB0vkCkVHPXbKAx7SWx6012Ha6aXQgKh5E_PJBfhk"},
{"content":{"body":"> <@annevk:mozilla.org> Noam Rosenthal: I'm not sure if that means we should stuff the controller on the request or just add an argument to \"handle fetch\", I guess the latter would be better\n\nDefinitely the latter. Seems natural to me that SW would get a \"fetch controller\" as a parameter and would be able to query if it is terminated","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$0qLcxLr7YI6KCIHN8Qf9XqKN1Aaoog976-9YNWmlICk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I'm not sure if that means we should stuff the controller on the request or just add an argument to \"handle fetch\", I guess the latter would be better</blockquote></mx-reply>Definitely the latter. Seems natural to me that SW would get a &quot;fetch controller&quot; as a parameter and would be able to query if it is terminated","m.relates_to":{"m.in_reply_to":{"event_id":"$0qLcxLr7YI6KCIHN8Qf9XqKN1Aaoog976-9YNWmlICk"}},"msgtype":"m.text"},"ts":1635875516392,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$EHjJEA671BD4MgITinlSIZVAlSq6HL3FQUS_xvGYrpY"},
{"content":{"body":"I would try to avoid associating more things with requests/responses, as those are transient serializable beings and when we associate \"procedural\" beings like fetch controller (or \"an ongoing fetch\") we make them confusing... (does this controller gets serialized or stored with the request? how?)\n\nthat's what happened with associating timing info to a response, where it got ambiguous in terms of caching and SW","msgtype":"m.text"},"ts":1635875673164,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$buzo8gNZZyfuxoKuIWniERaNoUmcZl82lCfDXfVCsSY"},
{"content":{"body":"adding a parameter to SW's fetch \"handle fetch\" is a clean solution to this problem","msgtype":"m.text"},"ts":1635875715396,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$U9kcC6Hez9K53-_YAUfSzyEWwwznR2xhf3ikvI9Bv1g"},
{"content":{"body":"annevk, Jake Archibald I think one thing that makes SW's \"handle fetch\" a bit different is that it asynchronously returns a response, rather than receive a `processResponse` callback algorithm or so.\n\nIf we'd change it to be the latter, the SW fetch could return its own controller and the main fetch could terminate it, rather than invert it to where SW has to check whether its caller (\"the fetch instance\") was terminated. ","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>, <a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a> I think one thing that makes SW's &quot;handle fetch&quot; a bit different is that it asynchronously returns a response, rather than receive a <code>processResponse</code> callback algorithm or so.</p>\n<p>If we'd change it to be the latter, the SW fetch could return its own controller and the main fetch could terminate it, rather than invert it to where SW has to check whether its caller (&quot;the fetch instance&quot;) was terminated.</p>\n","msgtype":"m.text"},"ts":1635876885117,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$VQtnfjaHH0VGGc23CcSUkZ60HYL5XIFpOx2ESZ8KGCM"},
{"content":{"body":"I wonder what happens today if the abort happens after the service worker returned a response. Does the service worker still get notified? Perhaps that's just a state check on the service worker side though...","msgtype":"m.text"},"ts":1635877172817,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$yJm2lN1qlxQUzxzOB_Bla1gY5pukb7KFbndL1gO_9OQ"},
{"content":{"body":"Making that interaction with the service worker non-blocking sounds reasonable, though I'm not entirely sure I see what it would buy us quite yet.","msgtype":"m.text"},"ts":1635877206881,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$iD2IhoVFWhcCJt4nheSWNYpcYj2c6xd1yqUjLdBY2iw"},
{"content":{"body":"I guess having a controller for the fetch event would give an opportunity to not forward signals when it's too late anyway, but realistically you'd have to implement that check on the receiver side as well.","msgtype":"m.text"},"ts":1635877343515,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$quUlwnpcPFVavI1N8x2NHXetotrK4CJY6F0XuvShR9w"},
{"content":{"body":"I should have time to give all this another look at tomorrow","msgtype":"m.text"},"ts":1635877408129,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$lQb_7LjTa5HSXWNNb19z8-BtECo8SS0gb1QoHp4ESOk"},
{"content":{"body":"annevk: looks like removing \"pair\" broke Web IDL: https://github.com/whatwg/webidl/runs/4082229137?check_suite_focus=true","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: looks like removing &quot;pair&quot; broke Web IDL: https://github.com/whatwg/webidl/runs/4082229137?check_suite_focus=true","msgtype":"m.text"},"ts":1635890037863,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Rdlt-F01LQmWlZ0Tjzx0PPFl1vQFlW8JNi9-7BTyn7k"}
]