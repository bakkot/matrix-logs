[
{"content":{"body":"I tend to feel multiple methods is nicer. Minimizing the number of methods doesn't seem like an important goal to me.","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$mcau2qVhHJDdWEazDRa2j7baV9U0lretlpoXADAWwFk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758678132921,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mKH_mOZZR-zxknhS7KsvOr8Q4Madm7ZPEIeuj1txt-E"},
{"content":{"body":"If we go all the way with multiple methods, it would be something like this:\n\nsetHTML\nsetHTMLUnsafe\nstreamHTML\nstreamHTMLUnsafe\nhtmlBefore\nhtmlBeforeUnsafe\nstreamHTMLBefore\nstreamHTMLBeforeUnsafe\nappendHTML\nappendHTMLUnsafe\nstreamAppendHTML\nstreamAppendHTMLUnsafe","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$mKH_mOZZR-zxknhS7KsvOr8Q4Madm7ZPEIeuj1txt-E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758697982588,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$WEjoEklnEHGHB8KdRTYxCHjEXiZ6KANHYzJ1ZoWwCvo"},
{"content":{"body":"(not saying it as something good vs bad)","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$WEjoEklnEHGHB8KdRTYxCHjEXiZ6KANHYzJ1ZoWwCvo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758697993551,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$pgOkeHw89AW45C_LF2HQIVPcrZzZa_7jftq10mO8LMw"},
{"content":{"body":"Added this as an alternative in the OP","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$pgOkeHw89AW45C_LF2HQIVPcrZzZa_7jftq10mO8LMw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758699973380,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$eFiqwmquMKra_jZXGkvRk_yZVQzIMTFsxu_l7swEVKs"},
{"content":{"body":"> <@domenicdenicola:matrix.org> I tend to feel multiple methods is nicer. Minimizing the number of methods doesn't seem like an important goal to me.\n\nI think minimising the number of legacy methods we create should be taken into account. .innerHTML had to be replaced for setHTMLUnsafe so it could take arguments. But if we have existing functions upgrading them rather than replacing would seem good.\n\nElse we'll have a lot of widely used but at least partially duplicated methods.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$mKH_mOZZR-zxknhS7KsvOr8Q4Madm7ZPEIeuj1txt-E?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br />I tend to feel multiple methods is nicer. Minimizing the number of methods doesn't seem like an important goal to me.</blockquote></mx-reply><p>I think minimising the number of legacy methods we create should be taken into account. .innerHTML had to be replaced for setHTMLUnsafe so it could take arguments. But if we have existing functions upgrading them rather than replacing would seem good.</p>\n<p>Else we'll have a lot of widely used but at least partially duplicated methods.</p>","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$mKH_mOZZR-zxknhS7KsvOr8Q4Madm7ZPEIeuj1txt-E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758706886166,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$TrK8abkHbkhDYLtBm0iQdW5hkfO2g1ew_tJF5oFwOvA"},
{"content":{"body":"Is it also worth considering stuff like https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/srcdoc that can't be sanitized yet.\n\nThere's also https://w3c.github.io/editing/docs/execCommand/#the-inserthtml-command which can do a partial replacement.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$TrK8abkHbkhDYLtBm0iQdW5hkfO2g1ew_tJF5oFwOvA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758707288626,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$lxGe72qbB4ZWghMR3LWW-BBVUDwXdq5Aqjded6N3jtE"},
{"content":{"body":"Why would we create legacy methods at all? Just create new non-legacy methods.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$lxGe72qbB4ZWghMR3LWW-BBVUDwXdq5Aqjded6N3jtE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758707780763,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ptcon8K2zLxu7H2bRSoULmIInZ5DWYDoVYCIDN7nYUk"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Why would we create legacy methods at all? Just create new non-legacy methods.\n\nThat's what I mean, if we create a new non-legacy method we're making the existing method legacy effectively.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ptcon8K2zLxu7H2bRSoULmIInZ5DWYDoVYCIDN7nYUk?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br />Why would we create legacy methods at all? Just create new non-legacy methods.</blockquote></mx-reply>That's what I mean, if we create a new non-legacy method we're making the existing method legacy effectively.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$ptcon8K2zLxu7H2bRSoULmIInZ5DWYDoVYCIDN7nYUk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708190198,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$-xpbFpfo2SXI_a9PKXt-szWScucoE5ucy9oW6lKv-rA"},
{"content":{"body":"That would happen regardless of how many methods we're adding though","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$-xpbFpfo2SXI_a9PKXt-szWScucoE5ucy9oW6lKv-rA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708231950,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$wmhmWrPD2_i6s7-brEljkOoeGfpDrlgwhr3pRp5y29Y"},
{"content":{"body":"Oh I see. I don't personally think that's a great idea, since the existing functions are pretty messy.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$wmhmWrPD2_i6s7-brEljkOoeGfpDrlgwhr3pRp5y29Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708268274,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$spll3siKxajG9XW9AzxS4u83DCTZSvoYx5RRB5coFyM"},
{"content":{"body":"> <@noamr:matrix.org> That would happen regardless of how many methods we're adding though\n\nWell it depends, if we could make insertAdjacentHTML behave better that would be less new ones right?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$wmhmWrPD2_i6s7-brEljkOoeGfpDrlgwhr3pRp5y29Y?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br />That would happen regardless of how many methods we're adding though</blockquote></mx-reply>Well it depends, if we could make insertAdjacentHTML behave better that would be less new ones right?","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$wmhmWrPD2_i6s7-brEljkOoeGfpDrlgwhr3pRp5y29Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708271417,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$WnZwqHQ4lCSWZsp4iwezatYS3gGRO20HGoaes-2MVA0"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Oh I see. I don't personally think that's a great idea, since the existing functions are pretty messy.\n\nYeah that is fair, it might be that it just isn't doable.\n\nJust think it's worth considering and maybe noting that as a deliberate decision ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$spll3siKxajG9XW9AzxS4u83DCTZSvoYx5RRB5coFyM?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br />Oh I see. I don't personally think that's a great idea, since the existing functions are pretty messy.</blockquote></mx-reply><p>Yeah that is fair, it might be that it just isn't doable.</p>\n<p>Just think it's worth considering and maybe noting that as a deliberate decision</p>","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$spll3siKxajG9XW9AzxS4u83DCTZSvoYx5RRB5coFyM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708318726,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$Xt9niN2jUuKP9FOFKb1oZsMvRyoeARYeMVfG9Onxkcg"},
{"content":{"body":"There's a lot of discussio nabout this in https://github.com/whatwg/html/issues/10122","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$Xt9niN2jUuKP9FOFKb1oZsMvRyoeARYeMVfG9Onxkcg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708415270,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$9eK-qJgCJLTUbFlsEtEIQHlg6xObEYndu_r0qLWHBp0"},
{"content":{"body":"(insertAdjacentHTML is the only thing that's being \"deprecated\", as innerHTML is already kind of deprecated by setHTML and setHTMLUnsafe)","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$9eK-qJgCJLTUbFlsEtEIQHlg6xObEYndu_r0qLWHBp0"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708439070,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$GlKKGLUm1VhovF7suBRmjm3tDD5NnpenntqyZusqj4I"},
{"content":{"body":"> <@lwarlow:igalia.com> Is it also worth considering stuff like https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/srcdoc that can't be sanitized yet.\n> \n> There's also https://w3c.github.io/editing/docs/execCommand/#the-inserthtml-command which can do a partial replacement.\n\nAnd I guess execCommand is already the wild west.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$lxGe72qbB4ZWghMR3LWW-BBVUDwXdq5Aqjded6N3jtE?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">@lwarlow:igalia.com</a><br /><p>Is it also worth considering stuff like https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/srcdoc that can't be sanitized yet.</p>\n<p>There's also https://w3c.github.io/editing/docs/execCommand/#the-inserthtml-command which can do a partial replacement.</p></blockquote></mx-reply>And I guess execCommand is already the wild west.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$lxGe72qbB4ZWghMR3LWW-BBVUDwXdq5Aqjded6N3jtE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708472193,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$myQ53J8ANssMwEks3bYMieCxk30VLCfWKkb1-1Jqhng"},
{"content":{"body":"execCommand hooks into createContextualFragment","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$myQ53J8ANssMwEks3bYMieCxk30VLCfWKkb1-1Jqhng"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708494474,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Wn-QN4qT81eg1uM64UGpSPN8tkw1OStyLl_2OMm2etA"},
{"content":{"body":"which I guess is also *kind of* deprecated by setHTML","format":"org.matrix.custom.html","formatted_body":"which I guess is also <em>kind of</em> deprecated by setHTML","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$Wn-QN4qT81eg1uM64UGpSPN8tkw1OStyLl_2OMm2etA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708546370,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$SkSJ13Hc1ICbOvqf5Qo3e7eGda2KXZPxy4wdfpFKGJw"},
{"content":{"body":"> <@noamr:matrix.org> execCommand hooks into createContextualFragment\n\nSpec wise yes but that's quite wrong iirc. It definitely causes an issue with trusted types as specced.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Wn-QN4qT81eg1uM64UGpSPN8tkw1OStyLl_2OMm2etA?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br />execCommand hooks into createContextualFragment</blockquote></mx-reply>Spec wise yes but that's quite wrong iirc. It definitely causes an issue with trusted types as specced.","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":false,"m.in_reply_to":{"event_id":"$Wn-QN4qT81eg1uM64UGpSPN8tkw1OStyLl_2OMm2etA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708564939,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$I_oCV98LWjiU7N_tEDuCstdsxiWDqxZUOFcKsSXCipg"},
{"content":{"body":"It'll be similar regardless I guess ","m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$I_oCV98LWjiU7N_tEDuCstdsxiWDqxZUOFcKsSXCipg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708607514,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$8fkj58puOFWl30B55nQlS5Yn_PO1FsrGP3jmp9e2pBQ"},
{"content":{"body":"I guess having multiple methods with different APIs *feels* like it might get messy again, and might feel messy for developers in terms of discovery and linting. ","format":"org.matrix.custom.html","formatted_body":"I guess having multiple methods with different APIs <em>feels</em> like it might get messy again, and might feel messy for developers in terms of discovery and linting.","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$8fkj58puOFWl30B55nQlS5Yn_PO1FsrGP3jmp9e2pBQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708648257,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$tDPqPmHaYM3tA9MXH8eIxBUqsAHbfBSiIZeEenaSONI"},
{"content":{"body":"They're built in a way where they all receive the same options dictionary for sanitation etc. so it *should* be OK, but I'm ambivalent about whether it feels nicer","format":"org.matrix.custom.html","formatted_body":"They're built in a way where they all receive the same options dictionary for sanitation etc. so it <em>should</em> be OK, but I'm ambivalent about whether it feels nicer","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$tDPqPmHaYM3tA9MXH8eIxBUqsAHbfBSiIZeEenaSONI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708721256,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$1vtYxnQnBEtRCSzq0S1rP_g0xa024ZPY3rzrn6sstQY"},
{"content":{"body":"It is nice that for the simple case we don't have to create a dictionary in terms of overhead","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$1vtYxnQnBEtRCSzq0S1rP_g0xa024ZPY3rzrn6sstQY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758708811386,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$RE9qh-gRwOtDKsaYqdW1J6Pu_D5RZQbpqZALEXYM5Fg"},
{"content":{"body":"OTOH devs mostly dislike catch-alls like `splice` and `reduce` and the 4-method version is a bit like those","format":"org.matrix.custom.html","formatted_body":"OTOH devs mostly dislike catch-alls like <code>splice</code> and <code>reduce</code> and the 4-method version is a bit like those","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$RE9qh-gRwOtDKsaYqdW1J6Pu_D5RZQbpqZALEXYM5Fg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758714451827,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$AQ2qxvFES372Zb92mtRDPPjIZ8DiABkvEPlRfbHkF3o"},
{"content":{"body":"btw it might end up being 20 methods:\n(prepend/append/before/after/replace) * (stream/set) * (safe/unsafe)\n\nsetHTML\nhtmlBefore\nhtmlAfter\nappendHTML\nprependHTML\nstreamHTML\nstreamHTMLBefore\nstreamHTMLAfter\nappendHTMLStream\nprependHTMLStream\n\n(each with a *Unsafe version)","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$AQ2qxvFES372Zb92mtRDPPjIZ8DiABkvEPlRfbHkF3o"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758714612617,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$U2saOpSolBe69S5HOHuc8-d-cfu34ljFEY_KYGiMT8I"},
{"content":{"body":"Question about streaming HTML parsing and edge cases. Right now, when you parse something like `<table><b><tr><td>aaa</td></tr>bbb</table>ccc` , the parser moves the `<b>` _before_ the table element. (https://html.spec.whatwg.org/multipage/parsing.html#unexpected-markup-in-tables). How would that behave? If the \"table\" is already created, could that cause issues if the parser later on creates another element that is placed before it?","format":"org.matrix.custom.html","formatted_body":"Question about streaming HTML parsing and edge cases. Right now, when you parse something like <code>&lt;table&gt;&lt;b&gt;&lt;tr&gt;&lt;td&gt;aaa&lt;/td&gt;&lt;/tr&gt;bbb&lt;/table&gt;ccc</code> , the parser moves the <code>&lt;b&gt;</code> <em>before</em> the table element. (https://html.spec.whatwg.org/multipage/parsing.html#unexpected-markup-in-tables). How would that behave? If the \"table\" is already created, could that cause issues if the parser later on creates another element that is placed before it?","m.mentions":{},"msgtype":"m.text"},"ts":1758714842238,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$S9eBdtz3VEbCMR9bRnxBEuD0RBV_vnbHME-33YxkUXw"},
{"content":{"body":"I think the more general question is: how much interactivity can we allow with the elements that have been received piece-by-piece over streaming? It seems to me that interacting with the context element (eg. `body`) or the `table` and `b` elements might be rather dangerous, as long as we are uncertain of the resulting tree structure","format":"org.matrix.custom.html","formatted_body":"I think the more general question is: how much interactivity can we allow with the elements that have been received piece-by-piece over streaming? It seems to me that interacting with the context element (eg. <code>body</code>) or the <code>table</code> and <code>b</code> elements might be rather dangerous, as long as we are uncertain of the resulting tree structure","m.mentions":{},"msgtype":"m.text"},"ts":1758714913757,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$WdRzkIPgsG60ra9BCRSGCctl3PNdiSgLr2VKUzbK1sk"},
{"content":{"body":"I don't think 20 methods would be a big deal, but the positional arguments enable use cases that the 20 methods would not, which make me a bit torn. But maybe they can be addressed by multiple method calls instead.","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$U2saOpSolBe69S5HOHuc8-d-cfu34ljFEY_KYGiMT8I"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758715238540,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$snSwxUuBcQ8W6XaXJrLMuInPzl99FH_0zvb5saZm10k"},
{"content":{"body":"We can have additional 4 for splicing a range, with 2 arguments outside the dictionary (but it might not be that necessary/popular)","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$snSwxUuBcQ8W6XaXJrLMuInPzl99FH_0zvb5saZm10k"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758715427152,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$sIFb995I04-96-SyC9Fw3HB9p-D6kRcw54dulEYbmyM"},
{"content":{"body":"you mean if we allow streaming into an element? It would behave like setting `innerHTML` directly (\"fragment-mode\")","format":"org.matrix.custom.html","formatted_body":"you mean if we allow streaming into an element? It would behave like setting <code>innerHTML</code> directly (\"fragment-mode\")","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$S9eBdtz3VEbCMR9bRnxBEuD0RBV_vnbHME-33YxkUXw"}},"msgtype":"m.text"},"ts":1758715616945,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$rB4mlQzb0tMWJTecHP6fHsJnxz1lxpuiNfdlP57x1IU"},
{"content":{"body":"I think in this case it allows <table><b>...</b></table>","m.mentions":{},"msgtype":"m.text"},"ts":1758715630385,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Ddpy_-n1svImmyuuI4j1o5fGNDJKIc35o9xFSN7vGMc"},
{"content":{"body":"... or expose those 4 in `Range`","format":"org.matrix.custom.html","formatted_body":"... or expose those 4 in <code>Range</code>","m.mentions":{},"m.relates_to":{"event_id":"$XzLs58NkII4yDCjTavQrxN2qy2QM59USAXaZQyvLpUU","is_falling_back":true,"m.in_reply_to":{"event_id":"$sIFb995I04-96-SyC9Fw3HB9p-D6kRcw54dulEYbmyM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1758715718092,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$zslZj9DOzW4elzwBWSWnKn6T1MQwN8pWOK4Ckg6uNmI"},
{"content":{"body":"Do you have an idea for how you're going to deal with the stack of open elements and the insertion mode?","m.mentions":{},"msgtype":"m.text"},"ts":1758715830095,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hgOEhKy5jdQ40AUYQQzrOQWZt40KhttPVk7Qt4cC5eA"},
{"content":{"body":"* Do you have an idea for how you're going to deal with the stack of open elements and the insertion point and such?","m.mentions":{},"m.new_content":{"body":"Do you have an idea for how you're going to deal with the stack of open elements and the insertion point and such?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$hgOEhKy5jdQ40AUYQQzrOQWZt40KhttPVk7Qt4cC5eA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1758715840956,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$xoy0OyxYskUNbjF3kVpdEnPA7NlOSINorWYqHSk119I"},
{"content":{"body":"yea, we've prototyped this and it's not so different from how the fragment-mode parser works today, except the tokenizer is fed incrementally","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$hgOEhKy5jdQ40AUYQQzrOQWZt40KhttPVk7Qt4cC5eA"}},"msgtype":"m.text"},"ts":1758715986808,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$RhiGrsv3RJIBw2HVJciJ7Zeq8ndGSR_SMmxrLbkN9Yc"},
{"content":{"body":"(if this was addressed to me about stream-to-element)","m.mentions":{},"msgtype":"m.text"},"ts":1758715998404,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Dq2yXPeXQ8o3eluOfgh12WHTqc64wh1yiWSvVGgY9AA"},
{"content":{"body":"... and the result goes directly to the element and not to an intermediate `DocumentFragment`","format":"org.matrix.custom.html","formatted_body":"... and the result goes directly to the element and not to an intermediate <code>DocumentFragment</code>","m.mentions":{},"msgtype":"m.text"},"ts":1758716024526,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ja_K1ZzHY7kVASH5b_SVBUvGph3n2cPOs2-n_H-NpdE"}
]