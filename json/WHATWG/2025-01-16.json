[
{"content":{"body":"Huh, yeah, that's confusing. I don't know enough about wattsi to debug that.","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nJ9gG7fzuUBFarbgEQe2lb1_2eS0UJYifkJO8866tME"}},"msgtype":"m.text"},"ts":1736986697629,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$D2-6FzvsCMmJdmJy6h5gbtMyTfdqyj7PZ3gGn8rdSok"},
{"content":{"body":"I remember I did test locally when pushing that change and it did work, in fact, running *html-build* `build.sh --remote` on my machine today does generate the proper class and renders fine for me. The issue might be in the building-pipes.","format":"org.matrix.custom.html","formatted_body":"I remember I did test locally when pushing that change and it did work, in fact, running <em>html-build</em> <code>build.sh --remote</code> on my machine today does generate the proper class and renders fine for me. The issue might be in the building-pipes.","m.mentions":{"user_ids":["@tabatkins:matrix.org","@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$D2-6FzvsCMmJdmJy6h5gbtMyTfdqyj7PZ3gGn8rdSok"}},"msgtype":"m.text"},"ts":1736988505539,"senderName":"Kaiido","senderId":"@kaiido:matrix.org","id":"$-_O7jEEoMTlD_OfxShQFEBLJVzo48jayxup313w-ysk"},
{"content":{"body":"Hmmm probably it's because https://github.com/orgs/whatwg/packages?repo_name=html-build doesn't rebuild after Wattsi improvements","m.mentions":{},"msgtype":"m.text"},"ts":1736991714406,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$v3qWJdR3yIM-xkmPZpFah5kt-dpG9QtTFEW88ZYjO7I"},
{"content":{"body":"I thought we had an open issue on that somewhere","m.mentions":{},"msgtype":"m.text"},"ts":1736991719635,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$WUdclt2ufLnEWGf88U7XJvk3d81ef_aXHoEfJH5WrX0"},
{"content":{"body":"I wish I knew Docker well enough to know how this is supposed to work","m.mentions":{},"msgtype":"m.text"},"ts":1736991763578,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$tMk02WCGtOgZvI9APRU1lr8PNEiPkzba77Ilo5tFMb4"},
{"content":{"body":"Like ideally html-build would have some minimum wattsi version in a file (like Node.js package.json or similar) and we could bump that file and that would force a rebuild.","m.mentions":{},"msgtype":"m.text"},"ts":1736991800150,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_bhMSUi7qTereUOe6lfcmm5kx2FWXA6ZelYCCrjuD60"},
{"content":{"body":"But right now the html-build -> wattsi dependency is expressed via https://github.com/whatwg/html-build/blob/main/ci-build/Dockerfile#L28 (`COPY --from=ghcr.io/whatwg/wattsi:latest`) which is good if html-build and Wattsi are both revved frequently but not good in this case.","format":"org.matrix.custom.html","formatted_body":"But right now the html-build -&gt; wattsi dependency is expressed via https://github.com/whatwg/html-build/blob/main/ci-build/Dockerfile#L28 (<code>COPY --from=ghcr.io/whatwg/wattsi:latest</code>) which is good if html-build and Wattsi are both revved frequently but not good in this case.","m.mentions":{},"msgtype":"m.text"},"ts":1736991866087,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7hcGYzqItWEAm5qVy8oRRwqloxF2g7lZ2tH67vSWbLE"},
{"content":{"body":"I believe docker-compose is possibly the relevant tool here but I have not learned it or how to integrate it into our GitHub actions pipeline...","m.mentions":{},"msgtype":"m.text"},"ts":1736991893641,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dVUdWQ3zLryO9COhs79HDyh95KsxL4wbsEz7vBNySSY"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/pull/10737 strictly speaking doesn't have multi-implementer interest","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: https://github.com/whatwg/html/pull/10737 strictly speaking doesn't have multi-implementer interest","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1737014309080,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ens1-NtGba5DWCt-MHmfYJMqFuFI1tS5qfwV2pamtKQ"},
{"content":{"body":"Oh no :(. When someone tells me \"ping, all the boxes are checked\" on a PR that's been open for months, I'm inclined to take them at their word :(","m.mentions":{},"msgtype":"m.text"},"ts":1737014348384,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$-Rtr2HfPNEeUYnRjcrtRqm_-WdMPvIsC-dN1VHsCig8"},
{"content":{"body":"I see now that was a mistake","m.mentions":{},"msgtype":"m.text"},"ts":1737014352765,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$emWB5fRalfbrF64biCt20YZrZKmeN_iFYYkACwxIr3s"},
{"content":{"body":"I think this is the second time this has happened with Mason. I suggest to no longer do that with him.","m.mentions":{},"msgtype":"m.text"},"ts":1737014370498,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pxibBs8BVWzBS8EGdt8UQ-DZ7m1SrPC7iQA5udN0Mr0"},
{"content":{"body":"Ugh wow that box is definitely checked in error, yeah","m.mentions":{},"msgtype":"m.text"},"ts":1737014378341,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Ly7wmT5t8Q-bpFIvIkTCJcmhrq5GlrvTxnJVc6fiJ6A"},
{"content":{"body":"Should we revert?","m.mentions":{},"msgtype":"m.text"},"ts":1737014407811,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9yk4BjMe9JuVCuHLDD4-x6sd4eXns1aque-CGRrVMXU"},
{"content":{"body":"I think it's probably okay, unless Mozilla has some objection to it. Need to think about it a bit more.","m.mentions":{},"msgtype":"m.text"},"ts":1737014450670,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$K_08F5gCiqnLh-_TouTuRQOmzzjI97M7GIUeP7INwjs"},
{"content":{"body":"smaug: zcorpan: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: ^^","m.mentions":{"user_ids":["@smaug:mozilla.org","@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1737014460585,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Zq8AqC5wSsN1Ukx76dVlmhPGDN-j_SNnma3KgMH71io"},
{"content":{"body":"One related thing to microtasks/promises... I encountered a few times the issue that if you `resolve` a promise from platform code, the promise reactions would only run at the end of the task. This is confusing if you have a task that does multiple things that might have reactions or callbacks, like the rendering task. I thought to generalize it where HTML would have its own `resolve` that resolves the promise inside a \"run/cleanup script\" scope and specs should be calling that instead of the WebIDL resolve. Wonder what smaug / Domenic think about this","format":"org.matrix.custom.html","formatted_body":"One related thing to microtasks/promises... I encountered a few times the issue that if you <code>resolve</code> a promise from platform code, the promise reactions would only run at the end of the task. This is confusing if you have a task that does multiple things that might have reactions or callbacks, like the rendering task. I thought to generalize it where HTML would have its own <code>resolve</code> that resolves the promise inside a \"run/cleanup script\" scope and specs should be calling that instead of the WebIDL resolve. Wonder what <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> / <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> think about this","m.mentions":{"user_ids":["@smaug:mozilla.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1737016166462,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$MrhZoTeabwR0MYadrJ5VuDgmu0fI7uG_r45QIoCslRo"},
{"content":{"body":"Kinda like what I had to do in step #5 of https://html.spec.whatwg.org/multipage/browsing-the-web.html#reveal","m.mentions":{},"msgtype":"m.text"},"ts":1737016251884,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$udasvlkI_NtdSRPVVSBcFJHGAJAsEL5da7c5abDejYA"},
{"content":{"body":"From the perspective of how they were introduced for mutation observers, it would seem bad if you don't delay them until the end of rendering, as the reactions might incur new things that require rendering.","m.mentions":{},"msgtype":"m.text"},"ts":1737016419563,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$DPjpEHg5sfLrC_8c4MqyeiEhSt5PC0rvfxljZQSJ418"},
{"content":{"body":"but we already do that when firing events","m.mentions":{},"msgtype":"m.text"},"ts":1737016461184,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ZywcSeYjP9dCR5fzQahM5_Z16G2KFqj1M5s6kzNieHs"},
{"content":{"body":"also each rAF callback clears the microtask queue and might incur new things that require rendering etc...","m.mentions":{},"msgtype":"m.text"},"ts":1737016562501,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$pNYPUzObAug3aoBZ5snuXxsQBQ7kCLrJEXkWL-yza2c"},
{"content":{"body":"Well yes, but that's why we moved from mutation events to mutation observers. So to then suggest that promises should work like events feels a bit backwards.","m.mentions":{},"msgtype":"m.text"},"ts":1737016611901,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wCNmt9R0_jmT8SzH2o_zEok6SBuio_t1RS_9E-CNx54"},
{"content":{"body":"If you don't want promise-timing, don't use a promise.","m.mentions":{},"msgtype":"m.text"},"ts":1737016652721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sK92J8HnyjM95yAehF_jFIAIOwpscOwP7qIZm0pZ0sY"},
{"content":{"body":"Sometimes promises are there because of ergonomics, not because of anything to do with timing","m.mentions":{},"msgtype":"m.text"},"ts":1737016833373,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$K2UDdKC0RWv157DQ3GUNB2ZNZOX7HYdgBCAhqTQoKzc"},
{"content":{"body":"To be clear, I don't think this would change anything existing in the platform. Apart from view transitions, all the other `resolve` calls are one-per-task","format":"org.matrix.custom.html","formatted_body":"To be clear, I don't think this would change anything existing in the platform. Apart from view transitions, all the other <code>resolve</code> calls are one-per-task","m.mentions":{},"msgtype":"m.text"},"ts":1737016888993,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$yvINDhu-I82iUdSDsNknduYlnO9cDVfsimnf-5nrSno"},
{"content":{"body":"(AFAICT)","m.mentions":{},"msgtype":"m.text"},"ts":1737016910469,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$VAtI9sqXL87g8NmjujmU5jgfMmUNRnHGuVH2KWKLqfU"},
{"content":{"body":"How would it not change the timing of promises already on the queue?","m.mentions":{},"msgtype":"m.text"},"ts":1737016911682,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$X-X4ugkItxI5nDkwvzPLfMQbANCtzu7tZaQC4zPcW-Q"},
{"content":{"body":"There should not be any promises in the queue, only platform microtasks such as mutation observers. But it doesn't matter, because in 100% of uses of resolve today this would be a noop","m.mentions":{},"msgtype":"m.text"},"ts":1737017041415,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$js85JawtxTgTHmUOtGpUnDxx7IF8ptqFOX6WcD643QE"},
{"content":{"body":"... because today all the uses of `resolve` *only* resolve during the task, so at the end of the resolve you'd get the event loop's microtask checkpoint","format":"org.matrix.custom.html","formatted_body":"... because today all the uses of <code>resolve</code> <em>only</em> resolve during the task, so at the end of the resolve you'd get the event loop's microtask checkpoint","m.mentions":{},"msgtype":"m.text"},"ts":1737017095844,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$TlW3cqwpORmzCTYpmRQH-ZFJ37xuzJO0u1bRWH7EqeQ"},
{"content":{"body":"I don't understand that sentence. You can only call resolve during a task.","m.mentions":{},"msgtype":"m.text"},"ts":1737017541546,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wHM0eTFO7lhg5y37YpaGcTbBd5VXCwVV0W4lAjsHIO4"},
{"content":{"body":"yes, but no spec does that in practice","m.mentions":{},"msgtype":"m.text"},"ts":1737017551847,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$j80X61Q4l1-PrVJxEPMljYtfh1KSHMmzPihGAmWMacE"},
{"content":{"body":"They do?","m.mentions":{},"msgtype":"m.text"},"ts":1737017570868,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$i_Q7p0EonhuKMxteskyW-WXGQNO5pH45nRRvbvuoi_s"},
{"content":{"body":"I mean, no spec calls resolve and then does something else that calls user code in the same task, AFAICT","m.mentions":{},"msgtype":"m.text"},"ts":1737017573324,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$3CbMf1DfOf8x1Vg_do5YZUsFzaFlw4O1RHsQUZvtAF4"},
{"content":{"body":"it's usually \"queue a task to resolve\"","m.mentions":{},"msgtype":"m.text"},"ts":1737017591318,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$O7pOvI685QsVKMqYII-WadWdxzo_EEExy_qxOu3PgKc"},
{"content":{"body":"I think there's plenty of examples of events or callbacks and promises all being handled in one sweep.","m.mentions":{},"msgtype":"m.text"},"ts":1737017608497,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hzuDL4neB8ChP7Did4WvVYpdwGGE86QLUT9lbc3XISI"},
{"content":{"body":"As they should.","m.mentions":{},"msgtype":"m.text"},"ts":1737017614935,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ujjU5Tlk5Z2jKyvY6haXVRtbMtu7sqLOYRFMSNnWvTw"},
{"content":{"body":"not sure about it, but will go through the specs, maybe my assumption here is wrong","m.mentions":{},"msgtype":"m.text"},"ts":1737017664103,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$B4pPK4gL-mWps7Bmhfq4gL49WOansYT8V8wH30vQK1g"},
{"content":{"body":"There's also plenty of cases where a promise is rejected immediately. Which happens during whatever call did the wrong thing according to IDL.","m.mentions":{},"msgtype":"m.text"},"ts":1737017711813,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$324akuBKVKqBfy8MOS_4kq75KA26-NEF2bzLGYH71RE"},
{"content":{"body":"sure","m.mentions":{},"msgtype":"m.text"},"ts":1737017721968,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$p1RC3_aqo81Eu0ZbNszple17h7vsBbBBeRr37lVHvvo"},
{"content":{"body":"ok, perhaps this is not going to work. Thanks for the clarification","m.mentions":{},"msgtype":"m.text"},"ts":1737017819354,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$40H1fyMiUmHaac8NHIspS8mN9llDPoV6ke6hxo8QeWg"},
{"content":{"body":"The cases I am concerned about which are adjacent to (or the same as?) the ones Noam Rosenthal is discussing are the ones where promises and event firing are next to each other, and thus the existence of event handlers can change the ordering. See https://html.spec.whatwg.org/#note-suppress-microtasks-during-navigation-events .\n\nIn such cases we can manually add something to the stack to *prevent* promises from immediately resolving when the events are fired. That seems OK as it makes the promises more delayed.\n\nIt's only happened a couple of times so far so we haven't needed to do it more generally.","format":"org.matrix.custom.html","formatted_body":"<p>The cases I am concerned about which are adjacent to (or the same as?) the ones <a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a> is discussing are the ones where promises and event firing are next to each other, and thus the existence of event handlers can change the ordering. See https://html.spec.whatwg.org/#note-suppress-microtasks-during-navigation-events .</p>\n<p>In such cases we can manually add something to the stack to <em>prevent</em> promises from immediately resolving when the events are fired. That seems OK as it makes the promises more delayed.</p>\n<p>It's only happened a couple of times so far so we haven't needed to do it more generally.</p>\n","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1737018792329,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kpLTzq2AWJ-bW5k4YxTuHt2Hcg9s6tY-GK1mkyDixLo"},
{"content":{"body":"I think Noam's case is basically the same as mine.","m.mentions":{},"msgtype":"m.text"},"ts":1737018867068,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$aFBxOCFY0oAVWHd_6LSOkgU6aaCqievy6WrnX6OxPLE"},
{"content":{"body":"I don't really know how to generalize it though; just wrapping the resolve in run/cleanup a script wouldn't work. You need wrap both the \"fire an event\" and the \"resolve\".","m.mentions":{},"msgtype":"m.text"},"ts":1737018901267,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$uGF9jteL5f-cR0qESNBLFc41FXDBi2tItDM2h1AOfkQ"},
{"content":{"body":"Yea these timing gotchas are not trivial at all to an outside spec to deal with. But not sure what the right solution is","m.mentions":{},"msgtype":"m.text"},"ts":1737019301819,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$8HcQ3GGsulk8T_RwoTzdw-nmCduKae5xHCYYrq1p6LQ"},
{"content":{"body":"Domenic: can't you fire the event and then resolve?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: can't you fire the event and then resolve?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1737021309913,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$90S0n9Tgvpdqggix2rymvAYfIZKqwGFhY2V_ZVHHbZY"},
{"content":{"body":"Given both WebKit and Mozilla track standards positions in public GitHub issues, do you think it is worth adding some tooling to PRs to scrape the API and check that A) an issue is supplied linking to the standards position of those respective vendors and B) that issue has the correct label on it, marking the vendor as supportive?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$K_08F5gCiqnLh-_TouTuRQOmzzjI97M7GIUeP7INwjs"}},"msgtype":"m.text"},"ts":1737033701141,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$Z5GRv26bEEkkMyHKGwgQjRcFELzCN9GBMAYvuVgzHLk"},
{"content":{"body":"It could be a CI check that fails a PR unless it is able to successfully confirm that each vendor is indeed supportive, reducing the human error involved.","m.mentions":{},"msgtype":"m.text"},"ts":1737033752710,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$MsRRkb568pJL-8Jeyr9O0UJSx3h7B8UFfnuBdXOGOoU"},
{"content":{"body":"> <@keithamus:matrix.org> It could be a CI check that fails a PR unless it is able to successfully confirm that each vendor is indeed supportive, reducing the human error involved.\n\nOne issue with this is sometimes a spec PR is to match implementations and in that case you wouldn't want to raise the issues. But possibly that could be handled with labels?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$MsRRkb568pJL-8Jeyr9O0UJSx3h7B8UFfnuBdXOGOoU?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@keithamus:matrix.org\">@keithamus:matrix.org</a><br />It could be a CI check that fails a PR unless it is able to successfully confirm that each vendor is indeed supportive, reducing the human error involved.</blockquote></mx-reply>One issue with this is sometimes a spec PR is to match implementations and in that case you wouldn't want to raise the issues. But possibly that could be handled with labels?","m.relates_to":{"m.in_reply_to":{"event_id":"$MsRRkb568pJL-8Jeyr9O0UJSx3h7B8UFfnuBdXOGOoU"}},"msgtype":"m.text"},"ts":1737034006247,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$Vw57IiKF1uu-RXA4JWpQRmGkybDCs2D6q5qt1hGLKbI"},
{"content":{"body":"I imagine the option to skip those checks could be added via a checkbox saying \"standards positions aren't necessary for this\", which would pass the check but could provide a signal to the editors merging that this _hasn't_ gone through standards positions","format":"org.matrix.custom.html","formatted_body":"I imagine the option to skip those checks could be added via a checkbox saying \"standards positions aren't necessary for this\", which would pass the check but could provide a signal to the editors merging that this <em>hasn't</em> gone through standards positions","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Vw57IiKF1uu-RXA4JWpQRmGkybDCs2D6q5qt1hGLKbI"}},"msgtype":"m.text"},"ts":1737034094023,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$mWDmSU82WBN5py3-uCY9_fLSQcWjZ9oU2S6IhWrp-aM"},
{"content":{"body":"keithamus: I wouldn't be opposed to that being available, but as I clarified at some point WHATWG uses \"implementer interest\" which is quite informal (though you do need to actually have someone say it). Going through standards-positions to obtain that is fine, but it's not required.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: I wouldn't be opposed to that being available, but as I clarified at some point WHATWG uses \"implementer interest\" which is quite informal (though you do need to actually have someone say it). Going through standards-positions to obtain that is fine, but it's not required.","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1737039025978,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$H1aW4aIsU8gDfmdbsPGqvYt2GarseS8FNBUbCPBnnEw"},
{"content":{"body":"that makes sense. Perhaps it would be too much then.","m.mentions":{},"msgtype":"m.text"},"ts":1737039076065,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$AtOCNADsB67lqT-lwT3_S_YIbjRWs493gverUhxi9TA"},
{"content":{"body":"Is there any documentation or issues to read about how moveBefore interacts with stuff like mutation observer?","msgtype":"m.text"},"ts":1737044034926,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$TwSWDIr5-j7Cjb_qYECeSxO6sQyX2S0rltF4Za8lOvs"},
{"content":{"body":"https://github.com/whatwg/html/pull/10904/files moves a bunch of text and then makes some tweaks. Is there a good way to highlight the changes? I guess copy-and-paste it all and do a manual diff?","m.mentions":{},"msgtype":"m.text"},"ts":1737044741988,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$FrU8jkeJs4CL_0nF-neRhpIL1mvO6Osr-KOznQQJh6A"}
]