[
{"content":{"body":"I’d appreciate if anybody can make a bit of free time to do a technical review of the current contents of https://pr27547.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\n\nSpecifically, if you see anything listed there erroneously, or if you see anything _not_ listed that _should be_ included.\n\nThe diff is at https://github.com/mdn/content/pull/27547/files and the change is intended to align with the existing content at https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API#web_workers_concepts_and_usage\n\n(And yeah, those are two different articles and the content is basically getting duplicated across those two articles, and maybe ideally it should be in one place instead, rather than being duplicated. And personally have never reviewed the existing content in the Web_Workers_API article (that the change in this current PR is aligning with), so I also don’t know if it’s accurate and complete — but if it’s not, then any fixes we make to the PR can later be ported to the Web_Workers_API too.)\n","format":"org.matrix.custom.html","formatted_body":"<p>I’d appreciate if anybody can make a bit of free time to do a technical review of the current contents of https://pr27547.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers</p>\n<p>Specifically, if you see anything listed there erroneously, or if you see anything <em>not</em> listed that <em>should be</em> included.</p>\n<p>The diff is at https://github.com/mdn/content/pull/27547/files and the change is intended to align with the existing content at https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API#web_workers_concepts_and_usage</p>\n<p>(And yeah, those are two different articles and the content is basically getting duplicated across those two articles, and maybe ideally it should be in one place instead, rather than being duplicated. And personally have never reviewed the existing content in the Web_Workers_API article (that the change in this current PR is aligning with), so I also don’t know if it’s accurate and complete — but if it’s not, then any fixes we make to the PR can later be ported to the Web_Workers_API too.)</p>\n","msgtype":"m.text"},"ts":1687763411531,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$nq-svb2YKdt8ROyYBaZUS6CZ5PnQu-P_MSxbAXIIE_Y"},
{"content":{"body":"annevk: is WebKit still planning on marking https://github.com/WebKit/standards-positions/issues/197 as positive?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: is WebKit still planning on marking https://github.com/WebKit/standards-positions/issues/197 as positive?","msgtype":"m.text"},"ts":1687790889813,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$G-JhfUMmvkZpjbIyCHoHrL3cz3z04PzCTTeNPqsdMQg"},
{"content":{"body":"Why can't dictionary types be nullable when used as function parameters? https://webidl.spec.whatwg.org/#idl-nullable-type:~:text=Note%3A%20Although%20dictionary%20types%20can%20in%20general%20be%20nullable%2C%20they%20cannot%20when%20used%20as%20the%20type%20of%20an%20operation%20argument%20or%20a%20dictionary%20member","msgtype":"m.text"},"ts":1687791421410,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$omJNJdvb8bVQRqllulsiZNBcNVc-vY_8SAby1q8xrs8"},
{"content":{"body":"Dominic Farolino: dictionaries are always given, a nullable dictionary would be quite weird","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: dictionaries are always given, a nullable dictionary would be quite weird","msgtype":"m.text"},"ts":1687791503866,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$RJF8wuzTx-5sSIFf6H--0eWLHCa3lsbCLtUkMIzT334"}
]