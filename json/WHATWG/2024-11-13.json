[
{"content":{"body":"Possibly Private/Local Network Access changes this? Been a while since I looked.","m.mentions":{},"m.relates_to":{"event_id":"$I84H4aOKkl7p9LpR5S_1DVWqjrkmCsZCqS9cjAY8PTg","is_falling_back":true,"m.in_reply_to":{"event_id":"$OGAQTjE1McZlHZ6SQ6IDBkAIBN7-Dn1KjuG4cDf0ldA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731479768951,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sQ9hOB-hBnZwiVo5QR0Y_zXny16soZsqAQEHKqvVs3E"},
{"content":{"body":"Yes, there are special preflights for PNA: https://developer.chrome.com/blog/private-network-access-preflight#preflight_requests","m.mentions":{},"m.relates_to":{"event_id":"$I84H4aOKkl7p9LpR5S_1DVWqjrkmCsZCqS9cjAY8PTg","is_falling_back":true,"m.in_reply_to":{"event_id":"$sQ9hOB-hBnZwiVo5QR0Y_zXny16soZsqAQEHKqvVs3E"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1731494265891,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$76OSMWUZ1e5MEhfo6nzc1Jzpf6XIan_MNXMf3QyYFsE"},
{"content":{"body":"annevk: Safari blocks http localhost iframes inside https pages. Chrome and Firefox don't. Given that localhost should be treated as secure, this seems like a bug. Am I missing something?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Safari blocks http localhost iframes inside https pages. Chrome and Firefox don't. Given that localhost should be treated as secure, this seems like a bug. Am I missing something?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1731495568706,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$5ruyhN2EJ8qUYQecNhuP1w1U-MD8bjJqYwgKC_Er4lg"},
{"content":{"body":"https://bumpy-repeated-cover.glitch.me/ - quick test page, but you'll need to run a local server on 8080 that contains `index2.html`","format":"org.matrix.custom.html","formatted_body":"https://bumpy-repeated-cover.glitch.me/ - quick test page, but you'll need to run a local server on 8080 that contains <code>index2.html</code>","m.mentions":{},"msgtype":"m.text"},"ts":1731495658730,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$JvMUu8S6wGgfcaUUPHZ8Sb7IWuaZzVvGD-ol8cfJUgg"},
{"content":{"body":"Jake Archibald: we currently don't enforce that localhost is localhost, that's something we need to fix still","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: we currently don't enforce that localhost is localhost, that's something we need to fix still","m.mentions":{"user_ids":["@jakea:matrix.org"]},"msgtype":"m.text"},"ts":1731496173702,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ay0nXLt9SZcjBE97hf769Gqyjeazk9nve_DM2reZCG0"},
{"content":{"body":"annevk: Oh, so is `127.0.0.1` likely to work?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Oh, so is <code>127.0.0.1</code> likely to work?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1731496236598,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$Hylcxj3PUpiQAi274rmd2tCB_wRrBTVlg3_vemqaurU"},
{"content":{"body":"ah, no, that doesn't work either","m.mentions":{},"msgtype":"m.text"},"ts":1731496350797,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$bdfsoUV24xeoMrpwTUHwtvsC8r1My7by-S-Pg1B0GlM"},
{"content":{"body":"Hmm, that does seem like something that might be easier to fix. Are you willing to file a bug for just that? (There already are some for localhost.)","m.mentions":{},"msgtype":"m.text"},"ts":1731497644527,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$V2nUf2mg-4DD2zeTF3iMEphnFdWYsXr_u9oFB5DlIOg"},
{"content":{"body":"From https://bugs.webkit.org/show_bug.cgi?id=171934#c96, it seems like it's a difference of opinion with webappsec. I added a couple of comments about our use-case","m.mentions":{},"msgtype":"m.text"},"ts":1731498736412,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$Cpv-2TH--durNtnllB4AyEtJ1aRJmIapMFuswOPddck"},
{"content":{"body":"Oh right. I had forgotten about P/LNA. Makes sense. Although I wonder if P/LNA still contains localhost protection.","m.mentions":{},"msgtype":"m.text"},"ts":1731504672756,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$b5EwSJutYxACZicHz2hLVxKhXs6aOxXHWFbb0XN1t9A"},
{"content":{"body":"So smaug annevk what do you we think about stage 3 for atomic move? I'm sure there are small things that will fall out during review, but I think generally we agree on the shape of the processing model?","format":"org.matrix.custom.html","formatted_body":"So <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> what do you we think about stage 3 for atomic move? I'm sure there are small things that will fall out during review, but I think generally we agree on the shape of the processing model?","m.mentions":{"user_ids":["@smaug:mozilla.org","@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1731508683514,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$nxVG7laz82EwZINKK7ClIxVAr2Nb249Sm8_Ond1D5fI"},
{"content":{"body":"I think it needs another round of reviews, given that there were some rather obvious issues still couple of days ago.","m.mentions":{},"msgtype":"m.text"},"ts":1731509159143,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$3XfrAGAhLiRfLFnJiXnzm1rHGlOdssATZAoOUdB5CEk"},
{"content":{"body":"smaug: One of the comments is waiting on your feedback I believe","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: One of the comments is waiting on your feedback I believe","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1731509210003,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$lc5FmFdTqbpVoZKodgxFWxz6m8RL9xZkfPHiSInI-uE"},
{"content":{"body":"(range updates)","m.mentions":{},"msgtype":"m.text"},"ts":1731509218315,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$cBBAXuFC1qKUmagAJGUyxR0QFXxNk2aqfjxTcNiA6GQ"},
{"content":{"body":"sure, the range/selection part. But things like not handling Shadowroot or having wrong assumptions how ranges work were a bit surprising","m.mentions":{},"msgtype":"m.text"},"ts":1731509280264,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$TphYsFe2g6q2-1wGJb1TrKr3i7kB9zM-iJh0dZ9mY4Y"},
{"content":{"body":"How do you feel about https://github.com/whatwg/dom/pull/1307#discussion_r1838738862","m.mentions":{},"msgtype":"m.text"},"ts":1731509296896,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$AmiQMqs9-ztVlY1kxDkTCFT2INb2uJxgiuP293K7gbw"},
{"content":{"body":"Right, I don't think stage 3 is \"all bugs are fixed\" heh","m.mentions":{},"msgtype":"m.text"},"ts":1731509306125,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$pp51jkzFJZu9GROqR4NW5L0mEJGEktAwmZNRIQo_ciY"},
{"content":{"body":"...which is why I'd prefer another round of reviews","m.mentions":{},"msgtype":"m.text"},"ts":1731509306257,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$jp4haAk9cDQidR9cArSkCsXNHF9EGQWcEsxPesaVMZ0"},
{"content":{"body":"OK, I'd appreciate your thoughts on https://github.com/whatwg/dom/pull/1307#discussion_r1838738862: keeping the container preservation approach except for when we cross the shadow boundary","m.mentions":{},"msgtype":"m.text"},"ts":1731509341084,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$jEZygpEV7-XKGSDZeZFc5Us0KUDhV7QlRssfn7du2a4"},
{"content":{"body":"Or do you feel pretty set on not doing nothing special for Ranges during moveBefore() (treating them like remove + insert instead)","m.mentions":{},"msgtype":"m.text"},"ts":1731509378663,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$qzv2poSe35PrEIlvLr852eVjOoJTKYjFiuqW1uchh8U"},
{"content":{"body":"The downside of that is that we never preserve selection if the selection range's endpoints move around","m.mentions":{},"msgtype":"m.text"},"ts":1731509396757,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$WSxCkYlzoHGWzpUrQe4zhInNmTvHDbyAt-T-CAJTLOo"},
{"content":{"body":"Not the end of the world, but \"better\" selection preservation feels nice","m.mentions":{},"msgtype":"m.text"},"ts":1731509415989,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$j4ZvBHUU_ztblLp9MruH5hDzvQ0RaLPhknkgkoeGF4s"},
{"content":{"body":"That is a bit tricky one. In case of implementation supporting multiple ranges in selection, or using live ranges for highlights, some ranges might survive the move, and some wouldn't","m.mentions":{},"msgtype":"m.text"},"ts":1731509472848,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$UYjUeos5cy8Ew8HtCIk1tynOgMgB0vOylPI6Dc10DqE"},
{"content":{"body":"it might lead to a it surprising results","m.mentions":{},"msgtype":"m.text"},"ts":1731509479814,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$V_fAKnWzNm_N0-3Jbfz5Hbs6wRyiSD30jjHcVYlZdq8"},
{"content":{"body":" * it might lead to a bit surprising results","m.mentions":{},"m.new_content":{"body":"it might lead to a bit surprising results","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$V_fAKnWzNm_N0-3Jbfz5Hbs6wRyiSD30jjHcVYlZdq8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731509590740,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$NTGk8D93GNWcMcRBcMlzUQ3_RxRIlOgASs6g6Z23UUw"},
{"content":{"body":"Do any implementations support multiple ranges that contribute to a selection? I don't think that's allowed: https://w3c.github.io/selection-api/#responding-to-dom-mutations:~:text=Each%20selection%20can%20be%20associated%20with%20a%20single%20range","m.mentions":{},"msgtype":"m.text"},"ts":1731509627094,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$Vw74V8_wowpGZQnXSM7UhdFBZFzoQuvRwFcCUOQpgKQ"},
{"content":{"body":"Gecko supports multiple ranges","m.mentions":{},"msgtype":"m.text"},"ts":1731509639058,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$6Pg3ed_EnH0icpQoxnZl4MOgXCh7wSOHwQZnANzKHU8"},
{"content":{"body":"(and other implementers have every now and then said it would be nice to support)","m.mentions":{},"msgtype":"m.text"},"ts":1731509669192,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$0Yq8BCmJL80vvxEDItEt012RjJEgZUkybiw4xCd01L0"},
{"content":{"body":"Hmm, that feels like something we could deal with it if were to become standardized. Until then, I guess it's an implementation-specific thing to work around. I'd hate to make a decision about moveBefore() because of non-standardized impl quirks that we can't think through because we don't have a spec.","m.mentions":{},"msgtype":"m.text"},"ts":1731509745154,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$Wuzpw5wmw7T5YHJESaTVmLUGpMG5QgFyGcGx2nvIqIo"},
{"content":{"body":"But hightlight anyhow supports multiple ranges","m.mentions":{},"msgtype":"m.text"},"ts":1731509748317,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$VL7Vo1pMG4G-QFi4-PV-yTPpuTuW6BZmTT7RcCqJmd8"},
{"content":{"body":"So, whether or not selection supports multiple ranges isn't too relevant here.","m.mentions":{},"msgtype":"m.text"},"ts":1731509776414,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$mECE_OuffA4TabLXHL6ltWwhtOI2BsAmnFeVLVZ2cUs"},
{"content":{"body":"OK so your concern is that if we only preserved selection when it is entirely inside a moved container node, then some ranges in a highlight will get reset, and others will survive, right?","m.mentions":{},"msgtype":"m.text"},"ts":1731509977717,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$r5YJ1mcUg-sQJ6rawAzi7gR1G2FXZAx5xCWLCZo14M8"},
{"content":{"body":" * OK so your concern is that if we only preserved selection when it is entirely inside a moved container node, then some ranges in a highlight will get reset (in the same way they do during `remove()`), and others will completely survive, right?","format":"org.matrix.custom.html","formatted_body":" * OK so your concern is that if we only preserved selection when it is entirely inside a moved container node, then some ranges in a highlight will get reset (in the same way they do during <code>remove()</code>), and others will completely survive, right?","m.mentions":{},"m.new_content":{"body":"OK so your concern is that if we only preserved selection when it is entirely inside a moved container node, then some ranges in a highlight will get reset (in the same way they do during `remove()`), and others will completely survive, right?","format":"org.matrix.custom.html","formatted_body":"OK so your concern is that if we only preserved selection when it is entirely inside a moved container node, then some ranges in a highlight will get reset (in the same way they do during <code>remove()</code>), and others will completely survive, right?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$r5YJ1mcUg-sQJ6rawAzi7gR1G2FXZAx5xCWLCZo14M8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731510014448,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$QJWjA-xivrRDATPrtKw73Ws4TcuYURI6ucesBwfyk-I"},
{"content":{"body":"Right. And that would be quite surprising, I think.","m.mentions":{},"msgtype":"m.text"},"ts":1731510017939,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Ct8GBhzjkyKowHOgOGOQO3uJ2L6F86KHtCxy7dE5130"},
{"content":{"body":"I.e., that would be surprising","m.mentions":{},"msgtype":"m.text"},"ts":1731510022103,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$2MXc61lWyAIkLJGFYtsCBYUwxfXoYTHRAup6RPaqHvM"},
{"content":{"body":"How about the more aggressive preservation tactic where we *always* try and preserve the range (by allowing its start/end containers to move via moveBefore) — unless the start/end get inverted, in which case we collapse the range","format":"org.matrix.custom.html","formatted_body":"How about the more aggressive preservation tactic where we <em>always</em> try and preserve the range (by allowing its start/end containers to move via moveBefore) — unless the start/end get inverted, in which case we collapse the range","m.mentions":{},"msgtype":"m.text"},"ts":1731510073139,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$qWSvoWKeUViHYHVN7qzSMM00hS_HqBKSRbY6EUUyF2A"},
{"content":{"body":"I think that could still lead to some cases where some ranges survive and others get collapsed, but it feels a little more predictable since you know your start and end containers, maybe?","m.mentions":{},"msgtype":"m.text"},"ts":1731510100519,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$4e380kD5Ak7J38g7UcUzHBEsB0ETOcMNGS5vkWOrFvg"},
{"content":{"body":"(and start/end being inverted -> resulting in collapse feels pretty expected)","m.mentions":{},"msgtype":"m.text"},"ts":1731510121019,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$_8SFwszD1h4sSCENJgyxJPPWWzzzL1dwkKHaVGAjmrA"},
{"content":{"body":"or if we move something across light/shadow trees...","m.mentions":{},"msgtype":"m.text"},"ts":1731510124513,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$w6AmsSPP9GSv1rGz7qkJocfSTAPYMYb_ppYljss-0ZE"},
{"content":{"body":"yeah... it does get complicated","m.mentions":{},"msgtype":"m.text"},"ts":1731510152373,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$XF_G4CZuIL5uhiAdkWHzX9ZYKrqkVamk7KMhMKBcFcg"},
{"content":{"body":"We could punt on this (don't handle Ranges specially during moveBefore()) until maybe users decide they care enough...","m.mentions":{},"msgtype":"m.text"},"ts":1731510205540,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$s8CwGJqQNmOqUd4kHXxzuQcDy6H26IYrw58WVMQ3x10"},
{"content":{"body":"That might be easier for now. And if needed, add later some options to moveBefore. ","m.mentions":{},"msgtype":"m.text"},"ts":1731510350902,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$2TiYqFHy18f06eCs3lNnx8DiGAK8OiWg9ot9_r0Kk2s"},
{"content":{"body":"I'd like to (& framework authors agree) avoid a bag of options for the API in the future if possible. So if we decide to change this in the future, I'd really try and shoot for just changing the behavior inside this API straight-up","m.mentions":{},"msgtype":"m.text"},"ts":1731510454591,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$rRmbUf1ZbfZ7toRu3Lzss3jZrAfwmYeLcfJXHtBr87k"},
{"content":{"body":"That might be doable. One might be able to also provide some helper APIs for Range to move it around from one subtree to another (or in moveBefore case, re-initialize the old state after move).","m.mentions":{},"msgtype":"m.text"},"ts":1731511076917,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$LkSQs4wXTEi7D-ZDzGrNsuJ2x5D1BMTTlHwV5MdnQb4"},
{"content":{"body":"We generally preserve element-specific state (frame window, focus, animation, dialog/fullscreen/popover), I think it makes sense to not automatically preserve state that depends on multiple elements, such as ranges, and design something separate for that, not necessarily as a node-specific API","m.mentions":{},"msgtype":"m.text"},"ts":1731511681222,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$DcOdDO98ZlIbd4YK01RBwpStaGHsM2BbtxX0W5-k8UU"},
{"content":{"body":" * We generally preserve element-specific state (frame window, focus, animation, dialog/fullscreen/popover), I think it makes sense to not automatically preserve state that depends on multiple elements, such as ranges, and design something separate for that later on if the need arises, not necessarily as a node-specific API","m.mentions":{},"m.new_content":{"body":"We generally preserve element-specific state (frame window, focus, animation, dialog/fullscreen/popover), I think it makes sense to not automatically preserve state that depends on multiple elements, such as ranges, and design something separate for that later on if the need arises, not necessarily as a node-specific API","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DcOdDO98ZlIbd4YK01RBwpStaGHsM2BbtxX0W5-k8UU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731511696443,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$5dwWnqfeLII3qgfiYB0Ad1K-_Jwj5PQJbn1kcB2X-F4"},
{"content":{"body":"FWIW, I'm out this week (see Bluesky). I also have the feeling we're still not quite on the same wavelength with regards to when something is eligible for Stage 3. I think that warrants some further meta discussion as it would be good if we were all on the same page.","m.mentions":{},"msgtype":"m.text"},"ts":1731511725721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$XcXkSArjTSbV8gPYlIf4K2aQyi63N8UWUNOLtYN_TjM"},
{"content":{"body":"> <@noamr:matrix.org> We generally preserve element-specific state (frame window, focus, animation, dialog/fullscreen/popover), I think it makes sense to not automatically preserve state that depends on multiple elements, such as ranges, and design something separate for that later on if the need arises, not necessarily as a node-specific API\n\n... though there is user experience value in doing our best to preserve selection, so I support revisiting this in the future ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DcOdDO98ZlIbd4YK01RBwpStaGHsM2BbtxX0W5-k8UU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br>We generally preserve element-specific state (frame window, focus, animation, dialog/fullscreen/popover), I think it makes sense to not automatically preserve state that depends on multiple elements, such as ranges, and design something separate for that later on if the need arises, not necessarily as a node-specific API</blockquote></mx-reply>... though there is user experience value in doing our best to preserve selection, so I support revisiting this in the future","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$DcOdDO98ZlIbd4YK01RBwpStaGHsM2BbtxX0W5-k8UU"}},"msgtype":"m.text"},"ts":1731511793605,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$R4iHFCTyd0ZTCZBnsnpoO0OIQsJSe2zgzcULd447EYM"}
]