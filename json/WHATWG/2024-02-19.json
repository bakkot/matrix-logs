[
{"content":{"body":"> <@domenicdenicola:matrix.org> Maybe it's picking UTC dates?\n\nYeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the wrong date, it was actually already the 16th in UTC time too\n\nAnyway, I resorted to just putting `Date: now` in the `.bs` source, and that made Bikeshed stop putting the wrong, previous-day date","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KVtud8PIQOm6lcQ08okwLtzkASC-WgIuIiviFs4xE84?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Maybe it&#39;s picking UTC dates?</blockquote></mx-reply><p>Yeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the wrong date, it was actually already the 16th in UTC time too</p>\n<p>Anyway, I resorted to just putting <code>Date: now</code> in the <code>.bs</code> source, and that made Bikeshed stop putting the wrong, previous-day date</p>\n","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$KVtud8PIQOm6lcQ08okwLtzkASC-WgIuIiviFs4xE84"}},"msgtype":"m.text"},"ts":1708319134620,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$yrsTiP0Z30HbAOH1IdTv1E29lgvOdT4F70C_L_iNOYw"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Maybe it's picking UTC dates?\n\n * Yeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the 15th as the date, it was actually already the 16th in UTC time too\n\nAnyway, I resorted to just putting `Date: now` in the `.bs` source, and that made Bikeshed stop putting the wrong, previous-day date","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KVtud8PIQOm6lcQ08okwLtzkASC-WgIuIiviFs4xE84?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Maybe it's picking UTC dates?</blockquote></mx-reply> * <p>Yeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the 15th as the date, it was actually already the 16th in UTC time too</p>\n<p>Anyway, I resorted to just putting <code>Date: now</code> in the <code>.bs</code> source, and that made Bikeshed stop putting the wrong, previous-day date</p>\n","m.mentions":{},"m.new_content":{"body":"Yeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the 15th as the date, it was actually already the 16th in UTC time too\n\nAnyway, I resorted to just putting `Date: now` in the `.bs` source, and that made Bikeshed stop putting the wrong, previous-day date","format":"org.matrix.custom.html","formatted_body":"<p>Yeah I had thought about that — but at the time of day when I had been trying it on the 16th locally and Bikeshed was using the 15th as the date, it was actually already the 16th in UTC time too</p>\n<p>Anyway, I resorted to just putting <code>Date: now</code> in the <code>.bs</code> source, and that made Bikeshed stop putting the wrong, previous-day date</p>\n","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$yrsTiP0Z30HbAOH1IdTv1E29lgvOdT4F70C_L_iNOYw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1708319277586,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ZqQ9vHMHIfoDmpCaS_yFM3ASvKORHbCz1N-LZVHL8k4"},
{"content":{"body":"TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\nAnd when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\nBut when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so they may be some bug in that.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n<p>And when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n<p>But when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so they may be some bug in that.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"ts":1708326068479,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XrOhs4i_VvLZTwPgNSYYUyCwlMDL7A09sWtpiGactGA"},
{"content":{"body":" * TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\nAnd when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\nBut when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n<p>And when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n<p>But when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{},"m.new_content":{"body":"TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\nAnd when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\nBut when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n<p>And when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n<p>But when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$XrOhs4i_VvLZTwPgNSYYUyCwlMDL7A09sWtpiGactGA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1708326117529,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pHiVLOEuiieO8hule3ocgjmYAUpXui9zNFXFsiJ7JGc"},
{"content":{"body":" * TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\nAnd when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\nBut when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n<p>And when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n<p>But when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{},"m.new_content":{"body":"TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\nAnd when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\nBut when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n<p>And when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n<p>But when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$XrOhs4i_VvLZTwPgNSYYUyCwlMDL7A09sWtpiGactGA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1708326142140,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Q7vDJT-HvPbSjjxATfzhO4dSO5YOXk7WgNB8_AfGrgo"},
{"content":{"body":" * TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where:\n\n- locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\n- and when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\n- but when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where:</p>\n<ul>\n<li>\n<p>locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n</li>\n<li>\n<p>and when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n</li>\n<li>\n<p>but when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n</li>\n</ul>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{},"m.new_content":{"body":"TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where:\n\n- locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n\n- and when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n\n- but when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where:</p>\n<ul>\n<li>\n<p>locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</p>\n</li>\n<li>\n<p>and when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</p>\n</li>\n<li>\n<p>but when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</p>\n</li>\n</ul>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the WebAssembly JavaScript API spec, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$XrOhs4i_VvLZTwPgNSYYUyCwlMDL7A09sWtpiGactGA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1708326719851,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$upjL0VlL12xLZ-A_SjSmtVU_aWF7_aS_0_q0GNyWZwY"},
{"content":{"body":" * TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where:\n\n- locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n- and when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n- but when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the [WebAssembly JavaScript API spec](https://www.w3.org/TR/wasm-js-api-2/), the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where:</p>\n<ul>\n<li>locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</li>\n<li>and when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</li>\n<li>but when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</li>\n</ul>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the <a href=\"https://www.w3.org/TR/wasm-js-api-2/\">WebAssembly JavaScript API spec</a>, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{},"m.new_content":{"body":"TabAtkins: For `bikeshed echidna`, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?\n\nIn particular, for jobs running user GitHub Actions?\n\nI have a reproducible case where:\n\n- locally (in my macOS environment) when I use `bikeshed echidna … --u … --p …` to generate and send the tar file to the W3C service, it succeeds as expected.\n- and when I use `bikeshed echidna … --just-tar` under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.\n- but when I use `bikeshed echidna … --just-tar` under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.\n\nAnd troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.\n\nFWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.\n\nAnyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system `tar` command, rather than using `bikeshed echidna`.\n\nAnd FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with `bikeshed echidna` submission is the [WebAssembly JavaScript API spec](https://www.w3.org/TR/wasm-js-api-2/), the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>: For <code>bikeshed echidna</code>, are you aware of any (previous) cases where the W3C service has been unable to extract the generated tar file?</p>\n<p>In particular, for jobs running user GitHub Actions?</p>\n<p>I have a reproducible case where:</p>\n<ul>\n<li>locally (in my macOS environment) when I use <code>bikeshed echidna … --u … --p …</code> to generate and send the tar file to the W3C service, it succeeds as expected.</li>\n<li>and when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions with one particular Bikeshed spec source file, publishing it with the W3C service also succeeds as expected.</li>\n<li>but when I use <code>bikeshed echidna … --just-tar</code> under GitHub Actions in exactly the same way with another particular Bikeshed spec source file, publishing it with the W3C service also fails unexpectedly.</li>\n</ul>\n<p>And troubleshooting it with help from Denis, he says it’s failing in that case because the W3C service is unable to extract the tar file successfully.</p>\n<p>FWIW, Denis says the service uses https://github.com/mafintosh/tar-stream to parse/extract tar files — so there may be some bug in that library.</p>\n<p>Anyway, I worked around it by switching the GitHub Actions build for the spec(s) to use the system <code>tar</code> command, rather than using <code>bikeshed echidna</code>.</p>\n<p>And FWIW https://github.com/WebAssembly/spec/pull/1730 is where this fun has been happening — and the spec that the failure was happening for with <code>bikeshed echidna</code> submission is the <a href=\"https://www.w3.org/TR/wasm-js-api-2/\">WebAssembly JavaScript API spec</a>, the Bikeshed source for which is at https://github.com/WebAssembly/spec/blob/main/document/js-api/index.bs</p>\n","m.mentions":{"user_ids":["@tabatkins:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$XrOhs4i_VvLZTwPgNSYYUyCwlMDL7A09sWtpiGactGA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1708326820821,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xrxBAq85SfSteLm2Sx99DDkAvTfQDIVHdRvtQ8SaSfg"}
]