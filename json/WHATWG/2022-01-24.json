[
{"content":{"body":"\"of a glacier (hist.)\"","msgtype":"m.text"},"ts":1643013072838,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$38ssoPd0Qz-6T-CJBYnePsNrJ84FPmer7GxmLm1ZWoQ"},
{"content":{"body":"looking at https://github.com/mdn/content/issues/12370","msgtype":"m.text"},"ts":1643018537159,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$2axr5Ii871RDYnZsZskAJuGhbRjFJkrE75518awjAkE"},
{"content":{"body":"calling `backgroundFetch.fetch()` for a `chrome-extension` URL throws with:\n> TypeError: Failed to execute 'fetch' on 'BackgroundFetchManager': Refused to fetch 'chrome-extension://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/stream' because only the https: scheme is allowed, or http: for loopback IPs.","format":"org.matrix.custom.html","formatted_body":"<p>calling <code>backgroundFetch.fetch()</code> for a <code>chrome-extension</code> URL throws with:</p>\n<blockquote>\n<p>TypeError: Failed to execute 'fetch' on 'BackgroundFetchManager': Refused to fetch 'chrome-extension://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/stream' because only the https: scheme is allowed, or http: for loopback IPs.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1643018557821,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$6c4I-cfOGdGAspzWrFL69GMLAQTHTIhNfWXp02LV29E"},
{"content":{"body":"‚Ä¶but where, in which spec, is that requirement defined?","msgtype":"m.text"},"ts":1643018571229,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Axyl-tly053aG8W4Qpntmf9Xt_0UdAJPv9XnS4QGkjQ"},
{"content":{"body":"it seems like it‚Äôs probably because it requires a secure context, but I don‚Äôt see anywhere in https://wicg.github.io/background-fetch/ that actually states it needs to be a secure context","msgtype":"m.text"},"ts":1643018582619,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$MZbhmB3l0kQCmP5mxAuZo9HqoWp_uC62K84dsv4vusw"},
{"content":{"body":"and I don‚Äôt see the `SecureContext` WebIDL attribute anywhere","format":"org.matrix.custom.html","formatted_body":"and I don‚Äôt see the <code>SecureContext</code> WebIDL attribute anywhere","msgtype":"m.text"},"ts":1643018610289,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$48MXYBL3HYv6MTwdo_n8o58CMbsw0xubdDfZRonS38g"},
{"content":{"body":"I don't know about whether `BackgroundFetch` adds further requirements, but regular fetch only supports a few schemes: https://fetch.spec.whatwg.org/#scheme-fetch","format":"org.matrix.custom.html","formatted_body":"I don't know about whether <code>BackgroundFetch</code> adds further requirements, but regular fetch only supports a few schemes: https://fetch.spec.whatwg.org/#scheme-fetch","msgtype":"m.text"},"ts":1643019537191,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$YWajzommnU2BR57_5MwjBZ9688AQlAoymVQR1Ga7PVM"},
{"content":{"body":"Luca Casonato: I assume https://github.com/whatwg/spec-factory/pull/35#issuecomment-1019990419 looks okay?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: I assume https://github.com/whatwg/spec-factory/pull/35#issuecomment-1019990419 looks okay?","msgtype":"m.text"},"ts":1643023255399,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$uVpUx8gy-n1VvFXB_YRG-6YdlY3WeXnjyyVZIwMV8OI"},
{"content":{"body":"> <@andreubotella:mozilla.org> I don't know about whether `BackgroundFetch` adds further requirements, but regular fetch only supports a few schemes: https://fetch.spec.whatwg.org/#scheme-fetch\n\nTrue but regular fetch at least does support http schemes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$YWajzommnU2BR57_5MwjBZ9688AQlAoymVQR1Ga7PVM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">@andreubotella:mozilla.org</a><br>I don't know about whether <code>BackgroundFetch</code> adds further requirements, but regular fetch only supports a few schemes: https://fetch.spec.whatwg.org/#scheme-fetch</blockquote></mx-reply>True but regular fetch at least does support http schemes","m.relates_to":{"m.in_reply_to":{"event_id":"$YWajzommnU2BR57_5MwjBZ9688AQlAoymVQR1Ga7PVM"}},"msgtype":"m.text"},"ts":1643023597768,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$hCMyKk4Zt2V99iORpuTYgE3fxka6dy-zgWq9K4TImcM"},
{"content":{"body":"‚Ä¶but that `because only the https: scheme is allowed, or http: for loopback IPs` message seems to make clear that `BackgroundFetch` is even disallowing http ‚Äî so it‚Äôs enforcing some requirement beyond regular fetch","format":"org.matrix.custom.html","formatted_body":"‚Ä¶but that <code>because only the https: scheme is allowed, or http: for loopback IPs</code> message seems to make clear that <code>BackgroundFetch</code> is even disallowing http ‚Äî so it‚Äôs enforcing some requirement beyond regular fetch","msgtype":"m.text"},"ts":1643023684872,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$e3OKrBavY91FtNNa_to8gZc6WfpUflyzlLDywzOXJPc"},
{"content":{"body":"the problem is that the Background Fetch spec itself doesn‚Äôt seem to state any such requirement","msgtype":"m.text"},"ts":1643023728550,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$SoSIgOLm59Ot_zpV2f_L2TguourQ673aK3pvGXVuYz4"},
{"content":{"body":"I guess it‚Äôs possible that Chrome is imposing some additional requirement beyond what‚Äôs in the spec","msgtype":"m.text"},"ts":1643023767893,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$K4YuQVqwr2tZHs83pfwKSGUWmoDAmjlKua0Xpt9oyEI"},
{"content":{"body":"sideshowbarker: did you try data: URLs? If that doesn't work it is, but otherwise it would follow from Mixed Content","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: did you try data: URLs? If that doesn't work it is, but otherwise it would follow from Mixed Content","msgtype":"m.text"},"ts":1643024974485,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$knH8IROUgrVXfDzuk-66iKbK5Fk4Z79IWZSH9C3SEdQ"},
{"content":{"body":"haven‚Äôt tried that yet but will","msgtype":"m.text"},"ts":1643025001285,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$pCA6XHZDDNALOtOJxPFMEzzKYDq0DScaWfePj0hdrwc"},
{"content":{"body":"but now I wonder, does Mixed Content say anything about fetches for unknown URL schemes from secure contexts?","msgtype":"m.text"},"ts":1643025224565,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$i-g9Cx5XqiyQ34-xjMKw7UlLXUUZnDYkEFbiXhJDn6g"},
{"content":{"body":"I mean, I don‚Äôt expect it says anything about the `chrome-extension` scheme specifically, but maybe something more general","format":"org.matrix.custom.html","formatted_body":"I mean, I don‚Äôt expect it says anything about the <code>chrome-extension</code> scheme specifically, but maybe something more general","msgtype":"m.text"},"ts":1643025265486,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$FAu6bw97uhJL4m-NC3yqfxAtcePqHayaxusmx5kqYGg"},
{"content":{"body":"I guess I should just look myself and see","msgtype":"m.text"},"ts":1643025279199,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$qM-ymJsSKM6aQOo3n9tZFTaKOo6DGVylkrac9kkP9dc"},
{"content":{"body":"hmm I guess it comes down to `chrome-extension` not being explicitly defined as ‚Äúpotentially trustworthy‚Äù https://w3c.github.io/webappsec-secure-contexts/#potentially-trustworthy-origin","format":"org.matrix.custom.html","formatted_body":"hmm I guess it comes down to <code>chrome-extension</code> not being explicitly defined as ‚Äúpotentially trustworthy‚Äù https://w3c.github.io/webappsec-secure-contexts/#potentially-trustworthy-origin","msgtype":"m.text"},"ts":1643025418163,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$TGhpWJtYilcOznOX8GkSUdmZycvbfZFCEl-Fg5lqoRk"},
{"content":{"body":"sideshowbarker: well Fetch only allows https://fetch.spec.whatwg.org/#fetch-scheme","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: well Fetch only allows https://fetch.spec.whatwg.org/#fetch-scheme","msgtype":"m.text"},"ts":1643031063658,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$YhoYNl1TxyprAX2oTxO2KuHeOMiLDijx-0kMWp4Dqf4"},
{"content":{"body":"yeah but if that‚Äôs the restriction the browser were enforcing in this case, it seems like the browser would be logging an error message which says that, rather than the different error message it is actually logging in this case","msgtype":"m.text"},"ts":1643031182022,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$6Hs8TBzQFtCxPtCA0rBbLeySaGV-rmUH7-VoKKBs5Q0"},
{"content":{"body":" * yeah but if that‚Äôs the restriction the browser were enforcing in this case, it seems like the browser would be logging an error message which says that, rather than the different error message it is actually logging in this case","m.new_content":{"body":"yeah but if that‚Äôs the restriction the browser were enforcing in this case, it seems like the browser would be logging an error message which says that, rather than the different error message it is actually logging in this case","msgtype":"m.text"},"m.relates_to":{"event_id":"$6Hs8TBzQFtCxPtCA0rBbLeySaGV-rmUH7-VoKKBs5Q0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1643031202968,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Yy5wAwH0RfepDQUv0T_3eBjGwIiIr46LtOtcg33LiPk"},
{"content":{"body":"> <@annevk:mozilla.org> Luca Casonato: I assume https://github.com/whatwg/spec-factory/pull/35#issuecomment-1019990419 looks okay?\n\nLGTM!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$uVpUx8gy-n1VvFXB_YRG-6YdlY3WeXnjyyVZIwMV8OI?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">Luca Casonato</a>: I assume https://github.com/whatwg/spec-factory/pull/35#issuecomment-1019990419 looks okay?</blockquote></mx-reply>LGTM!","m.relates_to":{"m.in_reply_to":{"event_id":"$uVpUx8gy-n1VvFXB_YRG-6YdlY3WeXnjyyVZIwMV8OI"}},"msgtype":"m.text"},"ts":1643031263595,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$mpz1SnUT1_vuboi4NvJPpOttOLD8lr-YvfomlvRwI9g"},
{"content":{"body":"Thanks for getting this landed :-)","msgtype":"m.text"},"ts":1643031283764,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$cM06wM9Lvl5jlGp1vKL6BoJXc_VMJ4oCahtd16QcZ94"},
{"content":{"body":"Ms2ger üíâüíâ: maybe file a bug against Deno/Node.js for Exposed=* changes too? https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ms2ger:igalia.com\">Ms2ger üíâüíâ</a>: maybe file a bug against Deno/Node.js for Exposed=* changes too? https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests","msgtype":"m.text"},"ts":1643034407361,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ntIgL3-2oqZgL5hEdN6Q8sG0hNK0JFn0vABP7WpYh38"},
{"content":{"body":"Oh, that's new, is it? Will do","msgtype":"m.text"},"ts":1643034427749,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$n0i0RmwMa6LEGN0TxmWe0NunCqSZVYDXIlQgXilGu8w"},
{"content":{"body":"For Deno, link to https://github.com/denoland/deno/issues/13239, since it's gonna take a while to sort that out","msgtype":"m.text"},"ts":1643034466021,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$QgNCh0Sm3G31QoGtOH2TPm7yepfFczzcx2F8c3O6kZk"},
{"content":{"body":"Thanks! (And yeah, today-ish new.)","msgtype":"m.text"},"ts":1643034532713,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$tolNeWpZtrMuPR3c2G9rJcqOvQnQbSAZDp3d_zFZ-qU"},
{"content":{"body":"(cue Ms2ger üíâüíâ insisting on me switching to the compilers team at Igalia ü§£)","format":"org.matrix.custom.html","formatted_body":"(cue <a href=\"https://matrix.to/#/@ms2ger:igalia.com\">Ms2ger üíâüíâ</a> insisting on me switching to the compilers team at Igalia ü§£)","msgtype":"m.text"},"ts":1643034532733,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$QVJNhANt6-C7FckzfQRCsuHoSHR02Zg_f50gVy9A_aE"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1643034540104,"senderName":"Ms2ger üíâüíâ","senderId":"@ms2ger:igalia.com","id":"$PSlMWZSLZbzaMBoTe9cBoHg1zcOqi4wqrygoMyr9D6g"},
{"content":{"body":"üëã Trying to reason a bit about the expectation around globals and WebIDL interfaces. \n\nI've [been looking at some of the JS engine tests we wrote for or streams](https://bugzilla.mozilla.org/show_bug.cgi?id=1750634#c1). One of which tries to assert that  if you invoke another global's ReadableStream.prototype.getReader with a stream in your current realm, you get a reader back that is in the *other global*, not your current one (tested using `instanceof`) \n\nRight now, Safari and Chrome disagree: Safari has the reader in a different global, Chrome has it in the current global. Firefox disagrees with itself depending on which streams implementation I test: JS-implemented streams agrees with Safari, DOM+WebIDL implemented streams agrees with Chrome. ","format":"org.matrix.custom.html","formatted_body":"<p>üëã Trying to reason a bit about the expectation around globals and WebIDL interfaces.</p>\n<p>I've <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1750634#c1\">been looking at some of the JS engine tests we wrote for or streams</a>. One of which tries to assert that  if you invoke another global's ReadableStream.prototype.getReader with a stream in your current realm, you get a reader back that is in the <em>other global</em>, not your current one (tested using <code>instanceof</code>)</p>\n<p>Right now, Safari and Chrome disagree: Safari has the reader in a different global, Chrome has it in the current global. Firefox disagrees with itself depending on which streams implementation I test: JS-implemented streams agrees with Safari, DOM+WebIDL implemented streams agrees with Chrome.</p>\n","msgtype":"m.text"},"ts":1643045054123,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$gdAmi6A6pvujFBZyXdXBch-9v1o1J8-H_siqMyUcbvk"},
{"content":{"body":"So, in this exact case, the question is one of: Which realm is implied by [Step 1 of AcquireReadableStreamDefaultReader](https://streams.spec.whatwg.org/#acquire-readable-stream-reader), \"let reader be a new ReadableStreamDefaultReader\" ? [new](https://webidl.spec.whatwg.org/#new) links to the WebIDL spec which asks a specification to specify a realm... ","format":"org.matrix.custom.html","formatted_body":"So, in this exact case, the question is one of: Which realm is implied by <a href=\"https://streams.spec.whatwg.org/#acquire-readable-stream-reader\">Step 1 of AcquireReadableStreamDefaultReader</a>, &quot;let reader be a new ReadableStreamDefaultReader&quot; ? <a href=\"https://webidl.spec.whatwg.org/#new\">new</a> links to the WebIDL spec which asks a specification to specify a realm...","msgtype":"m.text"},"ts":1643045157857,"senderName":"mgaudet","senderId":"@mgaudet:mozilla.org","id":"$A5wYggh43OkcCahHJUUVhXMhYDvEyLzTXjKdcjvQ8Js"}
]