[
{"content":{"body":"oki thanks!","msgtype":"m.text"},"ts":1625625001992,"senderName":"sujaldev","senderId":"@sujaldev:matrix.org","id":"$7T9g2AC5L_N4kBTWkoARVJB49FDtpKXGnO9P2jTGAnk"},
{"content":{"body":"wonderful, https://drafts.csswg.org/ completely broken again for the Nth time","msgtype":"m.text"},"ts":1625626101534,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$myw13rTkhM3CgamFKvtgOSuMXvTAeDWZLxZbQjAhdzM"},
{"content":{"body":"after this having happened so frequently, it’s baffling that there’s not a watchdog or something set up","msgtype":"m.text"},"ts":1625626231658,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Kv4FU9i6pqzKP5SR1yqNhQStVs-EpN195nJ9yRHXHfI"},
{"content":{"body":"goes off to raise an https://github.com/w3c/csswg-drafts issue about it for at least the 3rd time","msgtype":"m.emote"},"ts":1625626267966,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$OWxPHwZEvbIWwFY0ejp1w1AZHAQInqcPnnVon4Wp5hA"},
{"content":{"body":"I have asked this before, I think. Is there some documentation for a good workflow for making spec changes? Including the usual github pr creation but also what checks people do to find if there are relevant WPTs etc.","msgtype":"m.text"},"ts":1625661045316,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$gaSYFYq3VevTcXm5Lf1dJra0Xa3kKjkJGAFeNL9179A"},
{"content":{"body":"Admittedly, you are probably not exactly the intended audience but this might help https://wpc.guide/bug-guide/ ","msgtype":"m.text"},"ts":1625667531496,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$h2wLMGC_9ER3H7sgbJ9u7XQh0YpSffrQraBExhudymU"},
{"content":{"body":"but TBH, I often just look at similar patches and the follow-up bugs (e.g., for WPT) they led to","msgtype":"m.text"},"ts":1625667560967,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$Oq5gsGROGESPoXCCGJyHv4F4U6fm_8njnTpa6TRUSsE"},
{"content":{"body":"annevk: domenic suggested you might have an opinion on https://github.com/bakkot/proposal-arraybuffer-base64/issues/5. the question under consideration (as I see it; he is welcome to correct) is, must any new base64-decoding API in the web platform decline to validate the padding bytes by default (and hence match the behavior of `atob`), or can it be stricter by default in pursuit of making it harder to accidentally fall into security issues arising from the (I think fairly natural) assumption that base64 encoding is one-to-one?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: domenic suggested you might have an opinion on https://github.com/bakkot/proposal-arraybuffer-base64/issues/5. the question under consideration (as I see it; he is welcome to correct) is, must any new base64-decoding API in the web platform decline to validate the padding bytes by default (and hence match the behavior of <code>atob</code>), or can it be stricter by default in pursuit of making it harder to accidentally fall into security issues arising from the (I think fairly natural) assumption that base64 encoding is one-to-one?","msgtype":"m.text"},"ts":1625676550242,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$EAafbZb-li6qmxgY5wAWoE1q8LQG33SeSM_z1KPUE9M"},
{"content":{"body":"also interested in opinions from others","msgtype":"m.text"},"ts":1625676566961,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$58WewtTeo-Nb2bRBGnT12Odhn0dWazYbt-Z45396UNM"},
{"content":{"body":"Domenic seems to feel strongly that it is more important to match `atob`, I feel fairly strongly that it is more important to make the less-secure behavior opt-in, so I am hoping we can get other opinions on the matter","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> seems to feel strongly that it is more important to match <code>atob</code>, I feel fairly strongly that it is more important to make the less-secure behavior opt-in, so I am hoping we can get other opinions on the matter","msgtype":"m.text"},"ts":1625676638867,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3iPM1ns8PnG7BDGwUenx_lAqdajrZ87vQIVv7nArrH0"},
{"content":{"body":"Matching data: URLs and other base64 encoding behaviors in the platform (e.g. SRI digests) is more important than atob","msgtype":"m.text"},"ts":1625676931995,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$8fdMXWk5tDoBl5Z4LLg8A_92-ixIHIAyhsgSRDoMj4g"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1625677290064,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$l5YOGr17aD3K5o2XJN67lFccYphPnM4SCYjijjoz3xg"},
{"content":{"body":"I understand that position even less; how many people are ever manually decoding a data: url or an SRI digest?","msgtype":"m.text"},"ts":1625677400300,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bGSm40X3oj4Hn72E8kej9Tk5-1ugzC2BFTDuO1Oy2kY"},
{"content":{"body":"(CSP, incidentally, requires padding, so the web platform is not uniform here)","msgtype":"m.text"},"ts":1625677455944,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2hFAL2lrsbOwhV00l9jXp5a9R0H22Nuxsjjw8AeG-es"},
{"content":{"body":"actually SRI does too, as far as I can tell from the spec","msgtype":"m.text"},"ts":1625677542564,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Lfg-VoxP5Jh2KO_wRib68rhF0WK04VDxNAvyEULhnB8"},
{"content":{"body":"Yeah the spec doesn't seem to match browsers there","msgtype":"m.text"},"ts":1625677619207,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_cJaodMvrf24WRuKPHeiW51iMUNvxZF-JBRWOfKVYq4"},
{"content":{"body":"I can't find base64 decoding in the CSP/SRI specs, only the implementations","msgtype":"m.text"},"ts":1625677691105,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2HG9BVasiuYE5Ag5yGjgQlxksm4JZh0eT5uiNrSAA5s"},
{"content":{"body":"that's because they don't aren't specified in terms of decoding; they compare by string equality, and assume that base64 encoding is 1-to-1, since everyone makes this assumption.","msgtype":"m.text"},"ts":1625677793468,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XcIqt1Pn6ekwnhcWk9qaKvHPWsC2Op5XNY6vmKs9gUM"},
{"content":{"body":" * that's because they aren't specified in terms of decoding; they compare by string equality, and assume that base64 encoding is 1-to-1, since everyone makes this assumption.","m.new_content":{"body":"that's because they aren't specified in terms of decoding; they compare by string equality, and assume that base64 encoding is 1-to-1, since everyone makes this assumption.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XcIqt1Pn6ekwnhcWk9qaKvHPWsC2Op5XNY6vmKs9gUM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1625677798979,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$enGbPDwuWjaPJgdHgKFWzPl4_FGWGc4O9UwyZsExbiA"},
{"content":{"body":" * that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 encoding is 1-to-1, since everyone makes this assumption.","m.new_content":{"body":"that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 encoding is 1-to-1, since everyone makes this assumption.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XcIqt1Pn6ekwnhcWk9qaKvHPWsC2Op5XNY6vmKs9gUM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1625677810192,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IEi0Di1C3XJr783O5_DOUimBDSJ67gWZo5aFZdVnHec"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Yeah the spec doesn't seem to match browsers there\n\nBrowsers disagree; Firefox follows the spec, Chrome does not","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$_cJaodMvrf24WRuKPHeiW51iMUNvxZF-JBRWOfKVYq4?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Yeah the spec doesn&#39;t seem to match browsers there</blockquote></mx-reply>Browsers disagree; Firefox follows the spec, Chrome does not","m.relates_to":{"m.in_reply_to":{"event_id":"$_cJaodMvrf24WRuKPHeiW51iMUNvxZF-JBRWOfKVYq4"}},"msgtype":"m.text"},"ts":1625678248705,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XT6-Z9mKpKHQyse_x2h478wqZRfRedkpIzSdgmUB8KU"},
{"content":{"body":" * that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 decoding is 1-to-1, since everyone makes this assumption.","m.new_content":{"body":"that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 decoding is 1-to-1, since everyone makes this assumption.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XcIqt1Pn6ekwnhcWk9qaKvHPWsC2Op5XNY6vmKs9gUM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1625678568863,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aiwNLw0m96R8lp0rA1Z_FUKGvBBRioq5NnZv-LiF3F4"},
{"content":{"body":"> that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 decoding is 1-to-1, since everyone makes this assumption.\n\ni find this footgun argument to be pretty persuasive. fwiw i feel more radicalized than before from reading those tweets, and feel like if anything we should try to change the web default","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>that's because they aren't specified in terms of decoding; they compare base64-encoded strings by string equality, and assume that base64 decoding is 1-to-1, since everyone makes this assumption.</p>\n</blockquote>\n<p>i find this footgun argument to be pretty persuasive. fwiw i feel more radicalized than before from reading those tweets, and feel like if anything we should try to change the web default</p>\n","msgtype":"m.text"},"ts":1625679580062,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2ikAa6TrCPvJqaqXhAWCeoYiDxJHiPWhrxDKArNEZ4s"},
{"content":{"body":"Domenic: r? https://github.com/whatwg/whatwg.org/pull/371","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: r? https://github.com/whatwg/whatwg.org/pull/371","msgtype":"m.text"},"ts":1625680371999,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$yVPqLX4uBrm2Kjsvcpf05EoGm5PPHcDJPDgdxNrzZMo"},
{"content":{"body":"Domenic: also https://github.com/whatwg/html-build/pull/265","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: also https://github.com/whatwg/html-build/pull/265","msgtype":"m.text"},"ts":1625680706784,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$64LBKL7owwakdk3xkmUCm6uF-thj20eQxEv9XHlqjAk"}
]