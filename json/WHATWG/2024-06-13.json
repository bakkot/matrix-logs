[
{"content":{"body":"About https://github.com/mdn/content/pull/34087/files, I guess that behavior is required per the spec?\n\nThat is, specifically this part:\n\n> `<meta>` redirect happens after the page is _completely loaded_, which is after all scripts have executed","format":"org.matrix.custom.html","formatted_body":"<p>About https://github.com/mdn/content/pull/34087/files, I guess that behavior is required per the spec?</p>\n<p>That is, specifically this part:</p>\n<blockquote>\n<p><code>&lt;meta&gt;</code> redirect happens after the page is <em>completely loaded</em>, which is after all scripts have executed</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718246002690,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$cHad45IybWnRvljnbYzcKJ329hFuadiPteZQPUf3H9E"},
{"content":{"body":"See also the related issue at https://github.com/mdn/content/issues/7859","m.mentions":{},"msgtype":"m.text"},"ts":1718246029486,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$HsyRMvL-4bwhJQR_Uq9cQmmQCeUV7cNJ-WMPKqTCSHM"},
{"content":{"body":"As far as I can see from looking just now, none of the loading steps in https://html.spec.whatwg.org/multipage/document-lifecycle.html#document-lifecycle actually reference handling for `meta http-equiv=\"refresh\"` (instead, only handling for the `Refresh` header) — and https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh doesn’t state _when_ in the loading process the _“shared declarative refresh steps”_ must be run _in the `meta http-equiv=\"refresh\"` case_.","format":"org.matrix.custom.html","formatted_body":"As far as I can see from looking just now, none of the loading steps in https://html.spec.whatwg.org/multipage/document-lifecycle.html#document-lifecycle actually reference handling for <code>meta http-equiv=\"refresh\"</code> (instead, only handling for the <code>Refresh</code> header) — and https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh doesn’t state <em>when</em> in the loading process the <em>“shared declarative refresh steps”</em> must be run <em>in the <code>meta http-equiv=\"refresh\"</code> case</em>.","m.mentions":{},"msgtype":"m.text"},"ts":1718246817991,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$-z9VOixAfsJ_dryhTXTgwiyGTseFBivirj26UCzagm0"},
{"content":{"body":"I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between `meta http-equiv=\"refresh\"` and `Refresh` —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":"<p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between <code>meta http-equiv=\"refresh\"</code> and <code>Refresh</code> —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718247116101,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CbW7lLpvox7rgxBk4MF9oyNSyO1ZihTaWccve8GDQDA"},
{"content":{"body":" * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":" * <p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":"<p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CbW7lLpvox7rgxBk4MF9oyNSyO1ZihTaWccve8GDQDA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718247150380,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Zbq52VCVhG_5iQfDfjE-CAoqA_G1Ey8g8eWMEeJdfKg"},
{"content":{"body":" * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two) —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":" * <p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two) —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two) —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":"<p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually does define the relationship between the two) —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CbW7lLpvox7rgxBk4MF9oyNSyO1ZihTaWccve8GDQDA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718247187761,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$HxhMPHs4txOKU3PUUD3dV9uf1QYjuJgo3hxr65oN7wA"},
{"content":{"body":" * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually *does* describe the relationship between the two) —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":" * <p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually <em>does</em> describe the relationship between the two) —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv=\"refresh\"` should be handled in the loading process in the same way that the `Refresh` header is handled — but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually *does* describe the relationship between the two) —\n\n> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).","format":"org.matrix.custom.html","formatted_body":"<p>I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that <code>meta http-equiv=\"refresh\"</code> should be handled in the loading process in the same way that the <code>Refresh</code> header is handled —&nbsp;but that doesn’t seem to be at all what the spec actually says (instead, it’d sort of be backward with the respect to how the spec actually <em>does</em> describe the relationship between the two) —</p>\n<blockquote>\n<p>The <code>Refresh</code> HTTP response header is the HTTP-equivalent to a <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">meta</a> element with an <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv\">http-equiv</a> attribute in the <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\">Refresh state</a>. It takes <a href=\"https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh\">the same value</a> and works largely the same. Its processing model is detailed in <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object\">create and initialize a Document object</a>.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$CbW7lLpvox7rgxBk4MF9oyNSyO1ZihTaWccve8GDQDA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718247233828,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$vCg32TMH_-sPsHMvuU7Sax_3nzNbW-2flP-zY1ADJpU"},
{"content":{"body":" * About https://github.com/mdn/content/pull/34087/files, <del>I guess that behavior is required per the spec?</del> I can’t find where in the spec that behavior is defined.\n\nThat is, specifically this part:\n\n> `<meta>` redirect happens after the page is _completely loaded_, which is after all scripts have executed","format":"org.matrix.custom.html","formatted_body":" * <p>About https://github.com/mdn/content/pull/34087/files, <del>I guess that behavior is required per the spec?</del> I can’t find where in the spec that behavior is defined.</p>\n<p>That is, specifically this part:</p>\n<blockquote>\n<p><code>&lt;meta&gt;</code> redirect happens after the page is <em>completely loaded</em>, which is after all scripts have executed</p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"About https://github.com/mdn/content/pull/34087/files, <del>I guess that behavior is required per the spec?</del> I can’t find where in the spec that behavior is defined.\n\nThat is, specifically this part:\n\n> `<meta>` redirect happens after the page is _completely loaded_, which is after all scripts have executed","format":"org.matrix.custom.html","formatted_body":"<p>About https://github.com/mdn/content/pull/34087/files, <del>I guess that behavior is required per the spec?</del> I can’t find where in the spec that behavior is defined.</p>\n<p>That is, specifically this part:</p>\n<blockquote>\n<p><code>&lt;meta&gt;</code> redirect happens after the page is <em>completely loaded</em>, which is after all scripts have executed</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$cHad45IybWnRvljnbYzcKJ329hFuadiPteZQPUf3H9E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718247339475,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$vj4RkjyFxVQ4zFV1Ik5uwbjHvcfF-u2YA5AwZSOOIgQ"},
{"content":{"body":"OK, it’s since been pointed out to me that the relevant requirements are in fact already in the spec, in the definition of _“a refresh is said to have come due”_ in step 13 of https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh\n\n> For the purposes of the previous paragraph, a refresh is said to have come due as soon as the later of the following two conditions occurs:\n>\n> - At least time seconds have elapsed since document's [completely loaded time](https://html.spec.whatwg.org/multipage/document-lifecycle.html#completely-loaded-time), adjusted to take into account user or user agent preferences.\n> - If meta is given, at least time seconds have elapsed since meta was [inserted into the document](https://html.spec.whatwg.org/multipage/infrastructure.html#insert-an-element-into-a-document) document, adjusted to take into account user or user agent preferences.","format":"org.matrix.custom.html","formatted_body":"<p>OK, it’s since been pointed out to me that the relevant requirements are in fact already in the spec, in the definition of <em>“a refresh is said to have come due”</em> in step 13 of https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh</p>\n<blockquote>\n<p>For the purposes of the previous paragraph, a refresh is said to have come due as soon as the later of the following two conditions occurs:</p>\n<ul>\n<li>At least time seconds have elapsed since document's <a href=\"https://html.spec.whatwg.org/multipage/document-lifecycle.html#completely-loaded-time\">completely loaded time</a>, adjusted to take into account user or user agent preferences.</li>\n<li>If meta is given, at least time seconds have elapsed since meta was <a href=\"https://html.spec.whatwg.org/multipage/infrastructure.html#insert-an-element-into-a-document\">inserted into the document</a> document, adjusted to take into account user or user agent preferences.</li>\n</ul>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718255714097,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XC7pT-xP_02RcpNjkhuoJB4SbnJysaucWkE84v8p6ao"},
{"content":{"body":"annevk: https://github.com/whatwg/html/issues/10407#issuecomment-2164768308\n\n i feel like i did answer the actual question you asked about what happened to it, which is all i was trying to add.. 😋","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: https://github.com/whatwg/html/issues/10407#issuecomment-2164768308</p>\n<p>i feel like i did answer the actual question you asked about what happened to it, which is all i was trying to add.. 😋</p>","msgtype":"m.text"},"ts":1718264247455,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$_LKEtrcnyzc4C5EAkbv66Eaad_yhFsflXY4yowdKND0"},
{"content":{"body":"I guess your question that remains is like \"has the wg reached out to/coordinated with/considered them?\" Is that right?\"","msgtype":"m.text"},"ts":1718264301593,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$0rzKVjdpSAIHdM4Fa5EKlE9JabH6WqPV_VMkvqLmQRM"},
{"content":{"body":"* I guess your question that remains is like \"has the wg reached out to/coordinated with/considered them?\" Is that right?\n","m.new_content":{"body":"I guess your question that remains is like \"has the wg reached out to/coordinated with/considered them?\" Is that right?\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$0rzKVjdpSAIHdM4Fa5EKlE9JabH6WqPV_VMkvqLmQRM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1718264315309,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$ABhyvr2zQMllG8kxMCKayvsZ4EbRpUaKJOQ8COTmBxE"},
{"content":{"body":"keithamus: About details auto-expand in GH issues, it still doesn’t seem to be working in Chrome — and my patch at https://github.com/primer/css/pull/2624 not been merged yet","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: About details auto-expand in GH issues, it still doesn’t seem to be working in Chrome — and my patch at https://github.com/primer/css/pull/2624 not been merged yet","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1718267294215,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Szfn4_gOGZehagxnUmCFHqII1XRBdW6sud6ATrMFpU4"},
{"content":{"body":"krosylight: I think that star change is actually a bit different, since it is highlighted because the page gets bookmarked. So the process there is rather indirect ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@krosylight:mozilla.org\">krosylight</a>: I think that star change is actually a bit different, since it is highlighted because the page gets bookmarked. So the process there is rather indirect","m.mentions":{"user_ids":["@krosylight:mozilla.org"]},"msgtype":"m.text"},"ts":1718267645988,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$d1rQAO-Ni7jkm4Cc-_W-66sOXcd-TUo_bgMK1ndzzRg"},
{"content":{"body":"> <@smaug:mozilla.org> krosylight: I think that star change is actually a bit different, since it is highlighted because the page gets bookmarked. So the process there is rather indirect\n\nHmmm. Does it also apply before finishing bookmark? The popup opens and the new bookmark is not created yet, and still the star is highlighted","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$d1rQAO-Ni7jkm4Cc-_W-66sOXcd-TUo_bgMK1ndzzRg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br><a href=\"https://matrix.to/#/@krosylight:mozilla.org\">krosylight</a>: I think that star change is actually a bit different, since it is highlighted because the page gets bookmarked. So the process there is rather indirect</blockquote></mx-reply>Hmmm. Does it also apply before finishing bookmark? The popup opens and the new bookmark is not created yet, and still the star is highlighted","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$d1rQAO-Ni7jkm4Cc-_W-66sOXcd-TUo_bgMK1ndzzRg"}},"msgtype":"m.text"},"ts":1718268413138,"senderName":"krosylight","senderId":"@krosylight:mozilla.org","id":"$a_y-4kAJ8O3gJEBh5uMoLCLC5UFB55Bu-QZHCUJFqqo"},
{"content":{"body":"the page is star'ed immediately, I believe. The star stays highlighted even if you just hide the popup by clicking elsewhere","m.mentions":{},"msgtype":"m.text"},"ts":1718268480363,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$JrmnwT7hCJHW06zpsxJUITJLufYcZ7ic9UaLmP--ucQ"},
{"content":{"body":"> <@smaug:mozilla.org> the page is star'ed immediately, I believe. The star stays highlighted even if you just hide the popup by clicking elsewhere\n\nHiding the popup is treated as Save (well, yeah) and saves bookmark","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$JrmnwT7hCJHW06zpsxJUITJLufYcZ7ic9UaLmP--ucQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br>the page is star&#39;ed immediately, I believe. The star stays highlighted even if you just hide the popup by clicking elsewhere</blockquote></mx-reply>Hiding the popup is treated as Save (well, yeah) and saves bookmark","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$JrmnwT7hCJHW06zpsxJUITJLufYcZ7ic9UaLmP--ucQ"}},"msgtype":"m.text"},"ts":1718268543784,"senderName":"krosylight","senderId":"@krosylight:mozilla.org","id":"$uo-D4Q_sVjvj8A9zQz7XY3S1EaB3tL5Obvozy4NioKw"},
{"content":{"body":"bkardell: well that issue already pointed to that explainer so I'm not really sure how that was adding anything new","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: well that issue already pointed to that explainer so I'm not really sure how that was adding anything new","m.mentions":{"user_ids":["@bkardell:igalia.com"]},"msgtype":"m.text"},"ts":1718268575709,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gIrJTwiSaXNv9qiWICVk8pdcyhzNODNF9uYsuzNNdcw"}
]