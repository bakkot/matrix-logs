[
{"content":{"body":"So I just reported one of the weirdest bugs I ever encountered: https://bugzilla.mozilla.org/show_bug.cgi?id=1781724","msgtype":"m.text","org.matrix.msc1767.text":"So I just reported one of the weirdest bugs I ever encountered: https://bugzilla.mozilla.org/show_bug.cgi?id=1781724"},"ts":1658900397553,"senderName":"Ondřej Žára","senderId":"@ondr4s:matrix.org","id":"$VO2BtFgJsVGl4hPcQvDb7ntL-yrEnkz1VxvV6ZcLSIg"},
{"content":{"body":"In general, Gecko seems to have some fun quirks with string handling.. I have a vague feeling of having seen something very similar to this  this bug before","m.relates_to":{"event_id":"$VO2BtFgJsVGl4hPcQvDb7ntL-yrEnkz1VxvV6ZcLSIg","is_falling_back":true,"m.in_reply_to":{"event_id":"$VO2BtFgJsVGl4hPcQvDb7ntL-yrEnkz1VxvV6ZcLSIg"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1658900925333,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$BB45bJZ3tOMYbyK59tNN30w7jI1rcoJ8ZkRBOMrNP1o"},
{"content":{"body":"smaug: emilio: ⬆️ ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: <a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>: ⬆️ ","msgtype":"m.text"},"ts":1658900998119,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$GSIJXWDI9XG0Misi_t_O4leFVTAWHDgRKu5cv8lUKyA"},
{"content":{"body":"> <@ondr4s:matrix.org> So I just reported one of the weirdest bugs I ever encountered: https://bugzilla.mozilla.org/show_bug.cgi?id=1781724\n\nWill look, thanks, it's probably a weird interaction between JSString representation and our utf8 conversion code","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$VO2BtFgJsVGl4hPcQvDb7ntL-yrEnkz1VxvV6ZcLSIg?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ondr4s:matrix.org\">@ondr4s:matrix.org</a><br />So I just reported one of the weirdest bugs I ever encountered: https://bugzilla.mozilla.org/show_bug.cgi?id=1781724</blockquote></mx-reply>Will look, thanks, it's probably a weird interaction between JSString representation and our utf8 conversion code","m.relates_to":{"m.in_reply_to":{"event_id":"$VO2BtFgJsVGl4hPcQvDb7ntL-yrEnkz1VxvV6ZcLSIg"}},"msgtype":"m.text"},"ts":1658904659815,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$ktLJb1QTp5K-1AX7nH4DlxV8NHThc3Aah0OTV_tVa-g"},
{"content":{"body":"emilio: FWIW, I suspect hsivonen (away from Matrix until 2022-08-08) will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>: FWIW, I suspect <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen (away from Matrix until 2022-08-08)</a> will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"emilio: FWIW, I suspect hsivonen (away from Matrix until 2022-08-08) will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>: FWIW, I suspect <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen (away from Matrix until 2022-08-08)</a> will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.","mimetype":"text/html"}]},"ts":1658905848652,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QyKZjNp0-IzTLO9Q1-rFAYeGMA6oACTL6c1jKe44LBE"},
{"content":{"body":"> <@annevk:matrix.org> emilio: FWIW, I suspect hsivonen (away from Matrix until 2022-08-08) will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.\n\nI removed the encode() one here hah: https://bugzilla.mozilla.org/show_bug.cgi?id=1607083","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$QyKZjNp0-IzTLO9Q1-rFAYeGMA6oACTL6c1jKe44LBE?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@emilio:mozilla.org\">emilio</a>: FWIW, I suspect <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen (away from Matrix until 2022-08-08)</a> will be able to identify the cause. He added some fast paths between JS and C++ that I would expect are the cause here.</blockquote></mx-reply>I removed the encode() one here hah: https://bugzilla.mozilla.org/show_bug.cgi?id=1607083","m.relates_to":{"m.in_reply_to":{"event_id":"$QyKZjNp0-IzTLO9Q1-rFAYeGMA6oACTL6c1jKe44LBE"}},"msgtype":"m.text"},"ts":1658906307255,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$km5SpUpez5OUPppqoKtjslCf48bWVoaQlm5JvVF6fQY"},
{"content":{"body":"Because UTF8String effectively behaved like the manual code","msgtype":"m.text"},"ts":1658906335265,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$HNcq0Xfa6tX2XkezH-hojFytL2DqrVRWdgO5RBWLGj4"},
{"content":{"body":"So either a bug in UTF8String, or a pre-existing issue / js engine bug or something.","msgtype":"m.text"},"ts":1658906414582,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$L0U8FiFrBq6AbFI8GK_DVb72EAPtzkvlD-duRHe4Qds"},
{"content":{"body":"Tho I think it'll probably have to wait till tomorrow because today I'm away from my laptop unexpectedly (hospital, but nothing bad)","msgtype":"m.text"},"ts":1658906491547,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$2eWKwJYgiKL1xmTh1EIavdHRVMo547e_k-1fsUYGRCw"},
{"content":{"body":"Oh, take care!","msgtype":"m.text","org.matrix.msc1767.text":"Oh, take care!"},"ts":1658906530455,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$D4lejgwsh9hAgVQt1dGzjwbR0aJzeR6nkHzwVNrKk1Q"},
{"content":{"body":"Hey, if I have multiple dynamic script tags (dynamic as in created programatically) is their execution order guaranteed?","msgtype":"m.text","org.matrix.msc1767.text":"Hey, if I have multiple dynamic script tags (dynamic as in created programatically) is their execution order guaranteed?"},"ts":1658913892115,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$DQqw8Q5aotR__XuWzhhZTGxR1GCOjT7BpAAJG14QciY"},
{"content":{"body":"Found https://web.archive.org/web/20220621024629/https://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order will read on","msgtype":"m.text","org.matrix.msc1767.text":"Found https://web.archive.org/web/20220621024629/https://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order will read on"},"ts":1658919573878,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$4YhLs0oYyZNq5gIoFS8Mus7NdCMs5vUR3F_LpSCMVh0"},
{"content":{"body":"Benjamin Gruenbaum: I'd recommend reading the HTML Standard instead, doubt old Wiki pages are accurate, but maybe","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@benjamin.gruenbaum:matrix.org\">Benjamin Gruenbaum</a>: I'd recommend reading the HTML Standard instead, doubt old Wiki pages are accurate, but maybe","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Benjamin Gruenbaum: I'd recommend reading the HTML Standard instead, doubt old Wiki pages are accurate, but maybe","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@benjamin.gruenbaum:matrix.org\">Benjamin Gruenbaum</a>: I'd recommend reading the HTML Standard instead, doubt old Wiki pages are accurate, but maybe","mimetype":"text/html"}]},"ts":1658919877096,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OC6KNVH-TnruXeDUVd1JQKqbHcImKdZwf6Nbrro9J38"},
{"content":{"body":"Jake Archibald may also have written something about this. As did Peter Beverloo (at the very least created a cool infographic we use in the standard)","msgtype":"m.text","org.matrix.msc1767.text":"Jake Archibald may also have written something about this. As did Peter Beverloo (at the very least created a cool infographic we use in the standard)"},"ts":1658919929197,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$lqY-v6mBJq5D0WJbOHwQpIgA7CDAXvXjQy1APVLsPiE"},
{"content":{"body":"Yeah, the relevant algorithm is going to be \"prepare a script element\", but I don't know off the top of my head what it says..","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, the relevant algorithm is going to be \"prepare a script element\", but I don't know off the top of my head what it says.."},"ts":1658919989452,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gYwyyVukFM4nus3s9aBnp_UGFQE6KEm_NRF0wKDP01I"},
{"content":{"body":"Thanks, will do (I came here because I couldn't find conclusive evidence in the spec but Domenic's hint might be what I was missing)","msgtype":"m.text","org.matrix.msc1767.text":"Thanks, will do (I came here because I couldn't find conclusive evidence in the spec but Domenic's hint might be what I was missing)"},"ts":1658920201208,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$uzNj7MRC2z10_Nooga523gsgU9Ggl-_srqC3HdBSjdk"},
{"content":{"body":"I think it's \"If parser document is non-null and el does not have an async attribute, then set el's force async to true.\" doing it, anyway I'll dig in - thanks","msgtype":"m.text","org.matrix.msc1767.text":"I think it's \"If parser document is non-null and el does not have an async attribute, then set el's force async to true.\" doing it, anyway I'll dig in - thanks"},"ts":1658920905532,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$g8pBQ6zICgE3sS_QVx72ESWUfmBeljr_BNk57sQdev8"},
{"content":{"body":"Wait that's probably not right :D ","msgtype":"m.text","org.matrix.msc1767.text":"Wait that's probably not right :D "},"ts":1658921007905,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$zljuvbVnybxtD2QiaZUsI2IeqFZO2nV58qX3rKZoBsM"},
{"content":{"body":"(here's the crbug https://bugs.chromium.org/p/chromium/issues/detail?id=594444#c16 though I'm still not sure if I'm misunderstanding the spec or browsers just all ignore the spec - probably the former)","msgtype":"m.text","org.matrix.msc1767.text":"(here's the crbug https://bugs.chromium.org/p/chromium/issues/detail?id=594444#c16 though I'm still not sure if I'm misunderstanding the spec or browsers just all ignore the spec - probably the former)"},"ts":1658922225366,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$01uiJvZO9KM1U_zMJpkAs5pfsT75ckscAqckWF2Isvk"},
{"content":{"body":"So, it turns out it just marks scripts with createElement with `async=true`, you can still mark them as async=false :D ","format":"org.matrix.custom.html","formatted_body":"So, it turns out it just marks scripts with createElement with <code>async=true</code>, you can still mark them as async=false :D","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"So, it turns out it just marks scripts with createElement with `async=true`, you can still mark them as async=false :D ","mimetype":"text/plain"},{"body":"So, it turns out it just marks scripts with createElement with <code>async=true</code>, you can still mark them as async=false :D","mimetype":"text/html"}]},"ts":1658922402137,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$TbzhpyxBiZ76OeOArfdvotO2yHtUWs0cLE0eW3_inV8"},
{"content":{"body":"Thanks again everyone","msgtype":"m.text","org.matrix.msc1767.text":"Thanks again everyone"},"ts":1658922402908,"senderName":"Benjamin Gruenbaum","senderId":"@benjamin.gruenbaum:matrix.org","id":"$eKaUMK2SdtAjDbmC5Jlt5NboQxONWEGuZA1wrtrURgY"},
{"content":{"body":"Can algorithm prose reference `this` inside queued/parallel steps? Basically, is it like `function () {}` or `() => {}` in JavaScript? 😀","format":"org.matrix.custom.html","formatted_body":"Can algorithm prose reference <code>this</code> inside queued/parallel steps? Basically, is it like <code>function () {}</code> or <code>() =&gt; {}</code> in JavaScript? 😀","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Can algorithm prose reference `this` inside queued/parallel steps? Basically, is it like `function () {}` or `() => {}` in JavaScript? 😀","mimetype":"text/plain"},{"body":"Can algorithm prose reference <code>this</code> inside queued/parallel steps? Basically, is it like <code>function () {}</code> or <code>() =&gt; {}</code> in JavaScript? 😀","mimetype":"text/html"}]},"ts":1658927753473,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$B3b-YCjxvaxNDhV2GCQ-ss4FYjJDPecdRJvu5UdTuhs"},
{"content":{"body":"I think no","msgtype":"m.text","org.matrix.msc1767.text":"I think no"},"ts":1658928016912,"senderName":"Ms2ger 💉💉","senderId":"@ms2ger:igalia.com","id":"$rHYxzC-m8AXvdQoBDQjUpfktdyQ6QutkLSWI1y8ehKs"},
{"content":{"body":"That was my thought too, but didn't know if I was being overly strict. It might be nice to allow it, but it doesn't seem like it's currently allowed.","msgtype":"m.text","org.matrix.msc1767.text":"That was my thought too, but didn't know if I was being overly strict. It might be nice to allow it, but it doesn't seem like it's currently allowed."},"ts":1658928078710,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$1zY431TuB27KDt_gw38pyDX1qb5IRbikXHhXJuJUnD8"},
{"content":{"body":"I think closing over this is fine","msgtype":"m.text","org.matrix.msc1767.text":"I think closing over this is fine"},"ts":1658928090284,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$PVW_TLga6ZIHyG25R77NUX8rpXv0zywV04o0fVhSlqk"},
{"content":{"body":"Well, OK, except in-parallel you should be careful about referencing Web IDL objects","msgtype":"m.text","org.matrix.msc1767.text":"Well, OK, except in-parallel you should be careful about referencing Web IDL objects"},"ts":1658928110418,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$di6HiRiOxQXOPa8DsVBapCgyrmCstuQbtTJYaGdMWsw"},
{"content":{"body":"Of course","msgtype":"m.text","org.matrix.msc1767.text":"Of course"},"ts":1658928119507,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$ZzgPF6bvqeRMLe6s3kDNWcgklBAb2GN7_j18W8emHHI"}
]