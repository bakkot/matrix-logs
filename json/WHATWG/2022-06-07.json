[
{"content":{"body":"Domenic: excluding control code points is quite typical","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: excluding control code points is quite typical","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: excluding control code points is quite typical","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: excluding control code points is quite typical","mimetype":"text/html"}]},"ts":1654578678981,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$QEmdJ0R74ZlmUsSNNVR7pier4Ap7rNwzXdV_YNvCZKs"},
{"content":{"body":"But this infects the [^] syntax it appears: https://www.w3.org/TR/xml/#sec-notation","msgtype":"m.text","org.matrix.msc1767.text":"But this infects the [^] syntax it appears: https://www.w3.org/TR/xml/#sec-notation"},"ts":1654578720645,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MqUvjp3_wF_YGRFyFwt1RqgPrwbnRIwyKrYlwSx_VwA"},
{"content":{"body":"As well as just the [] syntax in general","msgtype":"m.text","org.matrix.msc1767.text":"As well as just the [] syntax in general"},"ts":1654578767106,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$tzls1RTx-ASe0zDIA1BxNEkWNNEIF2Sr1s-Zw9ERANE"},
{"content":{"body":"So it looks like XML-defined EBNF is just not really usable?","msgtype":"m.text","org.matrix.msc1767.text":"So it looks like XML-defined EBNF is just not really usable?"},"ts":1654578776430,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$so7hcIz7eXdOnZF0fsqMpEwQXfX4G2wgi_IUDW7uF4U"},
{"content":{"body":"Oh great, I didn't realize that ‚òπÔ∏è","msgtype":"m.text","org.matrix.msc1767.text":"Oh great, I didn't realize that ‚òπÔ∏è"},"ts":1654578833258,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$-UdilLGcGJulh_w7rygP7CsXjRQxEwS-fxUSJE165LQ"},
{"content":{"body":"How do we feel about JS-compatible RegExps... The other main alternative is to just write a parser algorithm","msgtype":"m.text","org.matrix.msc1767.text":"How do we feel about JS-compatible RegExps... The other main alternative is to just write a parser algorithm"},"ts":1654578912854,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$CtebBqTPOxv0mp5nXTa7VS4zQr6vuz3SUNQFlDD4o7s"},
{"content":{"body":"Or maybe https://www.rfc-editor.org/rfc/rfc5234","msgtype":"m.text","org.matrix.msc1767.text":"Or maybe https://www.rfc-editor.org/rfc/rfc5234"},"ts":1654578956138,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$8_Xu30mx_wf4nwCVpGuBAY_2cZxwk6vNQH0cXr5zRsU"},
{"content":{"body":"Domenic: I think writing it out in prose might not be so bad","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I think writing it out in prose might not be so bad","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: I think writing it out in prose might not be so bad","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I think writing it out in prose might not be so bad","mimetype":"text/html"}]},"ts":1654581555973,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$2Gbjy6exNIbEpYyK_Wg1QqINgBxdcEtX1OyorByaiP8"},
{"content":{"body":"Domenic: if you turn the code point sets into Infra-style definitions and then have a validating algorithm that says \"if string is not a X followed by zero or more Ys\" and such","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: if you turn the code point sets into Infra-style definitions and then have a validating algorithm that says &quot;if string is not a X followed by zero or more Ys&quot; and such","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: if you turn the code point sets into Infra-style definitions and then have a validating algorithm that says \"if string is not a X followed by zero or more Ys\" and such","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: if you turn the code point sets into Infra-style definitions and then have a validating algorithm that says &quot;if string is not a X followed by zero or more Ys&quot; and such","mimetype":"text/html"}]},"ts":1654581609053,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$BEMfrNaF_AMMwHQxcnuFqbzIVgjiu85R1G-1z1n7Ego"},
{"content":{"body":"What's the status of removing sync XHR? https://github.com/whatwg/xhr/issues/20","msgtype":"m.text","org.matrix.msc1767.text":"What's the status of removing sync XHR? https://github.com/whatwg/xhr/issues/20"},"ts":1654593315847,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$SonEIBpDPsYDCdqdQJr64ZOfmw1sVopdJRxP1LiSm18"},
{"content":{"body":" annevk any chance to continue review on https://github.com/whatwg/fetch/pull/1413 at some point? yutakahirano has already given it a üëçÔ∏è","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> any chance to continue review on https://github.com/whatwg/fetch/pull/1413 at some point? yutakahirano has already given it a üëçÔ∏è","msgtype":"m.text","org.matrix.msc1767.message":[{"body":" annevk any chance to continue review on https://github.com/whatwg/fetch/pull/1413 at some point? yutakahirano has already given it a üëçÔ∏è","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> any chance to continue review on https://github.com/whatwg/fetch/pull/1413 at some point? yutakahirano has already given it a üëçÔ∏è","mimetype":"text/html"}]},"ts":1654604289540,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$UrsMrm6MoihigEcw5IC4u8ZYc7aBCxa-A9Ld9e4e-gc"},
{"content":{"body":"Hi all! Can someone help me?","msgtype":"m.text","org.matrix.msc1767.text":"Hi all! Can someone help me?"},"ts":1654611728734,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$cvM1L7vT-kKCXKx7BBfGO1tXUsGP-7Jx-6RY1SRIwBU"},
{"content":{"body":"I have a question, if anyone can answer I would be happy","msgtype":"m.text","org.matrix.msc1767.text":"I have a question, if anyone can answer I would be happy"},"ts":1654611795058,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$IagYCzNbpSsH0c1OmYohzMCHUkKHd2n_Ea5vyjWo3H0"},
{"content":{"body":"I would like to know if we could create a library in javascript to generate user interaction data","msgtype":"m.text","org.matrix.msc1767.text":"I would like to know if we could create a library in javascript to generate user interaction data"},"ts":1654612344871,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$IsSwsaVyRRr-wwd_w3DqsWwvi9ERSr_0nHI1yXn3aRo"},
{"content":{"body":"This would be an alternative to cookies etc.","msgtype":"m.text","org.matrix.msc1767.text":"This would be an alternative to cookies etc."},"ts":1654612376569,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$_-ECkx8TunNLcuuqqBATeqfix5lIcveE9Rw8r0rJY28"},
{"content":{"body":"This can be interesting for data analysis etc","msgtype":"m.text","org.matrix.msc1767.text":"This can be interesting for data analysis etc"},"ts":1654612416413,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$wamEBeMyZz7EQ_Y0Lw1W_iYPRFSwqKcP1Juk3JbgtZw"},
{"content":{"body":"concept: https://discourse.wicg.io/t/draft-idea-spec-proposal-an-interesting-open-free-libre-proposal-for-a-scalable-sustainable-secure-private-accessible-business-model-compared-to-alternatives-such-as-topics-cookies-flocs-and-other-user-tracking-technologies/5906/3","msgtype":"m.text","org.matrix.msc1767.text":"concept: https://discourse.wicg.io/t/draft-idea-spec-proposal-an-interesting-open-free-libre-proposal-for-a-scalable-sustainable-secure-private-accessible-business-model-compared-to-alternatives-such-as-topics-cookies-flocs-and-other-user-tracking-technologies/5906/3"},"ts":1654612439411,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$ligh9s36u3E8-QN07o51euAVo9RK99tt4nbvnz4d8vY"},
{"content":{"body":"I would like to know if this idea is good or bad, I want to hear all sides, all criticisms, everything that can be improved or corrected","msgtype":"m.text","org.matrix.msc1767.text":"I would like to know if this idea is good or bad, I want to hear all sides, all criticisms, everything that can be improved or corrected"},"ts":1654612559925,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$VUJqsMEeOoxNeqtJB9y9bqupWLMWKMwf9zCeLeydJmQ"},
{"content":{"body":"Everything I've written is still conceptual, draft","msgtype":"m.text","org.matrix.msc1767.text":"Everything I've written is still conceptual, draft"},"ts":1654613102012,"senderName":"raphaellouis","senderId":"@raphaellouis:matrix.org","id":"$FvKXw2myjRcIeIBELNfmRERMQSBdAisbFMeM01d8IlI"},
{"content":{"body":"Noam Rosenthal: ah, from the title change I guess you have made a change in approach now","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: ah, from the title change I guess you have made a change in approach now","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: ah, from the title change I guess you have made a change in approach now","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: ah, from the title change I guess you have made a change in approach now","mimetype":"text/html"}]},"ts":1654616276790,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$64qf5TKD9SxHwATpeNt7_kbUrLj3aa6K-CQ_jsQyQqg"},
{"content":{"body":"notices Domenic's comment there about formatting","format":"org.matrix.custom.html","formatted_body":"notices <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>'s comment there about formatting","msgtype":"m.emote","org.matrix.msc1767.message":[{"body":"notices Domenic's comment there about formatting","mimetype":"text/plain"},{"body":"notices <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>'s comment there about formatting","mimetype":"text/html"}]},"ts":1654616322488,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$rNBPfdvGrXPQoP4Oxp1MaNtY8tMzaVqEbPzT-IONGr8"},
{"content":{"body":"annevk: yes, as we talked about, there's no longer a \"conclude\" call and fetch reports timing automatically, except for in the case of navigation and early-hints","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: yes, as we talked about, there's no longer a &quot;conclude&quot; call and fetch reports timing automatically, except for in the case of navigation and early-hints","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: yes, as we talked about, there's no longer a \"conclude\" call and fetch reports timing automatically, except for in the case of navigation and early-hints","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: yes, as we talked about, there's no longer a &quot;conclude&quot; call and fetch reports timing automatically, except for in the case of navigation and early-hints","mimetype":"text/html"}]},"ts":1654616326964,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$odBIr1xUW0I48bYDJyr1nDHUtMfw5nw_Tq8LV0352NU"},
{"content":{"body":"I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much","msgtype":"m.text","org.matrix.msc1767.text":"I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much"},"ts":1654616357466,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DwcFeSsveiiykYZkvq7vDPOgvVWx4C0De1TUXIir6qQ"},
{"content":{"body":"... accompanied by the HTML PR https://github.com/whatwg/html/pull/7722","msgtype":"m.text","org.matrix.msc1767.text":"... accompanied by the HTML PR https://github.com/whatwg/html/pull/7722"},"ts":1654616360315,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$DZuz1CkusjtYwMLCYPTbfkfUtJawOUqkNIp8J6f9oeQ"},
{"content":{"body":"Source code formatter is on my list of \"learn Rust\" projects. Seems... unlikely to happen.","msgtype":"m.text","org.matrix.msc1767.text":"Source code formatter is on my list of \"learn Rust\" projects. Seems... unlikely to happen."},"ts":1654616391603,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$hMPpXiFkYgTIx9pkXivjB0GEdwBDPofTnVd2w1tZkng"},
{"content":{"body":"> <@annevk:mozilla.org> I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much\n\nIs there an open issue for what's required? I can fiddle with it. I know a bit of Rust","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DwcFeSsveiiykYZkvq7vDPOgvVWx4C0De1TUXIir6qQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much</blockquote></mx-reply>Is there an open issue for what's required? I can fiddle with it. I know a bit of Rust","m.relates_to":{"m.in_reply_to":{"event_id":"$DwcFeSsveiiykYZkvq7vDPOgvVWx4C0De1TUXIir6qQ"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@annevk:mozilla.org> I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much\n\nIs there an open issue for what's required? I can fiddle with it. I know a bit of Rust","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DwcFeSsveiiykYZkvq7vDPOgvVWx4C0De1TUXIir6qQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much</blockquote></mx-reply>Is there an open issue for what's required? I can fiddle with it. I know a bit of Rust","mimetype":"text/html"}]},"ts":1654616457953,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$FD_cG29dWjO_iFOmgY2AISChaNt4cGIoziPp6r_QCIs"},
{"content":{"body":"Noam Rosenthal: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)","mimetype":"text/html"}]},"ts":1654617537758,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$rAwzCboOjbRns0OaWnb31At4sEypc_qnyEQiy_MBUuU"},
{"content":{"body":"Noam Rosenthal: as for the formatter, essentially something that takes a WHATWG-style `*.bs` file, parses it, and then serializes it according to the rough formatting guidelines in `README.md`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: as for the formatter, essentially something that takes a WHATWG-style <code>*.bs</code> file, parses it, and then serializes it according to the rough formatting guidelines in <code>README.md</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: as for the formatter, essentially something that takes a WHATWG-style `*.bs` file, parses it, and then serializes it according to the rough formatting guidelines in `README.md`","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: as for the formatter, essentially something that takes a WHATWG-style <code>*.bs</code> file, parses it, and then serializes it according to the rough formatting guidelines in <code>README.md</code>","mimetype":"text/html"}]},"ts":1654617613616,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4feYIRIlx4TR4O-pzpSzfllhQJwAAubrH7z--gWYsQA"},
{"content":{"body":"Domenic might have more informed thoughts üôÇ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> might have more informed thoughts üôÇ","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic might have more informed thoughts üôÇ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> might have more informed thoughts üôÇ","mimetype":"text/html"}]},"ts":1654617631877,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$HN5ptjhGKlympnS9srWyj_X8ixgv1Q2birtOHGghI1s"},
{"content":{"body":"Yeah, no open issue. It's hard because parsing/serializing bs (or Wattsi-style HTML) is not an identity function.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, no open issue. It's hard because parsing/serializing bs (or Wattsi-style HTML) is not an identity function."},"ts":1654617683692,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$oKAKzBHP6sUms80_XnEyWSh15pUFIugNApZJ3cukXN8"},
{"content":{"body":"I guess Yutaka also r+'d it and there was no forced rebase so hmm","msgtype":"m.text","org.matrix.msc1767.text":"I guess Yutaka also r+'d it and there was no forced rebase so hmm"},"ts":1654617687473,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$hF2lP3dz3c4GliSpNuJ4NgTYTP_WcdgUsd5VD1KC1kQ"},
{"content":{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","format":"org.matrix.custom.html","formatted_body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","mimetype":"text/plain"},{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","mimetype":"text/html"}]},"ts":1654617769302,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$YlsTBbKOSdVuS2J2GFK63I7EjdP0mgwYw_owPUOgKC0"},
{"content":{"body":"But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","format":"org.matrix.custom.html","formatted_body":"But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/plain"},{"body":"But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/html"}]},"ts":1654617813299,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$OhZgAPG4yCKiL1CgDk8cEFn3lQNp0aKptKE53_phL1Q"},
{"content":{"body":" * But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","format":"org.matrix.custom.html","formatted_body":" * But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","m.new_content":{"body":"But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","format":"org.matrix.custom.html","formatted_body":"But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/plain"},{"body":"But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$OhZgAPG4yCKiL1CgDk8cEFn3lQNp0aKptKE53_phL1Q","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * But like `<li>\\n<p>` is technically different than `<li><p>`\n (different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/plain"},{"body":" * But like <code>&lt;li&gt;\\n&lt;p&gt;</code> is technically different than <code>&lt;li&gt;&lt;p&gt;</code><br>(different DOM structure, with a text node in the middle for the former) but we consider them both OK","mimetype":"text/html"}]},"ts":1654617837374,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$DZ6Y_moKWfd7e8foK37t4x3t4dyZ-nuAMyOa9qkIATM"},
{"content":{"body":" * Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","format":"org.matrix.custom.html","formatted_body":" * Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","m.new_content":{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","format":"org.matrix.custom.html","formatted_body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","mimetype":"text/plain"},{"body":"Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$YlsTBbKOSdVuS2J2GFK63I7EjdP0mgwYw_owPUOgKC0","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\\n</p>` which is undesirable by our standards.","mimetype":"text/plain"},{"body":" * Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates <code>foo.\\n&lt;/p&gt;</code> which is undesirable by our standards.","mimetype":"text/html"}]},"ts":1654617854807,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$LKlhsRTldpTxf_Uh1atnkf_MucQA49emcD-4-fMQYmo"},
{"content":{"body":"> <@annevk:mozilla.org> Noam Rosenthal: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)\n\nThat comment was resolved with a reply, ‚ÄòtimingGlobal‚Äô is null in the case of early hints, I will look at it again though to make sure ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24rAwzCboOjbRns0OaWnb31At4sEypc_qnyEQiy_MBUuU\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)</blockquote></mx-reply>That comment was resolved with a reply, ‚ÄòtimingGlobal‚Äô is null in the case of early hints, I will look at it again though to make sure","m.relates_to":{"m.in_reply_to":{"event_id":"$rAwzCboOjbRns0OaWnb31At4sEypc_qnyEQiy_MBUuU"}},"msgtype":"m.text"},"ts":1654617868886,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$jG08n5D2twdMA0CCVgOKOidPKLHmbeRQnHWpm_FUVqo"},
{"content":{"body":"Noam Rosenthal: as written fetch's _timingGlobal_ argument is either \"client\" or a global object afaict (though the usage side suggests \"none\" can be valid and the algorithm suggests null can be valid)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: as written fetch's <em>timingGlobal</em> argument is either &quot;client&quot; or a global object afaict (though the usage side suggests &quot;none&quot; can be valid and the algorithm suggests null can be valid)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: as written fetch's _timingGlobal_ argument is either \"client\" or a global object afaict (though the usage side suggests \"none\" can be valid and the algorithm suggests null can be valid)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: as written fetch's <em>timingGlobal</em> argument is either &quot;client&quot; or a global object afaict (though the usage side suggests &quot;none&quot; can be valid and the algorithm suggests null can be valid)","mimetype":"text/html"}]},"ts":1654617923960,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$5fPemrJ7bxJixvmbZFiMeRuL-mUW_rhYgFB9z9k9tNE"},
{"content":{"body":"Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: you need to push something for https://github.com/whatwg/dom/pull/1079","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: you need to push something for https://github.com/whatwg/dom/pull/1079","mimetype":"text/html"}]},"ts":1654617989969,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KbtWhohEDFHXOa2jJDKy40d0SsAgcnRQ9oQ_VHitt10"},
{"content":{"body":"> <@annevk:mozilla.org> Noam Rosenthal: as written fetch's _timingGlobal_ argument is either \"client\" or a global object afaict (though the usage side suggests \"none\" can be valid and the algorithm suggests null can be valid)\n\nOk, I will revise it and the usage to state null should be valid","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%245fPemrJ7bxJixvmbZFiMeRuL-mUW_rhYgFB9z9k9tNE\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: as written fetch's <em>timingGlobal</em> argument is either &quot;client&quot; or a global object afaict (though the usage side suggests &quot;none&quot; can be valid and the algorithm suggests null can be valid)</blockquote></mx-reply>Ok, I will revise it and the usage to state null should be valid","m.relates_to":{"m.in_reply_to":{"event_id":"$5fPemrJ7bxJixvmbZFiMeRuL-mUW_rhYgFB9z9k9tNE"}},"msgtype":"m.text"},"ts":1654617997241,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$fB3G1XDf_VmmTfTRZ9gaX41VDl-3jMmUx1w3ibSHH1Y"},
{"content":{"body":"Noam Rosenthal: to be clear I think it would be better if you made that \"none\" for consistency with \"client\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: to be clear I think it would be better if you made that &quot;none&quot; for consistency with &quot;client&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: to be clear I think it would be better if you made that \"none\" for consistency with \"client\"","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: to be clear I think it would be better if you made that &quot;none&quot; for consistency with &quot;client&quot;","mimetype":"text/html"}]},"ts":1654618029865,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$cmjUhu95CoZX1CXMPrGNLd-i0T4Ep9CRueDqDKucVMI"},
{"content":{"body":"Noam Rosenthal: if we're doing enum or object let's not also add null to the possible types","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: if we're doing enum or object let's not also add null to the possible types","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: if we're doing enum or object let's not also add null to the possible types","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: if we're doing enum or object let's not also add null to the possible types","mimetype":"text/html"}]},"ts":1654618060022,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$dT5g64trjXfhRtfLPu1k5kXh-nnr3XhHN-n9VOnh2nI"},
{"content":{"body":"> <@annevk:mozilla.org> Noam Rosenthal: to be clear I think it would be better if you made that \"none\" for consistency with \"client\"\n\nSure, fine with me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24cmjUhu95CoZX1CXMPrGNLd-i0T4Ep9CRueDqDKucVMI\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: to be clear I think it would be better if you made that &quot;none&quot; for consistency with &quot;client&quot;</blockquote></mx-reply>Sure, fine with me","m.relates_to":{"m.in_reply_to":{"event_id":"$cmjUhu95CoZX1CXMPrGNLd-i0T4Ep9CRueDqDKucVMI"}},"msgtype":"m.text"},"ts":1654618075656,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$yahrnBZwy5McPQ8Hxaoq574yDGvkeksQXEbKOQVzMCI"},
{"content":{"body":"I usually prefer whims ","format":"org.matrix.custom.html","formatted_body":"I usually prefer whims","msgtype":"m.text"},"ts":1654618102588,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$haYdaLy2inc2FIgOXvov2RfD15IGc75sdLURuXU2SRw"},
{"content":{"body":"Enums ","format":"org.matrix.custom.html","formatted_body":"Enums","msgtype":"m.text"},"ts":1654618108202,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$aB6g6Dh0ZRHHWxSdQKMNTJ96uTPyCvU6V1jC4MjzYZU"},
{"content":{"body":"> <@annevk:mozilla.org> Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079\n\nDone, thanks. Working on PotentialCustomElementName now.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KbtWhohEDFHXOa2jJDKy40d0SsAgcnRQ9oQ_VHitt10?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: you need to push something for https://github.com/whatwg/dom/pull/1079</blockquote></mx-reply>Done, thanks. Working on PotentialCustomElementName now.","m.relates_to":{"m.in_reply_to":{"event_id":"$KbtWhohEDFHXOa2jJDKy40d0SsAgcnRQ9oQ_VHitt10"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@annevk:mozilla.org> Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079\n\nDone, thanks. Working on PotentialCustomElementName now.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KbtWhohEDFHXOa2jJDKy40d0SsAgcnRQ9oQ_VHitt10?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: you need to push something for https://github.com/whatwg/dom/pull/1079</blockquote></mx-reply>Done, thanks. Working on PotentialCustomElementName now.","mimetype":"text/html"}]},"ts":1654618177341,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$yqZHaIYpUJ9VjKu7HALW9KREsbv3G6jrorsYb2rrTbk"},
{"content":{"body":"annevk: fixed comments. re. request vs. fetch: the idea is that all timing-related things are associated with fetch and not with a request. So if the request is forwarded by a service worker the timing info, initiiator and reporting global relate to the service worker and not to the original fetcher","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: fixed comments. re. request vs. fetch: the idea is that all timing-related things are associated with fetch and not with a request. So if the request is forwarded by a service worker the timing info, initiiator and reporting global relate to the service worker and not to the original fetcher","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: fixed comments. re. request vs. fetch: the idea is that all timing-related things are associated with fetch and not with a request. So if the request is forwarded by a service worker the timing info, initiiator and reporting global relate to the service worker and not to the original fetcher","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: fixed comments. re. request vs. fetch: the idea is that all timing-related things are associated with fetch and not with a request. So if the request is forwarded by a service worker the timing info, initiiator and reporting global relate to the service worker and not to the original fetcher","mimetype":"text/html"}]},"ts":1654618906445,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$6ivtbnNa4NqAX-EvVMITZkU3m2FCCoDplenq4AavKoY"},
{"content":{"body":"Noam Rosenthal: does that mean we need to change the fetch params when we hand it over to the SW?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: does that mean we need to change the fetch params when we hand it over to the SW?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: does that mean we need to change the fetch params when we hand it over to the SW?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: does that mean we need to change the fetch params when we hand it over to the SW?","mimetype":"text/html"}]},"ts":1654619007067,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$y-EHn1EM2JCaGSSrBI2cwVBgAhLKtfNk3xKvr5ZD5AY"},
{"content":{"body":"annevk: no need. new fetch params are created when the SW calls `fetch()`","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: no need. new fetch params are created when the SW calls <code>fetch()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: no need. new fetch params are created when the SW calls `fetch()`","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: no need. new fetch params are created when the SW calls <code>fetch()</code>","mimetype":"text/html"}]},"ts":1654619040658,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$K-SE5xb631HObxgDnFTe6FhF0lfz9JcRS3vgHhMJ0FI"},
{"content":{"body":"Noam Rosenthal: well yes, if it does that, but that's also the case for bits on request so I'm not sure how that's an argument for this setup","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: well yes, if it does that, but that's also the case for bits on request so I'm not sure how that's an argument for this setup","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: well yes, if it does that, but that's also the case for bits on request so I'm not sure how that's an argument for this setup","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: well yes, if it does that, but that's also the case for bits on request so I'm not sure how that's an argument for this setup","mimetype":"text/html"}]},"ts":1654619087796,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$HdOq_MRH5ZqX7d4oj-zAWNsh5YyV86Y7gl0XqPqB2BI"},
{"content":{"body":"annevk: you mean the TAO bit etc.? I think they should also move to fetch-params","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: you mean the TAO bit etc.? I think they should also move to fetch-params","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: you mean the TAO bit etc.? I think they should also move to fetch-params","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: you mean the TAO bit etc.? I think they should also move to fetch-params","mimetype":"text/html"}]},"ts":1654619198550,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$CCkRP9LRK9g0lt7De5KNZ3ckvu1fgxd3K7jZ591N6KI"},
{"content":{"body":"also those are a bit different because they're not passed from the outside","msgtype":"m.text","org.matrix.msc1767.text":"also those are a bit different because they're not passed from the outside"},"ts":1654619213215,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$fROnJTr9vtDYxMyGoZp_1wTsXSpn6m1h28yTI6s-ZXY"},
{"content":{"body":"To me it seems cleaner if the request was something somewhat immutable and transient that kind of matches with the `Request` object, and doesn't need to be \"reset\" when forwarded by the SW. In the case of timing though, it currently doesn't really have any observable difference ","format":"org.matrix.custom.html","formatted_body":"To me it seems cleaner if the request was something somewhat immutable and transient that kind of matches with the <code>Request</code> object, and doesn't need to be &quot;reset&quot; when forwarded by the SW. In the case of timing though, it currently doesn't really have any observable difference","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"To me it seems cleaner if the request was something somewhat immutable and transient that kind of matches with the `Request` object, and doesn't need to be \"reset\" when forwarded by the SW. In the case of timing though, it currently doesn't really have any observable difference ","mimetype":"text/plain"},{"body":"To me it seems cleaner if the request was something somewhat immutable and transient that kind of matches with the <code>Request</code> object, and doesn't need to be &quot;reset&quot; when forwarded by the SW. In the case of timing though, it currently doesn't really have any observable difference","mimetype":"text/html"}]},"ts":1654619330213,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$jBbDQwknlOLaMPXfaKRNAMDbWQIODxrHTx0XuIzA5G4"},
{"content":{"body":"currently we keep bumping into these issues of ambiguity between request and fetch-params, I'm hoping that by making request somewhat immutable & transient we can avoid them, but maybe it's hard to accomplish because of thing's like request's client","msgtype":"m.text","org.matrix.msc1767.text":"currently we keep bumping into these issues of ambiguity between request and fetch-params, I'm hoping that by making request somewhat immutable & transient we can avoid them, but maybe it's hard to accomplish because of thing's like request's client"},"ts":1654619495017,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uaEq2W6DBY7_VUVj1MuAW2nIKvseheBtRx5A-reHkaU"},
{"content":{"body":"annevk: but if you think it's preferable to make `timingGlobal`& `initiator` request-associated I could go with it, it keeps the current separation of fetch taking a request + callbacks as parameters","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: but if you think it's preferable to make <code>timingGlobal</code>&amp; <code>initiator</code> request-associated I could go with it, it keeps the current separation of fetch taking a request + callbacks as parameters","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: but if you think it's preferable to make `timingGlobal`& `initiator` request-associated I could go with it, it keeps the current separation of fetch taking a request + callbacks as parameters","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: but if you think it's preferable to make <code>timingGlobal</code>&amp; <code>initiator</code> request-associated I could go with it, it keeps the current separation of fetch taking a request + callbacks as parameters","mimetype":"text/html"}]},"ts":1654619687271,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$hU-rx-kJbLWIQyAdUnL_niM3CKZ5CRofywMlkY3gDT4"}
]