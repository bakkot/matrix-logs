[
{"content":{"body":" * There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","format":"org.matrix.custom.html","formatted_body":" * <p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","m.new_content":{"body":"There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","format":"org.matrix.custom.html","formatted_body":"<p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","mimetype":"text/plain"},{"body":"<p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$99hS1UaQUb6tOu2eBHPlgt6m4VitllJ0ETJ-OBITU1Y","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","mimetype":"text/plain"},{"body":" * <p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1668763069652,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$6Jof2RlcRZ9KvKU2mqYucf2v-vJZkDqOvKrMd3nLC5c"},
{"content":{"body":"jub0bs: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","mimetype":"text/html"}]},"ts":1668763152915,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1fzRP6c0mlPYYFXmiqFieQOkfSFgX7Gz0-_M5qZV6fo"},
{"content":{"body":"Alice: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@alice:igalia.com\">Alice</a>: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Alice: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@alice:igalia.com\">Alice</a>: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","mimetype":"text/html"}]},"ts":1668763241799,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$58cTe8jIh4RcgOkjgH_UwzjFHRW-BSs2ieUod2qeyL0"},
{"content":{"body":"annevk: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add `Vary: Cookie` to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be \"yes\". But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add <code>Vary: Cookie</code> to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be &quot;yes&quot;. But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add `Vary: Cookie` to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be \"yes\". But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add <code>Vary: Cookie</code> to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be &quot;yes&quot;. But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","mimetype":"text/html"}]},"ts":1668767594689,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$P5y2QOZrUbpmsS9gBsskaN_E30jf5OZjWgiR3xW_fJQ"},
{"content":{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"ts":1668768362053,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$H1ygL71afxPRtkNIr6bFVf8Z5DCRAhmhe5oa8sD3XT8"},
{"content":{"body":" * annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","m.new_content":{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$H1ygL71afxPRtkNIr6bFVf8Z5DCRAhmhe5oa8sD3XT8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"ts":1668768369812,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$N7mdDUt7MciGhNeS9N8NfyTUsnuT_C06xDyEDa2VmMk"},
{"content":{"body":"I don't think that sentence considers middleware as separate software from the server.","msgtype":"m.text","org.matrix.msc1767.text":"I don't think that sentence considers middleware as separate software from the server."},"ts":1668769495568,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hQs4VZ1ImxbrDWZ4TvyuThhMXn7z-C6jagPBPHuG44k"},
{"content":{"body":"annevk: I see, but I'm afraid I need more guidance 😀","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I see, but I'm afraid I need more guidance 😀","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","mimetype":"text/html"}]},"ts":1668775562413,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$IMm1XY9v0Xv8z2E1HlCoFkFyzO4NlmiJvQfTNytgvhM"},
{"content":{"body":"Another element, which contradicts Jake's view, is this SO response by sideshowbarker : https://stackoverflow.com/a/53248240/2541573\n> as far as the CORS protocol goes, the receiving server doesn’t change its behavior based on whether the request includes credentials or not.","format":"org.matrix.custom.html","formatted_body":"<p>Another element, which contradicts Jake's view, is this SO response by <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a> : https://stackoverflow.com/a/53248240/2541573</p>\n<blockquote>\n<p>as far as the CORS protocol goes, the receiving server doesn’t change its behavior based on whether the request includes credentials or not.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Another element, which contradicts Jake's view, is this SO response by sideshowbarker : https://stackoverflow.com/a/53248240/2541573\n> as far as the CORS protocol goes, the receiving server doesn’t change its behavior based on whether the request includes credentials or not.","mimetype":"text/plain"},{"body":"<p>Another element, which contradicts Jake's view, is this SO response by <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a> : https://stackoverflow.com/a/53248240/2541573</p>\n<blockquote>\n<p>as far as the CORS protocol goes, the receiving server doesn’t change its behavior based on whether the request includes credentials or not.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1668775636007,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$-zQsg7rtmb5xv23RgD_71PXPQA8iepcuuYdF7Cp5dso"},
{"content":{"body":" * annevk: I see, but I'm afraid I need more guidance :D","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance :D","m.new_content":{"body":"annevk: I see, but I'm afraid I need more guidance :D","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance :D","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I see, but I'm afraid I need more guidance :D","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance :D","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$IMm1XY9v0Xv8z2E1HlCoFkFyzO4NlmiJvQfTNytgvhM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * annevk: I see, but I'm afraid I need more guidance :D","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance :D","mimetype":"text/html"}]},"ts":1668775758420,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$Mmd7JD-V6Y9j2MUoPUgJMHg5oVNMShtSM1oDxG3wYvs"},
{"content":{"body":" * annevk: I see, but I'm afraid I need more guidance 😀","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","m.new_content":{"body":"annevk: I see, but I'm afraid I need more guidance 😀","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I see, but I'm afraid I need more guidance 😀","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$IMm1XY9v0Xv8z2E1HlCoFkFyzO4NlmiJvQfTNytgvhM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * annevk: I see, but I'm afraid I need more guidance 😀","mimetype":"text/plain"},{"body":" * <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I see, but I'm afraid I need more guidance 😀","mimetype":"text/html"}]},"ts":1668775772806,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$h5PCIGgV7nBCyBcbU_nfT7ZzcU_QYPrsfg3wfI1Csuw"},
{"content":{"body":"jub0bs: I don't think there's a contradiction there; again, that's assuming the entire non-client-side knows what it's doing","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: I don't think there's a contradiction there; again, that's assuming the entire non-client-side knows what it's doing","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: I don't think there's a contradiction there; again, that's assuming the entire non-client-side knows what it's doing","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: I don't think there's a contradiction there; again, that's assuming the entire non-client-side knows what it's doing","mimetype":"text/html"}]},"ts":1668778379990,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$TmbF-EOqe1BwEKdJfCeW41rFkzBjD1IPaa5SReUX6sQ"},
{"content":{"body":"jub0bs: the middleware situation is somewhat unique in that the middleware doesn't know whether a response flagged as * would also sometimes use Set-Cookie","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: the middleware situation is somewhat unique in that the middleware doesn't know whether a response flagged as * would also sometimes use Set-Cookie","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: the middleware situation is somewhat unique in that the middleware doesn't know whether a response flagged as * would also sometimes use Set-Cookie","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: the middleware situation is somewhat unique in that the middleware doesn't know whether a response flagged as * would also sometimes use Set-Cookie","mimetype":"text/html"}]},"ts":1668778426409,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$r8G74JY6QLCIDmwBPnJEfkRMdQrp-PxzKgkkvAaFZac"},
{"content":{"body":"jub0bs: or even if it didn't use Set-Cookie itself, that it would take Cookie request headers into account somehow","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: or even if it didn't use Set-Cookie itself, that it would take Cookie request headers into account somehow","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: or even if it didn't use Set-Cookie itself, that it would take Cookie request headers into account somehow","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: or even if it didn't use Set-Cookie itself, that it would take Cookie request headers into account somehow","mimetype":"text/html"}]},"ts":1668778490061,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ogY8A8VGh-vNuUQMBKy-e_uSl_ZceOhdl1azgk0n9Ow"},
{"content":{"body":"annevk: Now I'm no longer sure that a CORS middleware library can exist. 😟 It seems to require a lot of information about how the request is handled and the response composed.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Now I'm no longer sure that a CORS middleware library can exist. 😟 It seems to require a lot of information about how the request is handled and the response composed.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: Now I'm no longer sure that a CORS middleware library can exist. 😟 It seems to require a lot of information about how the request is handled and the response composed.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Now I'm no longer sure that a CORS middleware library can exist. 😟 It seems to require a lot of information about how the request is handled and the response composed.","mimetype":"text/html"}]},"ts":1668780477471,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$7-7JHcupZuTBU64I8ihKpP3j3gYSzvUsoVMWvoMITvM"},
{"content":{"body":"jub0bs: I think you can implement some kind of defaults and perhaps log a warning if they didn't explicitly declare they're not varying on Cookie headers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: I think you can implement some kind of defaults and perhaps log a warning if they didn't explicitly declare they're not varying on Cookie headers","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: I think you can implement some kind of defaults and perhaps log a warning if they didn't explicitly declare they're not varying on Cookie headers","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: I think you can implement some kind of defaults and perhaps log a warning if they didn't explicitly declare they're not varying on Cookie headers","mimetype":"text/html"}]},"ts":1668783254700,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$egGrq-SW8Sx8gJkwbWTB5F-SUuehsAAvSepTyE6Loj4"},
{"content":{"body":"jub0bs: cause in principle the origin server would have to use Vary: Cookie if they did indeed vary on Cookie, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: cause in principle the origin server would have to use Vary: Cookie if they did indeed vary on Cookie, right?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: cause in principle the origin server would have to use Vary: Cookie if they did indeed vary on Cookie, right?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: cause in principle the origin server would have to use Vary: Cookie if they did indeed vary on Cookie, right?","mimetype":"text/html"}]},"ts":1668783276138,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yPV_CS-uY7KZOXD8HJU-4wJ1JugDn0Nnyoho7QQts1g"},
{"content":{"body":"Domenic: I have questions about https://github.com/web-platform-tests/wpt/pull/37018#discussion_r1025934637","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I have questions about https://github.com/web-platform-tests/wpt/pull/37018#discussion_r1025934637","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: I have questions about https://github.com/web-platform-tests/wpt/pull/37018#discussion_r1025934637","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I have questions about https://github.com/web-platform-tests/wpt/pull/37018#discussion_r1025934637","mimetype":"text/html"}]},"ts":1668783597570,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$dbTB4jq-nd9Xrjyqj-RcgBIsgPjxRhm1ZRa4vdNOg5A"},
{"content":{"body":"Per https://drafts.csswg.org/cssom-view/#scrolling-events:\n\n> If target is a [Document](https://dom.spec.whatwg.org/#document), [fire an event](https://dom.spec.whatwg.org/#concept-event-fire) named [scrollend](https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend) that bubbles at target.\n> Otherwise, [fire an event](https://dom.spec.whatwg.org/#concept-event-fire) named [scrollend](https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend) at target.","format":"org.matrix.custom.html","formatted_body":"<p>Per https://drafts.csswg.org/cssom-view/#scrolling-events:</p>\n<blockquote>\n<p>If target is a <a href=\"https://dom.spec.whatwg.org/#document\">Document</a>, <a href=\"https://dom.spec.whatwg.org/#concept-event-fire\">fire an event</a> named <a href=\"https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend\">scrollend</a> that bubbles at target.<br>Otherwise, <a href=\"https://dom.spec.whatwg.org/#concept-event-fire\">fire an event</a> named <a href=\"https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend\">scrollend</a> at target.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Per https://drafts.csswg.org/cssom-view/#scrolling-events:\n\n> If target is a [Document](https://dom.spec.whatwg.org/#document), [fire an event](https://dom.spec.whatwg.org/#concept-event-fire) named [scrollend](https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend) that bubbles at target.\n> Otherwise, [fire an event](https://dom.spec.whatwg.org/#concept-event-fire) named [scrollend](https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend) at target.","mimetype":"text/plain"},{"body":"<p>Per https://drafts.csswg.org/cssom-view/#scrolling-events:</p>\n<blockquote>\n<p>If target is a <a href=\"https://dom.spec.whatwg.org/#document\">Document</a>, <a href=\"https://dom.spec.whatwg.org/#concept-event-fire\">fire an event</a> named <a href=\"https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend\">scrollend</a> that bubbles at target.<br>Otherwise, <a href=\"https://dom.spec.whatwg.org/#concept-event-fire\">fire an event</a> named <a href=\"https://drafts.csswg.org/cssom-view/#eventdef-document-scrollend\">scrollend</a> at target.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1668783640267,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$R75kJ0dBZ-cEeQt0H5VR98pwBrG7LEmOeA5puzHTy8E"},
{"content":{"body":"I'm uncertain how we'd keep the event handler content attribute usable without keeping `onscrollend` where it is (with forwarding behavior)","format":"org.matrix.custom.html","formatted_body":"I'm uncertain how we'd keep the event handler content attribute usable without keeping <code>onscrollend</code> where it is (with forwarding behavior)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm uncertain how we'd keep the event handler content attribute usable without keeping `onscrollend` where it is (with forwarding behavior)","mimetype":"text/plain"},{"body":"I'm uncertain how we'd keep the event handler content attribute usable without keeping <code>onscrollend</code> where it is (with forwarding behavior)","mimetype":"text/html"}]},"ts":1668783708450,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$YIYm55hcwNRlpkl_aFfC3vMkLjhrJdUVWjUkctR2TEo"},
{"content":{"body":"I guess we could change cssom-view to specify \"If target is `Document` or `document.body`, ... that bubbles at target\"","format":"org.matrix.custom.html","formatted_body":"I guess we could change cssom-view to specify &quot;If target is <code>Document</code> or <code>document.body</code>, ... that bubbles at target&quot;","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I guess we could change cssom-view to specify \"If target is `Document` or `document.body`, ... that bubbles at target\"","mimetype":"text/plain"},{"body":"I guess we could change cssom-view to specify &quot;If target is <code>Document</code> or <code>document.body</code>, ... that bubbles at target&quot;","mimetype":"text/html"}]},"ts":1668783766639,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$_HMwpOjqhA8FtPRTl_tpuuIsfXGRgk7EoBJEkkbMaWc"},
{"content":{"body":"Actually I think we'd want `document.scrollingElement` not `document.body` there","format":"org.matrix.custom.html","formatted_body":"Actually I think we'd want <code>document.scrollingElement</code> not <code>document.body</code> there","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Actually I think we'd want `document.scrollingElement` not `document.body` there","mimetype":"text/plain"},{"body":"Actually I think we'd want <code>document.scrollingElement</code> not <code>document.body</code> there","mimetype":"text/html"}]},"ts":1668783979099,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$UbpkfJAPvUd69z6Sy8BszHcs9kbMjN8zPmzplpwdmvA"},
{"content":{"body":"dlrobertson: I don't really understand the problem? If the \"otherwise\" case has the target being the body, then, `<body onscrollend=\"foo()\">` should call `foo()`.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@dlrobertson:mozilla.org\">dlrobertson</a>: I don't really understand the problem? If the &quot;otherwise&quot; case has the target being the body, then, <code>&lt;body onscrollend=&quot;foo()&quot;&gt;</code> should call <code>foo()</code>.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"dlrobertson: I don't really understand the problem? If the \"otherwise\" case has the target being the body, then, `<body onscrollend=\"foo()\">` should call `foo()`.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@dlrobertson:mozilla.org\">dlrobertson</a>: I don't really understand the problem? If the &quot;otherwise&quot; case has the target being the body, then, <code>&lt;body onscrollend=&quot;foo()&quot;&gt;</code> should call <code>foo()</code>.","mimetype":"text/html"}]},"ts":1668784812928,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$jUJo1Bi4suu41gxNv6D7Wrv1gBLtbrDu3npS_aOWeAk"},
{"content":{"body":"yeah, but it sort of requires breaking the first case right? If we expect `scrollend` for `document.scrollingElement.scroll(...)` to fire to `document.scrollingElement`, then I think the first case is never hit","format":"org.matrix.custom.html","formatted_body":"yeah, but it sort of requires breaking the first case right? If we expect <code>scrollend</code> for <code>document.scrollingElement.scroll(...)</code> to fire to <code>document.scrollingElement</code>, then I think the first case is never hit","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yeah, but it sort of requires breaking the first case right? If we expect `scrollend` for `document.scrollingElement.scroll(...)` to fire to `document.scrollingElement`, then I think the first case is never hit","mimetype":"text/plain"},{"body":"yeah, but it sort of requires breaking the first case right? If we expect <code>scrollend</code> for <code>document.scrollingElement.scroll(...)</code> to fire to <code>document.scrollingElement</code>, then I think the first case is never hit","mimetype":"text/html"}]},"ts":1668785381645,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$PlIyT0a9zUpmJ5M6K8BUFGLyC-jnUobhQ0jbZWcP14U"},
{"content":{"body":"and as a result, `window.onscrollend` is never used","format":"org.matrix.custom.html","formatted_body":"and as a result, <code>window.onscrollend</code> is never used","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and as a result, `window.onscrollend` is never used","mimetype":"text/plain"},{"body":"and as a result, <code>window.onscrollend</code> is never used","mimetype":"text/html"}]},"ts":1668785413796,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$_AFBaTysr8ri24HEZ0LLV0hrMroJsiIpKClCgJKk2eg"},
{"content":{"body":"I could be thinking too much on the implementation side","msgtype":"m.text","org.matrix.msc1767.text":"I could be thinking too much on the implementation side"},"ts":1668785433737,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$c3vurX3To6VXEzkbsZFql3pXz2tmdawXetfZW7uCy8w"},
{"content":{"body":"Doesn't it bubble to eventually hit window.onscrollend?","msgtype":"m.text","org.matrix.msc1767.text":"Doesn't it bubble to eventually hit window.onscrollend?"},"ts":1668785511707,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qa8UWXyP0lZ41qKHnTlLG6_2pmjqO3fnBnYk0ZtHehc"},
{"content":{"body":"currently only if the target is `Document`","format":"org.matrix.custom.html","formatted_body":"currently only if the target is <code>Document</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"currently only if the target is `Document`","mimetype":"text/plain"},{"body":"currently only if the target is <code>Document</code>","mimetype":"text/html"}]},"ts":1668785534181,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$d2mOLiOEH-TBtYX_N2wAusURu9MdabA_Tq8M2b0eiVk"},
{"content":{"body":"I thought events on body bubbled to window eventually...","msgtype":"m.text","org.matrix.msc1767.text":"I thought events on body bubbled to window eventually..."},"ts":1668785545554,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$SVYelMr8lAUE3y3bKPoAXXnYkGgSGuEICvlJiANOFvQ"},
{"content":{"body":"> <@domenicdenicola:matrix.org> I thought events on body bubbled to window eventually...\n\ndo you happen to know the relevant spec where I can read about this?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$SVYelMr8lAUE3y3bKPoAXXnYkGgSGuEICvlJiANOFvQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>I thought events on body bubbled to window eventually...</blockquote></mx-reply>do you happen to know the relevant spec where I can read about this?","m.relates_to":{"m.in_reply_to":{"event_id":"$SVYelMr8lAUE3y3bKPoAXXnYkGgSGuEICvlJiANOFvQ"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@domenicdenicola:matrix.org> I thought events on body bubbled to window eventually...\n\ndo you happen to know the relevant spec where I can read about this?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$SVYelMr8lAUE3y3bKPoAXXnYkGgSGuEICvlJiANOFvQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>I thought events on body bubbled to window eventually...</blockquote></mx-reply>do you happen to know the relevant spec where I can read about this?","mimetype":"text/html"}]},"ts":1668785613535,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$9iLDwWgd59fuxmqx37Gk58uwlKJ3Ij6pmfBXG5fmXgc"},
{"content":{"body":"Yeah, all events that bubble go from document to window","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, all events that bubble go from document to window"},"ts":1668785615476,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kQLDlzeglbWD-ly6XUbZJG3dmAJlJB3-iwxZh9H7xWQ"},
{"content":{"body":"And body to document","msgtype":"m.text","org.matrix.msc1767.text":"And body to document"},"ts":1668785624347,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$xvsenSHqd8zKaSOD40_0iuLAlmz7WgJ1owaNIr9EGZY"},
{"content":{"body":"Look at each instance of https://dom.spec.whatwg.org/#get-the-parent","msgtype":"m.text","org.matrix.msc1767.text":"Look at each instance of https://dom.spec.whatwg.org/#get-the-parent"},"ts":1668785637060,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kqJFUuCypUFWl0W-HBofSqdhodrPpeWykSH_E4e_3lk"},
{"content":{"body":"So it looks like if the viewport is scrolled, then the Document itself goes into pending scroll event targets. So it bubbles Document -> Window. If scrollingElement (= html element, I think) gets scrolled, then it bubbles html element -> Document -> Window. But event.target === the html element. Similarly if the body element gets scrolled, then it bubbles body -> html -> Document -> Window, with event.target === the body element.","msgtype":"m.text","org.matrix.msc1767.text":"So it looks like if the viewport is scrolled, then the Document itself goes into pending scroll event targets. So it bubbles Document -> Window. If scrollingElement (= html element, I think) gets scrolled, then it bubbles html element -> Document -> Window. But event.target === the html element. Similarly if the body element gets scrolled, then it bubbles body -> html -> Document -> Window, with event.target === the body element."},"ts":1668785752208,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$SvM7GPT08tITK8YWTrYIbEMdTub8OSr_Pl08nu-T6Ns"},
{"content":{"body":"Oh wait, second case doesn't bubble","msgtype":"m.text","org.matrix.msc1767.text":"Oh wait, second case doesn't bubble"},"ts":1668785797508,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$-6q81jES-kqW6PUqxTz53mI6QJPDS-27ctiz-uDwm44"},
{"content":{"body":"So I guess only the Document -> Window case bubbles. Kinda strange, but whatever...","msgtype":"m.text","org.matrix.msc1767.text":"So I guess only the Document -> Window case bubbles. Kinda strange, but whatever..."},"ts":1668785817371,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$z6Q-3fkEOF9H1cR_MBJ9PtO9Z_K7auYg4scSo6eam5w"},
{"content":{"body":"I think that's because we currently expect forwarding behavior, I'm starting to think the first case should be expanded to `Document` or `Document.scrollingElement`","format":"org.matrix.custom.html","formatted_body":"I think that's because we currently expect forwarding behavior, I'm starting to think the first case should be expanded to <code>Document</code> or <code>Document.scrollingElement</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I think that's because we currently expect forwarding behavior, I'm starting to think the first case should be expanded to `Document` or `Document.scrollingElement`","mimetype":"text/plain"},{"body":"I think that's because we currently expect forwarding behavior, I'm starting to think the first case should be expanded to <code>Document</code> or <code>Document.scrollingElement</code>","mimetype":"text/html"}]},"ts":1668785941226,"senderName":"dlrobertson","senderId":"@dlrobertson:mozilla.org","id":"$iSHXDDsofvtIP9BRF_STOK-AoKL-_P7_DXdMDKxIOzo"},
{"content":{"body":"Yeah, I guess it's strange that it's (according to that spec) possible to have some entries in the pending scroll event targets that are `Document`s, and some which are the scrolling element for the document. Not sure that distinction should exist.","format":"org.matrix.custom.html","formatted_body":"Yeah, I guess it's strange that it's (according to that spec) possible to have some entries in the pending scroll event targets that are <code>Document</code>s, and some which are the scrolling element for the document. Not sure that distinction should exist.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yeah, I guess it's strange that it's (according to that spec) possible to have some entries in the pending scroll event targets that are `Document`s, and some which are the scrolling element for the document. Not sure that distinction should exist.","mimetype":"text/plain"},{"body":"Yeah, I guess it's strange that it's (according to that spec) possible to have some entries in the pending scroll event targets that are <code>Document</code>s, and some which are the scrolling element for the document. Not sure that distinction should exist.","mimetype":"text/html"}]},"ts":1668786093385,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$wpGyMVVkMUMZXGeeywXApchmm3ozCcMjuMA6ojm323A"}
]