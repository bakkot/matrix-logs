[
{"content":{"body":" * There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","format":"org.matrix.custom.html","formatted_body":" * <p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","m.new_content":{"body":"There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","format":"org.matrix.custom.html","formatted_body":"<p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","mimetype":"text/plain"},{"body":"<p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$99hS1UaQUb6tOu2eBHPlgt6m4VitllJ0ETJ-OBITU1Y","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * There's more. Further down, we're encouraged to responds with `Vary: Cookie` in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:\n\n> `Vary: Cookie`\n> \n> `Cookie` is probably one of the most unique request headers, and is therefore very bad.","mimetype":"text/plain"},{"body":" * <p>There's more. Further down, we're encouraged to responds with <code>Vary: Cookie</code> in some circumstances. But isn't that terrible (in terms of cache segmentation) for CDNs / Web caches, since cookie values tend to differ from one user to the next? To quote https://fastly.com/blog/best-practices-using-vary-header#vary-cookie:</p>\n<blockquote>\n<p><code>Vary: Cookie</code></p>\n<p><code>Cookie</code> is probably one of the most unique request headers, and is therefore very bad.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1668763069652,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$6Jof2RlcRZ9KvKU2mqYucf2v-vJZkDqOvKrMd3nLC5c"},
{"content":{"body":"jub0bs: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jub0bs: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jub0bs:matrix.org\">jub0bs</a>: you have to know that Set-Cookie is never used for the response, whether middleware has that information depends","mimetype":"text/html"}]},"ts":1668763152915,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1fzRP6c0mlPYYFXmiqFieQOkfSFgX7Gz0-_M5qZV6fo"},
{"content":{"body":"Alice: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@alice:igalia.com\">Alice</a>: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Alice: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@alice:igalia.com\">Alice</a>: happy to meet next week, I'm usually available 9-5 Berlin time. Could probably make 8:30 work. Earlier would be tricky, but maybe doable for a one-off.","mimetype":"text/html"}]},"ts":1668763241799,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$58cTe8jIh4RcgOkjgH_UwzjFHRW-BSs2ieUod2qeyL0"},
{"content":{"body":"annevk: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add `Vary: Cookie` to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be \"yes\". But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add <code>Vary: Cookie</code> to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be &quot;yes&quot;. But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add `Vary: Cookie` to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be \"yes\". But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I guess what I'm trying to figure out is, under the assumption that there are legitimate cases to add <code>Vary: Cookie</code> to a response, should it be the responsibility of CORS middleware? Jake's answer (according to that section of his post) seems to be &quot;yes&quot;. But that means CORS middleware must inspect the response to the actual request to decide what to do. None of the existing CORS middleware I've reviewed currently do that; they inspect the actual request, but not the response to it. That's why I'm surprised by Jake's post.","mimetype":"text/html"}]},"ts":1668767594689,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$P5y2QOZrUbpmsS9gBsskaN_E30jf5OZjWgiR3xW_fJQ"},
{"content":{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"ts":1668768362053,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$H1ygL71afxPRtkNIr6bFVf8Z5DCRAhmhe5oa8sD3XT8"},
{"content":{"body":" * annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","m.new_content":{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$H1ygL71afxPRtkNIr6bFVf8Z5DCRAhmhe5oa8sD3XT8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * annevk: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:\n\n> Ultimately server developers have a lot of freedom in how they handle HTTP responses \\[...\\] They can provide a dynamic response, _tuned to CORS request_.\n\nMy emphasis.","mimetype":"text/plain"},{"body":" * <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Unless I missed something, the Fetch standard doesn't provide any guidance about that. The only relevant passage I found only mentions tuning the CORS headers according to the CORS request, not its response:</p>\n<blockquote>\n<p>Ultimately server developers have a lot of freedom in how they handle HTTP responses [...] They can provide a dynamic response, <em>tuned to CORS request</em>.</p>\n</blockquote>\n<p>My emphasis.</p>\n","mimetype":"text/html"}]},"ts":1668768369812,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$N7mdDUt7MciGhNeS9N8NfyTUsnuT_C06xDyEDa2VmMk"},
{"content":{"body":"I don't think that sentence considers middleware as separate software from the server.","msgtype":"m.text","org.matrix.msc1767.text":"I don't think that sentence considers middleware as separate software from the server."},"ts":1668769495568,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hQs4VZ1ImxbrDWZ4TvyuThhMXn7z-C6jagPBPHuG44k"}
]