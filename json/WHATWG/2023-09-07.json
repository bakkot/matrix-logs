[
{"content":{"body":"jugglinmike: we prefer explicit callbacks these days, like we've done for all other WebDriver BiDi hooks.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a>: we prefer explicit callbacks these days, like we've done for all other WebDriver BiDi hooks.","msgtype":"m.text"},"ts":1694052619942,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$LV5_FHqP0wi0WY7JCvQ_n2bB-SRM18N6Xg5uPvgVarg"},
{"content":{"body":"In particular, this helps get the ordering clear.","msgtype":"m.text"},"ts":1694052626457,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$QM2M8JljnL6CSTR6w_YLfGvzeZlJXAEinvoveBdZCz4"},
{"content":{"body":"Not sure what hooks you're referring to that already exist, although it's a long section so maybe I just missed them","msgtype":"m.text"},"ts":1694052655245,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$vqzqh_5qS2iqDLP0NlOE8gZD5VXE9ppCqF2-kaPhAlc"},
{"content":{"body":"Oh you mean the many specific ones, not a generic one.","msgtype":"m.text"},"ts":1694052694583,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$O6-LGQ8SGILVTGZBP1806jyHvIyyGNCsWlzuyknh0og"},
{"content":{"body":"Hello All,","msgtype":"m.text"},"ts":1694077570160,"senderName":"sbastiandev","senderId":"@sbastiandev:matrix.org","id":"$xn4A1j4YX6c_po-pbYYTRb-hXl5o_Iym1WF7a4nvfO4"},
{"content":{"body":"I am almost done implementing the latest URL Spec in Java and was wondering if the various URL's setters should throw Exceptions when something goes wrong ? I read the specification and didn't find anything on this ? Can anyone shed some light ? Thx a lot","msgtype":"m.text"},"ts":1694077742795,"senderName":"sbastiandev","senderId":"@sbastiandev:matrix.org","id":"$P-X-_PCwocl6d2QyBDo576keZLewUJ4Xqho23gyoVWM"},
{"content":{"body":"sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sbastiandev:matrix.org\">sbastiandev</a>: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent","msgtype":"m.text"},"ts":1694082298636,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$g7OGHZhCjz73SHO2UJiIV1YC-1uE4Jx4XEi5M371rp8"},
{"content":{"body":"as in, the web platform doesn't throw on validation errors (based on the note, for backwards compatibility), but conformance checkers probably should. Makes sense to me that this is a library/platform decision rather than spec decision. probably some people here with more context though","msgtype":"m.text"},"ts":1694082527946,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$vtVju0Ir2BX99cUf2lRy-bCf657TQVGNOvBFLALLwJw"},
{"content":{"body":"> <@noamr:matrix.org> sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent\n\nThanks for your reply. The main concern though is that you've got cases where the behavior of setting parts versus parsing a url is not consistent in term of reporting failures. For instance parsing a url with a wrong port would fail. However calling url.port = \"bad-port-number\" would not. But as you said it's probably a library/platform decision. Thank you","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$g7OGHZhCjz73SHO2UJiIV1YC-1uE4Jx4XEi5M371rp8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br><a href=\"https://matrix.to/#/@sbastiandev:matrix.org\">sbastiandev</a>: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent</blockquote></mx-reply>Thanks for your reply. The main concern though is that you've got cases where the behavior of setting parts versus parsing a url is not consistent in term of reporting failures. For instance parsing a url with a wrong port would fail. However calling url.port = \"bad-port-number\" would not. But as you said it's probably a library/platform decision. Thank you","m.relates_to":{"m.in_reply_to":{"event_id":"$g7OGHZhCjz73SHO2UJiIV1YC-1uE4Jx4XEi5M371rp8"}},"msgtype":"m.text"},"ts":1694090214153,"senderName":"sbastiandev","senderId":"@sbastiandev:matrix.org","id":"$1pmQR16aVhAkdsvmfMyPwCqLmLTnAAeNbayPUJGTJgU"},
{"content":{"body":"sbastiandev:  if you see the setter algorithm, those do something and then call the parsing algorithm and some parsing leads to validation errors, which leads back to this note","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sbastiandev:matrix.org\">sbastiandev</a>:  if you see the setter algorithm, those do something and then call the parsing algorithm and some parsing leads to validation errors, which leads back to this note","msgtype":"m.text"},"ts":1694090801435,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Ve2IPfsMfHTRxTiQscenBApKlMCLC31NdIPJlILeL3o"},
{"content":{"body":"(setter algorithms)","msgtype":"m.text"},"ts":1694090814317,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$QQeilVwl4-GMSGan5rFwQfgpplzSnztt2xB-L5WkXL0"},
{"content":{"body":"e.g. \"The protocol setter steps are to *basic URL parse* the given value, followed by U+003A (:), with this’s URL as url and scheme start state as state override.\"","format":"org.matrix.custom.html","formatted_body":"e.g. \"The protocol setter steps are to <em>basic URL parse</em> the given value, followed by U+003A (:), with this’s URL as url and scheme start state as state override.\"","msgtype":"m.text"},"ts":1694090880107,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uxNp-HICt0nEsM4mDhToyVRHD7EcyfRKTIePU0BN-o8"},
{"content":{"body":"Thanks Domenic !","format":"org.matrix.custom.html","formatted_body":"Thanks <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> !","msgtype":"m.text"},"ts":1694098658707,"senderName":"jugglinmike","senderId":"@jugglinmike:matrix.org","id":"$03n_26lSJDnYAVGm7Hq7dEpoN0Q-ZSDEu2uO4PSxK1Q"}
]