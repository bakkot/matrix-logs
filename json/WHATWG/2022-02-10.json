[
{"content":{"body":"annevk: with the fetch API, if a response has no body — for example, for a 204 response — will `response.body` be null? context: https://github.com/mdn/content/issues/12862#issuecomment-1034609833 ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: with the fetch API, if a response has no body — for example, for a 204 response — will <code>response.body</code> be null? context: https://github.com/mdn/content/issues/12862#issuecomment-1034609833","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: with the fetch API, if a response has no body — for example, for a 204 response — will `response.body` be null? context: https://github.com/mdn/content/issues/12862#issuecomment-1034609833 ","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: with the fetch API, if a response has no body — for example, for a 204 response — will <code>response.body</code> be null? context: https://github.com/mdn/content/issues/12862#issuecomment-1034609833","mimetype":"text/html"}]},"ts":1644486125670,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$UGMNClDw0tfDkdtVJZ1xnEqRK-aXV0WNLUsJI0NikYQ"},
{"content":{"body":"sideshowbarker: yeah, it would make sense for it to be null in that case","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: yeah, it would make sense for it to be null in that case","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: yeah, it would make sense for it to be null in that case","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: yeah, it would make sense for it to be null in that case","mimetype":"text/html"}]},"ts":1644486320312,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$jbPhY5USv7IHAvnI6M3YcF40_C0V-roDzGXWZBfjjSg"},
{"content":{"body":"(and the spec allows for it to return null)","msgtype":"m.text","org.matrix.msc1767.text":"(and the spec allows for it to return null)"},"ts":1644486331156,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$sU4cYBYFkJYCNm0kHvYfCon_oC3d2abLw-EWMjscJFQ"},
{"content":{"body":"> <@annevk:mozilla.org> sideshowbarker: yeah, it would make sense for it to be null in that case\n\nOK, thanks — though in the case of the response from https://httpstat.us/204 it does seem to end up being a `ReadableStream` and not null. But maybe that’s due to them sending a 0-byte response? (if that’s actually possible)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$jbPhY5USv7IHAvnI6M3YcF40_C0V-roDzGXWZBfjjSg?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: yeah, it would make sense for it to be null in that case</blockquote></mx-reply>OK, thanks — though in the case of the response from https://httpstat.us/204 it does seem to end up being a <code>ReadableStream</code> and not null. But maybe that’s due to them sending a 0-byte response? (if that’s actually possible)","m.relates_to":{"m.in_reply_to":{"event_id":"$jbPhY5USv7IHAvnI6M3YcF40_C0V-roDzGXWZBfjjSg"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@annevk:mozilla.org> sideshowbarker: yeah, it would make sense for it to be null in that case\n\nOK, thanks — though in the case of the response from https://httpstat.us/204 it does seem to end up being a `ReadableStream` and not null. But maybe that’s due to them sending a 0-byte response? (if that’s actually possible)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$jbPhY5USv7IHAvnI6M3YcF40_C0V-roDzGXWZBfjjSg?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: yeah, it would make sense for it to be null in that case</blockquote></mx-reply>OK, thanks — though in the case of the response from https://httpstat.us/204 it does seem to end up being a <code>ReadableStream</code> and not null. But maybe that’s due to them sending a 0-byte response? (if that’s actually possible)","mimetype":"text/html"}]},"ts":1644486468659,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$ug_d3YB5_9XyGN_2cKozlJMmUjldsQ0tjAJcUfDkOKg"},
{"content":{"body":"sideshowbarker: that would be a browser bug per spec...","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: that would be a browser bug per spec...","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: that would be a browser bug per spec...","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: that would be a browser bug per spec...","mimetype":"text/html"}]},"ts":1644486521733,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$QIMFKWsnA-Bprsx4Fg4SJvutmjC-a2QnTDJWQIHBXNE"},
{"content":{"body":"sideshowbarker: spec special cases a couple of response codes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: spec special cases a couple of response codes","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: spec special cases a couple of response codes","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: spec special cases a couple of response codes","mimetype":"text/html"}]},"ts":1644486540944,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ZfOQjMEYijjXd9EClckr2pzXm58LbKiak3q8ERBsWVY"},
{"content":{"body":"ah","msgtype":"m.text","org.matrix.msc1767.text":"ah"},"ts":1644486552184,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$R-Cjt29BafJpR-MrSTHHi9-fBw34VhAdkNMzGO_PZRw"},
{"content":{"body":"looks back at the spec","msgtype":"m.emote","org.matrix.msc1767.text":"looks back at the spec"},"ts":1644486560973,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$jq6LFllCbTC9LMpZiwXde0E6hEhbSemeAbI3oEo57AM"},
{"content":{"body":"hmm I’m not finding anything about special-casing in the spec that would allow an empty response to ever be a `ReadableStream` rather than null","format":"org.matrix.custom.html","formatted_body":"hmm I’m not finding anything about special-casing in the spec that would allow an empty response to ever be a <code>ReadableStream</code> rather than null","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"hmm I’m not finding anything about special-casing in the spec that would allow an empty response to ever be a `ReadableStream` rather than null","mimetype":"text/plain"},{"body":"hmm I’m not finding anything about special-casing in the spec that would allow an empty response to ever be a <code>ReadableStream</code> rather than null","mimetype":"text/html"}]},"ts":1644486799898,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$_d0R7gUuQx-QSMrBf8ntl07XSJteiigD6dxTGvYrw5c"},
{"content":{"body":"https://fetch.spec.whatwg.org/#ref-for-null-body-status","msgtype":"m.text"},"ts":1644486843040,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$P7CKOfx4adnP7jg_Tm45vfFcFprdQ0sdeU8X-S_Bcxs"},
{"content":{"body":"and even testing with a HEAD request, I still get a `ReadableStream`","format":"org.matrix.custom.html","formatted_body":"and even testing with a HEAD request, I still get a <code>ReadableStream</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and even testing with a HEAD request, I still get a `ReadableStream`","mimetype":"text/plain"},{"body":"and even testing with a HEAD request, I still get a <code>ReadableStream</code>","mimetype":"text/html"}]},"ts":1644486859543,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$FW6nwLJfiCkSQ_731AZ9n2QrrS1mcGd5u3qDBWK_sLU"},
{"content":{"body":"```js\nfetch(\"https://httpstat.us/200\", { method: \"HEAD\" }).then(response => console.log(response.body))\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">fetch(&quot;https://httpstat.us/200&quot;, { method: &quot;HEAD&quot; }).then(response =&gt; console.log(response.body))\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nfetch(\"https://httpstat.us/200\", { method: \"HEAD\" }).then(response => console.log(response.body))\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">fetch(&quot;https://httpstat.us/200&quot;, { method: &quot;HEAD&quot; }).then(response =&gt; console.log(response.body))\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644486873744,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$6CXGDcfGEIf4CTnTs-DdUBXCAzPh5Y8FDaee488sC5w"},
{"content":{"body":"```js\nfetch(\"https://httpstat.us/204\").then(response => console.log(response.body))\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">fetch(&quot;https://httpstat.us/204&quot;).then(response =&gt; console.log(response.body))\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nfetch(\"https://httpstat.us/204\").then(response => console.log(response.body))\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">fetch(&quot;https://httpstat.us/204&quot;).then(response =&gt; console.log(response.body))\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644486892936,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$VAOWsROSYf1go1uxqWxoBswlV3Dq_ioQIIKjYC25ipQ"},
{"content":{"body":"> <@abotella:igalia.com> https://fetch.spec.whatwg.org/#ref-for-null-body-status\n\nthanks, looking now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$P7CKOfx4adnP7jg_Tm45vfFcFprdQ0sdeU8X-S_Bcxs?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>https://fetch.spec.whatwg.org/#ref-for-null-body-status</blockquote></mx-reply>thanks, looking now","m.relates_to":{"m.in_reply_to":{"event_id":"$P7CKOfx4adnP7jg_Tm45vfFcFprdQ0sdeU8X-S_Bcxs"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@abotella:igalia.com> https://fetch.spec.whatwg.org/#ref-for-null-body-status\n\nthanks, looking now","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$P7CKOfx4adnP7jg_Tm45vfFcFprdQ0sdeU8X-S_Bcxs?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@abotella:igalia.com\">@abotella:igalia.com</a><br>https://fetch.spec.whatwg.org/#ref-for-null-body-status</blockquote></mx-reply>thanks, looking now","mimetype":"text/html"}]},"ts":1644486906499,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$RWEk4r7lVHMkYCEENGeg0WfZThh5u5zMV0n6kdohi8E"},
{"content":{"body":"That's a browser bug","msgtype":"m.text","org.matrix.msc1767.text":"That's a browser bug"},"ts":1644486908080,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$JFNHusWEYFIyQBOOdboqmoE2bswE6Z7tY4TpRNPA2jQ"},
{"content":{"body":"OK","msgtype":"m.text","org.matrix.msc1767.text":"OK"},"ts":1644486923772,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$8-a4lnk5GoS1te2ei9HHiwTQRwHbfrDD-ILCK6tC5v4"},
{"content":{"body":"Deno does this correctly: \n```js\n/m/s/P/g/denoland ❯❯❯ deno\nDeno 1.18.2\nexit using ctrl+d or close()\n> fetch(\"https://httpstat.us/200\", { method: \"HEAD\" }).then(response => console.log(response.body))\n\nPromise { <pending> }\n> null\n> fetch(\"https://httpstat.us/204\").then(response => console.log(response.body))\n\nPromise { <pending> }\n> null\n```","format":"org.matrix.custom.html","formatted_body":"<p>Deno does this correctly:</p>\n<pre><code class=\"language-js\">/m/s/P/g/denoland ❯❯❯ deno\nDeno 1.18.2\nexit using ctrl+d or close()\n&gt; fetch(&quot;https://httpstat.us/200&quot;, { method: &quot;HEAD&quot; }).then(response =&gt; console.log(response.body))\n\nPromise { &lt;pending&gt; }\n&gt; null\n&gt; fetch(&quot;https://httpstat.us/204&quot;).then(response =&gt; console.log(response.body))\n\nPromise { &lt;pending&gt; }\n&gt; null\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Deno does this correctly: \n```js\n/m/s/P/g/denoland ❯❯❯ deno\nDeno 1.18.2\nexit using ctrl+d or close()\n> fetch(\"https://httpstat.us/200\", { method: \"HEAD\" }).then(response => console.log(response.body))\n\nPromise { <pending> }\n> null\n> fetch(\"https://httpstat.us/204\").then(response => console.log(response.body))\n\nPromise { <pending> }\n> null\n```","mimetype":"text/plain"},{"body":"<p>Deno does this correctly:</p>\n<pre><code class=\"language-js\">/m/s/P/g/denoland ❯❯❯ deno\nDeno 1.18.2\nexit using ctrl+d or close()\n&gt; fetch(&quot;https://httpstat.us/200&quot;, { method: &quot;HEAD&quot; }).then(response =&gt; console.log(response.body))\n\nPromise { &lt;pending&gt; }\n&gt; null\n&gt; fetch(&quot;https://httpstat.us/204&quot;).then(response =&gt; console.log(response.body))\n\nPromise { &lt;pending&gt; }\n&gt; null\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644486938276,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$PHl32NKdK-awpINObMjA5AgA2QVGJBSIJsAVMyIS1Qo"},
{"content":{"body":"> <@lucacasonato:matrix.org> That's a browser bug\n\nOK, so based on simple testing just now, Safari, Firefox, and Chrome all seem to have this same bug.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$JFNHusWEYFIyQBOOdboqmoE2bswE6Z7tY4TpRNPA2jQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br>That&#39;s a browser bug</blockquote></mx-reply>OK, so based on simple testing just now, Safari, Firefox, and Chrome all seem to have this same bug.","m.relates_to":{"m.in_reply_to":{"event_id":"$JFNHusWEYFIyQBOOdboqmoE2bswE6Z7tY4TpRNPA2jQ"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@lucacasonato:matrix.org> That's a browser bug\n\nOK, so based on simple testing just now, Safari, Firefox, and Chrome all seem to have this same bug.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$JFNHusWEYFIyQBOOdboqmoE2bswE6Z7tY4TpRNPA2jQ?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@lucacasonato:matrix.org\">@lucacasonato:matrix.org</a><br>That&#39;s a browser bug</blockquote></mx-reply>OK, so based on simple testing just now, Safari, Firefox, and Chrome all seem to have this same bug.","mimetype":"text/html"}]},"ts":1644488365013,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$m_eL-KQbHhj8kYHiCM3iTV89kQ72STYxZNxQnD6g16o"},
{"content":{"body":":D","msgtype":"m.text","org.matrix.msc1767.text":":D"},"ts":1644488371860,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$whYZxtxpwfZELGj-7tlewdfyzFGiNtxlSWjE1WifuGI"},
{"content":{"body":"yeah, so I think I probably now need to do a follow-up to the MDN change I made, to indicate that while the spec says it should be null, browsers don’t conform","msgtype":"m.text","org.matrix.msc1767.text":"yeah, so I think I probably now need to do a follow-up to the MDN change I made, to indicate that while the spec says it should be null, browsers don’t conform"},"ts":1644488423767,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$XcRRf6fJaUOyx27bRg_37TPSAuF3bj-bnfEMl6YpIV8"},
{"content":{"body":"So if you do new Response().body it's null in Firefox, but maybe once networking gets involved it gets messed up","msgtype":"m.text","org.matrix.msc1767.text":"So if you do new Response().body it's null in Firefox, but maybe once networking gets involved it gets messed up"},"ts":1644488477317,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$DyjBT4j7mZaBH682vcN6t0L81JMHOz4DcEhcYxDGscw"},
{"content":{"body":"I thought there was a WPT for this (I remember fixing it in Deno). But that might actually have only covered the `new Response(null, {status: 204})` case","format":"org.matrix.custom.html","formatted_body":"I thought there was a WPT for this (I remember fixing it in Deno). But that might actually have only covered the <code>new Response(null, {status: 204})</code> case","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I thought there was a WPT for this (I remember fixing it in Deno). But that might actually have only covered the `new Response(null, {status: 204})` case","mimetype":"text/plain"},{"body":"I thought there was a WPT for this (I remember fixing it in Deno). But that might actually have only covered the <code>new Response(null, {status: 204})</code> case","mimetype":"text/html"}]},"ts":1644488516675,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$3vQHfAMV7ImtLi9j9OgF4h_g1AlHRJ8js95GFOC-81w"},
{"content":{"body":"I'm surprised this isn't tested as well, but I have not paid as close attention to all the streams stuff","msgtype":"m.text","org.matrix.msc1767.text":"I'm surprised this isn't tested as well, but I have not paid as close attention to all the streams stuff"},"ts":1644488540624,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$080q-h09bDmLh1PM37wFF_BggOP8HapERnBtYC3GTCY"},
{"content":{"body":"This is the only related test I can find right now:\n```js\ntest(function() {\n  var response = new Response(null, {status: 204});\n  assert_equals(response.body, null);\n}, \"Testing null Response body\");\n```","format":"org.matrix.custom.html","formatted_body":"<p>This is the only related test I can find right now:</p>\n<pre><code class=\"language-js\">test(function() {\n  var response = new Response(null, {status: 204});\n  assert_equals(response.body, null);\n}, &quot;Testing null Response body&quot;);\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"This is the only related test I can find right now:\n```js\ntest(function() {\n  var response = new Response(null, {status: 204});\n  assert_equals(response.body, null);\n}, \"Testing null Response body\");\n```","mimetype":"text/plain"},{"body":"<p>This is the only related test I can find right now:</p>\n<pre><code class=\"language-js\">test(function() {\n  var response = new Response(null, {status: 204});\n  assert_equals(response.body, null);\n}, &quot;Testing null Response body&quot;);\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644488589060,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$SfmtPEoWIGRMBNqCWfr4DUAo8hCFuU6niDmEwYE7r8o"},
{"content":{"body":"oh and this:\n```js\nvar nullBodyStatus = [204, 205, 304];\nnullBodyStatus.forEach(function(status) {\n  test(function() {\n    assert_throws_js(TypeError,\n      function() { new Response(\"body\", {\"status\" : status }); },\n      \"Expect TypeError exception \");\n  },\"Throws TypeError when building a response with body and a body status of \" + status);\n});\n\n```","format":"org.matrix.custom.html","formatted_body":"<p>oh and this:</p>\n<pre><code class=\"language-js\">var nullBodyStatus = [204, 205, 304];\nnullBodyStatus.forEach(function(status) {\n  test(function() {\n    assert_throws_js(TypeError,\n      function() { new Response(&quot;body&quot;, {&quot;status&quot; : status }); },\n      &quot;Expect TypeError exception &quot;);\n  },&quot;Throws TypeError when building a response with body and a body status of &quot; + status);\n});\n\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"oh and this:\n```js\nvar nullBodyStatus = [204, 205, 304];\nnullBodyStatus.forEach(function(status) {\n  test(function() {\n    assert_throws_js(TypeError,\n      function() { new Response(\"body\", {\"status\" : status }); },\n      \"Expect TypeError exception \");\n  },\"Throws TypeError when building a response with body and a body status of \" + status);\n});\n\n```","mimetype":"text/plain"},{"body":"<p>oh and this:</p>\n<pre><code class=\"language-js\">var nullBodyStatus = [204, 205, 304];\nnullBodyStatus.forEach(function(status) {\n  test(function() {\n    assert_throws_js(TypeError,\n      function() { new Response(&quot;body&quot;, {&quot;status&quot; : status }); },\n      &quot;Expect TypeError exception &quot;);\n  },&quot;Throws TypeError when building a response with body and a body status of &quot; + status);\n});\n\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644488605092,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$kEoLUu7_iFwo0PnLYYhaTbkHuzEJgMdGwlYbYYxh7Yg"},
{"content":{"body":"I can add some tests start of next week","msgtype":"m.text","org.matrix.msc1767.text":"I can add some tests start of next week"},"ts":1644488657813,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$x-bXCMMf7oHQDb2Nvo7yRKM9GHLJR-uIkk-pHZcsnGY"},
{"content":{"body":"> <@annevk:mozilla.org> If anyone here isn't part of the WHATWG GitHub org but has contributed please let me know (unless you don't care for an invite)\n\nOh I’d take one then, if that’s okay. “karwa” on GitHub.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs%3Amatrix.org/%24SlOFy_kc1HHLCf3vkhz0Tw1bwGHF5Wzg3zTo6uSQMY4\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br>If anyone here isn't part of the WHATWG GitHub org but has contributed please let me know (unless you don't care for an invite)</blockquote></mx-reply>Oh I’d take one then, if that’s okay. “karwa” on GitHub.","m.relates_to":{"m.in_reply_to":{"event_id":"$SlOFy_kc1HHLCf3vkhz0Tw1bwGHF5Wzg3zTo6uSQMY4"}},"msgtype":"m.text"},"ts":1644514207019,"senderName":"Karl","senderId":"@karwa:matrix.org","id":"$DMb-vmZ8xTEjw54P3Qnrfd1mqQLzR3KmJZ_j3ABrPtk"},
{"content":{"body":"How do reviews work on whatwg specs? Or I guess how do I find out who other than myself has write access to approve PRs to the new FS spec (since I presumably shouldn't approve my own changes, even if they are purely editorial)?","msgtype":"m.text","org.matrix.msc1767.text":"How do reviews work on whatwg specs? Or I guess how do I find out who other than myself has write access to approve PRs to the new FS spec (since I presumably shouldn't approve my own changes, even if they are purely editorial)?"},"ts":1644516390985,"senderName":"mek","senderId":"@mek:kde.org","id":"$XNMPpEpFsYQemJgH0DEI2BcV78KW0jbT6rdfllh6PIU"},
{"content":{"body":"mek: sorry, I've been meaning to get to it, but huge backlog is huge; maybe Domenic can help out","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: sorry, I've been meaning to get to it, but huge backlog is huge; maybe <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> can help out","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"mek: sorry, I've been meaning to get to it, but huge backlog is huge; maybe Domenic can help out","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: sorry, I've been meaning to get to it, but huge backlog is huge; maybe <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> can help out","mimetype":"text/html"}]},"ts":1644516769973,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$arq_4ojpR0ru9Ift-V_JRg-ZawQMV-osKTX5WkJUH2Q"},
{"content":{"body":"mek: one thing I found kinda strange is that the `for=` attribute didn't contain the name of the term, but I didn't really take the time to explore","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: one thing I found kinda strange is that the <code>for=</code> attribute didn't contain the name of the term, but I didn't really take the time to explore","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"mek: one thing I found kinda strange is that the `for=` attribute didn't contain the name of the term, but I didn't really take the time to explore","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: one thing I found kinda strange is that the <code>for=</code> attribute didn't contain the name of the term, but I didn't really take the time to explore","mimetype":"text/html"}]},"ts":1644516798633,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$7_ZliTuVakSFSWn11t-WWxyvh9jbTa_tQWf2DDqUJMk"},
{"content":{"body":"At a more meta-level, we don't really have a system and if it turns out to be prohibitive for your spec, we can remove the reviewer requirement; I'd recommend against doing that though, it's usually worth the wait","msgtype":"m.text","org.matrix.msc1767.text":"At a more meta-level, we don't really have a system and if it turns out to be prohibitive for your spec, we can remove the reviewer requirement; I'd recommend against doing that though, it's usually worth the wait"},"ts":1644516907993,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$ZGu1QWVO4RhyopZxtUv4BJ0EcK4dPsdhRc7TbjMMoTk"},
{"content":{"body":"I'm totally in favor of reviews, the fact that github gives no way to even figure out who can give reviews is mostly annoying...","msgtype":"m.text","org.matrix.msc1767.text":"I'm totally in favor of reviews, the fact that github gives no way to even figure out who can give reviews is mostly annoying..."},"ts":1644516949703,"senderName":"mek","senderId":"@mek:kde.org","id":"$DzGi7NhapP1bJk2QyAT6bW1AO4spysW9Up-mgpdFkfs"},
{"content":{"body":"mek: right, I think currently it's you and WHATWG admins, but we can add more folks, e.g., inexorabletash and asuth are reviewers for Storage","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: right, I think currently it's you and WHATWG admins, but we can add more folks, e.g., inexorabletash and asuth are reviewers for Storage","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"mek: right, I think currently it's you and WHATWG admins, but we can add more folks, e.g., inexorabletash and asuth are reviewers for Storage","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@mek:kde.org\">mek</a>: right, I think currently it's you and WHATWG admins, but we can add more folks, e.g., inexorabletash and asuth are reviewers for Storage","mimetype":"text/html"}]},"ts":1644517038821,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$6pAK2VqLg7nPeRRTslouWIcKO3I2q044CUxW0n9JW-M"},
{"content":{"body":"Domenic: did you consider document conformance rules when reviewing `blocking=render`? It seems to me that it's allowed to have any  value","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: did you consider document conformance rules when reviewing <code>blocking=render</code>? It seems to me that it's allowed to have any  value","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: did you consider document conformance rules when reviewing `blocking=render`? It seems to me that it's allowed to have any  value","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: did you consider document conformance rules when reviewing <code>blocking=render</code>? It seems to me that it's allowed to have any  value","mimetype":"text/html"}]},"ts":1644522843786,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$UqETtbR8e0u2gm5A-jx0Z22OF2QwK-p5KDh43ef2kAk"},
{"content":{"body":"> <@zcorpan_:matrix.org> Domenic: did you consider document conformance rules when reviewing `blocking=render`? It seems to me that it's allowed to have any  value\n\nI think you are right this is not correct. It is constrained to be a space-separated sequence of tokens but I made the wrong assumption that \"supported tokens\" helped with conformance.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UqETtbR8e0u2gm5A-jx0Z22OF2QwK-p5KDh43ef2kAk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan_:matrix.org\">@zcorpan_:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: did you consider document conformance rules when reviewing <code>blocking=render</code>? It seems to me that it's allowed to have any  value</blockquote></mx-reply>I think you are right this is not correct. It is constrained to be a space-separated sequence of tokens but I made the wrong assumption that &quot;supported tokens&quot; helped with conformance.","m.relates_to":{"m.in_reply_to":{"event_id":"$UqETtbR8e0u2gm5A-jx0Z22OF2QwK-p5KDh43ef2kAk"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@zcorpan_:matrix.org> Domenic: did you consider document conformance rules when reviewing `blocking=render`? It seems to me that it's allowed to have any  value\n\nI think you are right this is not correct. It is constrained to be a space-separated sequence of tokens but I made the wrong assumption that \"supported tokens\" helped with conformance.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UqETtbR8e0u2gm5A-jx0Z22OF2QwK-p5KDh43ef2kAk?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan_:matrix.org\">@zcorpan_:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: did you consider document conformance rules when reviewing <code>blocking=render</code>? It seems to me that it's allowed to have any  value</blockquote></mx-reply>I think you are right this is not correct. It is constrained to be a space-separated sequence of tokens but I made the wrong assumption that &quot;supported tokens&quot; helped with conformance.","mimetype":"text/html"}]},"ts":1644523410204,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$hP1n0nJ-VSHQ7YgNbzEz49I85DY2N2oNveJqnfbjPO0"},
{"content":{"body":"\"A blocking attribute must have a value that is an unordered set of unique space-separated tokens. \" -> \"A blocking attribute must have a value that is an unordered set of unique space-separated tokens, each of which is a possible blocking token\"?","msgtype":"m.text","org.matrix.msc1767.text":"\"A blocking attribute must have a value that is an unordered set of unique space-separated tokens. \" -> \"A blocking attribute must have a value that is an unordered set of unique space-separated tokens, each of which is a possible blocking token\"?"},"ts":1644523444699,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$GTo9gO3emHv3sYpbGFGLKPPEGAn1mDypgkoguvJg7Zc"},
{"content":{"body":"Domenic: right. Yeah, the proposed text should do it I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: right. Yeah, the proposed text should do it I think","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: right. Yeah, the proposed text should do it I think","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: right. Yeah, the proposed text should do it I think","mimetype":"text/html"}]},"ts":1644530859483,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$sO9L7JQPRgwk7y5lERgup8qKHbvzxyn7p6M_fo6_qqI"},
{"content":{"body":"Domenic: I found   another bug in the idl, will report an issue","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I found   another bug in the idl, will report an issue","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: I found   another bug in the idl, will report an issue","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I found   another bug in the idl, will report an issue","mimetype":"text/html"}]},"ts":1644530903586,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$8UJKksrlvz-m4Ccpgg8rf4wFUfYkOBVcxczPCY0u52g"}
]