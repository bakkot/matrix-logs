[
{"content":{"body":"This [stackoverflow question](https://stackoverflow.com/questions/77969202) made me look into how [localStorage](https://html.spec.whatwg.org/multipage/webstorage.html#dom-localstorage) is defined and there is a point that seems weird. As I read it, each Document has its `local storage holder` set only when the `localStorage` getter is called, and the *broadcast* operation fires event only on globals that have a matching Storage holder.  So if a Document does set a *storage* event listener without calling that getter it wouldn't receive events? All browsers seem to fire it anyway https://jsfiddle.net/yspr304z/ So why define it only in the getter? Did I miss something or should I open an issue?","format":"org.matrix.custom.html","formatted_body":"This <a href=\"https://stackoverflow.com/questions/77969202\">stackoverflow question</a> made me look into how <a href=\"https://html.spec.whatwg.org/multipage/webstorage.html#dom-localstorage\">localStorage</a> is defined and there is a point that seems weird. As I read it, each Document has its <code>local storage holder</code> set only when the <code>localStorage</code> getter is called, and the <em>broadcast</em> operation fires event only on globals that have a matching Storage holder.  So if a Document does set a <em>storage</em> event listener without calling that getter it wouldn't receive events? All browsers seem to fire it anyway https://jsfiddle.net/yspr304z/ So why define it only in the getter? Did I miss something or should I open an issue?","m.mentions":{},"msgtype":"m.text"},"ts":1707805461107,"senderName":"Kaiido","senderId":"@kaiido:matrix.org","id":"$4_b2AqtSp3hN0dtaX99g1jBwTLdYzN-ffPV4EjxOwvw"},
{"content":{"body":"> <@kaiido:matrix.org> This [stackoverflow question](https://stackoverflow.com/questions/77969202) made me look into how [localStorage](https://html.spec.whatwg.org/multipage/webstorage.html#dom-localstorage) is defined and there is a point that seems weird. As I read it, each Document has its `local storage holder` set only when the `localStorage` getter is called, and the *broadcast* operation fires event only on globals that have a matching Storage holder.  So if a Document does set a *storage* event listener without calling that getter it wouldn't receive events? All browsers seem to fire it anyway https://jsfiddle.net/yspr304z/ So why define it only in the getter? Did I miss something or should I open an issue?\n\nLooks like a bug introduced with the storage bottles work, indeed. A bug would be helpful.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$4_b2AqtSp3hN0dtaX99g1jBwTLdYzN-ffPV4EjxOwvw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@kaiido:matrix.org\">@kaiido:matrix.org</a><br>This <a href=\"https://stackoverflow.com/questions/77969202\">stackoverflow question</a> made me look into how <a href=\"https://html.spec.whatwg.org/multipage/webstorage.html#dom-localstorage\">localStorage</a> is defined and there is a point that seems weird. As I read it, each Document has its <code>local storage holder</code> set only when the <code>localStorage</code> getter is called, and the <em>broadcast</em> operation fires event only on globals that have a matching Storage holder.  So if a Document does set a <em>storage</em> event listener without calling that getter it wouldn't receive events? All browsers seem to fire it anyway https://jsfiddle.net/yspr304z/ So why define it only in the getter? Did I miss something or should I open an issue?</blockquote></mx-reply>Looks like a bug introduced with the storage bottles work, indeed. A bug would be helpful.","m.mentions":{"user_ids":["@kaiido:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$4_b2AqtSp3hN0dtaX99g1jBwTLdYzN-ffPV4EjxOwvw"}},"msgtype":"m.text"},"ts":1707809587892,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dJCB_9mv6jBS8iJFku0VLiYH99oc627Or4D476iibCA"},
{"content":{"body":"Can we treat \"not present undefined\" differently than \"present but explicitly undefined\", for members of a Web IDL dictionary? I think we can because in the former, the member would simply not [=map/exist=], while the latter would explicitly trigger Web IDL conversion steps from `undefined` -> the specified type. Is that right?","format":"org.matrix.custom.html","formatted_body":"Can we treat \"not present undefined\" differently than \"present but explicitly undefined\", for members of a Web IDL dictionary? I think we can because in the former, the member would simply not [=map/exist=], while the latter would explicitly trigger Web IDL conversion steps from <code>undefined</code> -&gt; the specified type. Is that right?","m.mentions":{},"msgtype":"m.text"},"ts":1707832896761,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$NaloBkNTP67Bke_NLQlWuRZb736Igi5OA6FUTklg1Ac"}
]