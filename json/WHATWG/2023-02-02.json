[
{"content":{"body":"bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: the must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: the must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","msgtype":"m.text"},"ts":1675299049249,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$qLQpKauRokTLGe1TxpKwrZEw8vMp01ZVwmagaipQJkg"},
{"content":{"body":"With this WABI alternative, there’s no DOM at all, there’s no JavaScript global at all, there’s CSS Stylesheet at all","msgtype":"m.text"},"ts":1675299160951,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$NpjDH3xFYrOoS-lmMp08UjalTf77AOOBVPGHBoW7LNc"},
{"content":{"body":"Instead, browsers load only the binary object code for the app, and just execute that","msgtype":"m.text"},"ts":1675299199969,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$EeNL4vhqN2Oi36iRBHmtLXDnLDpH3hNckPd_ef4Mg-M"},
{"content":{"body":"And the WABI binary is the equivalent of statically linked object code — that is, it has all of its dependencies already compiled in, and doesn’t need to link into anything else nor load anything else","msgtype":"m.text"},"ts":1675299326486,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pSPXos5XdPlHM9Im2F06sEGomSoVQDNEBDRztlbDubs"},
{"content":{"body":"So a WABI binary can contain its own layout engine, and its own complete runtime","msgtype":"m.text"},"ts":1675299394611,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_KStbtyiLSIDszQMew_eLUCVqqIKi9O3WQTQPlrtNek"},
{"content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compiles a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compiles a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"ts":1675299605119,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ"},
{"content":{"body":"But that analogy is not at all exact, because in that case the binary is an architecture-specific binary that can only run on a single platform — that is, a Windows binary, or a Linux binary, or a macOS binary.\n\nBut a WABI binary is not architecture-specific but instead is a portable binary in every way that WASM binaries already are","msgtype":"m.text"},"ts":1675299863402,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$iHbRn_2FKnUhPZkzZ87_64X_2tk5Q3hC-bMJx2Uz3jk"},
{"content":{"body":"I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browsers implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","msgtype":"m.text"},"ts":1675300138019,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$5ljt-LE8tiPlKBs8_z4Ns-EQPuqH2VyzVPH-m3s67rE"},
{"content":{"body":"And at least I can say from experience as patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","msgtype":"m.text"},"ts":1675300265727,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Mpch35t8ygh5jWqfWhHJLMxpN6QCWyFF_rvN-uvwYpc"},
{"content":{"body":"And for web apps (as opposed to documents), all that loading code arguably should be unnecessary anyway — it’s just a side effect of having needed to bolt an application-execution environment on top of a model that’s not fundamentally designed for running apps but instead is just designed for laying out documents","msgtype":"m.text"},"ts":1675300490374,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oA3foYahuNzv2_ppe_DdDU5a-C8UsotBjIU4-PXyvLE"},
{"content":{"body":"So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","msgtype":"m.text"},"ts":1675300741842,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U"},
{"content":{"body":" * bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","m.new_content":{"body":"bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$qLQpKauRokTLGe1TxpKwrZEw8vMp01ZVwmagaipQJkg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301448367,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$UbZx5PK7mfUDgVuZ11VOuRZu8WqI5fkQyOUHGCPGx-8"},
{"content":{"body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","m.new_content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"m.relates_to":{"event_id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301484915,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Klhk4jP79as0WbDCP5WMvzqGpe2ifzzdF8djm9fPbOk"},
{"content":{"body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","m.new_content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"m.relates_to":{"event_id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301491624,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$G0fhjved1DH1CR-ep06OA8jwWPoKIKkTIJcucFg14NI"},
{"content":{"body":" * I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browser implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","m.new_content":{"body":"I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browser implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","msgtype":"m.text"},"m.relates_to":{"event_id":"$5ljt-LE8tiPlKBs8_z4Ns-EQPuqH2VyzVPH-m3s67rE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301525030,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LqdTEQJoTgOwQzBwMYHLfzfzU_bsi-Wt2vUf_6gzB5M"},
{"content":{"body":" * And at least I can say from experience as a patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","m.new_content":{"body":"And at least I can say from experience as a patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","msgtype":"m.text"},"m.relates_to":{"event_id":"$Mpch35t8ygh5jWqfWhHJLMxpN6QCWyFF_rvN-uvwYpc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301538981,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$YvALLYZWTHorrZm3zUCWkDc7Dwfb1n1oGiwpV5vpSEg"},
{"content":{"body":" * So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","m.new_content":{"body":"So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301584590,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LiBy4wVYWmUp_ZdwxoxudDPw73Fh11a_tg2kUVl-YQ4"},
{"content":{"body":"annevk: About `URLSearchParams` `has()` and `delete()`, do you think use counters would be helpful to see if they're called with extra arguments?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: About <code>URLSearchParams</code> <code>has()</code> and <code>delete()</code>, do you think use counters would be helpful to see if they're called with extra arguments?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: About `URLSearchParams` `has()` and `delete()`, do you think use counters would be helpful to see if they're called with extra arguments?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: About <code>URLSearchParams</code> <code>has()</code> and <code>delete()</code>, do you think use counters would be helpful to see if they're called with extra arguments?","mimetype":"text/html"}]},"ts":1675331704086,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$hN1j9EmgklhoIPnGlR6cjm-8a4s1_-8T0n72HhLZYWI"},
{"content":{"body":"Posting here for more visibility: https://github.com/whatwg/fetch/issues/1601","msgtype":"m.text"},"ts":1675342499817,"senderName":"jub0bs","senderId":"@jub0bs:matrix.org","id":"$6DfuDV4ZxQivyp9h3Zd_fjiOIuh-40pwDxpIDX1UFPc"},
{"content":{"body":"> <@sideshowbarker:matrix.org> So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)\n\nI disagree. That code, or something equivalent, will still be needed---it will just be built by framework developers. And re-built, over and over and over, with the same mistakes repeated and missed and some of the frameworks good at using the a11y parts of the \"ABI\" and some bad and some doing a good job at meeting user expectations and some bad. For better or for worse, to build a successful UI framework you *need* a lot of code complexity---witness the thousands of people-years spent on them throughout history, from Win32 to WPF to Cocoa to Carbon to the web. Ones built by smaller teams, e.g. Flutter or the various Java or Linux GUI-framework-from-scratch attempts, tend to be painful for end users. GUI frameworks are just a hard problem; wishing you could start over and do it better this time is, IMO, not a good use of the tech industry's collective effort. The web works, and we even have escape hatches like wasm and WebGPU on top of it for cases like video games or CAD software or porting native apps to the web or whatever. But if you want a set of controls, loading primitives, etc., what we have is good and recreating it will not work well.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">@sideshowbarker:matrix.org</a><br>So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)</blockquote></mx-reply>I disagree. That code, or something equivalent, will still be needed---it will just be built by framework developers. And re-built, over and over and over, with the same mistakes repeated and missed and some of the frameworks good at using the a11y parts of the &quot;ABI&quot; and some bad and some doing a good job at meeting user expectations and some bad. For better or for worse, to build a successful UI framework you <em>need</em> a lot of code complexity---witness the thousands of people-years spent on them throughout history, from Win32 to WPF to Cocoa to Carbon to the web. Ones built by smaller teams, e.g. Flutter or the various Java or Linux GUI-framework-from-scratch attempts, tend to be painful for end users. GUI frameworks are just a hard problem; wishing you could start over and do it better this time is, IMO, not a good use of the tech industry's collective effort. The web works, and we even have escape hatches like wasm and WebGPU on top of it for cases like video games or CAD software or porting native apps to the web or whatever. But if you want a set of controls, loading primitives, etc., what we have is good and recreating it will not work well.","m.relates_to":{"m.in_reply_to":{"event_id":"$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U"}},"msgtype":"m.text"},"ts":1675347256289,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$bYqLVUfgNdm8GJaa_bpUf8OTkJNjAPkS0A26of6MBZY"},
{"content":{"body":"(Try using a Flutter Web app and you'll see what I mean!)","msgtype":"m.text"},"ts":1675347309390,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$aatD_dCU1qhWAqZI4SP-Rr4MxY5FnYEJ6iNfju2tbbQ"},
{"content":{"body":"> <@timothygu:matrix.org> Has anyone seen https://github.com/ada-url/ada?\n\nThis is neat! Hadn't seen it before.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KH1sTg3DXlPv3hVTl4eLiNzNYRiHpyeKIJcb2iq2B_w?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@timothygu:matrix.org\">@timothygu:matrix.org</a><br>Has anyone seen https://github.com/ada-url/ada?</blockquote></mx-reply>This is neat! Hadn't seen it before.","m.relates_to":{"m.in_reply_to":{"event_id":"$KH1sTg3DXlPv3hVTl4eLiNzNYRiHpyeKIJcb2iq2B_w"}},"msgtype":"m.text"},"ts":1675347490872,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$bxvzV63pUd9ZphU2TL-KzhJld6w7t9NQ0CnPaPdXVB4"},
{"content":{"body":"Domenic: I think mobile is the place where the current HTML/DOM+JS+CSS stack is not working well — as far as providing good user experiences for end users on mobile","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I think mobile is the place where the current HTML/DOM+JS+CSS stack is not working well — as far as providing good user experiences for end users on mobile","msgtype":"m.text"},"ts":1675347671571,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$UGpuPrmjdXwFZ16l0fmuA4SCs_Ac3_gnxalUTNpMUH0"},
{"content":{"body":"I think it’s clear that we began to lose a huge segment of developer share around 2009 when the iPhone really took off and Android did too, and we were busy enough anyway, in the following years, with just trying to evolve the core web runtime in the necessary ways, with the features that were needed for good app experiences on the web to viable at all even on desktop","msgtype":"m.text"},"ts":1675347822696,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$gZBalTMMWFxfa5EFzE-JiCpqOs1KIPJn92ODXT81wz8"},
{"content":{"body":"…and we have not won those developers back","msgtype":"m.text"},"ts":1675347847838,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oPER0prcKxZv1L2vszvb3hcP94EiB4FMSVpXKOeh4Eo"},
{"content":{"body":"I think that problem is two-pronged. One, \"document-like\" web sites/apps are bad on mobile because of cookie banners/ads/etc. \"App-like\" mobile web apps are few and relatively hard to build well, but it also seems clear if the developer puts in enough effort they can get good results: see e.g. Twitter or Uber. For the rest, are developers not putting in enough effort, or is it too hard to put in enough effort because the web's UI framework is bad comparatively? I could see it being the latter. I doubt having everyone download a UI framework per web app, created by indie teams, would be a good solution though.","msgtype":"m.text"},"ts":1675347871223,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Y2tfweSk1SM-c02rdHX1iL6ZIdSXgLgjFtsBUUtfVQE"},
{"content":{"body":"yes, the web's UI framework is bad comparatively","msgtype":"m.text"},"ts":1675347904902,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$wBOTN0pDVItvNb5aw7wT9snKP0lnF-IAePPGLcfitII"},
{"content":{"body":"Reasons developers might not put in the effort are mostly around: capabilities gap; lack of app store access. There's some really interesting UX research by Chrome folks about this","msgtype":"m.text"},"ts":1675347909769,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$p8f0BJ_Dj0-keiGkpETTt0V4au-bKTDezdjLeeODzfE"},
{"content":{"body":"E.g. teams which tried to build web apps but found when surveying users that the users found the web app *less* trustworthy than a native app---the web is where all the viruses come from, etc.","format":"org.matrix.custom.html","formatted_body":"E.g. teams which tried to build web apps but found when surveying users that the users found the web app <em>less</em> trustworthy than a native app---the web is where all the viruses come from, etc.","msgtype":"m.text"},"ts":1675347939535,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Qj8ZLOOT6nmD1L93XpPkhIHkaUZQSj-HJpkX3HD_yq0"},
{"content":{"body":"(Or just, the competitors were on the app store, so users assumed something must be wrong with the web app if it couldn't make it through the app store process.)","msgtype":"m.text"},"ts":1675347962352,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$mirzz0C4lIyI26xrcvEgI96Vviyu8BGRm6KG9MCFCu4"},
{"content":{"body":"I think the core reason currently starts from the reality that _users_ currently choose mobile apps because the user experience of those apps is relatively much better than they get from web apps\n","format":"org.matrix.custom.html","formatted_body":"I think the core reason currently starts from the reality that <em>users</em> currently choose mobile apps because the user experience of those apps is relatively much better than they get from web apps","msgtype":"m.text"},"ts":1675347998772,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$n68zbZ-paWHADBUDaleicEm46aXhlrCqpF6eaLIeWEs"},
{"content":{"body":"and developers choose to write native mobile apps because those mobile apps provide a better user experience for users, and are relatively dead simple to create using available SDKs and tooling","msgtype":"m.text"},"ts":1675348071467,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$AdnaEfskL5FKCjMp8VMOla4Pv8GPhgLOu7ry5Yf_x1E"},
{"content":{"body":"developers do not need to be stellar developers in order to create mobile apps that end users will actually use","msgtype":"m.text"},"ts":1675348098690,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$kF-Sg4xir3LrPN0KvxfOo9hNg20tqc39IEq_t3or-IU"},
{"content":{"body":"It's not clear there's any one core reason, such that if you fixed it we'd change things. I suspect it's a bunch of self-reinforcing reasons, which have trapped us in an inadequate equilibrium. E.g. if you could snap your fingers and fix the web's UI framework, the app store stickiness and capabilities gap remain. If you could fix the capabilities gap, the other two issues remain. And even if you could magically fix them all, the historical inertia remains. It's not great.","msgtype":"m.text"},"ts":1675348104601,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$2Rqsykaci3cZPqweFvxHHNcS_JxfTfU7wAFehvQ5Iik"},
{"content":{"body":"they can instead just develop mobile apps only, with much less trouble and pain","msgtype":"m.text"},"ts":1675348126373,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$6GwuRiE6A8N6CSqmmtdZS7FFeLSh3e3TdDKIAX5KY9g"},
{"content":{"body":"…and they forgo creating web apps because, in practice currently, their users prefer native mobile apps anyway","msgtype":"m.text"},"ts":1675348189245,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$KuCibmTOTznXIgtRQ6ruIb-91r4Mybewlr_6cyjKOo8"},
{"content":{"body":"And I think the reason that SDK and authoring-tool vendors don’t consistently provide mechanisms for generating output for the web runtime with a great user experience is: in practice it’s still so incredibly hard and costly to implement and maintain the code needed to generate HTML/DOM+JS+CSS output that provides a great user experience on mobile","msgtype":"m.text"},"ts":1675348309441,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$VfV7rEsl78pj1MUH3tiG74TCyAfi4d9OZ_oQ4p8q-vk"},
{"content":{"body":"It's a potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app. I'd give it somewhere around 50% odds. I don't think WABI is really related to that hypothesis; building a good web UI framework to make app development easier isn't something that framework developers have been unable to do because the browser doesn't have a native MIME type handler for application/wasm.","msgtype":"m.text"},"ts":1675348315292,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$v5CzedeI3TtoKtjLx19sZUegSDVdNQIqvSW5SDl9_Nw"},
{"content":{"body":" * It's a potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app. I'd give it somewhere around 50% odds. I don't think WABI is really related to that hypothesis; building a good web UI framework to make app development easier isn't something that framework developers have been unable to do because the browser doesn't have a native MIME type handler for application/wasm.","m.new_content":{"body":"It's a potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app. I'd give it somewhere around 50% odds. I don't think WABI is really related to that hypothesis; building a good web UI framework to make app development easier isn't something that framework developers have been unable to do because the browser doesn't have a native MIME type handler for application/wasm.","msgtype":"m.text"},"m.relates_to":{"event_id":"$v5CzedeI3TtoKtjLx19sZUegSDVdNQIqvSW5SDl9_Nw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675348331724,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$LBaTOd7lDjR2WQ7W-Qn3GQ8ZRoqtd5ThxDeYeXzfd_g"},
{"content":{"body":" * And I think the reason that SDK and authoring-tool vendors don’t consistently provide mechanisms for generating output for the web runtime with a great user experience is: in practice it’s still so incredibly hard and costly to implement and maintain the code needed to generate HTML/DOM+JS+CSS output that provides a great user experience on mobile","m.new_content":{"body":"And I think the reason that SDK and authoring-tool vendors don’t consistently provide mechanisms for generating output for the web runtime with a great user experience is: in practice it’s still so incredibly hard and costly to implement and maintain the code needed to generate HTML/DOM+JS+CSS output that provides a great user experience on mobile","msgtype":"m.text"},"m.relates_to":{"event_id":"$VfV7rEsl78pj1MUH3tiG74TCyAfi4d9OZ_oQ4p8q-vk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675348336893,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XKiEH7t_7FJ8_9wdqFDjvtf_H5BNIEYqNKkcCtpQp9k"},
{"content":{"body":"yes, I think the _“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”_ has proven to be true thus far","format":"org.matrix.custom.html","formatted_body":"yes, I think the <em>“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”</em> has proven to be true thus far","msgtype":"m.text"},"ts":1675348373685,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$40lwixyPEXFCJ5kxnazs56k0B5qXzoggAn9yZLSjXAI"},
{"content":{"body":" * yes, I think the _“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”_ has proven to be true thus far","format":"org.matrix.custom.html","formatted_body":" * yes, I think the <em>“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”</em> has proven to be true thus far","m.new_content":{"body":"yes, I think the _“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”_ has proven to be true thus far","format":"org.matrix.custom.html","formatted_body":"yes, I think the <em>“potential hypothesis that it's easier for a company to create two good native mobile apps than one good mobile web app”</em> has proven to be true thus far","msgtype":"m.text"},"m.relates_to":{"event_id":"$40lwixyPEXFCJ5kxnazs56k0B5qXzoggAn9yZLSjXAI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675348381614,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$KezEQ0t_8zcQTHoGVAObT9b99cW1ododF8solRrRF9k"},
{"content":{"body":"> <@sideshowbarker:matrix.org> I think the core reason currently starts from the reality that _users_ currently choose mobile apps because the user experience of those apps is relatively much better than they get from web apps\n> \n\n that's really far too over simplified imo, there's so many factors here pushing users that way i don't think you can say users really chose tbh","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$n68zbZ-paWHADBUDaleicEm46aXhlrCqpF6eaLIeWEs?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">@sideshowbarker:matrix.org</a><br />I think the core reason currently starts from the reality that <em>users</em> currently choose mobile apps because the user experience of those apps is relatively much better than they get from web apps</blockquote></mx-reply>that's really far too over simplified imo, there's so many factors here pushing users that way i don't think you can say users really chose tbh","m.relates_to":{"m.in_reply_to":{"event_id":"$n68zbZ-paWHADBUDaleicEm46aXhlrCqpF6eaLIeWEs"}},"msgtype":"m.text"},"ts":1675348387089,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$o4H1uJBOXJ_mAojiKyG2hmF_-i9pG2doDiW6SInEPvA"},
{"content":{"body":"I think it would remain incredibly hard---in fact, probably be harder---if you chose to restrict yourself to WebGPU + ARIA + whatever when creating this hypothetical better-than-iOS-and-Android-SDKs web framework.","msgtype":"m.text"},"ts":1675348398884,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MjuUxK90DwCk7fdYXwrYxFIphPdYZFM7V7X199kpt6o"},
{"content":{"body":"I agree with Domenic on this ^","format":"org.matrix.custom.html","formatted_body":"I agree with <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> on this ^","msgtype":"m.text"},"ts":1675348503010,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$JNpmEWQQgRz2u6Jcal0RvGoB6XTFEOoXxb5vNcUmMbc"},
{"content":{"body":"well part of the context around this is, we’ve been trying with the current stack since at least 2009 to create an ecosystem where better-than-iOS-and-Android-SDKs web frameworks can be developed and can flourish — but it has not happened","msgtype":"m.text"},"ts":1675348543885,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_T3tzWcG2KJINAiYaylIzKnR19h76RQw2Y0Lt9QAJKY"},
{"content":{"body":"(and the user experience will at the very least involve a long download time for first load, which is not a great start.)","msgtype":"m.text"},"ts":1675348549128,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$C5i9MpyVZ7NylsGHWnU2V-USvJNbWpDn6Q9jIjhT-DY"},
{"content":{"body":"> <@domenicdenicola:matrix.org> (and the user experience will at the very least involve a long download time for first load, which is not a great start.)\n\nthat’s very true yeah","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$C5i9MpyVZ7NylsGHWnU2V-USvJNbWpDn6Q9jIjhT-DY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>(and the user experience will at the very least involve a long download time for first load, which is not a great start.)</blockquote></mx-reply>that’s very true yeah","m.relates_to":{"m.in_reply_to":{"event_id":"$C5i9MpyVZ7NylsGHWnU2V-USvJNbWpDn6Q9jIjhT-DY"}},"msgtype":"m.text"},"ts":1675348564737,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$WWPJCTf5N-e3JeQbgKihdxLaG6HhzZobQYgqSnrOfK0"},
{"content":{"body":"But also i feel like this aria part (much if it really) needs a little meat to be able to even discuss it. The \"and aria\" i feel like is handwaved but load bearing","msgtype":"m.text"},"ts":1675348587138,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$VmTKaP5OWG3JSpxCbp8cNg-LHMgMhvaEZSIM3XMD8Dw"},
{"content":{"body":"Again, I think it's really unclear whether iOS/Android SDKs are that much better. Remember that Flutter and SwiftUI are based on the React paradigm, which was pioneered on the web!","msgtype":"m.text"},"ts":1675348626231,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$eKIpBjaU9piHMtYn3c4KNHPqq41QIB7Kcy996K6ajU8"},
{"content":{"body":"My hypothesis is that the gap comes mainly in a good control library, and having stuck my foot in that area for a half-year and failed with a small team of Googlers, it comes back to my earlier point that you basically need major institutional buy-in (e.g. a large team working for 5-10 years) to get to the same level that Windows/macOS/Android/iOS have gotten to.","msgtype":"m.text"},"ts":1675348719296,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$HEBI1gy0albX4FQnZRpGGjiG7uRX8EBGCo2orCooA68"},
{"content":{"body":"Saying \"you have WebGPU, raw HID events, and some ARIA thing---community, please build a good control library!\" seems like a recipe for disaster to me.","msgtype":"m.text"},"ts":1675348757702,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MukD8f-T2m_lMfzX_-HZigK8DOsHtQl63wAKgI0pY4E"},
{"content":{"body":"Flutter's tried for some number of years, don't know the size of their team, and the apps still feel quite unnatural to try to use on both Android and the web.","msgtype":"m.text"},"ts":1675348804620,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$jEfuKzwJOGWCCLrW9X3UntoVMAzwESkva9F7gIDXcBU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> My hypothesis is that the gap comes mainly in a good control library, and having stuck my foot in that area for a half-year and failed with a small team of Googlers, it comes back to my earlier point that you basically need major institutional buy-in (e.g. a large team working for 5-10 years) to get to the same level that Windows/macOS/Android/iOS have gotten to.\n\nYes — and the companies that are financially in the position to put that kind of investment in making it happen may not have great incentives for doing so","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$HEBI1gy0albX4FQnZRpGGjiG7uRX8EBGCo2orCooA68?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>My hypothesis is that the gap comes mainly in a good control library, and having stuck my foot in that area for a half-year and failed with a small team of Googlers, it comes back to my earlier point that you basically need major institutional buy-in (e.g. a large team working for 5-10 years) to get to the same level that Windows/macOS/Android/iOS have gotten to.</blockquote></mx-reply>Yes — and the companies that are financially in the position to put that kind of investment in making it happen may not have great incentives for doing so","m.relates_to":{"m.in_reply_to":{"event_id":"$HEBI1gy0albX4FQnZRpGGjiG7uRX8EBGCo2orCooA68"}},"msgtype":"m.text"},"ts":1675348822187,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MU6w67MlCuFg2k5FV5CgklLqKMFUWmhw_5Jao73F4k4"},
{"content":{"body":"But part of what’s implicit in the design sketch as Hixie wrote it up is that the primitives would not all need to be implemented at once anyway","msgtype":"m.text"},"ts":1675349020695,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$5VllkiAEZ2T3txYvxtJeefP2rSKRK5SyT2bT2V4w18Q"},
{"content":{"body":"We could start with just the “ABI to spawn a JavaScript environment” piece","msgtype":"m.text"},"ts":1675349077377,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Xy4-jRxQc75N507dNu3KtABXgLYdwEma92pKdFBjrt0"},
{"content":{"body":"The primitives are all already there; the only novel thing in Hixie's writeup is the new MIME type handler to remove the need for a one-line HTML document. (And, I guess, the magic world where we get Safari/Firefox to implement WebHID.)","msgtype":"m.text"},"ts":1675349085886,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ukKZk8is5gyYBig2xuCHxyshy1A7-Vow0qAShVvnh7A"},
{"content":{"body":"The document is basically \"what if Flutter apps could save one line of code?\"","msgtype":"m.text"},"ts":1675349118940,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Xwdo3C28gM8NMxCI8Sw3cR1CalLVWlw-pw8p_4oXslk"},
{"content":{"body":"my understanding of implementation costs could be naïve, but it seems to me there is in fact a non-insignificant real cost to currently needing the HTML and JS “glue code” for WASM apps to run, and to needing to parse and load that","msgtype":"m.text"},"ts":1675349371254,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$aw_dIeBYB_1Waw7_CUWnfD1D7X9iS5Q1e4VP4tFUFyQ"},
{"content":{"body":"Cost to who?","msgtype":"m.text"},"ts":1675349383866,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_z4S_Bu8Z2R_C1Qcl9hdjxQfdEyFglgnH2TrCrPPWNQ"},
{"content":{"body":"I meant, cost to browser implementors relative to a new code path that didn’t require it","msgtype":"m.text"},"ts":1675349472129,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$kXsevTidXmKVYXY53KS7rWE7akuoT9om-W3Gyxg_9OY"},
{"content":{"body":"Nah, no cost. If you have a JS escape hatch/bridge of the type Hixie's doc talks about, then the JS -> wasm step is free from that. And the HTML -> JS step has been implemented for ~20 years.","msgtype":"m.text"},"ts":1675349528167,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$A2tync4nRsHviW-7rIgtpDF7y0D1INNUqN5PVb4-_u8"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1675349564561,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Q2jjcpBYPjVFwzbk-UCatP-HLumnn7qXg8pD5gdnGiQ"},
{"content":{"body":"Building something that was straight wasm would be more costly, as you'd have to figure out what kind of document that produces (presuming you don't want it to just auto-generate <html><canvas></canvas></html> like .pdf generates <html><object></object></html>; I feel like the latter would violate the spirit of the thing)","msgtype":"m.text"},"ts":1675349601308,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gZyFo3RiDKb-FKu9ucDvnT0O1vY36b7uLCi5LtOqU3k"},
{"content":{"body":"(And you need a \"document\" in at least some broad sense, so that you have some idea of what the back/forward button does, and what other windows see when they reach into yours.)","msgtype":"m.text"},"ts":1675349637849,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$n9n4u1yQX_zxrzI-aWCUNkUuXm-PH3gFjsKNsusuER4"},
{"content":{"body":"would it absolutely have to create a document at all? could it instead be done without even instantiating a document at all but instead having a new kind of object that the browser operates directly?","msgtype":"m.text"},"ts":1675349815080,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$enrnk9ANJF-VyIxTwb_3kqkCmdqjDf1mZKsSdKd3PJ8"},
{"content":{"body":" * would it absolutely have to create a document at all? could it instead be done without even instantiating a document at all but instead having a new kind of object that the browser operates directly?","m.new_content":{"body":"would it absolutely have to create a document at all? could it instead be done without even instantiating a document at all but instead having a new kind of object that the browser operates directly?","msgtype":"m.text"},"m.relates_to":{"event_id":"$enrnk9ANJF-VyIxTwb_3kqkCmdqjDf1mZKsSdKd3PJ8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675349823139,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$B1GJn_AkDpT7Kfmf4BQ_k9i9ZL2L_980X4fbdCDJkS8"},
{"content":{"body":"ah, I see you answered that already","msgtype":"m.text"},"ts":1675349840303,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$N-maCh206ma1wNMr0Gz6YMK2vOLIcIzgvqYTIzIWFwk"},
{"content":{"body":"so Hixie responded somewhat to that already, in his Twitter thread, I think","msgtype":"m.text"},"ts":1675349875218,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$3C6_41WDKtav-u3NxYf9g69PiLhcHiludjN1H4gEgzY"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1675349883955,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$H9ohCMZfuT-J_9GmJ4ZHbh_FNfT3ultDTkPqPTS4HNk"},
{"content":{"body":"Yeah I mean it's conceivable you could invent something new, and have some sort of Document-like facade when other parts of the browser or other websites look at it, but it's unclear what the gain is; especially if the point was to reduce implementation complexity, I am quite sure that sort of thing would not reduce it.","msgtype":"m.text"},"ts":1675349983639,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$NaScA0Jb6ExOUqvwNK83OLjSkuv_dFQ38-CjoyyPaqU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Saying \"you have WebGPU, raw HID events, and some ARIA thing---community, please build a good control library!\" seems like a recipe for disaster to me.\n\nvery much agree here. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$MukD8f-T2m_lMfzX_-HZigK8DOsHtQl63wAKgI0pY4E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Saying &quot;you have WebGPU, raw HID events, and some ARIA thing---community, please build a good control library!&quot; seems like a recipe for disaster to me.</blockquote></mx-reply>very much agree here.","m.relates_to":{"m.in_reply_to":{"event_id":"$MukD8f-T2m_lMfzX_-HZigK8DOsHtQl63wAKgI0pY4E"}},"msgtype":"m.text"},"ts":1675349994099,"senderName":"Matthew Phillips","senderId":"@matthewcp:matrix.org","id":"$Zz8hkyt2awu_5BKM7BZrjBRsu_Dpdb9LhnShWQUVJRE"},
{"content":{"body":"it would very quickly be \"you have WebGPU, raw HID events, some ARIA thing and flutter\"...","msgtype":"m.text"},"ts":1675350033600,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$5w1gZfyRu63yEAhGGy3qp4ibq9KGD_ktLx5uquC0QYs"},
{"content":{"body":"A more interesting question to me is not why developers aren't using the web as much for these app-like experiences, but why the web is not used even for document experiences. For example, why isn't the web the dominant way that readers read ebooks? Why isn't it the dominant way that publishers publish ebooks?","msgtype":"m.text"},"ts":1675350482722,"senderName":"Matthew Phillips","senderId":"@matthewcp:matrix.org","id":"$bVN1VFYNVLBZCcQMJNJoX3KxVQsZ6quit-gjBBqYIyE"},
{"content":{"body":"Lack of integration with stores is part of it, but that can't be the only thing or public domain books would be read on the web, and I don't believe that they are.","msgtype":"m.text"},"ts":1675350532726,"senderName":"Matthew Phillips","senderId":"@matthewcp:matrix.org","id":"$gsPoffi3lE32Od0YDzlQCvTAJKjaxK-bsBDgUSx_uCk"}
]