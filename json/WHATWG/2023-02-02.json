[
{"content":{"body":"bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: the must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: the must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","msgtype":"m.text"},"ts":1675299049249,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$qLQpKauRokTLGe1TxpKwrZEw8vMp01ZVwmagaipQJkg"},
{"content":{"body":"With this WABI alternative, there’s no DOM at all, there’s no JavaScript global at all, there’s CSS Stylesheet at all","msgtype":"m.text"},"ts":1675299160951,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$NpjDH3xFYrOoS-lmMp08UjalTf77AOOBVPGHBoW7LNc"},
{"content":{"body":"Instead, browsers load only the binary object code for the app, and just execute that","msgtype":"m.text"},"ts":1675299199969,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$EeNL4vhqN2Oi36iRBHmtLXDnLDpH3hNckPd_ef4Mg-M"},
{"content":{"body":"And the WABI binary is the equivalent of statically linked object code — that is, it has all of its dependencies already compiled in, and doesn’t need to link into anything else nor load anything else","msgtype":"m.text"},"ts":1675299326486,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pSPXos5XdPlHM9Im2F06sEGomSoVQDNEBDRztlbDubs"},
{"content":{"body":"So a WABI binary can contain its own layout engine, and its own complete runtime","msgtype":"m.text"},"ts":1675299394611,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_KStbtyiLSIDszQMew_eLUCVqqIKi9O3WQTQPlrtNek"},
{"content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compiles a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compiles a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"ts":1675299605119,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ"},
{"content":{"body":"But that analogy is not at all exact, because in that case the binary is an architecture-specific binary that can only run on a single platform — that is, a Windows binary, or a Linux binary, or a macOS binary.\n\nBut a WABI binary is not architecture-specific but instead is a portable binary in every way that WASM binaries already are","msgtype":"m.text"},"ts":1675299863402,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$iHbRn_2FKnUhPZkzZ87_64X_2tk5Q3hC-bMJx2Uz3jk"},
{"content":{"body":"I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browsers implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","msgtype":"m.text"},"ts":1675300138019,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$5ljt-LE8tiPlKBs8_z4Ns-EQPuqH2VyzVPH-m3s67rE"},
{"content":{"body":"And at least I can say from experience as patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","msgtype":"m.text"},"ts":1675300265727,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Mpch35t8ygh5jWqfWhHJLMxpN6QCWyFF_rvN-uvwYpc"},
{"content":{"body":"And for web apps (as opposed to documents), all that loading code arguably should be unnecessary anyway — it’s just a side effect of having needed to bolt an application-execution environment on top of a model that’s not fundamentally designed for running apps but instead is just designed for laying out documents","msgtype":"m.text"},"ts":1675300490374,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oA3foYahuNzv2_ppe_DdDU5a-C8UsotBjIU4-PXyvLE"},
{"content":{"body":"So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","msgtype":"m.text"},"ts":1675300741842,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U"},
{"content":{"body":" * bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","m.new_content":{"body":"bkardell: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM\n\nThat is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single `.wasm` file/resource\n\nAnd so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.\n\nAnd that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@bkardell:igalia.com\">bkardell</a>: yeah, every web app still has a URL, and the thing at the end of the URL is straight to WASM</p>\n<p>That is, the thing at the end of the URL is a single binary, a single executable, completely just object code — a single <code>.wasm</code> file/resource</p>\n<p>And so then for that app, all that the browser does is just to load that single binary into memory and execute it — execute it in the existing WebAssembly execution environment that all browsers already have.</p>\n<p>And that’s all in contrast to what browsers need to do now with the current HTML/DOM+JS+CSS stack, which is: browsers must load three different things into memory: they must a DOM tree/object, a JavaScript global object, and CSS cascade/Stylesheet object — and then also keep those three in sync through all the DOM mutations and everything</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$qLQpKauRokTLGe1TxpKwrZEw8vMp01ZVwmagaipQJkg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301448367,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$UbZx5PK7mfUDgVuZ11VOuRZu8WqI5fkQyOUHGCPGx-8"},
{"content":{"body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","m.new_content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a singole binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"m.relates_to":{"event_id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301484915,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Klhk4jP79as0WbDCP5WMvzqGpe2ifzzdF8djm9fPbOk"},
{"content":{"body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":" * As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","m.new_content":{"body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use `jlink` to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","format":"org.matrix.custom.html","formatted_body":"As far as that goes, one analogy is how server-side Java apps can be built today — which is that you use <code>jlink</code> to compile a single binary that embeds a JVM runtime and all the Java libraries that the app depends on (and so, users don’t need to have a Java runtime installed on their systems to run that app, because the app itself contains the runtime)","msgtype":"m.text"},"m.relates_to":{"event_id":"$sGLnlFWHIDzMsD4HuOUXBtF3exyc0nCWdCq84HL49cQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301491624,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$G0fhjved1DH1CR-ep06OA8jwWPoKIKkTIJcucFg14NI"},
{"content":{"body":" * I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browser implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","m.new_content":{"body":"I think the loading code that’s currently required in browsers for HTML/DOM loading and JS loading and CSS loading may be the single most complex part of browser implementations, and may be one of the most fragile parts — in the sense that it’s prone to regressions and to new bugs getting introduced that are hard to troubleshoot","msgtype":"m.text"},"m.relates_to":{"event_id":"$5ljt-LE8tiPlKBs8_z4Ns-EQPuqH2VyzVPH-m3s67rE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301525030,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LqdTEQJoTgOwQzBwMYHLfzfzU_bsi-Wt2vUf_6gzB5M"},
{"content":{"body":" * And at least I can say from experience as a patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","m.new_content":{"body":"And at least I can say from experience as a patch contributor to Chrome, that loading code is just incredibly complicated and intimidating to try to work on. Chrome has an entire team that’s devoted to just that loading code.","msgtype":"m.text"},"m.relates_to":{"event_id":"$Mpch35t8ygh5jWqfWhHJLMxpN6QCWyFF_rvN-uvwYpc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301538981,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$YvALLYZWTHorrZm3zUCWkDc7Dwfb1n1oGiwpV5vpSEg"},
{"content":{"body":" * So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","m.new_content":{"body":"So there is huge value alone in just being able to cut out the need for all that loading code, and all its complexity, and (over the long run) all its ongoing maintenance cost in implementations. (Though, because this is the web, implementations would also forever need to still retain all that code — to run all the content that exists on the web now — but over the long run, developers building web apps would mostly move to targeting WABI instead, and most web apps would be running in the WABI execution environment instead.)","msgtype":"m.text"},"m.relates_to":{"event_id":"$939lbz6V0hn686krHjpiR7W2MeumxIRI5A58bAtLj2U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1675301584590,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LiBy4wVYWmUp_ZdwxoxudDPw73Fh11a_tg2kUVl-YQ4"},
{"content":{"body":"annevk: About `URLSearchParams` `has()` and `delete()`, do you think use counters would be helpful to see if they're called with extra arguments?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: About <code>URLSearchParams</code> <code>has()</code> and <code>delete()</code>, do you think use counters would be helpful to see if they're called with extra arguments?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"annevk: About `URLSearchParams` `has()` and `delete()`, do you think use counters would be helpful to see if they're called with extra arguments?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: About <code>URLSearchParams</code> <code>has()</code> and <code>delete()</code>, do you think use counters would be helpful to see if they're called with extra arguments?","mimetype":"text/html"}]},"ts":1675331704086,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$hN1j9EmgklhoIPnGlR6cjm-8a4s1_-8T0n72HhLZYWI"}
]