[
{"content":{"body":"Ian Hickson: please fix live DOM viewer :). Or open source it somewhere so we can host our own.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hixie:matrix.org\">Ian Hickson</a>: please fix live DOM viewer :). Or open source it somewhere so we can host our own.","m.mentions":{"user_ids":["@hixie:matrix.org"]},"msgtype":"m.text"},"ts":1695871434319,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dowGg10bWXUHXqnjsy3NnX1SuHqd8dqYIFCWQ7HvvMM"},
{"content":{"body":"(Save button is broken.)","m.mentions":{},"msgtype":"m.text"},"ts":1695871439873,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$0GShBDb_bFhA3kYn2moAR8V95tBXJN2C9ZMeLUb9FfM"},
{"content":{"body":"In the meantime, I like https://livedom.bentkowski.info/ a lot. It's got a \"share URL\" feature but that just throws the whole input into a URL parameter which might be a bit long and unwieldy","msgtype":"m.text"},"ts":1695884828474,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$_Fsdqi8hhfJDfIC_aWk5lEcdNhnXepsvvy7yhr9euu4"},
{"content":{"body":"keithamus: I'm not sure I understand https://github.com/whatwg/fullscreen/issues/124#issuecomment-1738125683, but it also seems like something that is better raised with the CSS WG?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: I'm not sure I understand https://github.com/whatwg/fullscreen/issues/124#issuecomment-1738125683, but it also seems like something that is better raised with the CSS WG?","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1695885412892,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gNIAh7--tsnlwL5tNg2_IAixua7YsOGg286RqAYo-bs"},
{"content":{"body":"Sure, I can raise it there. I was mostly +1ing and adding what I thought would be useful context. ","format":"org.matrix.custom.html","formatted_body":"Sure, I can raise it there. I was mostly +1ing and adding what I thought would be useful context.","msgtype":"m.text"},"ts":1695885497650,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$ZHh3S7c_zPq0sePP2zxLydrN-88n-gSBqlpfgiKNPLk"},
{"content":{"body":"johannhof: Noam Rosenthal: should Set-Cookie be honored on 101 (current answer is yes), 103 (current answer is no), and other 1xx responses (current answer is no)? I'll open an issue against Fetch for this because I don't think we have fully considered it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@johannhof:matrix.org\">johannhof</a>: <a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: should Set-Cookie be honored on 101 (current answer is yes), 103 (current answer is no), and other 1xx responses (current answer is no)? I'll open an issue against Fetch for this because I don't think we have fully considered it.","m.mentions":{"user_ids":["@johannhof:matrix.org","@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1695886974715,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8neQ8kB9cJrHFK6rZIjmjXKYVTIBvpRE21wZ-4x5nDQ"},
{"content":{"body":"https://github.com/whatwg/fetch/issues/1710","m.mentions":{},"msgtype":"m.text"},"ts":1695887198717,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$CbHmRkW8180Q17gglq2rA4pbhhaQhL6mz0lrHEOSJMs"},
{"content":{"body":"annevk: I wonder how this is used in 101 for Websockets or whatnot... my immediate intuition would be that 1xx responses setting cookies would be a violation of them being \"informational\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I wonder how this is used in 101 for Websockets or whatnot... my immediate intuition would be that 1xx responses setting cookies would be a violation of them being \"informational\"","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1695888043656,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Ji7QfzHFAwY-V3UxRFHPAjIWJFvhjJlaasYr4rJ72bI"},
{"content":{"body":"Noam Rosenthal: I see you are not familiar with our topic :p","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I see you are not familiar with our topic :p","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1695888087573,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$XUEXYpuXXP12iItRfAdto88YFxgAWZ9nDbQutoMoQNA"},
{"content":{"body":"More seriously, I'm not sure. I know there's at least a WebKit test for this.","m.mentions":{},"msgtype":"m.text"},"ts":1695888141410,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$A0uswE5Yrnu3JD_gj6hVljk5WX0Ol6CgntX_kwQVY7w"},
{"content":{"body":"annevk: you mean \"leave your sense of logic out the door\"? yes, familiar with it... hence \"I wonder\". I don't have a concrete input into this, let me do some research.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: you mean \"leave your sense of logic out the door\"? yes, familiar with it... hence \"I wonder\". I don't have a concrete input into this, let me do some research.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1695888171082,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$zz_1RhZwqux-Fsr-CP6KMR0IQh7smNAi62NPs-gX4-g"},
{"content":{"body":"Noam Rosenthal: I also wonder what happens in practice for 103 today. Perhaps browsers match Fetch, but maybe only half of them do or some such.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I also wonder what happens in practice for 103 today. Perhaps browsers match Fetch, but maybe only half of them do or some such.","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1695888269362,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$d_-kBMmLBKQlNMukYkSseFLMDkLwV-2ADg2wYepuU0M"},
{"content":{"body":"Domenic: I thought we had resolved on https://github.com/whatwg/html/pull/9797 at some point. But maybe I'm missing something. smaug could you confirm/deny my assertions in that issue?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I thought we had resolved on https://github.com/whatwg/html/pull/9797 at some point. But maybe I'm missing something. <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> could you confirm/deny my assertions in that issue?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org","@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695888467198,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$deYUDjN5hBxy3JKRt0v9PQIbOb3xJMUY5O8fi85XRPI"},
{"content":{"body":"annevk: given that for 3xx response with no Location header but with a response body, the Fetch spec doesn’t explicitly prohibit UAs from processing the response body, and given that there’s also nothing in HTML that prohibits it either, I guess that means UAs can choose to do whichever they want with it (process it or not)?\n\n…and lacking any spec requirements around it, it’s not something that can be expected to necessarily behave interoperably?","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: given that for 3xx response with no Location header but with a response body, the Fetch spec doesn’t explicitly prohibit UAs from processing the response body, and given that there’s also nothing in HTML that prohibits it either, I guess that means UAs can choose to do whichever they want with it (process it or not)?</p>\n<p>…and lacking any spec requirements around it, it’s not something that can be expected to necessarily behave interoperably?</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1695889496976,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$wwdR4E-t2JV08-RI_0UtnEKs47PUEv6pkdfyOfsTUY8"},
{"content":{"body":"sideshowbarker: no, then something would have to be explicitly indicated as implementation-defined","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: no, then something would have to be explicitly indicated as implementation-defined","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1695889584556,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YOnbxRFp2cuyN3K0-P3YC0Uj6ZlLJDtQeVOHRHGb0O0"},
{"content":{"body":"sideshowbarker: in this case the response would be returned to the caller as-is, so if you emit a 309 on the server, that's what the caller would see","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: in this case the response would be returned to the caller as-is, so if you emit a 309 on the server, that's what the caller would see","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1695889618578,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Kwr4ehJu-VBM6472ENScvRImNMu-PuaFoSorcj1iw7E"},
{"content":{"body":"sideshowbarker: that even holds when there is a Location header, as that's only defined to have meaning for a redirect response, which 309 is not","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: that even holds when there is a Location header, as that's only defined to have meaning for a redirect response, which 309 is not","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1695889648852,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bgCKS4mgcLerQRt0PjSrJ7a5H9jIUQMxqwXdwKat69A"},
{"content":{"body":"OK","m.mentions":{},"msgtype":"m.text"},"ts":1695889660033,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$hWIEyAwdZBAetg_C8DKy7Hh_3-Zn-JiyQAzg7k14DHI"},
{"content":{"body":"well the specific context is https://bugs.webkit.org/show_bug.cgi?id=262030 and trying to decide how to resolve that","m.mentions":{},"msgtype":"m.text"},"ts":1695889713063,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$TriL7PiNEVJQNP5iFT_F4e5QZQKCUslh20217rm724g"},
{"content":{"body":"sideshowbarker: https://html.spec.whatwg.org/#default-fetch-and-process-the-linked-resource suggests that most link elements require an ok status, which means those would end up being rejected","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: https://html.spec.whatwg.org/#default-fetch-and-process-the-linked-resource suggests that most link elements require an ok status, which means those would end up being rejected","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1695889803732,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$K4cX8Czn6MtzwhwHiqBe01Xw9clCzTZMMIYZL6yJPDQ"},
{"content":{"body":"sideshowbarker: stylesheet uses those default steps it seems","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: stylesheet uses those default steps it seems","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1695889858689,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hap0nOpPVTBzdtEmqejvtFosoByckUF1yisa9XBgY3I"},
{"content":{"body":"ah OK","m.mentions":{},"msgtype":"m.text"},"ts":1695890008252,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sPrxa3Tcckr-B47bAntgGshfmFYDn4PNeqSeC8vsFOE"},
{"content":{"body":"thanks much","m.mentions":{},"msgtype":"m.text"},"ts":1695890038268,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$rg9dL9XzQjstPFjPPzmEr_A_bcyHP-3fYM_rxUYOE2Y"},
{"content":{"body":"no existing tests for non-OK status in https://wpt.fyi/results/html/semantics/document-metadata/the-link-element, as far as I can see","m.mentions":{},"msgtype":"m.text"},"ts":1695890255929,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$-Cr6-w8X_1wlNY-iW9_MEzGkQ_Q5YHISSW_9i3OsRGQ"},
{"content":{"body":"…but there should be","m.mentions":{},"msgtype":"m.text"},"ts":1695890272461,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$igM8iaHo0u0fuPmNklfVCtFXwdCnd46PvyHI1h2l8r4"},
{"content":{"body":"annevk: I'm not sure that microtask issue has been discussed.  Queuing a microtask without an event loop should be fine, since the one can find an event loop anyhow, but when queuing a microtasks, one needs to ensure there is a task in the loop (currently running task counts).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I'm not sure that microtask issue has been discussed.  Queuing a microtask without an event loop should be fine, since the one can find an event loop anyhow, but when queuing a microtasks, one needs to ensure there is a task in the loop (currently running task counts).","msgtype":"m.text"},"ts":1695890787679,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$QCQnyXhDnGsGxK2mWGI7apSXUArvlGPLilARcEB3U5U"},
{"content":{"body":"...which is basically what you say in the initial comment 🙂 ","msgtype":"m.text"},"ts":1695890871955,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$rOhWdo9IZ_EzT45rC7vTyhPhmGOyuZsKcQPSTpo2bxM"},
{"content":{"body":"I guess we need a concept of a current task?","msgtype":"m.text"},"ts":1695891023289,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$m7_FOtPKDYkYrCaOFhucFpBVnQPfqFTMKGsKWGAnAr0"},
{"content":{"body":"smaug: Domenic seems to be saying that it's fine to add a microtask to an arbitrary event loop's microtask queue; I'm not quite able to articulate why that is wrong, but it seems quite wrong as you'd expect microtask order to be consistent within a single task and not have the outside world interfere","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> seems to be saying that it's fine to add a microtask to an arbitrary event loop's microtask queue; I'm not quite able to articulate why that is wrong, but it seems quite wrong as you'd expect microtask order to be consistent within a single task and not have the outside world interfere","m.mentions":{"user_ids":["@smaug:mozilla.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1695891027847,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gacTEeJsQKQiGzEdj3nlEo13MmpBTbKMQMtAt6aO1mI"},
{"content":{"body":"smaug: I guess it would violate run-to-completion in some way","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: I guess it would violate run-to-completion in some way","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891051172,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YthVJcejOimFcrym3AMxLl1cUZLAp0NsIYiVqcL-uAs"},
{"content":{"body":"> <@annevk:matrix.org> Noam Rosenthal: I also wonder what happens in practice for 103 today. Perhaps browsers match Fetch, but maybe only half of them do or some such.\n\nWhen we designed early hints we explicitly stated that only `Content-Security-Policy` is read and respected, and only for the purpose of the early hint itself. But I'm pretty sure we don't test that all the rest are not respected. For `Set-Cookie`, I would expect it to be not respected at all or respected only for the early hint fetches themselves, but we never spec'ed the latter\n bashi ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$d_-kBMmLBKQlNMukYkSseFLMDkLwV-2ADg2wYepuU0M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: I also wonder what happens in practice for 103 today. Perhaps browsers match Fetch, but maybe only half of them do or some such.</blockquote></mx-reply>When we designed early hints we explicitly stated that only <code>Content-Security-Policy</code> is read and respected, and only for the purpose of the early hint itself. But I'm pretty sure we don't test that all the rest are not respected. For <code>Set-Cookie</code>, I would expect it to be not respected at all or respected only for the early hint fetches themselves, but we never spec'ed the latter<br><a href=\"https://matrix.to/#/@bashi-chromium:matrix.org\">bashi</a>","m.mentions":{"user_ids":["@annevk:matrix.org","@bashi-chromium:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$d_-kBMmLBKQlNMukYkSseFLMDkLwV-2ADg2wYepuU0M"}},"msgtype":"m.text"},"ts":1695891051259,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$moimq3oCSOOThP_hYBZweJGjlDbzsKrPXlg4LLmcN7U"},
{"content":{"body":"nothing would run the microtask","msgtype":"m.text"},"ts":1695891056097,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$YVxSnkTcJhO93StXQKSyD2g4mmK3TPW2TU5ah-PPW8U"},
{"content":{"body":"at least given how mictotasks should run","msgtype":"m.text"},"ts":1695891077888,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$kw_Gi_BnWymGeAcIgbh95MxGTFJO6wl2Aa31CA1p7K0"},
{"content":{"body":"smaug: well in the spec the microtask queue is on the event loop so it would run in the next task or as part of some current task","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: well in the spec the microtask queue is on the event loop so it would run in the next task or as part of some current task","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891094401,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$DYgY-7zJjteAHVviyNUr2QdXJC1nOZdWR9IRqTzzq2g"},
{"content":{"body":"or does something in the spec somehow trigger the event loop to run","msgtype":"m.text"},"ts":1695891096938,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$6HzORXqC_CmXOIpgJKWpBobmjm-13RYtKDzUADn6Jnw"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1695891104126,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$eklwM9hjGO4JxTElubhiGxi5RPwmA252Xls9M0fGcUQ"},
{"content":{"body":"the next task might never happen","msgtype":"m.text"},"ts":1695891109893,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$sP0r59OzB9bpkphKA36shQXcgQtVuiYdYOJFVRrfQmo"},
{"content":{"body":"there might not be such","msgtype":"m.text"},"ts":1695891124346,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Rpi0qr7oPOQe7b7W8zoCNRpiAGhDopdXjpxZ_G1PB8M"},
{"content":{"body":"Yeah that's a problem, but it also seems like a problem if it just executes as part of the current task (that might still be scheduling its own microtasks)","m.mentions":{},"msgtype":"m.text"},"ts":1695891150313,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qHVktjYCpCsL4DbKYCC3pDBTL1cZ3d2mc5cyD8fL-WM"},
{"content":{"body":"annevk: you mean in case of workers?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: you mean in case of workers?","msgtype":"m.text"},"ts":1695891190538,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Ib_tmvi_alIAoeoNB9BtQdzND4Exzmh6OScpzQkbUtA"},
{"content":{"body":"smaug: for instance, or a cross-site document","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: for instance, or a cross-site document","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891207481,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ldKKnytu8MNpI4R7dwrSMIQ1-rKeRw1jyK3EspUOpCA"},
{"content":{"body":"scheduling microtasks from outside just doesn't make sense","msgtype":"m.text"},"ts":1695891223978,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$nF3v3UVRcu6aR99c-PKCFo8JfTQ1c1cwyGIl5VsFuNY"},
{"content":{"body":"I mean apparently to some people it does, so we might need more than \"just\" :-)","m.mentions":{},"msgtype":"m.text"},"ts":1695891251704,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QtF8Xjb_xEaoq4_yQYVWRpxrbBtKxufMXTg6ratjD0Q"},
{"content":{"body":"well, one can't run microtasks without a task. Isn't that quite clear","msgtype":"m.text"},"ts":1695891291489,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$IJcbVd-HJWj_5o5zrBDu7SGjQ65kcw_WiI3KVyEp8C4"},
{"content":{"body":"so scheduling a microtask which might or might not run, depending on whether there are some other tasks around would be odd","msgtype":"m.text"},"ts":1695891334370,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$95KVn6liJCkYzPEFmZ3cillPP1nsCPnd4bTRzisKiUY"},
{"content":{"body":"smaug: aah, we have a currently running task on event loop, I can assert that's non-null","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: aah, we have a currently running task on event loop, I can assert that's non-null","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891507722,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gLVkqdVVEwRriGsaG13Dv_3hatHh74vqQXy7UHDoYUc"},
{"content":{"body":"that sounds good","msgtype":"m.text"},"ts":1695891521488,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$v3xroENpBCj2U-lrwKY_J8ZQseRNfxleLf7ZGkNi3wo"},
{"content":{"body":"I wonder if web animations spec has a bug somewhere, if it doesn't guarantee that there is a task","msgtype":"m.text"},"ts":1695891595478,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$YcmeDEVdDpGd1yBVPP-yDxJix68ox5qy6H1pBYOP_oI"},
{"content":{"body":"smaug: I think there are quite a few specs that do this wrong, in part because of the promises guide which also did it wrong","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: I think there are quite a few specs that do this wrong, in part because of the promises guide which also did it wrong","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891768649,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$57_uqL1E6GtWjM4jQBYM_ppDk_w2yswDJqjfbJcDf58"},
{"content":{"body":"smaug: they just resolve a promise from \"in parallel\" or some such and hope things work out","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: they just resolve a promise from \"in parallel\" or some such and hope things work out","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695891790587,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$mr-tGmiQg9NJrVWRovYpvb81S3CKPFtbNVczOMXFkqI"},
{"content":{"body":"ah yes, easy to just resolve a promise at random point","msgtype":"m.text"},"ts":1695891791796,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$GkUJDBWPbgXvoH9EZ_uLmXpstrjcVJY8VdRvydbLFrM"},
{"content":{"body":"Domenic: ^^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ^^","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1695891820906,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$K778rvzu5ARbXsdeK9zpVRh_g9gWv4MEMjcs8JIpjlY"},
{"content":{"body":"Noam Rosenthal: makes sense. Thanks! I would expect Set-Cookie to work for the early hint preload fetches as those go through the 2xx and above pipeline.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: makes sense. Thanks! I would expect Set-Cookie to work for the early hint preload fetches as those go through the 2xx and above pipeline.","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1695891949367,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$uBU09CcVoTktnTatSL_dK7g8hIa8_sS3FzuKb40mGes"},
{"content":{"body":"annevk: I meant that I *might* expect the cookie from the 103's `Set-Cookie` to be sent to the early-hint fetch requests","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I meant that I <em>might</em> expect the cookie from the 103's <code>Set-Cookie</code> to be sent to the early-hint fetch requests","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1695892043073,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$iK5uphXYXRkKuRoqvX0eNCMwlrdIlVj5KmIof9wwSRc"},
{"content":{"body":"I wonder if there should be some implicit task created, if there is no task around? Though, I guess that should be created always when resolving a promise in parallel.","msgtype":"m.text"},"ts":1695892045463,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$xtlrnuc8wMecXj-wGI130Ub4AERXDzsfx9tyQuOb72g"},
{"content":{"body":"... but we didn't spec that","m.mentions":{},"msgtype":"m.text"},"ts":1695892049295,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$_tbbAi9jYI3e5E3nWAogd7wU11KtanZ0icScS2hIDqo"},
{"content":{"body":"Noam Rosenthal: ooh I see","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: ooh I see","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1695892256395,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gGdtEo2HxkzlsWCB40OyENLZI5r0SHfkHC3Ksc0Vvi0"},
{"content":{"body":"smaug: I think especially with in parallel you want to create a task as otherwise the microtask can end up in a random task; like if you do setTimeout and do some promise thingies in there, there shouldn't be microtasks in there from things that happened in other event loops","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: I think especially with in parallel you want to create a task as otherwise the microtask can end up in a random task; like if you do setTimeout and do some promise thingies in there, there shouldn't be microtasks in there from things that happened in other event loops","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695892382691,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QDf8Yd2FNGDRH27ZG_h-kGio15QrOht8pn78WPzuroA"},
{"content":{"body":"smaug: making it easier to resolve promises from in parallel though is something we could work on, although it's not that much work to queue a task","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: making it easier to resolve promises from in parallel though is something we could work on, although it's not that much work to queue a task","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695892430771,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yYj1bzz_8_D-nGhEorTPGy3hptih6nVf3ES31RsJsOc"},
{"content":{"body":"yeah, perhaps it is better to just require one to queue a task. That forces the spec author and also reader to think what actually happens.","msgtype":"m.text"},"ts":1695892480206,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$V70MCz3r_rdKbZ9IKAMiR1kK-9bPune_J9mpnVxxC4Q"},
{"content":{"body":"And also to pick a task queue and such.","m.mentions":{},"msgtype":"m.text"},"ts":1695892963165,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Zkevq0IjSXpKfHYMp4C91SATMQXXTF8U3g-JS7yAYYQ"},
{"content":{"body":"Domenic: when the navigation algorithm invokes \"prepare to run script\" the \"currently running task\" is non-null?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: when the navigation algorithm invokes \"prepare to run script\" the \"currently running task\" is non-null?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1695897971844,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$GKGv4KHK4wpmskutD1V1SsGZpMqwJdnWM1yIZA7L2T8"},
{"content":{"body":"Domenic: I'll write a small PR for \"prepare to run script\" to illustrate","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I'll write a small PR for \"prepare to run script\" to illustrate","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1695897999480,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$-XDr9-mq83506FMT7tEErvpWTcKKIDaBHJwf3s0Sfok"},
{"content":{"body":"smaug: if you're around, has anyone from Gecko looked at `fetchLater()`?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: if you're around, has anyone from Gecko looked at <code>fetchLater()</code>?","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695903488682,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$4SDmP1lC8yPZY7l1c1IwcA9Fz4oXs0DcyxdgRuo_G7s"},
{"content":{"body":"I could use some help getting https://github.com/whatwg/fetch/pull/1647 reviewed, don't think I'll get to it this week.","m.mentions":{},"msgtype":"m.text"},"ts":1695903548996,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$MnXdaSsFQWWJVLmNEaKmhmNSOe1kHj7oiPRpya8RJP4"},
{"content":{"body":"I was looking at it at some point, when it was still very unclear what was proposed ","msgtype":"m.text"},"ts":1695903646857,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$FxY1zvHa5pa_30FbU1rgbeQwxahpS9GtBdU4VCpNTuE"},
{"content":{"body":"beacon or fetch later","msgtype":"m.text"},"ts":1695903655169,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$bVuPHTuSTRfiVEl7iRp8IoFtx00DQWA474UBubfGRK0"},
{"content":{"body":"hmm, I'm probably not super happy with \"trigger when document is destroyed\"","msgtype":"m.text"},"ts":1695903821247,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$WTP-ux-PNh4mXeGGmNM-UZSkRg6wnhxFhUzf7fJR138"},
{"content":{"body":"or perhaps that doesn't mean all the cases?","msgtype":"m.text"},"ts":1695904207731,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$kbINQkqgrqmebqrPT9YaFnUIMrcPd9rNKG2uaRhkB8g"},
{"content":{"body":"Like when OS kills a content process to reduce memory usage","msgtype":"m.text"},"ts":1695904238405,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$z9d2jkWTF9gzrnDmiVryrlqD-J7-E9xumhpfzUURlNk"},
{"content":{"body":"smaug: the idea is to hint to the UA to perform this fetch as late as possible, or after a timeout","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: the idea is to hint to the UA to perform this fetch as late as possible, or after a timeout","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695904284954,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$GcEOfAjTviipa5Rn5SZ0IQqJkBIdobLYrhWAtYd3ZSk"},
{"content":{"body":"... where the timeout is not a DOMTimer (it stays alive regardless of active/visible etc)","m.mentions":{},"msgtype":"m.text"},"ts":1695904331081,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$1BQqsNcJN4rRDQhqym0TE3N0QG0DYou56_rVerbr1vs"},
{"content":{"body":"it's purposefully left a bit open how this is interpreted in terms of OS integration and situations like \"kill due to low memory\".","m.mentions":{},"msgtype":"m.text"},"ts":1695904394725,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$JXkIimvjHU610017dl-B4ln_bRIJ9wPhFNdA2VE57x0"},
{"content":{"body":"I have a Stack-Overflow-like question. What's a way to rewrite the following whereby \"example.unlikely\" as input doesn't result in a false-negative? I guess one could hash the input somehow, but that seems really gross?\n```\nfunction parseHost(input) {\n  dummy = new URL(\"http://example.unlikely\");\n  dummy.host = input;\n  if (dummy.host !== \"example.unlikely\")\n    return dummy.host;\n  return null;\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>I have a Stack-Overflow-like question. What's a way to rewrite the following whereby \"example.unlikely\" as input doesn't result in a false-negative? I guess one could hash the input somehow, but that seems really gross?</p>\n<pre><code>function parseHost(input) {\n  dummy = new URL(\"http://example.unlikely\");\n  dummy.host = input;\n  if (dummy.host !== \"example.unlikely\")\n    return dummy.host;\n  return null;\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1695904630747,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2Tef5qYFCoKfiLXL7DGL0aSRgg3kQwRHxmAL_feRYgs"},
{"content":{"body":"```\nfunction parseHost(input) {\n  const false_host = `${uuid()}.unlikely`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n```\n\n?","format":"org.matrix.custom.html","formatted_body":"<pre><code>function parseHost(input) {\n  const false_host = `${uuid()}.unlikely`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n</code></pre>\n<p>?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1695904829142,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$v2GeA6rcSIcCvN5rLdmgVpWj3juwX1z77RNA83KEZ8Y"},
{"content":{"body":" * ```\nfunction parseHost(input) {\n  const false_host = `${uuid()}.unguessable`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n```\n\n?","format":"org.matrix.custom.html","formatted_body":" * <pre><code>function parseHost(input) {\n  const false_host = `${uuid()}.unguessable`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n</code></pre>\n<p>?</p>\n","m.mentions":{},"m.new_content":{"body":"```\nfunction parseHost(input) {\n  const false_host = `${uuid()}.unguessable`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n```\n\n?","format":"org.matrix.custom.html","formatted_body":"<pre><code>function parseHost(input) {\n  const false_host = `${uuid()}.unguessable`;\n  dummy = new URL(\"http://${false_host}\");\n  dummy.host = input;\n  if (dummy.host !== false_host)\n    return dummy.host;\n  return null;\n}\n</code></pre>\n<p>?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$v2GeA6rcSIcCvN5rLdmgVpWj3juwX1z77RNA83KEZ8Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695904868978,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Z7caWsI-6FWR5PjlE6ywpokIHe5tF9ibRaQRT_jNP_o"},
{"content":{"body":"Noam Rosenthal: yeah, I think this is another good reason for adding `URLHost` :-) cc Adam Rice ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: yeah, I think this is another good reason for adding <code>URLHost</code> :-) cc <a href=\"https://matrix.to/#/@ricea:matrix.org\">Adam Rice</a>","m.mentions":{"user_ids":["@noamr:matrix.org","@ricea:matrix.org"]},"msgtype":"m.text"},"ts":1695904973124,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$a5KOlDrq3T9okqD6psu__RNJ6Bm_ygNV7ol0ULZKSqc"},
{"content":{"body":"I wonder how different fetchLater then is vs pagehide + fetch/beacon.","msgtype":"m.text"},"ts":1695905456848,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$xTvF402m-lnRtZ-PXl1ClREJoG6SPOAgNUUclAczoOg"},
{"content":{"body":"smaug: it's a replacement for beacon. You can't fetch in pagehide because it would be aborted","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: it's a replacement for beacon. You can't fetch in pagehide because it would be aborted","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695905543747,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$0L6jPAFT6tKtt4HFAYn4k_YGv7pgjixcOwqhXgpC38w"},
{"content":{"body":"and we need replacement for beacon because?","msgtype":"m.text"},"ts":1695905592889,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$TjaI0XYPOoC5-GhGKv_ktI3FKTmwdx8JBEfqDD4rxFk"},
{"content":{"body":"smaug: https://github.com/w3c/page-visibility/issues/59","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: https://github.com/w3c/page-visibility/issues/59","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695905684005,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$9iU9dgSnOfwFlcXvp9b9qAaBjV82ZkpacLyT8slDCxw"},
{"content":{"body":"if pagehide has issues on mobile, doesn't this new thing have too","msgtype":"m.text"},"ts":1695905692293,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$5yExLylCxkO9USpRpbn63nifrd-Ybl_gQW4mfWpGCZc"},
{"content":{"body":"it doesn't! because you're not relying on JS running at a particular very late moment.","m.mentions":{},"msgtype":"m.text"},"ts":1695905719862,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$0oTRWSl6Z_kS3QmNEwDloPmksV0swyGDgXlauib_OMY"},
{"content":{"body":"instead, you're saying at an earlier moment \"please fetch as late as possible\", instead of hoping that at that late moment you'll have JS execution","m.mentions":{},"msgtype":"m.text"},"ts":1695905776428,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$3NvoQ7vhgjrwNl1mxGKKnEjFESPwAmP8JVykAHXTuG0"},
{"content":{"body":"but you just said that OS killing the process in on purpose left a bit vague","msgtype":"m.text"},"ts":1695905790977,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$5wE3-vJ1LUGHvcamDbDedFV4oxyzKATl8Ouiwy3QSuE"},
{"content":{"body":"so it is still unreliable ","msgtype":"m.text"},"ts":1695905803309,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$6IAi-_BbGBoQo-xjV_6o_9TvHAcF9R1_YY0tp8xiVoA"},
{"content":{"body":"The idea is that that timeout is executed on the network process. however, the whole issue of \"killing processes\" is not entirely specified","m.mentions":{},"msgtype":"m.text"},"ts":1695905852846,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$_HC9lZZdWVkKE1-gxiINsAXYCplqiT-kux0Pbq9VSfs"},
{"content":{"body":"(I'm not saying no to the API, just wondering if we're replacing some old unreliable APIs with a new unreliable API)","msgtype":"m.text"},"ts":1695905857494,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$9U4tS4cINS8t61HGAh8ik1Wr5uXLdk9-L-krmIyWPtw"},
{"content":{"body":"it leaves reliability to the browser rather than to the web developer. Of course that doesn't *guarantee* reliability if the implementation drops those fetches","format":"org.matrix.custom.html","formatted_body":"it leaves reliability to the browser rather than to the web developer. Of course that doesn't <em>guarantee</em> reliability if the implementation drops those fetches","m.mentions":{},"msgtype":"m.text"},"ts":1695905931347,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$qYNQJole3nPBEUBHagHkP-p6aWKxIyx1M8zTy2oz6wk"},
{"content":{"body":"if the OS kills the whole browser, for example, of course some of these will be dropped","m.mentions":{},"msgtype":"m.text"},"ts":1695905963826,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$bEIw7AfzP194ZLMM00MRwJGIoLc67uk_RLwQ9wzbXZc"},
{"content":{"body":"right now the reliability of pagehide is also on the browser, not on the web developer","msgtype":"m.text"},"ts":1695905973501,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$oGb-sx1fQ9bLBRTCIB5JENxGIyrgO5sORxKFY2g6ve8"},
{"content":{"body":"smaug:  sure.  this came as a shared design discussion between chromium & webkit folks, that making something declarative like this reliable is more feasible than reliably firing `pagehide` ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>:  sure.  this came as a shared design discussion between chromium &amp; webkit folks, that making something declarative like this reliable is more feasible than reliably firing <code>pagehide</code>","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1695906188808,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$eRXuDSSKEi0YweR4CJ6SNlP7RCha0MyHMw-OJ04HkzA"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1695906202222,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$YgOa3YOFMOdvUVi4BV1mkrWy82WawgkTEFYAo9duBdU"},
{"content":{"body":"but it is still replacing one unreliable thing with another reliable thing","msgtype":"m.text"},"ts":1695906218540,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$31zFzbgv0NZcOt7ttDLsLCApB2rVwqsz2ibXXQuHLEk"},
{"content":{"body":"which just feels a bit silly 🙂 even though it might be in practice good, since the new thing might less unreliable ","msgtype":"m.text"},"ts":1695906254979,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$fxohj4_tcCnRosp2XDhaGaQGaNl4e6hy7EwYak8Z8Ro"},
{"content":{"body":"Reliability is on a sliding scale I guess. ","m.mentions":{},"msgtype":"m.text"},"ts":1695906265668,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$AxQoyho-eJHFPAuPDY3vNg92cAJvtIlNbU54wqV9Sj4"},
{"content":{"body":"If we treated everything as 100% reliable or 100% unreliable we wouldn't get far.","m.mentions":{},"msgtype":"m.text"},"ts":1695906297233,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$3lcSRngGfGdVgTK5FN5ypvyB2JaOuvBmDw_4JvQZBzw"},
{"content":{"body":"we tried to design an API that gives the browsers a better opportunity at making these fetches reliable","m.mentions":{},"msgtype":"m.text"},"ts":1695906327156,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$58np-PgyvFLI8tY2-c9iLb1YlWWOCF4pf7SP5ZUmbRw"},
{"content":{"body":" * but it is still replacing one unreliable thing with another unreliable thing","m.new_content":{"body":"but it is still replacing one unreliable thing with another unreliable thing","msgtype":"m.text"},"m.relates_to":{"event_id":"$31zFzbgv0NZcOt7ttDLsLCApB2rVwqsz2ibXXQuHLEk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695906464071,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$B_8K0tCd1ewn08Nqu0il9br77lF3JPfgkOgOYQ5cbfs"},
{"content":{"body":"I find it a bit odd that when parsing HTML null characters are reported twice as errors. Once during tokenization and then again during tree construction. I'd consider the latter to be redundant. Does anybody have some insight/thoughts?","msgtype":"m.text"},"ts":1695920452193,"senderName":"martin","senderId":"@martin:push-f.com","id":"$jmtJF3NSHUI05c7eijOAeNjiyGJ3G1xgbyYvr7_TJ84"}
]