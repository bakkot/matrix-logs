[
{"content":{"body":"> <@domenicdenicola:matrix.org> hsivonen: you may enjoy borrowing from https://github.com/jsdom/html-encoding-sniffer/tree/master/test . Not very exhaustive I imagine but it caught a few bugs in our implementation as you can see from https://github.com/jsdom/html-encoding-sniffer/commits/master/test\n\nThanks. These are much simpler than what I had in mind (but also test things that I wasn't about to test).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$OaESrFbPD-iBnqL6iwWmDzsVeEsppFfXyxIknd04wUM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: you may enjoy borrowing from https://github.com/jsdom/html-encoding-sniffer/tree/master/test . Not very exhaustive I imagine but it caught a few bugs in our implementation as you can see from https://github.com/jsdom/html-encoding-sniffer/commits/master/test</blockquote></mx-reply>Thanks. These are much simpler than what I had in mind (but also test things that I wasn't about to test).","m.relates_to":{"m.in_reply_to":{"event_id":"$OaESrFbPD-iBnqL6iwWmDzsVeEsppFfXyxIknd04wUM"}},"msgtype":"m.text"},"ts":1632291532370,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$jfquzLrgb2d1EjPNUGdtRECqJPJZAzoeKKWAs-po9hI"},
{"content":{"body":"I think for starters, I'm going to turn https://hsivonen.com/test/moz/meta/ into both WPT reftests and Gecko reftests (for non-`file:` and `file:`) and into same-origin-framed scripted WPTs.","format":"org.matrix.custom.html","formatted_body":"I think for starters, I'm going to turn https://hsivonen.com/test/moz/meta/ into both WPT reftests and Gecko reftests (for non-<code>file:</code> and <code>file:</code>) and into same-origin-framed scripted WPTs.","msgtype":"m.text"},"ts":1632291605076,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$B-8pDpE0EHI614i96UzohpE6uRPRisjlAJivdzaKW4M"},
{"content":{"body":"annevk: Why don't we add `Origin` to non-CORS `GET` requests? Do some servers assume that the presence of the `Origin` header means its a CORS request and block it?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Why don't we add <code>Origin</code> to non-CORS <code>GET</code> requests? Do some servers assume that the presence of the <code>Origin</code> header means its a CORS request and block it?","msgtype":"m.text"},"ts":1632303861118,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$qTyPes5P48HT8xaOotPz_ssaSxmWhG5ll7NocVovB4E"},
{"content":{"body":"Jake Archibald: basically","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: basically","msgtype":"m.text"},"ts":1632304283971,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KS-vFcBUPbxERgcZ1KkLsGrlNBg9ZPZaDFyQizDU9eU"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1632304477520,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$8v6ScJOMPm8RuMa4lAwbV7b9OZDHYTZKm2BlYRFy2o0"},
{"content":{"body":"Aargh. I suspect that Chrome doesn't limit the after-head `meta charset` scan to _exactly_ 1024 bytes. I guess I need to write a variable-offset test case to find out.","format":"org.matrix.custom.html","formatted_body":"Aargh. I suspect that Chrome doesn't limit the after-head <code>meta charset</code> scan to <em>exactly</em> 1024 bytes. I guess I need to write a variable-offset test case to find out.","msgtype":"m.text"},"ts":1632310194116,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$pjLaiyd9_f1-d2mq_iGvt2SAwZ366nm8CR2lmlZOjRg"},
{"content":{"body":"time to learn how PHP works these days, I guess.","msgtype":"m.text"},"ts":1632310240882,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$_4Bk64geqFqQ_Ke7q7VrcUdezqKiH_DJ501fPeBomzg"},
{"content":{"body":"Should it start or end in the 1024? ðŸ¤”","msgtype":"m.text"},"ts":1632310257763,"senderName":"Ms2ger ðŸ’‰ðŸ’‰","senderId":"@ms2ger:igalia.com","id":"$b949vlE4apIsfoI4cJumwYV76jAH8BYgUSKi2L6RL4A"},
{"content":{"body":"That's part of the question. I thought the semantics were that the stream was cut to 1024 bytes and then the `>` had to be within that part for the tokenizer to emit the token, but I guess that's not the whole story.","format":"org.matrix.custom.html","formatted_body":"That's part of the question. I thought the semantics were that the stream was cut to 1024 bytes and then the <code>&gt;</code> had to be within that part for the tokenizer to emit the token, but I guess that's not the whole story.","msgtype":"m.text"},"ts":1632310313766,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$ZJn0TlL1_1nwY6MlPHrYuxlb5LEfuu6fe6M_vnHIW6E"},
{"content":{"body":"Fun. Either PHP or nginx adds a charset parameter to the HTTP header if I don't supply one. Fortunately, `charset=bogus` should work for this purpose.","format":"org.matrix.custom.html","formatted_body":"Fun. Either PHP or nginx adds a charset parameter to the HTTP header if I don't supply one. Fortunately, <code>charset=bogus</code> should work for this purpose.","msgtype":"m.text"},"ts":1632310909989,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$6OKYtZczYeRWGC-Wm7oAgS-jkEPd17jC0Nwll71-mYk"},
{"content":{"body":"Clearly not optimized for writing encoding test cases.","msgtype":"m.text"},"ts":1632310925021,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$MYrTuuW-I20Zs46h04HpnPT5FPZKiG37rCLqH69_Kds"},
{"content":{"body":"Domenic: you didn't weigh in yet, but are you okay with merging credentialless with the added warning?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: you didn't weigh in yet, but are you okay with merging credentialless with the added warning?","msgtype":"m.text"},"ts":1632311691093,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$8w0oK8f5BVQXCLyhpJ4lXTtw1VKjGWL-3ayBwpde1-0"},
{"content":{"body":"hsivonen: why resort to PHP and not wpt's Python infrastructure?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: why resort to PHP and not wpt's Python infrastructure?","msgtype":"m.text"},"ts":1632311751954,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$rvDPLmd7bD09gOBLusQNX1-pCUNizLfmbi4MkAXB61o"},
{"content":{"body":"> <@annevk:mozilla.org> hsivonen: why resort to PHP and not wpt's Python infrastructure?\n\nMy server doesn't have WPT infra","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$rvDPLmd7bD09gOBLusQNX1-pCUNizLfmbi4MkAXB61o?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: why resort to PHP and not wpt's Python infrastructure?</blockquote></mx-reply>My server doesn't have WPT infra","m.relates_to":{"m.in_reply_to":{"event_id":"$rvDPLmd7bD09gOBLusQNX1-pCUNizLfmbi4MkAXB61o"}},"msgtype":"m.text"},"ts":1632311779029,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$Ml91fsPJY2j0RRYP6kBOpeRr8QANfbvidZOgxDbjK9M"},
{"content":{"body":"(And I want a test with a public URL)","msgtype":"m.text"},"ts":1632311805582,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$G528RpE4RQUzPq7B3IOhqvQ3UVArrFD_F8bkEa9TOc0"},
{"content":{"body":"hsivonen: but you can just run ./wpt serve locally no to get a server?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: but you can just run ./wpt serve locally no to get a server?","msgtype":"m.text"},"ts":1632311812742,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$pkt8w6OxugJ9NR-lBnifFVBvxVI6KRHPwbr5nX_doAY"},
{"content":{"body":"Ah, okay","msgtype":"m.text"},"ts":1632311815712,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$a4hwOUdxGjJIhROAk5Prsrwrz6sK3AjArJ7nAQf7o-s"},
{"content":{"body":"Aaand, the answer is that the `<` of the meta has to be within the first 1024 bytes: https://hsivonen.com/test/moz/meta/after-head-variable.php?start=1023 vs. https://hsivonen.com/test/moz/meta/after-head-variable.php?start=1024 . This makes everything more complicated. :-(","format":"org.matrix.custom.html","formatted_body":"Aaand, the answer is that the <code>&lt;</code> of the meta has to be within the first 1024 bytes: https://hsivonen.com/test/moz/meta/after-head-variable.php?start=1023 vs. https://hsivonen.com/test/moz/meta/after-head-variable.php?start=1024 . This makes everything more complicated. :-(","msgtype":"m.text"},"ts":1632312558420,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$1cRf-tSUBPkOhbvbUM_HZCxAEjkdS4BvO-vgV3b0BE8"},
{"content":{"body":"annevk: Fetch is pretty strict when it comes to the format of safelisted request headers, but it isn't strict about the format of the request body. Why's that?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Fetch is pretty strict when it comes to the format of safelisted request headers, but it isn't strict about the format of the request body. Why's that?","msgtype":"m.text"},"ts":1632312777749,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$wMK1NTSPr9JOUacUgCuYXI9uPzRnz8PpDTZ-mXV2iXM"},
{"content":{"body":"Well, the glass half-full view is that at least the start boundary is well-defined instead of being something like \"whichever network buffer contains the 1024th byte\"","msgtype":"m.text"},"ts":1632313579946,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$0Whns12opqXd_7ysgOUKHbfaYMPyvEhViS-43KXKzzw"},
{"content":{"body":"Are you testing network buffers? Because 1024 is a round number","msgtype":"m.text"},"ts":1632313632424,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$o2OQCfWMGpFfG8UBStvQkbUpnDnedkft4hNTFuTNkP4"},
{"content":{"body":"Good point!","msgtype":"m.text"},"ts":1632313651181,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$XxZponA81lFtJ5l9hTOXfiu3Y2rYjl6eZHLQwz5oKcs"},
{"content":{"body":"Except if there was a boundary at 1024, then the end of the token would be in the next buffer.","msgtype":"m.text"},"ts":1632313754609,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$m4vfXrYc03N7I-eNNq-yG26W8Xow-L_CHN1mI0GAUts"},
{"content":{"body":"Still, I guess I have to test this. ðŸ˜­","msgtype":"m.text"},"ts":1632313788911,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$I4OyYdvR2h64keeWgF3M4gW3jaZ0_SPxKvXkueti2mQ"},
{"content":{"body":"Adding a buffer boundary doesn't appear to change things: https://hsivonen.com/test/moz/meta/after-head-variable.php?start=1023&flush=1030","msgtype":"m.text"},"ts":1632314268496,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$wFK3IbiDbQzGRNnnvgzGFHB-DX0fVjBNNFLUET5oBdM"},
{"content":{"body":"A quick source inspection indicates that the check is on characters after Latin1 decode and not a check on network buffers, but it's not immediately obvious to me why the check ends up checking the start of the token as opposed to checking the end of the token.","msgtype":"m.text"},"ts":1632314694160,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$nyQ9zP3Apw0B45aEGK5bC6r1BQk0TJcJ9Ef20_Bbbpg"},
{"content":{"body":"Fun times that `<` can open something other than a tag, so if at 1024 the tokenizer isn't in data state, it's necessary to watch also for a comment, etc., ending.","format":"org.matrix.custom.html","formatted_body":"Fun times that <code>&lt;</code> can open something other than a tag, so if at 1024 the tokenizer isn't in data state, it's necessary to watch also for a comment, etc., ending.","msgtype":"m.text"},"ts":1632315033310,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$osz3Yf5rpXJjEaj-4rRhhcDZH4Voutrp0scrCnvlb_Y"},
{"content":{"body":"Jake Archibald: mostly because restricting the headers was still feasible; but you can send pretty arbitrary bodies using <form> already so that was already considered pretty much unguarded","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: mostly because restricting the headers was still feasible; but you can send pretty arbitrary bodies using &lt;form&gt; already so that was already considered pretty much unguarded","msgtype":"m.text"},"ts":1632315975704,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4x4Zm9QrO6bvkoSw7ILGID-mYxr_pmsxTgmsCQ9FqHo"},
{"content":{"body":"I guess text/plain forms allow pretty much anything","msgtype":"m.text"},"ts":1632316027087,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$WmESWL6lGolKL0atL-pVVVZpoag7Z60kgXSEQGgGNzE"},
{"content":{"body":"Ta!","msgtype":"m.text"},"ts":1632316055845,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$PaGw5KNqVvwWvKgPwnmwnIiuXUDDtTTVc2AYGTuSahs"},
{"content":{"body":"Yeah exactly. Still not quite arbitrary bytes so maybe we should have drawn a harder line there. In the early days of CORS this didn't get as much consideration as it probably should have.","msgtype":"m.text"},"ts":1632316104927,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$e2qMIg1HIFjRNryQV4ysaA3c3L3QdlMWuJVITwNG3lI"}
]