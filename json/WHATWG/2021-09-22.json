[
{"content":{"body":"> <@domenicdenicola:matrix.org> hsivonen: you may enjoy borrowing from https://github.com/jsdom/html-encoding-sniffer/tree/master/test . Not very exhaustive I imagine but it caught a few bugs in our implementation as you can see from https://github.com/jsdom/html-encoding-sniffer/commits/master/test\n\nThanks. These are much simpler than what I had in mind (but also test things that I wasn't about to test).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$OaESrFbPD-iBnqL6iwWmDzsVeEsppFfXyxIknd04wUM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: you may enjoy borrowing from https://github.com/jsdom/html-encoding-sniffer/tree/master/test . Not very exhaustive I imagine but it caught a few bugs in our implementation as you can see from https://github.com/jsdom/html-encoding-sniffer/commits/master/test</blockquote></mx-reply>Thanks. These are much simpler than what I had in mind (but also test things that I wasn't about to test).","m.relates_to":{"m.in_reply_to":{"event_id":"$OaESrFbPD-iBnqL6iwWmDzsVeEsppFfXyxIknd04wUM"}},"msgtype":"m.text"},"ts":1632291532370,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$jfquzLrgb2d1EjPNUGdtRECqJPJZAzoeKKWAs-po9hI"},
{"content":{"body":"I think for starters, I'm going to turn https://hsivonen.com/test/moz/meta/ into both WPT reftests and Gecko reftests (for non-`file:` and `file:`) and into same-origin-framed scripted WPTs.","format":"org.matrix.custom.html","formatted_body":"I think for starters, I'm going to turn https://hsivonen.com/test/moz/meta/ into both WPT reftests and Gecko reftests (for non-<code>file:</code> and <code>file:</code>) and into same-origin-framed scripted WPTs.","msgtype":"m.text"},"ts":1632291605076,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$B-8pDpE0EHI614i96UzohpE6uRPRisjlAJivdzaKW4M"},
{"content":{"body":"annevk: Why don't we add `Origin` to non-CORS `GET` requests? Do some servers assume that the presence of the `Origin` header means its a CORS request and block it?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: Why don't we add <code>Origin</code> to non-CORS <code>GET</code> requests? Do some servers assume that the presence of the <code>Origin</code> header means its a CORS request and block it?","msgtype":"m.text"},"ts":1632303861118,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$qTyPes5P48HT8xaOotPz_ssaSxmWhG5ll7NocVovB4E"},
{"content":{"body":"Jake Archibald: basically","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: basically","msgtype":"m.text"},"ts":1632304283971,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$KS-vFcBUPbxERgcZ1KkLsGrlNBg9ZPZaDFyQizDU9eU"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1632304477520,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$8v6ScJOMPm8RuMa4lAwbV7b9OZDHYTZKm2BlYRFy2o0"},
{"content":{"body":"Aargh. I suspect that Chrome doesn't limit the after-head `meta charset` scan to _exactly_ 1024 bytes. I guess I need to write a variable-offset test case to find out.","format":"org.matrix.custom.html","formatted_body":"Aargh. I suspect that Chrome doesn't limit the after-head <code>meta charset</code> scan to <em>exactly</em> 1024 bytes. I guess I need to write a variable-offset test case to find out.","msgtype":"m.text"},"ts":1632310194116,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$pjLaiyd9_f1-d2mq_iGvt2SAwZ366nm8CR2lmlZOjRg"},
{"content":{"body":"time to learn how PHP works these days, I guess.","msgtype":"m.text"},"ts":1632310240882,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$_4Bk64geqFqQ_Ke7q7VrcUdezqKiH_DJ501fPeBomzg"},
{"content":{"body":"Should it start or end in the 1024? ðŸ¤”","msgtype":"m.text"},"ts":1632310257763,"senderName":"Ms2ger ðŸ’‰ðŸ’‰","senderId":"@ms2ger:igalia.com","id":"$b949vlE4apIsfoI4cJumwYV76jAH8BYgUSKi2L6RL4A"},
{"content":{"body":"That's part of the question. I thought the semantics were that the stream was cut to 1024 bytes and then the `>` had to be within that part for the tokenizer to emit the token, but I guess that's not the whole story.","format":"org.matrix.custom.html","formatted_body":"That's part of the question. I thought the semantics were that the stream was cut to 1024 bytes and then the <code>&gt;</code> had to be within that part for the tokenizer to emit the token, but I guess that's not the whole story.","msgtype":"m.text"},"ts":1632310313766,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$ZJn0TlL1_1nwY6MlPHrYuxlb5LEfuu6fe6M_vnHIW6E"},
{"content":{"body":"Fun. Either PHP or nginx adds a charset parameter to the HTTP header if I don't supply one. Fortunately, `charset=bogus` should work for this purpose.","format":"org.matrix.custom.html","formatted_body":"Fun. Either PHP or nginx adds a charset parameter to the HTTP header if I don't supply one. Fortunately, <code>charset=bogus</code> should work for this purpose.","msgtype":"m.text"},"ts":1632310909989,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$6OKYtZczYeRWGC-Wm7oAgS-jkEPd17jC0Nwll71-mYk"},
{"content":{"body":"Clearly not optimized for writing encoding test cases.","msgtype":"m.text"},"ts":1632310925021,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$MYrTuuW-I20Zs46h04HpnPT5FPZKiG37rCLqH69_Kds"}
]