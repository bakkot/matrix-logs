[
{"content":{"body":"Dominic Farolino: annevk: I think my recollection is a bit different. Workstreams have editors which have some theoretical powers (which rarely, if ever, get exercised). For some policy-adjacent reason we thought it'd be best to stick to one editor per workstream, although there are a few exceptions. Standards have authors. In practice authors are the core contributors to the spec. Also in some cases people who have contributed significantly historically but not currently are listed as authors.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I think my recollection is a bit different. Workstreams have editors which have some theoretical powers (which rarely, if ever, get exercised). For some policy-adjacent reason we thought it'd be best to stick to one editor per workstream, although there are a few exceptions. Standards have authors. In practice authors are the core contributors to the spec. Also in some cases people who have contributed significantly historically but not currently are listed as authors.","m.mentions":{"user_ids":["@domfarolino:matrix.org","@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1714093865041,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$1mgv6n_zW7Pd8AFtnKDN-axdLR9nWfUxG5PICPo6SVw"},
{"content":{"body":"Domenic: I see, so when we colloquially refer to someone being the editor of a standard, we really mean \"author\"? I imagine we rarely ever mean \"Workstream Editor\", because that role-specific duty is probably rarely relevant to casual conversation around the maintenance of standards, i.e., people who review and can click merge (as evidenced by your \"have some theoretical powers (which rarely, if ever, get exercise)...\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I see, so when we colloquially refer to someone being the editor of a standard, we really mean \"author\"? I imagine we rarely ever mean \"Workstream Editor\", because that role-specific duty is probably rarely relevant to casual conversation around the maintenance of standards, i.e., people who review and can click merge (as evidenced by your \"have some theoretical powers (which rarely, if ever, get exercise)...\"","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1714104527593,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$pNMeuemjHmmJ7ZyR0G-p1PYe_D33cm6X8XKlLQZ4r5k"},
{"content":{"body":"And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the _authors_? It sounds like they are the authors, since deputy editor is a per-Standard thing, per https://whatwg.org/working-mode#standard at least.","format":"org.matrix.custom.html","formatted_body":"And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the <em>authors</em>? It sounds like they are the authors, since deputy editor is a per-Standard thing, per https://whatwg.org/working-mode#standard at least.","m.mentions":{},"msgtype":"m.text"},"ts":1714104751333,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$Vii-WhgPI2zDX0X0UO9XdPeW2ZrK82yB5d6jLBMQIis"},
{"content":{"body":"Yeah that's my understanding. Although re-reading the policy I guess workstream editors are theoretically the ones who are \"authorized\" to modify the spec. https://whatwg.org/workstream-policy#modifying-the-living-standard","msgtype":"m.text"},"ts":1714104765387,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$kvMyE77J_Ugkku6C9Rp7DqRTCkcEHjomGcVj775YYsk"},
{"content":{"body":" * And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the _authors_? It sounds like they are the authors, since deputy editor is a per-Standard thing, see https://whatwg.org/working-mode#standard at least) not a per-Workstream thing.","format":"org.matrix.custom.html","formatted_body":" * And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the <em>authors</em>? It sounds like they are the authors, since deputy editor is a per-Standard thing, see https://whatwg.org/working-mode#standard at least) not a per-Workstream thing.","m.mentions":{},"m.new_content":{"body":"And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the _authors_? It sounds like they are the authors, since deputy editor is a per-Standard thing, see https://whatwg.org/working-mode#standard at least) not a per-Workstream thing.","format":"org.matrix.custom.html","formatted_body":"And where do deputy editors fit into this? Are those just the other Workstream Editors besides the first person listed there? Or are they the <em>authors</em>? It sounds like they are the authors, since deputy editor is a per-Standard thing, see https://whatwg.org/working-mode#standard at least) not a per-Workstream thing.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Vii-WhgPI2zDX0X0UO9XdPeW2ZrK82yB5d6jLBMQIis","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1714104771515,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$cEMhhlP_d2jrK15Oq9t2hgoA7tWEazh0QsKvT5-LKL0"},
{"content":{"body":"And deputy editors that they delegate too I think","m.mentions":{},"msgtype":"m.text"},"ts":1714104790450,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$DgenEGJfoRIEasz589AxuSzwph8fMr_jD4Kj-e0DsTE"},
{"content":{"body":"So maybe biblio.json author == deputy editor","msgtype":"m.text"},"ts":1714104797776,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$elzHTmaRPR_Oigxalm4i1EK1WkKM5KjKUsRyP767hO0"},
{"content":{"body":"I think that's right","m.mentions":{},"msgtype":"m.text"},"ts":1714104806488,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$17HsNW3OwHxsc-5hbKjIyXbNEEPwdf0pzdPDnkwXrUY"},
{"content":{"body":"Or... db.json you mean?","m.mentions":{},"msgtype":"m.text"},"ts":1714104831112,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$9-XIWXGj_j0WFUxJvV2OAQxXGI4LBGdB9kjSt1r4pak"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1714104879115,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IsRAjE38-jWkxyS2RXhUEsNWyLoDt_w4ey_2S_LhU9Y"},
{"content":{"body":"Filed https://github.com/whatwg/sg/issues/232","m.mentions":{},"msgtype":"m.text"},"ts":1714105231022,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$NnkxnXKtwvmKsyE46ssUv72JHuFTi01Rr7b_CNVI6lA"},
{"content":{"body":"I don't really know how the machinery of that repo works but I can take a look tomorrow maybe if nobody gets to it first.","m.mentions":{},"msgtype":"m.text"},"ts":1714105271149,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$2PqFMVRdFnvfG6ySdoI0JlXPQKQv9KMpUFccs7Opvjs"},
{"content":{"body":"Dominic Farolino: the main thing you'll have to do is to look at whatwg/whatwg.org's Python scripts to see if they need the same change; there's probably something there that has \"authors\" in it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: the main thing you'll have to do is to look at whatwg/whatwg.org's Python scripts to see if they need the same change; there's probably something there that has \"authors\" in it","m.mentions":{"user_ids":["@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1714117012208,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$CE8Afsd216o8Nerli9rMOgqBtU8rqvvUfVfxoUe0bqU"},
{"content":{"body":"Greetings!","m.mentions":{},"msgtype":"m.text"},"ts":1714120413219,"senderName":"iamfernando","senderId":"@iamfernando:matrix.org","id":"$uQIQxL5jyLyADP7m2Mrv-043VTyWciRQY0c5CLxkBoQ"},
{"content":{"body":"I saw a \"This list can be changed. If there are schemes that ought to be added, please send feedback.\" and was wondering where should I send the feedback?","m.mentions":{},"msgtype":"m.text"},"ts":1714120437545,"senderName":"iamfernando","senderId":"@iamfernando:matrix.org","id":"$Ohs4XE5ykoZa6RCN4wL_CxuUOo7RahxL0bLNEZIyQCc"},
{"content":{"body":"more specifically about https://html.spec.whatwg.org/multipage/system-state.html#custom-handlers ","m.mentions":{},"msgtype":"m.text"},"ts":1714120514682,"senderName":"iamfernando","senderId":"@iamfernando:matrix.org","id":"$_7C6oA8Po0Swrter0sNcNEPPjjFZt2JGu9SzMC5T7Yg"},
{"content":{"body":"Could we have handlers for nostr?","m.mentions":{},"msgtype":"m.text"},"ts":1714122314400,"senderName":"iamfernando","senderId":"@iamfernando:matrix.org","id":"$A_o6o0TEczc-A7x9LVGRFO7y39K2kigYDDN0kFQTAmA"},
{"content":{"body":"About expected behavior for `document.execCommand(\"Paste\")` with `contentEditable` elements: Looking at text expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the `contentEditable`, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).\n\n…whereas in the case of the `textarea` element and `input` element, the expectation is that the source/input string does get pasted as expected.","format":"org.matrix.custom.html","formatted_body":"<p>About expected behavior for <code>document.execCommand(\"Paste\")</code> with <code>contentEditable</code> elements: Looking at text expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the <code>contentEditable</code>, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).</p>\n<p>…whereas in the case of the <code>textarea</code> element and <code>input</code> element, the expectation is that the source/input string does get pasted as expected.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1714125493357,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$kQl-e5MKAyGkwQcBWGDOa0q7Yqte_cQfmZJTsritOqA"},
{"content":{"body":" * About expected behavior for `document.execCommand(\"Paste\")` with `contentEditable` elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the `contentEditable`, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).\n\n…whereas in the case of the `textarea` element and `input` element, the expectation is that the source/input string does get pasted as expected.","format":"org.matrix.custom.html","formatted_body":" * <p>About expected behavior for <code>document.execCommand(\"Paste\")</code> with <code>contentEditable</code> elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the <code>contentEditable</code>, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).</p>\n<p>…whereas in the case of the <code>textarea</code> element and <code>input</code> element, the expectation is that the source/input string does get pasted as expected.</p>\n","m.mentions":{},"m.new_content":{"body":"About expected behavior for `document.execCommand(\"Paste\")` with `contentEditable` elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the `contentEditable`, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).\n\n…whereas in the case of the `textarea` element and `input` element, the expectation is that the source/input string does get pasted as expected.","format":"org.matrix.custom.html","formatted_body":"<p>About expected behavior for <code>document.execCommand(\"Paste\")</code> with <code>contentEditable</code> elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the <code>contentEditable</code>, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).</p>\n<p>…whereas in the case of the <code>textarea</code> element and <code>input</code> element, the expectation is that the source/input string does get pasted as expected.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$kQl-e5MKAyGkwQcBWGDOa0q7Yqte_cQfmZJTsritOqA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1714125508028,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$bG8WrJa3L3m46yzkp62QpK-s5OCQpgVPcrWDrGRrdxU"},
{"content":{"body":" * About expected behavior for `document.execCommand(\"Paste\")` with `contentEditable` elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the `contentEditable` case, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).\n\n…whereas in the case of the `textarea` element and `input` element, the expectation is that the source/input string does get pasted as expected.","format":"org.matrix.custom.html","formatted_body":" * <p>About expected behavior for <code>document.execCommand(\"Paste\")</code> with <code>contentEditable</code> elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the <code>contentEditable</code> case, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).</p>\n<p>…whereas in the case of the <code>textarea</code> element and <code>input</code> element, the expectation is that the source/input string does get pasted as expected.</p>\n","m.mentions":{},"m.new_content":{"body":"About expected behavior for `document.execCommand(\"Paste\")` with `contentEditable` elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the `contentEditable` case, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).\n\n…whereas in the case of the `textarea` element and `input` element, the expectation is that the source/input string does get pasted as expected.","format":"org.matrix.custom.html","formatted_body":"<p>About expected behavior for <code>document.execCommand(\"Paste\")</code> with <code>contentEditable</code> elements: Looking at test expectations in https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L106, I’m trying to figure out why in the <code>contentEditable</code> case, the expectation for the result of the paste is the empty string (rather than the source/input string being pasted).</p>\n<p>…whereas in the case of the <code>textarea</code> element and <code>input</code> element, the expectation is that the source/input string does get pasted as expected.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$kQl-e5MKAyGkwQcBWGDOa0q7Yqte_cQfmZJTsritOqA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1714125518038,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$8XW7SI-yMORPEiIES2-VKPZ6j4GouBbwiv8pAQp3XWs"},
{"content":{"body":"zcorpan: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling `preventDefault()`with a `textInput` event for a `document.execCommand(\"Paste\")` operation should not actually case the paste operation to fail, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling <code>preventDefault()</code>with a <code>textInput</code> event for a <code>document.execCommand(\"Paste\")</code> operation should not actually case the paste operation to fail, right?","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1714125972396,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$SpdDuVvrRoMfXSrkCaRaiUcIoOUmYqScpEJYrGZqs6M"},
{"content":{"body":" * zcorpan: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling `preventDefault()`with a `textInput` event for a `document.execCommand(\"Paste\")` operation should not actually cause the paste operation to fail, right?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling <code>preventDefault()</code>with a <code>textInput</code> event for a <code>document.execCommand(\"Paste\")</code> operation should not actually cause the paste operation to fail, right?","m.mentions":{},"m.new_content":{"body":"zcorpan: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling `preventDefault()`with a `textInput` event for a `document.execCommand(\"Paste\")` operation should not actually cause the paste operation to fail, right?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: about the test at https://github.com/WebKit/WebKit/blob/1ade9b72a383daa2aee2e964d15c42877b9fb999/LayoutTests/editing/pasteboard/paste-text-events.html#L25, calling <code>preventDefault()</code>with a <code>textInput</code> event for a <code>document.execCommand(\"Paste\")</code> operation should not actually cause the paste operation to fail, right?","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SpdDuVvrRoMfXSrkCaRaiUcIoOUmYqScpEJYrGZqs6M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1714126025851,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$8Lu4YB2E4sLlDBa-EcNX65RzjqpXjhKuTllQp86mG1E"}
]