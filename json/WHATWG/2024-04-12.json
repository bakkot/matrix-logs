[
{"content":{"body":"is there a way to style a popover (or a popover's children) that they become visible? I guess overriding the user-agent sheet \"display: none\" makes it not so?","m.mentions":{},"msgtype":"m.text"},"ts":1712928052374,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$N1rJIsBStiYh5DE0rgqP8bUICb79Ig81Kk6wLO4sR58"},
{"content":{"body":" * is there a way to style a popover (or a popover's children) that they become visible? I guess overriding the user-agent sheet \"display: none\" for a popover isn't possible. But not even for the children?","m.mentions":{},"m.new_content":{"body":"is there a way to style a popover (or a popover's children) that they become visible? I guess overriding the user-agent sheet \"display: none\" for a popover isn't possible. But not even for the children?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$N1rJIsBStiYh5DE0rgqP8bUICb79Ig81Kk6wLO4sR58","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712928075574,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$ctNgnfYdH2_6Pyv-1LhfwICN9iptAiqGpyYmGcyBeuU"},
{"content":{"body":"> <@fbraun:mozilla.org> is there a way to style a popover (or a popover's children) that they become visible? I guess overriding the user-agent sheet \"display: none\" for a popover isn't possible. But not even for the children?\n\nWhy is that not possible? I thought you could just say \"display: block\" and it would show?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$N1rJIsBStiYh5DE0rgqP8bUICb79Ig81Kk6wLO4sR58?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@fbraun:mozilla.org\">@fbraun:mozilla.org</a><br />is there a way to style a popover (or a popover's children) that they become visible? I guess overriding the user-agent sheet &quot;display: none&quot; for a popover isn't possible. But not even for the children?</blockquote></mx-reply>Why is that not possible? I thought you could just say &quot;display: block&quot; and it would show?","m.relates_to":{"m.in_reply_to":{"event_id":"$N1rJIsBStiYh5DE0rgqP8bUICb79Ig81Kk6wLO4sR58"}},"msgtype":"m.text"},"ts":1712930906047,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$UdvnDfuQqYWsIL0rT_xiWAAk8Tb3tDwzLoJmSWyOTgM"},
{"content":{"body":"Mh, not for the children. `<div popover style=\"display:block\"><h1>test` shows the div with the h1 child but `<div popover><h1 style=\"display:block;\">test` doesnt.  I guess that's sort of intentional and I get it. I just wonder what kind of override there is","format":"org.matrix.custom.html","formatted_body":"Mh, not for the children. <code>&lt;div popover style=\"display:block\"&gt;&lt;h1&gt;test</code> shows the div with the h1 child but <code>&lt;div popover&gt;&lt;h1 style=\"display:block;\"&gt;test</code> doesnt.  I guess that's sort of intentional and I get it. I just wonder what kind of override there is","m.mentions":{},"msgtype":"m.text"},"ts":1712931156429,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$Ym18Kv2zZVOyRzaGGt6VoUonE2pq_kEB4OTJ34eGCYs"},
{"content":{"body":"I tried adding `!important` and `visibility: visible` for good measure ;)","format":"org.matrix.custom.html","formatted_body":"I tried adding <code>!important</code> and <code>visibility: visible</code> for good measure ;)","m.mentions":{},"msgtype":"m.text"},"ts":1712931174881,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$LanvM1ikdvYFd1-cF9eRf5bTl0QnCOyOM8QWL1Pl9pQ"},
{"content":{"body":"freddy: that would still put display:none at the top of the subtree and that wins","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: that would still put display:none at the top of the subtree and that wins","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"msgtype":"m.text"},"ts":1712931689195,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$gzGF7vOIpN34_93zhhH1OQbjglX0rauue75Grjt_66Y"},
{"content":{"body":"freddy: so you need to change that too, perhaps display:contents is what you're after?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: so you need to change that too, perhaps display:contents is what you're after?","m.mentions":{"user_ids":["@fbraun:mozilla.org"]},"msgtype":"m.text"},"ts":1712931710067,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$71xzZBwAVHQwt0z01jAC1CesQw49Uh7qRa5WhqLHK2Q"},
{"content":{"body":"<small>perhaps I don't get CSS specificity </small>","m.mentions":{},"msgtype":"m.text"},"ts":1712932134196,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$sGIgtx43AIj9922EfNyr9pRTVXeb4PTv5kXWoCxn9Rs"},
{"content":{"body":"It's not about specificity, it's cascade","m.mentions":{},"msgtype":"m.text"},"ts":1712932938415,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$FLIUiuzgBHdX6V1mqB_lMUwrT8h2E7JB2yH7ufF7yfE"},
{"content":{"body":"Maybe not even that, as I guess it's not really inherited","m.mentions":{},"msgtype":"m.text"},"ts":1712932973466,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Bz1jLEtDEFt5Ob0PrxcxmOAtrMbM9cILHk_f-_eebWg"},
{"content":{"body":"Yeah is just that display: none is not overridable on descendants ","msgtype":"m.text"},"ts":1712933343034,"senderName":"emilio","senderId":"@emilio:mozilla.org","id":"$p5u_6HMK7ZFEE0gHE2IoBnR18S3_Vqhz-yzATMEcjX8"},
{"content":{"body":"Yup, nothing about popover is special here. `display: none` on a container prevents the container and all of its contents from generating boxes *at all*, with no override possible on the descendants. (After all, what would that mean?)","format":"org.matrix.custom.html","formatted_body":"Yup, nothing about popover is special here. <code>display: none</code> on a container prevents the container and all of its contents from generating boxes <em>at all</em>, with no override possible on the descendants. (After all, what would that mean?)","m.mentions":{},"msgtype":"m.text"},"ts":1712948518413,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$dvgx2jkd71QOvmWnNaOw4VHwuk7QTbLMX74LgeWuCd0"},
{"content":{"body":"> <@smaug:mozilla.org> Dominic Farolino: actually, I don't know how the insertion step model works in case of mutations. Say, you have an element and it has 3 child elements.  That subtree root element is inserted to document tree. Now child 1  has insertion steps which run some script which removes the child and adds it to be the last of the child nodes. So child list is now 2, 3, 1.  Do the insertion steps get run on 1 again, because it is now after 2 and 3?\n\nI'm just seeing this now because this website was unloaded in my Chrome and the freaking favicon didn't give me updates that I had a ping, sorry!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$aCvJY_JdVGJw0wAd2xXRADa5IP0hJAWil9Gha5-63cQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br><a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: actually, I don't know how the insertion step model works in case of mutations. Say, you have an element and it has 3 child elements.  That subtree root element is inserted to document tree. Now child 1  has insertion steps which run some script which removes the child and adds it to be the last of the child nodes. So child list is now 2, 3, 1.  Do the insertion steps get run on 1 again, because it is now after 2 and 3?</blockquote></mx-reply>I'm just seeing this now because this website was unloaded in my Chrome and the freaking favicon didn't give me updates that I had a ping, sorry!","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aCvJY_JdVGJw0wAd2xXRADa5IP0hJAWil9Gha5-63cQ"}},"msgtype":"m.text"},"ts":1712956777950,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$RghYmZb-vRCBXBB3uLJzCWa1TZVcRvS-qVLBcqnQIGk"},
{"content":{"body":"> Now child 1 has insertion steps which run some script\n\nDo you mean post-insertion steps?","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Now child 1 has insertion steps which run some script</p>\n</blockquote>\n<p>Do you mean post-insertion steps?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1712956802716,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$t3VkSoc2Yjgo5shVIlfQpVzh1HTwrOPPv_nwkRZutno"},
{"content":{"body":"> Do the insertion steps get run on 1 again, because it is now after 2 and 3?\n\nYes they do, and the PR answers this.\n\nI'll assume every instance of \"insertion step\" in your message is \"post-insertion step\". With that edit, here's what happens:\n\n1. Insertion steps would run for the root, and its three children, in tree order, never running script.\n2. Post-insertion steps would run for the root, and its three children, in the same order.\n3. Say the first child is an about:blank iframe with an `onload` handler. This handler is synchronously invoked (for child 1) during its post-insertion steps (that's how iframes work; the initial about:blank iframe fires load syncly).\n4. The event handler removes the iframe from the DOM, and re-inserts it after its siblings.\n5. This re-enters the DOM insertion algorithm, which synchronously re-enters its post-insertion steps, and re-invokes the `onload` event for the same iframe element. This runs the event handler re-entrantly.\n\nPlease see https://gist.github.com/domfarolino/83b1a436c5ad4fc68b04aa0092985f58 and run this in the console in Chrome (Firefox does not synchronously fire `onload` for about:blank iframes IIRC).\n\nNote that post-insertion steps do not intend to solve re-entrant event handlers by forcing their order to be broken or anything. They _only_ ensure that by the time script runs in them, the batch of relevant DOM mutations (associated with the insertion) are all complete.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Do the insertion steps get run on 1 again, because it is now after 2 and 3?</p>\n</blockquote>\n<p>Yes they do, and the PR answers this.</p>\n<p>I'll assume every instance of \"insertion step\" in your message is \"post-insertion step\". With that edit, here's what happens:</p>\n<ol>\n<li>Insertion steps would run for the root, and its three children, in tree order, never running script.</li>\n<li>Post-insertion steps would run for the root, and its three children, in the same order.</li>\n<li>Say the first child is an about:blank iframe with an <code>onload</code> handler. This handler is synchronously invoked (for child 1) during its post-insertion steps (that's how iframes work; the initial about:blank iframe fires load syncly).</li>\n<li>The event handler removes the iframe from the DOM, and re-inserts it after its siblings.</li>\n<li>This re-enters the DOM insertion algorithm, which synchronously re-enters its post-insertion steps, and re-invokes the <code>onload</code> event for the same iframe element. This runs the event handler re-entrantly.</li>\n</ol>\n<p>Please see https://gist.github.com/domfarolino/83b1a436c5ad4fc68b04aa0092985f58 and run this in the console in Chrome (Firefox does not synchronously fire <code>onload</code> for about:blank iframes IIRC).</p>\n<p>Note that post-insertion steps do not intend to solve re-entrant event handlers by forcing their order to be broken or anything. They <em>only</em> ensure that by the time script runs in them, the batch of relevant DOM mutations (associated with the insertion) are all complete.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1712958398254,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$ckl-o1ZGyCrqyJyoBSW9eIcRw9A7gfwzxTxtGQzkUq4"},
{"content":{"body":"smaug for above","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> for above","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1712958422231,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$qCw7Jup27EXQkUNhK7l0J57QZ0xsdORWBl4WZlNQ03A"},
{"content":{"body":"2 is unclear","m.mentions":{},"msgtype":"m.text"},"ts":1712958585530,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$6SZhfqd44pnC7bTW5Ec9l2YtjehL95UgcetfmUdO4fM"},
{"content":{"body":"why it iterates them in 1, 2, 3 and not 1, 2, 3, 1 ?","m.mentions":{},"msgtype":"m.text"},"ts":1712958626547,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$JARNBCgZIHaO81NnfEWsCvnUaOxbYP6e4-8Ho97K268"},
{"content":{"body":"(Note, script runners don't have this issue, since the post-insertion steps is just a queue )","m.mentions":{},"msgtype":"m.text"},"ts":1712958704744,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$xuwudIC5MlNBtlZKktRuP0dG-VrJ6rpcIEgMPQXMV94"},
{"content":{"body":" * why it iterates them in 1, 2, 3 and not 1, 2, 3, 1 ? (since step (3) moves 1 to be after 3)","m.mentions":{},"m.new_content":{"body":"why it iterates them in 1, 2, 3 and not 1, 2, 3, 1 ? (since step (3) moves 1 to be after 3)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$JARNBCgZIHaO81NnfEWsCvnUaOxbYP6e4-8Ho97K268","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712958780201,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$ZlN21cf0BsdjBI8layW58evDUxpW2LFuWuQQ-Fjk3Cg"},
{"content":{"body":"In other words, how does the PR ensures that post-insertion steps aren't run 3 times for the child element, which is inserted to document only twice? ","m.mentions":{},"msgtype":"m.text"},"ts":1712958874617,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$smDQH2LAuxClX68xiS9tcYXU5lTbzbw3xIpP6EZhqcc"},
{"content":{"body":"(Script runners avoid this issue by queuing the post-insertion operations)","m.mentions":{},"msgtype":"m.text"},"ts":1712958927655,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$YMyPmFeO_LJEKkakGHLTHEbG-t9wxRd_Ttbh9QzqSQE"},
{"content":{"body":" * step (2) is unclear","m.mentions":{},"m.new_content":{"body":"step (2) is unclear","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6SZhfqd44pnC7bTW5Ec9l2YtjehL95UgcetfmUdO4fM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712959191762,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$PX2htJolOEdGixXbAQiOltk9rHsLn48c2B94U9oNcag"},
{"content":{"body":"Isn't the PR missing https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/container_node.cc;l=430?q=container_node.cc ","m.mentions":{},"msgtype":"m.text"},"ts":1712960251965,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$RDQu8qjXwh9LoNR_Nwpg7jHzs86PlF60HStuV1FUk4k"},
{"content":{"body":"and https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/container_node.cc;l=363;drc=0ebe2cf9f3f6544ba582473c5b9b8e3506f29708?q=container_node.cc","m.mentions":{},"msgtype":"m.text"},"ts":1712960342824,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$AK8DLT9QvmrQ08zrcXJWinuszQfSzd2jEqVCD1COcXU"},
{"content":{"body":"(seems complicated and less flexible vs script runners)","m.mentions":{},"msgtype":"m.text"},"ts":1712960377748,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$NXDSfRb2EYIwvz3Onod8YwqEogWG3t9dxcjpc0F3W8M"}
]