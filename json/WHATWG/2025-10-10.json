[
{"content":{"body":"The second-most-recent commit in HTML main, added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"The second-most-recent commit in HTML main, added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"msgtype":"m.text"},"ts":1760057005083,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8"},
{"content":{"body":"* The second-most-recent commit in HTML main added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"* The second-most-recent commit in HTML main added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"m.new_content":{"body":"The second-most-recent commit in HTML main added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"The second-most-recent commit in HTML main added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760057019964,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$QxYAI4PvcPkd-tDJ22GmhFozOynT0y7jo9Y203yjsdY"},
{"content":{"body":"^ @jarhar ?","m.mentions":{},"msgtype":"m.text"},"ts":1760057124448,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$8Y-y6ecHSvYKvHDKPdF0LGl0lKrQPdVCFo17302sSHw"},
{"content":{"body":"nicolo-ribaudo: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent `style type=module` element as `data:` URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent <code>style type=module</code> element as <code>data:</code> URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1760078282984,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0"},
{"content":{"body":"jarhar see jmdyck's comment above ^^ ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a> see jmdyck's comment above ^^","m.mentions":{"user_ids":["@jarhar:matrix.org"]},"msgtype":"m.text"},"ts":1760078526477,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ho2XkxLhR7rheggwaB_7XP_WZMDxAIqRLt1S412GWQs"},
{"content":{"body":"zaggy1024: I would file an issue. The processing model for media elements leaves a lot to be desired in general.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zaggy1024:matrix.org\">zaggy1024</a>: I would file an issue. The processing model for media elements leaves a lot to be desired in general.","m.mentions":{"user_ids":["@zaggy1024:matrix.org"]},"msgtype":"m.text"},"ts":1760078797422,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ErJDld4Ao0gMP3jJh4nCFy5g5dVBXfPJiOnmvDYIGAI"},
{"content":{"body":"> <@annevk:matrix.org> nicolo-ribaudo: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent `style type=module` element as `data:` URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.\n\nMaybe it could use a UUID like for blob URLs","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent <code>style type=module</code> element as <code>data:</code> URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.</blockquote></mx-reply>Maybe it could use a UUID like for blob URLs","m.relates_to":{"m.in_reply_to":{"event_id":"$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0"}},"msgtype":"m.text"},"ts":1760079522186,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$EPKfOnlh0bxV43EsB3Ja7gSSCl9BGQzzkPV1jPvBO8I"},
{"content":{"body":"Yeah, it would have to be something like that. Or we allow for the module map to contain element references or some such. Either way it will be more involved to define, but should be doable.","m.mentions":{},"msgtype":"m.text"},"ts":1760079628172,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$3Mt-1k_7NWlEVV8jLNUozoyCe3VXqlYTQ2zAiBDXup4"},
{"content":{"body":"I wonder if people will use HTML patching to workaround limitations imposed by insertion modes. E.g., it would allow giving a `tr` element a custom element child. It'd be very cumbersome to write, possibly more cumbersome than writing the equivalent script, but it would be possible.","format":"org.matrix.custom.html","formatted_body":"I wonder if people will use HTML patching to workaround limitations imposed by insertion modes. E.g., it would allow giving a <code>tr</code> element a custom element child. It'd be very cumbersome to write, possibly more cumbersome than writing the equivalent script, but it would be possible.","m.mentions":{},"msgtype":"m.text"},"ts":1760093633809,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$JuCJ6Aqi5jrq9WOuk3wl6CZMVuqoD7gMM2OeytQA62k"},
{"content":{"body":"We could probably disable that option if it's important. When we open the template we know where the content is going to, and there is a finite number of insertion modes","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$JuCJ6Aqi5jrq9WOuk3wl6CZMVuqoD7gMM2OeytQA62k"}},"msgtype":"m.text"},"ts":1760094072475,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$O6znxCyGWZL6b3xXJ_LfgWvK4Rc1uoA1BP6AWEGxsXI"},
{"content":{"body":"I think making the `template` element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)","format":"org.matrix.custom.html","formatted_body":"I think making the <code>template</code> element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)","m.mentions":{},"msgtype":"m.text"},"ts":1760094255139,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$DrhGgi0A9bkL3fRFjWjocnLQmKpJxYgYgzodrcEgPcI"}
]