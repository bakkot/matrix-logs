[
{"content":{"body":"The second-most-recent commit in HTML main, added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"The second-most-recent commit in HTML main, added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"msgtype":"m.text"},"ts":1760057005083,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8"},
{"content":{"body":"* The second-most-recent commit in HTML main added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"* The second-most-recent commit in HTML main added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"m.new_content":{"body":"The second-most-recent commit in HTML main added a reference to undefined _insertedOption_ in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just _option_?","format":"org.matrix.custom.html","formatted_body":"The second-most-recent commit in HTML main added a reference to undefined <em>insertedOption</em> in https://html.spec.whatwg.org/#concept-option-disabled. I guess it's supposed to be just <em>option</em>?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760057019964,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$QxYAI4PvcPkd-tDJ22GmhFozOynT0y7jo9Y203yjsdY"},
{"content":{"body":"^ @jarhar ?","m.mentions":{},"msgtype":"m.text"},"ts":1760057124448,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$8Y-y6ecHSvYKvHDKPdF0LGl0lKrQPdVCFo17302sSHw"},
{"content":{"body":"nicolo-ribaudo: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent `style type=module` element as `data:` URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent <code>style type=module</code> element as <code>data:</code> URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1760078282984,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0"},
{"content":{"body":"jarhar see jmdyck's comment above ^^ ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a> see jmdyck's comment above ^^","m.mentions":{"user_ids":["@jarhar:matrix.org"]},"msgtype":"m.text"},"ts":1760078526477,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Ho2XkxLhR7rheggwaB_7XP_WZMDxAIqRLt1S412GWQs"},
{"content":{"body":"zaggy1024: I would file an issue. The processing model for media elements leaves a lot to be desired in general.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zaggy1024:matrix.org\">zaggy1024</a>: I would file an issue. The processing model for media elements leaves a lot to be desired in general.","m.mentions":{"user_ids":["@zaggy1024:matrix.org"]},"msgtype":"m.text"},"ts":1760078797422,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$ErJDld4Ao0gMP3jJh4nCFy5g5dVBXfPJiOnmvDYIGAI"},
{"content":{"body":"> <@annevk:matrix.org> nicolo-ribaudo: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent `style type=module` element as `data:` URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.\n\nMaybe it could use a UUID like for blob URLs","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br /><a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: thank you, that makes a lot of sense! There's a proposal for declarative CSS modules and the proposal is currently to represent <code>style type=module</code> element as <code>data:</code> URLs in the module map. But that requiring that representation (due to it being observable) seems highly inefficient for implementations.</blockquote></mx-reply>Maybe it could use a UUID like for blob URLs","m.relates_to":{"m.in_reply_to":{"event_id":"$SHC5qS3NztTT6FhADgRXwduzabRgeBHWeucCgM0pbJ0"}},"msgtype":"m.text"},"ts":1760079522186,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$EPKfOnlh0bxV43EsB3Ja7gSSCl9BGQzzkPV1jPvBO8I"},
{"content":{"body":"Yeah, it would have to be something like that. Or we allow for the module map to contain element references or some such. Either way it will be more involved to define, but should be doable.","m.mentions":{},"msgtype":"m.text"},"ts":1760079628172,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$3Mt-1k_7NWlEVV8jLNUozoyCe3VXqlYTQ2zAiBDXup4"},
{"content":{"body":"I wonder if people will use HTML patching to workaround limitations imposed by insertion modes. E.g., it would allow giving a `tr` element a custom element child. It'd be very cumbersome to write, possibly more cumbersome than writing the equivalent script, but it would be possible.","format":"org.matrix.custom.html","formatted_body":"I wonder if people will use HTML patching to workaround limitations imposed by insertion modes. E.g., it would allow giving a <code>tr</code> element a custom element child. It'd be very cumbersome to write, possibly more cumbersome than writing the equivalent script, but it would be possible.","m.mentions":{},"msgtype":"m.text"},"ts":1760093633809,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$JuCJ6Aqi5jrq9WOuk3wl6CZMVuqoD7gMM2OeytQA62k"},
{"content":{"body":"We could probably disable that option if it's important. When we open the template we know where the content is going to, and there is a finite number of insertion modes","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$JuCJ6Aqi5jrq9WOuk3wl6CZMVuqoD7gMM2OeytQA62k"}},"msgtype":"m.text"},"ts":1760094072475,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$O6znxCyGWZL6b3xXJ_LfgWvK4Rc1uoA1BP6AWEGxsXI"},
{"content":{"body":"I think making the `template` element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)","format":"org.matrix.custom.html","formatted_body":"I think making the <code>template</code> element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)","m.mentions":{},"msgtype":"m.text"},"ts":1760094255139,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$DrhGgi0A9bkL3fRFjWjocnLQmKpJxYgYgzodrcEgPcI"},
{"content":{"body":"Maybe... though it's only for `template` with `contentfor`. At least in the blink prototype so far this is pretty well contained within \"patching\"","format":"org.matrix.custom.html","formatted_body":"Maybe... though it's only for <code>template</code> with <code>contentfor</code>. At least in the blink prototype so far this is pretty well contained within \"patching\"","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$DrhGgi0A9bkL3fRFjWjocnLQmKpJxYgYgzodrcEgPcI"}},"msgtype":"m.text"},"ts":1760094407311,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$0r45DoCSSNyPPaAFTAnOHTs9djhQU1XMlX2gF9MjnB0"},
{"content":{"body":"Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the parser if it reaches a `<template contentfor>`. We could apply this kind of behavior in all of those special cases","format":"org.matrix.custom.html","formatted_body":"Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the parser if it reaches a <code>&lt;template contentfor&gt;</code>. We could apply this kind of behavior in all of those special cases","m.mentions":{},"msgtype":"m.text"},"ts":1760094448437,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$HeAWVlyOVxWthyRIPdPNO0KYrTi9uwSSEd-i7i-ixSc"},
{"content":{"body":"* Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the patch if it reaches a `<template contentfor>` when popping. We could apply this kind of behavior in all of those special cases and in general stop patching in certain scenarios","format":"org.matrix.custom.html","formatted_body":"* Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the patch if it reaches a <code>&lt;template contentfor&gt;</code> when popping. We could apply this kind of behavior in all of those special cases and in general stop patching in certain scenarios","m.mentions":{},"m.new_content":{"body":"Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the patch if it reaches a `<template contentfor>` when popping. We could apply this kind of behavior in all of those special cases and in general stop patching in certain scenarios","format":"org.matrix.custom.html","formatted_body":"Specifically, we could make it so that https://html.spec.whatwg.org/multipage/parsing.html#clear-the-stack-back-to-a-table-context fails the patch if it reaches a <code>&lt;template contentfor&gt;</code> when popping. We could apply this kind of behavior in all of those special cases and in general stop patching in certain scenarios","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$HeAWVlyOVxWthyRIPdPNO0KYrTi9uwSSEd-i7i-ixSc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760094527400,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$MRxZZ5gf9p-ROzcCJDTDKrP309725fL9DoUFZ0a8ak8"},
{"content":{"body":"One of the main advantages for using `<template>` is that the default behavior in browsers that don't support patching is a noop and that it's already set up to be a container for any other content (pretty much). Also it's in the spirit of the element, something that holds HTML content that's supposed to be used elsewhere.","format":"org.matrix.custom.html","formatted_body":"One of the main advantages for using <code>&lt;template&gt;</code> is that the default behavior in browsers that don't support patching is a noop and that it's already set up to be a container for any other content (pretty much). Also it's in the spirit of the element, something that holds HTML content that's supposed to be used elsewhere.","m.mentions":{},"msgtype":"m.text"},"ts":1760094640053,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$nP3TqwSA70lsRBBffxc_h398pzEDyiJa1uy8opxpJIs"},
{"content":{"body":"It does raise a question as to what the API ends up doing for these cases.","m.mentions":{},"msgtype":"m.text"},"ts":1760094834948,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$6s62iISRqjr98SsyjTE5ndD4yPbTP5Nm-epEJDxwoOc"},
{"content":{"body":"I think that if you see this:\n\n<table>\n<tr contentname=\"some-tr\">\n</table>\n\n<template contentfor=\"some-tr\">\n  <td>new-content</td>\n  <tr><td>Another row</td></tr>\n</template>\n\nyou should end up with:\n\n<tr contentname=\"some-tr\"><td>new-content</td></tr>\n<template contentfor=\"some-tr\">  \n  <tr><td>Another row</td></tr>\n</template>\n\n","m.mentions":{},"msgtype":"m.text"},"ts":1760094955811,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$mh1KOsxLV3PnWEo0G_jDoPdzwmy58WdAHFtynIVZig8"},
{"content":{"body":"(the moment something fishy comes up parser-wise, patching terminates and the rest proceeds as a normal template)","m.mentions":{},"msgtype":"m.text"},"ts":1760095001286,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$JYglueOGkH4RDRVfVjAJsIh1oO8F4xfWly4p7fC0iHs"},
{"content":{"body":"* I think that if you see this:\n\n\\<table>\n\\<tr contentname=\"some-tr\">\n\\</table>\n\n\\<template contentfor=\"some-tr\">\n  \\<td>new-content\\</td>\n  \\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\nyou should end up with:\n\n\\<table><tr contentname=\"some-tr\">\\<td>new-content\\</td>\\</tr></table>\n\\<template contentfor=\"some-tr\">  \n  \\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\n","format":"org.matrix.custom.html","formatted_body":"* I think that if you see this:\n\n&lt;table&gt;\n&lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;&lt;br /&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;","m.mentions":{},"m.new_content":{"body":"I think that if you see this:\n\n\\<table>\n\\<tr contentname=\"some-tr\">\n\\</table>\n\n\\<template contentfor=\"some-tr\">\n  \\<td>new-content\\</td>\n  \\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\nyou should end up with:\n\n\\<table><tr contentname=\"some-tr\">\\<td>new-content\\</td>\\</tr></table>\n\\<template contentfor=\"some-tr\">  \n  \\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\n","format":"org.matrix.custom.html","formatted_body":"I think that if you see this:\n\n&lt;table&gt;\n&lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;&lt;br /&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mh1KOsxLV3PnWEo0G_jDoPdzwmy58WdAHFtynIVZig8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760095037857,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uscQuRVJrnIdnQivzAlJ4WlmQOfbSr8QkauPCG6Z-vg"},
{"content":{"body":"* I think that if you see this:\n\n<table>\n  <tr contentname=\"some-tr\">\n</table>\n\n\\<template contentfor=\"some-tr\">\n\\<td>new-content\\</td>\n\\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\nyou should end up with:\n\n\\<table>\\<tr contentname=\"some-tr\">\\<td>new-content\\</td>\\</tr>\\</table>\n\\<template contentfor=\"some-tr\">\\<br />\n\\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>","format":"org.matrix.custom.html","formatted_body":"* I think that if you see this:\n\n&lt;table&gt;\n  &lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;&lt;br /&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;","m.mentions":{},"m.new_content":{"body":"I think that if you see this:\n\n<table>\n  <tr contentname=\"some-tr\">\n</table>\n\n\\<template contentfor=\"some-tr\">\n\\<td>new-content\\</td>\n\\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>\n\nyou should end up with:\n\n\\<table>\\<tr contentname=\"some-tr\">\\<td>new-content\\</td>\\</tr>\\</table>\n\\<template contentfor=\"some-tr\">\\<br />\n\\<tr>\\<td>Another row\\</td>\\</tr>\n\\</template>","format":"org.matrix.custom.html","formatted_body":"I think that if you see this:\n\n&lt;table&gt;\n  &lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;&lt;br /&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mh1KOsxLV3PnWEo0G_jDoPdzwmy58WdAHFtynIVZig8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760095050394,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$w2suEE0qNMC1OQGC5U9OStYg05Uourr4QP8FdP9A8qo"},
{"content":{"body":"* I think that if you see this:\n\n<table>\n  <tr contentname=\"some-tr\">\n</table>\n\n<template contentfor=\"some-tr\">\n<td>new-content</td>\n<tr><td>Another row</td></tr>\n</template>\n\nyou should end up with:\n\n<table><tr contentname=\"some-tr\"><td>new-content</td></tr></table>\n<template contentfor=\"some-tr\">\n<tr><td>Another row</td>\\/tr>\n</template>","format":"org.matrix.custom.html","formatted_body":"* I think that if you see this:\n\n&lt;table&gt;\n  &lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;\\/tr&gt;\n&lt;/template&gt;","m.mentions":{},"m.new_content":{"body":"I think that if you see this:\n\n<table>\n  <tr contentname=\"some-tr\">\n</table>\n\n<template contentfor=\"some-tr\">\n<td>new-content</td>\n<tr><td>Another row</td></tr>\n</template>\n\nyou should end up with:\n\n<table><tr contentname=\"some-tr\"><td>new-content</td></tr></table>\n<template contentfor=\"some-tr\">\n<tr><td>Another row</td>\\/tr>\n</template>","format":"org.matrix.custom.html","formatted_body":"I think that if you see this:\n\n&lt;table&gt;\n  &lt;tr contentname=&quot;some-tr&quot;&gt;\n&lt;/table&gt;\n\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;td&gt;new-content&lt;/td&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;&lt;/tr&gt;\n&lt;/template&gt;\n\nyou should end up with:\n\n&lt;table&gt;&lt;tr contentname=&quot;some-tr&quot;&gt;&lt;td&gt;new-content&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n&lt;template contentfor=&quot;some-tr&quot;&gt;\n&lt;tr&gt;&lt;td&gt;Another row&lt;/td&gt;\\/tr&gt;\n&lt;/template&gt;","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mh1KOsxLV3PnWEo0G_jDoPdzwmy58WdAHFtynIVZig8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760095096203,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$N7XHtR2DFHGQmj_Ii7e1IjiXuepcqqZBEaqP9DWtJJE"},
{"content":{"body":"(sorry element is botching my markup)","m.mentions":{},"msgtype":"m.text"},"ts":1760095108350,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$CzajwixhttlmMm-35OzOwOvF6sA18iY1hPZRPB9Dm_s"},
{"content":{"body":"That would be very different from how `template` works today. Today the `tr` start tag would be ignored.","format":"org.matrix.custom.html","formatted_body":"That would be very different from how <code>template</code> works today. Today the <code>tr</code> start tag would be ignored.","m.mentions":{},"msgtype":"m.text"},"ts":1760095129079,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wsvDCePMwoH1V5b2uX52cCLlCIvkgyat5upUjwpdY2o"},
{"content":{"body":"That's also an option, perhaps better","m.mentions":{},"msgtype":"m.text"},"ts":1760095160486,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$fgbSv_Gxnck7e6D3mKm_FWpTlAGVSgp4qnmriJghzCU"},
{"content":{"body":"Sorry slightly tangential but should the attribute be contentid instead of contentname, other for attributes work with IDs so it might feel wrong that is for a name?","msgtype":"m.text"},"ts":1760095280511,"senderName":"Luke Warlow (ooo till 20th)","senderId":"@lwarlow:igalia.com","id":"$kkdCk42pMs300Xq0-rqQkZodT8SkNsrPiJHMDlFZqRs"},
{"content":{"body":"but yea, `<template contentfor>` parses differently than template because it uses the target as a context node of sorts. ","format":"org.matrix.custom.html","formatted_body":"but yea, <code>&lt;template contentfor&gt;</code> parses differently than template because it uses the target as a context node of sorts.","m.mentions":{},"msgtype":"m.text"},"ts":1760095286613,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$63vjKnsQWcH6U6hSWPrqIDnYNSW5peBtHQZeiG31Drg"},
{"content":{"body":"It's more similar to form elements etc where it's not necessarily unique. But we can bikeshed it","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$kkdCk42pMs300Xq0-rqQkZodT8SkNsrPiJHMDlFZqRs"}},"msgtype":"m.text"},"ts":1760095359151,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$unxFIBh1JConexP-9KJzEHQCpElZthXUmenC5W64qCU"},
{"content":{"body":"> <@annevk:matrix.org> I think making the `template` element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)\n\nMathml would also need solving, the cross namespace stuff might get particularly awkward?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$DrhGgi0A9bkL3fRFjWjocnLQmKpJxYgYgzodrcEgPcI?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br />I think making the <code>template</code> element even more complex parsing-wise would be something we will regret. (Although maybe we have to do it at some point for SVG.)</blockquote></mx-reply>Mathml would also need solving, the cross namespace stuff might get particularly awkward?","m.relates_to":{"m.in_reply_to":{"event_id":"$DrhGgi0A9bkL3fRFjWjocnLQmKpJxYgYgzodrcEgPcI"}},"msgtype":"m.text"},"ts":1760095361761,"senderName":"Luke Warlow (ooo till 20th)","senderId":"@lwarlow:igalia.com","id":"$092JKOSOu6gg12pCCV5MAX0gbZ9gc-ksWHv3Z_ele1g"},
{"content":{"body":"annevk: a solution we thought about at some point is to force having a tag name identical to the target element at the beginning of the template to set the context. This way there is even less of an exotic parsing mode. But it's also a bit less ergonomic","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: a solution we thought about at some point is to force having a tag name identical to the target element at the beginning of the template to set the context. This way there is even less of an exotic parsing mode. But it's also a bit less ergonomic","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1760095582015,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$t1iEuSd2ccgjEeAgf7t0u-AEwDAEVg9Se8a0xBTrjUo"},
{"content":{"body":"... this would also fix the \"patching into script\" issue","m.mentions":{},"msgtype":"m.text"},"ts":1760095664958,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xdsBNKgCUP4leOPMUrxp7BLklUOTzBbqHv9KTLyOfnc"},
{"content":{"body":"e.g.:\n\n<script contentname=myscript></script>\n\n<template contentfor=myscript>\n  <script>\n     console.log(\"This is the new content of myscript\");\n  </script>\n</template>\n\n","m.mentions":{},"msgtype":"m.text"},"ts":1760095757183,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$acQC3T9oZR0kSV2FJpcPLVAKeibIGTt1mdusbzd3PzA"},
{"content":{"body":"Or even have it so that the template only has \"contentmethod\" and everything else is in the direct children:\n\n<table><tr contentname=\"my-tr\"></table>\n<template contentmethod=\"replace-children\">\n  <tr contentname=my-tr>\n     <td>\n     <!-- the following would not go into \"my-tr\" as it would be parsed as being a direct child of the patch without contentname -->\n     <tr>\n  </script>\n</template>","m.mentions":{},"msgtype":"m.text"},"ts":1760097373716,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$OKemssc7Hxf1pHDhQs5GiHMssw-ajed4oL3N0K4rMb8"},
{"content":{"body":"* Or even have it so that the template only has \"contentmethod\" and everything else is in the direct children:\n\n<table><tr contentname=\"my-tr\"></table>\n<template contentmethod=\"replace-children\">\n  <tr contentname=my-tr>\n     <td>\n     <!-- the following would not go into \"my-tr\" as it would be parsed as being a direct child of the patch without contentname -->\n     <tr>\n</template>","m.mentions":{},"m.new_content":{"body":"Or even have it so that the template only has \"contentmethod\" and everything else is in the direct children:\n\n<table><tr contentname=\"my-tr\"></table>\n<template contentmethod=\"replace-children\">\n  <tr contentname=my-tr>\n     <td>\n     <!-- the following would not go into \"my-tr\" as it would be parsed as being a direct child of the patch without contentname -->\n     <tr>\n</template>","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$OKemssc7Hxf1pHDhQs5GiHMssw-ajed4oL3N0K4rMb8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760097397783,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$gDtEb2Kndxd-9ZmOorK5tSCU-78flrAyBX-HupYeEKw"},
{"content":{"body":"(Come to think of it, this is perhaps a better design... much less exotic changes to `template`, only the \"contentmethod\" attribute that diverts the insertion point)","format":"org.matrix.custom.html","formatted_body":"(Come to think of it, this is perhaps a better design... much less exotic changes to <code>template</code>, only the \"contentmethod\" attribute that diverts the insertion point)","m.mentions":{},"msgtype":"m.text"},"ts":1760097814021,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$tvt5zqjspZjmf7C2-QuJegPDKjK5ojyMydbGVSm1L9I"},
{"content":{"body":"Noam Rosenthal: yeah, that might be a better shape. Need to think about it a bit.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: yeah, that might be a better shape. Need to think about it a bit.","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760100273400,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$hz-hKjUEubhVMVyfZMHZE39QIdibMwEUamj_sREeF6k"},
{"content":{"body":"will do the same, thanks!","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$hz-hKjUEubhVMVyfZMHZE39QIdibMwEUamj_sREeF6k"}},"msgtype":"m.text"},"ts":1760100301596,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$bNlRbz7pxevd3Zv2jLIM_bGl_VWZKtX7b5KOtmIkcDI"},
{"content":{"body":"Noam Rosenthal: what do you mean with `contentname` not being unique btw? What happens if there's a duplicate?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: what do you mean with <code>contentname</code> not being unique btw? What happens if there's a duplicate?","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760100425181,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$_VlQdd0c2exHJNq7CDsjunRwLvaUrxO8ItG_Q8N1NCo"},
{"content":{"body":"It's not necessarily unique in the document. Since patching is scoped to the parent of the template, the first element in tree order within that scope would be selected","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$_VlQdd0c2exHJNq7CDsjunRwLvaUrxO8ItG_Q8N1NCo"}},"msgtype":"m.text"},"ts":1760100561122,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$XQPU-lf-nDxMU2CptIzOBhQE9jDVG7ZAlYXO9FftdY4"},
{"content":{"body":"Gotcha. Though is it tightly scoped or only for the initial search?","m.mentions":{},"msgtype":"m.text"},"ts":1760100609057,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2UqyTN1IWVg0aRb4ppq0FVIpi6rZr2cQ5hqPzJ6eENI"},
{"content":{"body":"It is searched once when the patch is discovered ","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$2UqyTN1IWVg0aRb4ppq0FVIpi6rZr2cQ5hqPzJ6eENI"}},"msgtype":"m.text"},"ts":1760100643947,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ex9bXYnCgtSBUjGvFFuVDNLpjL4Y9unmiyk60ziv9OI"},
{"content":{"body":"(which also makes it different from all the existing IDREFs)","m.mentions":{},"msgtype":"m.text"},"ts":1760100666994,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$JDKgywz0B8GYzdcLFdd-YQPbWTf_rIjrJGbZzD1cNys"},
{"content":{"body":"`<html><head contentname=blah><body><template><head contentname=blah>` would fail then?","format":"org.matrix.custom.html","formatted_body":"<code>&lt;html&gt;&lt;head contentname=blah&gt;&lt;body&gt;&lt;template&gt;&lt;head contentname=blah&gt;</code> would fail then?","m.mentions":{},"msgtype":"m.text"},"ts":1760100706875,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$e1TZzkECsvJGVUpOYQM2IV1cDYSUgdnzbwcEMDi8ojo"},
{"content":{"body":"patches inside the body are special-cased to be document-scoped","m.mentions":{},"msgtype":"m.text"},"ts":1760100988835,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ySx7FwYkg4TWSi_lxVsqXNZXLNVv0brGqfMWCihp9j8"},
{"content":{"body":"* patches that are direct children of the body are special-cased to be document-scoped","m.mentions":{},"m.new_content":{"body":"patches that are direct children of the body are special-cased to be document-scoped","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ySx7FwYkg4TWSi_lxVsqXNZXLNVv0brGqfMWCihp9j8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760101002448,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$2dYvLmwoBmAvsLrIRp3lDoqHpmA95dN_ZBraKfHCdL8"},
{"content":{"body":"We can also avoid both `contentname` and `contentid` and call it `contentoutlet`. ","format":"org.matrix.custom.html","formatted_body":"We can also avoid both <code>contentname</code> and <code>contentid</code> and call it <code>contentoutlet</code>.","m.mentions":{},"msgtype":"m.text"},"ts":1760101661863,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$MbBti6_MNN_9hXjpv2DYhyRRQA_TN_eAGQuCznL2COY"},
{"content":{"body":"`contentwendys` (sir this is the HTML standard)","format":"org.matrix.custom.html","formatted_body":"<code>contentwendys</code> (sir this is the HTML standard)","m.mentions":{},"msgtype":"m.text"},"ts":1760104324513,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$P-ERi0Q7kYbym6yEU0eeB4xQrUqsT4jeysUqZK0GDgY"},
{"content":{"body":"thanks! https://github.com/whatwg/html/pull/11772","m.mentions":{},"m.relates_to":{"event_id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8","is_falling_back":true,"m.in_reply_to":{"event_id":"$Pdm8CHr59Bq2pM94SmQVF4J16cP2qDh1xYmj742A_x8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1760106255779,"senderName":"jarhar","senderId":"@jarhar:matrix.org","id":"$3zNd52Ru-n88mkWF33Pi-xH3qVMS5s79hCvESwZatM8"}
]