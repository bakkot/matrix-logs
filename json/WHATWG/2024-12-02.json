[
{"content":{"body":"Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ as opposed to the IDL (for example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" as opposed to a DOM string [which the IDL says])?","format":"org.matrix.custom.html","formatted_body":"<p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> as opposed to the IDL (for example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" as opposed to a DOM string [which the IDL says])?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733099083976,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$8rfXH-AJmHB4IKj9mkY0x0lXgyIP_BTnfmCaXXGq68E"},
{"content":{"body":"Certainly I could parse https://github.com/whatwg/html/blob/main/source and while it's not \"hard\" it's a non-trivial task","m.mentions":{},"msgtype":"m.text"},"ts":1733099125368,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$UZWoRkympX1xr2HeC-9bOoru-gNWeghgXTroyZLEZrI"},
{"content":{"body":" * Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL (for example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" as opposed to a DOM string \\[which the IDL says\\])?","format":"org.matrix.custom.html","formatted_body":" * <p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL (for example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" as opposed to a DOM string [which the IDL says])?</p>\n","m.mentions":{},"m.new_content":{"body":"Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL (for example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" as opposed to a DOM string \\[which the IDL says\\])?","format":"org.matrix.custom.html","formatted_body":"<p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL (for example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" as opposed to a DOM string [which the IDL says])?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$8rfXH-AJmHB4IKj9mkY0x0lXgyIP_BTnfmCaXXGq68E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733099163816,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$ScQ2hNRiAcXe1LjOoDtc0jrhwYOtVILECd0L1OOeGVY"},
{"content":{"body":" * Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL (for example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to a DOM string \\[which the IDL says\\])?","format":"org.matrix.custom.html","formatted_body":" * <p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL (for example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to a DOM string [which the IDL says])?</p>\n","m.mentions":{},"m.new_content":{"body":"Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL (for example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to a DOM string \\[which the IDL says\\])?","format":"org.matrix.custom.html","formatted_body":"<p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL (for example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to a DOM string [which the IDL says])?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$8rfXH-AJmHB4IKj9mkY0x0lXgyIP_BTnfmCaXXGq68E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733099184060,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$39jab0t0vcFhpygAQnBoSsFyK2KoLes3F9iJxpY5mbw"},
{"content":{"body":"There are quite a few scattered efforts out there -- e.g. https://github.com/tawesoft/html5spec","m.mentions":{},"msgtype":"m.text"},"ts":1733099255046,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$E7acKthI5-r-wLW5lcl_Y_IfafZi4IWJ0UaiFb2TBT8"},
{"content":{"body":"Certainly I would imagine MDN does this to prepare their documentation -- but it's not immediately clear to me how or if they do that without studying their build process a lot more","m.mentions":{},"msgtype":"m.text"},"ts":1733099296298,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$yeJySWBGg3uemi_rCKSoNLnQONQG0I1-o_7u-ZkFp7w"},
{"content":{"body":" * Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL? \n\nFor example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to the IDL, which specifies a DOM String ","format":"org.matrix.custom.html","formatted_body":" * <p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL?</p>\n<p>For example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to the IDL, which specifies a DOM String</p>\n","m.mentions":{},"m.new_content":{"body":"Apologies if this is a common question -- I searched the FAQ but I don't _think_ I saw anything https://github.com/whatwg/html/blob/main/FAQ.md\n\nIs there a canonical representation of the HTML _spec_ **in a machine readable-format** like XML or JSON as opposed to the IDL? \n\nFor example, the spec would specify that the `type` on a `button` is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to the IDL, which specifies a DOM String ","format":"org.matrix.custom.html","formatted_body":"<p>Apologies if this is a common question -- I searched the FAQ but I don't <em>think</em> I saw anything https://github.com/whatwg/html/blob/main/FAQ.md</p>\n<p>Is there a canonical representation of the HTML <em>spec</em> <strong>in a machine readable-format</strong> like XML or JSON as opposed to the IDL?</p>\n<p>For example, the spec would specify that the <code>type</code> on a <code>button</code> is an \"enumerated attribute\" that can take \"button\" \"submit\", etc. as opposed to the IDL, which specifies a DOM String</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$8rfXH-AJmHB4IKj9mkY0x0lXgyIP_BTnfmCaXXGq68E","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733099362421,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$s6qK2RnGqx9hSllbUkgVV890EmY0j6rSWKGBc2KpLGE"},
{"content":{"body":"if you want to parse `source`, you'd be best off using or extending wattsi https://github.com/whatwg/wattsi","format":"org.matrix.custom.html","formatted_body":"if you want to parse <code>source</code>, you'd be best off using or extending wattsi https://github.com/whatwg/wattsi","m.mentions":{},"msgtype":"m.text"},"ts":1733100572692,"senderName":"akaster (OOO ðŸ¦ƒ)","senderId":"@akaster:serenityos.org","id":"$deTDadZSJxnRI-LZgnYbw8whB1mhPs-FqZKwJHaBx1A"},
{"content":{"body":"There is no such machine-readable format besides the source itself.","m.mentions":{},"msgtype":"m.text"},"ts":1733103241334,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7Q6GmBzpTxYF0LyXDOvBzp8B8D7HDixkBXYrbFv84KQ"},
{"content":{"body":">if you want to parse source, you'd be best off using or extending wattsi https://github.com/whatwg/wattsi\n\nThat makes sense. I had a look at I am impressed it is maintained and in Pascal. I agree that parsing wattsi sources (and potentially using wattsi itself) makes sense due to the useful `dfn`tag especially. For example in the case of `button`, it is helpful that `dfn` holds context for attributes:\n\n```\n  <table>\n   <thead>\n    <tr>\n     <th> Keyword\n     <th> State\n     <th> Brief description\n   <tbody>\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code\n     data-x=\"attr-button-type-submit\">submit</code></dfn>\n     <td><span data-x=\"attr-button-type-submit-state\">Submit Button</span>\n     <td>Submits the form.\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code data-x=\"attr-button-type-reset\">reset</code></dfn>\n     <td><span data-x=\"attr-button-type-reset-state\">Reset Button</span>\n     <td>Resets the form.\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code\n     data-x=\"attr-button-type-button\">button</code></dfn>\n     <td><span data-x=\"attr-button-type-button-state\">Button</span>\n     <td>Does nothing.\n  </table>\n  <table>\n   <thead>\n    <tr>\n     <th> Keyword\n     <th> State\n     <th> Brief description\n   <tbody>\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code\n     data-x=\"attr-button-type-submit\">submit</code></dfn>\n     <td><span data-x=\"attr-button-type-submit-state\">Submit Button</span>\n     <td>Submits the form.\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code data-x=\"attr-button-type-reset\">reset</code></dfn>\n     <td><span data-x=\"attr-button-type-reset-state\">Reset Button</span>\n     <td>Resets the form.\n    <tr>\n     <td><dfn attr-value for=\"button/type\"><code\n     data-x=\"attr-button-type-button\">button</code></dfn>\n     <td><span data-x=\"attr-button-type-button-state\">Button</span>\n     <td>Does nothing.\n  </table>\n```\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>if you want to parse source, you'd be best off using or extending wattsi https://github.com/whatwg/wattsi</p>\n</blockquote>\n<p>That makes sense. I had a look at I am impressed it is maintained and in Pascal. I agree that parsing wattsi sources (and potentially using wattsi itself) makes sense due to the useful <code>dfn</code>tag especially. For example in the case of <code>button</code>, it is helpful that <code>dfn</code> holds context for attributes:</p>\n<pre><code>  &lt;table&gt;\n   &lt;thead&gt;\n    &lt;tr&gt;\n     &lt;th&gt; Keyword\n     &lt;th&gt; State\n     &lt;th&gt; Brief description\n   &lt;tbody&gt;\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code\n     data-x=\"attr-button-type-submit\"&gt;submit&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-submit-state\"&gt;Submit Button&lt;/span&gt;\n     &lt;td&gt;Submits the form.\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code data-x=\"attr-button-type-reset\"&gt;reset&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-reset-state\"&gt;Reset Button&lt;/span&gt;\n     &lt;td&gt;Resets the form.\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code\n     data-x=\"attr-button-type-button\"&gt;button&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-button-state\"&gt;Button&lt;/span&gt;\n     &lt;td&gt;Does nothing.\n  &lt;/table&gt;\n  &lt;table&gt;\n   &lt;thead&gt;\n    &lt;tr&gt;\n     &lt;th&gt; Keyword\n     &lt;th&gt; State\n     &lt;th&gt; Brief description\n   &lt;tbody&gt;\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code\n     data-x=\"attr-button-type-submit\"&gt;submit&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-submit-state\"&gt;Submit Button&lt;/span&gt;\n     &lt;td&gt;Submits the form.\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code data-x=\"attr-button-type-reset\"&gt;reset&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-reset-state\"&gt;Reset Button&lt;/span&gt;\n     &lt;td&gt;Resets the form.\n    &lt;tr&gt;\n     &lt;td&gt;&lt;dfn attr-value for=\"button/type\"&gt;&lt;code\n     data-x=\"attr-button-type-button\"&gt;button&lt;/code&gt;&lt;/dfn&gt;\n     &lt;td&gt;&lt;span data-x=\"attr-button-type-button-state\"&gt;Button&lt;/span&gt;\n     &lt;td&gt;Does nothing.\n  &lt;/table&gt;\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1733106870205,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$nKi8E_6HPQk_xV9kIKXWp2UHaIc60Kako_rMqqzdqZY"},
{"content":{"body":"Although I don't have a specific suggestion in mind, are maintainers of `wattsi` open to contributions that would _extendi_ the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","format":"org.matrix.custom.html","formatted_body":"Although I don't have a specific suggestion in mind, are maintainers of <code>wattsi</code> open to contributions that would <em>extendi</em> the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","m.mentions":{},"msgtype":"m.text"},"ts":1733107014325,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$Fk_rDRC_sN62dVBg_8qSm9CiOubZdSR5BQVQdclT3KU"},
{"content":{"body":" * Although I don't have a specific suggestion in mind, are maintainers of `wattsi` open to contributions that would _extend_ the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","format":"org.matrix.custom.html","formatted_body":" * Although I don't have a specific suggestion in mind, are maintainers of <code>wattsi</code> open to contributions that would <em>extend</em> the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","m.mentions":{},"m.new_content":{"body":"Although I don't have a specific suggestion in mind, are maintainers of `wattsi` open to contributions that would _extend_ the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","format":"org.matrix.custom.html","formatted_body":"Although I don't have a specific suggestion in mind, are maintainers of <code>wattsi</code> open to contributions that would <em>extend</em> the language at all? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Fk_rDRC_sN62dVBg_8qSm9CiOubZdSR5BQVQdclT3KU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107022290,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$GjLy36HMedSVm16q2qh-LyuWpvrtIz-DyMZB5IceEdI"},
{"content":{"body":" * Although I don't have a specific suggestion in mind, are maintainers of `wattsi` open to contributions that would _extend_ the language? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","format":"org.matrix.custom.html","formatted_body":" * Although I don't have a specific suggestion in mind, are maintainers of <code>wattsi</code> open to contributions that would <em>extend</em> the language? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","m.mentions":{},"m.new_content":{"body":"Although I don't have a specific suggestion in mind, are maintainers of `wattsi` open to contributions that would _extend_ the language? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","format":"org.matrix.custom.html","formatted_body":"Although I don't have a specific suggestion in mind, are maintainers of <code>wattsi</code> open to contributions that would <em>extend</em> the language? I don't have anything specific in mind at the moment, but something that could potentially help the robustness of such a parser for subsequent updates to the standard.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Fk_rDRC_sN62dVBg_8qSm9CiOubZdSR5BQVQdclT3KU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107028680,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$HJ8ljuLB_L8rMQwBRjbB_YlmDPncqbPV8n4XuQIpHXU"},
{"content":{"body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within `wattsi` sources, yet could reduce boilerplate.","format":"org.matrix.custom.html","formatted_body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within <code>wattsi</code> sources, yet could reduce boilerplate.","m.mentions":{},"msgtype":"m.text"},"ts":1733107350915,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$SA00IJJRgeQRWMfblqB4uT6tK7-eRohI-K4AsN3Zsd8"},
{"content":{"body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within `wattsi` sources, yet could reduce boilerplate and enhance parseability.","format":"org.matrix.custom.html","formatted_body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within <code>wattsi</code> sources, yet could reduce boilerplate and enhance parseability.","m.mentions":{},"m.new_content":{"body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within `wattsi` sources, yet could reduce boilerplate and enhance parseability.","format":"org.matrix.custom.html","formatted_body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within <code>wattsi</code> sources, yet could reduce boilerplate and enhance parseability.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SA00IJJRgeQRWMfblqB4uT6tK7-eRohI-K4AsN3Zsd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107405191,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$MVFfuKwd73SaR_4HBAMwd6hO5-R_7mf_-JnTq-3XgNg"},
{"content":{"body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within `wattsi` sources, yet could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within <code>wattsi</code> sources, yet could reduce boilerplate while enhancing parseability.","m.mentions":{},"m.new_content":{"body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within `wattsi` sources, yet could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":"For example, I could envision a collection of tags that could be used to articulate each dom element, would retain searchability within <code>wattsi</code> sources, yet could reduce boilerplate while enhancing parseability.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SA00IJJRgeQRWMfblqB4uT6tK7-eRohI-K4AsN3Zsd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107412897,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$V8zWstzn1uqJ2dekny5yewZaYmUMe0Wd3qCWpWOEnkk"},
{"content":{"body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within `wattsi` sources, yet could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within <code>wattsi</code> sources, yet could reduce boilerplate while enhancing parseability.","m.mentions":{},"m.new_content":{"body":"For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within `wattsi` sources, yet could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":"For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within <code>wattsi</code> sources, yet could reduce boilerplate while enhancing parseability.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SA00IJJRgeQRWMfblqB4uT6tK7-eRohI-K4AsN3Zsd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107424784,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$8FcfjC-SM666mXzyk5YR_gbHMuTyCQ8fKSZ0m8hzJps"},
{"content":{"body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within `wattsi` sources and could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":" * For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within <code>wattsi</code> sources and could reduce boilerplate while enhancing parseability.","m.mentions":{},"m.new_content":{"body":"For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within `wattsi` sources and could reduce boilerplate while enhancing parseability.","format":"org.matrix.custom.html","formatted_body":"For example, I could envision a collection of tags that could be used to articulate each dom element, while retaining searchability within <code>wattsi</code> sources and could reduce boilerplate while enhancing parseability.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$SA00IJJRgeQRWMfblqB4uT6tK7-eRohI-K4AsN3Zsd8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1733107573250,"senderName":"leoisverycool","senderId":"@leoisverycool:matrix.org","id":"$lay3nK_8spJu7WiFM3Tf8YXTW8Rx874MvFzFNGu1URA"}
]