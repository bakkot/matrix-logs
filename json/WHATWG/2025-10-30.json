[
{"content":{"body":"Question about https://github.com/whatwg/html/issues/10673: would those modules also be importable through JS `import ... with { type: \"css\" }`? Or is the reason we are talking about the import map something else?","format":"org.matrix.custom.html","formatted_body":"Question about https://github.com/whatwg/html/issues/10673: would those modules also be importable through JS <code>import ... with { type: \"css\" }</code>? Or is the reason we are talking about the import map something else?","m.mentions":{},"msgtype":"m.text"},"ts":1761812127506,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ArIscTFgtUdyohReOet8AWCHWCPxbIW3Yez4fGwPyDE"},
{"content":{"body":"Andreu Botella: remind me, was there some good solution for the sync cross-origin asyncContext case?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: remind me, was there some good solution for the sync cross-origin asyncContext case?","m.mentions":{"user_ids":["@abotella:igalia.com"]},"msgtype":"m.text"},"ts":1761814450694,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$KDWFuk7ttMiG7lsz8Rj0CjiZVBy8jQRCqKjIxDe7n-0"},
{"content":{"body":"nicolo-ribaudo: I think the idea is that they would be when you use the specifier, yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: I think the idea is that they would be when you use the specifier, yes","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1761814481937,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Hx2KgRpnQp_5LqsdZrQCX5Wr-9-lsztsvXhgxYYVFbs"},
{"content":{"body":"> <@smaug:mozilla.org> Andreu Botella: remind me, was there some good solution for the sync cross-origin asyncContext case?\n\nThe solution so far would be to switch to an empty context before firing the cross-origin event, but I still need to investigate this in more detail","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$KDWFuk7ttMiG7lsz8Rj0CjiZVBy8jQRCqKjIxDe7n-0?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@smaug:mozilla.org\">@smaug:mozilla.org</a><br /><a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: remind me, was there some good solution for the sync cross-origin asyncContext case?</blockquote></mx-reply>The solution so far would be to switch to an empty context before firing the cross-origin event, but I still need to investigate this in more detail","m.relates_to":{"m.in_reply_to":{"event_id":"$KDWFuk7ttMiG7lsz8Rj0CjiZVBy8jQRCqKjIxDe7n-0"}},"msgtype":"m.text"},"ts":1761814544651,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$Lg80el3CqMZS-i5lD-DoRYdC3OJCkQaBqGqGMRDLbBw"},
{"content":{"body":"hmm, how do we know something is cross-origin event?","m.mentions":{},"msgtype":"m.text"},"ts":1761814612130,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$HmwOaRngOUyiwNLNB7_afSHWQYlgaGtda47pf8Ak_lI"},
{"content":{"body":"I guess one could have something on stack and when trying to access it do some check. Maybe that works.","m.mentions":{},"msgtype":"m.text"},"ts":1761814715676,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Nd22o0hF_NpFWjLZCuOonjdeVo3F-p6IYzuijje_Xv0"},
{"content":{"body":"and the new realm would effectively need to push something to stack and once done, pop","m.mentions":{},"msgtype":"m.text"},"ts":1761814747981,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Dbr3sH9a6LN_K-qdgpbB_QUNNQr5q_hOCZx1c1t87sQ"},
{"content":{"body":"Is this about same-site-cross-origin or cross-origin due to process limitations on certain platforms?","m.mentions":{},"msgtype":"m.text"},"ts":1761820255143,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$y0ay_VsYTGVrHj2LKfkCUpVLbKv1LfJ7rDR8X3fVjUc"},
{"content":{"body":"So far when considering the interaction with origins, we've only been considering the \"same origin\" spec check and ignoring sites, so both","msgtype":"m.text"},"ts":1761820376098,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$UIqisBty-AweFCxtZLRZ5b1sWV5SgKf9YzKABuw7D8A"},
{"content":{"body":"But I guess the interaction with sites is far from settled","msgtype":"m.text"},"ts":1761820414401,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$HrNpRm64EvFG7B9qFmqvWmmD7Ih25nIBUPsXaQEVyOc"},
{"content":{"body":"annevk: and smaug \n\nGiven the below html what do we think the end result should be:\n\n```html","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: and <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a></p>\n<p>Given the below html what do we think the end result should be:</p>\n<pre><code class=\"language-html\"></code></pre>\n","m.mentions":{"user_ids":["@annevk:matrix.org","@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1761821125048,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$8DuIp6PZ2LUsfTtCe1nvATVbuiaeUGOT77NGs7AY2Fs"},
{"content":{"body":"* annevk: and smaug\n\nGiven the below html what do we think the end result should be:\n\n```html\n<head>\n    <meta http-equiv=\"content-security-policy\" content=\"require-trusted-types-for 'script'\">\n</head>\n<div id=\"div1\" onclick=\"alert(1)\"></div>\n<span id=\"div2\"></span>\n<script>\n    let count = 0;\ntrustedTypes.createPolicy('default', {\n    createScript: (a, b, c) => {\n        count++;\n        if (count > 1) {\n            return a;\n        }\n        const attr = div1.attributes.getNamedItem('onclick');\n        div1.removeAttributeNode(attr);\n        div2.attributes.setNamedItem(attr);\n        return a;\n    }\n});\n\ndiv1.attributes[1].value = 'alert(2)';\n</script>","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: and <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a></p>\n<p>Given the below html what do we think the end result should be:</p>\n<pre><code class=\"language-html\">&lt;head&gt;\n    &lt;meta http-equiv=\"content-security-policy\" content=\"require-trusted-types-for 'script'\"&gt;\n&lt;/head&gt;\n&lt;div id=\"div1\" onclick=\"alert(1)\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\"&gt;&lt;/span&gt;\n&lt;script&gt;\n    let count = 0;\ntrustedTypes.createPolicy('default', {\n    createScript: (a, b, c) =&gt; {\n        count++;\n        if (count &gt; 1) {\n            return a;\n        }\n        const attr = div1.attributes.getNamedItem('onclick');\n        div1.removeAttributeNode(attr);\n        div2.attributes.setNamedItem(attr);\n        return a;\n    }\n});\n\ndiv1.attributes[1].value = 'alert(2)';\n&lt;/script&gt;\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"annevk: and smaug\n\nGiven the below html what do we think the end result should be:\n\n```html\n<head>\n    <meta http-equiv=\"content-security-policy\" content=\"require-trusted-types-for 'script'\">\n</head>\n<div id=\"div1\" onclick=\"alert(1)\"></div>\n<span id=\"div2\"></span>\n<script>\n    let count = 0;\ntrustedTypes.createPolicy('default', {\n    createScript: (a, b, c) => {\n        count++;\n        if (count > 1) {\n            return a;\n        }\n        const attr = div1.attributes.getNamedItem('onclick');\n        div1.removeAttributeNode(attr);\n        div2.attributes.setNamedItem(attr);\n        return a;\n    }\n});\n\ndiv1.attributes[1].value = 'alert(2)';\n</script>","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: and <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a></p>\n<p>Given the below html what do we think the end result should be:</p>\n<pre><code class=\"language-html\">&lt;head&gt;\n    &lt;meta http-equiv=\"content-security-policy\" content=\"require-trusted-types-for 'script'\"&gt;\n&lt;/head&gt;\n&lt;div id=\"div1\" onclick=\"alert(1)\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\"&gt;&lt;/span&gt;\n&lt;script&gt;\n    let count = 0;\ntrustedTypes.createPolicy('default', {\n    createScript: (a, b, c) =&gt; {\n        count++;\n        if (count &gt; 1) {\n            return a;\n        }\n        const attr = div1.attributes.getNamedItem('onclick');\n        div1.removeAttributeNode(attr);\n        div2.attributes.setNamedItem(attr);\n        return a;\n    }\n});\n\ndiv1.attributes[1].value = 'alert(2)';\n&lt;/script&gt;\n</code></pre>\n","m.mentions":{"user_ids":["@annevk:matrix.org","@smaug:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$8DuIp6PZ2LUsfTtCe1nvATVbuiaeUGOT77NGs7AY2Fs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761821137429,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$RdIgesvPEGGBMyO0crniwN6p7qAqfp4TdoSiT85VgdM"},
{"content":{"body":"Chrome stable results in\n\n```html\n<div id=\"div1\" onclick=\"alert(1)\"></div>\n<span id=\"div2\"></span>\n```","format":"org.matrix.custom.html","formatted_body":"<p>Chrome stable results in</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\" onclick=\"alert(1)\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\"&gt;&lt;/span&gt;\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1761821194522,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$ZVb7PrjbTWPFBqx47QKQtIAIiatT02FwDq5jc9YR-ec"},
{"content":{"body":"annevk: it is not limitation on certain platforms. It is because of .domain.  So, same-site. But perhaps it could apply to some platforms in different-site case too.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: it is not limitation on certain platforms. It is because of .domain.  So, same-site. But perhaps it could apply to some platforms in different-site case too.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1761821250863,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Y7kPxmj4-2QLhWN6VJA4jFHcmxg-w9s-7xEp7yM-OIo"},
{"content":{"body":"* Chrome stable results in\n\n```html\n<div id=\"div1\" onclick=\"alert(2)\"></div>\n<span id=\"div2\" onclick=\"alert(1)\"></span>\n```\n\nFirefox Nightly in:\n\n```html\n<div id=\"div1\"></div>\n<span id=\"div2\" onclick=\"alert(2)\"></span>\n```\n\nWebKit Trunk and Spec in:\n\n```html\n<div id=\"div1\"></div>\n<span id=\"div2\" onclick=\"alert(1)\"></span>\n```","format":"org.matrix.custom.html","formatted_body":"* <p>Chrome stable results in</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\" onclick=\"alert(2)\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(1)\"&gt;&lt;/span&gt;\n</code></pre>\n<p>Firefox Nightly in:</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(2)\"&gt;&lt;/span&gt;\n</code></pre>\n<p>WebKit Trunk and Spec in:</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(1)\"&gt;&lt;/span&gt;\n</code></pre>\n","m.mentions":{},"m.new_content":{"body":"Chrome stable results in\n\n```html\n<div id=\"div1\" onclick=\"alert(2)\"></div>\n<span id=\"div2\" onclick=\"alert(1)\"></span>\n```\n\nFirefox Nightly in:\n\n```html\n<div id=\"div1\"></div>\n<span id=\"div2\" onclick=\"alert(2)\"></span>\n```\n\nWebKit Trunk and Spec in:\n\n```html\n<div id=\"div1\"></div>\n<span id=\"div2\" onclick=\"alert(1)\"></span>\n```","format":"org.matrix.custom.html","formatted_body":"<p>Chrome stable results in</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\" onclick=\"alert(2)\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(1)\"&gt;&lt;/span&gt;\n</code></pre>\n<p>Firefox Nightly in:</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(2)\"&gt;&lt;/span&gt;\n</code></pre>\n<p>WebKit Trunk and Spec in:</p>\n<pre><code class=\"language-html\">&lt;div id=\"div1\"&gt;&lt;/div&gt;\n&lt;span id=\"div2\" onclick=\"alert(1)\"&gt;&lt;/span&gt;\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ZVb7PrjbTWPFBqx47QKQtIAIiatT02FwDq5jc9YR-ec","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761821324321,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$kIT51UsGp4rkNc264J3WF3cuLq6TbTjD3zqSccmNMLY"},
{"content":{"body":"annevk: Background being cases like https://github.com/WICG/scheduling-apis/issues/114#issuecomment-2674911489 where focus() can do interesting things. Scheduler API had a somewhat major bug where cross-origin pages could affect scheduling of tasks in the other origin.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: Background being cases like https://github.com/WICG/scheduling-apis/issues/114#issuecomment-2674911489 where focus() can do interesting things. Scheduler API had a somewhat major bug where cross-origin pages could affect scheduling of tasks in the other origin.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1761821411325,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$zjmXZbg26-n3Mff3_4oHLei_sGDbvnOGCDeomXiin9U"},
{"content":{"body":"Oli has a preference for Firefox Nightly's behaviour. I'm open to either, so I think if Anne agrees I'll update the spec, and then go and update the tests to account for that.\n\n","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$ZVb7PrjbTWPFBqx47QKQtIAIiatT02FwDq5jc9YR-ec"}},"msgtype":"m.text"},"ts":1761821447182,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$aRV6-xQwnqSmGYc4K5ga5tRVqMETVm3NAv0xaSlrK80"},
{"content":{"body":"Luke Warlow: and of those I think Firefox behavior is least weird ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: and of those I think Firefox behavior is least weird","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1761821495868,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Kg9pt1iC_q4tqKSp3LgCQMfqUl350ixjYVwi_Jg4NQE"},
{"content":{"body":"The alternative is an option 4 where we throw in that case, which I know Anne did raise as preferable to the current spec behaviour.","m.mentions":{},"msgtype":"m.text"},"ts":1761821526086,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$hMy80igodMQhpXAQOa0J6mTbVz7-ixkjApE-YAoD6Is"},
{"content":{"body":"I could possibly live with that.","m.mentions":{},"msgtype":"m.text"},"ts":1761821550038,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Zs7S5PUAjOs5qB3zuZWsgofttClFzfeKu5wXl9l7wHE"},
{"content":{"body":"though it isn't super clear to me why we would throw ","m.mentions":{},"msgtype":"m.text"},"ts":1761821575258,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$4A5GQNL_dQRV_BJTanBIePldrpir4tV1kCW0ZkVq4N0"},
{"content":{"body":"Apologies that there's still some of these edge cases to resolve, I really did think we had the tests covering this but it seems we're not quite fully covering them.","m.mentions":{},"msgtype":"m.text"},"ts":1761821602747,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$kiY_LigKBgol72J6pWHi54XLLMU7ZCXoBdyVuIRSGj8"},
{"content":{"body":"someone is trying to set attribute node's value, and TT isn't throwing, so why wouldn't it succeed ","m.mentions":{},"msgtype":"m.text"},"ts":1761821615834,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$ee_4FjLI97D22nDVvJDmEjX4GxW6ozkSD9v3LutJrxs"},
{"content":{"body":"But why would setting succeed before you hear back from TT?","m.mentions":{},"msgtype":"m.text"},"ts":1761821643259,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$TJA2reYaaqL-2irU6xoetyjtMEOv4WZnUn7l8G3HX2A"},
{"content":{"body":"It doesn't, it happens after TT runs","m.mentions":{},"msgtype":"m.text"},"ts":1761821665315,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$v2LeRK15KU_5oIQhgyj7jT6HyIyRwixxHjb4P0Wt81s"},
{"content":{"body":"Oh, FF moves the attribute and then the setter succeeds.","m.mentions":{},"msgtype":"m.text"},"ts":1761821724659,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$UH42mxfHdX8Vo9-V8iyx7OsupFMjAL2xB4xvySpPN_c"},
{"content":{"body":"Whereas Webkit trunk and spec, moves the attribute but the setter early returns.","m.mentions":{},"msgtype":"m.text"},"ts":1761821745966,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$cc7RimEIDTMBGdKwuUvJrGO0aseFYWZL-TxQ_heMNXo"},
{"content":{"body":"and value setting becomes oddly no-op ","m.mentions":{},"msgtype":"m.text"},"ts":1761821763642,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$-BVaTBnVaImKxzz6mvPeyLbJ8zbV0h1dBJ7T5su86T4"},
{"content":{"body":"I see, and we did an early return because the parent changed and thus it might no longer be accurate.","m.mentions":{},"msgtype":"m.text"},"ts":1761821807549,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iPmTx45MI4677jFea_5Ra4Ay9A6198UjHNAii6Wdjoo"},
{"content":{"body":"The thinking there was they've done something strange and I wasn't entirely convinced it couldn't be used to do something bad. But I think it would have to be a very weirdly written default policy relying on some form of global state for you to ever possibly run into that","m.mentions":{},"msgtype":"m.text"},"ts":1761821807694,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$iyK7kkEo8bd_hub3CyoUDn4GGgVapAa9oqeNyw5FHaY"},
{"content":{"body":"Ultimately if the attribute isn't bad on the new element it's fine. If it is bad it'll be covered by TT on the move, so it's probably fine?","m.mentions":{},"msgtype":"m.text"},"ts":1761821866308,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$gtVsINviGF1NZPb27KK_p0nCtek0ofMqKTTEvE8-d5g"},
{"content":{"body":"Like say you move onload from a `div` (used by a library) to `img`. Now I guess either retaining the existing value or updating to the new value could be bad.","format":"org.matrix.custom.html","formatted_body":"Like say you move onload from a <code>div</code> (used by a library) to <code>img</code>. Now I guess either retaining the existing value or updating to the new value could be bad.","m.mentions":{},"msgtype":"m.text"},"ts":1761821911905,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$EhIHRpts07q-07vYzcvn-K6I7rsUgUUH_w-hyb2t9Z0"},
{"content":{"body":"Basically we need to trust TT callbacks to not do unsafe things to themselves, and we need to protect DOM from TT callbacks which try to attack implementations in some way (like trying to get DOM into weird state).","m.mentions":{},"msgtype":"m.text"},"ts":1761821981094,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$L_FOMWgrjHABMq6Xck-MG-6HpF6EnPnNQH0eOHVsN44"},
{"content":{"body":"The default policy would get the oppurtunity to remove the existing value fwiw, but they don't actually get information on the element's type, they just get 'Element onload'","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$EhIHRpts07q-07vYzcvn-K6I7rsUgUUH_w-hyb2t9Z0"}},"msgtype":"m.text"},"ts":1761822061435,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$HB9588RKr2cJGWG7AGt4b_8d0vcYjBr3KioKUhmvvQY"},
{"content":{"body":"What does the mutation record look like in FF?","m.mentions":{},"msgtype":"m.text"},"ts":1761822083847,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$NagenEtSWVo6TuodcD2u3eyyiuaksMKtHaV2YdONh0o"},
{"content":{"body":"* The default policy would get the oppurtunity to remove the existing value fwiw, because the default policy would run on move, but they don't actually get information on the element's type, they just get 'Element onload'.","m.mentions":{},"m.new_content":{"body":"The default policy would get the oppurtunity to remove the existing value fwiw, because the default policy would run on move, but they don't actually get information on the element's type, they just get 'Element onload'.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$HB9588RKr2cJGWG7AGt4b_8d0vcYjBr3KioKUhmvvQY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1761822088468,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$Wn-OaodDbWu0ae8j86o2AoKi6f0ExQd6qv6rRAkZ5RM"},
{"content":{"body":"Basically I think I'm okay with aligning on FF and smaug's stated principles, as long as it all adds up.","format":"org.matrix.custom.html","formatted_body":"Basically I think I'm okay with aligning on FF and <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>'s stated principles, as long as it all adds up.","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1761822139997,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Y5FRFMKzP4BepSVdZ1STMli9WNRAgUBZZHcG6M5-2P8"},
{"content":{"body":"In FF there should be attr removal, adding it somewhere else and then modifying the value. TT callback happens before any DOM mutations, and in the example it does those two first ones, and that last mutation should be setting the new value.","m.mentions":{},"msgtype":"m.text"},"ts":1761822240938,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$dp-0eEmBY43a3XodS9Bxiwo9APo8ZbdhFwd6GNLIqjc"},
{"content":{"body":"Yeah firefox gets\n\n[div1] onclick removed: alert(1)\n[div2] onclick added \n[div2] onclick modified: alert(1) -> alert(2)","m.mentions":{},"msgtype":"m.text"},"ts":1761822798456,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$6r5gTifdGxZTZLUH6vKAa2hyfmRiIDQgNGh9TjDFnLQ"},
{"content":{"body":"Given the mutation records add up does this seem okay? If so I'll go ahead and update the spec PR and work on the test","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$Y5FRFMKzP4BepSVdZ1STMli9WNRAgUBZZHcG6M5-2P8"}},"msgtype":"m.text"},"ts":1761823033345,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$12xfs-OqCQKzpVxuDvzS0t-VvaRCyQsLEcG9WG8wZus"},
{"content":{"body":"Luke Warlow: if you're still around, mind if I push an editorial commit to your DOM TT PR?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: if you're still around, mind if I push an editorial commit to your DOM TT PR?","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1761842719574,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$GTaqEvzA3gQUxJup3MoGztDqZ-qm657C0-uqcRz1jew"},
{"content":{"body":"No that's fine, go for it!","m.mentions":{},"msgtype":"m.text"},"ts":1761842895190,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$cS3I9Ou0z959Ss0VpgjP8SO8GODXDtHxAr6PpjVOEac"},
{"content":{"body":"smaug: unless you want more time I plan to merge tomorrow (https://github.com/whatwg/dom/pull/1268 that is).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: unless you want more time I plan to merge tomorrow (https://github.com/whatwg/dom/pull/1268 that is).","m.mentions":{"user_ids":["@smaug:mozilla.org"]},"msgtype":"m.text"},"ts":1761843763798,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vcNRkkfMUjMLZHfXpBfKUkEQSegPHfBndTCFK0PuY9I"},
{"content":{"body":"Looking right now","msgtype":"m.text"},"ts":1761843790832,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$Gdf-3QiiN6kDDSUYlb7kX7x1OJ2XJwf7kCn1WaaRW7A"},
{"content":{"body":"Also assuming Luke is okay with my changes, but I suspect so.","m.mentions":{},"msgtype":"m.text"},"ts":1761843795494,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$CZz3g9SK_GAE9oZ__2VmLHIBIa2NRWK2oqG_oT6kUYI"},
{"content":{"body":"LGTM","m.mentions":{},"msgtype":"m.text"},"ts":1761843895565,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$i7JJPeuLkgLE6MnGicutcJk3QVQHaEgM2kgaea8zGpA"}
]