[
{"content":{"body":"Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of [VerifyArgument] annotation over attempting to change the type. So you'd have to write `[VerifyArgument] (TrustedHTML or DOMString) input` and `[VerifyArgument]` would take care of running some kind of callback based on the type of argument. Maybe that's a reasonable middle ground even that would also allow the more complicated cases to rely on IDL.","format":"org.matrix.custom.html","formatted_body":"Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of [VerifyArgument] annotation over attempting to change the type. So you'd have to write <code>[VerifyArgument] (TrustedHTML or DOMString) input</code> and <code>[VerifyArgument]</code> would take care of running some kind of callback based on the type of argument. Maybe that's a reasonable middle ground even that would also allow the more complicated cases to rely on IDL.","m.mentions":{},"msgtype":"m.text"},"ts":1712297927685,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$S3apaA3NWRoR9kKA-JJe3HpWNEDbH7cl56O-1v1ACl4"},
{"content":{"body":" * Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of \\[VerifyArgument\\] annotation over attempting to change the type. So you'd have to write `[VerifyArgument] (TrustedHTML or DOMString) input` and `[VerifyArgument]` would take care of running the \"verify/validate\" algorithm based on the type of argument. Maybe that's a reasonable middle ground that would also allow the more complicated cases to rely on IDL.","format":"org.matrix.custom.html","formatted_body":" * Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of [VerifyArgument] annotation over attempting to change the type. So you'd have to write <code>[VerifyArgument] (TrustedHTML or DOMString) input</code> and <code>[VerifyArgument]</code> would take care of running the \"verify/validate\" algorithm based on the type of argument. Maybe that's a reasonable middle ground that would also allow the more complicated cases to rely on IDL.","m.mentions":{},"m.new_content":{"body":"Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of \\[VerifyArgument\\] annotation over attempting to change the type. So you'd have to write `[VerifyArgument] (TrustedHTML or DOMString) input` and `[VerifyArgument]` would take care of running the \"verify/validate\" algorithm based on the type of argument. Maybe that's a reasonable middle ground that would also allow the more complicated cases to rely on IDL.","format":"org.matrix.custom.html","formatted_body":"Yeah, that aspect would be observable with this change. I think if we had to preserve that I'd favor some kind of [VerifyArgument] annotation over attempting to change the type. So you'd have to write <code>[VerifyArgument] (TrustedHTML or DOMString) input</code> and <code>[VerifyArgument]</code> would take care of running the \"verify/validate\" algorithm based on the type of argument. Maybe that's a reasonable middle ground that would also allow the more complicated cases to rely on IDL.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$S3apaA3NWRoR9kKA-JJe3HpWNEDbH7cl56O-1v1ACl4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712297972763,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$wsZmA7mmJ4CRemFhUDDOqc8TNy7qhFRMP4hNgi5_EE4"},
{"content":{"body":"I'm not sure if running arbitrary validation code in the middle of IDL conversion excites me all that much. Is changing the order of operations a blocker?","m.mentions":{},"msgtype":"m.text"},"ts":1712302575386,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$DKwbAes5SfBfG6T140Pigk8R1MEuyi7Wp1OLv0eWlgM"},
{"content":{"body":"We're already changing the ordering for some things (script element properties) so I don't think that's gonna be a blocker personally. It would be odd if people are relying on that ordering. And as we already use unions in some places its not consistently ordered already.","msgtype":"m.text"},"ts":1712306898429,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$hOGzQSBf2gHzs3y6cKBxaj-U6xm9lIa7BpVZ9FjSC9g"},
{"content":{"body":"> <@ricea:matrix.org> Sorry, yes, Chrome's behaviour for non-special URLs is currently incorrect, but we're working on it. You can star this bug https://issues.chromium.org/issues/40063064 to be notified when there are updates.\n\nthanks for confirming, and thank you for the work done on the Chrome project :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$3dSkd8fKcmhkr2mcfhKyW98AXFqv52nBhSY_o23x2mE?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@ricea:matrix.org\">@ricea:matrix.org</a><br>Sorry, yes, Chrome&#39;s behaviour for non-special URLs is currently incorrect, but we&#39;re working on it. You can star this bug https://issues.chromium.org/issues/40063064 to be notified when there are updates.</blockquote></mx-reply>thanks for confirming, and thank you for the work done on the Chrome project :)","m.mentions":{"user_ids":["@ricea:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$3dSkd8fKcmhkr2mcfhKyW98AXFqv52nBhSY_o23x2mE"}},"msgtype":"m.text"},"ts":1712307598790,"senderName":"dprz","senderId":"@dprz:matrix.org","id":"$8JhTrdvrZm_Jefs1ZdpMzSfLCBChVskMAbr3sqABHN0"}
]