[
{"content":{"body":"annevk: I think this is what we said? https://github.com/whatwg/html/pull/9452/commits does it help?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: I think this is what we said? https://github.com/whatwg/html/pull/9452/commits does it help?","msgtype":"m.text"},"ts":1687392583180,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$Sz-ZadAWqEv-gS3ed8OaU_n5QMWznC53x50XjRzMu-c"},
{"content":{"body":"> <@bkardell:igalia.com> interesting... does the html build use Prince XML?\n\nThe full version that runs on CI does, to produce the PDF","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$e-nRGdtV2dzNcFyhiagKClieNsWmHOyGO_VGfDDMS2U?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bkardell:igalia.com\">@bkardell:igalia.com</a><br>interesting... does the html build use Prince XML?</blockquote></mx-reply>The full version that runs on CI does, to produce the PDF","m.relates_to":{"m.in_reply_to":{"event_id":"$e-nRGdtV2dzNcFyhiagKClieNsWmHOyGO_VGfDDMS2U"}},"msgtype":"m.text"},"ts":1687398053381,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MynAuWvHExieApfNutA1bW2MWDsaughJK4yZxtAuX0I"},
{"content":{"body":"> <@jyasskin:matrix.org> https://wicg.github.io/turtledove/ has a couple fields that are passed to the browser in one realm, stored for a while, and then passed to a function in another realm. The spec currently uses JSON for this, where it might be able to use  StructuredSerializeForStorage() instead, but my question for this group is whether there's a good WebIDL pattern for documenting that restriction on types and creating the resulting objects in the right realm? \n> \n> https://w3c.github.io/IndexedDB/ does it all manually, but maybe something better has come along since then...\n\nInteresting, I would have used structs with manual serialize/deserialize. Reusing structured clone or JSON is a neat trick, I guess.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$5n1Xz__5yMcNoa6F7eiT_CMs7mXot_Zif1G40LYyJJg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jyasskin:matrix.org\">@jyasskin:matrix.org</a><br>https://wicg.github.io/turtledove/ has a couple fields that are passed to the browser in one realm, stored for a while, and then passed to a function in another realm. The spec currently uses JSON for this, where it might be able to use  StructuredSerializeForStorage() instead, but my question for this group is whether there&#39;s a good WebIDL pattern for documenting that restriction on types and creating the resulting objects in the right realm? <br/><br/>https://w3c.github.io/IndexedDB/ does it all manually, but maybe something better has come along since then...</blockquote></mx-reply>Interesting, I would have used structs with manual serialize/deserialize. Reusing structured clone or JSON is a neat trick, I guess.","m.relates_to":{"m.in_reply_to":{"event_id":"$5n1Xz__5yMcNoa6F7eiT_CMs7mXot_Zif1G40LYyJJg"}},"msgtype":"m.text"},"ts":1687398098901,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$D-HJJQSPiPLdZnUNPgDtV4BRhnn4c6N6ZJgw2IJSkjo"},
{"content":{"body":"Not sure what you mean by Web IDL pattern. Generally IDL object instances are restricted by realm?","msgtype":"m.text"},"ts":1687398125921,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Gix0S8QCv0ybPOAIrInBH9PTlkTjZj8ciDeIhxTQGnM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> The full version that runs on CI does, to produce the PDF\n\nInteresting!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$MynAuWvHExieApfNutA1bW2MWDsaughJK4yZxtAuX0I?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br />The full version that runs on CI does, to produce the PDF</blockquote></mx-reply>Interesting!","m.relates_to":{"m.in_reply_to":{"event_id":"$MynAuWvHExieApfNutA1bW2MWDsaughJK4yZxtAuX0I"}},"msgtype":"m.text"},"ts":1687399668702,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$3uncpc0mMbseCiFEt28uL1fWQPxOZ9D2vbiLXxi2scE"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Not sure what you mean by Web IDL pattern. Generally IDL object instances are restricted by realm?\n\nWell, if you take a WebIDL DOMString, you can safely pass that to a different realm even if the DOMString was initialized from a non-string object, because DOMStrings are defined as Infra strings (https://webidl.spec.whatwg.org/#idl-DOMString). It would be straightforward to define a JSONObject WebIDL type whose 'converted to an IDL value' steps ran https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string, and then it'd be safe to pass those instances across realms too.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Gix0S8QCv0ybPOAIrInBH9PTlkTjZj8ciDeIhxTQGnM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Not sure what you mean by Web IDL pattern. Generally IDL object instances are restricted by realm?</blockquote></mx-reply>Well, if you take a WebIDL DOMString, you can safely pass that to a different realm even if the DOMString was initialized from a non-string object, because DOMStrings are defined as Infra strings (https://webidl.spec.whatwg.org/#idl-DOMString). It would be straightforward to define a JSONObject WebIDL type whose 'converted to an IDL value' steps ran https://infra.spec.whatwg.org/#serialize-a-javascript-value-to-a-json-string, and then it'd be safe to pass those instances across realms too.","m.relates_to":{"m.in_reply_to":{"event_id":"$Gix0S8QCv0ybPOAIrInBH9PTlkTjZj8ciDeIhxTQGnM"}},"msgtype":"m.text"},"ts":1687403828986,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$Jm-l-lCFXEoDCDX3TNJ3LOh2opRFk4f6dEEldlBxRtw"},
{"content":{"body":"Similarly, a StructuredCloneableObject could do the same with StructuredSerializeForStorage, I think. And we could change postMessage to take those instead of `any`...","format":"org.matrix.custom.html","formatted_body":"Similarly, a StructuredCloneableObject could do the same with StructuredSerializeForStorage, I think. And we could change postMessage to take those instead of <code>any</code>...","msgtype":"m.text"},"ts":1687404027361,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$0i6I5YFaQvtnYAU_dlWD8wZS-33_nQbXuvH-4TwvOiw"},
{"content":{"body":"(Well, not really, because of the _transfer_ argument, but there might be other simpler places.)","format":"org.matrix.custom.html","formatted_body":"(Well, not really, because of the <em>transfer</em> argument, but there might be other simpler places.)","msgtype":"m.text"},"ts":1687404104174,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$3ADSqH4MiWSvTkcjx55f0tETR33JWgFZb8LmS9xOKTg"},
{"content":{"body":"I see what you mean, hmm...","msgtype":"m.text"},"ts":1687404142299,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$q_zMxDmIN1u9lGhHLav1dKGVRK6K_Xg7IM3nJzwYfA0"},
{"content":{"body":"Very related to your point in https://github.com/whatwg/webidl/issues/1327. This axis of \"realm-independent vs. not\" is not one I've thought enough about, I guess, but it's an important one.","msgtype":"m.text"},"ts":1687404188694,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$7f-vssa1VIlsi53HOeSi7Y_Fiw6NroL2t_w-9FeBu_A"},
{"content":{"body":"Yeah. I'm thinking about this because Protected Audience does a lot of these cross-realm transfers.","msgtype":"m.text"},"ts":1687404238238,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$VE469uNBrkMRvB3LBmRDl4GDdj-w69FO6jHdkmcL8PM"},
{"content":{"body":"I feel like we've also used dummy realms for related things in the past? Like a realm that is never exposed to anyone. IndexedDB maybe?","msgtype":"m.text"},"ts":1687404279093,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$zPu44E_9x3xugQBev-BRShLImjyj3Ikgfpvtbx0TxSo"},
{"content":{"body":"IndexedDB does that, but I don't think it has to. It does, in fact, re-serialize from that dummy Realm into the actual storage.","msgtype":"m.text"},"ts":1687404318384,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$KOuWSKaCGdSrMDpBQyU2z3u0PYS_7RTCEEztTt1cFaQ"},
{"content":{"body":"I think this has gotten clearer recently, as we've re-cast the WebIDL types into Infra types.","msgtype":"m.text"},"ts":1687404376056,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$hr-k4BvRj0cXTpDSvUXDJvPuwPHxqeREAzYFNAi7k1c"},
{"content":{"body":"I think the major missing piece is a kind of recursive definition of \"realm-agnostic\". Like a dictionary containing an interface is not, a dictionary containing strings is.","msgtype":"m.text"},"ts":1687404441999,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$0n8Wm45vXm3M1VrGpz420LQq2_istZtHC_Kym29eECM"},
{"content":{"body":"I thought we'd need that, but actually, you can pass a reference to an interface through 'in parallel', create a dictionary containing that reference in parallel, and then queue a task to return that dictionary to JavaScript.","msgtype":"m.text"},"ts":1687404518485,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$0-CZ0c0xazgiKtJGFUvd89L-E2sH9rtrmzSnPtsIaWA"},
{"content":{"body":"You couldn't create such a dictionary in parallel from whole cloth, and you couldn't pass it all the way to a different agent cluster, but otherwise it works.","msgtype":"m.text"},"ts":1687404615127,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$tnGUxv-j2Lrexko6NguqvbuDhuP6XEThPKw4diMzZYM"},
{"content":{"body":"(Maybe we do want a recursive definition of \"safe to pass across origins and agent clusters\"?)","msgtype":"m.text"},"ts":1687404804819,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$bG-v6d_S86-h2X0ZUKR4sKz9UkS2UQsxq6xny_xL894"},
{"content":{"body":"Hmm, doing that would make me pretty uncomfortable... I guess because it's too easy to treat that reference as something non-opaque.","msgtype":"m.text"},"ts":1687407377721,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dmzqw2AM1M-vVwqFsOFjMvUyUU7KP6Ip_3gNvUg-iZw"},
{"content":{"body":"There's a lot of hand-waving around in parallel, agents, and tasks today. It would be nice to see that formalized, but it would be quite a bit of work.\n\nI'm not sure why IndexedDB needs a custom realm. It can just store the serialized thing, no? Might be an artifact from how \"structured clone\" was written back in the day and never properly refactored.","msgtype":"m.text"},"ts":1687416926331,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vTnQXky_Ekvb1dVSqaR-4-aiXqNvEcul6rhBPMSfvQE"},
{"content":{"body":"Yeah that sounds likely","msgtype":"m.text"},"ts":1687417659298,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$rpPmg6vC-rMLLEYQYUVlN2SWN-lSW9XDQ_5CmKeITTw"},
{"content":{"body":"Domenic: so for https://github.com/whatwg/html/pull/4613 I guess you ended up using rebase & merge and that doesn't cause attribution to go wrong? (Because it will use attribution from the commit which was correct.)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: so for https://github.com/whatwg/html/pull/4613 I guess you ended up using rebase &amp; merge and that doesn't cause attribution to go wrong? (Because it will use attribution from the commit which was correct.)","msgtype":"m.text"},"ts":1687418920219,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rIwA4IWUf8EOmxmEATndfz8RCLOoP5oI7EvX0YSYQcY"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1687419424400,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ExS1znW08ax5etJhTpMGB0FpD02qG9zxuCjACxR6Gow"},
{"content":{"body":"Ah, good to know that works.","msgtype":"m.text"},"ts":1687427028316,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pH1StDjmhrXZC0BNM8kUNRMiK1_KQ7IMuxP5j4gm6Bo"}
]