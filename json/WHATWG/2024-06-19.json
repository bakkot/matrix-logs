[
{"content":{"body":"annevk: thanks for the heads up. no concerns on the HTML integration from me","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: thanks for the heads up. no concerns on the HTML integration from me","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1718768299392,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$hGOqL8gmWybZVcyX7SA5sdgSIIPiX3j0RsdUANruqRo"},
{"content":{"body":"> <@annevk:matrix.org> Dominic Farolino: well you could imagine it being exposed to the callback so whoever is writing the callback doesn't need to know about who is subscribing directly\n\nHmm yeah that is interesting. My gut reaction is that something external like AsyncContext is best to handle this. Exposing things like AC/AS within the callbacks seems potentially useful, but I am not sure how we'd do it. We don't want to store per-subscription state on the Observable itself (see discussion around https://github.com/WICG/observable/issues/22#issuecomment-1804938312). So the alternative would be to somehow set the callback `this` value to some intangible per-subscription object that holds onto, for now, the signal supplied at subscription time. That seems a little funky though.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$D7nxezF9Pz-ctd5m1PMTs4JCRtfLn3LYZLZaC12Jf9Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: well you could imagine it being exposed to the callback so whoever is writing the callback doesn't need to know about who is subscribing directly</blockquote></mx-reply>Hmm yeah that is interesting. My gut reaction is that something external like AsyncContext is best to handle this. Exposing things like AC/AS within the callbacks seems potentially useful, but I am not sure how we'd do it. We don't want to store per-subscription state on the Observable itself (see discussion around https://github.com/WICG/observable/issues/22#issuecomment-1804938312). So the alternative would be to somehow set the callback <code>this</code> value to some intangible per-subscription object that holds onto, for now, the signal supplied at subscription time. That seems a little funky though.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$D7nxezF9Pz-ctd5m1PMTs4JCRtfLn3LYZLZaC12Jf9Q"}},"msgtype":"m.text"},"ts":1718813977141,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$m0QhYRVx1L0-6wT2yXvG8JPAf3DW5unuiZf1UNuUlso"},
{"content":{"body":"I guess another option would be to just invoke the next callback with the signal as the last argument every time, but that seems wasteful and not scalable.","m.mentions":{},"msgtype":"m.text"},"ts":1718813999990,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$I_lWzco7oUH3kiT5cyoS8mJ8OBuSuoCBvYPwY7uXQeA"},
{"content":{"body":"spam <https://github.com/whatwg/webidl/issues/1412>","format":"org.matrix.custom.html","formatted_body":"spam <a href=\"https://github.com/whatwg/webidl/issues/1412\">https://github.com/whatwg/webidl/issues/1412</a>","m.mentions":{},"msgtype":"m.text"},"ts":1718823273551,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$yz-O42a0tNTLA7_pNA-T3jX7zQ7TM0IoyOqVgzQ5eUk"}
]