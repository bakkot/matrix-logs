[
{"content":{"body":"jugglinmike: maybe share it here first? I don't really see how that thread won't continue to generate noise if we reopen it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a>: maybe share it here first? I don't really see how that thread won't continue to generate noise if we reopen it","msgtype":"m.text"},"ts":1682659700752,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$usRz9Gm3d0gik886BarUncY67R-sQmcqFsePMPzyQ0I"},
{"content":{"body":"And it's not like we really govern `file:` fetching to begin with, it's pretty explicitly undefined","format":"org.matrix.custom.html","formatted_body":"And it's not like we really govern <code>file:</code> fetching to begin with, it's pretty explicitly undefined","msgtype":"m.text"},"ts":1682659735104,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2qbeghizt1S7__HpEgzPJ2Zrg692XWX1S96bC3TCPdY"},
{"content":{"body":"annevk: any further thoughts on naming for https://github.com/WICG/navigation-api/issues/225#issuecomment-1527039396 ? `sourceElement` vs. `triggerElement` vs. `triggeringElement` is my current set of favorites.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: any further thoughts on naming for https://github.com/WICG/navigation-api/issues/225#issuecomment-1527039396 ? <code>sourceElement</code> vs. <code>triggerElement</code> vs. <code>triggeringElement</code> is my current set of favorites.","msgtype":"m.text"},"ts":1682662257690,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$TIGWcb9Ug9Iwzl3cQFSCUuy97QlCvzpkFvZi_D8ClrM"},
{"content":{"body":"Domenic: I added my not-naming thoughts from the offline conversation, but also commented on naming","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I added my not-naming thoughts from the offline conversation, but also commented on naming","msgtype":"m.text"},"ts":1682664121721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$o8Rx0gY367FmOiZxyv2_dQdZOyUsDVc_H8Da-Xle4pI"},
{"content":{"body":"Does the Chromium project have a position on [Audio Seesion](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":"Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Seesion</a>?","msgtype":"m.text"},"ts":1682680006343,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lil4gZswEBiViFxE7m7x6ufJrlw2UAYO-MnCqa9Id24"},
{"content":{"body":" * Does the Chromium project have a position on [Audio Session](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":" * Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Session</a>?","m.new_content":{"body":"Does the Chromium project have a position on [Audio Session](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":"Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Session</a>?","msgtype":"m.text"},"m.relates_to":{"event_id":"$lil4gZswEBiViFxE7m7x6ufJrlw2UAYO-MnCqa9Id24","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1682680015182,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$3ew_tAN4iHuUABbBPYrdHsHGIRrGwwrzHBIQRL0AWcY"},
{"content":{"body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to ES appropriate objects?","format":"org.matrix.custom.html","formatted_body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to ES appropriate objects?","msgtype":"m.text"},"ts":1682687543191,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs"},
{"content":{"body":" * In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?","format":"org.matrix.custom.html","formatted_body":" * In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?","m.new_content":{"body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?","format":"org.matrix.custom.html","formatted_body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?","msgtype":"m.text"},"m.relates_to":{"event_id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1682687574992,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$c6IFMbtIOsbWs40Y4VX8jsK-yXUOmxNcLiRWLgyA8fU"},
{"content":{"body":"> <@domfarolino:matrix.org> In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?\n\nYou are supposed to call a callback with a Web IDL object, which could be an infra map representing a dictionary, but if it's an interface you want, yeah there's no way to get an interface without [=new=]ing one.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">@domfarolino:matrix.org</a><br>In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?</blockquote></mx-reply>You are supposed to call a callback with a Web IDL object, which could be an infra map representing a dictionary, but if it's an interface you want, yeah there's no way to get an interface without [=new=]ing one.","m.relates_to":{"m.in_reply_to":{"event_id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs"}},"msgtype":"m.text"},"ts":1682687708687,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qQGDS5da2R_QTWe6v9wfbCzBZQQNZCBz5zXPpuEC6FU"},
{"content":{"body":"Thanks, I think in the spec I'm reviewing passing an infra map should suffice, provided the values are mutable (JS can change them and we can read them after the callback is done) though I'm not sure how common that pattern is","msgtype":"m.text"},"ts":1682687855753,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$nt1sk5elBAzaGn4VeGavzQC5Arch1kH7wr5YW37b7f4"}
]