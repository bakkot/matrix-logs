[
{"content":{"body":"jugglinmike: maybe share it here first? I don't really see how that thread won't continue to generate noise if we reopen it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jugglinmike:matrix.org\">jugglinmike</a>: maybe share it here first? I don't really see how that thread won't continue to generate noise if we reopen it","msgtype":"m.text"},"ts":1682659700752,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$usRz9Gm3d0gik886BarUncY67R-sQmcqFsePMPzyQ0I"},
{"content":{"body":"And it's not like we really govern `file:` fetching to begin with, it's pretty explicitly undefined","format":"org.matrix.custom.html","formatted_body":"And it's not like we really govern <code>file:</code> fetching to begin with, it's pretty explicitly undefined","msgtype":"m.text"},"ts":1682659735104,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2qbeghizt1S7__HpEgzPJ2Zrg692XWX1S96bC3TCPdY"},
{"content":{"body":"annevk: any further thoughts on naming for https://github.com/WICG/navigation-api/issues/225#issuecomment-1527039396 ? `sourceElement` vs. `triggerElement` vs. `triggeringElement` is my current set of favorites.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: any further thoughts on naming for https://github.com/WICG/navigation-api/issues/225#issuecomment-1527039396 ? <code>sourceElement</code> vs. <code>triggerElement</code> vs. <code>triggeringElement</code> is my current set of favorites.","msgtype":"m.text"},"ts":1682662257690,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$TIGWcb9Ug9Iwzl3cQFSCUuy97QlCvzpkFvZi_D8ClrM"},
{"content":{"body":"Domenic: I added my not-naming thoughts from the offline conversation, but also commented on naming","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I added my not-naming thoughts from the offline conversation, but also commented on naming","msgtype":"m.text"},"ts":1682664121721,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$o8Rx0gY367FmOiZxyv2_dQdZOyUsDVc_H8Da-Xle4pI"},
{"content":{"body":"Does the Chromium project have a position on [Audio Seesion](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":"Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Seesion</a>?","msgtype":"m.text"},"ts":1682680006343,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lil4gZswEBiViFxE7m7x6ufJrlw2UAYO-MnCqa9Id24"},
{"content":{"body":" * Does the Chromium project have a position on [Audio Session](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":" * Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Session</a>?","m.new_content":{"body":"Does the Chromium project have a position on [Audio Session](https://w3c.github.io/audio-session/)?","format":"org.matrix.custom.html","formatted_body":"Does the Chromium project have a position on <a href=\"https://w3c.github.io/audio-session/\">Audio Session</a>?","msgtype":"m.text"},"m.relates_to":{"event_id":"$lil4gZswEBiViFxE7m7x6ufJrlw2UAYO-MnCqa9Id24","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1682680015182,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$3ew_tAN4iHuUABbBPYrdHsHGIRrGwwrzHBIQRL0AWcY"},
{"content":{"body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to ES appropriate objects?","format":"org.matrix.custom.html","formatted_body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to ES appropriate objects?","msgtype":"m.text"},"ts":1682687543191,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs"},
{"content":{"body":" * In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?","format":"org.matrix.custom.html","formatted_body":" * In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?","m.new_content":{"body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?","format":"org.matrix.custom.html","formatted_body":"In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?","msgtype":"m.text"},"m.relates_to":{"event_id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1682687574992,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$c6IFMbtIOsbWs40Y4VX8jsK-yXUOmxNcLiRWLgyA8fU"},
{"content":{"body":"> <@domfarolino:matrix.org> In spec land, is it possible to call a callback with an infra struct, as opposed to a \\[=new=\\] WebIDL object, and have WebIDL \\[=convert=\\] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a \\[=new=\\]ly constructed WebIDL interface, since WebIDL only knows how to convert _those_ to appropriate ES objects?\n\nYou are supposed to call a callback with a Web IDL object, which could be an infra map representing a dictionary, but if it's an interface you want, yeah there's no way to get an interface without [=new=]ing one.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">@domfarolino:matrix.org</a><br>In spec land, is it possible to call a callback with an infra struct, as opposed to a [=new=] WebIDL object, and have WebIDL [=convert=] that to an appropriate ES object for consumption by JS? Or do you actually have to pass in a [=new=]ly constructed WebIDL interface, since WebIDL only knows how to convert <em>those</em> to appropriate ES objects?</blockquote></mx-reply>You are supposed to call a callback with a Web IDL object, which could be an infra map representing a dictionary, but if it's an interface you want, yeah there's no way to get an interface without [=new=]ing one.","m.relates_to":{"m.in_reply_to":{"event_id":"$8wdxrImD37u4uodZFXyWhhLTVsEM0wrLoyHXnvdyRqs"}},"msgtype":"m.text"},"ts":1682687708687,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qQGDS5da2R_QTWe6v9wfbCzBZQQNZCBz5zXPpuEC6FU"},
{"content":{"body":"Thanks, I think in the spec I'm reviewing passing an infra map should suffice, provided the values are mutable (JS can change them and we can read them after the callback is done) though I'm not sure how common that pattern is","msgtype":"m.text"},"ts":1682687855753,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$nt1sk5elBAzaGn4VeGavzQC5Arch1kH7wr5YW37b7f4"},
{"content":{"body":"The values are not mutable; the conversion process performs a copy when constructing the ES object, and you do not have a handle to that ES object","msgtype":"m.text"},"ts":1682688619673,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$OZg_Pgq_JPi9NdOoOYB4y98UCPj9-Uw_-ixAmTRaJQs"},
{"content":{"body":"OK that makes sense.","msgtype":"m.text"},"ts":1682688664794,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$TkPI6kFcoOdVEGAHVJqR_S1tXBmeK7qtH1ukCjuZoTI"},
{"content":{"body":"If you get an arbitrary ES object back, you can try to convert it to a dictionary (or record) again, and that will handle all the pathological cases like what if the author installed a throwing getter on a property you care about or some property with the wrong type value or similar","msgtype":"m.text"},"ts":1682688695396,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Zc7so3yS9mtRk2Agvp5KkWl2_dWZBZm2ZLhvcAVOeUA"},
{"content":{"body":"\"get an arbitrary ES object back\" > what mechanism would I get one back by, something like a callback that lets the user invoke a function with a dictionary of populated values?","msgtype":"m.text"},"ts":1682688908955,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$ImsacnbVgxga_C8q8Ri9r1x6G8MgBkMchsjJAxk5ovA"},
{"content":{"body":"Can you even pass a callback fn (for JS to invoke) as an argument to a callback fn (that specs invoke to run JS)?","msgtype":"m.text"},"ts":1682689149369,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$jahxL_7-b1yhTc1ZjV84mnAGaXXclT0Rqj0NnUNza0o"},
{"content":{"body":"I mean I don't know, I thought you were reviewing an existing API. What does code that uses the existing API look like/how is it supposed to work?","msgtype":"m.text"},"ts":1682689197895,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Ou5x7WVL9NYQIvQMqY6y9bEeJfvBuO7pE0vfPHZqT5Q"},
{"content":{"body":"(Like, example JS code)","msgtype":"m.text"},"ts":1682689227491,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ACuTpsk0AcOuzwh3aJtmFZutUvQzlaGUOOEmv5RBy-E"},
{"content":{"body":"New spec/new API. It's not pretty, I'm trying to land on something sensible.\n\n```\nfunction generateBid(foo, bar, baz) { // This will get invoked by the browser\n  const bidValue = [compute a value based on foo/bar/baz];\n  setBid(bidValue);\n\n  const priorityValue = [compute priority based on foo/bar/baz];\n  setPriority(priorityValue);\n}\n```\n\nCaveat is: `setBid` and `setPriority` functions should only ever exist _inside_ that generateBid() user-supplied fn","format":"org.matrix.custom.html","formatted_body":"<p>New spec/new API. It's not pretty, I'm trying to land on something sensible.</p>\n<pre><code>function generateBid(foo, bar, baz) { // This will get invoked by the browser\n  const bidValue = [compute a value based on foo/bar/baz];\n  setBid(bidValue);\n\n  const priorityValue = [compute priority based on foo/bar/baz];\n  setPriority(priorityValue);\n}\n</code></pre>\n<p>Caveat is: <code>setBid</code> and <code>setPriority</code> functions should only ever exist <em>inside</em> that generateBid() user-supplied fn</p>\n","msgtype":"m.text"},"ts":1682689467357,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$ol0WgjUWJf-h6IT_FBn-rjBuXMvpo-gbmVUmkKwq578"},
{"content":{"body":"So I'd like to pass in a `setBid()` and `setPriority()` function directly as an argument alongside foo/bar/baz, so that those fns can literally only be called _inside_ generateBid()","format":"org.matrix.custom.html","formatted_body":"So I'd like to pass in a <code>setBid()</code> and <code>setPriority()</code> function directly as an argument alongside foo/bar/baz, so that those fns can literally only be called <em>inside</em> generateBid()","msgtype":"m.text"},"ts":1682689500738,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$q4HnkL1FnExeIxd1gGnbQIWRaxJ-Mb0bYVdKxvnCvfs"},
{"content":{"body":"But I'm not sure how to pass in \"a function that does THIS\" (called setBid()), and so on.","msgtype":"m.text"},"ts":1682689520231,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$P2bR5h05X9eQt9l2o-WJRx4k070I6OAMdPNzbMBtqMU"},
{"content":{"body":"Personally I'd like to pass (to generateBid()) in an _interface_ that has a setBid() and setPriority() methods","format":"org.matrix.custom.html","formatted_body":"Personally I'd like to pass (to generateBid()) in an <em>interface</em> that has a setBid() and setPriority() methods","msgtype":"m.text"},"ts":1682689539442,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$xRgDwspP0-BMlxIDehT8CJ-fEiSxscK78fRXipPa29o"},
{"content":{"body":"Got it. You can do that either with callback functions, or if you want to put those two callback functions on an interface that would also work.","msgtype":"m.text"},"ts":1682689553206,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$pBWkkOYRiwSwp7cM6s7ikR6k8q79ZgaY23ryW8m-wl8"},
{"content":{"body":"To create callback functions that have specific behavior, let me find an example...","msgtype":"m.text"},"ts":1682689566211,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$6QmU7QO4pRcZLZ4PGXDZ0jtdTq3IPsJuOyBqHyfVNys"},
{"content":{"body":"Yeah that's what I've been looking for on WebDex but I only see them go the other way: callbacks that JS passes into spec code, that specs invoke later","msgtype":"m.text"},"ts":1682689594371,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$NOhd_ioooWZc8Tw6d-1KuyiWQwBSY5HXWCYEqrR3tEI"},
{"content":{"body":"Pretty sure onxyz's are an example","msgtype":"m.text"},"ts":1682689624191,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$3ve5Vt_0UFjNwx7JQ-kgGhUT4sT2ST5xo_VbboFaXSk"},
{"content":{"body":"Yeah. It's not pretty, you manually construct a JS Function object and then wrap it. https://html.spec.whatwg.org/#getting-the-current-value-of-the-event-handler","msgtype":"m.text"},"ts":1682689659412,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9J5gkuYrZp6yaP9-AI55hmSZrFDiHZz0PfNt05pa2d8"},
{"content":{"body":"Steps 3.8-12","msgtype":"m.text"},"ts":1682689687160,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$gyYTYqaDqp-ll7R_3bJh2RYs5dwTa-nJyRIzv-Fo4V0"},
{"content":{"body":"Step 3.11 is probably not necessary in your case","msgtype":"m.text"},"ts":1682689713346,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UvyOs1Jq-uJwTl4kWws2asYurD5-R-7b-SPsbhXPI70"},
{"content":{"body":"I agree with all of that. Thanks a lot for the example, it is exactly as I feared :)","msgtype":"m.text"},"ts":1682689749812,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$Mh3DHI79-NpIWf6yjdENGOA1GxsdA-uqPxSyW1cZ00M"},
{"content":{"body":"interface wtih methods would be much nicer","msgtype":"m.text"},"ts":1682689757946,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$oWB8-vaR83CDupX5HMIORKCg3NpeZEyxn9cgIfkTfLU"},
{"content":{"body":" * interface with methods would be much nicer","m.new_content":{"body":"interface with methods would be much nicer","msgtype":"m.text"},"m.relates_to":{"event_id":"$oWB8-vaR83CDupX5HMIORKCg3NpeZEyxn9cgIfkTfLU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1682689760221,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$UwvbKam98LR5fGj4O-TeVc0tS9Z8pJ8raF85FEqmWys"},
{"content":{"body":"But creating an interface might be easier and perhaps nicer for authors, as a signature of (foo, bar, baz, setBid, setPriority) feels a bit more confusing than (foo, bar, baz, controller) or ([foo, bar, baz], controller)","msgtype":"m.text"},"ts":1682689763709,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$A6zN0ZoSHOtWIzCty8Copnp6R4sjdSLuWssB5vvZ7kQ"},
{"content":{"body":"I fear that ship has sailed though","msgtype":"m.text"},"ts":1682689765580,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$iRzc5Ki_iraJzDm-c9WYCHhJTVxzlvgY8XdfrWryuhg"}
]