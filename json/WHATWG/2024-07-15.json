[
{"content":{"body":"Is there any appetite to revisit what origins are supposed to be exposed via `document.ancestorOrigins` ? We've got an open PR to implement it in Ladybird, but I'm not sure whether there was any consensus as to what it should be doing from https://github.com/whatwg/html/issues/1918. Chrome and Safar seem to implement it, while Firefox does not","format":"org.matrix.custom.html","formatted_body":"Is there any appetite to revisit what origins are supposed to be exposed via <code>document.ancestorOrigins</code> ? We've got an open PR to implement it in Ladybird, but I'm not sure whether there was any consensus as to what it should be doing from https://github.com/whatwg/html/issues/1918. Chrome and Safar seem to implement it, while Firefox does not","m.mentions":{},"msgtype":"m.text"},"ts":1721003439826,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$b60I4bwCkatgz8oYXpKzKRaOMxzXG22teIzYzYMMkVs"},
{"content":{"body":"er.. location.ancestorOrigins","m.mentions":{},"msgtype":"m.text"},"ts":1721003479076,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$gbzyvWM9VGuNW0GFmZJzZrAEEC-2eU9EoNTSgSaTOp8"},
{"content":{"body":"akaster: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.\n\nThat next call is on July 18th at 9am US/West.\n\nBut if nobody else from Ladybird can be on the call, I can read up on the PR and could be on the call to talk about it.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.</p>\n<p>That next call is on July 18th at 9am US/West.</p>\n<p>But if nobody else from Ladybird can be on the call, I can read up on the PR and could be on the call to talk about it.</p>\n","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1721003781421,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$scAIpHicsWPl7CB4HkjkJ9dwbVu1l4C633T6RokzOXM"},
{"content":{"body":" * akaster: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.\n\nThat next call is on July 18th at 9am US/West.\n\nBut if nobody else from Ladybird can be on the call, I can read up on the PR and could be on myself to talk about it.","format":"org.matrix.custom.html","formatted_body":" * <p><a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.</p>\n<p>That next call is on July 18th at 9am US/West.</p>\n<p>But if nobody else from Ladybird can be on the call, I can read up on the PR and could be on myself to talk about it.</p>\n","m.mentions":{},"m.new_content":{"body":"akaster: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.\n\nThat next call is on July 18th at 9am US/West.\n\nBut if nobody else from Ladybird can be on the call, I can read up on the PR and could be on myself to talk about it.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: One thing to consider is: Somebody from the Ladybird project whoâ€™s familiar with that Ladybird PR could get it on the agenda for the next WHATNOT meeting/call by adding a comment to https://github.com/whatwg/html/issues/10471.</p>\n<p>That next call is on July 18th at 9am US/West.</p>\n<p>But if nobody else from Ladybird can be on the call, I can read up on the PR and could be on myself to talk about it.</p>\n","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$scAIpHicsWPl7CB4HkjkJ9dwbVu1l4C633T6RokzOXM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721003816298,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$dGg7O44TehVs6lhy3hKbkf7e3-NfEXFi9kPU8FmzAWM"},
{"content":{"body":"Hmm. Sure. I've been meaning to figure out how to get us more involved in the standards processes anyway. I think we have quite a few open WhatWG-related issues laying around that might be worth aggregating into a list in our own issue tracker as well.","m.mentions":{},"msgtype":"m.text"},"ts":1721004067225,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$Fm80jbiav8C2DPnkl7BCw_tXxBL9d2EY49GzFhAFRSk"},
{"content":{"body":"akaster: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”Â and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate further on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”&nbsp;and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate further on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1721007300082,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ESOwj1AuF4xOzukiOfqpEoJx_u8jPO06ZBFnCpgTu4A"},
{"content":{"body":" * akaster: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”Â and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”&nbsp;and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","m.mentions":{},"m.new_content":{"body":"akaster: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”Â and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: If you want, I can make time to help with either or both of those (figuring out how to get more involved in standards processes, and aggregating the relevant issues). And Iâ€™d be happy to do it. Iâ€™m anyway looking for more ways I could contribute to the project â€”&nbsp;and itâ€™d be a good fit for me, since Iâ€™m already pretty involved in the WHATWG. (And would also give me another reason to procrastinate on debugging https://github.com/LadybirdBrowser/ladybird/issues/75 ðŸ˜†)","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ESOwj1AuF4xOzukiOfqpEoJx_u8jPO06ZBFnCpgTu4A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721007314736,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$CpIWqwLh7jkk1WnFGAXWoOedf81tMwVp7M1D9NmH1FY"},
{"content":{"body":"akaster: I don't think there's an update on `ancestorOrigins`, but I think bz's concern around it exposing too much information still holds. There's talk about a header-based version of that feature that does a lot better in terms of information exposure: https://github.com/w3c/webappsec-fetch-metadata/issues/56","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: I don't think there's an update on <code>ancestorOrigins</code>, but I think bz's concern around it exposing too much information still holds. There's talk about a header-based version of that feature that does a lot better in terms of information exposure: https://github.com/w3c/webappsec-fetch-metadata/issues/56","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1721027429251,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pf3ObhwIA_2D_nSU_-vm-gCfPVSs8SHeA5yS0QwOO3Y"},
{"content":{"body":"Hi, I was contemplating HTML entities and I realized that there are two entities, &nLt; and &nGt;, whose UTF-8 expansions are longer than their ASCII representations (six bytes versus five bytes). Only these entities have this property.\n\nI realized this while writing an HTML parser in C, using constant string views to parse a document with no allocations and no copies. It seems to me that, in UTF-8, these entities and the mandate to replace U+0000 with U+FFFD are the only things preventing me from decoding inline HTML text in-place by mutating the buffer. I punt the replacement of nul bytes to the user, but because of &nLt; and &nGt;, inline text is 20% longer in the worst case after expansion.\n\nAm I crazy, or is this a serious limitation? HTML is so close to being parseable in-place. I don't want to jump to the conclusion that these entities should be deprecated, but there would be a benefit.\n\nI'm tempted to ignore &nLt; and &nGt; just for this reason!","m.mentions":{},"msgtype":"m.text"},"ts":1721031050193,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$ueLtfLcEHExO9nS_oMQXTDBiQ80Z6UU_YU2_kAhdwP4"},
{"content":{"body":"Domenic: if you have a couple minutes could you look at https://github.com/whatwg/mimesniff/pull/192? I'd like to land it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: if you have a couple minutes could you look at https://github.com/whatwg/mimesniff/pull/192? I'd like to land it","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1721032443702,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$kioYuUcIUR7HJXoM07FlaXb-ySsN9Ih-U30FXOLhx0U"},
{"content":{"body":"lynko: don't you have the same problem with decoding bytes to text? E.g., 0xFF has to become U+FFFD too.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: don't you have the same problem with decoding bytes to text? E.g., 0xFF has to become U+FFFD too.","m.mentions":{"user_ids":["@lynko:matrix.org"]},"msgtype":"m.text"},"ts":1721032566734,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$1REq34LCeMQ2wWeYL7B-_vmIjNaWBooJn1NyULvNetI"},
{"content":{"body":"> <@annevk:matrix.org> lynko: don't you have the same problem with decoding bytes to text? E.g., 0xFF has to become U+FFFD too.\n\nSure, but that's malformed input, and I pass it on just like a nul byte (it's up to the user to decide if conversion is necessary). &nLt; and &nGt; make it a problem for correct input too.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$1REq34LCeMQ2wWeYL7B-_vmIjNaWBooJn1NyULvNetI?via=matrix.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: don't you have the same problem with decoding bytes to text? E.g., 0xFF has to become U+FFFD too.</blockquote></mx-reply>Sure, but that's malformed input, and I pass it on just like a nul byte (it's up to the user to decide if conversion is necessary). â‰ªâƒ’ and â‰«âƒ’ make it a problem for correct input too.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1REq34LCeMQ2wWeYL7B-_vmIjNaWBooJn1NyULvNetI"}},"msgtype":"m.text"},"ts":1721032776992,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$U2OlaSgTBD4SSemYr8qFCe_qeIFXrGHT8F85BGz7mzI"},
{"content":{"body":"How do you avoid allocations for creating nodes and such?","m.mentions":{},"msgtype":"m.text"},"ts":1721032942434,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$zw6Q74iP7xwVO4SnYUS4cxBtu5tpAJW2S8HVO6BM0Fc"},
{"content":{"body":"There's one flat inout array for nodes, if the parser runs out of room it stops writing but still returns the number of nodes that were parsed. If your buffer was already big enough then it happens in one pass and doesn't trigger a reallocation, and even if it does, you know exactly how much room you need. The parser also always produces a valid hierarchy even if it gets cut off partway through","m.mentions":{},"msgtype":"m.text"},"ts":1721033101020,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$pZWuLtHu2ipRiSHiXnERopv_LaObw68G7KTS50CJXl8"},
{"content":{"body":"I see, but that also means you have to keep the entire input file in memory as well, right? For a markup-heavy document I wonder if that's still going to be beneficial. But it's interesting for sure.","m.mentions":{},"msgtype":"m.text"},"ts":1721033385505,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qb32uR-F1JeM5K_5LBZmADcQ03GUwJcfQ1fS0K_JA58"},
{"content":{"body":"If anyone hsivonen might have some thoughts about this, but not sure if he's around.","format":"org.matrix.custom.html","formatted_body":"If anyone <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a> might have some thoughts about this, but not sure if he's around.","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"msgtype":"m.text"},"ts":1721033449829,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$dvDNZSCnBNynFf7u_5G7wCuu1ErehYx8vF6kGt35ARM"},
{"content":{"body":"It's kind of a specific use case, but I personally don't anticipate the need to parse files larger than I can store in memory. I do have some ideas about extending the API for streaming purposes with similar in-place properties... but it's beside the point","m.mentions":{},"msgtype":"m.text"},"ts":1721033531054,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$h9xslrHP-qiGkkM4Ko6QdDKN6PxTV3XYv7hnxA6zrss"},
{"content":{"body":"I haven't previously noticed this property of the entity names, but I have noticed that replacing U+0000 with U+FFFD is rather unfortunate from the UTF-8 perspective.","m.mentions":{},"msgtype":"m.text"},"ts":1721033556201,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$igAzE3Pm5Std91Dw72C7ie_WMq-S937Li_BuzgASnMo"},
{"content":{"body":"The answer is wilful violation :)","m.mentions":{},"msgtype":"m.text"},"ts":1721033578781,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$X_LdQyivslnhNHh760aAkxTcYVIVLBkdOy9Cfje27Vo"},
{"content":{"body":"lynko: Does modifying the buffer in place really help? That is, don't you need an API that can report the content of a text nodes as multiple API chunks anyway? Once you have that, referring to static memory that contains the entity expansion is workable.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: Does modifying the buffer in place really help? That is, don't you need an API that can report the content of a text nodes as multiple API chunks anyway? Once you have that, referring to static memory that contains the entity expansion is workable.","m.mentions":{"user_ids":["@lynko:matrix.org"]},"msgtype":"m.text"},"ts":1721033677050,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$aCzHZ_8QLVDTYkJF2TWsYMmp6AjUfzZz11_W3tG1NFY"},
{"content":{"body":"lynko: Can your tree builder side usefully hold onto text nodes that point to source data? Won't that mean retaining the buffer space for all the tags at presumably high cost?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: Can your tree builder side usefully hold onto text nodes that point to source data? Won't that mean retaining the buffer space for all the tags at presumably high cost?","m.mentions":{"user_ids":["@lynko:matrix.org"]},"msgtype":"m.text"},"ts":1721033747855,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$ex89tNqv4bVjM3BQY_32UB48TKCFWdX4c1DbMCalVYU"},
{"content":{"body":"lynko: also, when entities resolve to shorter output, won't you have quadratic memmoves that defeat the benefit of avoiding copies?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: also, when entities resolve to shorter output, won't you have quadratic memmoves that defeat the benefit of avoiding copies?","m.mentions":{"user_ids":["@lynko:matrix.org"]},"msgtype":"m.text"},"ts":1721033855563,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$UCni_KO8ZMdzcp21j1gpILNTPeAZ4kRn01rNMLjeXk8"},
{"content":{"body":"> <@hsivonen:mozilla.org> lynko: Does modifying the buffer in place really help? That is, don't you need an API that can report the content of a text nodes as multiple API chunks anyway? Once you have that, referring to static memory that contains the entity expansion is workable.\n\nIf all I really want is decoded inline text, then I just want to compute that text. It's always a bonus not to have to find a new place to put it.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$aCzHZ_8QLVDTYkJF2TWsYMmp6AjUfzZz11_W3tG1NFY?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br><a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: Does modifying the buffer in place really help? That is, don't you need an API that can report the content of a text nodes as multiple API chunks anyway? Once you have that, referring to static memory that contains the entity expansion is workable.</blockquote></mx-reply>If all I really want is decoded inline text, then I just want to compute that text. It's always a bonus not to have to find a new place to put it.","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aCzHZ_8QLVDTYkJF2TWsYMmp6AjUfzZz11_W3tG1NFY"}},"msgtype":"m.text"},"ts":1721033941412,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$EE1ZkC2q4tN3-uGJpCYWdrIWlwBn29iVlMztg9EO-fI"},
{"content":{"body":"> <@hsivonen:mozilla.org> lynko: Can your tree builder side usefully hold onto text nodes that point to source data? Won't that mean retaining the buffer space for all the tags at presumably high cost?\n\nTags are 75% of a document in the worst case. I'll always have to store a tag's type (and attributes) somehow, so I just use a single string view and don't decode attributes, except for parsing validation. I'm not sure exactly how the tradeoff works out, but tag content is usually a much smaller portion... I'm guessing 10%. Another benefit besides memory locality is that this approach preserves tags' case, although I don't store views of the closing tag","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$ex89tNqv4bVjM3BQY_32UB48TKCFWdX4c1DbMCalVYU?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br><a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: Can your tree builder side usefully hold onto text nodes that point to source data? Won't that mean retaining the buffer space for all the tags at presumably high cost?</blockquote></mx-reply>Tags are 75% of a document in the worst case. I'll always have to store a tag's type (and attributes) somehow, so I just use a single string view and don't decode attributes, except for parsing validation. I'm not sure exactly how the tradeoff works out, but tag content is usually a much smaller portion... I'm guessing 10%. Another benefit besides memory locality is that this approach preserves tags' case, although I don't store views of the closing tag","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ex89tNqv4bVjM3BQY_32UB48TKCFWdX4c1DbMCalVYU"}},"msgtype":"m.text"},"ts":1721034128493,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$jBgi6rxM68rcBElZXX4RU6GsM6yGJuJUQ51fQF7FMss"},
{"content":{"body":"> <@hsivonen:mozilla.org> lynko: also, when entities resolve to shorter output, won't you have quadratic memmoves that defeat the benefit of avoiding copies?\n\nThis can be done in O(n) where n is the length of the text, and it was already O(n). Also it only matters for documents with extreme amounts of entity references","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UCni_KO8ZMdzcp21j1gpILNTPeAZ4kRn01rNMLjeXk8?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br><a href=\"https://matrix.to/#/@lynko:matrix.org\">lynko</a>: also, when entities resolve to shorter output, won't you have quadratic memmoves that defeat the benefit of avoiding copies?</blockquote></mx-reply>This can be done in O(n) where n is the length of the text, and it was already O(n). Also it only matters for documents with extreme amounts of entity references","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$UCni_KO8ZMdzcp21j1gpILNTPeAZ4kRn01rNMLjeXk8"}},"msgtype":"m.text"},"ts":1721034221483,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$gU5DLYrYWAjHtGlK3VGcTRvPxLCC0429eOLjomqBDWc"},
{"content":{"body":"I see. I'm looking forward to seeing the results with the willful violation. I don't expect us to un-spec the two entities that have been there for a long time, despite them being niche, though. At least not without a use counter.","m.mentions":{},"msgtype":"m.text"},"ts":1721034313697,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$aWwkqyzz2--3cnQponLBGB-cGL-l_rg60suVx-5I_Kw"},
{"content":{"body":"> <@hsivonen:mozilla.org> I see. I'm looking forward to seeing the results with the willful violation. I don't expect us to un-spec the two entities that have been there for a long time, despite them being niche, though. At least not without a use counter.\n\nNo no, I'm not suggesting U+FFFD should be changed. Too much momentum. And I wouldn't transmit HTML with nul bytes in it. This is for internal use, where I can optimize for correct input and retain control codes.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$aWwkqyzz2--3cnQponLBGB-cGL-l_rg60suVx-5I_Kw?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">@hsivonen:mozilla.org</a><br>I see. I&#39;m looking forward to seeing the results with the willful violation. I don&#39;t expect us to un-spec the two entities that have been there for a long time, despite them being niche, though. At least not without a use counter.</blockquote></mx-reply>No no, I'm not suggesting U+FFFD should be changed. Too much momentum. And I wouldn't transmit HTML with nul bytes in it. This is for internal use, where I can optimize for correct input and retain control codes.","m.mentions":{"user_ids":["@hsivonen:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aWwkqyzz2--3cnQponLBGB-cGL-l_rg60suVx-5I_Kw"}},"msgtype":"m.text"},"ts":1721034463189,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$LeDAr1DHtddccT7CT83sp6Rn3fNA4wju98Dpm8PZyCw"},
{"content":{"body":"Also note that parsers in browser engines store local names (of most elements and attributes) as atomized strings. It'd be interesting to see the memory and performance differences though.","m.mentions":{},"msgtype":"m.text"},"ts":1721034489958,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$vYMOM8rSvix10vTvrJmA8v3Ih2fHAmnvvsN4PquPeeM"},
{"content":{"body":"> <@annevk:matrix.org> Also note that parsers in browser engines store local names (of most elements and attributes) as atomized strings. It'd be interesting to see the memory and performance differences though.\n\nI doubt I could make a fair comparison. Browser engines have a lot more concerns than me, so they must have to make compromises of some sort. But you've given me a lot to think about. Short-string optimization and generating a new text storage buffer alongside the node array seems worth exploring.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$vYMOM8rSvix10vTvrJmA8v3Ih2fHAmnvvsN4PquPeeM?via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>Also note that parsers in browser engines store local names (of most elements and attributes) as atomized strings. It&#39;d be interesting to see the memory and performance differences though.</blockquote></mx-reply>I doubt I could make a fair comparison. Browser engines have a lot more concerns than me, so they must have to make compromises of some sort. But you've given me a lot to think about. Short-string optimization and generating a new text storage buffer alongside the node array seems worth exploring.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$vYMOM8rSvix10vTvrJmA8v3Ih2fHAmnvvsN4PquPeeM"}},"msgtype":"m.text"},"ts":1721034847831,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$22lETj-uLw565dsbPCB_LxAlNfPI8feGlLYKZGKk6jY"},
{"content":{"body":"Domenic: thanks, follow-up request: https://github.com/web-platform-tests/wpt/pull/47002","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: thanks, follow-up request: https://github.com/web-platform-tests/wpt/pull/47002","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1721034957607,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$n2Xd9fhaBurORoYLLKasa7v2hn8KRYtA2viNg-CvEuI"},
{"content":{"body":"One thing to notice is that if the input isn't held in memory, all significant text has to be copied no matter what. Hopefully a document is at least 90% significant. Standard tags only have to be scanned once to get their type. In place parsing is zero-copy, entity expansion is low-copy (guaranteed to be fewer copies than just copying all the significant text all the time), and entity expansion could be in-place except for the aforementioned entities.\n\nI think this is a legitimate use case for HTML that could broaden its applicability.","m.mentions":{},"msgtype":"m.text"},"ts":1721035758973,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$Z-bNdd1eEZtil3-Hk2fShgbUZ7_NIdrCHoqcLw-ESoA"},
{"content":{"body":"...Another thing to notice, which is a point against me, is that real-world documents are often heavily indented, easily over 50% insignificant whitespace...","m.mentions":{},"msgtype":"m.text"},"ts":1721036581319,"senderName":"lynko","senderId":"@lynko:matrix.org","id":"$IyjM5tqnCtpbn_mmY8MgvSmbfb2A1oNzfgFDEiCEOF8"},
{"content":{"body":"Hey, I'm going to propose some changes to how indirect `eval` and `new Function` work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on where their caller.\nRe-align `setTimeout`'s behaviour to `eval`'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I _think_ Safari) did when I tested it.\n\nIf anybody has opinions about it, please leave a comment on that GitHub issue :)","format":"org.matrix.custom.html","formatted_body":"<p>Hey, I'm going to propose some changes to how indirect <code>eval</code> and <code>new Function</code> work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on where their caller.<br>Re-align <code>setTimeout</code>'s behaviour to <code>eval</code>'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I <em>think</em> Safari) did when I tested it.</p>\n<p>If anybody has opinions about it, please leave a comment on that GitHub issue :)</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1721036857854,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$mFO0H36b7ew4HW-k3Azu0iPkq5OFewTijDvmUa5CTMQ"},
{"content":{"body":" * Hey, I'm going to propose some changes to how indirect `eval` and `new Function` work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on their caller.\nRe-align `setTimeout`'s behaviour to `eval`'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I _think_ Safari) did when I tested it.\n\nIf anybody has opinions about it, please leave a comment on that GitHub issue :)","format":"org.matrix.custom.html","formatted_body":" * <p>Hey, I'm going to propose some changes to how indirect <code>eval</code> and <code>new Function</code> work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on their caller.<br>Re-align <code>setTimeout</code>'s behaviour to <code>eval</code>'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I <em>think</em> Safari) did when I tested it.</p>\n<p>If anybody has opinions about it, please leave a comment on that GitHub issue :)</p>\n","m.mentions":{},"m.new_content":{"body":"Hey, I'm going to propose some changes to how indirect `eval` and `new Function` work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on their caller.\nRe-align `setTimeout`'s behaviour to `eval`'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I _think_ Safari) did when I tested it.\n\nIf anybody has opinions about it, please leave a comment on that GitHub issue :)","format":"org.matrix.custom.html","formatted_body":"<p>Hey, I'm going to propose some changes to how indirect <code>eval</code> and <code>new Function</code> work (https://github.com/tc39/ecma262/issues/3160, https://github.com/tc39/ecma262/pull/3374), so their behaviour only depends on their arguments and not on their caller.<br>Re-align <code>setTimeout</code>'s behaviour to <code>eval</code>'s behaviour will then need some changes to step 8.4.7 of https://html.spec.whatwg.org/#timer-initialisation-steps, aligning the HTML spec to what Chrome (and I <em>think</em> Safari) did when I tested it.</p>\n<p>If anybody has opinions about it, please leave a comment on that GitHub issue :)</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$mFO0H36b7ew4HW-k3Azu0iPkq5OFewTijDvmUa5CTMQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721036871516,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$zA1uroNnmSfpPQSCPhakxugHaMMfMaD-gYCbR19UxKw"},
{"content":{"body":"> <@annevk:matrix.org> akaster: I don't think there's an update on `ancestorOrigins`, but I think bz's concern around it exposing too much information still holds. There's talk about a header-based version of that feature that does a lot better in terms of information exposure: https://github.com/w3c/webappsec-fetch-metadata/issues/56\n\nHm. In that case, should I retract the request to discuss it at WHATNOT this Thursday? It sounds like not implementing it as Firefox does is probably the 'best' for user privacy until the other issues are worked out","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$pf3ObhwIA_2D_nSU_-vm-gCfPVSs8SHeA5yS0QwOO3Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: I don't think there's an update on <code>ancestorOrigins</code>, but I think bz's concern around it exposing too much information still holds. There's talk about a header-based version of that feature that does a lot better in terms of information exposure: https://github.com/w3c/webappsec-fetch-metadata/issues/56</blockquote></mx-reply>Hm. In that case, should I retract the request to discuss it at WHATNOT this Thursday? It sounds like not implementing it as Firefox does is probably the 'best' for user privacy until the other issues are worked out","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$pf3ObhwIA_2D_nSU_-vm-gCfPVSs8SHeA5yS0QwOO3Y"}},"msgtype":"m.text"},"ts":1721041302805,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$nie4kvVxCnhiR7Wu8m9uSB-YtejS8einHHNf0eDU5bU"},
{"content":{"body":"akaster: seems fine to bring up to see if anyone is interested in working on it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@akaster:serenityos.org\">akaster</a>: seems fine to bring up to see if anyone is interested in working on it","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"msgtype":"m.text"},"ts":1721041713789,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$MulH-Jc5cBpM8eDgLDjKIZtK1QhhhNbRrss-JA7mvYo"},
{"content":{"body":"nicolo-ribaudo: you don't actually say what Safari does","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: you don't actually say what Safari does","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"msgtype":"m.text"},"ts":1721041992401,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sAkAjSkvZ17NNT17zWphqyfq5JVG_2r5OeKqvPOkxYo"},
{"content":{"body":"I think safari uses the base URL of the entrypoint of the module graph. It's the only way I can explain the behaviour I see in  https://github.com/nicolo-ribaudo/function-dynamic-scoping?tab=readme-ov-file#notes","m.relates_to":{"event_id":"$sAkAjSkvZ17NNT17zWphqyfq5JVG_2r5OeKqvPOkxYo","is_falling_back":true,"m.in_reply_to":{"event_id":"$sAkAjSkvZ17NNT17zWphqyfq5JVG_2r5OeKqvPOkxYo"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1721042745902,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$09VRnO4gLxTCjHMJgpMcqs12Ngnl1fLZsqZNFX9v-uM"},
{"content":{"body":" * I think safari uses the base URL of the entrypoint of the module graph for `eval`/`new Function`, and the base URL of the realm/document for `setTimeout`. It's the only way I can explain the behaviour I see in  https://github.com/nicolo-ribaudo/function-dynamic-scoping?tab=readme-ov-file#notes","format":"org.matrix.custom.html","formatted_body":" * I think safari uses the base URL of the entrypoint of the module graph for <code>eval</code>/<code>new Function</code>, and the base URL of the realm/document for <code>setTimeout</code>. It's the only way I can explain the behaviour I see in  https://github.com/nicolo-ribaudo/function-dynamic-scoping?tab=readme-ov-file#notes","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.new_content":{"body":"I think safari uses the base URL of the entrypoint of the module graph for `eval`/`new Function`, and the base URL of the realm/document for `setTimeout`. It's the only way I can explain the behaviour I see in  https://github.com/nicolo-ribaudo/function-dynamic-scoping?tab=readme-ov-file#notes","format":"org.matrix.custom.html","formatted_body":"I think safari uses the base URL of the entrypoint of the module graph for <code>eval</code>/<code>new Function</code>, and the base URL of the realm/document for <code>setTimeout</code>. It's the only way I can explain the behaviour I see in  https://github.com/nicolo-ribaudo/function-dynamic-scoping?tab=readme-ov-file#notes","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$09VRnO4gLxTCjHMJgpMcqs12Ngnl1fLZsqZNFX9v-uM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721043520879,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$KhhyPlGO4y-3hU_o9bLCnyeqxH8V3ksHEzUybNSImHA"},
{"content":{"body":"Oh wow.","m.mentions":{},"m.relates_to":{"event_id":"$sAkAjSkvZ17NNT17zWphqyfq5JVG_2r5OeKqvPOkxYo","is_falling_back":true,"m.in_reply_to":{"event_id":"$09VRnO4gLxTCjHMJgpMcqs12Ngnl1fLZsqZNFX9v-uM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1721043567719,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$axHMF31XwLpYeDIhFWvMjjyyo7duYi4G8ffZkq0gwIQ"},
{"content":{"body":"Seems to be tracked in https://github.com/whatwg/html/issues/10478 btw","m.mentions":{},"m.relates_to":{"event_id":"$yvGl5lRGQo37VIrIN-6SQtOWs15AkNbvJJT1UmxPnX8","is_falling_back":true,"m.in_reply_to":{"event_id":"$yvGl5lRGQo37VIrIN-6SQtOWs15AkNbvJJT1UmxPnX8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1721059943782,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$qrhd4sacrGoZ3E82NZy8F7BpF4dEL6dZxvSvcEUwQ2Y"},
{"content":{"body":"Der weltweit fÃ¼hrende Dating-\nAssistent\n\nhttps://www1.afego.life/v8L8OE","msgtype":"m.text"},"ts":1721076629060,"senderName":"Wild rose","senderId":"@memefi:matrix.org","id":"$WeDbh1Fy73N6gZ6MQDR8uw33p3USHKxS4yrORb6sV2Y"}
]