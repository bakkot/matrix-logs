[
{"content":{"body":"jarhar: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html times out in WebKit because (as far as I can see) the `load` event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a>: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html times out in WebKit because (as far as I can see) the <code>load</code> event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","msgtype":"m.text"},"ts":1695089849580,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8"},
{"content":{"body":" * jarhar: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html test times out in WebKit because (as far as I can see) the `load` event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a>: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html test times out in WebKit because (as far as I can see) the <code>load</code> event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","m.new_content":{"body":"jarhar: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html test times out in WebKit because (as far as I can see) the `load` event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jarhar:matrix.org\">jarhar</a>: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html test times out in WebKit because (as far as I can see) the <code>load</code> event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?","msgtype":"m.text"},"m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695089858428,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$DvfhDr0tZ4mdVnBkT0UXINiMIqCOS4-LOXFO2gbRmiw"},
{"content":{"body":"hmm, the fact that im not seeing a 404 page in the iframe makes me wonder if webkit legitimately fails this test","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090271328,"senderName":"jarhar","senderId":"@jarhar:matrix.org","id":"$sdPENTwsN9Xf9ciB3b0PTrMPqm9tjRP8pBpcVYZ6s7M"},
{"content":{"body":"i wrote this test in response to one of many regression bugs that were filed when i did a refactor to form submission","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$sdPENTwsN9Xf9ciB3b0PTrMPqm9tjRP8pBpcVYZ6s7M"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090321106,"senderName":"jarhar","senderId":"@jarhar:matrix.org","id":"$P1zl2BPRmzwy4yLvBAemwVrHkJ5xxzaqRc5KZ9WoR_8"},
{"content":{"body":"i wrote it here: https://chromium-review.googlesource.com/c/chromium/src/+/1983547","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$P1zl2BPRmzwy4yLvBAemwVrHkJ5xxzaqRc5KZ9WoR_8"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090377700,"senderName":"jarhar","senderId":"@jarhar:matrix.org","id":"$H9xkiXxn9wtM_lpmDvwLxYpQdEqQm7S1enJqdbaFBfM"},
{"content":{"body":"I see","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$H9xkiXxn9wtM_lpmDvwLxYpQdEqQm7S1enJqdbaFBfM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090391581,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$RwuygON_o21potdeKP1KHKs6_IhD3smaL6wnXF96hnc"},
{"content":{"body":"lol this was really complicated, but i suppose you could try implementing this patch in webkit to see if it makes the test pass","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$RwuygON_o21potdeKP1KHKs6_IhD3smaL6wnXF96hnc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090472067,"senderName":"jarhar","senderId":"@jarhar:matrix.org","id":"$V5cHSGXebNKMTte6f5CA1LQJntUDvyCxXAVo8lyAjlE"},
{"content":{"body":"Yeah I'll try it I guess","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$V5cHSGXebNKMTte6f5CA1LQJntUDvyCxXAVo8lyAjlE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090550587,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$QWZbrb_jdUAeyG2y59aNkBZy_uhluOCSHyreGRPj-Bc"},
{"content":{"body":"This is the only complete fail in WebKit in https://wpt.fyi/results/html/semantics/forms/the-button-element — so, would be nice to make it all go green","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$QWZbrb_jdUAeyG2y59aNkBZy_uhluOCSHyreGRPj-Bc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090729980,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$cs_KFXau74Hqwi_BrJr3VFqLLmE4goEgz_hNl1izK3Y"},
{"content":{"body":"that said, there is also https://wpt.fyi/results/html/semantics/forms/the-button-element/button-click-submits.html, which has a test that fails both in Blink and WebKit (but not in Gecko)","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$cs_KFXau74Hqwi_BrJr3VFqLLmE4goEgz_hNl1izK3Y"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695090786712,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$VA0OpVSYfY8Q8BHznxL0JS9Bj3KSpjArUIfAnRoQq78"},
{"content":{"body":"OK, ported that patch but in WebKit, still timing out anyway.","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$VA0OpVSYfY8Q8BHznxL0JS9Bj3KSpjArUIfAnRoQq78"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695094179868,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$4UbvaQ22WGpUCGd4n4jQ46ap0B-atnVp35BEqEUwtnk"},
{"content":{"body":"so I guess for now I’ll put this test on the back burner and look at it more again some time later","m.relates_to":{"event_id":"$-RJv7jK2oLFsP7unV9qluqfWqfbDNYVbj5Lyg8TO8l8","is_falling_back":true,"m.in_reply_to":{"event_id":"$4UbvaQ22WGpUCGd4n4jQ46ap0B-atnVp35BEqEUwtnk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1695094211881,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$qvQmU5TA6_UymTDlpNXA4tJuk-deOWdNk9HeeO0vjNI"},
{"content":{"body":"Domenic: can you review the encoding-parse a URL refactor?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: can you review the encoding-parse a URL refactor?","msgtype":"m.text"},"ts":1695106390455,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$EG5mFrlmRNfHqQJDydaR28iQUK-7X9fhlsqt_kiE9v8"},
{"content":{"body":"Would be nice to unblock some of the follow-up work","msgtype":"m.text"},"ts":1695106406420,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pGjsiVDh7e0lDYLOzumMCiQyOVTHattRAIwYhUlAKOY"},
{"content":{"body":"zcorpan: regarding the media/supports thing, I felt it was a bit inconsistent that in CSS those are separate @ rules and in the link element they are both folded into the `media` attribute. perhaps there's a more elegant solution?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: regarding the media/supports thing, I felt it was a bit inconsistent that in CSS those are separate @ rules and in the link element they are both folded into the <code>media</code> attribute. perhaps there's a more elegant solution?","msgtype":"m.text"},"ts":1695108924687,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$cnVrGKpW7E0VNrc9n3yDxnrsKvYtx1MmK3syZVopLFo"},
{"content":{"body":"Noam Rosenthal: perhaps. We want it to fail closed, so that the stylesheet isn't applied in legacy browsers. (But maybe the importance of this property is debatable, since it's temporary and we have faster update cycles now compared to, say, a decade ago)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: perhaps. We want it to fail closed, so that the stylesheet isn't applied in legacy browsers. (But maybe the importance of this property is debatable, since it's temporary and we have faster update cycles now compared to, say, a decade ago)","msgtype":"m.text"},"ts":1695109016169,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$RoAUa4_JkTWbp_KHQp8BrC2NtSaGjWT_1ZFfjrHnF8U"},
{"content":{"body":"... I would expect it to be in a separate cssSupports attribute, and deal with legacy in a way that's a bit more consistent with the meaning of the attributes","msgtype":"m.text"},"ts":1695109054820,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$9RKXrGFzLzRCRxUzfG-vpM4zACyaiP-rikU-c0eOnB4"},
{"content":{"body":"Ways to fail closed other than stuffing it in `media` (and still work in `head`): change `rel` to something else (seems not so elegant long term), use `type` attribute (should ideally be possible to not have to write `text/css` since we made that optional)","format":"org.matrix.custom.html","formatted_body":"Ways to fail closed other than stuffing it in <code>media</code> (and still work in <code>head</code>): change <code>rel</code> to something else (seems not so elegant long term), use <code>type</code> attribute (should ideally be possible to not have to write <code>text/css</code> since we made that optional)","msgtype":"m.text"},"ts":1695109165425,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$tQVLYy1Kr5cOaEht6gr-1rtWi8D0OUMPafAdhcae1Zs"},
{"content":{"body":"Maybe we can use a new attribute and in the transition period people can use `media=\"not all\"` and change that with script (or use other rel/type to avoid the download)","format":"org.matrix.custom.html","formatted_body":"Maybe we can use a new attribute and in the transition period people can use <code>media=\"not all\"</code> and change that with script (or use other rel/type to avoid the download)","msgtype":"m.text"},"ts":1695109297425,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$6HUm_WhK_XFHmROME5AQj2gdRR3vKNSX6KV4xuP01R8"},
{"content":{"body":"For now there is a convenient way to do this:\n```\n<style>\n   @import url(\"...\") supports(...);\n</style>\n```\n\nI wonder if making the media attribute inconsistent is worth it","format":"org.matrix.custom.html","formatted_body":"<p>For now there is a convenient way to do this:</p>\n<pre><code>&lt;style&gt;\n   @import url(\"...\") supports(...);\n&lt;/style&gt;\n</code></pre>\n<p>I wonder if making the media attribute inconsistent is worth it</p>\n","msgtype":"m.text"},"ts":1695109302851,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$xcdmRzoKI_EEkgm1QmqnG7l0a6vQHp0Cn74Aw1K_upw"},
{"content":{"body":"good point","msgtype":"m.text"},"ts":1695109321915,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$cs59yUKsEQdhGTtg5Sve8J_618QtAyoavSL8mqMTlkE"},
{"content":{"body":"I didn't quite get if adding this as a link provides anything material","msgtype":"m.text"},"ts":1695109326442,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$k6vadarD3WMiS64pyN-t492OlrfkDO4o_s8L8UCkhoM"},
{"content":{"body":"It might be loaded earlier by the speculative parser. Not sure if all browsers speculatively load `@import`s","format":"org.matrix.custom.html","formatted_body":"It might be loaded earlier by the speculative parser. Not sure if all browsers speculatively load <code>@import</code>s","msgtype":"m.text"},"ts":1695109367456,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$JOZqC039nTlGZ9Y7ZOFxbDwjvvbg-sudZ4F0pehJ0YE"},
{"content":{"body":"they don't in chrome AFAIK","msgtype":"m.text"},"ts":1695109383905,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$PxKO1GULf8FE-pLXjvfI9OLNYBjrbwmA3sRKp3__PpU"},
{"content":{"body":"I think adding a `rel=css` or `rel=style` which can take `layer` and `cssSupports` attributes is not that bad, and when everyone supports layers we can make them aliases of each other","format":"org.matrix.custom.html","formatted_body":"I think adding a <code>rel=css</code> or <code>rel=style</code> which can take <code>layer</code> and <code>cssSupports</code> attributes is not that bad, and when everyone supports layers we can make them aliases of each other","msgtype":"m.text"},"ts":1695109512923,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$qbbkyOPSfbTG-caSAkoIcYfib_D4hbjU3Sj46nD82aU"},
{"content":{"body":"I mean it's not that pretty but it's at least straightforward in a way","msgtype":"m.text"},"ts":1695109616364,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$JZTxNeBa0KL1_AVIKaRmXyS4r24BHpUdTh_WlvmIJZ4"},
{"content":{"body":"I don't like adding alias `rel`s, but I'm warming up to just adding `supports` attribute and let it fail open in legacy. Use `style` element or script hack if you need to fail closed","format":"org.matrix.custom.html","formatted_body":"I don't like adding alias <code>rel</code>s, but I'm warming up to just adding <code>supports</code> attribute and let it fail open in legacy. Use <code>style</code> element or script hack if you need to fail closed","msgtype":"m.text"},"ts":1695109660905,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$YTkRfhOelZL1tkX9izxWyzx25-BHZxVHri9qw3Ukpug"},
{"content":{"body":"The linked stylesheet can repeat the `@supports` too if you can control what it contains","format":"org.matrix.custom.html","formatted_body":"The linked stylesheet can repeat the <code>@supports</code> too if you can control what it contains","msgtype":"m.text"},"ts":1695109709212,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$zPL5IqKFzblNPaCc6y2PxwRunBSbPj5jo2C0cRR8Hp0"},
{"content":{"body":"yea that's probably safer, you use the supports attribute as an optimization to avoid loading the link at all rather than as a way to not apply the CSS","msgtype":"m.text"},"ts":1695109758371,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$x182cGiX3wZd6wPT-A90O0sisX3ee5FhKMqUK43G_9M"},
{"content":{"body":"At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\nBut then later has this non-normative note that says this:\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\nSo, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).","format":"org.matrix.custom.html","formatted_body":"<p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em><br>But then later has this non-normative note that says this:<br><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em><br>So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1695110129145,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$dobEkCdtBDI37abVdZ27vmF1--QUS27ib8ZzsVSlRJY"},
{"content":{"body":" * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).","format":"org.matrix.custom.html","formatted_body":" * <p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).</p>\n","m.new_content":{"body":"At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).","format":"org.matrix.custom.html","formatted_body":"<p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dobEkCdtBDI37abVdZ27vmF1--QUS27ib8ZzsVSlRJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695110145705,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$5Zr3VXZ0Q-peZz9ftj3YEmV_KIcQcf8OnqJgjFW1wKo"},
{"content":{"body":" * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).\n\n(There’s also a grammar error in the note.)","format":"org.matrix.custom.html","formatted_body":" * <p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).</p>\n<p>(There’s also a grammar error in the note.)</p>\n","m.new_content":{"body":"At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).\n\n(There’s also a grammar error in the note.)","format":"org.matrix.custom.html","formatted_body":"<p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).</p>\n<p>(There’s also a grammar error in the note.)</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dobEkCdtBDI37abVdZ27vmF1--QUS27ib8ZzsVSlRJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695110186186,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XsSFtFvuxJsjjuK7uupqs_-kkMqXAFZQVxmLCHPimQc"},
{"content":{"body":"The HTML spec text doesn’t explicitly state that the `color-scheme` value can be an ordered list of keywords — instead it just says, “The value must be a string that matches the syntax for the CSS '[`color-scheme`](https://drafts.csswg.org/css-color-adjust/#color-scheme-prop)' property value” — where `color-scheme` is a link/reference to the normative CSS definition for the property value (which says the value is _“the keyword `normal`, or an ordered list of specified color scheme keywords”_","format":"org.matrix.custom.html","formatted_body":"The HTML spec text doesn’t explicitly state that the <code>color-scheme</code> value can be an ordered list of keywords —&nbsp;instead it just says, “The value must be a string that matches the syntax for the CSS '<a href=\"https://drafts.csswg.org/css-color-adjust/#color-scheme-prop\"><code>color-scheme</code></a>' property value” —&nbsp;where <code>color-scheme</code> is a link/reference to the normative CSS definition for the property value (which says the value is <em>“the keyword <code>normal</code>, or an ordered list of specified color scheme keywords”</em>","msgtype":"m.text"},"ts":1695110483166,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$C3nU43tf4UVkIDqvEamchmR4N61zQ06vgzGt1-uzqs8"},
{"content":{"body":"So, maybe that note about using using multiple elements was written without an understanding that the value could be a _list_ of keywords rather than a single keyword?\n\nRegardless, the note seems wrong.","format":"org.matrix.custom.html","formatted_body":"<p>So, maybe that note about using using multiple elements was written without an understanding that the value could be a <em>list</em> of keywords rather than a single keyword?</p>\n<p>Regardless, the note seems wrong.</p>\n","msgtype":"m.text"},"ts":1695110543706,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$z2erEe4V7NXZ2cZsY_Oe-rW6L2t92hFiLrTHYIDa-gQ"},
{"content":{"body":"Noam Rosenthal: commented in https://github.com/whatwg/html/issues/7540#issuecomment-1725024079","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: commented in https://github.com/whatwg/html/issues/7540#issuecomment-1725024079","msgtype":"m.text"},"ts":1695110970082,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$-fEWALiKzzPxSyQK17zYy9qxEzwOMju_WztHj6QZM8U"},
{"content":{"body":"sideshowbarker: if you use a list and you use an unsupported keyword, isn't the whole list ignored?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: if you use a list and you use an unsupported keyword, isn't the whole list ignored?","msgtype":"m.text"},"ts":1695111025571,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$LVeuMm7vafL1kGTf90cOx3oL4NgO4Nl7haqzZKzvsSk"},
{"content":{"body":" * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple `<meta name=color-scheme>` elements is OK (or even sort of a best practice).\n\n(There’s also a grammar error in the note.)","format":"org.matrix.custom.html","formatted_body":" * <p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple <code>&lt;meta name=color-scheme&gt;</code> elements is OK (or even sort of a best practice).</p>\n<p>(There’s also a grammar error in the note.)</p>\n","m.new_content":{"body":"At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:\n\n> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._\n\nBut then later has this non-normative note that says this:\n\n> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._\n\nSo, that note seems to conflict with the normative requirements — by implying that using multiple `<meta name=color-scheme>` elements is OK (or even sort of a best practice).\n\n(There’s also a grammar error in the note.)","format":"org.matrix.custom.html","formatted_body":"<p>At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:</p>\n<blockquote>\n<p><em>There must not be more than one <code>meta</code> element with its <code>name</code> attribute value set to an ASCII case-insensitive match for <code>color-scheme</code> per document.</em></p>\n</blockquote>\n<p>But then later has this non-normative note that says this:</p>\n<blockquote>\n<p><em>Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values.</em></p>\n</blockquote>\n<p>So, that note seems to conflict with the normative requirements — by implying that using multiple <code>&lt;meta name=color-scheme&gt;</code> elements is OK (or even sort of a best practice).</p>\n<p>(There’s also a grammar error in the note.)</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dobEkCdtBDI37abVdZ27vmF1--QUS27ib8ZzsVSlRJY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695111028584,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$FTrjxiHQGT1xE4FX9CjgFkeYd9geO8JAsq81SJdPL14"},
{"content":{"body":" * The HTML spec text doesn’t explicitly state that the `color-scheme` value can be an ordered list of keywords — instead it just says, “The value must be a string that matches the syntax for the CSS '[`color-scheme`](https://drafts.csswg.org/css-color-adjust/#color-scheme-prop)' property value” — where `color-scheme` is a link/reference to the normative CSS definition for the property value (which says the value is _“the keyword `normal`, or an ordered list of specified color scheme keywords”_)","format":"org.matrix.custom.html","formatted_body":" * The HTML spec text doesn’t explicitly state that the <code>color-scheme</code> value can be an ordered list of keywords —&nbsp;instead it just says, “The value must be a string that matches the syntax for the CSS '<a href=\"https://drafts.csswg.org/css-color-adjust/#color-scheme-prop\"><code>color-scheme</code></a>' property value” —&nbsp;where <code>color-scheme</code> is a link/reference to the normative CSS definition for the property value (which says the value is <em>“the keyword <code>normal</code>, or an ordered list of specified color scheme keywords”</em>)","m.new_content":{"body":"The HTML spec text doesn’t explicitly state that the `color-scheme` value can be an ordered list of keywords — instead it just says, “The value must be a string that matches the syntax for the CSS '[`color-scheme`](https://drafts.csswg.org/css-color-adjust/#color-scheme-prop)' property value” — where `color-scheme` is a link/reference to the normative CSS definition for the property value (which says the value is _“the keyword `normal`, or an ordered list of specified color scheme keywords”_)","format":"org.matrix.custom.html","formatted_body":"The HTML spec text doesn’t explicitly state that the <code>color-scheme</code> value can be an ordered list of keywords —&nbsp;instead it just says, “The value must be a string that matches the syntax for the CSS '<a href=\"https://drafts.csswg.org/css-color-adjust/#color-scheme-prop\"><code>color-scheme</code></a>' property value” —&nbsp;where <code>color-scheme</code> is a link/reference to the normative CSS definition for the property value (which says the value is <em>“the keyword <code>normal</code>, or an ordered list of specified color scheme keywords”</em>)","msgtype":"m.text"},"m.relates_to":{"event_id":"$C3nU43tf4UVkIDqvEamchmR4N61zQ06vgzGt1-uzqs8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695111060491,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oATCqYi1OJPOToRyxOIa35q047tzIq8uAqnErRGPHkQ"},
{"content":{"body":"> <@zcorpan:mozilla.org> sideshowbarker: if you use a list and you use an unsupported keyword, isn't the whole list ignored?\n\nNot sure. I think it depends on what the CSS parser does and what the CSS spec requires UAs to do","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$LVeuMm7vafL1kGTf90cOx3oL4NgO4Nl7haqzZKzvsSk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: if you use a list and you use an unsupported keyword, isn't the whole list ignored?</blockquote></mx-reply>Not sure. I think it depends on what the CSS parser does and what the CSS spec requires UAs to do","m.relates_to":{"m.in_reply_to":{"event_id":"$LVeuMm7vafL1kGTf90cOx3oL4NgO4Nl7haqzZKzvsSk"}},"msgtype":"m.text"},"ts":1695111134353,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$U6j1mHSnLD2cwSgvokJk32fbzCxKX9LbprowTmscMWM"},
{"content":{"body":"oh no, the grammar allows custom-ident","msgtype":"m.text"},"ts":1695111144560,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$he_SdQIRzbI1qcQEjBiXxwq4gL8OG9kyAi2ymCgSMBQ"},
{"content":{"body":"so parsing would only fail if you use e.g. a function. which seems unlikely to be added, so I think we can just remove the note","msgtype":"m.text"},"ts":1695111435777,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$0aG3rf7eF9NIwpJKtUtuFq_k5BZrrkQewoW7nzXNasE"},
{"content":{"body":"> <@zcorpan:mozilla.org> so parsing would only fail if you use e.g. a function. which seems unlikely to be added, so I think we can just remove the note\n\nOK, I reckon I’ll open a PR","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$0aG3rf7eF9NIwpJKtUtuFq_k5BZrrkQewoW7nzXNasE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br>so parsing would only fail if you use e.g. a function. which seems unlikely to be added, so I think we can just remove the note</blockquote></mx-reply>OK, I reckon I’ll open a PR","m.relates_to":{"m.in_reply_to":{"event_id":"$0aG3rf7eF9NIwpJKtUtuFq_k5BZrrkQewoW7nzXNasE"}},"msgtype":"m.text"},"ts":1695111527656,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$R7eJtSYnDB8RPAJ0WEG3OfzRK8GAGXh3jjDGjIQhJJk"},
{"content":{"body":"maybe even the processing could stop after the first meta element even if it fails, but also, if the current processing is implemented already, not worth it to shake","msgtype":"m.text"},"ts":1695111563849,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$GGPymtu8s7EXswBwAR7evnQ3MFKvwjcb6KoGvjWQrUc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1695111829225,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$toEmOSNf52LMYDB169VBDlOow4KLxv2n5HWv0h-n028"},
{"content":{"body":"zcorpan: another option for backwards compat if we really want the link element, is to have a new attribute like `cssConditions` or so that can accept a `@media ... @supports` style syntax and overrides `media`. So you use `media=\"not all\"` like you suggested before, and in browsers that supports this attribute you'd get the media+supports check (plus whatever check we allow in the future)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: another option for backwards compat if we really want the link element, is to have a new attribute like <code>cssConditions</code> or so that can accept a <code>@media ... @supports</code> style syntax and overrides <code>media</code>. So you use <code>media=\"not all\"</code> like you suggested before, and in browsers that supports this attribute you'd get the media+supports check (plus whatever check we allow in the future)","msgtype":"m.text"},"ts":1695112987824,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$N61Z4vPLDe09A3RzvoSytvgeRffaA1kSWH4m6uyi5FQ"},
{"content":{"body":"Noam Rosenthal: interesting idea. personally I prefer the html attribute syntax","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: interesting idea. personally I prefer the html attribute syntax","msgtype":"m.text"},"ts":1695113169885,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$SaHoSpw8eTZnetfZu53iVA5q0uPJ_LYH_GCrRTceWm0"},
{"content":{"body":"also would be surprising that `media` is ignored here:\n```html\n<link rel=stylesheet cssconditions=\"supports(at-rule(@scope))\" media=\"print\">\n```","format":"org.matrix.custom.html","formatted_body":"<p>also would be surprising that <code>media</code> is ignored here:</p>\n<pre><code class=\"language-html\">&lt;link rel=stylesheet cssconditions=\"supports(at-rule(@scope))\" media=\"print\"&gt;\n</code></pre>\n","msgtype":"m.text"},"ts":1695113255032,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$g0Y6g9HDToYATEaSt6e2HIhISQv8UUCd8qRnmkAn8XA"},
{"content":{"body":"we can ignore it only if `cssconditions` contains media","format":"org.matrix.custom.html","formatted_body":"we can ignore it only if <code>cssconditions</code> contains media","msgtype":"m.text"},"ts":1695113277636,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$hzMfLpQgnIuY4jn-SmM2ZyhFvJYPFLKMgADgzpi5bgM"},
{"content":{"body":" * we can choose ignore it only if `cssconditions` contains media","format":"org.matrix.custom.html","formatted_body":" * we can choose ignore it only if <code>cssconditions</code> contains media","m.new_content":{"body":"we can choose ignore it only if `cssconditions` contains media","format":"org.matrix.custom.html","formatted_body":"we can choose ignore it only if <code>cssconditions</code> contains media","msgtype":"m.text"},"m.relates_to":{"event_id":"$hzMfLpQgnIuY4jn-SmM2ZyhFvJYPFLKMgADgzpi5bgM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695113285184,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$62tHmN8ApoDdbd3eDUl-eh72u5Eej1It_-ZTHO2Hdqk"},
{"content":{"body":"seems more convoluted to explain than `supports=\"\"`","format":"org.matrix.custom.html","formatted_body":"seems more convoluted to explain than <code>supports=\"\"</code>","msgtype":"m.text"},"ts":1695113339240,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$J1I7g4yft_KQGPKBpjD5dwj04el-VJL50TmuAmjGCKA"},
{"content":{"body":"+ more typing","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>more typing</li>\n</ul>\n","msgtype":"m.text"},"ts":1695113367680,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$aghLp84sWZ25T0jXLyjcd5rPp0-IWGX5_IGV762VCPg"},
{"content":{"body":" * plus more typing","m.new_content":{"body":"plus more typing","msgtype":"m.text"},"m.relates_to":{"event_id":"$aghLp84sWZ25T0jXLyjcd5rPp0-IWGX5_IGV762VCPg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1695113390041,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$FjAcpKgulnr0phedWSMIXKuihh3xZK6xjeaVPZuEhTQ"},
{"content":{"body":"(didn't know starting a line with + made a bullet list)","msgtype":"m.text"},"ts":1695113407002,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$qfOn5onZaoWdTzAmHl1dodYPEL81WbrjUdo-CcxXcMk"},
{"content":{"body":"sure, but also has some pros as it lets us use the link element earlier","msgtype":"m.text"},"ts":1695113420320,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$mXAh0K4wIJYnL57Z1pwWj6ot9kUWl_z8DDzbnyogiEY"},
{"content":{"body":"not sure if it's worth it but thought I'd try to bring an alternative","msgtype":"m.text"},"ts":1695113439558,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ge_4rpRIyhizo9DzDggPmIx4C6_FaUs0RMaMNKHqock"},
{"content":{"body":"Maybe we can solve that socially. have a comment in the spec for import conditions to also change the link element","msgtype":"m.text"},"ts":1695113578813,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$h3g5uhwzVp0DvdptVxc8w5-W1eUpH7q14iOYaxvZ9v4"},
{"content":{"body":"I don't follow :)","msgtype":"m.text"},"ts":1695113773824,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$mGh4VxBfWkEg0gB8W1DZH6quqDaVaS0-nMKbLOWXcMw"},
{"content":{"body":"Noam Rosenthal: you said \" it lets us use the link element earlier\", but that's only true if `@import` gains a new feature first, instead of the `link` element gaining that feature first, or they gain it at the same time","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: you said \" it lets us use the link element earlier\", but that's only true if <code>@import</code> gains a new feature first, instead of the <code>link</code> element gaining that feature first, or they gain it at the same time","msgtype":"m.text"},"ts":1695114628888,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$RZ7ZYy5oZ5tDm4m2yVezCOs0_lHqerEzGU00-AMFOBc"},
{"content":{"body":"zcorpan: gotcha, yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: gotcha, yes","msgtype":"m.text"},"ts":1695114705949,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$5mFMiJ6Pm5msGEWcFNCxIDp6i03TLjtfGOOiy3mYw2M"}
]