[
{"content":{"body":"> <@jakea:matrix.org> hsivonen: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier\n\nThanks. I'll call in.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$9bMZOj9x3BGlhXtDzOLhcdiRsQEb0vPaqb1gCCSv9-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jakea:matrix.org\">@jakea:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier</blockquote></mx-reply>Thanks. I'll call in.","m.relates_to":{"m.in_reply_to":{"event_id":"$9bMZOj9x3BGlhXtDzOLhcdiRsQEb0vPaqb1gCCSv9-E"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jakea:matrix.org> hsivonen: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier\n\nThanks. I'll call in.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$9bMZOj9x3BGlhXtDzOLhcdiRsQEb0vPaqb1gCCSv9-E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jakea:matrix.org\">@jakea:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier</blockquote></mx-reply>Thanks. I'll call in.","mimetype":"text/html"}]},"ts":1663129783342,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$OGh1Al-nEz2Emd11Wv0CQ9keflGnRjkArVBUk7yOzG0"},
{"content":{"body":"Hi! I have a question regarding modules imports.\nWhen you dynamically import a module that is already in the modules map, does it yield to the event loop? My reading of the spec is \"no\", because it schedules a task to continue the import only when it performs an actual fetch, but both Firefox and Chrome seem to yield. They only settle the dynamic import promise in the current promise tasks queue if the import specifier is malformed.","msgtype":"m.text"},"ts":1663145146503,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$HkKVioILRwyx-uiXmfHXwSK84a2zg7kM1GraLi1GfLM"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#hostimportmoduledynamically(referencingscriptormodule,-modulerequest,-promisecapability) - the async returning doesn't seem particularly well integrated with the event loop","msgtype":"m.text","org.matrix.msc1767.text":"https://html.spec.whatwg.org/multipage/webappapis.html#hostimportmoduledynamically(referencingscriptormodule,-modulerequest,-promisecapability) - the async returning doesn't seem particularly well integrated with the event loop"},"ts":1663145479464,"senderName":"Ms2ger ðŸ’‰ðŸ’‰","senderId":"@ms2ger:igalia.com","id":"$23fUhnMN3RpFbV85HysSqfUxYf1ZtZIaXzuN6NkBhRs"},
{"content":{"body":"Right, I'm removing it in https://github.com/whatwg/html/pull/8264 and I'm not 100% sure that I got that part correctly.","msgtype":"m.text"},"ts":1663145860137,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$3xgItrLJ639xxUdFyzUUsAkgkIUwfigYq-2k9b6fS30"},
{"content":{"body":"What mechanism makes the document.write in https://github.com/web-platform-tests/wpt/blob/master/html/browsers/browsing-the-web/navigating-across-documents/010.html not interfere with the load of href.html?","msgtype":"m.text","org.matrix.msc1767.text":"What mechanism makes the document.write in https://github.com/web-platform-tests/wpt/blob/master/html/browsers/browsing-the-web/navigating-across-documents/010.html not interfere with the load of href.html?"},"ts":1663152308111,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$rosx7jJNtiKbOt7mUCBWNXhAZlK2uRXSr4k_8SvhRAg"},
{"content":{"body":"in Chrome that is","msgtype":"m.text","org.matrix.msc1767.text":"in Chrome that is"},"ts":1663152315000,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$Rmw4b-pG_Tnh5010M9BUF39yeVdAKSnL90342iRYIus"},
{"content":{"body":"In Firefox currently, the mechanism is that the about:blank isn't the initial about:blank anymore, so the navigation does not reuse the inner window, so the `document.write` happens on the old (about:blank) document.","format":"org.matrix.custom.html","formatted_body":"In Firefox currently, the mechanism is that the about:blank isn't the initial about:blank anymore, so the navigation does not reuse the inner window, so the <code>document.write</code> happens on the old (about:blank) document.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"In Firefox currently, the mechanism is that the about:blank isn't the initial about:blank anymore, so the navigation does not reuse the inner window, so the `document.write` happens on the old (about:blank) document.","mimetype":"text/plain"},{"body":"In Firefox currently, the mechanism is that the about:blank isn't the initial about:blank anymore, so the navigation does not reuse the inner window, so the <code>document.write</code> happens on the old (about:blank) document.","mimetype":"text/html"}]},"ts":1663152360368,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$a2B9H-kyvHrtdo24bGUpyhqNoUBYaVYSD8AUh__A6eU"},
{"content":{"body":"However, when inner window reuse takes place, which it presumably does in Chrome, what makes the `document.write` not blow away the new document that has become the document of the inner window while the event loop for the sync XHR was spinning?","format":"org.matrix.custom.html","formatted_body":"However, when inner window reuse takes place, which it presumably does in Chrome, what makes the <code>document.write</code> not blow away the new document that has become the document of the inner window while the event loop for the sync XHR was spinning?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"However, when inner window reuse takes place, which it presumably does in Chrome, what makes the `document.write` not blow away the new document that has become the document of the inner window while the event loop for the sync XHR was spinning?","mimetype":"text/plain"},{"body":"However, when inner window reuse takes place, which it presumably does in Chrome, what makes the <code>document.write</code> not blow away the new document that has become the document of the inner window while the event loop for the sync XHR was spinning?","mimetype":"text/html"}]},"ts":1663152435162,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$LVNm2z8-z98WMM7qT3NUkCydflxSc8-qYUC10M4zyqM"},
{"content":{"body":"When Chrome aborts the old fetches (including the XHR), does it also manage to abort scripts that are being executed so that the JavaScript program aborts before xhr.send() returns?","msgtype":"m.text","org.matrix.msc1767.text":"When Chrome aborts the old fetches (including the XHR), does it also manage to abort scripts that are being executed so that the JavaScript program aborts before xhr.send() returns?"},"ts":1663152561618,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$8LxIK_eWi9I8qAdo5H9rW4mMxbKwcHZyOHAyZIkZTY4"},
{"content":{"body":"I guess I should test that hypothesis.","msgtype":"m.text","org.matrix.msc1767.text":"I guess I should test that hypothesis."},"ts":1663152583161,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$HhndtCY9AtupqmGf3srNAZHQidM-V5W3_vmCh5ix2HA"},
{"content":{"body":"I can't log with console.log() from within the javascript: URL in Chrome. Is Chrome not executing the javascript: URL at all for some reason?","msgtype":"m.text","org.matrix.msc1767.text":"I can't log with console.log() from within the javascript: URL in Chrome. Is Chrome not executing the javascript: URL at all for some reason?"},"ts":1663152877109,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$eP3spXsRPwSnNH-OmX9AoT2fqDhiC4X65eubjQ8aUbo"},
{"content":{"body":"smaug: smaug","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a>: smaug","msgtype":"m.text"},"ts":1663154768349,"senderName":"Haerul Fuad","senderId":"@aplikasi:matrix.org","id":"$FIaObpZqNtYL5tIugbdPPjPoFiKW31cxQC3xjsRrEic"}
]