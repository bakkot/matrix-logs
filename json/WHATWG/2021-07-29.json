[
{"content":{"body":"anyone else having problems with the bikeshed server?  I'm getting \"<html><body><p><strong>WARNING: </strong>mysqli_connect(): (HY000/2002): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (111)</p></body></html>\"","msgtype":"m.text"},"ts":1627571125218,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$S8vEKWCz6yUnhOPmTGF4huJp3AzE_ZNQR0dKH8p1Fus"},
{"content":{"body":"Domenic: implementations have non-JS streams","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: implementations have non-JS streams","msgtype":"m.text"},"ts":1627571455137,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$jN9E4_WltKtOMkNRiwAf-IaJG9weeFIp-hJRXOy9V4M"},
{"content":{"body":"(re Fetch architecture)","msgtype":"m.text"},"ts":1627571476364,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$BYKm7KLU4TFvrC-d39Z5g_Zqjbqj8DGpzG1pvV3zKRk"},
{"content":{"body":"wanderview: you can ping plinns on GitHub for help perhaps","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@wanderview:matrix.org\">wanderview</a>: you can ping plinns on GitHub for help perhaps","msgtype":"m.text"},"ts":1627571558400,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$-jTcUKj19P2RGku8ytlTDGmzRZLeL_qBuK99_ZxMZ_w"},
{"content":{"body":"what repo is the bikeshed server associated with?","msgtype":"m.text"},"ts":1627571736051,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$H9E-y4I-bkW0BXJeKCoyX8j6PnXfcZnKW0nJeH2-D_8"},
{"content":{"body":"I don't know, if you don't have a PR or something I guess I'd file an issue against tabatkins/bikeshed","msgtype":"m.text"},"ts":1627571964405,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$3IBcp-2PjldYAPC7T1GvNv2SXcycv6egDBTy9kQZX-M"},
{"content":{"body":"wanderview: none, plinss hosts it (see also drafts.csswg.org being down)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@wanderview:matrix.org\">wanderview</a>: none, plinss hosts it (see also drafts.csswg.org being down)","msgtype":"m.text"},"ts":1627572055733,"senderName":"Sam Sneddon [:gsnedders]","senderId":"@gsnedders:mozilla.org","id":"$7VsxtNnXN-oyWa4X1ENTCjcXjPM15Ydhab6Sx9OAmac"},
{"content":{"body":"I guess if the outage is wider scope then maybe its already known about","msgtype":"m.text"},"ts":1627572106004,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$7rbgLAU0-wucTZe9gK6Q29xrVDT2gR0-ggYkQOqS7ak"},
{"content":{"body":"> <@annevk:mozilla.org> Domenic: implementations have non-JS streams\n\nSure but when do they create ReadableStream objects and enqueue from them, is the question. I think you could get away without a first-class non-JS stream primitive in the spec since you can just pretend the data hasn't reached you yet if it's queued up.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$jN9E4_WltKtOMkNRiwAf-IaJG9weeFIp-hJRXOy9V4M?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:mozilla.org\">@annevk:mozilla.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: implementations have non-JS streams</blockquote></mx-reply>Sure but when do they create ReadableStream objects and enqueue from them, is the question. I think you could get away without a first-class non-JS stream primitive in the spec since you can just pretend the data hasn't reached you yet if it's queued up.","m.relates_to":{"m.in_reply_to":{"event_id":"$jN9E4_WltKtOMkNRiwAf-IaJG9weeFIp-hJRXOy9V4M"}},"msgtype":"m.text"},"ts":1627572470426,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$-GCx_2nX4VapVGbWBFHo-zlgLGLVLPlWBD0Z-tpRFvg"},
{"content":{"body":"Domenic: I suspect it gets created the moment someone \"touches\" it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I suspect it gets created the moment someone &quot;touches&quot; it","msgtype":"m.text"},"ts":1627572545240,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$h6n1OHRfxgXJeTsn3scCnpH36vIN36l9khYcT5_hcZ8"},
{"content":{"body":"Hmm I don't think that's true in Chrome","msgtype":"m.text"},"ts":1627572562501,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$AEhQwSYLyHZtmzyyjtpZpg3UR38DfcSwZHy45YCXtyc"},
{"content":{"body":"As in, once someone does res.body","msgtype":"m.text"},"ts":1627572564615,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$mNQcTmdJp7SxUUsA_fFCcohQPCcx2ygiTsx_e_-sM_Q"},
{"content":{"body":"No, that returns an existing BodyStreamBuffer->Stream() it seems","msgtype":"m.text"},"ts":1627572655473,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$lI9UrMbYDYAVZuXh9UJYucWJ1kYFgmWElPb3MmZ4jEM"},
{"content":{"body":"Trying to find out when those are created","msgtype":"m.text"},"ts":1627572664933,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ARkSkrWPJ8f8DKjy9rSW1FdVlzkzaa4C0FNSbT5AuNo"},
{"content":{"body":"(the implementation actually seems to use the same JS-stream infrastructure for blob() and arrayBuffer() as the spec does, interestingly!)","msgtype":"m.text"},"ts":1627572682770,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$vh5E7yO2hB9cV04UPEualjSSkFkJ7RX1zTVPQIYT0bc"},
{"content":{"body":"The JS object is eagerly allocated? Interesting. I thought those were pretty much always lazily created, but maybe that's only in Gecko.","msgtype":"m.text"},"ts":1627572728353,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$kFfbIlbINl69x_1uZJyYliXGEdpK2f-AEYHfLws8Snw"},
{"content":{"body":"The ReadableStream is created the same time the Response object is created","msgtype":"m.text"},"ts":1627572728691,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$xnWtpLykY9dfUU6kkUvxEtFfKr0p4YRCybbyeKfNXo8"},
{"content":{"body":"Well the JS object is created lazily but the \"IDL\" (C++) object is created eagerly","msgtype":"m.text"},"ts":1627572759349,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$jBOMobmxU8T1rx0N_yazBZ-pMEyWruJdlYpt4lI68Bw"},
{"content":{"body":"bikeshed seems to be fixed now","msgtype":"m.text"},"ts":1627572776553,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$eY6GubVrVr2c21Cmp9My5Cl9dHkKbmAUip_XmYizcW4"},
{"content":{"body":"I see, but in theory the IDL object could be cross-thread...","msgtype":"m.text"},"ts":1627572824280,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4LJ1q2eFicPOAb2iyH7uWxrOfMZX4RkrizGOGk2rwoc"},
{"content":{"body":"O_o I guess in theory, but not in implementations","msgtype":"m.text"},"ts":1627572839531,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$CeaN7141n7k3isHlOSAMpo1UnLbpTywGsn8ufNol62Q"},
{"content":{"body":"Might be a bit confusing though","msgtype":"m.text"},"ts":1627572840527,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$54EaiexeeM0TTyECcB6_v5kAY_pMoMR61R-PzSzrxEA"}
]