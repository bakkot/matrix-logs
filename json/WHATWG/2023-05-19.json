[
{"content":{"body":"> <@annevk:matrix.org> https://twitter.com/robpalmer2/status/1658914059578744835 made me think of a similar request I had seen for `AbortSignal` but I can't find it. Something like `AbortSignal.withAborter() -> { signal, aborter }`.\n\nI think AbortController is that object: it has { signal, abort } properties. Promise only wants that because it followed the revealing constructor pattern; AbortSignal is not constructible.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UgG8QNzMSHjCiYwxTV4WihnLFhsSmIeEZnRUs3yRrSo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>https://twitter.com/robpalmer2/status/1658914059578744835 made me think of a similar request I had seen for <code>AbortSignal</code> but I can't find it. Something like <code>AbortSignal.withAborter() -&gt; { signal, aborter }</code>.</blockquote></mx-reply>I think AbortController is that object: it has { signal, abort } properties. Promise only wants that because it followed the revealing constructor pattern; AbortSignal is not constructible.","m.relates_to":{"m.in_reply_to":{"event_id":"$UgG8QNzMSHjCiYwxTV4WihnLFhsSmIeEZnRUs3yRrSo"}},"msgtype":"m.text"},"ts":1684459197980,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$4J9SgRHXH8ptdO5AqArQXQw3ZXdQPowPRF6HTAdfDjw"},
{"content":{"body":"> <@jyasskin:matrix.org> Is the advice in https://webidl.spec.whatwg.org/#idl-USVString that \"Specifications should only use USVString for APIs that perform text processing .... When in doubt, use DOMString.\" still the state of the art? In cases where we expect most of the input to be text instead of 16-bit numbers, it feels like a recipe for subtle implementation bugs if an implementation round-trips a lone surrogate through UTF-8 instead of WTF-8.\n\nThe advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$xyAAxj5i4PP2XR9K6jVWBuI_l6Dy0VSD1ROJehpVcKo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jyasskin:matrix.org\">@jyasskin:matrix.org</a><br>Is the advice in https://webidl.spec.whatwg.org/#idl-USVString that &quot;Specifications should only use USVString for APIs that perform text processing .... When in doubt, use DOMString.&quot; still the state of the art? In cases where we expect most of the input to be text instead of 16-bit numbers, it feels like a recipe for subtle implementation bugs if an implementation round-trips a lone surrogate through UTF-8 instead of WTF-8.<br/><br/></blockquote></mx-reply>The advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.","m.relates_to":{"m.in_reply_to":{"event_id":"$xyAAxj5i4PP2XR9K6jVWBuI_l6Dy0VSD1ROJehpVcKo"}},"msgtype":"m.text"},"ts":1684459258002,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$aY24au1CtMzzIdMsgujqx7CJ32jw24Ph1swwif2679E"},
{"content":{"body":"> <@domenicdenicola:matrix.org> The advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.\n\nI'm happy to live with it given that confirmation, but I'm thinking of the fact that while strings are 16-bit sequences in Javascript, Chrome's Mojo system (https://chromium.googlesource.com/chromium/src/+/master/mojo/public/tools/bindings/README.md#primitive-types) pretty implicitly translates them to UTF-8 on their way to the browser process. ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$aY24au1CtMzzIdMsgujqx7CJ32jw24Ph1swwif2679E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>The advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.</blockquote></mx-reply>I'm happy to live with it given that confirmation, but I'm thinking of the fact that while strings are 16-bit sequences in Javascript, Chrome's Mojo system (https://chromium.googlesource.com/chromium/src/+/master/mojo/public/tools/bindings/README.md#primitive-types) pretty implicitly translates them to UTF-8 on their way to the browser process.","m.relates_to":{"m.in_reply_to":{"event_id":"$aY24au1CtMzzIdMsgujqx7CJ32jw24Ph1swwif2679E"}},"msgtype":"m.text"},"ts":1684469987944,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$Q_U7bEgaRsbKwfWq5JIhWI4xAUT6NKZhDoPw2ldyN1c"},
{"content":{"body":"> <@jyasskin:matrix.org> I'm happy to live with it given that confirmation, but I'm thinking of the fact that while strings are 16-bit sequences in Javascript, Chrome's Mojo system (https://chromium.googlesource.com/chromium/src/+/master/mojo/public/tools/bindings/README.md#primitive-types) pretty implicitly translates them to UTF-8 on their way to the browser process.\n\nOh wow, that's kind of scary...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Q_U7bEgaRsbKwfWq5JIhWI4xAUT6NKZhDoPw2ldyN1c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jyasskin:matrix.org\">@jyasskin:matrix.org</a><br>I'm happy to live with it given that confirmation, but I'm thinking of the fact that while strings are 16-bit sequences in Javascript, Chrome's Mojo system (https://chromium.googlesource.com/chromium/src/+/master/mojo/public/tools/bindings/README.md#primitive-types) pretty implicitly translates them to UTF-8 on their way to the browser process.</blockquote></mx-reply>Oh wow, that's kind of scary...","m.relates_to":{"m.in_reply_to":{"event_id":"$Q_U7bEgaRsbKwfWq5JIhWI4xAUT6NKZhDoPw2ldyN1c"}},"msgtype":"m.text"},"ts":1684470243939,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$5l05CzcNPaKYhF4yRDLD0IW2C0Zs9wmd2ymNGB-ABMc"},
{"content":{"body":":-D","msgtype":"m.text"},"ts":1684470259955,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$ETDxr7AVPH1WFfNWPp506CzYX4R7S-qONA2sZDqTaqs"},
{"content":{"body":"https://w3ctag.github.io/design-principles/#idl-string-types is a bit related","msgtype":"m.text"},"ts":1684470276255,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$HOowZgxX_qU9pHkPywU2rIdovLqCJ4PUrQX7fhQVZlQ"},
{"content":{"body":"\"or operations which canâ€™t handle surrogates in input (such as APIs that pass strings through to native platform APIs), USVString should be used\"","msgtype":"m.text"},"ts":1684470296143,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$hPZOwPbLuo7wSfjuXCzhXFnW70obHVC1r3uUhXAYVhs"},
{"content":{"body":"But I don't think that everything-Mojo is the intent of the \"native platform APIs\" clause","msgtype":"m.text"},"ts":1684470317975,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$XXkWGC4WKfP5QdmSLziq5TTkfSDreP9vigPiUKlKu4E"},
{"content":{"body":"It's more meant, like, displaying in a Window title bar or something","msgtype":"m.text"},"ts":1684470341515,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$d9IoLBbffkqfEovp__bmrbHjVQPJ4eYQc3TcgA1gR64"},
{"content":{"body":"Yeah. And Gecko + WebKit might be more consistent about keeping things in UTF-16, so they would be affected in different circumstances.","msgtype":"m.text"},"ts":1684470384234,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$fQzBXBMEXqOzVynYMEPcYEx5Yw7WFP_6UrjhQhoOIqE"},
{"content":{"body":"I did notice that URL uses USVString, when the guidance would seem to imply DOMString.","msgtype":"m.text"},"ts":1684470419214,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$tZ8XdiInHGIhDg1Pbu9d0BA-CR6PJwZ5BqEJYpBq87U"},
{"content":{"body":"URL uses USVString because percent encoding ","msgtype":"m.text"},"ts":1684470477054,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qdALtBFC5ay8VBJHlfHZdQ_oXfvdff-VD8hAJDVHliE"},
{"content":{"body":"Note also CSS just kinda decided not to do interop because it was more convenient for Gecko to use USVStrings in Stylo. And nothing has blown up yet...","msgtype":"m.text"},"ts":1684470523343,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$faQQM_qM67N4MJB_dWND-_SUK7sSqwk_rinxOi4aSMA"},
{"content":{"body":"(Search for \"CSSOMString\")","msgtype":"m.text"},"ts":1684470552121,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$nYx9yavfHqAe4wdA726nAgJhgeFD4UesaltaSsDr4XA"},
{"content":{"body":"ðŸ˜±","msgtype":"m.text"},"ts":1684470604554,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$Y_xH9Id9f8HhWdFOVN3a05eT6_n6NlE3lOJ8ZeYhSnA"},
{"content":{"body":"But yeah, I wouldn't expect this to be web-visible in most cases unless someone finds a way to use it maliciously.","msgtype":"m.text"},"ts":1684470661380,"senderName":"Jeffrey Yasskin","senderId":"@jyasskin:matrix.org","id":"$3LJ6yUXgTQmkzNXG50Zu9L8MdfE1BJ9gTK2_CBm0jBo"},
{"content":{"body":"annevk or Dominic Farolino or anyone: some help appreciated on https://github.com/whatwg/html/issues/9310 , I feel like I'm going crazy","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a> or <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a> or anyone: some help appreciated on https://github.com/whatwg/html/issues/9310 , I feel like I'm going crazy","msgtype":"m.text"},"ts":1684478320568,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$WpXgMHbfnrIQpYljYLMazFNS9My0X3so4D2lx9r2DoE"},
{"content":{"body":"Domenic: I see the same thing in Gecko, but not WebKit","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: I see the same thing in Gecko, but not WebKit","msgtype":"m.text"},"ts":1684481648171,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yYvOQVqNkzKY6vKFUaXSVBOUASaYcr5RgFBoJ96ila8"},
{"content":{"body":"Oh nooooo","msgtype":"m.text"},"ts":1684481667366,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$AWz8PCI1BYHzDQXpp4EUZljXf25V2TobEr-ipHrR-S4"},
{"content":{"body":"How is this possibly non-interoperable...","msgtype":"m.text"},"ts":1684481683291,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MiRuN4BxR7zn_hXCYuY35wo171yh4FArBU_qZwTDBl4"},
{"content":{"body":"Probably poorly tested. ","msgtype":"m.text"},"ts":1684481734728,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YRvp-bWQO5y2Zaxgv0Iy60Wf4mp_2BNCPFtAqrfk5zo"},
{"content":{"body":"Like you do `let w = window.open(); w.document.innerHTML = \"<img src='foo.jpg'>\"` and this only loads in WebKit? Really!?","format":"org.matrix.custom.html","formatted_body":"Like you do <code>let w = window.open(); w.document.innerHTML = &quot;&lt;img src='foo.jpg'&gt;&quot;</code> and this only loads in WebKit? Really!?","msgtype":"m.text"},"ts":1684481738660,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9y5XIAsP7YF8VVycU16mLDxqwYSbSBaH9gYZGy8XLgE"},
{"content":{"body":"OK well now that I know it's an interop problem, I'll approach it differently, with test cases and such... on Monday.","msgtype":"m.text"},"ts":1684481768332,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$frWUDns9x48BGyADRYQSbpFTGPXXFcNxEp43XysEbmQ"},
{"content":{"body":"Yeah that works (with `document.body.innerHTML`), though when the popup is blocked it might fail, but that's expected I think","format":"org.matrix.custom.html","formatted_body":"Yeah that works (with <code>document.body.innerHTML</code>), though when the popup is blocked it might fail, but that's expected I think","msgtype":"m.text"},"ts":1684481975301,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Vc2kEfZ5y6fHWkK8Sc5N30eRS0jLIzf_htMM038UzRY"},
{"content":{"body":"I wouldn't be terribly sad to see it go","msgtype":"m.text"},"ts":1684481998339,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$309qcF32dFimHP5YdrdWB85YG87L5OS-nQTN6ATM_0Y"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A...%3Cscript%20type%3D%22text%2Fjavascript%E3%80%80%22%3E%0Aw(1)%0A%3C%2Fscript%3E hmmmmm","msgtype":"m.text"},"ts":1684503930802,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Tr9ntHkyGJMzDRm7tv7AY_sieXhP67CKFYnI3-87vnQ"},
{"content":{"body":"Hi all\nThere's no `reconnectedCallback` exist, but I think it could be used for this condition:\nWhen the element is disconnected from the DOM and then reconnected again\n\nIt'd be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.\n\nSo, I dicided share it with you all, I think it would be useful in some areas, including virtualization techniques","format":"org.matrix.custom.html","formatted_body":"<p>Hi all<br>There's no <code>reconnectedCallback</code> exist, but I think it could be used for this condition:<br>When the element is disconnected from the DOM and then reconnected again</p>\n<p>It'd be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.</p>\n<p>So, I dicided share it with you all, I think it would be useful in some areas, including virtualization techniques</p>\n","msgtype":"m.text"},"ts":1684515560432,"senderName":"Ehsan Azari","senderId":"@ehsan.azari:matrix.org","id":"$Q6qlaAVa_FDvzYlRX2nkvfcxwcAgWJTCEVEhBDY9ghU"},
{"content":{"body":" * Hi all\nThere's no `reconnectedCallback` exist, but I think it could be used for this condition:\nWhen the element is disconnected from the DOM and then reconnected again\n\nIt would be  be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.\n\nSo, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques","format":"org.matrix.custom.html","formatted_body":" * <p>Hi all<br>There's no <code>reconnectedCallback</code> exist, but I think it could be used for this condition:<br>When the element is disconnected from the DOM and then reconnected again</p>\n<p>It would be  be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.</p>\n<p>So, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques</p>\n","m.new_content":{"body":"Hi all\nThere's no `reconnectedCallback` exist, but I think it could be used for this condition:\nWhen the element is disconnected from the DOM and then reconnected again\n\nIt would be  be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.\n\nSo, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques","format":"org.matrix.custom.html","formatted_body":"<p>Hi all<br>There's no <code>reconnectedCallback</code> exist, but I think it could be used for this condition:<br>When the element is disconnected from the DOM and then reconnected again</p>\n<p>It would be  be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.</p>\n<p>So, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Q6qlaAVa_FDvzYlRX2nkvfcxwcAgWJTCEVEhBDY9ghU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684515637156,"senderName":"Ehsan Azari","senderId":"@ehsan.azari:matrix.org","id":"$S2EVYnEEr5UUtlirzkcQ2jveG-vJ812QwhABd0C1Da4"},
{"content":{"body":" * Hi all\nThere's no `reconnectedCallback` exist, but I think it could be used for this condition:\nWhen the element is disconnected from the DOM and then reconnected again\n\nIt would be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.\n\nSo, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques","format":"org.matrix.custom.html","formatted_body":" * <p>Hi all<br>There's no <code>reconnectedCallback</code> exist, but I think it could be used for this condition:<br>When the element is disconnected from the DOM and then reconnected again</p>\n<p>It would be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.</p>\n<p>So, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques</p>\n","m.new_content":{"body":"Hi all\nThere's no `reconnectedCallback` exist, but I think it could be used for this condition:\nWhen the element is disconnected from the DOM and then reconnected again\n\nIt would be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.\n\nSo, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques","format":"org.matrix.custom.html","formatted_body":"<p>Hi all<br>There's no <code>reconnectedCallback</code> exist, but I think it could be used for this condition:<br>When the element is disconnected from the DOM and then reconnected again</p>\n<p>It would be useful for handling cases where an element is dynamically removed and inserted back into the DOM, for instance, when navigating between different views or performing dynamic updates.</p>\n<p>So, I decided share it with you all, I think it would be useful in some areas, including virtualization techniques</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$Q6qlaAVa_FDvzYlRX2nkvfcxwcAgWJTCEVEhBDY9ghU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684515757722,"senderName":"Ehsan Azari","senderId":"@ehsan.azari:matrix.org","id":"$vLNndD8yWpPz6-6oH36nVnOgVhJCuLRrRulpn0_RQYg"},
{"content":{"body":"Anyone out there in the WHATWG world have experience working with the backend of HTML and CSS?","msgtype":"m.text"},"ts":1684518067223,"senderName":"Burt Paulie","senderId":"@burtboy144:matrix.org","id":"$2oejHIbij0xX0v0_LQOQZUF5uTrN5--4tcl4xhKgvEw"},
{"content":{"body":"HTML has an example showing that you must not resolve a promise in parallel. Does that also imply you cannot resolve a Promise from _another_ Window event loop other than the one it was created in?","format":"org.matrix.custom.html","formatted_body":"HTML has an example showing that you must not resolve a promise in parallel. Does that also imply you cannot resolve a Promise from <em>another</em> Window event loop other than the one it was created in?","msgtype":"m.text"},"ts":1684518580844,"senderName":"Dominic Farolino","senderId":"@domfarolino:matrix.org","id":"$bz18GGwqYpMjJFhqpx_geVMRopjd9GZdjaW4Jesv7xw"},
{"content":{"body":"if the windows don't share an event loop, no","msgtype":"m.text"},"ts":1684518793059,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$z33s71TC5PIA6j8Fl6uaIXQ5v4Pthdj3Md3RDBXf1Sg"},
{"content":{"body":"you'd have to queue a task in the promise's event loop","msgtype":"m.text"},"ts":1684518819377,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$jo9MWoctD_61941Wyw-zCY6bs5nrOu2SKQFtdHfucjg"},
{"content":{"body":" * you'd have to queue a task in the promise's window's event loop","m.new_content":{"body":"you'd have to queue a task in the promise's window's event loop","msgtype":"m.text"},"m.relates_to":{"event_id":"$jo9MWoctD_61941Wyw-zCY6bs5nrOu2SKQFtdHfucjg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684518850294,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$oDgAxRbLaoAAm1PD980ZBlT167aA9G_0ky5oUH40CGQ"},
{"content":{"body":"I'd like to understand in greater detail the process whereby HTML and CSS are implemented between the machine code and the kernel (preferably Linux). Can anyone point me towards the binaries for the HTML Standard? If there's a way for me to return them in a Linux terminal or a Code Editor, I'm all ears. Thanky kindly...","msgtype":"m.text"},"ts":1684518951336,"senderName":"Burt Paulie","senderId":"@burtboy144:matrix.org","id":"$oQsgu--UZIJqZlRlmMqStMDVbYgYlaTsz9v9ZPIuJgQ"},
{"content":{"body":"> <@domfarolino:matrix.org> HTML has an example showing that you must not resolve a promise in parallel. Does that also imply you cannot resolve a Promise from _another_ Window event loop other than the one it was created in?\n\nThe prohibition against resolving a promise in parallel means that you shouldn't call both the `resolve` and `reject` functions of a Promise at the same time or in rapid succession. That's it","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$bz18GGwqYpMjJFhqpx_geVMRopjd9GZdjaW4Jesv7xw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">@domfarolino:matrix.org</a><br>HTML has an example showing that you must not resolve a promise in parallel. Does that also imply you cannot resolve a Promise from <em>another</em> Window event loop other than the one it was created in?</blockquote></mx-reply>The prohibition against resolving a promise in parallel means that you shouldn't call both the <code>resolve</code> and <code>reject</code> functions of a Promise at the same time or in rapid succession. That's it","m.relates_to":{"m.in_reply_to":{"event_id":"$bz18GGwqYpMjJFhqpx_geVMRopjd9GZdjaW4Jesv7xw"}},"msgtype":"m.text"},"ts":1684519484661,"senderName":"Ehsan Azari","senderId":"@ehsan.azari:matrix.org","id":"$Ztxy8hbOgmp_PbHySa6xRuxjo3XdUmtgY23oVHhT54s"},
{"content":{"body":"In JS you don't have access to a promise's `resolve` and `reject` from a different thread, whereas in the spec text, or when implementing browser code, you do. That's what \"parallel\" means in the standards.","format":"org.matrix.custom.html","formatted_body":"In JS you don't have access to a promise's <code>resolve</code> and <code>reject</code> from a different thread, whereas in the spec text, or when implementing browser code, you do. That's what &quot;parallel&quot; means in the standards.","msgtype":"m.text"},"ts":1684519594362,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$CCDieAeRQzPinJHkcsaj3g077Ei8_o4Q6_czCtdSMWc"},
{"content":{"body":"And JS is single-threaded, and so is the implementation of JS in every engine; if you try to resolve a promise off-thread, you're likely to run into concurrency issues","msgtype":"m.text"},"ts":1684519646996,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$n7Sd-VYer4XIHKzNuFCS1DgViEd7msj_41PyGBfkzew"},
{"content":{"body":" * And JS is single-threaded, and so is the implementation of JS in every engine; if you try to resolve a promise off-thread in browser code, you're likely to run into concurrency issues","m.new_content":{"body":"And JS is single-threaded, and so is the implementation of JS in every engine; if you try to resolve a promise off-thread in browser code, you're likely to run into concurrency issues","msgtype":"m.text"},"m.relates_to":{"event_id":"$n7Sd-VYer4XIHKzNuFCS1DgViEd7msj_41PyGBfkzew","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684519684062,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$nixeYZ_vH-EKFIB3vTwuSpEMBxPK8mpKl1pX2L7KZ9E"},
{"content":{"body":"Ehsan Azari: that's very much not correct. \"In parallel\" is a spec-language term of art, which algorithms can invoke to mean \"do this, potentially in another thread; we promise not to do user-observable things here so timing isn't made visible\".","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ehsan.azari:matrix.org\">Ehsan Azari</a>: that's very much not correct. &quot;In parallel&quot; is a spec-language term of art, which algorithms can invoke to mean &quot;do this, potentially in another thread; we promise not to do user-observable things here so timing isn't made visible&quot;.","msgtype":"m.text"},"ts":1684519793778,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$t3xn886nrp_QwVwHDGh5wLP03p5VcunPgWkGMCCeWWs"},
{"content":{"body":"Dominic Farolino: You can, you just have to do it via posting a task to the Promise's own event loop, same as you have to do when you're inside a parallel section.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: You can, you just have to do it via posting a task to the Promise's own event loop, same as you have to do when you're inside a parallel section.","msgtype":"m.text"},"ts":1684519819154,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$6J3dqif0HnYjEoQQwhnuK1HM8mEb1hi4IPxMAsh3lsY"},
{"content":{"body":"> <@burtboy144:matrix.org> I'd like to understand in greater detail the process whereby HTML and CSS are implemented between the machine code and the kernel (preferably Linux). Can anyone point me towards the binaries for the HTML Standard? If there's a way for me to return them in a Linux terminal or a Code Editor, I'm all ears. Thanky kindly...\n\nOkay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable things like WebIDL).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$oQsgu--UZIJqZlRlmMqStMDVbYgYlaTsz9v9ZPIuJgQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@burtboy144:matrix.org\">@burtboy144:matrix.org</a><br>I&#39;d like to understand in greater detail the process whereby HTML and CSS are implemented between the machine code and the kernel (preferably Linux). Can anyone point me towards the binaries for the HTML Standard? If there&#39;s a way for me to return them in a Linux terminal or a Code Editor, I&#39;m all ears. Thanky kindly...</blockquote></mx-reply>Okay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable things like WebIDL).","m.relates_to":{"m.in_reply_to":{"event_id":"$oQsgu--UZIJqZlRlmMqStMDVbYgYlaTsz9v9ZPIuJgQ"}},"msgtype":"m.text"},"ts":1684520426078,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$a5XWlupfzkKTGhzmOK9LKBv4BBGlog_BiBL22Lgm4BY"},
{"content":{"body":"There are programs called web browsers (like Google Chrome, Firefox, Safari...) that take those text descriptions and turn them into code that then gets compiled","msgtype":"m.text"},"ts":1684520455569,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$1IZyVDC-K08uqIABPTez8KTwFmrc2LOZ_0gzIJurp-Q"},
{"content":{"body":"Chrome and Firefox are open source, so you can browse the code â€“ although be warned that it's a _lot_ of code. Safari isn't open source, but the part of it that actually does most of the HTML and CSS work (the browser engine) is, it's called Webkit","format":"org.matrix.custom.html","formatted_body":"Chrome and Firefox are open source, so you can browse the code â€“ although be warned that it's a <em>lot</em> of code. Safari isn't open source, but the part of it that actually does most of the HTML and CSS work (the browser engine) is, it's called Webkit","msgtype":"m.text"},"ts":1684520578954,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$KQmlUoVBHqFPYIiYhnFM1dkBOqocGATk89dOSq03G3Q"},
{"content":{"body":" * There are programs called web browsers (like Google Chrome, Firefox, Safari...) that are made up of code that implements those descriptions","m.new_content":{"body":"There are programs called web browsers (like Google Chrome, Firefox, Safari...) that are made up of code that implements those descriptions","msgtype":"m.text"},"m.relates_to":{"event_id":"$1IZyVDC-K08uqIABPTez8KTwFmrc2LOZ_0gzIJurp-Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684520611889,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$jj0EYotolzlF18uNBOtWit74i5F3yuR70WIMrcNRHQI"},
{"content":{"body":"> <@burtboy144:matrix.org> I'd like to understand in greater detail the process whereby HTML and CSS are implemented between the machine code and the kernel (preferably Linux). Can anyone point me towards the binaries for the HTML Standard? If there's a way for me to return them in a Linux terminal or a Code Editor, I'm all ears. Thanky kindly...\n\n * Okay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable parts like WebIDL).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$oQsgu--UZIJqZlRlmMqStMDVbYgYlaTsz9v9ZPIuJgQ?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@burtboy144:matrix.org\">@burtboy144:matrix.org</a><br>I'd like to understand in greater detail the process whereby HTML and CSS are implemented between the machine code and the kernel (preferably Linux). Can anyone point me towards the binaries for the HTML Standard? If there's a way for me to return them in a Linux terminal or a Code Editor, I'm all ears. Thanky kindly...</blockquote></mx-reply> * Okay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable parts like WebIDL).","m.new_content":{"body":"Okay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable parts like WebIDL).","format":"org.matrix.custom.html","formatted_body":"Okay, so the HTML, CSS, etc. standards are human-readable (or, well, engineer-readable; there's a difference ðŸ˜…) descriptions of the behavior that has to happen. They're not compiled to binary (except for small machine-readable parts like WebIDL).","msgtype":"m.text"},"m.relates_to":{"event_id":"$a5XWlupfzkKTGhzmOK9LKBv4BBGlog_BiBL22Lgm4BY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1684520665815,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$MRBX1N7MJgbKfv5-BGZq_KPyHOewq1NIgJQHujLlshE"},
{"content":{"body":"What I'd like to know is how each individual tag is defined for machine processing. I don't want the human (or engineer) readable standard common to most coders, I want to see the binaries processed by the machine for the implementation of each and every tag of the current (or minimally any) HTML Standard. In other words, I'd like to know how to reverse engineer the HTML language...","msgtype":"m.text"},"ts":1684520916857,"senderName":"Burt Paulie","senderId":"@burtboy144:matrix.org","id":"$V1aToKmbzXzRBHOEeltvYmhvOl1LeP0pFGSitv8kIAo"}
]