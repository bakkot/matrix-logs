[
{"content":{"body":"> <@annevk:matrix.org> https://twitter.com/robpalmer2/status/1658914059578744835 made me think of a similar request I had seen for `AbortSignal` but I can't find it. Something like `AbortSignal.withAborter() -> { signal, aborter }`.\n\nI think AbortController is that object: it has { signal, abort } properties. Promise only wants that because it followed the revealing constructor pattern; AbortSignal is not constructible.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$UgG8QNzMSHjCiYwxTV4WihnLFhsSmIeEZnRUs3yRrSo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>https://twitter.com/robpalmer2/status/1658914059578744835 made me think of a similar request I had seen for <code>AbortSignal</code> but I can't find it. Something like <code>AbortSignal.withAborter() -&gt; { signal, aborter }</code>.</blockquote></mx-reply>I think AbortController is that object: it has { signal, abort } properties. Promise only wants that because it followed the revealing constructor pattern; AbortSignal is not constructible.","m.relates_to":{"m.in_reply_to":{"event_id":"$UgG8QNzMSHjCiYwxTV4WihnLFhsSmIeEZnRUs3yRrSo"}},"msgtype":"m.text"},"ts":1684459197980,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$4J9SgRHXH8ptdO5AqArQXQw3ZXdQPowPRF6HTAdfDjw"},
{"content":{"body":"> <@jyasskin:matrix.org> Is the advice in https://webidl.spec.whatwg.org/#idl-USVString that \"Specifications should only use USVString for APIs that perform text processing .... When in doubt, use DOMString.\" still the state of the art? In cases where we expect most of the input to be text instead of 16-bit numbers, it feels like a recipe for subtle implementation bugs if an implementation round-trips a lone surrogate through UTF-8 instead of WTF-8.\n\nThe advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$xyAAxj5i4PP2XR9K6jVWBuI_l6Dy0VSD1ROJehpVcKo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jyasskin:matrix.org\">@jyasskin:matrix.org</a><br>Is the advice in https://webidl.spec.whatwg.org/#idl-USVString that &quot;Specifications should only use USVString for APIs that perform text processing .... When in doubt, use DOMString.&quot; still the state of the art? In cases where we expect most of the input to be text instead of 16-bit numbers, it feels like a recipe for subtle implementation bugs if an implementation round-trips a lone surrogate through UTF-8 instead of WTF-8.<br/><br/></blockquote></mx-reply>The advice is state of the art. I don't understand your last point. Strings are 16-bit number collections from the JavaScript engine onward, so you're more likely to get subtle implementation bugs if you ignore that.","m.relates_to":{"m.in_reply_to":{"event_id":"$xyAAxj5i4PP2XR9K6jVWBuI_l6Dy0VSD1ROJehpVcKo"}},"msgtype":"m.text"},"ts":1684459258002,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$aY24au1CtMzzIdMsgujqx7CJ32jw24Ph1swwif2679E"}
]