[
{"content":{"body":"Bikeshedding help requested for an error type that includes properties with how much X is available, versus how much X you requested: https://github.com/whatwg/webidl/issues/1463","m.mentions":{},"msgtype":"m.text"},"ts":1737687954441,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$tqsfkjMt49YZCAwxLvHQscRQJOn_ar51EIX7OM668s8"},
{"content":{"body":"I don’t think that to developers using *“Quota”* will seem to storage-specific. I think developers a familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of *“Limit”* or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers a familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"msgtype":"m.text"},"ts":1737688737741,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$TdZf4kDBjOBz7-W_jeK7g27ohUnZYMI6kPbcOiCzd7c"},
{"content":{"body":"That is helpful, thank you!","m.mentions":{},"msgtype":"m.text"},"ts":1737688915385,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$6muc8SYMlIehSzG3TyKYqmEn9Wu9IfejjUFLGirZ0JU"},
{"content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.\n\n","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1737689010831,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w"},
{"content":{"body":"But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter keys, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter keys, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"msgtype":"m.text"},"ts":1737689071882,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$64boki0bnh-HHbIoawWEK_xIVjmFXY15cngvN1CHeQ4"},
{"content":{"body":"Well, all engines except Ladybird (which implements that requirement per-spec)","m.mentions":{},"msgtype":"m.text"},"ts":1737689100195,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7d27U8RJ4GaFKyURMU9J59d0_q17izZ2rylWwsUuCTM"},
{"content":{"body":"So… that requirement doesn’t seem to be compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"So… that requirement doesn’t seem to be compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"msgtype":"m.text"},"ts":1737689240881,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pWHLCc77Xj90UXiYed6FYEyqL_GoeBCCfMnZpQ5XGi4"},
{"content":{"body":"I’ll file an issue for it, but in the meantime I’m wondering if anybody here might know that background on where it came from","m.mentions":{},"msgtype":"m.text"},"ts":1737689289611,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Nr_1S59P1TxMoVoe72xExoXHOiH5wO7PphKzdicJ4o0"},
{"content":{"body":"* New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"* <p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"m.new_content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689305097,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xoMGnqD6_CKmFnN80l8kIL29HzNiLtwrjlvfRZcm7NQ"},
{"content":{"body":"* New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` event for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"* <p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> event for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"m.new_content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` event for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> event for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689312750,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jWhjO__EKGK9X3sfKwT6-pd00DgJx1ni2pOBKgr3xOg"},
{"content":{"body":"* So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"* So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"m.new_content":{"body":"So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$pWHLCc77Xj90UXiYed6FYEyqL_GoeBCCfMnZpQ5XGi4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689328465,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$rOJ8a9JjUkzpC7n9a8gY0IMOA16qjREuCElfZJaLPxo"},
{"content":{"body":"* I don’t think that to developers using _“Quota”_ will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of _“Limit”_ or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"* I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"m.new_content":{"body":"I don’t think that to developers using _“Quota”_ will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of _“Limit”_ or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$TdZf4kDBjOBz7-W_jeK7g27ohUnZYMI6kPbcOiCzd7c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689350011,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sl46rOsQfIGiks_kV3HyFTrh7MLaSkMowRFje_T7FHQ"},
{"content":{"body":"* But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter key, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"* But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter key, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"m.new_content":{"body":"But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter key, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter key, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$64boki0bnh-HHbIoawWEK_xIVjmFXY15cngvN1CHeQ4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689388217,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$2x2MJBqMJFlPt0DphW-OyOklMR6EdrqhixkaKCckKEU"},
{"content":{"body":"I vaguely remember there being stuff around keyCode vs. other properties, and only one of them makes sense as producing a character value. Maybe the intent was to have an event that only fires when that character value property is set. (But nobody implemented it that way.)","m.mentions":{},"msgtype":"m.text"},"ts":1737692121878,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$wBUBrZ8H8SYnVKqvuNLvic9ftMBGq3zWTGSPk3NSV8Y"},
{"content":{"body":"I misspoke a bit, actually: UAs _do_ all seem to conform to that requirement for all non-character keys — _except_ for the Enter key","format":"org.matrix.custom.html","formatted_body":"I misspoke a bit, actually: UAs <em>do</em> all seem to conform to that requirement for all non-character keys — <em>except</em> for the Enter key","m.mentions":{},"msgtype":"m.text"},"ts":1737692398768,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$oRxKmILGU36_Hx9sNRbK5kXBRm2ysmgjEmnWjIUh35k"},
{"content":{"body":"That is, all UAs do still fire `keypress` for the Enter key","format":"org.matrix.custom.html","formatted_body":"That is, all UAs do still fire <code>keypress</code> for the Enter key","m.mentions":{},"msgtype":"m.text"},"ts":1737692416812,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XH4qEx8SBMTwBZ1PwcOWjanE-ENjq3KJE3s_bR3fJ3c"},
{"content":{"body":"So I guess I’ll open a spec PR with a patch which states that exception","m.mentions":{},"msgtype":"m.text"},"ts":1737692450588,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$FbHHogTX4dvSURev6n5bwdcnK6d-YbXRwzuwjcpLVjU"},
{"content":{"body":"Well, it seems there are existing already-reported issues:\n- https://github.com/w3c/uievents/issues/183\n- https://github.com/w3c/uievents/issues/266\n- https://bugzilla.mozilla.org/show_bug.cgi?id=1602694","format":"org.matrix.custom.html","formatted_body":"<p>Well, it seems there are existing already-reported issues:</p>\n<ul>\n<li>https://github.com/w3c/uievents/issues/183</li>\n<li>https://github.com/w3c/uievents/issues/266</li>\n<li>https://bugzilla.mozilla.org/show_bug.cgi?id=1602694</li>\n</ul>\n","m.mentions":{},"msgtype":"m.text"},"ts":1737694229003,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MbJMIxy56iFzUERUukXuEoMji25umwCBBkw1CwjgnuM"},
{"content":{"body":"Anyway, I really just want to know what I should implement in Ladybird in order to be interoperable with existing behavior in other engines","m.mentions":{},"msgtype":"m.text"},"ts":1737694532215,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$fQIDShqYCsGr5a-QVhJY6sA5cP5J4zoJgrvBZ_RbjrA"},
{"content":{"body":"And per Nakano-san’s analysis in https://github.com/w3c/uievents/issues/183#issuecomment-448091687, that _seems_ to maybe come down to being Enter, Shift + Enter and Ctrl + Enter as the exceptions","format":"org.matrix.custom.html","formatted_body":"And per Nakano-san’s analysis in https://github.com/w3c/uievents/issues/183#issuecomment-448091687, that <em>seems</em> to maybe come down to being Enter, Shift + Enter and Ctrl + Enter as the exceptions","m.mentions":{},"msgtype":"m.text"},"ts":1737694595974,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$n5oLd7xsA7XFYpkfZZxXXGHVeRKb6zQvlDx89d8NWKg"},
{"content":{"body":"Hype: https://bsky.app/profile/tabatkins.com/post/3lggxdwp4h22w","m.mentions":{},"msgtype":"m.text"},"ts":1737714058267,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$33BPTWIlXhIEkBVV3zc5RaVJ8gDWZJGtu2vN0WanQjQ"},
{"content":{"body":"oh wow, finally being able to get the HTML spec build ported over to Bikeshed would be a big win","m.mentions":{},"msgtype":"m.text"},"ts":1737714404511,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$GCv0lN_tzZAbWx0DdiW7yGbcK2ZicQ-9aHnLBlMrpl4"},
{"content":{"body":"hope Tab gets the perf stuff worked out","m.mentions":{},"msgtype":"m.text"},"ts":1737714439605,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$qxjxMnabwHa9Hm13iUwnqBSiRdsYFNdws6L2ocLd77s"},
{"content":{"body":"zcorpan: FYI https://github.com/w3c/uievents/pull/392","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: FYI https://github.com/w3c/uievents/pull/392","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"msgtype":"m.text"},"ts":1737714451510,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$zzbDMssRpLxhObibv1UMJCruNQ52ne4JIdjumk3-tpw"},
{"content":{"body":"sideshowbarker: I usually just lurk here, but doesn’t enter emit a newline “character value”?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: I usually just lurk here, but doesn’t enter emit a newline “character value”?","msgtype":"m.text"},"ts":1737726431166,"senderName":"Colin Alworth","senderId":"@niloc132:delightfullyoffto.pics","id":"$hnUjtGsjZjdNWBGav-EqtfxYbRoMzNniIZwavdcVrb4"},
{"content":{"body":"Colin Alworth: per-spec at https://w3c.github.io/uievents/#character-value, it seems to mean the same thing as https://w3c.github.io/uievents/#unicode-character-categories, which is:\n> *all the Letter (Ll, Lm, Lo, Lt, Lu), Number (Nd, Nl, No), Punctuation (Pc, Pd, Pe, Pf, Pi, Po, Ps) and Symbol (Sc, Sk, Sm, So) category values*","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@niloc132:delightfullyoffto.pics\">Colin Alworth</a>: per-spec at https://w3c.github.io/uievents/#character-value, it seems to mean the same thing as https://w3c.github.io/uievents/#unicode-character-categories, which is:</p>\n<blockquote>\n<p><em>all the Letter (Ll, Lm, Lo, Lt, Lu), Number (Nd, Nl, No), Punctuation (Pc, Pd, Pe, Pf, Pi, Po, Ps) and Symbol (Sc, Sk, Sm, So) category values</em></p>\n</blockquote>\n","m.mentions":{"user_ids":["@niloc132:delightfullyoffto.pics"]},"msgtype":"m.text"},"ts":1737730091379,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jqbQYFRWH-P73ntAqwY7afC9ku7inxYHLvtEzs9lVaE"},
{"content":{"body":"Hmm, surely space and tab too? Or are you saying those should be excluded as well?","msgtype":"m.text"},"ts":1737730219204,"senderName":"Colin Alworth","senderId":"@niloc132:delightfullyoffto.pics","id":"$EBHzcxFHZ5So7r-1XLbLrKclNQwGU0HyC1Y6aUBlhVc"},
{"content":{"body":"Newline is certainly a Unicode character ","format":"org.matrix.custom.html","formatted_body":"Newline is certainly a Unicode character","msgtype":"m.text"},"ts":1737730242821,"senderName":"Colin Alworth","senderId":"@niloc132:delightfullyoffto.pics","id":"$jY0p0fZSms8Vy4nQ_lX71efVAeHWAMy3U4qUPfh0TwA"},
{"content":{"body":"I’m saying what the spec says it means is _“all the Letter (Ll, Lm, Lo, Lt, Lu), Number (Nd, Nl, No), Punctuation (Pc, Pd, Pe, Pf, Pi, Po, Ps) and Symbol (Sc, Sk, Sm, So) category values”_","format":"org.matrix.custom.html","formatted_body":"I’m saying what the spec says it means is <em>“all the Letter (Ll, Lm, Lo, Lt, Lu), Number (Nd, Nl, No), Punctuation (Pc, Pd, Pe, Pf, Pi, Po, Ps) and Symbol (Sc, Sk, Sm, So) category values”</em>","m.mentions":{},"msgtype":"m.text"},"ts":1737730279652,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$eqaBT0vlYHfNJcFuATwmeG_8_OI4iIw5im8zgPWftHo"},
{"content":{"body":"I think it is time to bring an XML web back.","m.mentions":{},"msgtype":"m.text"},"ts":1737748933544,"senderName":"nsITobin","senderId":"@mattatobin:mozilla.org","id":"$byacfVNfuckWrB4qJw4k4OSzRBDEo7UhLaJ5k03YwRI"},
{"content":{"body":"along the 1.0 lines not the modular nonsense.","m.mentions":{},"msgtype":"m.text"},"ts":1737748963429,"senderName":"nsITobin","senderId":"@mattatobin:mozilla.org","id":"$wJeqx8AiHjgH_LLnuTd1-GF5n19inNR6oTNMYNC_uqk"}
]