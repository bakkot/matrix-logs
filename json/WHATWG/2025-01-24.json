[
{"content":{"body":"Bikeshedding help requested for an error type that includes properties with how much X is available, versus how much X you requested: https://github.com/whatwg/webidl/issues/1463","m.mentions":{},"msgtype":"m.text"},"ts":1737687954441,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$tqsfkjMt49YZCAwxLvHQscRQJOn_ar51EIX7OM668s8"},
{"content":{"body":"I don’t think that to developers using *“Quota”* will seem to storage-specific. I think developers a familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of *“Limit”* or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers a familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"msgtype":"m.text"},"ts":1737688737741,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$TdZf4kDBjOBz7-W_jeK7g27ohUnZYMI6kPbcOiCzd7c"},
{"content":{"body":"That is helpful, thank you!","m.mentions":{},"msgtype":"m.text"},"ts":1737688915385,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$6muc8SYMlIehSzG3TyKYqmEn9Wu9IfejjUFLGirZ0JU"},
{"content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.\n\n","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1737689010831,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w"},
{"content":{"body":"But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter keys, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter keys, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"msgtype":"m.text"},"ts":1737689071882,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$64boki0bnh-HHbIoawWEK_xIVjmFXY15cngvN1CHeQ4"},
{"content":{"body":"Well, all engines except Ladybird (which implements that requirement per-spec)","m.mentions":{},"msgtype":"m.text"},"ts":1737689100195,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7d27U8RJ4GaFKyURMU9J59d0_q17izZ2rylWwsUuCTM"},
{"content":{"body":"So… that requirement doesn’t seem to be compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"So… that requirement doesn’t seem to be compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"msgtype":"m.text"},"ts":1737689240881,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$pWHLCc77Xj90UXiYed6FYEyqL_GoeBCCfMnZpQ5XGi4"},
{"content":{"body":"I’ll file an issue for it, but in the meantime I’m wondering if anybody here might know that background on where it came from","m.mentions":{},"msgtype":"m.text"},"ts":1737689289611,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Nr_1S59P1TxMoVoe72xExoXHOiH5wO7PphKzdicJ4o0"},
{"content":{"body":"* New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"* <p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"m.new_content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` even for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> even for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689305097,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xoMGnqD6_CKmFnN80l8kIL29HzNiLtwrjlvfRZcm7NQ"},
{"content":{"body":"* New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` event for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"* <p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> event for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"m.new_content":{"body":"New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the `keypress` event:\n\n> _If supported by a user agent, this event MUST be dispatched when a key is pressed down, **if and only if that key normally produces a character value**._\n\nIn other words, per-spec: Browsers must not fire the `keypress` event for the Enter key (and modifier keys, and the arrow keys, etc.) — but instead only for the alphanumeric keys and symbol keys.","format":"org.matrix.custom.html","formatted_body":"<p>New/separate unrelated question for the room: At https://w3c.github.io/uievents/#event-type-keypress I find this requirement for the <code>keypress</code> event:</p>\n<blockquote>\n<p><em>If supported by a user agent, this event MUST be dispatched when a key is pressed down, <strong>if and only if that key normally produces a character value</strong>.</em></p>\n</blockquote>\n<p>In other words, per-spec: Browsers must not fire the <code>keypress</code> event for the Enter key (and modifier keys, and the arrow keys, etc.)&nbsp;—&nbsp;but instead only for the alphanumeric keys and symbol keys.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$DMFOZ3gglgQDxPYD2JcE4MwB4wXTbmwni5uH5tkxM8w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689312750,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jWhjO__EKGK9X3sfKwT6-pd00DgJx1ni2pOBKgr3xOg"},
{"content":{"body":"* So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"* So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"m.new_content":{"body":"So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody _did_ implement it per-spec, it seems like it would break all kind of existing sites.","format":"org.matrix.custom.html","formatted_body":"So… that requirement doesn’t seem to be web-compatible. And that makes me wonder why it’s in the spec, and how it made its way into that spec to begin with — I mean, if implementors don’t support it. And given that if everybody <em>did</em> implement it per-spec, it seems like it would break all kind of existing sites.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$pWHLCc77Xj90UXiYed6FYEyqL_GoeBCCfMnZpQ5XGi4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689328465,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$rOJ8a9JjUkzpC7n9a8gY0IMOA16qjREuCElfZJaLPxo"},
{"content":{"body":"* I don’t think that to developers using _“Quota”_ will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of _“Limit”_ or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"* I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"m.new_content":{"body":"I don’t think that to developers using _“Quota”_ will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of _“Limit”_ or other imaginable alternatives would have the same familiarity to developers.","format":"org.matrix.custom.html","formatted_body":"I don’t think that to developers using <em>“Quota”</em> will seem to storage-specific. I think developers are familiar with the context of “quota” being used in the web platform to mean a browser/UA-imposed maximum. I don’t think usage of <em>“Limit”</em> or other imaginable alternatives would have the same familiarity to developers.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$TdZf4kDBjOBz7-W_jeK7g27ohUnZYMI6kPbcOiCzd7c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689350011,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$sl46rOsQfIGiks_kV3HyFTrh7MLaSkMowRFje_T7FHQ"},
{"content":{"body":"* But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter key, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"* But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter key, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"m.new_content":{"body":"But… that’s not what existing engines do. Instead, they do fire `keypress` for the Enter key, and for modifier keys, etc. — everything","format":"org.matrix.custom.html","formatted_body":"But… that’s not what existing engines do. Instead, they do fire <code>keypress</code> for the Enter key, and for modifier keys, etc.&nbsp;— everything","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$64boki0bnh-HHbIoawWEK_xIVjmFXY15cngvN1CHeQ4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737689388217,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$2x2MJBqMJFlPt0DphW-OyOklMR6EdrqhixkaKCckKEU"}
]