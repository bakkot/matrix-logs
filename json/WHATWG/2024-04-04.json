[
{"content":{"body":"Invites sent","m.mentions":{},"msgtype":"m.text"},"ts":1712210998774,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$-lY9hvIBTf_Pwsbd0qyKvwnMzUrv2SjASvXg9aLo6zs"},
{"content":{"body":"Who remembers this gem? https://www.youtube.com/watch?v=zoInPRApZcc (the original site is no longer functional, and it was Flash - https://web.archive.org/web/20110415095516/http://www.xtranormal.com/watch/7991991/web-sockets-we-are-the-first )","m.mentions":{},"msgtype":"m.text"},"ts":1712226321360,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$VJrf6bpW69AajFsrZG9VlBEzBIbQ2kK2vS158h2GW9M"},
{"content":{"body":"Have you heard about the IndexDB? ðŸ˜‚","m.mentions":{},"msgtype":"m.text"},"ts":1712226543391,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pI2Q_gAkIKBjkVXb1Z47WHLF-MTu52FGUomR9khOIF4"},
{"content":{"body":"Luke Warlow: the PR for `StringContext` doesn't have any changes for distinguishability, but I wonder if that's ok. Strings and objects are distinguishable in general, but I'm not sure that that's going to work with `StringContext` annotated strings.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: the PR for <code>StringContext</code> doesn't have any changes for distinguishability, but I wonder if that's ok. Strings and objects are distinguishable in general, but I'm not sure that that's going to work with <code>StringContext</code> annotated strings.","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1712232693842,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$keErGaRiQcDJ3sF5ljNizlSgNFphQVnQjmUKjPtOmGQ"},
{"content":{"body":"since that can take a trusted type object","m.mentions":{},"msgtype":"m.text"},"ts":1712232717291,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$AbVSoadDYhOQBhtfC_oqfEMaIwuOhHBxD0FHnRKU39Q"},
{"content":{"body":"Generally speaking we don't need overloading for the use case of StringContext, and I think that's why the PR has kinda skirted around that issue. Given StringContext has side effects I'm not sure how it could work to resolve the overloads","m.mentions":{},"msgtype":"m.text"},"ts":1712232821176,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$rk1n9UTUp9a5w61AJNJ0VyF_Vb1TnIblujT5cESQirY"},
{"content":{"body":"right, so we might need to make `StringContext`-annotated strings not distinguishable from `object`, or anything that object is not distinguishable from","format":"org.matrix.custom.html","formatted_body":"right, so we might need to make <code>StringContext</code>-annotated strings not distinguishable from <code>object</code>, or anything that object is not distinguishable from","m.mentions":{},"msgtype":"m.text"},"ts":1712232902613,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$NG6rNQsf0JdH-CP53Gr909jT98gohD7Y6YJVOuJiR-s"},
{"content":{"body":"this also affects unions iirc","m.mentions":{},"msgtype":"m.text"},"ts":1712232915314,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$BY41y-Ht_QOZtRXTg4VWf6iP6ALbfephXFB_x0p0ctE"},
{"content":{"body":"The approach TT has taken for where it needs unions is to just use the Trusted type directly and handle the enforcement in the specific algorithm for that call site. So we also don't need to \"support\" that case. The only thing we do need to support is shadowing an IDL attribute on a subtype, I'm not sure how that works spec wise?","m.mentions":{},"msgtype":"m.text"},"ts":1712233064146,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$FnUceMensCNZi--Biu-fROSdqR2UjsQXkyYttGJmQ0w"}
]