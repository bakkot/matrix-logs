[
{"content":{"body":"Invites sent","m.mentions":{},"msgtype":"m.text"},"ts":1712210998774,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$-lY9hvIBTf_Pwsbd0qyKvwnMzUrv2SjASvXg9aLo6zs"},
{"content":{"body":"Who remembers this gem? https://www.youtube.com/watch?v=zoInPRApZcc (the original site is no longer functional, and it was Flash - https://web.archive.org/web/20110415095516/http://www.xtranormal.com/watch/7991991/web-sockets-we-are-the-first )","m.mentions":{},"msgtype":"m.text"},"ts":1712226321360,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$VJrf6bpW69AajFsrZG9VlBEzBIbQ2kK2vS158h2GW9M"},
{"content":{"body":"Have you heard about the IndexDB? ðŸ˜‚","m.mentions":{},"msgtype":"m.text"},"ts":1712226543391,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pI2Q_gAkIKBjkVXb1Z47WHLF-MTu52FGUomR9khOIF4"},
{"content":{"body":"Luke Warlow: the PR for `StringContext` doesn't have any changes for distinguishability, but I wonder if that's ok. Strings and objects are distinguishable in general, but I'm not sure that that's going to work with `StringContext` annotated strings.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>: the PR for <code>StringContext</code> doesn't have any changes for distinguishability, but I wonder if that's ok. Strings and objects are distinguishable in general, but I'm not sure that that's going to work with <code>StringContext</code> annotated strings.","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1712232693842,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$keErGaRiQcDJ3sF5ljNizlSgNFphQVnQjmUKjPtOmGQ"},
{"content":{"body":"since that can take a trusted type object","m.mentions":{},"msgtype":"m.text"},"ts":1712232717291,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$AbVSoadDYhOQBhtfC_oqfEMaIwuOhHBxD0FHnRKU39Q"},
{"content":{"body":"Generally speaking we don't need overloading for the use case of StringContext, and I think that's why the PR has kinda skirted around that issue. Given StringContext has side effects I'm not sure how it could work to resolve the overloads","m.mentions":{},"msgtype":"m.text"},"ts":1712232821176,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$rk1n9UTUp9a5w61AJNJ0VyF_Vb1TnIblujT5cESQirY"},
{"content":{"body":"right, so we might need to make `StringContext`-annotated strings not distinguishable from `object`, or anything that object is not distinguishable from","format":"org.matrix.custom.html","formatted_body":"right, so we might need to make <code>StringContext</code>-annotated strings not distinguishable from <code>object</code>, or anything that object is not distinguishable from","m.mentions":{},"msgtype":"m.text"},"ts":1712232902613,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$NG6rNQsf0JdH-CP53Gr909jT98gohD7Y6YJVOuJiR-s"},
{"content":{"body":"this also affects unions iirc","m.mentions":{},"msgtype":"m.text"},"ts":1712232915314,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$BY41y-Ht_QOZtRXTg4VWf6iP6ALbfephXFB_x0p0ctE"},
{"content":{"body":"The approach TT has taken for where it needs unions is to just use the Trusted type directly and handle the enforcement in the specific algorithm for that call site. So we also don't need to \"support\" that case. The only thing we do need to support is shadowing an IDL attribute on a subtype, I'm not sure how that works spec wise?","m.mentions":{},"msgtype":"m.text"},"ts":1712233064146,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$FnUceMensCNZi--Biu-fROSdqR2UjsQXkyYttGJmQ0w"},
{"content":{"body":"that just adds a property on the derived interface's interface prototype object","m.mentions":{},"msgtype":"m.text"},"ts":1712233346071,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$svXInxh5JiY4ciqd15eOcLPleL4ItRYvVdFj41Qf0hk"},
{"content":{"body":"I assume the shadowing adds a `StringContext` annotation?","format":"org.matrix.custom.html","formatted_body":"I assume the shadowing adds a <code>StringContext</code> annotation?","m.mentions":{},"msgtype":"m.text"},"ts":1712233404685,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$7VS6SppVirrJLRYRl5DOwFxW5ZTwkd9aiCf4gLQl3Oo"},
{"content":{"body":"hmm, but the base interface also has a property for that attribute that would just accept a string","m.mentions":{},"msgtype":"m.text"},"ts":1712233461474,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$lJ4T-j7u8nZuDIz_X5fAo7UH8HxQy3c_T4a6_Jo_Irg"},
{"content":{"body":"and you can call that property's setter directly","m.mentions":{},"msgtype":"m.text"},"ts":1712233478377,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$W1Uc5dur4YFH9qSzhEBn6XM9XRi_m1Tt8yTyTl57JQE"},
{"content":{"body":"In this specific case that's fine as there's another fallback mechanism to protect against it","m.mentions":{},"msgtype":"m.text"},"ts":1712233504043,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$qRw55mH-_qWKOuJZEJcoF4cFTj4aawMFgN3Ceuc5U1c"},
{"content":{"body":"ok","m.mentions":{},"msgtype":"m.text"},"ts":1712233509455,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$oZgbmbW24p2qiUbtuFZ9Uk1NQnSDE5tEqFZvhkeUUBg"},
{"content":{"body":"that should just work as is I think (for attributes)","m.mentions":{},"msgtype":"m.text"},"ts":1712233527665,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$D5Y3wuyB_cAiIWKNWi1gR__yJlmWOK17vBgTO1l9W50"},
{"content":{"body":"Yeah that was my impression too (it does in practice in my implementation). Just wondered if that came into the overloading stuff at all.","m.mentions":{},"msgtype":"m.text"},"ts":1712233571242,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$JJDnvJvsseWhskzTqcZqxQxR70ajlcs7_X2bdaevnAs"},
{"content":{"body":"shouldn't that's for operations","m.mentions":{},"msgtype":"m.text"},"ts":1712233620091,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$Bxg0tD0ZvY9Z1Ty_D1VnEgNbTZXoGDSpVHtBGCRFEbI"},
{"content":{"body":" * shouldn't, that's for operations","m.mentions":{},"m.new_content":{"body":"shouldn't, that's for operations","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Bxg0tD0ZvY9Z1Ty_D1VnEgNbTZXoGDSpVHtBGCRFEbI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712233627381,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$q9XHZYab4ByCNGTCSYp8FuPbvtIyV-obgSTZ1Ad5f9M"},
{"content":{"body":"annevk: is the idea that none of the arguments that have an index >= distinguishing argument index can have a `[StringContext]` extended attribute on their type?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: is the idea that none of the arguments that have an index &gt;= distinguishing argument index can have a <code>[StringContext]</code> extended attribute on their type?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1712235225086,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$zSX-LYIIfb6Km8f5f0ad21NeIL_TBJNJECbdKNvqqJ8"},
{"content":{"body":"peterv: I hadn't really considered that yet. It seems weird that [StringContext] only works some of the time and the remainder you have to patch the specification algorithm directly. Why not just patch the specification algorithm in all cases then?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pvanderbeken:mozilla.org\">peterv</a>: I hadn't really considered that yet. It seems weird that [StringContext] only works some of the time and the remainder you have to patch the specification algorithm directly. Why not just patch the specification algorithm in all cases then?","m.mentions":{"user_ids":["@pvanderbeken:mozilla.org"]},"msgtype":"m.text"},"ts":1712238066520,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cGaO7PXJUKVebdoZgCv5jVFkoJo4mqadbKCqVrAnq8U"},
{"content":{"body":"It almost feels like we should treat `[StringContext]`-annotated strings as a different string type from non-`[StringContext]`-annotated, that way all string types for index < distinguishing argument index must all either have `[StringContext]` or not","format":"org.matrix.custom.html","formatted_body":"It almost feels like we should treat <code>[StringContext]</code>-annotated strings as a different string type from non-<code>[StringContext]</code>-annotated, that way all string types for index &lt; distinguishing argument index must all either have <code>[StringContext]</code> or not","m.mentions":{},"msgtype":"m.text"},"ts":1712238487893,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$qxXLtTz9MhRi0jwv5XRxl4tyDEFwPk3cQQD9nUUOTu4"},
{"content":{"body":"since they must have the same type","m.mentions":{},"msgtype":"m.text"},"ts":1712238496134,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$A_b1Kjd4KnRXZawGFen4k--PtVJTASemgEgrbKRL__c"},
{"content":{"body":"> <@annevk:matrix.org> peterv: I hadn't really considered that yet. It seems weird that [StringContext] only works some of the time and the remainder you have to patch the specification algorithm directly. Why not just patch the specification algorithm in all cases then?\n\nBecause that's much more intrusive in specs and in implementations.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cGaO7PXJUKVebdoZgCv5jVFkoJo4mqadbKCqVrAnq8U?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@pvanderbeken:mozilla.org\">peterv</a>: I hadn't really considered that yet. It seems weird that [StringContext] only works some of the time and the remainder you have to patch the specification algorithm directly. Why not just patch the specification algorithm in all cases then?</blockquote></mx-reply>Because that's much more intrusive in specs and in implementations.","m.mentions":{"user_ids":["@annevk:matrix.org","@pvanderbeken:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cGaO7PXJUKVebdoZgCv5jVFkoJo4mqadbKCqVrAnq8U"}},"msgtype":"m.text"},"ts":1712238522741,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$ldl9z7qynsECAT89oL5BqozMS1kpDgH5mykjkQ2cQ2o"},
{"content":{"body":"if they're in the same position in the argument list that is","m.mentions":{},"msgtype":"m.text"},"ts":1712238537868,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$HHRH64q_gPVLVHhcLfNbkNsXbybRiR2-cdQLrPZY5Wg"},
{"content":{"body":"With this attribute we can avoid touching most callsites and spec algorithms","m.mentions":{},"msgtype":"m.text"},"ts":1712238538703,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$humQfClmQh9joV4_0s2_wpbjg4Rb3TjX1xtUknN6y0g"},
{"content":{"body":"but for index >= distinguishing argument index it's unclear to me what we want","m.mentions":{},"msgtype":"m.text"},"ts":1712238646983,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$R9t7SG808YeH5F7ZiSsOuE_t2uSa70TEk-0iWkeEvIQ"},
{"content":{"body":"where does that come up in practice?","m.mentions":{},"msgtype":"m.text"},"ts":1712238681927,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$kYdC4T0sF6-0yZT11l2f1jUlPYFOq1UWN3BeCr7zG0Q"},
{"content":{"body":"I think it doesn't come up currently because it's sparsely used. Which makes me wonder how many call sites we are worried about here.","m.mentions":{},"msgtype":"m.text"},"ts":1712238733736,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$tPmBFWV9N77A0f1zzEiLrndZ8L40R5AtsvLVCXfdlBw"},
{"content":{"body":"But it's also becoming clear that as a generic IDL utility there's quite a few issues with it which makes me wonder if it will ever see usage beyond Trusted Types.","m.mentions":{},"msgtype":"m.text"},"ts":1712238767730,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Kf9khyHBne1tcGXAKRwm5Gt7jgwRFSiMtWe9LyYCUHM"},
{"content":{"body":"hmm, can we cop out then and disallow that?","m.mentions":{},"msgtype":"m.text"},"ts":1712238778880,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$f5_0bmdbLxjtglg5DwiPGBtSwo0iwKvOcmYPXmTsuZI"},
{"content":{"body":"We could or we could not add this to IDL and instead have the various specification algorithms deal with it directly. As the more complicated cases are already doing.","m.mentions":{},"msgtype":"m.text"},"ts":1712238816227,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$si6-7O_bhMUEE4voKpcwn6r9jSU-PqG5QmcKBJtZZ5c"},
{"content":{"body":"so they would all take `TrustedType or DOM/USVString`?","format":"org.matrix.custom.html","formatted_body":"so they would all take <code>TrustedType or DOM/USVString</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1712238982434,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$dwDGyl3aEtFOdMsWqu6n1RaQe5w75biynMUeCIrT2iE"},
{"content":{"body":"a bit messy for attributes, since they'll only return a string ever","m.mentions":{},"msgtype":"m.text"},"ts":1712239029086,"senderName":"peterv","senderId":"@pvanderbeken:mozilla.org","id":"$pVEp8K9aMSiaQP3w4xkPc50enRG4o73I19tODnes5TI"},
{"content":{"body":"Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases Luke Warlow?","format":"org.matrix.custom.html","formatted_body":"Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>?","m.mentions":{"user_ids":["@lwarlow:igalia.com"]},"msgtype":"m.text"},"ts":1712239060685,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$w6alvAgxnlxPRLjzCyzBZPTgOEUJR7JacAn87WiLh9c"},
{"content":{"body":"Yeah, I guess this brings up attributes really needing to be separated into setters and getters again.","m.mentions":{},"msgtype":"m.text"},"ts":1712239089953,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9BpCzPIkefeByJP3ZZAqOuy9iCu7yOEqzhDBzWMtXRo"},
{"content":{"body":"> <@annevk:matrix.org> Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases Luke Warlow?\n\nYeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$w6alvAgxnlxPRLjzCyzBZPTgOEUJR7JacAn87WiLh9c?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>?</blockquote></mx-reply>Yeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$w6alvAgxnlxPRLjzCyzBZPTgOEUJR7JacAn87WiLh9c"}},"msgtype":"m.text"},"ts":1712239125240,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$brP_rQEE-6h0FECrbMw5MRE0r_4O_29_tFdnSNTSR90"},
{"content":{"body":"> <@annevk:matrix.org> Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases Luke Warlow?\n\n * Yeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.\n\nIt uses a union (so we don't have to deal with nullable types with StringContext) and then step 1 is just to call the algorithm that handles converting to a string (with enforcement)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$w6alvAgxnlxPRLjzCyzBZPTgOEUJR7JacAn87WiLh9c?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>Yeah and the first step of their algorithm does something to turn that into an Infra string. Presumably that matches what we do for the more complicated cases <a href=\"https://matrix.to/#/@lwarlow:igalia.com\">Luke Warlow</a>?</blockquote></mx-reply> * <p>Yeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.</p>\n<p>It uses a union (so we don't have to deal with nullable types with StringContext) and then step 1 is just to call the algorithm that handles converting to a string (with enforcement)</p>\n","m.mentions":{},"m.new_content":{"body":"Yeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.\n\nIt uses a union (so we don't have to deal with nullable types with StringContext) and then step 1 is just to call the algorithm that handles converting to a string (with enforcement)","format":"org.matrix.custom.html","formatted_body":"<p>Yeah pretty much, https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute shows a good example.</p>\n<p>It uses a union (so we don't have to deal with nullable types with StringContext) and then step 1 is just to call the algorithm that handles converting to a string (with enforcement)</p>\n","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$brP_rQEE-6h0FECrbMw5MRE0r_4O_29_tFdnSNTSR90","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712239165424,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$rfw9eGQ6csquxbCvENHqD-9qLprGJO2SqMQEMWNNXeU"},
{"content":{"body":"Fwiw at least in WebKit if you have an attribute with a union type the function can just return one of the types directly and it'll handle it further up. So at least the getters don't need to worry about variants","m.mentions":{},"msgtype":"m.text"},"ts":1712239217920,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$VJadO0p8KfTlZCSSoqVH7GbSCw6LQ0djAAGbEB06xtk"},
{"content":{"body":"> <@annevk:matrix.org> I think it doesn't come up currently because it's sparsely used. Which makes me wonder how many call sites we are worried about here.\n\nI'm counting the callsites we'd have to change now","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$tPmBFWV9N77A0f1zzEiLrndZ8L40R5AtsvLVCXfdlBw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>I think it doesn&#39;t come up currently because it&#39;s sparsely used. Which makes me wonder how many call sites we are worried about here.</blockquote></mx-reply>I'm counting the callsites we'd have to change now","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$tPmBFWV9N77A0f1zzEiLrndZ8L40R5AtsvLVCXfdlBw"}},"msgtype":"m.text"},"ts":1712239279456,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$ZFzc94ffpEpMquaMnXcfir7aOB6z7Wjjv89rFxfy8Hw"},
{"content":{"body":"To me that doesn't seem so bad and preferable over this StringContext business. Especially if there's only a dozen or so callers that use StringContext currently. Or are there many more?","m.mentions":{},"msgtype":"m.text"},"ts":1712239288126,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$cuCk-DcKth1Huyr5CZuMnZ-I-5WNxGswKU_ywO74YQk"},
{"content":{"body":"```\nElement innerHTML\nElement outerHTML\nElement insertAdjacentHTML\nElement setHTMLUnsafe\n\nShadowRoot innerHTML\nShadowRoot setHTMLUnsafe\n\nDocument parseHTMLUnsafe\nDocument parseFromString\n\nRange createContextualFragment\n\nHTMLIframeElement srcdoc\n\nWindow/Worker setTimeout\nWindow/Worker setInterval\n\n\nHTMLScriptElement innerText\nHTMLScriptElement src\nHTMLScriptElement text\n\nServiceWorkerContainer register\n\nWorkerGlobalScope importScripts\n```\n\n","format":"org.matrix.custom.html","formatted_body":"<pre><code>Element innerHTML\nElement outerHTML\nElement insertAdjacentHTML\nElement setHTMLUnsafe\n\nShadowRoot innerHTML\nShadowRoot setHTMLUnsafe\n\nDocument parseHTMLUnsafe\nDocument parseFromString\n\nRange createContextualFragment\n\nHTMLIframeElement srcdoc\n\nWindow/Worker setTimeout\nWindow/Worker setInterval\n\n\nHTMLScriptElement innerText\nHTMLScriptElement src\nHTMLScriptElement text\n\nServiceWorkerContainer register\n\nWorkerGlobalScope importScripts\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1712239729214,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$gMOqr_PMa5sKIQF_celqSRKP_pTYpeEl_ik1_6oIsAc"},
{"content":{"body":"I think that's the full list (unless we find anymore missing ones ðŸ™ˆ), so just shy of 20.","m.mentions":{},"msgtype":"m.text"},"ts":1712239768570,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$TtN60jtmaUiTyMcAfGocQS_pz_e6CbaCNjmxGb7WM8k"},
{"content":{"body":"Where does HTMLScriptElement innerText come from?","m.mentions":{},"msgtype":"m.text"},"ts":1712239889635,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$mdWvmdOvvCk11bsD2WfSNEh0UdNfzNkfmnDIgUqQ6M0"},
{"content":{"body":"https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#the-textContent-idl-attribute This PR which partially fixes the TT specs script handling","m.mentions":{},"msgtype":"m.text"},"ts":1712239918652,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$s52Kd0nV9n0U_x5Vchu3T--3WNbasUwUW5BA99Vt4gg"},
{"content":{"body":" * https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#dom-htmlscriptelement-innertext This PR which partially fixes the TT specs script handling","m.mentions":{},"m.new_content":{"body":"https://pr-preview.s3.amazonaws.com/lukewarlow/trusted-types/pull/484.html#dom-htmlscriptelement-innertext This PR which partially fixes the TT specs script handling","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$s52Kd0nV9n0U_x5Vchu3T--3WNbasUwUW5BA99Vt4gg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1712239943925,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$zVD837-sNqOKdvlIJTjZ2H3Bs8a_ODdJiBVLKFkv7uQ"},
{"content":{"body":"> <@annevk:matrix.org> To me that doesn't seem so bad and preferable over this StringContext business. Especially if there's only a dozen or so callers that use StringContext currently. Or are there many more?\n\nMy gut feeling is this attribute probably won't get used outside of TT. And that the changes to algorithms are probably unintrusive enough (exactly because they're the simple cases) that it's probably fine to just go with union IDL types everywhere. Obviously it will require changes to implementations, but its entirely an implementation detail (not an observable difference in behaviour) so it's not too much of a hassle?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$cuCk-DcKth1Huyr5CZuMnZ-I-5WNxGswKU_ywO74YQk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>To me that doesn&#39;t seem so bad and preferable over this StringContext business. Especially if there&#39;s only a dozen or so callers that use StringContext currently. Or are there many more?</blockquote></mx-reply>My gut feeling is this attribute probably won't get used outside of TT. And that the changes to algorithms are probably unintrusive enough (exactly because they're the simple cases) that it's probably fine to just go with union IDL types everywhere. Obviously it will require changes to implementations, but its entirely an implementation detail (not an observable difference in behaviour) so it's not too much of a hassle?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cuCk-DcKth1Huyr5CZuMnZ-I-5WNxGswKU_ywO74YQk"}},"msgtype":"m.text"},"ts":1712240088822,"senderName":"Luke Warlow","senderId":"@lwarlow:igalia.com","id":"$UkpL3iSSRz4cLPhhSHtu4rnmqWdRT0PMWD-0-baiJ78"}
]