[
{"content":{"body":"Seems like the sort of thing where if your concern was interop, step 1 would be an exhaustive test suite.","m.mentions":{},"msgtype":"m.text"},"ts":1710293087287,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Fu1IsGIRYoNutZmmnKZMXLOkGIPmbcUzxJzP2rjXkI0"},
{"content":{"body":"I guess my biggest concern is whether we can maybe prevent other implementors from spending time evaluating that algorithm, if it‘s not actually important or useful for it to be actually be implemented as-is to the letter of the spec.","m.mentions":{},"msgtype":"m.text"},"ts":1710293366575,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Pk9rdLY0uXsUxOdXprzPntJS3fyP7pBioZgAJhTipA8"},
{"content":{"body":"It’s not clear to me at least what the algorithm is actually based on","m.mentions":{},"msgtype":"m.text"},"ts":1710293385717,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$b2Zex3Z9p8eRrGNLD30-peNQAiLmTqlFgkLzJUZIS-k"},
{"content":{"body":"For example, was is written based on reading the double definition in the IEEE 754 spec and then attempting to put together an algorithm for parsing that? Or else was it written by looking at existing parsing code for double-parsing functions (`strtod` or whatever)?","format":"org.matrix.custom.html","formatted_body":"For example, was is written based on reading the double definition in the IEEE 754 spec and then attempting to put together an algorithm for parsing that? Or else was it written by looking at existing parsing code for double-parsing functions (<code>strtod</code> or whatever)?","m.mentions":{},"msgtype":"m.text"},"ts":1710293486757,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$J4gvGLxBwWfINdq8tuL4r2fJ6ZvsiyTvmBEaFKe6gM8"},
{"content":{"body":"I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like\n> _Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as [double-conversion](https://github.com/google/double-conversion) and [fast_float](https://github.com/fastfloat/fast_float)._\n…or whatever similar wording we might be able to get agreement on.","format":"org.matrix.custom.html","formatted_body":"<p>I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like</p>\n<blockquote>\n<p><em>Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as <a href=\"https://github.com/google/double-conversion\">double-conversion</a> and <a href=\"https://github.com/fastfloat/fast_float\">fast_float</a>.</em><br>…or whatever similar wording we might be able to get agreement on.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1710293756894,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$MXJLq2AwMv4nhmeKpuw745z-K1CrmtgCbTavqodVpIA"},
{"content":{"body":" * I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like\n\n> _Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as [double-conversion](https://github.com/google/double-conversion) and [fast\\_float](https://github.com/fastfloat/fast_float)._\n\n…or whatever similar wording we might be able to get agreement on.","format":"org.matrix.custom.html","formatted_body":" * <p>I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like</p>\n<blockquote>\n<p><em>Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as <a href=\"https://github.com/google/double-conversion\">double-conversion</a> and <a href=\"https://github.com/fastfloat/fast_float\">fast_float</a>.</em></p>\n</blockquote>\n<p>…or whatever similar wording we might be able to get agreement on.</p>\n","m.mentions":{},"m.new_content":{"body":"I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like\n\n> _Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as [double-conversion](https://github.com/google/double-conversion) and [fast\\_float](https://github.com/fastfloat/fast_float)._\n\n…or whatever similar wording we might be able to get agreement on.","format":"org.matrix.custom.html","formatted_body":"<p>I would personally be happy with us just adding a non-normative Note to the end or that algorithm, saying something like</p>\n<blockquote>\n<p><em>Note: In practice, rather than handcrafting an implementation of the above algorithm, most existing implementations use double-parsing functions from libraries such as <a href=\"https://github.com/google/double-conversion\">double-conversion</a> and <a href=\"https://github.com/fastfloat/fast_float\">fast_float</a>.</em></p>\n</blockquote>\n<p>…or whatever similar wording we might be able to get agreement on.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$MXJLq2AwMv4nhmeKpuw745z-K1CrmtgCbTavqodVpIA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1710293773598,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$JnOyxKxFKxX1pzCoFSAmmmgPFw5zmuhSwwT6Zl4onFg"}
]