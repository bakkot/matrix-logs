[
{"content":{"body":"PSA: PR to change all current `data-x=\"syntax-attributes\"` usage (that is, the syntax for attribute declarations in markup) from *“attribute”* to *“attribute declaration”*. ","format":"org.matrix.custom.html","formatted_body":"PSA: PR to change all current <code>data-x=\"syntax-attributes\"</code> usage (that is, the syntax for attribute declarations in markup) from <em>“attribute”</em> to <em>“attribute declaration”</em>.","m.mentions":{},"msgtype":"m.text"},"ts":1731121433945,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$whdyv41yzL8EU4_vay6qoO0z3x3_KwJxawFRZroiies"},
{"content":{"body":" * PSA: PR to change all current `data-x=\"syntax-attributes\"` usage (that is, the syntax for attribute declarations in markup) from _“attribute”_ to _“attribute declaration”_. https://github.com/whatwg/html/pull/10756","format":"org.matrix.custom.html","formatted_body":" * PSA: PR to change all current <code>data-x=\"syntax-attributes\"</code> usage (that is, the syntax for attribute declarations in markup) from <em>“attribute”</em> to <em>“attribute declaration”</em>. https://github.com/whatwg/html/pull/10756","m.mentions":{},"m.new_content":{"body":"PSA: PR to change all current `data-x=\"syntax-attributes\"` usage (that is, the syntax for attribute declarations in markup) from _“attribute”_ to _“attribute declaration”_. https://github.com/whatwg/html/pull/10756","format":"org.matrix.custom.html","formatted_body":"PSA: PR to change all current <code>data-x=\"syntax-attributes\"</code> usage (that is, the syntax for attribute declarations in markup) from <em>“attribute”</em> to <em>“attribute declaration”</em>. https://github.com/whatwg/html/pull/10756","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$whdyv41yzL8EU4_vay6qoO0z3x3_KwJxawFRZroiies","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121440244,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$IHj1ehjklNjJiIQiATShFKhp3bkhJ0XqgQL82L4gyCU"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or wherever).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or wherever).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or wherever).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or wherever).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121507911,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$xoa0l4MxYmeb5ROY1PB0T6ykuNF-ZlH3-80L-t4r5to"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121520538,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$brqlXZBmXpgiIbJSrMYBEa9UdkQ5bv1teXSw8wnyFCw"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script and the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script and the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121547432,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$WlOz04EUIYeV7-R6hoQuTGZSoNTOduOGQNLrVZefIO4"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script, the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script, the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script, the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script, the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build), then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121563187,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$S9IDbmoPM4OMTCbnIUls29cLjXTUXhsXzzWjtq1hkDA"},
{"content":{"body":" * PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script, the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build) — then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":" * <p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script, the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build)&nbsp;— then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"m.new_content":{"body":"PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the `./build.sh` script, the build fails with an _“ld: library 'System' not found”_ error (in the Rust part of the build) — then to fix that problem, (re)run the build script like this:\n\n```\nPATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n```\n\n…or else just export those `PATH` and `LIBRARY_PATH` settings to your environment (e.g., in your `~/.bashrc` or such).","format":"org.matrix.custom.html","formatted_body":"<p>PSA: If your environment is macOS and you’re working on an HTML spec PR and when you try to run the <code>./build.sh</code> script, the build fails with an <em>“ld: library 'System' not found”</em> error (in the Rust part of the build)&nbsp;— then to fix that problem, (re)run the build script like this:</p>\n<pre><code>PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib:$PATH \\\nLIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\" \\\n./build.sh\n</code></pre>\n<p>…or else just export those <code>PATH</code> and <code>LIBRARY_PATH</code> settings to your environment (e.g., in your <code>~/.bashrc</code> or such).</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GptJxfd4GkVpA8n0qFv-VL56RUvU6sDtHUYK6qjKY50","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1731121574256,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$UMtsXWjcF63b9f9Yp0BmpE88YMqgaoEdUvVG7k0Bsys"}
]