[
{"content":{"body":"Noam Rosenthal: why does https://html.spec.whatwg.org/#prepare-an-image-for-presentation return early in several steps, without getting to one of step 14 or 15? Also step 16 is only run if no other step returns.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: why does https://html.spec.whatwg.org/#prepare-an-image-for-presentation return early in several steps, without getting to one of step 14 or 15? Also step 16 is only run if no other step returns.","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760352762488,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$D0dGGcLaj4t1Cnb2Xq6acDpkhFLT4cBpLAJ-BFJ41kc"},
{"content":{"body":"will take a look. Haven't touched that since 2020.","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$D0dGGcLaj4t1Cnb2Xq6acDpkhFLT4cBpLAJ-BFJ41kc"}},"msgtype":"m.text"},"ts":1760352827149,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Pzhr4AQ0JiLLuI-XsGuZLN7AI2fPKDDCXEZoJyO8UUY"},
{"content":{"body":"Regarding step 16 - it's perhaps ambiguous from reading but this step is optional... it's not like the image is not going to be presented without it. Step 16 is like saying \"adjust the image presentation, now that the preferred density-correction dimensions are set\"","m.mentions":{},"m.relates_to":{"m.in_reply_to":{"event_id":"$Pzhr4AQ0JiLLuI-XsGuZLN7AI2fPKDDCXEZoJyO8UUY"}},"msgtype":"m.text"},"ts":1760353041140,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$bb_gsfpbFECQGWntWwwpf9CrGoRsKYy94gcCOJZSTBc"},
{"content":{"body":"Steps 8, 9, 10: it was a mitigation to having the density set accidentally due to e.g. EXIF information being copied around.\nRequiring the dimensions to have positive numbers and only use inches narrows the spectrum for accidental density setting.\nWe can reason about making it more lax, it was a bit of a judgement call at the time","m.mentions":{},"msgtype":"m.text"},"ts":1760353164033,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$kQxjierM2Z2llmUhLnEuH2Vy7BLA0jHXeheTktAKH2w"},
{"content":{"body":"Noam Rosenthal: so then PixelXDimension and PixelYDimension are also ignored for the early return cases","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: so then PixelXDimension and PixelYDimension are also ignored for the early return cases","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760353266950,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$XhVEAvBXcQ-u5nHElPyNQ_9aWH4TD-XXV8Ubj4qlRzc"},
{"content":{"body":"yea they are","m.mentions":{},"msgtype":"m.text"},"ts":1760353280621,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$PK1NYymzHYhVrGuWT-T8Zw8kHVY5phBM5uKMYgOKv8U"},
{"content":{"body":"it's like \"this is accidental EXIF information\"","m.mentions":{},"msgtype":"m.text"},"ts":1760353294369,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$q0D5x5jtpR7C9YmUt1HSf7CgqaxMNqDf5LbYQBDWuwM"},
{"content":{"body":"I see, thanks. It's still not clear to me that step 16 is not important, as it was the text in place of this algorithm before. It can be read as \"don't render cross-origin images\" or \"don't render images with bogus EXIF\"","m.mentions":{},"msgtype":"m.text"},"ts":1760353397354,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$WZv-nDTBQm6JMaflrajbtPi8oVZ8NLeXoVacNVMWwVc"},
{"content":{"body":"I'll file an issue","m.mentions":{},"msgtype":"m.text"},"ts":1760353467589,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$lyUDVcK34p38Wsdzphe8Lize8pQY7ymTzaBzhIG5mGY"},
{"content":{"body":"Agreed, it can&should be made clearer. If you file an issue I'm happy to file a PR","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$WZv-nDTBQm6JMaflrajbtPi8oVZ8NLeXoVacNVMWwVc"}},"msgtype":"m.text"},"ts":1760353539502,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$nZDHOoo-GyGDfevY38MSH8YEZpJ-Fdv9VseSVFSiMnw"},
{"content":{"body":"Noam Rosenthal: https://github.com/whatwg/html/issues/11777","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: https://github.com/whatwg/html/issues/11777","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760353703812,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$zfeMxP4uC1LNwgqa_-3pyVnbkErDiLAXk4R8mF4O-Fc"},
{"content":{"body":"Noam Rosenthal: Reviewing [#11762](https://github.com/whatwg/html/pull/11762) right now, thanks for working on this! I like the idea of passing the upcoming tracker into the event firing mechanism, but now I wonder if we need to keep the upcoming trackers in the global state at all, or if we can get away with just passing them around. That way we're less prone to accidentally breaking global state. \nThe only reason I see currently (I may be wrong though) why we need the `upcoming non-traverse API method tracker` would be to signal that navigation has aborted ([this step in `navigate()`](https://html.spec.whatwg.org/#dom-navigation-navigate:~:text=If%20this%27s%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20is%20apiMethodTracker%2C%20then)), but I bet we can transport this information in another fashion (which may even be easier to understand). \nWDYT?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: Reviewing <a href=\"https://github.com/whatwg/html/pull/11762\">#11762</a> right now, thanks for working on this! I like the idea of passing the upcoming tracker into the event firing mechanism, but now I wonder if we need to keep the upcoming trackers in the global state at all, or if we can get away with just passing them around. That way we're less prone to accidentally breaking global state.<br>The only reason I see currently (I may be wrong though) why we need the <code>upcoming non-traverse API method tracker</code> would be to signal that navigation has aborted (<a href=\"https://html.spec.whatwg.org/#dom-navigation-navigate:~:text=If%20this%27s%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20is%20apiMethodTracker%2C%20then\">this step in <code>navigate()</code></a>), but I bet we can transport this information in another fashion (which may even be easier to understand).<br>WDYT?","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760358401187,"senderName":"jjaschke","senderId":"@jjaschke:mozilla.org","id":"$RtFdGccZAVX7NJ-zpxDBLd6-kOOIqXko-0nSM3kJyFg"},
{"content":{"body":"Yea it would be great not to have those tidbits of global state... let me scan it a few times :)","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RtFdGccZAVX7NJ-zpxDBLd6-kOOIqXko-0nSM3kJyFg"}},"msgtype":"m.text"},"ts":1760358771111,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$-4-9K240joTsZueAExZI4WgfPGrMVOzaf1S0rjL9UZo"},
{"content":{"body":"Oh, also just noticed, the promote upcoming to ongoing algorithm that you inlined is also used in [reload()](https://html.spec.whatwg.org/#navigation-api-initiating-navigations:reload-2:~:text=Let%20apiMethodTracker%20be%20the%20result%20of%20maybe%20setting%20the%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20for%20this%20given%20info%20and%20serializedState%2E,-Reload).","format":"org.matrix.custom.html","formatted_body":"Oh, also just noticed, the promote upcoming to ongoing algorithm that you inlined is also used in <a href=\"https://html.spec.whatwg.org/#navigation-api-initiating-navigations:reload-2:~:text=Let%20apiMethodTracker%20be%20the%20result%20of%20maybe%20setting%20the%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20for%20this%20given%20info%20and%20serializedState%2E,-Reload\">reload()</a>.","m.mentions":{},"msgtype":"m.text"},"ts":1760358838758,"senderName":"jjaschke","senderId":"@jjaschke:mozilla.org","id":"$mLEODH7OUwTc9UW2Q5K5UlbX6cYZ8Ad01q3Ayegx0C4"},
{"content":{"body":"THat's not that algo, it's \"maybe setting\", not \"promote\". There was only one use of \"promote\"","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$mLEODH7OUwTc9UW2Q5K5UlbX6cYZ8Ad01q3Ayegx0C4"}},"msgtype":"m.text"},"ts":1760359169910,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$ib5GQFRmvwA5dvgoAIn9z-97RL6k7IOvj3fkbU5138o"},
{"content":{"body":"I think `navigate` can have a return value of whether the navigation was aborted prior to the promotion step","format":"org.matrix.custom.html","formatted_body":"I think <code>navigate</code> can have a return value of whether the navigation was aborted prior to the promotion step","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$RtFdGccZAVX7NJ-zpxDBLd6-kOOIqXko-0nSM3kJyFg"}},"msgtype":"m.text"},"ts":1760359206788,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$320ekRBnOd3CWmD5jSnwNJN4JSZUHomdTy9PXMb1248"},
{"content":{"body":"Ugh, of course. \nBut, shouldn't we do the same we do for navigate (extract the upcoming tracker, then run the abort loop, then pass it back in) for reload? ","m.mentions":{"user_ids":["@noamr:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ib5GQFRmvwA5dvgoAIn9z-97RL6k7IOvj3fkbU5138o"}},"msgtype":"m.text"},"ts":1760359505580,"senderName":"jjaschke","senderId":"@jjaschke:mozilla.org","id":"$O_fnBEnpx0swZA_sR6PQpQtdlDLju-FxkO9c7o9BTGs"},
{"content":{"body":"No need. Because we do that at the beginning of https://html.spec.whatwg.org/#fire-a-push/replace/reload-navigate-event before we abort the previous one. It's only needed in the regular `navigate()` because it's also aborted earlier","format":"org.matrix.custom.html","formatted_body":"No need. Because we do that at the beginning of https://html.spec.whatwg.org/#fire-a-push/replace/reload-navigate-event before we abort the previous one. It's only needed in the regular <code>navigate()</code> because it's also aborted earlier","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$O_fnBEnpx0swZA_sR6PQpQtdlDLju-FxkO9c7o9BTGs"}},"msgtype":"m.text"},"ts":1760359635524,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$K3crtd1fjCgteU9q7M2W0viV7o2kD82VIpAAZmxUdfI"},
{"content":{"body":"Oh sorry we don't. sec","m.mentions":{},"msgtype":"m.text"},"ts":1760359670309,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$6IqZtfxn7hUQCa6NuY5HD4OXNqvmujVFPulpCLxFcsQ"},
{"content":{"body":"* Oh sorry we don't. will update","m.mentions":{},"m.new_content":{"body":"Oh sorry we don't. will update","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6IqZtfxn7hUQCa6NuY5HD4OXNqvmujVFPulpCLxFcsQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1760359858185,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$6T3QQpYeMibqyCb7JDRrrlkArRPX8cwKkxzv2zmw8yY"},
{"content":{"body":"Noam Rosenthal : I see two ways we could follow. One would be to remove `upcoming non-traverse API method tracker` altogether and just pass it around (if that works, I'd prefer that). Or we keep it, but then I think it should be enough to move it out of the global state [here](https://whatpr.org/html/11762/305f5a1...3f2f0bc/nav-history-apis.html#:~:text=If%20upcomingMethodTracker%20is%20null%2C%20then%20set%20upcomingMethodTracker%20to%20the%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20%2E), then I don't think we need the change in the navigate algorithm (and pass the upcoming non-traverse tracker into the event firing algorithm)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a> : I see two ways we could follow. One would be to remove <code>upcoming non-traverse API method tracker</code> altogether and just pass it around (if that works, I'd prefer that). Or we keep it, but then I think it should be enough to move it out of the global state <a href=\"https://whatpr.org/html/11762/305f5a1...3f2f0bc/nav-history-apis.html#:~:text=If%20upcomingMethodTracker%20is%20null%2C%20then%20set%20upcomingMethodTracker%20to%20the%20upcoming%20non%2Dtraverse%20API%20method%20tracker%20%2E\">here</a>, then I don't think we need the change in the navigate algorithm (and pass the upcoming non-traverse tracker into the event firing algorithm)","m.mentions":{"user_ids":["@noamr:matrix.org"]},"msgtype":"m.text"},"ts":1760359996753,"senderName":"jjaschke","senderId":"@jjaschke:mozilla.org","id":"$r9jh3V7fd1tUjVNNCW-1OZJUs0GQhiEr8olMAYKfb5o"},
{"content":{"body":"That's not enough because `navigateerror` can also be called from https://html.spec.whatwg.org/#beginning-navigation:set-the-ongoing-navigation","format":"org.matrix.custom.html","formatted_body":"That's not enough because <code>navigateerror</code> can also be called from https://html.spec.whatwg.org/#beginning-navigation:set-the-ongoing-navigation","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$r9jh3V7fd1tUjVNNCW-1OZJUs0GQhiEr8olMAYKfb5o"}},"msgtype":"m.text"},"ts":1760360128887,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$uQGi5bwZkI-TrbGsHeukUIG1Fls21sAfkb9MaewzLMI"},
{"content":{"body":"Thanks. Then I'd hope we can go for variant one and remove it from the global state whatsoever.","m.mentions":{},"msgtype":"m.text"},"ts":1760360212686,"senderName":"jjaschke","senderId":"@jjaschke:mozilla.org","id":"$dj6p3A58DdKJqBsRctmRhgree6RJriFE5Ghn78YH6Ec"},
{"content":{"body":"https://github.com/whatwg/html/pull/11779","m.mentions":{"user_ids":["@zcorpan:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$zfeMxP4uC1LNwgqa_-3pyVnbkErDiLAXk4R8mF4O-Fc"}},"msgtype":"m.text"},"ts":1760360551192,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$m7LKYXrnpLUarwCrDU1MjMaiY3ygpPrBw-XOr7eeTSs"},
{"content":{"body":"OK I think I got it (in the new PR). I moved that state to be a boolean \"has been promoted\" on the method tracker. then we don't have to mess so much with `navigate`","format":"org.matrix.custom.html","formatted_body":"OK I think I got it (in the new PR). I moved that state to be a boolean \"has been promoted\" on the method tracker. then we don't have to mess so much with <code>navigate</code>","m.mentions":{"user_ids":["@jjaschke:mozilla.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$dj6p3A58DdKJqBsRctmRhgree6RJriFE5Ghn78YH6Ec"}},"msgtype":"m.text"},"ts":1760363046352,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$JaNvogePHEitZq-XCEGdNUY2SdUCVrMmOH0FLoarXIk"},
{"content":{"body":"this \"upcoming method tracker\" bit is only for `navigate()` and `reload()` calls to ensure that those calls return value is in sync with `navigation.transition` etc. so I think this new design is cleaner... it's either created early in those calls and passed as an argument, or later on for use of `navigation.transition` and the rest.","format":"org.matrix.custom.html","formatted_body":"this \"upcoming method tracker\" bit is only for <code>navigate()</code> and <code>reload()</code> calls to ensure that those calls return value is in sync with <code>navigation.transition</code> etc. so I think this new design is cleaner... it's either created early in those calls and passed as an argument, or later on for use of <code>navigation.transition</code> and the rest.","m.mentions":{},"msgtype":"m.text"},"ts":1760363197990,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$KdS_FfmSwet-sYBOp3nySTpsnlvz6IBiF1lQbW9TbCE"}
]