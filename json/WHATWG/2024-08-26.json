[
{"content":{"body":"Question for any and all: When you want to copy the text of a particular algorithm from a spec and preserve the step numbers, what mechanism do you use?\n\nI mean specifically, how do you get around the problem that if you just select the text from the HTML version of the spec, and you try paste into some other place, the step numbers aren’t preserved.","m.mentions":{},"msgtype":"m.text"},"ts":1724639796312,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$lpXPCMdYwlCay8qF_STzDIC-mPw2Fthtg4qlx7U00kk"},
{"content":{"body":"For `input type=number` with a user-input value of `+1`, should the expected result per-spec be `1`, and not the empty string?","format":"org.matrix.custom.html","formatted_body":"For <code>input type=number</code> with a user-input value of <code>+1</code>, should the expected result per-spec be <code>1</code>, and not the empty string?","m.mentions":{},"msgtype":"m.text"},"ts":1724657468939,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$jj1B3ux7oeLYbES2M-NG5_P4LB0zlUCtzGf3NCceVYw"},
{"content":{"body":"I’m looking at the tests at https://wpt.fyi/results/html/semantics/forms/the-input-element/number.html, and specifically at the `{value: \"+1\", expected: \"\", testname: \"value = +1\"}` and `{value: \"1.\", expected: \"\", testname: \"value ending with '.'\"}` tests in https://github.com/web-platform-tests/wpt/blob/master/html/semantics/forms/the-input-element/number.html","format":"org.matrix.custom.html","formatted_body":"I’m looking at the tests at https://wpt.fyi/results/html/semantics/forms/the-input-element/number.html, and specifically at the <code>{value: \"+1\", expected: \"\", testname: \"value = +1\"}</code> and <code>{value: \"1.\", expected: \"\", testname: \"value ending with '.'\"}</code> tests in https://github.com/web-platform-tests/wpt/blob/master/html/semantics/forms/the-input-element/number.html","m.mentions":{},"msgtype":"m.text"},"ts":1724657579092,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$i6xqyyN5J9YQj0la7TaVQZiUo91eCwg1Zfl8VsZHxBw"},
{"content":{"body":"…and I’m looking at what the spec says at https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):valid-floating-point-number — which is:\n> *User agents must not allow the user to set the value to a non-empty string that is not a valid floating-point number. If the user agent provides a user interface for selecting a number, then the value must be set to the best representation of the number representing the user's selection as a floating-point number.*","format":"org.matrix.custom.html","formatted_body":"<p>…and I’m looking at what the spec says at https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):valid-floating-point-number — which is:</p>\n<blockquote>\n<p><em>User agents must not allow the user to set the value to a non-empty string that is not a valid floating-point number. If the user agent provides a user interface for selecting a number, then the value must be set to the best representation of the number representing the user's selection as a floating-point number.</em></p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1724657685568,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$7qsflQY0sGD9AGgA1NJC_t18Fjj_p-zN-myZJC-0SY4"},
{"content":{"body":"…where “best representation of the number representing the user's selection as a floating-point number” is: the string obtained from running the JS *ToString(n)* operation on the parsed number _n_.","format":"org.matrix.custom.html","formatted_body":"…where “best representation of the number representing the user's selection as a floating-point number” is: the string obtained from running the JS <em>ToString(n)</em> operation on the parsed number <em>n</em>.","m.mentions":{},"msgtype":"m.text"},"ts":1724657825167,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$YhiN8EUgj82DDg2uZGSuF-NLq3kIA3M1wY_Q57yjHAg"},
{"content":{"body":"So, given all that, it would seem like for the relevant WPT tests, the expected result for the input `+1` would be `1` — and not the empty string.","format":"org.matrix.custom.html","formatted_body":"So, given all that, it would seem like for the relevant WPT tests, the expected result for the input <code>+1</code> would be <code>1</code> — and not the empty string.","m.mentions":{},"msgtype":"m.text"},"ts":1724657907860,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$hRBZEAlFtfOWYstSTk7NGA0oM_y03og4BKQI_bJSMfQ"},
{"content":{"body":"…since `1` would seem like the “best representation” of `+1`","format":"org.matrix.custom.html","formatted_body":"…since <code>1</code> would seem like the “best representation” of <code>+1</code>","m.mentions":{},"msgtype":"m.text"},"ts":1724658001231,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$P4aMzbe2MGhUkx2L-M_fWA6bZdjmKfKQrEFlXEzPiro"},
{"content":{"body":"And similarly for the input `1.` — it seems like the test expectation for that should `1`","format":"org.matrix.custom.html","formatted_body":"And similarly for the input <code>1.</code> — it seems like the test expectation for that should <code>1</code>","m.mentions":{},"msgtype":"m.text"},"ts":1724658047999,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$BBrL2tsXs9Ou8U6d4PTh8zIeLTx_J35aKDsg_opsskc"},
{"content":{"body":"And similarly for all the other tests in lines 38–42 of https://github.com/web-platform-tests/wpt/blob/0cb2ae37c74f1509a03f3837fe80b2d7b5794e31/html/semantics/forms/the-input-element/number.html#L38-L42 that are checking for values with leading spaces","m.mentions":{},"msgtype":"m.text"},"ts":1724658140619,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ANzx9eD6LX9bo7k0xiJ3y3OpZczCQBhKV_azqTTfLX8"},
{"content":{"body":"Or to put it in implementation terms, if the input string value isn’t a “valid floating-point number”, then the implementation should change the value to result of parsing/converting it into a double, and then running the JS `ToString()` operation on double.","format":"org.matrix.custom.html","formatted_body":"Or to put it in implementation terms, if the input string value isn’t a “valid floating-point number”, then the implementation should change the value to result of parsing/converting it into a double, and then running the JS <code>ToString()</code> operation on double.","m.mentions":{},"msgtype":"m.text"},"ts":1724658311569,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$4e3W72CUUWtPDa8n9nVUXMaB3zXgWG8ch_uM3oJTvCw"},
{"content":{"body":"But… that‘s not what the WPT tests expect, and that’s not what any of Gecko, Blink, or WebKit do — instead, the texts expect the empty string to be returned if the input value doesn’t match the “valid floating-point number” requirements.","m.mentions":{},"msgtype":"m.text"},"ts":1724658439152,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Mo_EHGyoIcchYl1779H7iZO-cQCKvUdno0k3Pvg-akE"},
{"content":{"body":" * But… that‘s not what the WPT tests expect, and that’s not what any of Gecko, Blink, or WebKit do — instead, the tests expect the empty string to be returned if the input value doesn’t match the “valid floating-point number” requirements.","m.mentions":{},"m.new_content":{"body":"But… that‘s not what the WPT tests expect, and that’s not what any of Gecko, Blink, or WebKit do — instead, the tests expect the empty string to be returned if the input value doesn’t match the “valid floating-point number” requirements.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Mo_EHGyoIcchYl1779H7iZO-cQCKvUdno0k3Pvg-akE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724658451535,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Xg2bGCNwheCWZCQdbzw9zUxe9Qii_AGaSScuM59uS5s"},
{"content":{"body":" * But… that‘s not what the WPT tests expect, and that’s not what any of Gecko, Blink, or WebKit do — instead, the tests expect the empty string to be returned if the input value doesn’t match the “valid floating-point number” requirements, and Gecko, Blink, and WebKit do return the empty string.","m.mentions":{},"m.new_content":{"body":"But… that‘s not what the WPT tests expect, and that’s not what any of Gecko, Blink, or WebKit do — instead, the tests expect the empty string to be returned if the input value doesn’t match the “valid floating-point number” requirements, and Gecko, Blink, and WebKit do return the empty string.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Mo_EHGyoIcchYl1779H7iZO-cQCKvUdno0k3Pvg-akE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724658493408,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ylGqAaDPQ11Mn3fURNCT6fB3Ee7y4-olD2fCH77yZh0"},
{"content":{"body":" * For `input type=number` with a user-input value of `+1`, shouldn’t the expected result per-spec be `1`, and not the empty string?","format":"org.matrix.custom.html","formatted_body":" * For <code>input type=number</code> with a user-input value of <code>+1</code>, shouldn’t the expected result per-spec be <code>1</code>, and not the empty string?","m.mentions":{},"m.new_content":{"body":"For `input type=number` with a user-input value of `+1`, shouldn’t the expected result per-spec be `1`, and not the empty string?","format":"org.matrix.custom.html","formatted_body":"For <code>input type=number</code> with a user-input value of <code>+1</code>, shouldn’t the expected result per-spec be <code>1</code>, and not the empty string?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$jj1B3ux7oeLYbES2M-NG5_P4LB0zlUCtzGf3NCceVYw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724658531472,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$DRJAYWPZtEP4PfUGQGX00o19zso-nDLvXfIdzfNGbd0"},
{"content":{"body":"And even just looking at it intuitively: What user benefit would there be to changing the user input `+1` into the empty string, rather than just coercing it into `1`? Who would find that behavior desirable?","format":"org.matrix.custom.html","formatted_body":"And even just looking at it intuitively: What user benefit would there be to changing the user input <code>+1</code> into the empty string, rather than just coercing it into <code>1</code>? Who would find that behavior desirable?","m.mentions":{},"msgtype":"m.text"},"ts":1724658655107,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$XizL9XlfNj4SePFvBoAcg_0voU-17hP6CGsnGzZ6okE"},
{"content":{"body":" * …where _“best representation of the number representing the user's selection as a floating-point number”_ is: the string obtained from running the JS _ToString(n)_ operation on the parsed number _n_.","format":"org.matrix.custom.html","formatted_body":" * …where <em>“best representation of the number representing the user's selection as a floating-point number”</em> is: the string obtained from running the JS <em>ToString(n)</em> operation on the parsed number <em>n</em>.","m.mentions":{},"m.new_content":{"body":"…where _“best representation of the number representing the user's selection as a floating-point number”_ is: the string obtained from running the JS _ToString(n)_ operation on the parsed number _n_.","format":"org.matrix.custom.html","formatted_body":"…where <em>“best representation of the number representing the user's selection as a floating-point number”</em> is: the string obtained from running the JS <em>ToString(n)</em> operation on the parsed number <em>n</em>.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$YhiN8EUgj82DDg2uZGSuF-NLq3kIA3M1wY_Q57yjHAg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724659164799,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$VgPYdskb-JWg3dXam6pGsNsaK39pxuqcptfAC4u6vik"},
{"content":{"body":"sideshowbarker: I almost never copy a set of steps I think. So usually it's something like \"and as step 3.23.1 says ...\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: I almost never copy a set of steps I think. So usually it's something like \"and as step 3.23.1 says ...\"","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1724662172869,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$kJKUgbG4ksNDNuB-99OjmIc99Zc8ko9WiYVx2Dx6490"},
{"content":{"body":"Domenic: is https://github.com/whatwg/html/pull/5841 back in your queue?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: is https://github.com/whatwg/html/pull/5841 back in your queue?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1724662188149,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$5XlfLxDAZLxdRE-LYhBy4-nkJJuR1LXTMV3-Bo9XD10"},
{"content":{"body":"sideshowbarker: for the `+1` case. Are you sure it's end user input? Because that would be up to the user agent. If it's something that ends up running through https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values that algorithm would explain why `+` leads to rejection.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: for the <code>+1</code> case. Are you sure it's end user input? Because that would be up to the user agent. If it's something that ends up running through https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values that algorithm would explain why <code>+</code> leads to rejection.","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1724662335781,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$NiCUhAmXnHbgRVJhV8ujK7frCa6-ZGM7sehm9u3sQGA"},
{"content":{"body":"I guess you can/should read \"the number representing the user's selection\" as being UA-defined - that is, if I type \"+1\" into an input, \"the number representing the user's selection\" is 1","m.mentions":{},"msgtype":"m.text"},"ts":1724662646699,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$lgsaxukgyGTP0y1-eAdd4VHOar9SFMnhlaWVIKVz2Kc"},
{"content":{"body":"Note that the “best representation of the number representing the user's selection as a floating-point number” algorithm explicitly takes a number, not a string - so you can't pass it \"+1\"","m.mentions":{},"msgtype":"m.text"},"ts":1724662815124,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$l91RR0bcnooYo0s53FVcOsPZmD27EjYOrvv00b2b1jg"},
{"content":{"body":"> <@ms2ger:igalia.com> Note that the “best representation of the number representing the user's selection as a floating-point number” algorithm explicitly takes a number, not a string - so you can't pass it \"+1\"\n\nThanks, yeah — that’s why I said the implementation would need to parse it into a double first, then run that double through JS the JS `ToString()` operation","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$l91RR0bcnooYo0s53FVcOsPZmD27EjYOrvv00b2b1jg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ms2ger:igalia.com\">@ms2ger:igalia.com</a><br>Note that the “best representation of the number representing the user&#39;s selection as a floating-point number” algorithm explicitly takes a number, not a string - so you can&#39;t pass it &quot;+1&quot;</blockquote></mx-reply>Thanks, yeah —&nbsp;that’s why I said the implementation would need to parse it into a double first, then run that double through JS the JS <code>ToString()</code> operation","m.mentions":{"user_ids":["@ms2ger:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$l91RR0bcnooYo0s53FVcOsPZmD27EjYOrvv00b2b1jg"}},"msgtype":"m.text"},"ts":1724662953873,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$z0HNfhQFPFkVQUNnrk-ZpqtiBp-dbFI2xLPngnu8QRk"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: for the `+1` case. Are you sure it's end user input? Because that would be up to the user agent. If it's something that ends up running through https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values that algorithm would explain why `+` leads to rejection.\n\nThat algorithm doesn’t reject a leading `+`, right? Instead it explicitly says to ignore the leading `+`, and not return an error, doesn’t it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$NiCUhAmXnHbgRVJhV8ujK7frCa6-ZGM7sehm9u3sQGA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: for the <code>+1</code> case. Are you sure it's end user input? Because that would be up to the user agent. If it's something that ends up running through https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values that algorithm would explain why <code>+</code> leads to rejection.</blockquote></mx-reply>That algorithm doesn’t reject a leading <code>+</code>, right? Instead it explicitly says to ignore the leading <code>+</code>, and not return an error, doesn’t it?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$NiCUhAmXnHbgRVJhV8ujK7frCa6-ZGM7sehm9u3sQGA"}},"msgtype":"m.text"},"ts":1724663195810,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Ao6jwtecdvJ2w38a0tZNaOyH7-AH0zrRDO_-aBsfr8E"},
{"content":{"body":"> <@ms2ger:igalia.com> Note that the “best representation of the number representing the user's selection as a floating-point number” algorithm explicitly takes a number, not a string - so you can't pass it \"+1\"\n\nAs far as how to actually implement _“the number representing the user's selection”_, it seems like the most-likely way to get the number representing the user’s selection would be to run a double parser on the “user’s selection”, and the result of that is the number.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$l91RR0bcnooYo0s53FVcOsPZmD27EjYOrvv00b2b1jg?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ms2ger:igalia.com\">@ms2ger:igalia.com</a><br>Note that the “best representation of the number representing the user&#39;s selection as a floating-point number” algorithm explicitly takes a number, not a string - so you can&#39;t pass it &quot;+1&quot;</blockquote></mx-reply>As far as how to actually implement <em>“the number representing the user's selection”</em>, it seems like the most-likely way to get the number representing the user’s selection would be to run a double parser on the “user’s selection”, and the result of that is the number.","m.mentions":{"user_ids":["@ms2ger:igalia.com"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$l91RR0bcnooYo0s53FVcOsPZmD27EjYOrvv00b2b1jg"}},"msgtype":"m.text"},"ts":1724663685828,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$iBzRJ1f-72cM-TncZvlcptrmifBOqRwkvDYQVowL8TM"},
{"content":{"body":"Possibly - or do something more lenient. Note that UAs aren't required to present this as a text field","m.mentions":{},"msgtype":"m.text"},"ts":1724663764697,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$Z_7uOAH7XO3NCF92Tmpuw2R3Pyx-QwP8Z4npBsDmPAg"},
{"content":{"body":"Well more concretely maybe what the spec should instead do is to explicitly say, _“…the number that results from applying the rules for parsing floating-point number values to the user’s selection”_","format":"org.matrix.custom.html","formatted_body":"Well more concretely maybe what the spec should instead do is to explicitly say, <em>“…the number that results from applying the rules for parsing floating-point number values to the user’s selection”</em>","m.mentions":{},"msgtype":"m.text"},"ts":1724663807862,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$nQmAtZVAQCKO8zRkQda6aZoYlpqNtbaW5X93U3gDvds"},
{"content":{"body":"But if any of this is user-defined, then it seems like we should not have explicit WPT tests for it at all","m.mentions":{},"msgtype":"m.text"},"ts":1724663863675,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$ER1v3yUwGf93v2t36PE3W0lRiRf9iDga7l6dqjVG6iU"},
{"content":{"body":" * But if any of this is UA-defined, then it seems like we should not have explicit WPT tests for it at all","m.mentions":{},"m.new_content":{"body":"But if any of this is UA-defined, then it seems like we should not have explicit WPT tests for it at all","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$ER1v3yUwGf93v2t36PE3W0lRiRf9iDga7l6dqjVG6iU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724663879518,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$GLomRCcjBeZN7lkt9UQINKdlM0J858p4RgDBHCZFkVQ"},
{"content":{"body":"But wait, nothing in the wpt is actually testing what happens when a user inputs something","m.mentions":{},"msgtype":"m.text"},"ts":1724663922895,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$-lAZC0Uu2NhuwsXLte0UPJmP4tf40PKy8FGDtEjk3ng"},
{"content":{"body":"It's just calling the `HTMLInputElement.value` setter","format":"org.matrix.custom.html","formatted_body":"It's just calling the <code>HTMLInputElement.value</code> setter","m.mentions":{},"msgtype":"m.text"},"ts":1724663944758,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$l63suo4w01SkIYq4b4pEjhsT84YoZC54EwdmTMy0uSE"},
{"content":{"body":"Ah, I see. Then I guess I need to look at the requirements for that intead","m.mentions":{},"msgtype":"m.text"},"ts":1724663974591,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$1sxVooD9493CQ3KP2p93I_p3n0V-hYgCOv2MaVFksUk"},
{"content":{"body":"aha OK yeah","m.mentions":{},"msgtype":"m.text"},"ts":1724664061729,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Am0o9EsbdHv_1HPyqekhqSVS7Ux06yHzTTNhAb0edeU"},
{"content":{"body":"Should have looked at the test first :)","m.mentions":{},"msgtype":"m.text"},"ts":1724664078600,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$R8xIA3vri56pE4JRsS9biJ9U2fZHOWoHqpRi6lZa-Fw"},
{"content":{"body":"sorry for the noise… the spec is actually very clear","m.mentions":{},"msgtype":"m.text"},"ts":1724664078617,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$HsxSne0Vo2YNmEoVp3ipZwiPSmz-jCoiTidQ7-GlgNk"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):value-sanitization-algorithm","m.mentions":{},"msgtype":"m.text"},"ts":1724664082655,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$_k5bR-41nOnCVm8LN90xDF965Q3hhDtcCEu34g07Wdw"},
{"content":{"body":"> The value sanitization algorithm is as follows: If the value of the element is not a valid floating-point number, then set it to the empty string instead.\n\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>The value sanitization algorithm is as follows: If the value of the element is not a valid floating-point number, then set it to the empty string instead.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1724664097207,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$RS2Yt5tWgERT8MXOLO4PC7QrqSpyJ5J__Jar5VxP33g"},
{"content":{"body":"Yeah, that's somewhat harsh","m.mentions":{},"msgtype":"m.text"},"ts":1724664174207,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$yvjxqbVTYaT4EE2D0tzdt6svQdZUAu4OT2Csws26rDI"},
{"content":{"body":"Seems so yeah — I don’t see what the benefit of that is to end users. But anyway, I will uncritically implement it as spec’ed","m.mentions":{},"msgtype":"m.text"},"ts":1724664484071,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$gRHDUXpbmrAbEbTp2IBMDeDYX2ELHRNg_2P1l4AEYRU"},
{"content":{"body":"No end users involved on this code path, though - just authors","m.mentions":{},"msgtype":"m.text"},"ts":1724666005698,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$ONYEbempZhWZnOwUkpm4a-x4fVvxYbePxZO95HTiIxA"},
{"content":{"body":"sideshowbarker: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks it? Not sure I'd have defined it this way","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks it? Not sure I'd have defined it this way","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1724667373519,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$sdsIXtxi0yVu5kgsAZIX6N0VVtMPP558ywlaQlJUuRM"},
{"content":{"body":" * sideshowbarker: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way","m.mentions":{},"m.new_content":{"body":"sideshowbarker: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$sdsIXtxi0yVu5kgsAZIX6N0VVtMPP558ywlaQlJUuRM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724667402429,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$GDH_6iQazy9RSJlzh2HdSTbQ2iomS4dq8oPXblEhqXI"},
{"content":{"body":"> <@annevk:matrix.org> sideshowbarker: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way\n\nYeah I’m not sure if we’re gaining much by having any algorithm for double-parsing in the spec at all. I still wonder if we’d be better off replacing the algorithm with a statement saying to just parse it per the IEEE 754 requirements for a binary64/double…","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$sdsIXtxi0yVu5kgsAZIX6N0VVtMPP558ywlaQlJUuRM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: oh you're right, it's just that it's not valid when serialized, which apparently is what the specification looks at? Not sure I'd have defined it this way</blockquote></mx-reply>Yeah I’m not sure if we’re gaining much by having any algorithm for double-parsing in the spec at all. I still wonder if we’d be better off replacing the algorithm with a statement saying to just parse it per the IEEE 754 requirements for a binary64/double…","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$sdsIXtxi0yVu5kgsAZIX6N0VVtMPP558ywlaQlJUuRM"}},"msgtype":"m.text"},"ts":1724668033229,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$IB7uymFJLbt0YKXpUZcPQLypZ7VcJBB18aELrRLDeOs"},
{"content":{"body":"But I guess the problem with that is, the relevant spec isn’t freely available","m.mentions":{},"msgtype":"m.text"},"ts":1724668074505,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$bRpcVP54_sBYImCDtUzLnyj0OPONjqMbSJ_wTQQ_lvQ"},
{"content":{"body":"I could see us relying on JS, maybe. Not sure if that's been looked at closely","m.mentions":{},"msgtype":"m.text"},"ts":1724671833631,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$QZrRkRhGezd6-EG9VJvHCzjtXnIkcXFrar4K8lwTFuU"},
{"content":{"body":"annevk: ^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: ^","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1724677978827,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$3--W-m9R6qSTn0jmUzBS7q83aWpixupRVpliVLKbqjE"},
{"content":{"body":" * I could see us relying on JS, maybe. Not sure if that's been looked at closely. (Although I do vaguely recall this conversation happening every now and then.)","m.mentions":{},"m.new_content":{"body":"I could see us relying on JS, maybe. Not sure if that's been looked at closely. (Although I do vaguely recall this conversation happening every now and then.)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$QZrRkRhGezd6-EG9VJvHCzjtXnIkcXFrar4K8lwTFuU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1724685869754,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$lsUS872PUhTfjkPdkTVud_6WwThr_6UdcOyFdhjhaaw"}
]