[
{"content":{"body":"annevk: https://github.com/whatwg/html/pull/10770 is marked as WebKit supportive \"based on comments on this PR\", but it seems possible you were only wearing your editor hat; would you mind explicitly giving a thumbs-up here or there on behalf of WebKit?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: https://github.com/whatwg/html/pull/10770 is marked as WebKit supportive \"based on comments on this PR\", but it seems possible you were only wearing your editor hat; would you mind explicitly giving a thumbs-up here or there on behalf of WebKit?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"msgtype":"m.text"},"ts":1732254329454,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9Y-mK3-HP1mkkSLZGqQvK4E8OrC2HlL94VA0XojH6tQ"},
{"content":{"body":"Noam Rosenthal: Dominic Farolino: the thing I wanted to say during the call yesterday is that the bits that are shared between insert and move, and between remove and move, should be abstracted so we only have to maintain those algorithms in a single place as they are quite involved (especially the range mutations).","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: <a href=\"https://matrix.to/#/@domfarolino:matrix.org\">Dominic Farolino</a>: the thing I wanted to say during the call yesterday is that the bits that are shared between insert and move, and between remove and move, should be abstracted so we only have to maintain those algorithms in a single place as they are quite involved (especially the range mutations).","m.mentions":{"user_ids":["@noamr:matrix.org","@domfarolino:matrix.org"]},"msgtype":"m.text"},"ts":1732264714335,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$daq2-GOVCZyI_WIxSZHk2FwJnnjs6nwNZcgfg-TCRtA"},
{"content":{"body":"I guess there's now also some web developer feedback where they prefer `moveBefore()` to fallback to `insertBefore()` where it currently throws. I'm not enthusiastic about that idea as it prevents us from making move possible for more scenarios in the future and it also just seems to encapsulate too much magic. I'd be curious to hear what smaug and Domenic think about that idea, but I'd be inclined to say no.","format":"org.matrix.custom.html","formatted_body":"I guess there's now also some web developer feedback where they prefer <code>moveBefore()</code> to fallback to <code>insertBefore()</code> where it currently throws. I'm not enthusiastic about that idea as it prevents us from making move possible for more scenarios in the future and it also just seems to encapsulate too much magic. I'd be curious to hear what <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> and <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> think about that idea, but I'd be inclined to say no.","m.mentions":{"user_ids":["@smaug:mozilla.org","@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1732264820610,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$BDbwSs4BD5UBppY9nTajolSpJA7jWk7zb6gWw52Psbs"},
{"content":{"body":"I agree, I feel like we settled that during TPAC. It's such a fragile design.","msgtype":"m.text"},"ts":1732265190370,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$evUA4F002oIXcz0d_P7deG-pxok3mDapUTPKPaTdr_k"},
{"content":{"body":"I'll double check with ntim on the popover PR btw.","format":"org.matrix.custom.html","formatted_body":"I'll double check with <a href=\"https://matrix.to/#/@ntim:mozilla.org\">ntim</a> on the popover PR btw.","m.mentions":{"user_ids":["@ntim:mozilla.org"]},"msgtype":"m.text"},"ts":1732265678465,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$W0m0XB2aJWmm674b7_nbVf42Nfi2bkj12YwNkTbzbWA"},
{"content":{"body":" * I'll double check with ntim on the popover PR btw. (I suspect it's fine.)","format":"org.matrix.custom.html","formatted_body":" * I'll double check with <a href=\"https://matrix.to/#/@ntim:mozilla.org\">ntim</a> on the popover PR btw. (I suspect it's fine.)","m.mentions":{},"m.new_content":{"body":"I'll double check with ntim on the popover PR btw. (I suspect it's fine.)","format":"org.matrix.custom.html","formatted_body":"I'll double check with <a href=\"https://matrix.to/#/@ntim:mozilla.org\">ntim</a> on the popover PR btw. (I suspect it's fine.)","m.mentions":{"user_ids":["@ntim:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$W0m0XB2aJWmm674b7_nbVf42Nfi2bkj12YwNkTbzbWA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1732265686223,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$8A4wHP3LvmFXTrGlPChwbFglLj851yyjF_G8j3OBSis"},
{"content":{"body":"> <@annevk:matrix.org> I guess there's now also some web developer feedback where they prefer `moveBefore()` to fallback to `insertBefore()` where it currently throws. I'm not enthusiastic about that idea as it prevents us from making move possible for more scenarios in the future and it also just seems to encapsulate too much magic. I'd be curious to hear what smaug and Domenic think about that idea, but I'd be inclined to say no.\n\nCan you expand on \"prevents us from making move possible for more scenarios in the future\"? Is that relying on people putting `moveBefore` inside try/catch? Because that can't be guaranteed, people might make the `isConnected` checks etc. themselves.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$BDbwSs4BD5UBppY9nTajolSpJA7jWk7zb6gWw52Psbs?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>I guess there's now also some web developer feedback where they prefer <code>moveBefore()</code> to fallback to <code>insertBefore()</code> where it currently throws. I'm not enthusiastic about that idea as it prevents us from making move possible for more scenarios in the future and it also just seems to encapsulate too much magic. I'd be curious to hear what <a href=\"https://matrix.to/#/@smaug:mozilla.org\">smaug</a> and <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a> think about that idea, but I'd be inclined to say no.</blockquote></mx-reply>Can you expand on \"prevents us from making move possible for more scenarios in the future\"? Is that relying on people putting <code>moveBefore</code> inside try/catch? Because that can't be guaranteed, people might make the <code>isConnected</code> checks etc. themselves.","m.mentions":{"user_ids":["@annevk:matrix.org","@smaug:mozilla.org","@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$BDbwSs4BD5UBppY9nTajolSpJA7jWk7zb6gWw52Psbs"}},"msgtype":"m.text"},"ts":1732270549949,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$gkB09XM2G0VNrU2OPsG1yAT7kpjwWutOZ2eBJR3vYZY"},
{"content":{"body":"> <@noamr:matrix.org> Can you expand on \"prevents us from making move possible for more scenarios in the future\"? Is that relying on people putting `moveBefore` inside try/catch? Because that can't be guaranteed, people might make the `isConnected` checks etc. themselves.\n\nNevertheless, I'm content with the design we went with, I think people got used to higher level APIs so introducing a new API that's low level and throws is a bit confusing. We should consider higher level variants in the future but starting with this seems like the right approach","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$gkB09XM2G0VNrU2OPsG1yAT7kpjwWutOZ2eBJR3vYZY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br>Can you expand on \"prevents us from making move possible for more scenarios in the future\"? Is that relying on people putting <code>moveBefore</code> inside try/catch? Because that can't be guaranteed, people might make the <code>isConnected</code> checks etc. themselves.</blockquote></mx-reply>Nevertheless, I'm content with the design we went with, I think people got used to higher level APIs so introducing a new API that's low level and throws is a bit confusing. We should consider higher level variants in the future but starting with this seems like the right approach","m.mentions":{"user_ids":["@annevk:matrix.org","@smaug:mozilla.org","@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$gkB09XM2G0VNrU2OPsG1yAT7kpjwWutOZ2eBJR3vYZY"}},"msgtype":"m.text"},"ts":1732270590324,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Q8G2I_RF_T7X_G3QJ4t3LQ9iSTuCMHDwBU6ajfcXUOU"},
{"content":{"body":"I'm not keen on falling back to insertBefore.  ","m.mentions":{},"msgtype":"m.text"},"ts":1732270798524,"senderName":"smaug","senderId":"@smaug:mozilla.org","id":"$CVvO1Uj-C8MgASV79TvIOCOrZxRaaEaYocqZwiHI4eo"}
]