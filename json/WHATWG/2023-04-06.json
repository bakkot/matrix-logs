[
{"content":{"body":"> <@tabatkins:matrix.org> Hm, *is* it actually possible to define an interface that inherits from ObservableArray?\n\nNope","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$2rWNrDYOlym8CRc13A0HNk6Xt1yg7b_b9EqCwCFf0eM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Hm, <em>is</em> it actually possible to define an interface that inherits from ObservableArray?</blockquote></mx-reply>Nope","m.relates_to":{"m.in_reply_to":{"event_id":"$2rWNrDYOlym8CRc13A0HNk6Xt1yg7b_b9EqCwCFf0eM"}},"msgtype":"m.text"},"ts":1680746816011,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IOwoDrRabk2FwdyQuNkvdACiXoUX1aksGt_Kbq-rEc0"},
{"content":{"body":"Huh, that's extremely unfortunate. It means it's impossible for us to upgrade older list-like interfaces into OA.","msgtype":"m.text"},"ts":1680746861856,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$CtAMaExv_UZM6WGtuOq9BTY0QObCjFJersu1kJQhZY8"},
{"content":{"body":"It's possible someone could do the work to define that, but yeah, the idea was to use ObservableArray for all new things, since nobody has ever had the appetite to upgrade any old things","msgtype":"m.text"},"ts":1680746904097,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$_zLlPyJ0tpC_IAWiS6auapvi-5vTQILq6imua04T2wU"},
{"content":{"body":"Well \"upgrade the old things\" was a requirement for the CSSWG to agree to use OA for the new CSSStyleRule.cssRules attribute, so I guess I'll have to do the work to define that. ^^_","msgtype":"m.text"},"ts":1680748060277,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$OsXmhqJAc_CANwlV82Gwe1RxbZu1Sjq8nXV2sSBrDOM"},
{"content":{"body":" * Well \"upgrade the old things\" was a requirement for the CSSWG to agree to use OA for the new CSSStyleRule.cssRules attribute, so I guess I'll have to do the work to define that. ^_^","m.new_content":{"body":"Well \"upgrade the old things\" was a requirement for the CSSWG to agree to use OA for the new CSSStyleRule.cssRules attribute, so I guess I'll have to do the work to define that. ^_^","msgtype":"m.text"},"m.relates_to":{"event_id":"$OsXmhqJAc_CANwlV82Gwe1RxbZu1Sjq8nXV2sSBrDOM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680748064394,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$dbAGm8_25VretMwahtM1zmyNnnmubGIzSRkiYkNceIM"},
{"content":{"body":"(Which is extremely fair; it would be terrible API to have *some* .cssRules properties be the old version and some be the new.)","format":"org.matrix.custom.html","formatted_body":"(Which is extremely fair; it would be terrible API to have <em>some</em> .cssRules properties be the old version and some be the new.)","msgtype":"m.text"},"ts":1680748091733,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$H1w3LIbzK3HhtGGYZQQV9R0Vl6hddYaTcjcAM3rE5XU"},
{"content":{"body":"I've also got that iterator work to finish up on WebIDL, so I'll just spend some time on that spec in general soon.","msgtype":"m.text"},"ts":1680748125456,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$IttzkHazZBd0sIRwAYaYMwXOmANY7K1fb9uN_Xs7TyM"},
{"content":{"body":"> <@tabatkins:matrix.org> I've also got that iterator work to finish up on WebIDL, so I'll just spend some time on that spec in general soon.\n\nI kind of thought that was in my court to review and have been feeling guilty... I feel a bit less bad if you say it's not finished up? :)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$IttzkHazZBd0sIRwAYaYMwXOmANY7K1fb9uN_Xs7TyM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>I&#39;ve also got that iterator work to finish up on WebIDL, so I&#39;ll just spend some time on that spec in general soon.</blockquote></mx-reply>I kind of thought that was in my court to review and have been feeling guilty... I feel a bit less bad if you say it's not finished up? :)","m.relates_to":{"m.in_reply_to":{"event_id":"$IttzkHazZBd0sIRwAYaYMwXOmANY7K1fb9uN_Xs7TyM"}},"msgtype":"m.text"},"ts":1680748459096,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$vQBXPnA2FaTZMdxxEaaZ0hE9JUEQcsIqzenLmDNr8z4"},
{"content":{"body":"I think I have some things to do? I'll see next week","msgtype":"m.text"},"ts":1680748477521,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$wYYnoGIHjqVHm4xMJ1mnaqqU2VgLIik6LCSW80Ihue4"},
{"content":{"body":"I'll ping if it's your fault","msgtype":"m.text"},"ts":1680748482427,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$FuRX8ul4w2sxsiE7ar05wss2edOjuDQk1Ml5lsPtuR0"},
{"content":{"body":"> <@tabatkins:matrix.org> Well \"upgrade the old things\" was a requirement for the CSSWG to agree to use OA for the new CSSStyleRule.cssRules attribute, so I guess I'll have to do the work to define that. ^_^\n\nMaybe start by opening an issue to discuss. There are at least two ways you could do it I can think of: something that does actual inheritance (so that `x.constructor.name === \"CSSRuleList\"`, `x.hasOwnProperty(\"push\") === false`, but `x.hasOwnProperty(\"item\") === true`), or something that changes the proxy that ObservableArray uses to have special behavior for the defined properties (i.e., instead of [[GetOwnProperty]] on `\"item\"` returning undefined/whatever gets stored there via normal property access, it returns some property descriptor for the method that we conjured up). Both are pretty subtle to actually define and I'm not sure which is best, or if there's a better third option...","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$OsXmhqJAc_CANwlV82Gwe1RxbZu1Sjq8nXV2sSBrDOM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>Well &quot;upgrade the old things&quot; was a requirement for the CSSWG to agree to use OA for the new CSSStyleRule.cssRules attribute, so I guess I&#39;ll have to do the work to define that. ^_^</blockquote></mx-reply>Maybe start by opening an issue to discuss. There are at least two ways you could do it I can think of: something that does actual inheritance (so that <code>x.constructor.name === &quot;CSSRuleList&quot;</code>, <code>x.hasOwnProperty(&quot;push&quot;) === false</code>, but <code>x.hasOwnProperty(&quot;item&quot;) === true</code>), or something that changes the proxy that ObservableArray uses to have special behavior for the defined properties (i.e., instead of [[GetOwnProperty]] on <code>&quot;item&quot;</code> returning undefined/whatever gets stored there via normal property access, it returns some property descriptor for the method that we conjured up). Both are pretty subtle to actually define and I'm not sure which is best, or if there's a better third option...","m.relates_to":{"m.in_reply_to":{"event_id":"$OsXmhqJAc_CANwlV82Gwe1RxbZu1Sjq8nXV2sSBrDOM"}},"msgtype":"m.text"},"ts":1680748599164,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$CVAsGhcv4Ozc3LKK2YsvW4J13SEcnmfhyjMGu0hHnzw"},
{"content":{"body":"zcorpan: that's not it, otherwise the second table wouldn't show up in one of the implementations; it's reset the insertion mode that does the wrong thing in Firefox (I think)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">zcorpan</a>: that's not it, otherwise the second table wouldn't show up in one of the implementations; it's reset the insertion mode that does the wrong thing in Firefox (I think)","msgtype":"m.text"},"ts":1680760714776,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$L0vnDk0ksNi5sg52_eSvr9xuwR-uBvfQVctPKtdKHWM"},
{"content":{"body":"annevk: ok","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>: ok","msgtype":"m.text"},"ts":1680761232527,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$DK6kpMb84vlA2h_qN1p7Nedi9k1UDJvuvgVfdh_hzxk"},
{"content":{"body":"Huh, I wonder what I was doing to stumble upon https://github.com/html5lib/html5lib-tests/issues/137","msgtype":"m.text"},"ts":1680764220923,"senderName":"Ms2ger","senderId":"@ms2ger:igalia.com","id":"$UeMHZ1hY9XXVeT7R0pellEXCKCsX-GWfXHDmgHcX-Tk"},
{"content":{"body":"hey so I'm looking into resolving the :dir stuff in the spec / tests etc and I pulled up the current spec and was looking at it and... either it has a couple of errors or (also very plausible) I do not actually understand how to read these.. I'd like to know which is the case before I move forward too far... I think you can see in this screenshot the bit that is highlighted seems like it is impossible? there are a couple of these in the existing text","msgtype":"m.text"},"ts":1680798146651,"senderName":"bkardell","senderId":"@bkardell:igalia.com","id":"$VSMeoorPpNpqlVuwdET-GcTFYjuro5DnT1xVPIn0pTY"}
]