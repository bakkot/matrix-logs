[
{"content":{"body":"A friend asked if there’s a better way to do this: https://stackoverflow.com/questions/60262041/is-there-a-way-to-get-child-class-file-path-in-parent-class/60262174#60262174\n\ni.e. in constructor() of A get the url of B, without modifying B’s constructor. import.meta.url only gives A.js. It’s possible to catch an exception and get the stack trace, but that’s not ideal :)","msgtype":"m.text"},"ts":1676356866893,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$kG1NOCzFwC16XqYpVpDoa43lib61sNAg7VZIhMAa7w8"},
{"content":{"body":"acsebility","msgtype":"m.text"},"ts":1676356967709,"senderName":"shark adsm","senderId":"@shark.adsm.dev:matrix.org","id":"$B0ifgd13k_1XCN1j8uGWGrOT6wfRcPKeq8YucGGx9eM"},
{"content":{"body":"> <@zcorpan:mozilla.org> A friend asked if there’s a better way to do this: https://stackoverflow.com/questions/60262041/is-there-a-way-to-get-child-class-file-path-in-parent-class/60262174#60262174\n> \n> i.e. in constructor() of A get the url of B, without modifying B’s constructor. import.meta.url only gives A.js. It’s possible to catch an exception and get the stack trace, but that’s not ideal :)\n\nNo, except for the stack trace loophole, there's generally no way to know what file code comes from.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$kG1NOCzFwC16XqYpVpDoa43lib61sNAg7VZIhMAa7w8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@zcorpan:mozilla.org\">@zcorpan:mozilla.org</a><br>A friend asked if there’s a better way to do this: https://stackoverflow.com/questions/60262041/is-there-a-way-to-get-child-class-file-path-in-parent-class/60262174#60262174<br/><br/>i.e. in constructor() of A get the url of B, without modifying B’s constructor. import.meta.url only gives A.js. It’s possible to catch an exception and get the stack trace, but that’s not ideal :)</blockquote></mx-reply>No, except for the stack trace loophole, there's generally no way to know what file code comes from.","m.relates_to":{"m.in_reply_to":{"event_id":"$kG1NOCzFwC16XqYpVpDoa43lib61sNAg7VZIhMAa7w8"}},"msgtype":"m.text"},"ts":1676358435368,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$sBiE8yCkYSnbX4-iTy-7Byn9hFh5-7IWK_3DX7JjscU"},
{"content":{"body":"Domenic: thanks. Do you know if that's intentional or something we should add?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: thanks. Do you know if that's intentional or something we should add?","msgtype":"m.text"},"ts":1676358498885,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$KcOjJfUDDV0nq2CikrO-LExDQYR2qt8dNNx_0rpPUbE"},
{"content":{"body":"I think it's semi-intentional in that implementers really hate having to keep that sort of info around for stack traces (for memory reasons)?","msgtype":"m.text"},"ts":1676358539571,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$Pi8o05KWbUtjwltBOEuD-RScwuCqjrGztJ9xyLc5Zg0"},
{"content":{"body":"but they do keep it around, yes?","msgtype":"m.text"},"ts":1676358606685,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$Y_wK7ocw3hyuY5UOaqh9KHaW5DMLPbv7_qtas41CsI4"},
{"content":{"body":"It's also pretty fragile in the face of bundlers, etc., which are still widely used.","msgtype":"m.text"},"ts":1676358609610,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$UTccC2Uqim2a8q2mKeKa53POvKeufEhCEREvQIKabFs"},
{"content":{"body":"I guess they must, for functions at least. Not sure about how things like inlining, etc. effect that.","msgtype":"m.text"},"ts":1676358632670,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$okMYxWqj8cmxSPXlQDPS2d0dkFL4a0MQox0BSxE-Ykg"},
{"content":{"body":"interesting, maybe there are cases where the engine knows a function can't throw and can drop the stack information. But an API would mean they can't drop it","msgtype":"m.text"},"ts":1676358945156,"senderName":"zcorpan","senderId":"@zcorpan:mozilla.org","id":"$8J9NzOUf6zKAolMeOEn3dlsr2guP2u5YmVrt8ggyLdg"},
{"content":{"body":"Is there an incentive to improve the toascii.json in web-platform-tests?","msgtype":"m.text"},"ts":1676382876736,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$cnzIwHBJmfR-1rp-Kw3tXFk9m-ISuNaa0vSIu2mET-g"},
{"content":{"body":"Yagiz Nizipli: you mean in contrast IdnaTestV2?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">Yagiz Nizipli</a>: you mean in contrast IdnaTestV2?","msgtype":"m.text"},"ts":1676383118844,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Kr9fqpBBVlfGPVZDCnbiO4Wsah3KtGAsLArKEZiswns"},
{"content":{"body":"> <@annevk:matrix.org> Yagiz Nizipli: you mean in contrast IdnaTestV2?\n\nYes","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Kr9fqpBBVlfGPVZDCnbiO4Wsah3KtGAsLArKEZiswns?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">Yagiz Nizipli</a>: you mean in contrast IdnaTestV2?</blockquote></mx-reply>Yes","m.relates_to":{"m.in_reply_to":{"event_id":"$Kr9fqpBBVlfGPVZDCnbiO4Wsah3KtGAsLArKEZiswns"}},"msgtype":"m.text"},"ts":1676383754602,"senderName":"Yagiz Nizipli","senderId":"@yagiznizipli:matrix.org","id":"$bAWsu8lDJ6XPWUAaBgDK1kbpr-Q0Ifhf0gz8fxqCNRI"},
{"content":{"body":"Yagiz Nizipli: I dunno, I guess I'd like us to continue to add tests to toascii.json as we come across browser Interop issues. Perhaps if someone was willing to take the initiative to donate them to Unicode and deduplicate them with IdnaTestV2 that would be better, but I'm not sure if that's an easy process.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yagiznizipli:matrix.org\">Yagiz Nizipli</a>: I dunno, I guess I'd like us to continue to add tests to toascii.json as we come across browser Interop issues. Perhaps if someone was willing to take the initiative to donate them to Unicode and deduplicate them with IdnaTestV2 that would be better, but I'm not sure if that's an easy process.","msgtype":"m.text"},"ts":1676384131382,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$U3k2DZ318gP6oQVMCReP49jaVwHLZugAhMEEOI80Ra4"},
{"content":{"body":"> <@littledan:matrix.org> I have no opinion about the contents of this, but would you be interested in joining one of ECMA-402’s fortnightly calls to discuss with people who might? It would be nice to make a cross-browser decision about unshipping.\n\nThanks for this. The meeting turned up a use case: Instead of the haystack being a long string from which needle would be searched as a substring, the ECMA-402 API can be used if haystack is a list of strings and the operation is to find the list items that match the needle on a full-string basis. So now I'm aware of a potential use case instead of being totally unaware of a use case. I'm still _very_ skeptical of the presented use case arising in JS programs on the Web in practice. The case mentioned was an address book, but with the ECMA-402 API, the user would have to enter a full given name or a full family name instead of being able to enter a prefix of a name.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$JLMwOMIBjM9E8CtJd3_-C_fxg_88SuqdvAxta6a3Hds?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I have no opinion about the contents of this, but would you be interested in joining one of ECMA-402’s fortnightly calls to discuss with people who might? It would be nice to make a cross-browser decision about unshipping.</blockquote></mx-reply>Thanks for this. The meeting turned up a use case: Instead of the haystack being a long string from which needle would be searched as a substring, the ECMA-402 API can be used if haystack is a list of strings and the operation is to find the list items that match the needle on a full-string basis. So now I'm aware of a potential use case instead of being totally unaware of a use case. I'm still <em>very</em> skeptical of the presented use case arising in JS programs on the Web in practice. The case mentioned was an address book, but with the ECMA-402 API, the user would have to enter a full given name or a full family name instead of being able to enter a prefix of a name.","m.relates_to":{"m.in_reply_to":{"event_id":"$JLMwOMIBjM9E8CtJd3_-C_fxg_88SuqdvAxta6a3Hds"}},"msgtype":"m.text"},"ts":1676388660551,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$FjIUW53Njt6l-aZWB7qLM9VUtN01P_V8rUZRR8AABLA"},
{"content":{"body":"hsivonen: Interesting, so is that to say that you didn't reach a shared conclusion one way or another yet?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: Interesting, so is that to say that you didn't reach a shared conclusion one way or another yet?","msgtype":"m.text"},"ts":1676388717857,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GfNobwZwP_KEZdbxCSm34kFm0NyqRkje_J6lTclTvL8"},
{"content":{"body":"> <@littledan:matrix.org> hsivonen: Interesting, so is that to say that you didn't reach a shared conclusion one way or another yet?\n\nNo shared conclusion, but I'm still pursuing unshipping search collation data, but now I'm considering unshipping it less fully and adding more special-casing to try to hide the fact that the data isn't there a bit more carefully.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$GfNobwZwP_KEZdbxCSm34kFm0NyqRkje_J6lTclTvL8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br><a href=\"https://matrix.to/#/@hsivonen:mozilla.org\">hsivonen</a>: Interesting, so is that to say that you didn't reach a shared conclusion one way or another yet?</blockquote></mx-reply>No shared conclusion, but I'm still pursuing unshipping search collation data, but now I'm considering unshipping it less fully and adding more special-casing to try to hide the fact that the data isn't there a bit more carefully.","m.relates_to":{"m.in_reply_to":{"event_id":"$GfNobwZwP_KEZdbxCSm34kFm0NyqRkje_J6lTclTvL8"}},"msgtype":"m.text"},"ts":1676388812537,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$1Tl6GhNJN0odZvVIwXxMar8YL7tbU4kJxCdsWx-jy-8"},
{"content":{"body":"I'm also trying to understand better what the Korean search tailoring in the search root is trying to accomplish. After reading the CLDR source and issues, I had an expectation of what it would do in Chrome's ctrl-f, but I can't get Chrome's ctrl-f to do anything different from Firefox's ctrl-f for Korean.","msgtype":"m.text"},"ts":1676388920740,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$26rGbxaCyT9WEIgBa3mK9cMJGnNHPNv0OAY2VXeS7Hs"},
{"content":{"body":"Next, I'm going to experiment with cmd-f in macOS Finder in Korean to see if something interesting happens there.","msgtype":"m.text"},"ts":1676388944220,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$3rCQEnIbZO2gZfuW-GQU62FHptGDr3CyE9hsbELQH7s"},
{"content":{"body":"i'm writing a URL parser that follows the WHATWG URL spec, and i'm wondering how i can shortcut the implementation a little bit if i assume that all input to the parser is already UTF-8 encoded","msgtype":"m.text"},"ts":1676394646178,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$gexuZhCJdKG0AbjTI--4gyEAmYQUuIMfawRgfnONzvk"},
{"content":{"body":"afaict, all codepoints > `0x7F` end up being percent-encoded byte-by-byte anyway","format":"org.matrix.custom.html","formatted_body":"afaict, all codepoints &gt; <code>0x7F</code> end up being percent-encoded byte-by-byte anyway","msgtype":"m.text"},"ts":1676394670922,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$ZPMFtCA0eKm-GNQfUDxTECKHi4jenGHzSRC8DT2zrw4"},
{"content":{"body":"so can i just parse byte-by-byte instead of codepoint-by-codepoint?","msgtype":"m.text"},"ts":1676394682858,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$sSkp3FoXaqZk0SEe_9by21WjsXxiE9QqPgizrgh96Zg"},
{"content":{"body":" * afaict, all codepoints > 0x7F end up being percent-encoded byte-by-byte anyway","m.new_content":{"body":"afaict, all codepoints > 0x7F end up being percent-encoded byte-by-byte anyway","msgtype":"m.text"},"m.relates_to":{"event_id":"$ZPMFtCA0eKm-GNQfUDxTECKHi4jenGHzSRC8DT2zrw4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1676394719189,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$dTkQotJs2DyZAJHiYYdPk_F44VYeoHjDiHGA2Ui4sQ0"},
{"content":{"body":" * afaict, all codepoints > `0x7F` end up being percent-encoded byte-by-byte anyway","format":"org.matrix.custom.html","formatted_body":" * afaict, all codepoints &gt; <code>0x7F</code> end up being percent-encoded byte-by-byte anyway","m.new_content":{"body":"afaict, all codepoints > `0x7F` end up being percent-encoded byte-by-byte anyway","format":"org.matrix.custom.html","formatted_body":"afaict, all codepoints &gt; <code>0x7F</code> end up being percent-encoded byte-by-byte anyway","msgtype":"m.text"},"m.relates_to":{"event_id":"$ZPMFtCA0eKm-GNQfUDxTECKHi4jenGHzSRC8DT2zrw4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1676394781652,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$78aeSkiJbcBQJINjDjIvpTVkXxbRmTMOd3yI5n0xJJM"},
{"content":{"body":"zero-one: you'll need special code for host names, but for determining component boundaries that should totally work","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zero-one:matrix.zer0-one.net\">zero-one</a>: you'll need special code for host names, but for determining component boundaries that should totally work","msgtype":"m.text"},"ts":1676395931629,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$zziR5hpZ5FdG0EOG5aKI40fuSHHxnCYxhydmrUP_C34"},
{"content":{"body":"can you elaborate? is that because of the opaque-host parsing?","msgtype":"m.text"},"ts":1676396010086,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$MeGVKr-BN8z9gWCyKKpRBYFylt-0sg1GqSA1RtQFSdo"},
{"content":{"body":"zero-one: the opposite, for domain to ASCII you need a bunch of logic around code points","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@zero-one:matrix.zer0-one.net\">zero-one</a>: the opposite, for domain to ASCII you need a bunch of logic around code points","msgtype":"m.text"},"ts":1676396036712,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Asr9y9XalZlSrDo9VgdZ3YErvne29YCb3dmWuVHK49o"},
{"content":{"body":"oh, i see... we percent-decode here and then punycode it or something","msgtype":"m.text"},"ts":1676396195572,"senderName":"zero-one","senderId":"@zero-one:matrix.zer0-one.net","id":"$zS02MdUfIYv4n_F4eauO4_hcCk9mUCF-qlGl5BtPBes"},
{"content":{"body":"Yeah, it's great 😂","msgtype":"m.text"},"ts":1676396403570,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$zUbmpbfbPta98hpZGtFkGhsAHFyOlHOMSa7mH46nznM"}
]