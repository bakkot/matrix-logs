[
{"content":{"body":"@allstarschh: In general pinging someone less than 24 hours after you've already done so is not necessary. Especially for such a non-urgent PR. I'll try to make time for the PR next week, but it's 17:30 and tomorrow's a holiday, so please have some patience.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@allstarschh:mozilla.org\">@allstarschh</a>: In general pinging someone less than 24 hours after you've already done so is not necessary. Especially for such a non-urgent PR. I'll try to make time for the PR next week, but it's 17:30 and tomorrow's a holiday, so please have some patience.","msgtype":"m.text"},"ts":1691655852288,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$43yex6mMtIPDU-Cix8yIWyjevCh5UmZRa0RDJADv_uE"},
{"content":{"body":"Domenic: oh, thanks, I saw the reviewer is not set and I don't know if I should set that or someone will set it, the issue is not urgent, ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: oh, thanks, I saw the reviewer is not set and I don't know if I should set that or someone will set it, the issue is not urgent,","msgtype":"m.text"},"ts":1691655965870,"senderName":"@allstarschh","senderId":"@allstarschh:mozilla.org","id":"$2pzrPvxXV_vlD1wdPdS8snJ_MxmSB2ASU34Nya9uiCE"},
{"content":{"body":"Jake Archibald: there's an (early stage) proposal for websites to mark a blob as crossOrigin accessible. https://github.com/w3c/FileAPI/issues/192. In your case, this would require Origin B to opt in.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: there's an (early stage) proposal for websites to mark a blob as crossOrigin accessible. https://github.com/w3c/FileAPI/issues/192. In your case, this would require Origin B to opt in.","msgtype":"m.text"},"ts":1691657216336,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$tWiFxIx5O1969GuN_Tk2adW0wNgSxONKeuTPZb3pl4Y"},
{"content":{"body":"freddy: isn't that the opposite of what I'm looking for? It seems like the resulting resource would be different-origin to Origin B.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@fbraun:mozilla.org\">freddy</a>: isn't that the opposite of what I'm looking for? It seems like the resulting resource would be different-origin to Origin B.","msgtype":"m.text"},"ts":1691658314048,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$jMqiBtYXdcjkniqPiIXiXVv3qzMmll1e0uWQJH_pHpM"},
{"content":{"body":"Right. ü§¶‚Äç‚ôÇÔ∏è","msgtype":"m.text"},"ts":1691658474309,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$3MwMthgywd6fqYBqg3GytPThNYi4a6hyL2k5FecJSZs"},
{"content":{"body":"I guess that confirms annevk's worry about the property name. It does initially look like it means the opposite.","format":"org.matrix.custom.html","formatted_body":"I guess that confirms <a href=\"https://matrix.to/#/@annevk:matrix.org\">annevk</a>'s worry about the property name. It does initially look like it means the opposite.","msgtype":"m.text"},"ts":1691658654475,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$Ekc_9uAPis7yD4gKK-BGSD6ZItEP4LBZjdw2kSf-YxU"},
{"content":{"body":"The spec describes both classic async scripts and module async scripts as executing as soon as they are available. In reality, classic async scripts may execute a tiny bit later, but since the exact moment of network response finishing isn't exposed, the tiny bit later looks as if it was part of the network timing. However, for inline async scripts that have no external dependencies, \"as soon as they are available\" in principle has a well-defined point in time relative to the HTML parse. However, it seems bad to grant special guarantees to that case. Do I understand correctly that the spec doesn't mean to grant guarantees about that special case and it's OK for the parse to progress a bit before an inline async module script without external dependencies executes?","msgtype":"m.text"},"ts":1691659788230,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$HHzwCs9d3k7afK1KsY65s2IgnCdoescflr8JNqhMCH4"},
{"content":{"body":"^ @allstarschh ","format":"org.matrix.custom.html","formatted_body":"^ <a href=\"https://matrix.to/#/@allstarschh:mozilla.org\">@allstarschh</a>","msgtype":"m.text"},"ts":1691659812235,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$JuAhdk_XwBWxL-SVrnbW25KH6TlDOksZZkN6uZ0gx7A"},
{"content":{"body":" * The spec describes both classic async scripts and module async scripts as executing as soon as they are available. In reality, classic async scripts may execute a tiny bit later, but since the exact moment of network response finishing isn't exposed, the tiny bit later looks as if it was part of the network timing. However, for inline async module scripts that have no external dependencies, \"as soon as they are available\" in principle has a well-defined point in time relative to the HTML parse. However, it seems bad to grant special guarantees to that case. Do I understand correctly that the spec doesn't mean to grant guarantees about that special case and it's OK for the parse to progress a bit before an inline async module script without external dependencies executes?","m.new_content":{"body":"The spec describes both classic async scripts and module async scripts as executing as soon as they are available. In reality, classic async scripts may execute a tiny bit later, but since the exact moment of network response finishing isn't exposed, the tiny bit later looks as if it was part of the network timing. However, for inline async module scripts that have no external dependencies, \"as soon as they are available\" in principle has a well-defined point in time relative to the HTML parse. However, it seems bad to grant special guarantees to that case. Do I understand correctly that the spec doesn't mean to grant guarantees about that special case and it's OK for the parse to progress a bit before an inline async module script without external dependencies executes?","msgtype":"m.text"},"m.relates_to":{"event_id":"$HHzwCs9d3k7afK1KsY65s2IgnCdoescflr8JNqhMCH4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1691659848126,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$uIxI0dRhY2QnXNLL9Kc8qMeEiyPA4oPke1sWobUk97I"},
{"content":{"body":"It would be unfortunate to have to use the `document.write` accommodating execution path in Gecko for inline async module scripts just because the spec granted that special case a special guarantee that goes away as soon as the module has an external dependency.","format":"org.matrix.custom.html","formatted_body":"It would be unfortunate to have to use the <code>document.write</code> accommodating execution path in Gecko for inline async module scripts just because the spec granted that special case a special guarantee that goes away as soon as the module has an external dependency.","msgtype":"m.text"},"ts":1691659922728,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$YTWRtc79DRwp3g6jmQcVddvsRcYTCNUcLakPpG6J810"},
{"content":{"body":"(I gather that in any case, module scripts are prohibited from using `document.write`, so the guarantee would be only about the specific observable DOM shape.)","format":"org.matrix.custom.html","formatted_body":"(I gather that in any case, module scripts are prohibited from using <code>document.write</code>, so the guarantee would be only about the specific observable DOM shape.)","msgtype":"m.text"},"ts":1691659958061,"senderName":"hsivonen","senderId":"@hsivonen:mozilla.org","id":"$bt4agmvaHVMsk6Jq7FOojAAAY4fiIya7kEUgKBXKXSU"}
]