[
{"content":{"body":"About Mutation Events: is Chrome going ahead with shipping this month with support completely removed, as planned? https://developer.chrome.com/blog/mutation-events-deprecation ‚Üê mfreed ","format":"org.matrix.custom.html","formatted_body":"About Mutation Events: is Chrome going ahead with shipping this month with support completely removed, as planned? https://developer.chrome.com/blog/mutation-events-deprecation ‚Üê <a href=\"https://matrix.to/#/@mfreed:matrix.org\">mfreed</a>","m.mentions":{"user_ids":["@mfreed:matrix.org"]},"msgtype":"m.text"},"ts":1720666769152,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$LWskkUWksuE_kNuJH-7y6cGeF1F9oWq5T9RnWVKr_yc"},
{"content":{"body":"> <@annevk:matrix.org> Oh, \"create a fresh top-level traversable\" nice. Though I wonder if this should have some more arguments so you can set userInvolvement?\n> \n> My use case is automatically opening a URL when an end user clicks a notification. What do you think Domenic?\n\nIn theory sounds reasonable, but in practice I'm not sure userInvolvement does anything when you're navigating from about:blank?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$edA72MO79_uCkmYrqds8-h5AeYd8l518-smnu5YSevk?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><p>Oh, \"create a fresh top-level traversable\" nice. Though I wonder if this should have some more arguments so you can set userInvolvement?</p>\n<p>My use case is automatically opening a URL when an end user clicks a notification. What do you think <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>?</p>\n</blockquote></mx-reply>In theory sounds reasonable, but in practice I'm not sure userInvolvement does anything when you're navigating from about:blank?","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$edA72MO79_uCkmYrqds8-h5AeYd8l518-smnu5YSevk"}},"msgtype":"m.text"},"ts":1720670106806,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$h7EoNozTHELvTA5MuUi3XjIoNnGo7Z6wB1HhhHL_-T4"},
{"content":{"body":"Domenic: ah okay, I hadn't looked that far","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: ah okay, I hadn't looked that far","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1720674743733,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$SDui5im-by_dySAnVUPhrOVS10FIEreFKAfoW16o4MM"},
{"content":{"body":"Domenic: although if this accurately represents an end user interaction perhaps it could be used by `Sec-Fetch-User` and text fragment navigations?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: although if this accurately represents an end user interaction perhaps it could be used by <code>Sec-Fetch-User</code> and text fragment navigations?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"msgtype":"m.text"},"ts":1720674787838,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$YhubdK6PQEjjBM3swfTGpsH3ItLPxMT2Kym8GHp_a3Y"},
{"content":{"body":"If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it _is_ UTF8-encode ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in _some_ non-UT8 encodings, right?","format":"org.matrix.custom.html","formatted_body":"If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it <em>is</em> UTF8-encode ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in <em>some</em> non-UT8 encodings, right?","m.mentions":{},"msgtype":"m.text"},"ts":1720674838574,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$l5rG2_XtZWc8gs_hqm_Mhkl0g3diaSY7xTA4L6nFKgI"},
{"content":{"body":"And if Yes, then for which other encodings _would_ that actually work?","format":"org.matrix.custom.html","formatted_body":"And if Yes, then for which other encodings <em>would</em> that actually work?","m.mentions":{},"msgtype":"m.text"},"ts":1720674866891,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$iW5l7PFGmvRYjNAukLbks1mnhISZrBRZzkZPjcizero"},
{"content":{"body":" * If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it _is_ UTF8-encoded ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in _some_ non-UT8 encodings, right?","format":"org.matrix.custom.html","formatted_body":" * If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it <em>is</em> UTF8-encoded ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in <em>some</em> non-UT8 encodings, right?","m.mentions":{},"m.new_content":{"body":"If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it _is_ UTF8-encoded ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in _some_ non-UT8 encodings, right?","format":"org.matrix.custom.html","formatted_body":"If I have some data that‚Äôs in some encoding other than UTF8, but ‚Äî under the mis-assumption that it <em>is</em> UTF8-encoded ‚Äî I do some processing on it, to extract substrings as UTF-8: If the strings only have ASCII-range characters, then me assuming they are UTF8 will actually work for those ASCII-range characters in <em>some</em> non-UT8 encodings, right?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$l5rG2_XtZWc8gs_hqm_Mhkl0g3diaSY7xTA4L6nFKgI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720674885791,"senderName":"sideshowbarker","senderId":"@sideshowbarker:matrix.org","id":"$Hx6aNtPWt208w6j8tr7Ur9hHV7YORLEmSy8i96Uafu0"},
{"content":{"body":"sideshowbarker: only UTF-16 and iso-2022-jp are ASCII-incompatible, from the Encoding Standard","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:matrix.org\">sideshowbarker</a>: only UTF-16 and iso-2022-jp are ASCII-incompatible, from the Encoding Standard","m.mentions":{"user_ids":["@sideshowbarker:matrix.org"]},"msgtype":"m.text"},"ts":1720674917314,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$bebIkxkyw7R2nXZT_jcwk0fmkDmWXq0hynW7zPE_w5M"},
{"content":{"body":"> <@annevk:matrix.org> Domenic: although if this accurately represents an end user interaction perhaps it could be used by `Sec-Fetch-User` and text fragment navigations?\n\nTrue, that is an outstanding work item. https://github.com/w3c/webappsec-fetch-metadata/issues/71 https://github.com/whatwg/html/issues/5381 https://github.com/whatwg/html/issues/9133","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$YhubdK6PQEjjBM3swfTGpsH3ItLPxMT2Kym8GHp_a3Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br><a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: although if this accurately represents an end user interaction perhaps it could be used by <code>Sec-Fetch-User</code> and text fragment navigations?</blockquote></mx-reply>True, that is an outstanding work item. https://github.com/w3c/webappsec-fetch-metadata/issues/71 https://github.com/whatwg/html/issues/5381 https://github.com/whatwg/html/issues/9133","m.mentions":{"user_ids":["@annevk:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YhubdK6PQEjjBM3swfTGpsH3ItLPxMT2Kym8GHp_a3Y"}},"msgtype":"m.text"},"ts":1720675018932,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$xucEyw5uyuSbfUmvidYSMhs-fCeCHQcNz_cFrQfTSuI"},
{"content":{"body":"I am sort of my way to the WHATNOT meeting but it seems Firefox Nightly + Google Meet do not get along with each other as of today?","m.mentions":{},"msgtype":"m.text"},"ts":1720684932387,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$dHynIOPiTeQqdQ0EH_IvMmqDYNgVOAFJ_WZpsmteapU"},
{"content":{"body":"keithamus: are you joining?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@keithamus:matrix.org\">keithamus</a>: are you joining?","m.mentions":{"user_ids":["@keithamus:matrix.org"]},"msgtype":"m.text"},"ts":1720685047054,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$LfoI3NcEw4ymgLmExxbpi5bOr87XOr949R2-1hyvzo0"},
{"content":{"body":"Yes! One minute ","format":"org.matrix.custom.html","formatted_body":"Yes! One minute","msgtype":"m.text"},"ts":1720685397844,"senderName":"keithamus","senderId":"@keithamus:matrix.org","id":"$xM97vywGPnuYJdEHNqCbOoL0GWEjzKn15RwQl9snLaM"},
{"content":{"body":"User Error ü§ê","m.mentions":{},"m.relates_to":{"event_id":"$dHynIOPiTeQqdQ0EH_IvMmqDYNgVOAFJ_WZpsmteapU","is_falling_back":true,"m.in_reply_to":{"event_id":"$dHynIOPiTeQqdQ0EH_IvMmqDYNgVOAFJ_WZpsmteapU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1720685479446,"senderName":"freddy","senderId":"@fbraun:mozilla.org","id":"$1bgTo1C2WUVhnGf9Dp8A92lE5Yr3CsVC6DlFeBlzSCY"},
{"content":{"body":"I'm trying to untangle some XHTML/HTML5 heritage. I'm aware there's unresolved differences here, but wondering if there's an interop approach here that's recommended in the interim.\n\nIn a nut shell, when using `document` to create elements for the current document, this creates Element instead of HTMLElement when executed in an XHTML document, despite the elements parsed from the server on the same document, being HTMLElement.\n\nThe impact is that generic JavaScript code like `var dropDown = document.createElement('div'); dropDown.style.display` fails in XHTML context because Element.style is undefined. This works in Firefox but fails in Chrome/Safari. Even after attaching to the body, it remains an Element.\n\n","format":"org.matrix.custom.html","formatted_body":"<p>I'm trying to untangle some XHTML/HTML5 heritage. I'm aware there's unresolved differences here, but wondering if there's an interop approach here that's recommended in the interim.</p>\n<p>In a nut shell, when using <code>document</code> to create elements for the current document, this creates Element instead of HTMLElement when executed in an XHTML document, despite the elements parsed from the server on the same document, being HTMLElement.</p>\n<p>The impact is that generic JavaScript code like <code>var dropDown = document.createElement('div'); dropDown.style.display</code> fails in XHTML context because Element.style is undefined. This works in Firefox but fails in Chrome/Safari. Even after attaching to the body, it remains an Element.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1720716671275,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$mc2utEX9Hr67uEESVn0yL3ofT0z1lSGrFpksiw8ncMk"},
{"content":{"body":"I found a couple related issues like https://github.com/whatwg/dom/issues/643 , and https://github.com/whatwg/dom/issues/217, and open ones about un-merging HTMLDocument, but this seems to be something else.","m.mentions":{},"msgtype":"m.text"},"ts":1720716833814,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$7FSKR4gvusG_y6W4Ptv_UXjHK9PZmkkbR2MAfPajo-Q"},
{"content":{"body":"It seems like step 5 here appears to require this, but I imagine this would have been fixed already if there isn't some other interop issue here that I'm missing. https://dom.spec.whatwg.org/#dom-document-createelement","m.mentions":{},"msgtype":"m.text"},"ts":1720716919242,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$fPLuWIgoixYdsHAhHJuqmCOqxIBGvbzbJyTJ_YuZncc"},
{"content":{"body":"are you able to verify in the network tab that the file is being served with `application/xhtml+xml` ?","format":"org.matrix.custom.html","formatted_body":"are you able to verify in the network tab that the file is being served with <code>application/xhtml+xml</code> ?","m.mentions":{},"msgtype":"m.text"},"ts":1720717398154,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$MXbWYtZFkn27dxZ5fTKQa_NdKvsi4wLr8d874B2tb0s"},
{"content":{"body":"Hm.. well it was, but it isn't now. That might be it. So does this mean there is some kind of in-between mode where if the doctype/xml tag does XHTML, that informs JavaScript, but then the parser/DOM ignores that and just does HTML5 based on content type?","m.mentions":{},"msgtype":"m.text"},"ts":1720727670956,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$7XauvyezdieqoPiGHKdTsMFyOPpQnYWAfka8M8wMKfk"},
{"content":{"body":"Interesting, yeah, I have two different static file servers. One basic nodejs, and one python3 and the latter supports correct mime types for .xhtml out of the box. It all works correctly there.","m.mentions":{},"msgtype":"m.text"},"ts":1720727737391,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$oz66zjDTNGiq_VqTe5D9KT7Izvdr9W5lgoPSBet8_Xc"},
{"content":{"body":"Meghan Denny: Thanks! That solves my mystery for now. It is an odd quirk for sure, but I can work around this for now.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@meghanbun:matrix.org\">Meghan Denny</a>: Thanks! That solves my mystery for now. It is an odd quirk for sure, but I can work around this for now.","m.mentions":{"user_ids":["@meghanbun:matrix.org"]},"msgtype":"m.text"},"ts":1720727787000,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$IRg9ujLb_YQG6gbG0C2FNekzzmHkG39XHTfH6u5uSmw"}
]