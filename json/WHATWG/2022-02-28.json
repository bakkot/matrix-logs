[
{"content":{"body":"Domenic: Thanks!\nThe one bit I missed from there is that the step 11.2 would set *type* to *union type* and that there is a very clear [convert to union type algo](https://webidl.spec.whatwg.org/#es-union). Somehow I completely missed this and was assuming one of the available types was magically chosen there...\nI'll definitely try to use jsdom's implementation to double check my readings though, that's great.\nThanks again!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Thanks!<br>The one bit I missed from there is that the step 11.2 would set <em>type</em> to <em>union type</em> and that there is a very clear <a href=\"https://webidl.spec.whatwg.org/#es-union\">convert to union type algo</a>. Somehow I completely missed this and was assuming one of the available types was magically chosen there...<br>I'll definitely try to use jsdom's implementation to double check my readings though, that's great.<br>Thanks again!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Domenic: Thanks!\nThe one bit I missed from there is that the step 11.2 would set *type* to *union type* and that there is a very clear [convert to union type algo](https://webidl.spec.whatwg.org/#es-union). Somehow I completely missed this and was assuming one of the available types was magically chosen there...\nI'll definitely try to use jsdom's implementation to double check my readings though, that's great.\nThanks again!","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: Thanks!<br>The one bit I missed from there is that the step 11.2 would set <em>type</em> to <em>union type</em> and that there is a very clear <a href=\"https://webidl.spec.whatwg.org/#es-union\">convert to union type algo</a>. Somehow I completely missed this and was assuming one of the available types was magically chosen there...<br>I'll definitely try to use jsdom's implementation to double check my readings though, that's great.<br>Thanks again!","mimetype":"text/html"}]},"ts":1646011448308,"senderName":"Kaiido","senderId":"@kaiido:matrix.org","id":"$J4sW3QeMH7wTE9uLkz_6rLevTcfIsLaKpesCDN7CPlU"},
{"content":{"body":"Last night I was writing tests for Deno's implementation of `AbortSignal.timeout()`, and I noticed that my implementation was ignoring the milliseconds argument and treating it as 0, and the WPT tests didn't catch that","format":"org.matrix.custom.html","formatted_body":"Last night I was writing tests for Deno's implementation of <code>AbortSignal.timeout()</code>, and I noticed that my implementation was ignoring the milliseconds argument and treating it as 0, and the WPT tests didn't catch that","msgtype":"m.text"},"ts":1646060990988,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$0z94xJ7DHqa7IPvYcdXJ-3IOBu3lAKdsoRhd9vv7xYc"},
{"content":{"body":"Noam Rosenthal: currently we only call \"Create the navigation timing entry\" for new documents. Should it also be called for bfcache navigations?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: currently we only call &quot;Create the navigation timing entry&quot; for new documents. Should it also be called for bfcache navigations?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Noam Rosenthal: currently we only call \"Create the navigation timing entry\" for new documents. Should it also be called for bfcache navigations?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>: currently we only call &quot;Create the navigation timing entry&quot; for new documents. Should it also be called for bfcache navigations?","mimetype":"text/html"}]},"ts":1646061586324,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$IHT3H_2vTY2qWqbO1yMCCSJZC_wWWiQ8Qee4g0DRJc8"}
]