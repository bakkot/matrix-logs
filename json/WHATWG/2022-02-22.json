[
{"content":{"body":"Sigh... Leanpub have moved API publishing to their Pro plan. I guess I have to switch to something else","msgtype":"m.text","org.matrix.msc1767.text":"Sigh... Leanpub have moved API publishing to their Pro plan. I guess I have to switch to something else"},"ts":1645490352375,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$ep3zKj47tR3jFdiLRpFDFySD1_UyKh_dwEEUIFEH5YU"},
{"content":{"body":"or it seems I can still use GitHub writing mode, but need to press a button to publish","msgtype":"m.text","org.matrix.msc1767.text":"or it seems I can still use GitHub writing mode, but need to press a button to publish"},"ts":1645492392011,"senderName":"zcorpan","senderId":"@zcorpan_:matrix.org","id":"$EPQDnRfuM23sL_49Vovol9yFs2KtG6fW-feZ5QspLFc"},
{"content":{"body":"Jake Archibald: hola! when you get a chance, https://github.com/whatwg/fetch/pull/1329 can still benefit from some of your review time","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: hola! when you get a chance, https://github.com/whatwg/fetch/pull/1329 can still benefit from some of your review time","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jake Archibald: hola! when you get a chance, https://github.com/whatwg/fetch/pull/1329 can still benefit from some of your review time","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: hola! when you get a chance, https://github.com/whatwg/fetch/pull/1329 can still benefit from some of your review time","mimetype":"text/html"}]},"ts":1645535735548,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$z7tjlfXESsfpeZJMTBwEEq6LBaLbIRiEoAaVOJ9Emt4"},
{"content":{"body":"sideshowbarker: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future","mimetype":"text/html"}]},"ts":1645543414598,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$AROmi30Qj7UTyywejHNFW8JrPo7pcCDNJuIBq6WLxcI"},
{"content":{"body":"ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","format":"org.matrix.custom.html","formatted_body":"<p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","mimetype":"text/plain"},{"body":"<p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$AROmi30Qj7UTyywejHNFW8JrPo7pcCDNJuIBq6WLxcI"}}},"ts":1645568897418,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$rvs82rTmh5m204JYLvPnEycFqZzPmQz3lWP1xzGrhKc"},
{"content":{"body":"per-spec, the value of that `pattern.test('custom-protocol://example.com/other/path?q=1')` should be true?","format":"org.matrix.custom.html","formatted_body":"per-spec, the value of that <code>pattern.test('custom-protocol://example.com/other/path?q=1')</code> should be true?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"per-spec, the value of that `pattern.test('custom-protocol://example.com/other/path?q=1')` should be true?","mimetype":"text/plain"},{"body":"per-spec, the value of that <code>pattern.test('custom-protocol://example.com/other/path?q=1')</code> should be true?","mimetype":"text/html"}]},"ts":1645568948538,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$3nfzCDZJzpSQLc0aosG_UT3Nfs3rwpqrZj9c23JhgG4"},
{"content":{"body":"the `pattern.test(arg)` runs the browsers url parser... which in chrome does not produce a hostname (incorrectly)","format":"org.matrix.custom.html","formatted_body":"the <code>pattern.test(arg)</code> runs the browsers url parser... which in chrome does not produce a hostname (incorrectly)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the `pattern.test(arg)` runs the browsers url parser... which in chrome does not produce a hostname (incorrectly)","mimetype":"text/plain"},{"body":"the <code>pattern.test(arg)</code> runs the browsers url parser... which in chrome does not produce a hostname (incorrectly)","mimetype":"text/html"}]},"ts":1645568968413,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$U6hev5shKekrsnUXN-HsbMiseoTEYZ-Q7O8A3s13ds4"},
{"content":{"body":"thats a bug in the url parser, not `pattern.test()`","format":"org.matrix.custom.html","formatted_body":"thats a bug in the url parser, not <code>pattern.test()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"thats a bug in the url parser, not `pattern.test()`","mimetype":"text/plain"},{"body":"thats a bug in the url parser, not <code>pattern.test()</code>","mimetype":"text/html"}]},"ts":1645568977765,"senderName":"wanderview","senderId":"@wanderview:matrix.org","id":"$Qwxv6JBGaBt4C6J286gL05kMJ1oKgwIC1iTw10Oe4x8"},
{"content":{"body":"> <@wanderview:matrix.org> sideshowbarker: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future\n\n * ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$AROmi30Qj7UTyywejHNFW8JrPo7pcCDNJuIBq6WLxcI?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@wanderview:matrix.org\">@wanderview:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future</blockquote></mx-reply> * <p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","m.new_content":{"body":"ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","format":"org.matrix.custom.html","formatted_body":"<p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","mimetype":"text/plain"},{"body":"<p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$rvs82rTmh5m204JYLvPnEycFqZzPmQz3lWP1xzGrhKc","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@wanderview:matrix.org> sideshowbarker: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future\n\n * ah OK, thanks — I’m surprised I didn’t know about that issue before now.\nAnd  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:\n> The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.\n\nBut then it seems there must be a bug in your `pattern.test()` implementation, right?\nI mean for the following:\n```js\nconst pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n```","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$AROmi30Qj7UTyywejHNFW8JrPo7pcCDNJuIBq6WLxcI?via=mozilla.org&amp;via=matrix.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@wanderview:matrix.org\">@wanderview:matrix.org</a><br><a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: I believe that URL issue in chrome is crbug.com/869291... since URLPattern constructor had to use a separate (but similar) parser, I chose to follow the spec there in the hopes chrome url parser will get fixed in the future</blockquote></mx-reply> * <p>ah OK, thanks — I’m surprised I didn’t know about that issue before now.<br>And  yeah about the parser difference, I had read the note at https://wicg.github.io/urlpattern/#ref-for-concept-basic-url-parser in the spec:</p>\n<blockquote>\n<p>The URLPattern constructor string algorithm is very similar to the basic URL parser algorithm, but some differences prevent us from using that algorithm directly.</p>\n</blockquote>\n<p>But then it seems there must be a bug in your <code>pattern.test()</code> implementation, right?<br>I mean for the following:</p>\n<pre><code class=\"language-js\">const pattern = new URLPattern({ hostname: '{*.}?example.com' });\nconsole.log(pattern.test('custom-protocol://example.com/other/path?q=1'));\n// false\n</code></pre>\n","mimetype":"text/html"}]},"ts":1645568985455,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$ejHKf229uBo-A-k3PV6HOksazERtgPJkNF8W-Fdfrc8"},
{"content":{"body":"aha","msgtype":"m.text","org.matrix.msc1767.text":"aha"},"ts":1645568995721,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$a4iyRFWlhSz27U1NCZu3v17QosI6QI9VhY98UAOIbt4"},
{"content":{"body":"got it — thanks","msgtype":"m.text","org.matrix.msc1767.text":"got it — thanks"},"ts":1645569004270,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$XzZ5A8IwCHSlaEUHQNU4zHr0xnmfM4BrbJn92RqzePY"}
]