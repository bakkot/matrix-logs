[
{"content":{"body":"Jake Archibald: good morning! I have a couple of SW patches waiting for review when you get a chance... https://github.com/w3c/ServiceWorker/pull/1620 and https://github.com/w3c/ServiceWorker/pull/1621","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: good morning! I have a couple of SW patches waiting for review when you get a chance... https://github.com/w3c/ServiceWorker/pull/1620 and https://github.com/w3c/ServiceWorker/pull/1621","msgtype":"m.text"},"ts":1638175286556,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$6tBAf5rk_MqrIZ-5mYxUU-3FjpM2cuHC-CNWGY9GZSY"},
{"content":{"body":"Hi annevk: We found some existing issue with `process response donein this comment: https://github.com/whatwg/fetch/pull/1311/files#r737407947","format":"org.matrix.custom.html","formatted_body":"Hi <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: We found some existing issue with `process response donein this comment: https://github.com/whatwg/fetch/pull/1311/files#r737407947","msgtype":"m.text"},"ts":1638176971618,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$henIC43Hicq-I1Ath0ST8I6AopzxqwHWLL3bi3knYEk"},
{"content":{"body":"basically we call \"done\" when the network is done, but we never call it for http-cache/SW. For http-cache it's simple, but not sure yet how to integrate it with SW","msgtype":"m.text"},"ts":1638177012608,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$UNvWeBhwmLHQ0RAWvjwQIh-QGYMluhVLkS41qmi1b18"},
{"content":{"body":"annevk:  Maybe `network read complete` flag should be on a response instead of on the fetch, I think that would solve it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>:  Maybe <code>network read complete</code> flag should be on a response instead of on the fetch, I think that would solve it","msgtype":"m.text"},"ts":1638177308105,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$00wpxiGYa_jsKSeAYFXNyHFr17XKWqmHbBrw22Fc6oc"},
{"content":{"body":"How would it get set is the problem, no? It's interesting how the lack of progress events for streams is making a lot of this hard","msgtype":"m.text"},"ts":1638177385385,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$uq0AqcSetNlXt7EF2-g7L0IeYDcYcHZsV0qnNIJuubk"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1638177396996,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$-RmWaaoD1AJ6yDMO83cV1w37qvE9JCXNPXDRtOgacB4"},
{"content":{"body":"ideally this should all be related to the streams","msgtype":"m.text"},"ts":1638177408990,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$5LaBSPdpNvrFqgHwNHOqvJajOqxRJ77NZ0UC1BtKDlw"},
{"content":{"body":"Perhaps the solution would be to have some kind of transform stream that reports when EOF is pushed and otherwise forwards","msgtype":"m.text"},"ts":1638177413049,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$cLNW5t-MJ5ru2sQC7nRXhcp3geqPNYhB5BhnLO1qGcY"},
{"content":{"body":"isn't that equivalent to \"teeing\" the stream and fully reading one side of the tee?","msgtype":"m.text"},"ts":1638177442794,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$cJqE2tCUVhfaJfoMNUu-1ZHYQ-4EK9xCuQG7yIJaHkY"},
{"content":{"body":"I thought reading had side effects, such as possibly influencing the speed of transfer","msgtype":"m.text"},"ts":1638177495652,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$1cRj_vAqlvwIJwxD9DxrVOdj0ezAWskjMT11Gxqrr2A"},
{"content":{"body":"yea but not observable side effects","msgtype":"m.text"},"ts":1638177521755,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$fc_vY6iRMTlvoaPnt2X1owZpS5-u85e4BBBqD_6lhCU"},
{"content":{"body":"as far as observable behavior is concerned it should be equivalent, of course implementations can do something \"faster\"","msgtype":"m.text"},"ts":1638177547449,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$yMyocf3-sBn3WxhNqG_VPfn8sbXDknwzzIbneLBbCIc"},
{"content":{"body":"Maybe, I'm not too well-versed in this. It seems rather wasteful, but perhaps with an explanation of what it is doing it could work","msgtype":"m.text"},"ts":1638177628582,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$j9blFw_EWUG1Gp0nu1Jsaj2NFbl6XuR2tJBA4GDZ4D0"},
{"content":{"body":"but maybe a cleaner solution would be to add some \"control-flow\" reader to a stream like you suggested","msgtype":"m.text"},"ts":1638177629054,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$TNAUJmhlvHcB1cOAww3VK4jyGxA644qGdFw4Xl495eI"},
{"content":{"body":"Mattias Buelens do you have thoughts on any of this?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mattiasbuelens:matrix.org\">Mattias Buelens</a> do you have thoughts on any of this?","msgtype":"m.text"},"ts":1638177677276,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$5UZ-JJhoExsKIjNNBr1Un-rSLbjLvrf7dpkjJoKzNE0"},
{"content":{"body":"Seems like maybe the cleanest thing would be that FETCH adds a transform stream that implements flush (https://streams.spec.whatwg.org/#dom-transformer-flush) but that is otherwise an identity transform stream","msgtype":"m.text"},"ts":1638178132827,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$MkqIGttWoyyjKsvyy1nRwrmaNKPPoaGOIJpeb3i4rs4"},
{"content":{"body":"annevk: doing ^^^ for only the SW case would solve the problem I think (for HTTP cache we can check cache-state on fetch finale). I'll jot down a revision and see what it looks like","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: doing ^^^ for only the SW case would solve the problem I think (for HTTP cache we can check cache-state on fetch finale). I'll jot down a revision and see what it looks like","msgtype":"m.text"},"ts":1638179756951,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$9_YJP-IFfcfPruKJc9aCdunHS8F2DLhrDGPsxSn1XyE"},
{"content":{"body":"Teeing and then fully reading one side is not correct, since it doesn't respect backpressure. Piping through an identity transform stream that implements `flush()` would work.","format":"org.matrix.custom.html","formatted_body":"Teeing and then fully reading one side is not correct, since it doesn't respect backpressure. Piping through an identity transform stream that implements <code>flush()</code> would work.","msgtype":"m.text"},"ts":1638179879510,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$gxPa7T_ygfewPQdrJq8C4Duwer3KmprSHgKHQeVZrUo"},
{"content":{"body":"You could also use the promise returned by `pipeTo()` to know when the pipe has completed, and thus when the readable has reached EOF. But a transform stream with `flush()` is probably easier to reason about.","format":"org.matrix.custom.html","formatted_body":"You could also use the promise returned by <code>pipeTo()</code> to know when the pipe has completed, and thus when the readable has reached EOF. But a transform stream with <code>flush()</code> is probably easier to reason about.","msgtype":"m.text"},"ts":1638180041774,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$cy_iSNvvyulsKWh5KP6ajvZbutYM8teqVy30b5pgiDQ"},
{"content":{"body":"great, thanks Mattias Buelens. Getting to it!","format":"org.matrix.custom.html","formatted_body":"great, thanks <a href=\"https://matrix.to/#/@mattiasbuelens:matrix.org\">Mattias Buelens</a>. Getting to it!","msgtype":"m.text"},"ts":1638180124221,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$U0qtjMo4QealNt7-LwRL1EFoDyfCfpH28ZuTVWcKuQg"},
{"content":{"body":"Mattias Buelens: how do I define a `[=transform stream=]` with a custom flush, spec-wise? Seems like `{{Transformer}}` is a web-exposed class, while I want to stay in the \"internal\" realm","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@mattiasbuelens:matrix.org\">Mattias Buelens</a>: how do I define a <code>[=transform stream=]</code> with a custom flush, spec-wise? Seems like <code>{{Transformer}}</code> is a web-exposed class, while I want to stay in the &quot;internal&quot; realm","msgtype":"m.text"},"ts":1638181611980,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$GOB3ngELNapVgGY9TJka5Ic-FQnUzFghYwnKA0gGRmo"},
{"content":{"body":"See https://streams.spec.whatwg.org/#other-specs-ts","msgtype":"m.text"},"ts":1638181644096,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$Y5QNrtuu6kScJlPjS9DWU_WFqB9VPVzTP-ux5T6G0Vs"},
{"content":{"body":"For an example, see step 5.2 of https://fetch.spec.whatwg.org/#http-fetch","msgtype":"m.text"},"ts":1638181693788,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$jKJT9nKOucgk1X3ttJIRh00Rl0GxPf3w7H_frN0w8vQ"},
{"content":{"body":"perfect, thanks!","msgtype":"m.text"},"ts":1638181702403,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$YZNiivowgeT6CxEDFd14esI62063yLDrtptz2Qvt0yY"},
{"content":{"body":"> <@mattiasbuelens:matrix.org> See https://streams.spec.whatwg.org/#other-specs-ts\n\nSeems like `transformAlgorithm` is required though, is there something like an `identityTransformAlgorithm` I can use here or needs to be exposed?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$Y5QNrtuu6kScJlPjS9DWU_WFqB9VPVzTP-ux5T6G0Vs?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@mattiasbuelens:matrix.org\">@mattiasbuelens:matrix.org</a><br>See https://streams.spec.whatwg.org/#other-specs-ts</blockquote></mx-reply>Seems like <code>transformAlgorithm</code> is required though, is there something like an <code>identityTransformAlgorithm</code> I can use here or needs to be exposed?","m.relates_to":{"m.in_reply_to":{"event_id":"$Y5QNrtuu6kScJlPjS9DWU_WFqB9VPVzTP-ux5T6G0Vs"}},"msgtype":"m.text"},"ts":1638181843358,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$YbiwNyHQqXZw6xb198b4KXUhIOd8lN0fJkSShK6darM"},
{"content":{"body":"(I only want to customize flush)","msgtype":"m.text"},"ts":1638181855001,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$WXH7m155TYEPahUauwEvCEj2xG0a4LKhiMA5Ldw64D0"},
{"content":{"body":"Hmm, doesn't seem like it. It's probably easiest to define your own `transformAlgorithm` that simply enqueues the given chunk (using https://streams.spec.whatwg.org/#transformstream-enqueue).","format":"org.matrix.custom.html","formatted_body":"Hmm, doesn't seem like it. It's probably easiest to define your own <code>transformAlgorithm</code> that simply enqueues the given chunk (using https://streams.spec.whatwg.org/#transformstream-enqueue).","msgtype":"m.text"},"ts":1638182044748,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$hcAXS0mW32hkkQz9mCxdM4VJFXMuTeY5Ep-mVE8sLkU"},
{"content":{"body":"You can copy the phrasing from https://streams.spec.whatwg.org/#create-an-identity-transformstream","msgtype":"m.text"},"ts":1638182082634,"senderName":"Mattias Buelens","senderId":"@mattiasbuelens:matrix.org","id":"$mHiXiY-qlhs5_EOu2vtelKGR9GGYjyBUdfdHAS7cQow"},
{"content":{"body":"Done. annevk I think this made https://github.com/whatwg/fetch/pull/1311 a lot better... At `fetch finale` the response is either done and can be finalized, or we add a `TransformStream` at that point that reports `done` on `flush`.","format":"org.matrix.custom.html","formatted_body":"Done. <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a> I think this made https://github.com/whatwg/fetch/pull/1311 a lot better... At <code>fetch finale</code> the response is either done and can be finalized, or we add a <code>TransformStream</code> at that point that reports <code>done</code> on <code>flush</code>.","msgtype":"m.text"},"ts":1638183269545,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$lO2SzjmUPrQjPAcFnmxGipJTkMl3X8pT5pHX-v2G89k"},
{"content":{"body":"... no need to deal with the network thread race conditions","msgtype":"m.text"},"ts":1638183303170,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$3OXwHOtDiBhkm5df8m2n9bUbVpFBta9c2P0gWSxqcF0"},
{"content":{"body":"> <@noamr:matrix.org> Jake Archibald: good morning! I have a couple of SW patches waiting for review when you get a chance... https://github.com/w3c/ServiceWorker/pull/1620 and https://github.com/w3c/ServiceWorker/pull/1621\n\nThanks for the ping, I'll try to find time to catch up on issues there","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$6tBAf5rk_MqrIZ-5mYxUU-3FjpM2cuHC-CNWGY9GZSY?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@noamr:matrix.org\">@noamr:matrix.org</a><br><a href=\"https://matrix.to/#/@jakea:matrix.org\">Jake Archibald</a>: good morning! I have a couple of SW patches waiting for review when you get a chance... https://github.com/w3c/ServiceWorker/pull/1620 and https://github.com/w3c/ServiceWorker/pull/1621</blockquote></mx-reply>Thanks for the ping, I'll try to find time to catch up on issues there","m.relates_to":{"m.in_reply_to":{"event_id":"$6tBAf5rk_MqrIZ-5mYxUU-3FjpM2cuHC-CNWGY9GZSY"}},"msgtype":"m.text"},"ts":1638191715417,"senderName":"Jake Archibald","senderId":"@jakea:matrix.org","id":"$6T7B23LE06GGKWv1toaKmDIcYvBcRwwe4vOLclJiY_s"},
{"content":{"body":"Noam Rosenthal, annevk, Domenic: https://github.com/whatwg/html/issues/7376","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>, <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>, <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: https://github.com/whatwg/html/issues/7376","msgtype":"m.text"},"ts":1638192136435,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$IYZIu6jqUGWofEVkxryhhqxi_KWrWlsei_ESoHFF3SM"},
{"content":{"body":"> <@andreubotella:mozilla.org> Noam Rosenthal, annevk, Domenic: https://github.com/whatwg/html/issues/7376\n\nI believe getDeadline should be clamped to always be >=0, if that's missing in the requestIdleCallback spec it's an oversight and I'll add it, thanks for noticing.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$IYZIu6jqUGWofEVkxryhhqxi_KWrWlsei_ESoHFF3SM?via=mozilla.org&via=matrix.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">@andreubotella:mozilla.org</a><br><a href=\"https://matrix.to/#/@noamr:matrix.org\">Noam Rosenthal</a>, <a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>, <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">Domenic</a>: https://github.com/whatwg/html/issues/7376</blockquote></mx-reply>I believe getDeadline should be clamped to always be &gt;=0, if that's missing in the requestIdleCallback spec it's an oversight and I'll add it, thanks for noticing.","m.relates_to":{"m.in_reply_to":{"event_id":"$IYZIu6jqUGWofEVkxryhhqxi_KWrWlsei_ESoHFF3SM"}},"msgtype":"m.text"},"ts":1638192457241,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$rLZbV0ohfNfP7P-inQX14M9Km8qPxLSu9rTkI5EyoRg"},
{"content":{"body":"I haven't looked at `requestIdleCallback` in any depth, but this is an issue with the timers","format":"org.matrix.custom.html","formatted_body":"I haven't looked at <code>requestIdleCallback</code> in any depth, but this is an issue with the timers","msgtype":"m.text"},"ts":1638192487394,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$SDG20Fnz4812XesCHj16yqa32vyjql0o9xHvKOVbzA8"},
{"content":{"body":"Andreu Botella (he/they): from the issue it seems like it's only a rIB issue, as that's the only place this deadline is relevant. so I guess I don't fully understand the issue. ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">Andreu Botella (he/they)</a>: from the issue it seems like it's only a rIB issue, as that's the only place this deadline is relevant. so I guess I don't fully understand the issue.","msgtype":"m.text"},"ts":1638192533172,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$4wozInsOyFNaSWsODFH7AEFCgcNph0NTnGQ1LToOxPM"},
{"content":{"body":"`setTimeout()` timers keeping an entry in the map of active timers even long after their callback has been run","format":"org.matrix.custom.html","formatted_body":"<code>setTimeout()</code> timers keeping an entry in the map of active timers even long after their callback has been run","msgtype":"m.text"},"ts":1638192547647,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$YQqQfkCl27IhcUzS8TKekUHODDdn0Y86zGyktGsn0Ck"},
{"content":{"body":"thus keeping the deadline in the past","msgtype":"m.text"},"ts":1638192553756,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$nbPGYw-BtGAaU_9ME8QcXHrko1fEArUygT2xyh4cgFI"},
{"content":{"body":"even if it's clamped to 0, that's probably not what you want for already-expired timers","msgtype":"m.text"},"ts":1638192605475,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$6E1vFqgmbAbvQ97q5An6f0PmZLha1t8FyEWgjUqF9cY"},
{"content":{"body":"right, we now remove them from the list. Why were they kept in the list in the first place and how was that observable?","msgtype":"m.text"},"ts":1638192638900,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$w_PnLH1a4lwdE-L_9GJZbQhhPOjgiC3OegfGEBfFA7c"},
{"content":{"body":"The timer task (timer initialization steps, step 9) in the spec will not remove the entry from the map of active timers if `repeat` is false","format":"org.matrix.custom.html","formatted_body":"The timer task (timer initialization steps, step 9) in the spec will not remove the entry from the map of active timers if <code>repeat</code> is false","msgtype":"m.text"},"ts":1638192777076,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$AM9-iv_0aGeb86u_Zxmn-Sbr-tz_Hg5Ld6fuUZMLE3I"},
{"content":{"body":"But see the note in step 13","msgtype":"m.text"},"ts":1638192785717,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$yNOP8-THnwxixvehsggoy9vgY3kLWps9CU2w8QLnyo0"},
{"content":{"body":"I suspect Chrome does remove it","msgtype":"m.text"},"ts":1638192802391,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$vggfdNHyoY28rYXwqWQSOo9Mjn8voFhX6WQs7DnLu6U"},
{"content":{"body":"Andreu Botella (he/they): I see, so for the purpose of repeating intervals, the spec is \"lazy\" and doesn't actually remove the timers from the map, which would have a strange effect on requestIdleCallback. The safest solution would be that the map value would have a boolean \"expired\" alongside the timer's deadline to let rIB ignore them","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">Andreu Botella (he/they)</a>: I see, so for the purpose of repeating intervals, the spec is &quot;lazy&quot; and doesn't actually remove the timers from the map, which would have a strange effect on requestIdleCallback. The safest solution would be that the map value would have a boolean &quot;expired&quot; alongside the timer's deadline to let rIB ignore them","msgtype":"m.text"},"ts":1638193018220,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$cpBZV1vZZ5cM0yT6gDTDrXIkBU-p5tu5199Licd9SMI"},
{"content":{"body":"Am I getting this correctly now?","msgtype":"m.text"},"ts":1638193035863,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$Fwymbi2QyFLvk1etswiDMOlQ0p6bY5rkbYnYN7yBjQY"},
{"content":{"body":"Or simply remove the entry from the map after the callback","msgtype":"m.text"},"ts":1638193090662,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$JpJiURAZOYb39wDi-o8l6W5AP3wAGKTQJ4tLMCS-bAo"},
{"content":{"body":" * Or simply remove the entry from the map after the callback","m.new_content":{"body":"Or simply remove the entry from the map after the callback","msgtype":"m.text"},"m.relates_to":{"event_id":"$JpJiURAZOYb39wDi-o8l6W5AP3wAGKTQJ4tLMCS-bAo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1638193097459,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$jmJ-zsxKMdw87-GD5xb1r2dRA50EJLA441hH3EXFeMA"},
{"content":{"body":"Andreu Botella (he/they): we can't do that because of intervals... repeating means that someone actually canceled that ID","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@andreubotella:mozilla.org\">Andreu Botella (he/they)</a>: we can't do that because of intervals... repeating means that someone actually canceled that ID","msgtype":"m.text"},"ts":1638193110871,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$yo1yX5SoRbwUtyDOz2t7l8VzpKA5BemyW153-E0tGVY"},
{"content":{"body":"but yea removing them and making sure intervals are handled correctly by rIB would also solve this problem","msgtype":"m.text"},"ts":1638193151074,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$cXbM4rAv_lG9eWuK0d-dL-oNNRMXzfj-iL7MtjwrKuw"},
{"content":{"body":"I noticed this –and other timer issues– while rewriting the implementation of timers in Deno (even though we don't implement `requestIdleCallback` yet), and what I'm doing is just have step 9.5 run the timer initialization steps if `repeat` is true or remove the entry otherwise.","format":"org.matrix.custom.html","formatted_body":"I noticed this –and other timer issues– while rewriting the implementation of timers in Deno (even though we don't implement <code>requestIdleCallback</code> yet), and what I'm doing is just have step 9.5 run the timer initialization steps if <code>repeat</code> is true or remove the entry otherwise.","msgtype":"m.text"},"ts":1638193291926,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$vYPuQXFwTGmVR0ukjkPPyFbS5kNt7itVc7aqb03x_Kw"},
{"content":{"body":"Would this be an issue for rIC?","msgtype":"m.text"},"ts":1638193315130,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$gur69l-KvflewjuaEWDh0ctJeOcO5wSZ7S-FMNGvMww"},
{"content":{"body":"this would be good for rIC, all that rIC cares about is the \"next active timeout to pop\"","msgtype":"m.text"},"ts":1638193402156,"senderName":"Noam Rosenthal","senderId":"@noamr:matrix.org","id":"$pOpFq2Q-IfFonniIWj6iGiy-H6fCYCRmYVzEeG3bPaM"},
{"content":{"body":"👍️","msgtype":"m.text"},"ts":1638193412193,"senderName":"Andreu Botella (he/they)","senderId":"@andreubotella:mozilla.org","id":"$3-YkCcUOfuyXIfWFZW8JIaIFWSZ5FTmKqvjzEh_0RDg"}
]