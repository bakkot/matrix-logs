[
{"content":{"body":"So has anyone else ever needed a `String.codePointCompare` function (a la `Intl.Collator.prototype.compare`) to use with `sort` for comparing strings by Unicode code points instead of the default code units (when the comparator is missing). It seems that there is no Intl locale / collation that will do a dumb code point compare.","format":"org.matrix.custom.html","formatted_body":"So has anyone else ever needed a <code>String.codePointCompare</code> function (a la <code>Intl.Collator.prototype.compare</code>) to use with <code>sort</code> for comparing strings by Unicode code points instead of the default code units (when the comparator is missing). It seems that there is no Intl locale / collation that will do a dumb code point compare.","m.mentions":{},"msgtype":"m.text"},"ts":1729389917630,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$a9mbtztqOAef3ljk__F2bE021ZaM4819s2WxbzZQhKY"},
{"content":{"body":"Bonus is that implementing this natively would allow engines using an internal utf8 representation for strings to just compare them by bytes!","m.mentions":{},"msgtype":"m.text"},"ts":1729390011823,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$_Qc8wuaNMGPb8iv_VICCgJ3MPihZ1jDQpVE8zDELnn0"},
{"content":{"body":"I have never needed to sort strings by code point, no","m.mentions":{},"msgtype":"m.text"},"ts":1729390482674,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Xj1kgB2JVSW4gX-zziIzA0PciD5V4ZEP3N5HKpJZZus"},
{"content":{"body":"I don't think any major engines use internal utf8 representations but I could be mistaken","m.mentions":{},"msgtype":"m.text"},"ts":1729390528343,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SErxyvcgmbIvW7cLdjD5fmv4pmQ9JPJ0GJpvp380gA4"},
{"content":{"body":"how did you find yourself needing this?","m.mentions":{},"msgtype":"m.text"},"ts":1729390565829,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lGKqL-6Q-tGynB0rs_KVzhfLqAiqhd3YN6XUsJ_PFpI"},
{"content":{"body":"speaking of sorting, though, I do want to have a `Array<T>.sortBy(fn)` method where the function is a map from `T` to `Comparable: string | number | bigint | Array<Comparable>`, and which sorts the inputs by comparing their outputs from `fn` (throwing if the outputs are of unlike types, and sorting arrays lexicographically)","format":"org.matrix.custom.html","formatted_body":"speaking of sorting, though, I do want to have a <code>Array&lt;T&gt;.sortBy(fn)</code> method where the function is a map from <code>T</code> to <code>Comparable: string | number | bigint | Array&lt;Comparable&gt;</code>, and which sorts the inputs by comparing their outputs from <code>fn</code> (throwing if the outputs are of unlike types, and sorting arrays lexicographically)","m.mentions":{},"msgtype":"m.text"},"ts":1729390696201,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8zvg_y2kvvCvSY2hZDbWInLcenPQoNsTgH6PNKd264A"},
{"content":{"body":"and given such a thing you could do `array.sortBy(s => [...s])`","format":"org.matrix.custom.html","formatted_body":"and given such a thing you could do <code>array.sortBy(s =&gt; [...s])</code>","m.mentions":{},"msgtype":"m.text"},"ts":1729390719820,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FUmGAKKOWIZN-Zxw_lK8x8Sw_MGlq7cyzRDbjqPF7to"},
{"content":{"body":"of course are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static `Array.sortBy(arr, fn)`, which... ugh. but I'd still take it.","format":"org.matrix.custom.html","formatted_body":"of course are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static <code>Array.sortBy(arr, fn)</code>, which... ugh. but I'd still take it.","m.mentions":{},"msgtype":"m.text"},"ts":1729390751634,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fNEfMq23O6RyrVwuQvRIb9fC8DSRmwJFUHfWnuvtxTs"},
{"content":{"body":" * of course we are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static `Array.sortBy(arr, fn)`, which... ugh. but I'd still take it.","format":"org.matrix.custom.html","formatted_body":" * of course we are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static <code>Array.sortBy(arr, fn)</code>, which... ugh. but I'd still take it.","m.mentions":{},"m.new_content":{"body":"of course we are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static `Array.sortBy(arr, fn)`, which... ugh. but I'd still take it.","format":"org.matrix.custom.html","formatted_body":"of course we are extremely unlikely to get any new array prototype methods with reasonable names, so I guess it would have to be a static <code>Array.sortBy(arr, fn)</code>, which... ugh. but I'd still take it.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$fNEfMq23O6RyrVwuQvRIb9fC8DSRmwJFUHfWnuvtxTs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729390755609,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$n3ZpyQz5ugoGWrQER8nUsIi3pxY3vC4CprsPzQt8Wj0"},
{"content":{"body":" * speaking of sorting, though, I do want to have a `Array<T>.sortBy(fn)` method where the function is a map from `T` to `Comparable: string | number | bigint | Array<Comparable>`, and which sorts the inputs by comparing their outputs from `fn` (throwing if the outputs are of unlike types, and comparing arrays lexicographically)","format":"org.matrix.custom.html","formatted_body":" * speaking of sorting, though, I do want to have a <code>Array&lt;T&gt;.sortBy(fn)</code> method where the function is a map from <code>T</code> to <code>Comparable: string | number | bigint | Array&lt;Comparable&gt;</code>, and which sorts the inputs by comparing their outputs from <code>fn</code> (throwing if the outputs are of unlike types, and comparing arrays lexicographically)","m.mentions":{},"m.new_content":{"body":"speaking of sorting, though, I do want to have a `Array<T>.sortBy(fn)` method where the function is a map from `T` to `Comparable: string | number | bigint | Array<Comparable>`, and which sorts the inputs by comparing their outputs from `fn` (throwing if the outputs are of unlike types, and comparing arrays lexicographically)","format":"org.matrix.custom.html","formatted_body":"speaking of sorting, though, I do want to have a <code>Array&lt;T&gt;.sortBy(fn)</code> method where the function is a map from <code>T</code> to <code>Comparable: string | number | bigint | Array&lt;Comparable&gt;</code>, and which sorts the inputs by comparing their outputs from <code>fn</code> (throwing if the outputs are of unlike types, and comparing arrays lexicographically)","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$8zvg_y2kvvCvSY2hZDbWInLcenPQoNsTgH6PNKd264A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729390787180,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UYfEpu59Dzw7OlJLtTw6nnDzJYLK3-DrnVl3XRs5dbM"}
]