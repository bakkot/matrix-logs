[
{"content":{"body":"is MethodDefinitionEvaluation of AsyncMethod and AsyncGeneratorMethod not supposed to handle private names?","msgtype":"m.text"},"ts":1626487578869,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$hwa-9tjINKk6UKqCpzEi2ax08w2_GDyXIlJxvwNQAEw"},
{"content":{"body":"the other two do","msgtype":"m.text"},"ts":1626487585535,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$cZmh5TqWoy6AzLpq5md3ei2407IOHsw-b0mmL4K_8RE"},
{"content":{"body":"oh nvm i missed that its calling DefineMethodProperty instead of DefinePropertyOrThrow","msgtype":"m.text"},"ts":1626487647594,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$RWVk55WC1T0tp2XJqXBZkhOSGxONDgVx9lGInzdS3ks"},
{"content":{"body":"i don't think the default base constructor sets up private fields correctly","msgtype":"m.text"},"ts":1626497831097,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$C5WcAuNAq-cA3wug0SrpAn2RobWIx-nSi9tKDCCN4jw"},
{"content":{"body":"i think it is missing a call to InitializeInstanceElements","msgtype":"m.text"},"ts":1626497850275,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$z6z2S0cqZBn_TJVEJCPpBtS3gh8yFx1eZwy_MeEzb4c"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/2462","msgtype":"m.text"},"ts":1626498286856,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$V7HQ_cLE8Z2YlQEC9Y0cV38TzOox3su7MTMuWUsBKNc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1626499238380,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iOtuC4ejJOWeNastDleE5UpOBwKTXWwWVn5WCoKuCxQ"},
{"content":{"body":"all fields, not just private","msgtype":"m.text"},"ts":1626499241163,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$WRADai-T7Es5nhnuVCqljwp0CRS72LjKWbDPtPwazm8"},
{"content":{"body":"the fact that the spec differentiates built-in and ecmascript function objects is dumb","msgtype":"m.text"},"ts":1626499266141,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dquVsMqKBoB--urb27e8YR2fD0NfKDP8V9dnFs0Tj18"},
{"content":{"body":"I wonder if we can fix that","msgtype":"m.text"},"ts":1626499271445,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Px9BHey4UziA2BIU2s2qXX7rkCNqdFsKIHC1kQvTmrk"},
{"content":{"body":"why do all the new abstract ops take the property before the target object","msgtype":"m.text"},"ts":1626500711122,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$KohAgJLlq6avA9CXltjLRh5XKxlSEQSZzEV-2w1mOf8"},
{"content":{"body":"this is driving me nuts","msgtype":"m.text"},"ts":1626500714923,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$0oaeGOzNSaMdTrDjfbsBhYw4dzyKLIAH_a_WYsSr64I"},
{"content":{"body":"e.g.?","msgtype":"m.text"},"ts":1626500760330,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BVrcf7MD2OgBpc1pak53_gn8UcdMeCU_MTlmfiVnxTc"},
{"content":{"body":"DefineMethodProperty(propkey, object, ...)","msgtype":"m.text"},"ts":1626500774070,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$7_PtTAfZgOhyVFcLWZxP4of7TlhHfLMcpfcu4cKQQds"},
{"content":{"body":"PrivateGet(P, O)","msgtype":"m.text"},"ts":1626500777364,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3yWQkm7UfzEr-O0tVlGUCHHTGEjIdZwg2V6egIg8GiY"},
{"content":{"body":" * PrivateGet(P, O)","m.new_content":{"body":"PrivateGet(P, O)","msgtype":"m.text"},"m.relates_to":{"event_id":"$3yWQkm7UfzEr-O0tVlGUCHHTGEjIdZwg2V6egIg8GiY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626500781722,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ZTnk_g_-UJ_MyMg0i-jD7dkdkHhqlqaFCb0fVGmBwBY"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1626500782167,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3xtcF-eTmeSgrbwv-cDDGW4jwmo1avNSUxqH2wloDH4"},
{"content":{"body":"uhhhh yeah that's super weird","msgtype":"m.text"},"ts":1626500823605,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$z5M8kWQwh6lGuv9UOnnY27JWKIess7pgc6CZ1jdWH4M"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1626500825670,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3MCb8SbIHc_t7ZUlyJpRwioIR0HDByJRSUsHXR03k28"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1626500846241,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$q1ZkJ28DflcjORmyXO8vjQs8ONEc-xoXUghLQfvoZmE"},
{"content":{"body":"PRs welcome","msgtype":"m.text"},"ts":1626500883077,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FVjSD6h6nW8uzqPRSvhPIQBidhOBRxyHlEcVZIMVKMc"},
{"content":{"body":"I'll do it sometime this weekend if you don't","msgtype":"m.text"},"ts":1626500897179,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hkSHDzujA2vPQ_tRibGkIwciRYJvaHvLLSleawE4VuE"},
{"content":{"body":"we'll see where my motivation is","msgtype":"m.text"},"ts":1626500913776,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$kZwO-EzpP2oH82f-qEqN8nfmW38MuK0L9vz00Nm86AU"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1626501215054,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$FKoUxjZkxNdVM_LgCuKqX9KIlqV9z9vndQcgc09b8Jg"},
{"content":{"body":"MethodDefinitionEvaluation is duplicating calls to SetFunctionName","msgtype":"m.text"},"ts":1626501232074,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$FcDoPBIOJWTSPFNz2g3Vlwe5-G6wt08Ukt8QDcD4wzE"},
{"content":{"body":"that fails an assert","msgtype":"m.text"},"ts":1626501243224,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$e1tIWPRN1_c8znZksm91z5YZdH1HCUP-EfFZQD7HHec"},
{"content":{"body":"ignoring the assert it probably breaks those changes to keep function property ordering consistent","msgtype":"m.text"},"ts":1626501265984,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$cRRfHMtx6lTHo-auHOWquEbJpxYk2s18E4SECySclK4"},
{"content":{"body":"Which two steps do SetFunctionName?","msgtype":"m.text"},"ts":1626501343616,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$awLWjPfIX9iBZNLvhQzjOkrP2FfPMz3okOm14YAwKBc"},
{"content":{"body":"RS itself calls it","msgtype":"m.text"},"ts":1626501351837,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$EQbi_H38QkPAPPrbrH0dlW1y9JNv_PWIqoBZpGqwBYA"},
{"content":{"body":"and then it calls DefineMethodProperty","msgtype":"m.text"},"ts":1626501358654,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nzpuOAzSIsle9wSx6FVIWNnQ8MttwtHIh-UC8YUgnrs"},
{"content":{"body":"which calls it again","msgtype":"m.text"},"ts":1626501360751,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$01kDWnY2wglCTQxm_L4LR9MZxyDHFOEU7ymiiRg-gWg"},
{"content":{"body":"ah, just in the generator and async generator cases, yes?","msgtype":"m.text"},"ts":1626501467990,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hWEKy59hgujO7guIXV9Pue4Lttx0cGtefG2E0-CdN1o"},
{"content":{"body":"ye","msgtype":"m.text"},"ts":1626501541557,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$G_B7VhNs1SA4q-nEjck-QZXxL4svYCpGf2Wr8fNKQ8I"},
{"content":{"body":"why do generators and async generators have `.prototype`s anyway","format":"org.matrix.custom.html","formatted_body":"why do generators and async generators have <code>.prototype</code>s anyway","msgtype":"m.text"},"ts":1626501750390,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$6rxL0WipX7nn-s5woaPbiCvErOyxFji5gi6lpzZi7nc"},
{"content":{"body":"cuz they create instances","msgtype":"m.text"},"ts":1626501791240,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$OL5tNoTT3uc9beP2k8QvHsUZm0m6HJXgTajiVloLY3o"},
{"content":{"body":"i think there's a flow chart in the spec :P","msgtype":"m.text"},"ts":1626501806513,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$zZRsgCM3gM-DbBHDr50ztzJGyjCh2X9G3SkVxeGvDo4"},
{"content":{"body":"oh god I did not realize that that the instances returned by invoking a `function* f() {}` inherit from `f.prototype`","format":"org.matrix.custom.html","formatted_body":"oh god I did not realize that that the instances returned by invoking a <code>function* f() {}</code> inherit from <code>f.prototype</code>","msgtype":"m.text"},"ts":1626501932006,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HoAMDBhAUKPeAyGv1Ox7-G6f3djL5-JXB8yZqjuyZL8"},
{"content":{"body":"I wonder if anyone is using that for anything","msgtype":"m.text"},"ts":1626501938823,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TkeHQFTC8WqT4lXSr9VcL5G2eKu6OWMWiPHsIl5OQTE"},
{"content":{"body":"seems like kind of an odd thing to want","msgtype":"m.text"},"ts":1626501946981,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wvtexqcC8EZSHxX5dFtdqkiZPAsdh-8Jch81TZp49dw"},
{"content":{"body":"oh man private fields have so many early errors this is gonna take forever","msgtype":"m.text"},"ts":1626502087531,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$6eAOFWd7h3HIJKIerVFcBiuB_Wm9zKjpW2hojwu68r8"},
{"content":{"body":"fix for the SetFunctionName bug in https://github.com/tc39/ecma262/pull/2463","msgtype":"m.text"},"ts":1626502614593,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$g2GQbuc4Xi33Ciz7L7FY_3E13n4UQqEo4IVMGKmnQSA"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1626503223243,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ZGYIiDVPzq5oxTQpe7g3kYwgeetU5wniX8o3N4l-hRI"},
{"content":{"body":"why is it a syntax error to do `class { get #f() {} static set #f() {} }`","format":"org.matrix.custom.html","formatted_body":"why is it a syntax error to do <code>class { get #f() {} static set #f() {} }</code>","msgtype":"m.text"},"ts":1626503249726,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$KJ7FhS2vLTCviVE6Nq4uGsowap0DGd2pP2JIo3ptbWY"},
{"content":{"body":" * why is it a syntax error to do `class { get #f() {} static set #f(v) {} }`","format":"org.matrix.custom.html","formatted_body":" * why is it a syntax error to do <code>class { get #f() {} static set #f(v) {} }</code>","m.new_content":{"body":"why is it a syntax error to do `class { get #f() {} static set #f(v) {} }`","format":"org.matrix.custom.html","formatted_body":"why is it a syntax error to do <code>class { get #f() {} static set #f(v) {} }</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$KJ7FhS2vLTCviVE6Nq4uGsowap0DGd2pP2JIo3ptbWY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626503289790,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$EHFbIj8mMb-cnNMMqItIs_XepLGXd7aAEscWRbsMsfQ"},
{"content":{"body":"same reason it's a syntax error to do `(class { #f; static #f; })`, presumably","format":"org.matrix.custom.html","formatted_body":"same reason it's a syntax error to do <code>(class { #f; static #f; })</code>, presumably","msgtype":"m.text"},"ts":1626503341578,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$c5grBIsaxCUTPSIwQauRwWPIjJN7F8SHWtXDRwW96A4"},
{"content":{"body":"you can make a private name for use on instances or for use on the class, not the same name for both","msgtype":"m.text"},"ts":1626503362787,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NQzEuVN7KFnso26SHn3F5KzxXUWNKl44vfp0GHEwD94"},
{"content":{"body":"idk it seems well defined to me","msgtype":"m.text"},"ts":1626503521112,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$XgOmboBdFEe32FafschQuLzbxyEIQd2nHBwMqVqa1po"},
{"content":{"body":" * idk it seems it could be well defined to me","m.new_content":{"body":"idk it seems it could be well defined to me","msgtype":"m.text"},"m.relates_to":{"event_id":"$XgOmboBdFEe32FafschQuLzbxyEIQd2nHBwMqVqa1po","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626503538122,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$QmCA2d1vtXuIt59OqI4sXMroyam7UknMNrfRxHsseKI"},
{"content":{"body":"lotta things could be","msgtype":"m.text"},"ts":1626503622660,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nPZKX6gm5Uvr54vokHUSJ9SjDH3RDTCTMx-sl_Sn12E"},
{"content":{"body":"see previous discussion in at least https://github.com/tc39/proposal-static-class-features/issues/47","msgtype":"m.text"},"ts":1626503638861,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ERweyc534jG2UYjcEaGzErwwEB_iRTbDH206AE8NHhs"},
{"content":{"body":"also https://github.com/tc39/proposal-class-fields/issues/256#issuecomment-511213911","msgtype":"m.text"},"ts":1626503690246,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Rc5D7MMdJfm3k0gwwea-wxJl6obHLh_iNAySYcApEHA"},
{"content":{"body":"[[PrivateMethods]] and [[Fields]] are not initialized for normal functions","msgtype":"m.text"},"ts":1626504490288,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3KOyGNHP-bcPOf20UFgNNM_rU9Oab8rC-sOv4Tetqbk"},
{"content":{"body":"so calling InitializeInstanceFields fails there","msgtype":"m.text"},"ts":1626504500779,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$Xyy-Hf8f5Y5dnibfZbPSOXFUFdqN-H4MeiL3yNaya3I"},
{"content":{"body":"maybe OrdinaryFunctionCreate is a good place to set those to new empty lists?","msgtype":"m.text"},"ts":1626504554156,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ciFq0QCTxpYFTiVCGj1Rgkp3pHXqIKjRZI1O3m7lERY"},
{"content":{"body":"I think I'd prefer to either have [[ConstructorKind]] differentiate between `class`-based ctors and non-, or have InitializeInstanceElements guard on the existence of each slot before reading it","format":"org.matrix.custom.html","formatted_body":"I think I'd prefer to either have [[ConstructorKind]] differentiate between <code>class</code>-based ctors and non-, or have InitializeInstanceElements guard on the existence of each slot before reading it","msgtype":"m.text"},"ts":1626505547353,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NaZ1mLrNAMQESEMMHVDBvVUa6iWWkWOW2p5PFS87roU"},
{"content":{"body":"though, I guess we do say in table 33 that all ES functions have those fields","msgtype":"m.text"},"ts":1626505586680,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8yUFBHkRc53WVvFWAXuDYiOMFsjPw743ZFiGOetFLxI"},
{"content":{"body":"oh, or we could guard on [[IsClassConstructor]]","msgtype":"m.text"},"ts":1626505730544,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$pUJtAFBUmAcCuAN2EoPVRdEKb3ukN3z8RqoBJsA6F9Y"},
{"content":{"body":"but given that we do say every function has those two, probably having OrdinaryFunctionCreate initialize them to empty is correct, yeah","msgtype":"m.text"},"ts":1626505759581,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QcPRjxWXWs1StJZiOHPuMFhtzBXNVpkS_tfGVcXlJOI"},
{"content":{"body":"i don't think test262 has a test for `'use strict'; delete x` applying recursively, like `'use strict'; delete ((x))`","format":"org.matrix.custom.html","formatted_body":"i don't think test262 has a test for <code>'use strict'; delete x</code> applying recursively, like <code>'use strict'; delete ((x))</code>","msgtype":"m.text"},"ts":1626506799009,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ErS-PgRPMJZ4cPpRXiJeFNO36TJSfMPg5aFQeKA_QEs"},
{"content":{"body":"bakkot: \"the fact that the spec differentiates built-in and ecmascript function objects is dumb\" Why is that distinction relevant to 2462?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: &quot;the fact that the spec differentiates built-in and ecmascript function objects is dumb&quot; Why is that distinction relevant to 2462?","msgtype":"m.text"},"ts":1626527943259,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_SololfP0kvowOf69m98w6q84MMP6yExBGD7zf091TM"},
{"content":{"body":"> <@bakkot:matrix.org> oh god I did not realize that that the instances returned by invoking a `function* f() {}` inherit from `f.prototype`\n\nThis could be useful in the future --- when we have function decorators :) ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$HoAMDBhAUKPeAyGv1Ox7-G6f3djL5-JXB8yZqjuyZL8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>oh god I did not realize that that the instances returned by invoking a <code>function* f() {}</code> inherit from <code>f.prototype</code></blockquote></mx-reply>This could be useful in the future --- when we have function decorators :)","m.relates_to":{"m.in_reply_to":{"event_id":"$HoAMDBhAUKPeAyGv1Ox7-G6f3djL5-JXB8yZqjuyZL8"}},"msgtype":"m.text"},"ts":1626529271903,"senderName":"HE Shi-Jun","senderId":"@haxjs:matrix.org","id":"$gPoNsUWqWyPAr-I7UnCZJbTRjJlgzyihbYBgaquTtqA"},
{"content":{"body":"jmdyck: because InitializeInstanceElements was already invoked by the [[Construct]] method of ES functions, just not the [[Construct]] method of built-in functions","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: because InitializeInstanceElements was already invoked by the [[Construct]] method of ES functions, just not the [[Construct]] method of built-in functions","msgtype":"m.text"},"ts":1626534172822,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Cn4Q_wKe0WVVoDouO0mKNMmhxU7U4Hp8OovhHVyv478"},
{"content":{"body":"dang this early error for arguments is especially weird","msgtype":"m.text"},"ts":1626535122447,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$QzcMPAZ5bjK1INlDH-UzDBghln1G12eo15TFAfShPTo"},
{"content":{"body":"Hm. So for an ordinary built-in constructor, IIE is called from ordinary [[Construct]], but for exotic built-in constructor, exotic [[Construct]] doesn't/can't call IIE, so IIE must be called from the `_behaviour_` supplied to CreateBuiltinFunction?","format":"org.matrix.custom.html","formatted_body":"Hm. So for an ordinary built-in constructor, IIE is called from ordinary [[Construct]], but for exotic built-in constructor, exotic [[Construct]] doesn't/can't call IIE, so IIE must be called from the <code>_behaviour_</code> supplied to CreateBuiltinFunction?","msgtype":"m.text"},"ts":1626535437269,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$nisFal78NUM8jBX_Osn4ozKA2wyM5xpLOsDAo1FsOYE"},
{"content":{"body":"`class X { #y; foo() { eval('this.#y') } }`","format":"org.matrix.custom.html","formatted_body":"<code>class X { #y; foo() { eval('this.#y') } }</code>","msgtype":"m.text"},"ts":1626535550531,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ccMOjTx3tiBLxR4dmKJLigcaKj8ntl1o1qYLSsZdwjE"},
{"content":{"body":"how does the `#y` existing get piped into eval","format":"org.matrix.custom.html","formatted_body":"how does the <code>#y</code> existing get piped into eval","msgtype":"m.text"},"ts":1626535559129,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$FeGPPF6bfhd9C888ksYXV_vm_kUAP3BT7seIb9QQi24"},
{"content":{"body":"jmdyck: correct (for base constructors)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: correct (for base constructors)","msgtype":"m.text"},"ts":1626535588024,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$C44DCCRg8J4xeebQKbGxNndz4wDF34Ci1Wh42mqe6O4"},
{"content":{"body":"devsnek: EvalDeclarationInstantiation step 6/7","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: EvalDeclarationInstantiation step 6/7","msgtype":"m.text"},"ts":1626535757773,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fWPQ7q95-tvezdtyTWKIyL6IYiNgoC27R8j_w_gH_hI"},
{"content":{"body":"oh i mean","msgtype":"m.text"},"ts":1626535775849,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$35PC5IJczcQy-KU9MsXJHhxvpFRB_klsXz5QJYt5S24"},
{"content":{"body":"during parsing","msgtype":"m.text"},"ts":1626535777962,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$uWZrZmLsuawDwwD32hqyxY4ZO-r4tDyXQa8dPjG7Z0U"},
{"content":{"body":"the rule is not applied during parsing","msgtype":"m.text"},"ts":1626535806553,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qqwMwykpeOFkYrMQRkTS-XX7toJDS7zaznrfhHL2t50"},
{"content":{"body":"wdym","msgtype":"m.text"},"ts":1626535818966,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$zMJlulrCje7w9R3jDKA57r65tNZ-3x2uup10IIh8JD0"},
{"content":{"body":"see the last item in https://tc39.es/ecma262/multipage/ecmascript-language-scripts-and-modules.html#sec-scripts-static-semantics-early-errors","msgtype":"m.text"},"ts":1626535823023,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fSLrgVdn60m7vwBi22mlyXMIDIZVrJSBcyzzDR2TRIw"},
{"content":{"body":"man","msgtype":"m.text"},"ts":1626535834413,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$KsWvbnalXGq7yzAro6mRQx5O7rPhcIw8VbxRgb0B198"},
{"content":{"body":"ok so if eval, turn off private name validation","msgtype":"m.text"},"ts":1626535852748,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$o-7aK1idRsbJKIQbytyy211K9lTJDpZw1PbcnFNTitw"},
{"content":{"body":"well, that's how it's specified, yes","msgtype":"m.text"},"ts":1626535868497,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PPgp46UtXluZ7vivnTllmNUzIj1XxO1GKgeARyKaCNI"},
{"content":{"body":"same as for validation of `super` and `new.target`","format":"org.matrix.custom.html","formatted_body":"same as for validation of <code>super</code> and <code>new.target</code>","msgtype":"m.text"},"ts":1626535880902,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$j2Hhrgn38pivM18xoZc1LWPONfzyZz1lc2BjZT0WFv0"},
{"content":{"body":"in practice, you'd just find the names before parsing and provide them to the parser","msgtype":"m.text"},"ts":1626535905449,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$N7gTnBls8SohOX8pb3S5g4WFB1ZiOOKhBEVcU5JFTyo"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1626535927943,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$1hU1OufQKdhk-SwZnrI2q9jbmUEfWWbEDHbDmtcYbRs"},
{"content":{"body":"oh you mean like as an optimization to skip having to actually evaluate?","msgtype":"m.text"},"ts":1626535955797,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$UCEDd0qe2aPABljNXBVMkximqCPbUSsVsAfVE1_QKt8"},
{"content":{"body":"more as a matter of how parsers are implemented; they usually validate as they go, rather than after the fact","msgtype":"m.text"},"ts":1626536005024,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$VKRi90qAi2SEprAfdz_rGvW14HWpc3n0jBizWHmeGAg"},
{"content":{"body":"but either way works","msgtype":"m.text"},"ts":1626536009259,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9QkbOswUljn7nmkVHn2NNzvJi423ODwnP9W9Em05QCM"},
{"content":{"body":"I guess plausibly they'd keep a list of names that escape","msgtype":"m.text"},"ts":1626536017342,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Y-KVwk3MEA7cUVDJydbdfv6Lj8eW35a3hYqBFP0VhBw"},
{"content":{"body":"and return that, and do the validation just after parsing by comparing that list to the list of names available in the surrounding context","msgtype":"m.text"},"ts":1626536040327,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$opw14W77iWlYE3dZgWMU_N8n7RtsGvaMfImvMNCW5Q0"},
{"content":{"body":"when i press alt+1, to switch to my first browser tab","msgtype":"m.text"},"ts":1626536051294,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$c_LZfNkyKlLrO_nblu7v3HeHjVyW0iddaiEjPIYCsfs"},
{"content":{"body":"bakkot: So then if an implementation chooses to implement a built-in constructor as an ordinary function constructor, it has to 'ignore' the call to IIE in `_behaviour_`, because the ordinary [[Construct]] will call it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: So then if an implementation chooses to implement a built-in constructor as an ordinary function constructor, it has to 'ignore' the call to IIE in <code>_behaviour_</code>, because the ordinary [[Construct]] will call it.","msgtype":"m.text"},"ts":1626536058371,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$66hfj896uRBcM9RVAxMsE3q8VHJCcMETkz5Eh62mT5s"},
{"content":{"body":"the multipage spec navigates to #sec-ecmascript-function-objects","msgtype":"m.text"},"ts":1626536059643,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$3u3o8_xU0I3nbGQppGXmXw1Ezb1pIv8pBljyt34qZds"},
{"content":{"body":"jmdyck: I suppose, yes","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: I suppose, yes","msgtype":"m.text"},"ts":1626536168429,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bK7FfFCVg7xSo9c3Hmau3T-zDMkpMs4RyWhiv-NYKyM"},
{"content":{"body":"at the very least, if we keep the distinction between the two, we really need to remove the bit that says you can implement built-in functions as ES functions","msgtype":"m.text"},"ts":1626536211781,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$L85XFeDlfjkxyp_EjdWrG5fdkQTSQS0QXGJzYf-rUtk"},
{"content":{"body":"it's already allowed by the as-if rule, the spec shouldn't have to care","msgtype":"m.text"},"ts":1626536226895,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X206ttmX_PCaBXxWOPNjHewjroR1cCAhLzzMudhnGcs"},
{"content":{"body":"devsnek: it's navigating to your first pin, I think","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: it's navigating to your first pin, I think","msgtype":"m.text"},"ts":1626536252079,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$XVJIK9OUoYuyozS_SuTUwzqTZVG40OT20u-hmnJwi-A"},
{"content":{"body":"multipage or not","msgtype":"m.text"},"ts":1626536254373,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hMp6LwAqAw7xs1FBOJF2FFdLzY1d9N9k_X6cel8CDT8"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1626536277448,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$nIhQuGPnA02C-CNqziJFlgbnBb6UQiFuu_RYHisyUms"},
{"content":{"body":"i didn't realized that was pinned","msgtype":"m.text"},"ts":1626536281784,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$raTbSe4hJ3EpejcK-Xp-nPB23UDZfXxCyyhCNtPluwY"},
{"content":{"body":"is that just firefox not capturing its own tab navigation event ","msgtype":"m.text"},"ts":1626536293254,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$dDdoySJJ5uX3m5z27MiZVZg5ShhtX242h_vr1wGPeOs"},
{"content":{"body":"presumably","msgtype":"m.text"},"ts":1626536298527,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rxskSd1dGVZq7sqsi-DsTW_HyyT0-Ya53R_YpD88cjY"},
{"content":{"body":"😔","msgtype":"m.text"},"ts":1626536304678,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$rS5qG5aPqCBYIpxqNtYnrau6FkjbQ72Danru-dPd4kk"},
{"content":{"body":"so with this set","msgtype":"m.text"},"ts":1626536375055,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$iJ1g2bcJRa9IOkTQT1_i2twSbm2zL3T594b1nPMkWvE"},
{"content":{"body":" * so with this eval rule","m.new_content":{"body":"so with this eval rule","msgtype":"m.text"},"m.relates_to":{"event_id":"$iJ1g2bcJRa9IOkTQT1_i2twSbm2zL3T594b1nPMkWvE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1626536379584,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$HWDUz4UUVt78BMCng5Vy4tO3eRjRZKfyb0P4n6QCx74"},
{"content":{"body":"what handles the private field not existing at runtime","msgtype":"m.text"},"ts":1626536387953,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$l4Z6oPM7xl4xA3G7Kg33R-dPFDoJGXbcfE-88smM5wY"},
{"content":{"body":"EvalDeclarationInstantiation step 6/7","msgtype":"m.text"},"ts":1626536428110,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-t9hT_46bWgaKFs3GcpIdyX2ECGdl_RJVIuO2x6WVNk"},
{"content":{"body":"bakkot: Isn't it observable whether a built-in is ordinary or exotic? ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: Isn't it observable whether a built-in is ordinary or exotic?","msgtype":"m.text"},"ts":1626536444037,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$EB1oLHle59YWF_vTVjYAttPkeTEUo5Oawx_Vjioq7vA"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1626536452369,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$wpruD2QZLvN5t8izIYRpYCRnNC3AlCGv7eqgqKpXmdQ"},
{"content":{"body":"jmdyck: uhhh I hope not","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: uhhh I hope not","msgtype":"m.text"},"ts":1626536459329,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TbGqb-tN25Y53Kpxtz_iuqQ-kKjKvZNvewCaEa85Iw4"},
{"content":{"body":"ok, maybe i'm misremembering","msgtype":"m.text"},"ts":1626536472950,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$sQQhsL0IHGJDX7LBihIJWygXeKJiZpe5MNeTc9e6oec"},
{"content":{"body":"It's entirely possible, there's some weird corners here","msgtype":"m.text"},"ts":1626536486901,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$LfVrqORA1ZA_hgwHLZ4GT5Yq1yITH-eL9aYkBwR6y5w"},
{"content":{"body":"but I hope not","msgtype":"m.text"},"ts":1626536488710,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$x1US8C4t1BgUWXGmW0DolNA2oe5OpkU9AkC-Ik8Cb5M"},
{"content":{"body":"i think it used to be","msgtype":"m.text"},"ts":1626537087511,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$-MvB7dt5aGfiHnQFvbCiTNW3L_uF7hb1bAcSZBHd7DI"},
{"content":{"body":"but someone changed that","msgtype":"m.text"},"ts":1626537096258,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$a1Y9kbRIoxonjojcjNMV8Q_DBjYdxNb1W8No93AhHDg"},
{"content":{"body":"i recall a presentation discussing if builtins should appear to have been strict or not","msgtype":"m.text"},"ts":1626537120988,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$99NVSFMotY8-Hdhjgpm0lETyJmVemy2MQTLiDxmuE1Y"},
{"content":{"body":"if a built-in is ordinary, it's required to be strict","msgtype":"m.text"},"ts":1626537163580,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$ZX0JNuk0_hjDJr-x60n42Rg4rocXl-tUPbzwlaxYH_c"},
{"content":{"body":"But couldn't an implementation say, it's exotic, but it happens to present like a non-strict ordinary?","msgtype":"m.text"},"ts":1626537284941,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$xyY0XDy_4rknPV6QNjHnhTPjZfLMqE1sjT8i00_2vIs"},
{"content":{"body":"What's the intended normative  effect of requiring ordinary built-ins to be strict?","msgtype":"m.text"},"ts":1626537585124,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$DdfzGOKLNB57k4pK2saU6koH7WimpBLo7MOQNaIbJaQ"},
{"content":{"body":"under 200 tests failing :O","msgtype":"m.text"},"ts":1626537658325,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$XKl_1zxarFe9o1aoR8GJQWfUmD7KnMm5vPEKlaDeNh8"},
{"content":{"body":"Presumably we don't have tests for this, because the test doesn't know how the implementation has implemented a given built-in.","msgtype":"m.text"},"ts":1626537676160,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$jOIg3lVGjhdYrYO7BTArlCt7lhCB8kJImwYQfHRrDds"},
{"content":{"body":"are there properties a function can't have in strict mode","msgtype":"m.text"},"ts":1626537754583,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$Uctafb-1RZSQvuq1GhXdJ0VW9PRqLUAo3XAhfoNU8eY"},
{"content":{"body":"like caller or callee or something weird like that","msgtype":"m.text"},"ts":1626537760292,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$Gb5NS7E7imo9hXfF2WX5Cad_gUBapfN1R7a6Dv6O8Cc"},
{"content":{"body":"Annex C says \"An implementation may not extend, beyond that defined in this specification, the meanings within strict functions of properties named \"caller\" or \"arguments\" of function instances.\"","msgtype":"m.text"},"ts":1626538190582,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$EeIt9l4Sdt_QVdpvzqjcaA6XqHutAuK4vma-kSVTC88"},
{"content":{"body":"yeah, but \"Built-in functions ... also must not be created with such own properties\"","msgtype":"m.text"},"ts":1626538231689,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gbuNz88ltfLvwiuXzIcEWgqsEEJ6pbIZ18rTYljDeYQ"},
{"content":{"body":"IIRC the strictness thing was to do with whether `this` was undefined or the global","format":"org.matrix.custom.html","formatted_body":"IIRC the strictness thing was to do with whether <code>this</code> was undefined or the global","msgtype":"m.text"},"ts":1626538250885,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zkqOs9ryxsQ4NTgKu96WHsj-LX07UGgoP6x-jVVz9wQ"},
{"content":{"body":"I will try to track it down","msgtype":"m.text"},"ts":1626538267874,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$J5oZSU7BRylKa-q8sju4ZU0ZcR5oWSAWi1_rEfjBnns"},
{"content":{"body":"It looks like the sentence \"Built-in functions that are ECMAScript function objects must be strict...\" was added in wd20 of ES6.","msgtype":"m.text"},"ts":1626538467692,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$7TwCHxSpXvoXHIQw_6IeblEfFKQ6asDFDIEePFG_wEI"},
{"content":{"body":"(Sept/Oct 2013)","msgtype":"m.text"},"ts":1626538542368,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$dtox6McBE62UoyRguhlBZk1j7wPnvc9nyKg5D0LUR88"},
{"content":{"body":"I am having no lucking finding it","msgtype":"m.text"},"ts":1626538785947,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$fOU87SC3F-4izA7EPPxd5kVCCeBm4u4FKpDKlhFtqqo"},
{"content":{"body":"but the `this` thing is at least plausible","format":"org.matrix.custom.html","formatted_body":"but the <code>this</code> thing is at least plausible","msgtype":"m.text"},"ts":1626538790912,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sab3dLfz3blOtQIDOpVAY6q550qIpWlVxMmzLUYHiq4"},
{"content":{"body":"a lot of builtins operate on their `this`, and it makes sense to say that if you pull those off their containing object and invoke them directly they should not be operating on the global","format":"org.matrix.custom.html","formatted_body":"a lot of builtins operate on their <code>this</code>, and it makes sense to say that if you pull those off their containing object and invoke them directly they should not be operating on the global","msgtype":"m.text"},"ts":1626538818220,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NGBwqWMfREVxht1feIYwcCYpzXmaIgaUR26HnbsqSKA"},
{"content":{"body":"The change-notes for rev 20 say \"Elaborated in 9.3 that built-in functions can be implemented as either ECMAScript functions or as implementation defined exotic functions.\" but they don't mention the strictness thing. It might be in one of the many bugs that rev20 fixed.","msgtype":"m.text"},"ts":1626538941485,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$qehhZA6-htVLc1OA2mrSJ_XoErxeh9lxTSPShfyL4k4"},
{"content":{"body":"That's... a familiar topic","msgtype":"m.text"},"ts":1626539025884,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$utYtKidNeCgi6vBUnBot1c9Jue6SJ54vB8pw_rXHrs0"},
{"content":{"body":"I presented on Feb 2020 about to make all implementation defined functions in strict mode","msgtype":"m.text"},"ts":1626539305307,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8lzklh0vLBZBcwfqQyWkbB8fY48s-HAB_pmhh73OPuI"},
{"content":{"body":"For what normative effect?","msgtype":"m.text"},"ts":1626539400560,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$dBnrk2K6B7_OeoQvgh1X8Xl3WWrDffuq1Yxl69nJgSI"},
{"content":{"body":"No progress since then. Maybe I should open a PR","msgtype":"m.text"},"ts":1626539428338,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$m51JCkmby2Lo1at0RH4exx8HiCw2wNs1cawnLqEqXi8"},
{"content":{"body":"https://github.com/tc39/notes/blob/master/meetings/2020-02/february-5.md#legacy-reflection-features-for-functions-in-javascript-for-stage-1","msgtype":"m.text"},"ts":1626539441747,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mqRx1nFO-l-XXNcunEHytUCGcFnoRnV9WXHy4aClgbI"},
{"content":{"body":"No, I mean, what would have been the normative effect?","msgtype":"m.text"},"ts":1626539454215,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$nQ846m9-nMiIotXrYXLP-WMqloPMv_aAZ-inztM2hvs"},
{"content":{"body":"Back to time that was presented, Chakra (Classic edge) leaks native function (according to spec, strict function are not allowed to be leaked) in loose mode. Is that a normative effect? ","msgtype":"m.text"},"ts":1626539719586,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Vt1xBNOyD-Vrj-0_RmP31Y3hpjzj5PuU4xtR1xgBaBQ"},
{"content":{"body":"What does \"leak\" mean?","msgtype":"m.text"},"ts":1626543730794,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$z11g4qb7DqBAPxO3dnNr9qZ__DgaIdYM9UK7_ROuurs"}
]