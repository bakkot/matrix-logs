[
{"content":{"body":"hi again! State of JS survey guy here :) I just wanted to say I'm putting the finishing touches to this year's report, it should be available very soon","msgtype":"m.text"},"ts":1644802466444,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$rAPbfFcizk3KdJKOJ23NpqzntlW1Ay7i1YEC8K9yag8"},
{"content":{"body":"maybe once it's out we can do the call we discussed so you guys can give me some feedback for next year's edition?","msgtype":"m.text"},"ts":1644802490698,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$W4KY0Ia7Bs0t1Cp5MvdstftXOHXXcwY_cN1koedSclQ"},
{"content":{"body":"here's an early preview (still working on the \"JS\" logo, that's why it says \"CSS\"): https://2021.stateofjs.com/en-US/","msgtype":"m.text"},"ts":1644803897229,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$kmoMfdsORYlqXqZCeGParZNzfrnVyi6rrsxXkKNCM6Q"},
{"content":{"body":"password: `js`","format":"org.matrix.custom.html","formatted_body":"password: <code>js</code>","msgtype":"m.text"},"ts":1644803900209,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$beFfQ908XJeVhrsSrddDnkarcEsi4fxvjQkLN97VsCo"},
{"content":{"body":"looking at https://github.com/mdn/content/issues/12643","msgtype":"m.text","org.matrix.msc1767.text":"looking at https://github.com/mdn/content/issues/12643"},"ts":1644827642201,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$m1QbB_0GrabB40UJMS5aB1Wq73teQ09DvryfGLdDP90"},
{"content":{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"ts":1644827736340,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20"},
{"content":{"body":"…but it doesn’t change `foundBananas`; `foundBananas.quantity` is still `0`. Why?","format":"org.matrix.custom.html","formatted_body":"…but it doesn’t change <code>foundBananas</code>; <code>foundBananas.quantity</code> is still <code>0</code>. Why?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"…but it doesn’t change `foundBananas`; `foundBananas.quantity` is still `0`. Why?","mimetype":"text/plain"},{"body":"…but it doesn’t change <code>foundBananas</code>; <code>foundBananas.quantity</code> is still <code>0</code>. Why?","mimetype":"text/html"}]},"ts":1644827780050,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$5HDbxd9SF-D_DOqkZBrQCXHqmCQHxFutWRL-fcE75q4"},
{"content":{"body":" * in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":" * in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","m.new_content":{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":" * in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"ts":1644827843024,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$74ophITJwWEvmCk6sbFIQH26-M9SoJZk4Y6wKNMfpUc"},
{"content":{"body":"Returning a copy would be pretty useless in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","msgtype":"m.text","org.matrix.msc1767.text":"Returning a copy would be pretty useless in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array."},"ts":1644828094145,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$peoolVuMp3VINw2kvQWj6CTptHKAkWnp1HomUXhv5KE"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`\n\n`const newCopy = { ...foundBananas }` indeed does a shallow copy. The code is practically the same as `const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }`. You can see in the latter case where changing the value would not change the original.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code></blockquote></mx-reply><code>const newCopy = { ...foundBananas }</code> indeed does a shallow copy. The code is practically the same as <code>const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }</code>. You can see in the latter case where changing the value would not change the original.","m.relates_to":{"m.in_reply_to":{"event_id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@sideshowbarker:mozilla.org> in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`\n\n`const newCopy = { ...foundBananas }` indeed does a shallow copy. The code is practically the same as `const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }`. You can see in the latter case where changing the value would not change the original.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code></blockquote></mx-reply><code>const newCopy = { ...foundBananas }</code> indeed does a shallow copy. The code is practically the same as <code>const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }</code>. You can see in the latter case where changing the value would not change the original.","mimetype":"text/html"}]},"ts":1644828264140,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$PjMq_qBJDw_zRbdDkanGFzqRAsET485V-h7sMRJyUEE"},
{"content":{"body":" * For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","format":"org.matrix.custom.html","formatted_body":" * For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","m.new_content":{"body":"For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","format":"org.matrix.custom.html","formatted_body":"For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/plain"},{"body":"For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$peoolVuMp3VINw2kvQWj6CTptHKAkWnp1HomUXhv5KE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/plain"},{"body":" * For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/html"}]},"ts":1644828332139,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$stFEzXjAHlt46PsKRdj3UwOmNKO_RrfNjzkW3x7eLPQ"},
{"content":{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`","format":"org.matrix.custom.html","formatted_body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`","mimetype":"text/plain"},{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code>","mimetype":"text/html"}]},"ts":1644828679195,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA"},
{"content":{"body":"clearly I’m just looking at it wrong","msgtype":"m.text","org.matrix.msc1767.text":"clearly I’m just looking at it wrong"},"ts":1644828693917,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$huUzXRHdZXKatWw7iPWjv0IqRNlDXkCGXELuCBe8ZY8"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`\n\nIs it different?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code></blockquote></mx-reply>Is it different?","m.relates_to":{"m.in_reply_to":{"event_id":"$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@sideshowbarker:mozilla.org> so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`\n\nIs it different?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code></blockquote></mx-reply>Is it different?","mimetype":"text/html"}]},"ts":1644828803612,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$2s3APqwNiQzKYhv-PsJ5N2IuppahwUGVpxMSYJdtw-8"},
{"content":{"body":"```js\nconst newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644828874217,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$RTGa5E_kqzw91G6DVBClXeeb9ue7qNTNuB4ukXCoi8s"},
{"content":{"body":"For JS help, there are better places.","msgtype":"m.text","org.matrix.msc1767.text":"For JS help, there are better places."},"ts":1644829137675,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$__PjRxlbekk6uSXmFzJOCrv97YtRPmHihjmOCO8ctyY"},
{"content":{"body":"(The deleted conversation was just generic JS help)","msgtype":"m.text","org.matrix.msc1767.text":"(The deleted conversation was just generic JS help)"},"ts":1644829252508,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$K6pul7bNBoBz464IjzsN0Tg4ArRd1DZwfjS6YhclpzE"},
{"content":{"body":" * (The deleted conversation was just fixing a misunderstanding on JS behavior)","m.new_content":{"body":"(The deleted conversation was just fixing a misunderstanding on JS behavior)","msgtype":"m.text","org.matrix.msc1767.text":"(The deleted conversation was just fixing a misunderstanding on JS behavior)"},"m.relates_to":{"event_id":"$K6pul7bNBoBz464IjzsN0Tg4ArRd1DZwfjS6YhclpzE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * (The deleted conversation was just fixing a misunderstanding on JS behavior)"},"ts":1644833076670,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$Bt8qU2MBXtgLg3g94I8vc2vEwR6QBjoOFC-mtxQH6wg"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> What’s the distinction between a list and sequence? Is that distinction clear in most languages, or is it more distinct in C#?\n\nthink of a Sequence as any abstract iterable, while a List has a defined memory layout","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24jT8h2esnAXSwUPIxK0bZOTqvH_8_JYhEaeGHitz3lL8\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br><blockquote>\n<p>Is there anything different about lists than sequences which makes it better on lists?</p>\n</blockquote>\n<p>What’s the distinction between a list and sequence? Is that distinction clear in most languages, or is it more distinct in C#?</p>\n</blockquote></mx-reply>think of a Sequence as any abstract iterable, while a List has a defined memory layout","m.relates_to":{"m.in_reply_to":{"event_id":"$jT8h2esnAXSwUPIxK0bZOTqvH_8_JYhEaeGHitz3lL8"}},"msgtype":"m.text"},"ts":1644835237029,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$uH0PdA1cc_baXKXG-eKAt_Yh_IxhLOokqUjk5mat8Lc"}
]