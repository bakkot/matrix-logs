[
{"content":{"body":"hi again! State of JS survey guy here :) I just wanted to say I'm putting the finishing touches to this year's report, it should be available very soon","msgtype":"m.text"},"ts":1644802466444,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$rAPbfFcizk3KdJKOJ23NpqzntlW1Ay7i1YEC8K9yag8"},
{"content":{"body":"maybe once it's out we can do the call we discussed so you guys can give me some feedback for next year's edition?","msgtype":"m.text"},"ts":1644802490698,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$W4KY0Ia7Bs0t1Cp5MvdstftXOHXXcwY_cN1koedSclQ"},
{"content":{"body":"here's an early preview (still working on the \"JS\" logo, that's why it says \"CSS\"): https://2021.stateofjs.com/en-US/","msgtype":"m.text"},"ts":1644803897229,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$kmoMfdsORYlqXqZCeGParZNzfrnVyi6rrsxXkKNCM6Q"},
{"content":{"body":"password: `js`","format":"org.matrix.custom.html","formatted_body":"password: <code>js</code>","msgtype":"m.text"},"ts":1644803900209,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$beFfQ908XJeVhrsSrddDnkarcEsi4fxvjQkLN97VsCo"},
{"content":{"body":"looking at https://github.com/mdn/content/issues/12643","msgtype":"m.text","org.matrix.msc1767.text":"looking at https://github.com/mdn/content/issues/12643"},"ts":1644827642201,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$m1QbB_0GrabB40UJMS5aB1Wq73teQ09DvryfGLdDP90"},
{"content":{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"ts":1644827736340,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20"},
{"content":{"body":"…but it doesn’t change `foundBananas`; `foundBananas.quantity` is still `0`. Why?","format":"org.matrix.custom.html","formatted_body":"…but it doesn’t change <code>foundBananas</code>; <code>foundBananas.quantity</code> is still <code>0</code>. Why?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"…but it doesn’t change `foundBananas`; `foundBananas.quantity` is still `0`. Why?","mimetype":"text/plain"},{"body":"…but it doesn’t change <code>foundBananas</code>; <code>foundBananas.quantity</code> is still <code>0</code>. Why?","mimetype":"text/html"}]},"ts":1644827780050,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$5HDbxd9SF-D_DOqkZBrQCXHqmCQHxFutWRL-fcE75q4"},
{"content":{"body":" * in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":" * in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","m.new_content":{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","format":"org.matrix.custom.html","formatted_body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":"in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`","mimetype":"text/plain"},{"body":" * in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code>","mimetype":"text/html"}]},"ts":1644827843024,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$74ophITJwWEvmCk6sbFIQH26-M9SoJZk4Y6wKNMfpUc"},
{"content":{"body":"Returning a copy would be pretty useless in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","msgtype":"m.text","org.matrix.msc1767.text":"Returning a copy would be pretty useless in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array."},"ts":1644828094145,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$peoolVuMp3VINw2kvQWj6CTptHKAkWnp1HomUXhv5KE"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`\n\n`const newCopy = { ...foundBananas }` indeed does a shallow copy. The code is practically the same as `const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }`. You can see in the latter case where changing the value would not change the original.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code></blockquote></mx-reply><code>const newCopy = { ...foundBananas }</code> indeed does a shallow copy. The code is practically the same as <code>const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }</code>. You can see in the latter case where changing the value would not change the original.","m.relates_to":{"m.in_reply_to":{"event_id":"$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@sideshowbarker:mozilla.org> in the code in that issue description, I’d have expected `const newCopy = { ...foundBananas }` does a shallow copy  — and so, that `newCopy.quantity = 30` would also change the `quantity` property in `foundBananas`\n\n`const newCopy = { ...foundBananas }` indeed does a shallow copy. The code is practically the same as `const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }`. You can see in the latter case where changing the value would not change the original.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$xcwxOtmAH5bpA5UBjuhMIaA9S8N4x17fqz4gQtA2K20?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>in the code in that issue description, I’d have expected <code>const newCopy = { ...foundBananas }</code> does a shallow copy  — and so, that <code>newCopy.quantity = 30</code> would also change the <code>quantity</code> property in <code>foundBananas</code></blockquote></mx-reply><code>const newCopy = { ...foundBananas }</code> indeed does a shallow copy. The code is practically the same as <code>const newCopy = { name: foundBananas.name, quantity: foundBananas.quantity, }</code>. You can see in the latter case where changing the value would not change the original.","mimetype":"text/html"}]},"ts":1644828264140,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$PjMq_qBJDw_zRbdDkanGFzqRAsET485V-h7sMRJyUEE"},
{"content":{"body":" * For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","format":"org.matrix.custom.html","formatted_body":" * For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","m.new_content":{"body":"For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","format":"org.matrix.custom.html","formatted_body":"For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/plain"},{"body":"For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$peoolVuMp3VINw2kvQWj6CTptHKAkWnp1HomUXhv5KE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * For original bug, returning a copy would be pretty useless for `find` in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/plain"},{"body":" * For original bug, returning a copy would be pretty useless for <code>find</code> in most cases when I think about it. That way you wouldn't ever be able to use find to modify an entry in the original array.","mimetype":"text/html"}]},"ts":1644828332139,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$stFEzXjAHlt46PsKRdj3UwOmNKO_RrfNjzkW3x7eLPQ"},
{"content":{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`","format":"org.matrix.custom.html","formatted_body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`","mimetype":"text/plain"},{"body":"so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code>","mimetype":"text/html"}]},"ts":1644828679195,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA"},
{"content":{"body":"clearly I’m just looking at it wrong","msgtype":"m.text","org.matrix.msc1767.text":"clearly I’m just looking at it wrong"},"ts":1644828693917,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$huUzXRHdZXKatWw7iPWjv0IqRNlDXkCGXELuCBe8ZY8"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`\n\nIs it different?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code></blockquote></mx-reply>Is it different?","m.relates_to":{"m.in_reply_to":{"event_id":"$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@sideshowbarker:mozilla.org> so for being daft, but I guess I still don’t understand how using spread syntax here is different from `Object.assign()`\n\nIs it different?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YoX0kHOw-g8tmgQYIdrzyQcbpOt1_ZZi8iOmbSvnkLA?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>so for being daft, but I guess I still don’t understand how using spread syntax here is different from <code>Object.assign()</code></blockquote></mx-reply>Is it different?","mimetype":"text/html"}]},"ts":1644828803612,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$2s3APqwNiQzKYhv-PsJ5N2IuppahwUGVpxMSYJdtw-8"},
{"content":{"body":"```js\nconst newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code class=\"language-js\">const newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```js\nconst newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n```","mimetype":"text/plain"},{"body":"<pre><code class=\"language-js\">const newCopy = Object.assign(foundBananas);\nnewCopy.quantity = 30;\nconsole.log(foundBananas.quantity);\n// 30\n</code></pre>\n","mimetype":"text/html"}]},"ts":1644828874217,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$RTGa5E_kqzw91G6DVBClXeeb9ue7qNTNuB4ukXCoi8s"},
{"content":{"body":"For JS help, there are better places.","msgtype":"m.text","org.matrix.msc1767.text":"For JS help, there are better places."},"ts":1644829137675,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$__PjRxlbekk6uSXmFzJOCrv97YtRPmHihjmOCO8ctyY"},
{"content":{"body":"(The deleted conversation was just generic JS help)","msgtype":"m.text","org.matrix.msc1767.text":"(The deleted conversation was just generic JS help)"},"ts":1644829252508,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$K6pul7bNBoBz464IjzsN0Tg4ArRd1DZwfjS6YhclpzE"},
{"content":{"body":" * (The deleted conversation was just fixing a misunderstanding on JS behavior)","m.new_content":{"body":"(The deleted conversation was just fixing a misunderstanding on JS behavior)","msgtype":"m.text","org.matrix.msc1767.text":"(The deleted conversation was just fixing a misunderstanding on JS behavior)"},"m.relates_to":{"event_id":"$K6pul7bNBoBz464IjzsN0Tg4ArRd1DZwfjS6YhclpzE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * (The deleted conversation was just fixing a misunderstanding on JS behavior)"},"ts":1644833076670,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$Bt8qU2MBXtgLg3g94I8vc2vEwR6QBjoOFC-mtxQH6wg"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> What’s the distinction between a list and sequence? Is that distinction clear in most languages, or is it more distinct in C#?\n\nthink of a Sequence as any abstract iterable, while a List has a defined memory layout","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24jT8h2esnAXSwUPIxK0bZOTqvH_8_JYhEaeGHitz3lL8\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br><blockquote>\n<p>Is there anything different about lists than sequences which makes it better on lists?</p>\n</blockquote>\n<p>What’s the distinction between a list and sequence? Is that distinction clear in most languages, or is it more distinct in C#?</p>\n</blockquote></mx-reply>think of a Sequence as any abstract iterable, while a List has a defined memory layout","m.relates_to":{"m.in_reply_to":{"event_id":"$jT8h2esnAXSwUPIxK0bZOTqvH_8_JYhEaeGHitz3lL8"}},"msgtype":"m.text"},"ts":1644835237029,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$uH0PdA1cc_baXKXG-eKAt_Yh_IxhLOokqUjk5mat8Lc"},
{"content":{"body":"That would seem to suggest that a List is a subclass of an (abstract) Sequence — but the _“Is there anything different about lists than sequences which makes it better on lists?”_ language that Eric Lippert uses in https://ericlippert.com/2009/05/18/foreach-vs-foreach/ seems to imply that they’re somehow two more-distinct things (in C#, I guess). But maybe I’m reading too much into it.","format":"org.matrix.custom.html","formatted_body":"That would seem to suggest that a List is a subclass of an (abstract) Sequence — but the <em>“Is there anything different about lists than sequences which makes it better on lists?”</em> language that Eric Lippert uses in https://ericlippert.com/2009/05/18/foreach-vs-foreach/ seems to imply that they’re somehow two more-distinct things (in C#, I guess). But maybe I’m reading too much into it.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That would seem to suggest that a List is a subclass of an (abstract) Sequence — but the _“Is there anything different about lists than sequences which makes it better on lists?”_ language that Eric Lippert uses in https://ericlippert.com/2009/05/18/foreach-vs-foreach/ seems to imply that they’re somehow two more-distinct things (in C#, I guess). But maybe I’m reading too much into it.","mimetype":"text/plain"},{"body":"That would seem to suggest that a List is a subclass of an (abstract) Sequence — but the <em>“Is there anything different about lists than sequences which makes it better on lists?”</em> language that Eric Lippert uses in https://ericlippert.com/2009/05/18/foreach-vs-foreach/ seems to imply that they’re somehow two more-distinct things (in C#, I guess). But maybe I’m reading too much into it.","mimetype":"text/html"}]},"ts":1644837276767,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Lvwn8tSJ8qTnFizgBnH5qWqGCDbIyne9Y1c1Su3bw2k"},
{"content":{"body":"When I see “sequence” for me what comes to mind is C++, where there’s no Sequence as such in the language — nothing formally called that — but just the term “sequence” is used in C++ documentation to distinguish the `vector`/`array`/`list` containers from the associative containers.","format":"org.matrix.custom.html","formatted_body":"When I see “sequence” for me what comes to mind is C++, where there’s no Sequence as such in the language — nothing formally called that — but just the term “sequence” is used in C++ documentation to distinguish the <code>vector</code>/<code>array</code>/<code>list</code> containers from the associative containers.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"When I see “sequence” for me what comes to mind is C++, where there’s no Sequence as such in the language — nothing formally called that — but just the term “sequence” is used in C++ documentation to distinguish the `vector`/`array`/`list` containers from the associative containers.","mimetype":"text/plain"},{"body":"When I see “sequence” for me what comes to mind is C++, where there’s no Sequence as such in the language — nothing formally called that — but just the term “sequence” is used in C++ documentation to distinguish the <code>vector</code>/<code>array</code>/<code>list</code> containers from the associative containers.","mimetype":"text/html"}]},"ts":1644837461275,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$l_qJUWg2qgLaxmks3mdMKmRqVqKuF95veZazyaKM9lY"},
{"content":{"body":"And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things.","msgtype":"m.text","org.matrix.msc1767.text":"And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things."},"ts":1644837570657,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$gFRQccKYEGCjZAPF54c5i33ZPxnWuoMmsoRPCme1kHI"},
{"content":{"body":" * And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things.","m.new_content":{"body":"And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things.","msgtype":"m.text","org.matrix.msc1767.text":"And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things."},"m.relates_to":{"event_id":"$gFRQccKYEGCjZAPF54c5i33ZPxnWuoMmsoRPCme1kHI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * And whereas in documentation for Java and Python (the main other languages I’m familiar with), there’s no set of things in the language that are typically referred to as “sequence” things."},"ts":1644837580764,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$mdXXocHGvqIGqm6OaO_SHKtStm_G4zfiPp0BtLIcQag"},
{"content":{"body":"Anyway, I suppose this is probably not very on-topic here. If so, apologies for the noise.","msgtype":"m.text","org.matrix.msc1767.text":"Anyway, I suppose this is probably not very on-topic here. If so, apologies for the noise."},"ts":1644837643252,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$2z7Jr2DpvubDRZMGylEhSI1LEZSZesEYp2IF9TNz_xM"},
{"content":{"body":"is there any discussion about weak import? 🤔","msgtype":"m.text","org.matrix.msc1767.text":"is there any discussion about weak import? 🤔"},"ts":1644844302013,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mZo-ucP2_ze0Y3FfJwBjAVKWMJKSByXhAJ_yKyyCnSk"},
{"content":{"body":"> <@jackworks:matrix.org> is there any discussion about weak import? 🤔\n\n * --await-- import(); ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$mZo-ucP2_ze0Y3FfJwBjAVKWMJKSByXhAJ_yKyyCnSk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>is there any discussion about weak import? 🤔</blockquote></mx-reply> * --await-- import(); ?","m.new_content":{"body":"--await-- import(); ?","format":"org.matrix.custom.html","formatted_body":"--await-- import(); ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"--await-- import(); ?","mimetype":"text/plain"},{"body":"--await-- import(); ?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$riLNLxOAwnJ2zqSiDYmo10KgEpueCgLTv6hYGT7ThlA","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> is there any discussion about weak import? 🤔\n\n * --await-- import(); ?","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$mZo-ucP2_ze0Y3FfJwBjAVKWMJKSByXhAJ_yKyyCnSk?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>is there any discussion about weak import? 🤔</blockquote></mx-reply> * --await-- import(); ?","mimetype":"text/html"}]},"ts":1644844687098,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$jKQPtGn_RDOZAQZtElUldB90JTTG1BtHhkLOgLwKLqo"},
{"content":{"body":"sideshowbarker: The documentation for Python does have things referred to as \"sequences\": https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: The documentation for Python does have things referred to as &quot;sequences&quot;: https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sideshowbarker: The documentation for Python does have things referred to as \"sequences\": https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">sideshowbarker</a>: The documentation for Python does have things referred to as &quot;sequences&quot;: https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy","mimetype":"text/html"}]},"ts":1644844809946,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$j77VIIghDXR-7d9eQ963HePdwMxYaR_-cs6qMlzy1cQ"},
{"content":{"body":"Jack Works: what would be the use case","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: what would be the use case","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jack Works: what would be the use case","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: what would be the use case","mimetype":"text/html"}]},"ts":1644879782277,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$XZBUrt4h-DAdA5rabzy6bZDh2eLSjR0Fi8kXWavo_L8"},
{"content":{"body":"context: https://github.com/tc39/proposal-resizablearraybuffer/issues/91","msgtype":"m.text","org.matrix.msc1767.text":"context: https://github.com/tc39/proposal-resizablearraybuffer/issues/91"},"ts":1644879835759,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$YnBJoLyzi81qUWnOSHZ0vFd9XgMs7bm8TGTvmFf-SaI"},
{"content":{"body":"i think of it like `.slice()` (which would be the first one, i guess?)","format":"org.matrix.custom.html","formatted_body":"i think of it like <code>.slice()</code> (which would be the first one, i guess?)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i think of it like `.slice()` (which would be the first one, i guess?)","mimetype":"text/plain"},{"body":"i think of it like <code>.slice()</code> (which would be the first one, i guess?)","mimetype":"text/html"}]},"ts":1644879843343,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$_hNf3KmiUJXjuul6pBTh74nz8PiD3rBtGR14YOGxr-Q"},
{"content":{"body":" * i think of it like `.slice()` (which would be the first one, i guess?)","format":"org.matrix.custom.html","formatted_body":" * i think of it like <code>.slice()</code> (which would be the first one, i guess?)","m.new_content":{"body":"i think of it like `.slice()` (which would be the first one, i guess?)","format":"org.matrix.custom.html","formatted_body":"i think of it like <code>.slice()</code> (which would be the first one, i guess?)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i think of it like `.slice()` (which would be the first one, i guess?)","mimetype":"text/plain"},{"body":"i think of it like <code>.slice()</code> (which would be the first one, i guess?)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$_hNf3KmiUJXjuul6pBTh74nz8PiD3rBtGR14YOGxr-Q","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * i think of it like `.slice()` (which would be the first one, i guess?)","mimetype":"text/plain"},{"body":" * i think of it like <code>.slice()</code> (which would be the first one, i guess?)","mimetype":"text/html"}]},"ts":1644879855746,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Q36jhBIDXjzd6kRg1w9JwMBp3YhymGHORQ1dc0Tloho"},
{"content":{"body":"but that also means that i'd expect the return value to be the same kind of thing as the receiver - meaning, if the receiver is length-tracking i'd expect the subarray to be","msgtype":"m.text","org.matrix.msc1767.text":"but that also means that i'd expect the return value to be the same kind of thing as the receiver - meaning, if the receiver is length-tracking i'd expect the subarray to be"},"ts":1644879891488,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$8Nmr2Uwdc7XhzvPl3DcQyTnzayzDDX01oiMgjmgjujg"},
{"content":{"body":"`.slice()` always creates a new TA entirely, with its own buffer","format":"org.matrix.custom.html","formatted_body":"<code>.slice()</code> always creates a new TA entirely, with its own buffer","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`.slice()` always creates a new TA entirely, with its own buffer","mimetype":"text/plain"},{"body":"<code>.slice()</code> always creates a new TA entirely, with its own buffer","mimetype":"text/html"}]},"ts":1644879901973,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$8o-3xU2z2qybH08birT0p0kPrE7wpr0czVJZwnHfXlw"},
{"content":{"body":"`.subarray()` does not","format":"org.matrix.custom.html","formatted_body":"<code>.subarray()</code> does not","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`.subarray()` does not","mimetype":"text/plain"},{"body":"<code>.subarray()</code> does not","mimetype":"text/html"}]},"ts":1644879909569,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gt3C-_K7uYLbvqC2XF_1LIxlEcQgcYG1SRQ8KgpLhL4"},
{"content":{"body":"sure, i know it's a bit different :-) but i think of it in similar terms","msgtype":"m.text","org.matrix.msc1767.text":"sure, i know it's a bit different :-) but i think of it in similar terms"},"ts":1644879922137,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IBZa2DHoIbUOLqbpdstIT8aDKzJahvZmP018P9yZjVA"},
{"content":{"body":"so the question doesn't apply to `.slice()`","format":"org.matrix.custom.html","formatted_body":"so the question doesn't apply to <code>.slice()</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so the question doesn't apply to `.slice()`","mimetype":"text/plain"},{"body":"so the question doesn't apply to <code>.slice()</code>","mimetype":"text/html"}]},"ts":1644879922965,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$X4Eehg9CS-DP5jjuxsG9LeBX_wNXnxRoWPRbYPo7tfw"},
{"content":{"body":"well, i mean the similarity doesn't make sense to me, since the \"length tracking or not\" really only makes sense if it's the same underlying buffer","msgtype":"m.text","org.matrix.msc1767.text":"well, i mean the similarity doesn't make sense to me, since the \"length tracking or not\" really only makes sense if it's the same underlying buffer"},"ts":1644879954671,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TrYTlP0ZdgiK-Xe7mG3qx-rty0JBFM4EUizimKfAcd4"},
{"content":{"body":"i'd still expect the newly created thing to be \"the same\" as the original one as far as various characteristics go","msgtype":"m.text","org.matrix.msc1767.text":"i'd still expect the newly created thing to be \"the same\" as the original one as far as various characteristics go"},"ts":1644879958143,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$49R_a9pcCd8ZW-xj2FhryD2q28z9unbLan-7CWXe2WY"},
{"content":{"body":"i def see how it's not a clear answer - not sure if the poll helps answer it tho.","msgtype":"m.text","org.matrix.msc1767.text":"i def see how it's not a clear answer - not sure if the poll helps answer it tho."},"ts":1644880000301,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$pMKfRoUdLMzEKr2-j05duapsQ90JXgzUVwEoEX1fK5o"},
{"content":{"body":"\"the same\" is too imprecise to give me a sense here","msgtype":"m.text","org.matrix.msc1767.text":"\"the same\" is too imprecise to give me a sense here"},"ts":1644880041852,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$RjByE-gPwoKogtdy5g_MjkxFnhwz8XfeBDU5EbWEvbA"},
{"content":{"body":"in the first option, if `ta` is length-tracking, *i* would not expect `ta.subarray(begin, ta.length - 1)` to create a length-tracking TA","format":"org.matrix.custom.html","formatted_body":"in the first option, if <code>ta</code> is length-tracking, <em>i</em> would not expect <code>ta.subarray(begin, ta.length - 1)</code> to create a length-tracking TA","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in the first option, if `ta` is length-tracking, *i* would not expect `ta.subarray(begin, ta.length - 1)` to create a length-tracking TA","mimetype":"text/plain"},{"body":"in the first option, if <code>ta</code> is length-tracking, <em>i</em> would not expect <code>ta.subarray(begin, ta.length - 1)</code> to create a length-tracking TA","mimetype":"text/html"}]},"ts":1644880079650,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$seBHdwa8U3JSXA-AYjVAuW5SL1ZHSiM5ZHEx4LATN7o"},
{"content":{"body":"because i am explicitly asking for a subarray with a begin and an end, i.e. a fixed-length","msgtype":"m.text","org.matrix.msc1767.text":"because i am explicitly asking for a subarray with a begin and an end, i.e. a fixed-length"},"ts":1644880083997,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$a7SRcPeOK_TOj8TZaojWrXBDI5MJpQAfjbzNCLPXSDQ"},
{"content":{"body":"so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","format":"org.matrix.custom.html","formatted_body":"so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/plain"},{"body":"so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/html"}]},"ts":1644880244800,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$nKPJiB0zx8diIEVxCXyw8-XnpI9C_dt3fPcHeYa6WeM"},
{"content":{"body":"since resizable TAs don't exist today, the two views are semantically equivalent today","msgtype":"m.text","org.matrix.msc1767.text":"since resizable TAs don't exist today, the two views are semantically equivalent today"},"ts":1644880288713,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$k1VGngEYR6jI3hCtfHdb1DNdGvOhGmXfYV7MZ_uSloM"},
{"content":{"body":" * so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","format":"org.matrix.custom.html","formatted_body":" * so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","m.new_content":{"body":"so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","format":"org.matrix.custom.html","formatted_body":"so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/plain"},{"body":"so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$nKPJiB0zx8diIEVxCXyw8-XnpI9C_dt3fPcHeYa6WeM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * so the question is, if i omit the second `end` argument, do you think of it like if you gave an explicit `end` argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/plain"},{"body":" * so the question is, if i omit the second <code>end</code> argument, do you think of it like if you gave an explicit <code>end</code> argument of the current last index of the TA (i.e. fixed-length), or do you think of it like you're creating a new TA of the same underlying buffer with no set end (i.e. length-tracking)?","mimetype":"text/html"}]},"ts":1644880321168,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$QVod7ev990L-XRgCjD4AdPlVrJWpRzjKSg7VsVxJxsA"},
{"content":{"body":"google isn't helping me - what does \"length-tracking\" mean?","msgtype":"m.text","org.matrix.msc1767.text":"google isn't helping me - what does \"length-tracking\" mean?"},"ts":1644880425772,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$O3UOw7ld-gKDzgRG-kCI-ZUYk23Fqc9yvoddRE7Gl4w"},
{"content":{"body":"see here: https://github.com/tc39/proposal-resizablearraybuffer#modifications-to-typedarray","msgtype":"m.text","org.matrix.msc1767.text":"see here: https://github.com/tc39/proposal-resizablearraybuffer#modifications-to-typedarray"},"ts":1644880483796,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$PDowWvkElQlFr1d6zcrxkZpiRJiggB8xmgozkXySOxI"},
{"content":{"body":"aha, so if the subarray is length-tracking, it means it inherits the \"indefinite end\" quality of the parent buffer?","msgtype":"m.text","org.matrix.msc1767.text":"aha, so if the subarray is length-tracking, it means it inherits the \"indefinite end\" quality of the parent buffer?"},"ts":1644880636839,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$wtP2Law-fF1l8lkUs_kkyMDBG5hSzxMmTmHaLmwneAA"},
{"content":{"body":"of the parent TA, not the parent buffer, but otherwise yep","msgtype":"m.text","org.matrix.msc1767.text":"of the parent TA, not the parent buffer, but otherwise yep"},"ts":1644880735701,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$G4vB9xyw7J7kp3UW2Uj_IK-pposNVxLgXNJiaCT_Q5Q"},
{"content":{"body":"\"resizable or not\" is a quality of the parent buffer, and \"indefinite end\" is a quality of the original TA","msgtype":"m.text","org.matrix.msc1767.text":"\"resizable or not\" is a quality of the parent buffer, and \"indefinite end\" is a quality of the original TA"},"ts":1644880763530,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Vr3h_k_QKgssHu-NQtWHvFfHV2Wecq1hRz_gjFUqH8w"}
]