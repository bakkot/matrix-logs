[
{"content":{"body":"Andreu Botella: yes, see https://tc39.es/ecma262/#sec-jobs","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: yes, see https://tc39.es/ecma262/#sec-jobs","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Andreu Botella: yes, see https://tc39.es/ecma262/#sec-jobs","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@abotella:igalia.com\">Andreu Botella</a>: yes, see https://tc39.es/ecma262/#sec-jobs","mimetype":"text/html"}]},"ts":1670229071648,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$dfw5aMxWAxXZcX1DF75qdoMXfF8AKxBMQf8YYTcWRWM"},
{"content":{"body":"Hm, yeah, I guess the job requirements pretty much rule anything other than an event loop","msgtype":"m.text","org.matrix.msc1767.text":"Hm, yeah, I guess the job requirements pretty much rule anything other than an event loop"},"ts":1670229236239,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$jThD1TIl20szYCdKVqhVO7cnabL_r8KZ7HKiZaENNPU"},
{"content":{"body":"Sure but still some people in TC39 spaces will not like to hear those words… so it is fine to have as a mental model but not how proposal spec text should be written.","msgtype":"m.text"},"ts":1670249753891,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZgijMDgvSte-JNj9jfCCe3aJePyW_z3RnioJcBRsjCQ"},
{"content":{"body":"The module map is a similar situation—the idempotency requirement on imports necessitates it exist at some level, but it is defined outside of Ecma-262.","msgtype":"m.text"},"ts":1670249844227,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IfjqRix4ykNCMrN4DfWaja1aSbXoVYXDEJQRmc5GS2U"},
{"content":{"body":"Is there a stylistic/documentation reason that hasOwnProperty's argument is named \"V\", when (I think?) most other places that take a thing that is meant to be a property key (by that I mean, they immediately call ToPropertyKey() on it) use \"P\" instead (for example, defineProperty uses P, getOwnPropertyDescriptor, etc.)","msgtype":"m.text","org.matrix.msc1767.text":"Is there a stylistic/documentation reason that hasOwnProperty's argument is named \"V\", when (I think?) most other places that take a thing that is meant to be a property key (by that I mean, they immediately call ToPropertyKey() on it) use \"P\" instead (for example, defineProperty uses P, getOwnPropertyDescriptor, etc.)"},"ts":1670263744899,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$WKcSobiOvu-KAJ5mgNrAZOjOs9gJLeAAoyt4S0wUFMA"},
{"content":{"body":"Including, notably, hasOwn, which also uses \"P\" instead of \"V\"","msgtype":"m.text","org.matrix.msc1767.text":"Including, notably, hasOwn, which also uses \"P\" instead of \"V\""},"ts":1670263780263,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$kTDvK55ZClmFiEva2YWoF-1nDLBx0b4SIMrBLrjt2Uk"},
{"content":{"body":"I don't know offhand, but probably not; parameter names are currently not particularly consistent and so I wouldn't suggest reading into them much","msgtype":"m.text","org.matrix.msc1767.text":"I don't know offhand, but probably not; parameter names are currently not particularly consistent and so I wouldn't suggest reading into them much"},"ts":1670263850226,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rywcfIa9Pd6Xzvx3Pzu4m7YPg_nnZTv0sZPZp7z3ga0"},
{"content":{"body":"Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose. Object.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say.","msgtype":"m.text","org.matrix.msc1767.text":"Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose. Object.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say."},"ts":1670265593557,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$LjwuKJkt-AA6goF_1vTrkUTRaNzaILNoQKRNPcDc67g"},
{"content":{"body":" * Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose.\nObject.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say.","m.new_content":{"body":"Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose.\nObject.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say.","msgtype":"m.text","org.matrix.msc1767.text":"Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose.\nObject.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say."},"m.relates_to":{"event_id":"$LjwuKJkt-AA6goF_1vTrkUTRaNzaILNoQKRNPcDc67g","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * Object.p.hasOwnProperty was introduced in 3rd edition, where all Object.p.foo had at most one parameter, always named V regardless of its purpose.\nObject.{defineProperty,getOwnPropertyDescriptor} were added in 5th edition, along with other Object.foo functions. Some of these had more than one parameter, so I imagine a bit more thought went into choosing their names. So: 2 different kinds of consistency, at 2 different times, in 2 different sections. Historical accident, I'd say."},"ts":1670265614898,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$WnncOu5qa07EJTE526gNrzHt64AUU3Mg94TMnierLRE"},
{"content":{"body":"Would their be opposition to submitting changes that made it more consistent, specifically making them all P for example (for larger context, this is to make tooling I'm writing around this easier -- it would be nice to just be able to call everything \"P\" propertyKey or whatever, without needing to special case 3rd edition stuff with a bunch of manual overrides)","msgtype":"m.text","org.matrix.msc1767.text":"Would their be opposition to submitting changes that made it more consistent, specifically making them all P for example (for larger context, this is to make tooling I'm writing around this easier -- it would be nice to just be able to call everything \"P\" propertyKey or whatever, without needing to special case 3rd edition stuff with a bunch of manual overrides)"},"ts":1670269964912,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$Y4LxpCj5L6a0yAd0LLjh62K5BGFoCLmBQC5-1ZF0Ld4"},
{"content":{"body":"I don't know if this is intentional editorial guidance, but I've seen single-letter parameter/variable names become much less common in additions from recent years","msgtype":"m.text","org.matrix.msc1767.text":"I don't know if this is intentional editorial guidance, but I've seen single-letter parameter/variable names become much less common in additions from recent years"},"ts":1670270366236,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$41XtlAj_fKQnmdd0kpZ5zsYhhm4rN-KdRckG-oYSTQU"},
{"content":{"body":"I certainly would be fine changing it to propertyKey or key or whatever too of course (I am already about to map all the P's to propertyKey, etc.)","msgtype":"m.text","org.matrix.msc1767.text":"I certainly would be fine changing it to propertyKey or key or whatever too of course (I am already about to map all the P's to propertyKey, etc.)"},"ts":1670270479488,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$EWTQlrMVW1olAddvtxgpAoAl_j3aU6lS2bLAsokB21w"}
]