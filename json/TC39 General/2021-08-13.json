[
{"content":{"body":"I don't remember why I removed extending null from the March agenda but perhaps I can bring it to August.","msgtype":"m.text"},"ts":1628852478379,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$XhFWfVokFR-wlDAJ0BY0TmbnPbuwiTLDLTmyb8uHqhA"},
{"content":{"body":"New proposal for extending `Math` methods to handle BigInts. https://github.com/js-choi/proposal-bigint-math, https://jschoi.org/21/es-bigint-math/","format":"org.matrix.custom.html","formatted_body":"New proposal for extending <code>Math</code> methods to handle BigInts. https://github.com/js-choi/proposal-bigint-math, https://jschoi.org/21/es-bigint-math/","msgtype":"m.text"},"ts":1628863100253,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$rP9Uca6NeenM0vMVqvctBA1MDaUjXo7KkSGuIdemCz0"},
{"content":{"body":"Might present at next meeting for Stage 1. Stuck on a couple of questions.","msgtype":"m.text"},"ts":1628863107132,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2ZrKsKg7G8ZyMPWm3B9ASRErankc09G7fugOnuE5pvA"},
{"content":{"body":"1. Should there be any methods that would return Numbers from BigInts, like `Math.sin`? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.)\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions?\n3. Are there any real-use cases for hyperbolic functions on BigInts?","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would return Numbers from BigInts, like <code>Math.sin</code>? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.)</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions?</li>\n<li>Are there any real-use cases for hyperbolic functions on BigInts?</li>\n</ol>\n","msgtype":"m.text"},"ts":1628863209309,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8"},
{"content":{"body":" * 1. Should there be any methods that would return Numbers from BigInts, like `Math.sin`? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic functions on BigInts? Answer is currently don’t know but they’re specified anyway.","format":"org.matrix.custom.html","formatted_body":" * <ol>\n<li>Should there be any methods that would return Numbers from BigInts, like <code>Math.sin</code>? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n</ol>\n","m.new_content":{"body":"1. Should there be any methods that would return Numbers from BigInts, like `Math.sin`? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic functions on BigInts? Answer is currently don’t know but they’re specified anyway.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would return Numbers from BigInts, like <code>Math.sin</code>? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n</ol>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628863243170,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gM7jpYSUBPcE6k37BhK6IHYj80jfLIfVe_Et6JXj35A"},
{"content":{"body":" * 1. Should there be any methods that would return Numbers from BigInts, like `Math.sin`? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.","format":"org.matrix.custom.html","formatted_body":" * <ol>\n<li>Should there be any methods that would return Numbers from BigInts, like <code>Math.sin</code>? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n</ol>\n","m.new_content":{"body":"1. Should there be any methods that would return Numbers from BigInts, like `Math.sin`? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would return Numbers from BigInts, like <code>Math.sin</code>? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n</ol>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628863512009,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$aQ0u5rfSLj4E5aBxeODSICD5VDbOFjjIViaZGLUhTOE"},
{"content":{"body":"ljharb: You mentioned a few months ago you were interested in such a proposal.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: You mentioned a few months ago you were interested in such a proposal.","msgtype":"m.text"},"ts":1628863533814,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$YT5weS3KvDXIShzByQX9_zJ56qiN7GFzEzrwBzZDljI"},
{"content":{"body":" * 1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.","format":"org.matrix.custom.html","formatted_body":" * <ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n</ol>\n","m.new_content":{"body":"1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n</ol>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628863742869,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$sSl76e48YVU0QLytlO8vTyrex-YQW-bWYCfIrq_PxHM"},
{"content":{"body":" * 1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.\n5. What should the variadic `Math.hypot`, `max`, and `min` return when given no BigInt arguments? (Answer: We make new `big` versions of each of them, and we make `bigHypot` return `0`, and `bigMax`/`bigMin` throw a TypeError.","format":"org.matrix.custom.html","formatted_body":" * <ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n<li>What should the variadic <code>Math.hypot</code>, <code>max</code>, and <code>min</code> return when given no BigInt arguments? (Answer: We make new <code>big</code> versions of each of them, and we make <code>bigHypot</code> return <code>0</code>, and <code>bigMax</code>/<code>bigMin</code> throw a TypeError.</li>\n</ol>\n","m.new_content":{"body":"1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.\n5. What should the variadic `Math.hypot`, `max`, and `min` return when given no BigInt arguments? (Answer: We make new `big` versions of each of them, and we make `bigHypot` return `0`, and `bigMax`/`bigMin` throw a TypeError.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n<li>What should the variadic <code>Math.hypot</code>, <code>max</code>, and <code>min</code> return when given no BigInt arguments? (Answer: We make new <code>big</code> versions of each of them, and we make <code>bigHypot</code> return <code>0</code>, and <code>bigMax</code>/<code>bigMin</code> throw a TypeError.</li>\n</ol>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628864006763,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$NEWvpZSxYVQhffvqo31v5x-xf0P05kXMqIPJitmM3uM"},
{"content":{"body":"Richard Gibson: yup, basically want a bunch of intrinsics methods that act like @@species is never anything except what the intrinsic they are directly on the prototype of","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@gibson042:matrix.org\">Richard Gibson</a>: yup, basically want a bunch of intrinsics methods that act like @@species is never anything except what the intrinsic they are directly on the prototype of","msgtype":"m.text"},"ts":1628864008292,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$xT5l7cb2qFNW3bOnx3Ak9wuTkn0aCQ3xu6QO0DWjf-I"},
{"content":{"body":" * 1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.\n5. What should the variadic `Math.hypot`, `max`, and `min` return when given no BigInt arguments? Answer: We make new `big` versions of each of them, and we make `bigHypot` return `0`, and `bigMax`/`bigMin` throw a TypeError.","format":"org.matrix.custom.html","formatted_body":" * <ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n<li>What should the variadic <code>Math.hypot</code>, <code>max</code>, and <code>min</code> return when given no BigInt arguments? Answer: We make new <code>big</code> versions of each of them, and we make <code>bigHypot</code> return <code>0</code>, and <code>bigMax</code>/<code>bigMin</code> throw a TypeError.</li>\n</ol>\n","m.new_content":{"body":"1. Should there be any methods that would have to return Numbers from BigInts, like `Math.sin`, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.\n2. Should `round`, `floor`, etc. take BigInts, acting as identity functions? Answer is currently no.\n3. Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.\n4. If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.\n5. What should the variadic `Math.hypot`, `max`, and `min` return when given no BigInt arguments? Answer: We make new `big` versions of each of them, and we make `bigHypot` return `0`, and `bigMax`/`bigMin` throw a TypeError.","format":"org.matrix.custom.html","formatted_body":"<ol>\n<li>Should there be any methods that would have to return Numbers from BigInts, like <code>Math.sin</code>, which ranges within ±1? (Trigonometric functions would have to return Numbers, although hyperbolic functions would not.) Answer is currently no.</li>\n<li>Should <code>round</code>, <code>floor</code>, etc. take BigInts, acting as identity functions? Answer is currently no.</li>\n<li>Are there any real-use cases for hyperbolic/root/logarithm/irrational functions on BigInts? Answer is currently don’t know but they’re specified anyway.</li>\n<li>If we do extend hyperbolic/root/logarithm/irrational functions to accept BigInts, then should they return BigInts, and if so, how should they be rounded? Answer is currently yes and “it’s ‘implementation-approximated’”.</li>\n<li>What should the variadic <code>Math.hypot</code>, <code>max</code>, and <code>min</code> return when given no BigInt arguments? Answer: We make new <code>big</code> versions of each of them, and we make <code>bigHypot</code> return <code>0</code>, and <code>bigMax</code>/<code>bigMin</code> throw a TypeError.</li>\n</ol>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$dVpZcixiYSRT8BncbHnRw3z_vwKWiG6G3bYGKVH9Po8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1628864012218,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$O23EiQp0Oj0kWzBmJewT9tAbYn9RDKzFhEs3LsoXlwI"}
]