[
{"content":{"body":"I think we have categorized that set of issues as out-of-scope, but I guess it's worth pointing out somewhere once it's no longer a draft.","msgtype":"m.text"},"ts":1687417088309,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Y7y6sLNRT6XeRpqoUM9bi0rP95UFRNYQF-xWU2bQIMQ"},
{"content":{"body":"> <@annevk:matrix.org> I think we have categorized that set of issues as out-of-scope, but I guess it's worth pointing out somewhere once it's no longer a draft.\n\noh interesting, is there discussion of that somewhere?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$Y7y6sLNRT6XeRpqoUM9bi0rP95UFRNYQF-xWU2bQIMQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>I think we have categorized that set of issues as out-of-scope, but I guess it&#39;s worth pointing out somewhere once it&#39;s no longer a draft.</blockquote></mx-reply>oh interesting, is there discussion of that somewhere?","m.relates_to":{"m.in_reply_to":{"event_id":"$Y7y6sLNRT6XeRpqoUM9bi0rP95UFRNYQF-xWU2bQIMQ"}},"msgtype":"m.text"},"ts":1687438759354,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$idZjWq6k2wBzYnx9SjrboXeW3KSn94bkJ_EM-VKHrBI"},
{"content":{"body":"I think a possible change for JS is to allow more BIDI markers where they might not be allowed today. Maybe they are already allowed in those places in HTML.","msgtype":"m.text"},"ts":1687438803759,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qvMlhrnuMXtSpD3FVWbB72Wb7Iwa_hh45Xm7Tm5xWuc"},
{"content":{"body":"Another possible change is to equate certain identifiers with each other (which could be meaningful in JS as well as HTML and CSS)","msgtype":"m.text"},"ts":1687438826665,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5_BOJn_u0UkpyZ7JpoWuQq1tBWn_UNsk6ecfeHbhydY"},
{"content":{"body":"littledan: I don't recall a place unfortunately; HTML has some restrictions, but they're all within the ASCII range","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: I don't recall a place unfortunately; HTML has some restrictions, but they're all within the ASCII range","msgtype":"m.text"},"ts":1687443214564,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$IZO9IuLXZ8DoQCsPVpDQx3qsOpriaiae9bD0iCVqITM"},
{"content":{"body":"For CSS we've largely just chosen to avoid all the complexity by relying solely on codepoint comparisons. We do limit a few weird codepoints (matching HTML's restrictions on element names) but that's it.","msgtype":"m.text"},"ts":1687457367558,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$z2dha4E23KWpw_Qgiwt9mbrGl1Cw2vBceAhuUuQaJC0"},
{"content":{"body":"Yeah, neither really avoids the kind of \"source code attacks\" this document outlines, but that's really up to tooling to surface those kind of code points","msgtype":"m.text"},"ts":1687457518561,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OG-ogQ_NxuDOpFs0rN7P6vntgg1cXnVqEo31ey0lEmI"},
{"content":{"body":"Right, whether we restrict some things or not in identifiers, they'll be allowed in strings, and editors need to be smart about it. (Which is definitely a non-trivial task, granted.)","msgtype":"m.text"},"ts":1687457595272,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2KS5_2CCEG557CM16tbYID4iAag6OjroEnf5489Mt4M"},
{"content":{"body":"Would be interesting to pursue some way for CSS to *display* things in a smart way for this, tho.","format":"org.matrix.custom.html","formatted_body":"Would be interesting to pursue some way for CSS to <em>display</em> things in a smart way for this, tho.","msgtype":"m.text"},"ts":1687457619729,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$-GvX60cic7Cqy_JaMG0tQYtQ2-hEKDEIlR6RzNe6pbY"},
{"content":{"body":"> <@tabatkins:matrix.org> For CSS we've largely just chosen to avoid all the complexity by relying solely on codepoint comparisons. We do limit a few weird codepoints (matching HTML's restrictions on element names) but that's it.\n\nI'm not sure if this is a sufficient mitigation for the risks described in that document, but I haven't fully understood this whole space yet","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$z2dha4E23KWpw_Qgiwt9mbrGl1Cw2vBceAhuUuQaJC0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br>For CSS we&#39;ve largely just chosen to avoid all the complexity by relying solely on codepoint comparisons. We do limit a few weird codepoints (matching HTML&#39;s restrictions on element names) but that&#39;s it.</blockquote></mx-reply>I'm not sure if this is a sufficient mitigation for the risks described in that document, but I haven't fully understood this whole space yet","m.relates_to":{"m.in_reply_to":{"event_id":"$z2dha4E23KWpw_Qgiwt9mbrGl1Cw2vBceAhuUuQaJC0"}},"msgtype":"m.text"},"ts":1687457880265,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$RXUIjhAo610QY9aZ-Jwzgxc9tceGVtFkKD1fbloDv0c"},
{"content":{"body":"Oh it's not","msgtype":"m.text"},"ts":1687457894913,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$sX-Resa3CcLm8SSy9luy0zkWZzIjsDTKGd0-4G50z94"},
{"content":{"body":"> <@annevk:matrix.org> Yeah, neither really avoids the kind of \"source code attacks\" this document outlines, but that's really up to tooling to surface those kind of code points\n\nOh, interesting, I wonder if this is how other programming languages are looking at this issue","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$OG-ogQ_NxuDOpFs0rN7P6vntgg1cXnVqEo31ey0lEmI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>Yeah, neither really avoids the kind of &quot;source code attacks&quot; this document outlines, but that&#39;s really up to tooling to surface those kind of code points</blockquote></mx-reply>Oh, interesting, I wonder if this is how other programming languages are looking at this issue","m.relates_to":{"m.in_reply_to":{"event_id":"$OG-ogQ_NxuDOpFs0rN7P6vntgg1cXnVqEo31ey0lEmI"}},"msgtype":"m.text"},"ts":1687458382419,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ECclo_46OY4SIk0khmVD6FBkvWVSjGdoh8SEJTbPw30"},
{"content":{"body":"> <@littledan:matrix.org> I think a possible change for JS is to allow more BIDI markers where they might not be allowed today. Maybe they are already allowed in those places in HTML.\n\nThis then is the remaining issue (of the subset of issues that I understand)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$qvMlhrnuMXtSpD3FVWbB72Wb7Iwa_hh45Xm7Tm5xWuc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I think a possible change for JS is to allow more BIDI markers where they might not be allowed today. Maybe they are already allowed in those places in HTML.</blockquote></mx-reply>This then is the remaining issue (of the subset of issues that I understand)","m.relates_to":{"m.in_reply_to":{"event_id":"$qvMlhrnuMXtSpD3FVWbB72Wb7Iwa_hh45Xm7Tm5xWuc"}},"msgtype":"m.text"},"ts":1687458450768,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$TE64TBVHjul-6RzjmMJ1YRaw7rbRq8K6AXrziNH6GUc"},
{"content":{"body":"fwiw, the CSS allowed codepoints for all ident-ish things is https://drafts.csswg.org/css-syntax/#non-ascii-ident-code-point","msgtype":"m.text"},"ts":1687458636389,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$13PHrOsJS_ix8dbZSwIm_G3rPpsCP33ExhYRN0FMURc"},
{"content":{"body":"You can put *anything* in a string (tho nulls and surrogates will get censored) tho.","format":"org.matrix.custom.html","formatted_body":"You can put <em>anything</em> in a string (tho nulls and surrogates will get censored) tho.","msgtype":"m.text"},"ts":1687458666989,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$ZsqMybCWWQmn0Mc65ta6X2XS77Jpgxn0yJkIIurE7Lg"},
{"content":{"body":"it is, explicitly, a larger list than what JS allows in idents","msgtype":"m.text"},"ts":1687458703102,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$t-i7tJEufzWac_--m5F-dCOGw6-7VLmcn0TTSK5cR9E"},
{"content":{"body":"(there's an explanatory block after the list talking about this)","msgtype":"m.text"},"ts":1687458720196,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$2_HY2R-9Mw4Z4dAD5l6AB16LIxYZpQaJWyHbJ3AmINE"},
{"content":{"body":"HTML parser is also very YOLO apart from U+0000 and surrogates, iirc","msgtype":"m.text"},"ts":1687458768431,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$yIdgikVCaKez8jxFB04QwwTwiGTJUtvAODYaZmr5LL8"},
{"content":{"body":"yeah, our list matches HTML on purpose","msgtype":"m.text"},"ts":1687458805427,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$GGje8PeMV5GcIJzichnw4NUKMGyPk8EYZPYhvbA6XWg"},
{"content":{"body":"well, the html parser is more yolo than this list, but this matches valid html element names","msgtype":"m.text"},"ts":1687458823882,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$xmishDHgbp2Z3mU02OqwTy6fKnADBJdHkAdxEvH176U"},
{"content":{"body":"for general parsing css is also extremely yolo","msgtype":"m.text"},"ts":1687458841761,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$o_uJuAzA_FRkxsKSrbvqPZfI9E78ZxZwg9442Nj5DMw"},
{"content":{"body":"I noticed the other day that apparently WSGL is introducing a different kind of whitespace from JS so I guess they might care more about this as well","msgtype":"m.text"},"ts":1687458909026,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$tO4so-Lf8y0-iYiDg4Qfkjmcz_zQSTsM1TeClollDAQ"},
{"content":{"body":"Now I wonder how much overlap there is between WSGL, Wasm, and JS people","msgtype":"m.text"},"ts":1687459014967,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$L1j7GUkyjizItQfaC8SjNtG98oxY80BLM3892S3qoVw"},
{"content":{"body":"can you use BIDI markers *outside of strings* in CSS and within an HTML tag, and have them just be ignored? This is one of the recommendations of that document.","format":"org.matrix.custom.html","formatted_body":"can you use BIDI markers <em>outside of strings</em> in CSS and within an HTML tag, and have them just be ignored? This is one of the recommendations of that document.","msgtype":"m.text"},"ts":1687460723444,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zvfqpCCHsQhuAK7ZFhXzXARp0nJZjVpsid_M9Ad7DY0"},
{"content":{"body":"Not validly, but the stylesheet will just keep on trucking when it's encountered. It'll just cause something to get ignored (a property, or an entire rule, depending on where it is).","msgtype":"m.text"},"ts":1687461903731,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$OcD1qqPOTJSc0sWIprlhW22ncHd7ilsS0j6_Fk2D3hA"},
{"content":{"body":"HTML will *really* just keep trucking, it drops *very little* when it finds something weird.","format":"org.matrix.custom.html","formatted_body":"HTML will <em>really</em> just keep trucking, it drops <em>very little</em> when it finds something weird.","msgtype":"m.text"},"ts":1687461921580,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$wrSMYIrxPZTtH-GnK70XA7nXGOCDTSdS0YTTbsl9X9o"},
{"content":{"body":"well, causing stuff to be ignored would be contrary to the intentions here","msgtype":"m.text"},"ts":1687463720030,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$khH1khl7CYzJB2y8euqB8IvTN5zyROdkU8giqc60zxg"},
{"content":{"body":"I mean, beyond the BIDI mark itself","msgtype":"m.text"},"ts":1687463731132,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BCAvZFVOpeUF_lnFxng3i8TBJwfOoynw79Oxv0XPIPA"},
{"content":{"body":"littledan: Not really? If you add a LTR override, it doesn't render, it doesn't affect surrounding rendering (assuming it's already LTR), but it changes behaviour by disabling the rule/property/whatever","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: Not really? If you add a LTR override, it doesn't render, it doesn't affect surrounding rendering (assuming it's already LTR), but it changes behaviour by disabling the rule/property/whatever","msgtype":"m.text"},"ts":1687463905100,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$hj2aQSMbw0hhd_Ey7yrzDn0veKK_SGRCgs9gRXCtZ2c"},
{"content":{"body":"yeah the idea is to not disable the rule...","msgtype":"m.text"},"ts":1687464464581,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$8ECiP0UZQDomDNzeyMjFCBBquC-A8RX3qtkhqrY_9EU"}
]