[
{"content":{"body":"Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?\n\nHow is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(O, value).","msgtype":"m.text"},"ts":1633031668774,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$4N9r1JLaIQWDM9LCtQ8UD7ImYGSQi1IGpj-UeQeZzaA"},
{"content":{"body":" * Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?\n\nHow is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(_O_, value).","format":"org.matrix.custom.html","formatted_body":" * <p>Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?</p>\n<p>How is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(<em>O</em>, value).</p>\n","m.new_content":{"body":"Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?\n\nHow is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(_O_, value).","format":"org.matrix.custom.html","formatted_body":"<p>Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?</p>\n<p>How is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(<em>O</em>, value).</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$4N9r1JLaIQWDM9LCtQ8UD7ImYGSQi1IGpj-UeQeZzaA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633031677133,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Jiu17pVT4isUAP89WsO2V8qWKtez5WXG2ss1s7U-Otg"},
{"content":{"body":"(Basically, I’m trying to plug the result of CreateArrayIterator into CreateAsyncFromSyncIterator, but it’s a type mismatch. Surely there’s a way to do this without manually creating a record, right?","msgtype":"m.text"},"ts":1633031734930,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$0OV9lb9QYWsQHMnNFpxF3fskJN0AKrdj0LG5FEwsv6U"},
{"content":{"body":" * (Basically, I’m trying to plug the result of CreateArrayIterator into CreateAsyncFromSyncIterator, but it’s a type mismatch. Surely there’s a way to do this without manually creating a record, right?)","m.new_content":{"body":"(Basically, I’m trying to plug the result of CreateArrayIterator into CreateAsyncFromSyncIterator, but it’s a type mismatch. Surely there’s a way to do this without manually creating a record, right?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$0OV9lb9QYWsQHMnNFpxF3fskJN0AKrdj0LG5FEwsv6U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633031736993,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Xcn24uqm4z8BW4qRbyBj-GLs0XHBdMK3a11qB-huY44"},
{"content":{"body":" * Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?\n\nHow is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(_O_, value) (https://tc39.es/ecma262/#sec-array.prototype.values).","format":"org.matrix.custom.html","formatted_body":" * <p>Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?</p>\n<p>How is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(<em>O</em>, value) (https://tc39.es/ecma262/#sec-array.prototype.values).</p>\n","m.new_content":{"body":"Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?\n\nHow is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(_O_, value) (https://tc39.es/ecma262/#sec-array.prototype.values).","format":"org.matrix.custom.html","formatted_body":"<p>Could someone familiar with the spec explain https://github.com/tc39/proposal-array-from-async/pull/11#discussion_r719681385 ?</p>\n<p>How is it that %Array.prototype.values% returns an iterator record? It just returns CreateArrayIterator(<em>O</em>, value) (https://tc39.es/ecma262/#sec-array.prototype.values).</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$4N9r1JLaIQWDM9LCtQ8UD7ImYGSQi1IGpj-UeQeZzaA","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633031773798,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qn2FDjKQdw7F22P2liGuOz4ycmVMYyKLLxX2hWzKlCs"},
{"content":{"body":" * (Basically, I’m trying to plug the result of CreateArrayIterator into CreateAsyncFromSyncIterator, but the former returns an iterator and the latter requires an iterator record. Surely there’s a way to do this without manually creating a record, right?)","m.new_content":{"body":"(Basically, I’m trying to plug the result of CreateArrayIterator into CreateAsyncFromSyncIterator, but the former returns an iterator and the latter requires an iterator record. Surely there’s a way to do this without manually creating a record, right?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$0OV9lb9QYWsQHMnNFpxF3fskJN0AKrdj0LG5FEwsv6U","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633031792286,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$klnVCTaxjQg9DrbMt_70m-kAkkS7VffBlwrl-Rz17Hs"},
{"content":{"body":"> How is it that %Array.prototype.values% returns an iterator record?\n\nIt doesn't; it returns an actual iterator (i.e. an object with a `.next` method). Maybe you have this question backwards?\n\n(Iterator Records, like all records, are never exposed to user code.)","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>How is it that %Array.prototype.values% returns an iterator record?</p>\n</blockquote>\n<p>It doesn't; it returns an actual iterator (i.e. an object with a <code>.next</code> method). Maybe you have this question backwards?</p>\n<p>(Iterator Records, like all records, are never exposed to user code.)</p>\n","msgtype":"m.text"},"ts":1633031957821,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ATjCarFH_DECqcyQm-KJOh_2Ioq6NzolVwbwiaTJ5LQ"},
{"content":{"body":"> Surely there’s a way to do this without manually creating a record, right?\n\nNot that I'm aware of. The normal flow is to call `GetIterator`, which does the work for you. But manually making the record should just be a one-liner, so I don't think it's worth abstracting it out.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Surely there’s a way to do this without manually creating a record, right?</p>\n</blockquote>\n<p>Not that I'm aware of. The normal flow is to call <code>GetIterator</code>, which does the work for you. But manually making the record should just be a one-liner, so I don't think it's worth abstracting it out.</p>\n","msgtype":"m.text"},"ts":1633032147343,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hNL1CvZ-4lhAVnNRn_WEUxB0TwaAdXZDUzLGTas8a1A"},
{"content":{"body":"(just `Let _iteratorRecord_ be the Record { [[Iterator]]: _iterator_, [[NextMethod]]: %ArrayIteratorPrototype.next%, [[Done]]: false }.`, I think)","format":"org.matrix.custom.html","formatted_body":"(just <code>Let _iteratorRecord_ be the Record { [[Iterator]]: _iterator_, [[NextMethod]]: %ArrayIteratorPrototype.next%, [[Done]]: false }.</code>, I think)","msgtype":"m.text"},"ts":1633032212105,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_7ccMbXM-y0lz10VTMLXgdpVxNeYDZVCzzkYxByooQ0"},
{"content":{"body":"> <@bakkot:matrix.org> (just `Let _iteratorRecord_ be the Record { [[Iterator]]: _iterator_, [[NextMethod]]: %ArrayIteratorPrototype.next%, [[Done]]: false }.`, I think)\n\nGot it, thanks.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$_7ccMbXM-y0lz10VTMLXgdpVxNeYDZVCzzkYxByooQ0?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>(just <code>Let _iteratorRecord_ be the Record { [[Iterator]]: _iterator_, [[NextMethod]]: %ArrayIteratorPrototype.next%, [[Done]]: false }.</code>, I think)</blockquote></mx-reply>Got it, thanks.","m.relates_to":{"m.in_reply_to":{"event_id":"$_7ccMbXM-y0lz10VTMLXgdpVxNeYDZVCzzkYxByooQ0"}},"msgtype":"m.text"},"ts":1633032815812,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$jjAyLcrEfi_CbVNM5AJRkGDaFMf-4DDtnE3Q4TmW8Iw"},
{"content":{"body":"> <@bakkot:matrix.org> > How is it that %Array.prototype.values% returns an iterator record?\n> \n> It doesn't; it returns an actual iterator (i.e. an object with a `.next` method). Maybe you have this question backwards?\n> \n> (Iterator Records, like all records, are never exposed to user code.)\n\nI was confused because that’s what zloirock had said it does.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ATjCarFH_DECqcyQm-KJOh_2Ioq6NzolVwbwiaTJ5LQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><blockquote>\n<p>How is it that %Array.prototype.values% returns an iterator record?</p>\n</blockquote>\n<p>It doesn't; it returns an actual iterator (i.e. an object with a <code>.next</code> method). Maybe you have this question backwards?</p>\n<p>(Iterator Records, like all records, are never exposed to user code.)</p>\n</blockquote></mx-reply>I was confused because that’s what zloirock had said it does.","m.relates_to":{"m.in_reply_to":{"event_id":"$ATjCarFH_DECqcyQm-KJOh_2Ioq6NzolVwbwiaTJ5LQ"}},"msgtype":"m.text"},"ts":1633032869510,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$AUjTWfuz0WOknFiCbdEjFcAn9Xg0j9gFiJVYlSJxVp8"},
{"content":{"body":" * I was confused because that’s what zloirock had said it does. It’s good to know that it actually doesn’t; I am no longer confused.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ATjCarFH_DECqcyQm-KJOh_2Ioq6NzolVwbwiaTJ5LQ?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><blockquote>\n<p>How is it that %Array.prototype.values% returns an iterator record?</p>\n</blockquote>\n<p>It doesn't; it returns an actual iterator (i.e. an object with a <code>.next</code> method). Maybe you have this question backwards?</p>\n<p>(Iterator Records, like all records, are never exposed to user code.)</p>\n</blockquote></mx-reply> * I was confused because that’s what zloirock had said it does. It’s good to know that it actually doesn’t; I am no longer confused.","m.new_content":{"body":"I was confused because that’s what zloirock had said it does. It’s good to know that it actually doesn’t; I am no longer confused.","format":"org.matrix.custom.html","formatted_body":"I was confused because that’s what zloirock had said it does. It’s good to know that it actually doesn’t; I am no longer confused.","msgtype":"m.text"},"m.relates_to":{"event_id":"$AUjTWfuz0WOknFiCbdEjFcAn9Xg0j9gFiJVYlSJxVp8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633032889440,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Ai5DtkTENsKuEBP7cUe3TwOZNJyyD7iJ31mvdQ5S-pI"},
{"content":{"body":"Oh, wait, he was suggesting using `%Array.prototype.values%` as the method argument to GetIterator. That *should* work…","format":"org.matrix.custom.html","formatted_body":"Oh, wait, he was suggesting using <code>%Array.prototype.values%</code> as the method argument to GetIterator. That <em>should</em> work…","msgtype":"m.text"},"ts":1633032934600,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$zl1gY819TBh7WpKMx7fXDmF0xRwIVDoO7_YnQXBKABc"},
{"content":{"body":" * Oh, wait, I had misunderstood him. He was suggesting using `%Array.prototype.values%` as the method argument to GetIterator. That _should_ work…","format":"org.matrix.custom.html","formatted_body":" * Oh, wait, I had misunderstood him. He was suggesting using <code>%Array.prototype.values%</code> as the method argument to GetIterator. That <em>should</em> work…","m.new_content":{"body":"Oh, wait, I had misunderstood him. He was suggesting using `%Array.prototype.values%` as the method argument to GetIterator. That _should_ work…","format":"org.matrix.custom.html","formatted_body":"Oh, wait, I had misunderstood him. He was suggesting using <code>%Array.prototype.values%</code> as the method argument to GetIterator. That <em>should</em> work…","msgtype":"m.text"},"m.relates_to":{"event_id":"$zl1gY819TBh7WpKMx7fXDmF0xRwIVDoO7_YnQXBKABc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1633032943253,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gu9shTxwdDNVUxofeJhUKVIMKvUV1iX6fQ3Gq33FtCA"},
{"content":{"body":"jschoi: In your bind-this, you have some text about the operator \"creating bound functions\" like .bind() does, but as far as I can tell it doesn't do this. Every example you have is using it immediately as part of a call expression; always `randomObj->fakeMethod(x)` (equivalent to `fakeMethod.call(randomObj, x)`), never `randomObj->fakeMethod` (equivalent to `fakeMethod.bind(randomObj)`). Are your examples too limited, or did the scope change at some point to be a call operator rather than a bind operator?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: In your bind-this, you have some text about the operator &quot;creating bound functions&quot; like .bind() does, but as far as I can tell it doesn't do this. Every example you have is using it immediately as part of a call expression; always <code>randomObj-&gt;fakeMethod(x)</code> (equivalent to <code>fakeMethod.call(randomObj, x)</code>), never <code>randomObj-&gt;fakeMethod</code> (equivalent to <code>fakeMethod.bind(randomObj)</code>). Are your examples too limited, or did the scope change at some point to be a call operator rather than a bind operator?","msgtype":"m.text"},"ts":1633038525669,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$lKUQlmxtSAei1KUrraXhIgIt11rBYnmxptV4Suu-nFw"},
{"content":{"body":"> <@tabatkins:matrix.org> jschoi: In your bind-this, you have some text about the operator \"creating bound functions\" like .bind() does, but as far as I can tell it doesn't do this. Every example you have is using it immediately as part of a call expression; always `randomObj->fakeMethod(x)` (equivalent to `fakeMethod.call(randomObj, x)`), never `randomObj->fakeMethod` (equivalent to `fakeMethod.bind(randomObj)`). Are your examples too limited, or did the scope change at some point to be a call operator rather than a bind operator?\n\nThe examples are too limited. `o->fn` is `fn.bind(o)`, \nand `o->fn(a)` is `fn.call(o, a)`, because `fn.call(o, a)` is indistinguishable from `fn.bind(o)(a)`.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24lKUQlmxtSAei1KUrraXhIgIt11rBYnmxptV4Suu-nFw\">In reply to</a> <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">@tabatkins:matrix.org</a><br><a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: In your bind-this, you have some text about the operator &quot;creating bound functions&quot; like .bind() does, but as far as I can tell it doesn't do this. Every example you have is using it immediately as part of a call expression; always <code>randomObj-&gt;fakeMethod(x)</code> (equivalent to <code>fakeMethod.call(randomObj, x)</code>), never <code>randomObj-&gt;fakeMethod</code> (equivalent to <code>fakeMethod.bind(randomObj)</code>). Are your examples too limited, or did the scope change at some point to be a call operator rather than a bind operator?</blockquote></mx-reply>The examples are too limited. <code>o-&gt;fn</code> is <code>fn.bind(o)</code>,<br />\nand <code>o-&gt;fn(a)</code> is <code>fn.call(o, a)</code>, because <code>fn.call(o, a)</code> is indistinguishable from <code>fn.bind(o)(a)</code>.","m.relates_to":{"m.in_reply_to":{"event_id":"$lKUQlmxtSAei1KUrraXhIgIt11rBYnmxptV4Suu-nFw"}},"msgtype":"m.text"},"ts":1633039057501,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$kru22Ns5WjTzxDIviuvKCLQkB005dllQFJnQQpK6RHY"},
{"content":{"body":"`fakeMethod.call(randomObj, x)` is indistinguishable from `fakeMethod.bind(randomObj)(x)`. ","format":"org.matrix.custom.html","formatted_body":"<code>fakeMethod.call(randomObj, x)</code> is indistinguishable from <code>fakeMethod.bind(randomObj)(x)</code>.","msgtype":"m.text"},"ts":1633039110352,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qeRQHu4NYho5Q0gNUAwYl1JfkOxDwwXF27m2ILlJSjU"}
]