[
{"content":{"body":"* Property “names” probably would no longer be apt terminology; it could be more like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"* Property “names” probably would no longer be apt terminology; it could be more like <code>Object.getOwnPropertyKeys</code>.","m.new_content":{"body":"Property “names” probably would no longer be apt terminology; it could be more like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"Property “names” probably would no longer be apt terminology; it could be more like <code>Object.getOwnPropertyKeys</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$zrXlZpZBn46pDJ8C4bMqF8NCSAa6YTeXoniVoZauXZo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1622943528517,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2kPYhfccQivqs8Rsh9TiG53_tXA69oQ-J9HLghOxD4g"},
{"content":{"body":"* Property “names” probably would no longer be apt terminology for non-string values; the method name could be like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"* Property “names” probably would no longer be apt terminology for non-string values; the method name could be like <code>Object.getOwnPropertyKeys</code>.","m.new_content":{"body":"Property “names” probably would no longer be apt terminology for non-string values; the method name could be like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"Property “names” probably would no longer be apt terminology for non-string values; the method name could be like <code>Object.getOwnPropertyKeys</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$zrXlZpZBn46pDJ8C4bMqF8NCSAa6YTeXoniVoZauXZo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1622943867511,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$MxDEvVLsC51fngcclym3-K4aRNJv89Ys7zAUG6LZKw4"},
{"content":{"body":"* Property “names” probably would no longer be apt terminology for non-string keys; the method name could be like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"* Property “names” probably would no longer be apt terminology for non-string keys; the method name could be like <code>Object.getOwnPropertyKeys</code>.","m.new_content":{"body":"Property “names” probably would no longer be apt terminology for non-string keys; the method name could be like `Object.getOwnPropertyKeys`.","format":"org.matrix.custom.html","formatted_body":"Property “names” probably would no longer be apt terminology for non-string keys; the method name could be like <code>Object.getOwnPropertyKeys</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$zrXlZpZBn46pDJ8C4bMqF8NCSAa6YTeXoniVoZauXZo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1622943885446,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$uDl6oQwqVv5aapC-35a87As6JQmzqJUBKGjdIcjODm4"},
{"content":{"body":"Anyone know what's going on here? Are we all misunderstanding? https://stackoverflow.com/questions/67855714/eval-declaration-instantiation-when-calling-context-is-evaluating-formal-param","msgtype":"m.text"},"ts":1622954016541,"senderName":"loganfsmyth","senderId":"@loganfsmyth:mozilla.org","id":"$AEgkNNQw7VyB6ca8W_a331uTREXs2R6nq_AEasnV0lo"},
{"content":{"body":"loganfsmyth: that note became stale as of https://github.com/tc39/ecma262/pull/1046","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@loganfsmyth:mozilla.org\">loganfsmyth</a>: that note became stale as of https://github.com/tc39/ecma262/pull/1046","msgtype":"m.text"},"ts":1622958153855,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$amoFqc2RKLgEPdbLVvMyb_Y3ntR4WjiUFB4d9KJN5Wg"},
{"content":{"body":"I suppose I'll open a PR","msgtype":"m.text"},"ts":1622958205564,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$3E88s8t1VOAZ4dKcxG_Q2OrlukS7uEiYRRsMZ77MqCI"},
{"content":{"body":"excellent, that makes sense","msgtype":"m.text"},"ts":1622958297707,"senderName":"loganfsmyth","senderId":"@loganfsmyth:mozilla.org","id":"$K0a1wNjHPWZyoOE5_XBoD1UZdHjLSvOIyHcfcunZtKs"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/2428","msgtype":"m.text"},"ts":1622958491618,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sAXkRqcUVQQeQzTVHn9EWDfKVTBjb3lHcfnN1lE5wyI"},
{"content":{"body":"loganfsmyth: You want to answer the stackoverflow question or shall I try to dig up my old account?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@loganfsmyth:mozilla.org\">loganfsmyth</a>: You want to answer the stackoverflow question or shall I try to dig up my old account?","msgtype":"m.text"},"ts":1622958522996,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$y7yaHmXsnaOTjrIok3uLW-BSPTSljz8PaS3nd1Z8kRE"},
{"content":{"body":"I posted an answer, thanks!","msgtype":"m.text"},"ts":1622958601509,"senderName":"loganfsmyth","senderId":"@loganfsmyth:mozilla.org","id":"$r_Tv8CjWAx8h8YL2bsasgJGtoNR_BHDFlQj2R8y-EhY"},
{"content":{"body":"jmdyck: re https://github.com/tc39/ecma262/issues/2400, you suggest replacing \"Set the code evaluation state of contextA such that when evaluation is resumed with a Completion v [...].\" with \"Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation.\"","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: re https://github.com/tc39/ecma262/issues/2400, you suggest replacing &quot;Set the code evaluation state of contextA such that when evaluation is resumed with a Completion v [...].&quot; with &quot;Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation.&quot;","msgtype":"m.text"},"ts":1623004746092,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$aj_MN8jfOxNZMzU_NKapfZg-QCCEyosUJ_GKyk0NrZs"},
{"content":{"body":" problem: it is not generally the case that contextB is the thing which resumes the thing just suspended.","msgtype":"m.text"},"ts":1623004757501,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lu5V0gk21uvftJzJsZ4x-nhWaZc7VcFX1UXh8-GrXAo"},
{"content":{"body":"e.g., in Await, it's not contextB which does the resumption, but rather some future Await Fulfilled Function (or Await Rejected Function, of course)","msgtype":"m.text"},"ts":1623004822294,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$SI8jUGZ72H3HuDYXchLIHYOSiNpQ4UwEr-HkXMVRNN4"},
{"content":{"body":"I'm trying to think of an alternative phrasing which avoids this, but haven't come up with anything I like yet","msgtype":"m.text"},"ts":1623004846978,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DwkjUMf4Tn0ZVn-cXJQCWwG3lNupS-qR6FojtcfBcbI"},
{"content":{"body":"\"the thing which resumes\" present tense? I say that contextB is the execution context that most recently *resumed* the evaluation of contextA.","format":"org.matrix.custom.html","formatted_body":"&quot;the thing which resumes&quot; present tense? I say that contextB is the execution context that most recently <em>resumed</em> the evaluation of contextA.","msgtype":"m.text"},"ts":1623004980616,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$IYXTFkCWPNXklSial2y3mZcb21ioHwgBvBYCAzZVTfM"},
{"content":{"body":"I'm focusing specifically on the step\n\n> Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation.\n","format":"org.matrix.custom.html","formatted_body":"<p>I'm focusing specifically on the step</p>\n<blockquote>\n<p>Resume contextB passing B-VALUE. Let v be the value returned by the resumed computation.</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1623005009448,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$an3KOqFnVIuIjZFcrjbYiin2KIN4r57EqESA33ifo8o"},
{"content":{"body":"to me, that step implies that contextB is going to be the thing which provides _v_.","format":"org.matrix.custom.html","formatted_body":"to me, that step implies that contextB is going to be the thing which provides <em>v</em>.","msgtype":"m.text"},"ts":1623005032369,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$K1aMaJlB4WBGg1tVEWYgp8tcsPjbZ1h9CISs358QEKk"},
{"content":{"body":"and, by extension, is going to be the thing which _subsequently_ resumes contextA.","format":"org.matrix.custom.html","formatted_body":"and, by extension, is going to be the thing which <em>subsequently</em> resumes contextA.","msgtype":"m.text"},"ts":1623005058768,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$sjbt0px5NIVxTehsVGK4F5uieA9mYXECi6uaJS_CxS8"},
{"content":{"body":"Ah,okay. Well, it doesn't actually *say* that contextB will be returning v and resuming contextA, though that's what I would have thought.","format":"org.matrix.custom.html","formatted_body":"Ah,okay. Well, it doesn't actually <em>say</em> that contextB will be returning v and resuming contextA, though that's what I would have thought.","msgtype":"m.text"},"ts":1623005204315,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$97kP_r8Hq4_zWGzBmk5753oEPPI4GGE1r6Vicl4oYdI"},
{"content":{"body":"I still don't grok Await machinery","msgtype":"m.text"},"ts":1623005275984,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$W3wHKNUnmjevvevz8ekiq8rh3Ky8w3YpNDG5TBHpcEc"},
{"content":{"body":"It's not just Await; the same issue arises for plain generators. contextB is the _previous_ caller of `Generator.prototype.next`, whereas _v_ is going to be provided by the _next_ caller of `Generator.prototype.next`.","format":"org.matrix.custom.html","formatted_body":"It's not just Await; the same issue arises for plain generators. contextB is the <em>previous</em> caller of <code>Generator.prototype.next</code>, whereas <em>v</em> is going to be provided by the <em>next</em> caller of <code>Generator.prototype.next</code>.","msgtype":"m.text"},"ts":1623005394350,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1f7x71Yf92-nRhHM8aYsZFCfn3LyVSbfPgU_w16aaEE"},
{"content":{"body":"Maybe something like\n\n> 1. Resume contextB passing B-VALUE.\n> 1. Assert: when control reaches here, contextA is once again the running execution context.\n> 1. Let _v_ be the value with which contextA was resumed.","format":"org.matrix.custom.html","formatted_body":"<p>Maybe something like</p>\n<blockquote>\n<ol>\n<li>Resume contextB passing B-VALUE.</li>\n<li>Assert: when control reaches here, contextA is once again the running execution context.</li>\n<li>Let <em>v</em> be the value with which contextA was resumed.</li>\n</ol>\n</blockquote>\n","msgtype":"m.text"},"ts":1623005489174,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$YeKS6CXrHFsl0G2QJsO8T_Bv40Dn7B9x4iWtZHEQYdM"},
{"content":{"body":"and those can be 'in' different contexts (w plain generators)?","msgtype":"m.text"},"ts":1623005492447,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$XCWomsn36i9V4j8oXwbn8IurJqKVDiQogQsh1F3AiiU"},
{"content":{"body":"they are necessarily going to be in different contexts, since each call to `.next` (as with all function calls) creates and pushes a new context","format":"org.matrix.custom.html","formatted_body":"they are necessarily going to be in different contexts, since each call to <code>.next</code> (as with all function calls) creates and pushes a new context","msgtype":"m.text"},"ts":1623005525563,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bhv3UUBk1na4vZNFIVJYGSxV_Xd37y40ZoqZpWVmIgQ"},
{"content":{"body":"I guess I ought to have said \"contextB is the execution context of the previous call of Generator.prototype.next\", not \"is the caller of\"","msgtype":"m.text"},"ts":1623005581898,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PFnp7pCx0BwzICFsx8yWU_IC2_eTbGtGxH9sCmAijWg"},
{"content":{"body":"sorry, i need to page this in","msgtype":"m.text"},"ts":1623005587974,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$2Lu1WJq6j60gfF2qZpgIP_P2V5vbPZwaLuM9iFqhbtE"},
{"content":{"body":"haven't thought about it for a while","msgtype":"m.text"},"ts":1623005602639,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$paACE5hR25Rf6F7wJjO92K30-qOXW8fQn7dgpVH48JI"},
{"content":{"body":"Not to worry, lots to page in","msgtype":"m.text"},"ts":1623005882893,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ugMxmvSphkkuht5swKb7QorIx9ZhRZBrqRea7pmvpow"},
{"content":{"body":"I'll have a PR up in a bit","msgtype":"m.text"},"ts":1623005899303,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gyX-Rzm3tThfBL1d5FLb8-G6il4Dl9X1ZAaz3xVutEg"},
{"content":{"body":"okay, i think i'm more or less up to speed","msgtype":"m.text"},"ts":1623006168102,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$_VxsJCnkvjOXx-XtDHAQUfzkE65HL7Y61B5YQ3UjN3Y"},
{"content":{"body":"And yeah, the wording could be improved, but I'm not sure about your suggestion.","msgtype":"m.text"},"ts":1623006226179,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$JNeUHgFsUGMxyc3Csk2SvXYBJnBQQJKULTzEHVQVsnM"},
{"content":{"body":"I think it needs to be clearer that the thread of control that performs the 'Resume' step has to then (suspend and) wait until *it* is Resumed (if ever), at which time a value (v) will be supplied.","format":"org.matrix.custom.html","formatted_body":"I think it needs to be clearer that the thread of control that performs the 'Resume' step has to then (suspend and) wait until <em>it</em> is Resumed (if ever), at which time a value (v) will be supplied.","msgtype":"m.text"},"ts":1623006598518,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$PhZ_fmTEPxVg_kE2HOg-rMk9msGVPsfhwmlk4tIxUxQ"}
]