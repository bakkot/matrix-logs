[
{"content":{"body":"https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback\n\nShould we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Demo already violate that restriction anyway, by implementing AsyncLocalStorage","format":"org.matrix.custom.html","formatted_body":"<p>https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback</p>\n<p>Should we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Demo already violate that restriction anyway, by implementing AsyncLocalStorage</p>","msgtype":"m.text"},"ts":1721159374340,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Pn2984GE43U9qMfDIgc-R8q8q-eOfC9S0f1WM-sxsBQ"},
{"content":{"body":"* https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback\nShould we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Deno already violate that restriction anyway, by implementing AsyncLocalStorage\n","m.new_content":{"body":"https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback\nShould we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Deno already violate that restriction anyway, by implementing AsyncLocalStorage\n","format":"org.matrix.custom.html","formatted_body":"https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback<br />Should we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Deno already violate that restriction anyway, by implementing AsyncLocalStorage","msgtype":"m.text"},"m.relates_to":{"event_id":"$Pn2984GE43U9qMfDIgc-R8q8q-eOfC9S0f1WM-sxsBQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1721160061245,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PeGIWNxd0T8rcapyzhQElMSRfbDgq6JEmzrRrOsysHI"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback\n> Should we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Deno already violate that restriction anyway, by implementing AsyncLocalStorage\n> \n\ndo you have any information on why it was originally scoped to only web browsers?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24Pn2984GE43U9qMfDIgc-R8q8q-eOfC9S0f1WM-sxsBQ\">In reply to</a><a href=\"https://matrix.to/#/%40nicolo-ribaudo%3Amatrix.org\">@nicolo-ribaudo:matrix.org</a><br />https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-web-compat-host-make-job-callback<br />Should we remove the restriction that only web browsers can pass custom data in HostMakeJobCallback? Both Node.js and Deno already violate that restriction anyway, by implementing AsyncLocalStorage</blockquote></mx-reply>do you have any information on why it was originally scoped to only web browsers?","m.relates_to":{"m.in_reply_to":{"event_id":"$Pn2984GE43U9qMfDIgc-R8q8q-eOfC9S0f1WM-sxsBQ"}},"msgtype":"m.text"},"ts":1721160745939,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jvkoM3EkLoSHVx_m0xxQI4cNF1xrceQ0i6kZfxqPGdM"}
]