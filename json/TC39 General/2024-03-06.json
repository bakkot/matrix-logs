[
{"content":{"body":"there weren't any uses of Promises in the language when they were first added","m.mentions":{},"msgtype":"m.text"},"ts":1709684926202,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$EHu9qb4nx8bkrS20aMuqY1L66AjrDL-UXLO3ji4B8l0"},
{"content":{"body":"yeah but there was an obvious thing they would be used for, i.e. async functions","m.mentions":{},"msgtype":"m.text"},"ts":1709684981578,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9tgYvNUFDzcLXiM_DGe58KOmCb3t1OTijKiC0b2_5AY"},
{"content":{"body":"is there a thing we even plausibly think Observable might get used for, in the language?","m.mentions":{},"msgtype":"m.text"},"ts":1709684991866,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qd25KwiK6iD4SnGzOx0iAvx6AR82yeebMcxCoIy6I2E"},
{"content":{"body":"(I'm not opposed to putting it in TC39 anyway, I just don't know of anything in the language that would need it)","m.mentions":{},"msgtype":"m.text"},"ts":1709685017903,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QtWEElu-LXzF5gXCmn1yDP7eksqEt1nrDpYpQWR6G3M"},
{"content":{"body":"(I do agree with the point about it being shaped mainly by web constraints and so making more sense in WHATWG, unless there is some language-level thing we want it for)","m.mentions":{},"msgtype":"m.text"},"ts":1709685359584,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NiDwuGse7SoP7GX_7dqRJwpT81pmQcITewvW2k2lufM"},
{"content":{"body":"I don't understand this line of argument; what is the language-level thing that Temporal is for?","m.mentions":{},"msgtype":"m.text"},"ts":1709687208466,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$0dSTzjl4z-8a-t03SYJC2S2ZvXww2oOborzSnqQbg0Y"},
{"content":{"body":"all of the integrations I've heard of are at the web level, or other embedders","m.mentions":{},"msgtype":"m.text"},"ts":1709687223317,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GO_gTav1BVttxpZXtI4e6pL2UhHDFviJBV238wXtvmU"},
{"content":{"body":" * all of the integrations I've heard of for Temporal are at the web level, or other embedders","m.mentions":{},"m.new_content":{"body":"all of the integrations I've heard of for Temporal are at the web level, or other embedders","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$GO_gTav1BVttxpZXtI4e6pL2UhHDFviJBV238wXtvmU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709687252950,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FjfkyPte0pKMG8t4W5WGwjbfc04zbsT1jfA1nKFx9Y8"},
{"content":{"body":"I'd argue that either venue is valid, and we're in a situation of actual competition, for who can be the most helpful in facilitating discussion, decision-making, implementation, etc.","m.mentions":{},"msgtype":"m.text"},"ts":1709687329112,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$IjgRCc_GEZpACjcVOfCQ9BoxRuyldPjMTQzUocNpQm4"},
{"content":{"body":"I don't mean competition in the sense that we are against each other, but that we may decide to make ourselves more attractive, and this will lead to people choosing us as a venue to do work.","m.mentions":{},"msgtype":"m.text"},"ts":1709687509623,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GWnv8QAR0Shpkp-udQG8hTPebEfL1QlAvrVIz9x4U54"},
{"content":{"body":"> <@littledan:matrix.org> I don't understand this line of argument; what is the language-level thing that Temporal is for?\n\nIt isn't specifically for anything in JS or the web platform, so it could work in either venue. things which are designed specifically for use in some other JS thing should be in JS; things which are designed specifically for use in some web platform thing should be in the web. (very weak senses of \"should\" in both cases.)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$0dSTzjl4z-8a-t03SYJC2S2ZvXww2oOborzSnqQbg0Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>I don&#39;t understand this line of argument; what is the language-level thing that Temporal is for?</blockquote></mx-reply>It isn't specifically for anything in JS or the web platform, so it could work in either venue. things which are designed specifically for use in some other JS thing should be in JS; things which are designed specifically for use in some web platform thing should be in the web. (very weak senses of \"should\" in both cases.)","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$0dSTzjl4z-8a-t03SYJC2S2ZvXww2oOborzSnqQbg0Y"}},"msgtype":"m.text"},"ts":1709688731271,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HvKi7fJ92b-X3H_qxC8bgOQYCCaWvG6pP8lcokeyHqw"},
{"content":{"body":"this makes sense. so, how should we test, when analyzing a proposal, what it's \"for\"?","m.mentions":{},"msgtype":"m.text"},"ts":1709688783734,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qUWtwUQHZrrwVifsv-shVn6xHoWzQDRTPdpQi0GPkXo"},
{"content":{"body":"(just for example, an important consideration for Observables is that running on the next microtask tick is too late to call `event.preventDefault`, which is the sort of consideration more likely to get surfaced / attended to in WHATWG.)","format":"org.matrix.custom.html","formatted_body":"(just for example, an important consideration for Observables is that running on the next microtask tick is too late to call <code>event.preventDefault</code>, which is the sort of consideration more likely to get surfaced / attended to in WHATWG.)","m.mentions":{},"msgtype":"m.text"},"ts":1709688816600,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Vx0eURRO07GKuDaiimU1TrsbuuzbQseNixD_te39ej0"},
{"content":{"body":"(not to say that will necessarily decide the design, just that it's not a consideration which is central to TC39.)","m.mentions":{},"msgtype":"m.text"},"ts":1709688863313,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cWWLmLivW45ebZO3WgxBApv1UzO6yCqw_OSp_iwrd-Y"},
{"content":{"body":"being synchronous is really important; it also comes up for signals. I feel like, given that we have promises, as well as lots of parts of module loading, TC39 just has to be able to reason about what's synchronous and asynchronous, and take requirements from its host environments for that.","m.mentions":{},"msgtype":"m.text"},"ts":1709688910285,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FbnClJ5E9rYL8_5x4vk58CfIzZ5clukU7e8IU5_fERk"},
{"content":{"body":"not saying things have to happen in TC39, just that we really need to be capable of reasoning about this, and not dismissing arguments about these requirements","m.mentions":{},"msgtype":"m.text"},"ts":1709688947024,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$LCFgqFu0kPmIbvd0fM7vQE9gqKGx69CYxnCQ_mc2F2o"},
{"content":{"body":" * not saying all related features have to happen in TC39, just that we really need to be capable of reasoning about this, and not dismissing arguments about these requirements","m.mentions":{},"m.new_content":{"body":"not saying all related features have to happen in TC39, just that we really need to be capable of reasoning about this, and not dismissing arguments about these requirements","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$LCFgqFu0kPmIbvd0fM7vQE9gqKGx69CYxnCQ_mc2F2o","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709688965268,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9NJX0ieZKtWpKTF-IS7zlgIw2cGO38q26tTpXow9oWo"},
{"content":{"body":"anyway, so, I think most proposals aren't necessarily \"for\" anything in particular. Promises were for async functions, and Observables (IIUC) are for events. A lot of web stuff is sort of \"obviously\" for the web. AbortController was built for `fetch` but is useful broadly, and is a good example of how picking venue based on the immediate need can be bad (contra everything else I'm saying here)","format":"org.matrix.custom.html","formatted_body":"anyway, so, I think most proposals aren't necessarily \"for\" anything in particular. Promises were for async functions, and Observables (IIUC) are for events. A lot of web stuff is sort of \"obviously\" for the web. AbortController was built for <code>fetch</code> but is useful broadly, and is a good example of how picking venue based on the immediate need can be bad (contra everything else I'm saying here)","m.mentions":{},"msgtype":"m.text"},"ts":1709688973514,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ErYRzgeIgI8RP_0C5A96ItYgxvzWz9PksB5y2mU5wUY"},
{"content":{"body":"in the absence of other constraints, most general purpose computing things should be in JS, IMO - for example, I think it's silly that TextEncoder is in the web platform, and am glad we're getting base64 in JS","m.mentions":{},"msgtype":"m.text"},"ts":1709689046977,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ixoS7gGtAotL-0dsKiKTZVabu4g7OTkXwx1TwZZBI30"},
{"content":{"body":"so the question is, to what extent are Observables a general purpose thing, vs being mainly for events? and I guess that depends on your perspective. I know a lot of people like observables for general purpose computing. personally I expect 99%+ of my use of them will be events.","m.mentions":{},"msgtype":"m.text"},"ts":1709689105616,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vqf5wnTDkCRrmg4gmtrJShQ_uo_Q6fqQovemwwW6VcI"},
{"content":{"body":"yeah I agree that it would make sense for a feature which is supposed to be providing mostly better usability for events as part of DOM, and that is one possible direction for Observables. Definitely not the original one, though.","m.mentions":{},"msgtype":"m.text"},"ts":1709689120749,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PJVCSJEDkXUt2x4GQGqCf_OoD9CuURhNcch3mv-9gao"},
{"content":{"body":" * yeah I agree that it would make sense for a feature which is supposed to be providing mostly better usability for Events as part of DOM, and that is one possible direction for Observables. Definitely not the original one, though.","m.mentions":{},"m.new_content":{"body":"yeah I agree that it would make sense for a feature which is supposed to be providing mostly better usability for Events as part of DOM, and that is one possible direction for Observables. Definitely not the original one, though.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$PJVCSJEDkXUt2x4GQGqCf_OoD9CuURhNcch3mv-9gao","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1709689129185,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$bEgsjWJ0IIiJL22fl-QZDX1vKhDF8t981nocGcQbxqk"},
{"content":{"body":"the direction that Lea is suggesting is more broad (general pub/sub). Also the original direction is more broad (generalizing Promises!)","m.mentions":{},"msgtype":"m.text"},"ts":1709689197727,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$n_AFcM9cxWtK8QWDjOIqmOZdF_z0k3KRYxEJZWiN8ZU"},
{"content":{"body":"honestly I'm kinda scared of non-trivial usages of Observables, and yeah the trivial usages are more like making events nicer","m.mentions":{},"msgtype":"m.text"},"ts":1709689251441,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$op8DElSBGDJXLpPTGBmfsa9Xy3RLo0Vz7rqFzBNtrfg"}
]