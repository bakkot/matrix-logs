[
{"content":{"body":"tolmasky: what's the use case? it might be relevant for the get-intrinsic proposal :-)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">tolmasky</a>: what's the use case? it might be relevant for the get-intrinsic proposal :-)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"tolmasky: what's the use case? it might be relevant for the get-intrinsic proposal :-)","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@tolmasky:matrix.org\">tolmasky</a>: what's the use case? it might be relevant for the get-intrinsic proposal :-)","mimetype":"text/html"}]},"ts":1669858157431,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$t6dMMNslT4SHsoI1C5lGjaX9JDlvzrzyZ5jMXlLSiUQ"},
{"content":{"body":"Is there a new cancelable promise proposal? Was going through and refreshing myself on proposals and noticed the last one was withdrawn recently.","msgtype":"m.text","org.matrix.msc1767.text":"Is there a new cancelable promise proposal? Was going through and refreshing myself on proposals and noticed the last one was withdrawn recently."},"ts":1669874837342,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$tw7pZULlQDvBhy7WLFl4IsCuSiBFhIHUKKD2AyLQXL0"},
{"content":{"body":"> <@kriskowal:matrix.org> To wit, if we renamed `module` to something like `moduleInstance`, it would also make sense to use `moduleInstace {}` as the introducer for module expressions.\n\nfor some reason this started looking like an F# computation expression to me","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%248ZrS91gE16F5PqE26huyCI3uIM-gJCb8JLb7w8QUdtU\">In reply to</a> <a href=\"https://matrix.to/#/@kriskowal:matrix.org\">@kriskowal:matrix.org</a><br>To wit, if we renamed <code>module</code> to something like <code>moduleInstance</code>, it would also make sense to use <code>moduleInstace {}</code> as the introducer for module expressions.</blockquote></mx-reply>for some reason this started looking like an F# computation expression to me","m.relates_to":{"m.in_reply_to":{"event_id":"$8ZrS91gE16F5PqE26huyCI3uIM-gJCb8JLb7w8QUdtU"}},"msgtype":"m.text"},"ts":1669876359638,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$dVC0P_R1AQJh1ZOJuMIjpAm2gITna7HW-zvMGWFVKMY"},
{"content":{"body":"> <@ljharb:matrix.org> That’s not what they do, that’s what the modules are.\n\nIIUC, the objection you’re making here is more on the grounds of, for example, `import * as foo from './foo.css' with { type: 'css' }` having the capability of `foo` being a different module record than `import * as foo from './foo.css' with { type: 'cssmodule' }` despite the URLs being equal?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24BgXd7IXnlyKrzejxulzclQDiQ1apszyTbnGgE_TLkLk\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>That’s not what they do, that’s what the modules are.</blockquote></mx-reply>IIUC, the objection you’re making here is more on the grounds of, for example, <code>import * as foo from './foo.css' with { type: 'css' }</code> having the capability of <code>foo</code> being a different module record than <code>import * as foo from './foo.css' with { type: 'cssmodule' }</code> despite the URLs being equal?","m.relates_to":{"m.in_reply_to":{"event_id":"$BgXd7IXnlyKrzejxulzclQDiQ1apszyTbnGgE_TLkLk"}},"msgtype":"m.text"},"ts":1669876749632,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$M1TteH9C2QUYl2_IfjOSH7IhqcyOCWBBMnuJNa1-eZg"},
{"content":{"body":"Jessidhia: yes, exactly right - the spec for assertions forbids those from being a different module record.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jessidhia:matrix.org\">Jessidhia</a>: yes, exactly right - the spec for assertions forbids those from being a different module record.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Jessidhia: yes, exactly right - the spec for assertions forbids those from being a different module record.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jessidhia:matrix.org\">Jessidhia</a>: yes, exactly right - the spec for assertions forbids those from being a different module record.","mimetype":"text/html"}]},"ts":1669885698102,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LCr-dIf4L5qcJaXqynWAJyhsb1_ldu0N7Vui3vGrPDs"}
]