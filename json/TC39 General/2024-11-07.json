[
{"content":{"body":"yes. I think that gives more insightful data. you could also give `select all that apply` for the different types of transformation. (if those distinctions are interesting to the surveyor in a similar way as the lifecycle distinctions)","format":"org.matrix.custom.html","formatted_body":"yes. I think that gives more insightful data. you could also give <code>select all that apply</code> for the different types of transformation. (if those distinctions are interesting to the surveyor in a similar way as the lifecycle distinctions)","m.mentions":{},"msgtype":"m.text"},"ts":1730937609507,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$K2S174M34vMDy8_YwMJK4dFwMSMTBpCo4ZBvAFwEnk8"},
{"content":{"body":" * anyway continuing to workshop question wording:\n\n> What fraction of the time do you run your code through a transformation step, such as Babel, bundling, removing types etc, before running it in browsers in production?\n\n> As above, but during development?\n\n> As above, but for running JS server-side? If your runtime supports stripping TS types automatically as part of executing, that doesn't count.","format":"org.matrix.custom.html","formatted_body":" * <p>anyway continuing to workshop question wording:</p>\n<blockquote>\n<p>What fraction of the time do you run your code through a transformation step, such as Babel, bundling, removing types etc, before running it in browsers in production?</p>\n</blockquote>\n<blockquote>\n<p>As above, but during development?</p>\n</blockquote>\n<blockquote>\n<p>As above, but for running JS server-side? If your runtime supports stripping TS types automatically as part of executing, that doesn't count.</p>\n</blockquote>\n","m.mentions":{},"m.new_content":{"body":"anyway continuing to workshop question wording:\n\n> What fraction of the time do you run your code through a transformation step, such as Babel, bundling, removing types etc, before running it in browsers in production?\n\n> As above, but during development?\n\n> As above, but for running JS server-side? If your runtime supports stripping TS types automatically as part of executing, that doesn't count.","format":"org.matrix.custom.html","formatted_body":"<p>anyway continuing to workshop question wording:</p>\n<blockquote>\n<p>What fraction of the time do you run your code through a transformation step, such as Babel, bundling, removing types etc, before running it in browsers in production?</p>\n</blockquote>\n<blockquote>\n<p>As above, but during development?</p>\n</blockquote>\n<blockquote>\n<p>As above, but for running JS server-side? If your runtime supports stripping TS types automatically as part of executing, that doesn't count.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$m36Mb98STelo9JqFnIF1GCAmyQIJJDXd7Z8XmmPL2-0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1730937614214,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$F9shpAvuJjAhN-I7pZmxxPZUb-TevK2wlS5pKCaxKm4"},
{"content":{"body":"for the JS0 discussion, why is it interesting to get server-side data?","m.mentions":{},"msgtype":"m.text"},"ts":1730937638735,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2zjJ6-tr2fM6PC2zIe_2uE0o9_LaNSUgCx38IBXQQbw"},
{"content":{"body":"The server-side one is mostly just because once you've asked about half the time then you might as well ask about the other half","m.mentions":{},"msgtype":"m.text"},"ts":1730937685093,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ORAFKUaLoGNhaSEYiLPvBSj1OZILln5o39qMzgzGNxU"},
{"content":{"body":"since the server runtimes _can_ just run transforms on startup since the performance tradeoff space is so different, and that they're already doing so today, a JSSugar/JS0 distinction doesn't apply to servers","format":"org.matrix.custom.html","formatted_body":"since the server runtimes <em>can</em> just run transforms on startup since the performance tradeoff space is so different, and that they're already doing so today, a JSSugar/JS0 distinction doesn't apply to servers","m.mentions":{},"msgtype":"m.text"},"ts":1730937691098,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jiStvjU5rLxw40X6onLy30RTVhK88GF4NgoliArbzUo"},
{"content":{"body":"ah","m.mentions":{},"msgtype":"m.text"},"ts":1730937691782,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$A8WKaKy1EJol1oNCYWWvc1yOIG86q-QMHxYl7PrEXlY"},
{"content":{"body":"and some fraction of people will not have read the \"in browsers\" part from the first question until they get to the third question and notice that they're being asked again","m.mentions":{},"msgtype":"m.text"},"ts":1730937717554,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ew2cwACvKGTAEQuas6FSI-fv4oBQq_puG8smxNpQL5E"},
{"content":{"body":"fair","m.mentions":{},"msgtype":"m.text"},"ts":1730937723221,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$4YVNZb-PzpoMA7XRapJqnLMEmp5nrsOEEO1mCenK_BU"},
{"content":{"body":"> <@shuyuguo:matrix.org> for the JS0 discussion, why is it interesting to get server-side data?\n\nThe interesting part here, as I mentioned in plenary, is that JS0 potentially makes a big difference to server-side runtimes based on the category of compilation we are pitching.\n\nAsking runtimes to do whole-program analysis prior to executing any code is a big ask they may not be prepared to accept.\n\nAn interesting question would be how many server-side users wait for whole-program compilation prior to running today. As opposed to minimal on-demand transpilation, e.g. TS-node or Deno.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$2zjJ6-tr2fM6PC2zIe_2uE0o9_LaNSUgCx38IBXQQbw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br />for the JS0 discussion, why is it interesting to get server-side data?</blockquote></mx-reply><p>The interesting part here, as I mentioned in plenary, is that JS0 potentially makes a big difference to server-side runtimes based on the category of compilation we are pitching.</p>\n<p>Asking runtimes to do whole-program analysis prior to executing any code is a big ask they may not be prepared to accept.</p>\n<p>An interesting question would be how many server-side users wait for whole-program compilation prior to running today. As opposed to minimal on-demand transpilation, e.g. TS-node or Deno.</p>","m.relates_to":{"m.in_reply_to":{"event_id":"$2zjJ6-tr2fM6PC2zIe_2uE0o9_LaNSUgCx38IBXQQbw"}},"msgtype":"m.text"},"ts":1730938323859,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$aFCsLxHAef3toSmoEptZdj2zq1oYaH0k6yMWhq5H0Hc"},
{"content":{"body":"Very few babel transforms have ever required whole-program analysis, IIRC","m.mentions":{},"msgtype":"m.text"},"ts":1730938503999,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-3HB5qjDfimNRVRjcTKwb4NpadKmIHbq3RijqGOcT5s"},
{"content":{"body":"except bundling, of course","m.mentions":{},"msgtype":"m.text"},"ts":1730938509244,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OQh713cyoT8zbKAyvNPsm6Au95qQNvJXPuEwqkZ7_fk"},
{"content":{"body":"> <@robpalme:matrix.org> The interesting part here, as I mentioned in plenary, is that JS0 potentially makes a big difference to server-side runtimes based on the category of compilation we are pitching.\n> \n> Asking runtimes to do whole-program analysis prior to executing any code is a big ask they may not be prepared to accept.\n> \n> An interesting question would be how many server-side users wait for whole-program compilation prior to running today. As opposed to minimal on-demand transpilation, e.g. TS-node or Deno.\n\nagreed that'd be interesting, but that reads to me like JS0 requires whole-program analysis or something","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$aFCsLxHAef3toSmoEptZdj2zq1oYaH0k6yMWhq5H0Hc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@robpalme:matrix.org\">@robpalme:matrix.org</a><br><p>The interesting part here, as I mentioned in plenary, is that JS0 potentially makes a big difference to server-side runtimes based on the category of compilation we are pitching.</p>\n<p>Asking runtimes to do whole-program analysis prior to executing any code is a big ask they may not be prepared to accept.</p>\n<p>An interesting question would be how many server-side users wait for whole-program compilation prior to running today. As opposed to minimal on-demand transpilation, e.g. TS-node or Deno.</p></blockquote></mx-reply>agreed that'd be interesting, but that reads to me like JS0 requires whole-program analysis or something","m.mentions":{"user_ids":["@robpalme:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$aFCsLxHAef3toSmoEptZdj2zq1oYaH0k6yMWhq5H0Hc"}},"msgtype":"m.text"},"ts":1730938513690,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yLMM5BwX6rPT-oa5mGa59IlHi3jKyoir6i4vmiVTeNc"},
{"content":{"body":"which it doesn't","m.mentions":{},"msgtype":"m.text"},"ts":1730938518708,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CEH7aaMsOCwzkDO_CxaVeercXApHg4jrccf_WItNudM"},
{"content":{"body":"I would be surprised if that changes even in a JS0 world","m.mentions":{},"msgtype":"m.text"},"ts":1730938519106,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tnpnOB7r4gl6hifeoTt5BeCj1x7TrZvTv28c-0n-2ds"},
{"content":{"body":"i know the TC39 discussion was focused on \"is there meaningfully more optimization opportunity here\", but that's not the primary motivation at all","m.mentions":{},"msgtype":"m.text"},"ts":1730938550763,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$s4EChILotyiHMe5NqfzeeQ7LdknHNCJNrLYbmAr5Ibo"},
{"content":{"body":"i also think the whole-program analysis thing may be a distraction anyhow. if i could represent i'd reframe it as \"if we designed new features with good transpiler output as a goal, what's the likelihood we'll get new features with good transpiler output?\"","m.mentions":{},"msgtype":"m.text"},"ts":1730938707191,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$yieSk6mPu-ry-1v_YOFRE-2V20kNDajwwviMRp4romg"},
{"content":{"body":"I wonder what generators would have looked like if that goal existed back then. The transpilation is huge (regenerator). ","format":"org.matrix.custom.html","formatted_body":"I wonder what generators would have looked like if that goal existed back then. The transpilation is huge (regenerator).","msgtype":"m.text"},"ts":1730939246930,"senderName":"Rob Palmer","senderId":"@robpalme:matrix.org","id":"$JnLgV1l-GPgmwZ8DM1IixXD0T5TlULcifAK5lJTbPQM"},
{"content":{"body":"regenerator was not setting out to be small","m.mentions":{},"msgtype":"m.text"},"ts":1730943080864,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$40-Zw8fIHCvgv6832jV1NrDnqMBBNLSALwyv5MdU8R8"},
{"content":{"body":"TS does a much better job generating reasonable-sized output for generators","m.mentions":{},"msgtype":"m.text"},"ts":1730943091148,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0GKeNtZfOW0wzR_OP7sS0gxovVdrPQPD1vAdbiHnXl4"},
{"content":{"body":" * TS does a much better job generating reasonable-sized downleveling for generators","m.mentions":{},"m.new_content":{"body":"TS does a much better job generating reasonable-sized downleveling for generators","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$0GKeNtZfOW0wzR_OP7sS0gxovVdrPQPD1vAdbiHnXl4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1730943098382,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dPH_4MhbEULBPzJZ5RmKt6ccuGT4nrzR54XwV5CLb30"},
{"content":{"body":"the part that is most foggy to me is how interactive debugging will work.\n\nSuppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).\n\nwhen stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be in compatible.\nsuggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","format":"org.matrix.custom.html","formatted_body":"the part that is most foggy to me is how interactive debugging will work.<br /><br />Suppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).<br /><br />when stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be in compatible.<br />suggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","msgtype":"m.text"},"ts":1730956004836,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$CicT70zwOMlH3Pv2KuNpEP8m2Ciffcr6r9wwrUJ1nbI"},
{"content":{"body":"* the part that is most foggy to me is how interactive debugging will work.\n\nSuppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).\n\nwhen stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be incompatible.\nsuggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","format":"org.matrix.custom.html","formatted_body":"* the part that is most foggy to me is how interactive debugging will work.<br /><br />Suppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).<br /><br />when stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be incompatible.<br />suggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","m.new_content":{"body":"the part that is most foggy to me is how interactive debugging will work.\n\nSuppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).\n\nwhen stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be incompatible.\nsuggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","format":"org.matrix.custom.html","formatted_body":"the part that is most foggy to me is how interactive debugging will work.<br /><br />Suppose private fields had landed as JSsugar and were always transformed to weakmaps (ignoring that the performance of this is subpar vs real fields).<br /><br />when stopped on a breakpoint how would the repl handle the sugar? To transform it needs to align with how the original transform worked. Two different transforms could be incompatible.<br />suggesting we need a standard emit and/or standard metadata that allows transforms to align. All doable, but is that what tc39 will do?","msgtype":"m.text"},"m.relates_to":{"event_id":"$CicT70zwOMlH3Pv2KuNpEP8m2Ciffcr6r9wwrUJ1nbI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1730956055029,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$h4sRy_tsN8D7rdI4ZNxRVO1SRGyHlnJPzCPJKdBTUwQ"},
{"content":{"body":"Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would be definitely be solved.","format":"org.matrix.custom.html","formatted_body":"Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would be definitely be solved.","msgtype":"m.text"},"ts":1730956338976,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$XsZVZL2sFN95yeNOB7ps1mOzPoDwC8Li40YT4iU-YrM"},
{"content":{"body":"* Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would definitely be solved.","format":"org.matrix.custom.html","formatted_body":"* Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would definitely be solved.","m.new_content":{"body":"Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would definitely be solved.","format":"org.matrix.custom.html","formatted_body":"Similar thoughts for repl auto-complete. Engines do a great job today of proving auto complete on half written repl input. Similar challenge here to keep this DX in a more sugared world. Again solvable but not a given it would definitely be solved.","msgtype":"m.text"},"m.relates_to":{"event_id":"$XsZVZL2sFN95yeNOB7ps1mOzPoDwC8Li40YT4iU-YrM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1730956349657,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$86TOxEwNENPvLOuq8qhob4A2F-6crk8eLwqlgGdUB-8"},
{"content":{"body":"that's certainly a lot of feedback…","m.mentions":{},"msgtype":"m.text"},"ts":1730959537171,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$M3CxWsjE20tyCfzJGJNGCGBjt7wNfX3qKI8E6J1CNu4"},
{"content":{"body":"for me the core of the question is \"do you use a build step\", independently of what that build step might be","m.mentions":{},"msgtype":"m.text"},"ts":1730959755543,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$VfuzwRLenk_3NaEMT1lterEPBaBOX_8vEC6I1aw49gI"},
{"content":{"body":"and I think we can restrict it to code that runs in the browser and in production if we want to narrow down the contexte","m.mentions":{},"msgtype":"m.text"},"ts":1730959779112,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$Y_QXKD9Pz66bZv9Gx9I01EuPqoPLmhFIqJ05pJLAjxE"},
{"content":{"body":" * and I think we can restrict it to code that runs in the browser and in production if we want to narrow down the context","m.mentions":{},"m.new_content":{"body":"and I think we can restrict it to code that runs in the browser and in production if we want to narrow down the context","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Y_QXKD9Pz66bZv9Gx9I01EuPqoPLmhFIqJ05pJLAjxE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1730959922177,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$Wok7PdUHDWnQN467cnRLZSimY6zu7OzOb5KsNEVInrQ"},
{"content":{"body":"I would like to keep the \"0 to 100\" format if possible, currently these questions don't have any special visualization but if I have enough of them I might create a dedicated chart","m.mentions":{},"msgtype":"m.text"},"ts":1730959988894,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$Hnt4a3VPTpeSi6jcZIkZgErFac6Blr7TXSzBrZCqLAw"},
{"content":{"body":"so, with all that in mind I would suggest something like:\n\n> What proportion of the JavaScript code you write for the browser goes through a build step?\n\nWith a clarifying line of:\n\n> Any bundled, minified, or otherwise transformed code, as opposed to code directly executed by the browser.","format":"org.matrix.custom.html","formatted_body":"<p>so, with all that in mind I would suggest something like:</p>\n<blockquote>\n<p>What proportion of the JavaScript code you write for the browser goes through a build step?</p>\n</blockquote>\n<p>With a clarifying line of:</p>\n<blockquote>\n<p>Any bundled, minified, or otherwise transformed code, as opposed to code directly executed by the browser.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1730960459483,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$SjyGzd9KIgtQErJyaTKDss_zu6iAN0Dh3x8xckuNQiY"},
{"content":{"body":"I do think I will need to leave the term \"compiled\" in the legend though, as in \"0% compiled\" and \"100% compiled\". \"0% built\" just sounds weird?","m.mentions":{},"msgtype":"m.text"},"ts":1730960585495,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$j6MJVy5SmoHAhw45uZfVOO6DN6H5fI6I7LeHO1Uh02U"},
{"content":{"body":"or I suppose I could just leave it as \"0%\" and \"100%\" but then it's a little more ambiguous","m.mentions":{},"msgtype":"m.text"},"ts":1730960647059,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$sEwELRcWLs1SQzElbyNELNnzjckIrSMIZQBFrSnjTwc"},
{"content":{"body":"> <@sachag:matrix.org> so, with all that in mind I would suggest something like:\n> \n> > What proportion of the JavaScript code you write for the browser goes through a build step?\n> \n> With a clarifying line of:\n> \n> > Any bundled, minified, or otherwise transformed code, as opposed to code directly executed by the browser.\n\nlet me ask you this question:\n\nNB: this is _not_ hypothetical.\n\nif I write code which, for months, is not 'compiled' in any way, we're developing, testing, internal deploying, and so on.  but no 'build'.  then, when we are all done and dusted, there is a build.  bundle, minify, packaged into debian, onto an OS disk image, and devices reimaged with the build\n\nhow would you like me to answer your question?  100% compiled because at some point in the SDLC we generated an OS build ?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$SjyGzd9KIgtQErJyaTKDss_zu6iAN0Dh3x8xckuNQiY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sachag:matrix.org\">@sachag:matrix.org</a><br><p>so, with all that in mind I would suggest something like:</p>\n<blockquote>\n<p>What proportion of the JavaScript code you write for the browser goes through a build step?</p>\n</blockquote>\n<p>With a clarifying line of:</p>\n<blockquote>\n<p>Any bundled, minified, or otherwise transformed code, as opposed to code directly executed by the browser.</p>\n</blockquote>\n</blockquote></mx-reply><p>let me ask you this question:</p>\n<p>NB: this is <em>not</em> hypothetical.</p>\n<p>if I write code which, for months, is not 'compiled' in any way, we're developing, testing, internal deploying, and so on.  but no 'build'.  then, when we are all done and dusted, there is a build.  bundle, minify, packaged into debian, onto an OS disk image, and devices reimaged with the build</p>\n<p>how would you like me to answer your question?  100% compiled because at some point in the SDLC we generated an OS build ?</p>\n","m.mentions":{"user_ids":["@sachag:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$SjyGzd9KIgtQErJyaTKDss_zu6iAN0Dh3x8xckuNQiY"}},"msgtype":"m.text"},"ts":1730961073049,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$jGb2NnLzBuqwFSRVX55dxLE6o73ZqZfbKI4BBEPamFA"},
{"content":{"body":"so in which form does the code hit the browser?","m.mentions":{},"msgtype":"m.text"},"ts":1730961154915,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$oSKhJxafSSawsKrqXTFoHp9nDUt0WO-REty6wb7Ye1A"},
{"content":{"body":"in its final use case I mean","m.mentions":{},"msgtype":"m.text"},"ts":1730961208279,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$SOCSdo8GvizlNQRD9_OEsaJp-NlF7f97OdK4hYf32Es"},
{"content":{"body":"all of the above","m.mentions":{},"msgtype":"m.text"},"ts":1730961230485,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$XUZASsRi5jsEoJUZB6guCIAFQUd-W6McSMdsKu6BE7c"},
{"content":{"body":"in production some is minified and/or bundled, some is not","m.mentions":{},"msgtype":"m.text"},"ts":1730961257948,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$il_vmt86fT0yVXQ_6LV4I-Yv9j5OxTuo-qaZiv7_2kQ"}
]