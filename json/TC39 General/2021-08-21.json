[
{"content":{"body":"we seem to be pretty over the 2-day time limit this time, if anyone think they can squeeze their items down into a smaller timeslot","msgtype":"m.text"},"ts":1629515891736,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$fiCkHblj5frdZa_q1rqsntCU-5MlhSYGTbaCkqF8cdQ"},
{"content":{"body":"Hi I have a syntax question","msgtype":"m.text"},"ts":1629533407300,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$vgL-fCi1WYYtB7Mrfu3kXN3fVDvw9N9eqO2B3__NC7o"},
{"content":{"body":"Does `super()` only valid in class constructors?","format":"org.matrix.custom.html","formatted_body":"Does <code>super()</code> only valid in class constructors?","msgtype":"m.text"},"ts":1629533425589,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$j0pFKatxsfYzIsS_bXG-vOyV1uc-4kNB3PyfzptCDpg"},
{"content":{"body":"And does `new.target` isn't possible to be a generator (async or not) function?","format":"org.matrix.custom.html","formatted_body":"And does <code>new.target</code> isn't possible to be a generator (async or not) function?","msgtype":"m.text"},"ts":1629533461498,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$qUkcURML-iRVBScZ9qnOaOlxJQGZ20rgx4fxZu4hpSs"},
{"content":{"body":"Does anybody understand what https://github.com/mdn/content/issues/8118 is asking?","msgtype":"m.text"},"ts":1629534457910,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$JfqCE9zoBKIvFLm8iV8MtLSCHv0Zu8EyqATry_7m0cI"},
{"content":{"body":"Does Array.from treat it as an ArrayLike first or an iterable first? If you provide it an object that's both, which does it use to convert? ","msgtype":"m.text"},"ts":1629549726117,"senderName":"James DiGioia","senderId":"@jamesdigioia:matrix.org","id":"$tWcLmbz5dNWlsWpOjeQExcWjuio_aYOeF6mv-P0K2Fo"},
{"content":{"body":"That's my guess, anyway ","msgtype":"m.text"},"ts":1629549744752,"senderName":"James DiGioia","senderId":"@jamesdigioia:matrix.org","id":"$pc7YNG9xAmsIPVhdTWnFXWJUZdFaYJ65D123HPfuYeE"},
{"content":{"body":"Jack Works: `super()` is indeed only valid in class constructors (with the caveat that `super()` also works in nested arrows in a class constructor, as in `(class extends Object { constructor(){ () => super() } })`)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: <code>super()</code> is indeed only valid in class constructors (with the caveat that <code>super()</code> also works in nested arrows in a class constructor, as in <code>(class extends Object { constructor(){ () =&gt; super() } })</code>)","msgtype":"m.text"},"ts":1629563245214,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dlRYyP2isBOxXNtWdsZ8_vojrINzKwHZoaxlZ3tGOuk"},
{"content":{"body":"but `new.target` is legal in generators","format":"org.matrix.custom.html","formatted_body":"but <code>new.target</code> is legal in generators","msgtype":"m.text"},"ts":1629563250461,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8Uq8Qbqd60ZiwW8k_sLaBscqECpZ9y07G8AKerDNgIM"},
{"content":{"body":"> <@bakkot:matrix.org> but `new.target` is legal in generators\n\nIt's legal but generator function cannot be the third parameter of Reflect.construct","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$8Uq8Qbqd60ZiwW8k_sLaBscqECpZ9y07G8AKerDNgIM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />but <code>new.target</code> is legal in generators</blockquote></mx-reply>It's legal but generator function cannot be the third parameter of Reflect.construct","m.relates_to":{"m.in_reply_to":{"event_id":"$8Uq8Qbqd60ZiwW8k_sLaBscqECpZ9y07G8AKerDNgIM"}},"msgtype":"m.text"},"ts":1629563580246,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$QT1SO7m-b_7Pm7AxVJhChyo-QVd7nJTAX0BZjmkJ6Oo"},
{"content":{"body":"you can't construct a shorthand method either, and it's legal there too","msgtype":"m.text"},"ts":1629565821018,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8wgeLmsBSw3aQdc03n972UcppU5Kdi2CtzVfzlFwuko"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1629565825327,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Hk7RPQhwMNqv3LGZ3eN5MBVsB0yWAKLDIBfm2YeDQS0"},
{"content":{"body":"iirc it's legal in shorthand methods tho because the plan (at the time) was to have [[HomeObject]] be alterable, and have `super` point to that","format":"org.matrix.custom.html","formatted_body":"iirc it's legal in shorthand methods tho because the plan (at the time) was to have [[HomeObject]] be alterable, and have <code>super</code> point to that","msgtype":"m.text"},"ts":1629578960812,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1McFsLCxSn0jZgO8qgxWmYVpEKRGkjIMxjLpkJEn7bs"},
{"content":{"body":"i don't remember anyone talking about standalone generator functions in that context","msgtype":"m.text"},"ts":1629578985979,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2FgfJ3HUEcwjzJuVlayVJD0YrWpIBsIHZo7nNW8vsQg"}
]