[
{"content":{"body":"It is intentional that doing promise.then() removes it from the unhandled promise rejection handlers list, yeah?","msgtype":"m.text","org.matrix.msc1767.text":"It is intentional that doing promise.then() removes it from the unhandled promise rejection handlers list, yeah?"},"ts":1672326770997,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$vgnkhqAiGElFKmEO_iyEwaVtgvjtV5oNkixQOfJ-8cI"},
{"content":{"body":"(as in, literally, passing nothing in for either fulfilled or rejected)","msgtype":"m.text","org.matrix.msc1767.text":"(as in, literally, passing nothing in for either fulfilled or rejected)"},"ts":1672326783741,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$e0QPeQdRoyG5xNszIHCiZmZ2v3VgZ69uhq2pCjxfSLM"},
{"content":{"body":"I presume the promise returned from that .then is added to the unhandled promise rejection list though?","msgtype":"m.text"},"ts":1672328547617,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$Jhgl1cTWYCvMD6kLfp8uXSZX4wdBTzZoW6RdpbS6OzY"},
{"content":{"body":"Correct","msgtype":"m.text","org.matrix.msc1767.text":"Correct"},"ts":1672328874168,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$d4M_kQea0A1jD5rv6vkzQ9ldOgE_Q4PXYOcuGaIfQ0Q"},
{"content":{"body":"https://runkit.com/tolmasky/promise-rejection-with-empty-then","msgtype":"m.text","org.matrix.msc1767.text":"https://runkit.com/tolmasky/promise-rejection-with-empty-then"},"ts":1672328933312,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$XBjBMkm-4DbiRu1pjd2iFH5SB4sEmx4Oegmi2ouuYtM"},
{"content":{"body":"Probably worth mentioning here: a better way to observe unhandled rejections would be to show promises with unhandled rejections and then hide them when they’re handled, rather than showing them only when we can prove they won’t ever be handled (finalization) or jumping to the conclusion that they won’t be handled if the handler isn’t registered in the turn of creation. It’s similarly useful to show and hide _pending_ promises, since they can also participate in data-lock cycles. Q provides hooks for these events, for which I’d prototyped a browser debugger extension many years ago. I very much wish I’d had the capacity to carry that over the line!","format":"org.matrix.custom.html","formatted_body":"Probably worth mentioning here: a better way to observe unhandled rejections would be to show promises with unhandled rejections and then hide them when they’re handled, rather than showing them only when we can prove they won’t ever be handled (finalization) or jumping to the conclusion that they won’t be handled if the handler isn’t registered in the turn of creation. It’s similarly useful to show and hide <em>pending</em> promises, since they can also participate in data-lock cycles. Q provides hooks for these events, for which I’d prototyped a browser debugger extension many years ago. I very much wish I’d had the capacity to carry that over the line!","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Probably worth mentioning here: a better way to observe unhandled rejections would be to show promises with unhandled rejections and then hide them when they’re handled, rather than showing them only when we can prove they won’t ever be handled (finalization) or jumping to the conclusion that they won’t be handled if the handler isn’t registered in the turn of creation. It’s similarly useful to show and hide _pending_ promises, since they can also participate in data-lock cycles. Q provides hooks for these events, for which I’d prototyped a browser debugger extension many years ago. I very much wish I’d had the capacity to carry that over the line!","mimetype":"text/plain"},{"body":"Probably worth mentioning here: a better way to observe unhandled rejections would be to show promises with unhandled rejections and then hide them when they’re handled, rather than showing them only when we can prove they won’t ever be handled (finalization) or jumping to the conclusion that they won’t be handled if the handler isn’t registered in the turn of creation. It’s similarly useful to show and hide <em>pending</em> promises, since they can also participate in data-lock cycles. Q provides hooks for these events, for which I’d prototyped a browser debugger extension many years ago. I very much wish I’d had the capacity to carry that over the line!","mimetype":"text/html"}]},"ts":1672329427575,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$yDF_aQVuq7zcxI61wjQ64SqcrWmMQFKFbys6dYVYZCY"},
{"content":{"body":"unhandled promise rejections in browsers are surfaced to code, not just to the debugger","msgtype":"m.text","org.matrix.msc1767.text":"unhandled promise rejections in browsers are surfaced to code, not just to the debugger"},"ts":1672329502164,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2_RlEO4o8Jv5a0Bt04XAW0d-ufpx235pKzSo4x87CpA"},
{"content":{"body":"It’s analogously interesting to visualize async iterators as pending promises that produce intermediate events. Those events have frequencies.","msgtype":"m.text","org.matrix.msc1767.text":"It’s analogously interesting to visualize async iterators as pending promises that produce intermediate events. Those events have frequencies."},"ts":1672329509033,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Qfpb8odI9TdYeaR9G8MgDZg3HIYprpEiQ4mEOlGFJMg"},
{"content":{"body":"and you certainly don't want to surface to code \"here are all of the currently-unhandled promises\"","msgtype":"m.text","org.matrix.msc1767.text":"and you certainly don't want to surface to code \"here are all of the currently-unhandled promises\""},"ts":1672329516992,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4wiJAm3PivK_GvlamnOfHYz67uhWOWEZgnm1Xsebd9A"},
{"content":{"body":"Agreed.","msgtype":"m.text","org.matrix.msc1767.text":"Agreed."},"ts":1672329534798,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$uFEOY6cEfxYaXKdLRkk_deOf2gjU0k8KrJENSzrzBA4"}
]