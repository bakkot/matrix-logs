[
{"content":{"body":"> <@bakkot:matrix.org> have been thinking about this some: I think it would make more sense as a build step.\n> \n> e.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n> \n> that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever\n\nlibraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n</blockquote></mx-reply>libraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","m.relates_to":{"m.in_reply_to":{"event_id":"$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> have been thinking about this some: I think it would make more sense as a build step.\n> \n> e.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n> \n> that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever\n\nlibraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n</blockquote></mx-reply>libraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","mimetype":"text/html"}]},"ts":1648235105515,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$op0HWdyyxt9VUloA9r0jIDYXZuqFcaqlbQm5IRTXbSk"},
{"content":{"body":"Embedding the resolution logic into a runtime library would be much worse simply because I don't think most systems would have \"enough\" to resolve on","msgtype":"m.text","org.matrix.msc1767.text":"Embedding the resolution logic into a runtime library would be much worse simply because I don't think most systems would have \"enough\" to resolve on"},"ts":1648235154182,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$4IFnNlUKFfDvC808EGOKQMt-QzO6xmKpy5Tu64OnwTU"}
]