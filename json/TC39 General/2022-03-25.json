[
{"content":{"body":"> <@bakkot:matrix.org> have been thinking about this some: I think it would make more sense as a build step.\n> \n> e.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n> \n> that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever\n\nlibraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n</blockquote></mx-reply>libraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","m.relates_to":{"m.in_reply_to":{"event_id":"$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@bakkot:matrix.org> have been thinking about this some: I think it would make more sense as a build step.\n> \n> e.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n> \n> that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever\n\nlibraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n</blockquote></mx-reply>libraries that rely on reified types today tend to rely on some extra build step, and it's generally not too bad","mimetype":"text/html"}]},"ts":1648235105515,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$op0HWdyyxt9VUloA9r0jIDYXZuqFcaqlbQm5IRTXbSk"},
{"content":{"body":"Embedding the resolution logic into a runtime library would be much worse simply because I don't think most systems would have \"enough\" to resolve on","msgtype":"m.text","org.matrix.msc1767.text":"Embedding the resolution logic into a runtime library would be much worse simply because I don't think most systems would have \"enough\" to resolve on"},"ts":1648235154182,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$4IFnNlUKFfDvC808EGOKQMt-QzO6xmKpy5Tu64OnwTU"},
{"content":{"body":"It's not like you can't create something here, but my personal feeling is that it's one of those things where you get 70% of the way, then every piece of the next 30% is either unreasonably expensive or impossible, but a ton of devs will end up hitting that 30% ","msgtype":"m.text","org.matrix.msc1767.text":"It's not like you can't create something here, but my personal feeling is that it's one of those things where you get 70% of the way, then every piece of the next 30% is either unreasonably expensive or impossible, but a ton of devs will end up hitting that 30% "},"ts":1648235446670,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$gXI952w9uw86nCJsGODkiMQvz7WSCeY8wFFDgPQ3gHM"},
{"content":{"body":"where is the best place to discuss scheduling?","msgtype":"m.text","org.matrix.msc1767.text":"where is the best place to discuss scheduling?"},"ts":1648236227892,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$Cq00ix0f3h0Ovn2TWLsjm5kF_AqT6k89jZQ9VkkLOoQ"},
{"content":{"body":"I have a hard conflict on Tuesday morning so want to make sure that decorators don't get scheduled for then","msgtype":"m.text","org.matrix.msc1767.text":"I have a hard conflict on Tuesday morning so want to make sure that decorators don't get scheduled for then"},"ts":1648236257453,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$33Teqkd1eN5QkHCzFsJkJZY8D04SmDmy74BgmB47pt8"},
{"content":{"body":"You can do something like https://github.com/tc39/agendas/pull/1140","msgtype":"m.text","org.matrix.msc1767.text":"You can do something like https://github.com/tc39/agendas/pull/1140"},"ts":1648236275210,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$wJRBYt3UR_PtTn-tkrUT6rBPH0wfkYNmt-H9Gqe4ezo"},
{"content":{"body":"ah, perfect, ty","msgtype":"m.text","org.matrix.msc1767.text":"ah, perfect, ty"},"ts":1648236338332,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$ZSDEEhkLc6B9hO_ZwRpdaSs7CP7paGSZlLB6Ld4-PFg"},
{"content":{"body":"also how do I get voice in TC39 Delegates and TDZ?","msgtype":"m.text","org.matrix.msc1767.text":"also how do I get voice in TC39 Delegates and TDZ?"},"ts":1648236367819,"senderName":"pzuraq","senderId":"@pzura:matrix.org","id":"$HXz3xKOyt05sLb7p4iHbodbtDsSrb2_LMLxEdDRMfgQ"},
{"content":{"body":"ryzokuken ^","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> ^","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ryzokuken ^","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken</a> ^","mimetype":"text/html"}]},"ts":1648236380777,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JltV2uBj4BsTrpAPi85MHyvtNND7a7rZo9jFApwbgl4"}
]