[
{"content":{"body":"Editorial question: if I were to write `Return ? _foo_.[[Slot]]`, does it set `_foo_.[[Slot]]` to `_foo_.[[Slot]].[[Value]]` in case of a normal completion?\n\nWe use that notation in https://tc39.es/ecma262/#sec-innermoduleevaluation step 2.b. In that case it's guaranteed to always contain a throw completion, but seeing the syntax made me wonder how it would work.","format":"org.matrix.custom.html","formatted_body":"<p>Editorial question: if I were to write <code>Return ? _foo_.[[Slot]]</code>, does it set <code>_foo_.[[Slot]]</code> to <code>_foo_.[[Slot]].[[Value]]</code> in case of a normal completion?</p>\n<p>We use that notation in https://tc39.es/ecma262/#sec-innermoduleevaluation step 2.b. In that case it's guaranteed to always contain a throw completion, but seeing the syntax made me wonder how it would work.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752767262899,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bB1MMFD6P0xI2haJ7hJmCtWSsUJ4Hn_rZ-tDvHkqHVw"},
{"content":{"body":"hm, it would for a variable, but Iâ€™m not sure the macro actually works in that case - if it does Iâ€™d say yes, it mutates the slot","msgtype":"m.text"},"ts":1752767500473,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Elxb4o-mkBZIZcAHa_nm9Bhe3QkCt1Lh0Hn6P1YmmUA"},
{"content":{"body":"Maybe we should replace `Return ? _foo_.[[Value]]` with `Return Completion(_foo_.[[Value]])` to avoid ambiguity in case somebody copy-pastes it in a case where a normal completion is possible","format":"org.matrix.custom.html","formatted_body":"Maybe we should replace <code>Return ? _foo_.[[Value]]</code> with <code>Return Completion(_foo_.[[Value]])</code> to avoid ambiguity in case somebody copy-pastes it in a case where a normal completion is possible","m.mentions":{},"msgtype":"m.text"},"ts":1752767572944,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$UYK6aPo9kBdNd4ub_HmGEYqSU5324nJ5AsaghC4VkBw"},
{"content":{"body":"I actually think we forgot to add a `?` expansion for aliases (which we use in many places)","format":"org.matrix.custom.html","formatted_body":"I actually think we forgot to add a <code data-md=\"`\">?</code> expansion for aliases (which we use in many places)","m.mentions":{},"msgtype":"m.text"},"ts":1752768459289,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kpEyeU8NBzsoQuwFXhDkXb37cXlBlOT0s7ysWt7NQh4"},
{"content":{"body":"`ReturnIfAbrupt` handles them fine, but no the `?` shorthand","format":"org.matrix.custom.html","formatted_body":"<code data-md=\"`\">ReturnIfAbrupt</code> handles them fine, but no the <code data-md=\"`\">?</code> shorthand","m.mentions":{},"msgtype":"m.text"},"ts":1752768474822,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F2rWielzcWbYD0j7XbzEwUKpZBIfiiZFJwv98IiTrS0"},
{"content":{"body":"assuming we made the `?` shorthand work, the `ReturnIfAbrupt` expansion should work this way","format":"org.matrix.custom.html","formatted_body":"assuming we made the <code data-md=\"`\">?</code> shorthand work, the <code data-md=\"`\">ReturnIfAbrupt</code> expansion should work this way","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$bB1MMFD6P0xI2haJ7hJmCtWSsUJ4Hn_rZ-tDvHkqHVw"}},"msgtype":"m.text"},"ts":1752768566920,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T0iP_Et9EgTuo5HsEn8Ux_D3AeZ7FP6mxMmvh5ik4Qc"},
{"content":{"body":"this conversation reminds me, I really want to get https://github.com/tc39/ecma262/pull/1573 in","m.mentions":{},"msgtype":"m.text"},"ts":1752768671743,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$iqw3R7lCM_snTbbRL0WPYnTbNLUXh2Yvz5ikehRjoGc"},
{"content":{"body":"I do not think of `?` as modifying anything, although I agree the current wording is ambiguous","format":"org.matrix.custom.html","formatted_body":"I do not think of <code>?</code> as modifying anything, although I agree the current wording is ambiguous","m.mentions":{},"msgtype":"m.text"},"ts":1752774365887,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$41N2d-gV8lOvN6ZY0rn09wYGu_XE0YiMF6fQTEwvYKc"},
{"content":{"body":"I actually want to get rid of `ReturnIfAbrupt` and just define `?` and `!` explicitly","format":"org.matrix.custom.html","formatted_body":"I actually want to get rid of <code>ReturnIfAbrupt</code> and just define <code>?</code> and <code>!</code> explicitly","m.mentions":{},"msgtype":"m.text"},"ts":1752774392478,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ticN57WI_NfWV3h7lcXXOpgBcRF1l9SRnRjf5cUL9to"},
{"content":{"body":"which would make this more clear","m.mentions":{},"msgtype":"m.text"},"ts":1752774399296,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$p_wAkbXFrEzAHofmFm04UZ-Opn-ym-mF8ZUaWjjs6fs"},
{"content":{"body":"yes, I will update #1573 to do that","m.mentions":{},"msgtype":"m.text"},"ts":1752774417103,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DOMghutlqRcLoZJYCLE1RzT3dDBmlqOKodFd8SHZT3Y"},
{"content":{"body":"... whenever I get time","m.mentions":{},"msgtype":"m.text"},"ts":1752774424905,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$QHRsj23kO6QUvn1OUeStE3rt6PaVcPgdeeAN1YT3hZ8"},
{"content":{"body":"just added a comment to https://github.com/tc39/ecma262/pull/1573 which I think does away with the ambiguity","m.mentions":{},"msgtype":"m.text"},"ts":1752774528167,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$4qwamdPNF0u6Ut9X_ZGmQ4eqavSyxCpfWFPs2UHVpuc"},
{"content":{"body":"I mean, it's just a single form (let)","m.mentions":{},"msgtype":"m.text"},"ts":1752774738856,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$w8jFyiqztvX_dijvxY34c-EomzCSjnFbRjQs_mG6lQo"},
{"content":{"body":"it's missing `Perform ? ...`, `Return ? ...`, `F(? ...)`, etc","format":"org.matrix.custom.html","formatted_body":"it&#39;s missing <code data-md=\"`\">Perform ? ...</code>, <code data-md=\"`\">Return ? ...</code>, <code data-md=\"`\">F(? ...)</code>, etc","m.mentions":{},"msgtype":"m.text"},"ts":1752774779038,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ja8lytYgrmParL8gtmNCnhHlpYgW-bZeAe51NOC8kIg"},
{"content":{"body":"also, what happened to `tmp5`? ðŸ˜–","format":"org.matrix.custom.html","formatted_body":"also, what happened to <code data-md=\"`\">tmp5</code>? ðŸ˜–","m.mentions":{},"msgtype":"m.text"},"ts":1752774815233,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$fYKEpsILQd2BAAfeFVb71jZxb-lVP1WQw6M9mXGIZAM"},
{"content":{"body":"hey it's still valid, no one said the synthetic aliases had to have any particular names","m.mentions":{},"msgtype":"m.text"},"ts":1752775176238,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$f_JAa7RzQuOqbpB4APSOWCuR04bvwN0GluxTlHpeKlY"},
{"content":{"body":"and the idea is that the other cases are handled by the last sentence:\n\n> When ? or ! is used in a more complex expression, first apply the rewrite given in [previous section] to the complex expression, then apply this rule.\n\ni.e., `Return ? ...` is rewritten to `Let _tmp1_ be ? ...; Return _tmp1_.`","format":"org.matrix.custom.html","formatted_body":"<p>and the idea is that the other cases are handled by the last sentence:</p>\n<blockquote>\n<p>When ? or ! is used in a more complex expression, first apply the rewrite given in [previous section] to the complex expression, then apply this rule.</p>\n</blockquote>\n<p>i.e., <code>Return ? ...</code> is rewritten to <code>Let _tmp1_ be ? ...; Return _tmp1_.</code></p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752775226845,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-SeVSnWei0DZclwpzUAjMTnsyA5_a1B9LID38L_lfpM"},
{"content":{"body":"though I guess it doesn't quite manage to actually say that","m.mentions":{},"msgtype":"m.text"},"ts":1752775247892,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KV52CB1s52bb5VaM9ewTD27oSC4UrsVasW3T16IWNjQ"},
{"content":{"body":"I think that sentence does correctly handle `F(? ...)` though","format":"org.matrix.custom.html","formatted_body":"I think that sentence does correctly handle <code>F(? ...)</code> though","m.mentions":{},"msgtype":"m.text"},"ts":1752775269508,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tiiU-o1iXBEfBSTw6c5ptWC1eGM7asznI2sz5_vlg-A"},
{"content":{"body":"I should just say \"in another context\" rather than \"in a more complex expression\"","m.mentions":{},"msgtype":"m.text"},"ts":1752775295795,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$q5G3Or0dvuEZFfre6tp-sQ97gC-zFUFiR9U7RJx--SQ"},
{"content":{"body":"rip `tmp5` :(","format":"org.matrix.custom.html","formatted_body":"rip <code>tmp5</code> :(","m.mentions":{},"msgtype":"m.text"},"ts":1752782096864,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$aK8IK8_7NK_RV8vafyqjglf74tyPCs93gij3qqmUSXw"}
]