[
{"content":{"body":"Editorial question: if I were to write `Return ? _foo_.[[Slot]]`, does it set `_foo_.[[Slot]]` to `_foo_.[[Slot]].[[Value]]` in case of a normal completion?\n\nWe use that notation in https://tc39.es/ecma262/#sec-innermoduleevaluation step 2.b. In that case it's guaranteed to always contain a throw completion, but seeing the syntax made me wonder how it would work.","format":"org.matrix.custom.html","formatted_body":"<p>Editorial question: if I were to write <code>Return ? _foo_.[[Slot]]</code>, does it set <code>_foo_.[[Slot]]</code> to <code>_foo_.[[Slot]].[[Value]]</code> in case of a normal completion?</p>\n<p>We use that notation in https://tc39.es/ecma262/#sec-innermoduleevaluation step 2.b. In that case it's guaranteed to always contain a throw completion, but seeing the syntax made me wonder how it would work.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1752767262899,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bB1MMFD6P0xI2haJ7hJmCtWSsUJ4Hn_rZ-tDvHkqHVw"},
{"content":{"body":"hm, it would for a variable, but I’m not sure the macro actually works in that case - if it does I’d say yes, it mutates the slot","msgtype":"m.text"},"ts":1752767500473,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Elxb4o-mkBZIZcAHa_nm9Bhe3QkCt1Lh0Hn6P1YmmUA"},
{"content":{"body":"Maybe we should replace `Return ? _foo_.[[Value]]` with `Return Completion(_foo_.[[Value]])` to avoid ambiguity in case somebody copy-pastes it in a case where a normal completion is possible","format":"org.matrix.custom.html","formatted_body":"Maybe we should replace <code>Return ? _foo_.[[Value]]</code> with <code>Return Completion(_foo_.[[Value]])</code> to avoid ambiguity in case somebody copy-pastes it in a case where a normal completion is possible","m.mentions":{},"msgtype":"m.text"},"ts":1752767572944,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$UYK6aPo9kBdNd4ub_HmGEYqSU5324nJ5AsaghC4VkBw"},
{"content":{"body":"I actually think we forgot to add a `?` expansion for aliases (which we use in many places)","format":"org.matrix.custom.html","formatted_body":"I actually think we forgot to add a <code data-md=\"`\">?</code> expansion for aliases (which we use in many places)","m.mentions":{},"msgtype":"m.text"},"ts":1752768459289,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$kpEyeU8NBzsoQuwFXhDkXb37cXlBlOT0s7ysWt7NQh4"},
{"content":{"body":"`ReturnIfAbrupt` handles them fine, but no the `?` shorthand","format":"org.matrix.custom.html","formatted_body":"<code data-md=\"`\">ReturnIfAbrupt</code> handles them fine, but no the <code data-md=\"`\">?</code> shorthand","m.mentions":{},"msgtype":"m.text"},"ts":1752768474822,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$F2rWielzcWbYD0j7XbzEwUKpZBIfiiZFJwv98IiTrS0"},
{"content":{"body":"assuming we made the `?` shorthand work, the `ReturnIfAbrupt` expansion should work this way","format":"org.matrix.custom.html","formatted_body":"assuming we made the <code data-md=\"`\">?</code> shorthand work, the <code data-md=\"`\">ReturnIfAbrupt</code> expansion should work this way","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$bB1MMFD6P0xI2haJ7hJmCtWSsUJ4Hn_rZ-tDvHkqHVw"}},"msgtype":"m.text"},"ts":1752768566920,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$T0iP_Et9EgTuo5HsEn8Ux_D3AeZ7FP6mxMmvh5ik4Qc"}
]