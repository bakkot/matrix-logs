[
{"content":{"body":"littledan: you may interested in this prototyping","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: you may interested in this prototyping","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"littledan: you may interested in this prototyping","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: you may interested in this prototyping","mimetype":"text/html"}]},"ts":1669818166576,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$6AGplLupaG7l4ZWhPRScF9uVfrxco48P09lEot3zBVc"},
{"content":{"body":"implemented `import(spec, { reflect: true })` in webpack","format":"org.matrix.custom.html","formatted_body":"implemented <code>import(spec, { reflect: true })</code> in webpack","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"implemented `import(spec, { reflect: true })` in webpack","mimetype":"text/plain"},{"body":"implemented <code>import(spec, { reflect: true })</code> in webpack","mimetype":"text/html"}]},"ts":1669818181639,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$INKKhXMSCTMMFWRiNwcOl-tvf37IQI-a6xmClYPFp4s"},
{"content":{"body":" * implemented `import(spec, { reflect: true })` in webpack","format":"org.matrix.custom.html","formatted_body":" * implemented <code>import(spec, { reflect: true })</code> in webpack","m.new_content":{"body":"implemented `import(spec, { reflect: true })` in webpack","format":"org.matrix.custom.html","formatted_body":"implemented <code>import(spec, { reflect: true })</code> in webpack","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"implemented `import(spec, { reflect: true })` in webpack","mimetype":"text/plain"},{"body":"implemented <code>import(spec, { reflect: true })</code> in webpack","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$INKKhXMSCTMMFWRiNwcOl-tvf37IQI-a6xmClYPFp4s","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * implemented `import(spec, { reflect: true })` in webpack","mimetype":"text/plain"},{"body":" * implemented <code>import(spec, { reflect: true })</code> in webpack","mimetype":"text/html"}]},"ts":1669818207695,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$fZaFxyxdWaTElczXMaJjkLMNpAdahZM7GcHOHRcBHtE"},
{"content":{"body":"> <@jackworks:matrix.org> littledan: you may interested in this prototyping\n\nCool!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%246AGplLupaG7l4ZWhPRScF9uVfrxco48P09lEot3zBVc\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br><a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: you may interested in this prototyping</blockquote></mx-reply>Cool!","m.relates_to":{"m.in_reply_to":{"event_id":"$6AGplLupaG7l4ZWhPRScF9uVfrxco48P09lEot3zBVc"}},"msgtype":"m.text"},"ts":1669818258020,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$P9eve7A6K9XOnE_a1Y0ZqVf21F_VoCFaq4S1PlBlruY"},
{"content":{"body":"Ljharb, is there an issue tracking your concern?","msgtype":"m.text"},"ts":1669818271722,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CFUPnLEjRqhkelPDC5HHfOrMWCNiTzsO3Uae_EqQ3Oc"},
{"content":{"body":"Or Justin?","msgtype":"m.text"},"ts":1669818288341,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$evweScIywKw7tnv_8wUnDmUH44IrZV6yZ7UzSHaCkao"},
{"content":{"body":"for the module stuff?","msgtype":"m.text","org.matrix.msc1767.text":"for the module stuff?"},"ts":1669818295537,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$LX2yg1mmqymN4rZn2wW8lgbT4f6vG4B5g3_ajBhBT6Y"},
{"content":{"body":"Yes, the extensibility question","msgtype":"m.text"},"ts":1669818313321,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EGNzpjuZRlrrK_U5m2PTfAV1D1B2JFogviS5Sat-X1s"},
{"content":{"body":"We need to have this discussion bringing everyone together. That was an important thing I learned today.","msgtype":"m.text"},"ts":1669818337775,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DBmqwMYHjiojaicaSyw8TxXj5jEwfg2DKZVsXDoJyvo"},
{"content":{"body":"my concerns came up during import assertions, and are very documented; i don't think i've documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions","msgtype":"m.text","org.matrix.msc1767.text":"my concerns came up during import assertions, and are very documented; i don't think i've documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions"},"ts":1669818342527,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$5_8GBfQHO-BNcDh21Sht4jh7QGY3pV5_6s1YviusV8M"},
{"content":{"body":"if someone has a use case they should bring it to tc39, we don't provide programmable syntax","msgtype":"m.text","org.matrix.msc1767.text":"if someone has a use case they should bring it to tc39, we don't provide programmable syntax"},"ts":1669818359722,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$KBFNGJD-QKmyvrNBUjM-PlTBxJVVMPD5w_ffo5vxHMk"},
{"content":{"body":"Right, can we move this discussion to an issue thread so you and Justin can lay out the arguments?","msgtype":"m.text"},"ts":1669818395591,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$C43JyOO0CVp7h6IPHHAWHJF6ZDkHggKqBE1F0en74VY"},
{"content":{"body":"> <@ljharb:matrix.org> my concerns came up during import assertions, and are very documented; i don't think i've documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions\n\nand they use `import x from \"!raw-loader!./file.txt\"` in days before.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$5_8GBfQHO-BNcDh21Sht4jh7QGY3pV5_6s1YviusV8M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>my concerns came up during import assertions, and are very documented; i don&#39;t think i&#39;ve documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions</blockquote></mx-reply>and they use <code>import x from &quot;!raw-loader!./file.txt&quot;</code> in days before.","m.relates_to":{"m.in_reply_to":{"event_id":"$5_8GBfQHO-BNcDh21Sht4jh7QGY3pV5_6s1YviusV8M"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> my concerns came up during import assertions, and are very documented; i don't think i've documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions\n\nand they use `import x from \"!raw-loader!./file.txt\"` in days before.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$5_8GBfQHO-BNcDh21Sht4jh7QGY3pV5_6s1YviusV8M?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>my concerns came up during import assertions, and are very documented; i don&#39;t think i&#39;ve documented yet how my fears exactly came true as predicted as tools tried to inject all sorts of wacky syntax forms into assertions</blockquote></mx-reply>and they use <code>import x from &quot;!raw-loader!./file.txt&quot;</code> in days before.","mimetype":"text/html"}]},"ts":1669818403911,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$XiRFch0GlhV1YWRPI7Hlf5LhuOPNTw5k3VSXcheMIDU"},
{"content":{"body":"(I think it will get lost in this chat and this is a major thing for us all to follow up on)","msgtype":"m.text"},"ts":1669818413297,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ABUfzeUMLnnz0V88YVKvenleWsnTfQdrGI1-YENJVv0"},
{"content":{"body":"(And, to be clear, I am Ok with either outcome)","msgtype":"m.text"},"ts":1669818439136,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$WnCw1saXF1YgFTPBlwrs139Y7MirhoFxmcRdJtNE_kQ"},
{"content":{"body":"There was an issue, and several other bundlers voiced the same concern as me.","msgtype":"m.text","org.matrix.msc1767.text":"There was an issue, and several other bundlers voiced the same concern as me."},"ts":1669818444789,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$WYnbxb_TSxnuobSJ6JVrliUK_lz0ErYsZvaM4UM66po"},
{"content":{"body":"> <@jackworks:matrix.org> and they use `import x from \"!raw-loader!./file.txt\"` in days before.\n\nyes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$XiRFch0GlhV1YWRPI7Hlf5LhuOPNTw5k3VSXcheMIDU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>and they use <code>import x from \"!raw-loader!./file.txt\"</code> in days before.</blockquote></mx-reply>yes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time","m.relates_to":{"m.in_reply_to":{"event_id":"$XiRFch0GlhV1YWRPI7Hlf5LhuOPNTw5k3VSXcheMIDU"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> and they use `import x from \"!raw-loader!./file.txt\"` in days before.\n\nyes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$XiRFch0GlhV1YWRPI7Hlf5LhuOPNTw5k3VSXcheMIDU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>and they use <code>import x from \"!raw-loader!./file.txt\"</code> in days before.</blockquote></mx-reply>yes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time","mimetype":"text/html"}]},"ts":1669818446719,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$HiP0ZBQq-oNnWHM0TyH5NqK8XJIES2Q-VHIEsIZrZdY"},
{"content":{"body":"The loader syntax didn't go away, it's just done in separate ways now.","msgtype":"m.text","org.matrix.msc1767.text":"The loader syntax didn't go away, it's just done in separate ways now."},"ts":1669818477196,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$0OCoCRSIJ2u-OskiewACp9BBNY4gP-BsKRoEiZasi8I"},
{"content":{"body":"Every bunder reinvents it for themselves","msgtype":"m.text","org.matrix.msc1767.text":"Every bunder reinvents it for themselves"},"ts":1669818495789,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$bXjaBETnsFLUnMxH475mYHzKv6-9sMK0GemISPaMXBo"},
{"content":{"body":"extensible syntax is exactly every bundler reinventing it for themselves","msgtype":"m.text","org.matrix.msc1767.text":"extensible syntax is exactly every bundler reinventing it for themselves"},"ts":1669818519833,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$RFPHhmqTmM1N5AuYEpzD7hepbChJdKzI3If_lGAcajE"},
{"content":{"body":"> <@ljharb:matrix.org> yes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time\n\nIt sounds like this remains a point of disagreement within the community maybe","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24HiP0ZBQq-oNnWHM0TyH5NqK8XJIES2Q-VHIEsIZrZdY\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>yes, and the ecosystem recognized how terrible that is which is why it's been a bad practice to use webpack-specific loader syntax for a long time</blockquote></mx-reply>It sounds like this remains a point of disagreement within the community maybe","m.relates_to":{"m.in_reply_to":{"event_id":"$HiP0ZBQq-oNnWHM0TyH5NqK8XJIES2Q-VHIEsIZrZdY"}},"msgtype":"m.text"},"ts":1669818523826,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$flzQzWmiRkjD5pi531VEqV35b4cnR5-XIqlzI2GjKOg"},
{"content":{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","format":"org.matrix.custom.html","formatted_body":"if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","mimetype":"text/plain"},{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","mimetype":"text/html"}]},"ts":1669818536134,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$p0VWUIowfvaCXAAUdMv9f0vflpS3e20faM-myNP4Vds"},
{"content":{"body":" * if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","format":"org.matrix.custom.html","formatted_body":" * if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","m.new_content":{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","format":"org.matrix.custom.html","formatted_body":"if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","mimetype":"text/plain"},{"body":"if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$p0VWUIowfvaCXAAUdMv9f0vflpS3e20faM-myNP4Vds","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * if we want to avoid that (which i think we do) then the actual use cases need litigating _here_","mimetype":"text/plain"},{"body":" * if we want to avoid that (which i think we do) then the actual use cases need litigating <em>here</em>","mimetype":"text/html"}]},"ts":1669818537147,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$tbF7RgaNpfskaAozBnXMvDd_mTa1-ccZrEs0Hz8AhDo"},
{"content":{"body":"I don’t think any one of us could speak for the ecosystem any more than we can speak for TC39","msgtype":"m.text"},"ts":1669818545569,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$APTkjcN-4dAzkAPJOjIOu_7H71AuPSQ9hk3A_ouuiQQ"},
{"content":{"body":"of course","msgtype":"m.text","org.matrix.msc1767.text":"of course"},"ts":1669818556564,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AC0lzZQb0SJTbvbkEdc4scgkx9yZSZEndXCJpGmxee4"},
{"content":{"body":"i'll qualify if it's really needed, \"it seems like much of the ecosystem has\"","msgtype":"m.text","org.matrix.msc1767.text":"i'll qualify if it's really needed, \"it seems like much of the ecosystem has\""},"ts":1669818580118,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$T7dvPiqXkOeQXNM_fL7vC2BdzFVsouwgLG_O6-RwSL4"},
{"content":{"body":"and to be fair i'm more talking about packages; it doesn't matter much what people do in their own apps","msgtype":"m.text","org.matrix.msc1767.text":"and to be fair i'm more talking about packages; it doesn't matter much what people do in their own apps"},"ts":1669818619274,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Sh_8wLKLJmZSV8Kx2i1kH3C8geEeoHIrsznjGlneEDs"},
{"content":{"body":"things become better after we have `import.meta`. Now many bundlers support `new URL(\"./spec\", import.meta.url)` as a way to reflection and it also works in real browser","format":"org.matrix.custom.html","formatted_body":"things become better after we have <code>import.meta</code>. Now many bundlers support <code>new URL(&quot;./spec&quot;, import.meta.url)</code> as a way to reflection and it also works in real browser","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"things become better after we have `import.meta`. Now many bundlers support `new URL(\"./spec\", import.meta.url)` as a way to reflection and it also works in real browser","mimetype":"text/plain"},{"body":"things become better after we have <code>import.meta</code>. Now many bundlers support <code>new URL(&quot;./spec&quot;, import.meta.url)</code> as a way to reflection and it also works in real browser","mimetype":"text/html"}]},"ts":1669818653770,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$NKXdOoJG8i6SOrtztPt0OOVfIJylrLfhL3E_vRXArQk"},
{"content":{"body":"I ideally would like bare JS to have the same capabilities as bundlers, except that bundlers also put everything in a single file","msgtype":"m.text","org.matrix.msc1767.text":"I ideally would like bare JS to have the same capabilities as bundlers, except that bundlers also put everything in a single file"},"ts":1669818662890,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$6RQ_RaRqFRcuOIFvDQ4YnEQYQ9CPWJu72RecGDVIjyM"},
{"content":{"body":"It's nice to have image-loader in webpack, but I would also like it to work without webpack","msgtype":"m.text","org.matrix.msc1767.text":"It's nice to have image-loader in webpack, but I would also like it to work without webpack"},"ts":1669818675569,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$btn5kdm-rwV1oBpeYg37fg1Kx2drUpN6u5FRlK296zA"},
{"content":{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","format":"org.matrix.custom.html","formatted_body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/plain"},{"body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/html"}]},"ts":1669818758394,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tSPS04QyewkZoONX9KP3tO429ReQZUQz71ZmXVJQsU4"},
{"content":{"body":"TC39 is not an appropriate place for all of the concerns bundler have to deal with, so I don't think that's possible","msgtype":"m.text","org.matrix.msc1767.text":"TC39 is not an appropriate place for all of the concerns bundler have to deal with, so I don't think that's possible"},"ts":1669818768848,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$YtkBmao1wOloCDApMLMKI1bzs5Y_mI7MC70ZvTsTCu4"},
{"content":{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax","format":"org.matrix.custom.html","formatted_body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax","m.new_content":{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax","format":"org.matrix.custom.html","formatted_body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax","mimetype":"text/plain"},{"body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$tSPS04QyewkZoONX9KP3tO429ReQZUQz71ZmXVJQsU4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax","mimetype":"text/plain"},{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax","mimetype":"text/html"}]},"ts":1669818803087,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$YDp8KGhpDU1ttMLNcn8RFiX1ffuN3Oec70WVz1cGFoc"},
{"content":{"body":"Which concerns, for example? I guess code splitting, but that still falls under the \"putting multiple things in the same file\" category","msgtype":"m.text","org.matrix.msc1767.text":"Which concerns, for example? I guess code splitting, but that still falls under the \"putting multiple things in the same file\" category"},"ts":1669818810190,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$B_izXHtVObuFEu4MbZTR_cKzPE1AIfisa4VhtxoggEo"},
{"content":{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too","format":"org.matrix.custom.html","formatted_body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too","m.new_content":{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too","format":"org.matrix.custom.html","formatted_body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too","mimetype":"text/plain"},{"body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$tSPS04QyewkZoONX9KP3tO429ReQZUQz71ZmXVJQsU4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too","mimetype":"text/plain"},{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too","mimetype":"text/html"}]},"ts":1669818818127,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Q39nDMRgd9MacpMFdqnsuwpNgSPdFL-R5w4ku7B9-pA"},
{"content":{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","format":"org.matrix.custom.html","formatted_body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","m.new_content":{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","format":"org.matrix.custom.html","formatted_body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/plain"},{"body":"I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$tSPS04QyewkZoONX9KP3tO429ReQZUQz71ZmXVJQsU4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by `import` syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/plain"},{"body":" * I don't allow any loader in our project that convert any non JS files into a JS by <code>import</code> syntax unless the host can do that too (e.g. we allow JSON imports)","mimetype":"text/html"}]},"ts":1669818860163,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$mZmJHk8hCBEZ-EdJ_IBM9fBM7WlwIgiPGjRNomdA7x4"},
{"content":{"body":"i don't mean that tc39 has to provide every semantic, since that isn't always possible, but it should still be discussed","msgtype":"m.text","org.matrix.msc1767.text":"i don't mean that tc39 has to provide every semantic, since that isn't always possible, but it should still be discussed"},"ts":1669818864959,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$m2HS4TJB4IK-YKH0GUjY02pcAOU375jERbNk4QpBkOQ"},
{"content":{"body":"- Importing an image with blurry placeholder, intrinsic size, etc.\n- Import bytes buffers\n- Transforming files for the importer's usecase\n- Annotating metadata\n(these are just the things I did last week)","format":"org.matrix.custom.html","formatted_body":"<ul>\n<li>Importing an image with blurry placeholder, intrinsic size, etc.</li>\n<li>Import bytes buffers</li>\n<li>Transforming files for the importer's usecase</li>\n<li>Annotating metadata<br>(these are just the things I did last week)</li>\n</ul>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"- Importing an image with blurry placeholder, intrinsic size, etc.\n- Import bytes buffers\n- Transforming files for the importer's usecase\n- Annotating metadata\n(these are just the things I did last week)","mimetype":"text/plain"},{"body":"<ul>\n<li>Importing an image with blurry placeholder, intrinsic size, etc.</li>\n<li>Import bytes buffers</li>\n<li>Transforming files for the importer's usecase</li>\n<li>Annotating metadata<br>(these are just the things I did last week)</li>\n</ul>\n","mimetype":"text/html"}]},"ts":1669818905333,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4W15943K1Vb8Qmw5k-dTksp2GvxQbzW2CYRX-632J6o"},
{"content":{"body":"> <@jridgewell:matrix.org> - Importing an image with blurry placeholder, intrinsic size, etc.\n> - Import bytes buffers\n> - Transforming files for the importer's usecase\n> - Annotating metadata\n> (these are just the things I did last week)\n\nWell, for example Module/ModuleSource can solve the first three by providing custom module loaders","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$4W15943K1Vb8Qmw5k-dTksp2GvxQbzW2CYRX-632J6o?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br /><ul>\n<li>Importing an image with blurry placeholder, intrinsic size, etc.</li>\n<li>Import bytes buffers</li>\n<li>Transforming files for the importer's usecase</li>\n<li>Annotating metadata<br>(these are just the things I did last week)</li>\n</ul>\n</blockquote></mx-reply>Well, for example Module/ModuleSource can solve the first three by providing custom module loaders","m.relates_to":{"m.in_reply_to":{"event_id":"$4W15943K1Vb8Qmw5k-dTksp2GvxQbzW2CYRX-632J6o"}},"msgtype":"m.text"},"ts":1669818949430,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$GtnARfe6PfxstJSLTrU89IHXVTqtkgKs_5S9RHahUTE"},
{"content":{"body":"It's all module reflection. TC39 has a need for WASM (that I agree with!), and bundler have a much lager need. I'd like a single solution to the full problem space.","msgtype":"m.text","org.matrix.msc1767.text":"It's all module reflection. TC39 has a need for WASM (that I agree with!), and bundler have a much lager need. I'd like a single solution to the full problem space."},"ts":1669818954552,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$sC52ECFGz0KTg82q1XuLU9kqg24yHpRrifF0WEUiDFU"},
{"content":{"body":"and why do these need parseable syntax instead of a comment?","msgtype":"m.text","org.matrix.msc1767.text":"and why do these need parseable syntax instead of a comment?"},"ts":1669818955161,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$T3ME9xo-JxnFvfxr_7lb_iCBo9wBUD8sUP30J5AKNg0"},
{"content":{"body":"These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource.","msgtype":"m.text","org.matrix.msc1767.text":"These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource."},"ts":1669818983875,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$76QDxjA06XNRgyCLiqhATWbH1sNZEoHXJA_dl2pnXV8"},
{"content":{"body":" * These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource.","m.new_content":{"body":"These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource.","msgtype":"m.text","org.matrix.msc1767.text":"These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource."},"m.relates_to":{"event_id":"$76QDxjA06XNRgyCLiqhATWbH1sNZEoHXJA_dl2pnXV8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * These are good reasons to allow userspace to do more without our permission, as would be possible with Module and ModuleSource."},"ts":1669818997775,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$wmaJMzTBjTOgyhV7WITHQrjchlkdEscm-T_nHGx8ibc"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Well, for example Module/ModuleSource can solve the first three by providing custom module loaders\n\nOk I see: you would want to pass data from the import statement to the import hook","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$GtnARfe6PfxstJSLTrU89IHXVTqtkgKs_5S9RHahUTE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Well, for example Module/ModuleSource can solve the first three by providing custom module loaders</blockquote></mx-reply>Ok I see: you would want to pass data from the import statement to the import hook","m.relates_to":{"m.in_reply_to":{"event_id":"$GtnARfe6PfxstJSLTrU89IHXVTqtkgKs_5S9RHahUTE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@nicolo-ribaudo:matrix.org> Well, for example Module/ModuleSource can solve the first three by providing custom module loaders\n\nOk I see: you would want to pass data from the import statement to the import hook","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$GtnARfe6PfxstJSLTrU89IHXVTqtkgKs_5S9RHahUTE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Well, for example Module/ModuleSource can solve the first three by providing custom module loaders</blockquote></mx-reply>Ok I see: you would want to pass data from the import statement to the import hook","mimetype":"text/html"}]},"ts":1669818999651,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$UYPZiRbhVPzwvKlpL6QHGz0EfqL3kWsDU3LrZgm1yYU"},
{"content":{"body":"And \"the bundler\" is equivalent to `Module` with a custom import hook","format":"org.matrix.custom.html","formatted_body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And \"the bundler\" is equivalent to `Module` with a custom import hook","mimetype":"text/plain"},{"body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","mimetype":"text/html"}]},"ts":1669819039342,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$l_8AT6XcnL4Hm1l_hacB5e-e7VTZI-HrST6_xS30dWo"},
{"content":{"body":" * And \"the bundler\" is equivalent to `Module` with custom import hook","format":"org.matrix.custom.html","formatted_body":" * And &quot;the bundler&quot; is equivalent to <code>Module</code> with custom import hook","m.new_content":{"body":"And \"the bundler\" is equivalent to `Module` with custom import hook","format":"org.matrix.custom.html","formatted_body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with custom import hook","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And \"the bundler\" is equivalent to `Module` with custom import hook","mimetype":"text/plain"},{"body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with custom import hook","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$l_8AT6XcnL4Hm1l_hacB5e-e7VTZI-HrST6_xS30dWo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * And \"the bundler\" is equivalent to `Module` with custom import hook","mimetype":"text/plain"},{"body":" * And &quot;the bundler&quot; is equivalent to <code>Module</code> with custom import hook","mimetype":"text/html"}]},"ts":1669819045220,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QzZjR6JLo-WhkWfUBW5nq3tF4fkfwN4rN3RrK_L7pdc"},
{"content":{"body":" * And \"the bundler\" is equivalent to `Module` with a custom import hook","format":"org.matrix.custom.html","formatted_body":" * And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","m.new_content":{"body":"And \"the bundler\" is equivalent to `Module` with a custom import hook","format":"org.matrix.custom.html","formatted_body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And \"the bundler\" is equivalent to `Module` with a custom import hook","mimetype":"text/plain"},{"body":"And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$l_8AT6XcnL4Hm1l_hacB5e-e7VTZI-HrST6_xS30dWo","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * And \"the bundler\" is equivalent to `Module` with a custom import hook","mimetype":"text/plain"},{"body":" * And &quot;the bundler&quot; is equivalent to <code>Module</code> with a custom import hook","mimetype":"text/html"}]},"ts":1669819059419,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$hsudhjIdvSn4NpxNmTncFR9mKrx1yR3KAKyNd8n-JyY"},
{"content":{"body":"FWIW I lean towards what Justin is saying and sort of regret naming the keyword “assert” for that reason. I don’t feel like the assertion mental model resonates with anyone.","msgtype":"m.text"},"ts":1669819083921,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ljp1NyDUSbO-kNo2LaFVsB2xUmhRUVXqgETmqxihQSY"},
{"content":{"body":"I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?","msgtype":"m.text","org.matrix.msc1767.text":"I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?"},"ts":1669819089671,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Sv8IPH75VK4T6RG9bWaATAa9w6v0mtTmK74SFRzqJR8"},
{"content":{"body":" * I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?","m.new_content":{"body":"I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?","msgtype":"m.text","org.matrix.msc1767.text":"I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?"},"m.relates_to":{"event_id":"$Sv8IPH75VK4T6RG9bWaATAa9w6v0mtTmK74SFRzqJR8","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?"},"ts":1669819104006,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$yQaIkNKTANC86ZUJ7EjfS9RHvzygD_Scadsgo3iPJHY"},
{"content":{"body":"I can't have a bunder output that uses `eval()` in any form","format":"org.matrix.custom.html","formatted_body":"I can't have a bunder output that uses <code>eval()</code> in any form","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I can't have a bunder output that uses `eval()` in any form","mimetype":"text/plain"},{"body":"I can't have a bunder output that uses <code>eval()</code> in any form","mimetype":"text/html"}]},"ts":1669819129066,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$o8m0hjFR7gN98qhvzD9FtxoV4bIPS3SkSCJPCD8Ec30"},
{"content":{"body":"It's going to immediately fail in CSP","msgtype":"m.text","org.matrix.msc1767.text":"It's going to immediately fail in CSP"},"ts":1669819137029,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4DhAmdNYY5AgW6XhaYU_O18lYdoDb5PtqZsLXMnwRq4"},
{"content":{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","format":"org.matrix.custom.html","formatted_body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/plain"},{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$Sv8IPH75VK4T6RG9bWaATAa9w6v0mtTmK74SFRzqJR8"}}},"ts":1669819148423,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$fwgEor5ityqnnHgzpkfOUJL6_GPPYcPAhXiBvaFG7-M"},
{"content":{"body":"> <@jridgewell:matrix.org> I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?\n\n * Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$Sv8IPH75VK4T6RG9bWaATAa9w6v0mtTmK74SFRzqJR8?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?</blockquote></mx-reply> * Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","m.new_content":{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","format":"org.matrix.custom.html","formatted_body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/plain"},{"body":"Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$fwgEor5ityqnnHgzpkfOUJL6_GPPYcPAhXiBvaFG7-M","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?\n\n * Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$Sv8IPH75VK4T6RG9bWaATAa9w6v0mtTmK74SFRzqJR8?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I don't understand the ModuleSource suggestion, relying on runtime evaluation means it's unacceptable for most of the web?</blockquote></mx-reply> * Pardon module source with a lower case. Module blocks provide module sources with CSP annotation.","mimetype":"text/html"}]},"ts":1669819171493,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$0Hj8I-lAIcRljNYF8h4BVSGdF5WpHAexVCol1UOOme8"},
{"content":{"body":"> <@jridgewell:matrix.org> I can't have a bunder output that uses `eval()` in any form\n\nI am very sorry to reply with a link to a proposal that has not been presented in detail (other in in Kris' module harmony presentations), but with https://github.com/tc39/proposal-compartments/blob/master/2-virtual-module-source.md we could have custom sources - even not created from module blocks - without eval.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$o8m0hjFR7gN98qhvzD9FtxoV4bIPS3SkSCJPCD8Ec30?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I can't have a bunder output that uses <code>eval()</code> in any form</blockquote></mx-reply>I am very sorry to reply with a link to a proposal that has not been presented in detail (other in in Kris' module harmony presentations), but with https://github.com/tc39/proposal-compartments/blob/master/2-virtual-module-source.md we could have custom sources - even not created from module blocks - without eval.","m.relates_to":{"m.in_reply_to":{"event_id":"$o8m0hjFR7gN98qhvzD9FtxoV4bIPS3SkSCJPCD8Ec30"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> I can't have a bunder output that uses `eval()` in any form\n\nI am very sorry to reply with a link to a proposal that has not been presented in detail (other in in Kris' module harmony presentations), but with https://github.com/tc39/proposal-compartments/blob/master/2-virtual-module-source.md we could have custom sources - even not created from module blocks - without eval.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$o8m0hjFR7gN98qhvzD9FtxoV4bIPS3SkSCJPCD8Ec30?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>I can't have a bunder output that uses <code>eval()</code> in any form</blockquote></mx-reply>I am very sorry to reply with a link to a proposal that has not been presented in detail (other in in Kris' module harmony presentations), but with https://github.com/tc39/proposal-compartments/blob/master/2-virtual-module-source.md we could have custom sources - even not created from module blocks - without eval.","mimetype":"text/html"}]},"ts":1669819240088,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$nl6ORdvLw_OlUpWSAO1-GAxjzfKbXQ2sb14Pv4i9JSo"},
{"content":{"body":"I would say, I don’t see why JSON modules shouldn’t have a source","msgtype":"m.text"},"ts":1669819270073,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JNDF-9xLtpsSS-yWj-iXEB57eXQ2uc79ZP2hSBz9DK4"},
{"content":{"body":"> I would say, I don’t see why JSON modules shouldn’t have a source\n\nYeah, they probably should - that is up to the HTML integration though","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>I would say, I don’t see why JSON modules shouldn’t have a source</p>\n</blockquote>\n<p>Yeah, they probably should - that is up to the HTML integration though</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> I would say, I don’t see why JSON modules shouldn’t have a source\n\nYeah, they probably should - that is up to the HTML integration though","mimetype":"text/plain"},{"body":"<blockquote>\n<p>I would say, I don’t see why JSON modules shouldn’t have a source</p>\n</blockquote>\n<p>Yeah, they probably should - that is up to the HTML integration though</p>\n","mimetype":"text/html"}]},"ts":1669819294796,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$AOa_zIp_t0bE5FWmlSVE3hwCbY7KuHA3J_KVaQilSak"},
{"content":{"body":"I mean, why can't WASM just do `fetch().then(eval)`?","format":"org.matrix.custom.html","formatted_body":"I mean, why can't WASM just do <code>fetch().then(eval)</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I mean, why can't WASM just do `fetch().then(eval)`?","mimetype":"text/plain"},{"body":"I mean, why can't WASM just do <code>fetch().then(eval)</code>?","mimetype":"text/html"}]},"ts":1669819301422,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$LLPLX3VIi3UiKjVS25H-W9YZ2d5DOB72MtW5p-TWVHM"},
{"content":{"body":"Like, isn't that the same suggestion as using Comparentments/ModuleSource/etc?","msgtype":"m.text","org.matrix.msc1767.text":"Like, isn't that the same suggestion as using Comparentments/ModuleSource/etc?"},"ts":1669819325692,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$cKst_EDh2JoYxzVfY8JhqwZkvdKOsDlFYNRYJz_X2l8"},
{"content":{"body":"The use case seems the same to me, and I'm saying its much larger than just WASM.","msgtype":"m.text","org.matrix.msc1767.text":"The use case seems the same to me, and I'm saying its much larger than just WASM."},"ts":1669819357363,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$36-NqIu2-qO4u-nNPUYKYxpclb1TeOOrbLT4ZCIpzNg"},
{"content":{"body":"> <@littledan:matrix.org> FWIW I lean towards what Justin is saying and sort of regret naming the keyword “assert” for that reason. I don’t feel like the assertion mental model resonates with anyone.\n\nif you're going to call out \"ecosystem\" as being too broad then i'll call out that \"anyone\" is excluding me, for whom it resonates very strongly :-)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ljp1NyDUSbO-kNo2LaFVsB2xUmhRUVXqgETmqxihQSY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>FWIW I lean towards what Justin is saying and sort of regret naming the keyword “assert” for that reason. I don’t feel like the assertion mental model resonates with anyone.</blockquote></mx-reply>if you're going to call out &quot;ecosystem&quot; as being too broad then i'll call out that &quot;anyone&quot; is excluding me, for whom it resonates very strongly :-)","m.relates_to":{"m.in_reply_to":{"event_id":"$ljp1NyDUSbO-kNo2LaFVsB2xUmhRUVXqgETmqxihQSY"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> FWIW I lean towards what Justin is saying and sort of regret naming the keyword “assert” for that reason. I don’t feel like the assertion mental model resonates with anyone.\n\nif you're going to call out \"ecosystem\" as being too broad then i'll call out that \"anyone\" is excluding me, for whom it resonates very strongly :-)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ljp1NyDUSbO-kNo2LaFVsB2xUmhRUVXqgETmqxihQSY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>FWIW I lean towards what Justin is saying and sort of regret naming the keyword “assert” for that reason. I don’t feel like the assertion mental model resonates with anyone.</blockquote></mx-reply>if you're going to call out &quot;ecosystem&quot; as being too broad then i'll call out that &quot;anyone&quot; is excluding me, for whom it resonates very strongly :-)","mimetype":"text/html"}]},"ts":1669819426171,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-GGJw5OV6kEX3zHAAth3ULd52AMoInIK8tUFfE469ho"},
{"content":{"body":"I cannot speak for the champions of compartments, but from what I see one major goal of that proposal is to allow writing safe runtime code:\n- either without eval (for example, with the virtual module sources I linked) - and this is what I'm most interested in\n- or with eval in a controlled way, because compartment could provide custom versions of the dangerous objects and properly confine the executed string","format":"org.matrix.custom.html","formatted_body":"<p>I cannot speak for the champions of compartments, but from what I see one major goal of that proposal is to allow writing safe runtime code:</p>\n<ul>\n<li>either without eval (for example, with the virtual module sources I linked) - and this is what I'm most interested in</li>\n<li>or with eval in a controlled way, because compartment could provide custom versions of the dangerous objects and properly confine the executed string</li>\n</ul>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I cannot speak for the champions of compartments, but from what I see one major goal of that proposal is to allow writing safe runtime code:\n- either without eval (for example, with the virtual module sources I linked) - and this is what I'm most interested in\n- or with eval in a controlled way, because compartment could provide custom versions of the dangerous objects and properly confine the executed string","mimetype":"text/plain"},{"body":"<p>I cannot speak for the champions of compartments, but from what I see one major goal of that proposal is to allow writing safe runtime code:</p>\n<ul>\n<li>either without eval (for example, with the virtual module sources I linked) - and this is what I'm most interested in</li>\n<li>or with eval in a controlled way, because compartment could provide custom versions of the dangerous objects and properly confine the executed string</li>\n</ul>\n","mimetype":"text/html"}]},"ts":1669819485394,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$QlVNer9dtv7hlk1WSiR2dDbF4F0KR6qbHeEJvdFHTYg"},
{"content":{"body":"> <@jridgewell:matrix.org> Like, isn't that the same suggestion as using Comparentments/ModuleSource/etc?\n\nTo be clear, `new Module((module {}).source)` is safe under CSP.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$cKst_EDh2JoYxzVfY8JhqwZkvdKOsDlFYNRYJz_X2l8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Like, isn&#39;t that the same suggestion as using Comparentments/ModuleSource/etc?</blockquote></mx-reply>To be clear, <code>new Module((module {}).source)</code> is safe under CSP.","m.relates_to":{"m.in_reply_to":{"event_id":"$cKst_EDh2JoYxzVfY8JhqwZkvdKOsDlFYNRYJz_X2l8"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> Like, isn't that the same suggestion as using Comparentments/ModuleSource/etc?\n\nTo be clear, `new Module((module {}).source)` is safe under CSP.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$cKst_EDh2JoYxzVfY8JhqwZkvdKOsDlFYNRYJz_X2l8?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Like, isn&#39;t that the same suggestion as using Comparentments/ModuleSource/etc?</blockquote></mx-reply>To be clear, <code>new Module((module {}).source)</code> is safe under CSP.","mimetype":"text/html"}]},"ts":1669819496670,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$_GTUSv_-bx7csCKD6pVCxfcWJtoxfO31sKEd0A3Vkvc"},
{"content":{"body":"And the `source` in question is a module source and an instance of `ModuleSource` but not constructed by `new ModuleSource(text)`","format":"org.matrix.custom.html","formatted_body":"And the <code>source</code> in question is a module source and an instance of <code>ModuleSource</code> but not constructed by <code>new ModuleSource(text)</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"And the `source` in question is a module source and an instance of `ModuleSource` but not constructed by `new ModuleSource(text)`","mimetype":"text/plain"},{"body":"And the <code>source</code> in question is a module source and an instance of <code>ModuleSource</code> but not constructed by <code>new ModuleSource(text)</code>","mimetype":"text/html"}]},"ts":1669819519772,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$m4EVH7BVDwdkc-KE1xhLlgz5oBl0DE83N_xB9BWdpU0"},
{"content":{"body":"Yes, but that doesn't solve the transform, reflection, custom behavior, because none of that is representable in a `module {}` block?","format":"org.matrix.custom.html","formatted_body":"Yes, but that doesn't solve the transform, reflection, custom behavior, because none of that is representable in a <code>module {}</code> block?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yes, but that doesn't solve the transform, reflection, custom behavior, because none of that is representable in a `module {}` block?","mimetype":"text/plain"},{"body":"Yes, but that doesn't solve the transform, reflection, custom behavior, because none of that is representable in a <code>module {}</code> block?","mimetype":"text/html"}]},"ts":1669819548272,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$4Zu0_hp41iKD5eTfs11wZ1eMKcY2WyiNlOYZLiJAohc"},
{"content":{"body":"Correct. For that, Nicolò cites a proposal for virtual module sources, which would be able to do these things in JavaScript, without eval.","msgtype":"m.text","org.matrix.msc1767.text":"Correct. For that, Nicolò cites a proposal for virtual module sources, which would be able to do these things in JavaScript, without eval."},"ts":1669819587731,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$KebCCPAmbhsa0VtAU487RRgnZdKEz-u5mh3yWJ8XU8g"},
{"content":{"body":"But to be clear, that proposal is a place-holder. We have a lot of work to do to make it viable.","msgtype":"m.text","org.matrix.msc1767.text":"But to be clear, that proposal is a place-holder. We have a lot of work to do to make it viable."},"ts":1669819620366,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$axMfOkR-A6cfWR1XSx8_OCUemCB6ArEfmf710zBVOE4"},
{"content":{"body":"Justin Ridgewell: today, bundlers _CANT_ bundle Wasm","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: today, bundlers <em>CANT</em> bundle Wasm","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Justin Ridgewell: today, bundlers _CANT_ bundle Wasm","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: today, bundlers <em>CANT</em> bundle Wasm","mimetype":"text/html"}]},"ts":1669819635434,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$HDN_YcsMPBNa2jUJb7Ozl1q5Kz3e1WFdKvNL3dhfAP4"},
{"content":{"body":"because there is no way to treat them as another node in the graph","msgtype":"m.text","org.matrix.msc1767.text":"because there is no way to treat them as another node in the graph"},"ts":1669819644717,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$lpvvBVI_IRpHgXNuUGBxGmiAIjL1DmeFHGTYLxeNznI"},
{"content":{"body":"the ESM integration is not sufficient for most Wasm modules","msgtype":"m.text","org.matrix.msc1767.text":"the ESM integration is not sufficient for most Wasm modules"},"ts":1669819655689,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$X4lxj1xvWUqgfzSwKpDmZPA0rQEmr5TIrLTMxAAvRJU"},
{"content":{"body":"since it implies import maps support for things like wasi, which is simply not tractable in most scenarios","msgtype":"m.text","org.matrix.msc1767.text":"since it implies import maps support for things like wasi, which is simply not tractable in most scenarios"},"ts":1669819668677,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$zZYRlKuHJul7mFTVA1Zy441o3JkRXc_-vxD1L0tHL1c"},
{"content":{"body":"They can manually instantiate an array buffer, though.","msgtype":"m.text","org.matrix.msc1767.text":"They can manually instantiate an array buffer, though."},"ts":1669819682582,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$EDRWV-80j2tuzFP7XOMAMeaDURqiVnakdRAx5gI8UoI"},
{"content":{"body":"Wasm also does not support cycles, while Wasm import functions and memory bindings often rely on cyclical linkage","msgtype":"m.text","org.matrix.msc1767.text":"Wasm also does not support cycles, while Wasm import functions and memory bindings often rely on cyclical linkage"},"ts":1669819684197,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$j3YnAceULsAplFxfEgHwsfGPhGDaGxayN3j4Gx8Iwjk"},
{"content":{"body":"What's being suggested is a way to do it statically.","msgtype":"m.text","org.matrix.msc1767.text":"What's being suggested is a way to do it statically."},"ts":1669819699026,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$Tty4wPlRVfAcly76PCHfCDwHeqW3CCKWa-BlZE-pjQQ"},
{"content":{"body":"manual instantiation is the reason bundling of Wasm is such bad UX right now","msgtype":"m.text","org.matrix.msc1767.text":"manual instantiation is the reason bundling of Wasm is such bad UX right now"},"ts":1669819701232,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$vR2nTdASvhsd4XMKaKItQONj3sdkN8RO-eTEVW4zwcY"},
{"content":{"body":"look at any Wasm project","msgtype":"m.text","org.matrix.msc1767.text":"look at any Wasm project"},"ts":1669819711169,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$kPgdOzQozo1rg36VLaLspkGD__dSidbQxtLwWZ-dM3o"},
{"content":{"body":"and there's an option to set `CUSTOM_WASM_URL`","format":"org.matrix.custom.html","formatted_body":"and there's an option to set <code>CUSTOM_WASM_URL</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and there's an option to set `CUSTOM_WASM_URL`","mimetype":"text/plain"},{"body":"and there's an option to set <code>CUSTOM_WASM_URL</code>","mimetype":"text/html"}]},"ts":1669819716643,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$FsgnokQ9tJw4lCEBFASvOsjVsEFWywMZyDy_TrPKW4c"},
{"content":{"body":"Right, which is **my exact argument for everything else**","format":"org.matrix.custom.html","formatted_body":"Right, which is <strong>my exact argument for everything else</strong>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Right, which is **my exact argument for everything else**","mimetype":"text/plain"},{"body":"Right, which is <strong>my exact argument for everything else</strong>","mimetype":"text/html"}]},"ts":1669819719291,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$2iOGl4S1gEmKS7EB4JKQLG6oBeL83cBwdLakRnWfKZI"},
{"content":{"body":"because the patterns are simply not supported","msgtype":"m.text","org.matrix.msc1767.text":"because the patterns are simply not supported"},"ts":1669819726066,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$pG8IU4HeOHprUHb97JSz5kG0YBjIRgW4r-ioqsmbVDQ"},
{"content":{"body":"The problem space **is more than WASM**","format":"org.matrix.custom.html","formatted_body":"The problem space <strong>is more than WASM</strong>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"The problem space **is more than WASM**","mimetype":"text/plain"},{"body":"The problem space <strong>is more than WASM</strong>","mimetype":"text/html"}]},"ts":1669819730228,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$qgmJph8aSGV5YuXgxb-4Nel41jxE37NEe1aq_6myNzI"},
{"content":{"body":"I would prefer not to be told what the problem space of my proposal is :)","msgtype":"m.text","org.matrix.msc1767.text":"I would prefer not to be told what the problem space of my proposal is :)"},"ts":1669819748631,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$xipPUDnKGTU2fNrWqje0oDcUhjC-O94rGjbBh2snkUI"},
{"content":{"body":"> <@jridgewell:matrix.org> The problem space **is more than WASM**\n\nAgree very much.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$qgmJph8aSGV5YuXgxb-4Nel41jxE37NEe1aq_6myNzI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>The problem space <strong>is more than WASM</strong></blockquote></mx-reply>Agree very much.","m.relates_to":{"m.in_reply_to":{"event_id":"$qgmJph8aSGV5YuXgxb-4Nel41jxE37NEe1aq_6myNzI"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jridgewell:matrix.org> The problem space **is more than WASM**\n\nAgree very much.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$qgmJph8aSGV5YuXgxb-4Nel41jxE37NEe1aq_6myNzI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>The problem space <strong>is more than WASM</strong></blockquote></mx-reply>Agree very much.","mimetype":"text/html"}]},"ts":1669819750131,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8AxtD5WBl2RGFfHbxgc-lvdISJrtxVt3wI3tiu47zs4"},
{"content":{"body":"The ergonomics that I need to support for my bundler has all of this other uses","msgtype":"m.text","org.matrix.msc1767.text":"The ergonomics that I need to support for my bundler has all of this other uses"},"ts":1669819765089,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$5LA_RPMGlMOhBPMVQIYqrCGqv9s-V6wdIx__LATPIfg"},
{"content":{"body":"I want (and other bundlers) want a solution that solves the full problem","msgtype":"m.text","org.matrix.msc1767.text":"I want (and other bundlers) want a solution that solves the full problem"},"ts":1669819791027,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$xTz7zcEUEpao7P3RZ5PKsM7IjB0kimFMw3znrTJCfYQ"},
{"content":{"body":"right, and that needs to be weighed against these use cases, but please don't make us overreach our use cases","msgtype":"m.text","org.matrix.msc1767.text":"right, and that needs to be weighed against these use cases, but please don't make us overreach our use cases"},"ts":1669819802522,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$PLRv2aZxk0IlGj-Uw9aFEpEG_jBWS2R5BKWdBOmQwjg"},
{"content":{"body":"Yes, I too have written bundlers. Agree very much that we need extension points and support from 262 for parity between dev and prod.","msgtype":"m.text","org.matrix.msc1767.text":"Yes, I too have written bundlers. Agree very much that we need extension points and support from 262 for parity between dev and prod."},"ts":1669819803266,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$X_E3BXBli6qqHS_sotv2111_72I3vQnjNRmcDqCY0fA"}
]