[
{"content":{"body":"Is anyone still researching base64 utilities?","msgtype":"m.text"},"ts":1681460903974,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2FKndE4MoXJO14_rxruo38eW80jp2sWNsyvsnlegl6Q"},
{"content":{"body":"bakkot updated the base64 proposal just last week. https://tc39.es/proposal-arraybuffer-base64/","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a> updated the base64 proposal just last week. https://tc39.es/proposal-arraybuffer-base64/","msgtype":"m.text"},"ts":1681463184391,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$3Q46vKiT3x-iNdb-NH7IHM3oUADoCy_DNs5gaDUY1ro"},
{"content":{"body":"Thanks, it seems that has the relevant issues that need to be solved as well","msgtype":"m.text"},"ts":1681467924780,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$9SNAWPDFjZDuw7DA5sjoAjieVdzepGRAAyOCh5crAkg"},
{"content":{"body":"I'm getting closer to understanding (and improving) how WebKit handles all of this which should help eventually driving those to some resolution","msgtype":"m.text"},"ts":1681467962942,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$518z8a-Ym14y9Dw0ftm8RP84QGPkghkftv9_6PfQ_7M"},
{"content":{"body":"I am hoping to bring it for stage 2 next meting","msgtype":"m.text"},"ts":1681487109274,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$MMAzG-Wr1_TgYkBCsWjzGmOrHTzWDfQ4YzQTItgNjqY"},
{"content":{"body":" * I am hoping to bring it for stage 2 next meeting","m.new_content":{"body":"I am hoping to bring it for stage 2 next meeting","msgtype":"m.text"},"m.relates_to":{"event_id":"$MMAzG-Wr1_TgYkBCsWjzGmOrHTzWDfQ4YzQTItgNjqY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681487118881,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GtYPGLDul07693yeBmf9Bd4-19ujHL6QaNYRQNd_0g0"},
{"content":{"body":"currently leaning towards, the decoder will be lenient in accepting whitespace / not enforcing `=` padding, and the encoder will be strict in not producing whitespace and always producing `=` padding","format":"org.matrix.custom.html","formatted_body":"currently leaning towards, the decoder will be lenient in accepting whitespace / not enforcing <code>=</code> padding, and the encoder will be strict in not producing whitespace and always producing <code>=</code> padding","msgtype":"m.text"},"ts":1681487170524,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-DY866RpFh1ZzLqbSimCxJADc8bppMXNYYAMB04qiGA"},
{"content":{"body":"and then maybe not having options for those, unless there's a compelling case made","msgtype":"m.text"},"ts":1681487183019,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nR6GB6eCrypa0O3hCxU2Q6RuTIExIlIzAC1FZ5sbwK0"},
{"content":{"body":"I was originally planning on having options for how to handle whitespace and `=` but they're probably not actually necessary","format":"org.matrix.custom.html","formatted_body":"I was originally planning on having options for how to handle whitespace and <code>=</code> but they're probably not actually necessary","msgtype":"m.text"},"ts":1681487205504,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iSqmH6wMuvzLtDvtb6JYPQXVnk4w4xFRK_W1ymJWV6E"},
{"content":{"body":"bakkot: what I'm learning in WebKit thus far is that the options differ between base64/base64url","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: what I'm learning in WebKit thus far is that the options differ between base64/base64url","msgtype":"m.text"},"ts":1681491074622,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$PKgUhGqk2LCnF4ColmpMBWze76fvW7F0PVWXocPU2Zs"},
{"content":{"body":"fascinating","msgtype":"m.text"},"ts":1681491094125,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hkyYp6GQ43kTq6w9oaE47auJWyD_6D0MvHjv7-bazkE"},
{"content":{"body":"bakkot: only base64 has a lenient decode mode of sorts compatible with atob/data: URLs","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: only base64 has a lenient decode mode of sorts compatible with atob/data: URLs","msgtype":"m.text"},"ts":1681491116610,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$HIt4hvYJ1l3Mpk2FLsB3y1bjFvUX9R8qaZ38Or-UPoM"},
{"content":{"body":"also, some places (possibly including the CSP spec?) allow \"mixed\" decoding, where you can just mix characters from either alphabet, which I am not current planning to support because, gross","msgtype":"m.text"},"ts":1681491149727,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$upCyZc8t1b_NXiuvUovqLDDr-ov_8_QFvBTCgHV3VHw"},
{"content":{"body":"Which also kinda matches what I've seen in standards, though I haven't tested base64url endpoints myself","msgtype":"m.text"},"ts":1681491159804,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$rIv9ed5QMq41k-_rZf7X26Yc7hRQefLGH_vzoxtAsy4"},
{"content":{"body":"I thought CSP relied on comparing the result of encode from our past discussion, but also have never attempted to test myself","msgtype":"m.text"},"ts":1681491184811,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$Z2OkXusqUci_z1scxXJTq0Wb0OoDZB0pFQYDR77suFU"},
{"content":{"body":"that is correct but it does a find-replace first","msgtype":"m.text"},"ts":1681491220555,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_ZzrdCQFeGrysx9JhvLVNx6aDJSr04T65EdFfHdpc1I"},
{"content":{"body":"https://www.w3.org/TR/CSP3/#match-element-to-source-list step 5.2.5.2","msgtype":"m.text"},"ts":1681491239916,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mHIV8B72fZAwhwChokoTJTGfdpPOvc8827Xj_KRvcAk"},
{"content":{"body":"so in practice it is equivalent to doing a strict decoding but with mixed alphabet","msgtype":"m.text"},"ts":1681491266498,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jKFCHxu4BVVZdzh9h4PJqvDTJXGSLs2ROGlp0XHxJxw"},
{"content":{"body":" * so in practice it is equivalent to doing a strict decoding (i.e. enforcing padding) but with mixed alphabet","m.new_content":{"body":"so in practice it is equivalent to doing a strict decoding (i.e. enforcing padding) but with mixed alphabet","msgtype":"m.text"},"m.relates_to":{"event_id":"$jKFCHxu4BVVZdzh9h4PJqvDTJXGSLs2ROGlp0XHxJxw","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681491273756,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vtNePlPeRM2ISMn1C-To3OR6Ja_pjQjIJtJbg0gwR5U"},
{"content":{"body":"I would also be 0% surprised to find that implementations differ from the spec on that point","msgtype":"m.text"},"ts":1681491295411,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CvOdKt2fGSs2B5uWSOxlCf2PBpARVQbPd6hx6LEVTd4"},
{"content":{"body":"ok actually I have reminded myself that it's more complicated because the SRI check, unlike the hash-source check, does not include the find/replace step https://github.com/w3c/webappsec-csp/issues/423","msgtype":"m.text"},"ts":1681491422657,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$z2Gl2mjahAJg-E7uhrA8EtlloF3Y-M0tbmOxv23KAP4"},
{"content":{"body":"again this is just the spec, no idea what implementations do","msgtype":"m.text"},"ts":1681491432917,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$0wxaTV5Tk3QBUDiPu62mPLPUcPKOzfuxACdGLffTHNI"},
{"content":{"body":"Yeah, CSP is pretty bad on a number of fronts so maybe not the best place to draw from. Though if you're inclined to sort it out a bit I'd be happy to help","msgtype":"m.text"},"ts":1681491732185,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$RwWQFt6aFiXtFpRDdCN3jeUp0CyTTJHz10igbJBaXcE"},
{"content":{"body":"I did open a few PRs a couple years back and they got no attention, so I stopped doing that","msgtype":"m.text"},"ts":1681491791189,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$X20JWl18XanTavWKHRNhmYmBSE3Ouwplbj5MQmbktIo"},
{"content":{"body":"I guess they're conflicting now so clearly someone has done at least some work","msgtype":"m.text"},"ts":1681491814204,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$D4Iqb6u-o2TWvgyMx425f2kCed3hh9UH2wWhLZ8lV10"},
{"content":{"body":"That's unfortunate","msgtype":"m.text"},"ts":1681492852396,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$2wRJDFUf7DNkrepN3bkK8VgplUyk2jBQ2rj4_Y45ovU"},
{"content":{"body":"There has been some more maintenance as of late, but nothing spectacular","msgtype":"m.text"},"ts":1681492872113,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$pnns4A5Ku8gwt_WQ0nxXT2lOCoBPVL_xHh8T3rKyvF4"},
{"content":{"body":"Yeah probably worth trying again","msgtype":"m.text"},"ts":1681493153461,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$StAaU7fYcPPl0KWbBmL3UPrulp8vRGrZIJNZ2OUwSrI"},
{"content":{"body":"There's a lot of specs which could use some love","msgtype":"m.text"},"ts":1681493167987,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$hR4-MDmi7BSGf50EBKfTPQnh8NPmtHYF4BYTmAH6XNg"},
{"content":{"body":"Has there been a proposal to support HTTP headers with the (dynamic) module import syntax?","msgtype":"m.text"},"ts":1681497651206,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I"},
{"content":{"body":"It would be useful to pass an `Authorization` header than being forced to pass a token as query param (easily vulnerable).","format":"org.matrix.custom.html","formatted_body":"It would be useful to pass an <code>Authorization</code> header than being forced to pass a token as query param (easily vulnerable).","msgtype":"m.text"},"ts":1681498476653,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$YzAFl6WcODcxwXr1zX8AUS7XMErmqhJ2M2N_xZKdLyo"},
{"content":{"body":"* It would be useful to pass an `Authorization` header than being forced to pass a token in the URL (easily vulnerable).","m.new_content":{"body":"It would be useful to pass an `Authorization` header than being forced to pass a token in the URL (easily vulnerable).","format":"org.matrix.custom.html","formatted_body":"It would be useful to pass an <code>Authorization</code> header than being forced to pass a token in the URL (easily vulnerable).","msgtype":"m.text"},"m.relates_to":{"event_id":"$YzAFl6WcODcxwXr1zX8AUS7XMErmqhJ2M2N_xZKdLyo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681503217984,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$bzAlbgoAVKkkIASu6QU2QE_jyDqAUQ02wqw6nN1Bo-U"},
{"content":{"body":"* It would be useful to pass an `Authorization` header than a token in the URL (easily vulnerable).","m.new_content":{"body":"It would be useful to pass an `Authorization` header than a token in the URL (easily vulnerable).","format":"org.matrix.custom.html","formatted_body":"It would be useful to pass an <code>Authorization</code> header than a token in the URL (easily vulnerable).","msgtype":"m.text"},"m.relates_to":{"event_id":"$YzAFl6WcODcxwXr1zX8AUS7XMErmqhJ2M2N_xZKdLyo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681503235227,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$A3CNd_WNYVI5UBFZ7JzFgsnkE-K9ZKH4AOQwl7fwvwE"},
{"content":{"body":"https://tc39.es/ecma262/#sec-LoadRequestedModules","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681504071534,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$X5waRiWZ76kMh0CXi8Kud_WKQaPw_ry99Mym44E5dSw"},
{"content":{"body":"> `import()` expressions never set the `hostDefined` parameter","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p><code>import()</code> expressions never set the <code>hostDefined</code> parameter</p>\n</blockquote>\n","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$X5waRiWZ76kMh0CXi8Kud_WKQaPw_ry99Mym44E5dSw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681504102899,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$DuFguh5lxLi8CSXb6zD7NEefJSRj9qR0kQAFRaPjahk"},
{"content":{"body":"https://github.com/tc39/proposal-dynamic-import/issues/76","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$DuFguh5lxLi8CSXb6zD7NEefJSRj9qR0kQAFRaPjahk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681504228614,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$zCGPK31T9i8bAMeSKR2nQwJsQ-kOQ_3gfoka0fO8D0A"},
{"content":{"body":"https://github.com/tc39/proposal-dynamic-import/issues/84#issuecomment-855285508\n\nthere's what appears to be a workaround here, but I didn't scrutinize it","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$zCGPK31T9i8bAMeSKR2nQwJsQ-kOQ_3gfoka0fO8D0A"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681504370323,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Dj50qWVOXYYWtF_llXcS4c3tfcKOGVdtoIzW9SC7ssU"},
{"content":{"body":"https://github.com/tc39/proposal-import-attributes","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$Dj50qWVOXYYWtF_llXcS4c3tfcKOGVdtoIzW9SC7ssU"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681505384030,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$J_gCtaQJazYyt8bUJozG6e4qXQ50fxOnBKFCBf8tzqI"},
{"content":{"body":"this proposal could conceivably support it, but handling the options is the domain of the browser/runtime","m.relates_to":{"event_id":"$tQWZO-dnejP4pbUrBWr-ujd8k1dK-0jUtk6YER_50_I","is_falling_back":true,"m.in_reply_to":{"event_id":"$J_gCtaQJazYyt8bUJozG6e4qXQ50fxOnBKFCBf8tzqI"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681505425086,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$_RclMj8GGuGlrfHdL3or_lf3fD1o7gHrInEZt8ralzg"},
{"content":{"body":"Thanks Chris de Almeida","format":"org.matrix.custom.html","formatted_body":"Thanks <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">Chris de Almeida</a>","msgtype":"m.text"},"ts":1681508984187,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$UyuzUFnQMmprN4CAV417zV4brG3hvZZpuJiDsOBUNfY"},
{"content":{"body":"happy to help","msgtype":"m.text"},"ts":1681509035291,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$NCqpUtk9EZOYT0Qx16WPg8Meyy9hP_yq_3MaguFSlCQ"},
{"content":{"body":"> <@softwarechris:matrix.org> happy to help\n\nWould the Blob method allow relative imports from the module?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$NCqpUtk9EZOYT0Qx16WPg8Meyy9hP_yq_3MaguFSlCQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br />happy to help</blockquote></mx-reply>Would the Blob method allow relative imports from the module?","m.relates_to":{"m.in_reply_to":{"event_id":"$NCqpUtk9EZOYT0Qx16WPg8Meyy9hP_yq_3MaguFSlCQ"}},"msgtype":"m.text"},"ts":1681509242748,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$_MGPYyeF5Pq0ZrHvPsaThSq0TZvdQHf3Zjp_ASbbXGA"},
{"content":{"body":"what do you mean?","m.relates_to":{"event_id":"$_MGPYyeF5Pq0ZrHvPsaThSq0TZvdQHf3Zjp_ASbbXGA","is_falling_back":true,"m.in_reply_to":{"event_id":"$_MGPYyeF5Pq0ZrHvPsaThSq0TZvdQHf3Zjp_ASbbXGA"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681509339583,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$boS7UZldhSvhlpbmF6FLjWgfiEF-U62a8jTBRQ3O4j8"},
{"content":{"body":"The module would be perceived as from the Blob URL, so any ```\nimport('../somefile.js')\n```\nwould break if called from the imported module?\nThink I've tried a similar method (`import(<base64-encoded-script)` I believe) before and it didn't work.","format":"org.matrix.custom.html","formatted_body":"<p>The module would be perceived as from the Blob URL, so any ```<br />import('../somefile.js')</p>\n<pre><code>would break if called from the imported module?\nThink I've tried a similar method (`import(&lt;base64-encoded-script)` I believe) before and it didn't work.\n</code></pre>","msgtype":"m.text"},"ts":1681509575042,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM"},
{"content":{"body":"* The module would be perceived as from the Blob URL, so any \n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?\nThink I've tried a similar method (`import(<base64-encoded-script)` I believe) before and it didn't work.","m.new_content":{"body":"The module would be perceived as from the Blob URL, so any \n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?\nThink I've tried a similar method (`import(<base64-encoded-script)` I believe) before and it didn't work.","format":"org.matrix.custom.html","formatted_body":"<p>The module would be perceived as from the Blob URL, so any</p>\n<pre><code>import('../somefile.js')\n</code></pre>\n<p>would break if called from the imported module?<br />Think I've tried a similar method (<code>import(&lt;base64-encoded-script)</code> I believe) before and it didn't work.</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681509587620,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$5HNEqAlRiwJ2mJ4KxIpYWrkVio5pmD138aytwp-QOeM"},
{"content":{"body":"* The module would be perceived as from the Blob URL, so any \n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","m.new_content":{"body":"The module would be perceived as from the Blob URL, so any \n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","format":"org.matrix.custom.html","formatted_body":"<p>The module would be perceived as from the Blob URL, so any</p>\n<pre><code>import('../somefile.js')\n</code></pre>\n<p>would break if called from the imported module?</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681509609616,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$V7SqcJOdLtjzQrm_GVivKKWhQcuVq5e_4lMnCYGrSfw"},
{"content":{"body":"* The module would be perceived as from the Blob URL, so a\n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","m.new_content":{"body":"The module would be perceived as from the Blob URL, so a\n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","format":"org.matrix.custom.html","formatted_body":"<p>The module would be perceived as from the Blob URL, so a</p>\n<pre><code>import('../somefile.js')\n</code></pre>\n<p>would break if called from the imported module?</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681509755937,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$wWY8M_zzfudYZ_2x83UX43_B_dJ1ePg5QpbJVkEHnqg"},
{"content":{"body":"* The module would be perceived as from the Blob URL, so an\n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","m.new_content":{"body":"The module would be perceived as from the Blob URL, so an\n```\nimport('../somefile.js')\n```\nwould break if called from the imported module?","format":"org.matrix.custom.html","formatted_body":"<p>The module would be perceived as from the Blob URL, so an</p>\n<pre><code>import('../somefile.js')\n</code></pre>\n<p>would break if called from the imported module?</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681509771996,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$5ZPtsNhRSDVaOClUMvJB4Fe-QsOjyulByVGBqt6d674"},
{"content":{"body":"well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative file imports would be game over","m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","is_falling_back":true,"m.in_reply_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681510079879,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q"},
{"content":{"body":"> <@softwarechris:matrix.org> well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative file imports would be game over\n\nDidn't quite get it. Relative urls already work on browsers/node?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br />well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative file imports would be game over</blockquote></mx-reply>Didn't quite get it. Relative urls already work on browsers/node?","m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","is_falling_back":true,"m.in_reply_to":{"event_id":"$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681510219461,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$S2oOD8SYBxS5K-8tpYxdPcLPQg7T5SzTzCgBctVG0W8"},
{"content":{"body":" * well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...\n\nedit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is `somefile.js` ?","format":"org.matrix.custom.html","formatted_body":" * <p>well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...</p>\n<p>edit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is <code>somefile.js</code> ?</p>\n","m.new_content":{"body":"well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...\n\nedit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is `somefile.js` ?","format":"org.matrix.custom.html","formatted_body":"<p>well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...</p>\n<p>edit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is <code>somefile.js</code> ?</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681510224217,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$7V03drI6HMSAKstz0ulV0AeR63QPDzBRyhZbhROeRM8"},
{"content":{"body":"> <@softwarechris:matrix.org> well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...\n> \n> edit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is `somefile.js` ?\n\nOf course on the server, one level above the absolute URL of the prior module.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br /><p>well, yes. if I understand you correctly that would break but if that's the case, it would be broken without the blob method anyway.  it implies you need some sort of build step.  the minute you are importing from a url, any relative (or absolute) file imports from the url-imported module would be game over...</p>\n<p>edit: probably game over but thinking through this a bit more, I'm not 100% sure because I've never done this.. I would expect it not to work but, where is <code>somefile.js</code> ?</p>\n</blockquote></mx-reply>Of course on the server, one level above the absolute URL of the prior module.","m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","is_falling_back":true,"m.in_reply_to":{"event_id":"$yukyx9YpWGgUv8dNZQiDLi4Ez8JvoPRVN9ZrO4J91_Q"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681510269956,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$yqQcwwaAHcSAnKh3mV7kP7AbWt21yDoWCq6puxUX_Lk"},
{"content":{"body":"`../somefile.js` is not a relative url, it's a relative file path.  in any case, at this point, I think I need a more complete example because I'm not sure I'm following you","format":"org.matrix.custom.html","formatted_body":"<code>../somefile.js</code> is not a relative url, it's a relative file path.  in any case, at this point, I think I need a more complete example because I'm not sure I'm following you","m.relates_to":{"event_id":"$8f8YeHbRXr8H6Bf7a4PlaDoIr1ClvU2sjKkJSH6kpzM","is_falling_back":true,"m.in_reply_to":{"event_id":"$yqQcwwaAHcSAnKh3mV7kP7AbWt21yDoWCq6puxUX_Lk"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681510377552,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$HyRKxMf12BSjCQIQRgRZbLzPq1skyaeLmAvgw44RlBI"},
{"content":{"body":"Sorry. Wrong terming. Let me clarify.","msgtype":"m.text"},"ts":1681510436321,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$lnLzjscDeI0EgNfM9ocMC7yxqHJvKq1NEUWEuXFOPR4"},
{"content":{"body":"You've got `https://some-server/script/index.js` with a statement\n```\nimport stuff from \"./lib/some-util.js\";\n```\nHow does this work with Blobs ?","format":"org.matrix.custom.html","formatted_body":"<p>You've got <code>https://some-server/script/index.js</code> with a statement</p>\n<pre><code>import stuff from &quot;./lib/some-util.js&quot;;\n</code></pre>\n<p>How does this work with Blobs ?</p>","msgtype":"m.text"},"ts":1681510562539,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$CLipfTh-D4xk8v1OjGb4WcD3MOmTla5VPMc8jMGsL1c"},
{"content":{"body":"It wouldn't, whereas it would if you imported directly.","msgtype":"m.text"},"ts":1681510588735,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$Z7R75d_oCxq0uSbnKJemQklH4d5KZ1fa5HzFjNRaL4w"},
{"content":{"body":"Anyway I've resorted to query parameters for now.","msgtype":"m.text"},"ts":1681511399653,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$BpDXdbpWiPV9DYV8oVHY-CVjeIavXbqxtympFzUJ16U"},
{"content":{"body":"why would credentials in code be less vulnerable than credentials in a query string?","msgtype":"m.text"},"ts":1681511464584,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw"},
{"content":{"body":"if I understand you correctly, right, that would not work","msgtype":"m.text"},"ts":1681511476486,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$xdAhXAiocn1-oTTdq69Q63ypbMpHRr53h4uGP_nHJ0k"},
{"content":{"body":"> <@ljharb:matrix.org> why would credentials in code be less vulnerable than credentials in a query string?\n\nDidn't get you.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br />why would credentials in code be less vulnerable than credentials in a query string?</blockquote></mx-reply>Didn't get you.","m.relates_to":{"m.in_reply_to":{"event_id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw"}},"msgtype":"m.text"},"ts":1681511493139,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$x7S3CIFFSiuAf2okugAcXIsDTE-6avltpiC603NyS4M"},
{"content":{"body":"well -- referrer policy can expose the query string","m.relates_to":{"event_id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw","is_falling_back":true,"m.in_reply_to":{"event_id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681511496512,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$Vir_i0AeTr1nx_FxefZjmhIsUKLVyy-_lZclcUT9yhc"},
{"content":{"body":"you said earlier\n> It would be useful to pass an Authorization header than a token in the URL (easily vulnerable)","format":"org.matrix.custom.html","formatted_body":"<p>you said earlier</p>\n<blockquote>\n<p>It would be useful to pass an Authorization header than a token in the URL (easily vulnerable)</p>\n</blockquote>\n","msgtype":"m.text"},"ts":1681511516218,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZeA6YqVCGgnu8G0ElZWlsiSP__t0o5ZsoGPUHZurKDI"},
{"content":{"body":"presumably the credentials aren't hardcoded... one would hope","m.relates_to":{"event_id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw","is_falling_back":true,"m.in_reply_to":{"event_id":"$Vir_i0AeTr1nx_FxefZjmhIsUKLVyy-_lZclcUT9yhc"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681511560278,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$27BZo1nwP-TtDGh45PsnfNuSyk7tGZDnLSeU64SOijY"},
{"content":{"body":"> <@softwarechris:matrix.org> presumably the credentials aren't hardcoded... one would hope\n\nIdk who hardcodes JWTs","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$27BZo1nwP-TtDGh45PsnfNuSyk7tGZDnLSeU64SOijY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@softwarechris:matrix.org\">@softwarechris:matrix.org</a><br />presumably the credentials aren't hardcoded... one would hope</blockquote></mx-reply>Idk who hardcodes JWTs","m.relates_to":{"event_id":"$9ctUzaq5349z6cFTkX3c6XeuRgSyJ1YHgVDB-rrAmGw","is_falling_back":true,"m.in_reply_to":{"event_id":"$27BZo1nwP-TtDGh45PsnfNuSyk7tGZDnLSeU64SOijY"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1681511583244,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$_7zjXwBNtfX_ez-X-CWXMuCLfiO_ypDpz5uD2Vb5c-Y"},
{"content":{"body":"> <@ljharb:matrix.org> you said earlier\n> > It would be useful to pass an Authorization header than a token in the URL (easily vulnerable)\n\nThat's the Bearer auth standard, isn't it?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ZeA6YqVCGgnu8G0ElZWlsiSP__t0o5ZsoGPUHZurKDI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br /><p>you said earlier</p>\n<blockquote>\n<p>It would be useful to pass an Authorization header than a token in the URL (easily vulnerable)</p>\n</blockquote>\n</blockquote></mx-reply>That's the Bearer auth standard, isn't it?","m.relates_to":{"m.in_reply_to":{"event_id":"$ZeA6YqVCGgnu8G0ElZWlsiSP__t0o5ZsoGPUHZurKDI"}},"msgtype":"m.text"},"ts":1681511633362,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$3T8rJuvmCnZ2DByJFHMITNQiEf-mmpv9Sh_A73iLSZ8"},
{"content":{"body":"i'm not sure what you mean","msgtype":"m.text"},"ts":1681511654419,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$s3vV3WHaFlAUduy7lEY1sb4yBD6pLXDVzCpjtg55b20"},
{"content":{"body":"where would the credentials come from?","msgtype":"m.text"},"ts":1681511661717,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2JKB9GWCpmyalmBKVc9t14MuLBBb8rZNiSiMg02jqaQ"},
{"content":{"body":"It could come from anywhere? A login? A delegated access token? Does it matter as long the client somehow finds it?","msgtype":"m.text"},"ts":1681511703041,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$hIPrLOubmEQJa8duoOYTFHwGA7cia3cJzrL9c98AQl4"},
{"content":{"body":"ok so you're not suggesting it live in the source code, you just want a way to tag an import as needing an auth header?","msgtype":"m.text"},"ts":1681511724755,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$zN_w7bsLkB4h8HaIuGwYOJq3I7BUDERIzhF6uVKY71o"},
{"content":{"body":"Yeah because not everyone has access to the same scope.","msgtype":"m.text"},"ts":1681511744426,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$oKRo1QU88xoFZsA078D8FRFYzsgc65B6poxOECtkCXY"},
{"content":{"body":"And instead of loading scripts and only blocking data APIs, I've decided to block the whole thing.","msgtype":"m.text"},"ts":1681511786738,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$uTA8fAHayTgJhu4PzzhFFxImw2bNDYeGOoUdogTgdn4"},
{"content":{"body":"I could run you through an example, although the site uses a self-signed certificate at the moment.","msgtype":"m.text"},"ts":1681511923878,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$Hw05v1qwqmErIe6oEs7dv5KBKZ2tKlX0FlCLVZGCEnE"},
{"content":{"body":"* I could run you through an example, although the site uses a self-signed certificate at the moment and I didn't add the whole auth thing yet.","m.new_content":{"body":"I could run you through an example, although the site uses a self-signed certificate at the moment and I didn't add the whole auth thing yet.","msgtype":"m.text"},"m.relates_to":{"event_id":"$Hw05v1qwqmErIe6oEs7dv5KBKZ2tKlX0FlCLVZGCEnE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1681511961335,"senderName":"Partime","senderId":"@partime:matrix.org","id":"$8leTvE-287HC9G7Xrm7zVDfJvkwrYM-yfQR1tfnXjVM"}
]