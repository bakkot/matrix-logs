[
{"content":{"body":"> <@annevk:matrix.org> Also, this should come with some kind of Web IDL story I think.\n\nYes, I agree with this; maybe we should open a parallel bug in WebIDL to discuss. I think on both ends, the annoying thing is, what do we do with the new world and the old world coexisting, if we try to move in this direction? Should we continue the cautious way that we've been doing with Temporal, or do something more drastic as the title implies?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$fovSnuXscLtgYAUbtx2z0k0GWQLxouhA69vgmPRLCiY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@annevk:matrix.org\">@annevk:matrix.org</a><br>Also, this should come with some kind of Web IDL story I think.</blockquote></mx-reply>Yes, I agree with this; maybe we should open a parallel bug in WebIDL to discuss. I think on both ends, the annoying thing is, what do we do with the new world and the old world coexisting, if we try to move in this direction? Should we continue the cautious way that we've been doing with Temporal, or do something more drastic as the title implies?","m.relates_to":{"m.in_reply_to":{"event_id":"$fovSnuXscLtgYAUbtx2z0k0GWQLxouhA69vgmPRLCiY"}},"msgtype":"m.text"},"ts":1688516087806,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$SKl5J34BNrYZ0Z9jo0SVAtIedbYC4sgIaS-pJiwKMrE"},
{"content":{"body":"In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:(One exception is \n\n- Complex overloads: https://github.com/whatwg/webidl/issues/581\n- required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .","format":"org.matrix.custom.html","formatted_body":"<p>In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:(One exception is</p>\n<ul>\n<li>Complex overloads: https://github.com/whatwg/webidl/issues/581</li>\n<li>required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .</li>\n</ul>\n","msgtype":"m.text"},"ts":1688519895372,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$U8-Gz3Xm-AJp-na7Fj_7Orl776gILF3a4_8M5YlEDOE"},
{"content":{"body":" * In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:\n\n- Complex overloads: https://github.com/whatwg/webidl/issues/581\n- required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .","format":"org.matrix.custom.html","formatted_body":" * <p>In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:</p>\n<ul>\n<li>Complex overloads: https://github.com/whatwg/webidl/issues/581</li>\n<li>required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .</li>\n</ul>\n","m.new_content":{"body":"In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:\n\n- Complex overloads: https://github.com/whatwg/webidl/issues/581\n- required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .","format":"org.matrix.custom.html","formatted_body":"<p>In most cases on the web platform / Web IDL undefined is treated the same as missing. There are two exceptions that I know of, neither of which I'm very happy about:</p>\n<ul>\n<li>Complex overloads: https://github.com/whatwg/webidl/issues/581</li>\n<li>required arguments are checked via arguments.length, e.g. see the footnote in https://github.com/whatwg/webidl/pull/1179#issuecomment-1242568486 .</li>\n</ul>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$U8-Gz3Xm-AJp-na7Fj_7Orl776gILF3a4_8M5YlEDOE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688519904755,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$JfJu7SaAcuGkvCFcziDbjlGa0BXIV8ygWaGM8Q7C2yo"},
{"content":{"body":"It looks like both of those might be solved by a normalization step that removes trailing undefineds passed by JS, before they hit the Web IDL layer.","msgtype":"m.text"},"ts":1688519967720,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ExCRSsClC2JGO7-z8YZkwSfn94OyGZNuefJ3Wyjws7g"},
{"content":{"body":"Although a more principled approach might be padding out missing trailing arguments with undefineds, so there's never a \"missing\" argument.","msgtype":"m.text"},"ts":1688520012241,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$PfWTJfQ9UnzE_Plfglaur20JoDhCRJ3_2Uto_bOoYJ8"},
{"content":{"body":"Anyway, I'm very in favor of unifying undefined and missing wherever possible, in the web and JS. (I'm still pretty sad that JS decided to explicitly differentiate them for error.cause.) Most languages have one level of missing thing (null). It seems fine if JS ends up with two levels: undefined/missing, and null. Making it three-layer (missing, undefined, null) is very unnecessary.","msgtype":"m.text"},"ts":1688520102424,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$-56_5x6rBpbLgz7c09sDbOEH9E0Wzk-tnuociq4UL3A"},
{"content":{"body":"Whether the missing/undefined value is treated as an error, is a separate question, I guess.","msgtype":"m.text"},"ts":1688520248166,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$ImVR6YP7POaV4oK3QAWoI7c9EeKooX_UtOaRel3seV4"},
{"content":{"body":" * Whether the missing/undefined value is treated as an error, or coerced, is a separate question, I guess.","m.new_content":{"body":"Whether the missing/undefined value is treated as an error, or coerced, is a separate question, I guess.","msgtype":"m.text"},"m.relates_to":{"event_id":"$ImVR6YP7POaV4oK3QAWoI7c9EeKooX_UtOaRel3seV4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688520624104,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$MSQizpFk5jGA_Zys5P54KE7VYQg865Nlm29-Wd_u2B4"},
{"content":{"body":"In cases where it is clearly the wrong type I am hoping to move us towards being an error. I really don't see much advantage to it being coerced.","msgtype":"m.text"},"ts":1688520721435,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$dt07ZhsgxBR_RF6Fs7DGKRvbqiOtQ14x2dxGVUBuGzQ"},
{"content":{"body":"`document.createElement(object.someMissingProperty)` giving you `<undefined></undefined>` is not doing anyone any good.","format":"org.matrix.custom.html","formatted_body":"<code>document.createElement(object.someMissingProperty)</code> giving you <code>&lt;undefined&gt;&lt;/undefined&gt;</code> is not doing anyone any good.","msgtype":"m.text"},"ts":1688520777725,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$h5KI7hb6N78pPnkVTDBjkVdv1tVwL54QSbNPd5jyK-A"},
{"content":{"body":"Also I just remembered I have an issue from a couple months ago about this: https://github.com/w3ctag/design-principles/issues/437 though at the time I hadn't realized that my suggestion actually went against webIDL's current conventions","msgtype":"m.text"},"ts":1688520880316,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$PabmOcqUXwTikZTVm17CFUecuxjXUBkn7NtZrAUPs30"},
{"content":{"body":" * In cases where it is clearly the wrong type (for a required argument) I am hoping to move us towards being an error. I really don't see much advantage to it being coerced.","m.new_content":{"body":"In cases where it is clearly the wrong type (for a required argument) I am hoping to move us towards being an error. I really don't see much advantage to it being coerced.","msgtype":"m.text"},"m.relates_to":{"event_id":"$dt07ZhsgxBR_RF6Fs7DGKRvbqiOtQ14x2dxGVUBuGzQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1688521375418,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ADvuDe6k4SuMdgALNoB-OU8omWwsWl6lwmZ3IrEo258"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Although a more principled approach might be padding out missing trailing arguments with undefineds, so there's never a \"missing\" argument.\n\nHonestly I am not sure WebIDL should weaken this particular thing (well, definitely not without reducing the weak typing around undefined). This sounds like it would reduce error checking in practical ways.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24PfWTJfQ9UnzE_Plfglaur20JoDhCRJ3_2Uto_bOoYJ8\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Although a more principled approach might be padding out missing trailing arguments with undefineds, so there's never a \"missing\" argument.</blockquote></mx-reply>Honestly I am not sure WebIDL should weaken this particular thing (well, definitely not without reducing the weak typing around undefined). This sounds like it would reduce error checking in practical ways.","m.relates_to":{"m.in_reply_to":{"event_id":"$PfWTJfQ9UnzE_Plfglaur20JoDhCRJ3_2Uto_bOoYJ8"}},"msgtype":"m.text"},"ts":1688558284055,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ml3KAZJk21YZak3pQVb7bJO4r_FeaoeTx32fhdKHfFU"},
{"content":{"body":"> <@domenicdenicola:matrix.org> Anyway, I'm very in favor of unifying undefined and missing wherever possible, in the web and JS. (I'm still pretty sad that JS decided to explicitly differentiate them for error.cause.) Most languages have one level of missing thing (null). It seems fine if JS ends up with two levels: undefined/missing, and null. Making it three-layer (missing, undefined, null) is very unnecessary.\n\nI think the WebIDL unification aspect was missing from our discussion on Error.cause. Let’s see if we can make that happen in the future. Not everyone in TC39 can be a WebIDL expert…","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24-56_5x6rBpbLgz7c09sDbOEH9E0Wzk-tnuociq4UL3A\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br>Anyway, I'm very in favor of unifying undefined and missing wherever possible, in the web and JS. (I'm still pretty sad that JS decided to explicitly differentiate them for error.cause.) Most languages have one level of missing thing (null). It seems fine if JS ends up with two levels: undefined/missing, and null. Making it three-layer (missing, undefined, null) is very unnecessary.</blockquote></mx-reply>I think the WebIDL unification aspect was missing from our discussion on Error.cause. Let’s see if we can make that happen in the future. Not everyone in TC39 can be a WebIDL expert…","m.relates_to":{"m.in_reply_to":{"event_id":"$-56_5x6rBpbLgz7c09sDbOEH9E0Wzk-tnuociq4UL3A"}},"msgtype":"m.text"},"ts":1688558346285,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$l0JlcZlzm_9LzQbYMasK5wcaBgyU1jXGAUlXYXgaHIY"}
]