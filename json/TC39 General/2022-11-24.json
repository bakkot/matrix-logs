[
{"content":{"body":"ryzokuken (back friday): https://github.com/tc39/tc39.github.io/pull/303","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken (back friday)</a>: https://github.com/tc39/tc39.github.io/pull/303","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ryzokuken (back friday): https://github.com/tc39/tc39.github.io/pull/303","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@usharma:igalia.com\">ryzokuken (back friday)</a>: https://github.com/tc39/tc39.github.io/pull/303","mimetype":"text/html"}]},"ts":1669248348590,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$FvrbC80qTZDxWT1fWorugXZ5Pwtr4qHkGqZHJAbuMcE"},
{"content":{"body":"Oh, nice","msgtype":"m.text"},"ts":1669248431690,"senderName":"ryzokuken (back friday)","senderId":"@usharma:igalia.com","id":"$fX_9MYMCKrsBcGivYgy5LJya1H-gdt5OwDQgEUD867A"},
{"content":{"body":"nicolo-ribaudo: thanks, will merge asap after the prettier fix","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: thanks, will merge asap after the prettier fix","msgtype":"m.text"},"ts":1669248473013,"senderName":"ryzokuken (back friday)","senderId":"@usharma:igalia.com","id":"$5JetpbEgPAIIk2evLpwIQWSwMMRuVI5u7o4d-1lQ2ws"},
{"content":{"body":"> <@ljharb:matrix.org> re Date.parse, that was already attempted, and was blocked (by the chrome team as i recall)\n\nIf you're referring to what Richard Gibson proposed, and I co-blocked, the reason it didn't advance is because it wasn't attempting to solve the full problem: This attempt did not try to provide a full definition of a web-shippable Date.parse algorithm. An earlier attempt from Mozilla did work towards that goal, and it'd be great if that were revived.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$1_vBh9_Lu7hzQkc6UOKybtbfLtqvjgGxA2tiBvU9YGw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>re Date.parse, that was already attempted, and was blocked (by the chrome team as i recall) </blockquote></mx-reply>If you're referring to what Richard Gibson proposed, and I co-blocked, the reason it didn't advance is because it wasn't attempting to solve the full problem: This attempt did not try to provide a full definition of a web-shippable Date.parse algorithm. An earlier attempt from Mozilla did work towards that goal, and it'd be great if that were revived.","m.relates_to":{"m.in_reply_to":{"event_id":"$1_vBh9_Lu7hzQkc6UOKybtbfLtqvjgGxA2tiBvU9YGw"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> re Date.parse, that was already attempted, and was blocked (by the chrome team as i recall)\n\nIf you're referring to what Richard Gibson proposed, and I co-blocked, the reason it didn't advance is because it wasn't attempting to solve the full problem: This attempt did not try to provide a full definition of a web-shippable Date.parse algorithm. An earlier attempt from Mozilla did work towards that goal, and it'd be great if that were revived.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$1_vBh9_Lu7hzQkc6UOKybtbfLtqvjgGxA2tiBvU9YGw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>re Date.parse, that was already attempted, and was blocked (by the chrome team as i recall) </blockquote></mx-reply>If you're referring to what Richard Gibson proposed, and I co-blocked, the reason it didn't advance is because it wasn't attempting to solve the full problem: This attempt did not try to provide a full definition of a web-shippable Date.parse algorithm. An earlier attempt from Mozilla did work towards that goal, and it'd be great if that were revived.","mimetype":"text/html"}]},"ts":1669248537479,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$PuzkmZnoOKNKuNuA43TvMu4q9C3MjepKQVVSiixjWk8"},
{"content":{"body":"I think browsers would be willing to make changes if it resolved this ongoing compatibility issue; that proposal required browsers to make changes while giving up on solving that problem.","msgtype":"m.text","org.matrix.msc1767.text":"I think browsers would be willing to make changes if it resolved this ongoing compatibility issue; that proposal required browsers to make changes while giving up on solving that problem."},"ts":1669248596996,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$5hQ4zoYNkoPxs-4tkWyJ5V8y7zMsd2-upxl-mO9rOeI"},
{"content":{"body":"(At least, this is what Domenic said at the time while he was agreeing with me on the block, IIRC)","msgtype":"m.text","org.matrix.msc1767.text":"(At least, this is what Domenic said at the time while he was agreeing with me on the block, IIRC)"},"ts":1669248620852,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$eUU7Dejz-CjcSKsFVXx1tgEztttQg04iKuohAp6mw5o"},
{"content":{"body":"Lots of other poorly-specified formats with significant compatibility issues had their parsing standardized at some much later point, e.g., HTML itself. Date.parse would be doable, but it's also understandable if an individual person doesn't want to take on such a challenge.","msgtype":"m.text","org.matrix.msc1767.text":"Lots of other poorly-specified formats with significant compatibility issues had their parsing standardized at some much later point, e.g., HTML itself. Date.parse would be doable, but it's also understandable if an individual person doesn't want to take on such a challenge."},"ts":1669248749976,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zuOryPtLScLyuXdV5uBkFM46TXx9GRZONINi8BQXNBA"},
{"content":{"body":"ah yes, you're right","msgtype":"m.text","org.matrix.msc1767.text":"ah yes, you're right"},"ts":1669249782358,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$bV5sjnRQOrRnmMPqciTOPbiWof9B1BaRIfYuEDyXk8c"},
{"content":{"body":"altho i think blocking on a partial iterative approach is effectively blocking the whole thing, given how demotivating it is","msgtype":"m.text","org.matrix.msc1767.text":"altho i think blocking on a partial iterative approach is effectively blocking the whole thing, given how demotivating it is"},"ts":1669249799196,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$wu1Zn2ppmVBwpaOVqx0D4yY5ML2nSgv2KzD5adrtHvs"},
{"content":{"body":"Yeah, I really regret how demotivating the process was there","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, I really regret how demotivating the process was there"},"ts":1669249862469,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3pmcbR8dV4NKL0QCNNBkGJ9R_QbDhJOV-Bs06ytxDIg"},
{"content":{"body":"but I don't think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful.","msgtype":"m.text","org.matrix.msc1767.text":"but I don't think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful."},"ts":1669249910645,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$vq6JgV9JUpMqSYwjAgFqi2uuwWcLXaYkkT2YsbIpx_E"},
{"content":{"body":"(same thing happened with stack traces, in the same meeting)","msgtype":"m.text","org.matrix.msc1767.text":"(same thing happened with stack traces, in the same meeting)"},"ts":1669250144040,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$1uWyOAPBbtUl7VCVvcLbBOSWw-gY-FY1kaZkd2Wv-3w"},
{"content":{"body":"yeah i think it would have been a fine outcome if the objection was \"no new stuff\"","msgtype":"m.text","org.matrix.msc1767.text":"yeah i think it would have been a fine outcome if the objection was \"no new stuff\""},"ts":1669250158433,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7J3N07MeWuzxLj5UE0_2mZWDBtw698uRKnMkaDW3Klo"},
{"content":{"body":"that wasn't the takeaway for me tho","msgtype":"m.text","org.matrix.msc1767.text":"that wasn't the takeaway for me tho"},"ts":1669250166501,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$-XzvAjOuKffxS2FSw5Lvve_JJL5VSgfdne6ocazYMIE"},
{"content":{"body":"Yeah I guess the outcome could be confusing and lead to misunderstandings; I'm not sure what to do to address that.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah I guess the outcome could be confusing and lead to misunderstandings; I'm not sure what to do to address that."},"ts":1669250201118,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mfeTiJghccM4qUnxjaJd7c_skGSyy1cBgJuPbWvCGA4"},
{"content":{"body":"I think the issue with stack traces was a bit different but I don't remember what exactly was being proposed","msgtype":"m.text","org.matrix.msc1767.text":"I think the issue with stack traces was a bit different but I don't remember what exactly was being proposed"},"ts":1669250229798,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$OFXymRt7aMUF53futHqGilsGaucRokCCKw4CV5tlnOo"},
{"content":{"body":"I guess we should figure this history of stack traces out a bit, since they are coming up this meeting too...","msgtype":"m.text","org.matrix.msc1767.text":"I guess we should figure this history of stack traces out a bit, since they are coming up this meeting too..."},"ts":1669250406682,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ZZj3KLcwdtigHXDzjNRedbGbbz9siGJvYK75ujaKLkQ"},
{"content":{"body":"it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents","msgtype":"m.text","org.matrix.msc1767.text":"it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents"},"ts":1669251948390,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$yE-7_R6cmXiKKdDX5Ogp6XQm2cCw23-Yd_cy5iMEThM"},
{"content":{"body":" * it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents","m.new_content":{"body":"it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents","msgtype":"m.text","org.matrix.msc1767.text":"it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents"},"m.relates_to":{"event_id":"$yE-7_R6cmXiKKdDX5Ogp6XQm2cCw23-Yd_cy5iMEThM","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it felt the same to me; i was specifying the structure but not the contents, and i was told that i'd be blocked if i did anything less then specify 100% of the existing behavior, including contents"},"ts":1669251949745,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$H2lsTgOHDIjELM-bAjqZlLNNH6ZkQxKQDuy2wHTRCYs"},
{"content":{"body":"whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents","msgtype":"m.text","org.matrix.msc1767.text":"whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents"},"ts":1669251965656,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$dv_xPnn0pAm65J1LTwpyHJf-INVDSA5FP-umw_NKxdE"},
{"content":{"body":"I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)","msgtype":"m.text","org.matrix.msc1767.text":"I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)"},"ts":1669252130143,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$udyWuCPFYTxj_dyp3Qlz5wTIt5wUjFzNYcTZkqiGFkQ"},
{"content":{"body":"they also differ in that changes to Date.parse are changing what an existing function does, but the stack proposal was a new one (with unclear implications for what happens to the existing APIs)","msgtype":"m.text","org.matrix.msc1767.text":"they also differ in that changes to Date.parse are changing what an existing function does, but the stack proposal was a new one (with unclear implications for what happens to the existing APIs)"},"ts":1669252180663,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$wpq0Op7oIFgZ7e1NW9uK1-Zsu4Z7SYp_EQf8Ctnibac"},
{"content":{"body":"they are both important areas of work, but the differences in the problems call for somewhat different approaches","msgtype":"m.text","org.matrix.msc1767.text":"they are both important areas of work, but the differences in the problems call for somewhat different approaches"},"ts":1669252204877,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$6OdpwyCgJ9f797iSp6FdmnNBq890hIXH9NVhiQDl-Jc"},
{"content":{"body":" * I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)","m.new_content":{"body":"I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)","msgtype":"m.text","org.matrix.msc1767.text":"I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)"},"m.relates_to":{"event_id":"$udyWuCPFYTxj_dyp3Qlz5wTIt5wUjFzNYcTZkqiGFkQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * I think there are different challenges inherent in standardizing the stack vs standardizing Date.parse. For example, web reality agrees what the entrypoint is for Date.parse, but not the stack introspection APIs. And the nature of compatibility differs as well (e.g., Firefox's crazy experience that it would be web-incompatible of them to ship Chrome's API!)"},"ts":1669252257715,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$NTm1XKN5tWkYu1ukX6A6Jd2Y3IGHqi60FmW9LyoNjqs"},
{"content":{"body":"when the standard says, \"Do this [implicitly: plus something else which you have to figure out yourself]\", this is a mess for implementers. ES6 implicitly did a bunch of this, and it took us more than a year to untangle it after it was already \"standard\". I prefer our post-ES6 habit of making each feature well-defined and complete, by the time it is standardized.","msgtype":"m.text","org.matrix.msc1767.text":"when the standard says, \"Do this [implicitly: plus something else which you have to figure out yourself]\", this is a mess for implementers. ES6 implicitly did a bunch of this, and it took us more than a year to untangle it after it was already \"standard\". I prefer our post-ES6 habit of making each feature well-defined and complete, by the time it is standardized."},"ts":1669252389227,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$GrbBYo5157AdO1bPT5CsvgiRKpso0TcLNzBFUsJyCKo"},
{"content":{"body":"> <@ljharb:matrix.org> whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents\n\nSo I think iterative processes like these are good, and the stage process for a single proposal can be where the iteration happens (as opposed to multiple standard revisions)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$dv_xPnn0pAm65J1LTwpyHJf-INVDSA5FP-umw_NKxdE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents</blockquote></mx-reply>So I think iterative processes like these are good, and the stage process for a single proposal can be where the iteration happens (as opposed to multiple standard revisions)","m.relates_to":{"m.in_reply_to":{"event_id":"$dv_xPnn0pAm65J1LTwpyHJf-INVDSA5FP-umw_NKxdE"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@ljharb:matrix.org> whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents\n\nSo I think iterative processes like these are good, and the stage process for a single proposal can be where the iteration happens (as opposed to multiple standard revisions)","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$dv_xPnn0pAm65J1LTwpyHJf-INVDSA5FP-umw_NKxdE?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@ljharb:matrix.org\">@ljharb:matrix.org</a><br>whereas i see it as valuable to lock down the structure asap, and leave it to a followon proposal to lock down the contents</blockquote></mx-reply>So I think iterative processes like these are good, and the stage process for a single proposal can be where the iteration happens (as opposed to multiple standard revisions)","mimetype":"text/html"}]},"ts":1669252864275,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$qIP2swuh9YLh0NVoUnnov-zvyIeNJtNOjVXxUfxyOsw"},
{"content":{"body":"that only works if the same champions want to drive all stages of the change.","msgtype":"m.text"},"ts":1669267759613,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$b0KiEaLHS2K4J-X7JYAIY9cEQIumBmZJi_fx94oHH2w"},
{"content":{"body":"> <@littledan:matrix.org> but I don't think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful.\n\nI am still willing to work on https://github.com/tc39/proposal-uniform-interchange-date-parsing or a successor, but I don't know what you're referring to by \"add more features\" (and yes, the denial did and still does feel like \"all or nothing in one proposal\", which I don't consider practical).","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$vq6JgV9JUpMqSYwjAgFqi2uuwWcLXaYkkT2YsbIpx_E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>but I don&#39;t think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful.</blockquote></mx-reply>I am still willing to work on https://github.com/tc39/proposal-uniform-interchange-date-parsing or a successor, but I don't know what you're referring to by &quot;add more features&quot; (and yes, the denial did and still does feel like &quot;all or nothing in one proposal&quot;, which I don't consider practical).","m.relates_to":{"m.in_reply_to":{"event_id":"$vq6JgV9JUpMqSYwjAgFqi2uuwWcLXaYkkT2YsbIpx_E"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@littledan:matrix.org> but I don't think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful.\n\nI am still willing to work on https://github.com/tc39/proposal-uniform-interchange-date-parsing or a successor, but I don't know what you're referring to by \"add more features\" (and yes, the denial did and still does feel like \"all or nothing in one proposal\", which I don't consider practical).","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$vq6JgV9JUpMqSYwjAgFqi2uuwWcLXaYkkT2YsbIpx_E?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>but I don&#39;t think we should add more features to Date.parse, which is something that proposal did. Standardizing it should be about building compatibility, not improving behavior to be more useful.</blockquote></mx-reply>I am still willing to work on https://github.com/tc39/proposal-uniform-interchange-date-parsing or a successor, but I don't know what you're referring to by &quot;add more features&quot; (and yes, the denial did and still does feel like &quot;all or nothing in one proposal&quot;, which I don't consider practical).","mimetype":"text/html"}]},"ts":1669305158197,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$0ykGiPmMkXxAsZpevyVdxlabBfXJvH5QxaatmIdxkSE"}
]