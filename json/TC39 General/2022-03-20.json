[
{"content":{"body":"> <@devsnek:matrix.org> i will be very sad if we put type syntax in the language and it doesn't have some sort of reflection capability like python\n\nhave been thinking about this some: I think it would make more sense as a build step.\n\ne.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n\nthat is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$7z9JZ7NS540rCM8DRpsOLNyYiflJrT7JBrVC48uYSwM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i will be very sad if we put type syntax in the language and it doesn&#39;t have some sort of reflection capability like python</blockquote></mx-reply><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$7z9JZ7NS540rCM8DRpsOLNyYiflJrT7JBrVC48uYSwM"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@devsnek:matrix.org> i will be very sad if we put type syntax in the language and it doesn't have some sort of reflection capability like python\n\nhave been thinking about this some: I think it would make more sense as a build step.\n\ne.g., you could, I think, write a babel plugin that transformed `type(x)` into a representation of the type of the expression `x` at build time.\n\nthat is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$7z9JZ7NS540rCM8DRpsOLNyYiflJrT7JBrVC48uYSwM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i will be very sad if we put type syntax in the language and it doesn&#39;t have some sort of reflection capability like python</blockquote></mx-reply><p>have been thinking about this some: I think it would make more sense as a build step.</p>\n<p>e.g., you could, I think, write a babel plugin that transformed <code>type(x)</code> into a representation of the type of the expression <code>x</code> at build time.</p>\n<p>that is probably better than building it in to the language, in a couple ways: 1) it lets you get a rich representation, instead of just a string, and do name resolution etc, 2) it means there is no risk to stripping types in prod, which is important lest we bloat every shipped file forever</p>\n","mimetype":"text/html"}]},"ts":1647735672115,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$KMUIMICxI9pwRFQDRis4crI4pIsQMxTOQkxmV_Zx_GM"},
{"content":{"body":"that is certainly something that could happen","msgtype":"m.text"},"ts":1647735810337,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$UlVnXCltVHzBzh1dL9PYbIilGCSuIkbN2MnQGy9VQvc"},
{"content":{"body":"I'd still be sad though ðŸ¤·","msgtype":"m.text"},"ts":1647735837014,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$oLPqX1302korzfEdvbu_5CO5S4-v-O5FmKt3YiD2hXc"}
]