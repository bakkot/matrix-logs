[
{"content":{"body":"Is HostPromiseRejectionTracker supposed to be handling Promises, or PromiseCapabilties? https://tc39.es/ecma262/#sec-host-promise-rejection-tracker\n\nHTML expects to use the passed-in promise argument to index sets of `Promise`, which in HTML is actually WebIDL's Promise, which is actually a PromiseCapability. https://html.spec.whatwg.org/multipage/webappapis.html#the-hostpromiserejectiontracker-implementation\n\nHTML also wants to insert the promise into a PromiseRejectionEventInit, which holds a WebIDL Promise explicitly. Alternatively I suppose I could start my impl of HostPromiseRejectionTracker by creating \"a Promise resolved with promise\" and doge the entire disconnect...","format":"org.matrix.custom.html","formatted_body":"<p>Is HostPromiseRejectionTracker supposed to be handling Promises, or PromiseCapabilties? https://tc39.es/ecma262/#sec-host-promise-rejection-tracker</p>\n<p>HTML expects to use the passed-in promise argument to index sets of <code>Promise</code>, which in HTML is actually WebIDL's Promise, which is actually a PromiseCapability. https://html.spec.whatwg.org/multipage/webappapis.html#the-hostpromiserejectiontracker-implementation</p>\n<p>HTML also wants to insert the promise into a PromiseRejectionEventInit, which holds a WebIDL Promise explicitly. Alternatively I suppose I could start my impl of HostPromiseRejectionTracker by creating \"a Promise resolved with promise\" and doge the entire disconnect...</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1729795103267,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$9L_W4XGzyHaRolj88ZXKfEL5Y7SKsvDhlXiX6e_VHMQ"},
{"content":{"body":"wait maybe I'm supposed to do that Promise resolved with promise dance anyway per \"converting a javascript value to an IDL promise type\" https://webidl.spec.whatwg.org/#js-promise ðŸ¤”. ðŸ¦†","m.mentions":{},"msgtype":"m.text"},"ts":1729795433080,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$u_fqkowIiQRDELD9PQHoDXQdeAXgGFsTNna18vYCFEw"},
{"content":{"body":"HTML expects Promise objects too. It links to https://webidl.spec.whatwg.org/#idl-promise, which is not the webidl promise capability ","msgtype":"m.text"},"ts":1729795465484,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$VSZIl4hlnnoRSwoCwha7uVcWEEmflpjNmqlYuOuDxnI"},
{"content":{"body":"wait what? but `3.2.23. Promise types â€” Promise<T>` says \"IDL promise type values are represented by JavaScript PromiseCapability records.\"\nwhich links to your link there in 2.13.30 https://webidl.spec.whatwg.org/#dfn-promise-type","format":"org.matrix.custom.html","formatted_body":"wait what? but <code>3.2.23. Promise types â€” Promise&lt;T&gt;</code> says \"IDL promise type values are represented by JavaScript PromiseCapability records.\"<br>which links to your link there in 2.13.30 https://webidl.spec.whatwg.org/#dfn-promise-type","m.mentions":{},"msgtype":"m.text"},"ts":1729795591163,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$Dv7i1Nz7YQk-1Dnz1mH-lSEa0-kROS-d9k-NVGA9LQo"},
{"content":{"body":"I'm interpreting that to mean that HTML doesn't ever want to see a PromiseCapabiltiy's [[Promise]] Slot, and only wants to traffic in PromiseCapabilities","m.mentions":{},"msgtype":"m.text"},"ts":1729795624695,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$raRdPeDY4D3RIAVlSpr9flC7-C5eJkirlEixzUobNwI"},
{"content":{"body":"... probably should have asked this in whatwg matrix pinging domenic come to think of it ðŸ˜…","m.mentions":{},"msgtype":"m.text"},"ts":1729795691649,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$DsN7pQLTftMOz1topLTFGrD4oLyHJZOfrccEDneqfSg"},
{"content":{"body":"> <@akaster:serenityos.org> wait maybe I'm supposed to do that Promise resolved with promise dance anyway per \"converting a javascript value to an IDL promise type\" https://webidl.spec.whatwg.org/#js-promise ðŸ¤”. ðŸ¦†\n\nI don't think so as that would handle the promise, and just create another rejected promise?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$u_fqkowIiQRDELD9PQHoDXQdeAXgGFsTNna18vYCFEw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@akaster:serenityos.org\">@akaster:serenityos.org</a><br>wait maybe I&#39;m supposed to do that Promise resolved with promise dance anyway per &quot;converting a javascript value to an IDL promise type&quot; https://webidl.spec.whatwg.org/#js-promise ðŸ¤”. ðŸ¦†</blockquote></mx-reply>I don't think so as that would handle the promise, and just create another rejected promise?","m.mentions":{"user_ids":["@akaster:serenityos.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$u_fqkowIiQRDELD9PQHoDXQdeAXgGFsTNna18vYCFEw"}},"msgtype":"m.text"},"ts":1729796131335,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$RJZzkwfrFtr-OmGwONNw4CdFHisDbnYLWzdckjGadp8"},
{"content":{"body":"hmm. and that would be 'observable' as a stack overflow constantly creating new rejected promises and passing them to the HostPromiseRejectionTracker? ðŸ¤”","m.mentions":{},"msgtype":"m.text"},"ts":1729796344511,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$PunO2Gnrrzdo-ZMieIo_kCOigKeQuCMuwdsFxLkYotU"},
{"content":{"body":"the point of the unhandled and handled rejection events is to be able to associate them to the promise that is unhandled and possibly later becomes handled","m.mentions":{},"msgtype":"m.text"},"ts":1729796696847,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$ZBOKZmkBQj0QC-eIeR2vrYYO9WTma9Wjoks6uuvZ3Hk"},
{"content":{"body":"Arguably you could \"map\" them to another promise value, but you'd have to make that mapping stable, and I'd say you shouldn't handle the original promise in the first place","m.mentions":{},"msgtype":"m.text"},"ts":1729796769701,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$3N0JmODtEtHwy0jWMWVqXBtkast_OP7R2Rg_vwna6LA"},
{"content":{"body":"There's actually an open question in HTML of how to report unhandled promise events from other realms (ShadowRealm or Worker)","m.mentions":{},"msgtype":"m.text"},"ts":1729796808702,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$M9jUclbZvaufiWCz8MPWSTK_fIbCHE0eb6XHxF-C4rk"},
{"content":{"body":"hmm. so in that case, <https://html.spec.whatwg.org/multipage/webappapis.html#outstanding-rejected-promises-weak-set> telling me that they are Promises, and linking to both https://webidl.spec.whatwg.org/#idl-promise and https://webidl.spec.whatwg.org/#js-promise is misleading","format":"org.matrix.custom.html","formatted_body":"hmm. so in that case, <a href=\"https://html.spec.whatwg.org/multipage/webappapis.html#outstanding-rejected-promises-weak-set\">https://html.spec.whatwg.org/multipage/webappapis.html#outstanding-rejected-promises-weak-set</a> telling me that they are Promises, and linking to both https://webidl.spec.whatwg.org/#idl-promise and https://webidl.spec.whatwg.org/#js-promise is misleading","m.mentions":{},"msgtype":"m.text"},"ts":1729796836052,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$sME-zfsBfB8IezZfwvBaGfoEm6LbBclpvLda2FacY-4"},
{"content":{"body":"it should say that they are ... \"promises\", or something, and make it clear that these are not WebIDL Promises represented by a PromiseCapability, but the actual JS value of the promise...","m.mentions":{},"msgtype":"m.text"},"ts":1729796876426,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$Bu6NKJJLuvoXmZBxu5t70PjG6UBStj3c-WPZobxiYzw"},
{"content":{"body":"man. sideshowbarker told me to be careful with WebIDL issues. I see what he means now, there's a bunch of ambiguity here","m.mentions":{},"msgtype":"m.text"},"ts":1729796898464,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$fJ4ROqDpHBJkYGIwdPXD3kM-Epu7SKLhcwO2PsI387I"},
{"content":{"body":"I can't speak to the HTML spec, just about the intent of these features","m.mentions":{},"msgtype":"m.text"},"ts":1729797071999,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$GczLSkCi7tH8s5qjXkCzUv5lOac-m9OQtGFAZQ0EvRE"},
{"content":{"body":"yeah, I'll probably open an HTML issue so domenic et al can comment at their liesure","m.mentions":{},"msgtype":"m.text"},"ts":1729797099429,"senderName":"akaster","senderId":"@akaster:serenityos.org","id":"$u9GrxAXvdh9wHOZS-0ykeLBu5BNaQF6Pt_IYTjTSXhA"}
]