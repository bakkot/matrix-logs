[
{"content":{"body":"is it reasonable for implementations to throw an error for `Array.prototype.sort.call({length: Infinity})`? currently jsc and quickjs get stuck in an infinite loop, spidermonkey and xs raise an error, and v8 and engine262 hard crash. i assume the two that get stuck in an infinite loop will eventually throw or crash either way.","format":"org.matrix.custom.html","formatted_body":"is it reasonable for implementations to throw an error for <code>Array.prototype.sort.call({length: Infinity})</code>? currently jsc and quickjs get stuck in an infinite loop, spidermonkey and xs raise an error, and v8 and engine262 hard crash. i assume the two that get stuck in an infinite loop will eventually throw or crash either way.","m.mentions":{},"msgtype":"m.text"},"ts":1720398441219,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$qgigJZTKjOXVzlEqbLY7S6gWlDdKkdhAK7Ec23lfpHI"},
{"content":{"body":"we currently underspecify resource limits in general; in practice most resource limits eventually hit a RangeError or something similar","m.mentions":{},"msgtype":"m.text"},"ts":1720398514836,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$vyOgu7aOpe0rtFwDEEh_-YoIHtk90Gcw15nrzoeeJd4"},
{"content":{"body":"or a panic, in some cases","m.mentions":{},"msgtype":"m.text"},"ts":1720398537035,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$djUbJ2V-t07NHeEe1c9d17uZcZXdL0gaWZWgS5jL1I4"},
{"content":{"body":"so, yes, it's reasonable although not strictly allowed by the specification","m.mentions":{},"msgtype":"m.text"},"ts":1720398547811,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-Lz8sk4I1upaY3LF_5oPuKXPbIr4ZNNCBkXZBTYRqo4"},
{"content":{"body":"it would be nice if we stopped pretending implementations have infinite resources some day","msgtype":"m.text"},"ts":1720414966165,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9L6Q9MWvfGiNkD6OwKwTQmzi8WTanhfaisqm11tp0mI"},
{"content":{"body":"i think its less about pretending limits dont exist and more about letting those limits be implementation defined","m.mentions":{},"msgtype":"m.text"},"ts":1720418270804,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$WE1ivWe1mtF46gLVjPjFglc-76zu1-nVqQaW76Zyurg"},
{"content":{"body":"or host/environment defined","m.mentions":{},"msgtype":"m.text"},"ts":1720418335733,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$lZAPIQEWd3rjLndKpT7zwmAffiQxZKeCFs8ZwZWITXI"},
{"content":{"body":"saying more about what happens when those limits are reached could still be useful tho, if thats what u mean","m.mentions":{},"msgtype":"m.text"},"ts":1720419903003,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$7OOlUy-c7KXfo9y2lVtX0RfGbBCJkEo1kyHl2FQF2BE"},
{"content":{"body":"read it back again","m.mentions":{},"msgtype":"m.text"},"ts":1720419907553,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$OfLKN5EEaM94oP8TDDMv6ka0mEJfaTVmGOp2J13Q_gE"},
{"content":{"body":"I think we do currently let them be implementation-defined, and the main questions are:\n- Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)\n- Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits","format":"org.matrix.custom.html","formatted_body":"<p>I think we do currently let them be implementation-defined, and the main questions are:</p>\n<ul>\n<li>Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)</li>\n<li>Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits</li>\n</ul>","msgtype":"m.text"},"ts":1720428105887,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$c9dISdgjBmLjisfJgZgL7RTG_LW5esz87Kw4JAEFhTI"},
{"content":{"body":"related: https://github.com/tc39/ecma262/issues/2623","m.mentions":{},"msgtype":"m.text"},"ts":1720447247983,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$eLh6Zo7NVroqmt5sg0BVggw33EnlzHaQHqn2zbo2vc8"},
{"content":{"body":"> <@littledan:matrix.org> I think we do currently let them be implementation-defined, and the main questions are:\n> - Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)\n> - Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits\n\ncrashing is web compatible? lol","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$c9dISdgjBmLjisfJgZgL7RTG_LW5esz87Kw4JAEFhTI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br /><p>I think we do currently let them be implementation-defined, and the main questions are:</p>\n<ul>\n<li>Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)</li>\n<li>Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits</li>\n</ul></blockquote></mx-reply>crashing is web compatible? lol","m.relates_to":{"m.in_reply_to":{"event_id":"$c9dISdgjBmLjisfJgZgL7RTG_LW5esz87Kw4JAEFhTI"}},"msgtype":"m.text"},"ts":1720448588444,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$3RYMkYSUy3iK9ioJ6ZPBdlCk1WgNT8mVOojhyEkatNk"},
{"content":{"body":"* crashing can be web compatible? lol","m.new_content":{"body":"> <@littledan:matrix.org> I think we do currently let them be implementation-defined, and the main questions are:\n> - Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)\n> - Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits\n\ncrashing can be web compatible? lol","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$c9dISdgjBmLjisfJgZgL7RTG_LW5esz87Kw4JAEFhTI?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a><br /><p>I think we do currently let them be implementation-defined, and the main questions are:</p>\n<ul>\n<li>Do we want to define always throwing an exception, or always crashing, when they are reached? (I vote crash if it is web compatible)</li>\n<li>Do we want to define some of the limits? Wasm does, and it seems to work well for them. https://webassembly.github.io/spec/js-api/index.html#limits</li>\n</ul></blockquote></mx-reply>crashing can be web compatible? lol","msgtype":"m.text"},"m.relates_to":{"event_id":"$3RYMkYSUy3iK9ioJ6ZPBdlCk1WgNT8mVOojhyEkatNk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1720448614254,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$iOPHfW6PAnlUXiD9pY_KNlLGeNbB0ctgu3uuudsbUaA"},
{"content":{"body":"Should have made `new ArrayBuffer(too-large)` crash rather than throw.","format":"org.matrix.custom.html","formatted_body":"Should have made <code>new ArrayBuffer(too-large)</code> crash rather than throw.","m.mentions":{},"msgtype":"m.text"},"ts":1720448658382,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$frg1Zw4DZi0UsbuExtnZjoIEhrEkG3BahvBiCEgfUmc"},
{"content":{"body":"are we using crash with a different meaning than I'm used to","msgtype":"m.text"},"ts":1720448715419,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$Cws18V4ESU8LW79eEjQXH6t--U3lFQLN6mu35EXptVA"},
{"content":{"body":"i take crash to mean in a way that stops all js execution but not the whole page; like html would still be interactable","m.mentions":{},"msgtype":"m.text"},"ts":1720448776377,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$Cy7Yj4m9ntC9ft7uVUpD8gM7GZpYcaJV73BQ-C-Rz5c"},
{"content":{"body":"intentional and controlled vm halt sounds ok","msgtype":"m.text"},"ts":1720448822077,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$uiwuFMBX05Z3uwgiR2H8u66exIFFtncgNAhXUlsBk9Q"},
{"content":{"body":"I'm referring to like v8 just std::abort()ing somewhere in the heap allocator, which is not great","msgtype":"m.text"},"ts":1720448865604,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$XaYai4BWpAqUTYj_eKMaBP3SrFtspRlHRJeuz9sQ4Rs"},
{"content":{"body":"That's not how people are thinking about it as far as I know. The complete website would crash. It's all rather intermingled so it's not even clear to me you could split it that way.","m.mentions":{},"msgtype":"m.text"},"ts":1720449033999,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$iS-0AxO9BeV3uzn79w3S7wa4lXFoXAH1jnsB3hF3R5I"},
{"content":{"body":"The links to the notes docs for the last meeting on https://github.com/tc39/Reflector/issues/527 all point to empty documents. What happened here? I need to check the notes for the 3rd day, because I didn't attend that one.","m.mentions":{},"msgtype":"m.text"},"ts":1720449180512,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$U-F_3s7VJTq0W_ZpTY3l_Tc71lE5-gLBBn5nkA9jU9s"},
{"content":{"body":"@bradfordcsmith:matrix.org The version history shows someone cleared them out on July 4th. We should probably revert back to the previous version. Ping the chairs about it on the Reflector thread.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/%40bradfordcsmith%3Amatrix.org\">@Bradford Smith</a> The version history shows someone cleared them out on July 4th. We should probably revert back to the previous version. Ping the chairs about it on the Reflector thread.","msgtype":"m.text"},"ts":1720449758891,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$iVBintv0F7oy5Vw6UK3uwqxbAwSEGoR8IZSG3Fn4LpQ"},
{"content":{"body":"> <@michaelficarra:matrix.org> @bradfordcsmith:matrix.org The version history shows someone cleared them out on July 4th. We should probably revert back to the previous version. Ping the chairs about it on the Reflector thread.\n\ndone","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$iVBintv0F7oy5Vw6UK3uwqxbAwSEGoR8IZSG3Fn4LpQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/%40bradfordcsmith%3Amatrix.org\">@Bradford Smith</a> The version history shows someone cleared them out on July 4th. We should probably revert back to the previous version. Ping the chairs about it on the Reflector thread.</blockquote></mx-reply>done","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$iVBintv0F7oy5Vw6UK3uwqxbAwSEGoR8IZSG3Fn4LpQ"}},"msgtype":"m.text"},"ts":1720449965054,"senderName":"Bradford Smith","senderId":"@bradfordcsmith:matrix.org","id":"$kIdpjCFZ5GKetH27VM2VMPeeReVfF3nVJ64Gv3bj-Q4"},
{"content":{"body":"no it has to kernel panic or it doesn't count","m.mentions":{},"msgtype":"m.text"},"ts":1720451113264,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$UfycbDjOXWAGK9M16VYTgLqixlWf_45RdmMIoYymZ0w"},
{"content":{"body":"it invokes the HCF instruction","m.mentions":{},"msgtype":"m.text"},"ts":1720451154160,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EODAgqmXLOmDb7hsjXEJPQ5gGSLhUEm80qvbcB0dIfI"},
{"content":{"body":"bah, that's nothing, it has to actively fry the hardware","m.mentions":{},"msgtype":"m.text"},"ts":1720451159532,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$vlsXxkjkqnKmdEbsnF029ZZbRVzHnc7iF_EfAjShUJ8"}
]