[
{"content":{"body":"Curious, is there a syntax limitation that stops say: { foo.bar } being equal to { bar: foo.bar }. Could that be allowed in a proposal? I know it's not valid syntax right now for anything.","msgtype":"m.text","org.matrix.msc1767.text":"Curious, is there a syntax limitation that stops say: { foo.bar } being equal to { bar: foo.bar }. Could that be allowed in a proposal? I know it's not valid syntax right now for anything."},"ts":1647660493221,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$92gtb02YfihhHguiwTmSHW5GMScb_apE70TIIEB-D84"},
{"content":{"body":"I guess it might be covered by one of the many pick proposals maybe. Haven't followed those.","msgtype":"m.text","org.matrix.msc1767.text":"I guess it might be covered by one of the many pick proposals maybe. Haven't followed those."},"ts":1647660535715,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$JwSLs2nyzVeFzu08X_y-ItJVNewGf1hEKpR9J3lIb7g"},
{"content":{"body":"there is no fundamental limitation but I don't think you are likely to convince people it's worth adding that syntax to the language","msgtype":"m.text","org.matrix.msc1767.text":"there is no fundamental limitation but I don't think you are likely to convince people it's worth adding that syntax to the language"},"ts":1647660599493,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$S9sifU_2ZxOPbQrf6Hdo-n7s4s_WUC_HkooE8C_jZ88"},
{"content":{"body":"many things are possible but not necessarily good ideas","msgtype":"m.text","org.matrix.msc1767.text":"many things are possible but not necessarily good ideas"},"ts":1647660617476,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ztGY0Wd7YeDLueDTDd7qFtzF9d5gqyPDeMqAMEWWZAg"},
{"content":{"body":"We had exactly that proposal maybe three years ago","msgtype":"m.text"},"ts":1647661815007,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$eYWizfPdK_iWLjj5YPiHIOKv9-hFiy32SMiTWSBADHY"},
{"content":{"body":"Yup, https://github.com/rbuckton/proposal-shorthand-improvements","msgtype":"m.text"},"ts":1647702607313,"senderName":"Hemanth H.M","senderId":"@hemanth.hm:matrix.org","id":"$EmHflErJBJDhLUTuw2iRZ2X8amMGRCl4YCiIfuF0Lec"},
{"content":{"body":"```\nfunction x(...args) { return (args) }\nObject.defineProperty(x, 'length', { value: 2**50 })\nvar infArr = new Proxy([], {\n    get(x, k) { if (k === 'length') return 2**50; else return k }\n})\nReflect.apply(x, null, infArr)\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>function x(...args) { return (args) }\nObject.defineProperty(x, 'length', { value: 2**50 })\nvar infArr = new Proxy([], {\n    get(x, k) { if (k === 'length') return 2**50; else return k }\n})\nReflect.apply(x, null, infArr)\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"```\nfunction x(...args) { return (args) }\nObject.defineProperty(x, 'length', { value: 2**50 })\nvar infArr = new Proxy([], {\n    get(x, k) { if (k === 'length') return 2**50; else return k }\n})\nReflect.apply(x, null, infArr)\n```","mimetype":"text/plain"},{"body":"<pre><code>function x(...args) { return (args) }\nObject.defineProperty(x, 'length', { value: 2**50 })\nvar infArr = new Proxy([], {\n    get(x, k) { if (k === 'length') return 2**50; else return k }\n})\nReflect.apply(x, null, infArr)\n</code></pre>\n","mimetype":"text/html"}]},"ts":1647706083425,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$L727GrhNrNXRYYxEOGQ_tiDvwrCwNajFMPTJvmcfrG0"},
{"content":{"body":"why it throws Invalid Array length? I didn't see a step in the Reflect.apply calls anything that might throw","msgtype":"m.text","org.matrix.msc1767.text":"why it throws Invalid Array length? I didn't see a step in the Reflect.apply calls anything that might throw"},"ts":1647706107871,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$1hz_WHzg6v41cMJPu_O-Ysdb0SXLYyVfIKxg7Q2K5a4"},
{"content":{"body":"ðŸ‘€","msgtype":"m.text","org.matrix.msc1767.text":"ðŸ‘€"},"ts":1647706113095,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$0twKNEEDp1daYn_p9t6gZ3QIVQSzqzmFCL3nilbhvns"},
{"content":{"body":"Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to `2**53`, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to `2**32`","format":"org.matrix.custom.html","formatted_body":"Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to <code>2**53</code>, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to <code>2**32</code>","msgtype":"m.text"},"ts":1647707553217,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$VLIv-T0nUMThiBRs7z9eNHHRAdkZ6m0bRxGH-iYKCb0"},
{"content":{"body":"* Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to `2**53`, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to `2**32`","format":"org.matrix.custom.html","formatted_body":"* Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to <code>2**53</code>, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to <code>2**32</code>","m.new_content":{"body":"Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to `2**53`, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to `2**32`","format":"org.matrix.custom.html","formatted_body":"Jack Works: step 2 is https://tc39.es/ecma262/#sec-createlistfromarraylike, step 3 of that is https://tc39.es/ecma262/#sec-lengthofarraylike, which leads to https://tc39.es/ecma262/#sec-tolength, which should clamp it to <code>2**53</code>, and then the Call call takes that List and calls the function, and then i assume the args rest param throws trying to make an array out of it, since arrays are limited to <code>2**32</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$VLIv-T0nUMThiBRs7z9eNHHRAdkZ6m0bRxGH-iYKCb0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1647707574793,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$UhykSGBiXVNyTNgUtlsXILkhgMfzHFg88j-Pt470T1s"},
{"content":{"body":"ðŸ‘€ thanks! ","msgtype":"m.text"},"ts":1647707827087,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xt0Mrxvuvj0RisQFyc2cEjWdbJRhyLd4kuSSQfFfUZI"}
]