[
{"content":{"body":"as i commented there, i think import.meta only makes sense for things that are specific to the ES module it’s used in, and env vars are globals","msgtype":"m.text"},"ts":1722992721375,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$2SY9LQ1lL3TjO9sq7Uk8V29UTUNdi2Dre3EwdjtcdK0"},
{"content":{"body":"have there been proposals in the past for a seedable prng?","m.mentions":{},"msgtype":"m.text"},"ts":1722994973643,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$Rw-zZmQbVTAWGkQfZpBwJZhJpZSdQVueG8z5ZKRPkyI"},
{"content":{"body":"> <@meghanbun:matrix.org> have there been proposals in the past for a seedable prng?\n\nI like to think of all such proposals as `new Math`. But, in earnest there is TabAtkins‘s https://github.com/tc39/proposal-seeded-random","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24Rw-zZmQbVTAWGkQfZpBwJZhJpZSdQVueG8z5ZKRPkyI\">In reply to</a> <a href=\"https://matrix.to/#/@meghanbun:matrix.org\">@meghanbun:matrix.org</a><br>have there been proposals in the past for a seedable prng?</blockquote></mx-reply>I like to think of all such proposals as <code>new Math</code>. But, in earnest there is <a href=\"https://matrix.to/#/@tabatkins:matrix.org\">TabAtkins</a>‘s https://github.com/tc39/proposal-seeded-random","m.relates_to":{"m.in_reply_to":{"event_id":"$Rw-zZmQbVTAWGkQfZpBwJZhJpZSdQVueG8z5ZKRPkyI"}},"msgtype":"m.text"},"ts":1722995652160,"senderName":"kriskowal","senderId":"@kriskowal:aelf.land","id":"$IR98sTwhxpZHfSEiel8f_sbCdJtXu9Yum5si78ADAdw"},
{"content":{"body":"thanks!","m.mentions":{},"msgtype":"m.text"},"ts":1722995949135,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$eHANTDuzdzLBXKikVr2A6fyu8Gy5SB4kVVHERd3cxqc"},
{"content":{"body":"For anybody good ad grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189\n\nOr is it invalid syntax because once we enter the MethodDefinition (which we can enter, because `get` is a valid first token for it) we don't backtrack?","format":"org.matrix.custom.html","formatted_body":"<p>For anybody good ad grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189</p>\n<p>Or is it invalid syntax because once we enter the MethodDefinition (which we can enter, because <code>get</code> is a valid first token for it) we don't backtrack?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1723046702479,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$W-AwQwZnfL8N2xS77qg8g5csVPMcN_CBYZ75xyQs2rU"},
{"content":{"body":" * For anybody good at grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189\n\nOr is it invalid syntax because once we enter the MethodDefinition (which we can enter, because `get` is a valid first token for it) we don't backtrack?","format":"org.matrix.custom.html","formatted_body":" * <p>For anybody good at grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189</p>\n<p>Or is it invalid syntax because once we enter the MethodDefinition (which we can enter, because <code>get</code> is a valid first token for it) we don't backtrack?</p>\n","m.mentions":{},"m.new_content":{"body":"For anybody good at grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189\n\nOr is it invalid syntax because once we enter the MethodDefinition (which we can enter, because `get` is a valid first token for it) we don't backtrack?","format":"org.matrix.custom.html","formatted_body":"<p>For anybody good at grammar -- is this reading of the spec correct? https://github.com/tc39/test262/pull/4189</p>\n<p>Or is it invalid syntax because once we enter the MethodDefinition (which we can enter, because <code>get</code> is a valid first token for it) we don't backtrack?</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$W-AwQwZnfL8N2xS77qg8g5csVPMcN_CBYZ75xyQs2rU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723047405258,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$FWXwC0vLffs8myW45rDwZRn6IGXnjBZgkgalMBfIMQc"},
{"content":{"body":"the test looks correct to me","msgtype":"m.text"},"ts":1723047416964,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$1QsnB1xzTefpWll6E3j66KIvnpjlDwx8yD8XOS80F1A"},
{"content":{"body":"Ok thanks!","m.mentions":{},"msgtype":"m.text"},"ts":1723047430245,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$G4Xo2MCU0QN_x-Zk51ixAE_wOhzRvxauF2GU1_xC6hs"},
{"content":{"body":"grammar alternatives in 262 are not ordered as they are in PEGs","msgtype":"m.text"},"ts":1723047568522,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$H4BaASrugNrLjFGePHkE2xmxBHoDVC-OXRy2suf60og"},
{"content":{"body":"And here there is no ASI right? Because the offending token is `x` and not `async`:\n```js\nclass B {\n    get\n    async x() {}\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>And here there is no ASI right? Because the offending token is <code>x</code> and not <code>async</code>:</p>\n<pre><code class=\"language-js\">class B {\n    get\n    async x() {}\n}\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1723047673462,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$M3B41PqdHG0rnwkIAIr3t4JIocakeq_OXx9OWrSj5wU"},
{"content":{"body":"correct, the offending token is `x` and it's not separate by a LineTerminator from `async`, so ASI does not occur and this fails to parse","format":"org.matrix.custom.html","formatted_body":"correct, the offending token is <code data-md=\"`\">x</code> and it&#39;s not separate by a LineTerminator from <code data-md=\"`\">async</code>, so ASI does not occur and this fails to parse","msgtype":"m.text"},"ts":1723059575399,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$wXkPL-WefHnSgGGPu2sbMe49YAHJd5T6KpOTPLbvWm0"},
{"content":{"body":"> <@michaelficarra:matrix.org> grammar alternatives in 262 are not ordered as they are in PEGs\n\nexcept for Annex B regexps right?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$H4BaASrugNrLjFGePHkE2xmxBHoDVC-OXRy2suf60og?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>grammar alternatives in 262 are not ordered as they are in PEGs</blockquote></mx-reply>except for Annex B regexps right?","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$H4BaASrugNrLjFGePHkE2xmxBHoDVC-OXRy2suf60og"}},"msgtype":"m.text"},"ts":1723061339148,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XO5rKORt8cFCNrBv1ZmdgzFr-787tRW-zBTzfNy64yM"},
{"content":{"body":"or did that change?","m.mentions":{},"msgtype":"m.text"},"ts":1723061349238,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$-eDVgatgr79IPt60pNk_X-P--foEVRUdjE_E05KOIr8"},
{"content":{"body":"> B.1.2 Regular Expressions Patterns\n> The syntax of 22.2.1 is modified and extended as follows. These changes introduce ambiguities that are broken by the ordering of grammar productions and by contextual information. When parsing using the following grammar, each alternative is considered only if previous production alternatives do not match.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>B.1.2 Regular Expressions Patterns<br>The syntax of 22.2.1 is modified and extended as follows. These changes introduce ambiguities that are broken by the ordering of grammar productions and by contextual information. When parsing using the following grammar, each alternative is considered only if previous production alternatives do not match.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1723061402491,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KQFnxtg88WLTu_b4AaOjdRbib8HiEztmkdlLKb0xbok"},
{"content":{"body":"possibly, I don't often consider the RegExp grammar","msgtype":"m.text"},"ts":1723061406634,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$IhfRYs-GRgRLqrJ6aecZzYQiP4IRBrLnGJWCjngzxus"},
{"content":{"body":"gross","msgtype":"m.text"},"ts":1723061426451,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$OuV-CRjBMkvfDKlOwqyvMN72wC5-hdYKqVKrdkluecE"},
{"content":{"body":"(I'm not sure if thumbs-up is an appropriate emoji response here)","m.mentions":{},"msgtype":"m.text"},"ts":1723061434943,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$p0sUCnLsZpbqEDj5jCupMT8Op2K5GsaBXKzZyFBTvPc"},
{"content":{"body":"I'm going to go back to not thinking much about Annex B","msgtype":"m.text"},"ts":1723061488896,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9cLJFijAkVTavih48SJLBJJuA8dMf0oRYCT4V5Eduz0"},
{"content":{"body":"B for Best","m.mentions":{},"msgtype":"m.text"},"ts":1723062138365,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$GrLERm-v2dMqORnSe7bdv7P6mZRZ9k00xppUbtMS9Tk"},
{"content":{"body":"or maybe B for ✨️B✨️eautiful","m.mentions":{},"msgtype":"m.text"},"ts":1723062175326,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$jTA764RO25muxrZ1QUxewkGZJkUa2xrtzGdunDwqC40"},
{"content":{"body":"https://github.com/tc39/ecma262/pull/2445 should eliminate the ordering, if we ever get it","m.mentions":{},"msgtype":"m.text"},"ts":1723062333712,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-ojl6vwddzMieX-NxJsoRwUItesZ99I4aP3bP27gAew"},
{"content":{"body":"Note that all of 2445's changes to the grammar are ready for review. I think the only reasons the PR is still in draft is that it needs to generalize the definition of lookahead-constraints somewhat.","m.mentions":{},"msgtype":"m.text"},"ts":1723063490682,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$VzpoT9XGTNDFpq0XHC20toYy-fkLu0OM41npKdzFpZI"},
{"content":{"body":" * Note that all of 2445's changes to the grammar are ready for review. I think the only reason the PR is still in draft is that it needs to generalize the definition of lookahead-constraints somewhat.","m.mentions":{},"m.new_content":{"body":"Note that all of 2445's changes to the grammar are ready for review. I think the only reason the PR is still in draft is that it needs to generalize the definition of lookahead-constraints somewhat.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$VzpoT9XGTNDFpq0XHC20toYy-fkLu0OM41npKdzFpZI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1723063499153,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$iH0i6KYVnIrJ4DKwHZGwVEhL0hlPH6vyCA5X3qtoNy4"}
]