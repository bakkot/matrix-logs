[
{"content":{"body":"Michael Ficarra: \"test262-parser-tests has a \"fail\" directory which is spiritually the same\": No, \"fail\" there doesn't mean \"it's okay for your implementation to fail this test\", it means \"your implementation should raise a SyntaxError because this test doesn't conform to the ES grammar\". ","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">Michael Ficarra</a>: &quot;test262-parser-tests has a &quot;fail&quot; directory which is spiritually the same&quot;: No, &quot;fail&quot; there doesn't mean &quot;it's okay for your implementation to fail this test&quot;, it means &quot;your implementation should raise a SyntaxError because this test doesn't conform to the ES grammar&quot;.","msgtype":"m.text"},"ts":1635258527748,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$IQ-tDTl1VHUt6fBA6lh5WC1ypKd2UvID0O2-EuXkMAM"},
{"content":{"body":"(test262-parser-tests' use of \"pass\" and \"fail\" as categories of tests is annoying: makes it difficult to talk about passing or failing a test.)","msgtype":"m.text"},"ts":1635258586910,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$GNerbWRx0XLH1-b0wLv8uccU5fd9q_6or1QWnge_d4k"},
{"content":{"body":"jmdyck: but you could have a syntax extension","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: but you could have a syntax extension","msgtype":"m.text"},"ts":1635258670455,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$CSzxq5v8LMQmwXCEUxsYVZrUByLQ_Yt8EfOmCI-1wbM"},
{"content":{"body":"yeah, that's why i said \"should\" rather than \"must\"","msgtype":"m.text"},"ts":1635258689263,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$GyAOlszkTIHRvXGd0sNXXl9TFXdCwzSDVfmVEY4R4mc"},
{"content":{"body":"jmdyck: that's the point, it's similar to the proposed test262 assertions on non-existence of extensions to built-ins","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: that's the point, it's similar to the proposed test262 assertions on non-existence of extensions to built-ins","msgtype":"m.text"},"ts":1635259005086,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dslSMWNe7mGKV0NmeRdaNwQIwd5fKsLcowByM0D3uMc"},
{"content":{"body":"ah, okay.","msgtype":"m.text"},"ts":1635259046963,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$NfAW3fCH-ng6px0qVATeHc8cRoBmwxEANBDnUqVNIZ0"},
{"content":{"body":"but then I imagine that's true of the \"early\" tests as well","msgtype":"m.text"},"ts":1635259081334,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Vd8y1R3tQQP7jkjpp2S5ffU5WSBTce8gSGHCL99lJ8g"},
{"content":{"body":"is an implementation allowed to ignore an early error? I don't think so","msgtype":"m.text"},"ts":1635259112207,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$4w4j6M32Q0EVlUxGMvimTlmVft-ljap3ZYwjtOSjmxk"},
{"content":{"body":"if so, though, then yes that is also analagous","msgtype":"m.text"},"ts":1635259133465,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Jzg2WjIMVT69mEUCasgDQVKtjpyRgDC2--useE2ZBDw"},
{"content":{"body":"If you can ignore the grammar, then why not ignore an early error? But it's true the spec isn't very clear.","msgtype":"m.text"},"ts":1635259226246,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$pD8wfvy-GVHrhgBtUWMiEgLQtBXoSFNsGGnYxXJjcBI"},
{"content":{"body":"But e.g. \"Forbidden Extensions\" says \"When processing strict mode code, an implementation must not relax the early error rules of 12.8.3.1.\" which suggests that it *is* okay to relax other early error rules.","format":"org.matrix.custom.html","formatted_body":"But e.g. &quot;Forbidden Extensions&quot; says &quot;When processing strict mode code, an implementation must not relax the early error rules of 12.8.3.1.&quot; which suggests that it <em>is</em> okay to relax other early error rules.","msgtype":"m.text"},"ts":1635259573335,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$hfbXZY-FKzdfiLye-zTSP9Cnuv2utJqPURNuuBHq0uU"}
]