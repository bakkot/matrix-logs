[
{"content":{"body":"I noticed an interoperability issue between Firefox and Chrome when it comes to Array sort(), in particular, the presence of an undefined/NaN can not only affect the positin of the NaN but the order of all other items which seems problematic?\n\nMinimal example at https://phabricator.wikimedia.org/P63711","m.mentions":{},"msgtype":"m.text"},"ts":1717083308179,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$O-BEuRKq1-Fsu_r_xcwWdpyqJwXMkhsBY4kj25id2s4"},
{"content":{"body":" * I noticed an interoperability issue between Firefox and Chrome when it comes to Array sort(), in particular, the presence of an undefined/NaN can not only affect the position of the NaN but the order of all other items which seems problematic?\n\nMinimal example at https://phabricator.wikimedia.org/P63711","m.mentions":{},"m.new_content":{"body":"I noticed an interoperability issue between Firefox and Chrome when it comes to Array sort(), in particular, the presence of an undefined/NaN can not only affect the position of the NaN but the order of all other items which seems problematic?\n\nMinimal example at https://phabricator.wikimedia.org/P63711","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$O-BEuRKq1-Fsu_r_xcwWdpyqJwXMkhsBY4kj25id2s4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1717083325164,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$sYDBxZLINi8pVzHK0EBgv-BWDh3XynoSCp_FepxNW2w"},
{"content":{"body":"Firefox: `0, 1, undefined, -10, -9`\nChrome: `-10, -9, 0, 1, undefined`","format":"org.matrix.custom.html","formatted_body":"Firefox: <code>0, 1, undefined, -10, -9</code><br>Chrome: <code>-10, -9, 0, 1, undefined</code>","m.mentions":{},"msgtype":"m.text"},"ts":1717083364929,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$R9YRaxBMpzPqDOv91urK8zGw-BudB-5V8hMkShUz0tM"},
{"content":{"body":"Timo Tijhof: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#sorting_with_non-well-formed_comparator","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@timotijhof:matrix.org\">Timo Tijhof</a>: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#sorting_with_non-well-formed_comparator","m.mentions":{"user_ids":["@timotijhof:matrix.org"]},"msgtype":"m.text"},"ts":1717084156940,"senderName":"eemeli","senderId":"@eemeli:mozilla.org","id":"$NskwI6qdITttGseGy2fQP8vb3-6jGPUBHwasmZZU6fM"},
{"content":{"body":"eemeli: Is there no apetite for tightening the spec around this? I get the argument for purity and stability, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.\n\n","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: Is there no apetite for tightening the spec around this? I get the argument for purity and stability, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"msgtype":"m.text"},"ts":1717084342023,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$Qu8wy1Nqb1kCQB556A-D67Ek_BYk6xQRfMPaLRVvpi8"},
{"content":{"body":" * eemeli: Is there no apetite for tightening the spec around this? I get the argument for mathematical purity, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.","format":"org.matrix.custom.html","formatted_body":" * <a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: Is there no apetite for tightening the spec around this? I get the argument for mathematical purity, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.","m.mentions":{},"m.new_content":{"body":"eemeli: Is there no apetite for tightening the spec around this? I get the argument for mathematical purity, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@eemeli:mozilla.org\">eemeli</a>: Is there no apetite for tightening the spec around this? I get the argument for mathematical purity, but I don't see the benefit in allowing it to remain as unspecified/undefined behaviour. We've already crossed the bridge of stable sorting for identical values based on input. Standardising behaviour around NaN seems like a natural next step.","m.mentions":{"user_ids":["@eemeli:mozilla.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$Qu8wy1Nqb1kCQB556A-D67Ek_BYk6xQRfMPaLRVvpi8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1717084354441,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$0mCdtFS0UVwuFMgu9StKrIz6FxA1mJGilH_swGgCsLQ"}
]