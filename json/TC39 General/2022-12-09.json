[
{"content":{"body":"`[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","format":"org.matrix.custom.html","formatted_body":"<code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","mimetype":"text/plain"},{"body":"<code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","mimetype":"text/html"}]},"ts":1670572221476,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$A5B_Y7-ZcZh1xr63dbL81Cb-9Vvw81f5ilHg2PgydFk"},
{"content":{"body":" * `[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","format":"org.matrix.custom.html","formatted_body":" * <code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","m.new_content":{"body":"`[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","format":"org.matrix.custom.html","formatted_body":"<code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","mimetype":"text/plain"},{"body":"<code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$A5B_Y7-ZcZh1xr63dbL81Cb-9Vvw81f5ilHg2PgydFk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `[Exposed]` works on methods, but only to constrain. So the solution would be to move `setTimeout` to an `AllTheGlobals` mixin that has `[Exposed=*]` and is included by `Window`, `WorkerGlobalScope`, etc.","mimetype":"text/plain"},{"body":" * <code>[Exposed]</code> works on methods, but only to constrain. So the solution would be to move <code>setTimeout</code> to an <code>AllTheGlobals</code> mixin that has <code>[Exposed=*]</code> and is included by <code>Window</code>, <code>WorkerGlobalScope</code>, etc.","mimetype":"text/html"}]},"ts":1670572236647,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$d0lM83f1LupM37-XeXt9NTbmvNwqdcUXM0FRclXXsog"},
{"content":{"body":"Is there a term that means symbols + objects (+ functions, although thats implied by objects). Like there's primitives vs. objects, I'm wondering if theres a concise way to say \"symbols and objects\"","msgtype":"m.text","org.matrix.msc1767.text":"Is there a term that means symbols + objects (+ functions, although thats implied by objects). Like there's primitives vs. objects, I'm wondering if theres a concise way to say \"symbols and objects\""},"ts":1670600493819,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$yDgImINSBeum9m2xR42EDwxllpxi1yMKdFNlblDoiUU"},
{"content":{"body":"In the R&T proposal we say \"unforgeable values\": you cannot recreate them","msgtype":"m.text"},"ts":1670600708610,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$Hovx1FAi8J6-bKgbm48oV9aNqDBp__vpFqgAmFjIQ4A"},
{"content":{"body":"However, it does not include Symbol.for symbols ","format":"org.matrix.custom.html","formatted_body":"However, it does not include Symbol.for symbols","msgtype":"m.text"},"ts":1670600725303,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kag_PTsgZCeDOsPVakEbipPhuqhElo5zVcjuLTy5Gxg"},
{"content":{"body":"* In the R&T proposal we say \"unforgeable values\": you cannot recreate them unless you already hold a reference to them ","m.new_content":{"body":"In the R&T proposal we say \"unforgeable values\": you cannot recreate them unless you already hold a reference to them ","msgtype":"m.text"},"m.relates_to":{"event_id":"$Hovx1FAi8J6-bKgbm48oV9aNqDBp__vpFqgAmFjIQ4A","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1670600756680,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$iuh2UJhtrnKYd4jtJdzhdx7iE7hODyuqYi-s73G5FyA"},
{"content":{"body":"interesting","msgtype":"m.text","org.matrix.msc1767.text":"interesting"},"ts":1670600782915,"senderName":"tolmasky","senderId":"@tolmasky:matrix.org","id":"$LC6OiCluftKzBryf6stjNKYR5M7rYLB3ab3SdXMA1P0"}
]