[
{"content":{"body":"Does anyone know if the iterator helper proposal has ever discussed parallel/batch features for v1? A lot of my use cases for lazy iterators involve async operations that benefit from parallel requests. Maybe I'm thinking of this wrong, but like for (const item of webpages.map(async url => return await op(url), { batch: 5 })){} where 5 are executed in parallel and are handled out of order first come. (In theory if a break is called then the other 4 pending would be cancelled by the generator's return). The big picture is handling tasks that might look like [500ms, 10ms, 10ms, 10ms, 10ms...] where a random long task blocks the whole pipeline. With more complex pipelines this snowballs into large delays.","msgtype":"m.text","org.matrix.msc1767.text":"Does anyone know if the iterator helper proposal has ever discussed parallel/batch features for v1? A lot of my use cases for lazy iterators involve async operations that benefit from parallel requests. Maybe I'm thinking of this wrong, but like for (const item of webpages.map(async url => return await op(url), { batch: 5 })){} where 5 are executed in parallel and are handled out of order first come. (In theory if a break is called then the other 4 pending would be cancelled by the generator's return). The big picture is handling tasks that might look like [500ms, 10ms, 10ms, 10ms, 10ms...] where a random long task blocks the whole pipeline. With more complex pipelines this snowballs into large delays."},"ts":1650313585197,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$ceL6Rhnm_akh3oCAEzslSR_pfSzw8lx8s0mkLUk5Pxs"},
{"content":{"body":"sirisian: not for v1, no. I would also like to see such a thing at some point but it doesn't really fit with the simpler v1 helpers; it would be its own thing","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@sirisian:matrix.org\">sirisian</a>: not for v1, no. I would also like to see such a thing at some point but it doesn't really fit with the simpler v1 helpers; it would be its own thing","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"sirisian: not for v1, no. I would also like to see such a thing at some point but it doesn't really fit with the simpler v1 helpers; it would be its own thing","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@sirisian:matrix.org\">sirisian</a>: not for v1, no. I would also like to see such a thing at some point but it doesn't really fit with the simpler v1 helpers; it would be its own thing","mimetype":"text/html"}]},"ts":1650314902103,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Q4AfznkIfuNkILCKrXYE3IeczKkGaKEzznKjIlry03o"},
{"content":{"body":"As long as it's possible later, that's all that matters.","msgtype":"m.text","org.matrix.msc1767.text":"As long as it's possible later, that's all that matters."},"ts":1650314938600,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$cJsuXhYq0-l3IHSDJ53_stt4Qz1BOKzoNYRvPHVmFM4"},
{"content":{"body":"I haven't thought about it really hard but I expect it should be. and at the very least nothing in this proposal is likely to make it harder.","msgtype":"m.text","org.matrix.msc1767.text":"I haven't thought about it really hard but I expect it should be. and at the very least nothing in this proposal is likely to make it harder."},"ts":1650314990531,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$mXNoIMQdX9A1NXhwfSCTqE8Ra5DAL35Le3Ol8jwFvok"},
{"content":{"body":"Ixjs has this with a `concurrent` param for `flatMap` https://github.com/ReactiveX/IxJS/blob/master/src/asynciterable/operators/flatmap.ts","format":"org.matrix.custom.html","formatted_body":"Ixjs has this with a <code>concurrent</code> param for <code>flatMap</code> https://github.com/ReactiveX/IxJS/blob/master/src/asynciterable/operators/flatmap.ts","msgtype":"m.text"},"ts":1650315054884,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ONi_Id1W0GzBqKembDcdyPLCG_SxuykxlBcQp_fh1vc"}
]