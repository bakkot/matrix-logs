[
{"content":{"body":"What is a \"promise-like object\"? (https://tc39.es/ecma262/#sec-promisecapability-records is the only occurrence in the spec)","msgtype":"m.text","org.matrix.msc1767.text":"What is a \"promise-like object\"? (https://tc39.es/ecma262/#sec-promisecapability-records is the only occurrence in the spec)"},"ts":1668730031550,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$1pkBwGLpFor__edup1qSEBfuZ4jKkvuNdMaXApAlp0A"},
{"content":{"body":"it deliberately doesn't have a formal definition","msgtype":"m.text","org.matrix.msc1767.text":"it deliberately doesn't have a formal definition"},"ts":1668730302589,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nnCssvUS9oy8gWmm4djy2ZbF0JwB5gMxVumJGxg7XI8"},
{"content":{"body":"formally it ends up being anything which can be produced by a constructor which takes a callback as an argument and immediately invokes that callback with two arguments, both of which are callable","msgtype":"m.text","org.matrix.msc1767.text":"formally it ends up being anything which can be produced by a constructor which takes a callback as an argument and immediately invokes that callback with two arguments, both of which are callable"},"ts":1668730427278,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TuXy44roUtpKhQB0hu691couuAdvkg1z5-MX4rlQ7S8"},
{"content":{"body":"but that's not, like, useful","msgtype":"m.text","org.matrix.msc1767.text":"but that's not, like, useful"},"ts":1668730431730,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OW8X9SbY9tocxhubDVTdATW_jglMi0ICZ4Ieyi_Y1HI"},
{"content":{"body":"so you should think of it as a promise-like object","msgtype":"m.text","org.matrix.msc1767.text":"so you should think of it as a promise-like object"},"ts":1668730439156,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZHoud1QFLc4dQtm9_m78c2xnt-Lk9qSLdKnCMmGsnAw"},
{"content":{"body":"Seems like that generality (allowing a promise-like object) isn't propagated through the spec.","msgtype":"m.text","org.matrix.msc1767.text":"Seems like that generality (allowing a promise-like object) isn't propagated through the spec."},"ts":1668730710688,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$jzuP8ILGNI7Z521YOaYkZXiqP0Q_LYIp58TRrJ1SXdc"},
{"content":{"body":"do you have a concrete case in mind?","msgtype":"m.text","org.matrix.msc1767.text":"do you have a concrete case in mind?"},"ts":1668730789433,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GIuA4qb_8Hv3ywWwFPLWRoeLgjQ0cwIh2GbFKx43Bjg"},
{"content":{"body":"e.g. Evaluate for a Cyclic Module Record says it returns \"a Promise\", but 2 of its returns are returning a capability's [[Promise]] field, which might be a promise-like object (or are we somehow guaranteed that it isn't?)","msgtype":"m.text","org.matrix.msc1767.text":"e.g. Evaluate for a Cyclic Module Record says it returns \"a Promise\", but 2 of its returns are returning a capability's [[Promise]] field, which might be a promise-like object (or are we somehow guaranteed that it isn't?)"},"ts":1668730887665,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$mhbVlnRxg0sbGplIc4lpZFNewtj5Tsz2XA9xlQFcpdc"},
{"content":{"body":"in that case the promise is generated by `NewPromiseCapability(%Promise%)`, which does indeed create a capability which hold a genuine promise","format":"org.matrix.custom.html","formatted_body":"in that case the promise is generated by <code>NewPromiseCapability(%Promise%)</code>, which does indeed create a capability which hold a genuine promise","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"in that case the promise is generated by `NewPromiseCapability(%Promise%)`, which does indeed create a capability which hold a genuine promise","mimetype":"text/plain"},{"body":"in that case the promise is generated by <code>NewPromiseCapability(%Promise%)</code>, which does indeed create a capability which hold a genuine promise","mimetype":"text/html"}]},"ts":1668730945957,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$C6nbHQ-wib5zJQJzz8dN0BWih0DLrkqMBHysllMCTt4"},
{"content":{"body":"Step 6 of evaluate ensures that it's a real Promise, because it uses the %Promise% intrinsic. I think we can only get promise-likes when there are calls to `NewPromiseCapability` with user-provided consructors","format":"org.matrix.custom.html","formatted_body":"Step 6 of evaluate ensures that it's a real Promise, because it uses the %Promise% intrinsic. I think we can only get promise-likes when there are calls to <code>NewPromiseCapability</code> with user-provided consructors","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Step 6 of evaluate ensures that it's a real Promise, because it uses the %Promise% intrinsic. I think we can only get promise-likes when there are calls to `NewPromiseCapability` with user-provided consructors","mimetype":"text/plain"},{"body":"Step 6 of evaluate ensures that it's a real Promise, because it uses the %Promise% intrinsic. I think we can only get promise-likes when there are calls to <code>NewPromiseCapability</code> with user-provided consructors","mimetype":"text/html"}]},"ts":1668730968915,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$BCOWBTTTS2pX7-WalOwmMXpq4-G5yTtVAPGV2oBbw3w"},
{"content":{"body":"For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `ProiseSubclass`, and will return that instance instead of a Promise","format":"org.matrix.custom.html","formatted_body":"For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>ProiseSubclass</code>, and will return that instance instead of a Promise","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `ProiseSubclass`, and will return that instance instead of a Promise","mimetype":"text/plain"},{"body":"For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>ProiseSubclass</code>, and will return that instance instead of a Promise","mimetype":"text/html"}]},"ts":1668731056931,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$8ELVeP8OaWV1KY7wRtS-v1KQ8IejvNr44dwfAahceoE"},
{"content":{"body":"We could link promise-like to step 2 of `NewPromiseCapability`, where it's defined (even if that step doesn't use the name promise-like)","format":"org.matrix.custom.html","formatted_body":"We could link promise-like to step 2 of <code>NewPromiseCapability</code>, where it's defined (even if that step doesn't use the name promise-like)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"We could link promise-like to step 2 of `NewPromiseCapability`, where it's defined (even if that step doesn't use the name promise-like)","mimetype":"text/plain"},{"body":"We could link promise-like to step 2 of <code>NewPromiseCapability</code>, where it's defined (even if that step doesn't use the name promise-like)","mimetype":"text/html"}]},"ts":1668731162490,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$1cmcfNyhE_ZHA-4Tr7tvWg9GSOXWyJ2wvH7qKtYZ040"},
{"content":{"body":" * For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `PromiseSubclass`, and will return that instance instead of a Promise","format":"org.matrix.custom.html","formatted_body":" * For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>PromiseSubclass</code>, and will return that instance instead of a Promise","m.new_content":{"body":"For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `PromiseSubclass`, and will return that instance instead of a Promise","format":"org.matrix.custom.html","formatted_body":"For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>PromiseSubclass</code>, and will return that instance instead of a Promise","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `PromiseSubclass`, and will return that instance instead of a Promise","mimetype":"text/plain"},{"body":"For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>PromiseSubclass</code>, and will return that instance instead of a Promise","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$8ELVeP8OaWV1KY7wRtS-v1KQ8IejvNr44dwfAahceoE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * For example, `PromiseSubclass.all` will internally create a `PromiseCapability Record` containing an instance of `PromiseSubclass`, and will return that instance instead of a Promise","mimetype":"text/plain"},{"body":" * For example, <code>PromiseSubclass.all</code> will internally create a <code>PromiseCapability Record</code> containing an instance of <code>PromiseSubclass</code>, and will return that instance instead of a Promise","mimetype":"text/html"}]},"ts":1668731202153,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$cl0plGD3mJz_27ga8dDD1V_tYWgCntb30F91GzwjDHk"},
{"content":{"body":"So is there any spec algorithm that treats a promise-like object as something more than just an object?","msgtype":"m.text","org.matrix.msc1767.text":"So is there any spec algorithm that treats a promise-like object as something more than just an object?"},"ts":1668732708069,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$VwogrJ4kPQwGAyYjhEuKrZdjf7AKnscbqYRGlLR_3tA"},
{"content":{"body":" * So is there any spec algorithm that treats a promise-like object as something more than just an object?","m.new_content":{"body":"So is there any spec algorithm that treats a promise-like object as something more than just an object?","msgtype":"m.text","org.matrix.msc1767.text":"So is there any spec algorithm that treats a promise-like object as something more than just an object?"},"m.relates_to":{"event_id":"$VwogrJ4kPQwGAyYjhEuKrZdjf7AKnscbqYRGlLR_3tA","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * So is there any spec algorithm that treats a promise-like object as something more than just an object?"},"ts":1668732763737,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$nmS_-P9P_dd7njpn-00Erv6ldaO0o0dn0hko5mt7wf8"},
{"content":{"body":"I don't believe so","msgtype":"m.text","org.matrix.msc1767.text":"I don't believe so"},"ts":1668733429945,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$c7RokLMfFi45tGtZrkLQbYoeSEaTqTGSQTzE4oOPTeY"},
{"content":{"body":"okay, thanks.","msgtype":"m.text","org.matrix.msc1767.text":"okay, thanks."},"ts":1668734299338,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$CTA1Zj8Zd0WzPDIkwkM-J-JnowMUrEtQCyw7DVNv-uk"}
]