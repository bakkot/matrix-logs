[
{"content":{"body":"having a question about ASI","msgtype":"m.text","org.matrix.msc1767.text":"having a question about ASI"},"ts":1645845998265,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$ciLn0BmKmoSo6UrUn9_KccylxGyjdSoYfmWGXbo4OKo"},
{"content":{"body":"I'm working on the JSX spec, with JSXElement added to the syntax, for this code:\n\n```js\n1\n<video>2</video>/g\n```\n\nwill it be interpreted as: NumericLiteral; JSXElement divided by g\nor it will not have an ASI after `1` so it becomes\n\n```js\n(1<video)   > 2    <     /video>/g\n```\n\nSome comparison and a RegExp literal?","format":"org.matrix.custom.html","formatted_body":"<p>I'm working on the JSX spec, with JSXElement added to the syntax, for this code:</p>\n<pre><code class=\"language-js\">1\n&lt;video&gt;2&lt;/video&gt;/g\n</code></pre>\n<p>will it be interpreted as: NumericLiteral; JSXElement divided by g<br>or it will not have an ASI after <code>1</code> so it becomes</p>\n<pre><code class=\"language-js\">(1&lt;video)   &gt; 2    &lt;     /video&gt;/g\n</code></pre>\n<p>Some comparison and a RegExp literal?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm working on the JSX spec, with JSXElement added to the syntax, for this code:\n\n```js\n1\n<video>2</video>/g\n```\n\nwill it be interpreted as: NumericLiteral; JSXElement divided by g\nor it will not have an ASI after `1` so it becomes\n\n```js\n(1<video)   > 2    <     /video>/g\n```\n\nSome comparison and a RegExp literal?","mimetype":"text/plain"},{"body":"<p>I'm working on the JSX spec, with JSXElement added to the syntax, for this code:</p>\n<pre><code class=\"language-js\">1\n&lt;video&gt;2&lt;/video&gt;/g\n</code></pre>\n<p>will it be interpreted as: NumericLiteral; JSXElement divided by g<br>or it will not have an ASI after <code>1</code> so it becomes</p>\n<pre><code class=\"language-js\">(1&lt;video)   &gt; 2    &lt;     /video&gt;/g\n</code></pre>\n<p>Some comparison and a RegExp literal?</p>\n","mimetype":"text/html"}]},"ts":1645846203051,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$tiMyqlvrdAoC_U3xHax1DAMxaa8IqUtvkOz7EIChTJ0"},
{"content":{"body":"The latter.","msgtype":"m.text","org.matrix.msc1767.text":"The latter."},"ts":1645846450333,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$nneA6R79-TjGYebDkA5o980yLaL_SmPI_91QyXlrGr0"},
{"content":{"body":"oh thanks","msgtype":"m.text","org.matrix.msc1767.text":"oh thanks"},"ts":1645846478844,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$w9gS3vt_mbje3qpbIVs8YFGLgFD2Uq_yvDjkMdYhuGQ"},
{"content":{"body":"ASI only kicks in when there would otherwise be a syntax error. So since \"1 < video\" doesn't have a syntax error, ASI doesn't insert a semicolon after the '1'.","msgtype":"m.text","org.matrix.msc1767.text":"ASI only kicks in when there would otherwise be a syntax error. So since \"1 < video\" doesn't have a syntax error, ASI doesn't insert a semicolon after the '1'."},"ts":1645846611038,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$2UMsYh6bC5BYB27I9MWnaDQBGLXKiHX2eYBjRXIBVZQ"},
{"content":{"body":"so\n```js\n1\n<video>2</video>\n```\n\nit should be `SyntaxError: unterminated regexp literal`?","format":"org.matrix.custom.html","formatted_body":"<p>so</p>\n<pre><code class=\"language-js\">1\n&lt;video&gt;2&lt;/video&gt;\n</code></pre>\n<p>it should be <code>SyntaxError: unterminated regexp literal</code>?</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so\n```js\n1\n<video>2</video>\n```\n\nit should be `SyntaxError: unterminated regexp literal`?","mimetype":"text/plain"},{"body":"<p>so</p>\n<pre><code class=\"language-js\">1\n&lt;video&gt;2&lt;/video&gt;\n</code></pre>\n<p>it should be <code>SyntaxError: unterminated regexp literal</code>?</p>\n","mimetype":"text/html"}]},"ts":1645846642159,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8uXiNX8hUXSDt-IYA43gAmX7fEXl-FUTH1iXyhxVSig"},
{"content":{"body":"oh yes, \"Uncaught SyntaxError: Invalid regular expression: missing /\"","msgtype":"m.text","org.matrix.msc1767.text":"oh yes, \"Uncaught SyntaxError: Invalid regular expression: missing /\""},"ts":1645846699729,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$acO9rdArms_GD5i4kEuW1zA13ZYOB1UA7Wj-FMKpYpg"},
{"content":{"body":"ðŸ¤” tried this code on babel, ts and swc. same result `Unterminated regexp literal`. I think the status quo is good","format":"org.matrix.custom.html","formatted_body":"ðŸ¤” tried this code on babel, ts and swc. same result <code>Unterminated regexp literal</code>. I think the status quo is good","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"ðŸ¤” tried this code on babel, ts and swc. same result `Unterminated regexp literal`. I think the status quo is good","mimetype":"text/plain"},{"body":"ðŸ¤” tried this code on babel, ts and swc. same result <code>Unterminated regexp literal</code>. I think the status quo is good","mimetype":"text/html"}]},"ts":1645846888513,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5_nFcDyceZ4yWdhvXtVsDMLyu7JOCVmfE-uJJS-mfgI"},
{"content":{"body":"sort of relatedly but not really relatedly does anyone know why jsx transpilers always call a function instead of just making an object?","msgtype":"m.text","org.matrix.msc1767.text":"sort of relatedly but not really relatedly does anyone know why jsx transpilers always call a function instead of just making an object?"},"ts":1645904858247,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$pacHD1oucVm5605GUoaXntEDlHeENom1_vKTHX_kuAA"}
]