[
{"content":{"body":"is built-ins/TypedArrayConstructors/internals/DefineOwnProperty/tonumber-value-detached-buffer.js correct?","msgtype":"m.text"},"ts":1624756109422,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$80quYi_H2btvcVhH4hkFp9GDaEOAswkoeDvmcTo1TKU"},
{"content":{"body":"the spec steps listed in it do not match the spec","msgtype":"m.text"},"ts":1624756155956,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$qBsNVA0URg8WiQ2nkOHsiasSZwGQENhzb1Hctb4ITH8"},
{"content":{"body":"oh nvm i see the change is actually in IsValidIntegerIndex","msgtype":"m.text"},"ts":1624756425291,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$JdCz1jPn0XU9qlDHktkzMtfvqSYkoEfsbgErzccabpc"},
{"content":{"body":"but now a bunch of other tests fail","msgtype":"m.text"},"ts":1624756508003,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ydVUZVKtaQAWIn4lRgHKPq9iL_3W0_vetgE4Uop-rhI"},
{"content":{"body":"oh nvm there was a typo","msgtype":"m.text"},"ts":1624756684983,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$9OJhL_Pqdl4FtK3-5DFpVCF4NjqzZpWnLJKPxdCpPyA"},
{"content":{"body":"Where does the spec define that a number literal can have a sign?","msgtype":"m.text"},"ts":1624779975089,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$n6OACl66sIfTnUWbKRIAEkgMSW2lzU_pB3yCRPKKICU"},
{"content":{"body":"context is https://github.com/mdn/content/pull/6379","msgtype":"m.text"},"ts":1624779993866,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$2CsYuJTJP5Z4_rMkBe1fDrt9PfyxeWuqSfn1fTXziz4"},
{"content":{"body":"looking at https://github.com/mdn/content/issues/6382","msgtype":"m.text"},"ts":1624787347723,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$USbDiV84Ao3wVyEl4ENKjjXoWjKOJUiFZKcIMXNQ83E"},
{"content":{"body":"> The <code>concat</code> method does not alter <code>this</code> or any of the arrays\n  provided as arguments but instead **returns a shallow copy** that contains copies of the\n  same elements combined from the original arrays.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nThe &lt;code&gt;concat&lt;/code&gt; method does not alter &lt;code&gt;this&lt;/code&gt; or any of the arrays<br>provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the<br>same elements combined from the original arrays.\n</blockquote>\n","msgtype":"m.text"},"ts":1624787413835,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$1bf8Mw1p9-9lHcffuniAwM9VVd1SAsApCoO4rPrVYBs"},
{"content":{"body":" * > The <code>concat</code> method does not alter <code>this</code> or any of the arrays\n> provided as arguments but instead **returns a shallow copy** that contains copies of the\n> same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\nThe &lt;code&gt;concat&lt;/code&gt; method does not alter &lt;code&gt;this&lt;/code&gt; or any of the arrays<br>provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the<br>same elements combined from the original arrays.\n</blockquote>\n","m.new_content":{"body":"> The <code>concat</code> method does not alter <code>this</code> or any of the arrays\n> provided as arguments but instead **returns a shallow copy** that contains copies of the\n> same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nThe &lt;code&gt;concat&lt;/code&gt; method does not alter &lt;code&gt;this&lt;/code&gt; or any of the arrays<br>provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the<br>same elements combined from the original arrays.\n</blockquote>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$1bf8Mw1p9-9lHcffuniAwM9VVd1SAsApCoO4rPrVYBs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624787425199,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$iiQYKcVBbPv9hbY0NEeRAiF11-t4PGJFzYZ-zmTiJQw"},
{"content":{"body":" * > The `concat` method does not alter `this` or any of the arrays\n> provided as arguments but instead **returns a shallow copy** that contains copies of the\n> same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\nThe <code>concat</code> method does not alter <code>this</code> or any of the arrays<br>provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the<br>same elements combined from the original arrays.\n</blockquote>\n","m.new_content":{"body":"> The `concat` method does not alter `this` or any of the arrays\n> provided as arguments but instead **returns a shallow copy** that contains copies of the\n> same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nThe <code>concat</code> method does not alter <code>this</code> or any of the arrays<br>provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the<br>same elements combined from the original arrays.\n</blockquote>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$1bf8Mw1p9-9lHcffuniAwM9VVd1SAsApCoO4rPrVYBs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624787448651,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$c7iz4MfAQwTMUG4iPlMNrP0MGEYU-mhMRvUG8E4-YDY"},
{"content":{"body":" * > The `concat` method does not alter `this` or any of the arrays provided as arguments but instead **returns a shallow copy** that contains copies of the same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":" * <blockquote>\nThe <code>concat</code> method does not alter <code>this</code> or any of the arrays provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the same elements combined from the original arrays.\n</blockquote>\n","m.new_content":{"body":"> The `concat` method does not alter `this` or any of the arrays provided as arguments but instead **returns a shallow copy** that contains copies of the same elements combined from the original arrays.\n","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nThe <code>concat</code> method does not alter <code>this</code> or any of the arrays provided as arguments but instead <strong>returns a shallow copy</strong> that contains copies of the same elements combined from the original arrays.\n</blockquote>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$1bf8Mw1p9-9lHcffuniAwM9VVd1SAsApCoO4rPrVYBs","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624787465764,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$siP0bUTG0LELKBvgNAf8R4pjLbhYWz9xSDOBN1ZjVCo"},
{"content":{"body":"**returns a shallow copy** is not true, right?","format":"org.matrix.custom.html","formatted_body":"<strong>returns a shallow copy</strong> is not true, right?","msgtype":"m.text"},"ts":1624787499144,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$cTtb1hKQgiGFqyPWrRXnv4HcOO9asNlTlHrhVyvdAbc"},
{"content":{"body":" * _returns a shallow copy_ is not true, right?","format":"org.matrix.custom.html","formatted_body":" * <em>returns a shallow copy</em> is not true, right?","m.new_content":{"body":"_returns a shallow copy_ is not true, right?","format":"org.matrix.custom.html","formatted_body":"<em>returns a shallow copy</em> is not true, right?","msgtype":"m.text"},"m.relates_to":{"event_id":"$cTtb1hKQgiGFqyPWrRXnv4HcOO9asNlTlHrhVyvdAbc","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624787514896,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$zUCsLn1Xs7jFzbbK1aPISsl3BzeGcUNraPOQzUFTzPo"},
{"content":{"body":"\"returns a shallow copy\" is correct","msgtype":"m.text"},"ts":1624787805289,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$GsBOpYwxByYN7xQWG_o9jnTGcN7mZFuGO-tB0vMKh6o"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1624787818031,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$6coiwC-UQCqoYtqxSsHQPLRXgc9KqQqflAZajNow8hU"},
{"content":{"body":"so then I am just not understanding what I’m seeing when I try it","msgtype":"m.text"},"ts":1624787850392,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$cYFrxn5-TqU1E_A568OKJQUQXB-O59YFfDTXpnLaq7s"},
{"content":{"body":"if I try the OP’s test case in that issue, it seems like I’m in fact getting a deep copy rather than a shallow one","msgtype":"m.text"},"ts":1624787891441,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Irj5D1OAHivRWekqVNwDnXgcQvFHdwco6KVaihV3zXk"},
{"content":{"body":"that is, simply this:\n```js\nk = [1234, 553, 989, 000, [1,4,5]];\nz = k.concat()\n```","format":"org.matrix.custom.html","formatted_body":"<p>that is, simply this:</p>\n<pre><code class=\"language-js\">k = [1234, 553, 989, 000, [1,4,5]];\nz = k.concat()\n</code></pre>\n","msgtype":"m.text"},"ts":1624787963737,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$1UGUIqtsZ4HrfJ5flq3NUbRF8f9ocvIfEYaZmlJNEm8"},
{"content":{"body":"if I examine `z`, it does seem to have kept that `[1,4,5]` array as a member","format":"org.matrix.custom.html","formatted_body":"if I examine <code>z</code>, it does seem to have kept that <code>[1,4,5]</code> array as a member","msgtype":"m.text"},"ts":1624788013593,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$lgl6ZdRBapdmjR6LDy6OQA-DHnN-bCJsmBOPanEzfu8"},
{"content":{"body":"```\nz === k  // false\nz[4] === k[4] // true\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>z === k  // false\nz[4] === k[4] // true\n</code></pre>\n","msgtype":"m.text"},"ts":1624788172085,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$J5TK7of0Uq9MqVHf-cIzils35-n-B6GDSFdgJF90BQA"},
{"content":{"body":"it hasn't copied `[1,4,5]`, but kept the original 'instance'","format":"org.matrix.custom.html","formatted_body":"it hasn't copied <code>[1,4,5]</code>, but kept the original 'instance'","msgtype":"m.text"},"ts":1624788336919,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$Jea2XUXvjZNhlHDk4dszjHvcB3AjhMHJMx5rXhQ9nTc"},
{"content":{"body":"OK, I see","msgtype":"m.text"},"ts":1624788921818,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$Z1PgX6W76IDvJIRtsSUsecPBsgxA7qRlhRE5BbgCtyM"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> Where does the spec define that a number literal can have a sign?\n\nNumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals\n+ and - are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$n6OACl66sIfTnUWbKRIAEkgMSW2lzU_pB3yCRPKKICU?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>Where does the spec define that a number literal can have a sign?</blockquote></mx-reply><p>NumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals</p>\n<ul>\n<li>and - are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa</li>\n</ul>\n","m.relates_to":{"m.in_reply_to":{"event_id":"$n6OACl66sIfTnUWbKRIAEkgMSW2lzU_pB3yCRPKKICU"}},"msgtype":"m.text"},"ts":1624789200976,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$RNGejdowyPqPhTHbQbpfOatSWtrhWs-ds5hycy8jEOM"},
{"content":{"body":"> <@sideshowbarker:mozilla.org> Where does the spec define that a number literal can have a sign?\n\n * NumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals\n`+` and `-` are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$n6OACl66sIfTnUWbKRIAEkgMSW2lzU_pB3yCRPKKICU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@sideshowbarker:mozilla.org\">@sideshowbarker:mozilla.org</a><br>Where does the spec define that a number literal can have a sign?</blockquote></mx-reply> * NumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals<br><code>+</code> and <code>-</code> are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa","m.new_content":{"body":"NumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals\n`+` and `-` are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa","format":"org.matrix.custom.html","formatted_body":"NumericLiterals don't have signs: https://262.ecma-international.org/12.0/#sec-literals-numeric-literals<br><code>+</code> and <code>-</code> are separate unary operations. This can also be seen here: https://astexplorer.net/#/gist/9e46bdbeb90384aa6fae4381538f29da/a8def7d99cb5a1e8f9e848c698cb03b23042cffa","msgtype":"m.text"},"m.relates_to":{"event_id":"$RNGejdowyPqPhTHbQbpfOatSWtrhWs-ds5hycy8jEOM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1624789225795,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$8DhVm9iP8qB2682l-LrTijgwsDIyb41D-k0CNaGZEE0"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1624789349854,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$gGCblV1oGXfaPOXmWoPN-VIeVXzifkc3Qvh0-YIj_Hw"},
{"content":{"body":"Ashley Claymore: so what we have in the examples in MDN at http://localhost:5000/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#numeric_literals is strictly wrong?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: so what we have in the examples in MDN at http://localhost:5000/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#numeric_literals is strictly wrong?","msgtype":"m.text"},"ts":1624789571082,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$IdTEoaFRT8srIsKV6pVmxTWjwUaTT7ddHNg20bMwbLI"},
{"content":{"body":"oofs make that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#numeric_literals","msgtype":"m.text"},"ts":1624789609316,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$l9X0B3brXJm3i-4SAE4czk12tNefG-g7o1TkSRv702U"},
{"content":{"body":"> Some examples of numeric literals are:\n> ```js\n> 0, 117, -345, 123456789123456789n             (decimal, base 10)\n> ```","format":"org.matrix.custom.html","formatted_body":"<blockquote>\nSome examples of numeric literals are:\n<pre><code class=\"language-js\">0, 117, -345, 123456789123456789n             (decimal, base 10)\n</code></pre>\n</blockquote>\n","msgtype":"m.text"},"ts":1624789673111,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$bmM3hiaP2z8ibnvBgMa5_W0N5MXv4HiEH1vlmppHQBE"},
{"content":{"body":"And so I should remove that `-345` but add a statement saying something like, *“A number literal can be preceded by a `-` or `+` sign to give it a sign.”*","format":"org.matrix.custom.html","formatted_body":"And so I should remove that <code>-345</code> but add a statement saying something like, <em>“A number literal can be preceded by a <code>-</code> or <code>+</code> sign to give it a sign.”</em>","msgtype":"m.text"},"ts":1624789773375,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$TOWZx3gWsdeIihte_R32XO6PU2pmmuN_QySJjzU_5WM"}
]