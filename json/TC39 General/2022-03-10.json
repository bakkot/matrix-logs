[
{"content":{"body":"I like TypeScript, but I don't think that type comment proposal is a good idea...","msgtype":"m.text","org.matrix.msc1767.text":"I like TypeScript, but I don't think that type comment proposal is a good idea..."},"ts":1646873588224,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Yh8m2ORoQJEbOv2A2Vne9DvCeaEcTESf816n5simqYs"},
{"content":{"body":"the goal of that proposal, \"make devs no need to transpile code\" cannot be really achieved by this approach","msgtype":"m.text","org.matrix.msc1767.text":"the goal of that proposal, \"make devs no need to transpile code\" cannot be really achieved by this approach"},"ts":1646873624515,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Ag7Ql6zZTYm8_ygVb6G6ZDg295clDn1YJA2P2a1r4Ew"},
{"content":{"body":"for example, TS 4.7 has a new syntax, instantiation expression like this:\n\n```js\nconst numberSet = Set<number>;\nconst set = new numberSet(); // type: Set<number>\n```","format":"org.matrix.custom.html","formatted_body":"<p>for example, TS 4.7 has a new syntax, instantiation expression like this:</p>\n<pre><code class=\"language-js\">const numberSet = Set&lt;number&gt;;\nconst set = new numberSet(); // type: Set&lt;number&gt;\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"for example, TS 4.7 has a new syntax, instantiation expression like this:\n\n```js\nconst numberSet = Set<number>;\nconst set = new numberSet(); // type: Set<number>\n```","mimetype":"text/plain"},{"body":"<p>for example, TS 4.7 has a new syntax, instantiation expression like this:</p>\n<pre><code class=\"language-js\">const numberSet = Set&lt;number&gt;;\nconst set = new numberSet(); // type: Set&lt;number&gt;\n</code></pre>\n","mimetype":"text/html"}]},"ts":1646873688545,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$m_O86FWGIms1JLTnnPrqF8FzkvUAsbv7xem9aHvdDPI"},
{"content":{"body":"this syntax will somehow has ASI hazard if I don't write `;`","format":"org.matrix.custom.html","formatted_body":"this syntax will somehow has ASI hazard if I don't write <code>;</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"this syntax will somehow has ASI hazard if I don't write `;`","mimetype":"text/plain"},{"body":"this syntax will somehow has ASI hazard if I don't write <code>;</code>","mimetype":"text/html"}]},"ts":1646873732215,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$D-bjXLDefc6ba3Y7vIW41y-V7O1RR5wy7yBYBKxy7Sc"},
{"content":{"body":"To achieve the goal of this proposal \"make devs no need to transpile code\", everytime Flow, TS, ... adds a new Type level syntax, we need to cover that in the language","msgtype":"m.text","org.matrix.msc1767.text":"To achieve the goal of this proposal \"make devs no need to transpile code\", everytime Flow, TS, ... adds a new Type level syntax, we need to cover that in the language"},"ts":1646873806760,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$rOO-CYvsv_QGStGwKOaTdmbX3T5ZQ2Oii8WJU7IICHI"},
{"content":{"body":"I don't think it's a good way to go.","msgtype":"m.text","org.matrix.msc1767.text":"I don't think it's a good way to go."},"ts":1646873819158,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-BpdDL8o3HVvMpdHsjRpXdU8maAYAxvxTrMGX7lNBcg"},
{"content":{"body":"it’s intentionally incomplete, IIUC","msgtype":"m.text"},"ts":1646873839014,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$6OYLMgVwYmvk5In15VUARaSTO_R8aIF_pB146bFboW4"},
{"content":{"body":"it can’t cover enums for example","msgtype":"m.text"},"ts":1646873847804,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$ylDQ2SpffP8JLVT2Jnh5B6kF23u5ALTKHkhF-0K8BgE"},
{"content":{"body":"I think the idea is just to take the `:` reserved token and make it comment-like instead","format":"org.matrix.custom.html","formatted_body":"I think the idea is just to take the <code>:</code> reserved token and make it comment-like instead","msgtype":"m.text"},"ts":1646873872812,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$-MU6OMwzW7r-GwY1mQLfqTl5iiK1xvLJ261MuTmvZIs"},
{"content":{"body":"so how does that make devs no need to transpile code? If we only have `:` style types","format":"org.matrix.custom.html","formatted_body":"so how does that make devs no need to transpile code? If we only have <code>:</code> style types","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so how does that make devs no need to transpile code? If we only have `:` style types","mimetype":"text/plain"},{"body":"so how does that make devs no need to transpile code? If we only have <code>:</code> style types","mimetype":"text/html"}]},"ts":1646873909581,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$xdoUMvVkjg6Ac7odu_IlvKR29UAHNA0h85b31EinfJk"},
{"content":{"body":"I write a lot generics, conditional types, union/conjunction types, etc","msgtype":"m.text","org.matrix.msc1767.text":"I write a lot generics, conditional types, union/conjunction types, etc"},"ts":1646873958900,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$zyY5SVNjzDMKcE5lixMlbB-oyARbdKcR-68eGwOxlnw"},
{"content":{"body":"it definitely lists lots of things beyond `:`, but also yes it is not everything in TS","format":"org.matrix.custom.html","formatted_body":"it definitely lists lots of things beyond <code>:</code>, but also yes it is not everything in TS","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it definitely lists lots of things beyond `:`, but also yes it is not everything in TS","mimetype":"text/plain"},{"body":"it definitely lists lots of things beyond <code>:</code>, but also yes it is not everything in TS","mimetype":"text/html"}]},"ts":1646874006993,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$cs3Jd7iMaYMPYVFkYGugVoMG9jhqzokPgQ16f70b344"},
{"content":{"body":"given that this is just for development anyway, I wonder how hard it would be to make a chrome extension which rewrote typescript to js so developers could use that","msgtype":"m.text","org.matrix.msc1767.text":"given that this is just for development anyway, I wonder how hard it would be to make a chrome extension which rewrote typescript to js so developers could use that"},"ts":1646874119542,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CYeu8jBgHNhc12L5Z1KrckZfnCvM_nGF180KkxmlmIE"},
{"content":{"body":"it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests.","msgtype":"m.text","org.matrix.msc1767.text":"it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests."},"ts":1646874239267,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$aMrPFyRAWy0uJl-ysAYVgVKSAJAXuJqjsiWcyn53W_4"},
{"content":{"body":" * it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests.","m.new_content":{"body":"it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests.","msgtype":"m.text","org.matrix.msc1767.text":"it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests."},"m.relates_to":{"event_id":"$aMrPFyRAWy0uJl-ysAYVgVKSAJAXuJqjsiWcyn53W_4","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * it's very hard. From Jan 2022, you cannot upload new Manifest V2 extension, and you need webRequest API to modify network requests."},"ts":1646874252368,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$iBq97o3jIHSB1na43EvTBZZPba_kjJMgneNi7eGPss4"},
{"content":{"body":"oh right, boooooo","msgtype":"m.text","org.matrix.msc1767.text":"oh right, boooooo"},"ts":1646874318747,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$q7jP67EycZZNH7WxMWqluu2j3kReIYDVUC7ifcGlltM"},
{"content":{"body":"it's very easy on MV2, you just get every request and parse the html and send inline JS to the transpiler (maybe also recompute CSP hash)","msgtype":"m.text","org.matrix.msc1767.text":"it's very easy on MV2, you just get every request and parse the html and send inline JS to the transpiler (maybe also recompute CSP hash)"},"ts":1646874321218,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$-2DNDlt2Mk4yjfVFbiVlC6Q6JgUvFyGGs0trcXKtSK4"},
{"content":{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","format":"org.matrix.custom.html","formatted_body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/plain"},{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$WWvG8u-iolhVJkyTTaInqVQ6tHfU2a0hwlAs2zsKhVU"}}},"ts":1646875952547,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$xuusXS0VW1j190m0IV2VvWBk2nhquhq8oPRQ_0FSnlg"},
{"content":{"body":"> <@devsnek:matrix.org> i really wish we could combine the usefulness of python with the expressiveness of js\n\n * For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$WWvG8u-iolhVJkyTTaInqVQ6tHfU2a0hwlAs2zsKhVU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i really wish we could combine the usefulness of python with the expressiveness of js</blockquote></mx-reply> * For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","m.new_content":{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","format":"org.matrix.custom.html","formatted_body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/plain"},{"body":"For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xuusXS0VW1j190m0IV2VvWBk2nhquhq8oPRQ_0FSnlg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@devsnek:matrix.org> i really wish we could combine the usefulness of python with the expressiveness of js\n\n * For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$WWvG8u-iolhVJkyTTaInqVQ6tHfU2a0hwlAs2zsKhVU?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>i really wish we could combine the usefulness of python with the expressiveness of js</blockquote></mx-reply> * For what it's worth, the Python community recently tried to turn off the by-defualt reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/html"}]},"ts":1646875961348,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$_EIt9zDiFUKumFVVIjZVTFetZS85fvA3JbBKNQ0jqHg"},
{"content":{"body":"> <@jackworks:matrix.org> I write a lot generics, conditional types, union/conjunction types, etc\n\nIn these cases, you'd be able to leverage the full type syntax in a `.d.ts` file or parenthesize the syntax that you need","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$zyY5SVNjzDMKcE5lixMlbB-oyARbdKcR-68eGwOxlnw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>I write a lot generics, conditional types, union/conjunction types, etc</blockquote></mx-reply>In these cases, you'd be able to leverage the full type syntax in a <code>.d.ts</code> file or parenthesize the syntax that you need","m.relates_to":{"m.in_reply_to":{"event_id":"$zyY5SVNjzDMKcE5lixMlbB-oyARbdKcR-68eGwOxlnw"}},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@jackworks:matrix.org> I write a lot generics, conditional types, union/conjunction types, etc\n\nIn these cases, you'd be able to leverage the full type syntax in a `.d.ts` file or parenthesize the syntax that you need","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$zyY5SVNjzDMKcE5lixMlbB-oyARbdKcR-68eGwOxlnw?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@jackworks:matrix.org\">@jackworks:matrix.org</a><br>I write a lot generics, conditional types, union/conjunction types, etc</blockquote></mx-reply>In these cases, you'd be able to leverage the full type syntax in a <code>.d.ts</code> file or parenthesize the syntax that you need","mimetype":"text/html"}]},"ts":1646876075767,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$sc0CJc3Bc9qImEV6dM0rB71XI6abGfCINNaqiD_UgYE"},
{"content":{"body":" * For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","format":"org.matrix.custom.html","formatted_body":" * For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","m.new_content":{"body":"For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","format":"org.matrix.custom.html","formatted_body":"For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/plain"},{"body":"For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$xuusXS0VW1j190m0IV2VvWBk2nhquhq8oPRQ_0FSnlg","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/plain"},{"body":" * For what it's worth, I believe the Python community recently tried to turn off the by-default reflective capabilities of type hints (due to the performance impact) and they had to pull the changes back.","mimetype":"text/html"}]},"ts":1646876116889,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$z-FSB5LXUQGpF4w18x1X54Nn4BuILoih5Qx-HQ0sRMw"},
{"content":{"body":"Most of those types would be parsed at the top level, and parentheses/bracketing is your escape hatch","msgtype":"m.text","org.matrix.msc1767.text":"Most of those types would be parsed at the top level, and parentheses/bracketing is your escape hatch"},"ts":1646876130770,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$gseU2utBov9255mg6GSPCib9DJ32F_a69yyWuMpJ130"},
{"content":{"body":"i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort","msgtype":"m.text","org.matrix.msc1767.text":"i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort"},"ts":1646876145564,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$I-2rJhV4F8ADDicJhUUbqJ8FiGIGAVuENalG8PGIkis"},
{"content":{"body":"FWIW we have a (tentative!) grammar\n\nhttps://github.com/giltayar/proposal-types-as-comments/blob/master/site/src/grammar-input.html","msgtype":"m.text","org.matrix.msc1767.text":"FWIW we have a (tentative!) grammar\n\nhttps://github.com/giltayar/proposal-types-as-comments/blob/master/site/src/grammar-input.html"},"ts":1646876166802,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$1nbjZogjrlwcr8J9B9cUuTq2mnG2sBK7cskKMDNUkog"},
{"content":{"body":" * i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort","m.new_content":{"body":"i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort","msgtype":"m.text","org.matrix.msc1767.text":"i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort"},"m.relates_to":{"event_id":"$I-2rJhV4F8ADDicJhUUbqJ8FiGIGAVuENalG8PGIkis","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * i mean i haven't deeply investigated this obviously but i think fancy js engines that care about this sort of thing could make the cost of the strings only be paid if you actually use it, without a silly amount of effort"},"ts":1646876172525,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$CShVr35xO5zQaKplFE1wbhyPvlNfY9ghrhBg7o-F2Cs"},
{"content":{"body":"So hey all, sorry I haven't had the chance to discuss the proposal more in this room - there's been a lot going on today! What I'll just say before I have to run is that we're just trying to make type analysis easier in JavaScript given how popular TypeScript has grown over the past few years. I think that Rob Palmer , Romulo Cintra  and I extremely open to questions/comments/concerns/criticisms on all this. I'll try to be more available tomorrow/later this week if people want to discuss","format":"org.matrix.custom.html","formatted_body":"So hey all, sorry I haven't had the chance to discuss the proposal more in this room - there's been a lot going on today! What I'll just say before I have to run is that we're just trying to make type analysis easier in JavaScript given how popular TypeScript has grown over the past few years. I think that <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> , <a href=\"https://matrix.to/#/@rcintra:igalia.com\">Romulo Cintra</a>  and I extremely open to questions/comments/concerns/criticisms on all this. I'll try to be more available tomorrow/later this week if people want to discuss","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"So hey all, sorry I haven't had the chance to discuss the proposal more in this room - there's been a lot going on today! What I'll just say before I have to run is that we're just trying to make type analysis easier in JavaScript given how popular TypeScript has grown over the past few years. I think that Rob Palmer , Romulo Cintra  and I extremely open to questions/comments/concerns/criticisms on all this. I'll try to be more available tomorrow/later this week if people want to discuss","mimetype":"text/plain"},{"body":"So hey all, sorry I haven't had the chance to discuss the proposal more in this room - there's been a lot going on today! What I'll just say before I have to run is that we're just trying to make type analysis easier in JavaScript given how popular TypeScript has grown over the past few years. I think that <a href=\"https://matrix.to/#/@robpalme:matrix.org\">Rob Palmer</a> , <a href=\"https://matrix.to/#/@rcintra:igalia.com\">Romulo Cintra</a>  and I extremely open to questions/comments/concerns/criticisms on all this. I'll try to be more available tomorrow/later this week if people want to discuss","mimetype":"text/html"}]},"ts":1646876881766,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$Rl7C9jsdF_x-tHLkZD2Tu1VluOvQhAnyRE5YdFDg7UE"},
{"content":{"body":"i think its very cool i will just be sad if we do not get *any* reflective capabilities on this given that this is a dynamic language","format":"org.matrix.custom.html","formatted_body":"i think its very cool i will just be sad if we do not get <em>any</em> reflective capabilities on this given that this is a dynamic language","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i think its very cool i will just be sad if we do not get *any* reflective capabilities on this given that this is a dynamic language","mimetype":"text/plain"},{"body":"i think its very cool i will just be sad if we do not get <em>any</em> reflective capabilities on this given that this is a dynamic language","mimetype":"text/html"}]},"ts":1646876951345,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$7k76DpVXRNd60XRTkZPjOtF0iM3ZACCNUtg8IS1uriQ"},
{"content":{"body":"https://github.com/giltayar/proposal-types-as-comments/blob/master/site/src/grammar-input.html#L196","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/giltayar/proposal-types-as-comments/blob/master/site/src/grammar-input.html#L196"},"ts":1646877020904,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Egoz1I5ozOhnFA3fvIEn4RKsTWlpj9GoG06G8uVS-f0"},
{"content":{"body":"👀","msgtype":"m.text","org.matrix.msc1767.text":"👀"},"ts":1646877027477,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$084-7B29lTOvUhrsC5wmE4h0uMqCsZyXzZXuRxqJne8"},
{"content":{"body":"> <@devsnek:matrix.org> i think its very cool i will just be sad if we do not get *any* reflective capabilities on this given that this is a dynamic language\n\nI tried Typescript's metadata reflection type. It's tooooo weak, any complex type will be transformed to Object. It cannot express any complex type. Only classes and primitive types","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$7k76DpVXRNd60XRTkZPjOtF0iM3ZACCNUtg8IS1uriQ?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br />i think its very cool i will just be sad if we do not get <em>any</em> reflective capabilities on this given that this is a dynamic language</blockquote></mx-reply>I tried Typescript's metadata reflection type. It's tooooo weak, any complex type will be transformed to Object. It cannot express any complex type. Only classes and primitive types","m.relates_to":{"m.in_reply_to":{"event_id":"$7k76DpVXRNd60XRTkZPjOtF0iM3ZACCNUtg8IS1uriQ"}},"msgtype":"m.text"},"ts":1646877952254,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$NLHKIrguaHg7azkPj5xF3vxPPF3bbD0v-taCQsbuNTI"},
{"content":{"body":"tbh all i'm asking for is strings","msgtype":"m.text","org.matrix.msc1767.text":"tbh all i'm asking for is strings"},"ts":1646878009660,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$kaoR8NFCIeWC0TPK2czaIgoHRZk99PTrujPDyrS194E"},
{"content":{"body":"Even worse... How do you know those types are referring difference entities if their share the same name?","msgtype":"m.text"},"ts":1646878145739,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wTbtRdPsWL9KmaS6HakMxT4Hm8fRbmARkK3BHwrJAYU"},
{"content":{"body":"And if it contains complex structures, you need to parse them by yourself","msgtype":"m.text"},"ts":1646878219300,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8UuWy1g1nt51XIEPy3wxs5i6l6ZsU4SfPMaAJ-KylsI"},
{"content":{"body":"my personal opinion on this proposal: it has an ambitious goal, but I don't think it will achieve the goal, and it's not worth to add so many syntax and all of them doesn't do anything; but if it cannot really do anything, real type check is not a path (web compat) or python style reflection (performance? and I don't like that either)","msgtype":"m.text","org.matrix.msc1767.text":"my personal opinion on this proposal: it has an ambitious goal, but I don't think it will achieve the goal, and it's not worth to add so many syntax and all of them doesn't do anything; but if it cannot really do anything, real type check is not a path (web compat) or python style reflection (performance? and I don't like that either)"},"ts":1646878573634,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$GnCVkPHmariSgCWNkNOFKe34b7zgylyAWJ1lU6CF4qA"},
{"content":{"body":"i wonder how hard it would be to make a VSCode plugin that let you edit a file with flow-style type-comments (https://flow.org/en/docs/types/comments/) as if the comments weren't there","msgtype":"m.text","org.matrix.msc1767.text":"i wonder how hard it would be to make a VSCode plugin that let you edit a file with flow-style type-comments (https://flow.org/en/docs/types/comments/) as if the comments weren't there"},"ts":1646879873329,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$kKGoILox7KmxcJfJScFFYb4E_Mt4R2qZBYNES2dzLEw"},
{"content":{"body":"that is, as if you'd written the contents of the comments inline","msgtype":"m.text","org.matrix.msc1767.text":"that is, as if you'd written the contents of the comments inline"},"ts":1646879882609,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZGhTC6JUsHD4vUKdtP2szLnEzwZ_sYkPX2_yoQPSScA"},
{"content":{"body":"so you could write `let x: y = z` but the file on disk would be `let x/*: y */ = z`\n","format":"org.matrix.custom.html","formatted_body":"so you could write <code>let x: y = z</code> but the file on disk would be <code>let x/*: y */ = z</code>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"so you could write `let x: y = z` but the file on disk would be `let x/*: y */ = z`\n","mimetype":"text/plain"},{"body":"so you could write <code>let x: y = z</code> but the file on disk would be <code>let x/*: y */ = z</code>","mimetype":"text/html"}]},"ts":1646879935271,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$eT6I2C7FGiDW8wPWVMhdiNXMVScWPGrM4dRABktf6iA"},
{"content":{"body":"Then why not use compileOnSave to let ide just compile the file directly for you 🤔","msgtype":"m.text"},"ts":1646882262927,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$OH8gKfg8dZeZsjFJ-EckNREirABw4HF6VylSUBVmPcM"},
{"content":{"body":"tsc is soooooo slow","msgtype":"m.text","org.matrix.msc1767.text":"tsc is soooooo slow"},"ts":1646882765789,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rNxNIXWn6nVUDdyp7KLUlUJZPZvWbLi4GsQCx_-jRi0"},
{"content":{"body":"is the main reason","msgtype":"m.text","org.matrix.msc1767.text":"is the main reason"},"ts":1646882768579,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$2cK1b3G53uLMKP1SBt6D0nuVTxeOuKh3lb1rmzD30A0"},
{"content":{"body":"though I guess you could set up esbuild instead","msgtype":"m.text","org.matrix.msc1767.text":"though I guess you could set up esbuild instead"},"ts":1646882774347,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NLWZ__dpnj4UsFnDUzMu2tNNcyLVkPhfPiDX-aAHi7U"},
{"content":{"body":"one possible usage of this is","msgtype":"m.text","org.matrix.msc1767.text":"one possible usage of this is"},"ts":1646889146866,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$gPKgODM-OO3I6qdUpHQQMqpGvT0oM5bDw6hyayTQJ1c"},
{"content":{"body":"engine can use type comment as the JIT hint","msgtype":"m.text","org.matrix.msc1767.text":"engine can use type comment as the JIT hint"},"ts":1646889160840,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$hWNccHs-Pmksg-gBj2y65D4LKh24AXOAcwaDtrOm4oQ"},
{"content":{"body":"to get the better hint at the first time, don't need to guess","msgtype":"m.text","org.matrix.msc1767.text":"to get the better hint at the first time, don't need to guess"},"ts":1646889178092,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$8jRyf8jXFq2lSRylRQlrSOofPYN2XGIX-r_Ws-EO_WQ"},
{"content":{"body":"and if type mismatches, engine can still deoptimize","msgtype":"m.text","org.matrix.msc1767.text":"and if type mismatches, engine can still deoptimize"},"ts":1646889201707,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$gnTMRrwxt7hxDjZUemsjg6TOw9fSN4J434JY_ggDnDQ"},
{"content":{"body":"that would require some sort of standardization for the type hints themselves, not only the syntax markers, though","msgtype":"m.text","org.matrix.msc1767.text":"that would require some sort of standardization for the type hints themselves, not only the syntax markers, though"},"ts":1646889345293,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$Ft2zeslaL5naXGfr7TFWjkZ0BCzkJstiLUcIBIMarAI"},
{"content":{"body":"and `number` is not a good enough type hint for engine optimization","format":"org.matrix.custom.html","formatted_body":"and <code>number</code> is not a good enough type hint for engine optimization","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"and `number` is not a good enough type hint for engine optimization","mimetype":"text/plain"},{"body":"and <code>number</code> is not a good enough type hint for engine optimization","mimetype":"text/html"}]},"ts":1646889360888,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$ErI4R6HjVYA_B7-3Un_584PEXH3BHDigpim_0seFDGU"},
{"content":{"body":"also most types in most TS codebases I've seen are inferred, and the cost of doing the type inference is probably significantly more than the benefit you'd get from skipping some JIT warmup","msgtype":"m.text","org.matrix.msc1767.text":"also most types in most TS codebases I've seen are inferred, and the cost of doing the type inference is probably significantly more than the benefit you'd get from skipping some JIT warmup"},"ts":1646889424456,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xkrzm6diPF7wD2kFeF0jupn6ZNVF5XA6v0L4-QdLNDI"},
{"content":{"body":" * that would require some sort of standardization for the type hints themselves, and not only the syntax markers, though","m.new_content":{"body":"that would require some sort of standardization for the type hints themselves, and not only the syntax markers, though","msgtype":"m.text","org.matrix.msc1767.text":"that would require some sort of standardization for the type hints themselves, and not only the syntax markers, though"},"m.relates_to":{"event_id":"$Ft2zeslaL5naXGfr7TFWjkZ0BCzkJstiLUcIBIMarAI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * that would require some sort of standardization for the type hints themselves, and not only the syntax markers, though"},"ts":1646889446749,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$CGX8hbSAxbRrXgy4jQ_zREVTwYLDafn-nsr_38MDFg8"},
{"content":{"body":"well, at least you will type your function parameter when there is no contextual typing is available","msgtype":"m.text","org.matrix.msc1767.text":"well, at least you will type your function parameter when there is no contextual typing is available"},"ts":1646889465820,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$dHzRKUYbed1BBzOgYgrJ_fmHcOiO51eRfTs-9Q7L3NI"},
{"content":{"body":" * that would require some sort of standardization for the type hints themselves, not only the syntax markers, though","m.new_content":{"body":"that would require some sort of standardization for the type hints themselves, not only the syntax markers, though","msgtype":"m.text","org.matrix.msc1767.text":"that would require some sort of standardization for the type hints themselves, not only the syntax markers, though"},"m.relates_to":{"event_id":"$Ft2zeslaL5naXGfr7TFWjkZ0BCzkJstiLUcIBIMarAI","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * that would require some sort of standardization for the type hints themselves, not only the syntax markers, though"},"ts":1646889473605,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$BV-U8ceJxXsMZ3vMQhxKcu_noixoToPRPmkRrz3kURg"}
]