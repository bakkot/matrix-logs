[
{"content":{"body":"what are the odds we could get away with changing `String.prototype.indexOf` so that if you pass a regex it will actually use it instead of coercing to a string","format":"org.matrix.custom.html","formatted_body":"what are the odds we could get away with changing <code>String.prototype.indexOf</code> so that if you pass a regex it will actually use it instead of coercing to a string","m.mentions":{},"msgtype":"m.text"},"ts":1738083854890,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Ob78F9dfx0P0YaD4r4bVEj40mT8tKAaNVqMG2lKh7QY"},
{"content":{"body":"my feeling is unfortunately low","m.mentions":{},"msgtype":"m.text"},"ts":1738083868302,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$K1ZYLben35fpJ9uO3yTND2Wq_ayBZ3OqWZR2hTXAopE"},
{"content":{"body":"(I'm thinking something like, if the argument is not primitive then look up `Symbol.exec` and use that instead of doing `.toString`)","format":"org.matrix.custom.html","formatted_body":"(I'm thinking something like, if the argument is not primitive then look up <code>Symbol.exec</code> and use that instead of doing <code>.toString</code>)","m.mentions":{},"msgtype":"m.text"},"ts":1738083884148,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bHZW_377dPHrR9dI897PdWZKzgqrouCk4lNF4GJ81lY"},
{"content":{"body":"presumably someone is somehow relying on like `'foo/bar/baz'.indexOf(/bar/)` returning 3","format":"org.matrix.custom.html","formatted_body":"presumably someone is somehow relying on like <code>'foo/bar/baz'.indexOf(/bar/)</code> returning 3","m.mentions":{},"msgtype":"m.text"},"ts":1738083909580,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$5uYO9nuSr_oXRamzx1PWS-_g1PTeu68LbR_zt-azq1Y"},
{"content":{"body":"> <@bakkot:matrix.org> presumably someone is somehow relying on like `'foo/bar/baz'.indexOf(/bar/)` returning 3\n\nSounds like something that browsers can easily add a use counter for if you can convince them","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$5uYO9nuSr_oXRamzx1PWS-_g1PTeu68LbR_zt-azq1Y?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br />presumably someone is somehow relying on like <code>'foo/bar/baz'.indexOf(/bar/)</code> returning 3</blockquote></mx-reply>Sounds like something that browsers can easily add a use counter for if you can convince them","m.relates_to":{"m.in_reply_to":{"event_id":"$5uYO9nuSr_oXRamzx1PWS-_g1PTeu68LbR_zt-azq1Y"}},"msgtype":"m.text"},"ts":1738084002623,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$buT2SzaGBI99Ma2aDaABnHcdElqkGrv8JJw_CtIh4dg"},
{"content":{"body":"browsers could add a use counter for regexp arguments but it's hard to automatically tell if someone is relying on it working (or not working)","m.mentions":{},"msgtype":"m.text"},"ts":1738084036555,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tUzjybJwZTeYt2EkELRZrLZ6xYEjc2_pnxYHFqM4Wuc"},
{"content":{"body":"well if they're not used at all, you don't have to worry about that","msgtype":"m.text"},"ts":1738084770374,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$cAXTouPaLCyFOEWOwrDLhQEVjaC0RRHKGYekc_8Iu_w"},
{"content":{"body":"unfortunately, I highly doubt that nobody is doing it","msgtype":"m.text"},"ts":1738084794907,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$K_pqErAqP3Igl12YWc7txCdym39V6oqcYupxG0HGRJo"},
{"content":{"body":"my feeling is also the odds are not good","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$K1ZYLben35fpJ9uO3yTND2Wq_ayBZ3OqWZR2hTXAopE"}},"msgtype":"m.text"},"ts":1738090819803,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LvwSqIw42VjdMeUi4FtWOxaBMGc_4VeoY6VWVa77Pe8"},
{"content":{"body":"if you need a regex with a string, isn't that already `String.prototype.search`?","format":"org.matrix.custom.html","formatted_body":"if you need a regex with a string, isn't that already <code>String.prototype.search</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1738091558294,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$C1Yzhb8wKJgaAvX-0XJ-t-duj3bP3ugtVb36DDcfjAM"}
]