[
{"content":{"body":"I feel like the decorator proposal needs a giant section explaining why the metadata has like public/private sections and such. It's probably intuitive to the designers, but reading the proposal it's not. I saw: https://github.com/tc39/proposal-decorators/issues/427 which brings this up also tying the metadata to the property.","msgtype":"m.text","org.matrix.msc1767.text":"I feel like the decorator proposal needs a giant section explaining why the metadata has like public/private sections and such. It's probably intuitive to the designers, but reading the proposal it's not. I saw: https://github.com/tc39/proposal-decorators/issues/427 which brings this up also tying the metadata to the property."},"ts":1646965023616,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$kON8W1btIYZv60-Yel0jjBNnYFOykwCnamME-QOFuBA"},
{"content":{"body":"why AsyncFunction is not exposed to the global scope?","msgtype":"m.text","org.matrix.msc1767.text":"why AsyncFunction is not exposed to the global scope?"},"ts":1647014429371,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$wBiaS534aGQsw5-3PAxJhfJeAucUraV3JLAEoSwevu4"},
{"content":{"body":"good question. some things would be a lot easier if it were.","msgtype":"m.text","org.matrix.msc1767.text":"good question. some things would be a lot easier if it were."},"ts":1647018709944,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$s2MOedQwUoqFdh1u3Vbpy7rifsRLpyyIWZpQE3sphaY"},
{"content":{"body":" * good question. some things would be a lot easier if it were.","m.new_content":{"body":"good question. some things would be a lot easier if it were.","msgtype":"m.text","org.matrix.msc1767.text":"good question. some things would be a lot easier if it were."},"m.relates_to":{"event_id":"$s2MOedQwUoqFdh1u3Vbpy7rifsRLpyyIWZpQE3sphaY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * good question. some things would be a lot easier if it were."},"ts":1647018711853,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FwLTHUdnAio6RKnkrrEUhboXZiVpBs4sKgpOAR82-8U"},
{"content":{"body":"which things? You've got me curious ðŸ™‚ The downsides to needing to do `const AsyncFunction = Object.getPrototypeOf(async () => {});` are not immediately clear to me.","format":"org.matrix.custom.html","formatted_body":"which things? You've got me curious ðŸ™‚ The downsides to needing to do <code>const AsyncFunction = Object.getPrototypeOf(async () =&gt; {});</code> are not immediately clear to me.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"which things? You've got me curious ðŸ™‚ The downsides to needing to do `const AsyncFunction = Object.getPrototypeOf(async () => {});` are not immediately clear to me.","mimetype":"text/plain"},{"body":"which things? You've got me curious ðŸ™‚ The downsides to needing to do <code>const AsyncFunction = Object.getPrototypeOf(async () =&gt; {});</code> are not immediately clear to me.","mimetype":"text/html"}]},"ts":1647019264004,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ivsLm-632F2pANFa3BupV4Yjez2WRI0cBbLv74z-Lkw"},
{"content":{"body":"I searched for async await proposal repo, and didn't find a decision of this topic. ","msgtype":"m.text"},"ts":1647019766788,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$oFrSl8VxCAG8KTWcGiK_Nh4mNVud1eH2TAxc5mzEjSs"},
{"content":{"body":"Is this intentional? For what reason? Security? Or just forgot in the spec? ðŸ¤”","msgtype":"m.text"},"ts":1647019792473,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$AucWng_4PKMpxYQ_jOycmw49CqcLpp-HWlZ7bpIKNBk"},
{"content":{"body":"Maybe following precedence of generators?","msgtype":"m.text","org.matrix.msc1767.text":"Maybe following precedence of generators?"},"ts":1647019819988,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$65hrt7HzVP1UZKHC5VcSqPwtj3Gdkhy9Hieab2obQYs"},
{"content":{"body":"maybe there was a conversation for that earlier proposal?","msgtype":"m.text","org.matrix.msc1767.text":"maybe there was a conversation for that earlier proposal?"},"ts":1647019832104,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$hp2rlvZxo5iltyYJ68RbguC5_DiLz4ClGUDh22_ruSQ"},
{"content":{"body":" * maybe there was a conversation for that earlier proposal?","m.new_content":{"body":"maybe there was a conversation for that earlier proposal?","msgtype":"m.text","org.matrix.msc1767.text":"maybe there was a conversation for that earlier proposal?"},"m.relates_to":{"event_id":"$hp2rlvZxo5iltyYJ68RbguC5_DiLz4ClGUDh22_ruSQ","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * maybe there was a conversation for that earlier proposal?"},"ts":1647019846187,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$aneItx4PUICsvgWnfzu0-3crFlSrAORokNfdo1y1VUo"},
{"content":{"body":"But generators comes from ES6, don't have a repo ðŸ¤”","msgtype":"m.text"},"ts":1647019885436,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$XGQR8kX1VjgcDTaTQpIhazCadexyOBf-yAYbP5SRTYs"},
{"content":{"body":"ah yes of course!","msgtype":"m.text","org.matrix.msc1767.text":"ah yes of course!"},"ts":1647019904893,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$FGVtmlA5n3_UdqmviZzCY-wI8KomTr9BN5xZXEGzAek"},
{"content":{"body":"harder to search notes","msgtype":"m.text","org.matrix.msc1767.text":"harder to search notes"},"ts":1647019924940,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$iCAPLZQOb81DzRsOscywhFDU2Ja6PPHn5eVj7XJrqJk"},
{"content":{"body":" * harder to search notes","m.new_content":{"body":"harder to search notes","msgtype":"m.text","org.matrix.msc1767.text":"harder to search notes"},"m.relates_to":{"event_id":"$iCAPLZQOb81DzRsOscywhFDU2Ja6PPHn5eVj7XJrqJk","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * harder to search notes"},"ts":1647019937126,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$kLncP4uthAsCVGwFKtz2H6QslQGp4E6TArN6xnHPZHY"},
{"content":{"body":"https://esdiscuss.org/topic/why-generatorfunction-constructor-isn-t-directly-exposed-to-end-users#content-1","msgtype":"m.text","org.matrix.msc1767.text":"https://esdiscuss.org/topic/why-generatorfunction-constructor-isn-t-directly-exposed-to-end-users#content-1"},"ts":1647020013624,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$drGUSl-jXoIs1tKzHJ16Wf9_-Vmw0UtOfC3v-GV_GRE"},
{"content":{"body":"> \"It wasn't directly exposed in ES6 was because it lacked strong use cases and we didn't want to clutter up the global namespace with something of little value\"","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>&quot;It wasn't directly exposed in ES6 was because it lacked strong use cases and we didn't want to clutter up the global namespace with something of little value&quot;</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> \"It wasn't directly exposed in ES6 was because it lacked strong use cases and we didn't want to clutter up the global namespace with something of little value\"","mimetype":"text/plain"},{"body":"<blockquote>\n<p>&quot;It wasn't directly exposed in ES6 was because it lacked strong use cases and we didn't want to clutter up the global namespace with something of little value&quot;</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1647020046116,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$iIAsl8J5uc4EQjsgA_ucAAl9U8iw8OB4s6PqFJL11ms"},
{"content":{"body":"Well.. it's proven to be useful. Can we have a proposal to add them now? ðŸ˜‚","msgtype":"m.text"},"ts":1647020111962,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$5LD45KpJ2FZIAVMo_UbsJ-EJJye-6z18C8uG9NM9ZBg"},
{"content":{"body":"what did you want it for?","msgtype":"m.text","org.matrix.msc1767.text":"what did you want it for?"},"ts":1647020174565,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IIjG_K47S6_A-7tCYaDP0CksEp_b_Jnu3nUCxh26Vi0"},
{"content":{"body":"Extending generator prototype","msgtype":"m.text"},"ts":1647020413110,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$bb8sfXqFvPRr04QpX5dajbmM2bPZIJ39Yh3d8JFR3g4"},
{"content":{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","format":"org.matrix.custom.html","formatted_body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/plain"},{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$ivsLm-632F2pANFa3BupV4Yjez2WRI0cBbLv74z-Lkw"}}},"ts":1647022624041,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$b2Rdy_Osyf1S1b6yz9lozhnd257DyN019cMiKxpBRQs"},
{"content":{"body":"> <@aclaymore:matrix.org> which things? You've got me curious ðŸ™‚ The downsides to needing to do `const AsyncFunction = Object.getPrototypeOf(async () => {});` are not immediately clear to me.\n\n * it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ivsLm-632F2pANFa3BupV4Yjez2WRI0cBbLv74z-Lkw?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>which things? You've got me curious ðŸ™‚ The downsides to needing to do <code>const AsyncFunction = Object.getPrototypeOf(async () =&gt; {});</code> are not immediately clear to me.</blockquote></mx-reply> * it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","m.new_content":{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","format":"org.matrix.custom.html","formatted_body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/plain"},{"body":"it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$b2Rdy_Osyf1S1b6yz9lozhnd257DyN019cMiKxpBRQs","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> <@aclaymore:matrix.org> which things? You've got me curious ðŸ™‚ The downsides to needing to do `const AsyncFunction = Object.getPrototypeOf(async () => {});` are not immediately clear to me.\n\n * it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$ivsLm-632F2pANFa3BupV4Yjez2WRI0cBbLv74z-Lkw?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br>which things? You've got me curious ðŸ™‚ The downsides to needing to do <code>const AsyncFunction = Object.getPrototypeOf(async () =&gt; {});</code> are not immediately clear to me.</blockquote></mx-reply> * it requires syntax, which means you can't support older engines that way without eval. also, it's harder to do SES stuff","mimetype":"text/html"}]},"ts":1647022640623,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$gwCyt2JsblqspOaEZiOImqTxzh0_VrdlmAvVn6kPcJ0"},
{"content":{"body":"Thanks, makes sense","msgtype":"m.text"},"ts":1647024749569,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$NdDhsJ-YSo3Hg55bCEZeY3KlM3e5Q4h9G5GUBO3mK_4"},
{"content":{"body":"Tangentially related, for future browsers with `ShadowRealm`. Would `sr.evaluate(str)` be allowed even if eval was blocked by CSP? ","format":"org.matrix.custom.html","formatted_body":"Tangentially related, for future browsers with <code>ShadowRealm</code>. Would <code>sr.evaluate(str)</code> be allowed even if eval was blocked by CSP?","msgtype":"m.text"},"ts":1647024875802,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$tzvRl8-i2L1eJsI0gs7hjEcFXk6UfjPYer9cBTCqaYM"},
{"content":{"body":"> Extending generator prototype\n\nthis seems like something few enough people want that it's not worth cluttering the global namespace","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>Extending generator prototype</p>\n</blockquote>\n<p>this seems like something few enough people want that it's not worth cluttering the global namespace</p>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"> Extending generator prototype\n\nthis seems like something few enough people want that it's not worth cluttering the global namespace","mimetype":"text/plain"},{"body":"<blockquote>\n<p>Extending generator prototype</p>\n</blockquote>\n<p>this seems like something few enough people want that it's not worth cluttering the global namespace</p>\n","mimetype":"text/html"}]},"ts":1647025214332,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$z3U-PvTvHZl7Gu7U6J7IZRGmxP3QxdYUDPjniTBgtRw"},
{"content":{"body":"also in the absence of a convenient way to build protocols (I know, I will work on it), probably something we want to discourage for now","msgtype":"m.text","org.matrix.msc1767.text":"also in the absence of a convenient way to build protocols (I know, I will work on it), probably something we want to discourage for now"},"ts":1647026079387,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Y8HNpR2lCmsZngL6TtDmaqkEYXXqKbHUXtfp2Pl3QbY"},
{"content":{"body":"Is someone here an expert on decorator history. (Not sure if Garett is here). I have a side question related to how/if the decorator syntax could change if function  overloading existed. https://github.com/sirisian/ecmascript-types/issues/59#issuecomment-1065517382 Specifically if the return (value, context) => {} syntax holds some special use cases. Like are there situations where one runs code before the return that has a meaningful purpose? I'm not familiar with when the function runs vs when the returned function is executed. Is that used for certain techniques?","msgtype":"m.text","org.matrix.msc1767.text":"Is someone here an expert on decorator history. (Not sure if Garett is here). I have a side question related to how/if the decorator syntax could change if function  overloading existed. https://github.com/sirisian/ecmascript-types/issues/59#issuecomment-1065517382 Specifically if the return (value, context) => {} syntax holds some special use cases. Like are there situations where one runs code before the return that has a meaningful purpose? I'm not familiar with when the function runs vs when the returned function is executed. Is that used for certain techniques?"},"ts":1647033662397,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$otVfnyeeA4E0Yx_b1x0vzWLLLh8CX7oJOTovc4qtpns"}
]