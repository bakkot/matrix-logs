[
{"content":{"body":"Is the change in https://github.com/mdn/content/pull/13229/files correct?\nSpecifically, does `handler.defineProperty()` intercept `Object.prototype.__defineGetter__` and `Object.prototype.__defineSetter__`?","format":"org.matrix.custom.html","formatted_body":"Is the change in https://github.com/mdn/content/pull/13229/files correct?<br>Specifically, does <code>handler.defineProperty()</code> intercept <code>Object.prototype.__defineGetter__</code> and <code>Object.prototype.__defineSetter__</code>?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Is the change in https://github.com/mdn/content/pull/13229/files correct?\nSpecifically, does `handler.defineProperty()` intercept `Object.prototype.__defineGetter__` and `Object.prototype.__defineSetter__`?","mimetype":"text/plain"},{"body":"Is the change in https://github.com/mdn/content/pull/13229/files correct?<br>Specifically, does <code>handler.defineProperty()</code> intercept <code>Object.prototype.__defineGetter__</code> and <code>Object.prototype.__defineSetter__</code>?","mimetype":"text/html"}]},"ts":1645677556152,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$kdD53SzaQmD3b3CqwKbqgYswBxqGvPi0XjLC84XepNs"},
{"content":{"body":"Barring exceptions, `__defineGetter__` and `__defineSetter__` invoke `DefinePropertyOrThrow`, which invokes `[[DefineOwnProperty]]`, which in a proxy is handled by the `defineProperty` method, so I'd say yes.","format":"org.matrix.custom.html","formatted_body":"Barring exceptions, <code>__defineGetter__</code> and <code>__defineSetter__</code> invoke <code>DefinePropertyOrThrow</code>, which invokes <code>[[DefineOwnProperty]]</code>, which in a proxy is handled by the <code>defineProperty</code> method, so I'd say yes.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Barring exceptions, `__defineGetter__` and `__defineSetter__` invoke `DefinePropertyOrThrow`, which invokes `[[DefineOwnProperty]]`, which in a proxy is handled by the `defineProperty` method, so I'd say yes.","mimetype":"text/plain"},{"body":"Barring exceptions, <code>__defineGetter__</code> and <code>__defineSetter__</code> invoke <code>DefinePropertyOrThrow</code>, which invokes <code>[[DefineOwnProperty]]</code>, which in a proxy is handled by the <code>defineProperty</code> method, so I'd say yes.","mimetype":"text/html"}]},"ts":1645678208264,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$A3piURNbFUiV9G08x20D_wxeXkNIKpbdwK6kg1lb3bk"},
{"content":{"body":"Mind you, there are a lot of things that invoke DefinePropertyOrThrow, so it might be a long list if you want to be complete.","msgtype":"m.text","org.matrix.msc1767.text":"Mind you, there are a lot of things that invoke DefinePropertyOrThrow, so it might be a long list if you want to be complete."},"ts":1645678374523,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Jo9ZjLDj8-XT2r8G2f-LmnnndzzNMu5ihjJCx5YByws"},
{"content":{"body":"jmdyck: I guess for now I won’t worry about trying to make sure it’s an exhaustive list, but will instead just accept and merge that change.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: I guess for now I won’t worry about trying to make sure it’s an exhaustive list, but will instead just accept and merge that change.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jmdyck: I guess for now I won’t worry about trying to make sure it’s an exhaustive list, but will instead just accept and merge that change.","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jmdyck:matrix.org\">jmdyck</a>: I guess for now I won’t worry about trying to make sure it’s an exhaustive list, but will instead just accept and merge that change.","mimetype":"text/html"}]},"ts":1645679125198,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$_nqGBudLa7Ag0mVFIh5XzkfTuxsQlbjZV1CoivDRJRs"},
{"content":{"body":"About the decorators proposal: I think there was a requirement introduced that if a field is decorated, its type is not changed -- which resulted in the requirement for the accessor keyword. Does anyone have a reference to that discussion?","msgtype":"m.text","org.matrix.msc1767.text":"About the decorators proposal: I think there was a requirement introduced that if a field is decorated, its type is not changed -- which resulted in the requirement for the accessor keyword. Does anyone have a reference to that discussion?"},"ts":1645700666567,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$8WC25ljGd-ebGBo8qibZvq0F93mVswevhK8K-2J2VrY"},
{"content":{"body":"yulia: by type you mean \"class element kind\"?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: by type you mean &quot;class element kind&quot;?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"yulia: by type you mean \"class element kind\"?","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: by type you mean &quot;class element kind&quot;?","mimetype":"text/html"}]},"ts":1645719723567,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$pFcchMIvzL54KkLXWzgjlh2fsAYdTpGGSZtbQYf5YxY"},
{"content":{"body":"i didn't attend the discussions that hashed this out, but the requirement was introduced in response to V8 feedback","msgtype":"m.text","org.matrix.msc1767.text":"i didn't attend the discussions that hashed this out, but the requirement was introduced in response to V8 feedback"},"ts":1645719754359,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Aez8vnmB_nkEJRL5lIqThDH6LwdJ9gZYjx3OaFEd5QE"},
{"content":{"body":"https://github.com/tc39/proposal-decorators/issues/302, and sathya also had a doc on the previous-previous iteration: https://docs.google.com/document/d/101VnCaQaheEwSXQ_-eSAKpkutnAbDjS9T5TS2gF5zLQ/edit","msgtype":"m.text","org.matrix.msc1767.text":"https://github.com/tc39/proposal-decorators/issues/302, and sathya also had a doc on the previous-previous iteration: https://docs.google.com/document/d/101VnCaQaheEwSXQ_-eSAKpkutnAbDjS9T5TS2gF5zLQ/edit"},"ts":1645719845024,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Z6sdu669o905BSmu25eSssIJxP32aunC-AXJZRToaH0"},
{"content":{"body":"though the latter doc might be slightly out of date","msgtype":"m.text","org.matrix.msc1767.text":"though the latter doc might be slightly out of date"},"ts":1645719856638,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$tuxQK6Z0THpp7D38XjRaO-s3pTFx0E9YZHN1r1ujqVg"},
{"content":{"body":"great, thank you shu ","format":"org.matrix.custom.html","formatted_body":"great, thank you <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"great, thank you shu ","mimetype":"text/plain"},{"body":"great, thank you <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">shu</a>","mimetype":"text/html"}]},"ts":1645722849506,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$IjI3oB3iCymUhRouZ86LV7-GH8BLEJACffoJn05T2ds"}
]