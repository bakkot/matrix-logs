[
{"content":{"body":"any editor guidance on https://github.com/tc39/proposal-temporal/issues/2531 ? is the Set specification type something that would be useful to use more broadly in abstract operations not pertaining to the memory model?","msgtype":"m.text"},"ts":1680199383939,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$LLdeG1gTEo8-ZyGJw5U6_N09bB5g8gbHMDWa7OncXVU"},
{"content":{"body":"(not an editor, but what we're really missing is a Map type in the spec... might make sense to fix this locally for Temporal but I'd love to see more intuitive data structures more broadly, including set, ideally somehow shared by https://infra.spec.whatwg.org if possible)","msgtype":"m.text"},"ts":1680201322149,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jZ1s5xpZSveyvcZnHSOXGdhnu2wbbL-NNqBCPTVvHiY"},
{"content":{"body":"ptomato: I think probably it's simpler to use a List, and explicitly skip over duplicates, possibly with the assistance of a helper like the SetDataHas helper added in the set methods proposal (https://tc39.es/proposal-set-methods/#sec-setdatahas). contra littledan I think it's generally best to minimize the number of \"foundational\" types in the spec - there's less to reason about that way. (e.g., a mathematical set isn't ordered, so when you convert one to a List the resulting order is simply not specified, which you probably don't want even if it doesn't actually end up mattering given how you happen to be consuming that List right now)","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: I think probably it's simpler to use a List, and explicitly skip over duplicates, possibly with the assistance of a helper like the SetDataHas helper added in the set methods proposal (https://tc39.es/proposal-set-methods/#sec-setdatahas). contra <a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a> I think it's generally best to minimize the number of &quot;foundational&quot; types in the spec - there's less to reason about that way. (e.g., a mathematical set isn't ordered, so when you convert one to a List the resulting order is simply not specified, which you probably don't want even if it doesn't actually end up mattering given how you happen to be consuming that List right now)","msgtype":"m.text"},"ts":1680201608714,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8bt0cuQRcYGlAc2zAQIaBUgE6cY3M542yQ8gf4NravI"},
{"content":{"body":"bakkot: Did you see how the WHATWG Infra doc doesn't add lots of foundational types, but defines some in terms of others?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: Did you see how the WHATWG Infra doc doesn't add lots of foundational types, but defines some in terms of others?","msgtype":"m.text"},"ts":1680201650225,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$KAoFhXu260RA0gcMwWbkiv9vgq7fxzmUbUH1mClkpU4"},
{"content":{"body":" * (not an editor, but what we're really missing is a Map type in the spec... might make sense to fix this locally for Temporal but I'd love to see more intuitive data structures more broadly, including set, ideally somehow shared by https://infra.spec.whatwg.org if possible)\n\n[Edit: By \"fix this locally\" I meant, just use a List for now]","m.new_content":{"body":"(not an editor, but what we're really missing is a Map type in the spec... might make sense to fix this locally for Temporal but I'd love to see more intuitive data structures more broadly, including set, ideally somehow shared by https://infra.spec.whatwg.org if possible)\n\n[Edit: By \"fix this locally\" I meant, just use a List for now]","msgtype":"m.text"},"m.relates_to":{"event_id":"$jZ1s5xpZSveyvcZnHSOXGdhnu2wbbL-NNqBCPTVvHiY","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1680201686547,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$3A-tq0phr7znhnMvq9YihgCd46tUFYuzEx-yyn6cbnE"},
{"content":{"body":"littledan: yup and I've also seen e.g. https://github.com/whatwg/infra/pull/451 which points to some of the difficulties with that approach - specifying a whole type, with all of its attendant semantics, is actually quite a bit of work and sometimes has non-obvious implications for consumers","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: yup and I've also seen e.g. https://github.com/whatwg/infra/pull/451 which points to some of the difficulties with that approach - specifying a whole type, with all of its attendant semantics, is actually quite a bit of work and sometimes has non-obvious implications for consumers","msgtype":"m.text"},"ts":1680201749831,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$IjahG9JrfqzD0hioQDu8VUQIB6nXCeb-Gz9cOYDPBOY"},
{"content":{"body":"ptomato: I should say also that in that particular case you don't need SetDataHas given how you're using the list - since it just contains strings, and you don't need ±0 deduplication, you can use the simpler \"If _list_ does not contain _value_, then\" formulation","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: I should say also that in that particular case you don't need SetDataHas given how you're using the list - since it just contains strings, and you don't need ±0 deduplication, you can use the simpler &quot;If <em>list</em> does not contain <em>value</em>, then&quot; formulation","msgtype":"m.text"},"ts":1680201823012,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GWoD3pLrRw4KjLVHSq3O0ogl5f37p2hb4PA4gIy-G6Q"},
{"content":{"body":"thanks for explaining, bakkot ","format":"org.matrix.custom.html","formatted_body":"thanks for explaining, <a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>","msgtype":"m.text"},"ts":1680201851184,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$DKQstJUR-p4psu_6hMvNW3OKcyC6w-H3Yw3WFHGllvs"}
]