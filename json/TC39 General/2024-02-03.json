[
{"content":{"body":"If \"the iterative approach\" means \"do one of those steps at a time\", then that's good. If \"the iterative approach\" means \"spec something new nobody is doing, possibly with a new API nobody ships currently\", then that's bad.","m.mentions":{},"msgtype":"m.text"},"ts":1706941660677,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$GkXB_YayBewpBBaguZYhP3S3o-FF2T8QTlwltQqhHWA"},
{"content":{"body":"the structure i've had in the proposal since 2019 is exactly what everyone's already doing. it does add some new APIs nobody ships as well (whose implementation basically matches what everyone's already doing), but i'm not sure why that would be bad, that's just what almost every proposal is.","m.mentions":{},"msgtype":"m.text"},"ts":1706947388983,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$IEDcHuI_8K_1SFkku84YLf-aDMDR7MxhFJ_IF3dPMw4"},
{"content":{"body":" * the structure i've had in the proposal since 2019 is exactly what everyone's already doing. it does add some new APIs nobody ships as well (whose implementation basically matches what everyone's already doing), but i'm not sure why that would be bad, that's just what almost every proposal is (adding a new thing).","m.mentions":{},"m.new_content":{"body":"the structure i've had in the proposal since 2019 is exactly what everyone's already doing. it does add some new APIs nobody ships as well (whose implementation basically matches what everyone's already doing), but i'm not sure why that would be bad, that's just what almost every proposal is (adding a new thing).","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$IEDcHuI_8K_1SFkku84YLf-aDMDR7MxhFJ_IF3dPMw4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1706947393338,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aUyw8Q4FYatv5VFda-EzilXWU08MfCO3Y3OJVdMG9NY"},
{"content":{"body":"Yeah I agree that it would be good to start this project with finding what JS implementations put in their stack traces and comparing them. Just doing that without the subsequent steps would be an interesting and meaningful report, helping any future stack trace API effort","msgtype":"m.text"},"ts":1706947789993,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$zjC8XNoaLvTyUUOxiiFedraNFP70o_7rf-7hZdlUD2k"},
{"content":{"body":"i think all of the error stringification should be removed from this proposal","m.mentions":{},"msgtype":"m.text"},"ts":1706976898975,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$QVXD7eO2WrnEWtgiC8r-btkRHjeVbuJe0jYMaQNocxM"},
{"content":{"body":"or at *most*, say that `Error.prototype.stack` and `\"string\"` are both the result of some implementer defined AO ","format":"org.matrix.custom.html","formatted_body":"or at <em>most</em>, say that <code>Error.prototype.stack</code> and <code>\"string\"</code> are both the result of some implementer defined AO","m.mentions":{},"msgtype":"m.text"},"ts":1706976953981,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$YiRj_V1YVfXh_2Y59La9OoDsJjqhMAWeBWDshih1rdE"}
]