[
{"content":{"body":"> <@bakkot:matrix.org> this is a very fun writeup of a CVE in chrome which happened as a consequence of a change to TypedArrays in the spec: https://tiszka.com/blog/CVE_2021_21225.html\n\nHow’d you find this write up?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24C8EbgbwDKhUPpOERvY6GlqeWeW0zlcQDAMVHDT2U_qo\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>this is a very fun writeup of a CVE in chrome which happened as a consequence of a change to TypedArrays in the spec: https://tiszka.com/blog/CVE_2021_21225.html</blockquote></mx-reply>How’d you find this write up?","m.relates_to":{"m.in_reply_to":{"event_id":"$C8EbgbwDKhUPpOERvY6GlqeWeW0zlcQDAMVHDT2U_qo"}},"msgtype":"m.text"},"ts":1630037721425,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$TP5MOXzpl5nmD-T2sHN0tnw6Wd9bUZoAXLiZziqSU_w"},
{"content":{"body":"Justin Ridgewell: a friend linked me to https://twitter.com/erikcorry/status/1427755338196033553","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jridgewell:matrix.org\">Justin Ridgewell</a>: a friend linked me to https://twitter.com/erikcorry/status/1427755338196033553","msgtype":"m.text"},"ts":1630040790488,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$wDTL1l-NWyOoKa-7vvXZ0eFqX11YYRDLAgW7mrfczo8"},
{"content":{"body":"no idea how he came across it","msgtype":"m.text"},"ts":1630040795312,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Zqp73T1GPfmgzEJFaGntetDQN-hab5LRZn27CMZHTrs"},
{"content":{"body":"it went around the V8 internal chat when the writeup first came up","msgtype":"m.text"},"ts":1630079481540,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mFLPAiQm743lY8c6yedVIVyMHYGDdgOwrN3MwNjO8UY"},
{"content":{"body":"The decorator spec currently seems to allow whitespace/comments between `@` and its following expression. Is this on purpose? \n\nhttps://arai-a.github.io/ecma262-compare/history/PR/2417/8015d41b2167373c17e1f50dd7da0d257b408680/index.html#prod-Decorator","format":"org.matrix.custom.html","formatted_body":"<p>The decorator spec currently seems to allow whitespace/comments between <code>@</code> and its following expression. Is this on purpose?</p>\n<p>https://arai-a.github.io/ecma262-compare/history/PR/2417/8015d41b2167373c17e1f50dd7da0d257b408680/index.html#prod-Decorator</p>\n","msgtype":"m.text"},"ts":1630087836815,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$TZbWz01Cqn3WR353yhccbnqYXrHAImWpmVZHNh1O2-8"},
{"content":{"body":"TabAtkins and I are exploring a new [contiguous] annotation that would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token.","msgtype":"m.text"},"ts":1630087917349,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$NpVygOgmU0hcMyZjAvBu31xGiQjoXKy5EtVEuChEFfQ"},
{"content":{"body":"It seems like such a [contiguous] annotation perhaps ought to be between `@` and DecoratorMemberExpression/DecoratorCallExpression too.","format":"org.matrix.custom.html","formatted_body":"It seems like such a [contiguous] annotation perhaps ought to be between <code>@</code> and DecoratorMemberExpression/DecoratorCallExpression too.","msgtype":"m.text"},"ts":1630087952204,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2_9XNL-q8GtrDRCjmDmt1pLKGQJoGoXygIo2f6wb1jg"},
{"content":{"body":"It would be consistent with `@init:` too, which is currently a single token.","format":"org.matrix.custom.html","formatted_body":"It would be consistent with <code>@init:</code> too, which is currently a single token.","msgtype":"m.text"},"ts":1630087970165,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$txsRxJnp5fBEGsK1nKvHeuccmF9oQNFGY5rBumv6J5g"},
{"content":{"body":" * It would be consistent with `@init:` too, which is currently a single token and which does not allow discarded tokens between `@` and `init:`.","format":"org.matrix.custom.html","formatted_body":" * It would be consistent with <code>@init:</code> too, which is currently a single token and which does not allow discarded tokens between <code>@</code> and <code>init:</code>.","m.new_content":{"body":"It would be consistent with `@init:` too, which is currently a single token and which does not allow discarded tokens between `@` and `init:`.","format":"org.matrix.custom.html","formatted_body":"It would be consistent with <code>@init:</code> too, which is currently a single token and which does not allow discarded tokens between <code>@</code> and <code>init:</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$txsRxJnp5fBEGsK1nKvHeuccmF9oQNFGY5rBumv6J5g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088008053,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$gzZQQ6wmQrahZeYxZjUn0m8rFbSCEUcCuvYz0MIizLI"},
{"content":{"body":" * It seems like such a [contiguous] annotation perhaps ought to be between `@` and its following expression, too.","format":"org.matrix.custom.html","formatted_body":" * It seems like such a [contiguous] annotation perhaps ought to be between <code>@</code> and its following expression, too.","m.new_content":{"body":"It seems like such a [contiguous] annotation perhaps ought to be between `@` and its following expression, too.","format":"org.matrix.custom.html","formatted_body":"It seems like such a [contiguous] annotation perhaps ought to be between <code>@</code> and its following expression, too.","msgtype":"m.text"},"m.relates_to":{"event_id":"$2_9XNL-q8GtrDRCjmDmt1pLKGQJoGoXygIo2f6wb1jg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088065014,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$CdBHQyXx7exHott9Ro8oD7Z-C4g2LGd207R7msQlOGo"},
{"content":{"body":" * It would also be more consistent with `@init:`, which is currently a single token and which does not allow discarded tokens between `@` and `init:`.","format":"org.matrix.custom.html","formatted_body":" * It would also be more consistent with <code>@init:</code>, which is currently a single token and which does not allow discarded tokens between <code>@</code> and <code>init:</code>.","m.new_content":{"body":"It would also be more consistent with `@init:`, which is currently a single token and which does not allow discarded tokens between `@` and `init:`.","format":"org.matrix.custom.html","formatted_body":"It would also be more consistent with <code>@init:</code>, which is currently a single token and which does not allow discarded tokens between <code>@</code> and <code>init:</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$txsRxJnp5fBEGsK1nKvHeuccmF9oQNFGY5rBumv6J5g","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088075735,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$IURoj-hRS8Bh-_bV-oq8UcjzCltbTGjbtDDIujGHt7E"},
{"content":{"body":" * TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here] would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token.","m.new_content":{"body":"TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here] would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token.","msgtype":"m.text"},"m.relates_to":{"event_id":"$NpVygOgmU0hcMyZjAvBu31xGiQjoXKy5EtVEuChEFfQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088100413,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$78cAenjgyPwzmvJ1GZ8szB655um4BWbVBvziWZ3Kewc"},
{"content":{"body":" * TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here], would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token.","m.new_content":{"body":"TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here], would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token.","msgtype":"m.text"},"m.relates_to":{"event_id":"$NpVygOgmU0hcMyZjAvBu31xGiQjoXKy5EtVEuChEFfQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088104305,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$ak775w4_3DIbEkOr-yyTjcfED2q9gS9CXHFfTURi5b8"},
{"content":{"body":" * TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here], would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token (https://github.com/js-choi/proposal-hack-pipes/issues/13#issuecomment-907380621).","m.new_content":{"body":"TabAtkins and I are exploring a new [contiguous] annotation that, similarly to [no LineTerminator here], would disallow any discarded tokens (whitespace, comments) at its position. We would also use it for the Hack pipe operator’s topic token (https://github.com/js-choi/proposal-hack-pipes/issues/13#issuecomment-907380621).","msgtype":"m.text"},"m.relates_to":{"event_id":"$NpVygOgmU0hcMyZjAvBu31xGiQjoXKy5EtVEuChEFfQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088145514,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$cydB1-58tp17O5yCX9_Vd4Y_AGtKdDDecfuIt_hDbk8"},
{"content":{"body":"Anyways, allowing `@           foo function f () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":"Anyways, allowing <code>@           foo function f () { }</code> seems like it might be an oversight.","msgtype":"m.text"},"ts":1630088184330,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$KpvFFI6VpD0GRqv3c4XX_viuXJSzeGyCKPQhHl-ZWuI"},
{"content":{"body":" * Anyways, allowing `@           foo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":" * Anyways, allowing <code>@           foo class C () { }</code> seems like it might be an oversight.","m.new_content":{"body":"Anyways, allowing `@           foo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":"Anyways, allowing <code>@           foo class C () { }</code> seems like it might be an oversight.","msgtype":"m.text"},"m.relates_to":{"event_id":"$KpvFFI6VpD0GRqv3c4XX_viuXJSzeGyCKPQhHl-ZWuI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088197333,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$QxVORFTRVMO9d-Io9rRK9ZZ7yc483nrS3fixJwoUDm8"},
{"content":{"body":" * Anyways, allowing `@           foo class C () { }` or `@\nfoo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":" * Anyways, allowing <code>@           foo class C () { }</code> or <code>@ foo class C () { }</code> seems like it might be an oversight.","m.new_content":{"body":"Anyways, allowing `@           foo class C () { }` or `@\nfoo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":"Anyways, allowing <code>@           foo class C () { }</code> or <code>@ foo class C () { }</code> seems like it might be an oversight.","msgtype":"m.text"},"m.relates_to":{"event_id":"$KpvFFI6VpD0GRqv3c4XX_viuXJSzeGyCKPQhHl-ZWuI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088258769,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$1wGxvpjfRk4JhnHhwBu0QqW9a3Jmu--dUHEZFZvGN9M"},
{"content":{"body":" * Anyways, allowing `@           foo class C () { }` or `@[line terminator]foo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":" * Anyways, allowing <code>@           foo class C () { }</code> or <code>@[line terminator]foo class C () { }</code> seems like it might be an oversight.","m.new_content":{"body":"Anyways, allowing `@           foo class C () { }` or `@[line terminator]foo class C () { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":"Anyways, allowing <code>@           foo class C () { }</code> or <code>@[line terminator]foo class C () { }</code> seems like it might be an oversight.","msgtype":"m.text"},"m.relates_to":{"event_id":"$KpvFFI6VpD0GRqv3c4XX_viuXJSzeGyCKPQhHl-ZWuI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088265676,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$UgRNEET1lBXIVY_A5utrVf5JzlyYoCL5XyuE6zvzqtw"},
{"content":{"body":"Whether `@init:` is a single token is unclear: I don't think the proposal modifies the lexical grammar to recognize `@` at all, let alone `@init:`.","format":"org.matrix.custom.html","formatted_body":"Whether <code>@init:</code> is a single token is unclear: I don't think the proposal modifies the lexical grammar to recognize <code>@</code> at all, let alone <code>@init:</code>.","msgtype":"m.text"},"ts":1630088389614,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$y2jE7G_vmy9ANuaL2pIsGRD1fL92WFs0VMFPnHwZd9o"},
{"content":{"body":"(e.g., `@` doesn't appear in OtherPunctuator)","format":"org.matrix.custom.html","formatted_body":"(e.g., <code>@</code> doesn't appear in OtherPunctuator)","msgtype":"m.text"},"ts":1630088613065,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$ymBwds_ZWQeJUolHmMZzJ9en4SP4w-_LSJ6OeBc8qsY"},
{"content":{"body":" * Anyways, allowing `@           foo class C { }` or `@[line terminator]foo class C { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":" * Anyways, allowing <code>@           foo class C { }</code> or <code>@[line terminator]foo class C { }</code> seems like it might be an oversight.","m.new_content":{"body":"Anyways, allowing `@           foo class C { }` or `@[line terminator]foo class C { }` seems like it might be an oversight.","format":"org.matrix.custom.html","formatted_body":"Anyways, allowing <code>@           foo class C { }</code> or <code>@[line terminator]foo class C { }</code> seems like it might be an oversight.","msgtype":"m.text"},"m.relates_to":{"event_id":"$KpvFFI6VpD0GRqv3c4XX_viuXJSzeGyCKPQhHl-ZWuI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1630088755157,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$pbCDLg4oLpp1DfOc4zaKPV_TB0a8p0H-KROeZPq88_0"}
]