[
{"content":{"body":"I’m working on [#3581](https://github.com/tc39/ecma262/pull/3581) (Array.fromAsync).\n I’m figuring out the last two esmeta errors in [this job](https://github.com/tc39/ecma262/actions/runs/14781083646/job/41499977134?pr=3581). \n\nIt looks like Array.from’s iteration machinery has changed a lot since I last checked. Now Array.from uses a new IteratorStepValue operation. \n\nThere’s no analogous AsyncIteratorStepValue operation yet, is there?","format":"org.matrix.custom.html","formatted_body":"<p>I’m working on <a href=\"https://github.com/tc39/ecma262/pull/3581\">#3581</a> (Array.fromAsync).<br>I’m figuring out the last two esmeta errors in <a href=\"https://github.com/tc39/ecma262/actions/runs/14781083646/job/41499977134?pr=3581\">this job</a>.</p>\n<p>It looks like Array.from’s iteration machinery has changed a lot since I last checked. Now Array.from uses a new IteratorStepValue operation.</p>\n<p>There’s no analogous AsyncIteratorStepValue operation yet, is there?</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1746125846768,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$o_CNe7N0v5lKJPftWD7ncKZCIS4vowwf_kQJWpg6gNU"},
{"content":{"body":"Correct","m.mentions":{},"msgtype":"m.text"},"ts":1746126229924,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1V0Ros94puI25IqIhr2nLFdDvguoakzknc8iUSfNrb8"},
{"content":{"body":"Would it be worth for the Array.fromAsync pull request to define new AsyncIteratorStepValue, AsyncIteratorStep, and AsyncIteratorNext operations?","m.mentions":{},"msgtype":"m.text"},"ts":1746126235128,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$6b4GmNQi2HKhz-A0x_COMM_HGtctMMXh7lMmRBLm3Hg"},
{"content":{"body":"No, probably not until there's more stuff which uses it","m.mentions":{},"msgtype":"m.text"},"ts":1746126247239,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FsSaJCtfi8dJICHASH402bSkVgcpj5T8PFFr4DEIF1w"},
{"content":{"body":"* Would it be worth for the Array.fromAsync pull request to define new AsyncIteratorStepValue, AsyncIteratorStep, and AsyncIteratorNext operations, to match Array.from’s algorithm?","m.mentions":{},"m.new_content":{"body":"Would it be worth for the Array.fromAsync pull request to define new AsyncIteratorStepValue, AsyncIteratorStep, and AsyncIteratorNext operations, to match Array.from’s algorithm?","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$6b4GmNQi2HKhz-A0x_COMM_HGtctMMXh7lMmRBLm3Hg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1746126249220,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$xEHVh98fI-_vcU0nCGILPl9dXuvohg5Ni8OaTTLgIAM"},
{"content":{"body":"You can use the underlying operations, though","m.mentions":{},"msgtype":"m.text"},"ts":1746126353805,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BCTT6f8eeBcnFg-_NxFCUksN3X1QoZb-BOK-6kTQNtg"},
{"content":{"body":"IteratorNext works fine on async iterators I think","m.mentions":{},"msgtype":"m.text"},"ts":1746126392107,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CvXS8WuNsP5D-xCPmhJMjqpWyOpRPKn4333P7o0U9rA"},
{"content":{"body":"and then after awaiting the result you can use IteratorComplete and IteratorValue","m.mentions":{},"msgtype":"m.text"},"ts":1746126417067,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$v774Ul0ZjgxCjCwDi8QD9WHKtt9X6DHrSFm-mJHaLrc"},
{"content":{"body":"which I guess is pretty much what you're doing already, except manually calling .next instead of using IteratorNext, which is fine","m.mentions":{},"msgtype":"m.text"},"ts":1746126503861,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$gOXjIH8Zexi6-IOUfn_HUXA8-1zm8ygyN-hoTu_jtlY"},
{"content":{"body":"don't worry too much about esmeta errors; if they don't look like actual errors you can ignore them","m.mentions":{},"msgtype":"m.text"},"ts":1746126527583,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$CNqUgCwVdUQbIOC8gD0PMpSKpdqFOTzT92kLhbI-r8E"},
{"content":{"body":"it isn't capable of handling everything in the spec and there's a file we can use to mark things as expected errors if we decide it's an esmeta bug","m.mentions":{},"msgtype":"m.text"},"ts":1746126564650,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jhtE-yyiyGjmOcvNVWBoGwluP3PTg7JG28zznmVa_r8"},
{"content":{"body":"in this specific case, yes, it looks like it's because of not recognizing the new IfAbruptCloseAsyncIterator macro, which makes sense; macros are hard to typecheck and we don't have any explicit marking for them","m.mentions":{},"msgtype":"m.text"},"ts":1746126628991,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Z64O8MP0dReefS-W5k7m9OaRD810ZNyneKT-ZEgjhZI"},
{"content":{"body":"Thank you very much for your great help.","msgtype":"m.text"},"ts":1746127747148,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$qMmCUslP-QC18QEqj7b7iHyZfUEulbqoEWY9_YPxVyY"}
]