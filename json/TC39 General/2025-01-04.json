[
{"content":{"body":"Is there anywhere the spells out the choice of when to use the term \"instantiate\" vs. \"construct\" vs. \"create\" vs. \"make\". From what I can tell they follow that \"call order\", with make being the lowest level \"allocate\", but its not clear to me when a construct should be an instantiate","m.mentions":{},"msgtype":"m.text"},"ts":1735954854502,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$fQRAMv_pY69ohNm3rEQsZFjGqvnUJV7xmFhjsURjnU8"},
{"content":{"body":"You mean in operation names?","m.mentions":{},"msgtype":"m.text"},"ts":1735955100083,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$E9t3jaIxQIJu7FfFTisLuuaTurGMM0JVabZ_QTd-iII"},
{"content":{"body":"Right","m.mentions":{},"msgtype":"m.text"},"ts":1735955202247,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$QrvNbSpUOLAB0GQGU5yQ9MJmd9z8QVZj6_EEfegLX2k"},
{"content":{"body":"I don't think so.","m.mentions":{},"msgtype":"m.text"},"ts":1735955276095,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$Za9rDsL6_LO75RmZngj4eP4nvZPSsbrg1xLZlTkdEMM"},
{"content":{"body":"InstantiateOrdinaryFunction calls CreateOrdinaryFunction for example","m.mentions":{},"msgtype":"m.text"},"ts":1735955289381,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$K2xr4ZRdpFTjBpO83BmiUOJ0fbMBHdjgQGbysoMHqNo"},
{"content":{"body":"errr OrdinaryFunctionCreate*","m.mentions":{},"msgtype":"m.text"},"ts":1735955311886,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$JCNx0z2MFI4x0A5XLL2kKmHPOFZjRzh6wiWDTpsZJ_Q"},
{"content":{"body":"(There's also that weird Verb prefix/suffix tension, the Construct and Create like to be suffixes, Make and Instantiate like to be prefixes)","m.mentions":{},"msgtype":"m.text"},"ts":1735955360454,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$jEI9KkDt77__Z-CaMf59PZEAQqpHw2cj4Djkq1hMuOE"},
{"content":{"body":"InstantiateFoo tends to operate on Parse Nodes (it's usually an SDO), whereas CreateFoo (or FooCreate) is usually building a specific kind of object.","m.mentions":{},"msgtype":"m.text"},"ts":1735955789996,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$oAcKw1etmvt9uLqc71trwD7AGGzlCbYcHzzlgvMejo8"},
{"content":{"body":"Which is why you're likely to see `Instantiate` call `Create` but not vice versa.","format":"org.matrix.custom.html","formatted_body":"Which is why you're likely to see <code>Instantiate</code> call <code>Create</code> but not vice versa.","m.mentions":{},"msgtype":"m.text"},"ts":1735955845260,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$OQp606e7PSVyqMj0r79iFMB-LaUCWkPWKodMRsci1dI"},
{"content":{"body":"`Construct` in an op name is normally closely associated with `[[Construct]]` semantics.","format":"org.matrix.custom.html","formatted_body":"<code>Construct</code> in an op name is normally closely associated with <code>[[Construct]]</code> semantics.","m.mentions":{},"msgtype":"m.text"},"ts":1735956076209,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$IjfDMpIS5rPucz6GujRRJmEpFcGvik74eu-h6BKNkGo"},
{"content":{"body":"`Make` is kind of a wild card.","format":"org.matrix.custom.html","formatted_body":"<code>Make</code> is kind of a wild card.","m.mentions":{},"msgtype":"m.text"},"ts":1735956257093,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$m7-8p90tDCtaw5DkdQPJ25H3_w7JNL_AcK1r9d8o4Qc"},
{"content":{"body":"gotcha","m.mentions":{},"msgtype":"m.text"},"ts":1735956642215,"senderName":"Francisco Tolmasky","senderId":"@tolmasky:matrix.org","id":"$3mT8Bq4EyD1LysBktbLhurIfPOetSsgVL3fj7ue_7ZE"}
]