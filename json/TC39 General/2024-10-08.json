[
{"content":{"body":"I noticed TC39 is in Tokyo, feel free to ping me if any one of you come through Kyoto, or want info about the area!","m.mentions":{},"msgtype":"m.text"},"ts":1728355053719,"senderName":"sachag","senderId":"@sachag:matrix.org","id":"$zPYXGYa8HEATOnMN8LL2MhOQsv04nGOezC03zBBq8cA"},
{"content":{"body":"This is probably obvious, but in the decorator proposal if I have ```class A { @f a = 1; }``` it's not possible to access the initial value 1 without creating an instance? Is that more a reflection feature for later? Was mulling over how to turn a class with annotations into a JSON object (including their initial/default values) without creating an instance. I'm reminded of a Java project I saw before that extracted defaults to then create JSON structures that were fed to a UI. I could do class ```A { @f(1) a = 1; }```. addInitializer runs for the instance. Something like an addDefinitionInitializer would maybe be what I'd expect or is that too complex if it's like a function call?","format":"org.matrix.custom.html","formatted_body":"This is probably obvious, but in the decorator proposal if I have <code>class A { @f a = 1; }</code> it's not possible to access the initial value 1 without creating an instance? Is that more a reflection feature for later? Was mulling over how to turn a class with annotations into a JSON object (including their initial/default values) without creating an instance. I'm reminded of a Java project I saw before that extracted defaults to then create JSON structures that were fed to a UI. I could do class <code>A { @f(1) a = 1; }</code>. addInitializer runs for the instance. Something like an addDefinitionInitializer would maybe be what I'd expect or is that too complex if it's like a function call?","m.mentions":{},"msgtype":"m.text"},"ts":1728413742810,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$ABsjPu72ykaarUSxSEi0CQYQfbY4yoE_E04lwnmjnE4"}
]