[
{"content":{"body":"Regarding Array.from: In https://tc39.es/ecma262/#sec-array.from, why is usingIterator created? Wouldn’t GetIterator(items, sync) do the job of checking for a sync iterator and throwing TypeError if it can’t? (What is even the purpose of the third parameter of GetIterator?)","msgtype":"m.text"},"ts":1631673513989,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$vajc2dviifQTZ1AXQufdVOau0ZHSTYjSMZT_EhdfDAg"},
{"content":{"body":"Is it to maintain a specific order of attempting to construct C, then calling GetIterator?","msgtype":"m.text"},"ts":1631673609213,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$oH8JdAO4NahTUIVFaIYIpBxlpqkX6Fr4Aer58HyQZvY"},
{"content":{"body":" * Regarding Array.from: In https://tc39.es/ecma262/#sec-array.from, why is usingIterator created in step 4? Wouldn’t GetIterator(items, sync) in step 5c do the job of checking for a sync iterator and throwing TypeError if it can’t? (What is even the purpose of the third parameter of GetIterator?)","m.new_content":{"body":"Regarding Array.from: In https://tc39.es/ecma262/#sec-array.from, why is usingIterator created in step 4? Wouldn’t GetIterator(items, sync) in step 5c do the job of checking for a sync iterator and throwing TypeError if it can’t? (What is even the purpose of the third parameter of GetIterator?)","msgtype":"m.text"},"m.relates_to":{"event_id":"$vajc2dviifQTZ1AXQufdVOau0ZHSTYjSMZT_EhdfDAg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631673636096,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$fegBTGIt3mO3BrauFDtlFAP_dvJlGvzVwJaAHWnnchg"},
{"content":{"body":"GetIterator unconditionally attempts to call the `Symbol.iterator` property, even if it's undefined, whereas `Array.from` needs to not enter step 5 at all if the `Symbol.iterator` property is `undefined`","format":"org.matrix.custom.html","formatted_body":"GetIterator unconditionally attempts to call the <code>Symbol.iterator</code> property, even if it's undefined, whereas <code>Array.from</code> needs to not enter step 5 at all if the <code>Symbol.iterator</code> property is <code>undefined</code>","msgtype":"m.text"},"ts":1631673801746,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_iE2S9ArZfT_KquO7EejcqJRSQr2-n8tB7U5soaWrwo"},
{"content":{"body":"the purpose of the third parameter of GetIterator is in case you have already done the property lookup of `Symbol.iterator`, to avoid doing the property lookup again","format":"org.matrix.custom.html","formatted_body":"the purpose of the third parameter of GetIterator is in case you have already done the property lookup of <code>Symbol.iterator</code>, to avoid doing the property lookup again","msgtype":"m.text"},"ts":1631673839396,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$U_Ai7fMa38xuE2oC4CT_7Yx5eIupo6vyCEOYrneGnaw"},
{"content":{"body":"Right, and I suppose this is observable by the user, because they can observe whether Construct(_C_) is called before Symbol.iterator.","format":"org.matrix.custom.html","formatted_body":"Right, and I suppose this is observable by the user, because they can observe whether Construct(<em>C</em>) is called before Symbol.iterator.","msgtype":"m.text"},"ts":1631673856293,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$lFIEW_j_n9ElRVPhK697i4lmZ20NFu3Lo1OOuMhvFxI"},
{"content":{"body":"It's not just about order; it's about only accessing the property once","msgtype":"m.text"},"ts":1631673887476,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$1DUyGcTQ6H-pSIaAgi5l7oNR-pFvm93ncExSxW9pg8A"}
]