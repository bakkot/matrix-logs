[
{"content":{"body":"this is a very fun writeup of a CVE in chrome which happened as a consequence of a change to TypedArrays in the spec: https://tiszka.com/blog/CVE_2021_21225.html","msgtype":"m.text"},"ts":1629783306991,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$C8EbgbwDKhUPpOERvY6GlqeWeW0zlcQDAMVHDT2U_qo"},
{"content":{"body":"also serves as a good concrete example of Symbol.species causing bad things to happen","msgtype":"m.text"},"ts":1629783385248,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$ZpAjmvGPomb0rLNwgwrrY2uX3ZY0A4OOjrXIYJ9ZlAk"},
{"content":{"body":"yes, that was a \"i'm in this picture and i don't like it\" situation","msgtype":"m.text"},"ts":1629815155420,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$VccwQYqflFUBnkRc0txJ9raVkEGUcjAuC7E7BoE4omo"},
{"content":{"body":"Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (`eval`, `with`, `switch`) in new syntax? That is, is it a committee invariant that those three keywords not be used in any new syntax going forward?","format":"org.matrix.custom.html","formatted_body":"Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (<code>eval</code>, <code>with</code>, <code>switch</code>) in new syntax? That is, is it a committee invariant that those three keywords not be used in any new syntax going forward?","msgtype":"m.text"},"ts":1629817972796,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$mLJMdtNyHAVO-9NnXzkrrRBNQH_E_PcskikzJfkjNA8"},
{"content":{"body":"well, eval isn't a keyword","msgtype":"m.text"},"ts":1629819752660,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$0-WSLZIHK6BjBdpVUhbF7GgiXuOk6MF3rHCtbqyEMeg"},
{"content":{"body":"and i've seen ideas float around that want to co-opt `with` for more useful purposes, it's a nice keyword","format":"org.matrix.custom.html","formatted_body":"and i've seen ideas float around that want to co-opt <code>with</code> for more useful purposes, it's a nice keyword","msgtype":"m.text"},"ts":1629819778174,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$ryUn7hZ2_gCDQjdM52IR5V12H4lHnzdjOie8x3g7Fxg"},
{"content":{"body":"so it's not an invariant from my perspective","msgtype":"m.text"},"ts":1629819794956,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$N7SJNIb1oYjiNj-pPJBQgHZwxCkemcn1IaAwsSnekV0"},
{"content":{"body":"Yeah, I mean Bad Words in general, I guess, heh. An example for `eval`: https://github.com/tc39/proposal-do-expressions/issues/53#issuecomment-771789167","format":"org.matrix.custom.html","formatted_body":"Yeah, I mean Bad Words in general, I guess, heh. An example for <code>eval</code>: https://github.com/tc39/proposal-do-expressions/issues/53#issuecomment-771789167","msgtype":"m.text"},"ts":1629821046481,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$WZ841HaeDhMzoMP7v8KJIqXsr9oOhj58ES7MzhDznoc"},
{"content":{"body":"I suppose I haven’t seen anything about this with `with` yet; I had assumed it was in a similar situation to `switch` etc. ","format":"org.matrix.custom.html","formatted_body":"I suppose I haven’t seen anything about this with <code>with</code> yet; I had assumed it was in a similar situation to <code>switch</code> etc.","msgtype":"m.text"},"ts":1629821084338,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$lbD8G-56L9L3WxS2jO1LnBzckeT_WRp_rZXcu1i_XJ0"},
{"content":{"body":"* I suppose I haven’t seen anything about this with `with` yet; I had assumed it was in a similar situation to `switch` etc. I don’t remember seeing any proposals actually using `with`.","format":"org.matrix.custom.html","formatted_body":"* I suppose I haven’t seen anything about this with <code>with</code> yet; I had assumed it was in a similar situation to <code>switch</code> etc. I don’t remember seeing any proposals actually using <code>with</code>.","m.new_content":{"body":"I suppose I haven’t seen anything about this with `with` yet; I had assumed it was in a similar situation to `switch` etc. I don’t remember seeing any proposals actually using `with`.","format":"org.matrix.custom.html","formatted_body":"I suppose I haven’t seen anything about this with <code>with</code> yet; I had assumed it was in a similar situation to <code>switch</code> etc. I don’t remember seeing any proposals actually using <code>with</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$lbD8G-56L9L3WxS2jO1LnBzckeT_WRp_rZXcu1i_XJ0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1629821199863,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$muTSLI6fAD2l04xxniMJPdHCQrGCKMZ5azwlOrC1CxI"},
{"content":{"body":"* Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (`eval`, `with`, `switch`) in new syntax? That is, is it a committee invariant that those three words not be used in any new syntax going forward?","format":"org.matrix.custom.html","formatted_body":"* Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (<code>eval</code>, <code>with</code>, <code>switch</code>) in new syntax? That is, is it a committee invariant that those three words not be used in any new syntax going forward?","m.new_content":{"body":"Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (`eval`, `with`, `switch`) in new syntax? That is, is it a committee invariant that those three words not be used in any new syntax going forward?","format":"org.matrix.custom.html","formatted_body":"Looking at https://github.com/tc39/proposal-pattern-matching/issues/168#issuecomment-814216217, I’m wondering: Is it a goal to forever avoid the Bad Keywords (<code>eval</code>, <code>with</code>, <code>switch</code>) in new syntax? That is, is it a committee invariant that those three words not be used in any new syntax going forward?","msgtype":"m.text"},"m.relates_to":{"event_id":"$mLJMdtNyHAVO-9NnXzkrrRBNQH_E_PcskikzJfkjNA8","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1629821685075,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$uACxWxnJbAQcHBfb1wG5qF3iTLhagZ28ZIoAVYoifDM"},
{"content":{"body":"If `with` is going to be treated differently from `switch` (in that new syntax may use `with` but not `switch`), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for `with` and discouraged in the future for `switch` whenever `match` is standardized).\n\nI suppose that `switch` and `match` have somewhat similar purposes, while no future syntax is going to have a similar purpose to `with`…so there might be less risk of confusion between `with`’s current dynamic binding and any future syntax that reuses `with`, compared to `switch` and `match`.","format":"org.matrix.custom.html","formatted_body":"<p>If <code>with</code> is going to be treated differently from <code>switch</code> (in that new syntax may use <code>with</code> but not <code>switch</code>), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for <code>with</code> and discouraged in the future for <code>switch</code> whenever <code>match</code> is standardized).</p>\n<p>I suppose that <code>switch</code> and <code>match</code> have somewhat similar purposes, while no future syntax is going to have a similar purpose to <code>with</code>…so there might be less risk of confusion between <code>with</code>’s current dynamic binding and any future syntax that reuses <code>with</code>, compared to <code>switch</code> and <code>match</code>.</p>","msgtype":"m.text"},"ts":1629822219488,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$cbJxy_QCnWtqFwcLcuYR23Q3JbqOOJ7oKqfTHKU5pUE"},
{"content":{"body":"* If `with` is going to be treated differently from `switch` (in that new syntax may use `with` but not `switch`), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for `with` and discouraged in the future for `switch` whenever `match` is standardized).\n\nI suppose that `switch` and `match` have somewhat similar purposes, while no future syntax is going to have a similar purpose to `with`…so there might be less risk of confusion between `with`’s current dynamic binding and any future syntax that reuses `with` for a completely different purpose, compared to `switch` and `match`.","format":"org.matrix.custom.html","formatted_body":"* <p>If <code>with</code> is going to be treated differently from <code>switch</code> (in that new syntax may use <code>with</code> but not <code>switch</code>), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for <code>with</code> and discouraged in the future for <code>switch</code> whenever <code>match</code> is standardized).</p>\n<p>I suppose that <code>switch</code> and <code>match</code> have somewhat similar purposes, while no future syntax is going to have a similar purpose to <code>with</code>…so there might be less risk of confusion between <code>with</code>’s current dynamic binding and any future syntax that reuses <code>with</code> for a completely different purpose, compared to <code>switch</code> and <code>match</code>.</p>","m.new_content":{"body":"If `with` is going to be treated differently from `switch` (in that new syntax may use `with` but not `switch`), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for `with` and discouraged in the future for `switch` whenever `match` is standardized).\n\nI suppose that `switch` and `match` have somewhat similar purposes, while no future syntax is going to have a similar purpose to `with`…so there might be less risk of confusion between `with`’s current dynamic binding and any future syntax that reuses `with` for a completely different purpose, compared to `switch` and `match`.","format":"org.matrix.custom.html","formatted_body":"<p>If <code>with</code> is going to be treated differently from <code>switch</code> (in that new syntax may use <code>with</code> but not <code>switch</code>), it might be good to make explicit how their situations are different. After all, they’re similarly discouraged (already discouraged for <code>with</code> and discouraged in the future for <code>switch</code> whenever <code>match</code> is standardized).</p>\n<p>I suppose that <code>switch</code> and <code>match</code> have somewhat similar purposes, while no future syntax is going to have a similar purpose to <code>with</code>…so there might be less risk of confusion between <code>with</code>’s current dynamic binding and any future syntax that reuses <code>with</code> for a completely different purpose, compared to <code>switch</code> and <code>match</code>.</p>","msgtype":"m.text"},"m.relates_to":{"event_id":"$cbJxy_QCnWtqFwcLcuYR23Q3JbqOOJ7oKqfTHKU5pUE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1629822288464,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$GAajS5jHwY372ffTH2wNA6TaGrFi9O5R4VZy_bo7u_o"}
]