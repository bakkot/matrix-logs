[
{"content":{"body":"Hmm. I though about it a bit and making a transformer for decorated hoisted functions sounds a bit tricky. The transformer might need to put all the decorating code inside a hoisted function for it to work the same, and then might have to capture `arguments` and `this` for use in the decorated function body.","format":"org.matrix.custom.html","formatted_body":"Hmm. I though about it a bit and making a transformer for decorated hoisted functions sounds a bit tricky. The transformer might need to put all the decorating code inside a hoisted function for it to work the same, and then might have to capture <code>arguments</code> and <code>this</code> for use in the decorated function body.","msgtype":"m.text"},"ts":1634172551507,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$2VvRfFq55Px8mTy6TmuUqmRMmZyNlCyDcvO3ob6KvmE"},
{"content":{"body":"my suggestion is to turn `@foo function bar() {}` into `var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });`","format":"org.matrix.custom.html","formatted_body":"my suggestion is to turn <code>@foo function bar() {}</code> into <code>var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });</code>","msgtype":"m.text"},"ts":1634180437437,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$03xDfJuym2jfoFpVaSdoj73Koq6g6_2-6RdImZXCU-I"},
{"content":{"body":"annex b.3.3 aside","msgtype":"m.text"},"ts":1634180448806,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$iChZI9Lb9sf-N7gOXKwS2TDS0frDfagZSc5BxUr-sKE"},
{"content":{"body":" * my suggestion is to turn `@foo function bar() {}` into `var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });`","format":"org.matrix.custom.html","formatted_body":" * my suggestion is to turn <code>@foo function bar() {}</code> into <code>var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });</code>","m.new_content":{"body":"my suggestion is to turn `@foo function bar() {}` into `var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });`","format":"org.matrix.custom.html","formatted_body":"my suggestion is to turn <code>@foo function bar() {}</code> into <code>var bar = foo(function bar() {}, { kind: 'function', name: 'bar' });</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$03xDfJuym2jfoFpVaSdoj73Koq6g6_2-6RdImZXCU-I","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1634180574273,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$ZH7FAT5LOZXr38t138h66BCBV9CgYrtE0L9Zh45aBps"},
{"content":{"body":"Many spec algorithms seem to call a `Completion(...)` abstract operation (for example in https://tc39.es/ecma262/#sec-iteratorclose), but I cannot find where it is defined. Is it a type cast to convert a record into a completion record?","format":"org.matrix.custom.html","formatted_body":"Many spec algorithms seem to call a <code>Completion(...)</code> abstract operation (for example in https://tc39.es/ecma262/#sec-iteratorclose), but I cannot find where it is defined. Is it a type cast to convert a record into a completion record?","msgtype":"m.text"},"ts":1634204725628,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$XwJX--NutSUfUwBuGfDG2t024TULb9aK6wbvYF8b0M0"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Many spec algorithms seem to call a `Completion(...)` abstract operation (for example in https://tc39.es/ecma262/#sec-iteratorclose), but I cannot find where it is defined. Is it a type cast to convert a record into a completion record?\n\nOh it's defined at https://tc39.es/ecma262/#sec-implicit-completion-values - It looks like there is an auto-linking issue that links usages of the `Completion` AO to the `Completion` record definition rather than to the AO definition","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$XwJX--NutSUfUwBuGfDG2t024TULb9aK6wbvYF8b0M0?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Many spec algorithms seem to call a <code>Completion(...)</code> abstract operation (for example in https://tc39.es/ecma262/#sec-iteratorclose), but I cannot find where it is defined. Is it a type cast to convert a record into a completion record?</blockquote></mx-reply>Oh it's defined at https://tc39.es/ecma262/#sec-implicit-completion-values - It looks like there is an auto-linking issue that links usages of the <code>Completion</code> AO to the <code>Completion</code> record definition rather than to the AO definition","m.relates_to":{"m.in_reply_to":{"event_id":"$XwJX--NutSUfUwBuGfDG2t024TULb9aK6wbvYF8b0M0"}},"msgtype":"m.text"},"ts":1634205804387,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$MpXuN9mzw9vV1hX5IYj5L7UqMA3TdnxXSEZnN7wOc_4"},
{"content":{"body":"nicolo-ribaudo: linking should be fixed in this PR: https://github.com/tc39/ecma262/pull/2547/files#diff-181371b08d71216599b0acccbaabd03c306da6de142ea6275c2135810999805aR832","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: linking should be fixed in this PR: https://github.com/tc39/ecma262/pull/2547/files#diff-181371b08d71216599b0acccbaabd03c306da6de142ea6275c2135810999805aR832","msgtype":"m.text"},"ts":1634229134240,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$yJVy9vpJ1vsBAij1Sm-I6v3BCN_fTtlzjOeEeocuP-w"},
{"content":{"body":"ooh, that sounds like a great PR","msgtype":"m.text"},"ts":1634232810465,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$MeBscHjuk17FxRaHL3yFDpsfABShFR3XCHYrwq1gYIE"},
{"content":{"body":"annevk: unfortunately it's a TON of work, so it'll be at least another few weeks before it's done","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@annevk:mozilla.org\">annevk</a>: unfortunately it's a TON of work, so it'll be at least another few weeks before it's done","msgtype":"m.text"},"ts":1634233091844,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$67Mjn6h4hF1QiSxJdJysmABFnNbEElfWeerZEMdXQs0"},
{"content":{"body":"I can only imagine","msgtype":"m.text"},"ts":1634233744306,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$jp1u685Jlrq34v7YZidXQXfqomhnCcKfaPATRMSQG10"},
{"content":{"body":"Might have some downstream implications too, but hopefully not too many","msgtype":"m.text"},"ts":1634233793925,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$IP0xwNY44tDNffyrSRazlRpbKrzgWRwfpWwlpetIK3Q"},
{"content":{"body":"probably a lot of stray `!`s in HTML to remove, mainly","format":"org.matrix.custom.html","formatted_body":"probably a lot of stray <code>!</code>s in HTML to remove, mainly","msgtype":"m.text"},"ts":1634233928457,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$qZymTwWoX_yZUFhg5Umv-Pf8fWA8c91tdP4Rnekbnck"},
{"content":{"body":"specifically, I think other specs don't tend to make use of the implicitness of completion records much (or at all?), so the relevant change is just that algorithms which were guaranteed to succeed no longer return completion records and hence no longer need to be unwrapped with `!`","format":"org.matrix.custom.html","formatted_body":"specifically, I think other specs don't tend to make use of the implicitness of completion records much (or at all?), so the relevant change is just that algorithms which were guaranteed to succeed no longer return completion records and hence no longer need to be unwrapped with <code>!</code>","msgtype":"m.text"},"ts":1634234035856,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$d7GEW1EB4e38LvcNr25CiaT_jNnuvsl59EiPPWUCGro"},
{"content":{"body":"bakkot: we do create a Completion record somewhere","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: we do create a Completion record somewhere","msgtype":"m.text"},"ts":1634234895966,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$4YmdGcMPm8hMfTm0hDKk1LKe2X1tL3wxmGMSdj0mxnY"},
{"content":{"body":"Removing ! sounds amazing, has caused quite a bit of confusion over the years","msgtype":"m.text"},"ts":1634234939584,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$UEMTmCQwxYgQwx33QJQ5COczZua6fQZrRXBdVHTSIvw"},
{"content":{"body":"Feels like every couple months there's someone asking why it's negating something","msgtype":"m.text"},"ts":1634234962672,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$TRZmireRh4Nnino07CX4kMvc0eAKOGzbck3C0vhrsR8"}
]