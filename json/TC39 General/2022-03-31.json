[
{"content":{"body":"https://1drv.ms/b/s!AltPy8G9ZDJdq3JSrN6Dh1XYVwpW","msgtype":"m.text","org.matrix.msc1767.text":"https://1drv.ms/b/s!AltPy8G9ZDJdq3JSrN6Dh1XYVwpW"},"ts":1648750814267,"senderName":"danielrosenwasser","senderId":"@danielrosenwasser:matrix.org","id":"$tpTKc0Rh8JLZwORKE3aP9bCRSaL0jcYuUPqQNVsDsAw"},
{"content":{"body":"jschoi: you could start by proposing a SameValueSet and SameValueMap, though I doubt it would be too popular","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: you could start by proposing a SameValueSet and SameValueMap, though I doubt it would be too popular","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"jschoi: you could start by proposing a SameValueSet and SameValueMap, though I doubt it would be too popular","mimetype":"text/plain"},{"body":"<a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a>: you could start by proposing a SameValueSet and SameValueMap, though I doubt it would be too popular","mimetype":"text/html"}]},"ts":1648764536014,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$73-EWV9xqAKeOQ35hDzz81Fy_x8EiOECcufk24oCYuA"},
{"content":{"body":"I continue to believe that these data structures should've used SameValue, and this is a perfect example of why","msgtype":"m.text","org.matrix.msc1767.text":"I continue to believe that these data structures should've used SameValue, and this is a perfect example of why"},"ts":1648764599882,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Gv095vnObXMkIzlKkw3ySQM9ETV5l7Abf9hvnZBGILo"},
{"content":{"body":"you could easily have the current behaviour by replacing `-0` with `0` before doing any map operations, but you can't easily go the other way around","format":"org.matrix.custom.html","formatted_body":"you could easily have the current behaviour by replacing <code>-0</code> with <code>0</code> before doing any map operations, but you can't easily go the other way around","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"you could easily have the current behaviour by replacing `-0` with `0` before doing any map operations, but you can't easily go the other way around","mimetype":"text/plain"},{"body":"you could easily have the current behaviour by replacing <code>-0</code> with <code>0</code> before doing any map operations, but you can't easily go the other way around","mimetype":"text/html"}]},"ts":1648764648961,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jbFQ7O3xb0IyiL9gSSy7A01acTJXo8VnRC52cq6W_v8"},
{"content":{"body":"We you can easily replace with a unique symbol","msgtype":"m.text","org.matrix.msc1767.text":"We you can easily replace with a unique symbol"},"ts":1648764684642,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$EOJ1FQ_k2zzij62gaI87kmQiAv4y2TRrRh9PdZhGRyY"},
{"content":{"body":"That's what I've done when I needed to support `-0` in Map/Set","format":"org.matrix.custom.html","formatted_body":"That's what I've done when I needed to support <code>-0</code> in Map/Set","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"That's what I've done when I needed to support `-0` in Map/Set","mimetype":"text/plain"},{"body":"That's what I've done when I needed to support <code>-0</code> in Map/Set","mimetype":"text/html"}]},"ts":1648764703685,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$57QjRwCVXDSw9yr2Anqt8J5lHhHW71M9g7Ai2be6I8w"},
{"content":{"body":"as long as that symbol doesn't escape, which you can't guarantee when the map is user-provided","msgtype":"m.text","org.matrix.msc1767.text":"as long as that symbol doesn't escape, which you can't guarantee when the map is user-provided"},"ts":1648764718690,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$ndIByD4g4jX476eOkjeRNEMFLvjLroS7WeBJH93zDHs"},
{"content":{"body":"if the map is user provided, sure","msgtype":"m.text","org.matrix.msc1767.text":"if the map is user provided, sure"},"ts":1648764731916,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$IoBHqNQhsfYD6urkLcpyxUT6j9wRr-cmdTB9QumLp3c"},
{"content":{"body":"I'm talking in the case of wrapping a map","msgtype":"m.text","org.matrix.msc1767.text":"I'm talking in the case of wrapping a map"},"ts":1648764751754,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$kE5S516-SkUstnl9EmTG6r9x5x__umLAQLgIslC-v_Q"},
{"content":{"body":"also jschoi has use cases in mind like the user priming the cache, which again wouldn't work with a special replacement symbol","format":"org.matrix.custom.html","formatted_body":"also <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a> has use cases in mind like the user priming the cache, which again wouldn't work with a special replacement symbol","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"also jschoi has use cases in mind like the user priming the cache, which again wouldn't work with a special replacement symbol","mimetype":"text/plain"},{"body":"also <a href=\"https://matrix.to/#/@jschoi:matrix.org\">jschoi</a> has use cases in mind like the user priming the cache, which again wouldn't work with a special replacement symbol","mimetype":"text/html"}]},"ts":1648764762994,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$e_wScxtZG_190BY4fXL5upNRyQ99PCDY_SrJ-V5pQDQ"},
{"content":{"body":"which as we agreed was the only way to preserve that kind of invariants","msgtype":"m.text","org.matrix.msc1767.text":"which as we agreed was the only way to preserve that kind of invariants"},"ts":1648764773964,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$l8QhesXczB0hSmW5Jpz1sogv_PW8hm8v2-d3a-QX4tw"},
{"content":{"body":"yeah I used the strategy of wrapping two sets in https://www.npmjs.com/package/samevalueset, but a symbol probably would've worked fine there","msgtype":"m.text","org.matrix.msc1767.text":"yeah I used the strategy of wrapping two sets in https://www.npmjs.com/package/samevalueset, but a symbol probably would've worked fine there"},"ts":1648764826006,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$KvJPz9aZ1rr-BB1D7Ztx8mBwGZkUjhGxg8h38uQylKU"}
]