[
{"content":{"body":"I only have 3 of them in my codebase. Very niche.","m.mentions":{},"msgtype":"m.text"},"ts":1717632090797,"senderName":"sirisian","senderId":"@sirisian:matrix.org","id":"$0cOYgJyJ6GVMAzH15sza9R68qYep2owodKQsNbt-S4s"},
{"content":{"body":"Speaking of niche.. I haven't come across a use-case for that specifically, but I have on occasion wished there was something like a `Symbol.self` for use when accessing an object's properties.\ne.g. `x[Symbol.self] === x`\n\nIt's weird that my need for this has occurred more than a few times in the past year. (Easy to get around, but still)","format":"org.matrix.custom.html","formatted_body":"<p>Speaking of niche.. I haven't come across a use-case for that specifically, but I have on occasion wished there was something like a <code>Symbol.self</code> for use when accessing an object's properties.<br>e.g. <code>x[Symbol.self] === x</code></p>\n<p>It's weird that my need for this has occurred more than a few times in the past year. (Easy to get around, but still)</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1717632163748,"senderName":"whosy","senderId":"@whosy:matrix.org","id":"$-hF2xj8sxvlux3eQ8dVF55EgLkWcJiKj3wWM9HicL5U"},
{"content":{"body":"Also seems pretty niche? and since the only way for that to work would be to put it on Object.prototype I think we would not want that","m.mentions":{},"msgtype":"m.text"},"ts":1717632252041,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Uh8dg__as0B6jT3LEyBGe9ZAmCKcKNowMzyicZUYKD0"},
{"content":{"body":"both because new things on Object.prototype are scary in several ways, and because it wouldn't work everywhere and it would be very annoying for `x[Symbol.self]` to just not work when `x` happens to have a null prototype","format":"org.matrix.custom.html","formatted_body":"both because new things on Object.prototype are scary in several ways, and because it wouldn't work everywhere and it would be very annoying for <code>x[Symbol.self]</code> to just not work when <code>x</code> happens to have a null prototype","m.mentions":{},"msgtype":"m.text"},"ts":1717632285076,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bayICqLRYVGtftAJvNW2A43fuHNyut7rg6FNlnbybCg"},
{"content":{"body":"@bakkot My previous assumption was that we in TC39 would be uncomfortable adding wait because we donâ€™t have a concept of an event loop. Also we would need host integration for stuff like banning it in worklets. But I guess at this point we have other features that get at each of those things (eg Atomics.waitAsync)","msgtype":"m.text"},"ts":1717650824183,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CdAv5UqLwEgTqhRXtpw97eQkZdgB0sk0nL7VC4U-0Hw"}
]