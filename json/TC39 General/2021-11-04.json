[
{"content":{"body":"okay so if we're champs no need to answer the doodle, or shoudl we do so to kick off time planning?","msgtype":"m.text"},"ts":1635986719674,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$hhZ-lmMppgdpr1eMMT6guX9ZY2LWyfuvnQLvYGATv9I"},
{"content":{"body":"devsnek: I'm working on it, but progress is slow.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@devsnek:matrix.org\">devsnek</a>: I'm working on it, but progress is slow.","msgtype":"m.text"},"ts":1635991904747,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$O9kj-doR_Vq1KcmN6v-wvVt-BsgucBdac_sobMuDses"},
{"content":{"body":"Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:\n```\nlet obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n```\n\nwhich I though might log `undefined, 1` because it doesn't observe the _identity_ of `obj`.\n\nHowever, an _hypothetical WeakRef-oblivious execution_ (as defined in \"9.10.2 - Liveness\") might be `obj === obj`, which observes the identity of `obj` and thus makes it \"live\" and non-collectable, so `ref.deref()` must return `obj`.","format":"org.matrix.custom.html","formatted_body":"<p>Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:</p>\n<pre><code>let obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n</code></pre>\n<p>which I though might log <code>undefined, 1</code> because it doesn't observe the <em>identity</em> of <code>obj</code>.</p>\n<p>However, an <em>hypothetical WeakRef-oblivious execution</em> (as defined in &quot;9.10.2 - Liveness&quot;) might be <code>obj === obj</code>, which observes the identity of <code>obj</code> and thus makes it &quot;live&quot; and non-collectable, so <code>ref.deref()</code> must return <code>obj</code>.</p>\n","msgtype":"m.text"},"ts":1636023611920,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$h4laW1Y4_RQ1NWSZ5bVIXfB10gEpXn-t-6doWWAOHYo"},
{"content":{"body":" * Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:\n```\nlet obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n```\n\nwhich I though might log `undefined, 1` because it doesn't observe the _identity_ of `obj`.\n\nHowever, an _hypothetical WeakRef-oblivious execution_ (as defined in \"9.10.2 - Liveness\") might be `obj === obj`, which observes the identity of `obj` and thus makes it \"live\" and non-collectable, so `ref.deref()` must return `obj`.","format":"org.matrix.custom.html","formatted_body":" * <p>Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:</p>\n<pre><code>let obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n</code></pre>\n<p>which I though might log <code>undefined, 1</code> because it doesn't observe the <em>identity</em> of <code>obj</code>.</p>\n<p>However, an <em>hypothetical WeakRef-oblivious execution</em> (as defined in &quot;9.10.2 - Liveness&quot;) might be <code>obj === obj</code>, which observes the identity of <code>obj</code> and thus makes it &quot;live&quot; and non-collectable, so <code>ref.deref()</code> must return <code>obj</code>.</p>\n","m.new_content":{"body":"Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:\n```\nlet obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n```\n\nwhich I though might log `undefined, 1` because it doesn't observe the _identity_ of `obj`.\n\nHowever, an _hypothetical WeakRef-oblivious execution_ (as defined in \"9.10.2 - Liveness\") might be `obj === obj`, which observes the identity of `obj` and thus makes it \"live\" and non-collectable, so `ref.deref()` must return `obj`.","format":"org.matrix.custom.html","formatted_body":"<p>Can anyone give me an example of an observable effect of what is explained in the second pagraph of the first note of https://tc39.es/ecma262/#sec-weakref-execution? I initially came up with this:</p>\n<pre><code>let obj = { x: 1 };\nlet ref = new WeakRef(obj);\nawait null; // I think we need to wait to allow WeakRefs to be emptied\nconsole.log(ref.deref(), obj.x);\n</code></pre>\n<p>which I though might log <code>undefined, 1</code> because it doesn't observe the <em>identity</em> of <code>obj</code>.</p>\n<p>However, an <em>hypothetical WeakRef-oblivious execution</em> (as defined in &quot;9.10.2 - Liveness&quot;) might be <code>obj === obj</code>, which observes the identity of <code>obj</code> and thus makes it &quot;live&quot; and non-collectable, so <code>ref.deref()</code> must return <code>obj</code>.</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$h4laW1Y4_RQ1NWSZ5bVIXfB10gEpXn-t-6doWWAOHYo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1636023627444,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ZssS50QOJn_hYDNvjYeaBFau8xW8uT9hl7MgNH8B2ls"},
{"content":{"body":"Maybe my question is \"is an _hypothetical WeakRef-oblivious execution_ any possible execution of any possible code, or just any possible execution flow in my code?\"","format":"org.matrix.custom.html","formatted_body":"Maybe my question is &quot;is an <em>hypothetical WeakRef-oblivious execution</em> any possible execution of any possible code, or just any possible execution flow in my code?&quot;","msgtype":"m.text"},"ts":1636023745609,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$NyLht77ft_hlWy8URREPtX4ymKWQinPo2w6gRAElI-w"},
{"content":{"body":" * Maybe my question is \"is an _hypothetical WeakRef-oblivious execution_ any possible execution of any possible code, or just any possible execution flow in my source code?\"","format":"org.matrix.custom.html","formatted_body":" * Maybe my question is &quot;is an <em>hypothetical WeakRef-oblivious execution</em> any possible execution of any possible code, or just any possible execution flow in my source code?&quot;","m.new_content":{"body":"Maybe my question is \"is an _hypothetical WeakRef-oblivious execution_ any possible execution of any possible code, or just any possible execution flow in my source code?\"","format":"org.matrix.custom.html","formatted_body":"Maybe my question is &quot;is an <em>hypothetical WeakRef-oblivious execution</em> any possible execution of any possible code, or just any possible execution flow in my source code?&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$NyLht77ft_hlWy8URREPtX4ymKWQinPo2w6gRAElI-w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1636023753343,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$PmCIPoyMsh1Uy5EkOR2u-u6F6n3pMC14G-sjxZRCqI8"},
{"content":{"body":" * Maybe my question is \"is an _hypothetical WeakRef-oblivious execution_ any possible execution of any possible code, or just any possible execution flow in my code?\"","format":"org.matrix.custom.html","formatted_body":" * Maybe my question is &quot;is an <em>hypothetical WeakRef-oblivious execution</em> any possible execution of any possible code, or just any possible execution flow in my code?&quot;","m.new_content":{"body":"Maybe my question is \"is an _hypothetical WeakRef-oblivious execution_ any possible execution of any possible code, or just any possible execution flow in my code?\"","format":"org.matrix.custom.html","formatted_body":"Maybe my question is &quot;is an <em>hypothetical WeakRef-oblivious execution</em> any possible execution of any possible code, or just any possible execution flow in my code?&quot;","msgtype":"m.text"},"m.relates_to":{"event_id":"$NyLht77ft_hlWy8URREPtX4ymKWQinPo2w6gRAElI-w","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1636023759246,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fy0IcYVZ85XKZTKdOBi9ghA7JKiB2_G79gFFtO8hrBQ"},
{"content":{"body":"It's still weird that I don't have much idea what happened after the latest meeting. I understand that it takes a while to get the complete notes, but I really wish someone made an summary that has a sentence or two for each agenda item soon after a meeting.","msgtype":"m.text"},"ts":1636027043502,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$DcGcINjPQq4GBfFpLvw55R8kcllfRBBn5IJ37M8e4uE"},
{"content":{"body":"*it still feels weird*","format":"org.matrix.custom.html","formatted_body":"<em>it still feels weird</em>","msgtype":"m.text"},"ts":1636027063990,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$mgbTEOSJ1PPlD0VJsZ5_19DexgmXWbGiuQRaJPH0gkE"},
{"content":{"body":"pokute Justin Ridgewell has been doing an awesome job reporting the conclusion of each important topic at https://github.com/babel/proposals/issues/77","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pokute:matrix.org\">pokute</a> Justin Ridgewell has been doing an awesome job reporting the conclusion of each important topic at https://github.com/babel/proposals/issues/77","msgtype":"m.text"},"ts":1636027354726,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$IstmL8_FApglpFRlqq7g2y4wGDMs2mFzRDqttLOLA6Y"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> pokute Justin Ridgewell has been doing an awesome job reporting the conclusion of each important topic at https://github.com/babel/proposals/issues/77\n\nOh, I didn't know about that. Thank you!","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$IstmL8_FApglpFRlqq7g2y4wGDMs2mFzRDqttLOLA6Y?via=matrix.org&via=igalia.com&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br><a href=\"https://matrix.to/#/@pokute:matrix.org\">pokute</a> Justin Ridgewell has been doing an awesome job reporting the conclusion of each important topic at https://github.com/babel/proposals/issues/77</blockquote></mx-reply>Oh, I didn't know about that. Thank you!","m.relates_to":{"m.in_reply_to":{"event_id":"$IstmL8_FApglpFRlqq7g2y4wGDMs2mFzRDqttLOLA6Y"}},"msgtype":"m.text"},"ts":1636027457867,"senderName":"pokute","senderId":"@pokute:matrix.org","id":"$gt2LoQUO5twRWPkfGHBYZhus_Cvb16mFZoW0Gjo9xYQ"},
{"content":{"body":"Note that it should not be considered an \"official source\" (only the notes are official), but it's a good approximation","msgtype":"m.text"},"ts":1636027502813,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$JvmyXSWosB3QJu3J1APbgm4_SVhqhg1zflaiSB8Xozk"}
]