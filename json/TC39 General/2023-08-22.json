[
{"content":{"body":" * Also performance test:\n\n```javascript\nconst ITERATIONS_NUM = Math.pow(10, 8);\n\nfunction testWithAllocation(i) {\n    new Vector3(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nfunction testWithoutAllocation(i) {\n    if (!this.vec) {\n        this.vec = new Vector3(0, 0, 0);\n    }\n\n    this.vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nconsole.time('with-allocation');\nfor (let i = 0; i < ITERATIONS_NUM; ++i) {\n    testWithAllocation(i);\n}\nconsole.timeEnd('with-allocation');\n\nconsole.time('without-allocation');\nlet vec = new Vector3(0, 0, 0);\nfor (let i = 0; i < ITERATIONS_NUM; ++i) {\n    testWithoutAllocation(i);\n}\nconsole.timeEnd('without-allocation');\n```\n\n```bash\nwith-allocation: 912.862ms\nwithout-allocation: 65.783ms\n```\n\nAnd how it looks like with static syntax to avoid unwanted allocations:\n\n```javascript\nfunction testWithoutAllocation(i) {\n    static let vec = new Vector(0, 0, 0);\n    vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n```\n\nI've added answers from our discussion to the repo: https://github.com/yehoryatskevych/proposal-function-static-variables/","format":"org.matrix.custom.html","formatted_body":" * <p>Also performance test:</p>\n<pre><code class=\"language-javascript\">const ITERATIONS_NUM = Math.pow(10, 8);\n\nfunction testWithAllocation(i) {\n    new Vector3(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nfunction testWithoutAllocation(i) {\n    if (!this.vec) {\n        this.vec = new Vector3(0, 0, 0);\n    }\n\n    this.vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nconsole.time('with-allocation');\nfor (let i = 0; i &lt; ITERATIONS_NUM; ++i) {\n    testWithAllocation(i);\n}\nconsole.timeEnd('with-allocation');\n\nconsole.time('without-allocation');\nlet vec = new Vector3(0, 0, 0);\nfor (let i = 0; i &lt; ITERATIONS_NUM; ++i) {\n    testWithoutAllocation(i);\n}\nconsole.timeEnd('without-allocation');\n</code></pre>\n<pre><code class=\"language-bash\">with-allocation: 912.862ms\nwithout-allocation: 65.783ms\n</code></pre>\n<p>And how it looks like with static syntax to avoid unwanted allocations:</p>\n<pre><code class=\"language-javascript\">function testWithoutAllocation(i) {\n    static let vec = new Vector(0, 0, 0);\n    vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n</code></pre>\n<p>I've added answers from our discussion to the repo: https://github.com/yehoryatskevych/proposal-function-static-variables/</p>\n","m.new_content":{"body":"Also performance test:\n\n```javascript\nconst ITERATIONS_NUM = Math.pow(10, 8);\n\nfunction testWithAllocation(i) {\n    new Vector3(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nfunction testWithoutAllocation(i) {\n    if (!this.vec) {\n        this.vec = new Vector3(0, 0, 0);\n    }\n\n    this.vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nconsole.time('with-allocation');\nfor (let i = 0; i < ITERATIONS_NUM; ++i) {\n    testWithAllocation(i);\n}\nconsole.timeEnd('with-allocation');\n\nconsole.time('without-allocation');\nlet vec = new Vector3(0, 0, 0);\nfor (let i = 0; i < ITERATIONS_NUM; ++i) {\n    testWithoutAllocation(i);\n}\nconsole.timeEnd('without-allocation');\n```\n\n```bash\nwith-allocation: 912.862ms\nwithout-allocation: 65.783ms\n```\n\nAnd how it looks like with static syntax to avoid unwanted allocations:\n\n```javascript\nfunction testWithoutAllocation(i) {\n    static let vec = new Vector(0, 0, 0);\n    vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n```\n\nI've added answers from our discussion to the repo: https://github.com/yehoryatskevych/proposal-function-static-variables/","format":"org.matrix.custom.html","formatted_body":"<p>Also performance test:</p>\n<pre><code class=\"language-javascript\">const ITERATIONS_NUM = Math.pow(10, 8);\n\nfunction testWithAllocation(i) {\n    new Vector3(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nfunction testWithoutAllocation(i) {\n    if (!this.vec) {\n        this.vec = new Vector3(0, 0, 0);\n    }\n\n    this.vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n\nconsole.time('with-allocation');\nfor (let i = 0; i &lt; ITERATIONS_NUM; ++i) {\n    testWithAllocation(i);\n}\nconsole.timeEnd('with-allocation');\n\nconsole.time('without-allocation');\nlet vec = new Vector3(0, 0, 0);\nfor (let i = 0; i &lt; ITERATIONS_NUM; ++i) {\n    testWithoutAllocation(i);\n}\nconsole.timeEnd('without-allocation');\n</code></pre>\n<pre><code class=\"language-bash\">with-allocation: 912.862ms\nwithout-allocation: 65.783ms\n</code></pre>\n<p>And how it looks like with static syntax to avoid unwanted allocations:</p>\n<pre><code class=\"language-javascript\">function testWithoutAllocation(i) {\n    static let vec = new Vector(0, 0, 0);\n    vec.set(i + 1.13, i + 5.231, i + 7.1247);\n}\n</code></pre>\n<p>I've added answers from our discussion to the repo: https://github.com/yehoryatskevych/proposal-function-static-variables/</p>\n","msgtype":"m.text"},"m.relates_to":{"event_id":"$SnSz2k7eMWp8DXew08P3P1zToTTc4xqY1AAJ8KXHPec","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1692668989952,"senderName":"Yehor Yatskevych","senderId":"@yehoryatskevych:matrix.org","id":"$c5qMNCnQ5jNDO1p3cJkxt5muHmvwL6I5HJdcuxaU0SM"}
]