[
{"content":{"body":"Hi, I’m new to this community. I’m curious if there have been any proposals for operator overloading, or what the current thoughts are on it.","m.mentions":{},"msgtype":"m.text"},"ts":1744166052926,"senderName":"Abdiel Lopez","senderId":"@paperprototype:matrix.org","id":"$76qoxPcAqUVq6RYTsi0tUOvLBFVwUFmVCT_R1PMACz8"},
{"content":{"body":"Hi, operator overloading has been a common topic of conversation, and the current status seems to be that the people working on JS engines consider it unfeasible because it would regress performance","m.mentions":{},"msgtype":"m.text"},"ts":1744166490644,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$ez3F7E2906F1YEJjlLiscjUEJiP_RvnoN1wBpVQSIrk"},
{"content":{"body":"https://github.com/tc39/proposal-operator-overloading","format":"org.matrix.custom.html","formatted_body":"https://github.com/tc39/proposal-operator-overloading","msgtype":"m.text"},"ts":1744167797014,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$SFIoCaJKf70FPfzpZg_YP7MawDBwGKYRCu9PaS8Io8s"},
{"content":{"body":"Status: withdrawn","format":"org.matrix.custom.html","formatted_body":"Status: withdrawn","msgtype":"m.text"},"ts":1744167809160,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$5WAhWDunNndGRB8Qe1qusECNB4ohdVgmXV-E2v5ngKs"},
{"content":{"body":"It was specifically withdrawn at this plenary; you can read the reasoning here: https://github.com/tc39/notes/blob/main/meetings/2023-11/november-28.md#withdrawing-operator-overloading\n","m.mentions":{},"msgtype":"m.text"},"ts":1744171084828,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$k5kf1pNQGzgvJtI8m-zJYko3Wen9OXdYTvE8QIZfulc"},
{"content":{"body":"\n\nBut, as has been already mentioned, the reason was because many engine implementors say that operator overloading is impossible to do without penalizing the performance of every JavaScript program. It will probably never happen in JavaScript.","m.mentions":{},"msgtype":"m.text"},"ts":1744171089448,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$1WrXzHRiA4kPHmTGXDppS66wb0P2mUeaJ5HlPNXaK3E"}
]