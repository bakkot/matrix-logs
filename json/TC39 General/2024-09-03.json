[
{"content":{"body":"A Coq Mechanization of JavaScript Regular Expression Semantics: https://dl.acm.org/doi/10.1145/3674666","msgtype":"m.text"},"ts":1725352317087,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$uv3znjSfIrpFrXr0WfCeVvdyBflx4CbcFNMeM78YHiY"},
{"content":{"body":"In 6.1, they acknowledge the distinction between main-body and annex B regexes, but don't explicitly say which they're mechanizing (as far as I could see). I'm pretty sure it's just main-body.","m.mentions":{},"msgtype":"m.text"},"ts":1725371928287,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$-5NQLStB05qHsis8ehaV26n9bMKuJjia7qLISCF5KGY"},
{"content":{"body":"Do the two modes have different _features_, or just different parsing rules?","format":"org.matrix.custom.html","formatted_body":"Do the two modes have different <em>features</em>, or just different parsing rules?","m.mentions":{},"msgtype":"m.text"},"ts":1725394229623,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$r1YHnnA0XnKNkGyU0oTFemsm0-mkG7Nx7RMvsWf-o70"},
{"content":{"body":"> These grammars do not agree on all inputs:\nfor instance, the standard grammar rejects ], whereas the legacy grammar allows it and treats it as\na valid regex matching the character ‘]’. Given this, we left parsing out of our mechanization.","format":"org.matrix.custom.html","formatted_body":"<blockquote>\n<p>These grammars do not agree on all inputs:<br>for instance, the standard grammar rejects ], whereas the legacy grammar allows it and treats it as<br>a valid regex matching the character ‘]’. Given this, we left parsing out of our mechanization.</p>\n</blockquote>\n","m.mentions":{},"msgtype":"m.text"},"ts":1725394241004,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$21OmJyRyW2arv8gmGtoDhgxaPX4haQBBBqxmMNo-xrM"}
]