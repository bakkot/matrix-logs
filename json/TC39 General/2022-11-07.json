[
{"content":{"body":"I'm looking into the Array.fromAsync proposal and have a question about what people's understanding of \"Zalgo\" is (to explain the [jargon](https://blog.izs.me/2013/08/designing-apis-for-asynchrony/), Zalgo is a reference to a meme, that is used as shorthand for the situation where an async operation sometimes calls a callback and sometimes doesn't)","format":"org.matrix.custom.html","formatted_body":"I'm looking into the Array.fromAsync proposal and have a question about what people's understanding of &quot;Zalgo&quot; is (to explain the <a href=\"https://blog.izs.me/2013/08/designing-apis-for-asynchrony/\">jargon</a>, Zalgo is a reference to a meme, that is used as shorthand for the situation where an async operation sometimes calls a callback and sometimes doesn't)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"I'm looking into the Array.fromAsync proposal and have a question about what people's understanding of \"Zalgo\" is (to explain the [jargon](https://blog.izs.me/2013/08/designing-apis-for-asynchrony/), Zalgo is a reference to a meme, that is used as shorthand for the situation where an async operation sometimes calls a callback and sometimes doesn't)","mimetype":"text/plain"},{"body":"I'm looking into the Array.fromAsync proposal and have a question about what people's understanding of &quot;Zalgo&quot; is (to explain the <a href=\"https://blog.izs.me/2013/08/designing-apis-for-asynchrony/\">jargon</a>, Zalgo is a reference to a meme, that is used as shorthand for the situation where an async operation sometimes calls a callback and sometimes doesn't)","mimetype":"text/html"}]},"ts":1667846281228,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$edWNGTjDw4wm91iCiAEX47ZDlEZDgF5tfC7Y444L_0s"},
{"content":{"body":"is throwing an error immediately, on bad input, Zalgo?","msgtype":"m.text","org.matrix.msc1767.text":"is throwing an error immediately, on bad input, Zalgo?"},"ts":1667846351388,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$ZKrh6KW72XYvsT82ge4_hwNp1LSh3cgSOkHehX-IkAA"},
{"content":{"body":"i.e.\n```js\nfunction myfunc(input) {\n  if (isBad(input)) throw new Error('bad!');\n  return promiseFromAsyncOperation(input);\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>i.e.</p>\n<pre><code class=\"language-js\">function myfunc(input) {\n  if (isBad(input)) throw new Error('bad!');\n  return promiseFromAsyncOperation(input);\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"i.e.\n```js\nfunction myfunc(input) {\n  if (isBad(input)) throw new Error('bad!');\n  return promiseFromAsyncOperation(input);\n}\n```","mimetype":"text/plain"},{"body":"<p>i.e.</p>\n<pre><code class=\"language-js\">function myfunc(input) {\n  if (isBad(input)) throw new Error('bad!');\n  return promiseFromAsyncOperation(input);\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1667846414234,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$8Ew_pnPuJPLjD4_B4ZUG4bSqCS8x_My-ynbRedndg8M"},
{"content":{"body":"the Array.fromAsync proposal [says yes](https://github.com/tc39/proposal-array-from-async#errors) and takes care to check its input only inside its async closure, which means rejecting the promise, not throwing an error synchronously","format":"org.matrix.custom.html","formatted_body":"the Array.fromAsync proposal <a href=\"https://github.com/tc39/proposal-array-from-async#errors\">says yes</a> and takes care to check its input only inside its async closure, which means rejecting the promise, not throwing an error synchronously","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"the Array.fromAsync proposal [says yes](https://github.com/tc39/proposal-array-from-async#errors) and takes care to check its input only inside its async closure, which means rejecting the promise, not throwing an error synchronously","mimetype":"text/plain"},{"body":"the Array.fromAsync proposal <a href=\"https://github.com/tc39/proposal-array-from-async#errors\">says yes</a> and takes care to check its input only inside its async closure, which means rejecting the promise, not throwing an error synchronously","mimetype":"text/html"}]},"ts":1667846472352,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$O5jfW2ETFdmu6q5GGr8xT4T13_BtDYDduS4qYgOdCZQ"},
{"content":{"body":"Atomics.waitAsync, on the other hand, does throw errors synchronously on bad input: (steps 1 and 2 of https://tc39.es/proposal-atomics-wait-async/#sec-dowait)","msgtype":"m.text","org.matrix.msc1767.text":"Atomics.waitAsync, on the other hand, does throw errors synchronously on bad input: (steps 1 and 2 of https://tc39.es/proposal-atomics-wait-async/#sec-dowait)"},"ts":1667846511206,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$hxUB5373Bp4vBywbw0qkU4cDO4VCdlegqAxLjXRphC4"},
{"content":{"body":"reading the [original](https://blog.izs.me/2013/08/designing-apis-for-asynchrony/) [definitions](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/) of Zalgo, I'd say this is not Zalgo as originally defined","format":"org.matrix.custom.html","formatted_body":"reading the <a href=\"https://blog.izs.me/2013/08/designing-apis-for-asynchrony/\">original</a> <a href=\"https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/\">definitions</a> of Zalgo, I'd say this is not Zalgo as originally defined","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"reading the [original](https://blog.izs.me/2013/08/designing-apis-for-asynchrony/) [definitions](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/) of Zalgo, I'd say this is not Zalgo as originally defined","mimetype":"text/plain"},{"body":"reading the <a href=\"https://blog.izs.me/2013/08/designing-apis-for-asynchrony/\">original</a> <a href=\"https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/\">definitions</a> of Zalgo, I'd say this is not Zalgo as originally defined","mimetype":"text/html"}]},"ts":1667846601323,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$3Hmv289hrbgvXge0_WS5R2qvCBHcGSKECLkeSKFc_5M"},
{"content":{"body":"however, maybe it is still desirable to do one or the other; in which case we should probably adjust one of these two proposals","msgtype":"m.text","org.matrix.msc1767.text":"however, maybe it is still desirable to do one or the other; in which case we should probably adjust one of these two proposals"},"ts":1667846652226,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$HW24YHkvhX7rXi6tmWqg4xAMnkuRdlJ9WRp5vUu0lT8"},
{"content":{"body":"Zalgo in short is a combinatoric explosion of behaviors that may be either synchronous or anachronous, such that it is not practical to test every combination that will be seen in production.","msgtype":"m.text","org.matrix.msc1767.text":"Zalgo in short is a combinatoric explosion of behaviors that may be either synchronous or anachronous, such that it is not practical to test every combination that will be seen in production."},"ts":1667846706162,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$TTy-6TZySZcnQYdf_71jYh53OQETJbmf7YzuBdXhaKE"}
]