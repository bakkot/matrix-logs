[
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Uhm, does the spec (+ AnnexB) disallow `-->` as the first line in a script? It seems so (`-->` must be preceded by a line terminator), but all browsers accept `eval(\"-->\")`\n\nmy reading of https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-html-like-comments agrees with this; |HTMLCloseComment| is the only nonterminal that can start with `-->` and is only valid after a |LineTerminatorSequence| (possibly wrapped in `/*…*/`). And [PerformEval](https://tc39.es/ecma262/multipage/global-object.html#sec-performeval) step 11 does ParseText(StringToCodePoints(x), |Script|), which per [ParseText](https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext) and [The Syntactic Grammar](https://tc39.es/ecma262/multipage/notational-conventions.html#sec-syntactic-grammar) and [The Lexical and RegExp Grammars](https://tc39.es/ecma262/multipage/notational-conventions.html#sec-lexical-and-regexp-grammars) begins with application of the [lexical grammar](https://tc39.es/ecma262/multipage/ecmascript-language-lexical-grammar.html#sec-ecmascript-language-lexical-grammar) and should fail in the case of text starting with \"-->\".\n\nAll implementations that I tested reject a script starting with \"-->\", but JSC and SM and V8 incorrectly fail to reject `eval` input that does so:\n```\n$ eshost -si htmlcomment.js \n## Source\nprint(\"HTML-like comments supported\");\n-->\neval(\"/*\\n*/-->\\nprint('eval with leading `/*<LineTerminator>*/-->` supported')\");\neval(\"-->\\nprint('eval with leading `-->` supported')\");\n\n\n#### ChakraCore\nHTML-like comments supported\neval with leading `/*<LineTerminator>*/-->` supported\nSyntaxError: Syntax error\n\n#### engine262\n\nSyntaxError: Unexpected token\n\n#### GraalJS\nHTML-like comments supported\neval with leading `/*<LineTerminator>*/-->` supported\nSyntaxError: <eval>:1:2 Expected an operand but found >\n\n#### Hermes\n\nSyntaxError: invalid expression\n\n#### JavaScriptCore, SpiderMonkey, V8\nHTML-like comments supported\neval with leading `/*<LineTerminator>*/-->` supported\neval with leading `-->` supported\n\n#### Moddable XS\n\nSyntaxError: missing expression\n\n#### QuickJS\nHTML-like comments supported\neval with leading `/*<LineTerminator>*/-->` supported\nSyntaxError: unexpected token in expression: '>'\n```","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$nHitY-uHCwlNoP8JLHSyXyyGwkVW5VidhW7tlibvcfo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Uhm, does the spec (+ AnnexB) disallow <code>--&gt;</code> as the first line in a script? It seems so (<code>--&gt;</code> must be preceded by a line terminator), but all browsers accept <code>eval(\"--&gt;\")</code></blockquote></mx-reply><p>my reading of https://tc39.es/ecma262/multipage/additional-ecmascript-features-for-web-browsers.html#sec-html-like-comments agrees with this; |HTMLCloseComment| is the only nonterminal that can start with <code>--&gt;</code> and is only valid after a |LineTerminatorSequence| (possibly wrapped in <code>/*…*/</code>). And <a href=\"https://tc39.es/ecma262/multipage/global-object.html#sec-performeval\">PerformEval</a> step 11 does ParseText(StringToCodePoints(x), |Script|), which per <a href=\"https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext\">ParseText</a> and <a href=\"https://tc39.es/ecma262/multipage/notational-conventions.html#sec-syntactic-grammar\">The Syntactic Grammar</a> and <a href=\"https://tc39.es/ecma262/multipage/notational-conventions.html#sec-lexical-and-regexp-grammars\">The Lexical and RegExp Grammars</a> begins with application of the <a href=\"https://tc39.es/ecma262/multipage/ecmascript-language-lexical-grammar.html#sec-ecmascript-language-lexical-grammar\">lexical grammar</a> and should fail in the case of text starting with \"--&gt;\".</p>\n<p>All implementations that I tested reject a script starting with \"--&gt;\", but JSC and SM and V8 incorrectly fail to reject <code>eval</code> input that does so:</p>\n<pre><code>$ eshost -si htmlcomment.js \n## Source\nprint(\"HTML-like comments supported\");\n--&gt;\neval(\"/*\\n*/--&gt;\\nprint('eval with leading `/*&lt;LineTerminator&gt;*/--&gt;` supported')\");\neval(\"--&gt;\\nprint('eval with leading `--&gt;` supported')\");\n\n\n#### ChakraCore\nHTML-like comments supported\neval with leading `/*&lt;LineTerminator&gt;*/--&gt;` supported\nSyntaxError: Syntax error\n\n#### engine262\n\nSyntaxError: Unexpected token\n\n#### GraalJS\nHTML-like comments supported\neval with leading `/*&lt;LineTerminator&gt;*/--&gt;` supported\nSyntaxError: &lt;eval&gt;:1:2 Expected an operand but found &gt;\n\n#### Hermes\n\nSyntaxError: invalid expression\n\n#### JavaScriptCore, SpiderMonkey, V8\nHTML-like comments supported\neval with leading `/*&lt;LineTerminator&gt;*/--&gt;` supported\neval with leading `--&gt;` supported\n\n#### Moddable XS\n\nSyntaxError: missing expression\n\n#### QuickJS\nHTML-like comments supported\neval with leading `/*&lt;LineTerminator&gt;*/--&gt;` supported\nSyntaxError: unexpected token in expression: '&gt;'\n</code></pre>\n","m.mentions":{"user_ids":["@nicolo-ribaudo:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$nHitY-uHCwlNoP8JLHSyXyyGwkVW5VidhW7tlibvcfo"}},"msgtype":"m.text"},"ts":1702745165018,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$cFA3OQq_vluyavYjRdA6FOdBYzHestQg5ji1Iuk9ADg"}
]