[
{"content":{"body":"can someone verify my assessment that https://github.com/mishoo/UglifyJS/issues/5370 represents a deviation of V8 from other major implementations in FunctionDeclarationInstantiation with respect to non-simple parameter lists when VarDeclaredNames includes \"arguments\"?\n```\n$ eshost -se '[].concat(...[\"function arguments(){}\", \"var arguments\"].map(occluding => [\"()\", \"(..._)\", \"(_=0)\"].map(params => { const r=\"return typeof arguments; \", f=Function(params.slice(1,-1), r+occluding); return `${f().padEnd(9)} // function${params}{${r+occluding}}`; }))).join(\"\\n\")'\n#### ChakraCore, engine262, JavaScriptCore, Moddable XS, SpiderMonkey\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nobject    // function(..._){return typeof arguments; var arguments}\nobject    // function(_=0){return typeof arguments; var arguments}\n\n#### V8\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nundefined // function(..._){return typeof arguments; var arguments}\nundefined // function(_=0){return typeof arguments; var arguments}\n```","format":"org.matrix.custom.html","formatted_body":"<p>can someone verify my assessment that https://github.com/mishoo/UglifyJS/issues/5370 represents a deviation of V8 from other major implementations in FunctionDeclarationInstantiation with respect to non-simple parameter lists when VarDeclaredNames includes &quot;arguments&quot;?</p>\n<pre><code>$ eshost -se '[].concat(...[&quot;function arguments(){}&quot;, &quot;var arguments&quot;].map(occluding =&gt; [&quot;()&quot;, &quot;(..._)&quot;, &quot;(_=0)&quot;].map(params =&gt; { const r=&quot;return typeof arguments; &quot;, f=Function(params.slice(1,-1), r+occluding); return `${f().padEnd(9)} // function${params}{${r+occluding}}`; }))).join(&quot;\\n&quot;)'\n#### ChakraCore, engine262, JavaScriptCore, Moddable XS, SpiderMonkey\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nobject    // function(..._){return typeof arguments; var arguments}\nobject    // function(_=0){return typeof arguments; var arguments}\n\n#### V8\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nundefined // function(..._){return typeof arguments; var arguments}\nundefined // function(_=0){return typeof arguments; var arguments}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"can someone verify my assessment that https://github.com/mishoo/UglifyJS/issues/5370 represents a deviation of V8 from other major implementations in FunctionDeclarationInstantiation with respect to non-simple parameter lists when VarDeclaredNames includes \"arguments\"?\n```\n$ eshost -se '[].concat(...[\"function arguments(){}\", \"var arguments\"].map(occluding => [\"()\", \"(..._)\", \"(_=0)\"].map(params => { const r=\"return typeof arguments; \", f=Function(params.slice(1,-1), r+occluding); return `${f().padEnd(9)} // function${params}{${r+occluding}}`; }))).join(\"\\n\")'\n#### ChakraCore, engine262, JavaScriptCore, Moddable XS, SpiderMonkey\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nobject    // function(..._){return typeof arguments; var arguments}\nobject    // function(_=0){return typeof arguments; var arguments}\n\n#### V8\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nundefined // function(..._){return typeof arguments; var arguments}\nundefined // function(_=0){return typeof arguments; var arguments}\n```","mimetype":"text/plain"},{"body":"<p>can someone verify my assessment that https://github.com/mishoo/UglifyJS/issues/5370 represents a deviation of V8 from other major implementations in FunctionDeclarationInstantiation with respect to non-simple parameter lists when VarDeclaredNames includes &quot;arguments&quot;?</p>\n<pre><code>$ eshost -se '[].concat(...[&quot;function arguments(){}&quot;, &quot;var arguments&quot;].map(occluding =&gt; [&quot;()&quot;, &quot;(..._)&quot;, &quot;(_=0)&quot;].map(params =&gt; { const r=&quot;return typeof arguments; &quot;, f=Function(params.slice(1,-1), r+occluding); return `${f().padEnd(9)} // function${params}{${r+occluding}}`; }))).join(&quot;\\n&quot;)'\n#### ChakraCore, engine262, JavaScriptCore, Moddable XS, SpiderMonkey\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nobject    // function(..._){return typeof arguments; var arguments}\nobject    // function(_=0){return typeof arguments; var arguments}\n\n#### V8\nfunction  // function(){return typeof arguments; function arguments(){}}\nfunction  // function(..._){return typeof arguments; function arguments(){}}\nfunction  // function(_=0){return typeof arguments; function arguments(){}}\nobject    // function(){return typeof arguments; var arguments}\nundefined // function(..._){return typeof arguments; var arguments}\nundefined // function(_=0){return typeof arguments; var arguments}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1646067716617,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$UoMfJyqjHWTLn805JYO7qj_JZxFqTbDKvQvXl7yd9FI"}
]