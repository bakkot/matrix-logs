[
{"content":{"body":"Yeah there are no availability guarantees in ShadowRealm or Compartments. In general anything running in the same agent. Preempting a drain of the promise jobs queue is an interesting idea, but I feel very unsure about letting any code running in the same agent after that. It's like catching an OOM but worse, the program can't really make any assumption in what state it's in anymore.","msgtype":"m.text"},"ts":1729947505304,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$aYTjlEU-spjtZAY98uRDxI_BNXkpfpQf4todo76_6jw"},
{"content":{"body":"I suppose if you could prove that only some of the shadow realms had any jobs on the queue, or calls on the stack when preempted you could just condemn those realms, but I'm not sure that's sufficient. At the very least you'd still need some way to trigger execution in that isolated realm without letting your own realm become collateral damage, and know when/if that realm becomes condemned.","msgtype":"m.text"},"ts":1729947760577,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$OACUnHctLs5WMuGAFSdpL-CSXK9qI2dyvJshyrCx3ag"},
{"content":{"body":"* I suppose if you could prove that only some of the shadow realms had any jobs on the queue, or calls on the stack when preempted you could just condemn those realms, but I'm not sure that's sufficient. At the very least you'd need some way to trigger execution in that isolated realm without letting your own realm become collateral damage if it gets preempted, and know when/if that realm becomes condemned.","m.new_content":{"body":"I suppose if you could prove that only some of the shadow realms had any jobs on the queue, or calls on the stack when preempted you could just condemn those realms, but I'm not sure that's sufficient. At the very least you'd need some way to trigger execution in that isolated realm without letting your own realm become collateral damage if it gets preempted, and know when/if that realm becomes condemned.","msgtype":"m.text"},"m.relates_to":{"event_id":"$OACUnHctLs5WMuGAFSdpL-CSXK9qI2dyvJshyrCx3ag","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729947902099,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$qMD2wcks_FZrLde1nyqpK1an9guHPpP-xwYXB0atC54"},
{"content":{"body":"I think by definition that makes the trigger of execution asynchronous, and prevents you from having any of the triggering realm's functions interleaved on the stack. At which point you might as well run in a different agent.","msgtype":"m.text"},"ts":1729948017962,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$AOH9BSstZCu0WnJ5eV7uH4uvVk5F3LXvfD4jaf-2gUM"},
{"content":{"body":"FYI, Moddable implemented metering in XS for us. It does a deterministic measurement of work done in the agent, and can interrupt execution if it passes a given threshold. All this is on the embedder side however, and there are only minimal host APIs exposed to JS to temporarily suspend metering.","msgtype":"m.text"},"ts":1729948275236,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$k07DNPimjz7sRPOtaiNDy3fZ5Jn9JQx0CcQYUpYqmsY"}
]