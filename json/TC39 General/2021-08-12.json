[
{"content":{"body":"yeah that was a bummer :-(","msgtype":"m.text"},"ts":1628742878215,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$jX0JDWhm7lrAD_oIPHHqHpZpYWFTj_QWMMzP9gNYPZA"},
{"content":{"body":"Do we still have a chance to resurface it with array-equality? ","msgtype":"m.text"},"ts":1628779220312,"senderName":"Hemanth H.M","senderId":"@hemanth.hm:matrix.org","id":"$no6uZ_hp226rNEjMLfg61bxOyKq4CIHV-4MICchr55w"},
{"content":{"body":"I think there are lots of chances to resurface the spaceship operator, array comparison, etc. For me, the symbol-based protocol which was disconnected from how < etc work was what I didn't like so much, not the spaceship operator itself.","msgtype":"m.text"},"ts":1628779309170,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$qed9_0JrvVGZYygq1FsCbAwhF5z6TeB9rHVJYx3Xbao"},
{"content":{"body":"anyway yes we agreed on Stage 1 for a proposal for array equality tests","msgtype":"m.text"},"ts":1628779348646,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$H5H233SFV71YUC06g0zxBmcxy4wC_0JJ5QN_1NxqgME"},
{"content":{"body":"oh hey, someone actually using Atomics! https://jlongster.com/future-sql-web","msgtype":"m.text"},"ts":1628789111060,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$87mcWtP5nnigcN7FPOs_qwo76mF_7uNPRRkeihAXCMA"},
{"content":{"body":"ðŸ¥²","msgtype":"m.text"},"ts":1628790961732,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$isMHUEaDKCouEh5GawBIov_r47UcSQ7KndEQ14kheeA"},
{"content":{"body":"\"The real magic is the Atomics.wait API. Itâ€™s a beautiful thing.\" i don't know if i'd call futexes beautiful personally","msgtype":"m.text"},"ts":1628790997261,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HWsZU98Yt4CCfECeM0AnvddeBSE8gyGmLqiqxhaILGY"},
{"content":{"body":"keep in mind this is the opinion of someone who has just implemented sqlite _on top of_ indexdb","format":"org.matrix.custom.html","formatted_body":"keep in mind this is the opinion of someone who has just implemented sqlite <em>on top of</em> indexdb","msgtype":"m.text"},"ts":1628794510014,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$tJhOiiFX674aJuwp6wHOv_WdpfMaad8QLBCg90Eok4o"},
{"content":{"body":"I'm back! Also I still hate @@species","msgtype":"m.text"},"ts":1628799833734,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$9vtzTI95_j3gpHyGgr07mZAjbbHH_QDfPg1bCArx-K0"},
{"content":{"body":"did a brute force replace of globals to see what node is leaking and can't think of a clean way to not have @@species leak out a mutable vector when calling some builtins","msgtype":"m.text"},"ts":1628799972461,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$ibYSY-7tBnseizYu7c13uYSRCdGDCuY-35m1oHzFePM"},
{"content":{"body":"so, if anyone knows how to safely act like Array.prototype.concat but not call @@species without subclassing Array or mutating the receiver that would be nice","msgtype":"m.text"},"ts":1628800041008,"senderName":"bradleymeck","senderId":"@bradleymeck:matrix.org","id":"$Rr8n7BsUDdR2ePRtg7nOJWWpgWQ1sun4OTL2zM8_2n8"},
{"content":{"body":"proxy the receiver instead of mutating it :P","msgtype":"m.text"},"ts":1628801537072,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$GO-RKRMpjlulMbCVe5avkb6-pau7rhZUpW3hIZp4wZE"},
{"content":{"body":"bradleymeck: can you clarify the question? Array.prototype.concat requires getting @@species only when the receiver was initialized by ArrayCreate and getting its constructor returns an Object that is not a cross-realm %Array% intrinsic, but it _requires_ getting @@species in those cases so \"act like Array.prototype.concat\" would be violated by skipping it.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bradleymeck:matrix.org\">bradleymeck</a>: can you clarify the question? Array.prototype.concat requires getting @@species only when the receiver was initialized by ArrayCreate and getting its constructor returns an Object that is not a cross-realm %Array% intrinsic, but it <em>requires</em> getting @@species in those cases so &quot;act like Array.prototype.concat&quot; would be violated by skipping it.","msgtype":"m.text"},"ts":1628804401552,"senderName":"Richard Gibson","senderId":"@gibson042:matrix.org","id":"$bsAJOumx35cMD5FX9U7wpc-cT3uruOFfwCY0CBY97ho"}
]