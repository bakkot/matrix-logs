[
{"content":{"body":"I think I'm leaning strong into the \"not worth trying, just stick to an ident\" camp, because :: is meant to be \"like ., but the obj and function don't have to be previously related\", and the more we move away from that the more confusing it'll get.","msgtype":"m.text"},"ts":1634573694153,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$C7V8jOuP2uKKuCn3DEX9dp0_WmWu3NlZR1A_5V9n43E"},
{"content":{"body":"Plus `a1.a2::a3.a4::a5.a6()` is ?????","format":"org.matrix.custom.html","formatted_body":"Plus <code>a1.a2::a3.a4::a5.a6()</code> is ?????","msgtype":"m.text"},"ts":1634573733632,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$o0-MNctBiDiaa4DfphKKVHF_kwr8V5Khhf19p9ZexVw"},
{"content":{"body":"well formed ðŸ˜„","msgtype":"m.text"},"ts":1634573749041,"senderName":"devsnek","senderId":"@devsnek:matrix.org","id":"$x5F19vVq2iV3fN_AtGZ1Crwv1TrW0YnHPeCA6t5dnt8"},
{"content":{"body":"i recognize that it's purely a dot-call operator, and so one *can* argue that any expression that's *not* of the form `::foo()` is clearly doing something different, but I'm not sure about that.","format":"org.matrix.custom.html","formatted_body":"i recognize that it's purely a dot-call operator, and so one <em>can</em> argue that any expression that's <em>not</em> of the form <code>::foo()</code> is clearly doing something different, but I'm not sure about that.","msgtype":"m.text"},"ts":1634573807667,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$g3S2yqJkzmGU5ATIbeIhr1wdoEuFBM-twy9q47GlZxo"},
{"content":{"body":"like what if `foo::bar`, without parens, invoked it like a getter setter","format":"org.matrix.custom.html","formatted_body":"like what if <code>foo::bar</code>, without parens, invoked it like a getter setter","msgtype":"m.text"},"ts":1634573961199,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$I8CHBFhFXfZpsOozs6RiolkBZOp8UWPgnq7CwaZDJO4"},
{"content":{"body":"...wait, what happens when you say `foo.bar.baz = 3` and both .bar and .baz are getter/setter pairs","format":"org.matrix.custom.html","formatted_body":"...wait, what happens when you say <code>foo.bar.baz = 3</code> and both .bar and .baz are getter/setter pairs","msgtype":"m.text"},"ts":1634573999099,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$OmEtwFl4b1Qg45JgUL5oZVivfiTwIyjxYZO5-JPmK6A"},
{"content":{"body":"yeah it calls the .bar getter and the .baz setter, that's what i would expect","msgtype":"m.text"},"ts":1634574492027,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$BMTE5Ipptb2IVRfjjZmn3PUwADSgH0ZjE55GxWUH1D8"},
{"content":{"body":"okay raised https://github.com/js-choi/proposal-bind-this/issues/17 about it; realized while writing it that WeakMaps-as-ephemerons are the most obvious use-case.","msgtype":"m.text"},"ts":1634575218111,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$4ewYWAptIkqeTWSjVQmqViK9iuu4VlW8_5sj7wSnCvI"},
{"content":{"body":"So there could be a way to do this:\n\n`map::key ??= defaultValue`\nthatâ€™s kinda interesting ","format":"org.matrix.custom.html","formatted_body":"<p>So there could be a way to do this:</p>\n<p><code>map::key ??= defaultValue</code><br />\nthatâ€™s kinda interesting</p>","msgtype":"m.text"},"ts":1634576548585,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$v_oJ4naCSt37lPVOO95aZo-MlHXnWmrU1UC0fbft57Y"}
]