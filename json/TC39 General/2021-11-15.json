[
{"content":{"body":"Hi guys wondering if there is an existing proposal for the non-null assertion operator?\n\ne.g. \n\n```\ngetFoo()! // will throw if undefined or null is returned\n```","format":"org.matrix.custom.html","formatted_body":"<p>Hi guys wondering if there is an existing proposal for the non-null assertion operator?</p>\n<p>e.g.</p>\n<pre><code>getFoo()! // will throw if undefined or null is returned\n</code></pre>\n","msgtype":"m.text"},"ts":1636975804272,"senderName":"David Alberto Adler","senderId":"@davidadler:matrix.org","id":"$TxkVUUKlhpRH6-V9yBLio_MI0-Ej33RLQnNZivKqOFw"},
{"content":{"body":"No proposal for it as I know","msgtype":"m.text"},"ts":1636975916330,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$0_7d1_YqE7WnJGIfe66spmgbqGyvCJtyd7R52-0JsWE"},
{"content":{"body":"interesting, seems like an obvious thing which I would find super useful. I'm writing this code all day long\n\n```\nconst foo = getFoo()\nassert(foo, 'missing foo')\n```","format":"org.matrix.custom.html","formatted_body":"<p>interesting, seems like an obvious thing which I would find super useful. I'm writing this code all day long</p>\n<pre><code>const foo = getFoo()\nassert(foo, 'missing foo')\n</code></pre>\n","msgtype":"m.text"},"ts":1636976082934,"senderName":"David Alberto Adler","senderId":"@davidadler:matrix.org","id":"$3A68BahXoaQeEYWVn-rV8UUt0GQMtRnGKykyYYcfWjs"},
{"content":{"body":"I've popped it on discourse https://es.discourse.group/t/non-null-assertion-operator/1085","msgtype":"m.text"},"ts":1636976371552,"senderName":"David Alberto Adler","senderId":"@davidadler:matrix.org","id":"$AEcYg939HyGp2uMek3vxfJ0A2W1qOVSeNNsaRrQsdK4"},
{"content":{"body":"I only just today realized that the `flatMap` methods in the iterator helpers proposal can take a generator; I love that","format":"org.matrix.custom.html","formatted_body":"I only just today realized that the <code>flatMap</code> methods in the iterator helpers proposal can take a generator; I love that","msgtype":"m.text"},"ts":1636996669748,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$TGL_KIXm1zEu9Fxw4C5QO77vpxgLVNyNNzj3MvnjHY4"}
]