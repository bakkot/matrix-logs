[
{"content":{"body":"No action needed for some time, but here are some musings on how to specify `ErrorEvent`'s `filename`, `lineno`, `colno`, and cross-origin muting behavior better in the future: https://github.com/whatwg/html/issues/958#issuecomment-2182299223\n\nSummary: every throw completion should store the active ScriptOrModule + relevant ParseNode. (Either directly in the JS spec, or via a host hook.) And we'd need some way of translating ParseNode into lineno + colno, which I don't think there's any spec machinery for right now.","format":"org.matrix.custom.html","formatted_body":"<p>No action needed for some time, but here are some musings on how to specify <code>ErrorEvent</code>'s <code>filename</code>, <code>lineno</code>, <code>colno</code>, and cross-origin muting behavior better in the future: https://github.com/whatwg/html/issues/958#issuecomment-2182299223</p>\n<p>Summary: every throw completion should store the active ScriptOrModule + relevant ParseNode. (Either directly in the JS spec, or via a host hook.) And we'd need some way of translating ParseNode into lineno + colno, which I don't think there's any spec machinery for right now.</p>\n","m.mentions":{},"msgtype":"m.text"},"ts":1718959675265,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9zG3pp8jFN6KxkB225-ZgZxq94wGPvs8xeQ-utNeWwM"},
{"content":{"body":"> <@domenicdenicola:matrix.org> No action needed for some time, but here are some musings on how to specify `ErrorEvent`'s `filename`, `lineno`, `colno`, and cross-origin muting behavior better in the future: https://github.com/whatwg/html/issues/958#issuecomment-2182299223\n> \n> Summary: every throw completion should store the active ScriptOrModule + relevant ParseNode. (Either directly in the JS spec, or via a host hook.) And we'd need some way of translating ParseNode into lineno + colno, which I don't think there's any spec machinery for right now.\n\nAny chance we could, in the future, store the current AsyncContext.Snapshot at this point?","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$9zG3pp8jFN6KxkB225-ZgZxq94wGPvs8xeQ-utNeWwM?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@domenicdenicola:matrix.org\">@domenicdenicola:matrix.org</a><br><p>No action needed for some time, but here are some musings on how to specify <code>ErrorEvent</code>'s <code>filename</code>, <code>lineno</code>, <code>colno</code>, and cross-origin muting behavior better in the future: https://github.com/whatwg/html/issues/958#issuecomment-2182299223</p>\n<p>Summary: every throw completion should store the active ScriptOrModule + relevant ParseNode. (Either directly in the JS spec, or via a host hook.) And we'd need some way of translating ParseNode into lineno + colno, which I don't think there's any spec machinery for right now.</p>\n</blockquote></mx-reply>Any chance we could, in the future, store the current AsyncContext.Snapshot at this point?","m.mentions":{"user_ids":["@domenicdenicola:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9zG3pp8jFN6KxkB225-ZgZxq94wGPvs8xeQ-utNeWwM"}},"msgtype":"m.text"},"ts":1718959718642,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$uHta08fRdssshS1oRP4solINosZh27nGGJ_EK2Azy8I"},
{"content":{"body":"If that'd be useful by whatever's consuming the end result, for sure. Do you have thoughts on exposing that on `ErrorEvent`?","format":"org.matrix.custom.html","formatted_body":"If that'd be useful by whatever's consuming the end result, for sure. Do you have thoughts on exposing that on <code>ErrorEvent</code>?","m.mentions":{},"msgtype":"m.text"},"ts":1718959817124,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$qhdGAm1qyiTNIKfjgL1s-BYaXJq67aCPhCfZZqu7YuI"},
{"content":{"body":"Right, either that or just automatically running the event within that snapshot (initially leaning towards the latter, now considering the former)","m.mentions":{},"msgtype":"m.text"},"ts":1718959959156,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$XkYG-XSqdInRByq0yLAIuhIh4lGh4YKRXcjmskVpdUg"},
{"content":{"body":"https://github.com/tc39/proposal-async-context/issues/90","m.mentions":{},"msgtype":"m.text"},"ts":1718959990120,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$2Mz0PMSvh4uHLoh0SoJmnTJrRi1NU6Nt85bfwb7VyE4"},
{"content":{"body":"and the same for unhandled rejections","m.mentions":{},"msgtype":"m.text"},"ts":1718960014143,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$1B5F-_CrssdGZCpM2qQ00nebrXGU7hinIBBN7rnZUD4"},
{"content":{"body":"Nice, that might be motivation for doing some of this work sooner rather than later, then.","m.mentions":{},"msgtype":"m.text"},"ts":1718960023376,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dvXJRVOiDoleiPNH4DRbq6W6ADAhZc2-eJhb0GfiruY"},
{"content":{"body":"Or at least provide a path to follow if we ever do get around to cleaning up the `ErrorEvent` spec to the degree I'm talking about.","format":"org.matrix.custom.html","formatted_body":"Or at least provide a path to follow if we ever do get around to cleaning up the <code>ErrorEvent</code> spec to the degree I'm talking about.","m.mentions":{},"msgtype":"m.text"},"ts":1718960041984,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$v58OcfnJTlNjbHT1TpN_0T2DOxh56V7EAGfF1WdephQ"}
]