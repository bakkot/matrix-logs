[
{"content":{"body":"they're different for a reason tho :-) there's a whole closed issue on ecma262 with tons of discussion about it","m.mentions":{},"msgtype":"m.text"},"ts":1752215421920,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$B4mJVnXl4yWIUQLltx0HxipAwMyn-Pwup8tAryHeOc8"},
{"content":{"body":"This does not surprise me ðŸ˜†","msgtype":"m.text"},"ts":1752220505850,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ag20uTcTlJtEXq2KCMfgjWwzN_cndHRGeJDR8ivtYbo"},
{"content":{"body":"Ashley Claymore: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.\n\nTLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -> Symbol.iterator -> next -> etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).\n\nBy now, many years later, the reason is of course simply that it is the way that it is, because changing it poses a web compat issue.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.</p>\n<p>TLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -&gt; Symbol.iterator -&gt; next -&gt; etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).</p>\n<p>By now, many years later, the reason is of course simply that it is the way that it is, because changing it poses a web compat issue.</p>\n","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"msgtype":"m.text"},"ts":1752261698593,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$uCOchBchAGzH67NTbRecnkOug4ZwDOTHzbzRJkUkv6Y"},
{"content":{"body":"* Ashley Claymore: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.\n\nTLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -> Symbol.iterator -> next -> etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).\n\nIn practice, though, the reason is simply that it is how it is because it is that way â€” for web compat.","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.</p>\n<p>TLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -&gt; Symbol.iterator -&gt; next -&gt; etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).</p>\n<p>In practice, though, the reason is simply that it is how it is because it is that way â€” for web compat.</p>\n","m.mentions":{},"m.new_content":{"body":"Ashley Claymore: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.\n\nTLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -> Symbol.iterator -> next -> etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).\n\nIn practice, though, the reason is simply that it is how it is because it is that way â€” for web compat.","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.</p>\n<p>TLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -&gt; Symbol.iterator -&gt; next -&gt; etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).</p>\n<p>In practice, though, the reason is simply that it is how it is because it is that way â€” for web compat.</p>\n","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$uCOchBchAGzH67NTbRecnkOug4ZwDOTHzbzRJkUkv6Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752261972825,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$omcIZ4saWY3k4BTAEBseUB9gq5QOtFQXtPOhBnf5Bc4"},
{"content":{"body":"* Ashley Claymore: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.\n\nTLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -> Symbol.iterator -> next -> etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).\n\nIn practice, though, the reason is simply that it is how it is because it is that way â€” for web compat. Although having an API accept more than before and throw fewer errors would not be the most unthinkable change. Maybe, if someone puts in the time :)","format":"org.matrix.custom.html","formatted_body":"* <p><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.</p>\n<p>TLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -&gt; Symbol.iterator -&gt; next -&gt; etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).</p>\n<p>In practice, though, the reason is simply that it is how it is because it is that way â€” for web compat. Although having an API accept more than before and throw fewer errors would not be the most unthinkable change. Maybe, if someone puts in the time :)</p>\n","m.mentions":{},"m.new_content":{"body":"Ashley Claymore: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.\n\nTLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -> Symbol.iterator -> next -> etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).\n\nIn practice, though, the reason is simply that it is how it is because it is that way â€” for web compat. Although having an API accept more than before and throw fewer errors would not be the most unthinkable change. Maybe, if someone puts in the time :)","format":"org.matrix.custom.html","formatted_body":"<p><a href=\"https://matrix.to/#/@aclaymore:matrix.org\">Ashley Claymore</a>: https://stackoverflow.com/q/47155141/319266  - https://github.com/tc39/ecma262/issues/687.</p>\n<p>TLDR: Object spread is equivalent to Object.assign which tolerates undefined. Array spread actually related to iterables, not arrays specifically, and so requires an iterator (value -&gt; Symbol.iterator -&gt; next -&gt; etc), so there's more potential for unintended errors there (undefined? null? object without iterator? object with null/undefined iterator? iterator with null/undefined next function, etc).</p>\n<p>In practice, though, the reason is simply that it is how it is because it is that way â€” for web compat. Although having an API accept more than before and throw fewer errors would not be the most unthinkable change. Maybe, if someone puts in the time :)</p>\n","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$uCOchBchAGzH67NTbRecnkOug4ZwDOTHzbzRJkUkv6Y","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1752262074022,"senderName":"Timo Tijhof","senderId":"@timotijhof:matrix.org","id":"$VjQRNQ91TdBPjLnZWSo_8tj2_GoFFkTJ0y8jGyGRRPc"},
{"content":{"body":"The time to do the change is trivial; the thing in the way of making the change is that a number of people think it should not be made","m.mentions":{},"msgtype":"m.text"},"ts":1752262355232,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7Gy_nLr2KkJkyWSTZxnx2xP1OxTiZjcqulPBsF_go44"},
{"content":{"body":"(and it would indeed almost certainly be web-compat)","m.mentions":{},"msgtype":"m.text"},"ts":1752262369992,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Xtj3b5nTTbROu2yfh3UzupTXkUSt9sO4rak4QnJbfbs"},
{"content":{"body":"Personally I am much more interested in changes along the lines of making `Array.prototype[Symbol.iterator]` unforgeable so that engines could trivially elide the allocation in `...(foo ?? [])`","format":"org.matrix.custom.html","formatted_body":"Personally I am much more interested in changes along the lines of making <code>Array.prototype[Symbol.iterator]</code> unforgeable so that engines could trivially elide the allocation in <code>...(foo ?? [])</code>","m.mentions":{},"msgtype":"m.text"},"ts":1752262453638,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Vq6os_TJnTj_oiPe-Egs18F3zy7C5LB8sFv0tN3u1y4"},
{"content":{"body":"some people do not like unforgeable builtins for reasons of polyfills or whatever but I think this one would be worth it","m.mentions":{},"msgtype":"m.text"},"ts":1752262482577,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$OwnxW5C0DWDZgpH_yHYG1dDMi8ZriY03j3ws2kw-03k"},
{"content":{"body":"someday, maybe","m.mentions":{},"msgtype":"m.text"},"ts":1752262484092,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$7HNW_B3IcErW-F2AUsNbJ0B57Hv29Q7JlzMfdMABnTc"}
]