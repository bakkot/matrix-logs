[
{"content":{"body":"I lost so much time today due to an unhandled rejection from a `promise.finally()` call","format":"org.matrix.custom.html","formatted_body":"I lost so much time today due to an unhandled rejection from a <code>promise.finally()</code> call","msgtype":"m.text"},"ts":1686603406412,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$vfN9nplWxXGYqaZkHDlXZuDTrbI1rKhcaY7TPk4QHp0"},
{"content":{"body":"The `promise` itself was handled, but the new one doesn't inherit that state.","format":"org.matrix.custom.html","formatted_body":"The <code>promise</code> itself was handled, but the new one doesn't inherit that state.","msgtype":"m.text"},"ts":1686603426080,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$W7RY8dBQWozek0-TjdFjBsgjvly26xduiqMWYbSeJ_M"},
{"content":{"body":"Is this an isolated example of the problem you observed? `Promise.reject(new Error('Bad from the start')).finally(() => Promise.reject(new Error('Got worse')))`, where the unhandled rejection is `Got worse`?","format":"org.matrix.custom.html","formatted_body":"Is this an isolated example of the problem you observed? <code>Promise.reject(new Error('Bad from the start')).finally(() =&gt; Promise.reject(new Error('Got worse')))</code>, where the unhandled rejection is <code>Got worse</code>?","msgtype":"m.text"},"ts":1686603693008,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$u4Puwy_IXQ0X48FosR_A4k197dt_Qx5LugchVtLSQDc"},
{"content":{"body":"And you lost time, I presume, because `Bad from the start` was the problem hiding behind the error?","format":"org.matrix.custom.html","formatted_body":"And you lost time, I presume, because <code>Bad from the start</code> was the problem hiding behind the error?","msgtype":"m.text"},"ts":1686603762679,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$ul-7SYiNcWxiMwLswFwGiiWD8E2_vHYzUxrnhQ5KC1I"},
{"content":{"body":"If thatâ€™s the case, perhaps the mitigation is for `finally` to produce an `AggregateError`.","format":"org.matrix.custom.html","formatted_body":"If thatâ€™s the case, perhaps the mitigation is for <code>finally</code> to produce an <code>AggregateError</code>.","msgtype":"m.text"},"ts":1686603842497,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$DL52YAd_5_D4WhE-3ncB5oZJyyA_jswsrW63UcVx_VE"},
{"content":{"body":"Would be great if that was web compat","msgtype":"m.text"},"ts":1686604927890,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$q6JbDX6sB1yDp0zLOdlKROhrXxyvZZVMca0o5E5iCnY"},
{"content":{"body":"Maybe there is a way to thread that finally rejection to the unhandled exception handler, while preserving the current finally semantics of .then ","format":"org.matrix.custom.html","formatted_body":"Maybe there is a way to thread that finally rejection to the unhandled exception handler, while preserving the current finally semantics of .then","msgtype":"m.text"},"ts":1686605024070,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$YA3n72upeH4XPUU3al4ZVkL63WuzXNzFx2FQLiMxZlw"},
{"content":{"body":"If want to be more compat ","format":"org.matrix.custom.html","formatted_body":"If want to be more compat","msgtype":"m.text"},"ts":1686605034663,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$WLi-DLaq232OHxuU6frHtH8Yh2o500aD70P_fV8SbFE"},
{"content":{"body":"Orâ€¦drumrollâ€¦ `promise.finalÃ©()`","format":"org.matrix.custom.html","formatted_body":"Orâ€¦drumrollâ€¦ <code>promise.finalÃ©()</code>","msgtype":"m.text"},"ts":1686605046598,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$8U3jXfCrfmBCUNps7RM2-Vi2t4H62s_e_79wO5qiCXk"},
{"content":{"body":"or just `.fin` ðŸŽ¥ ","format":"org.matrix.custom.html","formatted_body":"or just <code>.fin</code> ðŸŽ¥","msgtype":"m.text"},"ts":1686605079580,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$0WMyWip-wEiZKUDNo-z-qm5z9mwsyiGuNwviOeLhhjs"}
]