[
{"content":{"body":"yeah I guess I'm probably over-indexing on the operator syntax of void in my skepticism of void. \"lost\" is a good characterization. But still, _ has recognition from other languages.","m.mentions":{},"msgtype":"m.text"},"ts":1705931783833,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$9cZTP9uUpZKZvZN991n31dLvqKfNi3ZFXgANIjo7658"},
{"content":{"body":"> <@littledan:matrix.org> yeah I guess I'm probably over-indexing on the operator syntax of void in my skepticism of void. \"lost\" is a good characterization. But still, _ has recognition from other languages.\n\nI'm not sure if the recognition from other languages outweighs the established use(s) of `_` in the JS ecosystem. I assume most JS devs would associate it with \"bag of utility functions\", not necessarily with \"unused\".","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$9cZTP9uUpZKZvZN991n31dLvqKfNi3ZFXgANIjo7658?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@littledan:matrix.org\">@littledan:matrix.org</a><br>yeah I guess I&#39;m probably over-indexing on the operator syntax of void in my skepticism of void. &quot;lost&quot; is a good characterization. But still, _ has recognition from other languages.</blockquote></mx-reply>I'm not sure if the recognition from other languages outweighs the established use(s) of <code>_</code> in the JS ecosystem. I assume most JS devs would associate it with \"bag of utility functions\", not necessarily with \"unused\".","m.mentions":{"user_ids":["@littledan:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$9cZTP9uUpZKZvZN991n31dLvqKfNi3ZFXgANIjo7658"}},"msgtype":"m.text"},"ts":1705933768507,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$rTFmts-5ku8B6xyKnOEQ7keSvEVi0WLkwtJOuzPgptQ"},
{"content":{"body":"Yeah, that's fair. At least the _ is *locally* unambiguous/compatible","format":"org.matrix.custom.html","formatted_body":"Yeah, that's fair. At least the _ is <em>locally</em> unambiguous/compatible","m.mentions":{},"msgtype":"m.text"},"ts":1705935989898,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$JlC03YvPiGy-fhACLFPr2z845St9Rb4qzZJtx6pvLWY"},
{"content":{"body":"really, `void` for this purpose is even somehow more apt than `void` for C, isn't it","format":"org.matrix.custom.html","formatted_body":"really, <code>void</code> for this purpose is even somehow more apt than <code>void</code> for C, isn't it","m.mentions":{},"msgtype":"m.text"},"ts":1705936010440,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$jELA38AfAdElBNyAo_0oivYpUELO3YxIwlnpzFeR1lA"},
{"content":{"body":"Use of _ I’ve encountered is not as a black hole (void) but as a readable reference to the last thing bound. ","format":"org.matrix.custom.html","formatted_body":"Use of _ I’ve encountered is not as a black hole (void) but as a readable reference to the last thing bound.","msgtype":"m.text"},"ts":1705936253307,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$Uv8V_pmitggUNMMd5GJJrdMZRDOpbTckblLSi4qvAFE"},
{"content":{"body":"oh yeah I guess overloading both of those in the same thing is weird","m.mentions":{},"msgtype":"m.text"},"ts":1705936299356,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$Ag9zaQykTVJOUDbd8AAAVUEPMF9iZIDNIW_QdyFp1lk"},
{"content":{"body":"I feel like _ is off the table since it's already a valid identifier ","msgtype":"m.text"},"ts":1705939797843,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$IFDknQCc7gZ1HEAXNgWujjAehOf-T3r0CYGQMve7nUo"},
{"content":{"body":"> <@devsnek:matrix.org> I feel like _ is off the table since it's already a valid identifier\n\nthe idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error when bound in an invalid duplicate way (eg strict mode parameters)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$IFDknQCc7gZ1HEAXNgWujjAehOf-T3r0CYGQMve7nUo?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>I feel like _ is off the table since it&#39;s already a valid identifier </blockquote></mx-reply>the idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error when bound in an invalid duplicate way (eg strict mode parameters)","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$IFDknQCc7gZ1HEAXNgWujjAehOf-T3r0CYGQMve7nUo"}},"msgtype":"m.text"},"ts":1705939944394,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$v3sgq6k_hSPLKQMz0XJwfHsftFf35Yg-eNSfYNxS_7M"},
{"content":{"body":"> <@devsnek:matrix.org> I feel like _ is off the table since it's already a valid identifier\n\n * the idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error (*for usage, not definition*) when bound in an invalid duplicate way (eg strict mode parameters)","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$IFDknQCc7gZ1HEAXNgWujjAehOf-T3r0CYGQMve7nUo?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@devsnek:matrix.org\">@devsnek:matrix.org</a><br>I feel like _ is off the table since it's already a valid identifier </blockquote></mx-reply> * the idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error (<em>for usage, not definition</em>) when bound in an invalid duplicate way (eg strict mode parameters)","m.mentions":{},"m.new_content":{"body":"the idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error (*for usage, not definition*) when bound in an invalid duplicate way (eg strict mode parameters)","format":"org.matrix.custom.html","formatted_body":"the idea is to stay with its current semantics wherever valid, and just introduce a TDZ or syntax error (<em>for usage, not definition</em>) when bound in an invalid duplicate way (eg strict mode parameters)","m.mentions":{"user_ids":["@devsnek:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$v3sgq6k_hSPLKQMz0XJwfHsftFf35Yg-eNSfYNxS_7M","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1705939954829,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$67C_drxa9jkcBEY4xOsVtVRvN5wnbfEzPNmR_jF_GCM"}
]