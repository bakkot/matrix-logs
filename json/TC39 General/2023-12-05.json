[
{"content":{"body":"I still don't understand why service workers can't wait until all modules have fully evaluated to deliver the events. The implementations ought to be capable of detecting when the evaluation won't make further forward progress, and error if the module graph has not been fully evaluated, indicating a top level await is suspended on an event to be delivered, which should be the only violation.","msgtype":"m.text"},"ts":1701750208118,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$-KMKx38MYIHOksJw97BRwLsWfNuTFfUF33AXtSZrih0"},
{"content":{"body":"yes they can, but I think that will be a deficit in the user experience (I don't know but I think web requests are blocked until sw initialized)","msgtype":"m.text"},"ts":1701759106660,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$iCv2Hb4lNlOz-Xgk7bQkLz7G-RR2CFQDMsB0W3DfGl8"},
{"content":{"body":"Indeed, a goal with SWs is that the runtime can be instantiated and discarded quickly. If instantiation needs to be awaited, that would go counter to those goals. https://github.com/w3c/ServiceWorker/issues/1407 has a bunch of the background.","m.mentions":{},"msgtype":"m.text"},"ts":1701766677302,"senderName":"annevk","senderId":"@annevk:matrix.org","id":"$OIkiG8AF7NkUuAFM7cdgnm0i6IXa8y36Gf2lyH5Me1Y"},
{"content":{"body":"But a top level await does not necessarily mean an actual delay. It could be as short as a microtask for a resolved promise. A typical use case is awaiting a dynamic import, which is arguably equivalent to a static import (besides ahead of time module graph analysis).\nIMO discouraging bad patterns should not disable part of the language, it could instead be done the same way other bad patterns are discouraged: metrics and perf reports.","msgtype":"m.text"},"ts":1701780322446,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$J7DJQNOnXE65s6d-ymWi26QH06NEOJMWLiKY3d4PNG8"},
{"content":{"body":"SWs make many other compromises of this type","msgtype":"m.text"},"ts":1701781145002,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$ubUaktRMUZowJv7WcoO9g2mvr5hwA-Po-Pzicmt3Sg4"}
]