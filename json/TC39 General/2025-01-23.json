[
{"content":{"body":"I'm not sure if this is of interest to this group, but our next survey will focus on AI tools for web developement. Currently in the preview/feedback phase if you want to make some suggestions: https://github.com/Devographics/surveys/issues/278","m.mentions":{},"msgtype":"m.text"},"ts":1737597259603,"senderName":"Sacha Greif","senderId":"@sachag:matrix.org","id":"$tcWbQ62AgRihBrEn9vPdfBZkSU-WhDyNIUGKX7BJx5A"},
{"content":{"body":"make sure to have \"do not use\" options","m.mentions":{},"msgtype":"m.text"},"ts":1737607429383,"senderName":"Meghan Denny","senderId":"@meghanbun:matrix.org","id":"$h9dlywqTQTJ3sPKpOVj_FtRpckSf9IgVY5s2bNJYIFk"},
{"content":{"body":"also \"use but never want on by default\"","m.mentions":{},"msgtype":"m.text"},"ts":1737611713319,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$Df8bcdjn1uQQgKW2n9ZETJWUTOGLzlDwVt82NBWlJKk"},
{"content":{"body":"does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test `.deref` behavior?","format":"org.matrix.custom.html","formatted_body":"does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test <code>.deref</code> behavior?","m.mentions":{},"msgtype":"m.text"},"ts":1737668761665,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$E5iy5clRTQtx33K1GFcMB0XS2s77u9d_Qdr0Y-S5Rak"},
{"content":{"body":"* does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test `.deref` behavior?\n\nif i make my tests spin for like 10-20 seconds, then i can make it happen, but obviously i'd rather not do that","format":"org.matrix.custom.html","formatted_body":"* <p>does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test <code>.deref</code> behavior?</p>\n<p>if i make my tests spin for like 10-20 seconds, then i can make it happen, but obviously i'd rather not do that</p>\n","m.mentions":{},"m.new_content":{"body":"does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test `.deref` behavior?\n\nif i make my tests spin for like 10-20 seconds, then i can make it happen, but obviously i'd rather not do that","format":"org.matrix.custom.html","formatted_body":"<p>does anyone know of an available-by-default way to trigger a GC - any GC whatsoever as long as I can first make a weakref to it - so i can test <code>.deref</code> behavior?</p>\n<p>if i make my tests spin for like 10-20 seconds, then i can make it happen, but obviously i'd rather not do that</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$E5iy5clRTQtx33K1GFcMB0XS2s77u9d_Qdr0Y-S5Rak","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737668793708,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$3XDsG2mHOL3Zao1yJIODeJI2Th77-x2IjtgKU1_niVo"},
{"content":{"body":"I've seen test262 harnesses create lots of array buffers to try and trigger memory pressure ","format":"org.matrix.custom.html","formatted_body":"I've seen test262 harnesses create lots of array buffers to try and trigger memory pressure ","msgtype":"m.text"},"ts":1737669407788,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$ToUER17fL9Aqiw9xeUGVSnoejhTTByaTAU7qG4kMQdg"},
{"content":{"body":"ah but there's no guarantee that a GC will clear a weakref","m.mentions":{},"msgtype":"m.text"},"ts":1737669817743,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$g0v72xQ0gwfXul9sfiJRRrbb5kq7GJ-ayC6M6pXSUrQ"},
{"content":{"body":"there is no ironclad way really","m.mentions":{},"msgtype":"m.text"},"ts":1737669828449,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$HzIE2fvDDl2sZd217UW8y_pqgap2vQjefctT_Xwch5o"},
{"content":{"body":"also you want to trigger a GC async","m.mentions":{},"msgtype":"m.text"},"ts":1737669864380,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$C32lpgVMR9qhs0Ezxw7UUUPdFfjMhoHFmOOiAmJTyLE"},
{"content":{"body":"because on-stack roots with a JS stack can retain things in ways that are completely nonobvious at the JS source level","m.mentions":{},"msgtype":"m.text"},"ts":1737669882325,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$gEdfQD12LYq3MebyzP-5otyQWsixq-hGiEd7KDMW27c"},
{"content":{"body":"`window.reload()`should work ","format":"org.matrix.custom.html","formatted_body":"`window.reload()`should work ","msgtype":"m.text"},"ts":1737670025002,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$bDRMG-ACu4K2IZ0Sm4t_SIiYARWAn39O4XsV7EtdFZs"},
{"content":{"body":"ljharb: in what env?","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: in what env?","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1737670113006,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$pfrBGe6NJoqfqQ8nVV8AESkFKrcMR1xNdZmJzTuup3s"},
{"content":{"body":"ideally in node and the 3 browsers, at least :-)","m.mentions":{},"msgtype":"m.text"},"ts":1737670144197,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$DkoF7RGTaEKqoQx9L734QmymWTLOcFOY4_vpghdxxTc"},
{"content":{"body":"async is totally fine, just ideally it doesn't sleep my tests so much","m.mentions":{},"msgtype":"m.text"},"ts":1737670153064,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$mmsXPrAEsePpBlfr_lYoZKxN-pJQMc4kzHIDf9tRGME"},
{"content":{"body":"this is also what i see in exploit chains that depend on a GC","m.mentions":{"user_ids":["@aclaymore:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$ToUER17fL9Aqiw9xeUGVSnoejhTTByaTAU7qG4kMQdg"}},"msgtype":"m.text"},"ts":1737670181677,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$TYfPiLwvRVidq6ih7w7Zo2uBqsyZTHodxccDQ2_7P-U"},
{"content":{"body":"the way i do it now is:\n```\n\t\t\tvar holder = { x: {} };\n\t\t\tvar ref = new WeakRef(holder.x);\n\t\t\tdelete holder.x;\n\t\t\tholder = null;\n\t\t\tsetTimeout(function () {\n\t\t\t\t// assertion on ref.deref()\n\t\t\t}, 20e3);\n```","format":"org.matrix.custom.html","formatted_body":"<p>the way i do it now is:</p>\n<pre><code>\t\t\tvar holder = { x: {} };\n\t\t\tvar ref = new WeakRef(holder.x);\n\t\t\tdelete holder.x;\n\t\t\tholder = null;\n\t\t\tsetTimeout(function () {\n\t\t\t\t// assertion on ref.deref()\n\t\t\t}, 20e3);\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1737670183992,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$aA0q7uxdevag2Fs8TKNnEv8c-HKj8oyQyEOBp9t0RfA"},
{"content":{"body":"no finalizationregistry?","m.mentions":{},"msgtype":"m.text"},"ts":1737670196752,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$5iN_lkZM8hSR5w188uKAXG_Ht7LwzMgKsX43rofhJjw"},
{"content":{"body":"node has:  \n\nhttps://nodejs.org/docs/v22.13.1/api/cli.html#--expose-gc","m.mentions":{},"msgtype":"m.text"},"ts":1737670202190,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$tWoRegX2g2njbpoOsDH34G0FDBE3q98vetZUOld_rNA"},
{"content":{"body":"> <@shuyuguo:matrix.org> this is also what i see in exploit chains that depend on a GC\n\nI promise it wasn't me ","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24TYfPiLwvRVidq6ih7w7Zo2uBqsyZTHodxccDQ2_7P-U\">In reply to</a> <a href=\"https://matrix.to/#/@shuyuguo:matrix.org\">@shuyuguo:matrix.org</a><br>this is also what i see in exploit chains that depend on a GC</blockquote></mx-reply>I promise it wasn't me ","m.relates_to":{"m.in_reply_to":{"event_id":"$TYfPiLwvRVidq6ih7w7Zo2uBqsyZTHodxccDQ2_7P-U"}},"msgtype":"m.text"},"ts":1737670204389,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$GyaXyGVJNJmAs_BwOHNOufRGxfv0idKgXHBaJpkdqCI"},
{"content":{"body":"a finalization registry would be more efficient and reliable than a settimeout, true, but my tests would still have to pause until it was collected","m.mentions":{},"msgtype":"m.text"},"ts":1737670228936,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$cB5NALIZlrqOhGJLdr7wBCP8mDX9i8O1h439SpZeDaQ"},
{"content":{"body":"i don't hate on exploit writers, they're better than me","m.mentions":{},"msgtype":"m.text"},"ts":1737670232550,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$mKCkw12fQJsWOPZTPmzSCgjEAB_pKKolYjrZybhY_8w"},
{"content":{"body":"* a finalization registry would be more efficient and reliable than a settimeout, true, but my tests would still have to pause until it was collected. node's expose-gc won't work because i don't want to have to use flags, and that won't work in browsers anyways","m.mentions":{},"m.new_content":{"body":"a finalization registry would be more efficient and reliable than a settimeout, true, but my tests would still have to pause until it was collected. node's expose-gc won't work because i don't want to have to use flags, and that won't work in browsers anyways","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$cB5NALIZlrqOhGJLdr7wBCP8mDX9i8O1h439SpZeDaQ","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737670243362,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$AROPjNvvLFRQ_jXp68qxJ4VOXd3qLRG_pYa_rZ8RFSo"},
{"content":{"body":"rising tide","format":"org.matrix.custom.html","formatted_body":"rising tide","msgtype":"m.text"},"ts":1737670263767,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$hgtf33Dw9Md0UB6hXmQ87_z-QJDULDN9coW3hLEQRkE"},
{"content":{"body":"ljharb: a portable way basically doesn't exist","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@ljharb:matrix.org\">ljharb</a>: a portable way basically doesn't exist","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"msgtype":"m.text"},"ts":1737670263908,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$NTYQb4vrrXvbf0dz3E0SSxWFzpqbQq4iuM2zE6wqSSI"},
{"content":{"body":"like, by design, it doesn't exist","m.mentions":{},"msgtype":"m.text"},"ts":1737670271302,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$U4Lq3mHjgzy7_Cxp7mLFkpnFwS96xuO2bM-LJO8Xt1w"},
{"content":{"body":"looks like you've gotta fork every browser, friend","m.mentions":{"user_ids":["@ljharb:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$cB5NALIZlrqOhGJLdr7wBCP8mDX9i8O1h439SpZeDaQ"}},"msgtype":"m.text"},"ts":1737670278107,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$ZQmk3PxCDKp3bgi5U5Ajw3QNXQVlgYuWVtKXnbKX0a4"},
{"content":{"body":"right","m.mentions":{},"msgtype":"m.text"},"ts":1737670281130,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$FcwtxteYudtVTyz_ZeShQWzC8nKQe_p2oojfJzLZdb0"},
{"content":{"body":"it's fine if i have to do a different way for each engine :-p i just hoped there'd be some way to make it pretty likely it happens","m.mentions":{},"msgtype":"m.text"},"ts":1737670304792,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$--67Yg-41YMEGOxoNtUJPb2OMmwPBxYZJR6qoC_eVcI"},
{"content":{"body":"what sorcery are you doing this for anyway?","m.mentions":{},"msgtype":"m.text"},"ts":1737670345994,"senderName":"Chris de Almeida","senderId":"@softwarechris:matrix.org","id":"$00jFwwdqjzLFrAQbwc7W255Es52WZmMaF0tz8JoyCPE"},
{"content":{"body":"i think allocating a lot of big-ish ArrayBuffers (but not so big that a single allocation will throw a RangeError) is a good high-likelihood way","m.mentions":{},"msgtype":"m.text"},"ts":1737670348323,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$5ZqBQG36JFpALYBGy_gWusG2pnG-b2ymL1_2j7GxloY"},
{"content":{"body":"https://chromedevtools.github.io/devtools-protocol/tot/HeapProfiler/#method-collectGarbage if the test runner has access ","format":"org.matrix.custom.html","formatted_body":"https://chromedevtools.github.io/devtools-protocol/tot/HeapProfiler/#method-collectGarbage if the test runner has access ","msgtype":"m.text"},"ts":1737670392023,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$HDtPzIaxhItwIqrnNHUwhn2z6OBXX2-r-1LEh7O4GKI"},
{"content":{"body":"any sustained allocation, really","m.mentions":{},"msgtype":"m.text"},"ts":1737670422338,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$2ZYq88cfJmngIliYz0v-F6ngWcs2T7aLZ8BQDeGzXho"},
{"content":{"body":"```\n    for (let i = 0; i < 10000; i++) {\n      let s = new String(\"AAAA\" + Math.random());\n    }\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>    for (let i = 0; i &lt; 10000; i++) {\n      let s = new String(\"AAAA\" + Math.random());\n    }\n</code></pre>\n","m.mentions":{},"msgtype":"m.text"},"ts":1737670455878,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$21AtxwE3AIuEnCMsTrxIUPVKWn2-KewqQbCHB2jzCpY"},
{"content":{"body":"i've seen that in some fuzz tests","m.mentions":{},"msgtype":"m.text"},"ts":1737670461010,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$3GD-D6P0Y9_vT6erz-b0vvj0IUfj-pNtKeYrM5BZ2U0"},
{"content":{"body":"your sleep test i think is depending on \"idle gc\", which engines try to schedule a GC task when nothing else seems to be happening","m.mentions":{},"msgtype":"m.text"},"ts":1737670637025,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$l9QiqGUBQ19kXaQgUIyCh1dgBIXJEVfGv6Bo5ksLXAA"},
{"content":{"body":"that was indeed the intent","m.mentions":{},"msgtype":"m.text"},"ts":1737670772703,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$YL_X-yDTC1q0BpNFhrQsg5lknhVT8Go7D6arhal2ZdI"},
{"content":{"body":"* that was indeed the intent, i hadn't thought about memory pressure","m.mentions":{},"m.new_content":{"body":"that was indeed the intent, i hadn't thought about memory pressure","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$YL_X-yDTC1q0BpNFhrQsg5lknhVT8Go7D6arhal2ZdI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1737670779638,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$rjR6saGLCdpjqIFNVd5DDGLDs0ZHrQ3q_JOmirnBM4Y"}
]