[
{"content":{"body":"We have a 262 issue for that","msgtype":"m.text"},"ts":1639700064733,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$DD5uVew-MuazR_7Uz-MDk74m6-WY71DFmlyBXfW5oBY"},
{"content":{"body":"https://github.com/tc39/ecma262/issues/1849","msgtype":"m.text"},"ts":1639700090538,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$V0j4QDOLIq5m6L5PiXpgl1TQZUV-Zv6Bl2cWSbClMzI"},
{"content":{"body":"Looks like you and I arrived at the same conclusion","msgtype":"m.text"},"ts":1639700222503,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$86Ywh7nl67MbPZWUbyuVzbr17ke4fhOd-_V_U5G8OrY"},
{"content":{"body":"Lol, yah down to the step number","msgtype":"m.text"},"ts":1639700312805,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$0UsrjIOXyqmVWHTZijuGMT7ORiFXGTZ6WI1FzYOdIV4"},
{"content":{"body":"Actually rejecting the capability wouldn't close the sync iterator, would it? That's the problem today, the rejection flows into the promise capability, and into the consumer of the async iterator, which then quarantines the async iterator","msgtype":"m.text"},"ts":1639700571983,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$mV-2JXjtBWv3R6V-Wm8BVp4tdki-xjiwk5uOvmPQ_Lw"},
{"content":{"body":"It should, given a `throw` will close via the `IfAbruptRejectPromise`, which just calls `capability.[[Reject]]`","format":"org.matrix.custom.html","formatted_body":"It should, given a <code>throw</code> will close via the <code>IfAbruptRejectPromise</code>, which just calls <code>capability.[[Reject]]</code>","msgtype":"m.text"},"ts":1639702745486,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NaWsW4vSmV3Uz5JTz_K7dp6UzMw6nWR1fBI2iqDkqIw"},
{"content":{"body":"I don't see it","msgtype":"m.text"},"ts":1639702942843,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$zlLyXOdNSLV5UpzgLudRW9vbkcUVFVquhFl4V7Id3as"}
]