[
{"content":{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","mimetype":"text/plain"},{"body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909339921,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$0TdQnjX8In8YaND3mNGxdzS7kVNDkfx3ivCJPh3FtzE"},
{"content":{"body":" * JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\n// If it exists, delete the ./mod.js file\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","format":"org.matrix.custom.html","formatted_body":" * <p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">// If it exists, delete the ./mod.js file\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","m.new_content":{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\n// If it exists, delete the ./mod.js file\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">// If it exists, delete the ./mod.js file\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\n// If it exists, delete the ./mod.js file\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","mimetype":"text/plain"},{"body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">// If it exists, delete the ./mod.js file\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0TdQnjX8In8YaND3mNGxdzS7kVNDkfx3ivCJPh3FtzE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\n// If it exists, delete the ./mod.js file\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","mimetype":"text/plain"},{"body":" * <p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">// If it exists, delete the ./mod.js file\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\n// Create the ./mod.js file, a valid ECMAScript module\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909345289,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$VKhY28ie49_32jieGS0YgPfk_OSjQoENp4SUfXgVdLI"},
{"content":{"body":" * JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","format":"org.matrix.custom.html","formatted_body":" * <p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","m.new_content":{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","format":"org.matrix.custom.html","formatted_body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","mimetype":"text/plain"},{"body":"<p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0TdQnjX8In8YaND3mNGxdzS7kVNDkfx3ivCJPh3FtzE","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * JavaScript question. This code should log `FAIL 1` in the first part, but is it true that the second part is host-defined?\n\n```js\nawait deleteFileIfExists(\"./mod.js\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 1\");\n} catch {\n  console.log(\"FAIL 1\");\n}\n\nawait createFile(\"./mod.js\", \"export const x = 1\");\n\ntry {\n  await import(\"./mod.js\");\n  console.log(\"OK 2\");\n} catch {\n  console.log(\"FAIL 2\");\n}\n```","mimetype":"text/plain"},{"body":" * <p>JavaScript question. This code should log <code>FAIL 1</code> in the first part, but is it true that the second part is host-defined?</p>\n<pre><code class=\"language-js\">await deleteFileIfExists(&quot;./mod.js&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 1&quot;);\n} catch {\n  console.log(&quot;FAIL 1&quot;);\n}\n\nawait createFile(&quot;./mod.js&quot;, &quot;export const x = 1&quot;);\n\ntry {\n  await import(&quot;./mod.js&quot;);\n  console.log(&quot;OK 2&quot;);\n} catch {\n  console.log(&quot;FAIL 2&quot;);\n}\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909389687,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$iqyiPnS_gDf8O_dYfeCY3YTqAY_PNGO_ppoF2mUgHGM"},
{"content":{"body":"(node logs `OK 2`, Deno and Firefox log `FAIL 2`)","format":"org.matrix.custom.html","formatted_body":"(node logs <code>OK 2</code>, Deno and Firefox log <code>FAIL 2</code>)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(node logs `OK 2`, Deno and Firefox log `FAIL 2`)","mimetype":"text/plain"},{"body":"(node logs <code>OK 2</code>, Deno and Firefox log <code>FAIL 2</code>)","mimetype":"text/html"}]},"ts":1655909438048,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$aLpfF1nKGJqVpU_S6YUwnaZ1pL0nrXMeev9uJv88qbE"},
{"content":{"body":"In my opinion, the promises returned by import should be memoized, but I do not know where the spec stands.","msgtype":"m.text","org.matrix.msc1767.text":"In my opinion, the promises returned by import should be memoized, but I do not know where the spec stands."},"ts":1655909440690,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$kGpTUvh8A7kK0i1Dh2IKf0GVQH9qBDV3wKZiYike2Eo"},
{"content":{"body":"At least, the eventual settlements should be memoized.","msgtype":"m.text","org.matrix.msc1767.text":"At least, the eventual settlements should be memoized."},"ts":1655909475930,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$5NTprjMXnYbL4caiVQqBHI5CVEJEpQ-3JnhGQ5Psecc"},
{"content":{"body":"yeah, so fresh promise. consistent settle? To avoid global mutable state","msgtype":"m.text","org.matrix.msc1767.text":"yeah, so fresh promise. consistent settle? To avoid global mutable state"},"ts":1655909496153,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$DcKM8ZsOkNZdZfXEW6KtCYDSHhMLsSKiLR1SVDrIo20"},
{"content":{"body":"That would be satisfactory in my opinion, but I do not know where the spec stands.","msgtype":"m.text","org.matrix.msc1767.text":"That would be satisfactory in my opinion, but I do not know where the spec stands."},"ts":1655909541002,"senderName":"Kris Kowal","senderId":"@kriskowal:matrix.org","id":"$bBe-0Jq8bxYXuO27aNtqxvgsaJE3mmhbW0t5y-bEI94"},
{"content":{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","format":"org.matrix.custom.html","formatted_body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","mimetype":"text/plain"},{"body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909755149,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw"},
{"content":{"body":" * do Node, Deno and Firefox module systems support query params as a way to force a fresh module\n\n```\nimport(`./mod.js?n=${i++}`);\n```","format":"org.matrix.custom.html","formatted_body":" * <p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","m.new_content":{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module\n\n```\nimport(`./mod.js?n=${i++}`);\n```","format":"org.matrix.custom.html","formatted_body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module\n\n```\nimport(`./mod.js?n=${i++}`);\n```","mimetype":"text/plain"},{"body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * do Node, Deno and Firefox module systems support query params as a way to force a fresh module\n\n```\nimport(`./mod.js?n=${i++}`);\n```","mimetype":"text/plain"},{"body":" * <p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909763763,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$EcJtnz6D4QHZTNQiONVTFIT7OeJTr4R8USiq3rJyTe8"},
{"content":{"body":" * do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","format":"org.matrix.custom.html","formatted_body":" * <p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","m.new_content":{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","format":"org.matrix.custom.html","formatted_body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","mimetype":"text/plain"},{"body":"<p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * do Node, Deno and Firefox module systems support query params as a way to force a fresh module?\n\n```\nimport(`./mod.js?n=${i++}`);\n```","mimetype":"text/plain"},{"body":" * <p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n","mimetype":"text/html"}]},"ts":1655909774597,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$yAXT9R6voG1A8zd8Iaz9g7q8YCYy87rC4Pd1OIzZ9bQ"},
{"content":{"body":"This behaviour was allowed to be host-defined in https://github.com/tc39/ecma262/pull/1645 I believe.","msgtype":"m.text","org.matrix.msc1767.text":"This behaviour was allowed to be host-defined in https://github.com/tc39/ecma262/pull/1645 I believe."},"ts":1655909811000,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$q-tAh_y019T3Uq07G4OITWJ6mW7P3OsBsSz38CRPtcM"},
{"content":{"body":"HTML had plans to add support for enabling these sorts of retries, but as far as I know it hasn't been implemented in any browser","msgtype":"m.text","org.matrix.msc1767.text":"HTML had plans to add support for enabling these sorts of retries, but as far as I know it hasn't been implemented in any browser"},"ts":1655909838310,"senderName":"guybedford","senderId":"@guybedford:matrix.org","id":"$Z6BRgLYtl7U9HD_HASGSI3qjtur1kOMx7enbwyKPPSo"},
{"content":{"body":"Oh thank you!","msgtype":"m.text","org.matrix.msc1767.text":"Oh thank you!"},"ts":1655909848406,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$i51K8JqVDnbBx-9MYQEqB2eoHoskTn3tnFIJPLkQJ9A"},
{"content":{"body":"Yes, they all consider them as different modules","format":"org.matrix.custom.html","formatted_body":"Yes, they all consider them as different modules","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yes, they all consider them as different modules","mimetype":"text/plain"},{"body":"Yes, they all consider them as different modules","mimetype":"text/html"}],"m.relates_to":{"m.in_reply_to":{"event_id":"$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw"}}},"ts":1655911732629,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$kFG0WfOXMygvZN7QdFplqx_WidHqN0Ofr2RxhovuT-Q"},
{"content":{"body":" * Yes, they all consider them as different modules","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br><p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n</blockquote></mx-reply> * Yes, they all consider them as different modules","m.new_content":{"body":"Yes, they all consider them as different modules","format":"org.matrix.custom.html","formatted_body":"Yes, they all consider them as different modules","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Yes, they all consider them as different modules","mimetype":"text/plain"},{"body":"Yes, they all consider them as different modules","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$kFG0WfOXMygvZN7QdFplqx_WidHqN0Ofr2RxhovuT-Q","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * Yes, they all consider them as different modules","mimetype":"text/plain"},{"body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$0TUq2KcLXGJlmYfFzeR-Q5svUk3-ykCMqFWWKsJkWNw?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@aclaymore:matrix.org\">@aclaymore:matrix.org</a><br><p>do Node, Deno and Firefox module systems support query params as a way to force a fresh module?</p>\n<pre><code>import(`./mod.js?n=${i++}`);\n</code></pre>\n</blockquote></mx-reply> * Yes, they all consider them as different modules","mimetype":"text/html"}]},"ts":1655911737852,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$zv0s_NVKg_R1Pdq7VLOLowG8K33e6apam2td8oCIvEM"}
]