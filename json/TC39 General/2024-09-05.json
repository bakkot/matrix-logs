[
{"content":{"body":"what's up with the requirement that if the target is not extensible, proxy ownKeys can't return a different set of keys?","m.mentions":{},"msgtype":"m.text"},"ts":1725565063341,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$x0JyDK6lHMqt3XMlj7Oj_272tynu60o4ki8B8htRjss"},
{"content":{"body":"like if i define the other traps to behave consistently, shouldn't it be fine","m.mentions":{},"msgtype":"m.text"},"ts":1725565094611,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$w-SZzSphAkr5YqRbVDgnBbYpettKmNhcbbD5MGSzQaU"},
{"content":{"body":"I guess it's because otherwise there is no way to guarantee that it behaves as not extensible ","msgtype":"m.text"},"ts":1725565530000,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tzFc9Fdppo4TTQ77C-tr62YLTwMyv3_F9BOYtf2dEOk"},
{"content":{"body":"how could it know that the other traps behave consistently without calling them?","m.mentions":{},"msgtype":"m.text"},"ts":1725566023340,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$_MnoKI8-aMMBcMPZpp2v326rk_oh--fK5h5o_wFiXh0"},
{"content":{"body":"or remembering their results, I suppose","m.mentions":{},"msgtype":"m.text"},"ts":1725566043691,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$QNI_iIAqo_N8qhm328GbgLttreC8K-FVnDbXMDVLcos"},
{"content":{"body":"you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants. and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":"you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants. and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","m.mentions":{},"msgtype":"m.text"},"ts":1725566175036,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$UIHScejrLUkQuGImz95acYI3PJBuTO_vRBDM-Ner4CI"},
{"content":{"body":" * you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (or at least, is as consistent as the underlying thing). and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":" * you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (or at least, is as consistent as the underlying thing). and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","m.mentions":{},"m.new_content":{"body":"you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (or at least, is as consistent as the underlying thing). and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":"you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (or at least, is as consistent as the underlying thing). and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UIHScejrLUkQuGImz95acYI3PJBuTO_vRBDM-Ner4CI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725566200213,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$NChm03qXED_f8cm50iY3E4j8Kza1Yf_ZqT_Mw28nUpc"},
{"content":{"body":" * you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).\n\nand one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":" * <p>you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).</p>\n<p>and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.</p>\n","m.mentions":{},"m.new_content":{"body":"you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).\n\nand one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":"<p>you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).</p>\n<p>and one of the behaviors is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UIHScejrLUkQuGImz95acYI3PJBuTO_vRBDM-Ner4CI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725566220970,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$t97JkDAgkk1aPfrYy5Jdm5QV4t6mX9i3RbwGiZVuEfo"},
{"content":{"body":" * you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).\n\nand one of the invariants is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":" * <p>you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).</p>\n<p>and one of the invariants is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.</p>\n","m.mentions":{},"m.new_content":{"body":"you should understand the target as serving as a _witness_, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).\n\nand one of the invariants is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.","format":"org.matrix.custom.html","formatted_body":"<p>you should understand the target as serving as a <em>witness</em>, a proof-by-example that the behavior you are representing is consistent with the essential invariants (at least assuming that you don't already have something inconsistent to use as the target).</p>\n<p>and one of the invariants is, if something is reported to be not-extensible, then it will never get new keys. the way this is enforced is, a proxy can only report being not-extensible if its target is not-extensible, and if the target is not-extensible then it must report having the same keys as the target. if either of these properties was not enforced then you could have behavior which is not consistent with the essential invariants.</p>\n","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$UIHScejrLUkQuGImz95acYI3PJBuTO_vRBDM-Ner4CI","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1725566235395,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$j-_9iyxmqX97bcd1QOtGzJ2VAwqAXwEClNJnkbEUOPI"}
]