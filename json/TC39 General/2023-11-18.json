[
{"content":{"body":"Jack Works: When you introduce CoverXandY, you need to use it (instead of X or Y) in those contexts where the conflict/ambiguity exists. So if you're introducing CoverExpressionStatementAndWhatever, you'd have to change the Statement production to use that instead of ExpressionStatement. I think.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jackworks:matrix.org\">Jack Works</a>: When you introduce CoverXandY, you need to use it (instead of X or Y) in those contexts where the conflict/ambiguity exists. So if you're introducing CoverExpressionStatementAndWhatever, you'd have to change the Statement production to use that instead of ExpressionStatement. I think.","m.mentions":{"user_ids":["@jackworks:matrix.org"]},"msgtype":"m.text"},"ts":1700326167205,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$zgmepQxSwlx1HVu09YgLPpCegUJ8aPdLAV2In5mfYo8"},
{"content":{"body":"Mind you, I'm not sure you should be covering ExpressionStatement.","m.mentions":{},"msgtype":"m.text"},"ts":1700326182047,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$lFj3XUNebHvCVMwUccxuRxaC7I_xDPc8EhgJ5sZEcdk"},
{"content":{"body":"Seems like the conflict is with a CallExpression, so you need to bolt something onto CoverCallExpressionAndAsyncArrowHead.","m.mentions":{},"msgtype":"m.text"},"ts":1700326313987,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$1D6ZBQ0cikIcJ4TlWy5KvM4Rfb9OzMbr9-smkv02VgA"},
{"content":{"body":"but when it goes into the CallExpression, it is already inside an ExpressionStatement. can I go back and choose a different production (MatchStatement)?","msgtype":"m.text"},"ts":1700326499205,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$y8iTqU4eYM9Z-u9z0AjmxcBSErpyHbT1kZlKEWXwOZk"},
{"content":{"body":"* but when it goes into the CallExpression, it is already chosen to use ExpressionStatement. can I go back and choose a different production (MatchStatement)?","m.new_content":{"body":"but when it goes into the CallExpression, it is already chosen to use ExpressionStatement. can I go back and choose a different production (MatchStatement)?","msgtype":"m.text"},"m.relates_to":{"event_id":"$y8iTqU4eYM9Z-u9z0AjmxcBSErpyHbT1kZlKEWXwOZk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1700326532399,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$4Mm3JjdZdI8lR8w5sjMmqf6K6yer2cvFvxyExmMWsTU"},
{"content":{"body":"Sorry, I didn't mean a conflict with the whole of CallExpression, but rather with the part of CallExpression that CoverCallExpressionEtc deals with.","m.mentions":{},"msgtype":"m.text"},"ts":1700326692124,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$RjMoKjIIhKHxhDXkwi-rsspk4W81VzUYcgDxLUTubkI"},
{"content":{"body":"wait, no, you asked a different question.","m.mentions":{},"msgtype":"m.text"},"ts":1700326734977,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$7Ezyu-jA4AtlPMucSfKA4KNZXKrvFRg2DSrOCoACRy0"},
{"content":{"body":"You should look at how CoverCallExpressionEtc is used in the grammar. There's a use from CallExpression and one from AsyncArrowFunction.","m.mentions":{},"msgtype":"m.text"},"ts":1700326862494,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$ZwzLxCA-FlZacVhUzihzBrpivJD5Twlu7KGkWLGzLpQ"},
{"content":{"body":"Here is the full problem:\nFor code: match (expr)\n\nif the following token is a {, then\n    if this is parsing a statement (like \"; match (expr) {\"), then continue with the Match Statement\n    otherwise continue with Match Expression (like \"f(match (expr) {\")\nif it's something else, continue with CallExpression","msgtype":"m.text"},"ts":1700326879698,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$9CqF7pQXJLW5PLBT6LY_CrJB0MTCFFOPf4SuGrNBMMA"},
{"content":{"body":"I cannot add lookahead != `match` to Expression Statement so it's also a syntax ambiguity between match expression and statement ","msgtype":"m.text"},"ts":1700327016458,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$Jb5G4_2B7KhPkpfj-pNsj-EqtfdlQUvtcO26gOP969A"},
{"content":{"body":"Technically, I think it's a conflict, not an ambiguity. ","m.mentions":{},"msgtype":"m.text"},"ts":1700327093479,"senderName":"jmdyck","senderId":"@jmdyck:matrix.org","id":"$x_JuRpArfIve0u29-3_cRUwZemG4oPlCpuk8ph9L6t0"}
]