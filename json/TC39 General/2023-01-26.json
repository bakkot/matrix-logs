[
{"content":{"body":"Unfortunately that doesn't work, async generator functions will not reenter until all previous next calls settle","msgtype":"m.text"},"ts":1674691303471,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$A4arr1CWXLkluHrLRlPNr2mqyxkYnU8xl3Fs6D_AoI0"},
{"content":{"body":"```\nasync function* foo() {\n    yield new Promise(r => setTimeout(r, 1000));\n    console.log('reenter');\n}\nconst it = foo();\nit.next();\nit.next();\n```","format":"org.matrix.custom.html","formatted_body":"<pre><code>async function* foo() {\n    yield new Promise(r =&gt; setTimeout(r, 1000));\n    console.log('reenter');\n}\nconst it = foo();\nit.next();\nit.next();\n</code></pre>\n","msgtype":"m.text"},"ts":1674691484502,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$3kBzkL4ueXA78bdWCbdL9iPnJv8nbxaIw3XI22w59dM"},
{"content":{"body":"the previous call settles in my example","msgtype":"m.text"},"ts":1674691503789,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$iEoDGY1F6odBkj1RItXwwPq92moUah-BF-Xrt_JI_oA"},
{"content":{"body":"The `reenter` won't log until the 1000ms is up","format":"org.matrix.custom.html","formatted_body":"The <code>reenter</code> won't log until the 1000ms is up","msgtype":"m.text"},"ts":1674691509382,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$dqHfVRhQxw0lp8KpNxo2ul2P2oTfyyY0kHiyfnYBcl4"}
]