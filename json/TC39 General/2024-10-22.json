[
{"content":{"body":"Is there a spot right now where “bundler conventions” could be documented or specified? A lot of this is tied to module resolution and import.meta but in ways that’s not 100% HTML spec, either.","msgtype":"m.text"},"ts":1729612395595,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$e6zdKn2bdUVoVIWSXq-oXO0wZ2qstfxpsChJBvrOmVQ"},
{"content":{"body":"IMO this is a bit of a blindspot, standards wise, and leads to a confusing situation with “correct behavior” spread between node.js docs and various bundler’s own docs. And it’s very hard to determine which parts are interoperable or to what extent.","m.relates_to":{"event_id":"$e6zdKn2bdUVoVIWSXq-oXO0wZ2qstfxpsChJBvrOmVQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$e6zdKn2bdUVoVIWSXq-oXO0wZ2qstfxpsChJBvrOmVQ"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1729612499324,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$ctXx1DPSmgWCPBrsHx14TnAt50Rxn2lc0iZLYrlqLhE"},
{"content":{"body":"Concretely this came up in a discussion with webpack maintainers about process.env.NODE_ENV vs import.meta.env.DEV vs some other API. (For context: https://github.com/webpack/webpack/pull/18876)","m.relates_to":{"event_id":"$e6zdKn2bdUVoVIWSXq-oXO0wZ2qstfxpsChJBvrOmVQ","is_falling_back":true,"m.in_reply_to":{"event_id":"$ctXx1DPSmgWCPBrsHx14TnAt50Rxn2lc0iZLYrlqLhE"},"rel_type":"m.thread"},"msgtype":"m.text"},"ts":1729612671672,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$UexFHv2X62L2LXIo0b3VaHV86EKxNB2dbRSD4ZBuLf4"},
{"content":{"body":"@jkrems:matrix.org For module resolution, that's all intentionally left up to the implementations and we probably won't be adding new constraints there. But for `import.meta` properties, any of a number of standards venues could choose to standardise the name and meaning of a new property. The HTML spec defines `url` and `resolve` for instance. For something really generic like `debug`, TC39 seems an appropriate venue.","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@jkrems:matrix.org\">@Jan Olaf Martin</a> For module resolution, that&#39;s all intentionally left up to the implementations and we probably won&#39;t be adding new constraints there. But for <code data-md=\"`\">import.meta</code> properties, any of a number of standards venues could choose to standardise the name and meaning of a new property. The HTML spec defines <code data-md=\"`\">url</code> and <code data-md=\"`\">resolve</code> for instance. For something really generic like <code data-md=\"`\">debug</code>, TC39 seems an appropriate venue.","msgtype":"m.text"},"ts":1729613420783,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$dpkVkUsnHyqIr-Ff3-rg3dCgphk7hINhBZPub1Zdqfc"},
{"content":{"body":"> <@michaelficarra:matrix.org> @jkrems:matrix.org For module resolution, that's all intentionally left up to the implementations and we probably won't be adding new constraints there. But for `import.meta` properties, any of a number of standards venues could choose to standardise the name and meaning of a new property. The HTML spec defines `url` and `resolve` for instance. For something really generic like `debug`, TC39 seems an appropriate venue.\n\nI think the fact that it *is* left up to implementers is what creates the “void” I’m talking about here. IIRC the best spec for module resolution across bundlers is a gist a webpack maintainer wrote that may or may not be up-to-date. Because tools usually implement a superset of browser resolution (citation needed), it’s hard to know which superset would work across tools, e.g. when writing a library.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24dpkVkUsnHyqIr-Ff3-rg3dCgphk7hINhBZPub1Zdqfc\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br><a href=\"https://matrix.to/#/@jkrems:matrix.org\">@Jan Olaf Martin</a> For module resolution, that&#39;s all intentionally left up to the implementations and we probably won&#39;t be adding new constraints there. But for <code data-md=\"`\">import.meta</code> properties, any of a number of standards venues could choose to standardise the name and meaning of a new property. The HTML spec defines <code data-md=\"`\">url</code> and <code data-md=\"`\">resolve</code> for instance. For something really generic like <code data-md=\"`\">debug</code>, TC39 seems an appropriate venue.</blockquote></mx-reply>I think the fact that it <em>is</em> left up to implementers is what creates the “void” I’m talking about here. IIRC the best spec for module resolution across bundlers is a gist a webpack maintainer wrote that may or may not be up-to-date. Because tools usually implement a superset of browser resolution (citation needed), it’s hard to know which superset would work across tools, e.g. when writing a library.","m.relates_to":{"m.in_reply_to":{"event_id":"$dpkVkUsnHyqIr-Ff3-rg3dCgphk7hINhBZPub1Zdqfc"}},"msgtype":"m.text"},"ts":1729613640946,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$wom8OBF0EYR8du9U5NNCSJNaJ8th02nfPhgKhNnEogQ"},
{"content":{"body":"I’m not sure TC39 could specify .debug because (at least imo), the semantics should be closely tied to module resolution semantics. And the semantics that are interesting in this context don’t exist anywhere but in tools.","msgtype":"m.text"},"ts":1729613718293,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$NHDrvwYrdIdwL683NiFxJabxu0h81drA42h5Q2w4Jbk"},
{"content":{"body":"> <@jkrems:matrix.org> I think the fact that it *is* left up to implementers is what creates the “void” I’m talking about here. IIRC the best spec for module resolution across bundlers is a gist a webpack maintainer wrote that may or may not be up-to-date. Because tools usually implement a superset of browser resolution (citation needed), it’s hard to know which superset would work across tools, e.g. when writing a library.\n\nmaybe something worth talking to WinterCG about","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24wom8OBF0EYR8du9U5NNCSJNaJ8th02nfPhgKhNnEogQ\">In reply to</a><a href=\"https://matrix.to/#/%40jkrems%3Amatrix.org\">@jkrems:matrix.org</a><br />I think the fact that it <em>is</em> left up to implementers is what creates the “void” I’m talking about here. IIRC the best spec for module resolution across bundlers is a gist a webpack maintainer wrote that may or may not be up-to-date. Because tools usually implement a superset of browser resolution (citation needed), it’s hard to know which superset would work across tools, e.g. when writing a library.</blockquote></mx-reply>maybe something worth talking to WinterCG about","m.relates_to":{"m.in_reply_to":{"event_id":"$wom8OBF0EYR8du9U5NNCSJNaJ8th02nfPhgKhNnEogQ"}},"msgtype":"m.text"},"ts":1729614216839,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$YwUS92We4wFCa8jLbh72Yv_5tLgJ64CEX3AGI42HtRc"},
{"content":{"body":"> <@jkrems:matrix.org> I’m not sure TC39 could specify .debug because (at least imo), the semantics should be closely tied to module resolution semantics. And the semantics that are interesting in this context don’t exist anywhere but in tools.\n\noh I hadn't read into what you wanted `debug` to do, so that's possible, yeah","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24NHDrvwYrdIdwL683NiFxJabxu0h81drA42h5Q2w4Jbk\">In reply to</a><a href=\"https://matrix.to/#/%40jkrems%3Amatrix.org\">@jkrems:matrix.org</a><br />I’m not sure TC39 could specify .debug because (at least imo), the semantics should be closely tied to module resolution semantics. And the semantics that are interesting in this context don’t exist anywhere but in tools.</blockquote></mx-reply>oh I hadn&#39;t read into what you wanted <code data-md=\"`\">debug</code> to do, so that&#39;s possible, yeah","m.relates_to":{"m.in_reply_to":{"event_id":"$NHDrvwYrdIdwL683NiFxJabxu0h81drA42h5Q2w4Jbk"}},"msgtype":"m.text"},"ts":1729614242532,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$MMfbWKR5AQnh8OK5GrkzMOIoQr1s7vrgpacR2xO1tgY"},
{"content":{"body":"> <@michaelficarra:matrix.org> maybe something worth talking to WinterCG about\n\nI tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not [build] tools. I'm not sure how much engagement there would be from tooling authors. But I just created I \"found\" one in that I created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YwUS92We4wFCa8jLbh72Yv_5tLgJ64CEX3AGI42HtRc?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>maybe something worth talking to WinterCG about</blockquote></mx-reply>I tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not [build] tools. I'm not sure how much engagement there would be from tooling authors. But I just created I \"found\" one in that I created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$YwUS92We4wFCa8jLbh72Yv_5tLgJ64CEX3AGI42HtRc"}},"msgtype":"m.text"},"ts":1729614564142,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$iJ96qDls7VfSWCpJRchuttQPS4WKe8_tFtYyjl0zZIo"},
{"content":{"body":"> <@michaelficarra:matrix.org> maybe something worth talking to WinterCG about\n\n * I tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not \\[build\\] tools. I'm not sure how much engagement there would be from tooling authors. But I just created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$YwUS92We4wFCa8jLbh72Yv_5tLgJ64CEX3AGI42HtRc?via=matrix.org&amp;via=mozilla.org&amp;via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@michaelficarra:matrix.org\">@michaelficarra:matrix.org</a><br>maybe something worth talking to WinterCG about</blockquote></mx-reply> * I tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not [build] tools. I'm not sure how much engagement there would be from tooling authors. But I just created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","m.mentions":{},"m.new_content":{"body":"I tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not \\[build\\] tools. I'm not sure how much engagement there would be from tooling authors. But I just created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","format":"org.matrix.custom.html","formatted_body":"I tried WinterCG first but from initial interactions, it seemed like their bias was (understandable) towards runtimes, not [build] tools. I'm not sure how much engagement there would be from tooling authors. But I just created https://matrix.to/#/#tc39-tools:matrix.org and I'll see if I can get this into the tools ecosystem outreach group scope, maybe.","m.mentions":{"user_ids":["@michaelficarra:matrix.org"]},"msgtype":"m.text"},"m.relates_to":{"event_id":"$iJ96qDls7VfSWCpJRchuttQPS4WKe8_tFtYyjl0zZIo","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1729614584623,"senderName":"Jan Olaf Martin","senderId":"@jkrems:matrix.org","id":"$g250CKZnRtZIrztFsGWdLvF8i2QtmXMzDMRZckMts6g"}
]