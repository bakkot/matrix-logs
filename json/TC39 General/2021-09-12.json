[
{"content":{"body":"Has a `Function.prototype.isConstructor`, `Function.isConstructor`, or `Reflect.isConstructor` method been explored by TC39 before? \n\nThe only references on the web I can find of any discussion is https://esdiscuss.org/topic/add-reflect-isconstructor-and-reflect-iscallable and https://github.com/tc39/agendas/blob/master/2015/01.md. Apparently, Jason Orendorff presented about it, but there’s nothing in https://github.com/tc39/notes/tree/master/meetings/2015-01 about that.","format":"org.matrix.custom.html","formatted_body":"<p>Has a <code>Function.prototype.isConstructor</code>, <code>Function.isConstructor</code>, or <code>Reflect.isConstructor</code> method been explored by TC39 before?</p>\n<p>The only references on the web I can find of any discussion is https://esdiscuss.org/topic/add-reflect-isconstructor-and-reflect-iscallable and https://github.com/tc39/agendas/blob/master/2015/01.md. Apparently, Jason Orendorff presented about it, but there’s nothing in https://github.com/tc39/notes/tree/master/meetings/2015-01 about that.</p>\n","msgtype":"m.text"},"ts":1631411802106,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Z-h3nKjwYsPx7l_IRN03QliL1n5GqZdeHGHz6K7qlnk"},
{"content":{"body":"The only reason why I ask about it is because I’m writing a polyfill for `Array.fromAsync` right now and finding it not possible to match the spec.","format":"org.matrix.custom.html","formatted_body":"The only reason why I ask about it is because I’m writing a polyfill for <code>Array.fromAsync</code> right now and finding it not possible to match the spec.","msgtype":"m.text"},"ts":1631411892784,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2QJbWxnhNw1vY81mQMBmEqQ9aXcV1pcnjzJRWigd8n0"},
{"content":{"body":" * The only reason why I ask about it is because I’m writing a polyfill for `Array.fromAsync` right now and finding it not possible to match the spec. It needs to do what `Array.from` does and start with a `new C` only if `C` is a constructor and otherwise start with `Array(0)`. ","format":"org.matrix.custom.html","formatted_body":" * The only reason why I ask about it is because I’m writing a polyfill for <code>Array.fromAsync</code> right now and finding it not possible to match the spec. It needs to do what <code>Array.from</code> does and start with a <code>new C</code> only if <code>C</code> is a constructor and otherwise start with <code>Array(0)</code>.","m.new_content":{"body":"The only reason why I ask about it is because I’m writing a polyfill for `Array.fromAsync` right now and finding it not possible to match the spec. It needs to do what `Array.from` does and start with a `new C` only if `C` is a constructor and otherwise start with `Array(0)`. ","format":"org.matrix.custom.html","formatted_body":"The only reason why I ask about it is because I’m writing a polyfill for <code>Array.fromAsync</code> right now and finding it not possible to match the spec. It needs to do what <code>Array.from</code> does and start with a <code>new C</code> only if <code>C</code> is a constructor and otherwise start with <code>Array(0)</code>.","msgtype":"m.text"},"m.relates_to":{"event_id":"$2QJbWxnhNw1vY81mQMBmEqQ9aXcV1pcnjzJRWigd8n0","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631411943915,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Wz366AFaFgMuRX6zYcgp6woguTQjuMX4RD_hbu2DKMI"},
{"content":{"body":"Other polyfills seem to cheat and check only if `C` is a function.","format":"org.matrix.custom.html","formatted_body":"Other polyfills seem to cheat and check only if <code>C</code> is a function.","msgtype":"m.text"},"ts":1631412037525,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$RtyA6wMhvrrNT1oY8qkCuq-tAbSILL9Kino1-eJ4EFU"},
{"content":{"body":" * Current polyfills for `Array.from` generally seem to cheat and check only if `C` is a function.","format":"org.matrix.custom.html","formatted_body":" * Current polyfills for <code>Array.from</code> generally seem to cheat and check only if <code>C</code> is a function.","m.new_content":{"body":"Current polyfills for `Array.from` generally seem to cheat and check only if `C` is a function.","format":"org.matrix.custom.html","formatted_body":"Current polyfills for <code>Array.from</code> generally seem to cheat and check only if <code>C</code> is a function.","msgtype":"m.text"},"m.relates_to":{"event_id":"$RtyA6wMhvrrNT1oY8qkCuq-tAbSILL9Kino1-eJ4EFU","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1631412581077,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$UDb3R2Rc_WDK20LRuKkBv_8dpBY6erH-A0WUdBNWCZY"}
]