[
{"content":{"body":"emscripten is pretty good now it turns out","msgtype":"m.text"},"ts":1641783570269,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Zf57iBnHlF2kAP_TaDfEaHI_okOkuW9DbqblE8rgGhE"},
{"content":{"body":"spent the weekend hacking together wasm/typescript bindings for z3 (the smt solver) and once I figured out how to deal with threads properly it all just worked","msgtype":"m.text"},"ts":1641783681931,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FNUBs1tE3I2kI72cRRJ8bht7Lfehw5dXUVASmzdEz_4"},
{"content":{"body":"js could definitely do with better multithreading primitives though","msgtype":"m.text"},"ts":1641783752893,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9DAKlEw3OR9vaC2tnbvmhV5gHaybJ6T3oclKaUgH_ig"},
{"content":{"body":"Like the shared structs proposal? ","msgtype":"m.text"},"ts":1641784339094,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UrAr83ZS-HQKy46ZqHzGN5LeSkFqv-g_c0KUQVq8AXs"},
{"content":{"body":"yeah, and module blocks or whatever that proposal evolved into","msgtype":"m.text"},"ts":1641784583921,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zelBhTY1cwF7Smy6nFmAMpsPPSBchkrfw9QuwxuGAFg"},
{"content":{"body":"there is just not a good way to say \"go do this work in another thread\" right now","msgtype":"m.text"},"ts":1641784608247,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nRAUYWC5fo4uSI6jMV1jKPitkbSNhrOpICpwrtPKR7U"},
{"content":{"body":"Do folks here have thoughts on JS's string split behaviour? It differs from essentially all other languages in that a string split with limited split count splits N+1 times, but returns N items, whereas most language standard libraries split N times and also return N items. This causes essentially all languages other than JS to return an N size array from an N size split, where the last item is the remainder string. In JS the last item is not the remainder, but the N'th item: everything after the N'th item is discarded.","msgtype":"m.text"},"ts":1641839610474,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$LzCv8pr3yzgNgL8Oae3VuXmDSCrZKcmw4e7H8N7adV8"},
{"content":{"body":"This image illustrates the difference:","msgtype":"m.text"},"ts":1641839620680,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1MAvCdbFGaQVH5fQMPyhZz7bH9ogqK6Gd_1quIG5dH0"},
{"content":{"body":"seems like something we can't change at this point?","msgtype":"m.text"},"ts":1641841745548,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kfmjpUkvQNYZ90uwvMZ9Gyc5aetAv9k4P_LAWx95E8o"},
{"content":{"body":"if you have a new method, it has to contend with that the thing that people expect to behave the same as other languages is still named `split`","format":"org.matrix.custom.html","formatted_body":"if you have a new method, it has to contend with that the thing that people expect to behave the same as other languages is still named <code>split</code>","msgtype":"m.text"},"ts":1641841770776,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7sKMbSX_-lNnmrAV_r8r13ZCpyaFsHR3_ExK3sqtlEE"},
{"content":{"body":"That is valid. Although the function that does what I expect is called `SplitN` in Go and `splitn` in Rust. So there is precedent for that behaviour having this name. ","format":"org.matrix.custom.html","formatted_body":"That is valid. Although the function that does what I expect is called <code>SplitN</code> in Go and <code>splitn</code> in Rust. So there is precedent for that behaviour having this name.","msgtype":"m.text"},"ts":1641841826565,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$BS1KbmMs1Gb4ku3x726LD5EPpfdOiisMt77sGh0sfek"},
{"content":{"body":"I actually think the JS behavior is better...","msgtype":"m.text"},"ts":1641842031520,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$PO6_USomF3SLJRdbmnCg0btasdEvsEkVhPpMySBpCsA"},
{"content":{"body":"Eg, for `'1.0.0'.split('.', 1)` to \"parse\" the major version","format":"org.matrix.custom.html","formatted_body":"Eg, for <code>'1.0.0'.split('.', 1)</code> to &quot;parse&quot; the major version","msgtype":"m.text"},"ts":1641842066247,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$kX_0NOap2RJOGxCBq8wvsX_VwWMEGTOOR5QKz-kgxb4"},
{"content":{"body":" * Eg, for `'1.0.0'.split('.', 1)` to \"parse\" the major version","format":"org.matrix.custom.html","formatted_body":" * Eg, for <code>'1.0.0'.split('.', 1)</code> to &quot;parse&quot; the major version","m.new_content":{"body":"Eg, for `'1.0.0'.split('.', 1)` to \"parse\" the major version","format":"org.matrix.custom.html","formatted_body":"Eg, for <code>'1.0.0'.split('.', 1)</code> to &quot;parse&quot; the major version","msgtype":"m.text"},"m.relates_to":{"event_id":"$kX_0NOap2RJOGxCBq8wvsX_VwWMEGTOOR5QKz-kgxb4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1641842093098,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$IF_qUSSwXhmfDh4MK2uq9_bfm0_D8fg-6EKTQKtGYuY"},
{"content":{"body":"The reason I like the non JS behaviour better, is that `v.split(s, n).join(s)` works always. And it makes stripping of prefixes really easy.","format":"org.matrix.custom.html","formatted_body":"The reason I like the non JS behaviour better, is that <code>v.split(s, n).join(s)</code> works always. And it makes stripping of prefixes really easy.","msgtype":"m.text"},"ts":1641842107630,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1n77rtIUUSp_KcIQJjP9DIKfdPvPyLFXjI4eDyeWrmI"},
{"content":{"body":"Proposal of how it could be fixed in a backwards compatible way (by either adding a new method, or an options bag to `String.prototype.split`: https://github.com/lucacasonato/proposal-proper-string-split","format":"org.matrix.custom.html","formatted_body":"Proposal of how it could be fixed in a backwards compatible way (by either adding a new method, or an options bag to <code>String.prototype.split</code>: https://github.com/lucacasonato/proposal-proper-string-split","msgtype":"m.text"},"ts":1641842180479,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$Bh-9yElVc_j7FN8pPmkmyfkROXyDelIv4WknmWAv56I"},
{"content":{"body":"> <@jridgewell:matrix.org> Eg, for `'1.0.0'.split('.', 1)` to \"parse\" the major version\n\nYou could still do that with the other behaviour, by doing `'1.0.0'.splitn('.', 2)[0]`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$kX_0NOap2RJOGxCBq8wvsX_VwWMEGTOOR5QKz-kgxb4?via=igalia.com&via=matrix.org&via=mozilla.org\">In reply to</a> <a href=\"https://matrix.to/#/@jridgewell:matrix.org\">@jridgewell:matrix.org</a><br>Eg, for <code>'1.0.0'.split('.', 1)</code> to \"parse\" the major version</blockquote></mx-reply>You could still do that with the other behaviour, by doing <code>'1.0.0'.splitn('.', 2)[0]</code>","m.relates_to":{"m.in_reply_to":{"event_id":"$kX_0NOap2RJOGxCBq8wvsX_VwWMEGTOOR5QKz-kgxb4"}},"msgtype":"m.text"},"ts":1641842243031,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$L5l6-vjzLmTYXOXP3BNjtqFykAW6ljk_rnfoutkZd8s"}
]