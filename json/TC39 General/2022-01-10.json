[
{"content":{"body":"emscripten is pretty good now it turns out","msgtype":"m.text"},"ts":1641783570269,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$Zf57iBnHlF2kAP_TaDfEaHI_okOkuW9DbqblE8rgGhE"},
{"content":{"body":"spent the weekend hacking together wasm/typescript bindings for z3 (the smt solver) and once I figured out how to deal with threads properly it all just worked","msgtype":"m.text"},"ts":1641783681931,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$FNUBs1tE3I2kI72cRRJ8bht7Lfehw5dXUVASmzdEz_4"},
{"content":{"body":"js could definitely do with better multithreading primitives though","msgtype":"m.text"},"ts":1641783752893,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$9DAKlEw3OR9vaC2tnbvmhV5gHaybJ6T3oclKaUgH_ig"},
{"content":{"body":"Like the shared structs proposal? ","msgtype":"m.text"},"ts":1641784339094,"senderName":"Jack Works","senderId":"@jackworks:matrix.org","id":"$UrAr83ZS-HQKy46ZqHzGN5LeSkFqv-g_c0KUQVq8AXs"},
{"content":{"body":"yeah, and module blocks or whatever that proposal evolved into","msgtype":"m.text"},"ts":1641784583921,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zelBhTY1cwF7Smy6nFmAMpsPPSBchkrfw9QuwxuGAFg"},
{"content":{"body":"there is just not a good way to say \"go do this work in another thread\" right now","msgtype":"m.text"},"ts":1641784608247,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nRAUYWC5fo4uSI6jMV1jKPitkbSNhrOpICpwrtPKR7U"},
{"content":{"body":"Do folks here have thoughts on JS's string split behaviour? It differs from essentially all other languages in that a string split with limited split count splits N+1 times, but returns N items, whereas most language standard libraries split N times and also return N items. This causes essentially all languages other than JS to return an N size array from an N size split, where the last item is the remainder string. In JS the last item is not the remainder, but the N'th item: everything after the N'th item is discarded.","msgtype":"m.text"},"ts":1641839610474,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$LzCv8pr3yzgNgL8Oae3VuXmDSCrZKcmw4e7H8N7adV8"},
{"content":{"body":"This image illustrates the difference:","msgtype":"m.text"},"ts":1641839620680,"senderName":"Luca Casonato","senderId":"@lucacasonato:matrix.org","id":"$1MAvCdbFGaQVH5fQMPyhZz7bH9ogqK6Gd_1quIG5dH0"},
{"content":{"body":"seems like something we can't change at this point?","msgtype":"m.text"},"ts":1641841745548,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$kfmjpUkvQNYZ90uwvMZ9Gyc5aetAv9k4P_LAWx95E8o"},
{"content":{"body":"if you have a new method, it has to contend with that the thing that people expect to behave the same as other languages is still named `split`","format":"org.matrix.custom.html","formatted_body":"if you have a new method, it has to contend with that the thing that people expect to behave the same as other languages is still named <code>split</code>","msgtype":"m.text"},"ts":1641841770776,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$7sKMbSX_-lNnmrAV_r8r13ZCpyaFsHR3_ExK3sqtlEE"}
]