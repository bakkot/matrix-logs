[
{"content":{"body":"some discussion from whatwg about exposing structured clone: https://github.com/whatwg/html/pull/3414#issuecomment-853998618","msgtype":"m.text"},"ts":1623656022113,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$-PwPyni3uPEFojGhAB0tvcnQ3cFC1naKj-15GgZmN54"},
{"content":{"body":"funny, i was just reading the C++ impl in SM https://searchfox.org/mozilla-central/source/js/src/vm/StructuredClone.cpp","msgtype":"m.text"},"ts":1623658318684,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$vKhQToEOoKh5M4eflSmbQVQIlLTVZR6v-PcX5CYkQS0"},
{"content":{"body":"unclear if the ask is simply to expose `structuredClone(value, options)` or what else that might entail, but seems like it would be really handy for it to be available somehow https://whatpr.org/html/3414/structured-data.html#structured-cloning","format":"org.matrix.custom.html","formatted_body":"unclear if the ask is simply to expose <code>structuredClone(value, options)</code> or what else that might entail, but seems like it would be really handy for it to be available somehow https://whatpr.org/html/3414/structured-data.html#structured-cloning","msgtype":"m.text"},"ts":1623659027577,"senderName":"DerekNonGeneric","senderId":"@dereknongeneric:mozilla.org","id":"$Sstu6lrTZ08WviiC1XBz5SXNa3rOsJKmFBF-va7-YV8"},
{"content":{"body":"does anyone have recollection of a synchronous Promise introspection API? e.g. something that gives back stuff like `{ state: \"fulfilled\", value: ... }`?","format":"org.matrix.custom.html","formatted_body":"does anyone have recollection of a synchronous Promise introspection API? e.g. something that gives back stuff like <code>{ state: &quot;fulfilled&quot;, value: ... }</code>?","msgtype":"m.text"},"ts":1623684326785,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$LYZlebNRJxniGvoksfsNCsUdsl6bVtUU6cfq0xgdk7E"},
{"content":{"body":"something like promise.isFulfilled or like getting the value back, or just introspection?","msgtype":"m.text"},"ts":1623684612574,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$hSW8ESF-IsfQXbrk4nAFbD4d3Qik7Awiu_gdl_Wd4Tw"},
{"content":{"body":"i was talking earlier about a similar api with somemone","msgtype":"m.text"},"ts":1623684621095,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$WzyW-NnzGvnb4HqVCpVb5FJ209t2agQ3WE7yiRo1R44"},
{"content":{"body":" * i was talking earlier about a similar api with someone as an alternative for the deferred eval thing","m.new_content":{"body":"i was talking earlier about a similar api with someone as an alternative for the deferred eval thing","msgtype":"m.text"},"m.relates_to":{"event_id":"$WzyW-NnzGvnb4HqVCpVb5FJ209t2agQ3WE7yiRo1R44","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1623684633650,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$NTJPh3yxA6n-RrNsBy_q1JzqihQYL5x-oFPlRbQyPok"},
{"content":{"body":"yulia: I think we tend to view this as violating some kind of fundamental principle","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@yulia:mozilla.org\">yulia</a>: I think we tend to view this as violating some kind of fundamental principle","msgtype":"m.text"},"ts":1623686793356,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$tHwGuhWWRJPpNMC3kDNYanFc67MSq7UnK-f8V3wjx2U"},
{"content":{"body":"maybe as part of https://w3ctag.github.io/promises-guide/ but I'm not sure which part","msgtype":"m.text"},"ts":1623686987518,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$J0TWny9GJ21WiJ_ukP4qqblhks-PE861Efdh_dcbQdk"},
{"content":{"body":"I vaguely recall something to this effect but can't find a proposal. Closest I can find is https://github.com/tc39/proposal-async-await/issues/16 and some discussion in https://github.com/tc39/notes/blob/master/meetings/2015-07/july-30.md#64-advance-async-functions-to-stage-2","msgtype":"m.text"},"ts":1623687322048,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$8lyopttrenhiscAHEPfh7yv6d74lvIosKJssAkdbbaY"},
{"content":{"body":"this was also discussed in the context of cancellable promises","msgtype":"m.text"},"ts":1623688035342,"senderName":"littledan","senderId":"@dehrenberg:igalia.com","id":"$oIq41EFozXqfJOhowHN0PVpmzj2qdakvOOACtR0BBw8"},
{"content":{"body":"i'm thinking of getting both state and value back","msgtype":"m.text"},"ts":1623688793383,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$DONkzPc7EseXs04zScwNUZgJ0ceTBI6YIl5X1lHBE88"},
{"content":{"body":"the specific context is application-level optimization opportunities to skip microtask ticks","msgtype":"m.text"},"ts":1623688816491,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$97HTYTQgNqkndLqK09eQ8ZqBkQHHXzjej1p2uA8maOM"},
{"content":{"body":"my initial take was along the lines of what littledan said with violating some kind of anti-Zalgo principle","format":"org.matrix.custom.html","formatted_body":"my initial take was along the lines of what <a href=\"https://matrix.to/#/@dehrenberg:igalia.com\">littledan</a> said with violating some kind of anti-Zalgo principle","msgtype":"m.text"},"ts":1623688863704,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$_1rDSNFnu1uPJLUNqML8F-2Wai35DlcHZvaoJmi-rI8"},
{"content":{"body":"bakkot: thanks for that thread, the reason that killed that transformation idea is exactly the motivation for wanting it","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@bakkot:matrix.org\">bakkot</a>: thanks for that thread, the reason that killed that transformation idea is exactly the motivation for wanting it","msgtype":"m.text"},"ts":1623688943406,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$X9-yxhrsCRm2_VBptcs7CygcXAcyUP6ewdcMwzqlmqQ"},
{"content":{"body":"though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like `let x = promise.tryGet().state == \"fulfilled\" ? promise[inspectSymbol].value : await promise;`","format":"org.matrix.custom.html","formatted_body":"though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like <code>let x = promise.tryGet().state == &quot;fulfilled&quot; ? promise[inspectSymbol].value : await promise;</code>","msgtype":"m.text"},"ts":1623688993385,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$CobAeUMZ2z7SRSNTDDhSs-QUEaYRerTu-QT5-TGKZpk"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1623688996048,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$xBebzWjg1BqCDpk2p1DsDtg2dIQDJdSKetBOwQnARO8"},
{"content":{"body":" * though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like `let x = promise[inspectSymbol].state == \"fulfilled\" ? promise[inspectSymbol].value : await promise;`","format":"org.matrix.custom.html","formatted_body":" * though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like <code>let x = promise[inspectSymbol].state == &quot;fulfilled&quot; ? promise[inspectSymbol].value : await promise;</code>","m.new_content":{"body":"though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like `let x = promise[inspectSymbol].state == \"fulfilled\" ? promise[inspectSymbol].value : await promise;`","format":"org.matrix.custom.html","formatted_body":"though in this case, there's no problem in that the buck is passed to the application. it's up to the app to write stuff like <code>let x = promise[inspectSymbol].state == &quot;fulfilled&quot; ? promise[inspectSymbol].value : await promise;</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$CobAeUMZ2z7SRSNTDDhSs-QUEaYRerTu-QT5-TGKZpk","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1623689005269,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$Fzub6OmhhWSHEW7b1U54zBNLT9tJeoiNkVKmxzLUhZ8"},
{"content":{"body":"yeah this was my reaction as well, but this is what the write up was from that alternative: https://github.com/tc39/proposal-defer-import-eval/blob/main/alternatives.md#delegating-work-to-blocking-workers","msgtype":"m.text"},"ts":1623689136006,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$dtIIeACdboyEwnrN-lcDfZAnCnxps5ZPB5J088wWCUY"},
{"content":{"body":"i forgot exactly what that looked like, but its a blocking api. I don't think it is realistic but it keeps coming up","msgtype":"m.text"},"ts":1623689187514,"senderName":"yulia","senderId":"@yulia:mozilla.org","id":"$oy5YRK42du4zakkgnEvQgTFbz1c9LBVdlb36AGHv6XA"},
{"content":{"body":"blocking seems different to me than this, which is fine with async waiting, but want to know when it would be wasteful","msgtype":"m.text"},"ts":1623689271638,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$-7TdgunM-mL2z8ubBu1miWwdxlZMg8GAAc-XiEMw6qE"},
{"content":{"body":" * blocking seems different to me than this, which is fine with async waiting, but wants to know when it would be wasteful","m.new_content":{"body":"blocking seems different to me than this, which is fine with async waiting, but wants to know when it would be wasteful","msgtype":"m.text"},"m.relates_to":{"event_id":"$-7TdgunM-mL2z8ubBu1miWwdxlZMg8GAAc-XiEMw6qE","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1623689282509,"senderName":"shu","senderId":"@shuyuguo:matrix.org","id":"$KzYh2eWXENeWjNn75RpGvvTyW7i7Uy8rlmrj_WtZRBY"}
]