[
{"content":{"body":"Is there a reason why the destructuring pattern `{...{}}` is disallowed with an early error, while `[...{}]` is allowed?","msgtype":"m.text"},"ts":1651158499217,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$ptmdNF4JjGUk7vs-1C9o4jOjOf9XVmruRomN8ie_KQ0"},
{"content":{"body":"`[…{ length }] = [1, 2]`?","format":"org.matrix.custom.html","formatted_body":"<code>[…{ length }] = [1, 2]</code>?","msgtype":"m.text"},"ts":1651159206518,"senderName":"Justin Ridgewell","senderId":"@jridgewell:matrix.org","id":"$NGwuK7p00vU47iIhh3cT6Llfz0oP6sg63_jgq2MiLCQ"},
{"content":{"body":"Oh it makes sense","msgtype":"m.text"},"ts":1651160650162,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$LAFq-WbK2zffPG999e0SuJWjqW65vCnlyWJNID753fw"},
{"content":{"body":"The inconsistency annoys me, but I cannot think of a real reason to allow it in object destructuring (maybe \"I want to trigger every getter\"?)","msgtype":"m.text"},"ts":1651160699704,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$fksaiSlpaW7bV5s47BwwLA8YmzT4Bh-NpSTcR5Ptk7w"},
{"content":{"body":"`({...foo})` ?","format":"org.matrix.custom.html","formatted_body":"<code>({...foo})</code> ?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`({...foo})` ?","mimetype":"text/plain"},{"body":"<code>({...foo})</code> ?","mimetype":"text/html"}]},"ts":1651163600992,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$z-YXvD9T2TZGD6ElZIrnd1aXzW1QCGMaFQxarHxRVFw"},
{"content":{"body":"But that will get removed by virtually all optimizers","msgtype":"m.text","org.matrix.msc1767.text":"But that will get removed by virtually all optimizers"},"ts":1651163636846,"senderName":"Mathieu Hofman","senderId":"@mhofman:matrix.org","id":"$Vit8nkLlmHbgS5QDJlGGr-CNSIInasXKSXlxV9RIiiw"},
{"content":{"body":"not a correct one","msgtype":"m.text","org.matrix.msc1767.text":"not a correct one"},"ts":1651165892768,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$JuQaf_Iy-FagedobTdkl5s-cO8w1hZGBiMuwrLi7GeI"},
{"content":{"body":"there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements","msgtype":"m.text","org.matrix.msc1767.text":"there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements"},"ts":1651165929567,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$7kpVc8gpNRhbb8vuR52TiqpH47M1LU3fQtQ766VAi1c"},
{"content":{"body":" * there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements","m.new_content":{"body":"there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements","msgtype":"m.text","org.matrix.msc1767.text":"there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements"},"m.relates_to":{"event_id":"$7kpVc8gpNRhbb8vuR52TiqpH47M1LU3fQtQ766VAi1c","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.text":" * there's a bunch of annoying places parens are required around an object literal, i assume because of the ambiguity with block statements"},"ts":1651165935635,"senderName":"ljharb","senderId":"@ljharb:matrix.org","id":"$ZMi0q2-w8U0AYY8vJOv_3yeBNe-zDPwxeX5wo0ERyU4"}
]