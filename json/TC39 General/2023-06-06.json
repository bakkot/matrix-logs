[
{"content":{"body":"if anyone is interested, I updated the site to show proposals (and fix some data/UI stuff)","msgtype":"m.text"},"ts":1686046072204,"senderName":"canadahonk","senderId":"@canada_goose:mozilla.org","id":"$CzOxqHw85vbKHQ0PIR6oaZlnnkVbK9GLFCplGEIP0Lc"},
{"content":{"body":"Is it valid to use \"is\" to compare different values of different types? i.e. `If _x_ is *\"\"*`, where _x_ might be a string or something else","format":"org.matrix.custom.html","formatted_body":"Is it valid to use \"is\" to compare different values of different types? i.e. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else","msgtype":"m.text"},"ts":1686064426430,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$RU14w4LP0hrcjlyeSxkfB2BEZdJb9FtKjaqrXER-6O4"},
{"content":{"body":" * Is it valid in spec-language to use \"is\" to compare different values of different types? i.e. `If _x_ is *\"\"*`, where _x_ might be a string or something else","format":"org.matrix.custom.html","formatted_body":" * Is it valid in spec-language to use \"is\" to compare different values of different types? i.e. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else","m.new_content":{"body":"Is it valid in spec-language to use \"is\" to compare different values of different types? i.e. `If _x_ is *\"\"*`, where _x_ might be a string or something else","format":"org.matrix.custom.html","formatted_body":"Is it valid in spec-language to use \"is\" to compare different values of different types? i.e. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else","msgtype":"m.text"},"m.relates_to":{"event_id":"$RU14w4LP0hrcjlyeSxkfB2BEZdJb9FtKjaqrXER-6O4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1686064436787,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$tdGyM8ImZiI2ZFdbiI0L8ol8SQdXtLwNF8gHWdPjkK4"},
{"content":{"body":" * Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. `If _x_ is *\"\"*`, where _x_ might be a string or something else","format":"org.matrix.custom.html","formatted_body":" * Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else","m.new_content":{"body":"Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. `If _x_ is *\"\"*`, where _x_ might be a string or something else","format":"org.matrix.custom.html","formatted_body":"Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else","msgtype":"m.text"},"m.relates_to":{"event_id":"$RU14w4LP0hrcjlyeSxkfB2BEZdJb9FtKjaqrXER-6O4","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1686064448232,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$dXKctKsxKsSsczy4u8iQOSiWGyglapOGyv6vlWjpaaU"},
{"content":{"body":"> <@nicolo-ribaudo:matrix.org> Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. `If _x_ is *\"\"*`, where _x_ might be a string or something else\n\nIMO it is fine and means SameValue","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq%3Amatrix.org/%24RU14w4LP0hrcjlyeSxkfB2BEZdJb9FtKjaqrXER-6O4\">In reply to</a> <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">@nicolo-ribaudo:matrix.org</a><br>Is it valid in spec-language to use \"is\" to compare different values of different types? e.g. <code>If _x_ is *\"\"*</code>, where <em>x</em> might be a string or something else</blockquote></mx-reply>IMO it is fine and means SameValue","m.relates_to":{"m.in_reply_to":{"event_id":"$RU14w4LP0hrcjlyeSxkfB2BEZdJb9FtKjaqrXER-6O4"}},"msgtype":"m.text"},"ts":1686064842662,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$CjE0WHsCBuCsJZCL92mQirBnpwMW7pS5FV37cwdhRno"},
{"content":{"body":"I'm specifically wondering if the first step of https://tc39.es/ecma262/#sec-number.isnan is necessary","msgtype":"m.text"},"ts":1686064908805,"senderName":"nicolo-ribaudo","senderId":"@nicolo-ribaudo:matrix.org","id":"$bIkaIPOkYzf8BXSnDWGDjvE-4HueDFrXXjrghYZr3wE"},
{"content":{"body":"it is not","msgtype":"m.text"},"ts":1686065639982,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$HZLhwL-o41XQycI60PxaUxF-wJscUtBLCNl2CKzDPa0"},
{"content":{"body":"littledan: nicolo-ribaudo: You can read more about how to compare values for equality in https://tc39.es/ecma262/#sec-identity","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@littledan:matrix.org\">littledan</a>: <a href=\"https://matrix.to/#/@nicolo-ribaudo:matrix.org\">nicolo-ribaudo</a>: You can read more about how to compare values for equality in https://tc39.es/ecma262/#sec-identity","msgtype":"m.text"},"ts":1686070707650,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$nlw9Op78L_-vqN5TWV-6jq-TfQtGTFeilJZNN0HfCc0"},
{"content":{"body":"we have very carefully defined the term \"is\"","msgtype":"m.text"},"ts":1686070719739,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$9uswUw_dRI8_997LA1MfoFNw0HItrBsPyJUxIIjjmGU"},
{"content":{"body":"Ah thanks for the correction","msgtype":"m.text"},"ts":1686070773873,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$mxm0BdE_0s8XvKz-Daq4-7x4a48yi4lA2RvHDM2kx2A"},
{"content":{"body":"Sorry I donâ€™t think I understand the definition. How does this differ from SameValue?","msgtype":"m.text"},"ts":1686070860395,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$BvXiqSYs7okzjQugRsC1Y8sQkMkRvI2vCvcO325bfzg"},
{"content":{"body":"Because it also ranges over specification values?","msgtype":"m.text"},"ts":1686070897276,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$EfWR6_wlUiHjZqswuIXjDthu_YttXiIFfFTNE1cA2t8"},
{"content":{"body":"for one, \"is\" can be used with any spec value, but SameValue only works for language values","msgtype":"m.text"},"ts":1686070907304,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$OwizrgOrVJS8HR-jw7UqcRkPWPLp2GAGaL20ajOH26A"},
{"content":{"body":"OK, so my answer was correct in that particular context, but insufficiently general","msgtype":"m.text"},"ts":1686070952127,"senderName":"littledan","senderId":"@littledan:matrix.org","id":"$dgyNlQXuZt8dRFMBA_7gyOZsEKLmgoCdgAOojDfLRz0"},
{"content":{"body":"yes, SameValue could be used there because we already know both operands are ES language values","msgtype":"m.text"},"ts":1686071096641,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$DZphqaok9yTX1d-MyjpyLssEtLTKfbklRpY3AJuY4zo"},
{"content":{"body":"we haven't written down our editorial conventions yet, but I believe the rule we've decided on is that we don't use SameValue when the operands are known to not have identity","msgtype":"m.text"},"ts":1686071240371,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$PHrs3vuY4Wlt7ZyvjnCR4-6icyJ6irsfKoCbtLvjPz8"},
{"content":{"body":"writing down those editorial conventions is my next big task as editor, but the 262 PRs and stage 3 proposals keep coming in faster than I can get to them all","msgtype":"m.text"},"ts":1686071340436,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$Z-HB7daB6YuqtLd0BdPCjxcMxIkCy2-M3cmW05o8nvA"},
{"content":{"body":"also SameValue bottoms out in \"is\"","msgtype":"m.text"},"ts":1686072170362,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$BMMSql1aYNS_crBu1StHfyGHEkBZNR_af2XrAxcTghc"},
{"content":{"body":"so \"is\" can't bottom out in \"SameValue\"","msgtype":"m.text"},"ts":1686072175774,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$zVmkLv3W26HEhNUnbis8RZ9mwP-0BtUkcZt1CFxjbbA"},
{"content":{"body":"but there's something poetic about having the first step of a function whose name literally means \"is not a number\", be \"If _number_ is not a Number, return false\"","format":"org.matrix.custom.html","formatted_body":"but there's something poetic about having the first step of a function whose name literally means &quot;is not a number&quot;, be &quot;If <em>number</em> is not a Number, return false&quot;","msgtype":"m.text"},"ts":1686072176110,"senderName":"ptomato","senderId":"@pchimento:igalia.com","id":"$aYhk18B9mBnIMqd92DrJCd0jdHxM880bPEDGkFfzuos"},
{"content":{"body":"ptomato: and this is the one with the semantics we actually LIKE!","format":"org.matrix.custom.html","formatted_body":"<a href=\"https://matrix.to/#/@pchimento:igalia.com\">ptomato</a>: and this is the one with the semantics we actually LIKE!","msgtype":"m.text"},"ts":1686073869653,"senderName":"Michael Ficarra","senderId":"@michaelficarra:matrix.org","id":"$jTOdZZZ9VSbmCIgjHx-CGH5bgzk0kSBJVoxvaB-5jiI"}
]