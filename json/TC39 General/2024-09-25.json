[
{"content":{"body":"> <@bakkot:matrix.org> There is still the old issue about `f() = y` being legal syntax in engines\n\nits never too late for `array.at(-1) = y`","format":"org.matrix.custom.html","formatted_body":"<mx-reply><blockquote><a href=\"https://matrix.to/#/!wbACpffbfxANskIFZq:matrix.org/$1tkGQC1heQ0qh_kpo9xru0XHmGuSoPJu7J4PmNDLqIY?via=matrix.org&via=mozilla.org&via=igalia.com\">In reply to</a> <a href=\"https://matrix.to/#/@bakkot:matrix.org\">@bakkot:matrix.org</a><br>There is still the old issue about `f() = y` being legal syntax in engines</blockquote></mx-reply>its never too late for <code>array.at(-1) = y</code>","m.mentions":{"user_ids":["@bakkot:matrix.org"]},"m.relates_to":{"m.in_reply_to":{"event_id":"$1tkGQC1heQ0qh_kpo9xru0XHmGuSoPJu7J4PmNDLqIY"}},"msgtype":"m.text"},"ts":1727286207227,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$5CS5Y2KJl7s4Cp-iEejZOI7nvw5q8KO1x-z5vxckOmk"},
{"content":{"body":"ðŸ˜ ","m.mentions":{},"msgtype":"m.text"},"ts":1727286282895,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$lpWbpNZO9wwk0KVZkecSFhVfkBfki3cMaijxnK0obzg"},
{"content":{"body":"You're right, we just need hookable square brackets, so `array.at[-1] = y` works","format":"org.matrix.custom.html","formatted_body":"You're right, we just need hookable square brackets, so <code>array.at[-1] = y</code> works","m.mentions":{},"msgtype":"m.text"},"ts":1727287925952,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$Hq3sT-4qiPulohucBxLsfK2NrX0Z1lQpjSt9kPzjJVA"},
{"content":{"body":"There was a harmony wiki page for that from Allen I think...","m.mentions":{},"msgtype":"m.text"},"ts":1727287951870,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$9GR_JrinyR3WfH1ZgbgZu9mNSZ2j0Mm8o8TdmauYnOI"},
{"content":{"body":"Yup, was referring to that obliquely ^_^","m.mentions":{},"msgtype":"m.text"},"ts":1727287968753,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$oyMXJXURrAySbHUv5UYWaqfMWDgWd7R68sj7u7S-pG0"},
{"content":{"body":"There are such treasures hidden in those archives... look at what they took from us https://web.archive.org/web/20160429210828/http://wiki.ecmascript.org/doku.php?id=harmony:object_extension_literal_class_pattern","m.mentions":{},"msgtype":"m.text"},"ts":1727288044282,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$nPNMGyS2y_AEOhv7UL81Fo1r2qcaJwhBmBWThEfs9AM"},
{"content":{"body":"is web archive the only place that the old wiki data exists now","m.mentions":{},"msgtype":"m.text"},"ts":1727289275347,"senderName":"snek","senderId":"@devsnek:matrix.org","id":"$rT_d3c4C3fG2ZyFIOmto_yIN9vS52QcsI-IIsmQ5urI"},
{"content":{"body":"does anyone know off top-of-head where in test262 the \"Array prototype method property sets occur in 'strict mode'\" semantics are asserted? having a hard time locating that sort of check in the Array prototype method tests. Any one of them for a prototype method would work, just want to assert something locally.","m.mentions":{},"msgtype":"m.text"},"ts":1727290042875,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$mXsa7uNMSxAdPWf77rWsYwRbYt5-nIM1JNRIfOcrwcY"},
{"content":{"body":"by \"strict mode semantics\" do you mean like throwing if the assignment fails? if so, https://github.com/tc39/test262/blob/0c784ef9541fad7e38036a5e6019990ddad81659/test/built-ins/Array/prototype/fill/return-abrupt-from-setting-property-value.js is an example ","m.mentions":{},"msgtype":"m.text"},"ts":1727290370795,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$rETKvZ1Sxl__gPUuNWnqfoDswtXHhjpEiH4JKteBcY4"},
{"content":{"body":"or https://github.com/tc39/test262/blob/0c784ef9541fad7e38036a5e6019990ddad81659/test/built-ins/Array/prototype/push/set-length-zero-array-length-is-non-writable.js","m.mentions":{},"msgtype":"m.text"},"ts":1727290413739,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$DDSpMRXocZgW1rAvjPtNQKelv51t9mMSCjb2XR6STzM"},
{"content":{"body":"generally Array.prototype methods live under built-ins/Array/prototype and then old tests have uninformative names but new ones you can usually guess what they're getting at from the name","m.mentions":{},"msgtype":"m.text"},"ts":1727290448321,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$nQP_KAg1Eoi-cjT4ADta4xH3ftvhzE9XSxMzQNs0O2c"},
{"content":{"body":" * generally tests for Array.prototype methods live under built-ins/Array/prototype and then old tests have uninformative names but new ones you can usually guess what they're getting at from the name","m.mentions":{},"m.new_content":{"body":"generally tests for Array.prototype methods live under built-ins/Array/prototype and then old tests have uninformative names but new ones you can usually guess what they're getting at from the name","m.mentions":{},"msgtype":"m.text"},"m.relates_to":{"event_id":"$nQP_KAg1Eoi-cjT4ADta4xH3ftvhzE9XSxMzQNs0O2c","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1727290457448,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$W9GYWYJlSWhfpDdQKRFjU-sX_22_cpGRr4a91utF3As"},
{"content":{"body":"yeah exactly, throwing if assignment fails","m.mentions":{},"msgtype":"m.text"},"ts":1727290515833,"senderName":"rickbutton","senderId":"@rick.button:matrix.org","id":"$Rwn2_4wm35V5tZ1NVRaDDXkPQbM0j-6Gh34Hd1ROa6g"}
]