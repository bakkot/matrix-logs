[
{"content":{"body":"comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","format":"org.matrix.custom.html","formatted_body":"<p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","mimetype":"text/plain"},{"body":"<p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1644569532479,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$H1ni0xRIRuW9_8JjeygJlDa3SGqR8V4g4hB9ok2VtaY"},
{"content":{"body":" * comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","format":"org.matrix.custom.html","formatted_body":" * <p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","m.new_content":{"body":"comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","format":"org.matrix.custom.html","formatted_body":"<p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","mimetype":"text/plain"},{"body":"<p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$H1ni0xRIRuW9_8JjeygJlDa3SGqR8V4g4hB9ok2VtaY","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * comments welcome at https://github.com/mdn/content/issues/12908 or here\n> It is not clear what `return` in a `forEach` iteration is supposed to do.","mimetype":"text/plain"},{"body":" * <p>comments welcome at https://github.com/mdn/content/issues/12908 or here</p>\n<blockquote>\n<p>It is not clear what <code>return</code> in a <code>forEach</code> iteration is supposed to do.</p>\n</blockquote>\n","mimetype":"text/html"}]},"ts":1644569566009,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$3eFIoKSORfZ4khIYB0VI0nXwB9bOpDuNafN83h5iXvo"},
{"content":{"body":"isn't that expected?","msgtype":"m.text"},"ts":1644570012697,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$O19xLDvJ5oBQCWS_-Qshl59ofxb0-cDHisaEHody2Ho"},
{"content":{"body":"returning skips the rest of the callback, but not subsequent iterations, because they're different runs of the callback","msgtype":"m.text"},"ts":1644570043917,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$5nO-rVMfEK2sYzHPzkNv1VBkyrO7BRrHxNJaQvoz8Mk"},
{"content":{"body":"the issue only comes when porting code that uses a for loop to code using `forEach`","format":"org.matrix.custom.html","formatted_body":"the issue only comes when porting code that uses a for loop to code using <code>forEach</code>","msgtype":"m.text"},"ts":1644570068886,"senderName":"Andreu Botella","senderId":"@abotella:igalia.com","id":"$kcLSLHjwzmlQdxnzHxUGQ5yClQVxuv7jBmK_LLyV5PE"},
{"content":{"body":"I suspect what they're asking for is for the article to point out you cannot break out of the loop.","msgtype":"m.text","org.matrix.msc1767.text":"I suspect what they're asking for is for the article to point out you cannot break out of the loop."},"ts":1644570505928,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$HEoIr4ryDT-fAD8qwcOJLaVsRm7DainujGxuxjPKx_4"},
{"content":{"body":"There is already a section for this that says: \"There is no way to stop or break a forEach() loop other than by throwing an exception\"\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#sect2 ","msgtype":"m.text","org.matrix.msc1767.text":"There is already a section for this that says: \"There is no way to stop or break a forEach() loop other than by throwing an exception\"\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#sect2 "},"ts":1644581882466,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$EnERxe9owAHXgv6t9954gJlxi4EMC6catJk5AIX47zY"},
{"content":{"body":"maybe it could be even more explicit?","msgtype":"m.text","org.matrix.msc1767.text":"maybe it could be even more explicit?"},"ts":1644581913635,"senderName":"Ashley Claymore","senderId":"@aclaymore:matrix.org","id":"$WHqNsjEUPApig_K-AAG0LN26_gQWVhIfwy2Wy9topQE"},
{"content":{"body":"Good point, dunno then.","msgtype":"m.text","org.matrix.msc1767.text":"Good point, dunno then."},"ts":1644583587920,"senderName":"annevk","senderId":"@annevk:mozilla.org","id":"$iZvbCcKIGJBzFYlU6AGabYdtdK-KjWDKNBoSOaOIYNI"},
{"content":{"body":"OK, thanks all — yeah, seems like the OP just had the expectation that the `return` would break out of the `forEach()`. So I guess I’ll add something to the _“There is no way to stop or break a `forEach()` loop other than by throwing an exception”_ note explicitly saying that a `return` will not break out of the `forEach()` but will instead just return from the current call to the callback function, and the continue the loop.","format":"org.matrix.custom.html","formatted_body":"OK, thanks all — yeah, seems like the OP just had the expectation that the <code>return</code> would break out of the <code>forEach()</code>. So I guess I’ll add something to the <em>“There is no way to stop or break a <code>forEach()</code> loop other than by throwing an exception”</em> note explicitly saying that a <code>return</code> will not break out of the <code>forEach()</code> but will instead just return from the current call to the callback function, and the continue the loop.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"OK, thanks all — yeah, seems like the OP just had the expectation that the `return` would break out of the `forEach()`. So I guess I’ll add something to the _“There is no way to stop or break a `forEach()` loop other than by throwing an exception”_ note explicitly saying that a `return` will not break out of the `forEach()` but will instead just return from the current call to the callback function, and the continue the loop.","mimetype":"text/plain"},{"body":"OK, thanks all — yeah, seems like the OP just had the expectation that the <code>return</code> would break out of the <code>forEach()</code>. So I guess I’ll add something to the <em>“There is no way to stop or break a <code>forEach()</code> loop other than by throwing an exception”</em> note explicitly saying that a <code>return</code> will not break out of the <code>forEach()</code> but will instead just return from the current call to the callback function, and the continue the loop.","mimetype":"text/html"}]},"ts":1644584924074,"senderName":"sideshowbarker","senderId":"@sideshowbarker:mozilla.org","id":"$kdVjmu08aEeXJfEOUsk-sTP6WkO62zlbhTFR9Rjfcu4"},
{"content":{"body":"the easy workaround is to use `.every()` and `return true` to continue and `return false` to break","format":"org.matrix.custom.html","formatted_body":"the easy workaround is to use <code>.every()</code> and <code>return true</code> to continue and <code>return false</code> to break","msgtype":"m.text"},"ts":1644589029504,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$XPmhnRmR45O33Mv9mGAcHmEdajhie4f8Tv7J-lti4Dg"},
{"content":{"body":"but feels weird since it’s not a function supposed to be side effectful ","format":"org.matrix.custom.html","formatted_body":"but feels weird since it’s not a function supposed to be side effectful","msgtype":"m.text"},"ts":1644589059553,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$WB70mKPKVEKCvoYHQsKB_ooMQ2H-JnwyutQ8CbhJIBU"},
{"content":{"body":"* the easy workaround is to use `every` and `return true` to continue and `return false` to break","format":"org.matrix.custom.html","formatted_body":"* the easy workaround is to use <code>every</code> and <code>return true</code> to continue and <code>return false</code> to break","m.new_content":{"body":"the easy workaround is to use `every` and `return true` to continue and `return false` to break","format":"org.matrix.custom.html","formatted_body":"the easy workaround is to use <code>every</code> and <code>return true</code> to continue and <code>return false</code> to break","msgtype":"m.text"},"m.relates_to":{"event_id":"$XPmhnRmR45O33Mv9mGAcHmEdajhie4f8Tv7J-lti4Dg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1644589085855,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$lro6WtS7OQmpatuBJtRiJNAd3ZxoI6kotFXsEOwOyvM"},
{"content":{"body":"* the easy workaround is to use `.every()` and `return true` to continue and `return false` to break","format":"org.matrix.custom.html","formatted_body":"* the easy workaround is to use <code>.every()</code> and <code>return true</code> to continue and <code>return false</code> to break","m.new_content":{"body":"the easy workaround is to use `.every()` and `return true` to continue and `return false` to break","format":"org.matrix.custom.html","formatted_body":"the easy workaround is to use <code>.every()</code> and <code>return true</code> to continue and <code>return false</code> to break","msgtype":"m.text"},"m.relates_to":{"event_id":"$XPmhnRmR45O33Mv9mGAcHmEdajhie4f8Tv7J-lti4Dg","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1644589099373,"senderName":"Jessidhia","senderId":"@jessidhia:matrix.org","id":"$vfOGeGzWlkcWqEyuOtviyDea0gZQFfWyJI0788zmZLk"},
{"content":{"body":"Check for my own sanity: The fact that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence puts `? :` on a precedence level tighter than `=` and `yield` is incorrect, right? ","format":"org.matrix.custom.html","formatted_body":"Check for my own sanity: The fact that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence puts <code>? :</code> on a precedence level tighter than <code>=</code> and <code>yield</code> is incorrect, right?","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Check for my own sanity: The fact that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence puts `? :` on a precedence level tighter than `=` and `yield` is incorrect, right? ","mimetype":"text/plain"},{"body":"Check for my own sanity: The fact that https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence puts <code>? :</code> on a precedence level tighter than <code>=</code> and <code>yield</code> is incorrect, right?","mimetype":"text/html"}]},"ts":1644596344857,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$2Y6D6B_iXCN5f2y5cbfwH3kNWX_7uBGDhoEwQo_VfIw"},
{"content":{"body":"Because https://tc39.es/ecma262/#prod-AssignmentExpression says AssignmentExpression : ConditionalExpression and ConditionalExpression : ShortCircuitExpression `?` AssignmentExpression `:` AssignmentExpression.","format":"org.matrix.custom.html","formatted_body":"Because https://tc39.es/ecma262/#prod-AssignmentExpression says AssignmentExpression : ConditionalExpression and ConditionalExpression : ShortCircuitExpression <code>?</code> AssignmentExpression <code>:</code> AssignmentExpression.","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Because https://tc39.es/ecma262/#prod-AssignmentExpression says AssignmentExpression : ConditionalExpression and ConditionalExpression : ShortCircuitExpression `?` AssignmentExpression `:` AssignmentExpression.","mimetype":"text/plain"},{"body":"Because https://tc39.es/ecma262/#prod-AssignmentExpression says AssignmentExpression : ConditionalExpression and ConditionalExpression : ShortCircuitExpression <code>?</code> AssignmentExpression <code>:</code> AssignmentExpression.","mimetype":"text/html"}]},"ts":1644596366461,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$S7ZhBM_yRidOehHhY962AcawYcKxqcSBz7abKc-ZYjU"},
{"content":{"body":"(I already fixed one error in this table with `??` last year, so I’m not surprised there’s still other errors.)","format":"org.matrix.custom.html","formatted_body":"(I already fixed one error in this table with <code>??</code> last year, so I’m not surprised there’s still other errors.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(I already fixed one error in this table with `??` last year, so I’m not surprised there’s still other errors.)","mimetype":"text/plain"},{"body":"(I already fixed one error in this table with <code>??</code> last year, so I’m not surprised there’s still other errors.)","mimetype":"text/html"}]},"ts":1644596424166,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$khleJvGV_EsdgmLbnr08FXroR0gC_f2z6RJTfnRaJxg"},
{"content":{"body":"it's not really meaningful to talk about precedence for a ternary as a whole","msgtype":"m.text"},"ts":1644596498346,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$a4AD-jb2jLHzrFoYD0wLXBxz6WwnPr2KP4hEkGLvjyU"},
{"content":{"body":"but `yield a ? b : c` is `yield (a ? b : c)` and `x = a ? b : c` is `x = (a ? b : c)`","format":"org.matrix.custom.html","formatted_body":"but <code>yield a ? b : c</code> is <code>yield (a ? b : c)</code> and <code>x = a ? b : c</code> is <code>x = (a ? b : c)</code>","msgtype":"m.text"},"ts":1644596499736,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jS6m7GgzeGw9Dzg-SzlWJeW_0WYK92sd2NFrc4Qh-jM"},
{"content":{"body":" * but `yield a ? b : c` is `yield (a ? b : c)` and `x = a ? b : c` is `x = (a ? b : c)`","format":"org.matrix.custom.html","formatted_body":" * but <code>yield a ? b : c</code> is <code>yield (a ? b : c)</code> and <code>x = a ? b : c</code> is <code>x = (a ? b : c)</code>","m.new_content":{"body":"but `yield a ? b : c` is `yield (a ? b : c)` and `x = a ? b : c` is `x = (a ? b : c)`","format":"org.matrix.custom.html","formatted_body":"but <code>yield a ? b : c</code> is <code>yield (a ? b : c)</code> and <code>x = a ? b : c</code> is <code>x = (a ? b : c)</code>","msgtype":"m.text"},"m.relates_to":{"event_id":"$jS6m7GgzeGw9Dzg-SzlWJeW_0WYK92sd2NFrc4Qh-jM","rel_type":"m.replace"},"msgtype":"m.text"},"ts":1644596511977,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$jC-hYxdvaX63UEX0RRsTd1RXdwc1Gf-BgBmy_bIH4wg"},
{"content":{"body":"so to the extent there is precedence at all, I think it's correct to say that `yield` binds less tightly than `? :`","format":"org.matrix.custom.html","formatted_body":"so to the extent there is precedence at all, I think it's correct to say that <code>yield</code> binds less tightly than <code>? :</code>","msgtype":"m.text"},"ts":1644596533050,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$bRQPeEq32j9MHf2ymyatRyhMNfLDswYNrKE4WxoRmDQ"},
{"content":{"body":"Point taken. This is mostly a result of the weird interactions between ternary and unary/binary operators…","msgtype":"m.text","org.matrix.msc1767.text":"Point taken. This is mostly a result of the weird interactions between ternary and unary/binary operators…"},"ts":1644596808238,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$Z4CjdNIkVazf1bFHcKt3HVomRBauv4pfD5jmaJvl9Bw"},
{"content":{"body":"well, and assignment","msgtype":"m.text"},"ts":1644597138764,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$m7K0vdu0VIYngFOHxUUu4_nPKNTV0lJOcN5j2t78nFY"},
{"content":{"body":"`yield` is less weird because `yield a` is always `yield a` in any of the three positions","format":"org.matrix.custom.html","formatted_body":"<code>yield</code> is less weird because <code>yield a</code> is always <code>yield a</code> in any of the three positions","msgtype":"m.text"},"ts":1644597169742,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$oLTPD6GL1d8d7DJfYUojiZYqQpgzf8_NEZvQlZRzXQM"},
{"content":{"body":"but assignment is weird because `a = b ? c : d` parses as assignment-containing-ternary whereas `a ? b : c = d` parses as ternary-containing-assignment","format":"org.matrix.custom.html","formatted_body":"but assignment is weird because <code>a = b ? c : d</code> parses as assignment-containing-ternary whereas <code>a ? b : c = d</code> parses as ternary-containing-assignment","msgtype":"m.text"},"ts":1644597204756,"senderName":"bakkot","senderId":"@bakkot:matrix.org","id":"$xMur5_nRV9iV2Sd3GpM6lhf540GRlcVVU37X9h0O_Rc"},
{"content":{"body":"Yeah, and assignment’s weird asymmetry too.","msgtype":"m.text","org.matrix.msc1767.text":"Yeah, and assignment’s weird asymmetry too."},"ts":1644597216361,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$xW3vIjZk9lk3dAse-vpgTPRQ3FGdZSn1TLZLsNGobvc"},
{"content":{"body":"Come to think of it, I still want to add `=>` to this table, since it is pretty much analogous to `=`…","format":"org.matrix.custom.html","formatted_body":"Come to think of it, I still want to add <code>=&gt;</code> to this table, since it is pretty much analogous to <code>=</code>…","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"Come to think of it, I still want to add `=>` to this table, since it is pretty much analogous to `=`…","mimetype":"text/plain"},{"body":"Come to think of it, I still want to add <code>=&gt;</code> to this table, since it is pretty much analogous to <code>=</code>…","mimetype":"text/html"}]},"ts":1644597252777,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$8lRD4q0-iJ8CHVC7aIdXcBfIW7oPaB7ol0BTZdfaTOE"},
{"content":{"body":"`=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","format":"org.matrix.custom.html","formatted_body":"<code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/plain"},{"body":"<code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/html"}]},"ts":1644597319848,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$NUZly4fNyTW-EfHYnK7VZFcNF2Lb7fF3mZJyrciGxks"},
{"content":{"body":"(All of this weirdness is also why we are banning mixing any of these within `|>` pipe expressions without parentheses.)","format":"org.matrix.custom.html","formatted_body":"(All of this weirdness is also why we are banning mixing any of these within <code>|&gt;</code> pipe expressions without parentheses.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"(All of this weirdness is also why we are banning mixing any of these within `|>` pipe expressions without parentheses.)","mimetype":"text/plain"},{"body":"(All of this weirdness is also why we are banning mixing any of these within <code>|&gt;</code> pipe expressions without parentheses.)","mimetype":"text/html"}]},"ts":1644597487066,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$hTeBlxaCqb7ZxMyoXSiNLihTr8DmkKM0YcyAfIdW9l0"},
{"content":{"body":" * `=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","format":"org.matrix.custom.html","formatted_body":" * <code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","m.new_content":{"body":"`=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","format":"org.matrix.custom.html","formatted_body":"<code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","msgtype":"m.text","org.matrix.msc1767.message":[{"body":"`=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/plain"},{"body":"<code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/html"}]},"m.relates_to":{"event_id":"$NUZly4fNyTW-EfHYnK7VZFcNF2Lb7fF3mZJyrciGxks","rel_type":"m.replace"},"msgtype":"m.text","org.matrix.msc1767.message":[{"body":" * `=` and `=>` are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/plain"},{"body":" * <code>=</code> and <code>=&gt;</code> are both more like…prefix unary operators on their RHS. (With possible evaluation on any default expressions in their LHS afterwards.)","mimetype":"text/html"}]},"ts":1644597511567,"senderName":"jschoi","senderId":"@jschoi:matrix.org","id":"$PoM_-tjkVLP-ibSeiJlFZj669B0EyoStliH5SIAtrVQ"},
{"content":{"body":"Still think that forEach should be extended to pass the callback a fourth argument that's a \"halt token\", which stops execution if you return it. Then the four callback arguments will be Element, Index, Collection, Halt, or EICH","msgtype":"m.text","org.matrix.msc1767.text":"Still think that forEach should be extended to pass the callback a fourth argument that's a \"halt token\", which stops execution if you return it. Then the four callback arguments will be Element, Index, Collection, Halt, or EICH"},"ts":1644601484659,"senderName":"TabAtkins","senderId":"@tabatkins:matrix.org","id":"$aRi-15yRz7La7Ed--AE3jA5aGw-3LlPliZduFxmbn0Q"},
{"content":{"body":"Or just don't use forEach... for-of is just way better IMO.","msgtype":"m.text","org.matrix.msc1767.text":"Or just don't use forEach... for-of is just way better IMO."},"ts":1644603918114,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$1EKbAJVpo_1ubtRFjyNTAMm5E5R7wJQkgUeFpTaSyt4"},
{"content":{"body":"https://ericlippert.com/2009/05/18/foreach-vs-foreach/","msgtype":"m.text","org.matrix.msc1767.text":"https://ericlippert.com/2009/05/18/foreach-vs-foreach/"},"ts":1644604094577,"senderName":"Domenic","senderId":"@domenicdenicola:matrix.org","id":"$dwSI0Sod_9BpmIJGSgJY_fJ8QF1yAPWLlqz1tByp74E"}
]