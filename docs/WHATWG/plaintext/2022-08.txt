2022-08-01
[19:55:01.0738] <dd perdana2>
hallo  every body

[00:14:51.0336] <Kaiido>
Hello, all.
I just noticed a small typo in a section's id in the DOM specs and am not sure what's the best action (since this is used as link, maybe in many places). The section is https://dom.spec.whatwg.org/#action-versus-occurance I guess fixing it is not worth the trouble of potentially breaking existing links? (The readable text is fine)

[00:16:31.0818] <sideshowbarker>
Howdy Kaiido: it‚Äôs possible to add a new ID while preserving the existing ID

[00:17:38.0519] <Andreu Botella>
Usually ID's are autogenerated from the heading text, at least in Bikeshed, and if this one isn't, it might be because the typo was fixed in the heading but the ID had to stay the same to avoid breaking links

[00:17:51.0798] <Andreu Botella>
 * Usually ID's are autogenerated from the heading text, at least in Bikeshed, and if this one isn't, it might be because the typo was fixed in the heading but the ID had to stay the same to avoid breaking links

[00:18:13.0349] <sideshowbarker>
that particular ID is hardcoded in the source, for some reason

[00:18:25.0821] <Andreu Botella>
I also see British "initialisation" in the ID with American "initialization" in the dfn text sometimes

[00:19:19.0612] <sideshowbarker>
> <@abotella:igalia.com> I also see British "initialisation" in the ID with American "initialization" in the dfn text sometimes

you see that in any WHATWG specs?

[00:19:34.0019] <Kaiido>
Yes I would also have thought https://dom.spec.whatwg.org/#action-versus-occurence would be working but it doesn't.

[00:20:09.0239] <sideshowbarker>
yeah that‚Äôs because of it being hardcoded ‚Äî that overrides the Bikeshed auto-generation

[00:20:47.0798] <sideshowbarker>
but the existing `id=action-versus-occurance` could be moved to a `span` child of that `h3`

[00:21:17.0830] <sideshowbarker>
‚Ä¶and then the Bikeshed auto-generation of the ID on the `h3` will work as expected, and the existing ID will work too

[00:21:25.0334] <Andreu Botella>
> <@sideshowbarker:mozilla.org> you see that in any WHATWG specs?

https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps

[00:21:29.0242] <sideshowbarker>
‚Ä¶I think

[00:21:40.0338] <sideshowbarker>
pretty sure I have actually done that before, in some cases

[00:22:54.0457] <sideshowbarker>
> <@abotella:igalia.com> https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps

ah‚Ä¶ I blame Hixie :) that must have been in there for a long time

[00:24:48.0805] <sideshowbarker>
https://ian.hixie.ch/bible/english

[00:26:11.0084] <sideshowbarker>
but I think Hixie always had the spec as `lang=en-US-hixie` so that _‚Äúinitialisation‚Äù_ would have always been a bug anyway

[04:21:13.0628] <Jake Archibald>
When adding spec data to JS objects, I've seen some people use internal slots, whereas others just say "SomeObject has a <dfn for="SomeObject">thing</dfn>". Is there a 'right' way?

[04:21:38.0558] <Jake Archibald>
I usually just do the latter

[05:24:32.0495] <Jake Archibald>
Also, if a callback is put in an internal slot, does it impact the `this` value in the callback when it's called?

[05:44:46.0926] <Domenic>
I prefer the latter, and am somewhat responsible for introducing the former

[05:45:34.0070] <Domenic>
Is a callback a Web IDL callback, or an algorithm? Web IDL callbacks need to be called with specific thisArgs via https://webidl.spec.whatwg.org/#invoke-a-callback-function

[07:42:37.0177] <Jake Archibald>
It's a WebIDL callback. Ok, I'll move the shared element transition spec away from internal slots

[07:42:41.0671] <Jake Archibald>
ts!

[08:30:34.0210] <Jake Archibald>
 * ta!


2022-08-02
[07:23:42.0119] <smaug>
hmm, I'm having trouble to find which spec defines these days that https: pages can use only wss:, not ws:

[07:35:32.0903] <smaug>
oh, hm, is it now part of 'Mixed Content'

[13:24:13.0532] <bakkot>
does anyone know who officially speaks for Mozilla on decisions like https://github.com/WICG/uuid/issues/23 now? I would like to revisit it given the most recent comment in that thread but I understand annevk left.

[16:25:12.0389] <DerekNonGeneric>
bakkot: maybe arai would either be the person or might know who that would be nowadays (might even be yulia afaik)

[16:29:47.0192] <sideshowbarker>
bakkot: maybe @-mention `martinthomson` (his GitHub user ID) in a https://github.com/WICG/uuid/issues/23 comment


2022-08-03
[00:40:38.0894] <Jake Archibald>
annevk: emilio: Is there anyone at WebKit & Mozilla who'd be interested in joining a sync about shared element transitions? Particularly interested in implementor feedback

[05:54:18.0877] <emilio>
> <@jakea:matrix.org> annevk: emilio: Is there anyone at WebKit & Mozilla who'd be interested in joining a sync about shared element transitions? Particularly interested in implementor feedback

Depending on timing I might be able to join, or I can ask around.

[06:52:04.0909] <Jake Archibald>
emilio: we'll look to time it so you can join üòÄ

[06:53:33.0907] <emilio>
Jake Archibald: Are you looking for feedback in some area in particular? Just in case I need to check with the graphics folks and so on :)

[06:58:34.0802] <Jake Archibald>
emilio: I want to make sure the feature isn't designed "for Chromium". As in, are there changes that could be made to make it easier to implement in Gecko (without compromising developer experience)? Are there parts of the design that you feel currently compromise developer experience due to an implementation detail unique to Chromium. But also I'd just like a general review of the feature from someone familiar with the platform.

[10:10:45.0828] <Rhonnell Hari>
üëçÔ∏è

[10:11:50.0440] <Rhonnell Hari>
Rhonnell Hari: 


2022-08-04
[00:04:12.0735] <Jake Archibald>
I think I've asked this before, but when do we use `abort these steps` vs `return`? I tend to use `abort these steps` where returning a value wouldn't make sense, eg in a queued task, or in parallel. Is that‚Ä¶ right?

[05:59:41.0975] <Domenic>
That's right!


2022-08-06
[18:34:31.0786] <sideshowbarker>
https://stackoverflow.com/questions/73254813/javascript-using-fetch-api-to-send-same-origin-get-request-with-non-null-origin

I think the answer is No, there‚Äôs no way to cause an Origin header to be added to a same-origin GET request. Right?


2022-08-07
[06:02:39.0377] <Noam Rosenthal>
Right, it's a forbidden header, so it's ignored from the Headers JS constructor https://fetch.spec.whatwg.org/#forbidden-header-name


2022-08-08
[02:19:55.0184] <Jake Archibald>
sideshowbarker: `Origin` will be added to same-origin CORS requests

[02:24:11.0753] <Jake Archibald>
 * sideshowbarker: `Origin` will be added to same-origin CORS requests - no, I'm wrong

[02:28:06.0450] <Jake Archibald>
Same-origin CORS requests have their response tainting set to "`basic`", so they don't get an origin header

[02:30:50.0087] <evilpie>
For non-GET requests we do need to set the header though, the current spec is not web compatible https://github.com/whatwg/fetch/issues/1022

[04:04:58.0405] <sideshowbarker>
emilio: https://stackoverflow.com/questions/73275184/enable-shared-array-buffer-in-cross-domain any clues?

[04:57:41.0228] <emilio>
Not off the top of my head

[05:05:07.0147] <sideshowbarker>
Yeah I took a quick look at the Gecko sources in the hope it might be easy to see what conditions would lead to that error message being emitted, but that quick look was enough to see that a much longer look would be needed to figure it out..

[06:04:12.0699] <Noam Rosenthal>
Doesn't he also need `allow="cross-origin-isolated"` on the iframe?

[07:53:13.0406] <zcorpan>
Hello again whatwg

[07:55:44.0832] <Ms2ger üíâüíâ>
\o

[10:23:17.0434] <snek>
is there no property on KeyboardEvent that matches cmd on macs and ctrl on everything else

[10:23:33.0973] <snek>
i really do not want to do os detection lol


2022-08-09
[18:25:03.0425] <sideshowbarker>
bakkot: Does your Matrix logger work by way of a bot on the channel that parses incoming messages?
Or does it instead parse the https://view.matrix.org/ logs/format?

[18:57:22.0887] <Maxim Vaarwel>
Could anyone explain me what kind of difference between top-level browsing context and auxiliary browsing context?

[19:46:16.0730] <Domenic>
Maxim Vaarwel: An auxiliary BC is a type of top-level BC. In particular it's one that was created via window.open() or target="_blank" or similar, i.e. there is an opener/openee relationship.

[20:16:00.0162] <bakkot>
sideshowbarker: it hits the "get messages" API, which does not require the bot to be in the channel

[20:16:01.0338] <bakkot>
https://spec.matrix.org/latest/client-server-api/#get_matrixclientv3roomsroomidmessages

[20:16:18.0172] <bakkot>
https://github.com/bakkot/matrix-archive-bot/blob/b9b96934f9af87127e8734f37b4d0f988550316b/run.mjs#L257

[20:17:10.0516] <bakkot>
(I should say, does not require the bot to be in the channel as long as the room history is set to be viewable to everyone, not just joined members.)

[20:39:43.0185] <sideshowbarker>
bakkot: excellent „Éº thanks much

[04:21:58.0292] <Omar Sehlouli>
Hello ! I have a question

[04:22:00.0734] <Omar Sehlouli>
I set up flask_cors on the server side, but still when I set up my extension to send POST request, this occurs


[04:26:05.0619] <Omar Sehlouli>
I have provided some additional images, I'm stuck at this for like a day, and I can't figure out why 

[04:58:25.0111] <Luca Casonato>
Your options request should return an 200 OK status, not a 401

[05:00:45.0733] <Luca Casonato>
CORS preflight (OPTIONS) requests must return a 200 or 204 status code to be considered successful

[06:05:43.0908] <Omar Sehlouli>
Yeah, but how can I resolve the issue? it returns 401, because it needs an authorization header 

[06:06:53.0866] <Omar Sehlouli>
the preflight sends a request to see if they accept authorization as a header first with method : POST , before sending the actual POST request. Please correct me if I'm wrong but that's what I have understood

[06:14:44.0787] <Luca Casonato>
You should not perform access control handling on the options request. The response to the options request should just indicate if the server is willing to process the real request at all, not if the real request will succeed or fail

[06:15:21.0151] <Omar Sehlouli>
I have handled it, thanks to your answer. I have reread your answer and understood what I should do

[06:15:44.0398] <Omar Sehlouli>
I have added an ( if not request.method == 'OPTIONS' ) and it worked

[06:16:23.0904] <Omar Sehlouli>
Thank you again!

[08:43:38.0008] <smaug>
MikeSmith: didn't you have a page listing all the specs?

[08:46:14.0720] <Ms2ger üíâüíâ>
https://platform.html5.org? Seems down from here, though

[08:47:02.0419] <Ms2ger üíâüíâ>
smaug: ^

[08:47:55.0040] <smaug>
it was possibly page like that (though, then one I used actually loaded üôÇ )

[08:48:29.0302] <smaug>
I was just looking at some helper page for someone not so familiar with various specs.

[11:58:51.0483] <aktiras12>
E


2022-08-10
[02:23:53.0142] <sideshowbarker>
> <@smaug:mozilla.org> I was just looking at some helper page for someone not so familiar with various specs.

https://w3c.github.io/mdn-spec-links/ is the closest thing I have this point ‚Äî as far as what‚Äôs up-to-date and actively maintained

‚Ä¶however that page doesn‚Äôt currently/yet have links to the specs themselves ‚Äî¬†but I can add that

Unlike https://platform.html5.org/ it doesn‚Äôt organize the specs into any category groupings ‚Äî and I really have no plans to ever make it do that.

But the nature of it is, it represents the set of specs that we actually have some documentation for in MDN. So it‚Äôs fairly complete as far as representing what specs constitute the feature set for the web platform.

[02:25:18.0606] <smaug>
I was indeed looking for some page which has links to the specs

[02:25:59.0757] <sideshowbarker>
well I can add links to that page, if you think the page with those links added would be useful for what you had in mind

[02:30:16.0004] <smaug>
sideshowbarker: or would it be possible to get https://platform.html5.org/ back üôÇ 

[02:30:47.0402] <smaug>
I think that is the page which had rather nice simple UI

[02:30:58.0640] <sideshowbarker>
https://platform.html5.org/ is working for me

[02:31:13.0282] <sideshowbarker>
it just has not been updated in literally years

[02:32:06.0622] <smaug>
Not loading here.

[02:33:43.0358] <sideshowbarker>
ah yeah I guess it was loading from cache for me

[02:36:25.0503] <sideshowbarker>
OK, some Dreamhost issue. I forget now how we have that set up but I think the DNS is through Dreamhost with a CNAME or whatever, and the actual content is served from where all the whatwg.org content is served from

[02:38:10.0964] <smaug>
The idea is roughly to show some part of the problem space for someone who is coming outside the web platform world. Having a list of specs may give a relatively good hint how vastly different APIs and features we're dealing with.

[02:38:23.0157] <sideshowbarker>
OK

[02:43:24.0277] <sideshowbarker>
it will take me a while to figure out why https://platform.html5.org/ isn‚Äôt responding ‚Äî but in the meantime I can at least get the spec URLs added to https://w3c.github.io/mdn-spec-links/

that I think I can do right now

[03:24:08.0785] <sideshowbarker>
smaug: https://w3c.github.io/mdn-spec-links/ now has all the spec URLs

That‚Äôs the best I can do for now.

Eventually I may be able to replicate https://platform.html5.org/ by writing something that creates an alternative view with them grouped into categories. But that will take quite a lot more time than just adding the spec URLs did.

Anyway, it seems like this list does meet the needs of giving a hint about the vastly different APIs and features we're dealing with. It‚Äôs close to 300 specs now‚Ä¶

[03:24:42.0912] <smaug>
that is good, thanks

[03:31:33.0742] <sideshowbarker>
hmm I just thought of one other piece of data I could add that might be useful: I can add a number indicating the how many times MDN articles reference each spec.

So, for example, it‚Äôll show that the Accelerometer spec is referenced by 10 MDN articles whereas the HTML spec is referenced by 1087

[03:45:04.0246] <sideshowbarker>
OK https://w3c.github.io/mdn-spec-links/ now shows the MDN-article counts

That seems useful for getting a quick sense of the relative importance of each spec.

[03:46:54.0431] <sideshowbarker>
‚Ä¶though it‚Äôs a bit surprising to see that WebXR has 109 MDN articles ‚Äî and even more surprising to see that WebCodecs has 100 MDN articles‚Ä¶

[03:48:30.0284] <sideshowbarker>
lord, I wonder who wrote all those WebCodecs articles‚Ä¶ that‚Äôs pretty epic

[03:49:19.0010] <sideshowbarker>
none of that implemented outside of Blink yet, I don‚Äôt think

[03:53:48.0131] <sideshowbarker>
well, I guess that‚Äôs an indication that using the count of MDN articles to evaluate the relative importance of a particular spec needs to be tempered by an understanding that part of the way things get into MDN based is based on organizations funding somebody to write up the articles (which can be based on that organization‚Äôs particular priorities and not necessarily on how important the feature is to the platform‚Ä¶)

[04:41:32.0065] <smaug>
Domenic: do you know who from Google side knows about spellchecking in Chrome (at least Chrome/linux)?

[04:41:48.0451] <smaug>
 * Domenic: do you know who from Google side knows about spellchecking in Chrome (at least Chrome/linux)?

[04:59:17.0947] <Domenic>
smaug: no, sorry!


2022-08-12
[02:09:09.0254] <zcorpan>
MikeSmith: how does one propose a tpac breakout session?

[03:17:26.0155] <sideshowbarker>
> <@zcorpan_:matrix.org> MikeSmith: how does one propose a tpac breakout session?

Per https://www.w3.org/2022/09/TPAC/#schedule I guess on August 16 some mechanism will be flipped on to allow proposals to be submitted

[03:18:42.0811] <zcorpan>
sideshowbarker: oooh, I misread it as saying Aug 16 was the deadline

[04:04:00.0777] <yulia>
hey folks, question about the workers spec

[04:04:45.0438] <yulia>
in https://html.spec.whatwg.org/multipage/workers.html#worker-processing-model we have the following line in step 14: 

`In both cases, to perform the fetch given request, perform the following steps if the is top-level flag is set:`

[04:05:02.0625] <yulia>
for the definition of is top-level we have the following https://html.spec.whatwg.org/multipage/webappapis.html#fetching-scripts-is-top-level

[04:05:29.0689] <yulia>
reading through this, it seems like `is top-level` only applies to modules, but not to classic scripts imported via `importScripts`. Is that correct or am i missing something here?

[04:05:54.0407] <yulia>
In other words, for an importScript, we should run the steps in instruction 14, as the `is top-level` bit will not be set

[04:06:28.0789] <yulia>
 * In other words, for an importScript, we should run the steps in instruction 14, as the `is top-level` bit will not be set

[04:07:05.0143] <yulia>
but, the only excluded form of loading that is explicitly called out is dynamic import

[04:10:50.0373] <yulia>
probably a question for Domenic or possible annevk ?

[04:14:38.0143] <yulia>
 * but, the only excluded form of loading that is explicitly called out is dynamic import. In addition, the steps in 14 are doing various initialization steps on the worker global. I wouldn't expect those to be repeated when we import something into the global. 

[04:15:16.0450] <yulia>
 * but, the only excluded form of loading that is explicitly called out is dynamic import. In addition, the steps in 14 are doing various initialization steps on the worker global. I wouldn't expect those to be repeated when we import something into the global. It also looks like those are really meant to be initialized with the agent cluster based on the note. 

[05:56:39.0168] <Domenic>
Happy to try to answer via issue filed on whatwg/html on Monday! It's Friday night over in Japan :)

[06:02:22.0465] <yulia>
sounds good


2022-08-15
[17:53:00.0046] <Maxim Vaarwel>
I need a help. I asked a question on the github whatwg. Domenic adviced to me re-ask it here. So text of my question [here](https://github.com/whatwg/html/issues/8195)

By the way Domenic could you give an answer, if you ain't busy?

[17:53:16.0226] <Domenic>
I'm pretty busy, sorry!

[19:16:20.0080] <sideshowbarker>
Looking at https://github.com/mdn/content/issues/19551

OP questions this statement:
> A string indicating how much of a service worker's resources will be updated when a call is made to [`ServiceWorkerRegistration.updateViaCache`](https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache)

Maybe that‚Äôs actually correct as-is?

[01:22:23.0185] <sideshowbarker>
About moving XMLSerializer into HTML, I notice we don‚Äôt even have an open issue for in it the HTML issue tracker.

So I guess it‚Äôs not likely to happen any time soon, and we‚Äôll continue to have https://w3c.github.io/DOM-Parsing/ hanging around‚Ä¶

[01:22:47.0782] <sideshowbarker>
 * About moving XMLSerializer into HTML, I notice we don‚Äôt even have an open issue for in it the HTML issue tracker.

So I guess it‚Äôs not likely to happen any time soon, and we‚Äôll continue to have https://w3c.github.io/DOM-Parsing/ hanging around‚Ä¶

[04:11:27.0895] <Domenic>
It's just a lot of work, yeah, until someone steps up...

[04:12:03.0097] <Domenic>
Mostly modernizing and rigorizing the algorithms, checking that test coverage is reasonable


2022-08-16
[00:18:27.0426] <sideshowbarker>
Do browsers do anything with `Digest` headers?

https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Digest

[00:18:49.0740] <sideshowbarker>
 * Do browsers do anything with `Digest` headers?

https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Digest

[00:45:39.0862] <annevk>
sideshowbarker: I'm pretty sure they don't; there was some discussion about maybe using them when integrity metadata got designed, but I don't think that went anywhere

[00:47:34.0136] <sideshowbarker>
> <@annevk:matrix.org> sideshowbarker: I'm pretty sure they don't; there was some discussion about maybe using them when integrity metadata got designed, but I don't think that went anywhere

Yeah I just now did some grepping through engine source code for `Want-Digest` and `Digest` and found nothing (the string `Digest` in some other contexts, but not as an HTTP header/field of its own)

[00:55:47.0039] <sideshowbarker>
PSA: #w3.org:matrix.org is a Matrix ‚ÄúSpace‚Äù I‚Äôve set up that contains 60+ rooms ‚Äî most of them bridged to the corresponding irc.w3.org existing IRC channels. Feel free to join the space and any of the rooms, and if you run into any problems, let me know

[12:34:23.0583] <seiziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziz>
https://www.youtube.com/watch?v=Ei0dR8yHC0w


2022-08-18
[18:34:45.0264] <Domenic>
Does anyone have good writeups on why "you should use URL/URIs as your API's unique ID format" turned out poorly and has mostly been abandoned? Maybe hsivonen?

[19:13:27.0435] <sideshowbarker>
zcorpan: FYI https://www.w3.org/wiki/TPAC/2022/SessionIdeas

[00:00:02.0484] <hsivonen>
> <@domenicdenicola:matrix.org> Does anyone have good writeups on why "you should use URL/URIs as your API's unique ID format" turned out poorly and has mostly been abandoned? Maybe hsivonen?

I think I don't have a blog post of that kind. I don't recall if I've written a public-html email like that long ago or not. Sorry.

[00:00:26.0351] <Domenic>
Searching mailing list archives is a good idea...

[00:04:37.0508] <Domenic>
Hmm, that was a mistake, URI/URL discussions on mailing lists are terrible, I'd forgotten how bad

[06:51:57.0385] <Maxim Vaarwel>
Every task has [script evaluation environment settings object set](https://html.spec.whatwg.org/multipage/webappapis.html#script-evaluation-environment-settings-object-set). What is this case when task has in set more than one  environment settings object? I couldn't find anything that would be match with that case.

[09:31:25.0788] <Sam Sneddon [:gsnedders]>
is it expected that platform.html5.org is down? is there anything else similar (e.g., derived from `w3c/browser-specs`) that is up? (cc annevk given AFAIK it's his server or at least domain?)

[09:35:21.0510] <sideshowbarker>
Sam Sneddon [:gsnedders]: coincidentally, I‚Äôve been working on an update to platform.html5.org, so I do have something similar and I can have it up pretty shortly

‚Ä¶and as far as platform.html5.org itself, it‚Äôs not expected that it should be down ‚Äî I think there‚Äôs some intermittent problem at Dreamhost that‚Äôs causing it to go down, but I don‚Äôt have the access to troubleshoot it.

The DNS is through Dreamhost but it‚Äôs just a CNAME to an address on the whatwg.org infrastructure.

[09:48:57.0163] <sideshowbarker>
Sam Sneddon [:gsnedders]: https://w3c.github.io/mdn-spec-links/

[09:50:11.0781] <sideshowbarker>
smaug: ‚Üë

[09:53:05.0893] <sideshowbarker>
I‚Äôll also have that up at platform.html5.org once we get the routing problem figured out

[09:53:10.0840] <sideshowbarker>
 * I‚Äôll also have that up at platform.html5.org once we get the routing problem figured out

[09:53:30.0250] <smaug>
sideshowbarker: curious, what does the number in Docs column mean?

[09:54:03.0001] <sideshowbarker>
it‚Äôs the number of MDN articles which reference the given spec

[09:55:24.0626] <smaug>
Can one see the references in MDN somewhere?

[09:56:27.0335] <sideshowbarker>
those are in data files; e.g., https://w3c.github.io/mdn-spec-links/accelerometer.json

[09:56:36.0734] <sideshowbarker>
I guess I can add links to those too

[09:57:02.0807] <sideshowbarker>
the keys in those data files are IDs/anchors in the spec

[09:57:44.0739] <sideshowbarker>
the `slug` values are the pathnames of the MDN articles

[09:58:55.0044] <sideshowbarker>
I guess I should also mention that the HTML output is generated from https://w3c.github.io/mdn-spec-links/specdata.json

[10:01:16.0005] <sideshowbarker>
‚Ä¶which is an array of objects where each object represents a spec and has its URL and the associated wpt.fyi URL and caniuse URL and MDN URL and then an array of which engines currently support the spec

[10:01:47.0314] <sideshowbarker>
 * ‚Ä¶which is an array of objects where each object represents a spec and has its URL and the associated wpt.fyi URL and caniuse URL and MDN URL and then array of which engines currently support the spec

[10:02:17.0131] <sideshowbarker>
 * ‚Ä¶which is an array of objects where each object represents a spec and has its URL and the associated wpt.fyi URL and caniuse URL and MDN URL and then an array of which engines currently support the spec


2022-08-19
[02:26:38.0978] <Jake Archibald>
Reading https://webidl.spec.whatwg.org/#dfn-distinguishable‚Ä¶

Why aren't callbacks and dictionaries distinguishable? Is it because functions can have properties, therefore be read as dictionaries?

[02:41:55.0904] <Jake Archibald>
I was hoping to create a union/overload where something is treated as a callback if it's callable, otherwise treat it as a dictionary

[04:19:01.0907] <sideshowbarker>
smaug: Sam Sneddon [:gsnedders] https://platform.html5.org/ appears to be back ‚Äî for now

‚Ä¶and it now has my rewrite/redesign ‚Äî which I made some tweaks to today

I added more tooltip text, so if you mouse over the CanIUse icons and the ‚ö† and ‚úî icons, it now tells you exactly which engines the spec is implemented in

[04:20:05.0597] <sideshowbarker>
 * smaug: Sam Sneddon [:gsnedders] https://platform.html5.org/ appears to be back ‚Äî for now

‚Ä¶and it now has my rewrite/redesign ‚Äî which I made some tweaks to today

I added more tooltip text, so if you mouse over the CanIUse icons and the ‚ö† and ‚úî icons, it now tells you exactly which engines the spec is implemented in

If/when https://platform.html5.org/ goes down again, I still have it mirrored at https://w3c.github.io/mdn-spec-links/

[11:40:26.0339] <bakkot>
can anyone point me to the source repo for https://html.spec.whatwg.org/entities.json ?

[11:40:34.0902] <bakkot>
I poked around and couldn't find it

[11:40:49.0360] <bakkot>
I know it's not supposed to change at this point but I'm curious

[11:41:39.0181] <Andreu Botella>
I think it's https://github.com/whatwg/html-build/tree/main/entities

[11:47:15.0119] <bakkot>
aha, thanks Andreu Botella 


2022-08-20
[18:46:08.0449] <sideshowbarker>
TabAtkins: I raised https://github.com/w3c/csswg-drafts/pull/7631 ‚Äî though in general I don‚Äôt know what the criteria are for graduating a feature from a higher-level CSS spec version to a lower-level version

Also I reckon that at https://github.com/w3c/csswg-drafts/pull/7631/files#diff-085d78c8df023b773f3d83752e37b42504653aa890a136287411337bd835a97cL98 I didn‚Äôt get the syntax update done right ‚Äî but I basically didn‚Äôt know enough to figure out how to resolve the discrepancy between the (more-complete) syntax that the Level 2 spec says is allowed, and the syntax that the Level 3 spec provides (which seems like it must be an unintentionally incomplete monkey patching‚Ä¶)

[18:46:44.0309] <sideshowbarker>
 * TabAtkins: I raised https://github.com/w3c/csswg-drafts/pull/7631 ‚Äî though in general I don‚Äôt know what the criteria are for graduating a feature from a higher-level CSS spec version to a lower-level version

Also I reckon that at https://github.com/w3c/csswg-drafts/pull/7631/files#diff-085d78c8df023b773f3d83752e37b42504653aa890a136287411337bd835a97cL98 I didn‚Äôt get the syntax update done right ‚Äî but I basically didn‚Äôt know enough to figure out how to resolve the difference between the (more-complete) syntax that the Level 2 spec says is allowed, and the the syntax that the Level 3 spec provides (which seems like it must be an unintentionally incomplete monkey patching‚Ä¶)

[18:46:54.0867] <sideshowbarker>
 * TabAtkins: I raised https://github.com/w3c/csswg-drafts/pull/7631 ‚Äî though in general I don‚Äôt know what the criteria are for graduating a feature from a higher-level CSS spec version to a lower-level version

Also I reckon that at https://github.com/w3c/csswg-drafts/pull/7631/files#diff-085d78c8df023b773f3d83752e37b42504653aa890a136287411337bd835a97cL98 I didn‚Äôt get the syntax update done right ‚Äî but I basically didn‚Äôt know enough to figure out how to resolve the difference between the (more-complete) syntax that the Level 2 spec says is allowed, and the syntax that the Level 3 spec provides (which seems like it must be an unintentionally incomplete monkey patching‚Ä¶)

[18:48:09.0376] <sideshowbarker>
 * TabAtkins: I raised https://github.com/w3c/csswg-drafts/pull/7631 ‚Äî though in general I don‚Äôt know what the criteria are for graduating a feature from a higher-level CSS spec version to a lower-level version

Also I reckon that at https://github.com/w3c/csswg-drafts/pull/7631/files#diff-085d78c8df023b773f3d83752e37b42504653aa890a136287411337bd835a97cL98 I didn‚Äôt get the syntax update done right ‚Äî but I basically didn‚Äôt know enough to figure out how to resolve the discrepancy between the (more-complete) syntax that the Level 2 spec says is allowed, and the syntax that the Level 3 spec provides (which seems like it must be an unintentionally incomplete monkey patching‚Ä¶)

[06:36:01.0226] <Katyusha #KatsulaPharma.com>
hello


2022-08-21
[08:08:44.0505] <kraftwer1>
Hi there! I Appreciate your work! üòÄ
I was wondering why UA fire a `toggle` event on `detailsEl.open = true`? Was it *really* the intention of the spec?
It seems unusual to me because I‚Äôve never seen any events fired on *programatic* IDL changes.
I wasn‚Äôt able to find any discussion or reasoning behind this. Neither in the UAs commit messages.
Could anyone help explaining me? Are there other elements firing events on *programatic* IDL changes?
Spec: https://html.spec.whatwg.org/multipage/interactive-elements.html#the-details-element
Chromium revision: https://codereview.chromium.org/249573002
Firefox revision: https://hg.mozilla.org/mozilla-central/rev/5ee96a182b8d7e872b657b8ed0cb2dfccb58711f
StackOverflow: https://stackoverflow.com/questions/73370063/when-does-dom-fire-events


2022-08-22
[01:10:48.0492] <Jake Archibald>
kraftwer1: I wasn't part of that decision, so these are just my thoughts: The pattern where events _don't_ fire on programmatic changes is bad IMO. Let's say you have ComponentA, which wants to adjust UI when a `<details>` changes. It's much better if ComponentA can just react to the event, regardless of whether the change is because of user interaction, or a programmatic change by ComponentB.

[01:12:06.0817] <Katyusha #KatsulaPharma.com>
do you guys learn that stuff because you have a work, and  a boss and  stuff like that and he wants a retarded site?

[01:13:29.0597] <Katyusha #KatsulaPharma.com>
look this is a real site

[01:13:59.0784] <Katyusha #KatsulaPharma.com>
it has folders

[01:14:04.0071] <Katyusha #KatsulaPharma.com>
you go there

[01:14:10.0441] <Katyusha #KatsulaPharma.com>
you can go back

[01:14:16.0565] <Katyusha #KatsulaPharma.com>
its anti-genz

[01:14:22.0247] <Katyusha #KatsulaPharma.com>
anti-boomers

[01:14:41.0025] <Katyusha #KatsulaPharma.com>
it has no hearts having dumb animations

[01:14:48.0274] <Katyusha #KatsulaPharma.com>
or smiles

[01:14:59.0565] <Katyusha #KatsulaPharma.com>
its sterile and beautiful

[01:15:54.0742] <Katyusha #KatsulaPharma.com>
i tried to make my site on a site builder, it cant do my site

[01:18:30.0405] <Katyusha #KatsulaPharma.com>
the guys who use cellphones conplaine,  idgaf

[01:18:56.0481] <Katyusha #KatsulaPharma.com>
i tell them to unnistall whatsapp and gmail

[01:19:03.0130] <Katyusha #KatsulaPharma.com>
and it will work 100%

[03:55:20.0547] <sideshowbarker>
PSA: https://html-now.github.io/ is the replacement for https://platform.html5.org/ (because https://platform.html5.org/ is unreachable yet again and anyway I guess we‚Äôre long overdue for a better name for the site)

[05:38:16.0715] <Katyusha #KatsulaPharma.com>
everything is bloat

[07:23:34.0359] <Ms2ger üíâüíâ>
> <@sideshowbarker:matrix.org> PSA: https://html-now.github.io/ is the replacement for https://platform.html5.org/ (because https://platform.html5.org/ is unreachable yet again and anyway I guess we‚Äôre long overdue for a better name for the site)

not sure "html now" is a better name ;)

[16:02:17.0407] <sideshowbarker>
> <@ms2ger:igalia.com> not sure "html now" is a better name ;)

Happy to rename it if you have any suggestions 

[16:03:21.0962] <Katyusha #KatsulaPharma.com>
html-90.githin.io

[16:03:44.0824] <Katyusha #KatsulaPharma.com>
or html-93-github.io


2022-08-23
[19:39:20.0529] <Lorin>
Are there plans to allow the pseudo-element `content` prop to use `var()` in its value - so I can set a piece of content much higher in the DOM chain and display it?

[19:41:21.0028] <Lorin>
at the moment it's a bit limited with just `attr()`

[23:48:39.0858] <Kaiido>
But then doing something as simple as `input.oninput = (evt)  => { evt.preventDefault(); input.value = input.value.toUpperCase(); }` would end up in an infinite loop unless you had super complicated/ugly machinery to avoid it.
If you need ComponentB to let the other scripts know that it made some changes, it can still dispatch the event manually.  

[01:24:06.0169] <Jake Archibald>
Kaiido: in your example, some piece of code wants to ensure the input text is uppercase. Presumably, that's true regardless of whether the input is from the user, or programatic from some other piece of code. Relying on that other piece of code to pretend it's user input is hacky.

[01:25:48.0160] <Kaiido>
 But that's not the point. The issue is that if the script does the change in response to the event it will itself trigger the same event.

[01:26:21.0532] <Jake Archibald>
It is the point üòÄ. The model is bad because it works in some cases but not in others.

[01:26:46.0747] <Kaiido>
To know if an event came from the user or from a script we have the isTrusted property.

[01:27:09.0820] <Jake Archibald>
`BroadcastChannel` works really well here, since each component can have its own instance. Compare this to storage events which have the same global problem.

[01:29:03.0622] <Jake Archibald>
> <@kaiido:matrix.org> To know if an event came from the user or from a script we have the isTrusted property.

It isn't as black and white as that. Something can be started by user input, and then modified by script. So the origin of the change is still the user, but it's been influenced by script. `isTrusted` is more useful to know if the event is directly from the browser, but I don't think that helps in the case we're talking about

[01:29:36.0463] <Kaiido>
Ok, so you're saying the whole EventTarget model is broken. I think I could agree with that. But firing events from script changes on that model without changing it all won't work.

[01:30:35.0886] <Jake Archibald>
I'm not saying the whole `EventTarget` model is broken. I just pointed to `BroadcastChannel` as working well, and that uses‚Ä¶ `EventTarget`

[01:30:36.0340] <Kaiido>
I highly doubt the one precedent details created is something we should follow.

[01:30:44.0011] <Kaiido>
 * I highly doubt the one precedent details created is something we should follow.

[01:31:16.0186] <Jake Archibald>
It isn't one precedent. There are many events on the platform that are script-triggered

[01:31:20.0051] <Kaiido>
But it works well because each component can have its own target. right?

[01:32:11.0373] <Jake Archibald>
Yes. And the input case (and similar cases like storage events) work badly because it assumes that it's owned by one component

[01:33:04.0688] <Jake Archibald>
It's better to fire change events when things are changed, then provide a way to avoid firing events, for changes that are transformations of changes.

[01:35:15.0922] <Jake Archibald>
The `formdata` event on forms is a good model here. There, listeners make modifications via the event itself. It's built for transforming the user input, so it works well for transformations.

[01:37:27.0107] <Jake Archibald>
An equivalent would be an event on `<input>` where the new value could be transformed by listeners on the event object itself. That way, it's clear it shouldn't fire an additional change event, since the change is being made as part of the event.

[01:43:59.0348] <Kaiido>
I must admit I'm not as familiar with all these APIs as you are. For instance if by "storage events" you talk about the onstorage one, do you mean it's broken because we could for instance access the other page's handler from a `window.open()` call? That sounds like a far more complicated way to shoot you in the foot than my input.value example. And unfortunately I think that even with a new event like the one you propose where the value is passed and transformable from the event itself, it would still be very easy to shoot ourselves in the foot by using the input's `.value` there too. Btw, is it possible to change the form's formdata from outside of the event?

[01:44:15.0330] <Kaiido>
 * I must admit I'm not as familiar with all these APIs as you are. For instance if by "storage events" you talk about the onstorage one, do you mean it's broken because we could for instance access the other page's handler from a `window.open()` call? That sounds like a far more complicated way to shoot you in the foot than my input.value example. And unfortunately I think that even with a new event like the one you propose where the value is passed and transformable from the event itself, it would still be very easy to shoot ourselves in the foot by using the input's `.value` there too. Btw, is it possible to change the form's formdata from outside of the event?

[02:22:17.0209] <Jake Archibald>
I do mean `onstorage`. If `localStorage` is used to store state, and ComponentA makes a change, ComponentB doesn't find out about it if they're in the same window.

[02:22:45.0731] <Jake Archibald>
> is it possible to change the form's formdata from outside of the event?

Well, you can change form inputs, which are later used to create the `FormData` object.

[02:22:53.0193] <Jake Archibald>
 * > is it possible to change the form's formdata from outside of the event?

Well, you can change form inputs, which are later used to create the `FormData` object.

[02:22:58.0246] <Jake Archibald>
 * > is it possible to change the form's formdata from outside of the event?
Well, you can change form inputs, which are later used to create the `FormData` object.

[02:23:03.0163] <Jake Archibald>
 * > is it possible to change the form's formdata from outside of the event?

Well, you can change form inputs, which are later used to create the `FormData` object.

[03:24:30.0136] <Kaiido>
> <@jakea:matrix.org> > is it possible to change the form's formdata from outside of the event?
> 
> Well, you can change form inputs, which are later used to create the `FormData` object.

But you're not modifying the same FormData object, only a future one.

[03:31:10.0513] <Kaiido>
Ok, I guess I can see the point. I still believe dispatchEvent is a quite ok workaround for that case though.  
Moreover if that would mean that the same component had to filter out the events it did trigger.

[03:32:22.0707] <Kaiido>
 * Ok, I guess I can see the point. I still believe dispatchEvent is a quite ok workaround for that case though.  
Moreover if that would mean that the same component had to filter out the events it did trigger.

[04:36:48.0806] <Jake Archibald>
Kaiido: I think you only need to filter it out in the circular case, where the change is in response to the change. Take the Navigation API https://developer.chrome.com/docs/web-platform/navigation-api/ - this works really well _because_ there's one central place to handle navigations, regardless of whether the navigation was caused by script or directly by the user. This is one of the things that makes the Navigation API easier to use than the old History API, where your logic ends up split depending on how the navigation was triggered.

[08:59:18.0819] <annevk>
sideshowbarker: I filed a ticket with DreamHost for html5.org, seems it affects all my sites

[09:00:09.0726] <annevk>
sideshowbarker: we could potentially keep the existing domain name but point it to GitHub for hosting...

[16:29:57.0416] <Kaiido>
I didn't had the occasion to play with this new API yet, so pardon my ignorance here. From fast-reading your article, doesn't this model work well because it's assumed that a single point will handle all these events? I have the feeling this model wouldn't scale very well for the case of two different components trying to handle events on a single target either. 
I made a very quick test and it seems that two intercept handlers could actually run at the same time, in parallel, without any apparent way of knowing that the event was already intercepted. Did I miss something there? Shouldn't `.intercept()` at least set the `defaultPrevented` to true or a new `isIntercepted` flag?

[16:49:12.0478] <Kaiido>
 * I didn't had the occasion to play with this new API yet, so pardon my ignorance here. From fast-reading your article, doesn't this model work well because it's assumed that a single point will handle all these events? I have the feeling this model wouldn't scale very well for the case of two different components trying to handle events on a single target either.
I made a very quick test and it seems that two intercept handlers could actually run at the same time, in parallel, without any apparent way of knowing that the event was already intercepted. Did I miss something there? Shouldn't `.intercept()` at least set the `defaultPrevented` to true or a new `isIntercepted` flag?
I now see this was discussed in [#89](https://github.com/WICG/navigation-api/issues/89) and [#94](https://github.com/WICG/navigation-api/issues/94) to some extents (based on the previous `respondWith()` model), but I don't see any mention of letting the other handlers know they're not alone. One could still append that flag on the event manually, but that requires coordination. Also, I don't have a use-case for this, so you may very well just ignore me ;-)


2022-08-24
[02:58:52.0698] <kraftwer1>
Kaiido, Jake Archibald I've just found out that even this static HTML `<details open>` *already* fires an event.

[02:59:52.0395] <kraftwer1>
Jake Archibald: do you know of any other HTML elements that fire events on programmatic changes? I'm specifically asking for elements, not "non-element" APIs like Navigation, LocalStorage, etc.

[03:03:26.0465] <hsivonen>
I suppose I will have to look at engine compat anyway regarding https://github.com/web-platform-tests/wpt/blob/master/FileAPI/url/sandboxed-iframe.html , but surely it's not OK for a test that doesn't specifically test how srcless iframe behaves to depend on what happens to happen between the iframe insertion and the subsequent script execution.

[03:22:15.0267] <Jake Archibald>
kraftwer1: `close` on `<dialog>`. `load` and `error` on lots of elements. Lots of events on `<video>` and `<audio>`. Even more fire events in response to method calls, like `focus()`, `blur()`, `click()`, selection changes etc etc.

[03:43:00.0776] <Domenic>
Indeed, I think almost all events on elements are in response to programmatic changes, with the exception of `<input>` and other form controls which have very unusual behavior.

[03:46:00.0233] <Domenic>
> <@hsivonen:mozilla.org> I suppose I will have to look at engine compat anyway regarding https://github.com/web-platform-tests/wpt/blob/master/FileAPI/url/sandboxed-iframe.html , but surely it's not OK for a test that doesn't specifically test how srcless iframe behaves to depend on what happens to happen between the iframe insertion and the subsequent script execution.

It just seems like the test is assuming some basic conformance to other areas  of specs? Similar to how it assumes that, e.g., JS syntax works as specced. I don't see anything "not OK" here; it's not like the test is assuming some specific implementation-defined behavior.

[03:47:01.0801] <hsivonen>
> <@domenicdenicola:matrix.org> It just seems like the test is assuming some basic conformance to other areas  of specs? Similar to how it assumes that, e.g., JS syntax works as specced. I don't see anything "not OK" here; it's not like the test is assuming some specific implementation-defined behavior.

Yeah, on second look, it doesn't seem to matter if the event loop spins between the iframe and the script.

[04:12:17.0897] <kraftwer1>
Domenic Jake Archibald Thanks!
1. Any idea where this "very unusual behavior" form elements behavior is coming from? Was it really to prevent potential endless loops, like Kaiido suggested? Or was it simply personal taste?
2. If you could start again on a green field, would you choose to *always* fire events, just like `<details>`?
==> meaning `<input value="foo">` would already fire an event (because `value` is set to `"foo"`)?

[04:18:38.0901] <Jake Archibald>
I imagine it was because of the infinite loop issue. My preference would be to always fire 'change' events when things change. And, to avoid the infinite loop case, provide a way for values to be transformed during a single change. Fwiw, I don't think the `toUpperCase()` example does infinite-loop, since on the second run, it wouldn't result in a change.

[04:24:46.0977] <kraftwer1>
(...is there even *any* infinite loop case?)

[04:25:55.0468] <Jake Archibald>
You could `.value += 'YAY'`, but I can't think of a real-world case

[04:46:53.0706] <annevk>
I think `<details open>` is indeed special and there is an existing issue on it. There's no other parser input that fires an event like that.

[04:53:09.0516] <kraftwer1>
Jake Archibald: agreed. Oh and btw. `close` on `<dialog>` doesn't fire (it's even mentioned in the spec), however `close()` does...

[04:54:25.0118] <Jake Archibald>
Ahh yeah, I should have put that under "method calls"

[05:45:59.0395] <Kaiido>
Yes, IMM all the `focus()`, `blur()`, `click()` and al. are very different in that they can be seen as wrappers around a **call** to `dispatchEvent()`. I think it's semantically quite obvious. If such a call was hidden inside the `.value` setter that would be a lot more obscure.  `load`,  `error` and media events are completely unrelated, they are for most triggered by network responses or something alike, not by script per se... I still do believe \<details> and its attribute reaction is pretty unique here, and I still doubt it's a model that should be followed.

[05:47:32.0215] <Kaiido>
 * Yes, IMM all the `focus()`, `blur()`, `click()` and al. are very different in that they can be seen as wrappers around a **call** to `dispatchEvent()`. I think it's semantically quite obvious. If such a call was hidden inside the `.value` setter that would be a lot more obscure.  `load`,  `error` and media events are completely unrelated, they are for most triggered by network responses or something alike, not by script per se... I still do believe \<details> and its attribute reaction is pretty unique here, and I still doubt it's a model that should be followed.

[06:10:18.0905] <kraftwer1>
`numericInputEl.stepUp()` doesn't fire "input" (probably being a form element with "unusual behavior")

[06:13:55.0483] <kraftwer1>
Ok thanks a lot to all of you participating. I think I've stolen enough of your precious time. My initial motivation was to understand the whole underlaying concept. But I think there's none. Honestly I think the spec of <details> is ambiguous. It doesn't clearly say an event should be fired *on programmatic change* - and it also doesn't clearly say otherwise.
To sum up I conclude that there are simply different tags with different behavior.

[06:15:31.0675] <Jake Archibald>
> Honestly I think the spec of \<details> is ambiguous. It doesn't clearly say an event should be fired on programmatic change - and it also doesn't clearly say otherwise.

I think the spec is pretty clear here. https://html.spec.whatwg.org/multipage/interactive-elements.html#details-notification-task-steps

[06:15:36.0113] <Jake Archibald>
 * > Honestly I think the spec of \<details> is ambiguous. It doesn't clearly say an event should be fired on programmatic change - and it also doesn't clearly say otherwise.

I think the spec is pretty clear here. https://html.spec.whatwg.org/multipage/interactive-elements.html#details-notification-task-steps

[06:16:39.0591] <Jake Archibald>
It says the event should be fired "Whenever the open attribute is added to or removed from a details element"

[06:17:10.0031] <Jake Archibald>
The spec doesn't need to say "even if the change is programmatic" any more than it needs to say "even if it's raining outside"

[06:18:36.0647] <kraftwer1>
Jake Archibald: not to me. It handles "task queue" and how to handle coalescing.
The dialog spec is much more clear: https://html.spec.whatwg.org/multipage/interactive-elements.html#the-dialog-element

[06:20:32.0800] <Jake Archibald>
The close steps of `<dialog>` don't say "even if the change is programmatic" either https://html.spec.whatwg.org/multipage/interactive-elements.html#close-the-dialog

[06:21:19.0237] <kraftwer1>
Jake Archibald: true, but it says it indirectly on when an event is not fired.

[06:23:04.0940] <Jake Archibald>
You mean the non-normative note?

[06:26:58.0525] <kraftwer1>
"To honor a request for the information to be hidden, the user agent must remove the open attribute from the element."
--> the specs talk about what the "user agent" must do
"Whenever the open attribute is added to or removed from a details element"
--> here's my misunderstandig. As a reader, I'm still in the context of "what the user agent must do". I have no implication that the writer of the spec now also talks about the "program".
But yes I guess we could argue back and forth to what is clear or not. :-)

[06:28:01.0953] <Jake Archibald>
> <@kaiido:matrix.org> Yes, IMM all the `focus()`, `blur()`, `click()` and al. are very different in that they can be seen as wrappers around a **call** to `dispatchEvent()`. I think it's semantically quite obvious. If such a call was hidden inside the `.value` setter that would be a lot more obscure.  `load`,  `error` and media events are completely unrelated, they are for most triggered by network responses or something alike, not by script per se... I still do believe \<details> and its attribute reaction is pretty unique here, and I still doubt it's a model that should be followed.

How do you feel about the `selectionchange` firing when the content of a `<textarea>` changes, and changes the current selection?

[06:29:18.0089] <Jake Archibald>
kraftwer1: the user agent is the browser. I'm not sure what the "program" is

[06:29:56.0847] <kraftwer1>
Jake Archibald: the program is `dialogEl.open = true`

[06:30:19.0433] <Jake Archibald>
kraftwer1: Script runs in the user agent

[06:30:51.0284] <Kaiido>
> <@jakea:matrix.org> How do you feel about the `selectionchange` firing when the content of a `<textarea>` changes, and changes the current selection?

I feel very bad around anything related to the selection/editing APIs ;-)

[06:33:08.0629] <Jake Archibald>
kraftwer1: specs don't really say what your script should do, they say what the user agent (browser) should do in reaction to your script, or in reaction to other things like user interaction, OS interaction, etc etc.

[06:37:35.0403] <kraftwer1>
Jake Archibald: totally understand your point. Unclear whether you understood mine. As a reader of both the specs it was obvious to me what the intention of the event was for `dialog`. Not so much about `details`. Yes, it was only a non-formative note. Maybe I'm the only one affected by this, so consider it a nevermind.

[06:44:01.0795] <Jake Archibald>
Yeah, I was just pointing out that specs don't need to say that an event must happen even if the change is programmatic. The normative spec should be clear about the cases where the event fires. Eg, the setter for `.value` does not fire events https://html.spec.whatwg.org/multipage/input.html#dom-input-value

[06:53:58.0560] <kraftwer1>
Ah look at the very bottom of the page you've linked:
"[...] without having to then filter out the script's own changes to avoid an infinite loop.)"
==> I'd really wonder about this infinite loop case.

[15:06:43.0807] <sideshowbarker>
annevk: https://annevankesteren.nl/ timing out


2022-08-25
[21:47:33.0162] <Lorin>
Huh, apparently `:scope` doesn't work within DocumentFragment, seems kinda silly

[23:33:09.0779] <hsivonen>
Sam Sneddon [:gsnedders]: wpt.fyi says that https://github.com/web-platform-tests/wpt/blob/master/html/browsers/the-window-object/garbage-collection-and-browsing-contexts/discard_iframe_history_1.html passes only in Firefox, and when I try to align about:blank behavior with other browsers, the test starts behaving in Firefox the way it already behaves in Chrome. This strongly suggests we should change the test expectation, right? Do you recall if there's spec text to adjust as well?

[00:13:29.0414] <hsivonen>
> <@hsivonen:mozilla.org> Sam Sneddon [:gsnedders]: wpt.fyi says that https://github.com/web-platform-tests/wpt/blob/master/html/browsers/the-window-object/garbage-collection-and-browsing-contexts/discard_iframe_history_1.html passes only in Firefox, and when I try to align about:blank behavior with other browsers, the test starts behaving in Firefox the way it already behaves in Chrome. This strongly suggests we should change the test expectation, right? Do you recall if there's spec text to adjust as well?

Specifically, AFAICT, interop says to remove the `+ 1` on this line: https://github.com/web-platform-tests/wpt/blob/master/html/browsers/the-window-object/garbage-collection-and-browsing-contexts/discard_iframe_history_1-1.html#L11

[02:29:07.0567] <Domenic>
Yes, that line looks quite suspect... loading a no-src (i.e. about:blank) iframe should not increase history length according to both the current spec and the upcoming rewrite (https://github.com/whatwg/html/pull/6315)

[02:29:42.0003] <Domenic>
Oh, no, I misread, it's navigating...

[02:29:55.0380] <Domenic>
Oh, this is because of the load replace timing I am pretty sure

[02:30:42.0803] <Domenic>
https://github.com/web-platform-tests/wpt/commit/c1bb1fdaa510c14d31ca8307f4778b015a6bb30d

[02:30:57.0156] <Domenic>
https://github.com/whatwg/html/pull/6714

[02:31:44.0761] <Domenic>
Well OK it's simpler than that, sorry.

[02:31:53.0863] <Domenic>
The src-less srcdoc-less iframe is on its initial about:blank

[02:32:13.0791] <Domenic>
Any navigation from the initial about:blank, per current and future spec, must be a replace navigation (does not increment history.length).

[02:34:45.0814] <Domenic>
This is the spec change: https://github.com/whatwg/html/pull/6595 and this is the tests PR that never landed!?!?! https://github.com/web-platform-tests/wpt/pull/28541

[06:58:23.0505] <peterv>
Domenic: I'm looking at `async iterable` support in Firefox, the WebIDL spec talks about a "end of iteration value", but it doesn't actually define what that looks like?

[07:02:01.0845] <peterv>
Domenic: ah, I see, it's just an opaque value that then forces `CreateIterResultObject(undefined, true)`, nevermind

[08:07:25.0336] <annevk>
Works here...

[09:55:43.0177] <Sam Sneddon [:gsnedders]>
> <@hsivonen:mozilla.org> Sam Sneddon [:gsnedders]: wpt.fyi says that https://github.com/web-platform-tests/wpt/blob/master/html/browsers/the-window-object/garbage-collection-and-browsing-contexts/discard_iframe_history_1.html passes only in Firefox, and when I try to align about:blank behavior with other browsers, the test starts behaving in Firefox the way it already behaves in Chrome. This strongly suggests we should change the test expectation, right? Do you recall if there's spec text to adjust as well?

I have no idea about tests jgraham (not pinging because OOO) wrote around a decade ago.

[11:17:44.0288] <hsivonen>
> <@gsnedders:mozilla.org> I have no idea about tests jgraham (not pinging because OOO) wrote around a decade ago.

OK. Thanks.

[11:19:18.0035] <Dominic Farolino>
dumb question: Is it not possible to add a click event handler on an iframe that fires when the user clicks in the iframe?

[11:19:34.0639] <Dominic Farolino>
The only way I can seem to invoke a click event handler on an iframe is via iframeElement.click() in script

[14:57:05.0783] <shu>
spec question about dedicated worker lifetimes: if dedicated worker A `postMessage()`s to dedicated worker B, can A die before B receives the message? if so, does the spec guarantee that B will receive the message?

[14:59:42.0997] <Andreu Botella (OOO till 5 Sept)>
It seems like actual engines don't keep dedicated workers alive after their parent dedicated worker dies, but the spec is not 100% clear about this: https://github.com/whatwg/html/issues/7840

[15:01:29.0283] <Andreu Botella (OOO till 5 Sept)>
but going by the spec, and assuming that it was clear that dedicated worker B stays alive ‚Äì `postMessage()` posts a task on B's event loop, so assuming that A dies after the `postMessage` call finishes, it can die before B receives it, but B will still receive it

[15:49:10.0817] <shu>
great, that's exactly what i was looking for, thanks


2022-08-26
[17:09:18.0365] <Domenic>
> <@domfarolino:matrix.org> dumb question: Is it not possible to add a click event handler on an iframe that fires when the user clicks in the iframe?

This seems likely correct, but hit testing is not specced anywhere so who knows. Maybe there is something weird you could do with `pointer-events` or large-border iframes or something.

[20:33:43.0222] <sideshowbarker>
https://stackoverflow.com/questions/73488438/api-calls-from-https-iframe-are-blocked-by-cors-private-network-access-because

[05:54:13.0469] <smaug>
how do I remove spec issues (spam)? Perhaps I don't have the privileges to do it

[06:01:50.0117] <annevk>
smaug: only admins can delete issues I think

[06:02:07.0080] <annevk>
Let me check if we can delegate some of that

[06:04:51.0924] <annevk>
Looks like it's admin-only (I see different UI from https://docs.github.com/en/organizations/managing-organization-settings/allowing-people-to-delete-issues-in-your-organization), but we could allow more people to be moderator and be able to ban others


2022-08-27
[10:48:52.0361] <Maxim Vaarwel>
Good afternoon to all. I have a question, whatwg spec says that objects such as document or Node and etc are platform objects . But I am interested in the objects that described in ecmascript. Are objects like String, Number, Object and etc - platform objects?

[10:55:54.0380] <Maxim Vaarwel>
 * Good afternoon to all. I have a question, whatwg spec says that objects such as document or Node and etc are platform objects . But I am interested in the objects that described in ecmascript. Are objects like String, Number, Object and etc (including their instances) - platform objects?

[12:55:50.0105] <Hiro>
Meep 


2022-08-29
[00:06:06.0264] <annevk>
Maxim Vaarwel: they're not

[13:43:44.0197] <Dominic Farolino>
How important is it that an API that takes in an AbortSignal take it in via a dictionary member named `signal` instead of something like `abortSignal`?

[13:44:08.0145] <Dominic Farolino>
https://dom.spec.whatwg.org/#abortcontroller-api-integration indicates that it `must` be named signal

[13:44:58.0969] <Dominic Farolino>
So strictly speaking I guess that's the end of the discussion, but I just want to verify that it is definitely intended to be a normative requirement.

[14:33:53.0555] <TabAtkins>
Domenic: ^^^

[15:52:28.0838] <Domenic>
Yep, seems pretty clear-cut to me.


2022-08-30
[17:18:48.0776] <dlrobertson>
https://fetch.spec.whatwg.org/#concept-scheme-fetch for a blob makes no mention of sniffing the content type of a blob. Does that mean it is non-standard to sniff the content type?

[17:51:59.0462] <Domenic>
I think sniffing generally happens in the HTML layer, not the Fetch layer.

[18:07:23.0227] <dlrobertson>
ah that's good to know

[08:52:04.0230] <sideshowbarker>
zcorpan: (or anybody familiar with DOMMatrix) Shouldn‚Äôt https://drafts.fxtf.org/geometry/#intro say ‚Äú**3x3** and 4x4‚Äù rather than ‚Äú3x2 and 4x4‚Äù?

‚Ä¶Or even just only say 4x4 ‚Äî because, as far as I can understand it at least, DOMMatrix can represent matrices of at most 4x4, but can also represent 2x2 matrices (along with 3x3)

[08:57:21.0971] <sideshowbarker>
hmm, no, looking at the IDL at https://drafts.fxtf.org/geometry/#dictdef-dommatrix2dinit I now realize the 3x2 is maybe intentional and not a typo ‚Äî since that dictionary lacks m31 and m32 members?

[13:43:03.0361] <TabAtkins>
Right, a 2d affine transform matrix only needs to be 3x2


2022-08-31
[23:37:18.0065] <hsivonen>
Domenic: What's the story behind https://wpt.fyi/results/html?label=master&label=experimental&aligned&view=subtest&q=window-reuse-in-nested-browsing-contexts.tentative.html ? I'm trying to make Gecko's initial about:blank more Web-compatible, and I now have a patch that results in Chrome-consistent behavior on that test: 6 fails and 1 pass (the single pass being "iframe with initial src == same-origin resource."). Despite what I have said earlier (when I believed it was worthwhile to pursue Presto-style initial about:blank), I now have strong doubts about the usefulness of pursuing the expectations of this test.

[23:38:10.0151] <Domenic>
Hmm!

[23:39:19.0572] <Domenic>
Where is that open issue....

[23:40:27.0935] <Domenic>
https://github.com/whatwg/html/issues/546 and https://github.com/whatwg/html/issues/3267 I think

[23:42:29.0119] <hsivonen>
> <@domenicdenicola:matrix.org> https://github.com/whatwg/html/issues/546 and https://github.com/whatwg/html/issues/3267 I think

Thanks. I apologize for advocating for Presto-style about:blank for the past 11 years. It now seems to me that the path to interop is WebKit/Blink-style about:blank.

[23:42:37.0425] <Domenic>
My position is pretty generic: we should do anything that we can get interop on and is web-compatible; ideally that thing should be somewhat principled.

[23:43:23.0071] <Domenic>
In the past I've been reluctant to change the spec away from Gecko behavior because Gecko put a lot of work into this and their approach seemed principled. But if you're up for it, let's do so.

[23:43:52.0872] <Domenic>
Now I need to figure out how to spec it. It'll be on top of https://github.com/whatwg/html/pull/6315 although I don't think the Window reuse parts changed much.

[23:44:25.0402] <hsivonen>
I have a hard time seeing Gecko's currently-released about:blank behavior as principled.

[23:45:26.0781] <Domenic>
Would you be kind enough to drop a comment in one of those issues explaining exactly what WebKit/Blink-style about:blank is and how you might spec it? I see the test results matrix but it'd take me some time to reload this all into my brain enough to understand the right approach.

[23:47:35.0414] <Domenic>
Also, it sounds like you might be supportive of my upcoming pitch to add navigation/history to Interop 2023 :)

[00:06:24.0844] <hsivonen>
> <@domenicdenicola:matrix.org> Would you be kind enough to drop a comment in one of those issues explaining exactly what WebKit/Blink-style about:blank is and how you might spec it? I see the test results matrix but it'd take me some time to reload this all into my brain enough to understand the right approach.

Commented: https://github.com/whatwg/html/issues/3267#issuecomment-1232545141

[00:21:10.0992] <Domenic>
Perfect, thank you! I will add that into https://github.com/whatwg/html/pull/6315 so we can close the two issues. I will also happily approve any WPT changes in that direction. You might want to adopt the tests from the abandoned https://chromium-review.googlesource.com/c/chromium/src/+/804797 to make sure the full matrix from that issue is covered...

[00:21:21.0061] <Domenic>
I guess I should say that on the issue to record our plan of record

[06:25:06.0087] <zcorpan>
> <@sideshowbarker:matrix.org> zcorpan: (or anybody familiar with DOMMatrix) Shouldn‚Äôt https://drafts.fxtf.org/geometry/#intro say ‚Äú**3x3** and 4x4‚Äù rather than ‚Äú3x2 and 4x4‚Äù?
> 
> ‚Ä¶Or even just only say 4x4 ‚Äî because, as far as I can understand it at least, DOMMatrix can represent matrices of at most 4x4, but can also represent 2x2 matrices (along with 3x3)

No, it's correct. The "2D" variant is m11,m12,m21,m22,m41,m42 (also exposed as .a to .f)

[07:44:18.0715] <Dominic Farolino>
Is there a guarantee that aborting a fetch will result in the promise being rejecting? Wondering if it's possible to abort a fetch after the resolve microtask is already queued, in which case I'd expect the fetch promise to resolve (since the abort came in too late). Is that how it works?

[07:49:19.0027] <annevk>
Dominic Farolino: yeah, since abort also queues so that would happen after (it doesn't reach into the queue and modify things)

[07:51:05.0975] <Chris de Almeida>
https://dom.spec.whatwg.org/#abortcontroller-api-integration

[07:58:18.0833] <Dominic Farolino>
annevk: Thanks! Btw do you have any opinions on: when abort() is called, whether the promise-returning API should immediately reject while it kicks off its cancelation steps, vs rejecting *after* we wait on some cancelation steps to "finish up"?

[07:58:43.0412] <Dominic Farolino>
I'm seeing this done in a mixed way, but didn't know if there was a clearly recommended path.

[08:07:12.0363] <annevk>
Dominic Farolino: the link Chris de Almeida posted above addresses how we expect integration to work. Which boil down to cancelation happening first (though possibly later if that's async) and then rejecting the promise.

[08:07:40.0660] <annevk>
Oh my, that example doesn't queue a task to resolve despite it clearly happening in parallel.

[08:11:04.0919] <Chris de Almeida>
what do you mean?  isn't that in step 3 ?

[08:14:23.0588] <Dominic Farolino>
Chris de Almeida: I think promise resolution has to happen on a task on the "main" thread

[08:14:43.0579] <Dominic Farolino>
So the timing would be (1) Queue a task to resolve the promise, (2) One microtask later, the promise gets resolved

[08:15:05.0552] <annevk>
step 3.2 needs to queue a task

[08:16:28.0251] <Chris de Almeida>
annevk: I believe that's covered by saying "in parallel" where parallel links to the queue details

[08:17:41.0504] <Dominic Farolino>
annevk: Regarding that spec integration link, the example shows that we first "Stop doing [...]", and then we reject the promise. But if "Stop doing [...]" kicks off a ton of async work in another process, my question is: should we block the rejection on all that work completing?

[08:17:57.0204] <Dominic Farolino>
That example indicates the answer is no, but it isn't in the normative requirements so I'm not totally sure

[08:19:26.0753] <annevk>
Chris de Almeida: it's not

