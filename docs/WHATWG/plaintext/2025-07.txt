2025-07-01
[00:28:51.0403] <gogo>
Hi! Do you know a debug tool such a firefox console to list trusted type tags in dom please?

[05:01:22.0693] <freddy>
I work on Firefox and my team is responsible for Trusted Types, but I am not sure what your question is.

[05:01:46.0473] <freddy>
Also, we don't really support Trusted Types yet. It's behind a pref in Nightly specifically because it doesn't fully work.

[05:02:09.0576] <freddy>
Maybe #security:mozilla.org would be a better discussion channel.


2025-07-02
[22:56:55.0087] <annevk>
sideshowbarker: doing spring cleanup?

[22:57:08.0120] <annevk>
* sideshowbarker: doing (very late) spring cleanup?

[23:09:26.0045] <sideshowbarker>
Something like that yeah

[23:14:47.0475] <annevk>
Whoa, someone left a lot of spam. Thanks for dealing with it Domenic!

[02:55:27.0378] <AtkinsSJ>
annevk: I'm going through Ladybird failures on the scoped custom element registry tests, and passing a registry to `Document.importNode()` isn't making sense to me. I see that Safari passes all of custom-elements/registries/Document-importNode.html, so maybe the implementation doesn't match the spec there. I'm looking at the second subtest there:

`assert_true(document.importNode(document.createElement('some-element'), {customElementRegistry: scopedRegistry}) instanceof ScopedSomeElement);`

`some-element` gets created using the document's registry. The test then expects `importNode()` to return a node that is using `scopedRegistry` instead. But, the registry is passed as `cloneNode()`'s `fallbackRegistry`, and that's only used if the node doesn't already have a registry. And it does have one!

[03:00:02.0453] <AtkinsSJ>
The idea of cloning a custom element and getting a different type of custom element seems strange to me but maybe I just need to read up on that more.

