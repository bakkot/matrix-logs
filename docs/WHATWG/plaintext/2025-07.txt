2025-07-01
[00:28:51.0403] <gogo>
Hi! Do you know a debug tool such a firefox console to list trusted type tags in dom please?

[05:01:22.0693] <freddy>
I work on Firefox and my team is responsible for Trusted Types, but I am not sure what your question is.

[05:01:46.0473] <freddy>
Also, we don't really support Trusted Types yet. It's behind a pref in Nightly specifically because it doesn't fully work.

[05:02:09.0576] <freddy>
Maybe #security:mozilla.org would be a better discussion channel.


2025-07-02
[22:56:55.0087] <annevk>
sideshowbarker: doing spring cleanup?

[22:57:08.0120] <annevk>
* sideshowbarker: doing (very late) spring cleanup?

[23:09:26.0045] <sideshowbarker>
Something like that yeah

[23:14:47.0475] <annevk>
Whoa, someone left a lot of spam. Thanks for dealing with it Domenic!

[02:55:27.0378] <AtkinsSJ>
annevk: I'm going through Ladybird failures on the scoped custom element registry tests, and passing a registry to `Document.importNode()` isn't making sense to me. I see that Safari passes all of custom-elements/registries/Document-importNode.html, so maybe the implementation doesn't match the spec there. I'm looking at the second subtest there:

`assert_true(document.importNode(document.createElement('some-element'), {customElementRegistry: scopedRegistry}) instanceof ScopedSomeElement);`

`some-element` gets created using the document's registry. The test then expects `importNode()` to return a node that is using `scopedRegistry` instead. But, the registry is passed as `cloneNode()`'s `fallbackRegistry`, and that's only used if the node doesn't already have a registry. And it does have one!

[03:00:02.0453] <AtkinsSJ>
The idea of cloning a custom element and getting a different type of custom element seems strange to me but maybe I just need to read up on that more.

[03:45:04.0101] <gogo>
Hello freddy I am happy to meat the core team!

I was asking, how can I see in the inspector of the dom of mozilla if the result of an innerHTML or what else creation is TrustedTYpe or not pleqse? I need to check for xss.

[03:45:12.0204] <gogo>
* Hello freddy I am happy to meet the core team!

I was asking, how can I see in the inspector of the dom of mozilla if the result of an innerHTML or what else creation is TrustedTYpe or not pleqse? I need to check for xss.

[04:33:01.0703] <Martin Spasov>
Hey, im reading through the spec and have a question. Hope this is the place to ask. The first point from the section on inserting a node into a parent is unclear to me: https://dom.spec.whatwg.org/#concept-node-insert

It says:
> Let nodes be node‚Äôs children, if node is a DocumentFragment node; otherwise ¬´ node ¬ª.

What does "<< node >>" mean?


[04:33:53.0799] <AtkinsSJ>
It means it's a list. https://infra.spec.whatwg.org/#list

[04:35:26.0148] <Martin Spasov>
that was fast, thank you!

[04:36:30.0271] <AtkinsSJ>
You're welcome!

[05:19:22.0925] <annevk>
AtkinsSJ: that might well be a bug. I think we decided that `importNode()` wouldn't change the registry (except if its null).

[05:24:33.0136] <annevk>
AtkinsSJ: yeah I don't think WebKit matches the specification.

[14:43:41.0172] <cwilso>
Once again not seeing anything agenda+ed for tomorrow's WHATNOT.  Should I cancel it?

[14:59:53.0177] <bkardell>
Wfm üôÇ


2025-07-03
[18:23:51.0036] <jmdyck>
What does it mean when the HTML spec says that something "is expected to act as follows"? Is it different from "should act as follows"?

[18:54:13.0366] <Domenic>
It's probably nothing special, but there is a specific case in which "expected" has a special meaning: https://html.spec.whatwg.org/#rendering

[18:56:22.0613] <jmdyck>
Okay, thanks.

[22:14:51.0034] <annevk>
jmdyck: it'd prolly be "must" not "should"

[01:16:15.0766] <gogo>
Hello. I am looking for an rss feed as well as any way to get the latest update in w3c spec. I need to get the latest update for cyber security research.

Do you know a such rss feeed please?

[01:27:46.0703] <AtkinsSJ>
Depends what exactly you're after but there's https://www.w3.org/news/feed/

[01:30:56.0630] <AtkinsSJ>
The HTML spec (and a few others) are run by the WHATWG instead which is separate from W3C. I don't think there's a feed for those. What I've ended up doing is subscribing to the github repo for the specs I care about. There are feeds if needed, eg https://github.com/whatwg/html/commits/main.atom

[01:34:10.0764] <AtkinsSJ>
Would you like me open an issue about it? I'm not sure which repo to place it under.

[02:01:30.0204] <gogo>
> <@atkinssj:serenityos.org> Depends what exactly you're after but there's https://www.w3.org/news/feed/

Sounds good. Letvme cgeck.

[02:08:16.0911] <annevk>
AtkinsSJ: I am planning to create a WPT PR later today, based on https://github.com/WebKit/WebKit/pull/47489

[02:13:56.0820] <gogo>
> <@atkinssj:serenityos.org> Depends what exactly you're after but there's https://www.w3.org/news/feed/

I am after new features and if possible cybercsec alerts.

[02:24:37.0464] <gogo>
The main.atom does not sounds presents in any repo https://github.com/tomnomnom/wappalyzer/commits/main.atom

[02:25:46.0580] <AtkinsSJ>
The "main" is the name of the branch. In some repos that's "main", others it's "master", or it could be something else.

[02:26:19.0047] <AtkinsSJ>
Looks like removing the branch name and just doing github.com/tomnomnom/wappalyzer/commits.atom works

[02:31:50.0556] <gogo>
oh my god thank you for the trick! I had previously created a git diff script to grep latest updates

[02:32:04.0701] <gogo>
there are 2 different purposes of course

[02:33:27.0688] <gogo>
time to register to https://github.com/cure53/DOMPurify/commits/main.atom lol :)

[02:56:54.0522] <gogo>
> <@atkinssj:serenityos.org> Depends what exactly you're after but there's https://www.w3.org/news/feed/

I like the feed. I am looking purely on new feature. If possiblevon features thzt enables js please?

[04:42:58.0248] <AtkinsSJ>
gogo: I've no idea, sorry

[07:32:30.0915] <smaug>
cwilso: there actually was something on the agenda today üòâ 

[07:32:51.0412] <smaug>
* cwilso: there actually was something on the agenda today üòâ (mentioned in the doc)

[07:33:54.0507] <smaug>
oh, wait, it was for 7/10

[07:33:57.0662] <smaug>
nm then

[11:23:05.0139] <gogo>
no worry. I already advanced a lot of with the main branch updates! After I can subscribe to the feed

[11:27:32.0415] <gogo>
sounds very good. I am a noob with rss feed. Is there any category?


2025-07-07
[08:59:10.0326] <mfreed>
Hi all, just a friendly reminder to post any discussion topics for this Thursday's joint CSSWG/WHATWG/OpenUI task force meeting to the meeting agenda issue: https://github.com/whatwg/html/issues/11435

[09:22:04.0393] <keithamus>
Just trying to look at the updates to https://dom.spec.whatwg.org/#valid-element-local-name and I feel like there's a discrepancy...

The regexp (`/^(?:[A-Za-z][^\0\t\n\f\r\u0020/>]*|[:_\u0080-\u{10FFFF}][A-Za-z0-9-.:_\u0080-\u{10FFFF}]*)$/u`) validates that `a-\x01` returns `true` but as best as I can see the regexp does not follow the spec prose. Specifically the first match group of `/^[A-Za-z][^\0\t\n\f\r\u0020/>]*$/` says "must start with a letter, then should be any character _except_ these code points" but the prose says something quite different. 

Am I missing something obvious? /cc jarhar Domenic 

[09:23:07.0081] <keithamus>
Oh... I see, the prose has branches for the whole string with an early return. 

[09:23:49.0129] <keithamus>
I glossed over step 2.2.

[09:34:37.0993] <keithamus>
* Just trying to look at the updates to https://dom.spec.whatwg.org/#valid-element-local-name and I feel like there's a discrepancy...

The regexp (`/^(?:[A-Za-z][^\0\t\n\f\r\u0020/>]*|[:_\u0080-\u{10FFFF}][A-Za-z0-9-.:_\u0080-\u{10FFFF}]*)$/u`) validates that `a-\x01` returns `true` but as best as I can see the regexp does not follow the spec prose. Specifically the first match group of `/^[A-Za-z][^\0\t\n\f\r\u0020/>]*$/` says "must start with a letter, then should be any character _except_ these code points" but the prose says something quite different.

Am I missing something obvious?

[13:30:16.0377] <vokeyneville>
Hello fellow humans

[16:34:12.0768] <jarhar>
anything i can do to help get https://github.com/whatwg/html/pull/10548 merged? i believe that i've addressed all the comment threads.


2025-07-08
[20:26:12.0056] <Domenic>
If you are working on implementing that note that there is currently a bit of a mismatch between spec and tests that we are fixing in https://github.com/whatwg/dom/issues/1387 / https://github.com/whatwg/dom/pull/1388 / https://github.com/web-platform-tests/wpt/pull/53533

[16:19:38.0842] <ÊäòÂéüÂè∏>
Ë¶ñË¶öÈöúÁ¢çËÄÖ„Åß„ÇÇ„Ç≠„Éº„Éú„Éº„ÉâÊìç‰Ωú„Åß„Åç„ÄÅWebÂÆåÂÖ®ÂΩ¢Âºè„Åß„ÇÇËÉåÊôØÁîªÂÉè„ÅåÊÆã„Çãhomepage„Çí‰Ωú„Çä„Åæ„Åó„Åü„ÄÇÊÑüÊÉ≥„ÇíËÅû„Åç„Åü„ÅÑ„Åß„Åô„ÄÇhttp://gyouso2.extrem.ne.jp/s1-1.htm


2025-07-10
[08:05:03.0698] <Luke Warlow>
Joint taskforce time for those that join

[08:20:03.0061] <xxosinxx>
> <@lwarlow:igalia.com> Joint taskforce time for those that join

wym

[08:21:22.0802] <Luke Warlow>
There's a WhatWG, CSSWG and OpenUI CG joint taskforce that happens, and it's happening atm, was just a ping to remind those as attendance is lwo

[09:07:24.0443] <smaug>
jarhar: aha, if we already expose the error message that way (had totally forgetten it), then I'd prefer the element based approach

[10:27:07.0024] <jarhar>
smaug: as the discussion in https://github.com/whatwg/html/pull/11345 continues, im caring less and less about this edge case. if you feel strongly that the existing spec is good enough, i could be convined to drop the PR. i still think that making CommandEvent not composed is a good idea. what do you think we should do?

[11:25:31.0642] <smaug>
Not sure how to expose the message in the popup though. Modifying DOM is a bit weird (and done only by customizable select currently, I think)


2025-07-11
[03:34:57.0450] <Luke Warlow>
Does anyone know if there's an existing issue to track defining [Reflect] (and similar) extended attributes to finally move attribute reflection out of the spec prose?

[04:20:21.0566] <annevk>
Luke Warlow: https://github.com/whatwg/html/issues?q=label%3A%22topic%3A%20reflect%22%20state%3Aopen

[04:50:36.0256] <Luke Warlow>
https://github.com/whatwg/html/issues/3238 - I'm guessing this is probably the best one to continue discussion on?

[05:36:48.0848] <sideshowbarker>
Luke Warlow: https://github.com/whatwg/html/issues/3238#issuecomment-3062012460 nice work ‚Äî thanks for doing that

[05:41:08.0980] <Luke Warlow>
I'm currently reading through the reflection spec to see if I can come up with some sort of logical overlap between the different implementations that we can agree upon. 

[07:34:20.0354] <Luke Warlow>
https://github.com/whatwg/html/issues/3238#issuecomment-3062561588 - Well here goes a rough attempt, does require some grammar changes but nothing unreasonable imo.


2025-07-12
[09:31:05.0975] <andydude>
Does ladybird support wasm?

[10:34:20.0337] <jmdyck>
Seems to: https://github.com/LadybirdBrowser/ladybird/tree/master/Libraries/LibWasm

[14:16:07.0775] <akaster>
all of the wasm js-api should be supported :tm:. Not many proposals are implemented though, so web apps built with emscripten are unlikely to work. if you have a good test case for a site that doesn't work, we have a wasm channel in our discord that would be a great place to bring it up


2025-07-14
[22:23:02.0977] <Maxim Vaarwel>
[Create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object)
> 3. Let creationURL be navigationParams's response's URL.
> 4. If navigationParams's request is non-null, then set creationURL to navigationParams's request's current URL.

Could anyone explain the meaning of these two lines? Why does the request case prevail over the response case?

[22:36:05.0801] <Domenic>
I think it is more, let url = hasRequest ? request's current url : fallback to response url since that's all we have.

[22:37:17.0647] <Domenic>
I think the network error case is a good example of when they would be different and request's would be more correct.

[22:40:34.0902] <annevk>
Luke Warlow: FWIW, I tend to agree with Domenic that mutually exclusive `ReflectX` attributes are nicer. Much easier to tell if someone made a mistake that way and also what something means. I.e., I'd rather see `[ReflectURL]` than `[Reflect, ReflectURL]`.

[22:42:31.0690] <Maxim Vaarwel>
Got it, but what about a network error, could you give an example?

[22:49:28.0876] <Domenic>
A network error is defined in the Fetch spec to be a response whose only property is that its response code is 0. So if the response gets set to a network error, then it'd not be correct to set the resulting document's URL to the network error response's URL (which is left as the default of null).

[22:49:50.0494] <Domenic>
* A network error is defined in the Fetch spec to be a response with very few properties set https://fetch.spec.whatwg.org/#concept-network-error. So if the response gets set to a network error, then it'd not be correct to set the resulting document's URL to the network error response's URL (which is left as the default of null).

[23:36:28.0710] <Vince Lam>
waz up

[23:51:37.0451] <Maxim Vaarwel>
You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.

Yes, [here](https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline) it is clearly visible that request: null, and response, some object where the url is not really obvious. I did not find a place in the specification where this url is explicitly set.

In any case, the main question is closed.

[23:53:06.0965] <Maxim Vaarwel>
* You mean the case when the browser can't reach the page at the address and displays the page prepared by the engine.

Yes, [here](https://html.spec.whatwg.org/multipage/document-lifecycle.html#read-ua-inline) it is clearly visible that `request: null`, and `response`, some object where the `url` is not really obvious. I did not find a place in the specification where this url is explicitly set.

In any case, the main question is closed.

[00:50:23.0848] <Noam Rosenthal>
Also in `javascript:` and other cases there is no request

[00:50:57.0899] <Noam Rosenthal>
See https://html.spec.whatwg.org/#the-javascript:-url-special-case:navigation-params-response

The `response` would be initialized with a URL but `request` is null

[01:34:39.0639] <Luke Warlow>
Okay thanks for the feedback! I'll go with that approach then.

[05:38:39.0430] <Maxim Vaarwel>
Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`? In most cases, navigationParams's response's URL is always present. Or is there some case I haven't noticed? Please tell me.

[05:38:58.0059] <Maxim Vaarwel>
* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`? In most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.

[05:42:09.0349] <Maxim Vaarwel>
* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?
I mean why not `let url = navigationParams's response's URL`?
In most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.



[05:43:09.0519] <Maxim Vaarwel>
Noam Rosenthal: coul you also look at my question above?

[05:44:03.0070] <Maxim Vaarwel>
* Domenic: Hmm, wait. Why can't we just use `navigationParams's response's URL` without `navigationParams's request's current URL`?
I mean why not `let creationURL = navigationParams's response's URL`?
In most cases, `navigationParams's response's URL` is always present. Or is there some case I haven't noticed? Please tell me.

[05:48:10.0785] <Noam Rosenthal>
I don't remember the whole thing but IIRC if you respond to a request with a constructed response in a service worker, the request would have a URL but not the response

[05:54:50.0220] <Noam Rosenthal>
... which would make it so that either the request or the response might be null and you want to start with the request before falling back to the response

[06:26:58.0686] <Maxim Vaarwel>
Noam Rosenthal: Thank you, the moment with the service worker in this case is quite interesting. I think I saw something like this when I was browsing the whatwg/html github before 2020

[06:31:40.0373] <Domenic>
I gave you a very clear example above where response's URL would be incorrect, the network error case. I don't have more time to spend explaining it to you.

[08:03:27.0678] <Luke Warlow>
The `shadowrootcustomelementregistry` content attribute is defined as a boolean attribute but then the IDL is currently defined as a `DOMString`, is there a reason for this or is one incorrect? cc annevk 

[09:26:09.0859] <annevk>
That was intentional to allow for changes.

[10:34:52.0100] <Luke Warlow>
Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.

Spec wise we just need something like [ReflectKnown] and [ReflectKnown=string] which triggers the [limited to only known values](https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values) case, because the actual definition is linked with the content attribute in the HTML spec prose.

The [ReflectEnum=identifier] along with [MissingValueDefault], [InvalidValueDefault] and [EmptyValueDefault] are realistically purely implementation problems. Rather than spec ones.

So the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?

[10:35:47.0080] <Luke Warlow>
* Regarding the enumerated attribute reflection we run into an interesting case where the spec need and engine implementation need are quite distinct and I'm wondering how to (or even if we should) square that circle.

Spec wise we just need something like \[ReflectKnown\] and \[ReflectKnown=string\] which triggers the [limited to only known values](https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#limited-to-only-known-values) case, because the actual definition is linked with the content attribute in the HTML spec prose.

The \[ReflectEnum=identifier\] along with \[MissingValueDefault\], \[InvalidValueDefault\] and \[EmptyValueDefault\] are realistically purely implementation problems. Rather than spec ones.

So the question is what should we do here? Having a unified approach across browsers would be nice but does adding spec stuff purely for implementation reasons make sense?

Wondering if anyone has any thoughts on this? Should we perhaps just not handle this in the spec and browsers can do what they feel is best for that specific case? We still win by defining the rest imo.

[10:53:22.0268] <annevk>
Luke Warlow: it will at least obviate the need for the line in prose that says "x IDL reflects x content". There might also be some other benefits in acting as a forcing function towards more consistency. Because of how implementations do Reflect there have also been some mismatches in how things are implemented, though I don't recall the exact scenarios right now. Overall I think it's worth doing even if the benefits are modest and there is some increase in the amount of IDL boilerplate, as I think the uniformity will pay of eventually, but it might require some more iteration.

[11:02:52.0571] <Luke Warlow>
If we take the popover attribute for example it currently has 

```webidl
interface HTMLElement : Element {
     [CEReactions] attribute DOMString? popover;
};
```
The popover attribute is an enumerated attribute with the following keywords and states:

| Keyword | State | Description |
| ---------- | ----- | ----------|
| `auto` | Auto | ... |
| (empty string) | Auto | ... |
| `manual` | Manual | ... |
| `hint` | Hint | ... |

The attribute's missing value default is the No Popover state, and its invalid value default is the Manual state.

The popover IDL attribute must reflect the popover attribute, limited to only known values.

--------

Only that last line is really deletable if we did a new [ReflectKnown], everything else is still needed.

But browsers want that table + special states defined in IDL.

We could do that but then we'd be duplicating which doesn't feel right necessarily.

I guess the keyword definitions could be defined in the IDL enum and linked from the table so there's at least a reference between the two?

[11:15:55.0720] <annevk>
We don't have to define the invalid value default in prose either.

[11:17:28.0875] <annevk>
And some more restructuring might be possible if the table is no longer really for implementers. Although I suppose the mapping to states might continue being needed. Would have to see a bit more of the details.

[11:28:36.0011] <annevk>
AtkinsSJ: apologies for the delay on this, https://github.com/web-platform-tests/wpt/pull/53749 is now up

[11:29:06.0601] <annevk>
AtkinsSJ: if you could verify that'd be appreciated. All of this is extremely subtle unfortunately.

[11:35:39.0516] <AtkinsSJ>
annevk: Oh no need to apologise! I'll take a look tomorrow if that's OK.

[11:36:04.0575] <AtkinsSJ>
Thank you for your work on the spec, it's not for the faint of heart. üòÜ


2025-07-16
[17:23:58.0325] <akaster>
What's the right repo to open an issue about/look at the spec for parsing nodes in XHTML documents? Ladybird at the moment sees "application/xhtml+xml" and creates an HTML document. So we follow the rules for parsing/tokenizing/creating nodes as per HTML spec. But that's not what anyone else does. Leading to this issue: https://github.com/LadybirdBrowser/ladybird/issues/840

[17:24:42.0957] <akaster>
based on my reading of the HTML spec, and looking at https://github.com/whatwg/html/issues/10801 and https://github.com/whatwg/html/issues/8558 it seems like we're doing the correct thing to these XML-only constructs

[17:26:20.0274] <akaster>
both firefox 140 and chromium 138 create CDATASection and ProcessingInstruction nodes inside the div

[17:56:31.0264] <Domenic>
application/xhtml+xml is not a HTML MIME type, it's an XML MIME type. So it should go down the "load an XML document" path of https://html.spec.whatwg.org/#loading-a-document .

[17:57:06.0137] <Domenic>
As https://html.spec.whatwg.org/#read-xml , there is no actual specification for how to turn a stream of XML bytes into DOM nodes.

[00:09:28.0259] <annevk>
I think the main things that are rather weird compared to what you might expect when reading the XML specification are `<template>` and `<script>`. There's also no good interop for handling parse errors.

[04:46:58.0846] <annevk>
Luke Warlow: I think Darin added ReflectSetter to WebKit recently. Seems useful.

[04:53:24.0518] <Luke Warlow>
Ah nice! Yeah I was looking through and I think there's enough cases to warrant it in the spec too. Especially if there's implementations already benefiting.

[13:28:57.0342] <akaster>
https://mimesniff.spec.whatwg.org doesn't say anything about application/xhtml+xml

[13:29:38.0314] <AtkinsSJ>
> An XML MIME type is any MIME type whose subtype ends in "+xml" or whose essence is "text/xml" or "application/xml". [RFC7303]

[13:30:04.0516] <AtkinsSJ>
So we should be seeing that as XML already, I thought someone implemented all of mimesniff

[13:30:38.0429] <akaster>
ah, just got there :D. "ends in +xml". I was doing a little misreading 

[13:46:10.0806] <TabAtkins>
Ugh, can we block this Ahmedmeshref280 spammer entirely from the org?


2025-07-17
[18:54:56.0083] <Domenic>
Spammers are almost always blocked entirely from the org after their first spam, they just usually manage to get in a lot of spam before we get out the banhammer... let's see what this morning's email batch brings me.

[08:32:11.0755] <cwilso>
I'm really sorry for the late notice; I'd intended chair this morning's WHATWG meeting from vacation, but a minor family emergency is taking over.  Can someone else chair?


2025-07-18
[23:38:30.0139] <annevk>
TabAtkins: are you around perchance? I wonder what the correct fix is for this error:
```
LINE 146: 'Name' key should contain just the property/descriptor name, or a comma-separated list. Found markup:
  '@media/-webkit-device-pixel-ratio'
```

[23:39:26.0085] <annevk>
I need this to unblock https://github.com/whatwg/compat/pull/277

[23:40:03.0640] <TabAtkins>
You probably want to move the @media part to a For: line. But let me check the PR

[23:40:19.0920] <TabAtkins>
(I'm in bed, but have a sec because I'm waiting for my watch to charge)

[23:41:16.0883] <annevk>
It's not directly part of the PR and this is something that used to work and does generate a link still according to PR Preview.

[23:42:10.0582] <TabAtkins>
Yeah, that's odd...

[23:42:24.0187] <TabAtkins>
I apologize but I'll have to debug in the morning.

[23:42:39.0026] <annevk>
All good, have a good night!

[10:21:45.0482] <R.tealur>
So this is what the original WHATWG looks like? 

[11:26:15.0639] <TabAtkins>
annevk: Filed a PR fixing the issues in the spec.

[11:27:44.0892] <TabAtkins>
The one that your builds were triggering looks to have been caused by me switching inline shorthands to be handled in the parser; the timing change in how the shorthand was handled caused it to get caught by the check (which it should have always done). There's a `Repository` issue that I'm not sure how it built at all; I don't see any metadata setting that. Maybe I'm missing something.

[12:19:48.0615] <gogo>
I am confused with : https://w3c.github.io/did/ did the web spec migrated to web3 ? No server anymore ?

[12:25:38.0346] <akaster>
w3c and whatwg have nothing to do with crypto

[12:25:57.0956] <akaster>
* w3c and whatwg have nothing to do with cryptocurrency or blockchain

[12:35:46.0818] <gogo>
sure it is web. I am confused with the spec title

[14:13:48.0023] <TabAtkins>
gogo: What's confusing you about it? The title seems pretty straightforward for what the spec is defining...

[14:33:04.0317] <gogo>
I was talking to talk for fun. I will read them tomorrowx. Thank and best regards


2025-07-21
[23:53:06.0971] <annevk>
Should adopted style sheets be cloned?

[23:54:31.0208] <annevk>
I guess generally we've not wanted to copy internal state, but it can be useful. And we certainly do it when cloning for internal purposes or serializing to disk.

[23:57:44.0645] <emilio>
> <@annevk:matrix.org> Should adopted style sheets be cloned?

Wdym? As in making the same stylesheet different on adopt or something?

[00:07:48.0699] <annevk>
emilio: I'm not sure how adopt fits into this. I mainly meant that if you clone a document or shadow root, whether the clone should have the same adopted style sheets.

[00:15:24.0911] <emilio>
> <@annevk:matrix.org> emilio: I'm not sure how adopt fits into this. I mainly meant that if you clone a document or shadow root, whether the clone should have the same adopted style sheets.

Ah I see... That seems doable, though we probably need to clear on adopt give the current restrictions

[00:58:08.0624] <hsivonen>
Thanks. I'll have to study this properly.

[07:15:04.0537] <annevk>
Domenic: it seems the people redefining string ended up doing so mainly due to a ReSpec bug: https://github.com/w3c/webref/issues/1619

[07:19:46.0019] <evilpie>
Oh, I didn't realize that parsing comments was so complicated. I have been thinking about https://github.com/whatwg/html/issues/11456 and what to actually escape to make sure a comment doesn't end prematurely. 

[07:21:39.0055] <evilpie>
Naively I had assumed all comments end with `-->`

[08:15:35.0892] <annevk>
There are many trees you can't serialize safely. Does serializing comments safely move the needle sufficiently?

[08:38:39.0476] <evilpie>
I guess not really? It does feel bad to me that even comments aren't safe.

[08:59:28.0054] <mfreed>
Hi all, just a friendly reminder to post any discussion topics for this Thursday's joint CSSWG/WHATWG/OpenUI task force meeting to the meeting agenda issue: https://github.com/whatwg/html/issues/11476


2025-07-22
[23:23:01.0353] <annevk>
Congrats on getting customizable `<select>` landed jarhar (and Domenic)!

[23:29:05.0596] <annevk>
Are we getting a blog post?

[23:49:08.0386] <Domenic>
I think we should, if Joey's up for it!

[23:49:27.0268] <Domenic>
annevk Dominic Farolino: ping for review on https://github.com/whatwg/html/pull/11442

[00:04:51.0729] <annevk>
I just cloned whatwg/streams and downloaded close to 2 GiB‚ÅâÔ∏è

[00:10:20.0609] <sideshowbarker>
https://github.com/whatwg/streams/tree/main/reference-implementation

[00:10:41.0627] <sideshowbarker>
web-platform-tests submodule in there

[00:11:18.0696] <annevk>
Oh sigh. I committed a cardinal sin. (I did not remove the PR number from the commit title.)

[00:11:28.0570] <annevk>
Yeah, that must be it. WPT is huge.

[00:12:05.0506] <sideshowbarker>
welcome to the club, sinner

[00:12:18.0550] <annevk>
Also, what is going on with GitHub. I keep having to approve the workflow of a branch I'm actively pushing to.

[04:17:57.0028] <Luke Warlow>
It'd be great if we could get https://github.com/html5lib/html5lib-tests/pull/178 updated and merged too. Else parsers might run into issues or update and not quite match the spec (if they base it on the tests)

[04:45:57.0960] <annevk>
Agreed. That doesn't appear to be in a great state according to the comments. jarhar ^^

[07:53:18.0615] <evilpie>
Did we ever consider not allowing javascript: URLs for `navigation.navigate` or would that be problematic by making the API less powerful than `location.href` ?

[08:02:55.0950] <Domenic>
Someone raised it on the Chromium issue tracker once. They weren't able to explain what it solves, when `location.href` exists...

[08:08:46.0643] <evilpie>
I get the point. It does feel a bit unfortunate to me that we are introducing a new script sink.

[08:09:31.0681] <evilpie>
I of course don't actually believe that you can create a reasonable secure website by somehow protecting all scripts sink manually or something like that!

