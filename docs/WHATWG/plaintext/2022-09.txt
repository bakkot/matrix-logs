2022-09-01
[17:34:45.0351] <tigerkiller55891>
Hello

[01:01:57.0914] <sideshowbarker>
`Transfer-Encoding` seems to be the only HTTP fields/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:24:34.0116] <sideshowbarker>
 * `Transfer-Encoding` seems to be the only HTTP field/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:30:49.0416] <sideshowbarker>
hmm, I guess maybe because it’s not supported in HTTP/2 (and likely not in HTTP/3) — and so in that sense, it’s not part of the shared Semantics of core HTTP but instead it’s something that only works in the HTTP/1.1 syntax…

[01:33:18.0254] <Domenic>
annevk: https://github.com/whatwg/fetch/pull/1469 is highest-priority fetch PR if you could find some time soon :)

[09:30:37.0718] <Panos Astithas>
It looks like our next HTML triage meeting conflicts with TPAC. I'm thinking of skipping this instance, unless others disagree.


2022-09-04
[17:24:20.0541] <Maxim Vaarwel>
thanks, for respond


2022-09-05
[04:59:01.0755] <nicolo-ribaudo>
Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

[05:24:19.0307] <Andreu Botella>
Has anyone else noticed that HTML's section on "killing scripts" only focuses on killing script or module evaluation, rather than the evaluation of a callback?

[05:59:51.0487] <Domenic>
> <@nicolo-ribaudo:matrix.org> Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

Sure, that would be great!

[06:00:21.0281] <hsivonen>
annevk: FWIW, it looks a lot like https://github.com/web-platform-tests/wpt/blob/master/html/cross-origin-embedder-policy/non-initial-about-blank.https.html passes in Gecko for the wrong reason.

[06:01:45.0452] <hsivonen>
As for pass in other browsers, I'm currently trying to locate spec text that would explain why going from lack of `src` to `src="about:blank"` should trigger a navigation from the initial `about:blank` to a non-initial `about:blank`.

[06:09:28.0656] <hsivonen>
So, I take it that a change in `src` triggers a navigation even if the URL resolves to the same URL that's already the URL of the current doc in the iframe.

[06:44:42.0420] <zcorpan>
hsivonen: https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element:process-the-iframe-attributes-3


2022-09-06
[23:58:42.0187] <sideshowbarker>
So I’m writing the intro of an MDN page for the Paint Timing API and want the intro the put the Paint Timing API on context relative to the Largest Contentful Paint API.

[00:00:14.0878] <sideshowbarker>
Would it be accurate for me to make it basically say the Largest Contentful Paint API aims to provide timing information that’s more useful in practice, to the point that it obviates need for the Paint Timing API.

[00:02:21.0639] <sideshowbarker>
In other words, implying (if not explicitly saying) that if you have access to the Largest Contentful Paint timing info, that’s better info and you wouldn’t also have use for knowing when first contentful paint occurred.

[00:05:10.0196] <sideshowbarker>
/me looks around for Noam Rosenthal

[00:11:40.0775] <sideshowbarker>
I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make measurable such that it could be exposed to web content.

[00:11:55.0098] <sideshowbarker>
 * So I’m writing the intro of an MDN page for the Paint Timing API and want the intro to put the Paint Timing API on context relative to the Largest Contentful Paint API.

[00:12:02.0547] <sideshowbarker>
 * So I’m writing the intro of an MDN page for the Paint Timing API and want the intro to put the Paint Timing API in context relative to the Largest Contentful Paint API.

[00:13:39.0814] <sideshowbarker>
 * I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make readily exposable to web content.

[00:14:13.0327] <sideshowbarker>
 * I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make measurable such that it could be exposed to web content.

[00:36:39.0268] <Domenic>
Chrome prioritizes LCP over FCP in Core Web Vitals. This was done based on some analysis and data showing that LCP captured user experience better. Perhaps that is what you're thinking of?

[00:39:35.0470] <Domenic>
Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

[01:19:16.0407] <Noam Rosenthal>
I think FCP are LCP are both useful, in different ways and depending on the content

[01:19:59.0363] <Noam Rosenthal>
they are two important points in the loading experience. LCP is more important for CWV but both can give the developers a good hint about how your loading went

[01:20:31.0687] <Noam Rosenthal>
e.g. if you have a small "Loading" icon and then all the real content loads, FCP will give you the time of the loading icon and LCP will give you the time of the entire content

[01:21:27.0126] <Noam Rosenthal>
for pages like wikipedia, FCP is very important - it's the time where the wikipedia content loads. Afterwards maybe some big image would load and be the LCP, but both timings are meaningful. So like I said it's content-dependent

[01:21:53.0917] <Noam Rosenthal>
CWV is an attempt to crystalize all the different metrics to 3 magic numbers, but many times you need more metrics than that to get the whole story and optimize

[01:22:29.0374] <Noam Rosenthal>
sideshowbarker: ^^

[01:22:58.0151] <Noam Rosenthal>
 * for pages like wikipedia, FCP is very important - it's the time where the wikipedia content loads. Afterwards maybe some big image would load and be the LCP, but both timings are meaningful. So like I said it's content-dependent

[01:25:12.0611] <Noam Rosenthal>
sideshowbarker: the webkit team discussion was about `first-paint`. They didn't want to include it because it was not useful given that webkit buffers painting until it's contentful

[02:41:15.0226] <hsivonen>
> <@zcorpan_:matrix.org> hsivonen: https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element:process-the-iframe-attributes-3

Thanks. I observe that `object` doesn't have a similar _initialInsertion_ flag. Not sure yet, if this is a spec oversight or a genuine platform difference between `object` and `iframe`.

[02:57:02.0031] <sideshowbarker>
Noam Rosenthal: If you have time to look over https://github.com/mdn/content/pull/20346 and call out any problems you see — or any improvements that could be made — that’d be much welcome.

[02:59:09.0692] <sideshowbarker>
> <@domenicdenicola:matrix.org> Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

I guess what I must have been thinking of was actually just the distinction between first paint and first contentful paint (as Noam mentions)

[03:01:11.0326] <sideshowbarker>
> <@domenicdenicola:matrix.org> Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

https://web.dev/lcp/ and https://web.dev/optimize-lcp/ and https://web.dev/user-centric-performance-metrics/ are the best sources I was able to find

[03:21:33.0359] <zcorpan>
hsivonen: I don't know either re `object` vs `iframe`

[03:22:08.0377] <hsivonen>
> <@zcorpan_:matrix.org> hsivonen: I don't know either re `object` vs `iframe`

Thanks.

[04:10:06.0148] <Domenic>
object spec is a giant mostly-unmaintained mess... if you can make object more like iframe, that would be a great end state

[04:13:12.0102] <Noam Rosenthal>
> <@sideshowbarker:matrix.org> Noam Rosenthal: If you have time to look over https://github.com/mdn/content/pull/20346 and call out any problems you see — or any improvements that could be made — that’d be much welcome.

Will do!

[04:14:05.0149] <Noam Rosenthal>
sideshowbarker: I'll also ping other people in my team to take a look

[04:51:26.0404] <sideshowbarker>
Noam Rosenthal: I see that PR got merged before your comments came in. We tend to merge PRs relatively quickly — and for MDN I think that’s a good thing in general. But for your changes I’d be happy to open a PR myself. Or leave it up to you — whichever you prefer.

But regardless, it’d still be great to have review from others on your team too for the https://github.com/mdn/content/pull/20346 changes.

And rather than needing to view the diff, anybody can review the current state of the content, with the changes merged, at:

- https://pr20346.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Paint\_Timing\_API
- https://pr20346.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Largest\_Contentful\_Paint\_API

…or else, within the next 48 hours at most, the production site will have the updated content at:

- https://developer.mozilla.org/en-US/docs/Web/API/Paint\_Timing\_API
- https://developer.mozilla.org/en-US/docs/Web/API/Largest\_Contentful\_Paint\_API

[04:51:42.0645] <sideshowbarker>
 * Noam Rosenthal: I see that PR got merged before your comments came in. We tend to merge PRs relatively quickly — and for MDN I think that’s a good thing in general. But for your changes I’d be happy to open a PR myself. Or leave it up to you — whichever you prefer.

But regardless, it’d still be great to have review from others on your team too for the https://github.com/mdn/content/pull/20346 changes.

And rather than needing to view the diff, anybody can review the current state of the content, with the changes merged, at:

- https://pr20346.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Paint\_Timing\_API
- https://pr20346.content.dev.mdn.mozit.cloud/en-US/docs/Web/API/Largest\_Contentful\_Paint\_API

…or else, within the next 48 hours at most, the production site will have the updated content at:

- https://developer.mozilla.org/en-US/docs/Web/API/Paint\_Timing\_API
- https://developer.mozilla.org/en-US/docs/Web/API/Largest\_Contentful\_Paint\_API

[06:36:07.0495] <Noam Rosenthal>
sideshowbarker: no worries, I'll post a correction PR. The PR has links to those previews, so I think the team will manage (I already passed it along). Thanks!

[06:44:56.0557] <Noam Rosenthal>
sideshowbarker: https://github.com/mdn/content/pull/20351 and https://github.com/mdn/content/pull/20350


2022-09-07
[19:26:56.0607] <sideshowbarker>
Noam Rosenthal: thanks for doing that

[01:40:22.0338] <hsivonen>
AFAICT, https://github.com/web-platform-tests/wpt/blob/master/upgrade-insecure-requests/gen/iframe-blank-inherit.meta/upgrade/fetch.https.html tests that calling `document.open()` on the initial `about:blank` inherits `upgrade-insecure-requests` from the caller to the `open()`ed doc. I don't see this specified in either https://w3c.github.io/webappsec-upgrade-insecure-requests/ or https://html.spec.whatwg.org/#document-open-steps . What am I missing? (Also, Gecko tries to inherit CSP between steps 6 and 7, but evidently, it's not inheriting enough.)

[03:49:08.0526] <Domenic>
hsivonen: seems like a bad test. I can't immediately tell given how many layers of generation seem to be going on but I would doubt that was intentionally tested...

[03:50:04.0482] <Domenic>
This code looks totally bogus in Chromium to me... https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/document.cc;l=3257-3285;drc=6bf619d06ef290056d3e134756c1c4eaa17a2d70

[03:50:43.0880] <hsivonen>
The test was OK after all. I tracked it down to Gecko's failure to recompute upgrade-insecure-requests upon `document.open`

[03:51:22.0582] <hsivonen>
(Gecko copied the CSP OK, but failed to actually run the function to compute upgrade-insecure-requests out of the CSP)

[03:51:55.0523] <Domenic>
Fascinating

[03:52:18.0295] <Domenic>
I am hoping we can avoid inheriting anything, whether it's Gecko's CSP or Blink's renderer-process-only sandbox flags / security origin

[03:53:59.0419] <hsivonen>
(Aside: The way `fetch()` spec-wise inherits CSP from the doc in the `window` that `fetch()` is called on, is specified so abstractly that I wasn't confident how upgrade-insecure-requests should propagate, but it turns out that it should propagate from doc to `fetch()`.)

[03:54:56.0501] <Domenic>
Fuked https://bugs.chromium.org/p/chromium/issues/detail?id=1360795

[03:55:05.0945] <Domenic>
 * Filed https://bugs.chromium.org/p/chromium/issues/detail?id=1360795

[03:56:01.0263] <Domenic>
Note that the spec's "URL and history update steps" usage is probably not web-compatible... we should probably add a warning... see https://github.com/whatwg/html/issues/6556

[03:58:47.0990] <hsivonen>
> <@domenicdenicola:matrix.org> Filed https://bugs.chromium.org/p/chromium/issues/detail?id=1360795

Is "322" a typo with a digit missing?

[04:03:50.0372] <hsivonen>
> <@domenicdenicola:matrix.org> Note that the spec's "URL and history update steps" usage is probably not web-compatible... we should probably add a warning... see https://github.com/whatwg/html/issues/6556

Currently, I'm finding that tests that test history length start failing with my patch but they already fail in Chrome and pretty consistently if I remove expectations for history length to grow by one more than Chrome grows it, the tests pass both in Chrome and in Firefox+my patch.

[04:03:55.0235] <Domenic>
Yes, thanks, fixed

[04:04:22.0351] <Domenic>
> <@hsivonen:mozilla.org> Currently, I'm finding that tests that test history length start failing with my patch but they already fail in Chrome and pretty consistently if I remove expectations for history length to grow by one more than Chrome grows it, the tests pass both in Chrome and in Firefox+my patch.

For document.open() specifically, or other places?

[04:05:16.0879] <hsivonen>
> <@domenicdenicola:matrix.org> For document.open() specifically, or other places?

Other places.

[04:11:29.0965] <hsivonen>
Back in 2011 when I tried to change how Gecko handles about:blank, I got failures on history mochitests but didn't have a way to run the same tests in another engine like I can now run WPT to see that the test expectations differ from Chrome and my patch actually moves towards interop despite failing tests.


2022-09-08
[23:38:18.0683] <sideshowbarker>
PSA: At https://github.com/w3c/csswg-drafts/issues/7712 I made a new proposal to start auto-publishing CSS WG drafts at https://w3c.github.io/csswg-drafts URLs, using the same https://github.com/w3c/spec-prod tooling that most other W3C groups/repos already use — in parallel with continuing to publish them at drafts.w3.org URLs.

[04:11:00.0342] <Domenic>
I hope they do it, although given how your attempts last time went it seems like the group is pretty set on the "dump money onto the dumster fire" solution :(

[07:00:12.0695] <Jake Archibald>
emilio: btw, we're going to have a breakout session on shared element transitions at TPAC https://www.w3.org/wiki/TPAC/2022/SessionIdeas#Page_transitions_in_the_browser_.28Shared_Element_Transitions.29

[07:00:48.0994] <emilio>
cool, thanks! will try to make it

[07:05:08.0317] <hsivonen>
AFAICT when the inner window is reused when navigating from the initial about:blank, Chrome aborts a synchronous XHR pending in that window and WPT tests this, but I don't see this in the spec. Spec bug or bad spec reading on my part?


2022-09-09
[17:12:32.0549] <Domenic>
I thought unloading cancels all network requests?

[17:13:34.0858] <Domenic>
Like I don't think initial about:blank is special here

[17:14:32.0129] <Domenic>
https://html.spec.whatwg.org/#abort-a-document step 2

[18:40:28.0093] <sideshowbarker>
I’m still optimistic. Especially if I’m willing to do all the setup work for it myself, with the understanding that we can just test out the results first, and turn it off later if there are objections for some reason. And hopefully we can take advantage of face-to-face time at TPAC next week to have a friendly discussion about it there.

[18:43:18.0100] <sideshowbarker>
annevk: if you have time to look at https://github.com/mdn/content/issues/20441 that’d be much appreciated. (Or anybody else who wants to take time to look into it.)

The behavior described in that issue description doesn’t seem to conform to the spec but I’ve not tried reproducing it. The OP has a repro case set up at https://github.com/AtofStryker/understanding-cookie-behavior

[18:43:41.0057] <sideshowbarker>
> <@domenicdenicola:matrix.org> I hope they do it, although given how your attempts last time went it seems like the group is pretty set on the "dump money onto the dumster fire" solution :(

 * I’m still optimistic. Especially if I’m willing to do all the setup work for it myself, with the understanding that we can just test out the results first, and turn it off later if there are objections for some reason. And hopefully we can take advantage of face-to-face time at TPAC next week to have a friendly discussion about it there.

[18:49:22.0848] <sideshowbarker>
hmm wait actually I see the issue is just about the statement _“Setting withCredentials has no effect on same-site requests”_ in MDN at https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials.

…which is just wrong in the case where a same-site request is cross-origin

[19:03:00.0484] <sideshowbarker>
commented at https://github.com/mdn/content/issues/20441#issuecomment-1241414596

[01:31:22.0390] <smaug>
zcorpan: is plaintext-only some ancient feature?

[01:31:40.0421] <zcorpan>
smaug: yes

[01:32:00.0802] <smaug>
zcorpan: does anyone have usage data of it?

[01:33:46.0877] <zcorpan>
smaug: https://chromestatus.com/metrics/feature/timeline/popularity/1132

[01:34:23.0601] <Ms2ger 💉💉>
Oh, I thought you meant `<plaintext>`

[01:34:32.0496] <zcorpan>
smaug: there's also https://chromestatus.com/metrics/feature/timeline/popularity/1800 which ... has higher usage :/ I was hoping browsers could remove -webkit-user-modify

[01:35:52.0357] <smaug>
plaintext-only is going down nicely. If chromium just pushed a tiny bit, we might be able to get rid of  it

[01:39:55.0103] <zcorpan>
maybe, but 0.2% was enough to need to add `<image>` parsing back in 2006

[01:40:30.0485] <zcorpan>
meanwhile the web editing folks propose a more verbose way to do the same thing (with more control, but still) https://w3c.github.io/editing/docs/contentEditableDisabled/

[01:42:46.0594] <zcorpan>
also -webkit-user-modify: read-write-plaintext-only is at 2%, so if that is not also removed there's no win with removing contenteditable=plaintext-only (which maps to the css property in webkit/chromium)

[01:55:05.0166] <Jake Archibald>
`plaintext-only` is actually pretty nice for creating a text field which grows to fit its contents

[01:55:29.0954] <Jake Archibald>
Which I recall being pretty hard with `<textarea>`

[06:38:39.0779] <Jake Archibald>
annevk smaug: We're going to have a breakout on the history spec changes if you're interested https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362

[06:38:56.0727] <smaug>
Jake Archibald: yeah, I'll try to be there

[07:51:40.0535] <hsivonen>
> <@domenicdenicola:matrix.org> https://html.spec.whatwg.org/#abort-a-document step 2

Thanks. That's what I should have found but somehow failed to.

[12:52:09.0561] <annevk>
Jake Archibald: if there's no overlap will definitely be there. Multi-year rewrites of never properly specified features FTW.

[12:53:55.0198] <annevk>
zcorpan: I've been thinking a bit about your comment about image loading, the microtask it queues, and `<picture>`. I was wondering how that works when `<picture>` is being parsed. Wouldn't you have to wait for `</picture>` essentially? (Which is not something the parser exposes as you probably know all too well.)

[15:37:41.0396] <sideshowbarker>
TabAtkins: beautiful — thanks tons

[15:38:01.0528] <TabAtkins>
np, it was indeed extremely easy since Andreu did all the work already

[15:38:29.0570] <TabAtkins>
(https://w3c.github.io/csswg-drafts/ now exists, fyi to the rest of the channel)

[15:46:03.0856] <Domenic>
OMG!

[15:46:18.0297] <Domenic>
Can we switch Bikeshed to use these as the new URLs?

[15:52:18.0794] <TabAtkins>
Not willing to do that quite yet (it would involve either manually changing every entry in the current database by hand, via a CRUD interface, or bypassing with a hacky search-and-replace like I do to *generate* the mirror). We *are* paying plinss now to get things fixed properly, so we can reevaluate at the end of the contract. ^_^

[16:18:49.0833] <Domenic>
A hacky search-and-replace seems quite worthwhile... maybe I can just do that in the global whatwg build script


2022-09-10
[03:51:21.0482] <Andreu Botella>
> <@domenicdenicola:matrix.org> A hacky search-and-replace seems quite worthwhile... maybe I can just do that in the global whatwg build script

What this mirror does to avoid linking to drafts.csswg.org is to comb through the bikeshed anchor database and replace those links before building: https://github.com/w3c/csswg-drafts/blob/main/bin/configure-spec-data.py

[03:52:15.0698] <Andreu Botella>
I prefer that over a search and replace on the built specs

[06:22:44.0221] <sideshowbarker>
Andreu Botella: I wonder how practical it would be to have `build-index.py` also build/generate a data file (JSON I guess) with, at least, the last-modified (last-revised) time for each spec?

[06:25:01.0490] <sideshowbarker>
I can do it downstream — by fetching each spec and checking get the revision from the, e.g., `<meta content="929f19ea6d7188d984d2e1c0783dff758d84ec57" name="document-revision">` in each, and then using https://docs.github.com/en/rest/commits/commits#get-a-commit from the GitHub API to get the commit data and pull out the date.

[06:27:08.0832] <sideshowbarker>
But if you think `build-index.py` could be patched to do basically the same thing upstream, I’d be happy to work on writing up a patch to do that.

[06:28:31.0273] <sideshowbarker>
my main need for it is for https://html-now.github.io/, in the **Repo** column, where the numbers in red and green and black indicate how many days it’s been since the spec was last updated.

[06:30:41.0586] <sideshowbarker>
Right now I get that by doing a HEAD request for each spec and checking the Last-Revised HTTP header — if there is one (which there is for drafts.csswg.org documents); and if there is not, I check the Last-Modified header.

[06:31:14.0270] <sideshowbarker>
 * I can do it downstream — by fetching each spec and checking the git revision from the, e.g., `<meta content="929f19ea6d7188d984d2e1c0783dff758d84ec57" name="document-revision">` in each, and then using https://docs.github.com/en/rest/commits/commits#get-a-commit from the GitHub API to get the commit data and pull out the date.

[06:31:52.0583] <sideshowbarker>
 * I can do it downstream — by fetching each spec and checking the git revision from the, `meta` element in each doc — e.g., `<meta content="929f19ea6d7188d984d2e1c0783dff758d84ec57" name="document-revision">` — and then using https://docs.github.com/en/rest/commits/commits#get-a-commit from the GitHub API to get the commit data and pull out the date.

[12:03:46.0466] <Domenic>
> <@abotella:igalia.com> What this mirror does to avoid linking to drafts.csswg.org is to comb through the bikeshed anchor database and replace those links before building: https://github.com/w3c/csswg-drafts/blob/main/bin/configure-spec-data.py

This would be harder to hack into whatwg build scripts since those invoke the csswg API version of Bikeshed. Hmm.

[13:22:09.0516] <Bibi Zaiti>
Szia


2022-09-11
[18:21:40.0559] <Domenic>
annevk: if you were to create a HTTP header referring to a URL's query/search component, would you use a name containing "query" or "search"? (https://github.com/WICG/nav-speculation/pull/183 for full context if you're interested.)

[21:25:51.0082] <Scottsdale >
🙈🙈🙈🙈Today is my most happiest day, I never believe in making money in Bitcoin investment until a friend of mine invested with him and got his profit and I decided to give it a try and wow it works out for me, I'm damn happy I can't believe when I opened my Bitcoin wallet and saw my profit I was short of words, thank you so much Sir God bless you, you can also invest with him
👇👇👇👇👇👇

https://t.me/+fg0XTHR8CAo4Y2Fk
https://t.me/+fg0XTHR8CAo4Y2Fk
@FLORAGORDON

[02:57:21.0628] <smaug>
Jake Archibald:  (I was looking at some of my ancient tests) looks like Chrome has changed session history behavior on this case from the old WebKit model to Presto model: http://mozilla.pettay.fi/moztests/history2/Start.html  I think we don't want to spec either one of those. The testcase is about dynamically added iframes

[06:26:33.0608] <Jake Archibald>
smaug: yeah, I ran across this one too. Firefox's model is the sensible one, and it's what I put in PR.

[06:28:23.0595] <Jake Archibald>
The current spec seems to hint at the Firefox behaviour here too.

[06:32:35.0693] <Jake Archibald>
Ah, ok, this bit isn't handled in the PR. I need to make sure it explicitly removes those history entries when the iframe is removed.

[06:58:39.0517] <Jake Archibald>
Oh, no, I misread, it's handled in the current PR (the Firefox model) https://whatpr.org/html/6315/document-sequences.html#destroy-the-nested-navigable

[14:33:48.0453] <Lorin>
Is there a similar discussion platform for CSS spec? 

[14:39:04.0383] <aja>
https://matrix.to/#/#w3c_css:matrix.org

[14:39:25.0545] <aja>
specs (plural)

[14:44:37.0328] <aja>
above room is primarily for css wg meetings, though.  most discussion is in github PRs


2022-09-12
[17:22:40.0708] <annevk>
Should we have a dedicated TPAC channel for WHATWG folks at TPAC or use this one? 1️⃣ for this one. 2️⃣ for a new channel. I guess it would be especially useful for folks not here to vote. Based on the outcome I might do something tomorrow morning.

[17:23:32.0416] <annevk>
Now, related to that, anyone up for dinner in an hour or so? Gonna try to find something with outdoor seating.

[02:26:26.0211] <Ondřej Žára>
I am interested in positioning of the <dialog> element when open. I found https://github.com/w3c/csswg-drafts/issues/4645 and https://html.spec.whatwg.org/multipage/rendering.html#flow-content-3 and https://browserdefaultstyles.com/#dialog, but it is still not clear to me why is the <dialog> centered. In particular, 1) fixed positioning seems to be recommended, but the default styles are still showing "position:absolute"; 2) there is the "margin:auto" declaration, but this does not seem to center arbitrary elements in my userland code.

[07:14:01.0079] <Domenic>
Did you see the "The dialog element, when its is modal flag is true, is expected to act as if it had a user-agent-level style sheet rule setting the following properties:" sentence? That seems to explain it pretty clearly from my perspective

[07:23:17.0907] <Ondřej Žára>
> <@domenicdenicola:matrix.org> Did you see the "The dialog element, when its is modal flag is true, is expected to act as if it had a user-agent-level style sheet rule setting the following properties:" sentence? That seems to explain it pretty clearly from my perspective

Yes, I did see that! And yet, I do not see any positioning/centering there... max-{width,height} are just dimension limitations; the `position:fixed` implies there will be some left/right/top/bottom positioning specified... and the "inset-block-start" property is new to me, but judging from examples at https://developer.mozilla.org/en-US/docs/Web/CSS/inset-block-start, the value of 0 would align the box with the top of the page...

[07:23:56.0222] <Ondřej Žára>
Also, some centering is happening with non-modal <dialog>s as well (via the .show() method).

[07:24:59.0720] <Ondřej Žára>
So I assume some styling/centering is going on even without the modal flag set

[09:04:26.0393] <Domenic>
I'd suggest putting all those properties (plus the UA stylesheet base) into a demo with a <div>; I believe it'll cause centering.

[09:04:44.0672] <Domenic>
You can then use your browser's inspector to see exactly how


2022-09-13
[22:04:30.0478] <leobalter>
annevk Domenic as I mentioned, the unsafe-eval thing: https://www.logius.nl/diensten/digid/ict-beveiligingsassessments-digid/documentatie/uitzonderingsregel-upw03 (Chrome will show up a translate button) 

[23:43:16.0778] <Ondřej Žára>
> <@domenicdenicola:matrix.org> I'd suggest putting all those properties (plus the UA stylesheet base) into a demo with a <div>; I believe it'll cause centering.

You are correct, thanks. Let me save the time of other unfortunate devs that come here seeking the answer, trying to re-apply all the mentioned properties: the centering is caused by the `margin:auto`. MDN helpfully suggests "in certain cases this value can be used to center an element".

[23:52:18.0029] <Ondřej Žára>
...and here comes the explanation, finally: https://www.w3.org/TR/CSS21/visudet.html#abs-non-replaced-height

[03:04:54.0658] <tashasyarifah>
Hi everyone, I'm Tasha. I need your help. How to sign the Participant Agreement? I contribute as an individual and I am a job seeker. I try to click signed as an individual, but it didn't work. Any guidance would be helpful.

[04:40:38.0699] <hsivonen>
Domenic: Has https://www.w3.org/wiki/TPAC/2022/SessionIdeas#The_upcoming_navigation_and_session_history_rewrite been scheduled and is it open to remote participation? (I might call in if open to participation and the timezones work out.)

[07:33:19.0169] <Domenic>
> <@hsivonen:mozilla.org> Domenic: Has https://www.w3.org/wiki/TPAC/2022/SessionIdeas#The_upcoming_navigation_and_session_history_rewrite been scheduled and is it open to remote participation? (I might call in if open to participation and the timezones work out.)

It has and it is! https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362

[07:33:36.0372] <Domenic>
> <@tashasyarifah:matrix.org> Hi everyone, I'm Tasha. I need your help. How to sign the Participant Agreement? I contribute as an individual and I am a job seeker. I try to click signed as an individual, but it didn't work. Any guidance would be helpful.

Hi Tasha, what does "didn't work" mean? Did you get an error?

[07:52:24.0963] <hsivonen>
> <@domenicdenicola:matrix.org> It has and it is! https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362

Thanks. The time zone overlap is problematic, so I most likely won't be calling in. Anyway, the main point that I have is that I'm in the process of editing some history WPTs as part of my about:blank interop effort, so I hope that the current state of those WPTs doesn't end up in the spec: https://phabricator.services.mozilla.com/D155376#change-z3v1YcJlKe7v

[08:14:45.0628] <Domenic>
For sure, we'll make sure the rewritten spec is aligned with your work / the updated versions of those tests.

[09:08:24.0391] <annevk>
leobalter: ah okay, it looks like that is specific to DigiD (Dutch digital ID) deployment. That kinda makes sense I suppose.

[15:08:09.0009] <Jake Archibald>
hsivonen: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier

[16:04:36.0290] <zcorpan>
APA & WHATWG joint meeting now: https://www.w3.org/events/meetings/a0de5c4b-855f-4e12-b5ea-af56343f3fe7


2022-09-14
[21:29:43.0342] <hsivonen>
> <@jakea:matrix.org> hsivonen: https://www.w3.org/events/meetings/118f6c22-1545-4c3b-9581-260621fec362 - we've moved the session earlier

Thanks. I'll call in.

[01:45:46.0503] <nicolo-ribaudo>
Hi! I have a question regarding modules imports.
When you dynamically import a module that is already in the modules map, does it yield to the event loop? My reading of the spec is "no", because it schedules a task to continue the import only when it performs an actual fetch, but both Firefox and Chrome seem to yield. They only settle the dynamic import promise in the current promise tasks queue if the import specifier is malformed.

[01:51:19.0464] <Ms2ger 💉💉>
https://html.spec.whatwg.org/multipage/webappapis.html#hostimportmoduledynamically(referencingscriptormodule,-modulerequest,-promisecapability) - the async returning doesn't seem particularly well integrated with the event loop

[01:57:40.0137] <nicolo-ribaudo>
Right, I'm removing it in https://github.com/whatwg/html/pull/8264 and I'm not 100% sure that I got that part correctly.

[03:45:08.0111] <hsivonen>
What mechanism makes the document.write in https://github.com/web-platform-tests/wpt/blob/master/html/browsers/browsing-the-web/navigating-across-documents/010.html not interfere with the load of href.html?

[03:45:15.0000] <hsivonen>
in Chrome that is

[03:46:00.0368] <hsivonen>
In Firefox currently, the mechanism is that the about:blank isn't the initial about:blank anymore, so the navigation does not reuse the inner window, so the `document.write` happens on the old (about:blank) document.

[03:47:15.0162] <hsivonen>
However, when inner window reuse takes place, which it presumably does in Chrome, what makes the `document.write` not blow away the new document that has become the document of the inner window while the event loop for the sync XHR was spinning?

[03:49:21.0618] <hsivonen>
When Chrome aborts the old fetches (including the XHR), does it also manage to abort scripts that are being executed so that the JavaScript program aborts before xhr.send() returns?

[03:49:43.0161] <hsivonen>
I guess I should test that hypothesis.

[03:54:37.0109] <hsivonen>
I can't log with console.log() from within the javascript: URL in Chrome. Is Chrome not executing the javascript: URL at all for some reason?

[04:26:08.0349] <Haerul Fuad>
smaug: smaug

[06:46:56.0153] <tashasyarifah>
> <@domenicdenicola:matrix.org> Hi Tasha, what does "didn't work" mean? Did you get an error?

So, I clicked signed as an Individual and then submit. The result is I got an error 400. It says Invalid 'entity-name' field. I don't see any form or anything. I'm so confused. 

[07:23:22.0311] <Ms2ger 💉💉>
> with arguments method, args and, undefined.

[07:23:28.0839] <Ms2ger 💉💉>
Is that the Cambridge comma?

[09:51:19.0332] <zcorpan>
tashasyarifah: did you click the triangle in " If signing as an Individual" or did you click the link "Individual"?

[09:52:37.0147] <zcorpan>
Maybe <details> here is confusing UI

[09:53:13.0545] <zcorpan>
and links in <summary> is certainly confusing UI (https://github.com/whatwg/html/issues/2272)

[09:55:03.0529] <Domenic>
nicolo-ribaudo: I guess we should match browsers here, and queue a task regardless. Even if IMO it would have been more elegant not to yield, this is what I get for using imprecise spec constructs; implementers used what they are familiar with / what is well specced (task yielding) and now we end up here.

[09:55:53.0282] <Domenic>
Web platform tests for this would be ideal if possible :)

[09:59:56.0413] <nicolo-ribaudo>
Yeah I agree that not yielding would be more elegant... I'll try to check how the other browsers behave; if they all agree or if there is inconsistent behaviour.

[10:54:34.0659] <zcorpan>
hsivonen: are you able to review https://github.com/whatwg/html/pull/8271 ?

[11:24:17.0138] <hsivonen>
> <@zcorpan_:matrix.org> hsivonen: are you able to review https://github.com/whatwg/html/pull/8271 ?

I set a reminder for myself for tomorrow

[11:53:24.0837] <zcorpan>
ty

[12:22:17.0311] <hsivonen>
AFAICT Chrome doesn't execute the javascript: URL at all on https://github.com/web-platform-tests/wpt/blame/master/html/browsers/browsing-the-web/navigating-across-documents/010.html . Safari, however, is really strange: onmessage sees document.write() winning over the href navigation but what the user sees is the href navigation--not the document.write.

[12:22:39.0908] <hsivonen>
Currently my local patch for Gecko has document.write winning both for script and rendering purposes.

[12:22:51.0559] <hsivonen>
Under what theory should document.write() not win?

[12:24:39.0658] <hsivonen>
That is, what's the logic that the test is trying to test? That aborting the javascript: URL navigation should abort the script excecution and not just the pseudo-network response resulting from the returned string?

[12:24:45.0775] <hsivonen>
jgraham: ^

[14:02:22.0905] <Domenic>
(FWIW, I don't have any real answers here. Happy to approve a rename to .tentative, or maybe delete the test and open a whatwg/html interop issue so we can investigate and come up with what the answer *should* be.)


2022-09-15
[20:11:59.0459] <tashasyarifah>
zcorpan: OMG I click the link "individual". I thought the triangle is act for a list. Maybe change the triangle to be more noticeable. I finished filling out the form. Thank you!

[20:58:40.0205] <Lucy>
🔰Don't depend on your salary only🔰if you have a Gmail account,computer or smartphones,you can start earning $4,000 daily and $10,000 weekly,without #sending_money to anyone click on the link to get started 👇👇👇👇👇👇👇👇
TELEGRAM📈📈📥📥
https://t.me/+T5bSreXpWsAwMDA0

ADMIN:
https://t.me/Braddocklucy

[23:20:25.0140] <hsivonen>
> <@domenicdenicola:matrix.org> (FWIW, I don't have any real answers here. Happy to approve a rename to .tentative, or maybe delete the test and open a whatwg/html interop issue so we can investigate and come up with what the answer *should* be.)

Thanks. I'll mark as tentative.

[00:29:33.0715] <hsivonen>
This test seems to expect _non-initial_ about:blank (which in Chrome fires its load event async) to have the magic characteristic of the DOM getting built (i.e. `contentDocument.body` existing) synchronously when the location has updated: https://github.com/web-platform-tests/wpt/blob/ab53b6abd671656733e41ef03cd0be11250688d7/content-security-policy/inheritance/history-iframe.sub.html#L53-L63 Is there a legitimate Web compat need for this magic?

[04:49:12.0146] <Ms2ger 💉💉>
Is it ever acceptable to use "current settings object" if you're running "in parallel"? cc Domenic annevk 

