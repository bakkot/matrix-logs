2022-09-01
[17:34:45.0351] <tigerkiller55891>
Hello

[01:01:57.0914] <sideshowbarker>
`Transfer-Encoding` seems to be the only HTTP fields/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:24:34.0116] <sideshowbarker>
 * `Transfer-Encoding` seems to be the only HTTP field/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:30:49.0416] <sideshowbarker>
hmm, I guess maybe because it’s not supported in HTTP/2 (and likely not in HTTP/3) — and so in that sense, it’s not part of the shared Semantics of core HTTP but instead it’s something that only works in the HTTP/1.1 syntax…

[01:33:18.0254] <Domenic>
annevk: https://github.com/whatwg/fetch/pull/1469 is highest-priority fetch PR if you could find some time soon :)

[09:30:37.0718] <Panos Astithas>
It looks like our next HTML triage meeting conflicts with TPAC. I'm thinking of skipping this instance, unless others disagree.


2022-09-04
[17:24:20.0541] <Maxim Vaarwel>
thanks, for respond


2022-09-05
[04:59:01.0755] <nicolo-ribaudo>
Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

[05:24:19.0307] <Andreu Botella>
Has anyone else noticed that HTML's section on "killing scripts" only focuses on killing script or module evaluation, rather than the evaluation of a callback?

[05:59:51.0487] <Domenic>
> <@nicolo-ribaudo:matrix.org> Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

Sure, that would be great!

[06:00:21.0281] <hsivonen>
annevk: FWIW, it looks a lot like https://github.com/web-platform-tests/wpt/blob/master/html/cross-origin-embedder-policy/non-initial-about-blank.https.html passes in Gecko for the wrong reason.

[06:01:45.0452] <hsivonen>
As for pass in other browsers, I'm currently trying to locate spec text that would explain why going from lack of `src` to `src="about:blank"` should trigger a navigation from the initial `about:blank` to a non-initial `about:blank`.

[06:09:28.0656] <hsivonen>
So, I take it that a change in `src` triggers a navigation even if the URL resolves to the same URL that's already the URL of the current doc in the iframe.

[06:44:42.0420] <zcorpan>
hsivonen: https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element:process-the-iframe-attributes-3


2022-09-06
[23:58:42.0187] <sideshowbarker>
So I’m writing the intro of an MDN page for the Paint Timing API and want the intro the put the Paint Timing API on context relative to the Largest Contentful Paint API.

[00:00:14.0878] <sideshowbarker>
Would it be accurate for me to make it basically say the Largest Contentful Paint API aims to provide timing information that’s more useful in practice, to the point that it obviates need for the Paint Timing API.

[00:02:21.0639] <sideshowbarker>
In other words, implying (if not explicitly saying) that if you have access to the Largest Contentful Paint timing info, that’s better info and you wouldn’t also have use for knowing when first contentful paint occurred.

[00:05:10.0196] <sideshowbarker>
/me looks around for Noam Rosenthal

[00:11:40.0775] <sideshowbarker>
I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make measurable such that it could be exposed to web content.

[00:11:55.0098] <sideshowbarker>
 * So I’m writing the intro of an MDN page for the Paint Timing API and want the intro to put the Paint Timing API on context relative to the Largest Contentful Paint API.

[00:12:02.0547] <sideshowbarker>
 * So I’m writing the intro of an MDN page for the Paint Timing API and want the intro to put the Paint Timing API in context relative to the Largest Contentful Paint API.

[00:13:39.0814] <sideshowbarker>
 * I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make readily exposable to web content.

[00:14:13.0327] <sideshowbarker>
 * I have a vague recollection that during discussion with the WebKit team, they may have said that in their implementation, one of these paint-timing metrics wasn’t something that’s very useful in practice for developers to know. Or else, not something that their implementation doesn’t even make measurable such that it could be exposed to web content.

[00:36:39.0268] <Domenic>
Chrome prioritizes LCP over FCP in Core Web Vitals. This was done based on some analysis and data showing that LCP captured user experience better. Perhaps that is what you're thinking of?

[00:39:35.0470] <Domenic>
Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

[01:19:16.0407] <Noam Rosenthal>
I think FCP are LCP are both useful, in different ways and depending on the content

[01:19:59.0363] <Noam Rosenthal>
they are two important points in the loading experience. LCP is more important for CWV but both can give the developers a good hint about how your loading went

[01:20:31.0687] <Noam Rosenthal>
e.g. if you have a small "Loading" icon and then all the real content loads, FCP will give you the time of the loading icon and LCP will give you the time of the entire content

[01:21:27.0126] <Noam Rosenthal>
for pages like wikipedia, FCP is very important - it's the time where the wikipedia content loads. Afterwards maybe some big image would load and be the LCP, but both timings are meaningful. So like I said it's content-dependent

[01:21:53.0917] <Noam Rosenthal>
CWV is an attempt to crystalize all the different metrics to 3 magic numbers, but many times you need more metrics than that to get the whole story and optimize

[01:22:29.0374] <Noam Rosenthal>
sideshowbarker: ^^

[01:22:58.0151] <Noam Rosenthal>
 * for pages like wikipedia, FCP is very important - it's the time where the wikipedia content loads. Afterwards maybe some big image would load and be the LCP, but both timings are meaningful. So like I said it's content-dependent

[01:25:12.0611] <Noam Rosenthal>
sideshowbarker: the webkit team discussion was about `first-paint`. They didn't want to include it because it was not useful given that webkit buffers painting until it's contentful

[02:41:15.0226] <hsivonen>
> <@zcorpan_:matrix.org> hsivonen: https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element:process-the-iframe-attributes-3

Thanks. I observe that `object` doesn't have a similar _initialInsertion_ flag. Not sure yet, if this is a spec oversight or a genuine platform difference between `object` and `iframe`.

[02:57:02.0031] <sideshowbarker>
Noam Rosenthal: If you have time to look over https://github.com/mdn/content/pull/20346 and call out any problems you see — or any improvements that could be made — that’d be much welcome.

[02:59:09.0692] <sideshowbarker>
> <@domenicdenicola:matrix.org> Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

I guess what I must have been thinking of was actually just the distinction between first paint and first contentful paint (as Noam mentions)

[03:01:11.0326] <sideshowbarker>
> <@domenicdenicola:matrix.org> Some discussion at the intro to https://web.dev/lcp/, but not much... maybe there's a better source.

https://web.dev/lcp/ and https://web.dev/optimize-lcp/ and https://web.dev/user-centric-performance-metrics/ are the best sources I was able to find

[03:21:33.0359] <zcorpan>
hsivonen: I don't know either re `object` vs `iframe`

[03:22:08.0377] <hsivonen>
> <@zcorpan_:matrix.org> hsivonen: I don't know either re `object` vs `iframe`

Thanks.

