2022-09-01
[17:34:45.0351] <tigerkiller55891>
Hello

[01:01:57.0914] <sideshowbarker>
`Transfer-Encoding` seems to be the only HTTP fields/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:24:34.0116] <sideshowbarker>
 * `Transfer-Encoding` seems to be the only HTTP field/header that’s not defined in the core HTTP Semantics spec, https://httpwg.org/specs/rfc9110.html, but instead in the HTTP/1.1 Syntax spec, https://httpwg.org/specs/rfc9112.html#field.transfer-encoding

Does anybody know why that is?

Why couldn’t it instead be specified in the Semantics spec along with all the other fields/headers?

[01:30:49.0416] <sideshowbarker>
hmm, I guess maybe because it’s not supported in HTTP/2 (and likely not in HTTP/3) — and so in that sense, it’s not part of the shared Semantics of core HTTP but instead it’s something that only works in the HTTP/1.1 syntax…

[01:33:18.0254] <Domenic>
annevk: https://github.com/whatwg/fetch/pull/1469 is highest-priority fetch PR if you could find some time soon :)

[09:30:37.0718] <Panos Astithas>
It looks like our next HTML triage meeting conflicts with TPAC. I'm thinking of skipping this instance, unless others disagree.


2022-09-04
[17:24:20.0541] <Maxim Vaarwel>
thanks, for respond


2022-09-05
[04:59:01.0755] <nicolo-ribaudo>
Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

[05:24:19.0307] <Andreu Botella>
Has anyone else noticed that HTML's section on "killing scripts" only focuses on killing script or module evaluation, rather than the evaluation of a callback?

[05:59:51.0487] <Domenic>
> <@nicolo-ribaudo:matrix.org> Domenic Do you mind if I start working on https://github.com/whatwg/html/issues/7996? It took me a while to understand how "wait until it asynchronously complete" and "custom perform the fetch steps" work, and I would be happy to help replacing them with more explicit constructs.

Sure, that would be great!

[06:00:21.0281] <hsivonen>
annevk: FWIW, it looks a lot like https://github.com/web-platform-tests/wpt/blob/master/html/cross-origin-embedder-policy/non-initial-about-blank.https.html passes in Gecko for the wrong reason.

[06:01:45.0452] <hsivonen>
As for pass in other browsers, I'm currently trying to locate spec text that would explain why going from lack of `src` to `src="about:blank"` should trigger a navigation from the initial `about:blank` to a non-initial `about:blank`.

[06:09:28.0656] <hsivonen>
So, I take it that a change in `src` triggers a navigation even if the URL resolves to the same URL that's already the URL of the current doc in the iframe.

[06:44:42.0420] <zcorpan>
hsivonen: https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-iframe-element:process-the-iframe-attributes-3


2022-09-06
[23:58:42.0187] <sideshowbarker>
So I’m writing the intro of an MDN page for the Paint Timing API and want the intro the put the Paint Timing API on context relative to the Largest Contentful Paint API.

[00:00:14.0878] <sideshowbarker>
Would it be accurate for me to make it basically say the Largest Contentful Paint API aims to provide timing information that’s more useful in practice, to the point that it obviates need for the Paint Timing API.

[00:02:21.0639] <sideshowbarker>
In other words, implying (if not explicitly saying) that if you have access to the Largest Contentful Paint timing info, that’s better info and you wouldn’t also have use for knowing when first contentful paint occurred.

