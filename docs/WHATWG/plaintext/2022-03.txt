2022-03-01
[07:35:57.0792] <ntim>
annevk: Thanks for the review! I wonder if I should remove "The user agent may ignore the node for the purposes of text search
   (commonly known as "find in page")." altogether. No implementation currently does this (unless aria-hidden nodes are ignored in some contexts).

[08:22:55.0849] <ntim>
annevk: also, about "This data-x-href needs to move to where the other data-x-hrefs are.", where are the other data-x-hrefs typically?

[08:23:11.0862] <Ms2ger 💉💉>
"dependencies" section?

[08:23:50.0586] <ntim>
ah makes sense thank you

[08:45:15.0888] <annevk>
ntim: I don't have a strong opinion, how do UAs deal with it then? Wouldn't searching result in selection?

[09:00:50.0182] <ntim>
annevk: searching results in highlighting, not necessarily selection

[09:02:15.0852] <ntim>
(anyway, I addressed all your comments)

[09:06:22.0020] <annevk>
Ah yeah, for some reason I thought you could copy-and-paste the currently highlighted one, but that's not a thing

[09:06:41.0343] <annevk>
Still might be frustrating if you can search and find, but not select and copy

[09:11:59.0901] <annevk>
Thanks ntim! Reviewed again. I suspect we'll wait with landing until next week btw as it's a somewhat big change so Domenic should probably be around.

[09:17:15.0774] <ntim>
> Can you edit without selection? Are execCommand() calls prohibited? How does this actually affect the Selection API, come to think of it?

Not sure how to spec this formally aside from this matches `user-select: none` + `-webkit-user-modify: readonly`

[09:17:26.0094] <ntim>
annevk: ^

[09:18:38.0726] <ntim>
https://github.com/web-platform-tests/wpt/blob/master/inert/inert-and-contenteditable.tentative.html

[09:18:59.0453] <ntim>
it would be like execCommand on a non-editable node

[09:19:37.0294] <ntim>
I guess it would reasonable to reference user-select

[09:21:49.0042] <annevk>
That would help. Do we have some tests around this? Creating a Selection object and trying to assign it nodes from an inert tree?

[09:22:28.0896] <annevk>
It's unfortunate none of these specs are defined to that level of detail, but I guess making it clear they should behave the same is a start...

[09:22:37.0199] <annevk>
emilio thoughts on the above?

[09:22:47.0489] <ntim>
https://github.com/web-platform-tests/wpt/blob/master/inert/inert-node-is-unselectable.tentative.html

[09:22:59.0121] <ntim>
uses execCommand("selectAll")

[09:29:21.0228] <ntim>
annevk: The "The user agent may ignore the node for the purposes of text search (commonly known as
   "find in page")." bit, is there more from an a11y standpoint I think, e.g. inert should behave like aria-hidden

[09:29:46.0993] <ntim>
and the UA may choose to ignore aria-hidden nodes from text search if they want

[09:30:05.0180] <annevk>
Okay, let's keep it then, no?

[09:30:05.0359] <ntim>
(It was there before my PR fwiw)

[09:30:10.0595] <ntim>
sounds good

[09:36:30.0987] <ntim>
annevk: I clarified the bits around editing and selection

[09:42:46.0084] <annevk>
ntim: cool, looks good to me modulo nit about using data-x="" instead of dfn

[09:43:36.0723] <ntim>
annevk: <code data-x=""> by itself seems to complain too

[09:45:05.0055] <ntim>
like "none" needs to be defined at least once

[09:45:06.0480] <ntim>
Error: missing <dfn> for topic "inert-css-property-value-none" from 2 sites including explicitly from <code> element containing "none"; previous heading contents are "6.3 Inert subtrees"
Error: missing <dfn> for topic "inert-css-property-value-none" from 2 sites including explicitly from <code> element containing "none"; previous heading contents are "6.3 Inert subtrees"
Error count: 2


[09:47:20.0309] <annevk>
ntim: that means you still use `inert-css-property-value-none` somewhere

[09:47:35.0921] <annevk>
ntim: instead you should have `<code data-x="">none</code>`

[09:48:09.0237] <ntim>
oh empty string

[09:50:15.0748] <ntim>
thanks! that does seem to work

[09:53:06.0886] <ntim>
annevk: something I was wondering is putting the "blocked by a modal dialog" stuff in its own subsection before or after the "inert attribute" one.

[09:53:35.0016] <ntim>
but it's fine as it is too I guess

[09:56:25.0188] <annevk>
/me looks

[09:58:33.0456] <annevk>
ntim: up to you, I agree it could work

[10:00:04.0787] <annevk>
I wonder if inert only applying to Text/Element has implications elsewhere; I guess Text includes CDATASection and Comment/ProcessingInstruction/ShadowRoot are never rendered, so it prolly doesn't matter

[10:55:11.0201] <Seirdy>
(not asking to ask, just asking for future reference) is WCAG discussion relevant here, or is there a better place? doesn't have to be on matrix.

[11:03:03.0641] <aja>
> <@seirdy:seirdy.one> (not asking to ask, just asking for future reference) is WCAG discussion relevant here, or is there a better place? doesn't have to be on matrix.

perhaps ask in https://matrix.to/#/#accessibility:mozilla.org 

[11:10:17.0049] <Seirdy>
thanks, might have some questions later today

[13:06:12.0240] <Domenic>
Yoav Weiss: Noam Rosenthal : what is the cross-origin redirects case for unload timing protecting against? It's basically saying if you go x.com -> y.com --redirects to-> x.com/bar, x.com/bar does not get unload timing for x.com. Why? No information about y.com leaked.

[13:08:24.0291] <Domenic>
Hmm maybe it's because unloadTimeEnd is an absolute time so you can use it to infer how much time was spent on y.com by comparing it to x.com/bar load time.

[13:43:09.0203] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Yoav Weiss: Noam Rosenthal : what is the cross-origin redirects case for unload timing protecting against? It's basically saying if you go x.com -> y.com --redirects to-> x.com/bar, x.com/bar does not get unload timing for x.com. Why? No information about y.com leaked.

It’s a good question,I think it’s superfluous. Not sure this protection exists in implementations, will check tomorrow. Since it’s the same origin the unload time is anyway known as x.com can save performance.now() somewhere and send it over to be used by x.com/bar

[13:43:24.0958] <Domenic>
Yeah...

[13:43:32.0306] <Domenic>
Thanks for checking!

[13:51:28.0172] <Doug Conmy>
Is there a way to determine if a company (aka Entity) is a whatwg participant/member?   
    That is, they have signed the agreement,  https://participate.whatwg.org/agreement , and have a point of contact.

I am trying to find out internally in my orgnaization, but if this information is public, or if I could ask a member to check, that could save some time in hunting down the right person from my end.

[14:16:33.0141] <Domenic>
> <@dconmy:matrix.org> Is there a way to determine if a company (aka Entity) is a whatwg participant/member?   
>     That is, they have signed the agreement,  https://participate.whatwg.org/agreement , and have a point of contact.
> 
> I am trying to find out internally in my orgnaization, but if this information is public, or if I could ask a member to check, that could save some time in hunting down the right person from my end.

Ctrl+F through https://github.com/whatwg/participant-data/blob/main/entities.json

[14:41:26.0296] <shu>
got a webidl question: i can't seem to find the definition of what it means "to convert a sequence of values of type T to an ECMAScript value", like in step 1 here: https://webidl.spec.whatwg.org/#es-frozen-array

[14:43:42.0995] <Mattias Buelens>
> <@shuyuguo:matrix.org> got a webidl question: i can't seem to find the definition of what it means "to convert a sequence of values of type T to an ECMAScript value", like in step 1 here: https://webidl.spec.whatwg.org/#es-frozen-array

That should be in https://webidl.spec.whatwg.org/#es-sequence

[14:45:41.0730] <shu>
tyvm


2022-03-02
[17:07:46.0284] <sideshowbarker>
annevk: https://stackoverflow.com/questions/71311305/how-to-prevent-safari-from-dropping-the-authorization-header-when-following-a-re
> Safari seems to drop the `Authorization` header when following a [same-origin] 301 redirect... Chrome (98) and Firefox (97) both follow the redirect and include the `Authorization` header in the subsequent `GET` request.

Wonder what behavior the spec requires here

[17:09:09.0809] <sideshowbarker>
and https://stackoverflow.com/questions/57974176/safari-does-not-persist-the-authorization-header-on-redirect is another 2-year-old question about the same thing

[21:12:15.0255] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Yoav Weiss: Noam Rosenthal : what is the cross-origin redirects case for unload timing protecting against? It's basically saying if you go x.com -> y.com --redirects to-> x.com/bar, x.com/bar does not get unload timing for x.com. Why? No information about y.com leaked.

I checked, and the specific scenario (same->cross->same redirect, check that unload is not available) is tested in WPT and passes all 3 browsers... https://github.com/web-platform-tests/wpt/blob/master/navigation-timing/unload-event-same-origin-check.html#L57
https://wpt.fyi/results/navigation-timing/unload-event-same-origin-check.html?label=experimental&label=master&aligned

[21:13:09.0653] <Noam Rosenthal>
to me it seems like an unnecessary security measure or I don't understand it. Yoav Weiss ?

[21:35:56.0574] <Yoav Weiss>
It's possible that this is overly strict. It used to be TAO protected and have the same rules as TAO, but at some point we realized that it's not really protecting anything (it's not the origin which information was exposed that was opting in), so moved to a same origin check. The same=>cross=>same scenario was one that we protected against in TAO, so maybe that logic sticked around through the move to same origin checks.

[21:37:30.0182] <Yoav Weiss>
Maybe annevk has reasons as to why we should keep it, but I tend to agree with y'all that if the previous origin is the same as the destination origin, we could expose the data 

[23:48:27.0553] <annevk>
I think Referer and Sec-Fetch-Site are impacted so I think this ought to be impacted as well. What might leak is if y.com does a further redirect based on a cookie. Now x.com could conspire with subsequent x.com, but given that Referer and Sec-Fetch-Site are impacted it might not entirely be clear whether it's the result of a redirect or a subsequent visit. Especially with more navigation tracking mitigation down the line.

[23:48:42.0817] <annevk>
Noam Rosenthal: Yoav Weiss: Domenic: ^^

[23:48:57.0667] <annevk>
 * I think Referer and Sec-Fetch-Site are impacted so I think this ought to be impacted as well. What might leak is if y.com does a further redirect based on a cookie. Now x.com could conspire with subsequent x.com, but given that Referer and Sec-Fetch-Site are impacted it might not entirely be clear whether it's the result of a redirect or a subsequent visit. Especially with more navigation tracking mitigation down the line.

[23:50:49.0582] <Noam Rosenthal>
> <@annevk:mozilla.org> I think Referer and Sec-Fetch-Site are impacted so I think this ought to be impacted as well. What might leak is if y.com does a further redirect based on a cookie. Now x.com could conspire with subsequent x.com, but given that Referer and Sec-Fetch-Site are impacted it might not entirely be clear whether it's the result of a redirect or a subsequent visit. Especially with more navigation tracking mitigation down the line.

OK so this hides the fact that the unload and the new document are the same visit, which is otherwise a hidden fact. This also brings back the https://github.com/w3c/navigation-timing/issues/160 thing...

[23:56:38.0240] <annevk>
Noam Rosenthal: yeah, though I'd argue that case is worse.

[23:57:01.0077] <annevk>
sideshowbarker: left a reply. Not sure if Safari has an open bug for this, maybe you want to file one?

[23:58:41.0459] <sideshowbarker>
> <@annevk:mozilla.org> sideshowbarker: left a reply. Not sure if Safari has an open bug for this, maybe you want to file one?

I'll ask the OP if they can file a bug

[07:28:49.0654] <devsnek>
any webkit/gecko people feeling inspired? https://github.com/whatwg/websockets/issues/20

[07:29:25.0324] <devsnek>
annevk: you seemed to not hate this, in the past at least. do you think mozilla would accept contribution for this?

[07:31:45.0486] <annevk>
devsnek: yeah probably, but will need spec + tests


2022-03-03
[23:56:40.0596] <Noam Rosenthal>
Welcome bashi!  a question to you and Yoav Weiss about early hints: do they survive same-origin redirects?

[23:58:07.0866] <bashi>
Noam Rosenthal: Our implementation is that they don't survive redirects including same-origin.

[00:01:25.0790] <Noam Rosenthal>
I personally think this could be useful - even if it's not implemented yet. e.g. you submit a form which is going to do some heavy processing and then redirect you to somewhere - might as well start sending the 103s beforehand

[00:01:34.0014] <Noam Rosenthal>
 * I personally think this could be useful - even if it's not implemented yet. e.g. you submit a form which is going to do some heavy processing and then redirect you to somewhere - might as well start sending the 103s beforehand

[00:03:23.0296] <bashi>
I think changing the behavior isn't difficult. I think we can update our implementation if that's preferable and there is consensus.

[00:06:40.0326] <Noam Rosenthal>
bashi: OK, since the reserved client survives same-origin redirects, for now we'll leave it in the draft PR and we can discuss the specifics on Github

[00:37:05.0359] <annevk>
I guess the question is whether the preloads are preserved?

[00:39:49.0667] <Noam Rosenthal>
annevk: exactly, if you started preloading something and then redirected to somewhere else in the same origin, should you continue those preloads and then transfer them to the document

[00:41:25.0346] <Noam Rosenthal>
... I think it's useful to allow that, but not sure if that has further implications

[00:43:23.0481] <annevk>
Nothing comes to mind, but you might get rather involved sequences... 103 302 103 401 103 200

[00:44:00.0203] <annevk>
Speaking of which, I guess those questions apply to 401/407 too.

[00:45:03.0095] <Noam Rosenthal>
yea I believe we'll have only the first or last (most likely first) 103 in the sequence apply

[00:45:41.0219] <annevk>
Ooh, I didn't realize that. Is that also according to the 103 spec?

[00:47:47.0409] <Noam Rosenthal>
annevk: no, we're discussing that as part of the HTML implementation of what 103 means

[00:48:33.0492] <Noam Rosenthal>
the RFC also allows sending 103 103 103 200

[00:49:07.0106] <annevk>
Right, I kinda expected that would work, but I don't have a strong opinion I think. I asked someone in our networking team.

[00:49:15.0731] <Noam Rosenthal>
(working on a draft spec which would make this a bit easier to discuss)

[07:30:08.0094] <annevk>
TabAtkins: known that api.csswg.org is down?

[08:54:21.0051] <annevk>
Domenic: so I think that in Gecko in the "global view" for browsing contexts that have a parent it's not represented by a browsing context, but rather a specific Window (called a WindowContext), which unless we make that explicit would be more clearly represented by an element than what we have today I think

[08:55:00.0818] <Domenic>
Hmm.

[08:55:48.0937] <Domenic>
I think Chromium is the opposite, but I really need to think about the specific bad case you mention...

[09:00:45.0125] <Domenic>
annevk: if you could double-check my reasoning on https://github.com/whatwg/html/issues/7676 that would be very appreciated; if it's correct I'll need to do some serious surgery as part of the session history rewrite, but if I'm missing something and the current setup is OK that'd be great to know first.

[09:30:14.0378] <annevk>
Domenic: so having read that I'm not entirely sure where we end up with the wrong state

[09:30:28.0513] <annevk>
Domenic: the initial about:blank is wasteful, but it doesn't seem wrong

[09:30:35.0352] <Domenic>
annevk: the creation URL being about:blank seems most worrying to me

[09:30:42.0799] <Domenic>
Or is that a normal thing that happens?

[09:30:52.0201] <Domenic>
But I thought we did like security stuff with creation URL

[09:31:35.0133] <annevk>
Domenic: we do, but only when we're loading something, and by that time the creation URL will be the "final" URL, no?

[09:31:47.0618] <Domenic>
Does something later update creation URL?

[09:32:06.0028] <Domenic>
I thought it would only be set on creation... maybe that is the wrong assumption.

[09:32:18.0087] <annevk>
Domenic: as in, we'll create a new environment for the URL this new BC is being navigated to (that will replace the initial about:blank environment)

[09:32:44.0962] <Domenic>
I don't think we will? Because we have an initial about:blank so we'll just reuse the newly-created Window/ESO

[09:33:02.0650] <annevk>
No, it'll be cross-origin so it cannot reuse.

[09:33:43.0204] <Domenic>
Ohhh

[09:33:57.0564] <annevk>
(Creation URL is used by Fetch and is indeed security sensitive, but it's only used when the thing would fetch stuff, which this won't.)

[09:34:00.0485] <Domenic>
OK then yes I think everything is great. So glad I asked.

[09:34:14.0188] <Domenic>
I will add a big <p class="note">!

[09:34:21.0884] <annevk>
Fair 🙂

[09:35:17.0339] <Domenic>
bakkot: logs are not working anymore? :( https://matrixlogs.bakkot.com/WHATWG/

[09:56:06.0716] <bakkot>
Domenic: hmmm

[09:56:33.0888] <bakkot>
odd, they're working for other channels

[09:56:48.0449] <bakkot>
I'll take a look later today, thanks for the ping

[10:09:16.0277] <bakkot>
Domenic: should be fixed, sorry about that

[10:29:01.0300] <Domenic>
Awesome, thanks!

[10:55:14.0901] <TabAtkins>
annevk: Looks like the server went down real hard; I can't access the control panels either. Pinged plinss about it.

[15:18:11.0481] <shu>
Domenic: who should i be tagging for webidl PR reviews?

[15:18:28.0112] <shu>
(or anyone)

[15:19:08.0388] <Domenic>
shu: timothygu is good but busy, same as me; this week I'm in particular not doing reviews


2022-03-04
[17:00:07.0133] <crowlkats>
Whats the status of https://github.com/whatwg/streams/pull/1145? Deno is extremely interested in it

[17:00:38.0114] <Luca Casonato>
We're happy to do any necessary spec or integration work to get this landed.

[19:32:38.0366] <Domenic>
Waiting on implementer interest I believe. Might be similar to Response.json(), and a good candidate for https://github.com/whatwg/js-hosts/ while we wait.

[00:28:48.0510] <annevk>
It seems plinss turned it off and on again \o/

[00:43:45.0657] <Andreu Botella>
For the record, I set up https://github.com/andreubotella/csswg-auto-build as an auto-building and auto-updating mirror for the CSS specs

[03:11:45.0117] <sideshowbarker>
> <@abotella:igalia.com> For the record, I set up https://github.com/andreubotella/csswg-auto-build as an auto-building and auto-updating mirror for the CSS specs

Beautiful. Have you shared that with Peter Linss or TabAtkins yet?

[03:13:21.0902] <Andreu Botella>
I think bkardell shared it with Peter Linss

[04:33:27.0006] <stephanluis>
Inspired by a discussion on this chat, I've developed a time only input for use in HTML.  Difference is that my input deals with time in HMSmS, which provides greater browser consistency.  I want to confirm that all the functionality of the element as rendered by Chrome is included in my control, but cannot find a function spec.   Does anyone on this board know where I might find it? 

[04:47:22.0175] <annevk>
stephanluis: is https://html.spec.whatwg.org/ what you are looking for? (Though there is some stuff beyond that I suppose, such as supporting a variety of input methods, supporting multiple locales, etc.)

[05:15:58.0452] <stephanluis>
I've seen that thanks, I know it's now whatwg remit, but I'm hoping to be pointed in the right direction on how chrome or firefox implement the input.  For example what the up and down arrow keys do when hours are selected.  That way I can replicated the control more precisely.  Now I think I have most of it, but would rather be more sure.  Guessing their functional specs would be greatest help?

[05:16:40.0775] <stephanluis>
 * I've seen that thanks, I know it's now whatwg remit, but I'm hoping to be pointed in the right direction on how chrome or firefox implement the input.  For example what the up and down arrow keys do when hours are selected.  That way I can replicated the control more precisely.  Now I think I have most of it, but would rather be more sure.  Guessing their functional specs would be greatest help?

[05:26:21.0719] <annevk>
I see, I'm not sure if those exist or where to find them (other than looking at source code)

[05:26:33.0520] <annevk>
 * I see, I'm not sure if those exist or where to find them (other than looking at source code)

[06:05:59.0965] <stephanluis>
I even had a look at the source code but the documentation wasn't clear enough to use.  Seemed like there is other documentation / specs to work from.  Maybe I can try looking for Firefox specs, if their user interaction is close to chrome as people are most exposed to chrome.

[10:53:58.0854] <Timo Tijhof>
I could use a hand on proving/confirming that the behaviour I'm looking for from the URL constructor (in modern browsers, but not in the FT polyfill), is in fact a bug in the polyfill and not an spec bug or implemetnation bug. https://github.com/Financial-Times/polyfill-library/issues/4#issuecomment-1059423248

[10:55:08.0958] <Timo Tijhof>
The URL version of this, is I think https://url.spec.whatwg.org/#percent-decode

[10:55:12.0565] <Timo Tijhof>
which seems almost too simple to be true

[10:55:30.0465] <Timo Tijhof>
compared to http://es5.github.io/#x15.1.3.2 and the whole Decode complexity and its URIError handling etc.

[11:07:32.0915] <TabAtkins>
Timo Tijhof: At a quick glance, it appears the ES algo might be implementing UTF-8 decoding by hand, thus the complexity.

[11:10:15.0002] <TabAtkins>
Andreu Botella: Btw, you can tell Bikeshed to output to any filename you want, so you don't have to do the rename to index.html manually. 

[11:10:48.0373] <Andreu Botella>
oh, that's right

[11:11:11.0909] <Andreu Botella>
someone could try visiting the `Overview.html` directly, I guess

[11:11:14.0693] <Domenic>
> <@timotijhof:matrix.org> I could use a hand on proving/confirming that the behaviour I'm looking for from the URL constructor (in modern browsers, but not in the FT polyfill), is in fact a bug in the polyfill and not an spec bug or implemetnation bug. https://github.com/Financial-Times/polyfill-library/issues/4#issuecomment-1059423248

We are reasonably confident in the "reference implementation" in jsdom/whatwg-url, which says that such URLs are parsed like browsers do. https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvU3BlY2lhbDpCbGFua3BhZ2U/ZnJvbT1lbiZ0bz1lcyZjYW1wYWlnbj1hcnRpY2xlLXJlY29tbWVuZGF0aW9uJnBhZ2U9QXBvbGxvJTk2U295dXpfVGVzdF9Qcm9qZWN0&base=YWJvdXQ6Ymxhbms=

[12:28:32.0993] <Timo Tijhof>
Thanks, that helps. I've traced it down to https://github.com/jsdom/whatwg-url/blob/a4cb13309246ca9ecf03404fdbf0d23ecaf114dd/lib/urlencoded.js#L10-L33 and https://github.com/jsdom/whatwg-url/blob/a4cb13309246ca9ecf03404fdbf0d23ecaf114dd/lib/percent-encoding.js#L20 which indeed is doing the critically important thing of ignoring things outside the known valid range and leaving them in-tact, whereas the ES decodeURIComponent throws an error for anything unexpected after a % sign.

[12:28:57.0455] <Timo Tijhof>
I'll see if I can port that over to the FT polyfill in a somewhat standalone and minimal fashion.

[15:49:08.0992] <Domenic>
👀 look at the list of issues fixed in https://github.com/whatwg/html/pull/6315#issue-790233208

[15:58:14.0545] <Seirdy>
Besides search engines, what are some known working applications of microdata (and other related formats)? I've seen article extraction implementations (including DOM Distiller, Trafilatura) make use of it, for instance.

[15:58:32.0826] <sideshowbarker>
> <@domenicdenicola:matrix.org> 👀 look at the list of issues fixed in https://github.com/whatwg/html/pull/6315#issue-790233208

Wild — ~40 issues, looks like. I can’t recall ever having seen that the part of the GitHub UI that lists the linked issues shows a **See more** control when there’s more than a certain number of linked issues — 5, I guess — but even if you do **See more**, it still limits the list to just 10 issues.
>This monster completely rewrites everything to do with navigation and traversal.

Bravo Jake Archibald 


2022-03-05
[16:00:10.0053] <Seirdy>
> <@seirdy:seirdy.one> Besides search engines, what are some known working applications of microdata (and other related formats)? I've seen article extraction implementations (including DOM Distiller, Trafilatura) make use of it, for instance.

interested in using microdata as an alternative to e.g. a REST API for a website, providing all the data structured in the HTML markup. Knowing some working applications could help me.

[16:06:52.0547] <Seirdy>
* interested in using microdata as an alternative to e.g. a REST API for a website, providing all the data structured in the same HTML. Knowing some working applications could help me.

[21:26:21.0207] <Seirdy>
Can microdata use namespaces intended for RDFa like Dublin Core, FOAF, and Creative Commons?

[21:27:28.0178] <Seirdy>
 * interested in using microdata as an alternative to e.g. a REST API for a website, providing all the data structured in the same HTML. Knowing some working applications for consuming (rather than creating) microdata (or other semantic markup syntaxes) could help me.


2022-03-07
[15:31:27.0797] <cyberakuma>
Is there a proper place to discuss WebIDL? Specifically creating an extended attribute to declare a modified default behavior of toJSON() to base64(url) encode BufferSource/ArrayBuffer


2022-03-08
[16:08:39.0052] <TabAtkins>
This is generally where we discuss webidl stuff, yeah

[16:09:08.0380] <TabAtkins>
Or just in the issue tracker itself, which is probably better for a design discussion like what you seem to be talking about

[01:58:48.0998] <徐高銘>
hi,all
I found an accident
https://github.com/mdn/browser-compat-data/issues/15096


[04:45:13.0370] <zcorpan>
How are we using the "impacts documentation" label? Should the label be removed after fixing MDN? (I guess maybe not, since MDN is probably not the only interested party for documentation)

[04:46:00.0656] <zcorpan>
Should there be a separate "needs edits on MDN" label?

[04:48:53.0500] <sideshowbarker>
yeah, I use/follow the “impacts documentation” label to keep track of changes that will require updates to MDN

[04:49:52.0233] <sideshowbarker>
in theory it could affect other docs, but in practice I don’t know of any docs affected other than MDN

[04:50:21.0117] <sideshowbarker>
and personally I have never removed that label from anything, even after changes to MDN have been made

[04:51:08.0315] <sideshowbarker>
IMHO we don’t need a separate "needs edits on MDN" label, because that’s what "impacts documentation" already is in practice

[04:52:13.0416] <zcorpan>
ok. so leaving the label means there may be closed issues with the label that still needs MDN edits, and some that don't

[04:52:23.0788] <sideshowbarker>
yeah

[04:52:40.0712] <sideshowbarker>
(incidentally, note that we also have the @whatwg/documentation team that can be Cc’d on issues and PRs)

[04:54:58.0012] <zcorpan>
Removing the label seems nice though since then 0 closed issues with the label = good code health

[04:55:17.0099] <sideshowbarker>
yeah, I agree it would

[04:55:42.0079] <sideshowbarker>
one wrinkle in general is that somebody would need to remember to actually remove the label

[04:56:54.0967] <zcorpan>
The documentation team can have a regular triage of closed issues

[04:57:20.0970] <sideshowbarker>
yeah I would certainly be happy to participate in that

[05:01:10.0104] <zcorpan>
/me finds https://github.com/whatwg/meta/issues/111

[05:04:32.0610] <sideshowbarker>
I guess we’ve been doing this for too long… I think I can’t remember stuff we did in 2018 any more clearly than I can 2006 😆

[05:05:19.0371] <zcorpan>
recent years is a blur

[12:04:57.0524] <ntim>
Domenic: I've updated https://github.com/whatwg/html/pull/7134 

[15:18:34.0542] <Luca Casonato>
It looks like api.csswg.org may be having some issues. My CI runs are failing on the fetch spec: https://github.com/whatwg/fetch/runs/5472598698?check_suite_focus=true

[15:19:27.0040] <Luca Casonato>
 * It looks like api.csswg.org may be having some issues. My CI runs are failing on the fetch spec: https://github.com/whatwg/fetch/runs/5472598698?check_suite_focus=true

