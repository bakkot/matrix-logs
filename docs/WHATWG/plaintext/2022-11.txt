2022-11-01
[17:50:44.0354] <Domenic>
Patrick Meenan: we broke "ancestor browsing contexts" intentionally in https://github.com/whatwg/html/commit/0a97a81da77bc4cb0ab5b16420605ca001ff5b17 . What spec is this? We will work to update it.

[00:13:21.0037] <annevk>
Domenic: Fullscreen is broken then too

[00:13:49.0294] <Domenic>
I should be able to squeeze out a fullscreen fix in the next hour or so

[00:45:29.0619] <Domenic>
Wasn't so bad: https://github.com/whatwg/fullscreen/pull/208 but needs some exports from HTML.

[03:48:01.0762] <Jerry Murray>
👙❤️🚝🧛🧛‍♂️🧛‍♀️🧛🦸🥷👩‍🚀🧑‍🚒👍️

[06:41:06.0806] <foolip>
How do we use the "needs implementer interest" label? Do we remove it when there's one implementer interested, or two?

[07:01:45.0422] <annevk>
foolip: two

[07:53:47.0889] <Patrick Meenan>
> <@domenicdenicola:matrix.org> Patrick Meenan: we broke "ancestor browsing contexts" intentionally in https://github.com/whatwg/html/commit/0a97a81da77bc4cb0ab5b16420605ca001ff5b17 . What spec is this? We will work to update it.

This was from the fetch spec.  PR showing the same issue here: https://github.com/whatwg/fetch/pull/1523

[07:55:55.0227] <Patrick Meenan>
> <@annevk:matrix.org> foolip: two

Should the implementers comment on the issues in the relevant specs?  Chrome has shipped Priority Hints and Mozilla is working on implementing it and there are issues on both the HTML and Fetch trackers (PR's inbound). Just need to know who needs to comment where to properly reflect the implementors interest.

[07:57:18.0696] <foolip>
Patrick Meenan: if implementation is in progress in Gecko, then cc'ing the person working on that on the two issues is a good first step. Ask if they'd be supportive of the changes.

[07:57:38.0159] <jgraham>
I might be imagining things, but did someone at some point make a graphviz-type visualisation of the fetch spec?

[08:02:45.0258] <jgraham>
Hmm, there's https://docs.google.com/presentation/d/1eUtpVsuoPPPLzl6ccNoaUH9Rwmd63hgCboVh-gDLkiI/edit#slide=id.g2c389e7de3_0_17 but that's now 5 years old

[08:16:33.0074] <annevk>
If there's an easy way to generate such a diagram and we can be sure it can be updated 10 years later I'm all ears

[08:20:39.0267] <jgraham>
Hmm, well in theory bikeshed has enough information to generate it. Maybe one could even hack something together with the HTML output, because at some level it's just a graph of links, but limited to the ones that only point to internal algorithms.

[08:33:57.0409] <annevk>
I mean I'm happy to duplicate work, just need some kind of tool that helps with it, makes it accessible, and makes updates somewhat easy.

[16:18:21.0809] <Domenic>
I feel like the hard part of these things is placing the boxes. Every tool I've tried (including implementing one algorithm I found in a paper by hand) has done poorly.


2022-11-02
[17:12:34.0550] <snek>
does anyone know what this means (looking at the clipboard api)

> The length attribute must return zero if the object is in the disabled mode; otherwise it must return the number of items in the drag data store item list.

"disabled mode" is not defined anywhere that i can find lol

[17:12:38.0778] <snek>
 * does anyone know what this means (looking at the clipboard api)

> The length attribute must return zero if the object is in the disabled mode; otherwise it must return the number of items in the drag data store item list.

"disabled mode" is not defined anywhere that i can find lol

[17:13:51.0011] <snek>
for some extra spicy context, i am observing the length be 0 *specifically* when copying an image in firefox and then pasting it in electron

[18:51:50.0732] <Domenic>
It should be defined, if it is not, sounds like a spec bug.

[19:47:31.0246] <Domenic>
Patrick Meenan: annevk : I will work on fixing Fetch to not have that error.

[19:56:43.0810] <Domenic>
https://github.com/whatwg/fetch/pull/1525

[00:52:07.0582] <annevk>
sideshowbarker: did the validator update to complain differently about <hgroup>?

[00:52:20.0222] <annevk>
I just got an error for File System and https://github.com/whatwg/whatwg.org/issues/401 isn't fixed yet

[00:53:04.0902] <annevk>
Need to run a few errands now, but we probably need to resolve this one way or another as this breaks everything if correct

[01:45:26.0571] <sideshowbarker>
> <@annevk:matrix.org> sideshowbarker: did the validator update to complain differently about <hgroup>?

yes it did, to align with the current spec requirements after the big outline-algorithm patch, which also changed the `hgroup` restrictions

[01:46:58.0085] <sideshowbarker>
> <@annevk:matrix.org> I just got an error for File System and https://github.com/whatwg/whatwg.org/issues/401 isn't fixed yet

 * ah yeah I still need to write up that HTML spec patch. Can do for other specs too

[02:11:41.0076] <Domenic>
Great news!

[02:13:58.0484] <Domenic>
Where is the issue where we were tracking that? I don't have much time before dinner is going to start but I can try to experiment a bit and jot down notes...

[02:15:17.0716] <sideshowbarker>
> <@domenicdenicola:matrix.org> Where is the issue where we were tracking that? I don't have much time before dinner is going to start but I can try to experiment a bit and jot down notes...

if you mean the `hgroup` issue, it’s https://github.com/whatwg/whatwg.org/issues/401

[02:15:29.0286] <Domenic>
Right, it was linked minutes earlier, I am a dummy :)

[02:15:38.0190] <sideshowbarker>
no worries :)

[02:16:54.0117] <sideshowbarker>
hey, by the way, looking at https://github.com/w3c/csswg-drafts/ I notice that it shows “Bikeshed 47.2%” in the area that lists which languages the repo sources are in

[02:17:13.0315] <sideshowbarker>
…which seems pretty cool. I guess Tab managed to get Bikeshed added to Linguist

[02:18:52.0879] <sideshowbarker>
so we might want to update the `.gitattributes` files in WHATWG repo files to no longer map `.bs` sources to HTML. In which case, they will instead just get automatically recognized as Bikeshed

[02:19:15.0873] <sideshowbarker>
it’s a minor thing, but kind of a cool and easy way to get Bikeshed some extra love

[02:21:17.0606] <sideshowbarker>
e.g., at https://github.com/whatwg/fetch/blob/main/.gitattributes we just remove the `linguist-language=HTML` part. But maybe should still keep the `diff=html` part

[04:25:10.0756] <Domenic>
Oh, very neat. We should do that; I think updating spec-factory will suffice.

[04:33:36.0369] <annevk>
Yeah, also still need to update spec-factory with newer Ubuntu. I guess we're gonna have another rollout sooner rather than later  then, maybe it's time to have another look at README centralization...

[05:05:38.0457] <annevk>
Ms2ger 💉💉💉: maybe squash https://github.com/whatwg/html/pull/5339 first and then rebase

[05:06:31.0394] <annevk>
Ms2ger 💉💉💉: you want to be careful doing that of course, but it will make things a bit easier

[06:33:32.0118] <Ms2ger 💉💉💉>
Good idea, thanks

[09:01:35.0755] <wanderview>
is there a tool to properly wrap html spec source?

[09:32:25.0363] <Domenic>
> <@wanderview:matrix.org> is there a tool to properly wrap html spec source?

https://domenic.github.io/rewrapper/

[09:40:07.0598] <nicolo-ribaudo>
Oh nice, I always assumed that the tool was just the big old <kbd>Enter</kbd> key

[09:41:16.0610] <wanderview>
uh... I will need to run this against the entire html spec... not sure cut and paste field is going to work

[09:47:41.0246] <Ms2ger 💉💉💉>
please don't

[09:48:49.0883] <nicolo-ribaudo>
> <@ms2ger:igalia.com> please don't

✨ conflicts ✨

[09:49:45.0483] <Ms2ger 💉💉💉>
Creating conflicts for me is nicolo-ribaudo's job

[09:50:00.0332] <Sam Sneddon [:gsnedders]>
I mean the tool used to be "press M-q while you edit the spec" 😛 

[09:50:26.0240] <Ms2ger 💉💉💉>
Is that some kind of vim thing?

[10:29:02.0023] <wanderview>
style rules like line-length wrapping without tool automation is living in the dark ages

[10:42:46.0631] <Sam Sneddon [:gsnedders]>
> <@ms2ger:igalia.com> Is that some kind of vim thing?

Hixie used emacs


2022-11-03
[20:59:06.0665] <Domenic>
> <@wanderview:matrix.org> uh... I will need to run this against the entire html spec... not sure cut and paste field is going to work

Cut and paste is what I use

[03:05:36.0230] <annevk>
Domenic: were you going to take on the `hgroup` thing? I don't think I'll get to it before somewhere next week, but there's a small chance I have enough time later today to give it a go.

[03:06:10.0944] <annevk>
/me wonders if Ms2ger 💉💉💉 was trolling above

[03:15:02.0372] <jgraham>
Random bikeshed feature request (there must be a better place for these): in the output it would be really nice if e.g. clicking on a `<var>` highlighted other instances of the same variable in the same algorithm.

[03:17:08.0622] <Ms2ger 💉💉💉>
jgraham: it does

[03:17:22.0416] <Ms2ger 💉💉💉>
But you may need to be inside a `<div algorithm>`

[03:18:04.0411] <annevk>
(the place for non-existing feature requests is on GitHub)

[03:19:32.0239] <evilpie>
I really like this highlighting, I wished it worked on https://w3c.github.io/webappsec-csp/

[03:19:51.0677] <jgraham>
OK, then fetch spec request: I wish fetch was updated to work with this feature :p

[03:20:20.0298] <Ms2ger 💉💉💉>
> <@jgraham_:matrix.org> OK, then fetch spec request: I wish fetch was updated to work with this feature :p

the place for fetch spec requests is on GitHub :)

[03:21:38.0926] <jgraham>
Yep, I can of course file a GitHub issue. Although apparently moaning here was effective in that it quickly identified the source of the problem. 

[03:28:43.0419] <Domenic>
> <@annevk:matrix.org> Domenic: were you going to take on the `hgroup` thing? I don't think I'll get to it before somewhere next week, but there's a small chance I have enough time later today to give it a go.

I can give it a try but higher priority things might interrupt. If you could chip in and upload whatever progress you make that'd be great.

[03:28:55.0009] <Domenic>
I won't work on it for at least another 16 hours.

[07:15:21.0736] <wanderview>
> <@domenicdenicola:matrix.org> Cut and paste is what I use

That is an awful lot of additional clicks to wrap changes in a PR like: https://github.com/whatwg/html/pull/8447/files

[07:16:06.0088] <wanderview>
Or are the rules for wrapping written out somewhere so I can do them as I go?  I'm thinking, how to properly split element across boundary, etc.  It does not seem obvious where splits are allowed or not.

[08:47:03.0477] <Dominic Farolino>
I think we just split wherever the latest space character is before 100 lines

[08:48:40.0023] <Dominic Farolino>
FWIW we've been working to port the great rewrapper to a tool that you can run on the spec file itself. It will (soon) only impact the diff of your current branch: https://github.com/domfarolino/specfmt

[09:16:44.0572] <annevk>
Dominic Farolino: will that work for Bikeshed and Wattsi?

[09:17:51.0437] <annevk>
Dominic Farolino: seems like it might, wow, thank you so much for tackling that. I hope it works well as that would indeed help contributors (and reviewers!) quite a bit.

[09:19:54.0314] <annevk>
Jake Archibald: ^^

[09:20:33.0835] <Jake Archibald>
ohhhh very nice!

[09:20:55.0278] <Dominic Farolino>
Yeah it doesn't discriminate on any kind of file type really, but for right now at least it is basically just the rewrapper in non-website form + some "automatically find the spec file to format in this directory" logic. I'm now working on making it only apply to the changes in your current branch

[09:21:14.0917] <Dominic Farolino>
And later ideally it would do more than just rewrapping, but not sure how far we want to go with that heh

[09:22:24.0314] <Jake Archibald>
Dominic Farolino: it'd be great if it could support annevk-style wrapping, where it never wraps in the middle of terms (like definitions or references), so ctrl+f still finds stuff

[09:25:31.0472] <annevk>
Yeah honestly that is very nice, having to \s+ everywhere is somewhat tiresome and something one easily forgets

[09:31:39.0504] <annevk>
Dominic Farolino: if we can get to the point where we can enforce it in CI (or make it do fixups) that would be the best. Would essentially remove an entire category of review feedback and churn.

[10:02:19.0950] <Dominic Farolino>
I do personally prefer annevk-style rewrapping, but IIRC there is some disagreement around that more generally. I guess even if we use it from here on out, we'd still have to use \s+ for all the old lines that we aren't changing....unless we go back and do those.

[10:02:38.0429] <Dominic Farolino>
Something like a "CI" mode sounds like a very good idea

[10:13:28.0564] <annevk>
Dominic Farolino: at least for my specs I'd want this to apply to the whole file as some kind of Meta reformat commit and then enforce the tooling for all commits

[10:24:50.0671] <Dominic Farolino>
Makes sense, that could be configurable

[11:51:27.0351] <wanderview>
this future automated world sounds very nice, thanks for working on it!

[11:52:30.0302] <wanderview>
for now, though, it sounds like I can split at any space character, except in the middle of a span or dfn because we want to ctrl-f terms?

[11:52:46.0211] <wanderview>
 * for now, though, it sounds like I can split at any space character, except in the middle of a span or dfn because we want to ctrl-f terms?

[13:27:40.0788] <annevk>
wanderview: for HTML you make the longest possible string and split on the first space before 100 columns

[13:27:53.0336] <annevk>
(or at 100 columns, I suppose)

[13:28:01.0506] <wanderview>
even if its in the middle of a span reference?

[13:28:18.0373] <annevk>
wanderview: yeah HTML is one of the specs where you need to litter your searches with \s+

[13:28:27.0579] <wanderview>
ok, thanks

[13:28:36.0894] <wanderview>
I've been searching for the concept-document-foo tags instead

[13:28:44.0498] <annevk>
wanderview: it's documented at https://github.com/whatwg/html/blob/main/CONTRIBUTING.md#source-formatting

[13:28:56.0635] <annevk>
wanderview: that works if there's a data-x, but that isn't always the case

[13:29:15.0660] <wanderview>
thanks again

