2022-11-01
[17:50:44.0354] <Domenic>
Patrick Meenan: we broke "ancestor browsing contexts" intentionally in https://github.com/whatwg/html/commit/0a97a81da77bc4cb0ab5b16420605ca001ff5b17 . What spec is this? We will work to update it.

[00:13:21.0037] <annevk>
Domenic: Fullscreen is broken then too

[00:13:49.0294] <Domenic>
I should be able to squeeze out a fullscreen fix in the next hour or so

[00:45:29.0619] <Domenic>
Wasn't so bad: https://github.com/whatwg/fullscreen/pull/208 but needs some exports from HTML.

[03:48:01.0762] <Jerry Murray>
👙❤️🚝🧛🧛‍♂️🧛‍♀️🧛🦸🥷👩‍🚀🧑‍🚒👍️

[06:41:06.0806] <foolip>
How do we use the "needs implementer interest" label? Do we remove it when there's one implementer interested, or two?

[07:01:45.0422] <annevk>
foolip: two

[07:53:47.0889] <Patrick Meenan>
> <@domenicdenicola:matrix.org> Patrick Meenan: we broke "ancestor browsing contexts" intentionally in https://github.com/whatwg/html/commit/0a97a81da77bc4cb0ab5b16420605ca001ff5b17 . What spec is this? We will work to update it.

This was from the fetch spec.  PR showing the same issue here: https://github.com/whatwg/fetch/pull/1523

[07:55:55.0227] <Patrick Meenan>
> <@annevk:matrix.org> foolip: two

Should the implementers comment on the issues in the relevant specs?  Chrome has shipped Priority Hints and Mozilla is working on implementing it and there are issues on both the HTML and Fetch trackers (PR's inbound). Just need to know who needs to comment where to properly reflect the implementors interest.

[07:57:18.0696] <foolip>
Patrick Meenan: if implementation is in progress in Gecko, then cc'ing the person working on that on the two issues is a good first step. Ask if they'd be supportive of the changes.

[07:57:38.0159] <jgraham>
I might be imagining things, but did someone at some point make a graphviz-type visualisation of the fetch spec?

[08:02:45.0258] <jgraham>
Hmm, there's https://docs.google.com/presentation/d/1eUtpVsuoPPPLzl6ccNoaUH9Rwmd63hgCboVh-gDLkiI/edit#slide=id.g2c389e7de3_0_17 but that's now 5 years old

[08:16:33.0074] <annevk>
If there's an easy way to generate such a diagram and we can be sure it can be updated 10 years later I'm all ears

[08:20:39.0267] <jgraham>
Hmm, well in theory bikeshed has enough information to generate it. Maybe one could even hack something together with the HTML output, because at some level it's just a graph of links, but limited to the ones that only point to internal algorithms.

[08:33:57.0409] <annevk>
I mean I'm happy to duplicate work, just need some kind of tool that helps with it, makes it accessible, and makes updates somewhat easy.

[16:18:21.0809] <Domenic>
I feel like the hard part of these things is placing the boxes. Every tool I've tried (including implementing one algorithm I found in a paper by hand) has done poorly.


2022-11-02
[17:12:34.0550] <snek>
does anyone know what this means (looking at the clipboard api)

> The length attribute must return zero if the object is in the disabled mode; otherwise it must return the number of items in the drag data store item list.

"disabled mode" is not defined anywhere that i can find lol

[17:12:38.0778] <snek>
 * does anyone know what this means (looking at the clipboard api)

> The length attribute must return zero if the object is in the disabled mode; otherwise it must return the number of items in the drag data store item list.

"disabled mode" is not defined anywhere that i can find lol

[17:13:51.0011] <snek>
for some extra spicy context, i am observing the length be 0 *specifically* when copying an image in firefox and then pasting it in electron

[18:51:50.0732] <Domenic>
It should be defined, if it is not, sounds like a spec bug.

[19:47:31.0246] <Domenic>
Patrick Meenan: annevk : I will work on fixing Fetch to not have that error.

[19:56:43.0810] <Domenic>
https://github.com/whatwg/fetch/pull/1525

[00:52:07.0582] <annevk>
sideshowbarker: did the validator update to complain differently about <hgroup>?

[00:52:20.0222] <annevk>
I just got an error for File System and https://github.com/whatwg/whatwg.org/issues/401 isn't fixed yet

[00:53:04.0902] <annevk>
Need to run a few errands now, but we probably need to resolve this one way or another as this breaks everything if correct

[01:45:26.0571] <sideshowbarker>
> <@annevk:matrix.org> sideshowbarker: did the validator update to complain differently about <hgroup>?

yes it did, to align with the current spec requirements after the big outline-algorithm patch, which also changed the `hgroup` restrictions

[01:46:58.0085] <sideshowbarker>
> <@annevk:matrix.org> I just got an error for File System and https://github.com/whatwg/whatwg.org/issues/401 isn't fixed yet

 * ah yeah I still need to write up that HTML spec patch. Can do for other specs too

[02:11:41.0076] <Domenic>
Great news!

[02:13:58.0484] <Domenic>
Where is the issue where we were tracking that? I don't have much time before dinner is going to start but I can try to experiment a bit and jot down notes...

[02:15:17.0716] <sideshowbarker>
> <@domenicdenicola:matrix.org> Where is the issue where we were tracking that? I don't have much time before dinner is going to start but I can try to experiment a bit and jot down notes...

if you mean the `hgroup` issue, it’s https://github.com/whatwg/whatwg.org/issues/401

[02:15:29.0286] <Domenic>
Right, it was linked minutes earlier, I am a dummy :)

[02:15:38.0190] <sideshowbarker>
no worries :)

[02:16:54.0117] <sideshowbarker>
hey, by the way, looking at https://github.com/w3c/csswg-drafts/ I notice that it shows “Bikeshed 47.2%” in the area that lists which languages the repo sources are in

[02:17:13.0315] <sideshowbarker>
…which seems pretty cool. I guess Tab managed to get Bikeshed added to Linguist

[02:18:52.0879] <sideshowbarker>
so we might want to update the `.gitattributes` files in WHATWG repo files to no longer map `.bs` sources to HTML. In which case, they will instead just get automatically recognized as Bikeshed

[02:19:15.0873] <sideshowbarker>
it’s a minor thing, but kind of a cool and easy way to get Bikeshed some extra love

[02:21:17.0606] <sideshowbarker>
e.g., at https://github.com/whatwg/fetch/blob/main/.gitattributes we just remove the `linguist-language=HTML` part. But maybe should still keep the `diff=html` part

[04:25:10.0756] <Domenic>
Oh, very neat. We should do that; I think updating spec-factory will suffice.

[04:33:36.0369] <annevk>
Yeah, also still need to update spec-factory with newer Ubuntu. I guess we're gonna have another rollout sooner rather than later  then, maybe it's time to have another look at README centralization...

[05:05:38.0457] <annevk>
Ms2ger 💉💉💉: maybe squash https://github.com/whatwg/html/pull/5339 first and then rebase

[05:06:31.0394] <annevk>
Ms2ger 💉💉💉: you want to be careful doing that of course, but it will make things a bit easier

[06:33:32.0118] <Ms2ger 💉💉💉>
Good idea, thanks

[09:01:35.0755] <wanderview>
is there a tool to properly wrap html spec source?

[09:32:25.0363] <Domenic>
> <@wanderview:matrix.org> is there a tool to properly wrap html spec source?

https://domenic.github.io/rewrapper/

[09:40:07.0598] <nicolo-ribaudo>
Oh nice, I always assumed that the tool was just the big old <kbd>Enter</kbd> key

[09:41:16.0610] <wanderview>
uh... I will need to run this against the entire html spec... not sure cut and paste field is going to work

[09:47:41.0246] <Ms2ger 💉💉💉>
please don't

[09:48:49.0883] <nicolo-ribaudo>
> <@ms2ger:igalia.com> please don't

✨ conflicts ✨

[09:49:45.0483] <Ms2ger 💉💉💉>
Creating conflicts for me is nicolo-ribaudo's job

[09:50:00.0332] <Sam Sneddon [:gsnedders]>
I mean the tool used to be "press M-q while you edit the spec" 😛 

[09:50:26.0240] <Ms2ger 💉💉💉>
Is that some kind of vim thing?

[10:29:02.0023] <wanderview>
style rules like line-length wrapping without tool automation is living in the dark ages

[10:42:46.0631] <Sam Sneddon [:gsnedders]>
> <@ms2ger:igalia.com> Is that some kind of vim thing?

Hixie used emacs


2022-11-03
[20:59:06.0665] <Domenic>
> <@wanderview:matrix.org> uh... I will need to run this against the entire html spec... not sure cut and paste field is going to work

Cut and paste is what I use

[03:05:36.0230] <annevk>
Domenic: were you going to take on the `hgroup` thing? I don't think I'll get to it before somewhere next week, but there's a small chance I have enough time later today to give it a go.

[03:06:10.0944] <annevk>
/me wonders if Ms2ger 💉💉💉 was trolling above

[03:15:02.0372] <jgraham>
Random bikeshed feature request (there must be a better place for these): in the output it would be really nice if e.g. clicking on a `<var>` highlighted other instances of the same variable in the same algorithm.

[03:17:08.0622] <Ms2ger 💉💉💉>
jgraham: it does

[03:17:22.0416] <Ms2ger 💉💉💉>
But you may need to be inside a `<div algorithm>`

[03:18:04.0411] <annevk>
(the place for non-existing feature requests is on GitHub)

[03:19:32.0239] <evilpie>
I really like this highlighting, I wished it worked on https://w3c.github.io/webappsec-csp/

[03:19:51.0677] <jgraham>
OK, then fetch spec request: I wish fetch was updated to work with this feature :p

[03:20:20.0298] <Ms2ger 💉💉💉>
> <@jgraham_:matrix.org> OK, then fetch spec request: I wish fetch was updated to work with this feature :p

the place for fetch spec requests is on GitHub :)

[03:21:38.0926] <jgraham>
Yep, I can of course file a GitHub issue. Although apparently moaning here was effective in that it quickly identified the source of the problem. 

[03:28:43.0419] <Domenic>
> <@annevk:matrix.org> Domenic: were you going to take on the `hgroup` thing? I don't think I'll get to it before somewhere next week, but there's a small chance I have enough time later today to give it a go.

I can give it a try but higher priority things might interrupt. If you could chip in and upload whatever progress you make that'd be great.

[03:28:55.0009] <Domenic>
I won't work on it for at least another 16 hours.

[07:15:21.0736] <wanderview>
> <@domenicdenicola:matrix.org> Cut and paste is what I use

That is an awful lot of additional clicks to wrap changes in a PR like: https://github.com/whatwg/html/pull/8447/files

[07:16:06.0088] <wanderview>
Or are the rules for wrapping written out somewhere so I can do them as I go?  I'm thinking, how to properly split element across boundary, etc.  It does not seem obvious where splits are allowed or not.

[08:47:03.0477] <Dominic Farolino>
I think we just split wherever the latest space character is before 100 lines

[08:48:40.0023] <Dominic Farolino>
FWIW we've been working to port the great rewrapper to a tool that you can run on the spec file itself. It will (soon) only impact the diff of your current branch: https://github.com/domfarolino/specfmt

[09:16:44.0572] <annevk>
Dominic Farolino: will that work for Bikeshed and Wattsi?

[09:17:51.0437] <annevk>
Dominic Farolino: seems like it might, wow, thank you so much for tackling that. I hope it works well as that would indeed help contributors (and reviewers!) quite a bit.

[09:19:54.0314] <annevk>
Jake Archibald: ^^

[09:20:33.0835] <Jake Archibald>
ohhhh very nice!

[09:20:55.0278] <Dominic Farolino>
Yeah it doesn't discriminate on any kind of file type really, but for right now at least it is basically just the rewrapper in non-website form + some "automatically find the spec file to format in this directory" logic. I'm now working on making it only apply to the changes in your current branch

[09:21:14.0917] <Dominic Farolino>
And later ideally it would do more than just rewrapping, but not sure how far we want to go with that heh

[09:22:24.0314] <Jake Archibald>
Dominic Farolino: it'd be great if it could support annevk-style wrapping, where it never wraps in the middle of terms (like definitions or references), so ctrl+f still finds stuff

[09:25:31.0472] <annevk>
Yeah honestly that is very nice, having to \s+ everywhere is somewhat tiresome and something one easily forgets

[09:31:39.0504] <annevk>
Dominic Farolino: if we can get to the point where we can enforce it in CI (or make it do fixups) that would be the best. Would essentially remove an entire category of review feedback and churn.

[10:02:19.0950] <Dominic Farolino>
I do personally prefer annevk-style rewrapping, but IIRC there is some disagreement around that more generally. I guess even if we use it from here on out, we'd still have to use \s+ for all the old lines that we aren't changing....unless we go back and do those.

[10:02:38.0429] <Dominic Farolino>
Something like a "CI" mode sounds like a very good idea

[10:13:28.0564] <annevk>
Dominic Farolino: at least for my specs I'd want this to apply to the whole file as some kind of Meta reformat commit and then enforce the tooling for all commits

[10:24:50.0671] <Dominic Farolino>
Makes sense, that could be configurable

[11:51:27.0351] <wanderview>
this future automated world sounds very nice, thanks for working on it!

[11:52:30.0302] <wanderview>
for now, though, it sounds like I can split at any space character, except in the middle of a span or dfn because we want to ctrl-f terms?

[11:52:46.0211] <wanderview>
 * for now, though, it sounds like I can split at any space character, except in the middle of a span or dfn because we want to ctrl-f terms?

[13:27:40.0788] <annevk>
wanderview: for HTML you make the longest possible string and split on the first space before 100 columns

[13:27:53.0336] <annevk>
(or at 100 columns, I suppose)

[13:28:01.0506] <wanderview>
even if its in the middle of a span reference?

[13:28:18.0373] <annevk>
wanderview: yeah HTML is one of the specs where you need to litter your searches with \s+

[13:28:27.0579] <wanderview>
ok, thanks

[13:28:36.0894] <wanderview>
I've been searching for the concept-document-foo tags instead

[13:28:44.0498] <annevk>
wanderview: it's documented at https://github.com/whatwg/html/blob/main/CONTRIBUTING.md#source-formatting

[13:28:56.0635] <annevk>
wanderview: that works if there's a data-x, but that isn't always the case

[13:29:15.0660] <wanderview>
thanks again


2022-11-04
[02:34:28.0380] <KarenChuang>
https://duckduckgo.com/mac

[03:10:06.0604] <Hugo Tunius>
Hey, I'm wondering if this is an appropriate place to ask about the implications of COOP and pop ups in general?

[03:11:58.0267] <Hugo Tunius>
I see Matrix has threads now, so I'll just drop my question here

[03:14:20.0478] <Hugo Tunius>
 * We have an extension that we use to open two windows side by side and then record the screen for user research. One of these windows opens an arbitrary document. With the move to Manifest V3 and the evolution of the web standards we are working on moving away from the extension in favour of just using a website. 

[03:20:38.0678] <Hugo Tunius>
Hmm, Matrix seemed to duplicate my message here but then it didn't. Anyway:

We have an extension that opens two windows side-by-side and records the screen for user research. One of these windows opens an arbitrary document. With Manifest V3 coming and improvements to web standards we are looking to move away from the extension in favour of just a website.

We've had good initial success with `window.open` to open and position the two windows side by side. However, we've recently realised that COOP(when the origin sets same-origin) puts a spanner in the works. We really only need the ability to open popups, position them, close them, and change their URL. It seems that with COOP we are dead in the water on the closing and changing URL components of this however.

So I guess my question is: With a more widespread deployment of COOP there is no way to achieve our goals here(outside of keeping an extension?).

[03:21:05.0376] <Hugo Tunius>
 * Hmm, Matrix seemed to duplicate my message here but then it didn't. Anyway:

We have an extension that opens two windows side-by-side and records the screen for user research. One of these windows opens an arbitrary document. With Manifest V3 coming and improvements to web standards we are looking to move away from the extension in favour of just a website.

We've had good initial success with `window.open` to open and position the two windows side by side. However, we've recently realised that COOP(when the origin sets same-origin) puts a spanner in the works. We really only need the ability to open popups, position them, close them, and change their URL. It seems that with COOP we are dead in the water on the closing and changing URL components of this however.

So I guess my question is: With a more widespread deployment of COOP there is no way to achieve our goals here(outside of keeping an extension?).

[03:26:49.0593] <Hugo Tunius>
 * Hmm, Matrix seemed to duplicate my message here but then it didn't. Anyway:

We have an extension that opens two windows side-by-side and records the screen for user research. One of these windows opens an arbitrary document. With Manifest V3 coming and improvements to web standards we are looking to move away from the extension in favour of just a website.

We've had good initial success with `window.open` to open and position the two windows side by side. However, we've recently realised that COOP(when the origin sets same-origin) puts a spanner in the works. We really only need the ability to open popups, position them, close them, and change their URL. It seems that with COOP we are dead in the water on the closing and changing URL components of this however.

So I guess my question is: With a more widespread deployment of COOP is there no way to achieve our goals here(outside of keeping an extension?).

[03:42:33.0001] <Hugo Tunius>
 * I see Matrix has threads now, so I'll just drop my question here, I can delete the whole thread if the question isn't appropriate here

[08:36:05.0903] <wanderview>
annevk: Should I rewrap adjacent lines to the ones I'm touching (like if they end up significantly under 100 chars, etc) or should I prefer to leave untouched lines alone to reduce conflicts?

[11:49:09.0508] <wanderview>
hmm, anyone familiar with these conformance failures I'm getting in my html PR build?  running build.sh locally doesn't produce these errors

[11:49:10.0798] <wanderview>
https://github.com/whatwg/html/actions/runs/3396297480/jobs/5647202077


2022-11-05
[17:15:04.0627] <Domenic>
> <@k0nserv:matrix.org> Hmm, Matrix seemed to duplicate my message here but then it didn't. Anyway:
> 
> We have an extension that opens two windows side-by-side and records the screen for user research. One of these windows opens an arbitrary document. With Manifest V3 coming and improvements to web standards we are looking to move away from the extension in favour of just a website.
> 
> We've had good initial success with `window.open` to open and position the two windows side by side. However, we've recently realised that COOP(when the origin sets same-origin) puts a spanner in the works. We really only need the ability to open popups, position them, close them, and change their URL. It seems that with COOP we are dead in the water on the closing and changing URL components of this however.
> 
> So I guess my question is: With a more widespread deployment of COOP is there no way to achieve our goals here(outside of keeping an extension?).

In general, if a website does not want you to control their content, you cannot. In particular if they use COOP to deny you from having such control. One day we might even make COOP the default, like it should have been from the beginning, so that websites have to give up such control affirmatively.

[17:15:33.0276] <Domenic>
> <@wanderview:matrix.org> annevk: Should I rewrap adjacent lines to the ones I'm touching (like if they end up significantly under 100 chars, etc) or should I prefer to leave untouched lines alone to reduce conflicts?

I generally rewrap per "paragraph", i.e. `\n\n`-delimited chunk

[17:16:11.0141] <Domenic>
> <@wanderview:matrix.org> https://github.com/whatwg/html/actions/runs/3396297480/jobs/5647202077

This is due to https://github.com/whatwg/whatwg.org/issues/401 . Not your fault, don't worry about it, and we'll hope to have it fixed soon.


2022-11-06
[05:44:20.0460] <Noam Rosenthal>
HTML spec question: I can't find where it's defined (if at all) which `submitter` is chosen when e.g. the user presses `enter` in a text input field. Am I missing something? An old conversation that I don't have context for?

[05:44:33.0330] <Noam Rosenthal>
 * HTML spec question: I can't find where it's defined (if at all) which `submitter` is chosen when e.g. the user presses `enter` in a text input field. Am I missing something? An old conversation that I don't have context for?

[06:00:53.0132] <Andreu Botella>
> <@noamr:matrix.org> HTML spec question: I can't find where it's defined (if at all) which `submitter` is chosen when e.g. the user presses `enter` in a text input field. Am I missing something? An old conversation that I don't have context for?

https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission

[06:23:49.0324] <Noam Rosenthal>
> <@abotella:igalia.com> https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission

OK so what I found is a WebKit bug and not a spec bug, will file. Many thanks! 


2022-11-07
[01:21:35.0496] <Domenic>
annevk: I'm done for the night, but I think I've teed up all the PRs at https://github.com/whatwg/whatwg.org/issues/401 . They should be ready to merge. If you merge the stylesheet and the specs aren't immediately re-built it looks fine, the subheading is just small and boring. So I think you should try to merge ASAP to unblock the various PRs across the ecosystem.

I'll be back in some hours and can help then.

I think we don't have access to merge https://github.com/tabatkins/bikeshed-boilerplate/pull/29 so hopefully TabAtkins can do so when he wakes up.

[01:28:26.0103] <Hugo Tunius>
Right, I think that makes sense. I found it surprising that APIs like `window.open` and the resulting `WindowProxy` are impacted by this(website controlling their content). I understand how changing the URL to load a different document after a site is loaded can be problematic(e.g. bankofamerica.com to bankofamerica.evil.com) but I don't see how positioning and closing the window is

[01:29:04.0900] <Hugo Tunius>
I tried to look for discussions around these changes to see if any of these concerns were raised but couldn't find anything, do you know if such context exists?

[01:29:44.0049] <Hugo Tunius>
 * Right, I think that makes sense. I found it surprising that APIs like `window.open` and the resulting `WindowProxy` are impacted by this(website controlling their content). I understand how changing the URL to load a different document after a site is loaded can be problematic(e.g. bankofamerica.com to bankofamerica.evi..com) but I don't see how positioning and closing the window is

[01:29:55.0648] <Hugo Tunius>
 * Right, I think that makes sense. I found it surprising that APIs like `window.open` and the resulting `WindowProxy` are impacted by this(website controlling their content). I understand how changing the URL to load a different document after a site is loaded can be problematic(e.g. bankofamerica.com to bankofamerica.evil.com) but I don't see how positioning and closing the window is

[01:33:48.0023] <Hugo Tunius>
 * Right, I think that makes sense. I found it surprising that APIs like `window.open` and the resulting `WindowProxy` are impacted by this(website controlling their content). I understand how changing the URL to load a different document after a site is loaded can be problematic(e.g. bankofamerica.com to bankofamerica.evil.com) but I don't see how positioning and closing the window is. Neither of those three operations(positioning, closing the window, or changing the URL) feel like they meet the definition of "control their content" to me. From the perspective of the opener the opened website is a black box here

[01:34:37.0394] <Hugo Tunius>
 * I tried to look for discussions around these changes to see if any of these concerns were raised but couldn't find anything, do you know if such context exists?

[01:34:38.0229] <annevk>
Thanks, I'll have a look in a bit

[01:52:43.0401] <TabAtkins>
Domenic: I'm still on vacation, I won't be in the office until Friday

[01:53:14.0654] <TabAtkins>
Oh but I can do a merge 

[01:53:32.0202] <annevk>
TabAtkins: thanks and enjoy!

[02:01:06.0073] <Domenic>
Hugo Tunius: resizing and positioning a window is definitely pretty abuse-prone. Imagine taking trustedbank.example's window and making it fly around the screen like a ping-pong ball. Who do you think the user's going to blame? The bank, or the mysterious opener window which has some hidden programmatic connection to it the user is not aware of?

[02:01:39.0232] <Domenic>
Similarly imagine closing the window randomly, making it look like the site is crashy or broken...

[02:03:15.0941] <TabAtkins>
Domenic or annevk: actually I only have Internet on my phone, so I can't run the manifest regen. Could one of y'all run the generate/__init__.py script and add it to your pr?

[02:03:22.0144] <TabAtkins>
Also I'll give y'all edit rights

[02:04:51.0568] <TabAtkins>
Wait what's Anne's github

[02:05:08.0959] <Domenic>
It's annevk

[02:05:20.0770] <TabAtkins>
Weird, wasn't showing up. I'll try again

[02:05:29.0842] <TabAtkins>
Oh because I did the thing I always do

[02:05:39.0870] <TabAtkins>
And try to search for then among the existing collabs

[02:06:08.0421] <Domenic>
I have confirmed write access so can merge later tonight if necessary. Thanks so much!

[02:06:32.0275] <TabAtkins>
Np, just remember to run the regen or else Bikeshed won't pick up any changes.

[02:06:44.0728] <TabAtkins>
I need to put that into ci super bad

[02:07:39.0933] <Hugo Tunius>
Domenic: You're right that you could do that. I guess I didn't think of that from the "control of their content" angle though. Thanks for clarifying

[02:08:21.0750] <Hugo Tunius>
Do you know if there are any discussions from the COOP spec work that goes deeper into these motivations?

[02:08:52.0753] <Domenic>
I'm not aware, I think everyone just had it as background knowledge that allowing cross-origin opener control has been a mistake since the beginning of the web, and it's good to cut that off as much as possible.

[02:09:23.0080] <Hugo Tunius>
Aight. Thanks again for the explainer, it was helpful

[02:09:38.0953] <Domenic>
 * I'm not aware, I think everyone just had it as background knowledge that allowing cross-origin opener control has been a mistake since the beginning of the web, and it's good to cut that off as much as possible.

[02:38:52.0277] <annevk>
Hugo Tunius: there's a bunch of design discussion on whatwg/html; but as it essentially inverses rel=noopener, it was quite intentional

[02:39:09.0607] <annevk>
Domenic: all reviewed and pushed some nits; Bikeshed PR merged

[02:40:42.0569] <annevk>
I guess with the Bikeshed PR merged, specifications ought to be able to build again

[02:46:25.0393] <Andreu Botella>
I keep typing https://w3c.github.io/csswg-drafts/indexes as "indices"

[02:46:30.0933] <Andreu Botella>
maybe adding a redirect would help

[02:51:37.0051] <annevk>
Hmm so bikeshed-data is updated, but it's not reflected by any tooling...

[03:59:43.0908] <Domenic>
Gotta run bikeshed update?

[04:00:00.0620] <Domenic>
Maybe the CSSWG CI server does not do that often...

[04:17:38.0881] <Domenic>
PRs should be working again now; they might need a rebase.

[04:26:10.0258] <TabAtkins>
As I said, the regen script needs to be run, to update the manifest file, before Bikeshed will pick up the new data.

[04:26:55.0074] <TabAtkins>
(And then the updated manifest checked in.)

[05:15:51.0842] <annevk>
TabAtkins: I did that and bikeshed-data did pick it up; it's just api.csswg.org that hasn't yet at this point

[05:16:19.0500] <annevk>
 * TabAtkins: I did that and bikeshed-data did pick it up; it's just api.csswg.org that hasn't yet at this point


2022-11-08
[04:08:34.0441] <jgraham>
So I'm trying to integrate WebDriver BiDi network events into fetch, and I'm struggling to work out where to call the various lifecycle update algorithms.

The BiDi model is basically that you get the following events: `beforeRequest`, `responseStarted`, `responseCompleted`, `fetchError`. The invariants are that every request (including redirects etc.) gets a `beforeRequest` event and either `responseStarted`/`responseCompleted` or `fetchError` (and maybe `responseStarted` if the error happens after the response headers are received).

I _think_ the end-of-lifecycle events can be handled in the "fetch response handover"? But what I'm less sure about is guaranteeing that there's always a matching `beforeRequest` event with the headers as-sent (or as seen by whatever prevents the request going over the wire e.g. serviceworker or cache). I think the headers requirement means that in the case where the request isn't blocked we need to emit it right before sending. But because the request may be blocked at various points before that, we can end up in "fetch response handover" without having emitted a `beforeRequest` event. But there can also be an error which occurs after it's sent, so we can end up there when we _have_ already emitted that event.

Is there something simpler to do here than add extra state to the request, indicating whether we already emitted such an event? Obviously I'd prefer not to add more state if possible because state is complexity, but I'm not seeing an obvious alternative.

[04:09:58.0281] <jgraham>
 * So I'm trying to integrate WebDriver BiDi network events into fetch, and I'm struggling to work out where to call the various lifecycle update algorithms.

The BiDi model is basically that you get the following events: `beforeRequest`, `responseStarted`, `responseCompleted`, `fetchError`. The invariants are that every request (including redirects etc.) gets a `beforeRequest` event and either `responseStarted`/`responseCompleted` or `fetchError` (and maybe `responseStarted` if the error happens after the response headers are received).

I _think_ the end-of-lifecycle events can be handled in the "fetch response handover"? But what I'm less sure about is guaranteeing that there's always a matching `beforeRequest` event with the headers as-sent (or as seen by whatever prevents the request going over the wire e.g. serviceworker or cache). I think the headers requirement means that in the case where the request isn't blocked we need to emit it right before sending. But because the request may be blocked at various points before that, we can end up in "fetch response handover" without having emitted a `beforeRequest` event. But there can also be an error which occurs after it's sent, so we can end up there when we _have_ already emitted that event.

Is there something simpler to do here than add extra state to the request, indicating whether we already emitted such an event? Obviously I'd prefer not to add more state if possible because state is complexity, but I'm not seeing an obvious alternative.

[04:44:05.0351] <smaug>
Domenic is so optimistic with https://github.com/whatwg/html/pull/6315#pullrequestreview-1158013824 🙂  no regressions with session history stuff?

[04:44:38.0489] <smaug>
Session history is the one component where regressions are pretty much guaranteed whenever anything changes.

[04:47:15.0794] <smaug>
/me just fixed yet another issue he caused 2 years ago. Some site did effectively: location.reload(); location.href = "newpage"; and that right after there were something like 5 http redirects 

[04:47:48.0201] <smaug>
/me  * just fixed yet another issue he caused 2 years ago. Some site did effectively: location.reload(); location.href = "newpage"; and that right after there were something like 5 http redirects 

[15:37:16.0054] <dlrobertson>
Is it preferred to have more small algorithms or fewer larger algorithms?

[15:38:22.0592] <dlrobertson>
I've been looking into splitting out https://w3c.github.io/FileAPI/#slice-method-algo into a algorithm so range requests can use it, and I'm uncertain if i should have slice-bytes and normalize-range or just a slice-blob algorithm

[15:41:09.0519] <dlrobertson>
 * context: I've been looking into splitting out https://w3c.github.io/FileAPI/#slice-method-algo into a algorithm so range requests can use it, and I'm uncertain if i should have slice-bytes and normalize-range or just a slice-blob algorithm


2022-11-09
[00:09:47.0200] <zcorpan>
dlrobertson: I think whatever makes the spec clearer / easy to follow. Though there's also some value in matching implementations, if that is sufficiently easy to follow

[00:14:21.0344] <annevk>
dlrobertson: I consider splitting something if it would end up with two callers, and definitely do it if there's more callers than that

[00:15:15.0049] <annevk>
dlrobertson: and yeah, sometimes it can greatly benefit readability even if there's only a single caller, so as with most things there's a lot of "it depends" :-)

[08:03:50.0187] <dlrobertson>
zcorpan: annevk thanks for the tips... i'll give splitting it up a shot and we'll see what happens in review haha


2022-11-10
[02:33:44.0853] <freddy>
interesting paper, "WebSpec: Towards Machine-Checked Analysis of Browser Security Mechanisms" pre-print at https://arxiv.org/abs/2201.01649. They use proof assistant and formalized model to identify security invariants in the web platform

[02:35:17.0143] <Ms2ger 💉💉💉>
Did they find any? 😅

[04:00:37.0698] <zcorpan>
Ms2ger 💉💉💉: freddy: " The mismatch between the access control policies in the DOM and the cookie jar allows a script running in an iframe to access the document.cookie property of the parent page when both pages set document.domain to the same value."

[04:01:19.0458] <zcorpan>
not sure that's a novel attack though

[04:03:07.0259] <zcorpan>
the next sentence is " Once the inner frame performs a set cookie of a host-prefix cookie through the parent page DOM, the browser uses the original domain value of the parent page to perform the host prefix checks, breaking the invariant."

[04:06:17.0900] <freddy>
So, for academics, the title "towards" basically hints to that. I think the main achievement is being able to generate/deduce bugs, even if they are known edge cases.

[04:10:59.0121] <zcorpan>
interesting point about restricting Trusted Types to secure contexts created an easy bypass

[04:31:48.0060] <annevk>
How did that create an easy bypass?

[06:03:17.0682] <zcorpan>
annevk: you can frame from unsecure context

[06:03:42.0177] <zcorpan>
annevk: https://github.com/w3c/trusted-types/issues/259#issuecomment-630863753

[06:06:31.0016] <zcorpan>
TabAtkins: ping https://github.com/whatwg/html/pull/8175 :)

[06:09:10.0017] <TabAtkins>
I'm still on vacation until Friday

[06:10:04.0231] <zcorpan>
TabAtkins: ok, enjoy your vacation :) Would you like a ping next week?

[06:10:26.0664] <TabAtkins>
Yes, please!

[10:20:13.0492] <wanderview>
anyone in here active on mastodon?  I'm looking to increase my coverage of web standards discussion there as I'm less active on twitter...  (I'm at wanderview@toot.cafe)

[14:50:53.0634] <zcorpan>
Bocoup is looking to hire someone with experience in web standards: https://twitter.com/bocoup/status/1590754781358084097

[14:53:27.0961] <zcorpan>
wanderview: I'm https://mastodon.social/@zcorpan , maybe you've also seen this tool to find people from twitter https://glitch.com/~fedifinder


2022-11-11
[17:51:52.0625] <sideshowbarker>
Domenic: So I guess because of daylight-savings time, the HTML spec-triage meeting is now at 9am Tokyo time rather than 8am. So I didn’t attend because I can’t do 9am meetings any day of the week. I could still do 8am or else 9:30

[17:53:37.0322] <sideshowbarker>
Not that I’m essential but I just wanted to say my reason for not attending wasn’t lack of interest

[17:56:03.0274] <Domenic>
Aww OK, good to know. I think moving back might be nicer for all non-Tokyo people too, so maybe we should do so... Want to file an issue and tag the triage team?

[17:57:42.0593] <sideshowbarker>
sure, will do

[00:15:45.0983] <Domenic>
Navigation API almost entirely rebased on new HTML infrastructure... time to work on a HTML PR for it, as promised.

[03:29:37.0726] <annevk>
`popover` looks pretty good now


2022-11-13
[21:42:25.0477] <snek>
does anyone have a pulse on csp for webrtc and webtransport

[21:42:57.0915] <snek>
the github issues do not look promising

[01:16:21.0910] <Domenic>
Seems like another case of people trying to use CSP for exfiltration prevention, which it isn't designed for?


2022-11-14
[23:37:51.0350] <annevk>
Well it is, it might not be maintained to the extent needed though.

[02:26:26.0802] <annevk>
Domenic: as I was looking at reflect for ARIA I came across https://github.com/whatwg/html/issues/3238 again and was wondering if you changed your mind on doing it incrementally

[02:27:20.0970] <annevk>
Domenic: not necessarily volunteering, but if we dropped enumerated attributes or did things one-by-one as we had time I think it would be much more tractable

[02:58:50.0293] <Domenic>
annevk: Yeah I think I've changed my mind, incrementally (especially if we do everything except enumerated attributes first) is reasonable

[04:45:33.0987] <Domenic>
Getting there... https://whatpr.org/html/8502/nav-history-apis.html#navigation-api

[06:06:39.0407] <zcorpan>
> <@tabatkins:matrix.org> Yes, please!

ping https://github.com/whatwg/html/pull/8175 :)

[14:55:57.0134] <TabAtkins>
thanks!


2022-11-15
[17:18:44.0898] <DerekNonGeneric>
does anyone know what happened to the chromium codebase? it says access denied to me for some reason https://source.chromium.org/chromium

[17:28:24.0783] <DerekNonGeneric>
> Could not load project*

[19:03:46.0848] <DerekNonGeneric>
does anyone else see that too?

[19:37:24.0301] <Dominic Farolino>
It loads for me

[20:50:41.0552] <DerekNonGeneric>
Hmm 🤔

[01:39:10.0723] <sideshowbarker>
annevk: FYI https://stackoverflow.com/questions/74308367/how-to-protect-api-from-domain-manipulation-in-hosts-file/74443117#74443117 — lemme know if I’m off in any way on what I say there (or just comment there)

[01:47:25.0895] <annevk>
I'm not sure I understand what OP is describing there, seems a bit contradictory to have all users be anonymous but not essentially have public data

[02:06:21.0729] <sideshowbarker>
> <@annevk:matrix.org> I'm not sure I understand what OP is describing there, seems a bit contradictory to have all users be anonymous but not essentially have public data

yeah that part of the question I didn’t try to address — but instead just the general part about what effect editing the Hosts file would have

[03:56:34.0723] <annevk>
https://i.imgflip.com/70twbz.jpg

[04:28:37.0561] <Sam Sneddon [:gsnedders]>
Two origins, both alike in dignity; on the open web, we lay our scene…

