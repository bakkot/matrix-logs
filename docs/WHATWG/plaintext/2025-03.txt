2025-03-01
[02:18:09.0452] <hacknorris>
i wish there was one thing. favicons optional and not required, not asked by browsers unless site said so via manifest or <link>. i really wish… (specially as a person testing on localhost in folders and subfolders…)


2025-03-02
[14:47:31.0873] <smaug>
Hmm, I don't think https://html.spec.whatwg.org/multipage/webappapis.html#await-a-stable-state works. Queuing microtasks from outside the main event loop doesn't make sense, and as far as I see, that 'await a stable state' may hang forever, since nothing guarantees the microtask is run.


2025-03-03
[20:23:46.0000] <sideshowbarker>
Anybody know of tests anywhere for “valid email address” as defined at https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address ?

[23:17:37.0622] <annevk>
smaug: yeah I think I filed an issue on that.

[23:18:32.0187] <annevk>
sideshowbarker: not sure, there's an issue on changing its definition to account for EAI

[23:18:45.0608] <annevk>
* smaug: yeah I think I filed an issue on that

[23:19:56.0445] <annevk>
* smaug: https://github.com/whatwg/html/issues/2882

[05:11:49.0724] <Dan Howard>
Hi, I'm working on a possible proposal to improve window.print I only see a reference about the dialog and the print media.  Where should I start this discussion? TIA

[05:32:19.0686] <annevk>
Dan Howard: I might search through whatwg/html issues on GitHub first to see if anything has already been proposed. But failing that there would be a good place.

[05:32:40.0290] <annevk>
(Though I would not expect there to be too much implementer interest in improving that API per se.)

[05:59:54.0507] <Dan Howard>
thanks

[07:29:20.0788] <annevk>
smaug: sefeng: does https://github.com/whatwg/dom/pull/1342#discussion_r1973386577 match how Gecko feels about `getSelection()` or are you okay with it exposing the shadow tree when the end user selects shadow tree content?

[07:55:18.0515] <annevk>
smaug: sefeng: see also https://github.com/whatwg/dom/issues/1362

[10:57:34.0766] <smaug>
Exposing shadow tree is not ok.


2025-03-04
[17:38:59.0156] <Domenic>
I don't have a lot of hope that doing so would result in new resources magically being discovered.

[18:22:34.0181] <Yagiz Nizipli>
For those who are unfamiliar, NativeScript has added a spec-compliant URLPattern implementation to both of their iOS and Android runtimes - https://github.com/NativeScript/ios/pull/268

[23:34:58.0795] <annevk>
Domenic: could I ask you to get someone familiar with URLPattern to comment on https://github.com/w3c/IFT/issues/259? Perhaps the URLPattern specification should have some examples as how to address URI template use cases?

[23:41:54.0646] <sideshowbarker>
I’m looking at the test case at https://github.com/web-platform-tests/wpt/blob/3c11c5bae7639991e1a300ad841dd53f571eecf3/html/semantics/forms/constraints/form-validation-checkValidity.html#L96 and trying to determine figure out how the expectation of false aligns with the actual spec requirements.

That test case just creates this:

```html
<input type=time value="12:03:00" step="2 * 60 * 1000">
```


[23:42:32.0325] <sideshowbarker>
So I guess the intent of that test case is, the value shouldn’t be allowed to have a `:00` seconds part.

[23:43:59.0016] <sideshowbarker>
But determining whether it’s allowed or not involves running the algorithm at https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero — the second step of which is:
> If the element has a value content attribute, and the result of applying the algorithm to convert a string to a number to the value of the value content attribute is not an error, then return that result.

[23:44:40.0444] <sideshowbarker>
So the ”step base” is the same as the value.

[23:46:03.0332] <sideshowbarker>
So then I look at https://html.spec.whatwg.org/multipage/input.html#the-step-attribute%3Asuffering-from-a-step-mismatch, and that says:
> When the element has an allowed value step, and the result of applying the algorithm to convert a string to a number to the string given by the element's value is a number, and that number subtracted from the step base is not an integral multiple of the allowed value step, the element is suffering from a step mismatch


[23:48:49.0506] <sideshowbarker>
“step base” - value = 0 (since “step base” is the same as the value)

[23:49:47.0588] <sideshowbarker>
…and “allowed value step” is 2 * 60 * 1000

[00:03:15.0010] <sideshowbarker>
I’m wondering if the intended requirement is instead to just use the value as-is — that is, not subtract it from “step base”

[00:04:27.0110] <sideshowbarker>
So, 12:03:00 is the number 43380000 — and 43380000 is not an integral multiple of 120000 (2 * 60 * 1000)

[00:05:37.0535] <sideshowbarker>
Or maybe I’m just misreading the spec requirement — and the spec isn’t saying to do `“step base” - value`

[00:11:57.0689] <sideshowbarker>
Or else at https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero, the 2nd step of that algorithm should just be removed — and then it would always return 0 unless there’s a `min` value or a “default step base“ defined (which is only the case for type=week)

[00:12:16.0466] <annevk>
Doesn't it create `<input type=time value="12:03:00" step="120000">`?

[00:12:43.0110] <sideshowbarker>
Yes

[00:13:04.0406] <annevk>
All browsers appear to consider that valid. Maybe the test is wrong?

[00:13:37.0733] <sideshowbarker>
Well, all of WebKit/Gecko/Blink pass that test

[00:13:41.0080] <annevk>
I don't really like the way the `input` element is organized in the specification, but I also never attempted a different approach.

[00:13:55.0997] <sideshowbarker>
Yeah I really don’t like it either

[00:14:22.0661] <sideshowbarker>
But I also don’t have any great suggestions for how else to organize it

[00:15:00.0746] <annevk>
It's weird that they all pass. Because `:invalid` doesn't match in any of them.

[00:15:01.0900] <annevk>
https://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%3Cstyle%3E%0A%3Ainvalid%20%7B%20background%3Ared%20%7D%0A%3C%2Fstyle%3E%0A...%3Cinput%20type%3Dtime%20value%3D%2212%3A03%3A00%22%20step%3D%22120000%22%3E

[00:16:18.0731] <sideshowbarker>
hmm, I hopes this is not one of those cases where existing engines just implemented whatever would get them passing the tests

[00:16:42.0091] <sideshowbarker>
the constraint-validation tests are not super-great tests anyway

[00:17:03.0049] <sideshowbarker>
the coverage is extremely minimal

[00:18:31.0995] <sideshowbarker>
But I’m also not super enthusiastic about being the person who has to add more test coverage for all this stuff

[00:19:46.0914] <sideshowbarker>
I think for my implementation I’m going to go ahead and drop step 2 of https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero from the implementation — with a comment saying why

[00:24:25.0113] <sideshowbarker>
Because, If I do that that, the tests pass. And also, I can’t actually make sense of that step. I mean, it seems to me that step is _always_ going to end up returning the same thing as the `value` attribute value. And that doesn’t logically seem like the “step base” for the element should always be same as the value of the `value` attribute. Instead the “step base” should just be either `min` or a “default step base“ or else just zero. That is, it’s a floor against which the value is evaluated.

[00:24:47.0214] <sideshowbarker>
* Because, If I do that that, the tests pass. And also, I can’t actually make sense of that step. I mean, it seems to me that step is _always_ going to end up returning the same thing as the `value` attribute value. And it doesn’t logically seem like the “step base” for the element should always be same as the value of the `value` attribute. Instead the “step base” should just be either `min` or a “default step base“ or else just zero. That is, it’s a floor against which the value is evaluated.

[00:25:21.0877] <sideshowbarker>
* Because, If I do that that, the tests pass. And also, I can’t actually make sense of that step. I mean, it seems to me that step is _always_ going to end up returning the same thing as the `value` attribute value. And it doesn’t logically seem like the “step base” for the element should always be same as the value of the `value` attribute (in the absence of a `min` or “default step base“ ). Instead the “step base” should just be either `min` or a “default step base“ or else just zero. That is, it’s a floor against which the value is evaluated.

[00:30:53.0767] <Domenic>
I think this is https://github.com/whatwg/urlpattern/issues/73 , right? It's indeed not something that's possible right now, but with some extra spec and implementation work, it could be.

[00:37:21.0612] <annevk>
Ah, I think you're right. Thanks.

[01:14:46.0731] <sideshowbarker>
Even if I set `value=foo` there instead, that `:invalid { background:red }` doesn’t see to do anything

[01:15:01.0378] <sideshowbarker>
Even if I set value=foo there instead, that :invalid { background:red } doesn’t see to do anything

[01:16:59.0437] <annevk>
sideshowbarker: oh maybe it only starts applying once there's user modifications? It's kinda weird as `valid` does apply.

[01:17:06.0768] <annevk>
* sideshowbarker: oh maybe it only starts applying once there's user modifications? It's kinda weird as `:valid` does apply.

[01:18:06.0509] <sideshowbarker>
Yeah I don’t know. I rightly should understand the details of this API better before trying to implement it 😆

[01:19:51.0956] <sideshowbarker>
but yeah `:invalid` does seem to only work after user modification

[01:19:55.0594] <annevk>
Hmm no, `:invalid` does not depend on end user input. Figuring this out properly would require quite a bit of time I want to spend on other things at the moment.

[01:20:15.0641] <annevk>
* Hmm no, `:invalid` does not depend on end user input (per spec). Figuring this out properly would require quite a bit of time I want to spend on other things at the moment.

[01:20:15.0835] <sideshowbarker>
yeah, no worries

[01:20:39.0247] <sideshowbarker>
for now, I’ll just raise an issue about the “step base” thing

[03:11:29.0736] <sideshowbarker>
Raised https://github.com/whatwg/html/issues/11097


2025-03-05
[06:46:59.0381] <Dominic Farolino>
annevk smaug Are we still thinking of landing https://github.com/whatwg/dom/pull/1307 this week?

[07:24:42.0842] <annevk>
Dominic Farolino: unclear, depends on smaug's availability and then on yours and mine if there's further feedback. He rightfully pointed out that due to the long iteration time review will take longer.

[07:24:53.0164] <smaug>
I'll try to review it asap

[07:26:13.0233] <smaug>
(which might be tomorrow)

[09:54:59.0705] <akaster>
am I correct in thinking that it's weird https://w3c.github.io/resource-timing/#sec-extensions-performance-interface says "Each ECMAScript global environment has ..." followed by a bunch of buffer and integer properties? It links to https://webidl.spec.whatwg.org/#es-environment , which ... is not where I would expect anyone to be defining properties. I would expect them to be defined as belonging to an HTML Envrionment Settings Object, or a 'WindowOrWorkerGlobalScope' (or the new intermediary added by ShadowRealms). Or belonging to an Agent or Agent Cluster. Saying that the properties belong to "the ES environment" seems pretty vague

[10:53:22.0842] <Noam Rosenthal>
Yea these are deprecated things that were shipped long ago so they're still in the spec

[10:54:00.0996] <Noam Rosenthal>
I did a lot of work to clean up resource timing ~4 years ago and there's still lots of work left :)


2025-03-06
[04:23:10.0926] <akaster>
gotcha. I opened <https://github.com/w3c/resource-timing/issues/414> for this one. Luke opened two more issues he found in Ladybird's initial implementation over in the fetch repo as well.

[05:07:02.0389] <zcorpan>
ntim: should there be a pseudo-element for `<input type=color>`? If we add `eyedropper` to it, we'd want a different icon in the button and allow customization

[05:47:59.0817] <annevk>
zcorpan: shouldn't it be added at that point?

[05:54:27.0117] <zcorpan>
annevk: I thought people may want to customize the inner content also for a regular `<input type=color>`

[06:27:02.0026] <smaug>
I wonder if there is some addon which clicks "Load more..." as long as there is one in a github pr/issue

[06:28:03.0086] <smaug>
Maybe I should try to use some AI tool to generate such addon

[06:33:16.0639] <zcorpan>
I would be a user for sure

[07:12:19.0485] <annevk>
zcorpan: I guess, but you already have `::before` and `::after` to play with and possibly more. Seems reasonable to discuss in an issue though, especially if there's some precedent in a UA style sheet. (I don't think there is in ours in this case.)

[07:14:17.0103] <annevk>
Last time this was discussed Mike pointed out https://github.com/dlvhdr/gh-dash though looking at it now that's more of a CLI thing.

[07:23:15.0468] <sideshowbarker>
Yeah, that thing is “TUI” (terminal UI — like a GUI but in the terminal)

[07:24:02.0205] <sideshowbarker>
But if you’re OK with using the shell/CLI to do stuff, you don’t even need that

[07:24:18.0967] <sideshowbarker>
You can instead just use the GitHub CLI

[07:24:24.0374] <sideshowbarker>
`gh pr view`

[07:24:48.0391] <sideshowbarker>
Example:

```
gh pr view --comments https://github.com/whatwg/dom/pull/1307
```

[07:25:05.0153] <sideshowbarker>
* Example:

```
gh pr view --comments \
   https://github.com/whatwg/dom/pull/1307
```

[07:25:27.0085] <sideshowbarker>
That’ll show you all the comments — without you needing to expand anything

[07:26:15.0683] <zcorpan>
@annevk yeah, I can file an issue. It seems ::before and ::after work in webkit and chromium, but not gecko. `input[type=color] { content: url(image) }` replaces the color well in webkit and chromium, does nothing in gecko.

[07:26:16.0315] <sideshowbarker>
And also note that it _just_ shows the comments — minus all the other intervening noise that GitHub dumps into PR/issue discussions

[07:27:02.0376] <sideshowbarker>
I mean minus the dozens of things like this:

> chromium-wpt-export-bot mentioned this pull request on Dec 10, 2024

[07:27:45.0754] <annevk>
zcorpan: well you'd have to appearance:base first, right?

[07:28:10.0862] <annevk>
There is also the replaced element concern for appearance:auto, but that seems like a separate topic.

[07:28:32.0496] <zcorpan>
Hmm yeah

[07:29:07.0931] <sideshowbarker>
For the web UI, even if you did have some addon that would click _“Load more…”_ for you, the web UI would still be showing you all that noise

[07:29:25.0492] <sideshowbarker>
…you’d need another addon to filter out all the noise

[07:30:36.0070] <sideshowbarker>
But the gh cli just omits all the stuff to begin with, and all the comments at one. You just page through it `less` or whatever you have as your pager in your shell

[07:31:09.0035] <sideshowbarker>
Anyway, I recommend trying that `gh pr view` thing at least

[15:19:00.0051] <smaug>
mfreed: still trying to find _when_ the focus fixup happens

[15:19:37.0620] <smaug>
around rendering looks like

[15:19:46.0933] <smaug>
isn't that broken?

[15:20:43.0265] <smaug>
key events may come in between something becoming inert and rendering steps

[15:52:50.0853] <Domenic>
IIRC we moved to that model because we didn't want sync moving of focus. Chrome used to do sync moving of focus but no other browser did.

[15:53:43.0658] <Domenic>
https://github.com/whatwg/html/pull/8392 https://github.com/whatwg/html/issues/3847 https://github.com/whatwg/html/issues/8225

[15:54:18.0293] <Domenic>
The current model is basically a request from Emilio


2025-03-07
[19:46:44.0710] <Farzaneh Sedarati>
so I used swift fiddle to transfer money from these Sha string to my bank account and I did over a hundred different string on 4 transfer code on fiddle Saturday evening and still no deposits yet

[01:05:25.0695] <annevk>
Noam Rosenthal: did you see the latest `moveBefore()` comment against the HTML PR? I think it can be dismissed, but I'd like you or Dominic Farolino to do it.

[01:09:19.0791] <emilio>
> <@domenicdenicola:matrix.org> IIRC we moved to that model because we didn't want sync moving of focus. Chrome used to do sync moving of focus but no other browser did.

Chrome used to do sync moving in some cases, and async in others (off a timer) fwiw :)

[01:11:42.0623] <emilio>
> <@smaug:mozilla.org> key events may come in between something becoming inert and rendering steps

Yes, but rendering generally changes focusability as well (via display / visibility / etc), so seems nicer just doing the fixup once than doing it sync on DOM changes and async on style changes (specially since you'd need to do a style update when e.g. you add or remove the inert / tabindex / etc attributes)

[01:12:08.0704] <emilio>
I guess only in some cases, but still

[02:38:16.0021] <Noam Rosenthal>
I'll take a look, thanks!

[03:45:22.0528] <annevk>
Noam Rosenthal: it also seems there's one comment still open on filing a follow-up issue and one formatting concern. I might have time later today, but maybe it's best to merge it all next week at this point.

[05:03:40.0532] <Noam Rosenthal>
I responded to the former, will defer to Dominic Farolino for the formatting thing.

[05:26:08.0571] <Luke Warlow>
> <@zcorpan:mozilla.org> ntim: should there be a pseudo-element for `<input type=color>`? If we add `eyedropper` to it, we'd want a different icon in the button and allow customization

Fyi I've added a `::color-swatch` pseudo element to that draft. All the browsers have one so we should implement it for base. Makes the implementation in browsers less magic too.

[05:36:30.0497] <annevk>
Luke Warlow: if you want macOS-style appearance I think you need an additional (child) box, assuming you care about `<input type=color alpha>`. It's possible it all could be achieved through `::before` and `::after` though. Also not entirely sure I would count this yet as removing magic, maybe a tiny bit.

[05:37:16.0122] <annevk>
And it might not actually remove magic if we decide that `appearance: auto` has to be behave as a replaced element without addressable inner parts.

[05:37:20.0234] <Luke Warlow>
I managed to get something working with linear gradients that I think achieves the WebKit alpha appearance.

[05:37:25.0373] <annevk>
Which I think emilio has argued for.

[05:38:31.0829] <annevk>
Luke Warlow: oh, that might be a good replacement for my clipping thing if it works well. Would create less layers.

[05:38:52.0098] <Luke Warlow>
Regarding magic I more meant that base appearance could be defined entirely through UA stylesheet targeting the element and it's pseudo. No need for anything extra. But yeah there's more work needed to be fully free of magic.

[05:39:31.0313] <annevk>
I thought gradients wouldn't work due to arbitrary resizing. But I didn't play with them.

[05:40:09.0652] <Luke Warlow>
https://github.com/w3c/csswg-drafts/issues/11837#issuecomment-2705108403

This was what I prototyped in a custom element and it seems to work but it's possible I've just scratched the surface and it doesn't actually replicate everything.

[05:42:21.0457] <annevk>
Nice, that might well work.

[05:48:00.0044] <Luke Warlow>
> <@annevk:matrix.org> And it might not actually remove magic if we decide that `appearance: auto` has to be behave as a replaced element without addressable inner parts.

Fwiw the inner parts are already addressable in all engines. Just via prefixed pseudos. I didn't think they were web exposed either but they are. Idk if that changes things at all.

[05:51:28.0222] <annevk>
Yeah I know. How `appearance: auto` gets standardized very much remains to be seen.

[05:52:44.0913] <annevk>
Noam Rosenthal: I don't see your response to https://github.com/whatwg/html/pull/10657#pullrequestreview-2515171306?

[05:53:07.0172] <annevk>
I guess I can do it.

[06:09:57.0620] <annevk>
Hmm, there's also no PR to rename the tests away from tentative. I'm going to leave that for someone else as hopefully it's just a rename, but Dominic Farolino and Noam Rosenthal please remember that for next time. If you want something to land it really helps if the entire checklist is actually done.

[06:18:15.0011] <Dominic Farolino>
What is the formatting thing? Was it https://github.com/whatwg/html/pull/10657#pullrequestreview-2513609939?

[06:19:06.0642] <Dominic Farolino>
That had been addressed a while ago but I just marked it resolved now. I can't find any other formatting comments though annevk 

[06:42:33.0463] <Dominic Farolino>
Thanks for merging annevk. CL to move tests out of /tentative is up for review..

[07:23:38.0635] <annevk>
Dominic Farolino: formatting was https://github.com/whatwg/html/pull/10657/commits/39b3664e9e0ee00dbc3ebf4446b52d8734a5eda3

[07:24:02.0651] <annevk>
(You might want to review that since nobody else has...)

[08:09:48.0215] <Dominic Farolino>
annevk: The `<dt>` wrapping you did conflicts with wrapping guidance I've heard from Domenic  about not wrapping specifically those elements (out of stylistic preference IIRC). I don't have strong opinions, but the wrapper tool follows that guidance (keeping `<dt>` content on one line).

[08:35:29.0082] <annevk>
I think that's likely the case for `<dl class=domintro>` `<dt>`s, but not all.

[08:36:07.0421] <annevk>
Anyway, good to know that case isn't covered by tooling.

[15:22:33.0842] <Domenic>
Also for dl class=props at least, so I think I generalized the advice


2025-03-10
[10:11:25.0040] <smaug>
If we manage to get rid of Mutation Events this year, I wonder what next. XSLT would be a nice candidate, hopefully wouldn't take quite as long as with MutationEvents (13 years).


2025-03-11
[17:25:46.0141] <annevk>
It's somewhat frustrating how rather fundamental bugs in URLPattern don't seem to get attention.

[17:26:15.0716] <annevk>
E.g., https://github.com/whatwg/urlpattern/issues/252

[17:27:05.0111] <annevk>
The idea was that the polyfill was somehow fully compliant and therefore this was not a thing to worry about, but it seems like it absolutely was a thing to worry about cause now the specification is a mess and the tests are a mess too.

[18:00:29.0741] <Meghan Denny>
should https://html.spec.whatwg.org/#willful-violation instead point to https://infra.spec.whatwg.org/#willful-violation ?

[18:23:27.0609] <annevk>
Yeah, we can probably remove that section in favor of the Infra section. Want to PR?

[18:30:55.0289] <Meghan Denny>
can try in a bit, sure :)


2025-03-12
[18:12:42.0686] <annevk>
Hmm, the `location.hostname` setter is still kinda bogus. E.g., set it to `^` and it throws in most implementations. But what argues for that?

[18:13:15.0788] <annevk>
(I'm still trying to unravel `URLPattern` nonsense. But turns out there's non-`URLPattern` nonsense too.)

[19:20:39.0377] <akaster>
Is it supposed to be legal to reject and resolve promises while "in parallel"? Or should spec authors wrap those in "queue a task on the such and such task source given such and such global object to resolve/reject `promise` with XYZ"

[19:23:41.0665] <akaster>
Oh I asked this and then realized that the latest WebCrypto spec has a "when we say throw, we mean queue a task to resolve the promise with" in the latest draft and our implementation is wrong 😅

[19:27:50.0396] <akaster>
but then there's this from `extract a body` in Fetch https://fetch.spec.whatwg.org/#concept-bodyinit-extract, that says to create a Uint8Array while "in parallel", which seems unfortunate. I thought that "in parallel" was supposed to only operate on realm-independent WebIDL objects. 
> 12. If action is non-null, then run these steps in parallel:
>   1. Run action.
>   2. Whenever one or more bytes are available and stream is not errored, enqueue the result of creating a Uint8Array from the available bytes into stream.
>   3. When running action is done, close stream.


[19:28:12.0457] <akaster>
* but then there's this from `extract a body` in Fetch https://fetch.spec.whatwg.org/#concept-bodyinit-extract, that says to create a Uint8Array while "in parallel", which seems unfortunate. I thought that "in parallel" was supposed to only operate on realm-independent WebIDL objects.

> 12. If action is non-null, then run these steps in parallel:
>     1. Run action.
>     2. Whenever one or more bytes are available and stream is not errored, enqueue the result of creating a Uint8Array from the available bytes into stream.
>     3. When running action is done, close stream.

[19:30:14.0612] <akaster>
> The next complication is that, in algorithm sections that are in parallel, you must not create or manipulate objects associated to a specific realm, global, or environment settings object. (Stated in more familiar terms, you must not directly access main-thread artifacts from a background thread.) Doing so would create data races observable to JavaScript code, since after all, your algorithm steps are running in parallel to the JavaScript code.
https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-for-spec-authors

[19:30:27.0055] <akaster>
* > The next complication is that, in algorithm sections that are in parallel, you must not create or manipulate objects associated to a specific realm, global, or environment settings object. (Stated in more familiar terms, you must not directly access main-thread artifacts from a background thread.) Doing so would create data races observable to JavaScript code, since after all, your algorithm steps are running in parallel to the JavaScript code.

https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-for-spec-authors

[19:39:14.0897] <akaster>
relatedly, I wrote up some thoughts about interacting with the HTML event loop from concurrent Swift code here today, if anyone in this forum is interested. https://forums.swift.org/t/ladybird-browser-event-loop-integration-with-swift-concurrency/78453

[20:00:33.0626] <Domenic>
akaster: you may enjoy my recent braindump in this space. https://github.com/w3c/ServiceWorker/pull/1755#issuecomment-2661941708

[20:04:15.0499] <Domenic>
I pinged Shunya internally. Unfortunately we lost Jeremy to a reorg...

[20:04:43.0433] <akaster>
Oh that is interesting yeah. It's definitely the case for me that when I was reading through the Service worker spec a few months ago it was difficult to wrap my head around what spec objects were supposed to be "agent global" vs "event loop" vs "browser process/user agent global" 

[20:05:12.0363] <akaster>
And the spec at the time seemed to mix subobjects with different lifetimes in the same spec object.

[23:56:16.0569] <sideshowbarker>
Layout-computation question: Given the following:
```html
<style>
    .visually-hidden {
        position: absolute;
    }
    .icon {
        display: inline-block;
    }
    dt a {
        position: relative;
    }
</style>
<body>
    <dt>
        <a>
            <abbr class="icon">
                <span class="visually-hidden">Non-standard</span>
            </abbr>
        </a>
    </dt>
</body>
```
…The containing block for the layout node for that `span` should be the `abbr` block, right?

And if the `a` block is ending up as the containing block for that `span`, that’s just wrong?

[00:17:36.0493] <Andreu Botella>
https://drafts.csswg.org/css-position-3/#def-cb
> If the box has position: absolute:
>    The containing block is established by the nearest ancestor box that establishes an absolute positioning containing block [...}
> 
> Note: Properties that can cause a box to establish an absolute positioning containing block include position, transform, will-change, contain…

[00:18:13.0789] <Andreu Botella>
The spec doesn't say `display: inline-block` can make an abspos containing block

[00:27:11.0464] <Domenic>
annevk: let me know if you have any thoughts on https://github.com/httpwg/http-extensions/issues/2907 . I'll probably default to Martin's preference absent other thoughts.

[05:58:48.0079] <annevk>
Domenic: I guess I would try to get away with it as it would seem annoying to adopt a different editorial style for the IETF, but it also doesn't matter too much.

[10:11:12.0200] <TabAtkins>
No, `inline-block` isn't one of the properties/values that magically creates a CB, so the CB will be generated by the `a` ancestor instead.

[16:48:32.0670] <annevk>
Yagiz Nizipli: can you explain why "`https://{sub.}?example{.com/}foo`" as input would throw? I think I end up with a host of `{sub}`.

[16:51:43.0615] <annevk>
* Yagiz Nizipli: can you explain why "`https://{sub.}?example{.com/}foo`" as input would throw? I think I end up with a host of `{sub.}`.

[16:54:25.0135] <Yagiz Nizipli>
I’m not sure. This is the only failing test on Node.js and Cloudflare Workers. I think this test is invalid. 

[16:54:52.0639] <annevk>
I see. I think so too.

[16:55:39.0705] <annevk>
I don't think this fully resolves my concerns as to get here I do have a version of canonicalize a hostname that considers `:test` failure rather than just ignored input.


2025-03-13
[10:15:21.0628] <smaug>
dizhang168: actually, does anything in the current selection spec reveal shadow DOM stuff?

[10:15:50.0414] <smaug>
(implementations do something very different)

