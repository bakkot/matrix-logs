2024-06-01
[23:35:07.0599] <Maxim Vaarwel>
Hello, could someone tell what does mean:
> The insertion point is relative to the position of the character immediately after it, it is not an absolute offset into the input stream.

Why not absolute?

[23:52:04.0191] <sideshowbarker>
PSA: About https://git-pulse.github.io/snapshots/ ‚Äî a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.

The Chromium and Gecko mirrors don‚Äôt use GitHub for patch reviews, so the PR stats for them aren‚Äôt relevant ‚Äî but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate ‚Äî

- 13131 commits to main per month
- 1310 unique committers per month
- 11738 total unique committers over the entire repo history
- 49 unique new first-time committers each month


[23:55:40.0448] <sideshowbarker>
 * PSA: About https://git-pulse.github.io/snapshots/ ‚Äî a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.

The Chromium and Gecko mirrors don‚Äôt use GitHub for patch reviews, so the PR stats for them aren‚Äôt relevant ‚Äî but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate ‚Äî

- 13131 commits to main _per month_
- 1310 unique committers _per month_
- 11738 total unique committers over the entire repo history
- 49 unique new first-time committers each month


2024-06-03
[01:28:17.0853] <annevk>
sunil: I don't know.

[01:40:43.0573] <annevk>
sunil: I think you're correct that it's supposed to work although I'm not sure to what extent we actively considered shared/service workers at the time. I don't recall.

[01:42:20.0539] <sunil>
Thanks annevk, Do you know who could have more idea on this?

[01:45:25.0990] <sunil>
annevk: I am implementing this in Firefox and trying to check if it would be helpful to extend the wpt to  service workers as well. It wouldn't add much value if other browsers do not fully support it for workers though.

[02:35:03.0285] <Domenic>
> <@sideshowbarker:matrix.org> PSA: About https://git-pulse.github.io/snapshots/ ‚Äî a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.
> 
> The Chromium and Gecko mirrors don‚Äôt use GitHub for patch reviews, so the PR stats for them aren‚Äôt relevant ‚Äî but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate ‚Äî
> 
> - 13131 commits to main _per month_
> - 1310 unique committers _per month_
> - 11738 total unique committers over the entire repo history
> - 49 unique new first-time committers each month

These numbers seem pretty believable to me.

[03:06:46.0596] <annevk>
sunil: I suspect the most straightforward way to find out is to write those tests and run them

[03:07:28.0294] <sideshowbarker>
> <@domenicdenicola:matrix.org> These numbers seem pretty believable to me.

OK ‚Äî good to have that confirmation. And I‚Äôm glad now to have finally added the repo to set that tool monitors. The numbers are more interesting relative to other projects (beyond just the absolute numbers)

[04:03:10.0013] <sideshowbarker>
About the test at https://wpt.fyi/results/inert/inert-and-find-flat-tree.html ‚Äî question: is _‚ÄúText inside a dialog inside a shadowroot‚Äù_ defined as inert per-spec?

[04:04:14.0417] <sideshowbarker>
correction: ‚ÄúText _slotted into_ a dialog which is inside a shadowroot should be findable‚Äù defined as inert?

[04:04:24.0203] <sideshowbarker>
 * correction: Is ‚ÄúText _slotted into_ a dialog which is inside a shadowroot should be findable‚Äù defined as inert?

[04:04:36.0759] <sideshowbarker>
 * correction: Is ‚ÄúText _slotted into_ a dialog which is inside a shadowroot‚Äù defined as inert?

[04:06:44.0993] <sideshowbarker>
 * About the test at https://wpt.fyi/results/inert/inert-and-find-flat-tree.html ‚Äî <del>question: is _‚ÄúText inside a dialog inside a shadowroot‚Äù_ defined as inert per-spec?</del>

[04:10:31.0168] <sideshowbarker>
Luke Warlow: ‚Üë (if you happen to know ‚Äî¬†since I think you may have recently been working on something that you were running the inert test cases to check against)

[04:18:21.0565] <Luke Warlow>
Apologies I'm not sure about that, I think the inert test I was looking at was using a test driver API that was changed. So it was tangential to the inert spec

[12:16:17.0702] <elf-pavlik (elf Pavlik)>
Hello, what would be equivalent in browser's `fetch` to what nodejs `undici` supports with `dispatcher: new Agent({ bodyTimeout: 0 })`. This way one can disable the default 300s body timeout. 
I have an example of long lived streaming responses which I would also like to have working in the web browser https://github.com/elf-pavlik/sosy24/blob/main/streaming-http.mjs

[12:18:43.0857] <elf-pavlik (elf Pavlik)>
relevant `undici` docs https://undici.nodejs.org/#/docs/api/Dispatcher?id=parameter-dispatchoptions


2024-06-04
[02:19:29.0628] <Jake Archibald>
annevk: if there somewhere I can read about the current state of ITP in Safari? Eg double-keying and cookie lifetimes in various contexts (eg iframes, different kinds of popups, the kinds of interactions that change the behaviour)

[02:19:38.0803] <Jake Archibald>
 * annevk: is there somewhere I can read about the current state of ITP in Safari? Eg double-keying and cookie lifetimes in various contexts (eg iframes, different kinds of popups, the kinds of interactions that change the behaviour)

[03:17:15.0667] <annevk>
Jake Archibald: suspect https://webkit.org/blog/category/privacy/ is your best bet as far as webkit.org goes, not sure about outside documentation

[03:19:15.0631] <Jake Archibald>
annevk: hmm, I see stuff like https://webkit.org/blog/9521/intelligent-tracking-prevention-2-3/, but that's just a changelog as far as I can tell. Is it expected that folks go through all these changelogs and manually figure out how it works today, or is that documented somewhere else?

[04:54:33.0720] <Sam Sneddon [:gsnedders]>
https://webkit.org/tracking-prevention/ I believe should be what you want?

[05:17:40.0446] <Jake Archibald>
Sam Sneddon [:gsnedders]: ohhh, I think that's what I'm looking for. Cheers!

[05:22:47.0297] <Sam Sneddon [:gsnedders]>
"How are you meant to find that document" is a reasonable question üòõ

[06:26:23.0161] <zcorpan>
Dominic Farolino: is https://github.com/web-platform-tests/wpt/pull/45650 good to go? :)

[08:25:40.0539] <Dominic Farolino>
will finish reviewing within 24h

[15:15:09.0443] <a k>
h


2024-06-05
[20:21:51.0373] <Maxim Vaarwel>
zcorpan: sorry to bother you, as far as I know, you seem to have written a part about HTML parsing. Could you give me an answer?

[00:55:35.0763] <zcorpan>
annevk: Does the "settings" button in https://github.com/orgs/whatwg/teams/html-triage work for you? I tested in 3 browsers and it does nothing. No error in the console

[00:56:24.0613] <zcorpan>
Hmm the settings tab works though, ok

[01:23:17.0700] <smaug>
Yoav Weiss: so noopener-allow-popups would be used on the opener side and make all the newly opened windows opened basically with noopener? Or am I misunderstanding this?

[01:24:51.0700] <smaug>
(in the pr I don't quite understand "maintain its opener relationship with them" - who maintains opener, when we just cut opener relationship )

[01:58:13.0125] <Yoav Weiss>
smaug: If the header is used by a document, its openers would lose the ability to script it, but it would still have the ability to open other same-origin documents and script them

[01:58:48.0491] <Yoav Weiss>
smaug: does that clarify things? I'll reexamine the language I used there to try and make it clearer

[01:59:04.0761] <Yoav Weiss>
I also added an explainer https://gist.github.com/yoavweiss/c7b61e97e6f8d207be619f87ab96ead5

[02:02:00.0669] <smaug>
Aha, it is the opened page using the header, not opener

[02:03:38.0868] <Yoav Weiss>
yup

[02:06:59.0403] <zcorpan>
document.write can insert stuff into the input stream

[02:15:41.0101] <Maxim Vaarwel>
> <@zcorpan:mozilla.org> document.write can insert stuff into the input stream

It's clear. I ask you to explain why it talks about relative and not absolute offset. Can you provide an example that can might break logic if it will be an absolute offset?

[02:36:14.0592] <Maxim Vaarwel>
> <@zcorpan:mozilla.org> document.write can insert stuff into the input stream

 * It's clear. I ask why it talks about relative and not absolute offset. Can you provide an example that can might break logic if it will be an absolute offset?

[03:32:48.0027] <smaug>
which makes "noopener" quite confusing, when there can be plenty of other references too if the newly loaded page isn't the first one in the window

[03:35:30.0370] <zcorpan>
I don't know if an absolute offset breaks anything

[03:44:32.0689] <Maxim Vaarwel>
> <@zcorpan:mozilla.org> I don't know if an absolute offset breaks anything

Then I do not understand for what purpose this "warning" was written, contrasting the relative with the absolute offset. By chance, do you know the reason for this formulation?

[04:19:37.0956] <annevk>
smaug: I don't think that's true? Assuming the newly loaded page is the one with the new value. COOP can guarantee nobody has a reference to you, by literally creating a new browsing context and such.

[06:12:39.0082] <smaug>
annevk: I mean the terminology. It is not about opener, but about having a new top level thingie which no one can refer to

[06:18:56.0757] <annevk>
smaug: it's a new thingie without an opener? noopener, if you will :p

[06:19:30.0744] <annevk>
I find noopener clearer than omit, but maybe there's something even better

[06:27:49.0888] <smaug>
I must be confused. This is about opening a new same origin window (or loading a new page to existing window), and we want that nothing from outside has references to it, right?

[07:37:02.0400] <Yoav Weiss>
Yeah, that's correct. I'm fine with renaming to something better, if you have an ideas

[07:38:14.0414] <Yoav Weiss>
(although "nothing from outside" doesn't currently include e.g. an iframe parent)

[07:38:47.0701] <Yoav Weiss>
The current scope is really about the opener


2024-06-06
[11:46:46.0194] <Meghan Denny>
in https://webidl.spec.whatwg.org/#prod-AttributeName isnt the possible values for `AttributeNameKeyword` already covered by the `identifier` production?

[11:48:17.0144] <Meghan Denny>
curious why it specifies both are available rules


2024-06-07
[03:05:41.0016] <peterv>
Meghan Denny: I think because of: "If the longest possible match could match one of the above named terminal symbols or one of the other terminal symbols from the grammar, it must be tokenized as the latter." in https://webidl.spec.whatwg.org/#idl-grammar

[11:38:53.0727] <Meghan Denny>
right, okay yeah that makes sense I think I didnt connect 2-and-2 for a sec

[11:39:36.0106] <Meghan Denny>
that means when AttributeName is added to the ast it needs to be distinguishable which one it matched as

[11:40:29.0361] <Meghan Denny>
that was the part I was looking for but I can read the doc more to find out

[11:44:15.0943] <Meghan Denny>
<https://webidl.spec.whatwg.org/#idl-attributes> doesnt mention it so maybe not?

[11:46:15.0069] <Meghan Denny>
oh <https://webidl.spec.whatwg.org/#idl-names> is enlightening too


2024-06-12
[01:00:55.0920] <annevk>
zcorpan: https://github.com/whatwg/mimesniff/pull/190 next time use the Meta: prefix for pure xref changes

[01:19:37.0352] <zcorpan>
annevk: ok, sorry. I looked for previous "export" PRs and saw the Editorial prefix

[01:23:35.0252] <annevk>
Interesting, I think we only do that if there's also editorial nits contained within

[06:29:23.0229] <Luke Warlow>
Am I correct in saying that SVGScriptElement has basically no concrete spec? There's no equivalent of HTML's [prepare the script element](https://html.spec.whatwg.org/#prepare-the-script-element)  for example?

[06:34:56.0310] <Ms2ger>
Luke Warlow: html links to https://www.w3.org/TR/SVGMobile12/script.html#ScriptContentProcessing

[06:37:24.0064] <Luke Warlow>
Eek 2008 üòÖ, that bit seems to have gone missing in the latest SVG spec. At least it gives me *something* to link to.

[06:42:44.0433] <Luke Warlow>
https://html.spec.whatwg.org/#parsing-main-incdata - another question, does the step about `An end tag whose tag name is "script"` also apply to SVG script? Or is the parsing for SVG contexts specced somewhere else?

[06:50:22.0962] <Ms2ger>
I think maybe it can't be an svg one at that point? I found it at https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign

[06:52:58.0121] <Luke Warlow>
> <@ms2ger:igalia.com> I think maybe it can't be an svg one at that point? I found it at https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign

Ah perfect thanks, that's exactly what I needed


2024-06-13
[19:33:22.0690] <sideshowbarker>
About https://github.com/mdn/content/pull/34087/files, I guess that behavior is required per the spec?

That is, specifically this part:

> `<meta>` redirect happens after the page is _completely loaded_, which is after all scripts have executed

[19:33:49.0486] <sideshowbarker>
See also the related issue at https://github.com/mdn/content/issues/7859

[19:46:57.0991] <sideshowbarker>
As far as I can see from looking just now, none of the loading steps in https://html.spec.whatwg.org/multipage/document-lifecycle.html#document-lifecycle actually reference handling for `meta http-equiv="refresh"` (instead, only handling for the `Refresh` header) ‚Äî and https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh doesn‚Äôt state _when_ in the loading process the _‚Äúshared declarative refresh steps‚Äù_ must be run _in the `meta http-equiv="refresh"` case_.

[19:51:56.0101] <sideshowbarker>
I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv="refresh"` should be handled in the loading process in the same way that the `Refresh` header is handled ‚Äî¬†but that doesn‚Äôt seem to be at all what the spec actually says (instead, it‚Äôd sort of be backward with the respect to how the spec actually does define the relationship between `meta http-equiv="refresh"` and `Refresh` ‚Äî

> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).

[19:52:30.0380] <sideshowbarker>
 * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv="refresh"` should be handled in the loading process in the same way that the `Refresh` header is handled ‚Äî¬†but that doesn‚Äôt seem to be at all what the spec actually says (instead, it‚Äôd sort of be backward with the respect to how the spec actually does define the relationship between the two ‚Äî

> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).

[19:53:07.0761] <sideshowbarker>
 * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv="refresh"` should be handled in the loading process in the same way that the `Refresh` header is handled ‚Äî¬†but that doesn‚Äôt seem to be at all what the spec actually says (instead, it‚Äôd sort of be backward with the respect to how the spec actually does define the relationship between the two) ‚Äî

> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).

[19:53:53.0828] <sideshowbarker>
 * I guess https://html.spec.whatwg.org/multipage/document-lifecycle.html#refresh could be possibly be sort of intentionally misread to state that `meta http-equiv="refresh"` should be handled in the loading process in the same way that the `Refresh` header is handled ‚Äî¬†but that doesn‚Äôt seem to be at all what the spec actually says (instead, it‚Äôd sort of be backward with the respect to how the spec actually *does* describe the relationship between the two) ‚Äî

> The `Refresh` HTTP response header is the HTTP-equivalent to a [meta](https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element) element with an [http-equiv](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv) attribute in the [Refresh state](https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh). It takes [the same value](https://html.spec.whatwg.org/multipage/semantics.html#conformance-attr-meta-http-equiv-refresh) and works largely the same. Its processing model is detailed in [create and initialize a Document object](https://html.spec.whatwg.org/multipage/document-lifecycle.html#initialise-the-document-object).

[19:55:39.0475] <sideshowbarker>
 * About https://github.com/mdn/content/pull/34087/files, <del>I guess that behavior is required per the spec?</del> I can‚Äôt find where in the spec that behavior is defined.

That is, specifically this part:

> `<meta>` redirect happens after the page is _completely loaded_, which is after all scripts have executed

[22:15:14.0097] <sideshowbarker>
OK, it‚Äôs since been pointed out to me that the relevant requirements are in fact already in the spec, in the definition of _‚Äúa refresh is said to have come due‚Äù_ in step 13 of https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-refresh

> For the purposes of the previous paragraph, a refresh is said to have come due as soon as the later of the following two conditions occurs:
>
> - At least time seconds have elapsed since document's [completely loaded time](https://html.spec.whatwg.org/multipage/document-lifecycle.html#completely-loaded-time), adjusted to take into account user or user agent preferences.
> - If meta is given, at least time seconds have elapsed since meta was [inserted into the document](https://html.spec.whatwg.org/multipage/infrastructure.html#insert-an-element-into-a-document) document, adjusted to take into account user or user agent preferences.

[00:37:27.0455] <bkardell>
annevk: https://github.com/whatwg/html/issues/10407#issuecomment-2164768308

 i feel like i did answer the actual question you asked about what happened to it, which is all i was trying to add.. üòã

[00:38:21.0593] <bkardell>
I guess your question that remains is like "has the wg reached out to/coordinated with/considered them?" Is that right?"

[00:38:35.0309] <bkardell>
* I guess your question that remains is like "has the wg reached out to/coordinated with/considered them?" Is that right?


[01:28:14.0215] <sideshowbarker>
keithamus: About details auto-expand in GH issues, it still doesn‚Äôt seem to be working in Chrome ‚Äî and my patch at https://github.com/primer/css/pull/2624 not been merged yet

[01:34:05.0988] <smaug>
krosylight: I think that star change is actually a bit different, since it is highlighted because the page gets bookmarked. So the process there is rather indirect 

