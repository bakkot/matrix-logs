2024-06-01
[23:35:07.0599] <Maxim Vaarwel>
Hello, could someone tell what does mean:
> The insertion point is relative to the position of the character immediately after it, it is not an absolute offset into the input stream.

Why not absolute?

[23:52:04.0191] <sideshowbarker>
PSA: About https://git-pulse.github.io/snapshots/ — a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.

The Chromium and Gecko mirrors don’t use GitHub for patch reviews, so the PR stats for them aren’t relevant — but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate —

- 13131 commits to main per month
- 1310 unique committers per month
- 11738 total unique committers over the entire repo history
- 49 unique new first-time committers each month


[23:55:40.0448] <sideshowbarker>
 * PSA: About https://git-pulse.github.io/snapshots/ — a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.

The Chromium and Gecko mirrors don’t use GitHub for patch reviews, so the PR stats for them aren’t relevant — but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate —

- 13131 commits to main _per month_
- 1310 unique committers _per month_
- 11738 total unique committers over the entire repo history
- 49 unique new first-time committers each month


2024-06-03
[01:28:17.0853] <annevk>
sunil: I don't know.

[01:40:43.0573] <annevk>
sunil: I think you're correct that it's supposed to work although I'm not sure to what extent we actively considered shared/service workers at the time. I don't recall.

[01:42:20.0539] <sunil>
Thanks annevk, Do you know who could have more idea on this?

[01:45:25.0990] <sunil>
annevk: I am implementing this in Firefox and trying to check if it would be helpful to extend the wpt to  service workers as well. It wouldn't add much value if other browsers do not fully support it for workers though.

[02:35:03.0285] <Domenic>
> <@sideshowbarker:matrix.org> PSA: About https://git-pulse.github.io/snapshots/ — a while back I added the WebKit repo to the set of repos it tracks, and yesterday I added the https://github.com/chromium/chromium mirror and https://github.com/mozilla/gecko-dev mirror.
> 
> The Chromium and Gecko mirrors don’t use GitHub for patch reviews, so the PR stats for them aren’t relevant — but the committer stats are. And the [Chromium numbers](https://git-pulse.github.io/snapshots/chromium-chromium-2024-05-31-pulse.html) are [so exceptional](https://git-pulse.github.io/snapshots/?project=chromium_chromium) that it makes me wonder if what my tool is seeing and reporting is actually accurate —
> 
> - 13131 commits to main _per month_
> - 1310 unique committers _per month_
> - 11738 total unique committers over the entire repo history
> - 49 unique new first-time committers each month

These numbers seem pretty believable to me.

[03:06:46.0596] <annevk>
sunil: I suspect the most straightforward way to find out is to write those tests and run them

[03:07:28.0294] <sideshowbarker>
> <@domenicdenicola:matrix.org> These numbers seem pretty believable to me.

OK — good to have that confirmation. And I’m glad now to have finally added the repo to set that tool monitors. The numbers are more interesting relative to other projects (beyond just the absolute numbers)

[04:03:10.0013] <sideshowbarker>
About the test at https://wpt.fyi/results/inert/inert-and-find-flat-tree.html — question: is _“Text inside a dialog inside a shadowroot”_ defined as inert per-spec?

[04:04:14.0417] <sideshowbarker>
correction: “Text _slotted into_ a dialog which is inside a shadowroot should be findable” defined as inert?

[04:04:24.0203] <sideshowbarker>
 * correction: Is “Text _slotted into_ a dialog which is inside a shadowroot should be findable” defined as inert?

[04:04:36.0759] <sideshowbarker>
 * correction: Is “Text _slotted into_ a dialog which is inside a shadowroot” defined as inert?

[04:06:44.0993] <sideshowbarker>
 * About the test at https://wpt.fyi/results/inert/inert-and-find-flat-tree.html — <del>question: is _“Text inside a dialog inside a shadowroot”_ defined as inert per-spec?</del>

[04:10:31.0168] <sideshowbarker>
Luke Warlow: ↑ (if you happen to know — since I think you may have recently been working on something that you were running the inert test cases to check against)

[04:18:21.0565] <Luke Warlow>
Apologies I'm not sure about that, I think the inert test I was looking at was using a test driver API that was changed. So it was tangential to the inert spec

[12:16:17.0702] <elf-pavlik (elf Pavlik)>
Hello, what would be equivalent in browser's `fetch` to what nodejs `undici` supports with `dispatcher: new Agent({ bodyTimeout: 0 })`. This way one can disable the default 300s body timeout. 
I have an example of long lived streaming responses which I would also like to have working in the web browser https://github.com/elf-pavlik/sosy24/blob/main/streaming-http.mjs

[12:18:43.0857] <elf-pavlik (elf Pavlik)>
relevant `undici` docs https://undici.nodejs.org/#/docs/api/Dispatcher?id=parameter-dispatchoptions


2024-06-04
[02:19:29.0628] <Jake Archibald>
annevk: if there somewhere I can read about the current state of ITP in Safari? Eg double-keying and cookie lifetimes in various contexts (eg iframes, different kinds of popups, the kinds of interactions that change the behaviour)

[02:19:38.0803] <Jake Archibald>
 * annevk: is there somewhere I can read about the current state of ITP in Safari? Eg double-keying and cookie lifetimes in various contexts (eg iframes, different kinds of popups, the kinds of interactions that change the behaviour)

[03:17:15.0667] <annevk>
Jake Archibald: suspect https://webkit.org/blog/category/privacy/ is your best bet as far as webkit.org goes, not sure about outside documentation

[03:19:15.0631] <Jake Archibald>
annevk: hmm, I see stuff like https://webkit.org/blog/9521/intelligent-tracking-prevention-2-3/, but that's just a changelog as far as I can tell. Is it expected that folks go through all these changelogs and manually figure out how it works today, or is that documented somewhere else?

