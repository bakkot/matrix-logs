2024-05-01
[17:07:37.0418] <christianmx>
ok, thanks for all 😉

[10:58:39.0982] <Adrian R.>
> <@bkardell:igalia.com> Idk if it were me i would probably follow things merged in the last week in PRs https://github.com/whatwg/html/pulls?q=is%3Apr+is%3Aclosed

Thanks for this, I've also been wanting to ask the same question

[11:35:51.0172] <Domenic>
I might be missing something, but I think the list of closed PRs will be almost always worse than https://github.com/whatwg/html/commits/main/ . The commits list has better titles in particular. And it only includes accepted changes.

[11:36:16.0120] <Domenic>
I guess the closed PRs list has labels, which are used a bit inconsistently but might be helpful.


2024-05-02
[00:54:44.0773] <annevk>
Yeah, the commits are definitely more curated than the PRs (and we try to make the log fairly scannable as well), though the PRs have a lot more information if you need additional context.

[01:00:49.0059] <sideshowbarker>
Video link for the triage meeting?

[01:04:18.0044] <krosylight>
> <@sideshowbarker:matrix.org> Video link for the triage meeting?

Just heard from smaug that it's just a remnant of an old meeting, no actual meeting now

[01:04:43.0403] <sideshowbarker>
Aha, thanks

[01:05:16.0040] <smaug>
there is another one way later today (or rather, early tomorrow)

[01:05:45.0720] <smaug>
 * there is another meeting way later today (or rather, early tomorrow)

[01:22:58.0784] <annevk>
Yeah, the meeting is in 15h - 22min

[01:23:24.0121] <annevk>
(I'll be sleeping through it per usual.)

[07:22:30.0980] <hsivonen>
annevk: Have you noticed https://www.ietf.org/archive/id/draft-ietf-emailcore-as-09.html#name-use-and-validation-in-html- and https://www.ietf.org/archive/id/draft-ietf-emailcore-as-09.html#name-use-of-addresses-in-top-lev ?

[07:34:40.0058] <annevk>
That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

[12:00:48.0693] <Jake Archibald>
annevk: do you know off the top of your head how sandboxed data-url workers are? Are they entirely originless?

[12:01:42.0537] <Jake Archibald>
Trying to figure out if it's a safe place to run 3p code. Or if there's a benefit of putting a worker in a sandboxed iframe instead

[16:44:40.0040] <smaug>
jarhar: by any chance, have you checked how often select (size=1) has been used in iframes which are too small to show the whole popup - meaning that in current desktop browsers the popup covers also some of the parent document?

[16:45:23.0256] <smaug>
(I did find some instances of such cases when we were considering to use content processes for select popup rendering)

[16:58:26.0682] <smaug>
(the new select would be of course opt-in)


2024-05-03
[17:14:36.0492] <jarhar>
i dont think we have usecounters for that particular case

[17:15:08.0874] <jarhar>
the new select would be a regular element which gets popover behavior, so it wouldnt escape outside its frame 

[17:16:19.0953] <smaug>
right

[17:20:02.0972] <smaug>
jarhar: does the parser allow anything inside <option> ?

[17:20:25.0276] <smaug>
 * jarhar: does the parser allow all the possible elements inside \<option> ?

[17:21:19.0400] <smaug>
oh, that  would be approach 3

[17:22:09.0924] <jarhar>
my proposal would allow everything in option

[17:23:49.0914] <smaug>
jarhar: hmm, what is the difference between 2 and 3 then? 2 requires use of datalist but 3 wouldn't since one could just use anything inside option?

[17:27:07.0129] <jarhar>
option 2 doesnt relax the parser at all except within button and datalist tags. so the following would be parsed in option 3, but option 2 would continue to throw away the div:
<select>
  <option>
    <div>hello

[17:27:16.0054] <jarhar>
ah the html i wrote is gone

[17:27:58.0051] <jarhar>
select
  option
    div
      text node

[17:28:14.0365] <jarhar>
option 2 would do what the parser currently does here and turn it into this

[17:28:20.0647] <jarhar>
select
option
text node

[17:28:52.0956] <jarhar>
to get the div in option 2 you have to wrap the option in a datalist, which also acts as the popover element

[17:30:21.0400] <smaug>
and still one more question today - before it is getting too late for me. If one doesn't use `<button>` inside `<select>`, what is the expected behavior? Browser would effectively have button as part of internal shadow DOM and that button has then `<selectedoption>` ?

[17:31:36.0258] <jarhar>
yes, but in my current implementation we just copy the text content from the selected option rather than having a full on selectedoption element so we dont have unsanitized content in the ua shadowroot

[17:31:39.0717] <jarhar>
option 2 is implemented in chrome behind experimental web platform features if you want to try it out

[17:32:24.0872] <jarhar>
you just have to add appearance:base-select to the select element to make it render the new stuff

[17:32:59.0511] <smaug>
oh, text content. That is something what was unclear in the explainer, since in one place it is talking about text content and in other place cloning

[17:33:11.0842] <smaug>
"<selectedoption> - The element which contains the text of the currently selected option. Every time that the user selects an option, the browser will replace the text content of this element with the text content of the selected option."

[17:33:29.0274] <smaug>
"The <selectedoption> element enables developers to declaratively clone the content of the selected <option> element to the button and to style it distinctly from the <option>"

[17:34:54.0039] <jarhar>
ah thanks for pointing that out ill fix it right away

[17:35:14.0629] <jarhar>
when the author used the selectedoption element, it clones the node not just the text content

[17:35:24.0382] <jarhar>
*uses

[17:36:41.0782] <smaug>
ok, and that is the reason why https://open-ui.org/components/selectlist/#rich-content-in-options has perhaps a bit surprising behavior. The image isn't part of the selected option.

[17:37:28.0229] <jarhar>
yeah thats because html content doesnt include the selectedoption element

[17:38:18.0193] <jarhar>
if we end up using the not yet implemented sanitizer api to check the content before replacing it, then we can put it in the ua shadowroot by default and youll get the "rich content" without replacing the button

[17:51:37.0191] <smaug>
https://open-ui.org/components/selectlist/#customizing-basic-styles something adds the arrow to the button, but it is not added in https://open-ui.org/components/selectlist/#rendering-the-option-differently-in-the-button 

[22:22:17.0633] <annevk>
Jake Archibald: they use an opaque origin, but both them and sandboxed iframes won't defend you against Spectre attacks in current browser engines

[08:01:02.0337] <jarhar>
thanks, i fixed it by removing the button tag from the example which has a down arrow. the down arrow is inside the button element in the UA shadowroot, so you don't get it when you provide your own button tag.


2024-05-06
[05:06:50.0552] <hsivonen>
> <@annevk:matrix.org> That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

I think it's a description of how WebKit interpreted what HTML says. Arguably, the HTML spec test supports better what Blink does, and to construe the IETF draft concern to cover Blink, one would have to assume it to mean Blink using the transitional mode for `input type=email`. As for the on-issue discussion, so far, I'm failing to steer the discussion to my specific questions about the rules. Evidently, the current spec text isn't clear enough about "the rules", since Blink, Gecko, and WebKit all have different interpretations.

[05:07:27.0938] <hsivonen>
> <@annevk:matrix.org> That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

 * I think it's a description of how WebKit interpreted what HTML says. Arguably, the HTML spec text supports better what Blink does, and to construe the IETF draft concern to cover Blink, one would have to assume it to mean Blink using the transitional mode for `input type=email`. As for the on-issue discussion, so far, I'm failing to steer the discussion to my specific questions about the rules. Evidently, the current spec text isn't clear enough about "the rules", since Blink, Gecko, and WebKit all have different interpretations.

[05:11:42.0258] <hsivonen>
Anyway, it's bad that Hixie didn't write down the rationale for making up non-RFC local-part syntax. My findings from today are: 1) Fastmail front end does not reject consecutive dots but back end refuses to go through with sending. 2) Apple Mail app warns about consecutive dots but allows the user to send anyway. 3) iCloud back end tries to send out consecutive dots. 4) Gmail rejects incoming consecutive dots despite ignoring the dots in mailbox matching for RFC-compliantly-dotted incoming addresses.

[05:13:26.0526] <hsivonen>
Since, Fastmail gets away with refusing to send to addresses with consecutive dots, being able to send to consecutive-dot addresses probably isn't a competitiveness-level mail-compat issue. Since the Apple stack enables sending to addresses with consecutive dots, it's not the case that email software would universally block consecutive dots.

[05:45:03.0967] <annevk>
hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

[06:59:27.0322] <hsivonen>
> <@annevk:matrix.org> hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

I though that it was relevant to deal with if we're taking the time to change implementations of the local part, but I guess it was unconstructive that I mentioned the dots in my list of questions. Sorry. I skipped that question in my follow-up to your domain-part answers.

[06:59:36.0765] <hsivonen>
> <@annevk:matrix.org> hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

 * I thought that it was relevant to deal with if we're taking the time to change implementations of the local part, but I guess it was unconstructive that I mentioned the dots in my list of questions. Sorry. I skipped that question in my follow-up to your domain-part answers.

[07:02:29.0059] <annevk>
hsivonen: oh, that criticism wasn't necessarily aimed at you. It's been a somewhat recurring theme of the thread.

[07:29:25.0632] <freddy>
annevk: Given the holiday in Germany this Thursday, are you attending the WHATNOT meeting? I'm interested in the agenda item about integrity, but would propose the meeting topic will be postponed... https://github.com/whatwg/html/labels/agenda%2B

[07:33:28.0641] <annevk>
freddy: no I declined. I'm taking Friday off too.

[08:02:42.0023] <freddy>
Panos Astithas: Hi!, can we please postpone the integrity agenda item from WHATNOT this week? ☝️

[08:27:11.0360] <Panos Astithas>
Of course, I'll carry it over to the next meeting unless you tell me otherwise.

[08:34:35.0904] <freddy>
wfm

[13:23:08.0908] <smaug>
keithamus: this is still a very vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

[13:23:18.0323] <smaug>
 * keithamus: this is still a _very_ vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

[13:54:24.0380] <keithamus>
Interesting… can you say more? 

[14:22:03.0771] <Richard Gibson>
I think I disagree with this reasoning; the question of "_which element experienced the event?_" is answered not by failing to bubble but by the `target` property. Failing to bubble just makes delegation difficult for generally no good reason (as is the case for e.g. <details> toggle)

[15:00:21.0247] <Luke Warlow>
> <@smaug:mozilla.org> keithamus: this is still a _very_ vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

Is a use case something like a modal dialog controlled by the URL? It's an interesting idea but I wonder if it's better solved by general declarative solutions (e.g. an initially open modal dialog) or by some declarative URLPattern -> action map separate from invokers?

[15:37:21.0375] <zcorpan>
smaug: maybe CloseWatcher integration is better suited?

[15:41:02.0307] <smaug>
Some URL stuff might work, since that works with session history. And yes, possibly like with dialogs, but also for other (not yet defined) declarative features

[15:43:08.0493] <zcorpan>
smaug: https://html.spec.whatwg.org/#close-requests-and-close-watchers

[15:43:23.0734] <zcorpan>
or maybe I don't follow :)

[15:43:58.0729] <smaug>
Not sure that works with random declarative stuff. I want something which can take the page back to some earlier state without any use of JS

[15:49:10.0001] <Luke Warlow>
BFCache does that to some extent. But yeah it'd be interesting to have a way to codify URL -> "app" state

[15:49:45.0243] <Luke Warlow>
Having said that I think the pattern of using URLs for dialogs was partly a result of the lack of a close watcher API.


2024-05-07
[03:11:35.0994] <csarven>
In say the references section of an article, `<cite><a></a></cite>` feels intuitive to me for some reason, but I do find `<a><cite></cite></a>` perhaps more accurate. The former cites the link, the latter links to the citation.

Could one pattern be more accurate in a certain context, e.g., in the body of an article or references section or elsewhere.

Anyone have thoughts on this or can point me to some discussion?

[03:11:48.0764] <csarven>
* In say the references section of an article, `<cite><a href></a></cite>` feels intuitive to me for some reason, but I do find `<a href><cite></cite></a>` perhaps more accurate. The former cites the link, the latter links to the citation.

Could one pattern be more accurate in a certain context, e.g., in the body of an article or references section or elsewhere.

Anyone have thoughts on this or can point me to some discussion?

[04:22:10.0431] <annevk>
Luca Casonato: any chance you can tackle https://github.com/whatwg/html/issues/6768?

[04:59:59.0622] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: any chance you can tackle https://github.com/whatwg/html/issues/6768?

sure: https://github.com/whatwg/html/pull/10327

do you know if there is implementer interest from chromium or gecko? considering safari already implements this behaviour, can i count that as implementer interest? if we have two interested implementers i can write some tests

[05:09:56.0946] <Luca Casonato>
Also, still awaiting reviews for:
- https://github.com/whatwg/webidl/pull/1397
- https://github.com/whatwg/streams/pull/1310

[05:10:15.0252] <Luca Casonato>
 * Also, still awaiting reviews for:

- https://github.com/whatwg/webidl/pull/1397
- https://github.com/whatwg/streams/pull/1310

(and more responses on implementer interest)

[05:57:38.0109] <annevk>
Luca Casonato: yeah, given that web developers seem to prefer it and WebKit already does it, that seems fine

[06:00:10.0849] <annevk>
Luca Casonato: I think WebKit is already interested in async iterable for ReadableStream (but not yet implemented iirc) so seems fine to carry that over to the Web IDL version

[06:00:37.0354] <annevk>
Luca Casonato: review is prolly best done by Mattias Buelens and Domenic 

[06:02:31.0001] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: I think WebKit is already interested in async iterable for ReadableStream (but not yet implemented iirc) so seems fine to carry that over to the Web IDL version

Note this is not `ReadableStream` implementing async iterable, but right now this is just a spec refactor - it's for being able to pass async iterables to web APIs (initially refactoring `ReadableStream.from`), but then in the future also https://github.com/whatwg/fetch/issues/1291

[06:03:11.0454] <Luca Casonato>
The "let an interface implement async iterable" is already in webidl - there was previously just not the reverse ("let a web api take an async iterable as an argument")

[06:03:14.0890] <Luca Casonato>
 * The "let an interface implement async iterable" is already in webidl - there was previously just not the reverse ("let a web api take an async iterable as an argument"

[06:11:37.0925] <annevk>
Luca Casonato: fair, but still good. I suppose I should double check for the Fetch change, but I don't foresee any issue there either.

[09:39:07.0174] <annevk>
https://github.com/whatwg/html/issues/4562 is very reminiscent of early "let's fix the URL parser" discussions, and not in a good way. Geez.

[09:54:04.0161] <sideshowbarker>
I can't see that jrlevine is actually contributing anything constructive at all there, and definitely not responding to any of the specific questions for which feedback was requested. And he's being outright insulting

[11:21:53.0293] <Meghan Denny>
I see the former as more accurate since the citation might include other text as well, not just the link and link text. eg picture is what im thinking of

[16:20:59.0167] <smaug>
Btw, CSS/WHATWG meeting overlaps PointerEvents meeting

[16:30:06.0042] <Alan Stearns>
smaug: does the PointerEvents meeting have a scheduled time we should avoid?

[16:30:51.0349] <smaug>
Alan Stearns: https://www.w3.org/groups/wg/pointer-events/calendar/ 

[16:36:45.0503] <smaug>
was the plan for CSS/WHATWG meeting to be also bi-weekly? If so, could it be on those weeks when there isn't PEWG?

[16:41:31.0367] <Alan Stearns>
No plan of record yet. I think once a month might be sufficient. We can definitely schedule whatever it ends up being to avoid PEWG conflicts


2024-05-08
[19:17:18.0723] <Domenic>
zcorpan: can I get editor review and/or Mozilla approval for https://github.com/whatwg/html/pull/10291 ? Final close watcher tweak

[01:19:29.0233] <smaug>
dandclark: thanks for that comment about getTargetRanges(). I'm pinging masayuki to ensure he notices that.

[02:10:20.0585] <Luke Warlow>
> <@domenicdenicola:matrix.org> zcorpan: can I get editor review and/or Mozilla approval for https://github.com/whatwg/html/pull/10291 ? Final close watcher tweak

I'm gonna pick the dialog closedby attribute back up now that close watcher is stable. So might be a bit more to come but it shouldn't impact existing implementation.

[02:10:32.0183] <Luke Warlow>
* I'm gonna pick the dialog closedby attribute back up now that close watcher is stable. So might be a bit more to come but it shouldn't impact implementation of existing spec.

[05:26:10.0300] <annevk>
Might be of interest to URL parser fans: https://annevankesteren.nl/2024/05/undue-base-url-influence

[05:29:26.0323] <sideshowbarker>
_“end users trump theory”_ could link to https://www.w3.org/TR/html-design-principles/#priority-of-constituencies …

[09:39:19.0854] <csarven>
> <@meghanbun:matrix.org> image.png

Good point, thanks.


2024-05-09
[03:25:52.0716] <smaug>
It is documented somewhere, I think, that the priority order is usually end users, then web devs and then implementers. But where?

[03:27:18.0151] <sideshowbarker>
smaug: https://www.w3.org/TR/html-design-principles/#priority-of-constituencies

[03:28:24.0743] <smaug>
thanks

[10:49:35.0938] <keithamus>
Curious if there's any issues/literature I can read about the ability to create a Range selecting part of an input/textarea's value? Right now we have to create a hidden element, copy over the computed styles and create ranges within that.

[14:11:02.0780] <smaug>
keithamus: selecting part of input's value? But that value isn't part of dom so it can't be selected 

[14:15:17.0170] <smaug>
I assume you can't for some reason rely on input.selectionStart/End

[14:34:16.0723] <keithamus>
smaug: predominately we want to get the caret position to place popover menus (like the @ mention autocomplete). We have code to do this but an engineer recently wanted to refresh it and I wondered if there was a web platform solution, or some movement towards one. 

[14:35:29.0477] <smaug>
And for some reason contenteditable isn't an option?

[14:35:30.0203] <keithamus>
A range is useful because we can getBoundingClientRect to get coords to place the popover. 

[14:35:46.0804] <keithamus>
Yes I’d say it’s not an option. 

[14:38:45.0494] <smaug>
(it would be so nice if github didn't take so many of browser internal shortcut keys 😉  Just trying to open devtools to see what the DOM looks like)

[14:39:22.0757] <smaug>
ah, it is really textarea

[14:43:20.0197] <smaug>
I wonder if document itself should have something like getCaretRect(). It would return something reasonable no matter where the caret is - inside some UA widget or designMode or contenteditable

[15:59:57.0941] <zcorpan>
> <@domenicdenicola:matrix.org> zcorpan: can I get editor review and/or Mozilla approval for https://github.com/whatwg/html/pull/10291 ? Final close watcher tweak

reviewed


2024-05-10
[23:59:39.0870] <bakkot>
annevk (or whoever): is the process that I should now go file bugs for https://github.com/whatwg/fetch/pull/1753 against the various implementations?

[00:04:41.0794] <sideshowbarker>
bakkot: yeah, whatwg spec PR authors are the ones who typically raise the associated browser bugs for their spec PRs — unless somebody else has gotten to it before them

[00:07:54.0957] <bakkot>
ok cool

[00:08:20.0756] <sideshowbarker>
by the way, about the tests at https://github.com/web-platform-tests/wpt/pull/46198, isn’t an IDL test also needed?

[00:08:37.0298] <bakkot>
I guess I'll open the PRs for adding this method to Blob and PushMessageData also before filing

[00:08:55.0033] <bakkot>
sideshowbarker: I don't know what "an IDL test" means in this context

[00:09:10.0707] <sideshowbarker>
ah, gimme a second — I’ll get you a link

[00:09:11.0033] <bakkot>
I just grepped for `arrayBuffer` and added similar tests for `bytes`

[00:10:58.0582] <sideshowbarker>
https://github.com/web-platform-tests/wpt/tree/master/interfaces is what I mean

[00:11:46.0820] <sideshowbarker>
after changes get merged into the spec, those get automatically updated — but not for PRs

[00:12:04.0190] <sideshowbarker>
but maybe it’s not needed for PRs, I dunno

[00:12:28.0419] <bakkot>
yeah the readme/files claim the things in that directory are generated

[00:13:07.0869] <sideshowbarker>
right — they eventually get overwritten eventually at least

[00:14:00.0211] <sideshowbarker>
but an implementor working on implementing your change might want to have the interface/IDL tests for it to use while they’re working on the change

[00:14:29.0822] <sideshowbarker>
some projects will land changes from PRs before they’re merged into the spec (WebKit does at least)

[00:14:48.0972] <sideshowbarker>
 * some projects sometimes land changes from PRs before they’re merged into the spec (WebKit does at least)

[00:16:04.0981] <sideshowbarker>
that said, I don’t know if other PR authors add the interface/IDLs WPTs in cases where they’re adding new methods to the spec

[01:13:50.0986] <Ms2ger>
Yeah, the bot will update the idl test once the spec is actually updated, so no manual work necessary

[03:43:57.0332] <keithamus>
> <@smaug:mozilla.org> I wonder if document itself should have something like getCaretRect(). It would return something reasonable no matter where the caret is - inside some UA widget or designMode or contenteditable

getCaretRect() sounds super helpful! Would solve a lot of issues we have!

[05:54:34.0642] <Ms2ger>
So you can do `(new Int32Array(10))[2]`, but I keep overlooking where the spec for this is. Does anyone have a pointer?

[06:14:33.0943] <arai>
is it about whether to treat the `Int32Array` constructor arguments as length or not?  if so, https://tc39.es/ecma262/#sec-typedarray step 6.b vs 6.c

[06:59:48.0286] <Ms2ger>
No, the `[2]` indexing - sorry for the confusion

[07:14:07.0174] <arai>
then it's https://tc39.es/ecma262/#sec-typedarray-exotic-objects

[07:21:44.0399] <Ms2ger>
Thanks! I kept looking in Indexed Collections and not finding anything


2024-05-13
[23:41:47.0633] <annevk>
bakkot: sideshowbarker: these days I usually ask the person writing the PR to also file the bugs. And mainly focus on review of it all.


2024-05-14
[07:20:54.0217] <Luke Warlow>
https://github.com/whatwg/html/pull/10328 - does this need specific gecko approval or does their positive trusted types position count as enough?

[08:35:16.0040] <zcorpan>
freddy: ^

[12:09:16.0289] <freddy>
I can't answer the question whether the standards position is enough, but I can say that enforcing TT for document.write/ln is fine with me :-)

[16:37:05.0006] <Kelvin Ross>
Install Software Update - Phone Update app and enjoying while using your phone! Link is here...https://play.google.com/store/apps/details?id=com.software.update.phoneupdate




2024-05-15
[02:34:28.0336] <zcorpan>
Luke Warlow: I think the TT standards-position should cover all injection sinks

[04:12:34.0524] <foolip>
annevk: did you see https://github.com/whatwg/html/pull/9841#issuecomment-2100393217? The PR meets the requirements for merging, but I'd like to avoid a messy situation if you strongly disagree with the name and that delays support in WebKit.

[09:01:28.0213] <nolanlawson>
Hi folks, per this comment (https://github.com/web-platform-tests/wpt/pull/45939#issuecomment-2107682596), I am requesting commit access to https://github.com/web-platform-tests/wpt. My GitHub handle is `nolanlawson`. Thank you in advance!


2024-05-16
[01:58:08.0237] <zcorpan>
annevk: on the throttling iframe privacy issue, see https://github.com/w3c/IntersectionObserver/issues/508#issuecomment-1545646474

[03:23:17.0397] <zcorpan>
I've found nothing that does anything with the "download" value for request initiator: https://html.spec.whatwg.org/#downloading-resources:concept-request-initiator - annevk do you know why it exists?

[04:18:34.0180] <annevk>
foolip: it was discussed and I expressed that WebKit would like some more time

[04:18:47.0782] <annevk>
 * foolip: it was discussed during WHATNOT and I expressed that WebKit would like some more time

[04:28:24.0238] <annevk>
zcorpan: <a download>

[04:29:11.0787] <annevk>
nolanlawson: you prolly want to ask in #wpt:matrix.org; not sure how many WPT admins are here

[04:40:41.0151] <zcorpan>
annevk: right, that sets initiator, but nothing later checks for that value afaict

[04:43:46.0120] <zcorpan>
I looked through all usages linked from https://dontcallmedom.github.io/webdex/i.html#initiator%40%40request%40dfn

[04:45:33.0460] <annevk>
zcorpan: maybe look at blame for Fetch? I think it was CSP, but thinking around download has evolved so maybe it's no-op code... (It should really be a property of navigation.)

[04:46:51.0891] <zcorpan>
annevk: ok. Clicking <a download href> doesn't go through the navigate algorithm per spec

[04:48:49.0388] <annevk>
zcorpan: yeah, that's a longstanding issue

[04:51:36.0606] <zcorpan>
annevk: ok I found https://github.com/whatwg/html/issues/5548 , https://github.com/whatwg/html/issues/7718 

[04:54:39.0338] <zcorpan>
annevk: context: https://bugzilla.mozilla.org/show_bug.cgi?id=1862553

[05:45:07.0021] <foolip>
> <@annevk:matrix.org> foolip: it was discussed during WHATNOT and I expressed that WebKit would like some more time

Would you mind also commenting on the issue? Are there notes that could be linked?

[08:39:23.0343] <annevk>
Andreu Botella: could you take a look at https://github.com/web-platform-tests/wpt/pull/46316 please?

[08:40:23.0373] <annevk>
There's a very old unmerged PR from you it might make redundant. You might be best equipped to give some advice on how to proceed.

[08:41:09.0322] <Andreu Botella>
I'll have to refresh my memory on all of that, it's been a while since I looked at that

[09:50:35.0834] <annevk>
foolip: I left a comment now. Not sure about the minutes. I did minute this morning, I was thinking Domenic would post them. I haven't really done any of that before.


2024-05-17
[18:58:05.0928] <sideshowbarker>
Can anybody think of an existing implemented WebIDL interface that has no members?

[19:02:14.0768] <sideshowbarker>
I’m aware of the `FragmentDirective` interface from the scroll-to-text-fragment spec https://wicg.github.io/scroll-to-text-fragment/#feature-detectability and I’ve been trying to figure out how to implement it from the C++ side — and have been failing so far. So it would help if there were some existing no-members IDL interface that’s been implemented, and I could look at the corresponding C++ source.

[00:51:02.0444] <zcorpan>
sideshowbarker: HTMLUnknownElement (though it inherits from HTMLElement)

[00:56:08.0432] <zcorpan>
sideshowbarker: CDATASection

[00:58:25.0062] <sideshowbarker>
ah yeah I had looked at some corresponding C++ source for that, and in that case also, it inherits (from Text)

[00:59:15.0786] <sideshowbarker>
this FragmentDirective thing is a really odd case — an interface that exposes nothing, and inherits from nothing

[01:00:27.0571] <sideshowbarker>
apparently it only exists for the purpose of feature detection, and for possible future use for other things

[01:00:49.0458] <zcorpan>
sideshowbarker: https://www.w3.org/TR/media-source-2/#mediasourcehandle

[01:00:57.0849] <sideshowbarker>
/me looks

[01:01:32.0844] <zcorpan>
sideshowbarker: https://html.spec.whatwg.org/#workletglobalscope

[01:01:34.0870] <sideshowbarker>
hot diggity dog, that looks more like it

[01:02:13.0681] <zcorpan>
sideshowbarker: https://www.w3.org/TR/webnn/#api-mlgraph

[01:03:07.0188] <zcorpan>
sideshowbarker: https://registry.khronos.org/webgl/extensions/OES_texture_float/

[01:04:59.0951] <zcorpan>
sideshowbarker: If you wonder how I found these, git grep "{\s*};" in wpt/interfaces :)

[01:06:21.0720] <sideshowbarker>
d’oh yeah I hadn’t thought to grep through those (instead just browser sources)

[08:47:08.0354] <sefeng>
annevk: I made some additional changes to the ORB PR to align with what Firefox has implemented. I'd like to close https://github.com/whatwg/fetch/pull/1442 and open a new one because I don't think I can push to annevk/orb directly , Is that ok?

[16:32:00.0620] <Eric Portis (he/him)>
Any examples of how specs turn floats into integers?
I'm specifying a thing (https://github.com/WICG/responsive-image-client-hints/issues/34) where Chrome currently implements ceil(), though arguably the use case would be slightly better served by round(), although it doesn't really matter... mostly want to specify it in a precise way that isn't "do the equivalent of Javascript’s Math.ceil()"


2024-05-18
[02:58:29.0989] <sideshowbarker>
Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in IDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```
Then the bindings generator appears to be trying to do this:

```
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject, *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```
And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).


[02:59:02.0708] <sideshowbarker>
 * Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in IDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject, \
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[02:59:26.0800] <sideshowbarker>
 * Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in IDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```js
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject, \
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[03:00:04.0599] <sideshowbarker>
 * Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in IDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```js
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject,
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[03:01:00.0533] <sideshowbarker>
 * WebIDL JS bindings-generation question: Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in IDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```js
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject,
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[03:01:14.0248] <sideshowbarker>
 * WebIDL JS bindings-generation question: Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in WebIDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective xfragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```js
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject,
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[03:02:02.0531] <sideshowbarker>
 * WebIDL JS bindings-generation question: Any clues as to why JS bindings-generation code would try to generate a callable function for something defined in WebIDL as an attribute?

Specifically, if I’ve updated `Document.idl` to add this:

```webidl
 [SameObject] readonly attribute FragmentDirective fragmentDirective;
```

And in some corresponding C++ sources, for `Document.h`, I’ve just done this:

```
 FragmentDirective fragmentDirective;
```

Then the bindings generator appears to be trying to do this:

```js
RELEASE_AND_RETURN(throwScope, (toJS<IDLInterface<FragmentDirective>>(lexicalGlobalObject,
    *thisObject.globalObject(), throwScope, impl.fragmentDirective())));
```

And I realize that different bindings generators for different engines might do some different things — but I’d assume they should be doing basically the same thing (e.g., in this case, they’d all for some reason try to generate a callable `fragmentDirective()`).

[06:03:29.0450] <Domenic>
That looks to me like it's trying to call a C++ fragmentDirective() function. So to implement the getter for the fragmentDirective JavaScript property, you'd implement a C++ fragmentDirective() function. No real contradiction there.

[06:50:43.0655] <emilio>
sideshowbarker: Domenic is correct. Since JS attributes can generally run arbitrary code it is easier to generate code that calls a function unconditionally even when it's just a plain member or what not


2024-05-20
[19:55:16.0166] <Richard Gibson>
HTML has parsing algorithms at https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#numbers that amount to "_trim any leading TAB/LF/FF/CR/SPACE sequence and use the longest valid remaining prefix_". But HTTP structured field value parsing is much more strict and amounts to requiring Integer input to match regular expression pattern `^-?[0-9]{1,15}$`; see https://www.rfc-editor.org/rfc/rfc8941#name-parsing-structured-fields and subsections for [Item](https://www.rfc-editor.org/rfc/rfc8941#name-parsing-an-item) and [Integer/Decimal](https://www.rfc-editor.org/rfc/rfc8941#name-parsing-an-integer-or-decim).

For _generation_, there's step 16 of https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#rules-for-parsing-floating-point-number-values , step 7 of https://webidl.spec.whatwg.org/#abstract-opdef-converttoint , https://html.spec.whatwg.org/#number-state-(type=number) , https://html.spec.whatwg.org/#cropped-to-the-source-rectangle-with-formatting , and https://html.spec.whatwg.org/#create-a-date-object .

[02:25:23.0425] <Luke Warlow>
https://github.com/whatwg/html/pull/10204 - could I get some eyes on this PR. Editorial to match HTML with an ecmascript proposal wrt HostEnsureCanCompileStrings 

[04:09:54.0096] <sideshowbarker>
Domenic: emilio Thanks much — that all makes sense


2024-05-21
[04:32:32.0613] <freddy>
meacer: Hi! Are you still working on https://github.com/whatwg/fetch/pull/1655?

[10:47:14.0640] <Eric Portis (he/him)>
Are there any ECMAScript things in the bikeshed database?

```
% bikeshed refs --spec=ecma262
[]
```

[11:00:27.0894] <Andreu Botella>
> <@etportis:matrix.org> Are there any ECMAScript things in the bikeshed database?
> 
> ```
> % bikeshed refs --spec=ecma262
> []
> ```

looks like it's `spec=ecmascript`

[11:00:50.0184] <Andreu Botella>
if you're not sure about the name of a spec in the bikeshed database, I think it's always the `shortname` field in https://github.com/w3c/browser-specs/\

[11:00:57.0282] <Andreu Botella>
 * if you're not sure about the name of a spec in the bikeshed database, I think it's always the `shortname` field in https://github.com/w3c/browser-specs

[11:13:09.0037] <Eric Portis (he/him)>
Andreu Botella: ty!

[13:43:01.0598] <Arnau>
Hi, quick question. What's the difference between:
https://html.spec.whatwg.org/multipage/dom.html#document
and
https://dom.spec.whatwg.org/#document

[15:31:36.0353] <TabAtkins>
> <@etportis:matrix.org> Are there any ECMAScript things in the bikeshed database?
> 
> ```
> % bikeshed refs --spec=ecma262
> []
> ```

I should add a "maybe you meant" feature if you specify `--spec` and it doesn't exist in the DB, like I do for biblio references.

[15:32:18.0210] <TabAtkins>
Or just point to `browser-specs`, maybe


2024-05-22
[06:06:19.0207] <smaug>
keithamus: you're planning to do another survey on the attribute names?

[06:07:27.0365] <keithamus>
I’m hesitant because I don’t want it to come across as “the surveys will continue until we get the result we want” 

[06:08:32.0281] <smaug>
ah. Well, I wasn't thinking that. I'm just curious to know the combination of attributes

[06:08:57.0878] <smaug>
 * ah. Well, I wasn't thinking that. I'm just curious to know the combination of attributes, and how people feel about them

[06:10:08.0329] <keithamus>
Yes I agree and I’m also curious. I think perhaps we could if there was a more concrete set of viable candidates? It seems a little pointless to propose an option which one party would object to implementing. 

[06:16:27.0330] <smaug>
If web devs clearly said that clickactiontarget is great (and others aren't), I wouldn't object implementing that 🙂  (but right now I don't know the answer). Perhaps the survey would need to have a bit more concrete examples on how to use the attributes together. I know, it becomes long and probably would get fewer responses - but also whoever does say something, might have thought through the options more.

[06:20:31.0196] <keithamus>
One challenge is that each option in the poll has a 25 character limit which makes it hard to express the full markup.

[06:20:54.0342] <keithamus>
And polls cannot have attached images, meaning it has to be represented in the post or the options 

[06:38:33.0637] <Luke Warlow>
Could we link to a github poll?

[06:39:26.0092] <Luke Warlow>
 * Could we link to a github poll? That way we can provide more context on the github issue. Explain the usecase a bit better (which should avoid people wanting stuff like type="open" not realising that's just an example usage), and get less restrictions on character limits?

[09:02:46.0105] <smaug>
(good that the current command event in Gecko uses [XULCommandEvent](https://searchfox.org/mozilla-central/rev/55944eaee1e358b5443eaedc8adcd37e3fd23fd3/dom/chrome-webidl/XULCommandEvent.webidl) interface - just in case CommandEvent will be added to the web platform.  Some of the attributes of XULCommandEvent might be useful also for invoke|clickaction|command event)

[09:04:50.0462] <smaug>
 * (good that the current command event in Gecko uses [XULCommandEvent](https://searchfox.org/mozilla-central/rev/55944eaee1e358b5443eaedc8adcd37e3fd23fd3/dom/chrome-webidl/XULCommandEvent.webidl) interface - just in case CommandEvent might be added to the web platform.  Some of the attributes of XULCommandEvent might be useful also for invoke|clickaction|command event)

[09:05:09.0137] <smaug>
 * (good that the current command event in Gecko uses [XULCommandEvent](https://searchfox.org/mozilla-central/rev/55944eaee1e358b5443eaedc8adcd37e3fd23fd3/dom/chrome-webidl/XULCommandEvent.webidl) interface - just in case CommandEvent will be added to the web platform.  Some of the attributes of XULCommandEvent might be useful also for invoke|clickaction|command event)

[09:54:18.0245] <keithamus>
There was a few discussions about something like `sourceEvent`.

[09:54:26.0412] <keithamus>
 * There were a few discussions about something like `sourceEvent`.

[12:50:06.0142] <Gabriel Brito>
Hello, folks! On 05/02 I joined the WHATNOT meeting (minutes [here](https://github.com/whatwg/html/issues/10298)) to discuss our ["iframe media playback pausing" proposal] (https://github.com/whatwg/html/issues/10208). The discussion was very helpful, but there were no HTML spec editors present. Some present there to agreed with the proposal's goal and concept, however maybe the proposed API's shape (permission policy) is not the best. One of the suggestions is to have a new `paused` property added HTMLIFrameElement instead of implementing a new permissions policy, for example. What do you think about moving in this direction? Can anyone of the spec editors give us some feedback? BTW, is this the best place to make this type of question? Thanks! :) 

[13:33:14.0211] <Luke Warlow>
Domenic: am I missing something or is step 10 of https://html.spec.whatwg.org/#inner-navigate-event-firing-algorithm wrong? Specifically it checks for transient activation when I think it should be checking for history action user activation instead? Otherwise the navigation API never checks for it, only consumes it which seems erroneous?

[13:44:27.0684] <Luke Warlow>
 * Domenic: am I missing something or is step 10 of https://html.spec.whatwg.org/#inner-navigate-event-firing-algorithm wrong? Specifically it checks for transient activation when I think it should be checking for history action user activation instead? Otherwise the navigation API never checks for it, only consumes it which seems erroneous? 

https://github.com/whatwg/html/issues/10359


2024-05-23
[05:41:27.0242] <zcorpan>
I think <form method=dialog> was probably a mistake. Should have used <button type=closedialog> or so instead without a form

[05:44:01.0129] <zcorpan>
Currently you can't have a dialog within a form and use the declarative way to close it

[05:58:53.0567] <zcorpan>
I suppose invokers fixes it, but it needs explicit invoketarget

[09:12:01.0495] <Luke Warlow>
> <@zcorpan:mozilla.org> I suppose invokers fixes it, but it needs explicit invoketarget

Your idea of an implicit target is definitely an interesting one

[09:31:52.0848] <Luke Warlow>
> <@zcorpan:mozilla.org> I suppose invokers fixes it, but it needs explicit invoketarget

 * Your idea of an implicit target is definitely an interesting one https://github.com/openui/open-ui/issues/1057

[09:33:08.0999] <hsivonen>
annevk: FYI: https://www.unicode.org/review/pri504/

[10:53:15.0948] <keithamus>
👋 in aria we discussed about how `<slot>` elements forbid `role=` and `aria-*` attributes, and I'm curious if there's a compelling reason for this restriction, or if it is something that can be lifted? I know the UA has `slot { display: contents }` but changing that creates a node without any AT exposure which feels strange given how it can be interleaved between other elements that are exposed.

[10:53:22.0363] <keithamus>
 * 👋 in aria-wg we discussed about how `<slot>` elements forbid `role=` and `aria-*` attributes, and I'm curious if there's a compelling reason for this restriction, or if it is something that can be lifted? I know the UA has `slot { display: contents }` but changing that creates a node without any AT exposure which feels strange given how it can be interleaved between other elements that are exposed.


2024-05-24
[19:58:15.0369] <Domenic>
Luke Warlow: Thanks as always for the great PRs. FYI bugfixes are not counted as "editorial". (Same for adding new features, like all the DOM parsing work you've been doing).

[02:09:08.0650] <css5>
Hello there, 

I'm wondering if there is a solution to prevent js/css/images/... to be loaded on other domains. I found this referer solution (https://stackoverflow.com/a/21133555), but is there also another way (which is compatible with `Referrer-Policy: no-referrer`)? I was hoping to find like `X-Frame-Options`, where you can limit iframes to same origin. 
Reason I ask is because I have a multi-domain website and a "only allow css/js/img on same origin"-solution would be nice. Couldn't find something like this in the spec, or am I missing something? 

Thanks!

[02:22:35.0176] <annevk>
css5: `Cross-Origin-Resource-Policy: same-origin` should do the trick.

[02:25:55.0342] <css5>
Exactly what I was looking for, thanks a lot!


2024-05-25
[04:49:21.0443] <jub0bs>
(Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:
* a simpler API,
* better documentation,
* extensive configuration validation,
* a useful debug mode,
* concurrency-safe on-the-fly reconfigurability,
* stronger performance guarantees.

[04:49:49.0574] <jub0bs>
 * (Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation
- a useful debug mode
- concurrency-safe on-the-fly reconfigurability
- stronger performance guarantees.

[04:49:55.0373] <jub0bs>
 * (Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation
- a useful debug mode
- concurrency-safe on-the-fly reconfigurability
- stronger performance guarantees

[04:49:59.0774] <jub0bs>
 * (Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:
- a simpler API
- better documentation
- extensive configuration validation
- a useful debug mode
- concurrency-safe on-the-fly reconfigurability
- stronger performance guarantees

[04:51:28.0441] <jub0bs>
 * (Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation (of origins, header names, etc. and more!)
- a useful debug mode (for ease of troubleshooting CORS issues)
- concurrency-safe on-the-fly reconfigurability (no need for a server restart)
- stronger performance guarantees

[04:51:43.0167] <jub0bs>
 * (Sorry about the shameless plug)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation (of origins, header names, etc. and more!)
- a useful debug mode (for ease of troubleshooting CORS errors)
- concurrency-safe on-the-fly reconfigurability (no need for a server restart)
- stronger performance guarantees

[04:52:46.0226] <jub0bs>
 * (Sorry about the shameless plug; I don't think I've advertised it here yet.)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation (of origins, header names, etc. and more!)
- a useful debug mode (for ease of troubleshooting CORS errors)
- concurrency-safe on-the-fly reconfigurability (no need for a server restart)
- stronger performance guarantees

[06:56:54.0044] <jub0bs>
 * (Sorry about the shameless plug; I don't think I've advertised it here yet.)
[`jub0bs/cors`](https://github.com/jub0bs/cors) is my latest CORS middleware library for Go. Here are some reasons for favouring it over the more popular [`rs/cors`](https://github.com/rs/cors) library:

- a simpler API
- better documentation
- extensive configuration validation (of origins, header names, etc. and more!)
- a useful debug mode (for ease of troubleshooting CORS errors)
- dynamic, concurrency-safe reconfigurability (no need for a server restart)
- stronger performance guarantees


2024-05-26
[09:07:58.0737] <Maxim Vaarwel>
Good evening to everyone.

The spec has the next point in [contributes a script-blocking style sheet](https://html.spec.whatwg.org/multipage/semantics.html#contributes-a-script-blocking-style-sheet): 
> The user agent hasn't given up on loading that particular style sheet yet. A user agent may give up on loading a style sheet at any time.

Could anyone clarify in which cases user agent give up on loading a style sheet?



[09:08:34.0013] <Maxim Vaarwel>
 * Good evening to everyone.

The spec has the next point in [contributes a script-blocking style sheet](https://html.spec.whatwg.org/multipage/semantics.html#contributes-a-script-blocking-style-sheet):

> The user agent hasn't given up on loading that particular style sheet yet. A user agent may gives up on loading a style sheet at any time.

Could anyone clarify in which cases user agent give up on loading a style sheet?

[10:03:49.0516] <emilio>
Maxim Vaarwel: That seems to allow the optimization of having some sort of network timeout to unblock script execution. I don't think Gecko at least implements anything like that, I don't think other engines do either, but I could be wrong

[10:04:38.0007] <emilio>
Maxim Vaarwel: blaming the spec points at similar wording being there for at least 10 years (though Dominic Farolino touched it recently). If nobody implements such a thing we should probably just remove that from the spec.

[13:50:27.0884] <Maxim Vaarwel>
> <@emilio:mozilla.org> Maxim Vaarwel: That seems to allow the optimization of having some sort of network timeout to unblock script execution. I don't think Gecko at least implements anything like that, I don't think other engines do either, but I could be wrong

emilio What you mean is if the stylesheet takes too long to load then the user agent may abort the loading. So?

[13:55:58.0819] <emilio>
> <@dmaxim:matrix.org> emilio What you mean is if the stylesheet takes too long to load then the user agent may abort the loading. So?

More like "it is allowed to start executing script without waiting for the stylesheet". Not sure what the "so" is about, I was trying to answer your question :)

[14:00:00.0290] <Maxim Vaarwel>
> <@emilio:mozilla.org> More like "it is allowed to start executing script without waiting for the stylesheet". Not sure what the "so" is about, I was trying to answer your question :)

As for unlocking to execute the code, it’s clear. My previous question was because, it has a direct quote: "A user agent may gives up on loading a style sheet at any time." - it clearly says “gives up” - but it is not specified what it means.

[14:05:10.0573] <Maxim Vaarwel>
> <@emilio:mozilla.org> More like "it is allowed to start executing script without waiting for the stylesheet". Not sure what the "so" is about, I was trying to answer your question :)

 * As for unlocking to execute the code, it’s clear. My previous question was because, it has a direct quote: "A user agent may gives up on loading a style sheet at any time." - it clearly says “gives up” - but it is not specified what it means. (replace my "so?" to "right?", it was the same)

[14:06:07.0009] <Maxim Vaarwel>
 * As for unlocking to execute the code, it’s clear. My previous question was because, it has a direct quote: "A user agent may gives up on loading a style sheet at any time." - it clearly says “gives up” - but it is not specified what it means. (replace my "so?" to "right?", they have the same meaning)

[15:40:40.0081] <Maxim Vaarwel>
emilio: So what exactly is meant by “gives up” in that sentence?


2024-05-27
[05:20:06.0131] <annevk>
foolip: can you setup compression.spec.whatwg.org as well? I should be able to review and land a bunch of the other things in flight later today.

[06:17:04.0021] <sefeng>
also there's checkbox in the PR for `A PR against HTML is needed to ensure it passes the appropriate metadata for media element and classic script requests`, what does this mean Anne? 

[10:24:38.0395] <foolip>
> <@annevk:matrix.org> foolip: can you setup compression.spec.whatwg.org as well? I should be able to review and land a bunch of the other things in flight later today.

I’m at a summit most of this week, so   I don’t think I’ll have time for it.

[14:48:47.0100] <canadahonk>
is there a reason `<select>`'s `showPicker` tests are still marked as tentative? shouldn't it no longer be since it was merged in the spec?

[15:03:10.0571] <canadahonk>
[opened a PR](https://github.com/web-platform-tests/wpt/pull/46500) since afaik no, feel free to r- if there is a reason


2024-05-28
[23:07:41.0061] <صادق>
Hi

[23:09:21.0877] <صادق>
Idont 

[23:23:23.0058] <annevk>
foolip: hmm, can Domenic do it? I'm not sure why you moved the repo if you didn't really have time to help out since now the specification is completely offline.

[23:24:34.0041] <Domenic>
I'm also busy for the next day or two, but will do my best

[23:24:42.0404] <Domenic>
You should be able to do all this too, it's documented

[23:30:18.0517] <annevk>
I guess I can create the config for the Debian server, but I've never run a deploy and I'd rather not be solely responsible if I do it wrong and take it all down

[23:33:56.0456] <annevk>
Hmm: https://github.com/whatwg/misc-server/pull/129#issuecomment-1864367033

[00:48:28.0604] <foolip>
> <@annevk:matrix.org> foolip: hmm, can Domenic do it? I'm not sure why you moved the repo if you didn't really have time to help out since now the specification is completely offline.

Oh, I didn’t consider that GitHub pages would break. I’ll take a look as soon as I can. Just arrived in Paris.

[00:49:59.0117] <foolip>
Someone also needs to set up a redirect on the WICG side, but it’s easiest to verify after the destination exists.

[00:56:01.0953] <annevk>
Yeah I hope Yoav Weiss can take care of that redirect. I filed an issue against their wicg.github.io repository yesterday.

[00:57:01.0226] <Yoav Weiss>
Thanks for pinging! I'll take a look

[01:00:47.0340] <Yoav Weiss>
annevk: https://compression.spec.whatwg.org/ is NXDomain for me..

[01:01:31.0785] <annevk>
Yoav Weiss: yeah that's correct, it's WIP as per above.

[01:02:38.0516] <Yoav Weiss>
OK, cool. redirected

[02:35:10.0320] <zcorpan>
Chris Harrelson: What was Ian's plan for button layout? https://github.com/w3c/csswg-drafts/issues/5998#issuecomment-2127673009

[02:42:03.0946] <emilio>
> <@zcorpan:mozilla.org> Chris Harrelson: What was Ian's plan for button layout? https://github.com/w3c/csswg-drafts/issues/5998#issuecomment-2127673009

My understanding is that it's making it a regular inline-block with align-content: center

[02:42:23.0207] <emilio>
But it might need more subtlety, not sure where that is

[02:42:40.0194] <emilio>
* But it might need more subtlety, not sure what the state is r/n

[02:43:34.0433] <zcorpan>
Ah, so the just remove the magic option

[03:11:13.0784] <annevk>
foolip: looks like the domain works now, but it doesn't have a cert yet

[03:16:44.0996] <Luke Warlow>
> <@canada_goose:mozilla.org> is there a reason `<select>`'s `showPicker` tests are still marked as tentative? shouldn't it no longer be since it was merged in the spec?

That's my bad I must have forgotten to undo tentative them when the spec got merged 

[03:17:27.0233] <canadahonk>
> <@lwarlow:igalia.com> That's my bad I must have forgotten to undo tentative them when the spec got merged

no worries, fixed it in commit 1/2 for https://github.com/web-platform-tests/wpt/pull/46502

