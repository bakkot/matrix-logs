2024-05-01
[17:07:37.0418] <christianmx>
ok, thanks for all 😉

[10:58:39.0982] <Adrian R.>
> <@bkardell:igalia.com> Idk if it were me i would probably follow things merged in the last week in PRs https://github.com/whatwg/html/pulls?q=is%3Apr+is%3Aclosed

Thanks for this, I've also been wanting to ask the same question

[11:35:51.0172] <Domenic>
I might be missing something, but I think the list of closed PRs will be almost always worse than https://github.com/whatwg/html/commits/main/ . The commits list has better titles in particular. And it only includes accepted changes.

[11:36:16.0120] <Domenic>
I guess the closed PRs list has labels, which are used a bit inconsistently but might be helpful.


2024-05-02
[00:54:44.0773] <annevk>
Yeah, the commits are definitely more curated than the PRs (and we try to make the log fairly scannable as well), though the PRs have a lot more information if you need additional context.

[01:00:49.0059] <sideshowbarker>
Video link for the triage meeting?

[01:04:18.0044] <krosylight>
> <@sideshowbarker:matrix.org> Video link for the triage meeting?

Just heard from smaug that it's just a remnant of an old meeting, no actual meeting now

[01:04:43.0403] <sideshowbarker>
Aha, thanks

[01:05:16.0040] <smaug>
there is another one way later today (or rather, early tomorrow)

[01:05:45.0720] <smaug>
 * there is another meeting way later today (or rather, early tomorrow)

[01:22:58.0784] <annevk>
Yeah, the meeting is in 15h - 22min

[01:23:24.0121] <annevk>
(I'll be sleeping through it per usual.)

[07:22:30.0980] <hsivonen>
annevk: Have you noticed https://www.ietf.org/archive/id/draft-ietf-emailcore-as-09.html#name-use-and-validation-in-html- and https://www.ietf.org/archive/id/draft-ietf-emailcore-as-09.html#name-use-of-addresses-in-top-lev ?

[07:34:40.0058] <annevk>
That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

[12:00:48.0693] <Jake Archibald>
annevk: do you know off the top of your head how sandboxed data-url workers are? Are they entirely originless?

[12:01:42.0537] <Jake Archibald>
Trying to figure out if it's a safe place to run 3p code. Or if there's a benefit of putting a worker in a sandboxed iframe instead

[16:44:40.0040] <smaug>
jarhar: by any chance, have you checked how often select (size=1) has been used in iframes which are too small to show the whole popup - meaning that in current desktop browsers the popup covers also some of the parent document?

[16:45:23.0256] <smaug>
(I did find some instances of such cases when we were considering to use content processes for select popup rendering)

[16:58:26.0682] <smaug>
(the new select would be of course opt-in)


2024-05-03
[17:14:36.0492] <jarhar>
i dont think we have usecounters for that particular case

[17:15:08.0874] <jarhar>
the new select would be a regular element which gets popover behavior, so it wouldnt escape outside its frame 

[17:16:19.0953] <smaug>
right

[17:20:02.0972] <smaug>
jarhar: does the parser allow anything inside <option> ?

[17:20:25.0276] <smaug>
 * jarhar: does the parser allow all the possible elements inside \<option> ?

[17:21:19.0400] <smaug>
oh, that  would be approach 3

[17:22:09.0924] <jarhar>
my proposal would allow everything in option

[17:23:49.0914] <smaug>
jarhar: hmm, what is the difference between 2 and 3 then? 2 requires use of datalist but 3 wouldn't since one could just use anything inside option?

[17:27:07.0129] <jarhar>
option 2 doesnt relax the parser at all except within button and datalist tags. so the following would be parsed in option 3, but option 2 would continue to throw away the div:
<select>
  <option>
    <div>hello

[17:27:16.0054] <jarhar>
ah the html i wrote is gone

[17:27:58.0051] <jarhar>
select
  option
    div
      text node

[17:28:14.0365] <jarhar>
option 2 would do what the parser currently does here and turn it into this

[17:28:20.0647] <jarhar>
select
option
text node

[17:28:52.0956] <jarhar>
to get the div in option 2 you have to wrap the option in a datalist, which also acts as the popover element

[17:30:21.0400] <smaug>
and still one more question today - before it is getting too late for me. If one doesn't use `<button>` inside `<select>`, what is the expected behavior? Browser would effectively have button as part of internal shadow DOM and that button has then `<selectedoption>` ?

[17:31:36.0258] <jarhar>
yes, but in my current implementation we just copy the text content from the selected option rather than having a full on selectedoption element so we dont have unsanitized content in the ua shadowroot

[17:31:39.0717] <jarhar>
option 2 is implemented in chrome behind experimental web platform features if you want to try it out

[17:32:24.0872] <jarhar>
you just have to add appearance:base-select to the select element to make it render the new stuff

[17:32:59.0511] <smaug>
oh, text content. That is something what was unclear in the explainer, since in one place it is talking about text content and in other place cloning

[17:33:11.0842] <smaug>
"<selectedoption> - The element which contains the text of the currently selected option. Every time that the user selects an option, the browser will replace the text content of this element with the text content of the selected option."

[17:33:29.0274] <smaug>
"The <selectedoption> element enables developers to declaratively clone the content of the selected <option> element to the button and to style it distinctly from the <option>"

[17:34:54.0039] <jarhar>
ah thanks for pointing that out ill fix it right away

[17:35:14.0629] <jarhar>
when the author used the selectedoption element, it clones the node not just the text content

[17:35:24.0382] <jarhar>
*uses

[17:36:41.0782] <smaug>
ok, and that is the reason why https://open-ui.org/components/selectlist/#rich-content-in-options has perhaps a bit surprising behavior. The image isn't part of the selected option.

[17:37:28.0229] <jarhar>
yeah thats because html content doesnt include the selectedoption element

[17:38:18.0193] <jarhar>
if we end up using the not yet implemented sanitizer api to check the content before replacing it, then we can put it in the ua shadowroot by default and youll get the "rich content" without replacing the button

[17:51:37.0191] <smaug>
https://open-ui.org/components/selectlist/#customizing-basic-styles something adds the arrow to the button, but it is not added in https://open-ui.org/components/selectlist/#rendering-the-option-differently-in-the-button 

[22:22:17.0633] <annevk>
Jake Archibald: they use an opaque origin, but both them and sandboxed iframes won't defend you against Spectre attacks in current browser engines

[08:01:02.0337] <jarhar>
thanks, i fixed it by removing the button tag from the example which has a down arrow. the down arrow is inside the button element in the UA shadowroot, so you don't get it when you provide your own button tag.


2024-05-06
[05:06:50.0552] <hsivonen>
> <@annevk:matrix.org> That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

I think it's a description of how WebKit interpreted what HTML says. Arguably, the HTML spec test supports better what Blink does, and to construe the IETF draft concern to cover Blink, one would have to assume it to mean Blink using the transitional mode for `input type=email`. As for the on-issue discussion, so far, I'm failing to steer the discussion to my specific questions about the rules. Evidently, the current spec text isn't clear enough about "the rules", since Blink, Gecko, and WebKit all have different interpretations.

[05:07:27.0938] <hsivonen>
> <@annevk:matrix.org> That's news to me. I'm surprised how it's just a simple description of what HTML does given that J.C. Klensin doesn't appear to like the HTML rules.

 * I think it's a description of how WebKit interpreted what HTML says. Arguably, the HTML spec text supports better what Blink does, and to construe the IETF draft concern to cover Blink, one would have to assume it to mean Blink using the transitional mode for `input type=email`. As for the on-issue discussion, so far, I'm failing to steer the discussion to my specific questions about the rules. Evidently, the current spec text isn't clear enough about "the rules", since Blink, Gecko, and WebKit all have different interpretations.

[05:11:42.0258] <hsivonen>
Anyway, it's bad that Hixie didn't write down the rationale for making up non-RFC local-part syntax. My findings from today are: 1) Fastmail front end does not reject consecutive dots but back end refuses to go through with sending. 2) Apple Mail app warns about consecutive dots but allows the user to send anyway. 3) iCloud back end tries to send out consecutive dots. 4) Gmail rejects incoming consecutive dots despite ignoring the dots in mailbox matching for RFC-compliantly-dotted incoming addresses.

[05:13:26.0526] <hsivonen>
Since, Fastmail gets away with refusing to send to addresses with consecutive dots, being able to send to consecutive-dot addresses probably isn't a competitiveness-level mail-compat issue. Since the Apple stack enables sending to addresses with consecutive dots, it's not the case that email software would universally block consecutive dots.

[05:45:03.0967] <annevk>
hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

[06:59:27.0322] <hsivonen>
> <@annevk:matrix.org> hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

I though that it was relevant to deal with if we're taking the time to change implementations of the local part, but I guess it was unconstructive that I mentioned the dots in my list of questions. Sorry. I skipped that question in my follow-up to your domain-part answers.

[06:59:36.0765] <hsivonen>
> <@annevk:matrix.org> hsivonen: what I find frustrating is that instead of talking about non-ASCII addresses, we keep getting dragged into discussing the subtleties of the ASCII rules, which impact an even smaller subset of end users. Given that multiple providers reject consecutive dots today I would be somewhat inclined to stick with that, but I could be persuaded I suppose. (I could see how they could lead to spoofing issues of sorts.)

 * I thought that it was relevant to deal with if we're taking the time to change implementations of the local part, but I guess it was unconstructive that I mentioned the dots in my list of questions. Sorry. I skipped that question in my follow-up to your domain-part answers.

[07:02:29.0059] <annevk>
hsivonen: oh, that criticism wasn't necessarily aimed at you. It's been a somewhat recurring theme of the thread.

[07:29:25.0632] <freddy>
annevk: Given the holiday in Germany this Thursday, are you attending the WHATNOT meeting? I'm interested in the agenda item about integrity, but would propose the meeting topic will be postponed... https://github.com/whatwg/html/labels/agenda%2B

[07:33:28.0641] <annevk>
freddy: no I declined. I'm taking Friday off too.

[08:02:42.0023] <freddy>
Panos Astithas: Hi!, can we please postpone the integrity agenda item from WHATNOT this week? ☝️

[08:27:11.0360] <Panos Astithas>
Of course, I'll carry it over to the next meeting unless you tell me otherwise.

[08:34:35.0904] <freddy>
wfm

[13:23:08.0908] <smaug>
keithamus: this is still a very vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

[13:23:18.0323] <smaug>
 * keithamus: this is still a _very_ vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

[13:54:24.0380] <keithamus>
Interesting… can you say more? 

[14:22:03.0771] <Richard Gibson>
I think I disagree with this reasoning; the question of "_which element experienced the event?_" is answered not by failing to bubble but by the `target` property. Failing to bubble just makes delegation difficult for generally no good reason (as is the case for e.g. <details> toggle)

[15:00:21.0247] <Luke Warlow>
> <@smaug:mozilla.org> keithamus: this is still a _very_ vague idea - but somehow bind invoking to  pushState (or I guess session history in general). The idea being that going back could trigger some invoketarget with a certain action.  (This all to make things more declarative)

Is a use case something like a modal dialog controlled by the URL? It's an interesting idea but I wonder if it's better solved by general declarative solutions (e.g. an initially open modal dialog) or by some declarative URLPattern -> action map separate from invokers?

[15:37:21.0375] <zcorpan>
smaug: maybe CloseWatcher integration is better suited?

[15:41:02.0307] <smaug>
Some URL stuff might work, since that works with session history. And yes, possibly like with dialogs, but also for other (not yet defined) declarative features

[15:43:08.0493] <zcorpan>
smaug: https://html.spec.whatwg.org/#close-requests-and-close-watchers

[15:43:23.0734] <zcorpan>
or maybe I don't follow :)

[15:43:58.0729] <smaug>
Not sure that works with random declarative stuff. I want something which can take the page back to some earlier state without any use of JS

[15:49:10.0001] <Luke Warlow>
BFCache does that to some extent. But yeah it'd be interesting to have a way to codify URL -> "app" state

[15:49:45.0243] <Luke Warlow>
Having said that I think the pattern of using URLs for dialogs was partly a result of the lack of a close watcher API.


2024-05-07
[03:11:35.0994] <csarven>
In say the references section of an article, `<cite><a></a></cite>` feels intuitive to me for some reason, but I do find `<a><cite></cite></a>` perhaps more accurate. The former cites the link, the latter links to the citation.

Could one pattern be more accurate in a certain context, e.g., in the body of an article or references section or elsewhere.

Anyone have thoughts on this or can point me to some discussion?

[03:11:48.0764] <csarven>
* In say the references section of an article, `<cite><a href></a></cite>` feels intuitive to me for some reason, but I do find `<a href><cite></cite></a>` perhaps more accurate. The former cites the link, the latter links to the citation.

Could one pattern be more accurate in a certain context, e.g., in the body of an article or references section or elsewhere.

Anyone have thoughts on this or can point me to some discussion?

[04:22:10.0431] <annevk>
Luca Casonato: any chance you can tackle https://github.com/whatwg/html/issues/6768?

[04:59:59.0622] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: any chance you can tackle https://github.com/whatwg/html/issues/6768?

sure: https://github.com/whatwg/html/pull/10327

do you know if there is implementer interest from chromium or gecko? considering safari already implements this behaviour, can i count that as implementer interest? if we have two interested implementers i can write some tests

[05:09:56.0946] <Luca Casonato>
Also, still awaiting reviews for:
- https://github.com/whatwg/webidl/pull/1397
- https://github.com/whatwg/streams/pull/1310

[05:10:15.0252] <Luca Casonato>
 * Also, still awaiting reviews for:

- https://github.com/whatwg/webidl/pull/1397
- https://github.com/whatwg/streams/pull/1310

(and more responses on implementer interest)

[05:57:38.0109] <annevk>
Luca Casonato: yeah, given that web developers seem to prefer it and WebKit already does it, that seems fine

[06:00:10.0849] <annevk>
Luca Casonato: I think WebKit is already interested in async iterable for ReadableStream (but not yet implemented iirc) so seems fine to carry that over to the Web IDL version

[06:00:37.0354] <annevk>
Luca Casonato: review is prolly best done by Mattias Buelens and Domenic 

[06:02:31.0001] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: I think WebKit is already interested in async iterable for ReadableStream (but not yet implemented iirc) so seems fine to carry that over to the Web IDL version

Note this is not `ReadableStream` implementing async iterable, but right now this is just a spec refactor - it's for being able to pass async iterables to web APIs (initially refactoring `ReadableStream.from`), but then in the future also https://github.com/whatwg/fetch/issues/1291

[06:03:11.0454] <Luca Casonato>
The "let an interface implement async iterable" is already in webidl - there was previously just not the reverse ("let a web api take an async iterable as an argument")

[06:03:14.0890] <Luca Casonato>
 * The "let an interface implement async iterable" is already in webidl - there was previously just not the reverse ("let a web api take an async iterable as an argument"

[06:11:37.0925] <annevk>
Luca Casonato: fair, but still good. I suppose I should double check for the Fetch change, but I don't foresee any issue there either.

[09:39:07.0174] <annevk>
https://github.com/whatwg/html/issues/4562 is very reminiscent of early "let's fix the URL parser" discussions, and not in a good way. Geez.

[09:54:04.0161] <sideshowbarker>
I can't see that jrlevine is actually contributing anything constructive at all there, and definitely not responding to any of the specific questions for which feedback was requested. And he's being outright insulting

[11:21:53.0293] <Meghan Denny>
I see the former as more accurate since the citation might include other text as well, not just the link and link text. eg picture is what im thinking of

