2024-09-01
[19:22:36.0586] <sideshowbarker>
Anybody know if it’s intentional that there’s no `ariaRelevant` IDL attribute in https://w3c.github.io/aria/#ARIAMixin?

[19:26:01.0322] <sideshowbarker>
The current spec does define an [`aria-relevant`](https://w3c.github.io/aria/#aria-relevant) content attribute, and at https://w3c.github.io/aria/#idl-reflection-attribute-values the spec says:
> All ARIA attributes reflect in IDL as [nullable](https://webidl.spec.whatwg.org/#dfn-nullable-type) [DOMString](https://webidl.spec.whatwg.org/#idl-DOMString) attributes. This includes the boolean-like [true/false](https://w3c.github.io/aria/#valuetype_true-false) type, and all other ARIA attributes.

[19:27:40.0858] <sideshowbarker>
…and https://wpt.fyi/results/html/dom/aria-attribute-reflection.html has a test for a reflected `ariaRelevant` IDL attribute

[19:28:22.0535] <sideshowbarker>
So… it is just a spec bug/oversight that the spec has no ariaRelevant IDL attribute in https://w3c.github.io/aria/#ARIAMixin?

[19:30:05.0525] <sideshowbarker>
*(And incidentally, is it seriously really the case that the Matrix Element client still provides no per-case way to prevent previews from getting added every time somebody includes a hyperlink in a message?)*

[19:30:51.0707] <sideshowbarker>
 * So… is just a spec bug/oversight that the spec has no ariaRelevant IDL attribute in https://w3c.github.io/aria/#ARIAMixin?

[19:31:52.0759] <sideshowbarker>
 * The current spec does define an [`aria-relevant`](https://w3c.github.io/aria/#aria-relevant) content attribute, and at https://w3c.github.io/aria/#idl-reflection-attribute-values the spec says:

> *All ARIA attributes reflect in IDL as [nullable](https://webidl.spec.whatwg.org/#dfn-nullable-type) [DOMString](https://webidl.spec.whatwg.org/#idl-DOMString) attributes. This includes the boolean-like [true/false](https://w3c.github.io/aria/#valuetype_true-false) type, and all other ARIA attributes.*

[19:32:04.0420] <sideshowbarker>
 * The current spec does define an [`aria-relevant`](https://w3c.github.io/aria/#aria-relevant) content attribute, and at https://w3c.github.io/aria/#idl-reflection-attribute-values the spec says:

> _All ARIA attributes reflect in IDL as [nullable](https://webidl.spec.whatwg.org/#dfn-nullable-type) [DOMString](https://webidl.spec.whatwg.org/#idl-DOMString) attributes. This includes the boolean-like [true/false](https://w3c.github.io/aria/#valuetype_true-false) type, and all other ARIA attributes._
…

[19:32:14.0555] <sideshowbarker>
 * The current spec does define an [`aria-relevant`](https://w3c.github.io/aria/#aria-relevant) content attribute, and at https://w3c.github.io/aria/#idl-reflection-attribute-values the spec says:

> _All ARIA attributes reflect in IDL as [nullable](https://webidl.spec.whatwg.org/#dfn-nullable-type) [DOMString](https://webidl.spec.whatwg.org/#idl-DOMString) attributes. This includes the boolean-like [true/false](https://w3c.github.io/aria/#valuetype_true-false) type, and all other ARIA attributes._
> 
…

[19:32:40.0513] <sideshowbarker>
 * The current spec does define an [`aria-relevant`](https://w3c.github.io/aria/#aria-relevant) content attribute, and at https://w3c.github.io/aria/#idl-reflection-attribute-values the spec says:

> _All ARIA attributes reflect in IDL as [nullable](https://webidl.spec.whatwg.org/#dfn-nullable-type) [DOMString](https://webidl.spec.whatwg.org/#idl-DOMString) attributes. This includes the boolean-like [true/false](https://w3c.github.io/aria/#valuetype_true-false) type, and all other ARIA attributes._


[19:32:51.0823] <sideshowbarker>
 * 
…
and https://wpt.fyi/results/html/dom/aria-attribute-reflection.html has a test for a reflected `ariaRelevant` IDL attribute

[19:41:12.0772] <sideshowbarker>
hmm, it seems that in source at https://github.com/w3c/aria/blob/1d0b8b94120beb6fa36edd54fce1a301ce64930c/index.html#L13584, it’s intentionally commented out

[19:44:40.0146] <sideshowbarker>
seems James Craig commented in out in https://github.com/w3c/aria/commit/646f093848a1943c8343f34ad80f72dbd78f54e6 without explanation…

[19:45:19.0870] <sideshowbarker>
and cited https://github.com/w3c/aria/issues/1058


2024-09-02
[03:41:46.0772] <smaug>
I wonder how to fix Observables to work with preventDefault(). I think that is a blocker

[08:50:43.0525] <annevk>
smaug: I thought that worked unless you switched to promises?

[08:54:42.0369] <smaug>
exactly, the part of the API using Promises breaks it

[09:02:50.0849] <annevk>
smaug: https://github.com/WICG/observable/issues/170 might also be of interest

[09:50:12.0772] <Yoav Weiss>
I'm working through this [comment](https://github.com/whatwg/html/pull/10528/files/e9188a30c6e0bfb1c163555fed3104d173059364#r1712799332) on the dynamic import maps PR, and I'm realizing that it's not clear to me if the normalized scope prefixes could actually be an absolute URL, and whether that URL could be coming from a different origin/site than the top-level site loading the script. AFAICT the answer to that is yes, but I'm failing to find tests to that effect


2024-09-03
[23:33:33.0924] <freddy>
Very slightly related to import maps. I talked to someone about Subresource Integrity and they complained that `<script src=.. integrity..>` has no declarative fallback to a canonical/fallback URL if the `src` resource doesn't match. E.g., point to CDN for speed but fallback to same-origin resource for robustness. I recall that we cut `fallbacksrc` (name TBD) out of SRI v1 for a couple of reason. The main one I remember is that I was too cautious to break assumptions w/ HTML/XSS sanitizers and other security libraries. Essentially not allowing a "new" XSS vector like `<script src=x integrity=x fallbacksrc=xssurl>`.

[23:34:49.0872] <freddy>
I wonder if fallback-URLs would be an interesting thing to consider for import maps, as their syntax is not in HTML and less likely to break assumptions (because most libraries will block/remove inline `<script>`, likely including those of type import maps)

[04:20:14.0190] <Yoav Weiss>
freddy: I guess that could fit into importmaps somehow, but would only work for modules. At the same time, I'm not sure the use case is worth the complexity. Is this a real issue people are trying to solve for? Can they do that with e.g. onerror handlers that rewrite the `src`?

[04:20:37.0524] <freddy>
they _can_ solve it with onerror handlers, but it requires more script

[04:20:55.0758] <freddy>
(script that needs to load first. stuff you originally set out to put on a CDN)

[04:35:37.0675] <Yoav Weiss>
(beyond that, I don't see the onerror event firing.. https://iron-organic-rainstorm.glitch.me/)

[05:08:23.0566] <freddy>
huh..

[05:29:05.0894] <zcorpan>
Yoav Weiss: I think it should, step 4 in https://html.spec.whatwg.org/#execute-the-script-element , called from https://html.spec.whatwg.org/#script-processing-model:execute-the-script-element-3

[05:30:13.0540] <zcorpan>
(or maybe not called from there, since it's parser inserted)

[05:31:44.0043] <zcorpan>
#parsing-main-incdata:execute-the-script-element

[05:36:34.0978] <zcorpan>
Yoav Weiss: you're not calling the functions :)

[05:38:14.0705] <zcorpan>
with `onerror="errorHandler(event)"` it wfm

[06:29:55.0559] <Yoav Weiss>
🤦

[09:34:34.0066] <govocin165>
Hi, I am wondering what is the rationale behind the difference between`location.href` and `document.URL` when credentials are embedded (e.g. https://foo:bar@example.com). Using the former would return an URl without credentials (http://example.com) and the latter would give me the full URL. My best guess here is that since `Location` object provides developers a way to navigate through links, therefore there are security concerns and credentials need to be redacted. And since browsers treat `Document` as an abstraction for the current web document, the property is readonly and not redacted. Could someone kindly disprove or verify my theory? Thanks in advance!

[09:34:58.0293] <govocin165>
 * Hi, I am wondering what is the rationale behind the difference between `location.href` and `document.URL` when credentials are embedded (e.g. https://foo:bar@example.com). Using the former would return an URl without credentials (http://example.com) and the latter would give me the full URL. My best guess here is that since `Location` object provides developers a way to navigate through links, therefore there are security concerns and credentials need to be redacted. And since browsers treat `Document` as an abstraction for the current web document, the property is readonly and not redacted. Could someone kindly disprove or verify my theory? Thanks in advance!

[09:45:57.0071] <Meo>
 * Hi, I am wondering what is the rationale behind the difference between `location.href` and `document.URL` when credentials are embedded (e.g. https://foo:bar@example.com). Using the former would return an URl without credentials (http://example.com) and the latter would give me the full URL. My best guess here is that since `Location` object provides developers a way to navigate through links, there are security concerns and credentials need to be redacted. And since browsers treat `Document` as an abstraction for the current web document, the property is readonly and not redacted. Could someone kindly disprove or verify my theory? Thanks in advance!

[11:20:23.0435] <annevk>
Meo: that seems like a bug. They are defined to be identical.

[11:42:12.0637] <Meo>
> <@annevk:matrix.org> Meo: that seems like a bug. They are defined to be identical.

I don't think that's the case for Chrome (128.0.6613.113). As I just tried few moments ago, it gives out different results.

[11:53:12.0917] <annevk>
Meo: I'd file a bug against Chrome (and other browsers that exhibit that behavior). Potentially if all browsers do this we need to investigate this at the specification level (file an issue against the HTML Standard for that), but it doesn't seem like something we'd want to standardize as it doesn't make a whole lot of sense.

[11:56:17.0904] <Meo>
> <@annevk:matrix.org> Meo: that seems like a bug. They are defined to be identical.

By the way, could you please kindly shed some light on which part of the spec specify on this? Because in my opinion, if 'they are defined to be identical' then it is already something standardized? Please kindly correct me if I am wrong.

[12:00:07.0516] <Meo>
annevk

[12:00:12.0095] <Meo>
 * Thanks!

[12:17:10.0491] <annevk>
Meo: https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-location-url (and then there's nothing in `href` getter which states you can just omit parts of the URL)

[12:18:30.0125] <annevk>
 * Meo: https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-location-url (and then there's nothing in `href`'s getter which states you can just omit parts of the URL)

[12:20:04.0277] <Meo>
> <@annevk:matrix.org> Meo: https://html.spec.whatwg.org/multipage/nav-history-apis.html#concept-location-url (and then there's nothing in `href`'s getter which states you can just omit parts of the URL)

Thanks for the link. If I understand it correctly, the associated URL `location.href` should be the same as `document.URL`? If that's the case then almost all web browsers violated this spec.

[12:20:40.0583] <Meo>
Sine from the multiple browser sources I read, Firefox implemented this redaction since pre-1.0 era. Chromium did it ~2010, and WebKit followed sometime later.

[12:21:08.0107] <Meo>
 * Since from the multiple browser sources I read, Firefox implemented this redaction since pre-1.0 era. Chromium did it ~2010, and WebKit followed sometime later.

[12:27:16.0057] <Meo>
 * From the multiple browser sources I read, Firefox implemented this redaction since pre-1.0 era. Chromium did it ~2010, and WebKit followed sometime later.

[12:43:53.0071] <Schalk Neethling>
Hey folks! I might have missed this in the spec, but it seems that all browsers will automatically show subtitles if the `video` element has a `track` with the `default` boolean attribute. Is this in the specification and I missed it, or is this not yet documented as the intended behaviour? Thanks!

[13:01:56.0039] <annevk>
Meo: I know about address bar redaction, but API redaction is new to me and would definitely have to be standardized somehow

[13:03:59.0313] <Meo>
> <@annevk:matrix.org> Meo: I know about address bar redaction, but API redaction is new to me and would definitely have to be standardized somehow

Yeah I totally agreed, and for clarification I was referring to the API-level redaction.


2024-09-04
[09:58:21.0451] <akaster>
In the Service Worker spec, it talks about "service worker clients" as being "an environment". https://w3c.github.io/ServiceWorker/#service-worker-client-concept

Is the right mental model for this concept that the service worker spec is applying a mixin or extension to the HTML specification's definition of environment? or is there any utility in representing the service worker client as a distinct object in an implementation?


2024-09-05
[18:05:24.0970] <Domenic>
akaster: my reading of that is that it's a subclass of environment with a couple extra fields.

[18:15:30.0447] <akaster>
hmm. the section that describes how service worker clients are created, specifically for the window client case, it links to`Set up a window environment settings object`. 
https://w3c.github.io/ServiceWorker/#control-and-use-window-client

Which is here: https://html.spec.whatwg.org/multipage/nav-history-apis.html#set-up-a-window-environment-settings-object

[18:15:42.0229] <akaster>
 * hmm. the section that describes how service worker clients are created, specifically for the window client case, it links to`Set up a window environment settings object`.

https://w3c.github.io/ServiceWorker/#control-and-use-window-client

Which is here: https://html.spec.whatwg.org/multipage/nav-history-apis.html#set-up-a-window-environment-settings-object

[18:16:30.0353] <akaster>
I suppose the section there doesn't say "create a window environment settings object" as if that's a well-defined thing. it just says "Create a environment settings object with these properties/method implementations"/

[18:16:31.0905] <akaster>
 * I suppose the section there doesn't say "create a window environment settings object" as if that's a well-defined thing. it just says "Create a environment settings object with these properties/method implementations".

[18:17:29.0666] <akaster>
So I don't feel too bad about mushing the fields for the "window client" for service workers and the ESO in step 3 of set up a window environment settings object into the same C++ object 

[18:30:33.0516] <akaster>
> A service worker client has an algorithm defined as the origin that returns the service worker client's origin if the service worker client is an environment settings object, and the service worker client's creation URL’s origin otherwise.

Er... when would a service worker client *not* be an environment settings object? All the cases described in section 2.5 are a service worker client created from either  `Set up a window environment settings object` or `Set up a worker environment settings object`.

[19:03:01.0608] <Domenic>
My vague recollection is that service workers control even environments, in the steps before they become ESOs.

[19:19:54.0449] <Domenic>
keithamus: is GitHub still using the navigation API? https://x.com/Keithamus/status/1634212599083548674

[00:47:22.0235] <keithamus>
Domenic: it was removed back in January as we haven’t seen interest from other browsers. 

[00:53:18.0856] <Domenic>
It's a progressive enhancement...

[00:53:36.0355] <Domenic>
(with positive standards positions from both others, and an implementation nearing completion in WebKit!)

[01:12:00.0440] <annevk>
WHATNOT not happening today? Or was I too late?

[01:21:00.0932] <annevk>
I guess it's too late now? Yoav Weiss smaug 

[01:22:30.0067] <smaug>
We ended it already

[01:29:51.0821] <annevk>
Okay, Mike, muan, and I are still there for a bit.

[01:38:36.0289] <zcorpan>
Chris Harrelson: Can you please invite me to the open ui/html/css meeting?

[01:40:00.0758] <smaug>
I did

[01:47:31.0565] <zcorpan>
Thanks

[01:56:41.0129] <keithamus>
Domenic: I know, sorry. I agree but we try to avoid shipping features that aren't in multiple browsers so it was stuck behind a feature flag which means it's regularly assessed for removal unless it can progress. I wasn't able to progress it and so it got removed :( 

[02:11:52.0309] <Domenic>
I had a conflict today, sadly.

[02:25:05.0338] <Domenic>
Maybe we can retry after WebKit lands

[03:44:24.0933] <devianjefff>
If you're struggling for money, I have a couple of glitch  that pay and are legit. Got a couple instant ones too.  Either way you look at it,ask for more info and imma put you through the glitch 

🪙💳CRYPTO INVESTMENT 
🪙💳ᴄᴀsʜ ᴀᴘᴘ ᴍᴇᴛʜᴏᴅ 💱
💳🪙ᴘᴀʏᴘᴀʟ ғʟɪᴘs 🚀
🪙💳ᴀᴘᴘʟᴇ ᴄᴀsʜ 💷 
💳🪙ᴄᴀʀᴅɪɴɢ📇
🪙💳ᴄʟᴏɴᴇ ᴄᴀʀᴅs 💳 
💳🪙ᴘᴀʏ ᴅᴀʏ ɪs ᴏɴ 👨‍💻📌
🪙💳ғʀᴇᴇ sᴀᴜᴄᴇ🔌
💳🪙ʟᴏᴀɴs ᴍᴇᴛʜᴏᴅs✈️
🪙💳ғʀᴇsʜʟʏ ᴄᴏᴏᴋᴇᴅ sʟɪᴘs 💰💴
💳🪙ᴍᴏʙɪʟᴇ ᴅᴇᴘᴏsɪᴛ & ᴡɪʀᴇ ᴄʜᴇᴄᴋ ᴊᴏʙs✍️ & ᴄᴄ
Tap in 
       👇👇👇

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

JOIN MY TELEGRAM CHANNEL NOW AND GET PAID 💼 INSTANTLY 💸

[03:44:56.0919] <freddy>
annevk: ☝️ 🙂


2024-09-06
[06:01:14.0199] <smaug>
Hmm, https://html.spec.whatwg.org/#activation-triggering-input-event doesn't make sense

[06:01:50.0193] <smaug>
mousedown and pointerdown both there, so each of them could trigger something

[06:02:00.0523] <smaug>
or is there somewhere some limitation about that situtation 

[06:02:06.0769] <smaug>
 * or is there somewhere some limitation about that situation 

[09:41:33.0922] <mikedidomizio>
Hey everyone, new to Matrix so hopefully this is the right place to ask.

What was the reasoning making the `<details>` element firing the `ontoggle` event when it renders with `open` attribute being present?

We use Next.js/React at work, and I think most devs expect that most events are triggered by something done by the user, like `onchange`, `onsubmit`, `onclick`.
So it isn't far-fetched to assume a dev would believe `ontoggle` would be triggered when the `<details>` is opened/closed and not necessarily because it has mounted/rendered open.

Maybe I'm misreading this GitHub issue but if I'm reading it correctly, it does sound like there were some concerns about that as well - https://github.com/whatwg/html/issues/4500


2024-09-07
[12:35:46.0717] <Mary Sanchez>
If you're struggling for money, I have a couple of glitch  that pay and are legit. Got a couple instant ones too.  Either way you look at it,ask for more info and imma put you through the glitch 

🪙💳CRYPTO INVESTMENT 
🪙💳ᴄᴀsʜ ᴀᴘᴘ ᴍᴇᴛʜᴏᴅ 💱
💳🪙ᴘᴀʏᴘᴀʟ ғʟɪᴘs 🚀
🪙💳ᴀᴘᴘʟᴇ ᴄᴀsʜ 💷 
💳🪙ᴄᴀʀᴅɪɴɢ📇
🪙💳ᴄʟᴏɴᴇ ᴄᴀʀᴅs 💳 
💳🪙ᴘᴀʏ ᴅᴀʏ ɪs ᴏɴ 👨‍💻📌
🪙💳ғʀᴇᴇ sᴀᴜᴄᴇ🔌
💳🪙ʟᴏᴀɴs ᴍᴇᴛʜᴏᴅs✈️
🪙💳ғʀᴇsʜʟʏ ᴄᴏᴏᴋᴇᴅ sʟɪᴘs 💰💴
💳🪙ᴍᴏʙɪʟᴇ ᴅᴇᴘᴏsɪᴛ & ᴡɪʀᴇ ᴄʜᴇᴄᴋ ᴊᴏʙs✍️ & ᴄᴄ
Tap in 
       👇👇👇

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

JOIN MY TELEGRAM CHANNEL NOW AND GET PAID 💼 INSTANTLY 💸

[13:21:21.0761] <akaster>
annevk: ☝️

[15:13:53.0205] <pelumiola60>
Hey there! I wanted to let you know that I have a Telegram channel where I share some amazing Verified sauce and soft cashout

Here are some of the things you can find on my channel:

- Apple Pay
- Bank logs/ bank drops
- Chime transfer 
- Cashapp 
- Clone card
- Credit Cards( Cvv )
- CC sites 
- PayPal transfer
- Wellsfargo sauce 

I promise you that all the methods are real and legit. No scams here! And please don't worry about how much money you have. Just be honest and I'll try my best to help you out. 

So, if you're interested, please join my channel through the link below. See you there ✅✅

https://t.me/+dqk4cMEewjAwZTdk

https://t.me/+dqk4cMEewjAwZTdk

https://t.me/+dqk4cMEewjAwZTdk

🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇

💸💸💸💸


2024-09-08
[21:45:41.0381] <Mary Sanchez>
If you're struggling for money, I have a couple of glitch  that pay and are legit. Got a couple instant ones too.  Either way you look at it,ask for more info and imma put you through the glitch 

🪙💳CRYPTO INVESTMENT 
🪙💳ᴄᴀsʜ ᴀᴘᴘ ᴍᴇᴛʜᴏᴅ 💱
💳🪙ᴘᴀʏᴘᴀʟ ғʟɪᴘs 🚀
🪙💳ᴀᴘᴘʟᴇ ᴄᴀsʜ 💷 
💳🪙ᴄᴀʀᴅɪɴɢ📇
🪙💳ᴄʟᴏɴᴇ ᴄᴀʀᴅs 💳 
💳🪙ᴘᴀʏ ᴅᴀʏ ɪs ᴏɴ 👨‍💻📌
🪙💳ғʀᴇᴇ sᴀᴜᴄᴇ🔌
💳🪙ʟᴏᴀɴs ᴍᴇᴛʜᴏᴅs✈️
🪙💳ғʀᴇsʜʟʏ ᴄᴏᴏᴋᴇᴅ sʟɪᴘs 💰💴
💳🪙ᴍᴏʙɪʟᴇ ᴅᴇᴘᴏsɪᴛ & ᴡɪʀᴇ ᴄʜᴇᴄᴋ ᴊᴏʙs✍️ & ᴄᴄ
Tap in 
       👇👇👇

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

JOIN MY TELEGRAM CHANNEL NOW AND GET PAID 💼 INSTANTLY 💸

[23:39:19.0433] <Mary Sanchez>
If you're struggling for money, I have a couple of glitch  that pay and are legit. Got a couple instant ones too.  Either way you look at it,ask for more info and imma put you through the glitch 

🪙💳CRYPTO INVESTMENT 
🪙💳ᴄᴀsʜ ᴀᴘᴘ ᴍᴇᴛʜᴏᴅ 💱
💳🪙ᴘᴀʏᴘᴀʟ ғʟɪᴘs 🚀
🪙💳ᴀᴘᴘʟᴇ ᴄᴀsʜ 💷 
💳🪙ᴄᴀʀᴅɪɴɢ📇
🪙💳ᴄʟᴏɴᴇ ᴄᴀʀᴅs 💳 
💳🪙ᴘᴀʏ ᴅᴀʏ ɪs ᴏɴ 👨‍💻📌
🪙💳ғʀᴇᴇ sᴀᴜᴄᴇ🔌
💳🪙ʟᴏᴀɴs ᴍᴇᴛʜᴏᴅs✈️
🪙💳ғʀᴇsʜʟʏ ᴄᴏᴏᴋᴇᴅ sʟɪᴘs 💰💴
💳🪙ᴍᴏʙɪʟᴇ ᴅᴇᴘᴏsɪᴛ & ᴡɪʀᴇ ᴄʜᴇᴄᴋ ᴊᴏʙs✍️ & ᴄᴄ
Tap in 
       👇👇👇

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

https://t.me/+32cFzLuOiacxZmM0

JOIN MY TELEGRAM CHANNEL NOW AND GET PAID 💼 INSTANTLY 💸

[01:05:05.0843] <Mary Sanchez>
If you're struggling for money, I have a couple of glitch that pay and are legit. Got a couple instant ones too. Either way you look at it,ask for more info and imma put you through the glitch 🪙💳CRYPTO INVESTMENT 🪙💳ᴄᴀsʜ ᴀᴘᴘ ᴍᴇᴛʜᴏᴅ 💱 💳🪙ᴘᴀʏᴘᴀʟ ғʟɪᴘs 🚀 🪙💳ᴀᴘᴘʟᴇ ᴄᴀsʜ 💷 💳🪙ᴄᴀʀᴅɪɴɢ📇 🪙💳ᴄʟᴏɴᴇ ᴄᴀʀᴅs 💳 💳🪙ᴘᴀʏ ᴅᴀʏ ɪs ᴏɴ 👨‍💻📌 🪙💳ғʀᴇᴇ sᴀᴜᴄᴇ🔌 💳🪙ʟᴏᴀɴs ᴍᴇᴛʜᴏᴅs✈️ 🪙💳ғʀᴇsʜʟʏ ᴄᴏᴏᴋᴇᴅ sʟɪᴘs 💰💴 💳🪙ᴍᴏʙɪʟᴇ ᴅᴇᴘᴏsɪᴛ & ᴡɪʀᴇ ᴄʜᴇᴄᴋ ᴊᴏʙs✍️ & ᴄᴄ TAP IN NOW 🧏🏽‍♂️🔥🔥❤️‍🩹 👇👇👇
https://t.me/+32cFzLuOiacxZmM0
https://t.me/+32cFzLuOiacxZmM0
https://t.me/+32cFzLuOiacxZmM0

[01:06:42.0670] <nicolo-ribaudo>
I'd be happy to help moderate this room

[13:27:07.0622] <keithamus>
Likewise

[13:28:13.0436] <keithamus>
oh wait apparently I am. let the ban hammer commence!


2024-09-09
[08:11:56.0945] <mikedidomizio>
Hey team,
It may have been missed from the previous comments/spam.  I am still very curious how the decision for this came about.

https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$bdM29LAE55ZkQa9Q_h31_MKLF_XS6zNqdC-mjbvSW9I?via=matrix.org&via=mozilla.org&via=igalia.com

[09:04:03.0778] <vwkd>
I'm wondering if there's any discussion about adding `Request.json` static method similar to [`Response.json`](https://github.com/whatwg/fetch/issues/1389) that was recently added?

[09:08:05.0001] <vwkd>
Maybe something along the lines of `Request.json("https://example.org", body, { method: "POST" })` as alternative to

```js
new Request("https://example.org", {
  method: "POST",
  headers: {
    "Content-Type": "application/json; charset=utf-8",
  },
  body: JSON.stringify(body),
})
```

[09:08:23.0479] <vwkd>
 * Maybe something along the lines of

```js
Request.json("https://example.org", body, { method: "POST" })
```

as alternative to

```js
new Request("https://example.org", {
  method: "POST",
  headers: {
    "Content-Type": "application/json; charset=utf-8",
  },
  body: JSON.stringify(body),
})
```

[09:10:03.0173] <vwkd>
It sets the right `Content-Type` header if not already provided, and stringifies the body if not already stringified.

[11:28:47.0236] <Dominic Farolino>
How do we normally handle things like https://github.com/whatwg/fetch/issues/1772 and https://github.com/whatwg/console/issues/238? Do we just trust that the translation is good and link to it? (i.e., I assume that's what we did for the JP translations)

[13:41:10.0620] <zcorpan>
Maybe we should clarify the adding features faq entry to say somewhere that it's ok to write a spec proposal (and link somewhere for a template or further guidance) before getting implementer interest... c.f. https://github.com/whatwg/html/issues/7794#issuecomment-2042617709 and https://x.com/LeaVerou/status/1832791622813127000


2024-09-10
[18:29:20.0695] <Domenic>
> <@zcorpan:mozilla.org> Maybe we should clarify the adding features faq entry to say somewhere that it's ok to write a spec proposal (and link somewhere for a template or further guidance) before getting implementer interest... c.f. https://github.com/whatwg/html/issues/7794#issuecomment-2042617709 and https://x.com/LeaVerou/status/1832791622813127000

I feel like https://whatwg.org/faq#adding-new-features covers it... not sure where the impression of this came from.

[18:50:22.0099] <sideshowbarker>
> <@mikedidomizio:matrix.org> Hey everyone, new to Matrix so hopefully this is the right place to ask.
> 
> What was the reasoning making the `<details>` element firing the `ontoggle` event when it renders with `open` attribute being present?
> 
> We use Next.js/React at work, and I think most devs expect that most events are triggered by something done by the user, like `onchange`, `onsubmit`, `onclick`.
> So it isn't far-fetched to assume a dev would believe `ontoggle` would be triggered when the `<details>` is opened/closed and not necessarily because it has mounted/rendered open.
> 
> Maybe I'm misreading this GitHub issue but if I'm reading it correctly, it does sound like there were some concerns about that as well - https://github.com/whatwg/html/issues/4500

I contributed to the spec patch for that, and also implemented it in WebKit, and I don't recall any specific discussion about only firing the event on actual user-initiated toggling of `details`. I think the initial spec patch/PR had it the same way it's in the spec now, and maybe nobody questioned it. I don't personally know if we have precedents for instead doing what you describe — but if l especially if we do have, then it seems worth revisiting. mfreed and ntim are two people who know more and could speak with more insight about it than I can.

[18:50:57.0153] <sideshowbarker>
* I contributed to the spec patch for that, and also implemented it in WebKit, and I don't recall any specific discussion about only firing the event on actual user-initiated toggling of 
details. I think the initial spec patch/PR had it the same way it's in the spec now, and maybe nobody questioned it. I don't personally know if we have precedents for instead doing what you describe — but especially if we do have, then it seems worth revisiting. @mfreed:matrix.org and @ntim:mozilla.org are two people who know more and could speak with more insight about it than I can.

[19:01:46.0071] <Domenic>
> <@domfarolino:matrix.org> How do we normally handle things like https://github.com/whatwg/fetch/issues/1772 and https://github.com/whatwg/console/issues/238? Do we just trust that the translation is good and link to it? (i.e., I assume that's what we did for the JP translations)

Yeah, that has been the approach.


2024-09-12
[07:33:43.0458] <Dominic Farolino>
annevk: mind if I merge https://github.com/whatwg/html/pull/10579?

[12:18:13.0829] <Dominic Farolino>
 * annevk: mind if I merge https://github.com/whatwg/html/pull/10579? (Done.)


2024-09-16
[17:22:33.0765] <snek>
there was a web api added recently for like putting more useful names or data or smth in stack traces in devtools and i don't remember the specifics or what it was called, does anyone know what i'm talking about?

[17:32:51.0060] <snek>
oh its console.createTask. i guess its not that new lol

[01:11:37.0936] <annevk>
vwkd: probably best to raise as an issue against whatwg/fetch. I don't really recall a discussion around `Request.json()` though it makes sense to me.


2024-09-17
[08:30:31.0566] <annevk>
Domenic: do the changes in https://github.com/w3c/csswg-drafts/issues/10550#issuecomment-2328247135 work for you? Any preferred text for referencing this kind of serialization from HTML?

[10:43:01.0587] <Panos Astithas>
How do people feel about skipping this week's not-often-well-attended WHATNOT meeting, since we'll have a week full of WHATUP meetings next week? (/CC annevk, Domenic)

[10:43:30.0215] <Panos Astithas>
There is only one topic in the agenda so far.


2024-09-18
[17:16:54.0280] <Domenic>
I'm OK to skip.

[22:36:53.0795] <Domenic>
> <@annevk:matrix.org> Domenic: do the changes in https://github.com/w3c/csswg-drafts/issues/10550#issuecomment-2328247135 work for you? Any preferred text for referencing this kind of serialization from HTML?

Yes, they work! I think I suggested some reference text in the last sentence of https://github.com/w3c/csswg-drafts/issues/10550#issuecomment-2292850688 . (Although I used `<a href="...">` instead of `<span data-x="...">` for clarity since they don't know Wattsi over there.)

[23:13:24.0595] <annevk>
I'm okay to skip as well.

[23:16:40.0584] <annevk>
hsivonen: Adam Rice: I'd appreciate your thoughts on https://github.com/whatwg/encoding/pull/335. I'm convinced we should do GB18030-2022, but not entirely sure whether it should impact GBK or not. It seems about as incompatible for either encoding so maybe keeping them aligned is better? That would require updating the underlying table and have 18 additional encoder mappings. The alternative would be not touching the table and have 18 encoder/decoder mappings solely for gb18030.

[01:35:54.0786] <hsivonen>
> <@annevk:matrix.org> hsivonen: Adam Rice: I'd appreciate your thoughts on https://github.com/whatwg/encoding/pull/335. I'm convinced we should do GB18030-2022, but not entirely sure whether it should impact GBK or not. It seems about as incompatible for either encoding so maybe keeping them aligned is better? That would require updating the underlying table and have 18 additional encoder mappings. The alternative would be not touching the table and have 18 encoder/decoder mappings solely for gb18030.

It seems bad to tweak legacy encodings, and I'm not sure how much this matters in practice. I'm quite skeptical of there being real interest these days in GB18030-the-encoding as opposed to GB18030-the-repertoire with UTF-8. Making WHATWG gbk diverge from Windows 936 does not seem nice in principle, but I could see an argument why changing WHATWG gbk might make sense in practice if any of this matters in practice. Do you know if Microsoft intends to change Windows code pages 936 and 54936?

[01:40:04.0398] <annevk>
hsivonen: I know ICU doesn't plan to make changes to GBK. I doubt Windows would make changes. The main reason to change GBK as well is because it already inherits most of gb18030 in the Encoding Standard. E.g., GBK uses the gb18030 decoder. Anyway, we could decide to safeguard GBK from these additional changes and defend it with test coverage, I'm just not sure it's worth it. Especially as it's mainly PUA code points.

[01:40:24.0868] <annevk>
And it already regressed in Chromium and WebKit for about a year without anybody complaining...

[01:41:11.0053] <hsivonen>
> <@annevk:matrix.org> And it already regressed in Chromium and WebKit for about a year without anybody complaining...

Do you mean Chromium has implemented the gb18030 label as gb18030-2022?

[01:43:17.0235] <annevk>
hsivonen: some variant of gb18030-2022, yes. I think the one they currently ship is not the Unicode recommendation as they just copied the code from WebKit without much discussion. And it has impacted their implementation of GBK as well (because of the Encoding Standard sharing a lot of logic between GBK and gb18030), just like it has in WebKit...

[01:43:34.0114] <Ms2ger>
🙈

[01:45:09.0160] <hsivonen>
I'm already sad that our EUC-KR isn't an exact PUA match for Windows code page 949, but my sadness about this isn't really a good technical argument.

[01:47:24.0013] <hsivonen>
If gbk in both WebKit and Chromium has diverged from Windows code page 936 for a year towards less PUA, I guess it's a rather convincing sign of it being Web-compatible. What happens if you try to encode the relevant PUA code points?

[01:48:03.0676] <annevk>
Yeah, I can't say I'm thrilled about how all this went down with some flip-flopping along the way as to how exactly GB18030-2022 is to be implemented coupled with unforeseen side effects for GBK. But it is what it is.

[01:49:39.0671] <annevk>
hsivonen: that currently fails. https://github.com/web-platform-tests/wpt/pull/48240 demonstrates this. The reason is that the additional encoder code points are guarded by a gb18030 check. It's like the worst solution one can imagine.

[01:52:31.0801] <annevk>
hsivonen: given the three lists in https://github.com/whatwg/encoding/issues/312#issuecomment-2354764499 my idea for the best solution given today's knowledge is as follows:

1. We encode the 18 bidirectional mappings (the first set) directly in the gb18030 index.
2. We encode the 18 from Unicode mappings (the second set) as an additional encoder step shared by GBK and gb18030.
3. We leave the third set alone as the gb18030 decoder (and GBK decoder for that matter) already handle those as-is.

[01:55:22.0073] <hsivonen>
> <@annevk:matrix.org> hsivonen: given the three lists in https://github.com/whatwg/encoding/issues/312#issuecomment-2354764499 my idea for the best solution given today's knowledge is as follows:
> 
> 1. We encode the 18 bidirectional mappings (the first set) directly in the gb18030 index.
> 2. We encode the 18 from Unicode mappings (the second set) as an additional encoder step shared by GBK and gb18030.
> 3. We leave the third set alone as the gb18030 decoder (and GBK decoder for that matter) already handle those as-is.

Does 'as-is' in item 3 mean doing the Unicode recommendation of decoding the 4-byte sequences (as gb18030) to non-PUA (and errors in gbk)?

[01:57:34.0399] <annevk>
hsivonen: the GBK decoder is the gb18030 decoder. They are currently completely identical. And those sequences already map to non-PUA in the gb18030 decoder as currently specified. (This third set doesn't actually constitute a change with respect to GB18030-2005. This is a bit confusing and did result in redundant code being written for WebKit. I mentioned it to Ken Lunde, but I'm not sure much is going to be done about it.)

[01:59:07.0118] <hsivonen>
> <@annevk:matrix.org> hsivonen: the GBK decoder is the gb18030 decoder. They are currently completely identical. And those sequences already map to non-PUA in the gb18030 decoder as currently specified. (This third set doesn't actually constitute a change with respect to GB18030-2005. This is a bit confusing and did result in redundant code being written for WebKit. I mentioned it to Ken Lunde, but I'm not sure much is going to be done about it.)

Ah, right sorry about my confusing about gbk decoder. If the third set stays as-is in the index, will the first set end up taking precedence over the third set in the gb18030 encoder due to existing specified search order?

[02:00:07.0925] <annevk>
hsivonen: if you want even more evidence, see how https://github.com/WebKit/WebKit/commit/068d177a29ad44c82c95dd204a27d4841979c301 removed those mappings without needed corresponding changes in tests.

[02:01:23.0193] <annevk>
hsivonen: yeah it'll take up precedence because we look at the two-byte table (index gb18030) before resorting to index gb18030 ranges

[02:01:34.0622] <annevk>
 * hsivonen: yeah it'll take precedence because we look at the two-byte table (index gb18030) before resorting to index gb18030 ranges

[02:03:06.0349] <hsivonen>
> <@annevk:matrix.org> hsivonen: yeah it'll take precedence because we look at the two-byte table (index gb18030) before resorting to index gb18030 ranges

OK. I guess it makes sense to do this, although I don't like it that this will result in more caveats for me to mention every time I happen to talk about the relationship of the WHATWG encoding and Windows code pages. (But so far, it's only been about talking about them: no real-world evidence of practical problem either way.)

[02:04:31.0449] <annevk>
hsivonen: maybe just memorize a URL for when people are eager for the cliff notes? :-)

[02:05:03.0749] <annevk>
Okay, I'll see about preparing a new PR. 

[02:05:28.0334] <annevk>
Thanks for talking it through!

[02:05:41.0235] <hsivonen>
Thanks!

[02:06:14.0338] <hsivonen>
The URL to memorize will be https://docs.rs/encoding_rs/ . (See e.g. https://docs.rs/encoding_rs/latest/encoding_rs/static.GBK.html )

[03:26:16.0197] <smaug>
hmm, CloseWatchers kind of work in documents which aren't bound to a browsing context? I guess that is just a mistake (or I'm missing some check somewhere)

[03:26:52.0927] <smaug>
Fine to me

[08:14:56.0719] <zcorpan>
Domenic: ^

[08:25:45.0381] <Dominic Farolino>
OK who is up to date on sequential focus navigation knowledge? I'm reading https://html.spec.whatwg.org/C#sequential-navigation-search-algorithm and I think I've convinced myself that in the algorithm, there is no semantic difference between the "selection mechanism=sequential" and "selection mechanism=DOM" cases. Where am I off? Both seem to get the first (for example) sequentially focusable area in starting point's Document, _after_ starting point, no?

[09:22:31.0660] <Dominic Farolino>
(I've asked this question more concretely in https://github.com/whatwg/html/pull/10632#pullrequestreview-2313203811)

[09:23:09.0444] <annevk>
hsivonen: Adam Rice: https://github.com/whatwg/encoding/pull/336 is ready for review now. I also filed all the implementer bugs and verified the test coverage with a WebKit patch.

[09:40:05.0352] <annevk>
hsivonen: FWIW, the visualization script runs as part of the build: https://github.com/whatwg/encoding/blob/main/Makefile

[09:40:32.0588] <hsivonen>
> <@annevk:matrix.org> hsivonen: FWIW, the visualization script runs as part of the build: https://github.com/whatwg/encoding/blob/main/Makefile

OK.

[10:13:04.0693] <Panos Astithas>
Thanks all, the meeting is now canceled.


2024-09-19
[18:26:20.0073] <Domenic>
> <@smaug:mozilla.org> hmm, CloseWatchers kind of work in documents which aren't bound to a browsing context? I guess that is just a mistake (or I'm missing some check somewhere)

The check is in https://html.spec.whatwg.org/#dom-closewatcher step 1

[18:27:27.0314] <Domenic>
> <@domfarolino:matrix.org> OK who is up to date on sequential focus navigation knowledge? I'm reading https://html.spec.whatwg.org/C#sequential-navigation-search-algorithm and I think I've convinced myself that in the algorithm, there is no semantic difference between the "selection mechanism=sequential" and "selection mechanism=DOM" cases. Where am I off? Both seem to get the first (for example) sequentially focusable area in starting point's Document, _after_ starting point, no?

Rakina wrote a good chunk of it, but has been away from that for like 3 years... I can try to page it back in, although it's unclear if I'll get to it before/during TPAC. That stuff is hard.

[00:51:39.0105] <smaug>
Domenic: https://html.spec.whatwg.org/#dom-dialog-showmodal step 9

[00:52:48.0155] <Domenic>
smaug: ah yep, there's an assertion failure there... please file an issue and I'll fix!

[00:53:00.0505] <Domenic>
I wonder what other steps are strange with non-fully-active documents.

[00:53:01.0281] <smaug>
keithamus: ^

[00:57:49.0460] <smaug>
https://github.com/whatwg/html/issues/10634 

[06:29:04.0807] <Dominic Farolino>
Domenic: OK I've added you as the reviewer for https://github.com/whatwg/html/pull/10632 instead. Thanks for "volunteering" hehe

[08:11:40.0871] <annevk>
hsivonen: could you also review https://github.com/web-platform-tests/wpt/pull/48240? That's the only tests remaining for GB18030-2022

[08:12:59.0970] <annevk>
hsivonen: I'm thinking I'll give people until after TPAC to comment on the whatwg/encoding PR before merging. Even though I don't really expect any opposition it's still a big change of sorts so it seems kinda warranted. And I'd rather not have to revisit once it lands.

[09:35:33.0835] <hsivonen>
> <@annevk:matrix.org> hsivonen: I'm thinking I'll give people until after TPAC to comment on the whatwg/encoding PR before merging. Even though I don't really expect any opposition it's still a big change of sorts so it seems kinda warranted. And I'd rather not have to revisit once it lands.

Makes sense.

[11:22:42.0980] <hsivonen>
annevk: Do you know why some PUA mapping with established glyphs on the 0xFE row remained as PUA? E.g. 0xFE, 0x52 is still PUA.

[11:50:24.0618] <hsivonen>
annevk: Does https://github.com/hsivonen/encoding_rs/pull/108/commits/47071769582e5f73d1a93d937ba59220799e4ffc accurately describe WHATWG GBK and WHATWG GB18030?


2024-09-20
[18:24:21.0163] <Domenic>
Kind of an interesting case... we're considering registering a URL that serves as an identifier, for a WICG spec. It would be unfortunate if that URL was `https://wicg.github.io/blah` since WICG is supposed to be a temporary home. I wonder if it'd make sense to allocate a `https://whatwg.org/` URL before WICG graduation? The alternative we're considering is to just use an `about:` URL. https://github.com/WICG/nav-speculation/issues/330#issuecomment-2357573086

[21:55:34.0669] <annevk>
Domenic: it seems you could just follow precedent in https://www.iana.org/assignments/http-problem-types/http-problem-types.xhtml and have it prefixed with the IANA URL?

[21:56:36.0879] <Domenic>
Hmm I suppose so. And I guess then we can update the reference column over time. So it's almost as good as a normal URL, just requires the developer to do an extra click to reach the spec.

[21:57:37.0713] <annevk>
hsivonen: I think so, though I think of GBK more as the two-byte mappings of GB18030-2022 + a couple minor encoder changes.

[22:33:28.0314] <annevk>
zcorpan: can "update the source set" run again when the environment changes in some way?

[22:57:21.0894] <zcorpan>
> <@annevk:matrix.org> zcorpan: can "update the source set" run again when the environment changes in some way?

https://html.spec.whatwg.org/multipage/images.html#reacting-to-environment-changes

[23:09:40.0100] <annevk>
Oh, maximum leeway. Seems dangerous. Are you going to attend TPAC zcorpan?

[23:15:51.0885] <annevk>
hsivonen: I was clicking around yesterday because what else should one day and I found https://github.com/whatwg/encoding/commit/e7b9ce0ed75da6bbc87aa952194025a03df97ce6. Which means that index gb18030 ranges does not reflect GB18030-2005, it reflects GB18030-2000. And the pointer algorithms make it match GB18030-2005! It also means that back then we didn't do the equivalent of the Unicode recommendation for 2022.

[23:16:54.0005] <annevk>
 * hsivonen: I was clicking around yesterday because what else should one do and I found https://github.com/whatwg/encoding/commit/e7b9ce0ed75da6bbc87aa952194025a03df97ce6. Which means that index gb18030 ranges does not reflect GB18030-2005, it reflects GB18030-2000. And the pointer algorithms make it match GB18030-2005! It also means that back then we didn't do the equivalent of the Unicode recommendation for 2022.

[23:19:13.0505] <annevk>
I'm half-tempted to implement the equivalent of the Unicode recommendation for 2022 for 2005, but only half and I will resist as it's been stable for so long and none of these changes should have been made to begin with.

I will further correct the index gb18030 ranges wording though.

[00:42:17.0178] <zcorpan>
annevk: I will attend TPAC yes. There was no hook for environment changes and I wanted to allow not running the steps when the tab is in the background for example. Though I didn't intend for it to be "may at any time" forever.

[03:13:10.0090] <hsivonen>
> <@annevk:matrix.org> hsivonen: I was clicking around yesterday because what else should one do and I found https://github.com/whatwg/encoding/commit/e7b9ce0ed75da6bbc87aa952194025a03df97ce6. Which means that index gb18030 ranges does not reflect GB18030-2005, it reflects GB18030-2000. And the pointer algorithms make it match GB18030-2005! It also means that back then we didn't do the equivalent of the Unicode recommendation for 2022.

Thanks for looking into this. Was U+1E3F really the only change from -2000 to -2005? Now I feel I need to investigate how U+E7C7 behaves to see if the number of unrepresentable PUA code points is now 20 instead of 19. I still find it mysterious that there are PUA mappings with established glyphs left, such as 0xFE, 0x52. Why didn't -2022 map those to relevant non-PUA?

[03:20:49.0418] <hsivonen>
> <@hsivonen:mozilla.org> Thanks for looking into this. Was U+1E3F really the only change from -2000 to -2005? Now I feel I need to investigate how U+E7C7 behaves to see if the number of unrepresentable PUA code points is now 20 instead of 19. I still find it mysterious that there are PUA mappings with established glyphs left, such as 0xFE, 0x52. Why didn't -2022 map those to relevant non-PUA?

Ah, we do have a four-byte sequence for U+E7C7.

[03:21:46.0414] <hsivonen>
> <@hsivonen:mozilla.org> Ah, we do have a four-byte sequence for U+E7C7.

(I even have specific tests for it in encoding_rs.)

[04:12:13.0473] <annevk>
hsivonen: indeed, https://encoding.spec.whatwg.org/#index-gb18030-ranges-code-point handles it specifically. I updated the PR to have an even more elaborate explanation for index gb18030 ranges.

[04:14:04.0770] <hsivonen>
> <@annevk:matrix.org> hsivonen: indeed, https://encoding.spec.whatwg.org/#index-gb18030-ranges-code-point handles it specifically. I updated the PR to have an even more elaborate explanation for index gb18030 ranges.

So that change got different backwards-compatibility treatment than the -2022 changes, right? (Not suggesting any change here. Just trying to understand all the moving parts.)

[04:36:57.0430] <annevk>
hsivonen: indeed. That change we handled exactly as the authors of 2005 wanted (and also as the authors of 2022 envisioned, but Unicode then overrode successfully somehow).

[04:38:39.0664] <hsivonen>
> <@annevk:matrix.org> hsivonen: indeed. That change we handled exactly as the authors of 2005 wanted (and also as the authors of 2022 envisioned, but Unicode then overrode successfully somehow).

OK. (Not worthwhile trying to retroactively align the 2005 change approach with the 2022 change approach.)

[07:29:31.0920] <annevk>
TabAtkins: should be easy r+: https://github.com/speced/bikeshed/pull/2925

[07:32:47.0865] <Ms2ger>
nl is a fake language

[07:52:25.0147] <annevk>
Ms2ger: je ne sais quoi

[07:52:50.0191] <annevk>
TabAtkins: hah, too easy. So how do I bump semver? I looked around a bit, but nothing jumped out to me.

[08:02:16.0517] <annevk>
Hmm, I think I managed to hack something together by commenting out some stuff in release.py

[08:04:46.0682] <TabAtkins>
No need, that's picked up by bikeshed-data

[08:06:12.0046] <annevk>
TabAtkins: interesting. I guess I'll try again then and see. Also, https://github.com/speced/bikeshed/pull/2926 created a diff I can't quite explain but I guess that can be closed then.

[08:17:32.0134] <TabAtkins>
Yeah it just takes a few minutes for the data update to cron https://github.com/speced/bikeshed-data/commit/d64bb355d04f7824190b929191964f8d9c5214d7

[08:18:00.0157] <TabAtkins>
`bikeshed update` will pick it up now


2024-09-21
[06:00:47.0678] <hacknorris>
bad idea but i thought of adding "ascii" attribute to html img tag so non-blind terminal users could see image…

[06:01:32.0258] <hacknorris>
 * /spoiler bad idea but i thought of adding "ascii" attribute to html img tag so non-blind terminal users could see image…

[06:09:20.0255] <hacknorris>
and <ascii> tag with alt itself too so contents wouldn't be spitted by screenreaders…

[10:12:55.0975] <🔥🔥🔥Max the hottest🔥🔥🔥>
**❣️🔥❣️🔥❣️🔥❣️🔥❣️`porn games,top 5 porn games,sexy,porn games in android,4d porn,4d vr porn,adult games,4d virtual reality porn,porno,games,4d,sexy hypnosis for women,porn,vr porn,porn vr,4d gaming chair,gamer,sexy hypnosis for girls,mmf porn,top 5 adult games,3d porn games,top 10 adult games,pornvr,vrporn,adult games in most,mobile adult games,vr porno,top 5 best adult games,virtual reality porn,adult games in android,vr porn react`❣️🔥❣️🔥❣️🔥❣️🔥❣️** https://urlshort.asia/nmiBf

[10:20:19.0561] <Luke Warlow (ooo till 23rd)>
annevk: or keithamus: ☝🏻

[10:54:03.0918] <freddy>
...I am also happy to hepl moderate this channel, annevk ;-)

[14:42:46.0800] <oluwafemi franchis>
Hello guys 🥰🥰 I wanted to let you know that I have a Telegram channel where I share some amazing Verified sauce and soft cashout
Here are some of the things you can find on my channel 💯💯💯

I promise you that all the methods are real and legit. No scams here! And please don't worry about how much money you have. Just be honest and I'll try my best to help you out.
So, if you're interested, please join my channel through the link below. See you there ✅✅

🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇
💸💸💸💸

https://t.me/+oGahmYblRPU4NjE0

[14:43:04.0894] <oluwafemi franchis>
Hello guys 🥰🥰 I wanted to let you know that I have a Telegram channel where I share some amazing Verified sauce and soft cashout
Here are some of the things you can find on my channel 💯💯💯

I promise you that all the methods are real and legit. No scams here! And please don't worry about how much money you have. Just be honest and I'll try my best to help you out.
So, if you're interested, please join my channel through the link below. See you there ✅✅

🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇
💸💸💸💸

https://t.me/+oGahmYblRPU4NjE0


2024-09-22
[06:19:23.0331] <Dominic Farolino>
It would be kinda nice if we had a "mark as non-substantive change" button to bypass the participant agreement for tiny editorial fixes, like W3C specs do.

[15:05:14.0709] <Domenic>
My plan was always to just merge; that's why the check is not a blocker for merging


2024-09-23
[06:38:42.0562] <annevk>
Dominic Farolino: Domenic: https://github.com/whatwg/sg/issues/63 is the latest public discussion on that 

[11:12:43.0278] <help.you.guys>
Hello guys 🥰🥰 I wanted to let you know that I have a Telegram channel where I share some amazing Verified sauce and soft cashout
Here are some of the things you can find on my channel 💯💯💯

I promise you that all the methods are real and legit. No scams here! And please don't worry about how much money you have. Just be honest and I'll try my best to help you out.
So, if you're interested, please join my channel through the link below. See you there ✅✅

https://t.me/+fk5a2eNOe9BhY2I8
https://t.me/+fk5a2eNOe9BhY2I8
https://t.me/+fk5a2eNOe9BhY2I8
https://t.me/+fk5a2eNOe9BhY2I8
🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇🥇
💸💸💸💸

[12:19:09.0107] <TabAtkins>
Hm, HTML is the authoritative definition of :state(), yeah? It's not just referencing another spec, right? (MDN links to HTML for it, at least.)

[12:19:43.0378] <TabAtkins>
(I ask because its definition isn't marked up correctly to be picked up for auto linking, and I'm making sure it's the right place before I drop a PR.)

[12:20:39.0635] <annevk>
TabAtkins: yes. Though I think for completeness there also needs to be a definition in Selectors for parsing purposes.

[12:21:20.0673] <TabAtkins>
Ah, ok, I'm happy to drop the canonical definition into Selectors, then.

[12:21:36.0577] <annevk>
TabAtkins: https://html.spec.whatwg.org/multipage/#selector-custom is the current definition; I don't remember exactly why it doesn't have :state() in its name

[12:22:12.0951] <TabAtkins>
yeah, the name is wrong *and* it's not exported (like the other terms, which is correct for them since they're just internal dfns and should be deferring to the dfns in other specs)

[12:22:19.0386] <Domenic>
I thought we settled this with a for="" at some point...

[12:22:41.0211] <TabAtkins>
I'm not sure what a for='' would do here.

[12:22:43.0125] <Domenic>
No I guess we settled on noexport

[12:24:55.0532] <annevk>
https://github.com/whatwg/html/pull/8467 is the PR, but it's hard finding the relevant thread among all the resolved threads.


2024-09-24
[07:46:28.0540] <mikedidomizio>
Hey everyone,

I've been waiting to hear from mfreed  and ntim  regarding their thoughts on the `<details>` element, specifically how it works with `ontoggle` and the `open` attribute, but haven't seen any updates from them since my [initial post](https://matrix.to/#/!AGetWbsMpFPdSgUrbs:matrix.org/$bdM29LAE55ZkQa9Q_h31_MKLF_XS6zNqdC-mjbvSW9I?via=matrix.org&via=mozilla.org&via=igalia.com).

At work we're potentially planning on modifying its behaviour (specifically we're considering preventing `ontoggle` from automatically firing if the `open` attribute is present) through a React component built on top of the `<details>` element.
After discussing this with my team, it became clear that the current behaviour isn't intuitive for most developers, and this leaves a chance of introducing more bugs into our code base (a bug is what started this all).
While I respect the WHATWG's decision on how they think things should work, if modifying behaviour prevents the likelihood of bugs in the codebase, and misunderstandings within my team, I’m willing to implement a change. That’s why we’re opting for a custom implementation to change how it works.

I'm still very interested in the reasoning behind the current design choices, and if this is something that should be revisited.  A part of me wonders if I'm overthinking this, but I also worry how many devs in the future may misunderstand the behaviour of the `<details>` element, given how the `ontoggle` event handler works differently than how most (all?) other event handlers work.

I noticed you guys have a few meetings, I'm not sure if that's the correct place for you to discuss further, or for me to DM the folks mentioned above, or we continue to wait for them.

Thanks and let me know if there's anything I can do to help.

