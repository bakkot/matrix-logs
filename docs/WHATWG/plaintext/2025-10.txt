2025-10-01
[02:43:35.0685] <keithamus>
https://github.com/whatwg/html/issues/11733 one of the repo admins should probably block this user.

[04:11:21.0624] <zcorpan>
keithamus: Looks like they're blocked. Thanks

[05:23:18.0032] <annevk>
(I deleted the issue as well, in case anyone wonders what's going on.)

[11:19:13.0168] <cwilso>
Looking at the results of the meeting time poll, it seems there's general consensus that 1) we should keep *an* APAC-friendly time, but should decrease the frequency.  I'm thinking we should probably change to cycle three AMER+EMEA with one APAC-friendly time.  I'm kind of ambivalent if we use the APAC-AMER or APAC-EMEA, but seems like it would be slightly better to go with the former.  (Seems like there is slightly more attendance for the APAC-AMER than the APAC-EMEA on average.). WDYAT?

[15:35:47.0324] <smaug>
APAC-EMEA has usually folks from 3 browser engines, APAC-AMER often only from 2, I think.


2025-10-02
[21:47:00.0803] <sideshowbarker>
@cwilso Both the APAC-friendly times are equally inconvenient for me. The APAC-AMER one is exactly the time of day when Iâ€™m busy getting my kids on their way to school and preschool. And the APAC-EMEA one is pretty much the time of day when Iâ€™m busy cooking dinner for my kids. So for me personally the AMER+EMEA one (even though itâ€™s at midnight my time) is actually more convenient than either of the APAC-friendly ones. 

[21:47:31.0664] <sideshowbarker>
* cwilso:  Both the APAC-friendly times are equally inconvenient for me. The APAC-AMER one is exactly the time of day when Iâ€™m busy getting my kids on their way to school and preschool. And the APAC-EMEA one is pretty much the time of day when Iâ€™m busy cooking dinner for my kids. So for me personally the AMER+EMEA one (even though itâ€™s at midnight my time) is actually more convenient than either of the APAC-friendly ones. 

[00:34:47.0244] <Noam Rosenthal>
I find the APAC+EMEA one to be the most convenient...
but I wonder if there are APAC people who semi-regularly attend either, now that Domenic has retired? And in general which of these is better for them?

[02:12:14.0685] <Noam Rosenthal>
Luke Warlow: regarding multiple methods - I found that web developers often look to do something specific rather then look at a "family of methods". The same way people prefer the multiple `Array` methods that do specifc things rather than using `reduce`. `element.insertHTML(html, "before")`    doesn't add much readability as opposed to `element.beforeHTML(html)`

[02:13:46.0518] <Luke Warlow>
Yeah tbf I guess my main unsureness is about adding so many new ones, with no real prospect of removing the old ones.

One other question is how does this work with iframes? Am I able to stream into an iframe element somehow?

[02:14:22.0976] <Noam Rosenthal>
You mean the inline content of an `<iframe>` ?

[02:14:51.0264] <Noam Rosenthal>
Can you `iframe.insertAdjacentHTML()` today? It would work similarly

[02:15:05.0946] <smaug>
I wish we hadn't added the explicit microtask checkpoint before script execution (when there isn't JS on stack). Now with streaming that wouldn't work quite the same way if a stream adds multiple scripts and first one triggers promise callbacks. Those might get handled after the other scripts. Unless each script execution is its own microtask

[03:08:49.0807] <foolip>
keithamus: if you want to reproduce https://github.com/whatwg/html-build/issues/297#issuecomment-3275025761, there's a bikeshed-experiment branch in both html and html-build to check out. Then run `./build.sh --bikeshed --no-update` to see if it works at all.

[03:09:17.0150] <foolip>
keithamus: to then get it into a profiler, I've edited the script to print the bikeshed command and exit instead of running bikeshed

[03:09:55.0960] <foolip>
keithamus: it honestly wasn't easy for me to get everything working, so happy to VC and walk you through the setup that worked for me to make changes to bikeshed and try them in a profiler.

[03:10:19.0666] <Ms2ger>
What's HMTL?

[03:10:44.0308] <keithamus>
Hyper Markdown Templating Language

[03:38:11.0637] <Noam Rosenthal>
Luke Warlow: https://github.com/whatwg/html/issues/10122 has some good pros/cons about arguments vs. multiple methods from Lea Verou. I think Domenic swayed me towards the multiple-method camp but I'm not zealous about it. Will solicit more feedback from web developers about this. In any case, I added this as an alternative to the OP.

[03:44:47.0694] <annevk>
At this point I think multiple methods is more DOM-like than some kind of awkward positional argument. And although my preference would typically be to reuse the existing methods, we have made a decision of sorts here to break new ground so we can solve a set of issues. (For instance, built-in support for declarative shadow roots.)

[03:47:54.0772] <Noam Rosenthal>
annevk: re your `beforeHTML` comment- doesn't it make it sound like we're putting something "before some HTML"?

[03:48:23.0739] <Luke Warlow>
Was there a reason that innerHTML didn't just support DSD? Afaik it's a Boolean flag set based on the method used. Was it compat?

[03:50:30.0577] <Noam Rosenthal>
https://github.com/whatwg/dom/issues/912

[03:52:54.0941] <Noam Rosenthal>
(XSS protection from injecting shadow DOM by surprise without an opt in, to cut an extremely long story short)

[03:57:59.0095] <annevk>
Noam Rosenthal: I suppose, but I think it's still preferable as it's consistent with appendHTML and setHTML and such.

[04:13:06.0654] <freddy>
`beforeHTML` and `appendHTML` would sanitize such that we would need an Â´...Unsafe` friend for all of these, that's still correct right?

[04:13:12.0240] <freddy>
* `beforeHTML` and `appendHTML` would sanitize such that we would need an `...Unsafe` friend for all of these, that's still correct right?

[04:15:31.0503] <Noam Rosenthal>
We would need an unsafe friend for all of them.
- sanitizer is not a thing yet
- you don't always want to sanitize. you might trust the source and want to run scripts etc. "Unsafe" doesn't mean "bad", it means "only run this from a trusted source"

[04:15:56.0129] <freddy>
Nvm. I should just read on GitHub.

[04:16:36.0173] <freddy>
Yeah, I agree. Unsafe doesn't mean bad. It's the sharp knife.

[04:20:33.0705] <Noam Rosenthal>
I have a feeling webdevs would push back on consistency winning in this one... also `setHTML` is corresponding to `replaceChildren` so we're not 100% consistent to begin with. Either way, bikeshedding is a sign that we've made some progress :)

[04:22:40.0522] <freddy>
looking forward to the first time I see a website using `setHTML()` irl

[04:35:25.0243] <Noam Rosenthal>
Our devrel agrees with Anne though, so it might be just me. Updated the OP with names following the discussion

[04:47:03.0218] <keithamus>
https://github.com/speced/bikeshed/pull/3181 had a go at trying to integrate Rust. 

[04:47:14.0666] <keithamus>
Fair warning: I have no idea what I am doing

[04:54:03.0979] <keithamus>
Now that i look at this more closely I can confirm I have no idea what I'm doing because I forgot to import pred_wrapper so this whole thing is a no-op ðŸ˜‚

