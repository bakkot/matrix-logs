2022-06-01
[02:54:00.0184] <sideshowbarker>
For the `elementtiming` content attribute, I haven’t found a PR for adding it to the HTML spec. Don’t we need one?
It’s not adequately specified in https://wicg.github.io/element-timing/#sec-modifications-DOM but from what can be gleaned from that, it seems like it would need to be added to HTML as a new global attribute. Right?

[04:53:26.0459] <Yoav Weiss>
Domenicannevk: Can we land https://github.com/whatwg/html/pull/7885 ? 

[07:05:31.0920] <Domenic>
> <@yoavweiss:matrix.org> Domenicannevk: Can we land https://github.com/whatwg/html/pull/7885 ?

Yes, it looks like the Fetch PR is landed, I will land the HTML PR.

[07:05:51.0617] <Domenic>
> <@sideshowbarker:mozilla.org> For the `elementtiming` content attribute, I haven’t found a PR for adding it to the HTML spec. Don’t we need one?
> It’s not adequately specified in https://wicg.github.io/element-timing/#sec-modifications-DOM but from what can be gleaned from that, it seems like it would need to be added to HTML as a new global attribute. Right?

Yes, any HTML global attributes with multi-implementer interest should be specified in HTML. I suspect this is a single-implementer spec?

[07:09:04.0428] <raphaellouis>
Hi all! I wish everyone is well! How are you all? 
1. I would like to publicize my GitHub profile here are the ideas implemented in Js. Some ideas I filed, I found it very bad to implement and they didn't have a good concept. In summary, I implemented the following ideas(apis): 'BestReadOnTheWeb', 'MeasuringUserInteractionTimeWithWebsite' - I would to have positive or negative feedback of each idea - if you all wants. Note: Other ideas I've shelved too - because they're bad ideas because they depend on other things and/or ideas to get done. Link: https://github.com/raphaellouisandress - the licenses for each code are MIT.
2. I hope I helped with a few things to make the web better, safer, transparent
3. I feel that after building some of these implementations my help has ended, goodbye folks. Keep up the great work all, I really enjoyed the feedback I got here.

[07:10:46.0263] <Yoav Weiss>
sideshowbarker: there was some interest in `elementtiming` from Mozilla folks, but I'm not sure if it's enough for WHATWG HTML integration

[07:11:07.0184] <Yoav Weiss>
^^ sefeng 

[07:12:29.0977] <raphaellouis>
 * Hi all! I wish everyone is well! How are you all?

1. I would like to publicize my GitHub profile here are the ideas implemented in Js. Some ideas I filed, I found it very bad to implement and they didn't have a good concept. In summary, I implemented the following ideas(apis): 'BestReadOnTheWeb', 'MeasuringUserInteractionTimeWithWebsite' - I would to have positive or negative feedback of each idea - if you all wants. Note: Other ideas I've shelved too - because they're bad ideas because they depend on other things and/or ideas to get done. Link: https://github.com/raphaellouisandress - the licenses for each code are MIT.
2. I hope I helped with a few things to make the web better, safer, transparent
3. I feel that after building some of these implementations my help has ended, goodbye folks. Keep up the great work all, I really enjoyed the feedback I got here. I tried to solve some problems and/or help with some proposals in wicg/whatwg/w3

[08:05:16.0017] <sefeng>
yeah, it's okay to say we have interests informally, however I'd like this standard position issue https://github.com/mozilla/standards-positions/issues/192 to be resolved first before adding the attribute  

[08:10:18.0341] <sefeng>
Yoav Weiss: ^

[13:38:23.0586] <ntim>
mfreed: Hi! I'm not sure [my comment here](https://github.com/w3c/csswg-drafts/issues/7319#issuecomment-1144100767) is easy to understand, let me know if you want clarifications

[13:43:12.0410] <Eric Portis (he/him)>
annevk: Would https://github.com/annevk/orb block a response for a non-safelisted MIME type, that also came back with `Cross-Origin-Resource-Policy: cross-origin`? (Should it?)


2022-06-02
[23:39:33.0575] <annevk>
Eric Portis (he/him): it currently does, in https://github.com/annevk/orb/issues/30 I mention it as a possible fast path, but to match its processing model we'd have to track it across redirects

[23:41:18.0547] <annevk>
Eric Portis (he/him): I think if we do it properly (i.e., account for redirects) it's probably reasonable to safelist such responses

[03:33:48.0865] <Ondřej Žára>
Looks like the "Libera" IRC is not the proper whatwg chat place, right?

[03:34:09.0380] <Ondřej Žára>
That might explain noone responding to my messages ;-)

[03:42:00.0386] <annevk>
Ondřej Žára: I don't think we ever advertised anything but Freenode and this channel, and now it's just this channel

[03:43:01.0782] <Ondřej Žára>
> <@annevk:mozilla.org> Ondřej Žára: I don't think we ever advertised anything but Freenode and this channel, and now it's just this channel

Yeah, I have no memories about how I got from Freenode to Libera. Whatever.

[03:43:08.0335] <Ondřej Žára>
Let me repaste my original Libera question then

[03:43:15.0874] <Ondřej Žára>
are there any general guidelines regarding "js property <-> HTML attribute" reflection for custom elements?

[03:43:23.0502] <Ondřej Žára>
for instance those interactive components whose properties change quickly (`<my-map lat=... lon=...>`)

[03:43:50.0933] <Ondřej Žára>
I recall people suggesting to use attributes as the source of truth

[03:43:57.0242] <Ondřej Žára>
But that might not hold any more?

[03:52:30.0157] <annevk>
Might be a good question for #web-components:matrix.org though it's not very active. There's definitely no guidelines in the standard. I'd recommend looking at https://html.spec.whatwg.org/#reflect and seeing how it might be applicable for a custom element. At least if you want them to behave like built-in elements. Often that does use the attribute as a source of truth, but you could optimize around that a fair bit.

[03:53:31.0279] <Ondřej Žára>
Thanks for the pointers. Will read the spec part a bit, then probably re-ask in that channel.

[06:58:12.0713] <Eric Portis (he/him)>
annevk:  Ok, thanks! This would make the story for third party media hosts that want to upgrade resources without requiring every document that embeds from them to also upgrade, well, livable, I think.

[06:58:27.0786] <Eric Portis (he/him)>
 * annevk:  Ok, thanks! This would make the story for third party media hosts that want to upgrade resources without requiring every document that embeds from them to also upgrade, well, livable, I think.

[07:49:59.0113] <annevk>
Eric Portis (he/him): I mean in principle ORB shouldn't really impact anyone, though I suppose there might be some perf implications if you don't have your MIME types in order

[07:50:39.0314] <annevk>
Eric Portis (he/him): it might be a reasonable way out however for new image formats and over the long term require something like that for all cross-origin fetches

[09:03:02.0818] <smaug>
Domenic: will be there in the meeting real soon

[10:59:03.0784] <sefeng>
Noam Rosenthal: Just want to make sure I understand the rationale behind the LargestContentfulPaint spec. So if the image is expanded, we don't report the actual painted size, but rather we report the intrinsic size of the image 

[10:59:14.0669] <sefeng>
is it because we don't want web devs to game the metric?

[11:06:43.0007] <Eric Portis (he/him)>
annevk: “in principle ORB shouldn't really impact anyone”

Half of all <img>s load cross-origin; I’d suspect CSS background-image to have a similar breakdown. My mental model of ORB previously was: in order to adopt new image formats, lots of HTML was going to have to change, and there just wouldn’t be a way to use new image formats across origins in CSS. Big impact! Mitigated by CORP.

[11:08:06.0139] <annevk>
Eric Portis (he/him): I see, new media formats definitely have that wrinkle atm

[11:08:21.0608] <annevk>
Eric Portis (he/him): I'd be okay with this compromise

[11:08:42.0803] <annevk>
Eric Portis (he/him): do you want to put it forward in https://github.com/annevk/orb/issues/3?

[11:09:29.0596] <Eric Portis (he/him)>
annevk: will do!

[11:15:35.0783] <Noam Rosenthal>
> <@sefeng:mozilla.org> Noam Rosenthal: Just want to make sure I understand the rationale behind the LargestContentfulPaint spec. So if the image is expanded, we don't report the actual painted size, but rather we report the intrinsic size of the image 

That’s the basic idea. We don’t want an enormously scaled 1x1 image to be considered “largest”

[11:18:42.0767] <sefeng>
Noam Rosenthal: I see, I start to understand the penalty factor thing..but if a scaled 1x1 image is the largest, what's wrong of reporting it..?

[11:30:54.0985] <Noam Rosenthal>
It’s ok but you don’t want to report it as 1000x1000

[11:43:16.0228] <sefeng>
Noam Rosenthal: why don't we if that's what gets painted?

[11:43:20.0014] <sefeng>
 * Noam Rosenthal: why don't we if that's what gets painted?


2022-06-03
[00:21:30.0315] <annevk>
Luca Casonato: heya, https://common-min-api.proposal.wintercg.org/ doesn't list `ErrorEvent`, do you know if Deno or Node.js would be impacted by changes to it?

[00:56:54.0774] <Luca Casonato>
> <@annevk:mozilla.org> Luca Casonato: heya, https://common-min-api.proposal.wintercg.org/ doesn't list `ErrorEvent`, do you know if Deno or Node.js would be impacted by changes to it?

Deno would. We have WebSocket, which uses it.

[00:57:11.0880] <Luca Casonato>
Good catch btw!

[01:10:42.0676] <annevk>
Yoav Weiss: crbug.com/new is failing. Is that going to be fixed?

[01:16:21.0980] <Yoav Weiss>
Thanks for letting me know!

[01:16:32.0780] <Yoav Weiss>
I'll bug folks that actually know how that infra works

[01:38:53.0752] <Yoav Weiss>
crbug.new seems to be working

[01:58:43.0097] <Noam Rosenthal>
> <@sefeng:mozilla.org> Noam Rosenthal: why don't we if that's what gets painted?

It is a heuristic to make higher quality images count as larger than upscaled ones. that metric can be gamed in so many other ways though IMO. Yoav Weiss probably has more context on LCP than myself ☺️

[02:05:30.0073] <Noam Rosenthal>
> <@noamr:matrix.org> It is a heuristic to make higher quality images count as larger than upscaled ones. that metric can be gamed in so many other ways though IMO. Yoav Weiss probably has more context on LCP than myself ☺️

Think of the placeholder use case, when an image element shows a low-quality upscaled image and then loads the full-res image later. The full-res image would be considered larger for purposes of LCP than the placeholder

[02:13:00.0444] <sideshowbarker>
Yoav Weiss: looking at https://www.w3.org/TR/largest-contentful-paint/ I see it still shows https://wicg.github.io/largest-contentful-paint as the ED URL — where instead it should be https://w3c.github.io/largest-contentful-paint/ (which the wicg URL redirects to).
Should I go ahead and raise a PR with a patch?

[02:14:42.0167] <sideshowbarker>
hmm I see the source at https://github.com/w3c/largest-contentful-paint/blob/4a0930ca74a98941237635424cd34c8a44825b2d/index.bs#L10 does already have the w3c URL

[02:18:03.0957] <sideshowbarker>
aha I see https://github.com/w3c/largest-contentful-paint/commit/4a0930ca74a98941237635424cd34c8a44825b2d from 4 days ago already fixed it.
Can you re-build and re-publish that to https://www.w3.org/TR/2022/WD-largest-contentful-paint-20220524/ ?
It’s currently causing some of the mdn-spec-links automation to fail.

[02:25:37.0816] <Yoav Weiss>
we should really just auto-publish all the things..

[02:26:47.0554] <sideshowbarker>
yes you should :)

[02:27:20.0597] <sideshowbarker>
I could help y’all set it up but if this in the webperf group, I think Xiaoqian could too

[05:25:40.0010] <zcorpan>
smaug: ping https://github.com/whatwg/dom/issues/952

[05:27:48.0815] <zcorpan>
and Sam Sneddon [:gsnedders] (or someone from webkit, cdumez seemingly isn't here) ^

[09:09:44.0470] <Domenic>
Noam Rosenthal: I just noticed there are three _response_ variables in https://html.spec.whatwg.org/#preload , with the outer one in step 8 being shadowed? Can that one be deleted?

[09:12:29.0542] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Noam Rosenthal: I just noticed there are three _response_ variables in https://html.spec.whatwg.org/#preload , with the outer one in step 8 being shadowed? Can that one be deleted?

Yea, the outer one is a leftover and should be removed since there's a `preload entry`'s `response` instead.

[09:12:45.0356] <Domenic>
Ah great. Feel free to do so in the same refactoring PR, or in a separate one.

[09:13:30.0478] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Ah great. Feel free to do so in the same refactoring PR, or in a separate one.

Done

[12:53:06.0332] <wanderview>
how do I overload an algorithm name in html spec?  I tried the "for=foo" thing in the <dfn> tag, but it didn't seem to work

[13:20:21.0585] <wanderview>
I guess data-x is my friend

[14:07:36.0547] <Domenic>
wanderview: yeah, https://github.com/whatwg/wattsi/blob/main/Syntax.md is the more-or-less full docs, it's not nearly as good as Bikeshed.


2022-06-04
[03:24:39.0556] <jaywilsonsubbottomforu>
Hey there what's up


2022-06-05
[19:05:13.0095] <californiatl>
 I'll help 10 individuals how to earn $20,000 in just 72 hours  from the crypto market. But you will pay me 10% commission when you receive your profit. if interested send me a direct message via WhatsApp by asking me HOW for more details on how to get started
> +1 (2297781881




2022-06-06
[00:32:17.0259] <alpri1989>
Hi

[08:31:58.0188] <smaug>
Domenic: is https://html.spec.whatwg.org/#the-progress-element:attr-progress-value-4 only authoring requirement?

[08:32:20.0816] <Domenic>
Yes

[08:32:37.0148] <smaug>
The paragraphs below seem to hint that value and max content attributes should be parsed.. so leading whitespace is removed

[08:32:40.0512] <smaug>
ok

[08:33:15.0809] <smaug>
(browsers aren't consistent with this)

[08:45:26.0247] <Domenic>
The user agent requirements are in the paragraphs marked "User agent requirements"

[14:23:37.0804] <Domenic>
Does anyone understand why https://www.w3.org/TR/xml/#NT-Char is actually "any Unicode character, excluding the surrogate blocks, FFFE, and FFFF"? Seems like, e.g., U+0000 NULL is excluded?


2022-06-07
[22:11:18.0981] <annevk>
Domenic: excluding control code points is quite typical

[22:12:00.0645] <Domenic>
But this infects the [^] syntax it appears: https://www.w3.org/TR/xml/#sec-notation

[22:12:47.0106] <Domenic>
As well as just the [] syntax in general

[22:12:56.0430] <Domenic>
So it looks like XML-defined EBNF is just not really usable?

[22:13:53.0258] <annevk>
Oh great, I didn't realize that ☹️

[22:15:12.0854] <Domenic>
How do we feel about JS-compatible RegExps... The other main alternative is to just write a parser algorithm

[22:15:56.0138] <Domenic>
Or maybe https://www.rfc-editor.org/rfc/rfc5234

[22:59:15.0973] <annevk>
Domenic: I think writing it out in prose might not be so bad

[23:00:09.0053] <annevk>
Domenic: if you turn the code point sets into Infra-style definitions and then have a validating algorithm that says "if string is not a X followed by zero or more Ys" and such

[02:15:15.0847] <zcorpan>
What's the status of removing sync XHR? https://github.com/whatwg/xhr/issues/20

[05:18:09.0540] <Noam Rosenthal>
 annevk any chance to continue review on https://github.com/whatwg/fetch/pull/1413 at some point? yutakahirano has already given it a 👍️

[07:22:08.0734] <raphaellouis>
Hi all! Can someone help me?

[07:23:15.0058] <raphaellouis>
I have a question, if anyone can answer I would be happy

[07:32:24.0871] <raphaellouis>
I would like to know if we could create a library in javascript to generate user interaction data

[07:32:56.0569] <raphaellouis>
This would be an alternative to cookies etc.

[07:33:36.0413] <raphaellouis>
This can be interesting for data analysis etc

[07:33:59.0411] <raphaellouis>
concept: https://discourse.wicg.io/t/draft-idea-spec-proposal-an-interesting-open-free-libre-proposal-for-a-scalable-sustainable-secure-private-accessible-business-model-compared-to-alternatives-such-as-topics-cookies-flocs-and-other-user-tracking-technologies/5906/3

[07:35:59.0925] <raphaellouis>
I would like to know if this idea is good or bad, I want to hear all sides, all criticisms, everything that can be improved or corrected

[07:45:02.0012] <raphaellouis>
Everything I've written is still conceptual, draft

[08:37:56.0790] <annevk>
Noam Rosenthal: ah, from the title change I guess you have made a change in approach now

[08:38:42.0488] <annevk>
/me notices Domenic's comment there about formatting

[08:38:46.0964] <Noam Rosenthal>
annevk: yes, as we talked about, there's no longer a "conclude" call and fetch reports timing automatically, except for in the case of navigation and early-hints

[08:39:17.0466] <annevk>
I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much

[08:39:20.0315] <Noam Rosenthal>
... accompanied by the HTML PR https://github.com/whatwg/html/pull/7722

[08:39:51.0603] <Domenic>
Source code formatter is on my list of "learn Rust" projects. Seems... unlikely to happen.

[08:40:57.0953] <Noam Rosenthal>
> <@annevk:mozilla.org> I really wish someone would write a Bikeshed source code formatter we could use, ideally mostly compatible with existing conventions to not mess up blame too much

Is there an open issue for what's required? I can fiddle with it. I know a bit of Rust

[08:58:57.0758] <annevk>
Noam Rosenthal: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)

[09:00:13.0616] <annevk>
Noam Rosenthal: as for the formatter, essentially something that takes a WHATWG-style `*.bs` file, parses it, and then serializes it according to the rough formatting guidelines in `README.md`

[09:00:31.0877] <annevk>
Domenic might have more informed thoughts 🙂

[09:01:23.0692] <Domenic>
Yeah, no open issue. It's hard because parsing/serializing bs (or Wattsi-style HTML) is not an identity function.

[09:01:27.0473] <annevk>
I guess Yutaka also r+'d it and there was no forced rebase so hmm

[09:02:49.0302] <Domenic>
Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\n</p>` which is undesirable by our standards.

[09:03:33.0299] <Domenic>
But like `<li>\n<p>` is technically different than `<li><p>`
 (different DOM structure, with a text node in the middle for the former) but we consider them both OK

[09:03:57.0374] <Domenic>
 * But like `<li>\n<p>` is technically different than `<li><p>`
 (different DOM structure, with a text node in the middle for the former) but we consider them both OK

[09:04:14.0807] <Domenic>
 * Another problem with HTML formatters is that it's hard to know what whitespace is significant. E.g. HTML Tidy often creates `foo.\n</p>` which is undesirable by our standards.

[09:04:28.0886] <Noam Rosenthal>
> <@annevk:mozilla.org> Noam Rosenthal: so I'm not sure what's happening with the review-resolve cycle but I'm finding the same issues as Yutaka it seems, e.g., timing global seemingly having an unaccounted null value; except this specific Yutaka issue was marked as resolved (whereas some others were not but do appear addressed)

That comment was resolved with a reply, ‘timingGlobal’ is null in the case of early hints, I will look at it again though to make sure 

[09:05:23.0960] <annevk>
Noam Rosenthal: as written fetch's _timingGlobal_ argument is either "client" or a global object afaict (though the usage side suggests "none" can be valid and the algorithm suggests null can be valid)

[09:06:29.0969] <annevk>
Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079

[09:06:37.0241] <Noam Rosenthal>
> <@annevk:mozilla.org> Noam Rosenthal: as written fetch's _timingGlobal_ argument is either "client" or a global object afaict (though the usage side suggests "none" can be valid and the algorithm suggests null can be valid)

Ok, I will revise it and the usage to state null should be valid

[09:07:09.0865] <annevk>
Noam Rosenthal: to be clear I think it would be better if you made that "none" for consistency with "client"

[09:07:40.0022] <annevk>
Noam Rosenthal: if we're doing enum or object let's not also add null to the possible types

[09:07:55.0656] <Noam Rosenthal>
> <@annevk:mozilla.org> Noam Rosenthal: to be clear I think it would be better if you made that "none" for consistency with "client"

Sure, fine with me

[09:08:22.0588] <Noam Rosenthal>
I usually prefer whims 

[09:08:28.0202] <Noam Rosenthal>
Enums 

[09:09:37.0341] <Domenic>
> <@annevk:mozilla.org> Domenic: you need to push something for https://github.com/whatwg/dom/pull/1079

Done, thanks. Working on PotentialCustomElementName now.

[09:21:46.0445] <Noam Rosenthal>
annevk: fixed comments. re. request vs. fetch: the idea is that all timing-related things are associated with fetch and not with a request. So if the request is forwarded by a service worker the timing info, initiiator and reporting global relate to the service worker and not to the original fetcher

[09:23:27.0067] <annevk>
Noam Rosenthal: does that mean we need to change the fetch params when we hand it over to the SW?

[09:24:00.0658] <Noam Rosenthal>
annevk: no need. new fetch params are created when the SW calls `fetch()`

[09:24:47.0796] <annevk>
Noam Rosenthal: well yes, if it does that, but that's also the case for bits on request so I'm not sure how that's an argument for this setup

