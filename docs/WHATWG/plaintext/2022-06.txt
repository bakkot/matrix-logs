2022-06-01
[02:54:00.0184] <sideshowbarker>
For the `elementtiming` content attribute, I haven’t found a PR for adding it to the HTML spec. Don’t we need one?
It’s not adequately specified in https://wicg.github.io/element-timing/#sec-modifications-DOM but from what can be gleaned from that, it seems like it would need to be added to HTML as a new global attribute. Right?

[04:53:26.0459] <Yoav Weiss>
Domenicannevk: Can we land https://github.com/whatwg/html/pull/7885 ? 

[07:05:31.0920] <Domenic>
> <@yoavweiss:matrix.org> Domenicannevk: Can we land https://github.com/whatwg/html/pull/7885 ?

Yes, it looks like the Fetch PR is landed, I will land the HTML PR.

[07:05:51.0617] <Domenic>
> <@sideshowbarker:mozilla.org> For the `elementtiming` content attribute, I haven’t found a PR for adding it to the HTML spec. Don’t we need one?
> It’s not adequately specified in https://wicg.github.io/element-timing/#sec-modifications-DOM but from what can be gleaned from that, it seems like it would need to be added to HTML as a new global attribute. Right?

Yes, any HTML global attributes with multi-implementer interest should be specified in HTML. I suspect this is a single-implementer spec?

[07:09:04.0428] <raphaellouis>
Hi all! I wish everyone is well! How are you all? 
1. I would like to publicize my GitHub profile here are the ideas implemented in Js. Some ideas I filed, I found it very bad to implement and they didn't have a good concept. In summary, I implemented the following ideas(apis): 'BestReadOnTheWeb', 'MeasuringUserInteractionTimeWithWebsite' - I would to have positive or negative feedback of each idea - if you all wants. Note: Other ideas I've shelved too - because they're bad ideas because they depend on other things and/or ideas to get done. Link: https://github.com/raphaellouisandress - the licenses for each code are MIT.
2. I hope I helped with a few things to make the web better, safer, transparent
3. I feel that after building some of these implementations my help has ended, goodbye folks. Keep up the great work all, I really enjoyed the feedback I got here.

[07:10:46.0263] <Yoav Weiss>
sideshowbarker: there was some interest in `elementtiming` from Mozilla folks, but I'm not sure if it's enough for WHATWG HTML integration

[07:11:07.0184] <Yoav Weiss>
^^ sefeng 

[07:12:29.0977] <raphaellouis>
 * Hi all! I wish everyone is well! How are you all?

1. I would like to publicize my GitHub profile here are the ideas implemented in Js. Some ideas I filed, I found it very bad to implement and they didn't have a good concept. In summary, I implemented the following ideas(apis): 'BestReadOnTheWeb', 'MeasuringUserInteractionTimeWithWebsite' - I would to have positive or negative feedback of each idea - if you all wants. Note: Other ideas I've shelved too - because they're bad ideas because they depend on other things and/or ideas to get done. Link: https://github.com/raphaellouisandress - the licenses for each code are MIT.
2. I hope I helped with a few things to make the web better, safer, transparent
3. I feel that after building some of these implementations my help has ended, goodbye folks. Keep up the great work all, I really enjoyed the feedback I got here. I tried to solve some problems and/or help with some proposals in wicg/whatwg/w3

[08:05:16.0017] <sefeng>
yeah, it's okay to say we have interests informally, however I'd like this standard position issue https://github.com/mozilla/standards-positions/issues/192 to be resolved first before adding the attribute  

[08:10:18.0341] <sefeng>
Yoav Weiss: ^

[13:38:23.0586] <ntim>
mfreed: Hi! I'm not sure [my comment here](https://github.com/w3c/csswg-drafts/issues/7319#issuecomment-1144100767) is easy to understand, let me know if you want clarifications

[13:43:12.0410] <Eric Portis (he/him)>
annevk: Would https://github.com/annevk/orb block a response for a non-safelisted MIME type, that also came back with `Cross-Origin-Resource-Policy: cross-origin`? (Should it?)


2022-06-02
[23:39:33.0575] <annevk>
Eric Portis (he/him): it currently does, in https://github.com/annevk/orb/issues/30 I mention it as a possible fast path, but to match its processing model we'd have to track it across redirects

[23:41:18.0547] <annevk>
Eric Portis (he/him): I think if we do it properly (i.e., account for redirects) it's probably reasonable to safelist such responses

[03:33:48.0865] <Ondřej Žára>
Looks like the "Libera" IRC is not the proper whatwg chat place, right?

[03:34:09.0380] <Ondřej Žára>
That might explain noone responding to my messages ;-)

[03:42:00.0386] <annevk>
Ondřej Žára: I don't think we ever advertised anything but Freenode and this channel, and now it's just this channel

[03:43:01.0782] <Ondřej Žára>
> <@annevk:mozilla.org> Ondřej Žára: I don't think we ever advertised anything but Freenode and this channel, and now it's just this channel

Yeah, I have no memories about how I got from Freenode to Libera. Whatever.

[03:43:08.0335] <Ondřej Žára>
Let me repaste my original Libera question then

[03:43:15.0874] <Ondřej Žára>
are there any general guidelines regarding "js property <-> HTML attribute" reflection for custom elements?

[03:43:23.0502] <Ondřej Žára>
for instance those interactive components whose properties change quickly (`<my-map lat=... lon=...>`)

[03:43:50.0933] <Ondřej Žára>
I recall people suggesting to use attributes as the source of truth

[03:43:57.0242] <Ondřej Žára>
But that might not hold any more?

[03:52:30.0157] <annevk>
Might be a good question for #web-components:matrix.org though it's not very active. There's definitely no guidelines in the standard. I'd recommend looking at https://html.spec.whatwg.org/#reflect and seeing how it might be applicable for a custom element. At least if you want them to behave like built-in elements. Often that does use the attribute as a source of truth, but you could optimize around that a fair bit.

[03:53:31.0279] <Ondřej Žára>
Thanks for the pointers. Will read the spec part a bit, then probably re-ask in that channel.

[06:58:12.0713] <Eric Portis (he/him)>
annevk:  Ok, thanks! This would make the story for third party media hosts that want to upgrade resources without requiring every document that embeds from them to also upgrade, well, livable, I think.

[06:58:27.0786] <Eric Portis (he/him)>
 * annevk:  Ok, thanks! This would make the story for third party media hosts that want to upgrade resources without requiring every document that embeds from them to also upgrade, well, livable, I think.

[07:49:59.0113] <annevk>
Eric Portis (he/him): I mean in principle ORB shouldn't really impact anyone, though I suppose there might be some perf implications if you don't have your MIME types in order

[07:50:39.0314] <annevk>
Eric Portis (he/him): it might be a reasonable way out however for new image formats and over the long term require something like that for all cross-origin fetches

[09:03:02.0818] <smaug>
Domenic: will be there in the meeting real soon

[10:59:03.0784] <sefeng>
Noam Rosenthal: Just want to make sure I understand the rationale behind the LargestContentfulPaint spec. So if the image is expanded, we don't report the actual painted size, but rather we report the intrinsic size of the image 

[10:59:14.0669] <sefeng>
is it because we don't want web devs to game the metric?

[11:06:43.0007] <Eric Portis (he/him)>
annevk: “in principle ORB shouldn't really impact anyone”

Half of all <img>s load cross-origin; I’d suspect CSS background-image to have a similar breakdown. My mental model of ORB previously was: in order to adopt new image formats, lots of HTML was going to have to change, and there just wouldn’t be a way to use new image formats across origins in CSS. Big impact! Mitigated by CORP.

[11:08:06.0139] <annevk>
Eric Portis (he/him): I see, new media formats definitely have that wrinkle atm

[11:08:21.0608] <annevk>
Eric Portis (he/him): I'd be okay with this compromise

[11:08:42.0803] <annevk>
Eric Portis (he/him): do you want to put it forward in https://github.com/annevk/orb/issues/3?

[11:09:29.0596] <Eric Portis (he/him)>
annevk: will do!

[11:15:35.0783] <Noam Rosenthal>
> <@sefeng:mozilla.org> Noam Rosenthal: Just want to make sure I understand the rationale behind the LargestContentfulPaint spec. So if the image is expanded, we don't report the actual painted size, but rather we report the intrinsic size of the image 

That’s the basic idea. We don’t want an enormously scaled 1x1 image to be considered “largest”

[11:18:42.0767] <sefeng>
Noam Rosenthal: I see, I start to understand the penalty factor thing..but if a scaled 1x1 image is the largest, what's wrong of reporting it..?

[11:30:54.0985] <Noam Rosenthal>
It’s ok but you don’t want to report it as 1000x1000

[11:43:16.0228] <sefeng>
Noam Rosenthal: why don't we if that's what gets painted?

[11:43:20.0014] <sefeng>
 * Noam Rosenthal: why don't we if that's what gets painted?


2022-06-03
[00:21:30.0315] <annevk>
Luca Casonato: heya, https://common-min-api.proposal.wintercg.org/ doesn't list `ErrorEvent`, do you know if Deno or Node.js would be impacted by changes to it?

[00:56:54.0774] <Luca Casonato>
> <@annevk:mozilla.org> Luca Casonato: heya, https://common-min-api.proposal.wintercg.org/ doesn't list `ErrorEvent`, do you know if Deno or Node.js would be impacted by changes to it?

Deno would. We have WebSocket, which uses it.

[00:57:11.0880] <Luca Casonato>
Good catch btw!

[01:10:42.0676] <annevk>
Yoav Weiss: crbug.com/new is failing. Is that going to be fixed?

[01:16:21.0980] <Yoav Weiss>
Thanks for letting me know!

[01:16:32.0780] <Yoav Weiss>
I'll bug folks that actually know how that infra works

[01:38:53.0752] <Yoav Weiss>
crbug.new seems to be working

[01:58:43.0097] <Noam Rosenthal>
> <@sefeng:mozilla.org> Noam Rosenthal: why don't we if that's what gets painted?

It is a heuristic to make higher quality images count as larger than upscaled ones. that metric can be gamed in so many other ways though IMO. Yoav Weiss probably has more context on LCP than myself ☺️

[02:05:30.0073] <Noam Rosenthal>
> <@noamr:matrix.org> It is a heuristic to make higher quality images count as larger than upscaled ones. that metric can be gamed in so many other ways though IMO. Yoav Weiss probably has more context on LCP than myself ☺️

Think of the placeholder use case, when an image element shows a low-quality upscaled image and then loads the full-res image later. The full-res image would be considered larger for purposes of LCP than the placeholder

[02:13:00.0444] <sideshowbarker>
Yoav Weiss: looking at https://www.w3.org/TR/largest-contentful-paint/ I see it still shows https://wicg.github.io/largest-contentful-paint as the ED URL — where instead it should be https://w3c.github.io/largest-contentful-paint/ (which the wicg URL redirects to).
Should I go ahead and raise a PR with a patch?

[02:14:42.0167] <sideshowbarker>
hmm I see the source at https://github.com/w3c/largest-contentful-paint/blob/4a0930ca74a98941237635424cd34c8a44825b2d/index.bs#L10 does already have the w3c URL

