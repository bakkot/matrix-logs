2023-10-01
[06:46:57.0034] <Alexander Kalenik>
hi, any chance anybody could point me at the place in navigation specification where document's url need to be updated when same-document navigation happens (for example https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigate-fragid)?

[08:22:46.0187] <Alexander Kalenik>
it's actually seems like a spec bug because by the time popstate/hashchange event is fired on step 13 (update document for history step application) document's url should be updated but non of previous steps does that.

[08:48:16.0103] <Domenic>
https://html.spec.whatwg.org/multipage/browsing-the-web.html#url-and-history-update-steps step 8 does it for popstate/hashchange/navigation API intercept

[08:48:33.0621] <Domenic>
Did we somehow mess it up for fragment navigation?

[08:52:47.0019] <Domenic>
Please file an issue


2023-10-02
[00:00:50.0505] <annevk>
TabAtkins: not sure if this is a problem, but when I updated WHATWG's bikeshed boilerplate for a change in new issue URLs, it was picked up automatically without me having to generate the manifest

[00:01:23.0037] <annevk>
TabAtkins: I have now updated the manifest as well, but that makes it seem redundant

[01:50:55.0658] <Noam Rosenthal>
Domenic: added https://github.com/whatwg/html/issues/9824 to track the event loop spec vs. impl differences. hoping to tackle it gradually

[01:53:18.0743] <Noam Rosenthal>
smaug: I think I said something misleading about `fetchLater` when we spoke about it a few days ago. It *is* reliable in the "renderer process is killed" scenario, as the whole logic is spec'ed to work in the network process (inside fetch, in spec terms). It's actually a main feature of `fetchLater` as opposed to sending beacons in `pagehide`.

[01:54:43.0388] <smaug>
ok, so whatever is representing a "network process" in each browser

[01:55:38.0886] <smaug>
OS can still kill those processes on mobile, no?

[01:59:26.0473] <Noam Rosenthal>
smaug: yes, but that's equivalent to killing the whole browser in a way.

[02:01:09.0518] <Noam Rosenthal>
our recommendation (it's also in the spec) is that if there are indication that the browser itself is about to lose execution rights or be killed (e.g. backgrounded on iOS) then flush those ASAP

[02:01:41.0780] <smaug>
depends on the browser.  But yes. And the point is still that we are replacing one unreliable API with another one. The new one is likely less unreliable.

[02:03:34.0746] <Noam Rosenthal>
smaug: It's as reliable as calling `fetch`, which can also not happen if the network process gets killed

[02:03:35.0334] <smaug>
and browsers could have implemented also the old API in a more reliable way, but have chosen not to

[02:04:05.0761] <Noam Rosenthal>
they couldn't. because if the renderer process is killed, you wouldn't get JS execution and `pagehide`

[02:06:09.0623] <smaug>
I didn't say the old one would be as reliable. I said they could have implemented it in a more reliable way.

[02:06:50.0378] <Noam Rosenthal>
you'd need something like "you're about to lose execution rights or be killed, please fire this event"

[02:07:04.0896] <Noam Rosenthal>
That's not a feasible premise

[02:07:52.0093] <Noam Rosenthal>
I would say that `fetchLater(url)` is a practical alternative to something like firing `pagehide` as a kill signal... note that renderer processes that get killed might have already crashed or have a hanging main thread

[02:08:44.0558] <smaug>
I haven't said fetchLater is somehow bad API 🙂 

[02:08:50.0643] <Noam Rosenthal>
if your renderer process crashed/hang, `fetchLater` would still work while I don't see how we could make `addEventListener('pagehide', () => fetch(...)` work

[02:09:01.0952] <smaug>
But we need to always think what extra complexity we want to add to the platform

[02:10:14.0574] <smaug>
per the proposal, implementation could handle fetchLater asap a page is being unloaded or moved to bfcache, right?

[02:10:41.0319] <Noam Rosenthal>
yes

[02:10:57.0478] <Noam Rosenthal>
we try to leave a lot of room for simpler implementations

[02:22:39.0023] <smaug>
What about the page becoming a background page, I mean user switches tab (or whatever similar concepts mobile has)? Ah, looks like activationTimeout is just a hint

[02:23:08.0206] <smaug>
So UA could trigger fetchLater fetches immediately also in that case

[02:23:14.0437] <Noam Rosenthal>
smaug: yes, it's "please fetch this, no later than `activationTimeout` if posslbe"

[02:24:13.0175] <smaug>
I wonder if that property should have "hint" in its name, or perhaps deadline or some such, just to give the impression that it isn't by no means accurate 

[02:24:36.0787] <Noam Rosenthal>
I'm fine with calling it deadline

[02:30:13.0969] <Noam Rosenthal>
(by "fine with" I mean I agree that it tells a more accurate story)

[02:32:56.0411] <smaug>
Noam Rosenthal: so there is no way to track which fetches have been processed?

[02:35:45.0097] <Noam Rosenthal>
smaug: sure, the return value of `fetchLater` has an `activated` boolean

[02:36:08.0309] <smaug>
how does that tell it?

[02:36:21.0127] <smaug>
oh, I see

[02:37:09.0557] <Noam Rosenthal>
yea when the fetch is activated the network process also posts a task on the document to flip the flag

[02:37:18.0327] <Noam Rosenthal>
... if the document is still around

[04:02:53.0331] <annevk>
Jeffrey Yasskin: thanks, that indeed seems to work well!

[04:32:54.0772] <canadahonk>
Was `MessageEvent.userActivation` ever added to the HTML spec, afaict only the navigator interface was? (ref https://github.com/whatwg/html/pull/8254)

[04:34:58.0128] <annevk>
canadahonk: I don't think it was, nor was that proposal ever finalized afaik

[04:36:29.0108] <canadahonk>
What would be needed to get it in the spec? (Chrome has been shipping since 2018)

[04:43:27.0609] <annevk>
canadahonk: a specification with a design that has agreement?

[04:44:03.0818] <annevk>
canadahonk: I haven't looked at this recently, but I believe this feature has a repository with a number of outstanding issues

[04:44:19.0912] <canadahonk>
Yeah https://github.com/dtapuska/useractivation

[04:46:29.0843] <canadahonk>
fwiw I'll probably leave it as it doesn't look like it even has a positive consesus

[04:47:11.0575] <annevk>
canadahonk: yeah I think that proposal was superseded by https://github.com/WICG/capability-delegation but then they never completed that new one

[05:56:31.0325] <annevk>
smaug: when you say something isn't a "UI event", what do you mean by that? Not sure why `scroll` and `resize` are not it. Because they don't use `UIEvent` or some such?

[05:57:09.0882] <smaug>
Those aren't any sort of input events, triggered by the user

[05:57:31.0742] <smaug>
They are just plain normal Events, dispatched when either scrolling or resizing has happened

[05:58:54.0198] <annevk>
smaug: is that because there's some more fundamental event that ultimately caused the scrolling to happen, such as keyboard or mouse input? Would that make click not a UI event either?

[05:59:23.0321] <smaug>
Click isn't user input, no.

[05:59:57.0420] <smaug>
click is normally the "default action" after user has done mousedown and mouseup

[06:00:07.0755] <smaug>
click is synchronous

[06:01:42.0468] <annevk>
Right, I think we still want to define it in relation to those other events precisely because of that, but they might be simpler as they're more of a side effect

[06:02:58.0964] <smaug>
defining when mousedown and up fire would naturally define when click fires (assuming we think about pointer triggered click).  Similarly to keyboard triggered click.

[06:03:43.0442] <smaug>
But the scheduling part is mostly about *down/*move/*up

[06:04:16.0984] <smaug>
Browsers have some scheduling for those, but it is still unclear what is the best in which situations

[06:09:12.0477] <smaug>
we could start by making rendering step its own task, given that all the browsers do that

[06:27:50.0358] <annevk>
Thanks, makes sense to me

[06:38:12.0559] <Noam Rosenthal>
I checked webkit code and it's not exactly a task there, in the `EventLoop` sense from what I could tell

[07:11:02.0528] <smaug>
ah. I based my comment on what was discussed during tpac

[07:18:45.0924] <Noam Rosenthal>
I could be wrong, my webkit foo is a bit out of date

[07:18:58.0051] <Noam Rosenthal>
but I would suggest to double check

[07:59:01.0522] <annevk>
I wouldn't focus too much on the exact code, only on observable differences. We need script to run in the context of a task as otherwise a number of things seem to break down, so we should move "update the rendering" to that model. That it also makes the event loop more readable is a nice bonus.

[08:50:51.0878] <TabAtkins>
> <@annevk:matrix.org> TabAtkins: not sure if this is a problem, but when I updated WHATWG's bikeshed boilerplate for a change in new issue URLs, it was picked up automatically without me having to generate the manifest

Huh, it's definitely not redundant - I've forgotten to update the manifest before and *not* had changes picked up. (Plus that's just how it's specified - it checks against the manifest to see what it needs to download.) 

[08:52:40.0352] <TabAtkins>
Oh tho, hm, it's been a while since I updated the built-in data; it predates the slight change to manifest format. I wonder if it's just noticing that the local manifest is borked and downloading everything (and the fact that the has was wrong on the remote manifest didn't matter, so long as the file is in there).

[08:52:45.0736] <TabAtkins>
 * Oh tho, hm, it's been a while since I updated the built-in data; it predates the slight change to manifest format. I wonder if it's just noticing that the local manifest is borked and downloading everything (and the fact that the hash was wrong on the remote manifest didn't matter, so long as the file is in there).

[09:03:50.0994] <Noam Rosenthal>
annevk: curious what breaks by not having a current task apart from microtasks?


2023-10-03
[23:01:53.0297] <annevk>
Noam Rosenthal: "prepare to run script"

[23:09:58.0409] <Noam Rosenthal>
oh yea I see. thanks!

[04:15:14.0698] <Noam Rosenthal>
annevk: following up on your `fetchLater` comments, I don't know how to go about the thing about potentially trustworthy URLs

[04:16:01.0249] <Noam Rosenthal>
annevk: I can't handle it in the network layer, as the error has to be thrown synchronously. What I want to do here is allow HTTPS+localhost-ish URLs for `fetchLater` but nothing else... is that not possible to do synchronously? I didn't get why this was related to mixed content

[05:35:45.0144] <annevk>
Noam Rosenthal: okay, disregard that comment in that case; that's not quite the same as a Mixed Content check

[05:36:17.0034] <annevk>
I wish we had a better term than "potentially trustworthy"

[05:38:18.0015] <Noam Rosenthal>
"secure or local"

[05:46:51.0620] <Noam Rosenthal>
annevk: great. so I think everything else is fixed. Regarding the parameter name: `activationTimeout` seems like the wrong term, and it's pretty flexible to. be an `activationDeadline`. How about `activationDelay`?

[05:52:23.0654] <annevk>
Noam Rosenthal: I can take a look tomorrow, it's a holiday here. A comment explaining why it's wrong and what the alternatives could be would help.

[05:55:20.0529] <Noam Rosenthal>
annevk: will do, enjoy the holiday, thanks for checking in.

[07:17:51.0506] <canadahonk>
Hey all, how are siblings defined in the processing model for user activation? The spec (https://html.spec.whatwg.org/multipage/interaction.html#user-activation-processing-model) says:
> 3. Extend windows with the active window of each of document's ancestor navigables.
> 4. Extend windows with the active window of each of document's descendant navigables, filtered to include only those navigables whose active document's origin is same origin with document's origin.

[07:18:47.0879] <canadahonk>
eg a frame tree like
```
- top
  - iframe 1
  - iframe 2 (sibling to iframe 1)
```

[07:20:27.0816] <canadahonk>
interacting with iframe 1, should it set the ancestor (top), and in impl that itself sets all of it's descendants (iframe 2 etc)?

[07:58:57.0726] <canadahonk>
(also it doesn't include document's own/current window?)


2023-10-04
[20:55:35.0050] <Domenic>
I don't understand the question, sorry... The spec text you quote does not involve the word "sibling", and I can't understand your followup question after you gave the frame tree.

[20:56:14.0692] <Domenic>
I am curious what exact term in the existing specification you don't understand?

[20:57:30.0944] <Domenic>
Like if you implement the spec's algorithms as-written (in a small standalone code, e.g. a JS snippet) where do you get stuck?

[02:17:11.0465] <canadahonk>
> <@domenicdenicola:matrix.org> I don't understand the question, sorry... The spec text you quote does not involve the word "sibling", and I can't understand your followup question after you gave the frame tree.

I meant that it doesn't specify what to do with siblings or itself at all as far as I can tell? And WPTs expect it to set in siblings as well I think

[02:17:21.0030] <canadahonk>
* In reply to @domenicdenicola:matrix.org
I don't understand the question, sorry... The spec text you quote does not involve the word "sibling", and I can't understand your followup question after you gave the frame tree.

I meant that it doesn't specify what to do with siblings at all as far as I can tell? And WPTs expect it to set in siblings as well I think

[02:17:42.0577] <canadahonk>
it does specify itself as windows starts with it's at the beginning*

[02:17:50.0842] <canadahonk>
* it does specify itself as windows starts with it's own the beginning*

[02:21:16.0928] <annevk>
canadahonk: per the spec those tests would be wrong

[02:23:08.0678] <annevk>
canadahonk: if the tests are correct, it might make more sense to track clicks on the agent directly in some kind of origin -> activation timestamp map

[02:32:01.0161] <canadahonk>
> <@canada_goose:mozilla.org> eg a frame tree like
> ```
> - top
>   - iframe 1
>   - iframe 2 (sibling to iframe 1)
> ```

would you expect the 2nd iframe to get set if you clicked the 1st from your interpretation of the spec?

[02:32:25.0745] <canadahonk>
* In reply to Domenic
I don't understand the question, sorry... The spec text you quote does not involve the word "sibling", and I can't understand your followup question after you gave the frame tree.

I meant that it doesn't specify what to do with siblings at all as far as I can tell? And WPTs expect it to set in siblings as well I think


[02:32:44.0445] <canadahonk>
* In reply to Domenic
I don't understand the question, sorry... The spec text you quote does not involve the word "sibling", and I can't understand your followup question after you gave the frame tree.


I meant that it doesn't specify what to do with siblings at all as far as I can tell? And WPTs expect it to set in siblings as well I think


[02:36:15.0300] <annevk>
canadahonk: no

[02:39:04.0053] <annevk>
canadahonk: I vaguely recall bringing this up at one point and people said this was intentional; would require some checking; but if it's not what's implemented and tested that's all kinda moot

[02:39:16.0372] <canadahonk>
that's what a WPT expects so :/ (guessing chrome does this too then as it's from them)

[02:41:23.0325] <annevk>
canadahonk: file an issue? And maybe find the original commit/PR as a bonus?

[02:42:34.0960] <canadahonk>
yeah I meant more is it a spec bug or a wpt bug

[02:43:19.0620] <canadahonk>
* yeah I was asking if it is a spec bug or a wpt bug

[02:47:00.0379] <annevk>
canadahonk: if implementations follow WPT, it doesn't really matter and should be raised at the spec level

[03:37:51.0428] <canadahonk>
filed https://github.com/whatwg/html/issues/9831 for reference

[04:13:01.0309] <annevk>
Hmm, for both `<input type=url>` and `<input type=email>` we don't attempt to canonicalize the input at all, it seems, across browsers

[04:13:27.0456] <annevk>
That strikes me as the wrong thing to do

[05:23:09.0048] <annevk>
I wonder if emilio or jarhar have thoughts on that. As an example, if you enter `https://example.org/?q=🏳️‍🌈` as a URL, that is what gets submitted, not `https://example.org/?q=%F0%9F%8F%B3%EF%B8%8F%E2%80%8D%F0%9F%8C%88` (which is what parsing and serializing would return)

[05:23:45.0708] <annevk>
It's not entirely broken, but it's very much reliant on the fact that the server uses the same email/URL parser

[05:39:33.0204] <annevk>
It does seem like we have a number of ways we could use to make the display value and actual value diverge, like the modes of the `value` IDL attribute

[07:39:27.0933] <annevk>
emilio: jarhar: made it a bit more concrete in https://github.com/whatwg/html/issues/4562#issuecomment-1747014388

[10:12:42.0287] <jarhar>
i dont have really strong opinions on this. i can try to implement and ship what you think is best but if it breaks lots of websites then ill have to reconsider

[10:55:56.0606] <annevk>
jarhar: that's a very kind offer, let's see what the i18n experts have to say (particularly hoping for a reply from Addison) and take it from there

[10:59:22.0891] <annevk>
jarhar: for IP addresses I guess I should look at that more carefully, I saw some comment that even IPv4 email addresses required some kind of [ ] escaping which I don't think browsers handle, but maybe that was just wrong

[11:09:14.0897] <bkardell>
annevk: "Also, it's written by Frédéric Wang as well."

Can you explain what you mean by this?

[11:14:57.0957] <bkardell>
ah probably you mean way further down the preview shows, the authors

[12:47:46.0854] <1ln9>
heya 'yall. :)


2023-10-05
[23:42:54.0816] <annevk>
bkardell: I think you only have to scroll to the right?

[01:02:41.0167] <annevk>
Noam Rosenthal: are you joining WHATNOT?

[01:05:49.0470] <keithamus>
I'm trying to join WHATNOT but its saying someone needs to let me in

[01:07:24.0331] <keithamus>
annevk: are you in?

[01:09:32.0152] <keithamus>
Panos Astithas: ^

[01:23:25.0430] <zcorpan>
keithamus: I invited you, try again?

[01:23:49.0643] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: are you joining WHATNOT?

Not today, public holiday here…

[01:24:20.0293] <keithamus>
Perhaps because I'm using a different email address? I'm using username @ gmail

[01:24:44.0147] <keithamus>
I can switch to my github one though

[01:25:04.0060] <zcorpan>
keithamus: I invited gmail address now instead

[01:25:16.0747] <keithamus>
Thanks!

[02:05:06.0468] <annevk>
keithamus: in https://github.com/whatwg/html/pull/9834 you still need to flip the order of the first two columns

[02:05:28.0600] <keithamus>
doing so right now 😅

[03:16:57.0648] <keithamus>
> <@annevk:matrix.org> keithamus: in https://github.com/whatwg/html/pull/9834 you still need to flip the order of the first two columns

I think this is good now? Thanks for your patience 🙇

[05:45:01.0892] <sideshowbarker>
annevk: About https://bugs.webkit.org/show_bug.cgi?id=262635 if think the change in https://github.com/WebKit/WebKit/pull/18689 should actually be made — so that we can interop on this — then I can add some WPT tests to the PR (and export them after the PR is reviewed). And I guess I could could also write a spec patch for https://fetch.spec.whatwg.org/#dom-body-formdata to explicitly state that the `Content-Disposition` and `Content-Type` headers names must be parsed case-insensitively

[05:45:10.0945] <sideshowbarker>
 * annevk: About https://bugs.webkit.org/show\_bug.cgi?id=262635 if you think the change in https://github.com/WebKit/WebKit/pull/18689 should actually be made — so that we can interop on this — then I can add some WPT tests to the PR (and export them after the PR is reviewed). And I guess I could could also write a spec patch for https://fetch.spec.whatwg.org/#dom-body-formdata to explicitly state that the `Content-Disposition` and `Content-Type` headers names must be parsed case-insensitively

[06:03:05.0313] <sideshowbarker>
* annevk: About https://bugs.webkit.org/show_bug.cgi?id=262635 if you think the change in https://github.com/WebKit/WebKit/pull/18689 should actually be made — so that we can have interop on this — then I can add some WPT tests to the PR (and export them after the PR is reviewed). And I guess I could could also write a spec patch for https://fetch.spec.whatwg.org/#dom-body-formdata to explicitly state that the Content-Disposition and Content-Type headers names must be parsed case-insensitively

[06:21:13.0807] <annevk>
sideshowbarker: I guess that makes sense for a multipart/form-data payload

[06:21:20.0515] <annevk>
sideshowbarker: there's https://github.com/web-platform-tests/wpt/issues/40946

[06:22:04.0259] <annevk>
sideshowbarker: https://andreubotella.github.io/multipart-form-data/#multipart-form-data-parser has a WIP parser

[06:22:21.0039] <Andreu Botella>
very much WIP

[06:22:38.0650] <annevk>
It does seem to handle case-insensitivity of headers correctly, so there's that

[06:27:04.0810] <annevk>
sideshowbarker: also did a non-reviewer review of your WebKit PR

[07:00:16.0328] <sideshowbarker>
> <@abotella:igalia.com> very much WIP

Ah yeah I remember now you'd written that up

[07:31:45.0021] <annevk>
jarhar: so Chromium might be alone in having something close to what the spec suggests for type=email, accepting IDN and converting to Punycode, I agree with you that preserving that seems good

[07:32:35.0107] <annevk>
jarhar: in terms of supporting IP addresses things are somewhat bad, I guess mainly due to the impl being in terms of a regexp

[07:33:10.0416] <annevk>
jarhar: like yes, some IPv4 stuff works, but IPv6 does not at all; and invalid IPv4 works too and is considered valid

[07:39:29.0286] <annevk>
jarhar: although there's a weird aspect in that the normalization doesn't happen when the value is set through script

[08:16:11.0568] <Jeremy Roman>
Data URLs are weird. In `data:text/html,Hello?world`, the pathname is `text/html,Hello` and the search is `?world`, but the response body is `Hello?world`

[08:17:01.0232] <Jeremy Roman>
(There may well be no way to avoid the hilarity that is how this interacts with URL patterns.)

[08:17:24.0725] <annevk>
Jeremy Roman: Chromium used to make `#blah` part of the body too

[08:18:23.0876] <annevk>
And that should still happen for `javascript:` URLs I think

[08:23:44.0926] <Jeffrey Yasskin>
Many non-hierarchical URL schemes are going to have weird semantics. If their semantics were non-weird, they'd be hierarchical. Definitely don't look at the semantics of https://w3c-ccg.github.io/did-resolution/#dereferencing-algorithm if you want to avoid weirdness. 😈

[09:21:32.0482] <jarhar>
> <@annevk:matrix.org> jarhar: in terms of supporting IP addresses things are somewhat bad, I guess mainly due to the impl being in terms of a regexp

do you think we should support ip addresses? if not, i hope nobody is relying on this

[09:26:46.0304] <annevk>
jarhar: judging on the latest in the thread, I don't think the way we do IP addresses in `<input type=email>` actually work in practice?

[09:27:30.0710] <annevk>
jarhar: as in, we don't reject `s@123.123.123.123` currently, but if you actually wanted that you'd have to write `s@[123.123.123.123]` which we do reject


2023-10-06
[18:58:24.0718] <jarhar>
annevk Domenic i am thinking about multi-select for selectlist (i dont plan on formally proposing this for a very long time), and im wondering if it should have a multiple attribute or a have a distinct tag name. i kind of like having a separate tag name more because then we dont have to handle changes between the single and multiple, but what do yall think? were <select multiple> and <input type> bad ideas?

[18:58:50.0015] <jarhar>
* annevk Domenic i am thinking about multi-select for selectlist (i dont plan on formally proposing this for a very long time), and im wondering if it should have a multiple attribute or a have a distinct tag name. i kind of like having a separate tag name more because then we dont have to handle changes between the single and multiple states, but what do yall think? were and bad ideas?

[18:59:09.0844] <jarhar>
* annevk Domenic i am thinking about multi-select for selectlist (i dont plan on formally proposing this for a very long time), and im wondering if it should have a multiple attribute or a have a distinct tag name. i kind of like having a separate tag name more because then we dont have to handle changes between the single and multiple states, but what do yall think? were "select multiple" and "input type" bad ideas?

[19:02:00.0251] <jarhar>
this has been briefly discussed in openui but with no recent updates: https://github.com/openui/open-ui/issues/447

[20:03:05.0896] <sideshowbarker>
jarhar:

> were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[20:04:23.0349] <sideshowbarker>
* jarhar:  were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[20:04:43.0803] <sideshowbarker>
* jarhar:  


> were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[20:05:08.0786] <sideshowbarker>
* jarhar:

were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[20:06:56.0805] <sideshowbarker>
jarhar:  

> were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[20:07:31.0845] <sideshowbarker>
* jarhar:

were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[21:55:32.0812] <sideshowbarker>
 * jarhar:

> were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[21:55:48.0475] <sideshowbarker>
 * jarhar:

>
> were "select multiple" and "input type" bad ideas?

Yes, IMHO. At least from the perspective of developer ergonomics. Especially in the case of ”input type”, smuggling 20 different logical elements with different presentations/UI/behavior into one element has created very significant costs that would have been unnecessary otherwise. It's made it more difficult to document, and more difficult to do conformance checking for, more difficult to explain to  developers when they run into problems (for example, developers coming to Stack Overflow with questions, and other people trying to help answer them).

[22:00:35.0828] <annevk>
Heh, we're still evaluating `<selectlist>`. 😅

[22:23:17.0880] <annevk>
I think what I'd look at is how much branching you would need to do and how much shared code there ends up being between the two features. And how difficult it would be to add new features if they were separate elements.

And while it's probably correct that we'd do `<input>` differently today, the way it was designed has a number of benefits we still benefit from today. It has made it much easier to introduce new input controls, such as `type=email`. Or soon `<input type=checkbox switch>`.

[01:15:18.0318] <Domenic>
I would prefer separate elements.

[01:44:41.0017] <annevk>
I had forgotten why making progress on `<input type=email>` was difficult, but now it's very clear again unfortunately

[04:07:47.0010] <annevk>
Luca Casonato: very nice to see my URL Interop issue was a dupe. At least there's two people that care. 😅

[04:14:11.0327] <Ms2ger>
Sure it wasn't a dupe for an issue you also filed?

[04:43:10.0973] <annevk>
Ms2ger: 🐢🐢

[07:32:00.0194] <keithamus>
Is it right that a bubbling+composed event with a relatedTarget stops bubbling when it hits the shadowroot? Shouldn't it retarget the relatedTarget to the host?

[07:33:17.0685] <keithamus>
```
y = $0.attachShadow({mode:'open'})
y.append(document.createElement('button'))
x = y.querySelector('button')
x.addEventListener('focusin', console.log)
y.addEventListener('focusin', console.log)
$0.addEventListener('focusin', console.log)
x.dispatchEvent(new FocusEvent('focusin', { relatedTarget: x, bubbles: true, composed: true }))
```

I only get 2 `console.logs` when I expected 3

[07:45:17.0781] <keithamus>
If I `s/FocusEvent/Event` I get 3. 

[07:55:52.0581] <annevk>
zcorpan: did you want to give feedback on https://github.com/whatwg/html/pull/9689? I think Jonathan Kew agrees with it so probably have enough in terms of implementer interest, but always nice to get more review

[07:56:54.0667] <annevk>
keithamus: if that's what DOM's dispatch algorithm says, yes (it's been a long time since I looked at this, but I think it's written down)

[08:04:58.0121] <annevk>
Noam Rosenthal: activateAfter makes me think it's no different from activationTimeout

[08:05:33.0110] <annevk>
Noam Rosenthal: as in, setTimeout runs after x seconds

[08:07:20.0659] <annevk>
Noam Rosenthal: before you talked about a deadline, which made me think that if you passed x, running at x-1 would be okay, but x+1 would not be; doesn't that mean "before"? Whereas for "after" x+1 would be fine.

[08:34:35.0643] <Noam Rosenthal>
annevk: both are fine, but for different reasons. The timeout duration is like a preference. The UA would activate before the timeout in case of termination or some such, and after the activation timeout for throttling/batching

[08:35:08.0864] <Noam Rosenthal>
The word "timeout" is maybe confusing because it's the opposite of the abort signal's timeout

[08:35:50.0949] <Noam Rosenthal>
Yea `activateAfter` means the same thing but it's clear it's a timeout *until* activation rather than "A timeout after which activation expires" or something like that

[08:41:46.0384] <annevk>
I see, thanks. Domenic you haven't weighed in yet, maybe tell us what you think after the weekend?

[11:01:03.0410] <TabAtkins>
Same; multi-select is related to single-select, but wants a fairly distinct UI. (Even the existing godawful UI is quite distinct between the two states.)

[11:01:11.0116] <TabAtkins>
So yeah, multiple elements.

[14:35:53.0931] <sideshowbarker>
jarhar: FYI https://github.com/WebKit/WebKit/pull/18785

[14:43:02.0038] <sideshowbarker>
jarhar: I wonder if we could consider updating the spec to require that in the _“ancestor details revealing algorithm”_, before setting the `open` attribute, we suppress mutation events — in the same way as is done in the _“ensure details exclusivity by closing the given element if needed”_ algorithm https://html.spec.whatwg.org/multipage/interactive-elements.html#ensure-details-exclusivity-by-closing-the-given-element-if-needed

[14:44:32.0941] <jarhar>
oh wow, i didn't know that david actually specced the don't fire mutation events flag

[14:44:41.0733] <jarhar>
sounds great to me! disable mutation events everywhere!

[15:05:43.0862] <sideshowbarker>
In WebKit, there’s actually an assert at https://github.com/sideshowbarker/WebKit/blob/main/Source/WebCore/dom/Node.cpp#L2461 which will get hit unless we introduce some flag for skipping it (which means, skipping the dispatch of the `DOMSubtreeModified` mutation event)

[15:06:13.0555] <sideshowbarker>
 * In WebKit, there’s actually an assert at https://github.com/WebKit/WebKit/blob/main/Source/WebCore/dom/Node.cpp#L2461 which will get hit unless we introduce some flag for skipping it (which means, skipping the dispatch of the `DOMSubtreeModified` mutation event)


2023-10-08
[10:07:56.0431] <Debadree Chatterjee>
 * hello to all the members here! hope you are doing well! i had a question in regards to the implementation of https://github.com/whatwg/streams/commit/007d729f1476f7f1ea34731ba9bd2becb702117e for nodejs I am encountering a case of what seems like a race conditions between promises this can better explained with an example consider this following code: const { TransformStream } = require('stream/web');
const assert = require('node:assert/strict');

(async () => {
  let controller;
  const ts = new TransformStream({
    start(c) {
      controller = c;
    }
  });
  const cancelReason = { name: 'cancelReason' };
  const cancelPromise = ts.readable.cancel(cancelReason);
  controller.terminate();
  return Promise.all([
    cancelPromise,
    assert.rejects(ts.writable.getWriter().closed)
  ]);
})();

[10:22:58.0539] <Debadree Chatterjee>
Hello everyone! hope you are doing well! I had one question in regards to the implementation of https://github.com/whatwg/streams/commit/007d729f1476f7f1ea34731ba9bd2becb702117e, i have been trying to implement this in nodejs and i am bumping into what seems like a race condition between promises its better explained with code consider the code here https://gist.github.com/debadree25/c54931a99e493baaf9314a903cd52e12 now when we create a transform stream we have one promise created on the writable side the "startPromise" as noted in https://streams.spec.whatwg.org/#set-up-writable-stream-default-controller and when we called the cancel method on the readable we get a cancellation promise as noted in https://streams.spec.whatwg.org/#transform-stream-default-source-cancel now in the code after this we call on controller.terminate which causes the writable side to go into the "erroring" stage, now comes the interesting part the "startPromise" gets resolved and causes the writable part to go into "errored" mode after which the close promise resolves rejecting the cancellation promise we received I think this is expected behaviour? since promises are executed in a queue manner? strangely this issue doesnt seem to affect the reference implementation here https://github.com/whatwg/streams and the promises get executed in the order: -created start promise
-cancel promise created
-cancel promise resolving
-start promise resolving. I dont think this could be a problem with the spec maybe there is something i am missing? if anyone has any insight it would be great!! Thank you for reading! :-)


2023-10-09
[21:31:11.0070] <sideshowbarker>
 * jarhar: The _“A CSS Animation running on an element within a \<details> element is canceled after the \<details> element is closed”_ test at https://wpt.fyi/results/css/css-animations/animation-canceled-by-parent-details-element-being-closed.html times out in Chrome, while passing in Firefox and current Safari.

But the patch in https://github.com/WebKit/WebKit/pull/18785 for implementing auto-expanding `<details>` makes it now time out in Safari too.

The reason it times out (both in Blink and patched WebKit) is that the `cancel` event never fires.

I’m going to make time to investigate it more, but it’s not immediately clear to me why the changes made for auto-expanding `<details>` would cause that test to fail.

[22:04:59.0219] <sideshowbarker>
 * jarhar: The _“A CSS Animation running on an element within a \<details> element is canceled after the \<details> element is closed”_ test at https://wpt.fyi/results/css/css-animations/animation-canceled-by-parent-details-element-being-closed.html times out in Chrome, while passing in Firefox and current Safari.

But the patch in https://github.com/WebKit/WebKit/pull/18785 for implementing auto-expanding `<details>` makes it now time out in Safari too.

The reason it times out (both in Blink and patched WebKit) is that the `cancel` event never fires.

I’m going to make time to investigate it more, but it’s not immediately clear to me why the changes made for auto-expanding `<details>` would cause that `cancel` event to stop firing.

[02:52:49.0044] <axo10tl>
Hi! Can I request some historical information here? 😅
I was wondering what kind of arguments were raised for the current CSS custom property syntax, more specifically; was the SASS-like dollar syntax considered, and why didn't custom properties adopt something similar to that?

[02:54:17.0601] <axo10tl>
Tried searching the whatwg github issues, but couldn't find any discussion related to this. Apparently some discussions are held in IRC/Matrix, so there would not be public logs if that's the case?

[03:05:18.0520] <Noam Rosenthal>
> <@axo10tl:matrix.org> Hi! Can I request some historical information here? 😅
> I was wondering what kind of arguments were raised for the current CSS custom property syntax, more specifically; was the SASS-like dollar syntax considered, and why didn't custom properties adopt something similar to that?

 CSS is specified in W3C, not in WHATWG

[03:06:14.0556] <axo10tl>
oof, thanks (and sorry).. :D

[03:21:07.0573] <annevk>
Panos Astithas: I don't have the Oct 19 WHATNOT meeting in my calendar. I was going to add RitamDas30. Could it be that I'm not on the invite list or did I mess up somehow?

[06:09:05.0867] <sideshowbarker>
jarhar: The _“A CSS Animation running on an element within a \<details> element is canceled after the \<details> element is closed”_ test at https://wpt.fyi/results/css/css-animations/animation-canceled-by-parent-details-element-being-closed.html times out in Chrome, and in Safari built from https://github.com/WebKit/WebKit/pull/18785 — apparently because, with the switch to using `content-visibility: hidden` to close the `details` element (rather than removing the element from the DOM), the `cancel` event never fires.

Per-spec _is_ the `cancel` event actually supposed to fire at an element when `content-visibility: hidden` is set on an ancestor?

If it’s not supposed to fire, then I guess that test needs to be changed.

But if it _is_ actually supposed to fire, then I guess that’d mean both Blink and WebKit have a bug in their content-visibility implementations that needs to be fixed?

[07:11:43.0570] <freddy>
shower thought: Wouldn't it be nice to have a "sameoriginmessage" (name to be bikeshedded) counterpart of the "message" Event type which code could consider implicitly trusted (or not)?

[07:20:05.0015] <annevk>
freddy: possibly, or some kind of event listener filter option

[07:27:44.0373] <freddy>
The options bag for addEventListener doesn't seem like a great pattern to support specific options only for certain event types. But sure, I don't have strong feelings. This started off as a shower thought ;)

[08:33:48.0989] <zcorpan>
> <@annevk:matrix.org> zcorpan: did you want to give feedback on https://github.com/whatwg/html/pull/9689? I think Jonathan Kew agrees with it so probably have enough in terms of implementer interest, but always nice to get more review

reviewed, thx for the ping

[08:54:30.0057] <annevk>
zcorpan: hah, so I just found a flaw, only submit buttons participate in form submission

[08:54:47.0929] <annevk>
So maybe `dirname` needs to be more limited than `dir=auto` is after all

[08:55:33.0776] <zcorpan>
annevk: good catch. but it's "only" dead code, then, for `dirname`

[08:55:54.0044] <annevk>
Ah I guess the form submission algorithm is still fine as the buttons are filtered early on, indeed

[08:56:14.0847] <annevk>
So it's just a matter of whether `dirname` applies and is conforming, which it should not be

[08:56:23.0259] <annevk>
I'll change that

[08:57:11.0811] <zcorpan>
right

[08:58:20.0060] <annevk>
I was trying to implement this and the BaseButtonInputType class in WebKit was just like no, we don't handle form data here

[09:39:09.0527] <jarhar>
i think that animations are supposed to "pause", so it probably makes sense that cancel doesnt fire

[09:39:12.0879] <jarhar>
https://drafts.csswg.org/css-contain-2/#:~:text=While%20an%20element%20is%20skipped%2C%20CSS%20transitions%20and%20animations%20on%20the%20element%20do%20not%20update

[09:39:52.0969] <jarhar>
i didnt implement any of the interactions between content-visibility and animations though, so i'm not the most knowledgable

[09:50:27.0944] <Panos Astithas>
I see your personal email is on the invite. Perhaps I shall add your work email, too?

[09:53:04.0439] <Panos Astithas>
I just removed and re-added you, hopefully that generated a useful notification.

[10:23:32.0581] <annevk>
It didn't. Not sure what's going on. It's not in Trash. I can find it using the Google Calendar web interface search, but then it can't open it. It's also not a declined invitation.

[10:36:28.0139] <Panos Astithas>
That's weird. Shall I add your work email to see if it helps you debug this further?

[11:05:51.0235] <annevk>
Could you add annevk@annevk.nl perhaps?

[11:06:33.0803] <annevk>
I don't think my Apple address will help, but I could be mistaken...

[11:27:46.0306] <Panos Astithas>
That address was already there, but I removed it, saved the event, and then added it again. Maybe you'll get a notification this time

[12:53:59.0312] <TabAtkins>
Hiya, editor of CSS Variables here. Yes, $foo was an early proposed syntax. It started as `var-foo: blue; color: var(foo);`, then we discussed using $ and using the same name consistently in <https://lists.w3.org/Archives/Public/www-style/2012May/0744.html>, and then we explored a bunch of options that wouldn't require parsing changes (for a bit it was an underscore, then eventually the --, see <https://lists.w3.org/Archives/Public/www-style/2014Mar/0261.html>)

[13:00:06.0059] <bkardell>
The - was basically keeping it consistent with what we'd already done with vendor prefixes, and we just did that for all the custom things  https://lists.w3.org/Archives/Public/www-style/2014Mar/0269.html


2023-10-10
[23:59:43.0721] <annevk>
Yeah, that seems to have worked. Thanks!

[00:01:11.0847] <annevk>
Note that OP had already left the channel.

[01:07:00.0577] <annevk>
Domenic: https://github.com/whatwg/html/pull/9538#discussion_r1328593134 still seems concerning with the unsafe parser methods

[01:07:28.0443] <annevk>
Domenic: is there test coverage for that state? In particular because implementations also are not aligned on HTMLDocument vs XMLDocument vs Document and such

[01:07:39.0394] <Domenic>
annevk: I agree with Joey here that everything is initialized and all spec code that can be shared, is shared.

[01:07:50.0867] <annevk>
Domenic: so you're saying type should be "xml"?

[01:07:51.0439] <Domenic>
There is test coverage for that state.

[01:07:59.0757] <Domenic>
No, type gets set to xml elsewhere

[01:08:23.0509] <annevk>
Domenic: note that type and content type are distinct

[01:08:32.0006] <Domenic>
https://whatpr.org/html/9538/dynamic-markup-insertion.html#parse-html-from-a-string

[01:08:45.0325] <Domenic>
 * No, type gets set to html elsewhere

[01:10:20.0589] <annevk>
Domenic: I see, so URL will be about:blank meaning relative URLs will break?

[01:10:28.0911] <Domenic>
Yes, this is intentional.

[01:10:34.0659] <Domenic>
We discussed it upthread in the PR

[01:10:46.0122] <Domenic>
If people want URL inheritance we can add a { url } option in the future.

[01:13:17.0164] <annevk>
https://github.com/whatwg/html/pull/9538#discussion_r1293136059 is hard to find and the commit message doesn't describe it, but okay.

[01:15:22.0324] <annevk>
Anyway, I guess that's fine. Though `new Document()` does inherit the origin. Hmm.

[01:15:38.0974] <annevk>
 * Anyway, I guess that's fine. Though `new Document()` does inherit the origin. Hmm. Maybe it shouldn't have?

[02:24:25.0462] <Domenic>
Yeah the inheritance seems all very magic to me, I say, if you want it, we should make that the non-default.

[02:26:24.0233] <Domenic>
I recorded that we need tests for document.origin in Joey's CL, I missed that one, thanks.

[02:51:12.0622] <annevk>
Domenic: not sure what I want, but I can imagine web developers wanting it for URL at least, having `<img>` not work has been an issue of sorts before I vaguely recall

[02:51:40.0785] <annevk>
(work in the sense of `.href` not returning something useful)

[02:52:29.0366] <annevk>
zcorpan: https://github.com/whatwg/html/pull/9689 should be good now, but happy to wait a bit to see if more people want to chime in

[04:54:30.0815] <sideshowbarker>
annevk: about https://bugs.webkit.org/show_bug.cgi?id=192000, would a patch that conforms WebKit to the `Content-Type` parsing requirements in the Fetch spec actually be accepted? Or instead not — because it would break on too many existing sites?

[05:58:17.0538] <Domenic>
> <@annevk:matrix.org> Domenic: not sure what I want, but I can imagine web developers wanting it for URL at least, having `<img>` not work has been an issue of sorts before I vaguely recall

The simplest workaround is for them to inject a <base> element. But yeah, we could add something if we hear a request.

[05:58:58.0777] <Domenic>
* In reply to @annevk:matrix.org
Domenic: not sure what I want, but I can imagine web developers wanting it for URL at least, having <img> not work has been an issue of sorts before I vaguely recall

The simplest workaround is for them to inject a `<base>` element. But yeah, we could add something to configure the URL and/or base URL out of band, if we hear a request.

[06:03:05.0907] <annevk>
sideshowbarker: not sure all of it can be fixed in WebKit, but I think it's an area we'd be willing to clean up, might need some kind of preference so it's easy to revert for select sites?

[06:05:27.0069] <annevk>
Domenic: I guess Google should know since iirc Google mainly pushed for this method?

[06:07:44.0731] <Domenic>
Yeah we haven't heard any, that's why I promoted the simpler option.

[07:02:11.0320] <annevk>
I wonder if it's too late to change `new Document()`, but I also don't really want to work on it myself


2023-10-11
[02:08:11.0082] <annevk>
Domenic: is https://github.com/whatwg/html/pull/8467 in your queue?

[02:10:27.0638] <Domenic>
> <@annevk:matrix.org> Domenic: is https://github.com/whatwg/html/pull/8467 in your queue?

No.

[02:10:47.0699] <annevk>
Domenic: let me rephrase that, do you want to look at it before it lands?

[02:10:53.0184] <annevk>
Since you reviewed it before.

[02:12:13.0755] <Domenic>
Nah, seems fine. Although I'm not sure it actually has Chrome support at the moment.

[02:15:47.0802] <annevk>
Chrome engineers drove the change with the CSS WG. If you want to double check on that I can hold off on landing this. Let me know.

[02:18:17.0306] <Domenic>
Yeah we should hold off. They're failing to get signoff on blink-dev last I saw.

[04:58:31.0132] <annevk>
keithamus: I'm gonna wait with another round of review for EventTarget until it's a bit more established what the API shape should be. One thing that did seem to be missing is the parent setter/getter definition.

[04:59:34.0373] <keithamus>
annevk: within `EventTarget`? or `EventTargetInternals`?

[05:08:04.0304] <keithamus>
I've updated which hopefully clarifies the steps for get/set on `EventTargetInternals` `parent`.

[06:16:07.0532] <annevk>
Jake Archibald: I cannot reply to https://twitter.com/jaffathecake/status/1711872418434654419 but isn't the problem Chromium here, perhaps? I wonder what happens in the non-Chromium URLPattern implementation. Custom URL schemes are supported pretty well in URL and the idea is that they are too in URLPattern, provided you have a compliant URL parser.

[06:18:38.0139] <Jake Archibald>
annevk: ohhh, my understanding was that if you use a non http(s) scheme then the rest of the URL won't be parsed by HTTP rules 

[06:22:19.0767] <annevk>
Jake Archibald: see https://jsdom.github.io/whatwg-url/ as an easy way to test specific inputs; generally when people complain about this they are talking about a long-standing Chromium and Gecko bug

[06:22:39.0659] <annevk>
I was hoping that Interop 2023 would fix it, but it seems like it will be at least another year

[06:39:15.0621] <annevk>
Domenic: is https://github.com/whatwg/fetch/issues/1715 in your queue?

[06:41:53.0277] <Domenic>
> <@annevk:matrix.org> Domenic: is https://github.com/whatwg/fetch/issues/1715 in your queue?

Nope, that one is way too large to touch

[06:49:54.0364] <annevk>
Domenic: in particular I asked feedback on the name, not the whole API

[06:50:16.0070] <annevk>
Domenic: are you no longer reading GitHub pings?

[10:51:45.0509] <jub0bs>
 * The guy (who has a huge audience on Twitter and YouTube) wants to talk about

> how CORS was a mistake.

https://twitter.com/t3dotgg/status/1712027342556864952

[10:51:51.0309] <jub0bs>
 * The guy (who has a huge audience on Twitter and YouTube) wants to talk about
> how CORS was a mistake.

https://twitter.com/t3dotgg/status/1712027342556864952

[11:08:48.0106] <jub0bs>
 * The guy (who has a huge audience on Twitter and YouTube) purports to explain

> how CORS was a mistake.

https://twitter.com/t3dotgg/status/1712027342556864952

[13:00:46.0763] <jub0bs>
 * Nothing but pointless drivel so far...

[13:59:28.0489] <Dominic Farolino>
If a request from a document goes through a service worker, what's the `client` set to of the request that finally makes it to the "HTTP-network-or-cache fetch" algorithm (assuming the service worker did a `respondWith(fetch(e.request))`? Is it the original document's ESO, or the service worker's? After reading https://w3c.github.io/ServiceWorker/#on-fetch-request-algorithm I'm almost positive the answer is "the original document global".


2023-10-12
[18:16:14.0383] <sideshowbarker>
TabAtkins: About https://wpt.fyi/results/css/css-animations/animation-canceled-by-parent-details-element-being-closed.html, I’m trying to figure out what that test should rightly be checking — rather than checking for a `cancel` event to fire.

Looking at view-source:https://drafts.csswg.org/css-animations/ and at https://drafts.csswg.org/css-contain-2/#:~:text=While%20an%20element%20is%20skipped%2C%20CSS%20transitions%20and%20animations%20on%20the%20element%20do%20not%20update, I can find neither any spec support for firing a `cancel` event for that case, nor can I figure out what other event might supposed to be fired instead.

I’d like to fix the test, but at this point, I have no idea what to make it check for.

[18:16:37.0326] <sideshowbarker>
 * TabAtkins: About https://wpt.fyi/results/css/css-animations/animation-canceled-by-parent-details-element-being-closed.html, I’m trying to figure out what that test should rightly be checking — rather than checking for a `cancel` event to fire.

Looking at https://drafts.csswg.org/css-animations/ and at https://drafts.csswg.org/css-contain-2/#:~:text=While%20an%20element%20is%20skipped%2C%20CSS%20transitions%20and%20animations%20on%20the%20element%20do%20not%20update, I can find neither any spec support for firing a `cancel` event for that case, nor can I figure out what other event might supposed to be fired instead.

I’d like to fix the test, but at this point, I have no idea what to make it check for.

[18:22:16.0438] <Domenic>
> <@annevk:matrix.org> Domenic: in particular I asked feedback on the name, not the whole API

Oh, sorry, you linked to the whole PR, so I thought it was a review request for the whole thing.


2023-10-13
[22:45:35.0588] <sbastiandev>
Hi all, 

[22:48:55.0874] <sbastiandev>
I wanted to let you guys know that I open-sourced a Java implementation of WhatWg-Url. It passes relevant Web platform tests (url parsing, setters) and is up to date with the September 2023 spec. Any feedback is more than welcome ;) over here=> https://github.com/stephanebastian/whatwg-url

[23:03:09.0877] <Domenic>
That's great!!

[23:33:08.0494] <sbastiandev>
Thx 😃

[00:07:24.0982] <sideshowbarker>
> <@sbastiandev:matrix.org> I wanted to let you guys know that I open-sourced a Java implementation of WhatWg-Url. It passes relevant Web platform tests (url parsing, setters) and is up to date with the September 2023 spec. Any feedback is more than welcome ;) over here=> https://github.com/stephanebastian/whatwg-url

I may end up wanting to switch the https://validator.w3.org/nu/ HTML checker to using your implementation rather than the one we are currently using — https://github.com/smola/galimatias (which stopped being maintained years ago).

[00:08:01.0454] <sideshowbarker>
sbastiandev: Does yours implement error reporting?

[00:09:00.0223] <sbastiandev>
Whooa cool ! :)

[00:09:56.0447] <sbastiandev>
For error reporting there is the method Url.validationErrors() returning all validation errors or failures

[00:10:17.0024] <sideshowbarker>
Thanks, I see https://github.com/stephanebastian/whatwg-url#how-to-get-validation-errors now

[00:16:50.0553] <sbastiandev>
sideshowbarker: Obviously, dont't hesitate to contact me if you've got remarks/questions/feedback or ideas for improvements

[00:23:07.0139] <annevk>
sbastiandev: minor nit, we prefer WHATWG, all capitals (it stands for Web Hypertext Application Technology Working Group, but like W3C it's mostly used as its own "word")

[00:29:00.0335] <sbastiandev>
annevk: Sure, I updated the README, should be ok now. Thanks

[03:26:04.0745] <smaug>
keithamus: that relatedTarget issue is interesting. Maybe invoke event should use different name for that, since I _think_ we don't want the event propagation to stop at shadow boundary

[03:27:52.0677] <keithamus>
Yes I was just commenting in the issue smaug; I think it's okay because the invoke event doesn't bubble by default and so if you force it with manual dispatch in userland then you'll be dealing with the caveats that come with it. There is precedent of this behaviour with focusin/focusout which _does_ bubble and also has a relatedTarget and so sometimes won't propagate across the shadow boundary.

[03:28:12.0521] <smaug>
bubbling isn't interesting

[03:28:27.0584] <smaug>
(I mean, there is always capture phase)

[03:29:39.0351] <keithamus>
For me the important use cases (slash my opinions on this) are:

 - invoke dispatches in light dom as you'd expect
 - a button invoking into a shadowroot shouldn't really be possible
 - a button within a shadowroot invoking an element outside the shadowroot should be possible, but the relatedtarget should be retargeted to the host

[03:31:27.0957] <smaug>
A question is that if invoke is dispatched to a shadow element, should the user of the web component be able to call preventDefault()

[03:31:56.0963] <keithamus>
They should

[03:32:47.0863] <keithamus>
But I believe an invoke event can only be dispatched to a shadow element _from_ a shadow element in the same tree, or a tree within that tree.

[03:33:12.0196] <smaug>
I don't think any other cancelable event has .relatedTarget

[03:33:57.0411] <keithamus>
Does that become a problem?

[03:34:20.0679] <smaug>
Just that this in a new case

[03:35:01.0482] <smaug>
What if you explicitly set invokeTargetElement to point to some element in another shadow dom?

[03:35:20.0548] <smaug>
 * Just that this is a new case

[03:35:43.0076] <keithamus>
My opinion is that I am okay with that not working.

[03:36:34.0549] <keithamus>
I think shadow->"light" light->"light " and sub-shadow->shadow should work but adjacent shadow trees or light->shadow seems like an odd thing to do, IMO.

[03:37:18.0785] <keithamus>
in other words the "shadow-including inclusive ancestor" rule applies, I believe.

[03:38:51.0175] <smaug>
So the user of a web component couldn't prevent invoke if it was triggered inside the shadow dom, but can if it was triggered outside

[03:38:57.0661] <smaug>
Isn't that a bit odd

[03:39:43.0492] <keithamus>
Are the two mutually inclusive? Does cancelable relate to the event's path?

[03:40:08.0521] <smaug>
outside world can't get access to the event to cancel it

[03:40:24.0546] <smaug>
so yes, they are related

[03:40:55.0187] <keithamus>
I see, that's why I think it shouldn't dispatch from within a shadow tree. Only from outside

[03:41:37.0703] <smaug>
What you mean with "shouldn't dispatch from within a shadow tree" ?

[03:42:15.0543] <keithamus>
A button with an invokeTargetElement pointing to an element inside of a shadow tree that is not an inclusive ancestor should be a noop

[03:44:18.0544] <keithamus>
<button>
<div>
  <template shadowrootmode=open>
    <dialog>
  </template>
</div>

^- it should not be possible to wire the button up to the dialog.

<dialog>
<div>
  <template shadowrootmode=open>
    <button>
  </template>
</div>

^- it _should_ be possible to wire the button up to the dialog here

[03:44:30.0278] <smaug>
So having a shadowroot with two child elements, one button which has invoketargetElement pointing to the other one. That wouldn't work?

[03:44:59.0456] <keithamus>
Within a shadowroot it should be possible

[03:45:12.0674] <keithamus>
<div> <template shadowrootmode=open> <button> <dialog>  </template> </div> 

^- so this should be possible

[03:45:24.0484] <keithamus>
 * \<div> \<template shadowrootmode=open> \<button> \<dialog>  \</template> \</div> 

^- it should be possible too wire the button up to the dialog

[03:45:26.0821] <smaug>
right, but user of the web component can't cancel invoke

[03:45:28.0445] <keithamus>
 * \<div> \<template shadowrootmode=open> \<button> \<dialog>  \</template> \</div>
^- it should be possible too wire the button up to the dialog

[03:45:29.0719] <smaug>
in that case

[03:45:40.0233] <keithamus>
 * \<div> \<template shadowrootmode=open> \<button> \<dialog>  \</template> \</div>



^- it should be possible too wire the button up to the dialog

[03:45:59.0969] <keithamus>
Oh, the user as in the consumer of a third party WC? 

[03:46:38.0760] <smaug>
So use of the web component could cancel some invokes, but not others

[03:46:46.0047] <smaug>
 * So user of the web component could cancel some invokes, but not others

[03:46:53.0719] <smaug>
right

[03:46:57.0127] <keithamus>
I wonder if that's okay... 

[03:48:05.0239] <keithamus>
the user of the web component could cancel invokers if they happen outside of the shadow tree, but they'll never see invoke events from within shadow trees. If a web component author wanted to allow control they'd need to dispatch a separate event for that

[03:48:25.0107] <keithamus>
or... is the click event composed/bubbles? They can prevent that to prevent the invoke

[03:48:39.0262] <keithamus>
 * or... is the click event composed+bubbles? They can prevent that to prevent the invoke

[03:48:40.0611] <smaug>
bubbling doesn't matter 😉 

[03:48:43.0790] <smaug>
click is composed

[03:48:50.0850] <keithamus>
yes sorry

[03:49:11.0461] <keithamus>
so the way to cancel an invoke (per current design) would be to cancel the click

[03:49:25.0039] <smaug>
well, if they then need to use click, we end up using the old style events, and not invoke.

[03:49:37.0076] <keithamus>
I believe this relates to the discussion we had at TPAC then ;) 

[03:50:37.0839] <keithamus>
Do you have a resolution in mind? We could make the invoke composed? Would that suffice?

[03:53:16.0111] <smaug>
Would it be bad to have something else than .relatedTarget? Perhaps .invoker or some such which does itself get the usually retargeting when accessed, so that we don't leak anything from possible shadow DOM. But the event itself wouldn't have related target to stop propagation. 

[03:53:57.0574] <smaug>
Since I thought invoke would be something which could be used to replace click usage 

[03:54:25.0605] <keithamus>
This is specifically because of 5.9.7 and the fact that the name `relatedTarget` is intrinsic to the event dispatch algo?

[03:55:56.0674] <smaug>
not perhaps the name, but the concept

[03:55:59.0045] <smaug>
but yes

[03:57:38.0577] <keithamus>
The nice thing about `relatedTarget` is that it aligns nicely to the existing concepts I had internalized around focus/mouse events. I can envision a conversation in the future telling a developer that even though it behaves very similarly to `relatedTarget` it is called something different because of a very specific rule in the dispatch algo. 

But if that's necessary then that's necessary. 

[03:58:32.0834] <smaug>
But if it didn't work like mouse/focus events in event dispatch, then it would be rather inconsistent and would be hard to explain how event dispatch works

[03:58:50.0427] <keithamus>
yes that's also true

[03:59:02.0697] <smaug>
Are there reason why invoke propagation should stop at shadow boundary?

[03:59:19.0649] <smaug>
and if so, why it is ok that click does propagate through?

[03:59:47.0102] <keithamus>
I don't have a strong stance, and so I'm quite happy if it does propagate.

[04:01:56.0805] <keithamus>
If we change from `relatedTarget` will this require changes to the event dispatch specification to allow for re-targeting of the new property?

[04:02:35.0947] <keithamus>
Because the property will be dependent from where the event listener resides, no?

[04:03:01.0128] <keithamus>
I suppose the new property can make that affordance in the get steps? 

[04:14:38.0242] <smaug>
it is not about dispatch but accessing the property would need to go through https://dom.spec.whatwg.org/#retarget

[04:15:05.0361] <smaug>
so, similar to many other properties

[04:15:17.0019] <keithamus>
given the currenttarget and the `invoker`?

[04:15:33.0130] <smaug>
yeah

[04:21:50.0253] <smaug>
 * Are there reasons why invoke propagation should stop at shadow boundary?

[05:25:37.0778] <canadahonk>
If a lazy loading iframe has a different base URI at parse-time, then is set as eager loading later, should it use the now current base URI (I think this) or the base URI from parse-time?

[05:25:48.0684] <canadahonk>
 * If a lazy loading iframe has a different base URI at parse-time, then is set as eager loading later before becoming in view, should it use the now current base URI (I think this) or the base URI from parse-time?

[05:26:14.0697] <canadahonk>
 * If a lazy loading iframe has a different base URI at parse-time, then is set as eager loading later before becoming in view, should it use the now current base URI (I think this) or the base URI from parse-time? (Double checking as adding WPT for it)

[05:35:26.0197] <annevk>
canadahonk: I thought Dominic Farolino had tests for this already; the setup should be such that the base URL is determined at parse-time

[06:05:36.0514] <canadahonk>
> <@annevk:matrix.org> canadahonk: I thought Dominic Farolino had tests for this already; the setup should be such that the base URL is determined at parse-time

No tests for lazy -> eager checking base URI (sorry for taking long, Matrix died)

[06:13:23.0874] <annevk>
canadahonk: it's still parse time per https://html.spec.whatwg.org/#attr-iframe-loading

[06:13:37.0984] <annevk>
canadahonk: because you use the resumption steps

[06:14:53.0860] <canadahonk>
thanks!


2023-10-14
[07:50:05.0815] <seiziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziziz>
does anyone slay


2023-10-15
[03:01:47.0499] <sideshowbarker>
annevk: About https://github.com/WebKit/WebKit/pull/19093, I hope to add a spec citation to the code comment and commit message — citing whatever spec statement requires setting the `Referer` of a request initiated by `location.replace()` call on an `iframe`

[03:02:16.0270] <sideshowbarker>
 * annevk: About https://github.com/WebKit/WebKit/pull/19093, I hope to add a spec citation to the code comment and commit message — citing whatever spec statement requires setting the `Referer` of a request initiated by a `location.replace()` call on an `iframe`

[07:14:53.0118] <annevk>
sideshowbarker: I'm pretty sure it's derived from _sourceDocument_. I've done an initial review and provided a pointer.

[07:30:26.0992] <sideshowbarker>
annevk: In the WebKit sources, the first parameter to all the public `Location` member functions is named `incumbentWindow` — _except_ in the case of `assign()` and `replace()` and `reload()`, where for some reason it’s instead named `activeWindow`. But in all cases — for all those `Location` member functions —  it seems to be the same `LocalDOMWindow` that’s getting passed in.

[07:31:28.0766] <sideshowbarker>
…and that gets passed on to `setLocation()` (in the cases of the functions that cases that lead to the location getting set)

[07:31:31.0959] <annevk>
sideshowbarker: that would suggest it's not the parent either, but it's the document itself that's the referrer, no?

[07:32:06.0414] <annevk>
sideshowbarker: matching that seems like a reasonable MVP, figuring out incumbent some unattainable v2 :p

[07:35:28.0806] <sideshowbarker>
Yeah the Location code overall doesn’t seem to map directly to the spec — it doesn’t clearly use the same abstractions as defined in the spec — so it’s it a bit hard to understand sometimes what exactly it’s operating in, in terms of the spec.

[07:37:30.0529] <sideshowbarker>
And until recently the code was not even getting the location from a Window but instead from a Frame — which appears to be what the code uses for representing a browsing context.

[08:09:26.0038] <sideshowbarker>
annevk: Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter _should_ rightly be named `activeWindow` (or something) and the _second_ one should be named `incumbentWindow` (rather than `firstWindow`).

Does the code seem to make more sense to if it used those names?

Regardless, I can see now that I need to just do `firstWindow.document()->urlForBindings()` to get the right URL — rather than `frame->tree().parent())->document()->urlForBindings()`. So I’ll make that change, and push an update.


2023-10-16
[20:35:47.0102] <EveryOS>
Section 4.2.4.3 (https://html.spec.whatwg.org/multipage/semantics.html#fetching-and-processing-a-resource-from-a-link-element) of the HTML spec references setting the synchronous flag of a fetch request, and links to https://fetch.spec.whatwg.org/#synchronous-flag

[20:36:04.0745] <EveryOS>
However, that section of the fetch spec seems to no longer exist

[20:36:11.0532] <EveryOS>
So I think it may be out of date

[20:47:33.0301] <Domenic>
Looks like everything else has been updated but we forgot to delete that step. PR welcome!

[20:48:26.0918] <EveryOS>
Sure, will make a PR tomorrow! (It's late here)

[21:03:31.0086] <sideshowbarker>
TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:
```
gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d
```
…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser
(maybe I already knew this but subsequently forgot…)

[21:03:50.0787] <sideshowbarker>
 * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:

```plain
gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d
```

…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser
(maybe I already knew this but subsequently forgot…)

[21:04:01.0336] <sideshowbarker>
 * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:

```none
gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d
```

…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser
(maybe I already knew this but subsequently forgot…)

[21:04:22.0715] <sideshowbarker>
 * TIL that if you’ve got the GitHub command-line tool installed, and you’re looking at a git commit history for a GitHub repo, then you take run `gh browse` with the commit hash, like this:

```none
gh browse 12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d
```

…and it’ll open up https://github.com/whatwg/fetch/commit/12dd6fa8ca76bd3bdff0c65a0c5a84b3ca870c3d in your browser. (Maybe I already knew this but subsequently forgot…)

[21:07:55.0880] <EveryOS>
I just implemented a proper event loop and network task queue in the code for my browser, but I'm not properly blocking rendering
So now you can see the page load each individual external stylesheet. It's quite hilarious, especially on a website with many external stylesheets

[21:12:56.0794] <EveryOS>
sideshowbarker: That's pretty cool. Now I'm wondering if it has a way to open the commit history for a specific file in the browser

[21:14:27.0003] <sideshowbarker>
`gh browse fetch.bs` does take you to the file page at least

[22:39:47.0185] <sideshowbarker>
 * annevk: <del>Now I begin to wonder if the parameters in all those Location member functions are misnamed — flipped. Specifically, the first parameter _should_ rightly be named `activeWindow` (or something) and the _second_ one should be named `incumbentWindow` (rather than `firstWindow`).</del>

<del>Does the code seem to make more sense to if it used those names?</del>

Regardless, I can see now that I need to just do `firstWindow.document()->urlForBindings()` to get the right URL — rather than `frame->tree().parent())->document()->urlForBindings()`. So I’ll make that change, and push an update.

[02:45:40.0566] <annevk>
evilpie: `document.createElementNS(null, "blah").namespaceURI === null`

[02:47:11.0158] <evilpie>
I am not sure that is possible when parsing something?

[02:47:38.0558] <annevk>
evilpie: `<div xmlns="">` is also null

[02:47:57.0973] <annevk>
evilpie: empty string is canonicalized to null

[02:48:12.0465] <evilpie>
Ok

[02:48:46.0799] <annevk>
evilpie: `data:text/xml,<root><script%20xmlns="http://www.w3.org/1999/xhtml">alert(document.documentElement.namespaceURI%20===%20null)</script></root>`

[02:49:37.0221] <annevk>
evilpie: now, whether the HTML parser can do this, not sure

[02:50:22.0168] <annevk>
evilpie: but it seems best to design the API with the DOM in mind

[02:51:00.0483] <annevk>
evilpie: at least presumably we're not planning on throwing for namespaces the HTML parser cannot create

[02:52:20.0248] <evilpie>
I think we had discussed at some point throwing for unknown namespaces, because we have a hardcoded list baselines/default/whatever for elements/attributes

[02:52:32.0767] <evilpie>
 * I think we had discussed at some point throwing for unknown namespaces, because we have a hardcoded list baselines/default/whatever for elements/attributes (per NS)

[02:57:25.0838] <annevk>
If we do that we could have a narrower type as it comes down to the same thing, but it might be less confusing to have an equally wide type and just throw for null. I'm not entirely convinced it's a good idea to throw though.

[03:10:47.0385] <Noam Rosenthal>
Domenic: I gave a first shot at the `navigation.activation` thingy, if you want to take a look: https://github.com/whatwg/html/pull/9856
Still need to add tests (and implementation of course) but want to make sure I'm on the right track

[03:13:20.0916] <Domenic>
Will try to take a look tomorrow!

[03:22:26.0550] <Noam Rosenthal>
Thanks, no rush!

[05:57:00.0355] <annevk>
Does Gecko have a prototype of declarative shadow roots and if so what does http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cscript%3Ew(document.createElement(%22template%22).shadowRootMode%20%3D%3D%3D%20%22%22)%3C%2Fscript%3E log?

[05:57:53.0296] <annevk>
smaug: ^^ (last open question on the spec PR from my perspective; Chromium and WebKit both log false due to using null, which isn't allowed by the proposed spec text)

[06:14:24.0666] <zcorpan>
annevk: no prototype yet

[06:14:46.0314] <zcorpan>
https://bugzilla.mozilla.org/show_bug.cgi?id=1712140

[11:12:01.0656] <meacer>
Hello everyone, we are updating the Fetch spec to add HTTPS-Upgrades. I've been thinking how HTTPS-Upgrades works with Service Workers and I gathered some thoughts in a doc (with a very short explanation of how HTTPS-Upgrades works):

https://docs.google.com/document/d/1J5AkicHtSsCq2YVzLYwcFNj27Ah0-9VVTvkyevYxxPQ/edit

So far my conclusion is that:
- HTTPS-Upgrades is a navigation only feature. It doesn't modify subresource fetches.
- SWs can't intercept http:// navigations (since they are almost always cross origin). They can intercept http:// subresource fetches.
- Therefore, we don't need special handling of HTTPS-Ugprades in SWs. We might need to clear the "is HTTPS upgrade" boolean when the navigation completes successfully, but besides that, we shouldn't need to handle HTTPS-Upgrade fallbacks or any other error cases.

Does this sound reasonable? Please feel free to leave comments on the doc as well.

[11:39:57.0794] <annevk>
meacer: yeah that sounds good overall. I think my main feedback on the PR was just that it ought to be moved to https://fetch.spec.whatwg.org/#concept-http-network-fetch

[11:41:53.0767] <annevk>
meacer: as in, putting it in HTTP fetch is too high-level

[11:42:13.0248] <annevk>
(I gotta go for the day)

[11:42:36.0912] <meacer>
annevk: Thanks!


2023-10-17
[23:38:44.0684] <Domenic>
> <@noamr:matrix.org> Domenic: I gave a first shot at the `navigation.activation` thingy, if you want to take a look: https://github.com/whatwg/html/pull/9856
> Still need to add tests (and implementation of course) but want to make sure I'm on the right track

It's looking quite nice. I'm sorry you ran into a preexisting issue, per https://github.com/whatwg/html/pull/9856#discussion_r1361569089 . I guess it's good to confirm the direction I was leaning for a fix though. Your help implementing that fix would be much appreciated.

[23:50:09.0218] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> It's looking quite nice. I'm sorry you ran into a preexisting issue, per https://github.com/whatwg/html/pull/9856#discussion_r1361569089 . I guess it's good to confirm the direction I was leaning for a fix though. Your help implementing that fix would be much appreciated.

Yea the having to compute navigation type… sure let me have a go at it. Thanks for the review!

[23:52:54.0914] <Noam Rosenthal>
Domenic: re having a new ActivationInfo with each activation, that would mean that a BFCache restore would replace the whole object: are we ok with that? This is the reason I went with an additional internal struct

[23:53:51.0347] <Domenic>
> <@noamr:matrix.org> Domenic: re having a new ActivationInfo with each activation, that would mean that a BFCache restore would replace the whole object: are we ok with that? This is the reason I went with an additional internal struct

Ah, good point. PRobably updating the existing object is nicer. But you can still do that, just have the "update the navigation API for reactivation" poke at the current NavigationActivation's fields.

[01:00:56.0791] <annevk>
Domenic: `python3 factory.py --single urlpattern "URL Pattern"` should work

[01:01:41.0370] <annevk>
Domenic: only `--all` requires `db.json` to be up-to-date

[01:01:59.0135] <annevk>
Domenic: you'll have to create a PR manually but for a one-off that seems fine

[01:46:46.0272] <Domenic>
Ah, nice. I ran out of time for today but will do that tomorrow.

[03:39:11.0268] <Rakina Zata Amni>
Hello, the BFCache team in Chromium has a couple of spec discussions/PRs that are awaiting response from other vendors for a while, and I've been told that it might be good to ask about them here :)

The first is about [queueing messages on BroadcastChannel](https://github.com/whatwg/html/pull/8972#issuecomment-1730905420), which I think got agreement from Firefox but pending some thoughts from annevk . Anne, do you think that all your concerns have been addressed there?

The second is about [NotRestoredReasons](https://github.com/whatwg/html/pull/9360#issuecomment-1733061660): there was a controversial part that smaug and peterv pointed out about randomly exposing cross-origin blocking reasons, which has been removed now. If there's no remaining problem, can we get approval from Firefox folks there? (There is also a [question](https://github.com/whatwg/html/pull/9360#issuecomment-1733467050) about exposing line numbers and URLs there)

Finally this is not under WHATWG but since it's also bfcache related, there's also a discussion about [Clear-Site-Data <> BFCache eviction](https://github.com/w3c/webappsec-clear-site-data/pull/77#issuecomment-1707836953) with annevk. It seems like at least the top-level-frame header eviction shouldn't be controversial, is there any problem with specifying that?

LMK if there's more context needed for any of those. We can also join the WHATWG triage meeting if needed, but we're all in APAC so we'll need to wait for the APAC friendly one.

[03:39:56.0046] <smaug>
Rakina Zata Amni: FWIW, I and peterv will discuss about that NotRestoredReasons later today. We'll comment in the spec issue.

[03:40:24.0265] <Rakina Zata Amni>
Awesome, thanks!


2023-10-18
[17:46:11.0806] <sideshowbarker>
https://html.spec.whatwg.org/multipage/webappapis.html#incumbent:the-iframe-element
> _the consequences of using [the incumbent concept] are simply confusing and we hope to one day switch them to use current or relevant as appropriate_
…amen to that

[17:46:20.0032] <sideshowbarker>
 * https://html.spec.whatwg.org/multipage/webappapis.html#incumbent:the-iframe-element

> _the consequences of using \[the incumbent concept\] are simply confusing and we hope to one day switch them to use current or relevant as appropriate_

…amen to that

[00:27:30.0010] <zcorpan>
Curious that Element chooses the fingerprint image as the link card image

[01:20:29.0715] <Domenic>
We should likely just add some proper OpenGraph metadata... kitchen sink probably?

[01:59:50.0375] <annevk>
Isn't OpenGraph very much non-standard?

[02:01:09.0319] <annevk>
`<meta property>` doesn't exist. Probably something we'd have to admit defeat on, but that would be quite a bit of work.

[04:35:24.0540] <evilpie>
annevk: I just realized that something with unknownMarkup that I had forgotten about. Unlike for elements, we don't know which attributes are known or unknown.

[04:36:12.0757] <evilpie>
 * annevk: I just realized something with unknownMarkup that I had forgotten about. Unlike for elements, we don't know which attributes are known or unknown.

[04:42:19.0793] <annevk>
evilpie: that seems like something we can maintain; I also think that we should not have a global list for attributes that are essentially local to elements, we should flatten that (except for actual global attributes)

[04:44:33.0118] <evilpie>
I am not sure what you mean with flatten in that context. Do you mean have a list of attributes per element or not? { element-tag -> [attributes] }

[04:45:11.0106] <evilpie>
We talked about this a few times before, but at least for Gecko creating such a list is not straightforward

[04:47:09.0483] <annevk>
evilpie: yeah, similar to how `elements` works, embrace that in the default policy

[04:52:25.0548] <evilpie>
Just to clarify this, we would basically needs to maps { elements -> supported-attributes } and { elements -> baseline-allowed-attributes }, because otherwise we can't decide if "onclick" is a known not-allowed attribute, or an unknown attribute.

[04:52:31.0015] <evilpie>
 * Just to clarify this, we would basically needs two maps { elements -> supported-attributes } and { elements -> baseline-allowed-attributes }, because otherwise we can't decide if "onclick" is a known not-allowed attribute, or an unknown attribute.

[04:53:39.0529] <evilpie>
we don't need this for elements, because we currently do this weird thing with basically checking for instanceof HTMLUnknownElement

[04:59:31.0484] <annevk>
Which is a bit of a hack...

[04:59:40.0516] <annevk>
And doesn't work for MathML or SVG I'd think.

[05:00:18.0306] <evilpie>
yes, I think we have for that https://github.com/WICG/sanitizer-api/issues/147

[05:00:37.0579] <evilpie>
maintaining a list of supported elements is a lot easier still

[06:20:58.0481] <annevk>
evilpie: I think. that's why it's really important this becomes part of HTML, so that whenever we add an element or attribute, all the relevant lists get updated

[06:23:30.0025] <zcorpan>
HTMLUnknownElement check also doesn't work for custom elements

[07:23:32.0515] <Alex P>
Hey! Wombat is an awesome NFT gaming platform. Have you tried it? Download it now and earn a friendship NFT with me 😊 !

1. Install the app via this link and finish the registration.
2. Complete the “claim referral rewards” quest in app

Link:
https://go.getwombat.io/puqN

Code:
KQ2KYZZ

[07:25:57.0809] <Ms2ger>
annevk: you around? ^

[10:44:50.0438] <Dan>
Hi! Very cool that WHATWG is on Matrix! 🥳 I just submitted my very first proposal! 🙂 https://github.com/WICG/proposals/issues/125

[10:47:44.0414] <Dan>
 * Hi! Very cool that WHATWG is on Matrix! 🥳 I just submitted my very first proposal ever! 🙂 https://github.com/WICG/proposals/issues/125

[10:52:18.0009] <Dan>
(Ofc. "Windows" is only an example, surely Linux distros also are affected by this or will be, in the future)

[10:54:07.0630] <Dan>
 * (Ofc. "Windows" is only an example, surely Linux distros also are affected by this or will be, in the future)
also just shortened the proposal, removed the "optional discussion" part.

[10:54:18.0846] <Dan>
 * (Ofc. "Windows" is only an example, surely Linux distros also are affected by this or will be, in the future)
also just shortened the proposal, removed the "optional discussion" part in the end.

[11:03:19.0488] <Dan>
 * (Ofc. "Windows" is only an example, surely Linux distros also are affected by this or will be, in the future). I just made sure it says Windows as example.
also just shortened the proposal, removed the "optional discussion" part in the end.


2023-10-19
[23:41:12.0677] <Dan>
Please upvote my proposal (if you understand that it makes a lot of sense). I'd like to get this drafted asap, to get the best browsing experience out there for everyone asap. Thank you

[01:21:13.0590] <delijah>
hello folks. question regarding the html dialog element. we are facing issues, that dropdown of custom comboboxes and tooltips are cut off at the boundaries of the html dialog element. this is of course not good for UX. are there any known solutions or is this tackled already?

[01:40:42.0980] <annevk>
delijah: do you happen to have a simple demo?

[05:59:11.0477] <zcorpan>
Panos Astithas: WHATNOT still conflicts with Interop

[09:22:24.0574] <keithamus>
annevk: sorry i missed those links before the google meeting ended, could you relay them here please.

[09:23:00.0640] <annevk>
keithamus: https://github.com/whatwg/html/pull/5465/commits (last commit there was the first link I gave)

[09:23:32.0491] <annevk>
keithamus: if someone adds a new commit to that PR you also won't be able to follow the notification link you get for the same reason

[09:24:21.0031] <annevk>
keithamus: you might have seen that we use https://searchfox.org for blame as well because the document is too large for GitHub, it's understandable 😊

[09:24:52.0572] <keithamus>
Noam Rosenthal: could you explain further about your issue? I didn't fully comprehend it

[09:25:50.0911] <keithamus>
I think the check for large files is a size limit which we might be able to make an exception for, for this repo

[09:38:29.0283] <Noam Rosenthal>
keithamus: when someone suggests code changes on the `source` file in the whatwg/html repo, I can't accept it, it tells me I need to refresh

[09:38:49.0058] <Noam Rosenthal>
assuming because it's a super huge file

[11:35:29.0527] <ljharb>
there's also a bug with github where if the suggester has write access, you can't accept the suggestions


2023-10-20
[22:46:06.0295] <vrafaeli>
Hi. I've already touch this topic few months ago, but what do you think about adding a feature that will add link semantics to custom elements, or at least to tr? Because I saw a lot of need for the table row to behave like a link and you cannot wrap it with an a element.

[22:47:51.0395] <vrafaeli>
Yea, actually this is what came to my mind https://github.com/whatwg/html/issues/6223

[23:57:45.0453] <annevk>
vrafaeli: if there's no issue for link semantics in WICG/webcomponents it seems reasonable to open one. It won't help you with `tr` though.

[00:38:58.0738] <Domenic>
Link "semantics" are already possible with ariaRole

[00:39:09.0778] <Domenic>
It sounds like the desire is more for link behavior

[00:39:26.0180] <Domenic>
You can do that with `<tr is="my-link" data-href="my-url">`

[00:39:35.0282] <Domenic>
Where `my-link` is a web component you write

[01:09:25.0146] <annevk>
Domenic: how do you get right-click semantics?

[01:09:46.0813] <annevk>
Domenic: a role is just conveying something to AT, nothing more, it's not the same

[01:10:16.0931] <Domenic>
I would call those right click behaviors, but yeah, fair point that you don't get them.

[01:11:13.0060] <annevk>
I think it's a semantic as what a UA chooses to offer for links is up to them and it might also vary wildly across platforms

[01:19:05.0562] <vrafaeli>
What is AT?

[08:00:29.0687] <Alan Stearns>
Assistive Technology

[11:25:55.0732] <Panos Astithas>
> <@zcorpan:mozilla.org> Panos Astithas: WHATNOT still conflicts with Interop

Sorry about that. I'm told that this should only happen when the Interop meeting's cadence is weekly and even then it's only once every 6 weeks. So I'm assuming this will probably be the last conflict for a long while?

[14:27:04.0488] <vrafaeli>
annevk: What exactly are the challenges of implementing href for <tr>?

[14:32:18.0123] <vrafaeli>
 * annevk: What exactly are the challenges of implementing (adding to spec) href for \<tr>?


2023-10-21
[23:16:29.0531] <annevk>
vrafaeli: the complexity it brings; e.g., something that's both a table row and a hyperlink is not something AT understands, from a security perspective `<tr>` was safe and now it's maybe not. The use case has to be extremely compelling and I don't think it's that compelling given that there's often other designs possible or workarounds that get you most of the way there.

[23:53:16.0624] <vrafaeli>
I don't really get it. Of course AT does not understand something that is not a defined concept yet. But if allowed I don't see any reason AT should not understand it.

Also I do not understand the security perspective, what exactly is the problem?



[00:31:59.0977] <annevk>
vrafaeli: I'm just saying it does not come for free and as such it's a trade off against other things we can be working on.


2023-10-23
[22:14:13.0232] <Domenic>
We have several outstanding editorial-ish parser fixes waiting on review. https://github.com/whatwg/html/pull/9792 https://github.com/whatwg/html/pull/9810 https://github.com/whatwg/html/pull/9809 . hsivonen has been pinged but seems busy; and in general our strategy of relying on him for all parser reviews is maybe flawed. Any other parser experts able to help out? zcorpan maybe?

[01:14:48.0494] <hsivonen>
> <@domenicdenicola:matrix.org> We have several outstanding editorial-ish parser fixes waiting on review. https://github.com/whatwg/html/pull/9792 https://github.com/whatwg/html/pull/9810 https://github.com/whatwg/html/pull/9809 . hsivonen has been pinged but seems busy; and in general our strategy of relying on him for all parser reviews is maybe flawed. Any other parser experts able to help out? zcorpan maybe?

I'll take a look. Sorry about the GitHub notifications slipping.

[07:29:28.0186] <Sam Sneddon [:gsnedders]>
for invites from outside your org, declining them more strongly removes you from getting further notifications than you might expect (presumably for anti-spam reasons)

[07:32:41.0881] <Ms2ger>
Whoa, I clicked the "more context" arrow on an html PR, forgetting that that never works, and... it worked? 🤯

[07:58:29.0547] <zcorpan>
Domenic: yeah I can also review parser PRs, feel free to add me as reviewer or ping me here

[12:12:42.0531] <zcorpan>
> <@pastith:matrix.org> Sorry about that. I'm told that this should only happen when the Interop meeting's cadence is weekly and even then it's only once every 6 weeks. So I'm assuming this will probably be the last conflict for a long while?

The next time they conflict seems to be Nov 30


2023-10-24
[20:02:16.0529] <Domenic>
PSA for those who build the HTML Standard:

Thanks to Jeremy Roman, whatwg/html-build has replaced its string-substitution Perl preprocessor code with proper-HTML-parsing Rust preprocessor code. Very cool! This opens up many future opportunities for improving the HTML build tooling as well.

In case you don't want to install a Rust toolchain, you can also use the new `--remote` option to do a fully-remote build.

If you run into any problems, please let me know or file an issue.

[01:07:54.0666] <i18u>
hi, does a Data URL SVG image can set it's `<use />` tag's href attribute to another SVG document.

[01:15:18.0341] <i18u>
for example:

I have a SVG element  contains some symbols. and have a img element use a DataURL, which use a SVG symbol of the main document.

```html
<svg><symbol id="id" viewBox="0 0 1024 1024">...</symbol></svg>
<img src="data:image/svg+xml;utf8,<svg><use href="#id"></use></svg>">
```

[02:47:54.0098] <jason ji>
Hi, everyone. How can I know which new features(proposals)  will be added to the HTML living standard? Which features will be implemented by browser vendors? Thank you in advance!

[02:53:39.0782] <jason ji>
ECMAScript has 5 stages for a new proposal, it's very clear. Does WHATWG have this kind of mechanism to let developers know which new features can be expected in the future? 

[03:06:25.0111] <zcorpan>
jason ji: There's a proposal for such a mechanism, but it's optional to use. See https://github.com/whatwg/meta/issues/290

[03:07:33.0935] <zcorpan>
jason ji: otherwise there's the "addition/proposal" label: https://github.com/whatwg/html/labels/addition%2Fproposal

[03:09:02.0743] <zcorpan>
jason ji: and you can track implementation status in blink-dev (chromium) or dev-platform (gecko), and the relevant bugs for each browser

[03:15:53.0333] <jason ji>
Thank you zcorpan , The solution I can think of is monitoring browser version releases.

[03:16:18.0525] <jason ji>
I will pay attention to those two proposals.

[03:17:41.0663] <zcorpan>
jason ji: yes, release notes tells you when it's shipping (maybe during beta). "Intent to prototype" emails tells you someone will start working on an implementation 

[03:19:41.0950] <jason ji>
The current HTML standard can actually feel somewhat mysterious because there haven't been new versions or clear new feature releases. This can, in fact, diminish the standard's visibility among developers.

[03:23:13.0713] <i18u>
 * hi, does the spec have any word to describe about that, if a Data URL SVG image `svg` can have a `use` child element, in another word, if the DataURL svg image and the the target `svg` element share a same DOM scope?

[05:40:41.0462] <annevk>
i18u: in theory that ought to work; at some point I added this local URL concept for it to Fetch, but SVG never properly integrated with it I think

[05:41:03.0591] <annevk>
i18u: https://fetch.spec.whatwg.org/#local-urls-only-flag

[06:46:23.0043] <annevk>
Alright, hopefully "directionality" and the dirname attribute are now in a state where they can remain unchanged for another decade or so, modulo the introduction of new text-based form controls

[07:40:48.0646] <aja>
curious how directionality is handled for lang=zxx

[07:41:26.0878] <aja>
/me has been using on lorem ipsum sorta things

[07:45:00.0162] <aja>
same on font samples.   to avoid long bits of nonsense being read out by at

[07:45:50.0228] <annevk>
aja: it's not influenced by language at all

[07:49:28.0804] <Panos Astithas>
> <@zcorpan:mozilla.org> The next time they conflict seems to be Nov 30

I'm told that this should be the last conflict this year and you might be the only one who attends both.

[09:14:56.0069] <zcorpan>
Panos Astithas: ok yeah, I guess I should clone myself :)

[10:14:43.0782] <Panos Astithas>
hehe

[14:28:59.0712] <el fenix King rv república de Venezuela>
Hila


2023-10-25
[01:02:36.0142] <Domenic>
annevk: did you want to take a look at https://github.com/whatwg/html/pull/9860 before we merge it? It seems you were involved in those discussions originally.

[02:08:04.0368] <Noam Rosenthal>
Hola, do we have minutes from TPAC WhatWG meetings anywhere? maybe Panos Astithas 

[03:37:54.0516] <aja>
https://www.w3.org/WAI/APA/minutes ?

[03:41:35.0066] <annevk>
Noam Rosenthal: they're in the TPAC issue on whatwg/meta

[03:42:03.0505] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: they're in the TPAC issue on whatwg/meta

Makes sense, thanks!

[03:43:44.0888] <Noam Rosenthal>
annevk: on that note, I think all the issues on deferred fetching are resolved. `NotAllowed` is thrown only on 3p iframes and some such, there is no permission-based model currently

[03:44:50.0294] <annevk>
Domenic: it's not clear to me we have Gecko or WebKit buy-in at this point. For WebKit it'll require a bit more time anyway.

[03:49:32.0698] <annevk>
Noam Rosenthal: okay, that sounds reasonable in principle. I hope to have time this week.

[03:54:55.0663] <Noam Rosenthal>
annevk: I'm actually not seeing in the minutes anything about a problem with cross-origin iframes and deferred fetching.

[04:08:02.0723] <annevk>
Noam Rosenthal: I think we discussed that much earlier on at one of the Performance WG meetings. I had forgotten about it for a bit though and recently remembered again.

[04:09:16.0300] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: I think we discussed that much earlier on at one of the Performance WG meetings. I had forgotten about it for a bit though and recently remembered again.

Yea I looked at those minutes and the cross-origin iframe discussion was about isInputPending and not about this 

[04:16:30.0913] <annevk>
I think the concerns for `fetchLater()` came down to:

1. If the limit is shared for a given partition, this might introduce certain leaks. If it's not shared it might be easier to hit the total limit.
2. It's not clear that cross-site documents should have access to this capability by default. In particular if the budget is shared perhaps Permissions Policy ought to be used.

[04:17:49.0540] <annevk>
I also recall Alex not being super happy about giving cross-site documents access to such a powerful capability to begin with. (Though I imagine Permissions Policy would be acceptable as we have treated it as equivalent to `postMessage()` everywhere else.)

[04:23:55.0304] <Noam Rosenthal>
Ok thanks, let me ponder on this. For now the PR goes down that route 

[05:50:36.0980] <Noam Rosenthal>
> <@annevk:matrix.org> I think the concerns for `fetchLater()` came down to:
> 
> 1. If the limit is shared for a given partition, this might introduce certain leaks. If it's not shared it might be easier to hit the total limit.
> 2. It's not clear that cross-site documents should have access to this capability by default. In particular if the budget is shared perhaps Permissions Policy ought to be used.

The limit is per document. so this shouldn't be a problem

[05:55:37.0616] <Noam Rosenthal>
annevk: but for the other thing, yea, perhaps we should have permission policy for this. let me chat with the team about it

[06:00:55.0517] <annevk>
Noam Rosenthal: doesn't a per-document limit allow for infinite abuse? You can create near infinite nested documents.

[06:02:10.0422] <annevk>
 * Noam Rosenthal: doesn't a per-document limit allow for limitless abuse? You can create near infinite nested documents.

[06:02:38.0793] <Noam Rosenthal>
annevk: what would be the point? you can simply call fetch instead

[06:08:03.0787] <Noam Rosenthal>
annevk: I think it comes down to what the quota tries to protect against

[06:16:03.0274] <Noam Rosenthal>
annevk: the keepalive quota is also per-document and one can abuse it with infiinte nested iframes, we wanted to be consistent with that

[07:40:21.0957] <Noam Rosenthal>
> <@annevk:matrix.org> I also recall Alex not being super happy about giving cross-site documents access to such a powerful capability to begin with. (Though I imagine Permissions Policy would be acceptable as we have treated it as equivalent to `postMessage()` everywhere else.)

Would be good to know what makes this more of a powerful feature than, let's say, regular keepalive

[07:54:21.0807] <Ms2ger>
Is yielding in the middle of an infra map for-each loop like in https://webidl.spec.whatwg.org/#es-map-iterator actually well-defined?

[07:54:24.0259] <Ms2ger>
CC annevk 

[08:19:47.0497] <annevk>
Ms2ger: https://github.com/whatwg/infra/pull/451


2023-10-26
[22:48:49.0391] <jjaschke>
Following up on that — what is the expected behavior for a maplike (or setlike)? In my understanding, a maplike should work as a map, so iterating should use live data. 
But then there is [this wpt](https://github.com/web-platform-tests/wpt/blob/b2a38f9f6f/css/css-highlight-api/HighlightRegistry-iteration-with-modifications.html), which (given the commit message) deliberately iterates on a copy of the data. Is there some section in the spec I’m missing, or is this not defined properly?

[00:34:29.0440] <Ms2ger>
I think the latter

[01:51:53.0167] <jub0bs>
freddy: Sorry for dropping a ball on this! I'll send you an email now.

[01:52:01.0567] <jub0bs>
 * freddy: Sorry for dropping the ball on this! I'll send you an email now.

[01:59:45.0650] <Domenic>
maplike and setlike being undefined is the major motivation for that in-progress PR.

[03:18:43.0242] <jub0bs>
 * freddy: No problem! Thanks. I'll shoot you an email <del>on Thursday</del>.

[03:19:06.0595] <jub0bs>
freddy: Done 😇

[09:07:12.0568] <chargeitall>
The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. 

Link: https://pastebin.com/KQqMMjUh

[09:59:14.0526] <Dan Fabulich>
I have a random shot-in-the-dark question… not sure if this is the right place to ask it.

Recently HTMX has seen a surge in popularity, and, in particular, I think its users have some interest in standardizing some of its features, especially having HTML have the ability to do same-origin requests for HTML document fragments and swapping/merging them into the current page.

Is WHATWG the right forum to discuss something like this? (If not, is there a better place for that discussion?)

[10:03:21.0408] <zcorpan>
Dan Fabulich: it seems like a good place to discuss. File a spec issue for html

[10:15:39.0038] <annevk>
There's probably an issue for client-side includes already, if I understand the suggestion correctly.

[10:16:08.0085] <Noam Rosenthal>
not exactly, it's submitting a form that only replaces part of the document

[10:17:06.0692] <annevk>
Oh I see. Declarative AJAX.

[10:39:00.0161] <Dan Fabulich>
I'm actually a bit stumped on how to write "use cases" for declarative AJAX. (It does so much!)

[11:10:20.0063] <Noam Rosenthal>
Dan Fabulich: search the web for "HTMx use cases" and you'll probably find copy-pastable things

[11:10:35.0939] <Noam Rosenthal>
(An HTMx fan here)


2023-10-27
[23:58:23.0346] <chargeitall>
brilliant statement " Please leave your sense of logic at the door"

[01:51:51.0433] <chargeitall>
Topic: :fullscreen CSS pseudo class | Problem: The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. https://jsfiddle.net/og9eLsav/

[02:14:15.0530] <chargeitall>
 * Topic: :fullscreen CSS pseudo class | Problem: The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. https://jsfiddle.net/og9eLsav/    The example is in https://developer.mozilla.org/en-US/docs/Web/CSS/:fullscreen

[02:25:38.0964] <chargeitall>
 * Topic: :fullscreen CSS pseudo class | Problem: The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. https://jsfiddle.net/og9eLsav/    `<!-- https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
`

[02:26:59.0550] <chargeitall>
 * Topic: :fullscreen CSS pseudo class | Problem: The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. https://jsfiddle.net/og9eLsav/  

```
<!-- https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
```


[02:29:09.0638] <chargeitall>
 * **Topic**: :fullscreen CSS pseudo class | **Problem**: The button background color is not changing when toggling between fullscreen and no fullscreen using F11 and Esc. [https://jsfiddle.net/og9eLsav/]()

```
<!-- https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
```

[02:31:25.0173] <chargeitall>
 * **Topic**: :fullscreen CSS pseudo class | **Problem**: The button background color is not changing when toggling between fullscreen and none-fullscreen using F11 and Esc. https://jsfiddle.net/og9eLsav/

```
<!-- https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
```

[02:35:33.0754] <chargeitall>
 * **Topic**: :fullscreen CSS pseudo class
**Problem**: The button background color is not changing when toggling between fullscreen and none-fullscreen using F11 and Esc.
https://jsfiddle.net/og9eLsav/

```
<!-- https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
```

[02:51:25.0043] <chargeitall>
 * **Topic**: :fullscreen CSS pseudo class
**Problem**: The button background color is not changing when toggling between fullscreen and none-fullscreen using F11 and Esc.
https://jsfiddle.net/og9eLsav/
**Code mentioned** in [https://developer.mozilla.org/en-US/docs/Web/CSS/:fullscreen]()
```
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
        #fs-toggle:fullscreen {
        background-color: #faa;
      }

      #fs-toggle:not(:fullscreen) {
        background-color: #afa;
      }
    </style>
  </head>
  <body>
    <h1>MDN Web Docs Demo: :fullscreen pseudo-class</h1>

    <p>
      This demo uses the <code>:fullscreen</code> pseudo-class to automatically
      change the style of a button used to toggle fullscreen mode on and off,
      entirely using CSS.
    </p>

    <button id="fs-toggle">Toggle Fullscreen</button>
  </body>
</html>
```

[05:15:29.0800] <chargeitall>
Here is a list of CSS pseudo-classes. I am wondering if there is an easy way to identify which ones require JS to work, like the case with :fullscreen. https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes

[09:40:50.0210] <annevk>
I was very much expecting https://github.com/whatwg/html/pull/9885 to be spam, but it seems legit

[11:47:07.0816] <ljharb>
seems like an obvious hacktoberfest play to me, but if it's legit, ¯\\\_(ツ)_/¯ 

[12:04:15.0185] <annevk>
Ooh, I forgot what month it was. Bah.

[12:04:23.0843] <annevk>
Oh well.

[12:05:03.0597] <annevk>
But at least it's a reasonable change and not just randomly removing things.


2023-10-30
[18:41:36.0191] <Domenic>
Grammatically this feels like a gray area. Those bullets are not complete sentences. But maybe the idea is that combined with the prefix they become a complete sentence? I probably wouldn't have merged just out of Hacktoberfest prejudice though.

[05:37:44.0654] <draginfable>
Hello everyone! 
While trying to register protocols for a PWA, I noticed that while I can register for the call protocol, that is not the case for the callto protocol.
I see that the callto protocol is not in the allow list: https://html.spec.whatwg.org/multipage/system-state.html#safelisted-scheme

Does someone know where I should ask for it to be added? Thank you!

[06:53:24.0582] <Ms2ger>
annevk: any chance you could take another look at https://github.com/whatwg/html/pull/9872 ? networkException already rediscovered one of the typos and submitted their own PR for it

[07:50:39.0037] <annevk>
Ms2ger: will do; I don't think I got a notification that anything had happened to the PR

[07:55:33.0643] <annevk>
Ms2ger: I ended up doing a squash merge as at least one commit title ended in a dot

[07:55:51.0051] <Ms2ger>
Thanks

[08:33:08.0228] <zcorpan>
> <@draginfable:matrix.org> Hello everyone! 
> While trying to register protocols for a PWA, I noticed that while I can register for the call protocol, that is not the case for the callto protocol.
> I see that the callto protocol is not in the allow list: https://html.spec.whatwg.org/multipage/system-state.html#safelisted-scheme
> 
> Does someone know where I should ask for it to be added? Thank you!

File an issue. (Looks like you did, https://github.com/whatwg/html/issues/9894 ) But also see https://github.com/whatwg/html/issues/9158

[08:46:03.0724] <annevk>
Yeah, if I had realized before I would not have either.

[14:37:17.0326] <TabAtkins>
> <@chargeitall:matrix.org> Here is a list of CSS pseudo-classes. I am wondering if there is an easy way to identify which ones require JS to work, like the case with :fullscreen. https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes

You mean ones which will never match without JS doing something? There is no easy way, no. (And :fullscreen can match without JS; you can click the fullscreen button on a <video>, for instance.)

