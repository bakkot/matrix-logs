2023-10-01
[06:46:57.0034] <Alexander Kalenik>
hi, any chance anybody could point me at the place in navigation specification where document's url need to be updated when same-document navigation happens (for example https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigate-fragid)?

[08:22:46.0187] <Alexander Kalenik>
it's actually seems like a spec bug because by the time popstate/hashchange event is fired on step 13 (update document for history step application) document's url should be updated but non of previous steps does that.

[08:48:16.0103] <Domenic>
https://html.spec.whatwg.org/multipage/browsing-the-web.html#url-and-history-update-steps step 8 does it for popstate/hashchange/navigation API intercept

[08:48:33.0621] <Domenic>
Did we somehow mess it up for fragment navigation?

[08:52:47.0019] <Domenic>
Please file an issue


2023-10-02
[00:00:50.0505] <annevk>
TabAtkins: not sure if this is a problem, but when I updated WHATWG's bikeshed boilerplate for a change in new issue URLs, it was picked up automatically without me having to generate the manifest

[00:01:23.0037] <annevk>
TabAtkins: I have now updated the manifest as well, but that makes it seem redundant

[01:50:55.0658] <Noam Rosenthal>
Domenic: added https://github.com/whatwg/html/issues/9824 to track the event loop spec vs. impl differences. hoping to tackle it gradually

[01:53:18.0743] <Noam Rosenthal>
smaug: I think I said something misleading about `fetchLater` when we spoke about it a few days ago. It *is* reliable in the "renderer process is killed" scenario, as the whole logic is spec'ed to work in the network process (inside fetch, in spec terms). It's actually a main feature of `fetchLater` as opposed to sending beacons in `pagehide`.

[01:54:43.0388] <smaug>
ok, so whatever is representing a "network process" in each browser

