2021-09-01
[00:30:20.0904] <sideshowbarker>
https://github.com/mdn/content/issues/8515 could just some quick help. Basically just needs a comment in response to the OP’s question. Should only take ~10 minutes.

[10:17:40.0459] <annevk>
Domenic: thoughts on where we should put a Security/Privacy section? First no-num section? Also, in DOM, should the Historical section become a no-num section? See https://github.com/whatwg/dom/issues/1013 for context. (I'm out now, but I figured I'd leave this here and maybe address it tomorrow. Thoughts from others welcome as well of course.)

[10:19:52.0634] <Domenic>
annevk: no real opinion, besides that it seems a bit weird that W3C process/groups is influencing our editorial style. I guess I would lean toward leaving it numbered since it is not shared boilerplate that all specs are expected to have? Or is it?

[10:25:23.0114] <annevk>
Domenic: I guess it kinda is shared, in the sense that a reviewer can access the impact, but the contents would be specific to the document. I'm not quite sure how I feel about it yet and I'm not really volunteering on adding the complicated sections, e.g., to HTML.

[10:48:30.0726] <Domenic>
Yeah this seems like a "PR welcome" situation at the most.

[10:55:08.0150] <Eric Portis (he/him)>
Step 4.7. here https://html.spec.whatwg.org/multipage/images.html#updating-the-source-set says: 

"Parse child's sizes attribute with the fallback width _width_, and let source set's source size be the returned value."

I don't see _width_ defined anywhere, or fallback width used anywhere in the "Parse a sizes attribute" algorithm.

Ten bucks says I'm just missing something, though. cc: zcorpan 


2021-09-02
[18:55:07.0372] <sideshowbarker>
yipes *“No server is currently available to service your request.”* from GitHub

[18:55:15.0209] <sideshowbarker>
never seen that one before

[19:02:31.0675] <sideshowbarker>
big AWS failure affecting many sites maybe?

[19:04:01.0387] <sideshowbarker>
ah, maybe just Japan

[01:36:53.0384] <annevk>
foolip: you around? Does https://github.com/whatwg/sg/pull/160#pullrequestreview-744777669 seem reasonable?

[01:48:14.0847] <sideshowbarker>
hsivonen: reviewing and testing and merging the ambiguous-ampersand patch took me a bit longer than I had anticipated, but with it landed now, I’m super glad — no more need for a separate branch of the parser for the HTML checker, and now we have CI working (so we can catch regressions later, etc.)

[01:50:01.0763] <hsivonen>
> <@sideshowbarker:mozilla.org> hsivonen: reviewing and testing and merging the ambiguous-ampersand patch took me a bit longer than I had anticipated, but with it landed now, I’m super glad — no more need for a separate branch of the parser for the HTML checker, and now we have CI working (so we can catch regressions later, etc.)

Thanks!

[01:50:45.0882] <sideshowbarker>
hsivonen: thank you for making that code a lot nicer :)

[01:51:31.0970] <annevk>
jgraham: for Test Utils, the Workstream is now approved. https://github.com/whatwg/meta/blob/main/NEW-STANDARD.md has a checklist. Is there an existing repo that will be moved or do you need a new one? When do you want to work on this?

[01:56:14.0234] <sideshowbarker>
hsivonen: the only remaining big thing about making the standalone Java version of parser spec-conforming is the encoding stuff — as discussed in https://github.com/validator/htmlparser/pull/48. As mentioned at https://github.com/validator/htmlparser/pull/48#issuecomment-691654072 I’d thought that could be addressed by merging in the changes from the `encodings` branch. But since that branch is now gone, I guess the changes there were never intended to end being released anyway?

[01:57:23.0620] <hsivonen>
The encoding stuff was _intenteded_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:57:31.0459] <sideshowbarker>
OK

[01:57:47.0269] <hsivonen>
 * The encoding stuff was _intented_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:57:57.0594] <hsivonen>
 * The encoding stuff was _intended_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:59:05.0366] <sideshowbarker>
well since without those encoding changes the Java parser doesn’t pass the html5lib encoding tests, I can’t recall now how I made CI pass without them. I assume I must just somehow have it skipping those tests.

[01:59:32.0897] <hsivonen>
The html5lib tests just test the labels and not the encoding tables, right?

[01:59:46.0770] <hsivonen>
You did land spec-compliant labels, IIRC.

