2021-09-01
[00:30:20.0904] <sideshowbarker>
https://github.com/mdn/content/issues/8515 could just some quick help. Basically just needs a comment in response to the OP‚Äôs question. Should only take ~10 minutes.

[10:17:40.0459] <annevk>
Domenic: thoughts on where we should put a Security/Privacy section? First no-num section? Also, in DOM, should the Historical section become a no-num section? See https://github.com/whatwg/dom/issues/1013 for context. (I'm out now, but I figured I'd leave this here and maybe address it tomorrow. Thoughts from others welcome as well of course.)

[10:19:52.0634] <Domenic>
annevk: no real opinion, besides that it seems a bit weird that W3C process/groups is influencing our editorial style. I guess I would lean toward leaving it numbered since it is not shared boilerplate that all specs are expected to have? Or is it?

[10:25:23.0114] <annevk>
Domenic: I guess it kinda is shared, in the sense that a reviewer can access the impact, but the contents would be specific to the document. I'm not quite sure how I feel about it yet and I'm not really volunteering on adding the complicated sections, e.g., to HTML.

[10:48:30.0726] <Domenic>
Yeah this seems like a "PR welcome" situation at the most.

[10:55:08.0150] <Eric Portis (he/him)>
Step 4.7. here https://html.spec.whatwg.org/multipage/images.html#updating-the-source-set says: 

"Parse child's sizes attribute with the fallback width _width_, and let source set's source size be the returned value."

I don't see _width_ defined anywhere, or fallback width used anywhere in the "Parse a sizes attribute" algorithm.

Ten bucks says I'm just missing something, though. cc: zcorpan 


2021-09-02
[18:55:07.0372] <sideshowbarker>
yipes *‚ÄúNo server is currently available to service your request.‚Äù* from GitHub

[18:55:15.0209] <sideshowbarker>
never seen that one before

[19:02:31.0675] <sideshowbarker>
big AWS failure affecting many sites maybe?

[19:04:01.0387] <sideshowbarker>
ah, maybe just Japan

[01:36:53.0384] <annevk>
foolip: you around? Does https://github.com/whatwg/sg/pull/160#pullrequestreview-744777669 seem reasonable?

[01:48:14.0847] <sideshowbarker>
hsivonen: reviewing and testing and merging the ambiguous-ampersand patch took me a bit longer than I had anticipated, but with it landed now, I‚Äôm super glad ‚Äî no more need for a separate branch of the parser for the HTML checker, and now we have CI working (so we can catch regressions later, etc.)

[01:50:01.0763] <hsivonen>
> <@sideshowbarker:mozilla.org> hsivonen: reviewing and testing and merging the ambiguous-ampersand patch took me a bit longer than I had anticipated, but with it landed now, I‚Äôm super glad ‚Äî no more need for a separate branch of the parser for the HTML checker, and now we have CI working (so we can catch regressions later, etc.)

Thanks!

[01:50:45.0882] <sideshowbarker>
hsivonen: thank you for making that code a lot nicer :)

[01:51:31.0970] <annevk>
jgraham: for Test Utils, the Workstream is now approved. https://github.com/whatwg/meta/blob/main/NEW-STANDARD.md has a checklist. Is there an existing repo that will be moved or do you need a new one? When do you want to work on this?

[01:56:14.0234] <sideshowbarker>
hsivonen: the only remaining big thing about making the standalone Java version of parser spec-conforming is the encoding stuff ‚Äî¬†as discussed in https://github.com/validator/htmlparser/pull/48. As mentioned at https://github.com/validator/htmlparser/pull/48#issuecomment-691654072 I‚Äôd thought that could be addressed by merging in the changes from the `encodings` branch. But since that branch is now gone, I guess the changes there were never intended to end being released anyway?

[01:57:23.0620] <hsivonen>
The encoding stuff was _intenteded_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:57:31.0459] <sideshowbarker>
OK

[01:57:47.0269] <hsivonen>
 * The encoding stuff was _intented_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:57:57.0594] <hsivonen>
 * The encoding stuff was _intended_ to be released, but when it became clear it wasn't progressing to a releaseable state, I stashed it away.

[01:59:05.0366] <sideshowbarker>
well since without those encoding changes the Java parser doesn‚Äôt pass the html5lib encoding tests, I can‚Äôt recall now how I made CI pass without them. I assume I must just somehow have it skipping those tests.

[01:59:32.0897] <hsivonen>
The html5lib tests just test the labels and not the encoding tables, right?

[01:59:46.0770] <hsivonen>
You did land spec-compliant labels, IIRC.

[02:00:09.0836] <sideshowbarker>
OK maybe I just need to quit fretting about it

[02:01:59.0566] <sideshowbarker>
I just vaguely recall that we still have some significant failures when running some of the html5lib encoding tests ‚Äî maybe some that we have to flip on some non-default things to actually enable testing for, I dunno

[02:02:12.0163] <sideshowbarker>
I guess should just go back and look at my code and see

[02:04:40.0414] <sideshowbarker>
ideally it would just seem nice to be able to assert ‚Äúthis is a fully spec-conforming parser‚Äù with confidence ‚Äî and document it with passing tests

[02:05:10.0195] <sideshowbarker>
but the existence of https://github.com/validator/htmlparser/pull/48 makes me think we can‚Äôt actually do that yet

[02:06:47.0331] <sideshowbarker>
(all the encoding stuff really bewilders me ‚Äî even after I were to look back at the code, I think it would take me quite a bit of time to get back again to whatever marginal understanding of it I managed to arrive at when I‚Äôd hacked on it previously)

[02:08:22.0240] <sideshowbarker>
anyway, hsivonen and annevk in other news: I remember previously being subscribed to a Mozilla mailing list where, when there was some W3C spec transition or charter out for AC review, dbaron would post FYI messages asking if anybody wanted to send comments or objections as part of the review

[02:09:25.0237] <sideshowbarker>
but I either no longer seem to be on that list ‚Äî or else no such FYI-about-AC-review messages are going out any longer to whatever list that is

[02:09:56.0399] <hsivonen>
The list is dev-platform. Not sure if Tantek has systematically posted such messages or not.

[02:10:42.0811] <sideshowbarker>
ah OK thanks ‚Äî I‚Äôm pretty sure I‚Äôm still subscribed to dev-platform and getting messages from it

[02:11:51.0415] <hsivonen>
(encoding_rs has some nice properties that logically make it nicely compilable to efficient Java byte code. Sadly, related tools are too general instead of being customized to those nice properties.)

[02:12:29.0759] <hsivonen>
(The nice properties being: Reading and writing from caller-provided arrays, static read-only arrays and otherwise allocating only on the stack.)

[02:14:36.0269] <sideshowbarker>
wow well I would really love to have a good reason to work on Rust sources for a change, rather than doing all in Java

[02:15:47.0267] <hsivonen>
I think the the approach that wouldn't involve the yak shave of a custom compiler would be compiling to asm.js and then cleaning that up manually as Java as a one-time operation.

[02:16:04.0097] <hsivonen>
Still might be easier to write Java manually from the spec.

[02:16:53.0015] <hsivonen>
The main problem with compiling to wasm and then converting wasm to Java byte code is the loss of Java `char` arrays as Rust `u16` arrays.

[02:18:10.0173] <hsivonen>
Or, rather, Rust `u16` slices.

[02:19:42.0546] <jgraham>
annevk: https://github.com/jgraham/browser-test/ is the existing repo

[02:20:54.0097] <jgraham>
I strongly advise against getting me to make an icon :)

[02:31:57.0809] <annevk>
jgraham: it's the best part :-)

[02:50:55.0731] <jgraham>
Many years ago I had a simple Firefox extension and I got some feedback asking for a toolbar button. Afterwards I got feedback complaining I'd let a toddler design the icon.

[04:24:00.0845] <Ms2ger üíâüíâ>
Did you?

[05:25:00.0131] <jgraham>
Yes?

[05:27:06.0253] <jgraham>
Dunno how one would find it now given it previously probably worked with Firefox 3 or something

[06:02:54.0101] <annevk>
Domenic: so when I run make deploy I get a .spec.whatwg.org directory rather than a SHORTNAME.spec.whatwg.org directory and I don't really understand why

[06:03:23.0076] <annevk>
Domenic: maybe it's a macOS thing that sed -n 's#.*/\([^.]*\)\(\.git\)\?#\1#p' ends up returning the empty string for the given input

[06:03:34.0036] <annevk>
/me vaguely recalls some issues with macOS and sed

[06:03:47.0663] <Andreu Botella (he/they)>
I get the right directory name on Linux, if that's worth for anything

[06:04:38.0832] <annevk>
Thanks, I guess that means I ought to look into it being a macOS thing and perhaps copy-and-paste something from the previous solution

[06:11:18.0710] <freddy>
maybe there are different `sed`s and you can install gnu-sed?

[06:13:27.0355] <annevk>
I'd rather not require that for these kind of scripts, although in practice I wonder how many people end up running make deploy or equivalent

[06:56:37.0950] <stephanluis>
Hi everyone!

[07:03:06.0671] <stephanluis>
Was wondering the history behind a html5 tag <input type='duration'> for periods of time which don't require time localisation.  For example if I build a countdown clock that allows users to input a start time, HTML5 has no input type that will have the great functionality of the input-time but not be affected by local time formatting.  The situation seems odd, why is there not a control to input hours, minutes, seconds and milliseconds especially since these units are used around the world?

[07:05:44.0764] <Domenic>
> <@annevk:mozilla.org> I'd rather not require that for these kind of scripts, although in practice I wonder how many people end up running make deploy or equivalent

Yeah, fixing it to work on Macs would probably be worthwhile.

[07:08:16.0543] <jgraham>
> <@ms2ger:igalia.com> Did you?

Oh, I just reparsed this. I let someone whose graphic design skills hadn't improved noticably since being a toddler (i.e. me) create it.

[07:17:21.0653] <Ms2ger üíâüíâ>
hs-ivonen taught me reparsing is bad

[07:27:18.0024] <jgraham>
If you don't think humans are full of security vunerabilities, I have some horse drugs to sell you :)

[07:52:59.0106] <annevk>
Andreu Botella (he/they): Domenic: does `git config --local remote.origin.url | sed 's/.*\///' | sed 's/.git//'` work for you?

[07:54:07.0906] <Domenic>
Yes

[08:03:07.0053] <Andreu Botella (he/they)>
Same here

[08:16:52.0523] <annevk>
Thanks, I'll send a PR

[08:23:57.0481] <annevk>
stephanluis: in theory you can control localization through the `lang` attribute, but I'm aware of implementations

[08:32:37.0714] <stephanluis>
Yes, I've looked into that and it's too unreliable.  Additionally my specific implementation is a JS plugin, so don't want to update the language for the user's page.  Why isn't a duration type input part of the spec?  It seems universally useful.   

[08:34:25.0831] <annevk>
I'm somewhat surprised by the renewed relevance of the The Unpaired Surrogates and Lone Surrogates band names. Maybe it's time to start playing an instrument.

[08:36:19.0686] <annevk>
stephanluis: I don't recall. Perhaps it was discussed, but you'd have to go back pretty far in the archives. Most of the "new" input types were added in 2006 if I remember correctly.

[08:36:55.0433] <annevk>
https://lists.w3.org/Archives/Public/public-whatwg-archive/ / https://lists.whatwg.org/pipermail/whatwg-whatwg.org/

[08:37:35.0008] <stephanluis>
Wow!  And the process for amending the spec to include a new input type?

[08:37:59.0872] <annevk>
Oh, no, they were added in 2004 in Web Forms 2.0 (private draft end of 2003 I think), implemented in 2006 by Opera.

[08:38:18.0696] <annevk>
stephanluis: https://whatwg.org/working-mode#changes and https://whatwg.org/faq#adding-new-features

[08:39:38.0355] <stephanluis>
If I were to look back through the archive what reasons for not including duration would preclude it from being later accepted?

[08:52:43.0822] <stephanluis>
This duration input is such a generic idea it's hard to imagine why it's not an exposable base class to input time?   

[08:56:49.0635] <stephanluis>
... in most browser implementations.

[09:08:23.0752] <annevk>
I think at this point it would probably be judged based on need, amount of workarounds people deploy for it, etc. You might also want to look at the Open UI effort to see if they are tackling it.

[09:08:46.0219] <annevk>
The archives could be useful for understanding why it didn't happen back then, if it was even suggested.

[09:13:08.0352] <stephanluis>
are these the people https://open-ui.org/ ? 

[09:18:40.0947] <annevk>
Yeah, that looks correct

[09:20:42.0866] <stephanluis>
To me it's weird, but not many people seem to think they require this control but seem put up with converting from strings or multiple text boxes to separate units.  To me it seems like a glaring omission.  Writing a polyfill doesn't seem to be the correct approach?  What would you recommend?   

[09:22:00.0693] <stephanluis>
(I'll be away from my console for a couple hours, can resume the conversation later.)  Thanks for your guidance !

