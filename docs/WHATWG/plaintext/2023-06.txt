2023-06-01
[01:26:09.0064] <canadahonk>
is there a spec reference for prefetch using `Sec-Fetch-Dest: empty`? (cc Noam Rosenthal)

[01:30:56.0995] <canadahonk>
 * is there a spec reference for prefetch using `Sec-Fetch-Dest: empty`? (cc Noam Rosenthal)
it makes sense (to me) but not sure if there's an explicit reference which should be used

[01:31:07.0666] <Noam Rosenthal>
canadahonk: yes! https://html.spec.whatwg.org/#link-type-prefetch:fetch-and-process-the-linked-resource (#3)

[01:32:42.0397] <canadahonk>
thanks!

[05:19:40.0255] <annevk>
Domenic: so when I click on any of the types/objects in https://webidl.spec.whatwg.org/#ArrayBufferView I end up in the same place as when I click those linked from https://webidl.spec.whatwg.org/#dfn-typed-array-type

[05:20:47.0988] <annevk>
Domenic: so at least fundamentally it seems like Web IDL treats them as interchangeable already

[05:22:05.0129] <annevk>
I guess I should leave that as a comment in the PR. Also found https://w3c.github.io/IndexedDB/#convert-value-to-key thanks to dontcallmedom

[05:28:47.0839] <Domenic>
annevk: yes. I don't think that changes my point that "typed array types" is a concept you reference when talking about types, whereas `Uint8Array` is a concept you reference when talking about either types or instances.

[05:30:14.0021] <Domenic>
We say "a `Uint8Array`" as a shorthand for "a `Uint8Array` instance", and we say "`Uint8Array`" as a shorthand for "the `Uint8Array` type". But we don't say "x is a typed array type" when x is an instance. We can say "x is a `ArrayBufferView` (instance)" if we want though.

[05:31:51.0205] <annevk>
Domenic: I'm pretty sure there's precedent for "x is A or B" and then using "x" in that sense, e.g., in DOM

[05:32:11.0708] <annevk>
Domenic: I guess you're saying there's some magic imbued by it being in Web IDL in this particular section, but that seems super weird

[05:32:22.0833] <Domenic>
I don't think there is when "A" or "B" have "type" in their <dfn> string.

[05:34:40.0907] <annevk>
Okay, so the magic is imbued by "type", that seems even worse, if we ever had `MIMEType` or equivalent

