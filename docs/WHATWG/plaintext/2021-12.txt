2021-12-01
[20:20:16.0746] <devsrealmguy>
Hi guys, is this room appropriate to ask questions regarding the HTML spec?

[20:21:42.0914] <devsrealmguy>
I'll ask for now, but feel free to delete it if it's not allowed, so here is my question:

[20:21:53.0439] <devsrealmguy>
* I'll ask for now, but feel free to delete it if it's not allowed, so here is my question:

[20:29:54.0931] <devsrealmguy>
In the HTML parsing section, specifically the "Named character reference state", we have the following info:

>>> Consume the maximum number of characters possible, where the consumed characters are one of the identifiers in the first column of the named character references table. Append each character to the temporary buffer when it's consumed.

>>[If there is a match]:

If the character reference was consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next input character is either a U+003D EQUALS SIGN character (=) or an ASCII alphanumeric, then, for historical reasons, flush code points consumed as a character reference and switch to the return state.

>>[Otherwise:]

If the last character matched is not a U+003B SEMICOLON character (;), then this is a missing-semicolon-after-character-reference parse error.

Set the temporary buffer to the empty string. Append one or two characters corresponding to the character reference name (as given by the second column of the named character references table) to the temporary buffer.

Flush code points consumed as a character reference. Switch to the return state.

[20:33:50.0109] <devsrealmguy>
At what point do I decide to stop consuming? It's not clear , I know I can lookahead and stop matching when I encounter a semi-colon but the spec doesn't make that clear

[20:35:09.0154] <sideshowbarker>
devsrealmguy: I think you basically stop consuming when there‚Äôs no match

[20:35:20.0976] <sideshowbarker>
no substring match

[20:38:40.0369] <sideshowbarker>
so if you get `&h`, keep consuming, `&he`, keep consuming, `&hel`, `&hell`, `&helli`, still consuming

[20:39:28.0815] <sideshowbarker>
because those all are substring matches of valid character references

[20:40:07.0990] <sideshowbarker>
but if you hit `&helliq`, stop consuming ‚Äî because that is not a substring match of any valid character reference

[20:41:01.0746] <devsrealmguy>
Thanks for replying, I appreciate it a lot. I am on mobile, so, it's really hard to write and my sight is really poor, so, sorry if I my grammar is wrong. 

And yes, that is exactly what I am doing, what if you have &not and &notin?

[20:44:06.0282] <devsrealmguy>
> but if you hit `&helliq`, stop consuming ‚Äî because that is not a substring match of any valid character reference

Brilliant, I was looking to stop consuming when I encounter a semi-colon but you just nailed it.

[20:54:43.0723] <devsrealmguy>
Never mind with the &notit and &notin. Got it, thanks üòä

[23:29:26.0200] <Noam Rosenthal>
morning annevk, I think https://github.com/whatwg/fetch/pull/1311 is reviewable again, and I have two other pending ones (preload & controller), when you get the chance to look

[06:48:50.0645] <devsrealmguy>
I think I am done with covering the tokenization state, the only state that is a bit difficult is the "Named Character Reference State".

Just to confirm I didn't mess things up, this point says:

1) If the last character matched is not a U+003B SEMICOLON character (;), then this is a missing-semicolon-after-character-reference parse error.

2) Set the temporary buffer to the empty string. Append one or two characters corresponding to the character reference name (as given by the second column of the named character references table) to the temporary buffer"

An example of point 1 is this: "James &amp his brother went for launch". 

It is clear that the &amp is missing a semi-colon, so, is the point 2 saying to correct it to &amp; (with the semi-colon) or is it saying to swap it with the codepoint which is U+00026 as that is what is given in the second column table which the point 2 is referring to.

I was curious enough to check how other libraries did theirs, some are converting the codepoint to a character, some are appending the semi-colon and many ignored it. I can see why it trips people of.

Where should I sail to?



[06:49:13.0307] <devsrealmguy>
* I think I am done with covering the tokenizationstate, the only state that is a bit difficult is the "Named Character Reference State".

Just to confirm I didn't mess things up, this point says:

1) If the last character matched is not a U+003B SEMICOLON character (;), then this is a missing-semicolon-after-character-reference parse error.

2) Set the temporary buffer to the empty string. Append one or two characters corresponding to the character reference name (as given by the second column of the named character references table) to the temporary buffer"

An example of point 1 is this: "James &amp his brother went for launch". 

It is clear that the &amp is missing a semi-colon, so, is the point 2 saying to correct it to &amp; (with the semi-colon) or is it saying to swap it with the codepoint which is U+00026 as that is what is given in the second column table which the point 2 is referring to.

I was curious enough to check how other libraries did theirs, some are converting the codepoint to a character, some are appending the semi-colon and many ignored it. I can see why it trips people of.

Where should I sail to?



[06:49:33.0671] <devsrealmguy>
* I think I am done with covering the tokenization state, the only state that is a bit difficult is the "Named Character Reference State".

Just to confirm I didn't mess things up, this point says:

1) If the last character matched is not a U+003B SEMICOLON character (;), then this is a missing-semicolon-after-character-reference parse error.

2) Set the temporary buffer to the empty string. Append one or two characters corresponding to the character reference name (as given by the second column of the named character references table) to the temporary buffer"

An example of point 1 is this: "James &amp his brother went for launch". 

It is clear that the &amp is missing a semi-colon, so, is the point 2 saying to correct it to &amp; (with the semi-colon) or is it saying to swap it with the codepoint which is U+00026 as that is what is given in the second column table which the point 2 is referring to.

I was curious enough to check how other libraries did theirs, some are converting the codepoint to a character, some are appending the semi-colon and many ignored it. I can see why it trips people of.

Where should I sail to?



[06:51:51.0877] <devsrealmguy>
* I think I am done covering the tokenization state, the only state that is a bit difficult is the "Named Character Reference State".

Just to confirm I didn't mess things up, this point says:

1) If the last character matched is not a U+003B SEMICOLON character (;), then this is a missing-semicolon-after-character-reference parse error.

2) Set the temporary buffer to the empty string. Append one or two characters corresponding to the character reference name (as given by the second column of the named character references table) to the temporary buffer"

An example of point 1 is this: "James &amp his brother went for launch". 

It is clear that the &amp is missing a semi-colon, so, is the point 2 saying to correct it to &amp; (with the semi-colon) or is it saying to swap it with the codepoint which is U+00026 as that is what is given in the second column table which the point 2 is referring to.

I was curious enough to check how other libraries did theirs, some are converting the codepoint to a character, some are appending the semi-colon and many ignored it. I can see why it trips people of.

Where should I sail to?



[06:57:09.0409] <Ms2ger üíâüíâ>
Step 1 is just "the author screwed up" - you should ignore the step completely unless you surface parse errors somehow

[06:59:28.0394] <Ms2ger üíâüíâ>
`&amp` without the semicolon is in the table, so you just parsed an "&"

[07:00:12.0195] <Ms2ger üíâüíâ>
Did that help or just confuse more? :)

[07:00:28.0904] <devsrealmguy>
You mean, I should add the "&" to the temporary buffer?

[07:02:23.0453] <Ms2ger üíâüíâ>
Yes, it seems like that's the result

[07:02:41.0652] <Ms2ger üíâüíâ>
/me was unaware of this particular ugly corner of the parser

[07:03:38.0426] <devsrealmguy>
Okay, thanks. I spent tons of time on just that state than the rest of the states combined  üòÇ

[07:03:52.0913] <devsrealmguy>
* Okay, thanks. I spent tons of time on just that states than the rest of the state combined  üòÇ

[07:04:32.0147] <devsrealmguy>
* Okay, thanks. I spent tons of time on just that state than the rest of the state combined  üòÇ

[07:04:44.0168] <devsrealmguy>
* Okay, thanks. I spent tons of time on just that state than the rest of the states combined  üòÇ

[09:02:29.0923] <Domenic>
At some point we should blog about the fact that we've added/are adding a bunch of new standards: Web IDL, Test Utils, WebSockets, and File System

[09:02:36.0599] <Domenic>
I guess I will try to draft something quick

[11:28:57.0652] <Domenic>
Posted https://blog.whatwg.org/new-living-standards-2021 and tweeted https://twitter.com/WHATWG/status/1466126880344616966

[14:38:01.0032] <Mattias Buelens>
I seem to remember there was a tool that lists all Web IDL interfaces, where they are defined and where they are used in other specifications. Anyone knows what it was called again?

[14:38:57.0710] <mek>
https://dontcallmedom.github.io/webidlpedia/index.html ?

[14:39:28.0920] <Mattias Buelens>
Yep, that's it. Thanks! üòÅ

[14:40:00.0280] <Andreu Botella (he/they)>
There's also https://github.com/w3c/webref/tree/main/ed/idl


2021-12-02
[22:24:31.0155] <kaleidea>
Anybody knows of specific implementation difficulties with the `search` element in any of the 3 browsers?


[22:33:36.0773] <kaleidea>
Are there hotkeys on whatpr.org?

[22:35:09.0197] <kaleidea>
 * Are there hotkeys on whatpr.org? 
Yep, J.K. Rowling

[22:37:18.0708] <kaleidea>
Is there a way to filter seciton number changes from the diffs?

[02:28:00.0895] <annevk>
Andreu Botella (he/they): care to review https://github.com/whatwg/fetch/pull/1364? (very small)

[02:28:23.0773] <annevk>
Oh maybe wait, build is still failing

[06:50:31.0079] <kaleidea>
The triage meeting will take place here on matrix?

[07:02:17.0802] <annevk>
No, it's a video call

[07:02:56.0741] <kaleidea>
I don't find any info about what software is used for the call.

[07:05:31.0215] <kaleidea>
What's the conferencing software used?

[07:07:28.0895] <annevk>
I think it's Google Meet, no software needed other than a  browser

[07:07:48.0296] <kaleidea>
and a google account ;-)

[07:08:38.0607] <annevk>
I don't think so

[07:09:27.0847] <kaleidea>
oh, great how is the meeting link/code shared?

[07:11:30.0750] <annevk>
Unless you are different from Kaleidea on GitHub I think past mentioned they will get you an invite?

[07:12:15.0265] <kaleidea>
Yes, I was wondering, how he'll do it.

[07:12:45.0177] <annevk>
Presumably via a calendar invite

[07:31:15.0651] <annevk>
kaleidea: FWIW, the fundamental problem with inheritance for HTML elements is that engine logic is based on local name, not type of class; this is also why custom elements has the is="" hack (which in retrospect I wish we never shipped)

[07:32:03.0459] <annevk>
The other problem with a new element for navigation is bad XSS filters and just overall complexity.

[07:36:27.0547] <kaleidea>
> <@annevk:mozilla.org> kaleidea: FWIW, the fundamental problem with inheritance for HTML elements is that engine logic is based on local name, not type of class; this is also why custom elements has the is="" hack (which in retrospect I wish we never shipped)

HTMLFormElement is a final class (all HTML*Elements are), so inheritance quickly fell out as a solution. I've made <search> a HTMLFormElement, distinguished only by qualified name (namespace incl.). This is the same solution that's used for <main>, <section>, etc. - and would be used for the div-based <search> -, but with HTMLElement being the instantiated class.

[07:37:09.0603] <kaleidea>
However, being a HTMLFormElement, all the form logic also applies without additional effort.

[07:37:48.0174] <annevk>
Right, I'm saying that's false.

[07:38:20.0112] <kaleidea>
Where does it fail?

[07:39:04.0682] <annevk>
I recommend reading up on the web component discussions around inheritance, maybe that will help clear it up.

[07:39:23.0696] <kaleidea>
Sure, do you have a link handy?

[07:42:24.0881] <kaleidea>
Or a starting point. Is it all in the GH issues?

[07:48:58.0849] <kaleidea>
I'll investigate this clue, might take a day or more. https://github.com/whatwg/html/issues?q=is%3Aissue+custom+element+inheritance  is not immediately useful. If you find any pointers in the meantime, I'll appreciate it.

[07:49:29.0946] <kaleidea>
 * I'll investigate this clue, might take a day or more. https://github.com/whatwg/html/issues?q=is%3Aissue+custom+element+inheritance  is not immediately useful. If you find any pointers in the meantime, I'll appreciate it.

[07:53:00.0314] <annevk>
kaleidea: WICG/webcomponents is prolly a better starting point; you'll also run into it if you try to implement it in a browser

[08:32:11.0469] <annevk>
/me wonders if mek is the one from Google üòä

[08:32:29.0401] <annevk>
/me is pretty close to having a working fork of File System

[08:48:01.0552] <annevk>
Well, that went better than expected: https://whatpr.org/fs/1.html

[08:50:23.0548] <annevk>
Domenic: I noticed PR Preview didn't have access to websockets yet; now fixed

[08:54:17.0670] <mek>
> * <@annevk:mozilla.org> wonders if mek is the one from Google üòä

yes, that's me. Figured I should finally figure out how this matrix thing works.... Sorry I didn't reply to your email yesterday

[08:56:38.0347] <annevk>
mek: that's quite alright, I think I figured out a model that works, although entries are a tad underspecified so maybe not üôÇ

[08:56:54.0019] <Domenic>
annevk: oh dang, I did miss that step... thanks

[08:57:42.0364] <annevk>
Oh I guess one thing that's missing still is a logo

[08:59:56.0774] <Ms2ger üíâüíâ>
Storage already took the floppy disk :(

[09:01:53.0573] <annevk>
mek: would a folder icon of sorts work?

[09:02:25.0826] <mek>
works for me

[09:06:35.0206] <annevk>
I should have some time tomorrow / early next week. We need to wait a little longer anyway as one SG rep wanted to confirm something internally

[10:42:54.0161] <ntim>
Domenic: Hi, are there WPT for shadow DOM delegatesFocus + autofocus yet? (not talking about <dialog>)

[10:43:03.0786] <ntim>
 * Domenic: Hi, are there WPT for shadow DOM delegatesFocus + autofocus yet? (not talking about <dialog>)

[10:43:38.0752] <Domenic>
Pretty sure yes...

[10:43:59.0395] <ntim>
I think the introduction of the focus delegate thing slightly changed shadow DOM delegatesFocus if I'm not mistaken

[10:44:53.0504] <ntim>
(e.g. it now looks for the autofocus delegate, whereas it didn't before)

[10:45:04.0817] <Domenic>
https://github.com/web-platform-tests/wpt/commit/facfe0234c1252393bd8da54d7b33444928ebb9b I think

[10:45:32.0383] <Domenic>
A few others in https://github.com/web-platform-tests/wpt/commits/master/shadow-dom/focus

[10:46:13.0359] <Domenic>
I guess https://github.com/whatwg/html/pull/7361 changes not just the <dialog> case so should possibly come with tests for non-dialog scenarios...

[10:46:51.0016] <ntim>
perfect, thanks


2021-12-03
[02:20:49.0243] <annevk>
Noam Rosenthal: I suspect it's past the end of your work week already, but let me know (whenever really) if I missed any outstanding review requests. For the controller one I'd really like Jake Archibald and Yutaka to take a look. I'll ping them.

[02:22:06.0821] <Jake Archibald>
annevk: the controller one is https://github.com/whatwg/fetch/pull/1329/ yeah?

[02:22:41.0058] <annevk>
Jake Archibald: yeah and a related one in SW I pointed to in the final comment of that PR

[02:23:17.0379] <Jake Archibald>
Cool. Not sure I'll get to it today, but I've got it on my todo list

[02:23:30.0315] <annevk>
Thanks!

[02:54:08.0114] <Noam Rosenthal>
> <@annevk:mozilla.org> Noam Rosenthal: I suspect it's past the end of your work week already, but let me know (whenever really) if I missed any outstanding review requests. For the controller one I'd really like Jake Archibald and Yutaka to take a look. I'll ping them.

Thanks! You‚Äôre all caught up with my PRs and I will look into the details next week.

[05:24:09.0595] <Noam Rosenthal>
> <@noamr:matrix.org> Thanks! You‚Äôre all caught up with my PRs and I will look into the details next week.

Actually I had an hour to revise now even though it's past my work week :)

[06:23:27.0433] <Andreu Botella (he/they)>
hm, the HTML and fetch specs still have the websocket sections

[07:29:18.0964] <annevk>
Andreu Botella (he/they): Yutaka volunteered to take care of that

