2024-07-01
[00:52:09.0457] <annevk>
Kaiido: that's the result of partitioning: https://privacycg.github.io/storage-partitioning/

[00:53:03.0589] <annevk>
Kaiido: coupled with popups being an odd exception of sorts that we'll hopefully be able to address in some way

[01:51:08.0564] <Kaiido>
annevk: Thanks. Would you have time to compose an answer there? While I could link to https://github.com/whatwg/html/issues/5803 I don't feel confident enough to explain in which case this partitioning happens.

[08:25:43.0855] <annevk>
Noam Rosenthal: I'm not really sure what you're trying to say in https://github.com/WICG/scroll-to-text-fragment/issues/234#issuecomment-2200440415

[08:27:09.0243] <Noam Rosenthal>
annevk: I'm saying that if a site adds text fragment to a URL, it's not up to the web platform to hide it from scripts

[08:27:35.0822] <Noam Rosenthal>
... mainly because it's not feasible to do it in a non-leaky manner

[08:28:16.0269] <Noam Rosenthal>
(the navigation timing bug is not the important bit here)

[08:28:26.0418] <annevk>
Noam Rosenthal: how does it leak today?

[08:28:43.0376] <Noam Rosenthal>
annevk:  copy the link to another browser?

[08:28:59.0461] <annevk>
Noam Rosenthal: how does that leak it to script?

[08:29:09.0845] <Noam Rosenthal>
the other browsers don't hide it

[08:29:38.0200] <Noam Rosenthal>
you have to assume all browsers implement the text fragment feature for this hiding property to work

[08:31:30.0168] <annevk>
I don't think Gecko not implementing (which I don't think will remain true for long) is sufficient to just remove all privacy properties

[08:32:15.0765] <Noam Rosenthal>
annevk: it's also that some scripts use this for good reasons like enhancing the UI

[08:35:45.0333] <Noam Rosenthal>
annevk: since scroll position is anyway exposed, this is kind of a weird feature where the web page knows something about where it was scrolled to and can infer things about it but has to go about it in non-straightforward ways

[08:38:39.0931] <annevk>
All of that was known when the feature was designed. Doesn't seem like there's enough here to revisit that.

[08:40:07.0665] <annevk>
Did you discuss this with Google Search? Cause I'm pretty certain they care about these properties as well.

[08:41:30.0434] <Noam Rosenthal>
annevk: agreed, I should get back to the internal conversation about this before proceeding the external one.

[09:12:41.0270] <Noam Rosenthal>
annevk: context for this for me is that fixing the navigation timing bug was assigned to me a while back and we got a lot of push back about it breaking existing stuff that relies on that behavior... so I want to make sure we're doing the right thing by hiding the fragment in the first place. If it reaches consensus I think taking that backwards-compat hit would be fine.

[12:23:33.0752] <ljharb>
> <@annevk:matrix.org> ljharb: I think it only ends up impacting a couple of algorithms, nothing downstream

put up https://github.com/whatwg/webidl/pull/1415 and https://github.com/whatwg/html/pull/10450, pls lmk what more i need to do :-)


2024-07-02
[22:18:04.0763] <annevk>
Noam Rosenthal: I double checked; WebKit would object to exposing that information as we think revealing the precise text an end user might be looking at too revealing

[01:01:05.0476] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: I double checked; WebKit would object to exposing that information as we think revealing the precise text an end user might be looking at too revealing

Thanks for checking, let me discuss it internally

[01:27:50.0783] <Noam Rosenthal>
annevk: that behavior in navigation timing also exists in Safari

[01:28:21.0851] <Noam Rosenthal>
open https://www.gov.uk/passport-fees#:~:text=Fees%20for%20returning%20supporting%20documents and run `performance.getEntries()[0].name`

[01:34:20.0074] <annevk>
Ouch, I should have double checked that.

[01:35:48.0959] <annevk>
I guess this is not yet covered by WPT?

[01:35:58.0032] <Noam Rosenthal>
annevk: all good, let's find a way where fixing the privacy issue doesn't create both a backwards compat issue *and* an interop issue

[01:36:40.0527] <Noam Rosenthal>
annevk: no WPT yet. https://issues.chromium.org/issues/40136467 is the chromium bug

[02:10:34.0847] <sideshowbarker>
annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.
> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I’ve can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?

[02:14:03.0712] <sideshowbarker>
 * annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.

> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> 
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I’ve can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?
Did the Fetch spec ever say it should return anything other than a network error?

[02:14:22.0941] <sideshowbarker>
 * annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.

> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> 
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?
Did the Fetch spec ever say it should return anything other than a network error?

[06:05:52.0715] <evilpie>
What's happening with https://github.com/whatwg/html/pull/10022 ?

[09:20:25.0331] <annevk>
TabAtkins: are you around? Should `<input type=color>` essentially require its value to be an "absolute color"?

[09:28:07.0806] <TabAtkins>
I'm not, I'm on a cruise ship right now. Ping Lea or Chris, or wait a week for me


2024-07-03
[03:58:21.0848] <keithamus>
smaug: regarding https://github.com/whatwg/html/issues/9881 and your query on why we'd want to limit to custom elements, do you think having an API like `Element.prototype.connectedSignal()` would be a better fit?

[05:16:17.0368] <smaug>
keithamus: that is what I first thought, but then realized that this might be just one part of some larger API.  And I'm not sure what the scheduling should be here. Microtask? CEReaction? something else?

[05:17:34.0304] <smaug>
There is also https://github.com/whatwg/dom/issues/533

[05:18:50.0915] <keithamus>
I had prototyped out the elementinternals one as a CEReaction but microtask seems reasonable

