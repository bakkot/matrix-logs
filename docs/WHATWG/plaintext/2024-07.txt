2024-07-01
[00:52:09.0457] <annevk>
Kaiido: that's the result of partitioning: https://privacycg.github.io/storage-partitioning/

[00:53:03.0589] <annevk>
Kaiido: coupled with popups being an odd exception of sorts that we'll hopefully be able to address in some way

[01:51:08.0564] <Kaiido>
annevk: Thanks. Would you have time to compose an answer there? While I could link to https://github.com/whatwg/html/issues/5803 I don't feel confident enough to explain in which case this partitioning happens.

[08:25:43.0855] <annevk>
Noam Rosenthal: I'm not really sure what you're trying to say in https://github.com/WICG/scroll-to-text-fragment/issues/234#issuecomment-2200440415

[08:27:09.0243] <Noam Rosenthal>
annevk: I'm saying that if a site adds text fragment to a URL, it's not up to the web platform to hide it from scripts

[08:27:35.0822] <Noam Rosenthal>
... mainly because it's not feasible to do it in a non-leaky manner

[08:28:16.0269] <Noam Rosenthal>
(the navigation timing bug is not the important bit here)

[08:28:26.0418] <annevk>
Noam Rosenthal: how does it leak today?

[08:28:43.0376] <Noam Rosenthal>
annevk:  copy the link to another browser?

[08:28:59.0461] <annevk>
Noam Rosenthal: how does that leak it to script?

[08:29:09.0845] <Noam Rosenthal>
the other browsers don't hide it

[08:29:38.0200] <Noam Rosenthal>
you have to assume all browsers implement the text fragment feature for this hiding property to work

[08:31:30.0168] <annevk>
I don't think Gecko not implementing (which I don't think will remain true for long) is sufficient to just remove all privacy properties

[08:32:15.0765] <Noam Rosenthal>
annevk: it's also that some scripts use this for good reasons like enhancing the UI

[08:35:45.0333] <Noam Rosenthal>
annevk: since scroll position is anyway exposed, this is kind of a weird feature where the web page knows something about where it was scrolled to and can infer things about it but has to go about it in non-straightforward ways

[08:38:39.0931] <annevk>
All of that was known when the feature was designed. Doesn't seem like there's enough here to revisit that.

[08:40:07.0665] <annevk>
Did you discuss this with Google Search? Cause I'm pretty certain they care about these properties as well.

[08:41:30.0434] <Noam Rosenthal>
annevk: agreed, I should get back to the internal conversation about this before proceeding the external one.

[09:12:41.0270] <Noam Rosenthal>
annevk: context for this for me is that fixing the navigation timing bug was assigned to me a while back and we got a lot of push back about it breaking existing stuff that relies on that behavior... so I want to make sure we're doing the right thing by hiding the fragment in the first place. If it reaches consensus I think taking that backwards-compat hit would be fine.

[12:23:33.0752] <ljharb>
> <@annevk:matrix.org> ljharb: I think it only ends up impacting a couple of algorithms, nothing downstream

put up https://github.com/whatwg/webidl/pull/1415 and https://github.com/whatwg/html/pull/10450, pls lmk what more i need to do :-)


2024-07-02
[22:18:04.0763] <annevk>
Noam Rosenthal: I double checked; WebKit would object to exposing that information as we think revealing the precise text an end user might be looking at too revealing

[01:01:05.0476] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: I double checked; WebKit would object to exposing that information as we think revealing the precise text an end user might be looking at too revealing

Thanks for checking, let me discuss it internally

[01:27:50.0783] <Noam Rosenthal>
annevk: that behavior in navigation timing also exists in Safari

[01:28:21.0851] <Noam Rosenthal>
open https://www.gov.uk/passport-fees#:~:text=Fees%20for%20returning%20supporting%20documents and run `performance.getEntries()[0].name`

[01:34:20.0074] <annevk>
Ouch, I should have double checked that.

[01:35:48.0959] <annevk>
I guess this is not yet covered by WPT?

[01:35:58.0032] <Noam Rosenthal>
annevk: all good, let's find a way where fixing the privacy issue doesn't create both a backwards compat issue *and* an interop issue

[01:36:40.0527] <Noam Rosenthal>
annevk: no WPT yet. https://issues.chromium.org/issues/40136467 is the chromium bug

[02:10:34.0847] <sideshowbarker>
annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.
> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I’ve can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?

[02:14:03.0712] <sideshowbarker>
 * annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.

> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> 
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I’ve can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?
Did the Fetch spec ever say it should return anything other than a network error?

[02:14:22.0941] <sideshowbarker>
 * annevk: About https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#:~:text=If%20there%20is%20no%20match%2C%20the%20browser%20will%20respond%20with%20a%20504%20Gateway%20timeout%20status.

> `only-if-cached` — The browser looks for a matching request in its HTTP cache.
> 
> - If there is a match, fresh or stale, it will be returned from the cache.
> - **If there is no match, the browser will respond with a [504 Gateway timeout](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504) status.**

Do UAs (any) actually do that? I can’t recall the Fetch spec ever specifying that. Maybe it’s in some other spec?
Did the Fetch spec ever say it should return anything other than a network error?

[06:05:52.0715] <evilpie>
What's happening with https://github.com/whatwg/html/pull/10022 ?

[09:20:25.0331] <annevk>
TabAtkins: are you around? Should `<input type=color>` essentially require its value to be an "absolute color"?

[09:28:07.0806] <TabAtkins>
I'm not, I'm on a cruise ship right now. Ping Lea or Chris, or wait a week for me


2024-07-03
[03:58:21.0848] <keithamus>
smaug: regarding https://github.com/whatwg/html/issues/9881 and your query on why we'd want to limit to custom elements, do you think having an API like `Element.prototype.connectedSignal()` would be a better fit?

[05:16:17.0368] <smaug>
keithamus: that is what I first thought, but then realized that this might be just one part of some larger API.  And I'm not sure what the scheduling should be here. Microtask? CEReaction? something else?

[05:17:34.0304] <smaug>
There is also https://github.com/whatwg/dom/issues/533

[05:18:50.0915] <keithamus>
I had prototyped out the elementinternals one as a CEReaction but microtask seems reasonable

[05:21:30.0223] <keithamus>
I'm quite strongly attached to the API being a signal as it's an ergonomic way to handle a lot of things like cancelling fetch/event listeners. The ideas in that issue seem to want to use the Observer pattern which to me feels "heavy handed" from an API ergonomics perspective. 

[05:25:34.0316] <keithamus>
smaug: curious on how you see this as a larger API, what more do you think is needed? 

[05:27:33.0904] <smaug>
I could imagine at least also attribute removal triggering a signal

[05:28:22.0597] <keithamus>
It seems like there may be some appetite around a large API for learning when elements enter/leave a page, similar to MO but with more fine-grained filtering akin to something like SelectorObserver (e.g. https://github.com/whatwg/dom/issues/1225) 

But I think the two use cases seem orthogonal enough to explore options for both.

[05:29:02.0547] <smaug>
but in general, this feels like a one of mutation event listener / mutation observer thingie

[05:29:41.0738] <keithamus>
So a suite of APIs for managing connectedness of already connected nodes? If it was on `Node` prototype then that could account for Attr nodes right? Is Attr still considered a useful API or should we steer away from it?

[05:29:55.0904] <smaug>
no idea how it would work, but could it be something like node.signal("some filter") ?

[05:30:21.0340] <keithamus>
Where "some filter" is an enum of possible "reactions"?

[05:30:30.0144] <smaug>
right

[05:30:44.0377] <keithamus>
I'd be happy with that. Fits my use case. 

[05:31:18.0246] <keithamus>
However would something like `node.signal('connected')` returning an AbortSignal make sense? Perhaps no? Does it need another signal type?

[05:36:22.0546] <smaug>
("Abort" naming in the *Signal is unfortunate)

[05:37:25.0711] <smaug>
I was thinking your case would be node.signal("disconnect")

[05:38:02.0462] <keithamus>
For sure, and that API definitely makes sense to me. It's the other reactions where returning an AbortSignal makes less sense. 

[05:39:19.0665] <smaug>
Not sure why disconnect would be special

[05:39:32.0929] <keithamus>
I agree it shouldn't be.

[05:41:10.0292] <keithamus>
It might make more sense for an API of this shape to return a Promise, but that's not tenable for my use case... unless we can have some way to turn a Promise into an AbortSignal

[05:41:23.0374] <keithamus>
It also binds us to a microtask over a CEReaction

[05:41:25.0184] <smaug>
If mutation observer somehow supported disconnect/connect, could signal() take similar dictionary as observe(), but possibly without subtree? Hmm, no, that wouldn't be quite right.

[05:44:13.0986] <smaug>
AbortPromise (extends Promise) from which you can get .signal()  🙂  That would be a bit weird

[05:45:05.0635] <keithamus>
I'd almost go so far as to suggest an event on the element itself but I know that enters into scary territory...

[05:48:15.0884] <keithamus>
Maybe it makes sense to keep each reaction a separate method in that case? You could have a `disconnectedSignal()` return `AbortSignal` then a `connectedSignal()` could return some future `HappySignal`.

[15:43:10.0370] <akaster>
Bit of a long shot, but does anyone here have a direct line to Andreas Kling? He forgot to give us enough mod powers on the new ladybird discord and ... Well it's 1 am in Sweden. 


2024-07-04
[20:50:27.0611] <ljharb>
i'd love HTML people's thoughts on https://github.com/tc39/proposal-is-error/issues/9

[20:50:36.0970] <ljharb>
 * i'd love HTML people's thoughts on https://github.com/tc39/proposal-is-error/issues/9, in particular before the july plenary's agenda deadline

[08:32:49.0457] <Luke Warlow>
Is WhatNot on this week?

[08:51:00.0041] <emilio>
> <@lwarlow:igalia.com> Is WhatNot on this week?

The meeting notes have an entry for today, so I think so :)

[12:05:03.0164] <janbrasna>
annevk: I canceled this week's WHATNOT and I'm wondering what to do with the July 4 one. I'm inclined to skip since all of us US-based attendees won't be attending, but if enough European folks want to attend and you can facilitate, maybe it's worth keeping?

[12:05:22.0734] <janbrasna>
Panos Astithas: I'll be around, let's keep it for now and I'll cancel/end early as needed

[12:06:00.0996] <janbrasna>
Luke Warlow: See above ^^

[12:10:38.0399] <janbrasna>
(sorry thought the original message link/timestamp /and author/ would be included ~ these are from JUN 27, so worth checking again whether the plans are still in place.)


2024-07-05
[17:41:01.0747] <Maxim Vaarwel>
> Elements are pushed onto the backup element queue during operations that affect the DOM without going through an API decorated with [CEReactions].
How can I find out what these APIs are that are not decorated with [CEReactions]? Could anyone provide some example of such an API?

[17:41:11.0142] <Maxim Vaarwel>
 * > Elements are pushed onto the backup element queue during operations that affect the DOM without going through an API decorated with \[CEReactions\].

How can I find out what these APIs are that are not decorated with \[CEReactions\]? Could anyone provide some example of such an API?

[17:42:36.0671] <Maxim Vaarwel>
 * > Elements are pushed onto the backup element queue during operations that affect the DOM without going through an API decorated with \[CEReactions\].

How can I find out what these APIs are that affect to the DOM and are not decorated with \[CEReactions\] ? Could anyone provide some example of such an API?

[17:44:26.0861] <Maxim Vaarwel>
 * > Elements are pushed onto the backup element queue during operations that affect the DOM without going through an API decorated with \[CEReactions\].

How can I find out what these APIs are affect to the DOM and not decorated with \[CEReactions\] ? Could anyone provide some example of such an API?

[01:01:49.0723] <annevk>
I think I did all the WHATNOT call follow-up stuff now. Panos Astithas if you notice something missing please let me know.

[04:32:58.0092] <annevk>
Seems JSON has quite a few interop issues: https://www.mlsec.org/docs/2024b-asiaccs.pdf

[04:57:51.0503] <sideshowbarker>
> our analysis shows that the effects of an imprecise specification can hardly be resolved at the implementation level

[05:45:08.0935] <annevk>
Not entirely convinced by that part of the paper, but the interop issues seem real

[05:46:25.0805] <annevk>
For instance, one of the references to back that up is https://seriot.ch/projects/parsing_json.html which doesn't consider the Ecma document and the main complaint is about it not defining things around limits, though I can see how for numbers that does present a bit of an ordeal

[06:27:07.0265] <evilpie>
I think it's quite telling that v8 and SpiderMonkey don't have interop issues according to their matrix (figure 6)

[14:12:42.0074] <smaug>
dbaron: what is https://searchfox.org/mozilla-central/rev/4e0f4c612589c23344f22285520a44a3f45c9e6e/testing/web-platform/tests/html/semantics/interactive-elements/the-details-element/name-attribute.html#198-200 trying to test?

[14:13:19.0952] <smaug>
That should, in theory, trigger more mutation events, since it is just calling setAttribute in another (mutation) event listener


2024-07-06
[02:34:00.0001] <Harsh Tiwari>
Hey everyone, I was searching for a website where I can learn some extra topics of JavaScript. Is there any website that has better and deeper content (from basics to advanced) in a sequential order? Your help is greatly appreciated 🙏🏻🙂


2024-07-07
[04:01:21.0055] <Noam Rosenthal>
Harsh Tiwari: I don't think you're in the right group :) This is where people who build web standards hang out to talk about specifics of doing that. You'd probably find much more comprehensive resources searching the web, podcasts, online courses, or relevant social network groups.

[06:52:00.0678] <Harsh Tiwari>
> <@noamr:matrix.org> Harsh Tiwari: I don't think you're in the right group :) This is where people who build web standards hang out to talk about specifics of doing that. You'd probably find much more comprehensive resources searching the web, podcasts, online courses, or relevant social network groups.

Got it 🙂 🙌🏻


2024-07-08
[04:23:44.0768] <annevk>
krosylight: how are push subscriptions scoped currently? An origin can in theory create infinite service workers. Would each of them be able to get a push subscription? Or is there some implementation-defined limit?

[05:33:53.0216] <krosylight>
> <@annevk:matrix.org> krosylight: how are push subscriptions scoped currently? An origin can in theory create infinite service workers. Would each of them be able to get a push subscription? Or is there some implementation-defined limit?

I don't have an answer right now, I'll ask our push backend engineer. (I don't immediately see anything from the gecko side)

[05:37:19.0219] <annevk>
krosylight: ta, will do the same

[05:37:57.0731] <annevk>
krosylight: I plan on working on declarative web push again, so there will be some more activity until my vacation starts anyway

[07:23:05.0937] <annevk>
Speaking of which, anyone here familiar with whether there's anything remotely like file signatures for JSON? Using a rather unique key is the best I've come up with thus far.

[07:28:48.0474] <freddy>
for people using json-schema, they use `$schema` key to point to a URL of the accepted json-schema format

[07:29:34.0135] <freddy>
maybe that's what you mean with a "rather unique key"? Even if a file has that special key, you'd still have to check that all keys and values are: present, not duplicate, of the right type etc.

[07:32:06.0303] <jrconlin>
Hi, Push Engineer here.
So, technically, a UserAgent could have as many subscriptions as there is numberspace in a UUID4. (Subscriptions are identified as "Channel IDs" or CHIDs). Push subscriptions are fairly cheap on the server side since at most they require adding a mostly empty row to a Bigtable database. The server then encrypts the UAID and CHID into the subscription URL and that's what you're getting back. Of course, having that many subscription updates will do frankly horrible things to the UA, which has to manage, decrypt, and process those subscriptions, so there's the very high likelihood that even if only a percentage of those subscriptions were active, you'd swamp the network and CPU for the UA. 

[07:33:05.0856] <jrconlin>
If you're interested, the code we use is [here](https://github.com/mozilla-services/autopush-rs/). It's in rust, with Python integration tests.

[07:33:19.0384] <annevk>
It seems that only self-identifies schemas, but yeah, I guess something like that is what I mean. And yeah, it's clear all the validation still has to happen.

[07:34:40.0752] <annevk>
But what about a website? A website can have many service workers (infinite, in fact) which means it could single-handedly DOS? That'd be bad, no?

[07:36:53.0018] <jrconlin>
By DOS, what are you intending to DOS? Our push server? The UA? 

[07:38:55.0909] <annevk>
Not sure, maybe it doesn't really matter as it's all behind a permission anyway. But might be tricky for the end user to clean up if it goes bad and it's not anticipated.

[07:39:24.0564] <jrconlin>
Push currently handles a ludicrous number of messages a minute. We are very free with 503 messages if we see a source generating a lot of messages, and even more generous with the backoff messages if we see some service ignoring the 503s.

[07:39:41.0204] <jrconlin>
Ah, so you're thinking more on the UA side. 

[07:41:10.0618] <annevk>
Yeah, I guess so. Services already have to scale and deal with abuse so the additional angle of many registrations for a single origin prolly doesn't hurt them much.

[07:47:30.0560] <jrconlin>
Ok, so here are a few odd scenarios that could happen:
1) Rogue site generates stupid number of ChannelIDs (push subscription endpoints). 
Each UA has to record the subscription info locally, so at some point there may be resource restrictions that it hits. Added bonus, if they're a mobile device, there's also a "daily check-in" that can occur which would make their device potentially useless while that happens. Eventually, they'd just reinstall the browser, I guess? 
2) Rogue site generates small number of subscriptions that it then barrages the UA with (ala https://mozilla-services.github.io/WebPushDataTestPage/ ) Mind you, the user has to agree to at least setting things up, and each push message popup identifies the source. User then has to disable the notification permission using native controls. 

[07:49:46.0906] <jrconlin>
I mean, in a perfectly frictionless network filled with spherical cows, then I can see this as being a problem, but in reality, I think there will be a number of other factors at play. At most, the user uninstalls or resets their browser. Subscriptions are generally not synced by any of the browser publishers for A LOT of reasons, so the recovery will not cause the problem to happen, unless they do the same thing again.

[07:50:38.0771] <annevk>
Yeah makes sense. I'm gonna ask around if we do anything, but I agree that things are prolly ok for the majority of cases.

Thanks for the help!

[07:50:54.0057] <jrconlin>
I also don't mean to dismiss your concern. It's very valid. FWIW, there are a few things I've seen in my monitoring that are sketchy as hell and I'd love to know more of what the heck those connections are doing.

[07:51:43.0810] <jrconlin>
That said, PLEASE ask more questions like this. Poking at the protocol is really, really important and I absolutely welcome folk doing that.

[07:53:15.0890] <jrconlin>
(Honestly? I'd be fine if the UA were to limit the number of push subscriptions to something, even if it were some arbitrary number like 256.) Like I said, the bulk of the work is more on the UA than the backend server. 

[09:13:54.0543] <caitp>
is this a reasonable place to talk about possible incongruency with web reality in webidl and/or dom? I asked a long-ish question to ms2ger, but he's out sick. It's entirely possible that my mental math is just wrong here

[09:18:50.0122] <caitp>
Copying most of my question here, just in case it is an accurate read of the spec algorithms not reflecting the behaviour of most browsers

Can you explain the logic in https://github.com/web-platform-tests/wpt/blob/master/dom/collections/HTMLCollection-supported-property-names.html#L114-L115 which results in this test being the expected behaviour?

My read of this is:

it's a Legacy platform object / https://webidl.spec.whatwg.org/#js-legacy-platform-objects with no unforgeables, so that simplifies things a lot.

114: define a property via https://webidl.spec.whatwg.org/#legacy-platform-object-defineownproperty

P is a string and O supports named properties, we aren't a [Global] interface, P ("new-id2") is not unforgeable, thus we're in 2.1.
creating is true (2.1)
O does not implement [LegacyOverrideBuiltIns], so skip to 3.
O does not implement [Global], so Desc.[[Configurable]] changes from false to true -- so we define an own configurable property with a value of 5
121: "new-id2" becomes a supported property name of O

124: LegacyPlatformObjectGetOwnProperty(O, P, false) ---

2.1. the result of the named property visibility algorithm is false (it's a supported property name, but we also have an own property)
return OrdinaryGetOwnProperty(O, P) -- We get a descriptor with a [[Value]] of 5 and a [[Configurable]] of true, because of the stuff on 114
126: [[Delete]] of a legacy platform object (https://webidl.spec.whatwg.org/#legacy-platform-object-delete)

The named property visibility algorithm is false again for the reasons lsited above
O has an own property P
3.1 The property is configurable, becasue of the steps on line 114
3.2 deletion is successful, and the property is removed from O
return true --- This is NOT what the test is expecting to happen (see line 133)
129: delete again, this time named property visibility returns true, and we have no named property deleter and thus return false -- Being in strict mode this time, we throw an exception (so this assertion would be successful)

133: We try to repeat the steps on line 124 --- However, because deletion was successful in line 126, this assertion fails (at least in my read through this)

However, I think all the major browsers are passing the test. So does this mean the spec is wrong, or am I just misreading this in a dumb way?


2024-07-09
[20:36:34.0216] <sideshowbarker>
For text added with CSS `::after`/`::before`/`content` is there agreed-upon expected behavior for find-in-page? It’s not actually specified anywhere, right?

Safari and Chrome find-in-page don’t match on it, but Firefox does.

