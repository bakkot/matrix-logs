2022-05-01
[13:08:38.0690] <Domenic>
I may have gotten emails working from wiki.whatwg.org, if anyone wants to test the "forgot my password" link. (I cannot test it for another 24 hours...)

[13:38:38.0014] <Ian Hickson>
why on earth is getGamePads on Navigator

[15:17:12.0732] <Domenic>
There is some superstition about putting things on the global so people started using navigator as a dumping ground

[15:17:22.0927] <Domenic>
I try to discourage it when possible but hard to catch everything

[15:57:26.0462] <Ian Hickson>
so weird

[16:14:10.0294] <krave>
Hi, I am reading HTML living standard. I do not quite understand the syntax used here. https://html.spec.whatwg.org/multipage/images.html#source-size-list

[16:14:58.0392] <krave>
Where can I find explainations about these syntax?

[16:15:29.0167] <emilio>
krave: that's CSS syntax: https://drafts.csswg.org/css-syntax/

[16:18:40.0760] <krave>
For example, the brackets, sharp, comma, and question mark in `[ <source-size># , ]? <source-size-value>`

[16:20:39.0622] <krave>
> <@emilio:mozilla.org> krave: that's CSS syntax: https://drafts.csswg.org/css-syntax/

Thank you emilio . That looks like a very big document though. 

[16:21:03.0958] <krave>
Any hint about this specific sentance? `[ <source-size># , ]? <source-size-value>`

[16:42:54.0045] <emilio>
krave: I guess https://drafts.csswg.org/css-values-4/#value-defs is the document that actually defines those combinators

[16:43:00.0215] <emilio>
What about that specific bit?

[16:43:23.0729] <emilio>
`#` is a multiplier as per https://drafts.csswg.org/css-values-4/#component-multipliers

[16:43:51.0815] <emilio>
so that means, "optionally, `<source-size>`s separated by commas, then one mandatory `<source-size-value>`"

[16:43:53.0798] <emilio>
 * so that means, "optionally, `<source-size>`s separated by commas, then one mandatory `<source-size-value>`"


2022-05-02
[08:38:07.0226] <zcorpan>
> <@tabatkins:matrix.org> zcorpan: Yeah, looks like the server wedged itself yesterday morning. Kicking it now.

Seems like it's still failing - LINK ERROR: No 'dfn' refs found for 'expose legacy touch event apis'.

[10:08:47.0699] <c_a-g_o>
WTF is a popsicle?

[10:14:44.0164] <annevk>
zcorpan: could it be because it's not a generated document? ReSpec tends to have issues

[10:16:00.0652] <annevk>
zcorpan: hardlinking from DOM might be the way to go, same as we do for DOMHighResTimeStamp and friends

[10:16:31.0890] <zcorpan>
annevk: ah yeah maybe that's the issue. ok

[10:16:48.0906] <annevk>
I wish folks would stop using ReSpec, but then we still have Wattsi so...

[10:17:22.0413] <c_a-g_o>
wattsi ReSpec

[10:17:59.0836] <zcorpan>
Maybe bikeshed could use Webref instead of scraping?

[10:18:32.0558] <annevk>
There's an issue for that somewhere

[11:10:52.0188] <TabAtkins>
Yes, last time I worked on it I got 99% of the way thru but WebIDL was suddenly causing weird biblio entries that I *coudl not* figure out, so I stalled. Working on tangential code-quality stuff in the area instead right now, but it's in my OKRs for the quarter.

[11:12:03.0730] <TabAtkins>
emilio, krave: Yes, the CSS Values & Units spec is the defining doc for CSS's value grammar. (The Syntax spec just adds some additional bits for defining *whole rules*, which aren't covered by the V&U stuff since it's not needed.)

[11:13:51.0418] <TabAtkins>
zcorpan: Tho moving to WebRef is the correct idea, I'll note that Bikeshed subtly encouraging ReSpec users to *actually publish a formatted document instead of inflicting the rest of us with the flash-of-plain-text spec* is a Good Thing imo

[11:45:52.0723] <zcorpan>
TabAtkins: agreed

[12:29:31.0140] <zcorpan>
TabAtkins: filing issues on such specs might be more effective though, in this case the editors of the spec aren't the ones to feel the pain

[15:07:10.0303] <TabAtkins>
annevk or Domenic: the maplike/setlike @@iterator and forEach have text detailing where the methods live, depending on whether the interface is [Global] or not. <https://webidl.spec.whatwg.org/#es-iterator> The rest of the methods don't; they're defined to just live on the interface prototype object. <https://webidl.spec.whatwg.org/#es-maplike> It looks like this *might* get handled generically instead by the "interface prototype object" text <https://webidl.spec.whatwg.org/#dfn-interface-prototype-object> but the details of the algo confuse me so I'm not sure. Do y'all know if the distinctions in spec text are intentional, or just editorial slippage that should be aligned?

[15:08:44.0467] <짜요>
hello! 
I had a question while developing.
I'm using title attribute related html5, but the number of characters seen by each browser is different. Chrome and edge are the same and safari shows more, I wonder Do you know how much the title attribute can show by browser?

[15:10:58.0898] <Domenic>
> <@tabatkins:matrix.org> annevk or Domenic: the maplike/setlike @@iterator and forEach have text detailing where the methods live, depending on whether the interface is [Global] or not. <https://webidl.spec.whatwg.org/#es-iterator> The rest of the methods don't; they're defined to just live on the interface prototype object. <https://webidl.spec.whatwg.org/#es-maplike> It looks like this *might* get handled generically instead by the "interface prototype object" text <https://webidl.spec.whatwg.org/#dfn-interface-prototype-object> but the details of the algo confuse me so I'm not sure. Do y'all know if the distinctions in spec text are intentional, or just editorial slippage that should be aligned?

I think this is semi-intentional in that it reflects the incomplete transition to imperativizing everything. If you are imperativizing the installation of those properties then it shouldn't be necessary. But right now I think they are not added imperatively anywhere, it is just "they must exist" and that text is the only normative text saying that they must exist and when they must exist.

[15:11:33.0696] <Domenic>
Some previous PRs linked from https://github.com/whatwg/webidl/issues/467

[15:11:36.0101] <TabAtkins>
Okay, I'm not touching the imperativeness yet, so I'll just leave it as-is.


2022-05-03
[00:08:04.0184] <annevk>
짜요: all I know is that there's no standardized limit

[02:39:44.0189] <Yoav Weiss>
annevk: Can we move https://github.com/w3c/preload/issues/115 to HTML, now that the HTML integration is complete? I'm trying to archive the old rep

[02:39:45.0876] <Yoav Weiss>
o

[02:40:37.0411] <Yoav Weiss>
Actually, same question for the various "enhancement" issues 

[02:47:18.0412] <annevk>
Yoav Weiss: that seems reasonable, we should maybe have a label for them then

[02:59:52.0129] <Yoav Weiss>
SG!

[07:53:12.0263] <Domenic>
Yeah I've been using "topic: link" for preload etc. but maybe something dedicated is helpful. "topic: resource hints"?

[08:46:39.0438] <annevk>
Is "topic: resource hints (preload)" too wordy? Would also be nice to add "topic: timing" to HTML

[09:17:16.0464] <Domenic>
Well resource hints also includes preconnect

[09:24:50.0543] <annevk>
Yeah I realize and maybe prefetch? It's just that preload comes up a lot and it would be nice to be able to search for one of them. Could make it (inc. preload) if wordy isn't a problem

[09:25:11.0762] <annevk>
 * Yeah I realize and maybe prefetch? It's just that preload comes up a lot and it would be nice to be able to search for one of them. Could make it (inc. preload) if wordy isn't a problem

[10:55:20.0262] <zcorpan>
annevk: how about `topic: resource hints/preload`

[11:41:49.0314] <Noam Rosenthal>
Domenic: hi, I want to try to find a good direction for the link header/element refactor

[11:43:30.0134] <Noam Rosenthal>
The way I was going was that all links are converted to the same "options" struct, either from a header or from an element, and then there is no need for each rel to do special header processing

[11:45:13.0096] <Noam Rosenthal>
... but I can also go with having different "process header" and "process element" algorithms that end up funneling to functions like "preload" or "preconnect"

[12:26:54.0007] <Domenic>
Noam Rosenthal: so my main concern is the clarity of reading a given element's section. I am hoping: (a) it can be clear at a glance whether it supports elements/headers/early hints; (b) we move away from a defaults-and-overrides structure; (c) there is minimal duplication/maximal shared infrastructure.

[12:30:52.0914] <Noam Rosenthal>
Domenic: ok, for (c) - I think it would be good if the common "Process link headers" extracted something like the options struct from the headers, before sending it to the different `rel` sections

[12:31:21.0673] <Domenic>
+1

[12:31:34.0873] <Domenic>
Options structs are good

[12:31:44.0739] <Domenic>
Just commented on the thread too

[12:32:48.0207] <Domenic>
(b) is mostly about fixing a preexisting problem but I think if we're doing (a) and (c) at the same time it's worth tackling (b)

[12:33:51.0803] <Noam Rosenthal>
ok, but without (b) and with options struct, how would you spell out the "process early hints" -> "handle headers for this type of link" transition?

[12:34:29.0110] <Noam Rosenthal>
at some points we went through a list of headers, and for each item we did something if it's defined for its `rel`

[12:34:37.0567] <Noam Rosenthal>
 * at some points we went through a list of headers, and for each item we did something if it's defined for its `rel`

[12:35:34.0545] <Noam Rosenthal>
I guess by having "to handle headers for this type of link, do nothing" for each unsupported `rel` type?

[12:37:14.0311] <Domenic>
Yes exactly

[12:37:38.0355] <Domenic>
I think that's nice and super-obvious

[12:38:00.0310] <Domenic>
But we could also do something like "supported processing types"

[12:38:24.0650] <Noam Rosenthal>
sure I can go with that. Sometimes my natural tendency is more minimalistic (defaults) but it's not always the most obvious for readers

[12:39:01.0151] <Noam Rosenthal>
I think the "do nothing" duplication would be better than a list of supported types. It allows us to add new types without maintaining it in separate places

[12:39:14.0025] <Domenic>
Noam Rosenthal: probably-unrelated question, do I correctly recall you had some PR which removed "process response end of body" from navigation params?

[12:39:40.0874] <Domenic>
 * Noam Rosenthal: probably-unrelated question, do I correctly recall you had some PR which removed "process response end of body" from navigation params?

[12:42:15.0324] <Noam Rosenthal>
Domenic: it was a PR that had many iterations (https://github.com/whatwg/html/pull/7531) and I believe you're referring to one of the iterations of the PR where we removed it and brought it back

[12:42:34.0565] <Domenic>
Hmm OK

[12:43:05.0884] <Domenic>
(I'm trying to make sure https://github.com/whatwg/html/pull/6315 stays up to date)

[12:43:39.0621] <Noam Rosenthal>
That navigation param was the cleanest way we found to report the iframe resource timing to the parent. There's no pending open PR that removes it (at least not one that I'm working on)

[12:44:06.0973] <Domenic>
Yeah I couldn't find one, so just wanted to double-check. No problem with keeping it.

[12:46:06.0728] <Noam Rosenthal>
Domenic: re the editorial I think I have enough to go on for tomorrow. If you think more comments add them to the issue and I'll see them in the morning?

[12:49:08.0021] <Domenic>
Sounds good, will leave any if I do! I think we have a good path.


2022-05-04
[23:39:44.0206] <Yoav Weiss>
annevk: Added a label to all remaining issues in https://github.com/w3c/preload/issues but it seems like I can't transfer this issue to a repo in another org

[23:40:13.0762] <Yoav Weiss>
Not sure if this is a permissions thing, and if e.g. I give you permissions on the preload repo, you'd be able to get them transferred

[23:40:43.0068] <annevk>
Yoav Weiss: oh sorry, I'm pretty sure you cannot transfer issues across organizations

[23:40:59.0245] <Yoav Weiss>
hmm.

[23:41:24.0430] <Yoav Weiss>
In that case, it may be easiest for me to open new ones, pointing at these (by then archived) ones

[23:41:56.0191] <annevk>
Yeah, the alternative would be transferring the repository, but that doesn't seem great

[23:42:18.0125] <Yoav Weiss>
yeah, agree

[23:44:15.0153] <annevk>
zcorpan: hgroup styles removed is a nice cleanup

[23:51:52.0569] <Yoav Weiss>
annevk: Can you add a "preload" label on https://github.com/whatwg/html/issues/7887 https://github.com/whatwg/html/issues/7888 and https://github.com/whatwg/html/issues/7889?

[00:08:59.0781] <annevk>
I've added the label I suggested yesterday to a bunch of issues, including those (not entirely sure it's the best name as "resource hints" is not a term we use in HTML; so if anyone has something better let me know)

[03:50:43.0446] <Noam Rosenthal>
I think "resource hints" is the best name, as it describes the adjacent spec (https://w3c.github.io/resource-hints/) which some of those still link to. The term Is used in HTML when linking to that spec

[05:02:08.0494] <annevk>
Ah okay, I wasn't sure, though it seems that over time that specification might get fully integrated

[05:13:51.0102] <Noam Rosenthal>
> <@annevk:mozilla.org> Ah okay, I wasn't sure, though it seems that over time that specification might get fully integrated

I hope we will integrate the whole thing, in which case it's good that the label would be consistent with the then-historic title 

[06:25:44.0149] <sideshowbarker>
PSA for anybody interested in committer/issue/PR metrics for repos you manage or contribute to…
A few things I want to have stats/numbers for but which aren’t provided by any existing tools:

- At what rate is the project gaining new contributors?
- At what rate is the list of open issues increasing or decreasing?
- At what rate is the list of open PRs increasing or decreasing?
- How many commits are getting merged each month?
- How many contributors are actually active each month?

…so, I wrote a tool that generates data and graphs to answer those questions.
https://github.com/git-pulse/tools

[06:25:59.0956] <sideshowbarker>
 * PSA for anybody interested in committer/issue/PR metrics for repos you manage or contribute to…
A few of the things I’ve wanted to have some stats/numbers for but which aren’t provided by any existing tools:

- At what rate is the project gaining new contributors?
- At what rate is the list of open issues increasing or decreasing?
- At what rate is the list of open PRs increasing or decreasing?
- How many commits are getting merged each month?
- How many contributors are actually active each month?
…so, I wrote a tool that generates data and graphs to answer those questions.
https://github.com/git-pulse/tools

[06:26:22.0813] <sideshowbarker>
 * PSA for anybody interested in committer/issue/PR metrics for repos you manage or contribute to…
A few things I want to have stats/numbers for but which aren’t provided by any existing tools:

- At what rate is the project gaining new contributors?
- At what rate is the list of open issues increasing or decreasing?
- At what rate is the list of open PRs increasing or decreasing?
- How many commits are getting merged each month?
- How many contributors are actually active each month?
…so, I wrote a tool that generates data and graphs to answer those questions.
https://github.com/git-pulse/tools

[06:26:30.0399] <sideshowbarker>
 * PSA for anybody interested in committer/issue/PR metrics for repos you manage or contribute to…
A few things I want to have stats/numbers for but which aren’t provided by any existing tools:

- At what rate is the project gaining new contributors?
- At what rate is the list of open issues increasing or decreasing?
- At what rate is the list of open PRs increasing or decreasing?
- How many commits are getting merged each month?
- How many contributors are actually active each month?

…so, I wrote a tool that generates data and graphs to answer those questions.
https://github.com/git-pulse/tools

[06:31:16.0766] <Arthur Hemery>
annevk: Regarding https://github.com/whatwg/html/issues/6364, we've got feedback from Google, Facebook and Zoom who all seem to agree that the COOP: Popups proposal would work for them. Do you have any other group you'd like to verify that solution works for? Given the complexity of the topic and the length of the discussion, I don't really know how to get smaller entities feedback.

[07:23:20.0112] <annevk>
Arthur Hemery: I guess auth0 might be good to ask? Perhaps a way to get some attention from the login community would be a short email to https://lists.w3.org/Archives/Public/public-fed-id/?

[07:34:10.0894] <Arthur Hemery>
Thanks for the pointers, doing that now :)

[13:42:01.0874] <peterv>
Domenic: DefaultValue is also used for dictionary members, which can't be undefined 🙄

[13:45:16.0226] <Domenic>
peterv: sure, not everything that's disallowed must be grammatically disallowed.

[13:45:40.0008] <peterv>
yeah, I know, just that we'll need some more prose

[13:45:58.0045] <peterv>
I thought this would be trivial grammar change


2022-05-05
[03:39:05.0707] <hsivonen>
I'm looking at WPT's update_html5lib_tests.py and I don't see a way to point it to a local (and modified) instance of https://github.com/html5lib/html5lib-tests . What am I missing?

[04:20:23.0859] <Ms2ger 💉💉>
I'm not sure you are missing something

[04:30:03.0792] <hsivonen>
Yeah, confirmed elsewhere that what I wanted to do isn't a supported action.

[07:21:12.0327] <zcorpan>
hsivonen: it needs a rewrite I think, see https://github.com/web-platform-tests/wpt/issues/27868

[07:25:47.0982] <Domenic>
<search> element is blocked on that issue :(

[07:29:23.0861] <Domenic>
annevk: ping on https://github.com/whatwg/html/pull/7876 , hoping to get that in so I can work on import maps spec

[10:29:00.0361] <annevk>
Okay, I was hoping to get to it, but given the size it'll have to be tomorrow; hopefully done by the time you get up


2022-05-06
[01:17:41.0815] <smaug>
Hmm, cssom-view spec broke? https://drafts.csswg.org/cssom-view/

[01:18:02.0019] <smaug>
That gives only the directory listing 

[01:18:56.0650] <smaug>
TabAtkins: ^

[01:19:41.0688] <Andreu Botella>
drafts.csswg.org breaks sometimes

[01:19:46.0360] <Andreu Botella>
I have a mirror at https://andreubotella.com/csswg-auto-build/cssom-view

[10:51:00.0277] <raphaellouis>
Hi all!

[10:51:45.0675] <raphaellouis>
I have an interesting idea to make the web safer, I would like everyone's opinion!

[10:53:15.0505] <raphaellouis>
Here ```<input type="password" encrypted="rsa" required>```

[10:53:51.0712] <raphaellouis>
What if we had a new attribute in the input field for passwords?

[10:54:15.0625] <raphaellouis>
An attribute to encrypt passwords?

[10:54:35.0939] <Andreu Botella>
Wouldn't you then have to have the RSA key in plain text in the page's code?

[11:04:35.0442] <raphaellouis>
My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.

[11:04:55.0819] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.

[11:05:46.0809] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it.

[11:06:14.0645] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it... 

[11:09:50.0961] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it...  Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa

[11:10:38.0663] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it...  Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544

[11:11:09.0723] <raphaellouis>
 * My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it...  Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode

[11:11:20.0212] <raphaellouis>
 * 1. My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... So good question.... I hope I helped answer this question or clarified something about it...  Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode

[11:12:08.0473] <raphaellouis>
 * Hi!
1. My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session... 
2. So good question.... I hope I helped answer this question or clarified something about it...  
3. Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode


[11:12:30.0631] <raphaellouis>
 * @Hi!
1. My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened.  This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session...
2. So good question.... I hope I helped answer this question or clarified something about it...
3. Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode

[11:12:40.0056] <raphaellouis>
1. My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened. This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session...
2. So good question.... I hope I helped answer this question or clarified something about it...
3. Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode

[11:13:12.0029] <raphaellouis>
> <@abotella:igalia.com> Wouldn't you then have to have the RSA key in plain text in the page's code?

 * 1. My idea is... that... so everything stays in localStorage - data stored here continues to exist even after being closed and reopened. This would not be saved in plaintext! ... Localstorage allows for example to manage some things in session...
2. So good question.... I hope I helped answer this question or clarified something about it...
3. Another option that I think of to solve this problem... if localstorage is something insecure, we can generate a qrcode... that way the user can have access to their encrypted passwords on each site without necessarily having saved something in the browser or without having necessarily use a program that generates things like rsa - reference: https://github.com/w3c/csswg-drafts/issues/6544 ... There is a discussion of creating an html element for qrcode

[11:15:44.0194] <raphaellouis>
```html
<object type="bfo/barcode">
 <input type="password" encrypted="rsa" keypublic="public" keyprivate="private"/>
</object>
```

[11:15:52.0565] <raphaellouis>
 * ```html
<object type="bfo/barcode">
 <param name="value" value="high" encrypted="rsa" keypublic="public" keyprivate="private">
</object>
```

[11:16:14.0804] <raphaellouis>
 * ```html
<object type="bfo/barcode">
 <input type="password" encrypted="rsa" keypublic="public" keyprivate="private">
</object>
```

[11:16:22.0284] <raphaellouis>
 * ```html
<object type="bfo/barcode">
 <input type="password" encrypted="rsa" keypublic="public" keyprivate="private"/>
</object>
```

[11:21:00.0515] <raphaellouis>
4. I deleted the message... because I didn't know it had a reply option. So, sorry 

[11:21:37.0976] <raphaellouis>
 * 4. I deleted the message... because I didn't know it had a reply option. Sorry then

[11:21:47.0167] <raphaellouis>
 * 4. I deleted the message... because I didn't know it had a reply option. So, sorry 

[11:22:48.0595] <raphaellouis>
5. I read about it, here is my bibliographic references: https://www.tomsguide.com/news/dont-let-web-browsers-save-passwords, https://www.techrepublic.com/article/why-you-should-never-allow-your-web-browser-to-save-your-passwords/ , https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API , https://www.techadvisor.com/feature/security/safe-store-passwords-in-browser-3813506/ , https://discourse.wicg.io/t/proposal-webcrypto-argon2-curve-448-25519-secp256k1-chacha20-poly1305/5132 

[11:39:58.0681] <raphaellouis>
**I want you to criticize my argument with positive and negative points**
***Argument:***
1. Many systems and internet sites are still old stuff, some of them don't use encryption... and even if they did, the user usually creates easy passwords... 
2. My objective in proposing the encrypted attribute would be to tell browsers that they manage the passwords of the users... 
3. I argue about this... because for you to be on the internet you usually have to have a browser... in part the passwords should be managed by the website providers, by the browsers and by the users... but the reality is different ...
4. Usually users put easy passwords and generally some sites do not have encryption or security policy ... 
5. I think that this change in information security ... could be changed ... if browsers or the internet itself had a new attribute to html to make this possible
6. Every change is something to think about... I just had this idea and I want to hear all sides
7. This new attribute wouldn't be for plaintext... it should somehow be managed by localstorage if possible or maybe create a qrcode with that information

[11:43:28.0980] <raphaellouis>
Note: Please don't think of this sentence as arrogance, my wish is to know if the argument is valid or not

[11:53:35.0742] <raphaellouis>
 * Note: Please don't think of this sentence as arrogance, my wish is to know if the argument is valid or not. more reference: https://www.w3.org/TR/WebCryptoAPI/

[11:54:24.0678] <Domenic>
I think https://whatwg.org/faq#adding-new-features , especially step 1, is probably valuable here

[12:20:00.0274] <raphaellouis>
> <@domenicdenicola:matrix.org> I think https://whatwg.org/faq#adding-new-features , especially step 1, is probably valuable here

thank for feedback

[12:20:13.0467] <raphaellouis>
> <@domenicdenicola:matrix.org> I think https://whatwg.org/faq#adding-new-features , especially step 1, is probably valuable here

 * thank for feedback

[12:20:59.0701] <raphaellouis>
 * thank for feedback... looking at it now, i think this idea is bad. Thank you so much for everyone's attention


2022-05-07
[17:21:19.0845] <krosylight>
On https://html.spec.whatwg.org/multipage/dom.html#global-attributes:

>While these attributes apply to all elements, they are not useful on all elements. For example, only media elements will ever receive a volumechange event fired by the user agent.

Why does it need to exist there then? That paragraph does not explain why, maybe just a legacy reason?

[11:00:38.0477] <legostarwars_saga>
hello

[15:23:42.0300] <Domenic>
> <@krosylight:mozilla.org> On https://html.spec.whatwg.org/multipage/dom.html#global-attributes:
> 
> >While these attributes apply to all elements, they are not useful on all elements. For example, only media elements will ever receive a volumechange event fired by the user agent.
> 
> Why does it need to exist there then? That paragraph does not explain why, maybe just a legacy reason?

Bubbling, for many of them. Probably consistency, for the rest.


2022-05-08
[17:24:14.0455] <•ʟᴜᴄɪғᴇʀ•>
Hello


2022-05-09
[00:54:45.0992] <annevk>
Happy birthday Jake Archibald! 🧁

[08:09:58.0588] <Doug Conmy>
annevk:    I am trying to determine if I have any next steps on this PR.   If not, I'd like to see if I can get this moved forward to unblock implementers that are waiting on the approval/merge.
https://github.com/whatwg/html/pull/7678


2022-05-10
[02:45:51.0427] <Jake Archibald>
annevk: thank you!

[13:44:47.0425] <wanderview>
are document navigation, workers, and worklets the only way environments or environment settings can be created?

[13:45:03.0568] <wanderview>
 * are document navigation, starting workers, and starting worklets the only way environments or environment settings can be created?


2022-05-11
[00:42:53.0372] <annevk>
Doug Conmy: can you ping me again next week maybe? I have some other things I need to tackle first

[00:43:32.0014] <annevk>
wanderview: yeah

[01:02:01.0778] <Ms2ger 💉💉>
Wiki's dead?

[04:07:39.0570] <Luca Casonato>
Can infra tuples be destructured? Ie:

Set (body, type) to the result of extracting init.

Where "extracting init" returns a tuple of (body, type)

[04:08:47.0046] <annevk>
Luca Casonato: I think I saw someone do that without objection, but technically it's not defined in Infra

[04:08:55.0776] <annevk>
 * Luca Casonato: I think I saw someone do that without objection, but technically it's not defined in Infra

[04:10:23.0678] <Luca Casonato>
ok, i'll just do it the normal way then. i should go open a PR for this to infra

[04:10:25.0154] <Luca Casonato>
thanks!

[04:28:02.0996] <annevk>
Luca Casonato: that'd be great

[04:30:16.0139] <Luca Casonato>
annevk: On that note, I split out the "body with type" changes from fetch#1392 into https://github.com/whatwg/fetch/pull/1439. It's purely editorial, so should be relatively easy to land :)

[07:52:40.0549] <wanderview>
is `encodeURI()` something folks are recommended to use?  it seems to escape things differently than the URL spec

[07:58:38.0365] <annevk>
wanderview: depending on what you need it's okay; I don't think we should build things on top of it though

[07:59:40.0507] <wanderview>
in this case someone filed a urlpattern-polyfill bug because they expected `[]` in pathname to be encoded like `encodeURI()` does, but we follow URL spec and do not encode that

[08:16:23.0480] <annevk>
Oh interesting, I've never seen a request like that for the URL standard

[08:16:46.0472] <annevk>
Speaking of which, when is URLPattern getting standardized?

[08:21:11.0437] <Luca Casonato>
> <@annevk:mozilla.org> Speaking of which, when is URLPattern getting standardized?

it is standardized: wicg.github.io/urlpattern

[08:21:44.0968] <annevk>
Luca Casonato: WICG is not a standards body

[08:23:00.0916] <Luca Casonato>
Ah sorry - I misinterpreted that question then. Was the intention that it ends up in the URL spec? Or a as a separate WHATWG spec?

[08:23:04.0318] <annevk>
At least in Mozilla when we talk about "standardized" it's roughly what's written down at https://wiki.mozilla.org/ExposureGuidelines#Ensure_that_the_feature_is_standardized

[08:23:46.0255] <annevk>
I think either could work, but wanderview at some point expressed an interest in a separate spec, could be the same Workstream though

[08:24:52.0498] <Luca Casonato>
If there is interested from Mozilla on implementation btw, it might make sense to hop on a call. We have a fully compliant, pluggable implementation in Rust already that could be used as a baseline for Gecko.

[08:25:08.0397] <Luca Casonato>
https://crates.io/crates/urlpattern

[08:26:53.0098] <annevk>
It hasn't directly come up, but it was something in the back of my mind that we eventually want to get to; nice to know it might be mostly free though 🙂

[10:39:10.0926] <wanderview>
I still want to move it to the whatwg workstream, but its not a high priority at the moment... if another browser was intending to implement soon it would be a higher priority to move it

[10:45:36.0322] <Doug Conmy>
> <@annevk:mozilla.org> Doug Conmy: can you ping me again next week maybe? I have some other things I need to tackle first

Sure.    I'll reach out next week.   I think I have all you need in the PR to move forward.   Thanks.

[13:37:34.0248] <wanderview>
> <@wanderview:matrix.org> are document navigation, starting workers, and starting worklets the only way environments or environment settings can be created?

Seems like "create a new browsing context" also creates an environment settings object prior to navigation


2022-05-12
[01:24:44.0618] <jfernandez>
annevk: I've created a separated PR for the safelist update proposal, so that we can discuss each new protocol separately, as it was somehow suggested in the Mozilla standard position issue. I hope this new approach is seeing as positive and doesn't add more confusion to an already complex issue. If that's the case, I'm happy to continue the discussion in the PR that tries to add all the dweb schemes altogether. 
https://github.com/whatwg/html/pull/7911

[15:44:17.0621] <Andrew Williams>
If a worker is created from a data URL by https://example.com, will that worker be considered a secure context?

[15:49:45.0005] <Andrew Williams>
Per [1] it seems the data URL would be potentially trustworthy, although the worker would have an opaque origin [2] which wouldn't be trustworthy per [3]

[1] https://w3c.github.io/webappsec-secure-contexts/#is-url-trustworthy
[2] https://html.spec.whatwg.org/multipage/workers.html#set-up-a-worker-environment-settings-object
[3] https://w3c.github.io/webappsec-secure-contexts/#is-origin-trustworthy

[15:57:02.0612] <Andrew Williams>
but maybe all that matters is that the document creating the worker is a secure context? \[4\]

\[4\] https://html.spec.whatwg.org/multipage/webappapis.html#secure-contexts

[15:57:25.0082] <Andrew Williams>
 * but maybe all that matters is that the document creating the worker is a secure context? \[4\]

\[4\] https://html.spec.whatwg.org/multipage/webappapis.html#secure-contexts


2022-05-13
[19:51:48.0268] <sefeng>
Noam Rosenthal: I am fixing https://github.com/web-platform-tests/wpt/blob/cff0ff1898/resource-timing/SO-XO-SO-redirect-chain-tao.https.html#L56-L61 for Firefox. I wonder which redirect should cause the TAO check to fail? 

[19:53:06.0306] <sefeng>
is it because the last redirect from `cross-origin` to `same-origin`? 

[19:53:52.0072] <sefeng>
I am asking because in Firefox, the TAO check is done by always againsting the origin that started the load 

[19:55:49.0423] <sefeng>
which is probably wrong I guess. I am still not familiar with the FETCH spec, is it supposed to be done by against the current origin?  

[19:58:19.0883] <EveryOS>
Does emitting the token happen regardless of the previous if-otherwise?

[19:58:41.0036] <EveryOS>
 * Does emitting the token happen regardless of the previous if-otherwise?

[21:20:25.0347] <Noam Rosenthal>
sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.

[21:20:47.0068] <Noam Rosenthal>
 * sefeng: It's because the request's origin becomes redirect-tainted (https://fetch.spec.whatwg.org/#concept-request-tainted-origin), and the TAO check accesses that origin which is serialized to `null` (https://fetch.spec.whatwg.org/#ref-for-serializing-a-request-origin%E2%91%A0). This part is a bit hard to follow in the fetch spec IMO.

[23:56:35.0043] <annevk>
Andrew Williams: that's a very good question, I think it's closely related to https://github.com/whatwg/html/issues/5254

[23:57:12.0939] <annevk>
Andrew Williams: my inclination would be yes, as the entire chain is HTTPS

[00:01:31.0629] <annevk>
It's somewhat unfortunate the entire world went with application/json rather than text/json.

[00:19:43.0555] <Ms2ger 💉💉>
> <@everyos:matrix.org> Does emitting the token happen regardless of the previous if-otherwise?

I'd read that as "yes". Maybe two paragraphs would be clearer

[06:00:29.0584] <EveryOS>
Ok. Thank you!

[08:36:16.0556] <sefeng>
Noam Rosenthal: thanks. So say have a `A->B->A` redirect chains, when should the tainted origin returns true?

[08:36:29.0322] <sefeng>
the spec says `If url’s origin is not same origin with lastURL’s origin and request’s origin is not same origin with lastURL’s origin, then return true`

[08:38:09.0153] <sefeng>
I'd assume we want it to return true when doing the`last redirect`, but doesn't `last redirect` which is A have the same origin as the `lastURL's origin`?

[08:38:43.0735] <sefeng>
at this point, `url` is `B`, `lastURL` is `A`, and `request's origin` is 'A'

[08:38:47.0408] <sefeng>
what do I miss?

[08:38:55.0388] <sefeng>
 * what do I miss?

[08:46:55.0028] <sefeng>
oh perhaps the `URL list` contains the `last redirect` already before doing the TAO check of the `last redirect`, so I can continue the loop to make `lastURI=B`, `url=A` and `request=A`? 

[08:56:10.0041] <Noam Rosenthal>
sefeng: I don't remember exactly, but I think you can't make TAO succeed for redirect-tainted origins, even A->B->A, just like CORS can't. annevk / Yoav Weiss perhaps have more context about this

[09:01:36.0278] <annevk>
sefeng: in A -> B -> A, when this check happens request's URL list will contain [A, B, A] because otherwise it can't request the final A

[09:02:16.0119] <annevk>
The underlying security problem is https://en.wikipedia.org/wiki/Confused_deputy_problem

[09:03:15.0366] <annevk>
(I also have to re-read this algorithm each time to see if it works, if someone would be willing to add some examples underneath that'd be much appreciated!)

[11:06:23.0303] <Noam Rosenthal>
annevk: ok, so IIUC, for CORS it protects from CSRF amongst other things, where e.g. a POST to another site would redirect you to a different authenticated POST in the original site. And we added that limitation to TAO to align with CORS. The attack vector on TAO is a bit less clearer to me in this case but the alignment makes some sense.

[11:06:27.0969] <Noam Rosenthal>
sefeng: ^^

[12:29:15.0943] <Eric Portis (he/him)>
A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with `Access-Control-Allow-Origin: *`, why would I ever *not* want to grant embed access via `Cross-Origin-Resource-Policy: cross-origin`?

[12:31:03.0091] <Eric Portis (he/him)>
Which is to say, why do I have to set both? Why doesn't ACAO:\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?

[12:31:43.0033] <Eric Portis (he/him)>
 * Which is to say, why do I have to set both? Why doesn't ACAO:\* imply CORP:cross-origin? I get that it doesn't right now because ACAO is for CORS, and CORP is for cross-origin isolation, and those are different... but like, read permission is ≥ embed permission, I think?

[12:48:02.0910] <Eric Portis (he/him)>
If you squint, both headers say, "this resource doesn't contain any private data"

[13:13:42.0979] <Andrew Williams>
ah interesting, thanks for the link and feedback annevk 


2022-05-14
[18:30:51.0299] <Domenic>
> <@etportis:matrix.org> A question someone has surely asked before... if I, a subresource host, have already granted cross-origin read access with `Access-Control-Allow-Origin: *`, why would I ever *not* want to grant embed access via `Cross-Origin-Resource-Policy: cross-origin`?

IIRC it has to do with how CORS also impacts the requests. (Which you can most easily see when preflights are required.) If you do a "no-cors" request (e.g. <img>, not <img crossorigin>) and get back ACAO: *, what does that mean? Saying that it roughly means CORP: cross-origin is a bit strange/maybe broken in some more specific way I can't think of right now.

[23:49:24.0796] <Noam Rosenthal>
Eric Portis (he/him):  ACAO/CORS allows you to make a decision of what data to send based on the origin of the request. e.g. you can send a different response if your data is requested by `origin-a.com` and `origin-b.com`, because CORS requests contain the `Origin` header. CORP is more like a fallback to still allow embedding the content even without knowing the origin. 

[23:51:13.0057] <Noam Rosenthal>
Having `Access-Control-Allow-Origin: *` doesn't mean that you send all/the same data to every origin, while `Cross-Origin-Resource-Policy: *` kind of does, but for the latter the use of the resource is limited (showing the image, using it in timing-attack-prone situations but not read the data directly)

[23:54:02.0261] <Noam Rosenthal>
Having both without extra checks means "If I know the origin of the request then allow reading this data, and also allow embedding it even if I don't know the origin". It's not *too* redundant


2022-05-15
[00:18:29.0779] <annevk>
Eric Portis (he/him): one difference is that the former only works for non-credentialed requests and the latter works for all requests

[00:19:16.0600] <annevk>
Eric Portis (he/him): and the former only works for requests that include an `Origin` header

[00:22:15.0129] <annevk>
These differences will shrink over time as cross-site credentials disappear, but they'll remain relevant to the origin-vs-site distinction as well as the `Origin` header aspect

[11:46:57.0393] <crtvlde5>
I am not an IT person.  But somehow some site changed my physical from one city to another, thus I et emails intended for the wrong city.  I don't know how to change it.


2022-05-16
[21:56:50.0326] <sideshowbarker>
Anybody got a site that sends `Accept-Ranges: none`? Need one for an example in MDN https://github.com/mdn/content/issues/16073

[01:12:01.0646] <Jake Archibald>
Anyone know where the parsing of "video", "audio" and "picture" are handled in the HTML spec?

[01:15:33.0292] <Andreu Botella>
If you search for "video", "audio" and "picture" in multipage/parsing.html you get nothing, so I'm assuming under "any other start tag" in body

[01:15:35.0436] <Andreu Botella>
https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inbody:reconstruct-the-active-formatting-elements-16

[01:18:59.0466] <Jake Archibald>
Interesting. I assumed that every valid element would be explicitly mentioned, but I guess not.

[01:32:27.0835] <annevk>
Most "inline" elements don't need special rules; others often need to imply `</p>` and such which is why they get mentioned by name

[02:19:31.0885] <Noam Rosenthal>
> <@sideshowbarker:mozilla.org> Anybody got a site that sends `Accept-Ranges: none`? Need one for an example in MDN https://github.com/mdn/content/issues/16073

https://www.paypal.com/xoplatform/logger/api/logger

(From BigQuery: SELECT url FROM `httparchive.summary_requests.2022_04_01_mobile` WHERE resp_accept_ranges="none" LIMIT 1000, can probably play with it yourself for better results)

[02:20:17.0848] <sideshowbarker>
> <@annevk:mozilla.org> Most "inline" elements don't need special rules; others often need to imply `</p>` and such which is why they get mentioned by name

🎉 Thanks much

[02:41:48.0521] <Jake Archibald>
Ahh, that makes sense, thank you!

[03:07:52.0086] <annevk>
I'm guessing Mike wanted to reply to Noam? 🙂

[03:42:33.0500] <sideshowbarker>
oops yeah, sorry

[05:55:12.0480] <annevk>
zcorpan: https://ijmacd.github.io/rfc3339-iso8601/ (via https://twitter.com/bradfitz/status/1524448788290568192)

[07:26:33.0105] <zcorpan>
annevk: wow

[07:34:59.0872] <annevk>
zcorpan: you know what you signed up for right? PR it for Ecma-262 😛

[07:37:11.0453] <zcorpan>
Sounds like we should fix the ISO spec first

[07:38:16.0082] <zcorpan>
and when I say we, I don't mean I :P

[07:40:39.0932] <Ms2ger 💉💉>
At least this one you can leave to Temporal :)

[07:53:54.0115] <annevk>
I mean maybe, I believe Temporal doesn't take all valid HTML inputs, which kinda sucks

[07:55:01.0584] <Ms2ger 💉💉>
Do you know if there's an issue about that?

[08:45:21.0945] <Domenic>
annevk: found https://github.com/whatwg/html/issues/6163, heh

[08:54:39.0710] <annevk>
Domenic: ah, I'll add another comment to Capability Delegation to mention that

[08:56:26.0918] <annevk>
Context: https://github.com/WICG/capability-delegation/issues/9#issuecomment-1127845526

[16:48:54.0401] <TrexxæByte>
Hi... so... I've been searching for like... DNS records like you'd find from a DNS server or  ipconfig /displaydns  -  is it an absurd thing to be trying to find? Does it have to be obtained thru REST API or something?

[16:49:18.0174] <TrexxæByte>
been looking for a couple hours now... it's about to drive me crazy

[16:49:51.0368] <TrexxæByte>
Do I have to go thru each top level domain registrar and get their records one by one?

[16:50:03.0549] <TrexxæByte>
if they even make them available for free...


2022-05-17
[00:59:56.0399] <sideshowbarker>
Andreu Botella: https://andreubotella.com/csswg-auto-build/ doesn’t seem to mirror https://drafts.csswg.org/scroll-animations/ …

[01:01:20.0429] <sideshowbarker>
as far as I can tell, that’s the only CSS spec that it’s not mirroring

[01:27:27.0954] <Andreu Botella>
> <@sideshowbarker:mozilla.org> Andreu Botella: https://andreubotella.com/csswg-auto-build/ doesn’t seem to mirror https://drafts.csswg.org/scroll-animations/ …

it's on https://andreubotella.com/csswg-auto-build/scroll-animations-1/ and on the index as "scroll-linked animations"

[01:27:39.0307] <Andreu Botella>
but weird that the shortname https://andreubotella.com/csswg-auto-build/scroll-animations doesn't link to it

[01:27:45.0344] <sideshowbarker>
aha

[01:29:28.0227] <Andreu Botella>
That's of course because the shortname in the bikeshed metadata is given as `scroll-animations-1`, of course: https://github.com/w3c/csswg-drafts/blob/main/scroll-animations-1/Overview.bs#L10

[01:29:56.0507] <Andreu Botella>
I've had to special case some shortnames so they show up linked in the index, I guess I missed this one because it has a single level

[01:33:45.0972] <sideshowbarker>
it is easy to fix/workaround on your side?

[01:33:57.0508] <Andreu Botella>
I just did

[01:34:05.0170] <Andreu Botella>
give it a few minutes so it builds

[01:34:06.0781] <sideshowbarker>
ah cool — thanks

[01:34:09.0628] <sideshowbarker>
hai

[01:56:40.0367] <annevk>
Mattias Buelens: hey, do we have some kind of "peek" primitive yet for streams?

[01:58:19.0616] <annevk>
Mattias Buelens: I'm guessing I might be stuck with some kind of transform stream?

[02:00:23.0173] <Mattias Buelens>
> <@annevk:mozilla.org> Mattias Buelens: hey, do we have some kind of "peek" primitive yet for streams?

No, we don't have that yet.

[02:01:38.0064] <sideshowbarker>
Andreu Botella: so in my https://github.com/w3c/mdn-spec-links/ build automation, I’m trying to replace requests to https://drafts.csswg.org/ URLs with requests to https://andreubotella.com/csswg-auto-build/ URLs — but what I’m finding is that a lot of the documents at the URLs I’m requesting actually just have client-side redirects — e.g., `<meta http-equiv="refresh" content="0; URL=../css-variables-1/" />` — which the documents at the equivalent https://drafts.csswg.org/ URLs don’t seem to have. Instead the documents at the https://drafts.csswg.org/ URLs seem to be copies…

[02:01:58.0548] <annevk>
Thanks; for ORB I need to look at the first 1024 bytes of a response, so I guess I essentially have to replace the underlying stream with a transform stream where I collect the first 1024 bytes, scan them, and then forward them

[02:02:35.0220] <Andreu Botella>
sideshowbarker: Github Pages doesn't let you do server-side redirects, so I'm making all of them client-side

[02:03:00.0002] <Andreu Botella>
if you link to the actual level of a spec, it shouldn't redirect

[02:03:17.0935] <sideshowbarker>
yeah I can’t link to the leveled versions

[02:03:54.0211] <sideshowbarker>
for MDN and BCD we have a policy of intentionally not linking to the leveled versions

[02:05:07.0280] <Mattias Buelens>
> <@annevk:mozilla.org> Thanks; for ORB I need to look at the first 1024 bytes of a response, so I guess I essentially have to replace the underlying stream with a transform stream where I collect the first 1024 bytes, scan them, and then forward them

That's correct. I did something similar for streaming AES-CBC decryption in https://github.com/MattiasBuelens/crypto-aes-stream/blob/08f28cebbd02f9feb9d0e8d6d2ae9135cbe27ce2/src/aes-cbc-stream.ts#L39-L47

[02:09:07.0039] <annevk>
I will also have another place where I need to look at the full response before forwarding it. Might look at whether that makes it worth abstracting somehow.

[02:10:09.0246] <sideshowbarker>
with jsdom, anybody know if I can get it to follow a `<meta http-equiv="refresh" content…` and load the contents of the document that’s redirecting to?

[02:34:31.0344] <sideshowbarker>
Andreu Botella: OK I reckon I’ll try grabbing out the redirect URLs with jsdom, and re-requesting with those URLs. I think it should work.
Because it’ll be making additional requests, I guess it’ll end up being a bit slower than using drafts.csswg.org — but today after the Nth time of drafts.csswg.org unreliability completely breaking my build, it’s worth the added effort and time to have something else that’ll actually work reliably rather than totally break every week

[04:06:08.0657] <sideshowbarker>
Andreu Botella: OK, with https://github.com/w3c/mdn-spec-links/commit/18de692 my build tooling is now switched over to making requests to your mirror rather than to drafts.csswg.org — and it seems to be working as expected. Dunno if GitHub has request/bandwidth limits for Pages content, but anyway that part of the build normally only runs once a day, so I don’t think it will generate a huge amount of extra traffic

[04:06:23.0335] <Andreu Botella>
sounds good

[04:06:44.0546] <sideshowbarker>
thanks much for providing that mirror

[07:54:56.0318] <annevk>
Noam Rosenthal: could you perhaps triage the issues here that are filed by me: https://github.com/WICG/background-fetch/issues? Now that HTML depends on some of this stuff, it would be good to know if we should move some of these definitions to Fetch

[07:55:37.0116] <annevk>
Noam Rosenthal: my interest atm is mainly with "validate a partial response" which ORB needs, but all of it seems important

[07:56:42.0569] <Noam Rosenthal>
annevk: I don't know much about the background-fetch spec but would be happy to give it a go

[07:59:27.0871] <annevk>
Noam Rosenthal: this is mainly about the range thingies that media elements now depend in part on

[08:00:29.0273] <Noam Rosenthal>
annevk: ah yes, I originally used some of the definition from background-fetch with small but important modifications

[08:13:14.0494] <annevk>
It seems HTML only has "extract content-range values", so maybe I'm on my own

[08:14:05.0214] <annevk>
Well maybe not, "validate a partial response" depends on that

[08:18:20.0173] <Noam Rosenthal>
yea the validation bit is semi-duplicated between HTML and background-fetch with minor differences and both depend on "extract content-range values" IIRC

