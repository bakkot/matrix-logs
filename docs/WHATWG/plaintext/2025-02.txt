2025-02-01
[19:38:33.0987] <Clifton>
Ok

[13:40:40.0907] <jmdyck>
Domenic or annevk: Sometimes, the HTML spec uses <i> where I would have expected <var> (E.g. 'same-origin fallback flag') Is this described somewhere?

[14:13:50.0521] <jmdyck>
There's some overlap with 'a reference from one algorithm to a parameter of another algorithm', but differences either way.


2025-02-02
[17:27:45.0834] <Domenic>
We do use <i> for references from one algorithm to a parameter of another algorithm. A modern example of that is all the references to optional named parameters of https://html.spec.whatwg.org/#navigate .

[17:28:12.0341] <Domenic>
Same-origin fallback flag looks like an old version of that before we had our modern conventions (which include a <dfn><var> at the declaration site and an <a><i> at the call site)

[17:30:20.0555] <Domenic>
Separately, HTML has lots of random <i> usage from a former editor that I don't really understand, e.g. missing value default/invalid value default, mutable, etc.

[22:51:33.0603] <zbaviles>
`` // 1. Find the button element (assuming it has the ID "myButton") ``
`` const myButton = document.getElementById("myButton"); ``

`` // 2. Add an event listener for the "mouseover" event ``
`` myButton.addEventListener("mouseover", function() { ``
``   // 3. Change the background color using CSSOM ``
``   myButton.style.backgroundColor = "yellow";  ``
`` }); ``
``  ``

[23:07:19.0123] <zbaviles>
`` // 1. Find the button element (assuming it has the ID "myButton") ``
`` const myButton = document.getElementById("myButton"); ``

`` // 2. Get the user agent string ``
`` const userAgent = navigator.userAgent; ``

`` // 3. Check if the user agent string indicates a desktop browser ``
`` if (/Windows|Macintosh|Linux|X11/.test(userAgent)) { ``
``     myButton.addEventListener("mouseover", function() { ``
``         // 4. Change the background color using CSSOM if the user is on a desktop browser ``
``         myButton.style.backgroundColor = "yellow";  ``
``     }); ``
`` } ``

[15:27:05.0332] <Luke Warlow>
Is there a particular reason why you can't call .showPopover() an open modal dialog, but on an open non-modal dialog it works? Seems like it should probably throw in both cases?


2025-02-03
[07:43:19.0299] <Luke Warlow>
Are the children changed steps and post-connection steps defined for SVG's `<script>` element anywhere? https://github.com/whatwg/html/pull/10188 - only seems to cover HTML's `<script>`


2025-02-04
[16:45:44.0535] <Domenic>
I doubt it. There is some general understanding that most of what applies for HTML's script applies to SVG's script, but the SVG script specification is not really maintained.

[18:52:04.0971] <sideshowbarker>
Yeah about SVG, these days even if you took time to write up an SVG PR, there’s nobody who’s even going to review it. Unless you can also somehow supply your own reviewer — e.g., recruit another someone else whose familiar with an SVG implementation in an engine (from having written it or wrote patches for it), and get them to review your PR

[18:52:20.0463] <sideshowbarker>
* Yeah about SVG, these days even if you took time to write up an SVG PR, there’s nobody who’s even going to review it. Unless you can also somehow supply your own reviewer — e.g., recruit another someone else who’s familiar with an SVG implementation in an engine (from having written it or wrote patches for it), and get them to review your PR

[18:52:45.0458] <sideshowbarker>
* Yeah about SVG, these days even if you took time to write up an SVG PR, there’s nobody who’s even going to review it. Unless you can also somehow supply your own reviewer — e.g., recruit someone else who’s familiar with an SVG implementation in an engine (from having written it or wrote patches for it), and get them to review your PR

[09:58:04.0377] <ntim>
foolip (or anyone else who maintains the fullscreen spec): Hi! Can you review https://github.com/whatwg/fullscreen/pull/243 ?

[11:56:36.0259] <oxiidaw>
im super exited about https://drafts.csswg.org/css-borders-4/#corner-shape-rendering

[11:56:49.0087] <oxiidaw>
is there a way I can track this down and get updates?

[12:04:38.0373] <Noam Rosenthal>
Hi @oxiidaw:matrix.org, Glad you're excited about it!
Follow the `css-borders-4` label in CSSWG (https://github.com/w3c/csswg-drafts/labels/css-borders-4), or the following for chromium: https://chromestatus.com/feature/5357329815699456 /  https://issues.chromium.org/issues/393145930


[12:05:06.0149] <Noam Rosenthal>
* Hi @oxiidaw:matrix.org, Glad you're excited about it!
Follow the `css-borders-4` label in CSSWG (https://github.com/w3c/csswg-drafts/labels/css-borders-4) for the spec, or the following for chromium: https://chromestatus.com/feature/5357329815699456 /  https://issues.chromium.org/issues/393145930). Not sure about Gecko/WebKit issue numbers yet

[12:05:40.0075] <Noam Rosenthal>
(Note that it's a feature that's developed in the CSS working group and not here in WHATWG)

[15:11:57.0098] <gingeh>
Hi all, I'm currently implementing popovers closing each other in Ladybird and I'm a bit confused about the `while` loops in the "close entire popover list" and "hide popover stack until" algorithms. They boil down to repeatedly hiding the last popover in popoverList, but this seems like it would be an infinite loop unless the spec expects the popoverList to be dynamically updated?

[15:12:09.0967] <gingeh>
* Hi all, I'm currently implementing popovers closing each other in Ladybird and I'm a bit confused about the while loops in the "close entire popover list" and "hide popover stack until" algorithms. They boil down to repeatedly hiding the last popover in popoverList, but this seems like it would be an infinite loop unless the spec expects the popoverList to be dynamically updated?

[15:12:27.0260] <gingeh>
* Hi all, I'm currently implementing popovers closing each other in Ladybird and I'm a bit confused about the while loops in the "close entire popover list" and "hide popover stack until" algorithms. They boil down to repeatedly hiding the last popover in popoverList, but this seems like it would be an infinite loop unless the spec expects the popoverList to be dynamically filtered?

[15:15:14.0637] <Eric Portis (he/him)>
I'm guessing the x.com/htmlstandard account stopped working when Twitter changed API access? Even if it weren't for [gestures vaguely at everything] I don't think a link to a source for "updates" which hasn't seen an update for a year and a half belongs in the header: https://github.com/whatwg/html/pull/10993

[15:23:28.0378] <Meghan Denny>
is there a mastodon or bsky account to replace it with?


2025-02-05
[17:13:23.0658] <Domenic>
Twitter discussion in https://github.com/whatwg/participate.whatwg.org/issues/351 and https://github.com/whatwg/meta/issues/318 .

[21:45:18.0558] <gingeh>
I've now encountered failures which are resolved by dynamically updating the given popoverList. If this is really required then the spec steps should be changed to reflect that.

[06:40:57.0100] <Eric Portis (he/him)>
Tyler Morgan: Let me know if you want any assistance with https://github.com/whatwg/meta/issues/318#issuecomment-2629775359


2025-02-06
[15:03:47.0591] <Domenic>
I hope you have filed a bug on the issue tracker instead of just chatting about this issue?

[15:10:45.0714] <sideshowbarker>
Domenic: https://github.com/whatwg/html/issues/10996 but don’t know if it’s yet been updated with the additional info from that last comment

[15:11:58.0345] <gingeh>
That's for a separate problem, I haven't opened an issue for this one yet because I was hoping for some confirmation that I wasn't just misinterpreting the instructions

[15:11:58.0480] <Domenic>
Great, will try to get people to comment during the WHATNOT meeting that's ongoing right now

[15:12:05.0871] <Domenic>
Oh, OK

[15:13:01.0442] <gingeh>
I'll open an issue for that now

[15:25:48.0271] <gingeh>
Here's all the open bugs affecting my implementation in Ladybird:
https://github.com/whatwg/html/issues/11007
https://github.com/whatwg/html/issues/10996
https://github.com/whatwg/html/issues/10988
https://github.com/whatwg/html/pull/9457


2025-02-07
[16:01:30.0103] <Domenic>
Thanks. We got some attention to those in the meeting and it looks like they're at the top of mfreed's plate for tomorrow.

[16:04:45.0287] <gingeh>
Thank you so much!

[17:21:01.0791] <smaug>
Domenic: btw, related to SharedWorkers, I thought Chrome on  Android doesn't even support them. But perhaps this unload thingie would be a reason to support?

[17:33:50.0525] <Domenic>
Yep, it would be, indeed.

[21:02:48.0413] <gingeh>
* Here's all the open bugs affecting my implementation in Ladybird:
https://github.com/whatwg/html/issues/11007
https://github.com/whatwg/html/issues/10996
https://github.com/whatwg/html/issues/10988
https://github.com/whatwg/html/pull/9457
edit to add: https://github.com/whatwg/html/issues/11008

[06:03:12.0413] <smaug>
oh my, I guess it is too late to fix https://html.spec.whatwg.org/#inner-navigate-event-firing-algorithm step 32. That is nuts 

[06:03:48.0340] <smaug>
and I can possibly blame my self for not catching that in some review

[06:06:19.0065] <smaug>
* and I can possibly blame myself for not catching that in some review

[07:13:06.0863] <smaug>
Or it might not be too late. Only one implementation

[07:13:10.0391] <smaug>
...shipping

[10:49:45.0822] <FrameMuse>
Hello, just joined, I wanted to ask something about dom rendering

[11:06:23.0816] <Valery>
This is purely an idea, but looking at Game Development I was looking for something like Object Instancing to be a part of DOM as well. I can't give exact examples where this optimization is decisive, but I certainly remember having issues with performance because of many **the same** elements (with **the same** huge trees) were presented in the document.

So I want to ask what do you think about having a kind of mirroring a node, so it can be displayed multiple times while processing it only once. Or maybe this is overoptimization, not relevant? Sorry if I don't know something, thanks in advance.

[13:35:23.0752] <smaug>
I'd expect the implementation of such to slow down DOM/layout operations in the common cases. Gecko used to support (until ~2009) multiple presentations at the same time  (normal + printing/print preview), and when that was removed, lots of the algorithms could be simplified quite a bit.

[14:12:45.0705] <emilio>
Depends at which layer you implement this tho... If it's just painting it might not be too bad (think of `background-image: element()` or so, IIRC we still support the prefixed version). But yeah, the set of use cases for exactly the same rendering might not be all that big...

[14:22:44.0194] <smaug>
Ah, right for painting only that might be doable. https://developer.mozilla.org/en-US/docs/Web/CSS/element 

[14:28:25.0855] <smaug>
* Ah, right, for painting only that might be doable. https://developer.mozilla.org/en-US/docs/Web/CSS/element 


2025-02-08
[17:29:23.0782] <sideshowbarker>
There’s a workable alternative to doing that “prepare a script” step there?

[19:26:05.0151] <gingeh>
Maybe a weird question but does anyone here know of an algorithm in a whatwg spec which takes a collection (preferably a list) by reference? I'm just hoping for an example because I'm not sure how it's usually described in spec-speak

[20:44:07.0422] <Domenic>
It's always assumed to be by reference. In general algorithms are JS-ish semantics, with the biggest exception being that strings are often treated as mutable.

[20:45:20.0209] <Domenic>
https://github.com/whatwg/infra/issues/91 for discussion of mutable vs. immutable strings

[23:03:29.0802] <Valery>
I wonder if something like `background-image: element()` is possible to be a document node type, where I can select a node to be mirrored, so that I can add it to the document, visually, it would behave in the same way, but it doesn't need to be processed once again. All the computations can be reused up to the GPU level. I feel like it should not be so complex since this would a standalone node, no?

[23:03:44.0916] <Valery>
* I wonder if something like `background-image: element()` is possible to be a document node type, where I can select a node to be mirrored, so that I can add it to the document, visually, it would behave in the same way, but it doesn't need to be processed once again. All the computations can be reused up to the GPU level. I feel like it should not be so complex since this would be a standalone node, no?

[01:45:43.0460] <Gregory Terzian>
I have a question about this test: "Aborting a WritableStream before it starts should cause the writer\'s unsettled ready promise to reject" in [`/streams/writable-streams/aborting.any.js`](https://github.com/web-platform-tests/wpt/blob/cecda71212f41f96b03bd93ca800bfc2b9aaa974/streams/writable-streams/aborting.any.js#L30)

The test:
1. acquires a writer on a newly created stream, 
2. then writes on it, 
3. then assigns writer.ready to a variable
4. and aborts the writer. 

After 3, it seems to expect the promise to equal the readyPromise on the writer, and to finally reject with the error passed to abort. 



[01:53:02.0818] <Gregory Terzian>
But, it appears to me that the readyPromise would have already been resolved in [`set-up-writable-stream-default-writer`](https://streams.spec.whatwg.org/#set-up-writable-stream-default-writer), at step 5.2("Otherwise, set writer.[[readyPromise]] to a promise resolved with undefined."). 

Then the promise assigned to the variable at 3 is in fact already resolved, and then the abort call at 4 will end-up calling into [`ensure-ready-promise-rejected`](https://streams.spec.whatwg.org/#writable-stream-default-writer-ensure-ready-promise-rejected), which replaces writer.readyPromise with a new rejected promise(because the promise is not pending anymore). 

On way this would be false would be if the write(or the setup) would reach "If backpressure is true, set writer.[[readyPromise]] to a new promise." of [`update-backpressure`](https://streams.spec.whatwg.org/#writable-stream-update-backpressure), but this would require backpressure to be true, and the test does not seem to provide any such backpressure other than the default one where the desired size is 1, and then that single write should not trigger backpressure. 

The test passes in all implementation, so I'm wondering what I'm missing, or if perhaps the spec was updated to fail the test, and this wasn't reflected in any implementation. 

[02:01:22.0433] <Gregory Terzian>
Ok sorry I think I just figured it out, the write adds an item to the queue, so that makes backpressure true because it hits zero. 

[02:02:06.0760] <Gregory Terzian>
so the write replaces the promise that was settled in the writer setup, and then the abort rejects it(because it is pending). 


2025-02-09
[03:09:33.0029] <Mohammad>
Hello everyone! Is there anything related to this gist (https://gist.github.com/mhf-ir/b469784bb12d71fb4d305a7f17f02a4b) that already exists or has been discussed?

[03:23:00.0232] <Mohammad>
i'm not sure, here is the right place, but please who can propose something like this would be nice.
there are lots of stupid naming convention and lib and stuff are going on this https://github.com/jkwakman/Open-Cookie-Database/blob/master/open-cookie-database.csv and it's would be nice if it's be part of web standard


2025-02-10
[04:32:18.0844] <annevk>
Mattias Buelens Domenic: could you spend a minute reading https://github.com/whatwg/html/issues/10855#issuecomment-2647710959 and subsequent comments and see if you agree with the general idea? It sounds reasonable, but I want to make sure we tackle it in a similar way we did with streams.

[04:36:13.0712] <Domenic>
Tomorrow's a holiday but will try to get to it in ~36 hours

[04:37:56.0083] <annevk>
Thanks, enjoy the holiday!

[07:20:51.0416] <zcorpan>
ntim: ping https://github.com/whatwg/html/pull/10959 :)

[07:49:28.0691] <annevk>
zcorpan: if it's a quirk, wouldn't it be better to not apply it to menu/dir?

[07:50:59.0227] <zcorpan>
annevk: it's the undoing of the quirk that should apply also to menu and dir

[07:55:00.0057] <zcorpan>
i.e. if we want `<menu><li>` to have not-quirky rendering, `menu` needs to be included in the undoing style rule

[07:58:04.0553] <annevk>
I see, yeah I guess that makes sense


2025-02-13
[19:18:44.0574] <sideshowbarker>
From https://lkml.org/lkml/2025/2/8/494:
> The other thing which is super rare is people and companies who care about tech debt cleanup, code maintainability, and code quality.  Instead of complaining about maintainers for who are unreasonably caring about these things, when they are desparately under-resourced to do as good of a job as they industry demands, how about meeting us half-way and *helping* us with these sort of long-term code health issues?  Maybe if you engage us as part of the community, we'll be a lot more open to adding changes that might increase the code maintenance burden?


[19:19:25.0433] <sideshowbarker>
…could replace the word “code” there with ”spec” 

[20:36:54.0014] <Meghan Denny>
great read, thanks for sharing 

[08:50:20.0777] <smaug>
dizhang168: just ping me if I don't get to review those PRs relatively soon.

[08:52:00.0471] <smaug>
I know the pr has been open for some time already. sefeng should take a look too

[11:07:09.0782] <akaster>
Is there a way to see interop numbers for other products from the wpt.fyi/interop-2025 dashboard? Namely servo/ladybird 

[11:34:51.0753] <Luke Warlow>
It doesn't help for that dashboard I don't think but you can view all the tests in each interop area on the main page.

label:interop-2025-anchor-positioning or label:interop-2025-backdrop-filter...

You can just filter by all the interop labels. Include servo and ladybird in your list and then track the test results that way?

[11:42:13.0094] <akaster>
Ah yep that seems to work. Also going to the link for each category from the dashboard and adding products 


2025-02-14
[11:03:29.0810] <TabAtkins>
Hm, I'm digging into the exact multipage-splitting abilities HTML has, and I notice that the nav (on line 65 of the source) is set to w-nosplit, but definitely shows up in the multipage. Is that a fault in wattsi, or is the multipage nav getting generated by something else?

[11:42:13.0713] <devgianlu>
Hello, while implementing support for the `autocomplete` attribute on form associated elementes I stumbled upon a possible issue: the WPT tests assume that the field value will be transformed to be lowercase, but I could not see where it is explictly stated. All I can see is that the comparisons should be case insensitive. It seems to work fine if at step 15 I also perform lowercasing.

Spec: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill-processing-model
WPT test: https://github.com/web-platform-tests/wpt/blob/master/html/semantics/forms/the-form-element/form-autocomplete.html
Implementation PR: https://github.com/LadybirdBrowser/ladybird/pull/3517 

[13:08:11.0697] <jmdyck>
TabAtkins: Similarly, the ToC and Full ToC are marked w-nosplit, but appear in the multipage edition.

[13:08:42.0534] <TabAtkins>
I'm wondering if w-nosplit just doesn't actually do anything in Wattsi currently

[13:13:28.0841] <jmdyck>
The "This specification is like no other etc" is marked w-nosplit, and *isn't* in the multipage, which at first appears to be a case of w-nosplit working, except it's also marked w-dev, which excludes multipage anyway.

[13:15:01.0815] <jmdyck>
The code doesn't seem to have any useful occurrences of "nosplit".

[13:16:30.0933] <jmdyck>
hm, maybe it does.


2025-02-15
[23:21:09.0742] <annevk>
TabAtkins: w-nosplit means that it's preserved for every page (it's not segmented).

[23:31:28.0865] <TabAtkins>
That's not what the docs say or what happens. The color-blocks nav still only shows up in the first page

[04:10:56.0410] <jmdyck>
https://github.com/whatwg/wattsi/blob/main/Syntax.md#specification-variants says that `w-nosplit` means "Omitted from multipage"


2025-02-16
[14:35:11.0031] <hacknorris>
mmm. is it possible to split image with just html? like i want to take just a part of tileset without using whole canvas and other things…
sort of `<img src="tiles.png" position="64,64">` i want…


2025-02-17
[00:27:34.0231] <annevk>
TabAtkins: oh right you are. I guess I forgot how all of that works.

