2023-09-01
[21:49:01.0737] <alandp>
how to fix Insecure CORS Configuration?

[00:45:17.0288] <annevk>
Domenic: mind if I reach out to Mike and Artur for that module worker issue? Or perhaps you already have?

[00:45:29.0144] <Domenic>
annevk: go for it

[04:09:58.0042] <annevk>
Luca Casonato: https://github.com/whatwg/html/pull/9668 does Deno need an issue for this?

[04:10:25.0657] <annevk>
smaug: I've tried to make the commit title clearer, will use that when landing

[04:11:19.0483] <smaug>
thanks. Initially when I just saw the bugmail I thought it was about some script bundling and workers 🙂 


2023-09-02
[20:53:09.0810] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: https://github.com/whatwg/html/pull/9668 does Deno need an issue for this?

Nope

[22:56:36.0948] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

Hey annevkI’ll do this one: 

[22:57:34.0695] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

 * Hey annevkI’ll do issue 7374. It’s in the HTML repo

[23:52:12.0529] <annevk>
Christine Belzie: sounds good, but https://github.com/whatwg/html/issues/7374 appears closed?

[04:59:44.0681] <vrafaeli>
HTML tables have a defined schema, table -> tbody -> tr -> td
Is there a way for the row to behave like an <a> element, in a way that the row's link can be copied, or opened in a new tab with ctrl+click.

[05:00:44.0920] <vrafaeli>
Or is this just a bad UX, and a table row should have a column where the link is in?

[05:01:07.0419] <vrafaeli>
 * -----------
Or would this just be a bad UX, and a table row should just have a column where the link is in?

[07:11:04.0720] <annevk>
vrafaeli: with scripting you can accomplish some if not all of that, but there's no way with just markup. Might be an interesting feature request for CSS to let a row act as the link of one of its columns


2023-09-04
[13:27:50.0156] <jamescobban>
I have been designing web sites since 1993.  I started out with NCSA Mosaic and websites implemented on NCSA httpd.  I am tired of being forced to use JavaScript as the only way to implement dynamic functionality on web pages.  IMHO Brendan Eich only invented it as a temporary measure.  His exploitation of the Java trademark suggests to me that he expected the compiled Java language to eventually replace it, once the appropriate libraries were constructed.  Back in the 90s I wrote Java Applets and even taught a course on them.  But Java has been removed from all browsers "Because of the removal of older NPAPI plugins on which Java is built on."  But that was only one implementation of the Java VM.

[13:47:57.0589] <jamescobban>
> <@vrafaeli:matrix.org> HTML tables have a defined schema, table -> tbody -> tr -> td
> Is there a way for the row to behave like an <a> element, in a way that the row's link can be copied, or opened in a new tab with ctrl+click.

You can write a script to go to another URL based upon information in the row: trow.addEventListener('click', eventhandler);  Remember to set role="link" and to use styles to notify users that it is a link.  See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role for caveats.

[16:06:06.0742] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

Hey annevk! :) I want to do this one: https://github.com/whatwg/html/issues/3296
 


2023-09-05
[02:21:31.0789] <annevk>
Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

[04:52:49.0186] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Alexander Kalenik: Did you have a chance to look at https://github.com/whatwg/html/issues/9148#issuecomment-1610989949 ? I would love to get your implementer experience-informed opinion, before I go making changes.

uh, sorry it takes so long for me to respond. I have returned to working on navigables implementation for LibWeb and seems like I found another bug https://github.com/whatwg/html/issues/9686.

[04:55:05.0062] <Alexander Kalenik>
I will let you know once I've tried to actually implement your suggestion to solve destroy/abort bug.

[06:44:50.0215] <vhilla>
annevk: there hasn't been any progress on https://github.com/whatwg/html/issues/9469, can you please take a look?

[07:21:09.0511] <annevk>
vhilla: thanks for the ping, I'll relay it internally

[07:22:21.0193] <annevk>
vhilla: I guess it's not just up to WebKit though, if Chromium and Gecko want to have this specific divide there's nothing really stopping you from working on specifying it, unless Yusuke comes up with a strong reason not to, but I kinda doubt it

[09:05:31.0497] <annevk>
So since Ian Hickson worked on HTML, is it correct we added only these new elements:

1. Custom elements
2. slot
3. search

?

[09:36:17.0475] <bkardell>
zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

[09:37:21.0396] <bkardell>
but element wise, yes.. tho I guess we completed dialog and had important additions to details and some other good stuff too

[09:37:29.0215] <bkardell>
 * but element wise, yes.. I think so... tho I guess we completed dialog and had important additions to details and some other good stuff too

[09:37:47.0351] <bkardell>
 * annevk:  --- zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

[10:58:41.0503] <bkardell>
/me > <@annevk:matrix.org> So since Ian Hickson worked on HTML, is it correct we added only these new elements:
> 
> 1. Custom elements
> 2. slot
> 3. search
> 
> ?

is curious why you asked?

[12:33:22.0021] <Christine Belzie>
> <@annevk:matrix.org> Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

Great! Can you assign the issue to me? It'll let other contributors know that it's been solved.

[12:33:42.0802] <Christine Belzie>
> <@annevk:matrix.org> Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

 * Great annevk! Can you assign the issue to me? It'll let other contributors know that it's been solved.

[15:06:24.0178] <sideshowbarker>
> <@bkardell:igalia.com> annevk:  --- zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

There’s https://platform.html5.org/history/ — but it seems I stopped adding to that at roughly around the same time Hixie moved on


2023-09-06
[18:14:20.0795] <Domenic>
> <@chrissycodes:matrix.org> Great annevk! Can you assign the issue to me? It'll let other contributors know that it's been solved.

We don't assign issues. Other contributors will know it's been solved when the issue is closed :)

[22:23:50.0036] <annevk>
bkardell: came up when talking about `search` and I realized I had no idea

[03:59:24.0319] <Jake Archibald>
Domenic: https://bugs.chromium.org/p/chromium/issues/detail?id=1475907#c4 - is this right? The navigation event deliberately doesn't fire when traversing to a bfcache'd page?

[04:00:59.0283] <Jake Archibald>
 * Domenic: https://bugs.chromium.org/p/chromium/issues/detail?id=1475907#c4 - is this right? The `navigate` event deliberately doesn't fire when traversing to a bfcache'd page?

[04:01:51.0358] <Domenic>
No, seems like a bug. There's nothing in the spec that looks at the destination's bfcache status.

[04:02:36.0193] <Jake Archibald>
That was my reading/hunch too.

[04:02:49.0795] <Domenic>
It should work, same-origin

[15:43:59.0194] <jugglinmike>
Hi folks. [WebDriver BiDi would like to hook in to "run the animation frame callbacks."](https://w3c.github.io/webdriver-bidi/#issue-b2b83ca0) I'm thinking HTML could define a general-purpose extension point for that situation (maybe with a queue of tasks into which a spec like BiDi could push), it it could explicitly invoke an algorithm provided by BiDi. Is there a preference between these two? Or a more appropriate approach that I haven't considered?

[15:52:41.0380] <jugglinmike>
[Looks like "Update the rendering" has already been extended with steps to inform other specs of this event](https://html.spec.whatwg.org/multipage/webappapis.html#update-the-rendering)


2023-09-07
[19:10:19.0942] <Domenic>
jugglinmike: we prefer explicit callbacks these days, like we've done for all other WebDriver BiDi hooks.

[19:10:26.0457] <Domenic>
In particular, this helps get the ordering clear.

[19:10:55.0245] <Domenic>
Not sure what hooks you're referring to that already exist, although it's a long section so maybe I just missed them

[19:11:34.0583] <Domenic>
Oh you mean the many specific ones, not a generic one.

[02:06:10.0160] <sbastiandev>
Hello All,

[02:09:02.0795] <sbastiandev>
I am almost done implementing the latest URL Spec in Java and was wondering if the various URL's setters should throw Exceptions when something goes wrong ? I read the specification and didn't find anything on this ? Can anyone shed some light ? Thx a lot

[03:24:58.0636] <Noam Rosenthal>
sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent

[03:28:47.0946] <Noam Rosenthal>
as in, the web platform doesn't throw on validation errors (based on the note, for backwards compatibility), but conformance checkers probably should. Makes sense to me that this is a library/platform decision rather than spec decision. probably some people here with more context though

[05:36:54.0153] <sbastiandev>
> <@noamr:matrix.org> sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent

Thanks for your reply. The main concern though is that you've got cases where the behavior of setting parts versus parsing a url is not consistent in term of reporting failures. For instance parsing a url with a wrong port would fail. However calling url.port = "bad-port-number" would not. But as you said it's probably a library/platform decision. Thank you

[05:46:41.0435] <Noam Rosenthal>
sbastiandev:  if you see the setter algorithm, those do something and then call the parsing algorithm and some parsing leads to validation errors, which leads back to this note

[05:46:54.0317] <Noam Rosenthal>
(setter algorithms)

[05:48:00.0107] <Noam Rosenthal>
e.g. "The protocol setter steps are to *basic URL parse* the given value, followed by U+003A (:), with this’s URL as url and scheme start state as state override."

[07:57:38.0707] <jugglinmike>
Thanks Domenic !

[08:03:36.0835] <Dominic Farolino>
Can you define a custom conversion from arbitrary ES types to your specific IDL type? Like, if I have an interface, and I want methods that accept objects of that interface type to also accept a handful of other types that my native interface type can be constructed from, how can I do this? Do those methods have to accept `any`, and then I just write their dfn as delegating to an internal conversion algorithm that I provide? Or can I just accept `MyInterface` types, and specify some some conversion algorithm that gets invoked whenever anything is passed in as a `MyInterface`?

[08:04:22.0617] <Dominic Farolino>
I think I'm interested in simulating something like the WebIDL Promise type, which accepts all thenables but also native Promises, IIUC

[08:05:18.0292] <Dominic Farolino>
(Context is for https://github.com/domfarolino/observable, where it'd be nice for methods that accept an Observable to also accept Async Iterables, that Observables can be constructed around to wrap)

[08:07:30.0329] <annevk>
Dominic Farolino: define ObservableInit as a union of Observable and whatever syntax we have for async iterables (maybe needs to be added?) and make people use that?

[08:07:56.0931] <annevk>
Dominic Farolino: Promise is an ES type and therefore gets its own to-and-from ES conversion, but you don't have that if you define an interface

[08:11:16.0577] <Dominic Farolino>
Yeah it's the latter part of "and whatever syntax we have for async iterables" that I'm stuck on. We of course have syntax to make an interface async iterable, but I'm not sure that's usable from within a union... perhaps it does need to be added though idk

[08:11:43.0499] <Dominic Farolino>
(Same goes for normal iterable I think)

[08:16:03.0313] <Dominic Farolino>
(Or no, I guess maybe sequence<T> can be used for iterable)

[08:41:35.0033] <annevk>
Dominic Farolino: yeah, you want `async sequence<T>` or some such

[16:08:06.0080] <Domenic>
Dominic Farolino: I think you need `object` or `any` with manual steps. In particular, overloading on promises is basically impossible in Web IDL by design. And this would be the second method on the platform to consume async iterators, so you'd need to add something to Web IDL to support that, which I'm not sure is worth it.

[16:08:29.0176] <Domenic>
Oh, but, if this is just for `Observable` + async iterable overloads, then maybe that's worth doing

[16:08:36.0563] <Domenic>
I thought this was just for `Observable.from` which is very special.


2023-09-08
[22:32:38.0489] <annevk>
Or maybe it would be cleaner if we made `Observable` a special type in Web IDL, so you wouldn't be able to return async iterables, but had to instead return an Observable or Stream, which I think is what we would (always?) want.

[01:59:57.0862] <Domenic>
Yeah I came around to that conclusion actually

[02:00:05.0861] <Domenic>
Well or something like it

[02:00:20.0917] <Domenic>
https://github.com/domfarolino/observable/pull/60#issuecomment-1710883833

[15:02:54.0067] <Alexander Kalenik>
I am working on implementing navigation, and I'm struggling to determine if the specification explicitly defines that the population of history entries initiated for nested navigables should be aborted after parent navigable navigates to another page.

For example, the following scenario currently fails with an assertion:

1. Both the nested navigable and the parent navigable navigate to a new URL.
2. The population of SHE for the parent navigable finishes first.
3. "finalize a cross-document navigation" for the parent navigable replaces the SHE (assuming historyHandling is set to "replace").
4. The population of SHE for the nested navigable navigation concludes.
5. "finalize a cross-document navigation" for nested navigable fails to locate the SHE to be replaced (assuming historyHandling is "replace") because it was located in the nested history of the parent navigable SHE that was replaced earlier.

Does that sound like a specification bug or I am missing something?



2023-09-09
[17:35:21.0749] <EveryOS>
Coincidentally, I also plan to implement the navigation soon
Though it's really dense (the intro paragraph literally calls it "the dragon's maw") so I'm 🌈 procrastinating 🌈

[06:16:26.0635] <Domenic>
Off the top of my head on a weekend, I thought there was a step early in navigation/traversal that would abort any current loads in the top-level traversable and its descendants?

[09:12:06.0165] <annevk>
Domenic: I think so, there was a concept of maturing and a new navigation would abort immature navigations or some such

[09:27:43.0932] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Off the top of my head on a weekend, I thought there was a step early in navigation/traversal that would abort any current loads in the top-level traversable and its descendants?

As I understand it, if the navigation that is currently loading needs to be canceled, we need to set its "ongoing navigation" to something other than the navigation ID. I would expect this to happen during the "apply the history step" process, but from what I've seen, it only takes care of "changing navigables".

[09:31:38.0868] <Alexander Kalenik>
> <@annevk:matrix.org> Domenic: I think so, there was a concept of maturing and a new navigation would abort immature navigations or some such

yes, I would expect something like that to happen but haven't yet found this in the spec

[09:32:12.0196] <annevk>
Hmm, did that get removed in the navigation refactor?

[09:33:26.0687] <annevk>
Step 11 of https://html.spec.whatwg.org/review-drafts/2022-07/#navigate has it. So if it's not there now it's a regression. Pretty bad one.

[09:36:18.0707] <Domenic>
It's still there. Step 17. https://html.spec.whatwg.org/#navigate

[09:39:02.0479] <Alexander Kalenik>
right, changing "ongoing navigation" means canceling any navigation that hasn't been finished. but should we also do that for all child navigables of a navigable that navigates?

[09:41:18.0334] <Alexander Kalenik>
 * right, changing "ongoing navigation" means canceling any navigation that hasn't been finished. but shouldn't we also do that for all child navigables of a navigable that navigates?

[09:42:31.0965] <annevk>
I guess descendants might never have been covered. I guess that can happen with bfcache?

[09:43:07.0662] <annevk>
Oh wait. I think I see now. Yeah hmm, not sure.

[09:44:29.0378] <annevk>
Recalling stuff from long ago now... I think that ought to be covered by canceling all the fetches for the fetch group, but we never got around to specifying that well.

[09:56:28.0463] <Domenic>
Step 20.3 should take care of descendants

[09:59:27.0016] <Noam Rosenthal>
https://html.spec.whatwg.org/#abort-a-document #2 is a bit lacking in terms of what it means to "cancel any instances of fetch", I'd be happy to fix this as part of `fetchLater`, didn't it use to call "terminate a fetch group" before?

[10:02:12.0838] <annevk>
I think there was also disagreement about the point in time that got invoked where Fx might have been more aggressive? Would benefit from tests

[10:02:39.0527] <Noam Rosenthal>
Fx?

[10:02:52.0222] <Noam Rosenthal>
Ah Firefox

[10:07:20.0029] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Step 20.3 should take care of descendants

Oh, right. Now I see, thank you! 

[10:08:10.0246] <Domenic>
Not sure we have the right thing for traversals though, to be honest. (E.g. if your entrypoint is "traverse the history by a delta".)

[10:08:36.0817] <Domenic>
Hmm maybe step 8.3? https://html.spec.whatwg.org/#apply-the-history-step

[10:09:21.0781] <annevk>
Anyone already in Sevilla? I'm flying in from Madrid shortly.

[10:20:47.0489] <Domenic>
I'm here, and I sat next to Olli on the plane :D

[11:05:46.0085] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Step 20.3 should take care of descendants

hmm, I am looking at step 3 in https://html.spec.whatwg.org/#abort-a-document: "Set document's navigation id to null.". shouldn't it be "ongoing navigation" of a navigable instead?

[11:07:10.0705] <Domenic>
Oh what happened there... I think I tried to unify those concepts, and maybe failed?

[11:08:31.0266] <Domenic>
Please file an issue... eek


2023-09-10
[17:16:36.0243] <Christine Belzie>
Hi everyone! I made my first PR: https://github.com/whatwg/html/pull/9714
Can someone review it for me?

[05:46:50.0094] <annevk>
Domenic: just came across https://github.com/python/cpython/issues/102153. Seems like URL security research is still going strong.

[05:48:36.0703] <Domenic>
Eh, ecosystems which aren't using the URL Standard seem hopeless anyway

[05:50:17.0991] <annevk>
That's pretty close to one of the comments there from a long term maintainer. That they probably should have added a WHATWG-compliant package to std.

[05:50:42.0770] <annevk>
I hope they do it now, not sure they have. No time like the present.

[05:52:02.0841] <Domenic>
Yeah seems like there's some fun drama in the hidden comments

[05:54:49.0029] <Domenic>
Ah but the RFC partisans come out later in the thread, sigh

[05:57:36.0369] <evilpie>
The curl author unfortunately seemed very dismissive of the URL standard as well in a related blog post

[05:58:38.0956] <Domenic>
I still find that so hilarious... his whole thing is that he thinks `http://` is pure, `http:///` is necessary for compat, but how dare the WHATWG accept **more than three** slashes, that's just craziness.

[05:59:19.0106] <annevk>
Yeah, whenever curl encounters some kind of compatibility problem it turns out that following the URL standard would have helped, but following the URL standard doesn't compute for him so the URL standard is at fault.

[05:59:38.0286] <annevk>
I tried to understand it for a while, but gave up.

[06:09:21.0649] <annevk>
He's part of a larger group of people on social media that have the ability and experience to influence and improve web standards for everyone, but they rather complain about the status quo. Even when they know and could reach out to the people involved.

[06:10:09.0780] <annevk>
(And yeah, they bother me a little bit. 😅)

[07:13:36.0609] <annevk>
Domenic: "HTML-parse a URL", "encoding-parse a URL", something else?

[07:14:18.0482] <Domenic>
If it's only for use with `Document` objects, or maybe even `Node`s, I like "HTML-parse".

[07:14:19.0847] <annevk>
Domenic: the idea would be that the current algorithm becomes a sibling to a "parse a URL" that doesn't take encoding into account that we'd promote people to use that need some kind of document/environment base URL

[07:14:47.0313] <annevk>
Domenic: XMLHttpRequest and xml-stylesheet will use the legacy algorithm

[07:14:59.0264] <Domenic>
Maybe encoding-parse is best then


2023-09-11
[03:41:11.0736] <annevk>
"activated" isn't a bad name for `fetchLater()`

[07:38:27.0604] <annevk>
https://github.com/nodejs/node-v0.x-archive/pull/1580 via https://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces

[07:38:40.0266] <annevk>
That thread is the inspiration for the URL Standard logo


2023-09-13
[11:43:47.0968] <akaster>
I'm looking into StructuredSerializeInternal for Ladybird, and steps 22 and 23 are tripping me up. From looking into blink, it seems like they defer to v8 for the serialization steps, in v8::ValueSerializer. And v8 seems to encode all the data about whether an object (a "receiver") is a well known ES object or ES prototype in a tag field. But LibJS doesn't do that, we just have a bunch of classical c++ inheritance. Like there's no "IsExotic()" function I can call. 

Do all the other engines do this type of tagging of JS objects so that those two catch-all steps are trivial and/or fall out of handling the known object types?

[11:45:42.0432] <akaster>
There's certainly no ECMAScript abstract operation I can call to say "is this a plain old object" (I think?)

[12:05:39.0319] <ljharb>
the prose "is an ordinary object" is how 262 does it.

[12:06:14.0792] <ljharb>
 * the prose "is an ordinary object" is how 262 does it (in a condition, or assertion, or parameter/return type)

[12:10:40.0901] <akaster>
Aha, there's like 40 or so objects in the spec that say "such and such object: - is an ordinary object"

[12:13:46.0857] <akaster>
But I can't clone all of those. Like, no promise, no weakmap, no Finalization registry, no Arguments, ...

[12:21:33.0418] <akaster>
Oh lovely. If I create a new RegExp(".", "") and try to structuredClone its __proto__ property, Firefox says "can't clone RegExp.prototype", and Chromium says "here's your object"

[12:24:11.0578] <akaster>
Safari refuses to clone it too 

[12:34:24.0984] <Domenic>
Step 22 excludes the ones you're worried about

[12:35:29.0891] <akaster>
Right.. the best idea I've got for that step at the moment is checking whether my JS::Value is an object and it's class name is "Object" 😅

[12:35:32.0042] <Domenic>
I do suspect the other two engines also do object type tagging, as it seems helpful for various optimizations

[12:36:52.0696] <akaster>
Yeah, Andreas was brainstorming a radical idea where we create custom vtables to check whether properties/methods are overridden and optimize based on that. But it seems overkill if I just want to get message serialization up and running to implement Workers properly

[12:38:15.0453] <akaster>
Eh. I'm sure some WPT tests for this and I can clean it up later 


2023-09-14
[00:29:08.0804] <Panos Astithas>
Meeting minutes: https://docs.google.com/document/d/1V6_s_VsaWcI9J-ZATbIKKijn59JbVmRMsHXYyH29sho/edit

[00:34:32.0360] <annevk>
If folks are interested in attending, the meeting information can be found at https://www.w3.org/events/meetings/efdf2435-c675-41ea-9af2-9fa6443e504c/

[00:34:58.0317] <hsivonen>
Are any break times known in advance?

[00:35:09.0161] <hsivonen>
Sevilla lunch time perhaps?

[00:36:07.0375] <annevk>
hsivonen: https://github.com/whatwg/meta/issues/284 has the agenda, breaks are between the items

[00:36:16.0398] <hsivonen>
Thanks

[00:36:28.0503] <annevk>
So the first break would be at 11. We haven't started yet though.

[00:36:41.0542] <annevk>
 * So the first break would be at 11AM in ~ 1.5h. We haven't started yet though.

[00:39:17.0821] <zcorpan>
Can remote folks hear us ok?

[00:40:52.0409] <krosylight | pto until 2023-09-10>
Yup

[00:40:58.0747] <hsivonen>
I can hear folks in the meeting room

[00:41:16.0757] <zcorpan>
https://whatwg.org/code-of-conduct

[02:39:58.0532] <keithamus>
https://docs.google.com/document/d/1V6_s_VsaWcI9J-ZATbIKKijn59JbVmRMsHXYyH29sho/edit minutes for those who want the link 

[02:55:51.0140] <Panos Astithas>
https://w3c.github.io/aria/ still has 1.3

[03:05:09.0602] <jarhar>
issue about this topic: https://github.com/openui/open-ui/issues/571#issuecomment-1696637459

[03:12:38.0239] <mfreed>
https://github.com/openui/open-ui/issues/787

[03:12:44.0137] <mfreed>
https://github.com/openui/open-ui/issues/552

[03:13:05.0585] <mfreed>
https://github.com/w3c/csswg-drafts/issues/9284

[03:15:01.0938] <bkardell>
we've had this in css for a long time, but irrc there were concerns around it https://drafts.csswg.org/css-images-4/#funcdef-element 

[03:19:13.0926] <jarhar>
current issue: https://github.com/whatwg/html/issues/9373

[03:30:29.0961] <annevk>
mfreed: one minor suggestion, maybe `lightclose` so we don't introduce a second term for closing

[03:36:24.0416] <Hidde de Vries>
fwiw I've been calling the opposite of 'light dismiss' 'explicit dismiss' , might be another word we could opt for as the opposite of light close / dismiss

[03:53:08.0302] <hober>
"Everything is a lot." — annevk 

[03:58:40.0573] <annevk>
Hidde de Vries: I would not mind `implicitclose`, I don't think we want "dismiss" as a novel term as it won't be immediately recognizable as "close" to all people

[03:59:05.0807] <annevk>
Hidde de Vries: although `lightclose` and `softclose` seem easier to spell, which is another consideration

[05:28:28.0151] <hsivonen>
Is there a joint meeting currently ongoing with CSS? In the CSS Zoom, I don't see the meeting room on the call and I can't hear any sound.

[05:28:48.0700] <Andreu Botella (at TPAC Sep 11 - 15)>
we haven't started yet

[05:28:59.0382] <annevk>
Yeah, people are walking into the room nowish

[05:29:06.0502] <hsivonen>
OK

[05:32:20.0537] <Panos Astithas>
Zoom link for the joint session with CSSWG: https://w3c.zoom.us/j/7729314923?pwd=YVhPRzNvQmdNVDF2RjFYMzdyMXB4UT09

[05:32:58.0516] <mfreed>
The camera is still off, correct?

[05:37:42.0090] <mfreed>
Guess the answer was no, and that I needed to restart Zoom.

[05:38:24.0419] <krosylight>
So we are using IRC now? Can someone give me the link?

[05:39:59.0578] <krosylight>
Thanks

[05:41:58.0831] <mfreed>
https://irc.w3.org/

[05:42:01.0679] <hober>
#css on irc.w3.org

[05:52:43.0305] <TabAtkins>
Hmmmm, if we want to have an attribute that always outputs a particular interface type from the getter, but wants to *accept* a dictionary type for the setter, is that at all possible?

[05:53:31.0179] <TabAtkins>
It looks like the answer is no, dictionary types aren't allowed in an attribute type, since the implication is that the attribute type is both the getter output and the setter input (and you can't use dictionaries in output types)

[05:54:05.0056] <TabAtkins>
(I suspect the answer is that, right now, it's required to type the attribute as `any` and handle the conversions by hand.)

[05:56:04.0368] <annevk>
TabAtkins: IDL has an open issue to split getters and setters (plus maybe have convenient syntax for when they're the same); we should still do that

[05:56:21.0634] <TabAtkins>
ah, cool. so "no, but later yes"

[05:56:28.0883] <annevk>
hai

[06:49:35.0542] <annevk>
zcorpan: https://github.com/w3c/csswg-drafts/issues/9301#issuecomment-1719284356

[08:29:03.0934] <Domenic>
TIL `document.open(); document.close()` is a "turn off mutation events" flag in Chrome/Safari.

[08:42:53.0044] <smaug>
That is interesting. I wonder what is the historical reason for that.

[08:55:41.0291] <annevk>
The specification requires flipping it on and then off. And maybe they just forgot to turn it on again?

[09:05:00.0452] <Domenic>
I think the specification is more recent though

[09:06:31.0438] <Domenic>
Ah, no, that part was untouched in the rewrite https://html.spec.whatwg.org/commit-snapshots/c9e804f04d03a0658bfa689cb0f368a4d2e37936/?C=M&O=A#dom-document-open

[09:07:21.0238] <Domenic>
Firefox doesn't quite follow the spec either, it turns them off until `document.close()` turns them back on, instead of the spec which requires turning them off just for the removal step.

[09:07:59.0147] <Domenic>
(or in the new spec, the "replace all" step)

[13:55:09.0500] <smaug>
how did you test that? Note, all the events listeners are supposed to be removed

[15:21:46.0549] <smaug>
ah, it is  a bit different. Listeners added after document.open() are called, if one modifies the DOM using normal methods, but .write() itself doesn't seem to notify DOM side, so no events are fired with .write().


2023-09-15
[20:54:21.0178] <annevk>
Ah that is correct, because the parser doesn't call mutation events.

[23:20:29.0110] <freddy>
thank you to all the note takers of yesterday's WHATWG sessions. was very easy to catch up on the stuff I missed 🙏

[02:36:57.0902] <annevk>
Joint session with a11y is starting. Minutes are still at https://docs.google.com/document/d/1V6_s_VsaWcI9J-ZATbIKKijn59JbVmRMsHXYyH29sho/edit

[02:39:27.0558] <Panos Astithas>
Slides are here: https://github.com/whatwg/meta/issues/284#issuecomment-1720877381

[02:52:45.0764] <Sam Sneddon [:gsnedders]>
do we have a generic term for the combination of a storage partition, network cache partition, etc.? as seen in ephemeral sessions in most implementations, for example.

[02:54:19.0401] <annevk>
Sam Sneddon [:gsnedders]: we have a URL: https://privacycg.github.io/storage-partitioning/

[02:54:35.0328] <annevk>
I personally prefer "state partitioning", but I didn't actually rename all the things

[03:01:11.0739] <Sam Sneddon [:gsnedders]>
a quick skim makes it sound like a "storage partition" is more than just that, it's more like (isPrivate, profile, site, origin) etc.?

[03:05:11.0889] <Sam Sneddon [:gsnedders]>
like I guess I want something that covers (isPrivate, browserProfile), and then within that storage area you have further partitions (per site, etc.)?

[03:11:56.0876] <annevk>
Sam Sneddon [:gsnedders]: I see, https://infra.spec.whatwg.org/#user-agent made an attempt at that particular distinction

[03:12:19.0394] <annevk>
Sam Sneddon [:gsnedders]: not sure it has everything you need, Jeffrey Yasskin might be able to help

[03:12:45.0293] <Jeffrey Yasskin>
Sam Sneddon [:gsnedders]: Yeah, I was trying to say that different profiles are entirely different user agents.

[03:12:57.0354] <Jeffrey Yasskin>
And then the user agent has various storage partitions.

[03:13:17.0265] <Sam Sneddon [:gsnedders]>
Even if they co-exist in a single browser UI process?

[03:13:32.0410] <Sam Sneddon [:gsnedders]>
Because that gives you multiple UAs in a single browser process, which seems… wild, terminology wise.

[03:14:27.0418] <Jeffrey Yasskin>
Yes, because the policies that control them could be very different, and no web-side information should flow between them. 

[03:15:13.0398] <Jeffrey Yasskin>
It's a spec construct, kinda like we abstract process boundaries into "agent clusters". So look at the observable implications, rather than assuming things about process boundaries.

[03:16:26.0402] <Jeffrey Yasskin>
It's also totally possible that I overlooked a bigger problem with that arrangement, so feel free to point that out. :)

[03:17:11.0788] <Sam Sneddon [:gsnedders]>
(The context here is wanting to be able to have some control of, uh, user agents within an implementation under WebDriver BiDi. Which probably means refactoring a lot of the terminology in that spec.)

[03:17:58.0641] <Sam Sneddon [:gsnedders]>
I think for WebDriver BiDi we're going to have to clarify when we're talking about the local end implementation, the remote end implementation, any intermediary node implementations, and the implementation [infra].

[03:18:14.0329] <Jeffrey Yasskin>
Cool, yeah, I wasn't thinking about the WebDriver implications when I wrote that. 

[03:19:45.0856] <Jeffrey Yasskin>
Does WebDriver want to make a single connection that covers multiple profiles? I would have expected that you'd make a WebDriver connection to a single profile, and so its spec could talk about connecting to an Infra user agent.

[03:20:04.0888] <Sam Sneddon [:gsnedders]>
That is what the current WG discussion is about. 🙃

[03:20:21.0618] <Jeffrey Yasskin>
Do you want me to come over?

[03:20:41.0349] <Ms2ger>
[vaguely threatening]

[03:20:46.0041] <Jeffrey Yasskin>
lol

[03:20:50.0138] <Sam Sneddon [:gsnedders]>
You're a bit too late. And probably mostly this is just a spec text question, rather than worthwhile having in the WG?

[03:21:39.0905] <Jeffrey Yasskin>
SG. Yeah, I hope the Infra term helps the WebDriver spec make all the relevant distinctions, and that any necessary spec changes actually make useful clarifications.

[03:21:44.0418] <Sam Sneddon [:gsnedders]>
(CDP has this ability, and Puppeteer would like this to be possible with WebDriver BiDi, because it provides a decent performance win to avoid having to create a many new browsers while being able to run tests in parallel largely isolated.)

[03:42:51.0448] <Jeffrey Yasskin>
From the in-person meeting: https://arasaac.org/ and https://www.blissymbolics.org/

[03:45:15.0624] <Jeffrey Yasskin>
Oh, and https://www.w3.org/WAI/adapt/

[03:49:16.0370] <Panos Astithas>
https://github.com/w3c/adapt/issues/240

[03:57:23.0744] <littledan>
sorry where is the queue maintained?

[03:58:32.0226] <annevk>
In the google doc.

[03:58:49.0034] <annevk>
I put you on it.

[04:08:35.0273] <muan>
Captured the steps for SFNSP APIs, hopefully this address some of the concerns raised: https://github.com/whatwg/html/issues/5326#issuecomment-1721091809

[04:09:02.0551] <hsivonen>
AFAICT, the gap analysis does not compare with IPA directly, so it's an exercise to the reader to see what requirements IPA covers.

[04:09:09.0416] <hsivonen>
Or am I missing something?

[05:47:32.0161] <annevk>
https://github.com/whatwg/meta/pull/295 If you want to be on the perf team, please say so

[05:48:01.0309] <annevk>
 * https://github.com/whatwg/meta/pull/295 If you want to be on the perf team, please say so (and share your GitHub ID)

[07:15:22.0554] <smaug>
https://github.com/WICG/scheduling-apis/issues/67

[07:32:28.0977] <Domenic>
https://github.com/whatwg/html/labels/agenda%2B

[08:24:34.0471] <Domenic>
https://github.com/whatwg/html/issues/4500

[12:10:48.0055] <sefeng>
annevk: I forgot to ask you about this at TPAC - do you know whether Safari provides some opt-in/opt-out mechanism for Reporting API? 


2023-09-16
[07:44:02.0228] <annevk>
sefeng: I don't know

[09:16:15.0374] <Rene Oswaldo Zaruma Tenecela>
Hey guys! I've question... Do you know if Html 6 exists?


2023-09-18
[23:18:11.0707] <freddy>
Nope. HTML has moved towards a so-called "living standard" model. Implementors are supposed to continuously watch and keep up the HTML standard as is it evolves. The barrier is that pull requests to the HTML standard are gated by a rule that at least 2 of 3 major web engines (gecko, blink, webkit) need to agree and implement.

[23:18:41.0640] <freddy>
apropos, now that I visit html.spec.whatwg.org again, I also have a question -- what's special about the "Version for Web Devs" linked at the topo f the spec?

[23:19:14.0288] <freddy>
 * <del>apropos, now that I visit html.spec.whatwg.org again, I also have a question -- what's special about the "Version for Web Devs" linked at the top of the spec?</del>.... Nevermind there's an "about" section 🤦‍♂️

[01:04:41.0012] <annevk>
Adam Rice: rs for https://github.com/whatwg/websockets/pull/51?

[01:06:15.0951] <annevk>
(Or zcorpan / foolip / sideshowbarker.)

[01:06:48.0443] <foolip>
annevk: approved but not merged

[01:07:01.0767] <foolip>
Well now it is :D

[01:08:12.0315] <annevk>
Thanks!

[02:33:43.0351] <smaug>
Panos Astithas: the next HTML spec triage meeting won't be on Thursday, right, but in 3 weeks?

[03:12:53.0451] <annevk>
Dominic Farolino: let me know if you want https://github.com/w3c/csswg-drafts/pull/8759 merged

[04:49:50.0807] <jarhar>
sideshowbarker: if you have tryjob access aka permission to do CQ+1, then i can request goma access for you. do you have tryjob access? https://chromium.googlesource.com/infra/goma/client/+/HEAD/doc/early-access-guide.md#Please-wait-for-invitation-from-Google

[04:52:44.0518] <annevk>
jarhar: making progress on https://github.com/whatwg/html/pull/8467#issuecomment-1693607442 would be great, it'd unblock WebKit working on it

[04:55:09.0120] <jarhar>
sure thing, ill try to work on this hopefully today or this week

[05:12:41.0842] <annevk>
littledan: not sure if you're still interested in doing more with text and canvas, but perhaps helping with ensuring existing issues such as https://github.com/whatwg/html/pull/5826 get resolved would help pave the way there; if we can't even get what little text support we have today to work well I'd be rather worried about anything more complex than that

[07:41:27.0607] <littledan>
Thanks, sounds like a good starting project. I will see if we can get started on this in January


2023-09-19
[19:17:29.0580] <sideshowbarker>
jarhar: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html times out in WebKit because (as far as I can see) the `load` event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?

[19:17:38.0428] <sideshowbarker>
 * jarhar: The http://wpt.live/html/semantics/forms/the-button-element/button-submit-remove-children.html test times out in WebKit because (as far as I can see) the `load` event never fires at the iframe that’s the target of the form action in that test. Any clue as to why the event never fires?

[19:24:31.0328] <jarhar>
hmm, the fact that im not seeing a 404 page in the iframe makes me wonder if webkit legitimately fails this test

[19:25:21.0106] <jarhar>
i wrote this test in response to one of many regression bugs that were filed when i did a refactor to form submission

[19:26:17.0700] <jarhar>
i wrote it here: https://chromium-review.googlesource.com/c/chromium/src/+/1983547

[19:26:31.0581] <sideshowbarker>
I see

[19:27:52.0067] <jarhar>
lol this was really complicated, but i suppose you could try implementing this patch in webkit to see if it makes the test pass

[19:29:10.0587] <sideshowbarker>
Yeah I'll try it I guess

[19:32:09.0980] <sideshowbarker>
This is the only complete fail in WebKit in https://wpt.fyi/results/html/semantics/forms/the-button-element — so, would be nice to make it all go green

[19:33:06.0712] <sideshowbarker>
that said, there is also https://wpt.fyi/results/html/semantics/forms/the-button-element/button-click-submits.html, which has a test that fails both in Blink and WebKit (but not in Gecko)

[20:29:39.0868] <sideshowbarker>
OK, ported that patch but in WebKit, still timing out anyway.

[20:30:11.0881] <sideshowbarker>
so I guess for now I’ll put this test on the back burner and look at it more again some time later

[23:53:10.0455] <annevk>
Domenic: can you review the encoding-parse a URL refactor?

[23:53:26.0420] <annevk>
Would be nice to unblock some of the follow-up work

[00:35:24.0687] <Noam Rosenthal>
zcorpan: regarding the media/supports thing, I felt it was a bit inconsistent that in CSS those are separate @ rules and in the link element they are both folded into the `media` attribute. perhaps there's a more elegant solution?

[00:36:56.0169] <zcorpan>
Noam Rosenthal: perhaps. We want it to fail closed, so that the stylesheet isn't applied in legacy browsers. (But maybe the importance of this property is debatable, since it's temporary and we have faster update cycles now compared to, say, a decade ago)

[00:37:34.0820] <Noam Rosenthal>
... I would expect it to be in a separate cssSupports attribute, and deal with legacy in a way that's a bit more consistent with the meaning of the attributes

[00:39:25.0425] <zcorpan>
Ways to fail closed other than stuffing it in `media` (and still work in `head`): change `rel` to something else (seems not so elegant long term), use `type` attribute (should ideally be possible to not have to write `text/css` since we made that optional)

[00:41:37.0425] <zcorpan>
Maybe we can use a new attribute and in the transition period people can use `media="not all"` and change that with script (or use other rel/type to avoid the download)

[00:41:42.0851] <Noam Rosenthal>
For now there is a convenient way to do this:
```
<style>
   @import url("...") supports(...);
</style>
```

I wonder if making the media attribute inconsistent is worth it

[00:42:01.0915] <zcorpan>
good point

[00:42:06.0442] <Noam Rosenthal>
I didn't quite get if adding this as a link provides anything material

[00:42:47.0456] <zcorpan>
It might be loaded earlier by the speculative parser. Not sure if all browsers speculatively load `@import`s

[00:43:03.0905] <Noam Rosenthal>
they don't in chrome AFAIK

[00:45:12.0923] <Noam Rosenthal>
I think adding a `rel=css` or `rel=style` which can take `layer` and `cssSupports` attributes is not that bad, and when everyone supports layers we can make them aliases of each other

[00:46:56.0364] <Noam Rosenthal>
I mean it's not that pretty but it's at least straightforward in a way

[00:47:40.0905] <zcorpan>
I don't like adding alias `rel`s, but I'm warming up to just adding `supports` attribute and let it fail open in legacy. Use `style` element or script hack if you need to fail closed

[00:48:29.0212] <zcorpan>
The linked stylesheet can repeat the `@supports` too if you can control what it contains

[00:49:18.0371] <Noam Rosenthal>
yea that's probably safer, you use the supports attribute as an optimization to avoid loading the link at all rather than as a way to not apply the CSS

[00:55:29.0145] <sideshowbarker>
At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:
> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._
But then later has this non-normative note that says this:
> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._
So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).

[00:55:45.0705] <sideshowbarker>
 * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:

> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._

But then later has this non-normative note that says this:

> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._

So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).

[00:56:26.0186] <sideshowbarker>
 * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:

> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._

But then later has this non-normative note that says this:

> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._

So, that note seems to conflict with the normative requirements — by implying that using multiple elements is OK (or even sort of a best practice).

(There’s also a grammar error in the note.)

[01:01:23.0166] <sideshowbarker>
The HTML spec text doesn’t explicitly state that the `color-scheme` value can be an ordered list of keywords — instead it just says, “The value must be a string that matches the syntax for the CSS '[`color-scheme`](https://drafts.csswg.org/css-color-adjust/#color-scheme-prop)' property value” — where `color-scheme` is a link/reference to the normative CSS definition for the property value (which says the value is _“the keyword `normal`, or an ordered list of specified color scheme keywords”_

[01:02:23.0706] <sideshowbarker>
So, maybe that note about using using multiple elements was written without an understanding that the value could be a _list_ of keywords rather than a single keyword?

Regardless, the note seems wrong.

[01:09:30.0082] <zcorpan>
Noam Rosenthal: commented in https://github.com/whatwg/html/issues/7540#issuecomment-1725024079

[01:10:25.0571] <zcorpan>
sideshowbarker: if you use a list and you use an unsupported keyword, isn't the whole list ignored?

[01:10:28.0584] <sideshowbarker>
 * At https://html.spec.whatwg.org/multipage/semantics.html#standard-metadata-names:meta-color-scheme, the spec normatively states this:

> _There must not be more than one `meta` element with its `name` attribute value set to an ASCII case-insensitive match for `color-scheme` per document._

But then later has this non-normative note that says this:

> _Because these rules check successive elements until they find a match, an author can provide multiple such values to handle fallback for legacy user agents. Opposite to how CSS fallback works for properties, the multiple meta elements needs to be arranged with the legacy values after the newer values._

So, that note seems to conflict with the normative requirements — by implying that using multiple `<meta name=color-scheme>` elements is OK (or even sort of a best practice).

(There’s also a grammar error in the note.)

[01:11:00.0491] <sideshowbarker>
 * The HTML spec text doesn’t explicitly state that the `color-scheme` value can be an ordered list of keywords — instead it just says, “The value must be a string that matches the syntax for the CSS '[`color-scheme`](https://drafts.csswg.org/css-color-adjust/#color-scheme-prop)' property value” — where `color-scheme` is a link/reference to the normative CSS definition for the property value (which says the value is _“the keyword `normal`, or an ordered list of specified color scheme keywords”_)

[01:12:14.0353] <sideshowbarker>
> <@zcorpan:mozilla.org> sideshowbarker: if you use a list and you use an unsupported keyword, isn't the whole list ignored?

Not sure. I think it depends on what the CSS parser does and what the CSS spec requires UAs to do

[01:12:24.0560] <zcorpan>
oh no, the grammar allows custom-ident

[01:17:15.0777] <zcorpan>
so parsing would only fail if you use e.g. a function. which seems unlikely to be added, so I think we can just remove the note

[01:18:47.0656] <sideshowbarker>
> <@zcorpan:mozilla.org> so parsing would only fail if you use e.g. a function. which seems unlikely to be added, so I think we can just remove the note

OK, I reckon I’ll open a PR

[01:19:23.0849] <zcorpan>
maybe even the processing could stop after the first meta element even if it fails, but also, if the current processing is implemented already, not worth it to shake

[01:23:49.0225] <sideshowbarker>
yeah

[01:43:07.0824] <Noam Rosenthal>
zcorpan: another option for backwards compat if we really want the link element, is to have a new attribute like `cssConditions` or so that can accept a `@media ... @supports` style syntax and overrides `media`. So you use `media="not all"` like you suggested before, and in browsers that supports this attribute you'd get the media+supports check (plus whatever check we allow in the future)

[01:46:09.0885] <zcorpan>
Noam Rosenthal: interesting idea. personally I prefer the html attribute syntax

[01:47:35.0032] <zcorpan>
also would be surprising that `media` is ignored here:
```html
<link rel=stylesheet cssconditions="supports(at-rule(@scope))" media="print">
```

[01:47:57.0636] <Noam Rosenthal>
we can ignore it only if `cssconditions` contains media

[01:48:05.0184] <Noam Rosenthal>
 * we can choose ignore it only if `cssconditions` contains media

[01:48:59.0240] <zcorpan>
seems more convoluted to explain than `supports=""`

[01:49:27.0680] <zcorpan>
+ more typing

[01:49:50.0041] <zcorpan>
 * plus more typing

[01:50:07.0002] <zcorpan>
(didn't know starting a line with + made a bullet list)

[01:50:20.0320] <Noam Rosenthal>
sure, but also has some pros as it lets us use the link element earlier

[01:50:39.0558] <Noam Rosenthal>
not sure if it's worth it but thought I'd try to bring an alternative

[01:52:58.0813] <zcorpan>
Maybe we can solve that socially. have a comment in the spec for import conditions to also change the link element

[01:56:13.0824] <Noam Rosenthal>
I don't follow :)

[02:10:28.0888] <zcorpan>
Noam Rosenthal: you said " it lets us use the link element earlier", but that's only true if `@import` gains a new feature first, instead of the `link` element gaining that feature first, or they gain it at the same time

[02:11:45.0949] <Noam Rosenthal>
zcorpan: gotcha, yes

[03:05:38.0790] <Domenic>
> <@annevk:matrix.org> Domenic: can you review the encoding-parse a URL refactor?

I'm on vacation through 2023-09-26

[04:33:45.0353] <annevk>
Domenic: ah, thanks for letting me know, I'll ask another editor as I addressed all your feedback

[04:34:07.0100] <annevk>
Domenic: and I guess you already let me know, hope the cities are enjoyable :-)

[04:36:17.0802] <annevk>
zcorpan: foolip: interested in reviewing https://github.com/whatwg/html/pull/9719?

[04:40:42.0026] <foolip>
annevk: I can

[05:04:38.0593] <annevk>
miketaylr: curious rename

[05:19:39.0845] <jarhar>
after porting the patch, did the iframe show anything at all like a 404 page?

[06:05:31.0679] <sideshowbarker>
I did not

[06:06:15.0152] <sideshowbarker>
It’s possible that I didn’t fully port it correctly — but it’s a relatively simple change, so I feel like I got it right

[06:06:48.0353] <sideshowbarker>
if I had muffed it in some, I’d expect that it’d probably cause a crash

[06:06:56.0382] <sideshowbarker>
well, or not compile at all

[06:07:03.0490] <sideshowbarker>
 * well, or not compile at all to begin with

[06:08:25.0288] <miketaylr>
lol yeah, TIL that `/nick changes are global, but there's a `/myroomnick` for per-name shenanigans 🙈

[06:08:36.0352] <miketaylr>
 * lol yeah, TIL that `/nick` changes are global, but there's a `/myroomnick\` for per-name shenanigans 🙈

[06:08:41.0571] <miketaylr>
 * lol yeah, TIL that `/nick` changes are global, but there's a `/myroomnick` for per-name shenanigans 🙈

[06:49:29.0713] <karlcow>
I'm pretty sure he was impersonating the visual effects technician, Mitchell Baker from Kraken: Tentacles of the Deep from 2006. 

[14:16:33.0976] <Dominic Farolino>
When ORB blocks a response, you can't even reach for the _internal response_ and get at it, right? Is the response blocked from even reaching _that_ stage annevk ?


2023-09-20
[23:33:10.0538] <Noam Rosenthal>
Dominic Farolino: right, it results in a network error

[04:19:49.0209] <sideshowbarker>
In the WPT test at https://github.com/web-platform-tests/wpt/blob/db6e5032915eb0dcb1d8b8b249488055378245fd/html/webappapis/dynamic-markup-insertion/opening-the-input-stream/url.window.js#L28, what exactly about `childDoc` causes it to be not fully active? 

[04:20:09.0719] <sideshowbarker>
 * In the WPT test at https://github.com/web-platform-tests/wpt/blob/db6e5032915eb0dcb1d8b8b249488055378245fd/html/webappapis/dynamic-markup-insertion/opening-the-input-stream/url.window.js#L28, what exactly about `childDoc` causes it to be not fully active at that point?

[04:21:26.0711] <sideshowbarker>
I mean in terms of the spec requirements at https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active:
> A [Document](https://html.spec.whatwg.org/multipage/dom.html#document) d is said to be fully active when d is the [active document](https://html.spec.whatwg.org/multipage/document-sequences.html#nav-document) of a [navigable](https://html.spec.whatwg.org/multipage/document-sequences.html#navigable) navigable, and either navigable is a [top-level traversable](https://html.spec.whatwg.org/multipage/document-sequences.html#top-level-traversable) or navigable's [container document](https://html.spec.whatwg.org/multipage/document-sequences.html#nav-container-document) is [fully active](https://html.spec.whatwg.org/multipage/document-sequences.html#fully-active).

[04:23:36.0273] <sideshowbarker>
…so `childDoc` must either (a) not be the active document of a navigable, or (b) the navigable is not a top-level traversable, or (c) the navigable’s container document is not fully active.

[04:45:39.0366] <annevk>
sideshowbarker: it's a reference to _frameURL_'s document but at that point the nested document is `/common/blank.html`'s document

