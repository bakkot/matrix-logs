2023-09-01
[21:49:01.0737] <alandp>
how to fix Insecure CORS Configuration?

[00:45:17.0288] <annevk>
Domenic: mind if I reach out to Mike and Artur for that module worker issue? Or perhaps you already have?

[00:45:29.0144] <Domenic>
annevk: go for it

[04:09:58.0042] <annevk>
Luca Casonato: https://github.com/whatwg/html/pull/9668 does Deno need an issue for this?

[04:10:25.0657] <annevk>
smaug: I've tried to make the commit title clearer, will use that when landing

[04:11:19.0483] <smaug>
thanks. Initially when I just saw the bugmail I thought it was about some script bundling and workers ðŸ™‚ 


2023-09-02
[20:53:09.0810] <Luca Casonato>
> <@annevk:matrix.org> Luca Casonato: https://github.com/whatwg/html/pull/9668 does Deno need an issue for this?

Nope

[22:56:36.0948] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

Hey annevkIâ€™ll do this one: 

[22:57:34.0695] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

 * Hey annevkIâ€™ll do issue 7374. Itâ€™s in the HTML repo

[23:52:12.0529] <annevk>
Christine Belzie: sounds good, but https://github.com/whatwg/html/issues/7374 appears closed?

[04:59:44.0681] <vrafaeli>
HTML tables have a defined schema, table -> tbody -> tr -> td
Is there a way for the row to behave like an <a> element, in a way that the row's link can be copied, or opened in a new tab with ctrl+click.

[05:00:44.0920] <vrafaeli>
Or is this just a bad UX, and a table row should have a column where the link is in?

[05:01:07.0419] <vrafaeli>
 * -----------
Or would this just be a bad UX, and a table row should just have a column where the link is in?

[07:11:04.0720] <annevk>
vrafaeli: with scripting you can accomplish some if not all of that, but there's no way with just markup. Might be an interesting feature request for CSS to let a row act as the link of one of its columns


2023-09-04
[13:27:50.0156] <jamescobban>
I have been designing web sites since 1993.  I started out with NCSA Mosaic and websites implemented on NCSA httpd.  I am tired of being forced to use JavaScript as the only way to implement dynamic functionality on web pages.  IMHO Brendan Eich only invented it as a temporary measure.  His exploitation of the Java trademark suggests to me that he expected the compiled Java language to eventually replace it, once the appropriate libraries were constructed.  Back in the 90s I wrote Java Applets and even taught a course on them.  But Java has been removed from all browsers "Because of the removal of older NPAPI plugins on which Java is built on."  But that was only one implementation of the Java VM.

[13:47:57.0589] <jamescobban>
> <@vrafaeli:matrix.org> HTML tables have a defined schema, table -> tbody -> tr -> td
> Is there a way for the row to behave like an <a> element, in a way that the row's link can be copied, or opened in a new tab with ctrl+click.

You can write a script to go to another URL based upon information in the row: trow.addEventListener('click', eventhandler);  Remember to set role="link" and to use styles to notify users that it is a link.  See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/link_role for caveats.

[16:06:06.0742] <Christine Belzie>
> <@annevk:matrix.org> Hey Christine Belzie, I'm not aware of any docs-related issue, but you could scan through https://github.com/search?q=org%3Awhatwg+label%3A%22good+first+issue%22+is%3Aopen&type=issues to see if any of those seems doable; happy to help

Hey annevk! :) I want to do this one: https://github.com/whatwg/html/issues/3296
 


2023-09-05
[02:21:31.0789] <annevk>
Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

[04:52:49.0186] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Alexander Kalenik: Did you have a chance to look at https://github.com/whatwg/html/issues/9148#issuecomment-1610989949 ? I would love to get your implementer experience-informed opinion, before I go making changes.

uh, sorry it takes so long for me to respond. I have returned to working on navigables implementation for LibWeb and seems like I found another bug https://github.com/whatwg/html/issues/9686.

[04:55:05.0062] <Alexander Kalenik>
I will let you know once I've tried to actually implement your suggestion to solve destroy/abort bug.

[06:44:50.0215] <vhilla>
annevk: there hasn't been any progress on https://github.com/whatwg/html/issues/9469, can you please take a look?

[07:21:09.0511] <annevk>
vhilla: thanks for the ping, I'll relay it internally

[07:22:21.0193] <annevk>
vhilla: I guess it's not just up to WebKit though, if Chromium and Gecko want to have this specific divide there's nothing really stopping you from working on specifying it, unless Yusuke comes up with a strong reason not to, but I kinda doubt it

[09:05:31.0497] <annevk>
So since Ian Hickson worked on HTML, is it correct we added only these new elements:

1. Custom elements
2. slot
3. search

?

[09:36:17.0475] <bkardell>
zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

[09:37:21.0396] <bkardell>
but element wise, yes.. tho I guess we completed dialog and had important additions to details and some other good stuff too

[09:37:29.0215] <bkardell>
 * but element wise, yes.. I think so... tho I guess we completed dialog and had important additions to details and some other good stuff too

[09:37:47.0351] <bkardell>
 * annevk:  --- zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

[10:58:41.0503] <bkardell>
/me > <@annevk:matrix.org> So since Ian Hickson worked on HTML, is it correct we added only these new elements:
> 
> 1. Custom elements
> 2. slot
> 3. search
> 
> ?

is curious why you asked?

[12:33:22.0021] <Christine Belzie>
> <@annevk:matrix.org> Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

Great! Can you assign the issue to me? It'll let other contributors know that it's been solved.

[12:33:42.0802] <Christine Belzie>
> <@annevk:matrix.org> Christine Belzie: sounds good, https://github.com/whatwg/html/issues/3296#issuecomment-353047461 still seems relevant there

 * Great annevk! Can you assign the issue to me? It'll let other contributors know that it's been solved.

[15:06:24.0178] <sideshowbarker>
> <@bkardell:igalia.com> annevk:  --- zcorpan:  posted a while back https://twitter.com/zcorpan/status/1469344438627573761

Thereâ€™s https://platform.html5.org/history/ â€” but it seems I stopped adding to that at roughly around the same time Hixie moved on


2023-09-06
[18:14:20.0795] <Domenic>
> <@chrissycodes:matrix.org> Great annevk! Can you assign the issue to me? It'll let other contributors know that it's been solved.

We don't assign issues. Other contributors will know it's been solved when the issue is closed :)

[22:23:50.0036] <annevk>
bkardell: came up when talking about `search` and I realized I had no idea

[03:59:24.0319] <Jake Archibald>
Domenic: https://bugs.chromium.org/p/chromium/issues/detail?id=1475907#c4 - is this right? The navigation event deliberately doesn't fire when traversing to a bfcache'd page?

[04:00:59.0283] <Jake Archibald>
 * Domenic: https://bugs.chromium.org/p/chromium/issues/detail?id=1475907#c4 - is this right? The `navigate` event deliberately doesn't fire when traversing to a bfcache'd page?

[04:01:51.0358] <Domenic>
No, seems like a bug. There's nothing in the spec that looks at the destination's bfcache status.

[04:02:36.0193] <Jake Archibald>
That was my reading/hunch too.

[04:02:49.0795] <Domenic>
It should work, same-origin

[15:43:59.0194] <jugglinmike>
Hi folks. [WebDriver BiDi would like to hook in to "run the animation frame callbacks."](https://w3c.github.io/webdriver-bidi/#issue-b2b83ca0) I'm thinking HTML could define a general-purpose extension point for that situation (maybe with a queue of tasks into which a spec like BiDi could push), it it could explicitly invoke an algorithm provided by BiDi. Is there a preference between these two? Or a more appropriate approach that I haven't considered?

[15:52:41.0380] <jugglinmike>
[Looks like "Update the rendering" has already been extended with steps to inform other specs of this event](https://html.spec.whatwg.org/multipage/webappapis.html#update-the-rendering)


2023-09-07
[19:10:19.0942] <Domenic>
jugglinmike: we prefer explicit callbacks these days, like we've done for all other WebDriver BiDi hooks.

[19:10:26.0457] <Domenic>
In particular, this helps get the ordering clear.

[19:10:55.0245] <Domenic>
Not sure what hooks you're referring to that already exist, although it's a long section so maybe I just missed them

[19:11:34.0583] <Domenic>
Oh you mean the many specific ones, not a generic one.

[02:06:10.0160] <sbastiandev>
Hello All,

[02:09:02.0795] <sbastiandev>
I am almost done implementing the latest URL Spec in Java and was wondering if the various URL's setters should throw Exceptions when something goes wrong ? I read the specification and didn't find anything on this ? Can anyone shed some light ? Thx a lot

[03:24:58.0636] <Noam Rosenthal>
sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent

[03:28:47.0946] <Noam Rosenthal>
as in, the web platform doesn't throw on validation errors (based on the note, for backwards compatibility), but conformance checkers probably should. Makes sense to me that this is a library/platform decision rather than spec decision. probably some people here with more context though

[05:36:54.0153] <sbastiandev>
> <@noamr:matrix.org> sbastiandev: judging by this note: https://url.spec.whatwg.org/#validation-error whether validation errors throw is left to the user agent

Thanks for your reply. The main concern though is that you've got cases where the behavior of setting parts versus parsing a url is not consistent in term of reporting failures. For instance parsing a url with a wrong port would fail. However calling url.port = "bad-port-number" would not. But as you said it's probably a library/platform decision. Thank you

[05:46:41.0435] <Noam Rosenthal>
sbastiandev:  if you see the setter algorithm, those do something and then call the parsing algorithm and some parsing leads to validation errors, which leads back to this note

[05:46:54.0317] <Noam Rosenthal>
(setter algorithms)

[05:48:00.0107] <Noam Rosenthal>
e.g. "The protocol setter steps are to *basic URL parse* the given value, followed by U+003A (:), with thisâ€™s URL as url and scheme start state as state override."

[07:57:38.0707] <jugglinmike>
Thanks Domenic !

[08:03:36.0835] <Dominic Farolino>
Can you define a custom conversion from arbitrary ES types to your specific IDL type? Like, if I have an interface, and I want methods that accept objects of that interface type to also accept a handful of other types that my native interface type can be constructed from, how can I do this? Do those methods have to accept `any`, and then I just write their dfn as delegating to an internal conversion algorithm that I provide? Or can I just accept `MyInterface` types, and specify some some conversion algorithm that gets invoked whenever anything is passed in as a `MyInterface`?

[08:04:22.0617] <Dominic Farolino>
I think I'm interested in simulating something like the WebIDL Promise type, which accepts all thenables but also native Promises, IIUC

[08:05:18.0292] <Dominic Farolino>
(Context is for https://github.com/domfarolino/observable, where it'd be nice for methods that accept an Observable to also accept Async Iterables, that Observables can be constructed around to wrap)

[08:07:30.0329] <annevk>
Dominic Farolino: define ObservableInit as a union of Observable and whatever syntax we have for async iterables (maybe needs to be added?) and make people use that?

[08:07:56.0931] <annevk>
Dominic Farolino: Promise is an ES type and therefore gets its own to-and-from ES conversion, but you don't have that if you define an interface

[08:11:16.0577] <Dominic Farolino>
Yeah it's the latter part of "and whatever syntax we have for async iterables" that I'm stuck on. We of course have syntax to make an interface async iterable, but I'm not sure that's usable from within a union... perhaps it does need to be added though idk

[08:11:43.0499] <Dominic Farolino>
(Same goes for normal iterable I think)

[08:16:03.0313] <Dominic Farolino>
(Or no, I guess maybe sequence<T> can be used for iterable)

[08:41:35.0033] <annevk>
Dominic Farolino: yeah, you want `async sequence<T>` or some such

[16:08:06.0080] <Domenic>
Dominic Farolino: I think you need `object` or `any` with manual steps. In particular, overloading on promises is basically impossible in Web IDL by design. And this would be the second method on the platform to consume async iterators, so you'd need to add something to Web IDL to support that, which I'm not sure is worth it.

[16:08:29.0176] <Domenic>
Oh, but, if this is just for `Observable` + async iterable overloads, then maybe that's worth doing

[16:08:36.0563] <Domenic>
I thought this was just for `Observable.from` which is very special.


2023-09-08
[22:32:38.0489] <annevk>
Or maybe it would be cleaner if we made `Observable` a special type in Web IDL, so you wouldn't be able to return async iterables, but had to instead return an Observable or Stream, which I think is what we would (always?) want.

[01:59:57.0862] <Domenic>
Yeah I came around to that conclusion actually

[02:00:05.0861] <Domenic>
Well or something like it

[02:00:20.0917] <Domenic>
https://github.com/domfarolino/observable/pull/60#issuecomment-1710883833

[15:02:54.0067] <Alexander Kalenik>
I am working on implementing navigation, and I'm struggling to determine if the specification explicitly defines that the population of history entries initiated for nested navigables should be aborted after parent navigable navigates to another page.

For example, the following scenario currently fails with an assertion:

1. Both the nested navigable and the parent navigable navigate to a new URL.
2. The population of SHE for the parent navigable finishes first.
3. "finalize a cross-document navigation" for the parent navigable replaces the SHE (assuming historyHandling is set to "replace").
4. The population of SHE for the nested navigable navigation concludes.
5. "finalize a cross-document navigation" for nested navigable fails to locate the SHE to be replaced (assuming historyHandling is "replace") because it was located in the nested history of the parent navigable SHE that was replaced earlier.

Does that sound like a specification bug or I am missing something?



2023-09-09
[17:35:21.0749] <EveryOS>
Coincidentally, I also plan to implement the navigation soon
Though it's really dense (the intro paragraph literally calls it "the dragon's maw") so I'm ðŸŒˆ procrastinating ðŸŒˆ

[06:16:26.0635] <Domenic>
Off the top of my head on a weekend, I thought there was a step early in navigation/traversal that would abort any current loads in the top-level traversable and its descendants?

[09:12:06.0165] <annevk>
Domenic: I think so, there was a concept of maturing and a new navigation would abort immature navigations or some such

[09:27:43.0932] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Off the top of my head on a weekend, I thought there was a step early in navigation/traversal that would abort any current loads in the top-level traversable and its descendants?

As I understand it, if the navigation that is currently loading needs to be canceled, we need to set its "ongoing navigation" to something other than the navigation ID. I would expect this to happen during the "apply the history step" process, but from what I've seen, it only takes care of "changing navigables".

[09:31:38.0868] <Alexander Kalenik>
> <@annevk:matrix.org> Domenic: I think so, there was a concept of maturing and a new navigation would abort immature navigations or some such

yes, I would expect something like that to happen but haven't yet found this in the spec

[09:32:12.0196] <annevk>
Hmm, did that get removed in the navigation refactor?

[09:33:26.0687] <annevk>
Step 11 of https://html.spec.whatwg.org/review-drafts/2022-07/#navigate has it. So if it's not there now it's a regression. Pretty bad one.

[09:36:18.0707] <Domenic>
It's still there. Step 17. https://html.spec.whatwg.org/#navigate

[09:39:02.0479] <Alexander Kalenik>
right, changing "ongoing navigation" means canceling any navigation that hasn't been finished. but should we also do that for all child navigables of a navigable that navigates?

[09:41:18.0334] <Alexander Kalenik>
 * right, changing "ongoing navigation" means canceling any navigation that hasn't been finished. but shouldn't we also do that for all child navigables of a navigable that navigates?

[09:42:31.0965] <annevk>
I guess descendants might never have been covered. I guess that can happen with bfcache?

[09:43:07.0662] <annevk>
Oh wait. I think I see now. Yeah hmm, not sure.

[09:44:29.0378] <annevk>
Recalling stuff from long ago now... I think that ought to be covered by canceling all the fetches for the fetch group, but we never got around to specifying that well.

[09:56:28.0463] <Domenic>
Step 20.3 should take care of descendants

[09:59:27.0016] <Noam Rosenthal>
https://html.spec.whatwg.org/#abort-a-document #2 is a bit lacking in terms of what it means to "cancel any instances of fetch", I'd be happy to fix this as part of `fetchLater`, didn't it use to call "terminate a fetch group" before?

[10:02:12.0838] <annevk>
I think there was also disagreement about the point in time that got invoked where Fx might have been more aggressive? Would benefit from tests

[10:02:39.0527] <Noam Rosenthal>
Fx?

[10:02:52.0222] <Noam Rosenthal>
Ah Firefox

[10:07:20.0029] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Step 20.3 should take care of descendants

Oh, right. Now I see, thank you! 

[10:08:10.0246] <Domenic>
Not sure we have the right thing for traversals though, to be honest. (E.g. if your entrypoint is "traverse the history by a delta".)

[10:08:36.0817] <Domenic>
Hmm maybe step 8.3? https://html.spec.whatwg.org/#apply-the-history-step

[10:09:21.0781] <annevk>
Anyone already in Sevilla? I'm flying in from Madrid shortly.

[10:20:47.0489] <Domenic>
I'm here, and I sat next to Olli on the plane :D

[11:05:46.0085] <Alexander Kalenik>
> <@domenicdenicola:matrix.org> Step 20.3 should take care of descendants

hmm, I am looking at step 3 in https://html.spec.whatwg.org/#abort-a-document: "Set document's navigation id to null.". shouldn't it be "ongoing navigation" of a navigable instead?

[11:07:10.0705] <Domenic>
Oh what happened there... I think I tried to unify those concepts, and maybe failed?

[11:08:31.0266] <Domenic>
Please file an issue... eek


2023-09-10
[17:16:36.0243] <Christine Belzie>
Hi everyone! I made my first PR: https://github.com/whatwg/html/pull/9714
Can someone review it for me?

[05:46:50.0094] <annevk>
Domenic: just came across https://github.com/python/cpython/issues/102153. Seems like URL security research is still going strong.

[05:48:36.0703] <Domenic>
Eh, ecosystems which aren't using the URL Standard seem hopeless anyway

[05:50:17.0991] <annevk>
That's pretty close to one of the comments there from a long term maintainer. That they probably should have added a WHATWG-compliant package to std.

[05:50:42.0770] <annevk>
I hope they do it now, not sure they have. No time like the present.

[05:52:02.0841] <Domenic>
Yeah seems like there's some fun drama in the hidden comments

[05:54:49.0029] <Domenic>
Ah but the RFC partisans come out later in the thread, sigh

[05:57:36.0369] <evilpie>
The curl author unfortunately seemed very dismissive of the URL standard as well in a related blog post

[05:58:38.0956] <Domenic>
I still find that so hilarious... his whole thing is that he thinks `http://` is pure, `http:///` is necessary for compat, but how dare the WHATWG accept **more than three** slashes, that's just craziness.

[05:59:19.0106] <annevk>
Yeah, whenever curl encounters some kind of compatibility problem it turns out that following the URL standard would have helped, but following the URL standard doesn't compute for him so the URL standard is at fault.

[05:59:38.0286] <annevk>
I tried to understand it for a while, but gave up.

[06:09:21.0649] <annevk>
He's part of a larger group of people on social media that have the ability and experience to influence and improve web standards for everyone, but they rather complain about the status quo. Even when they know and could reach out to the people involved.

[06:10:09.0780] <annevk>
(And yeah, they bother me a little bit. ðŸ˜…)

[07:13:36.0609] <annevk>
Domenic: "HTML-parse a URL", "encoding-parse a URL", something else?

[07:14:18.0482] <Domenic>
If it's only for use with `Document` objects, or maybe even `Node`s, I like "HTML-parse".

[07:14:19.0847] <annevk>
Domenic: the idea would be that the current algorithm becomes a sibling to a "parse a URL" that doesn't take encoding into account that we'd promote people to use that need some kind of document/environment base URL

[07:14:47.0313] <annevk>
Domenic: XMLHttpRequest and xml-stylesheet will use the legacy algorithm

[07:14:59.0264] <Domenic>
Maybe encoding-parse is best then


2023-09-11
[03:41:11.0736] <annevk>
"activated" isn't a bad name for `fetchLater()`

[07:38:27.0604] <annevk>
https://github.com/nodejs/node-v0.x-archive/pull/1580 via https://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces

[07:38:40.0266] <annevk>
That thread is the inspiration for the URL Standard logo


2023-09-13
[11:43:47.0968] <akaster>
I'm looking into StructuredSerializeInternal for Ladybird, and steps 22 and 23 are tripping me up. From looking into blink, it seems like they defer to v8 for the serialization steps, in v8::ValueSerializer. And v8 seems to encode all the data about whether an object (a "receiver") is a well known ES object or ES prototype in a tag field. But LibJS doesn't do that, we just have a bunch of classical c++ inheritance. Like there's no "IsExotic()" function I can call. 

Do all the other engines do this type of tagging of JS objects so that those two catch-all steps are trivial and/or fall out of handling the known object types?

[11:45:42.0432] <akaster>
There's certainly no ECMAScript abstract operation I can call to say "is this a plain old object" (I think?)

[12:05:39.0319] <ljharb>
the prose "is an ordinary object" is how 262 does it.

[12:06:14.0792] <ljharb>
 * the prose "is an ordinary object" is how 262 does it (in a condition, or assertion, or parameter/return type)

[12:10:40.0901] <akaster>
Aha, there's like 40 or so objects in the spec that say "such and such object: - is an ordinary object"

[12:13:46.0857] <akaster>
But I can't clone all of those. Like, no promise, no weakmap, no Finalization registry, no Arguments, ...

[12:21:33.0418] <akaster>
Oh lovely. If I create a new RegExp(".", "") and try to structuredClone its __proto__ property, Firefox says "can't clone RegExp.prototype", and Chromium says "here's your object"

[12:24:11.0578] <akaster>
Safari refuses to clone it too 

[12:34:24.0984] <Domenic>
Step 22 excludes the ones you're worried about

[12:35:29.0891] <akaster>
Right.. the best idea I've got for that step at the moment is checking whether my JS::Value is an object and it's class name is "Object" ðŸ˜…

[12:35:32.0042] <Domenic>
I do suspect the other two engines also do object type tagging, as it seems helpful for various optimizations

[12:36:52.0696] <akaster>
Yeah, Andreas was brainstorming a radical idea where we create custom vtables to check whether properties/methods are overridden and optimize based on that. But it seems overkill if I just want to get message serialization up and running to implement Workers properly

[12:38:15.0453] <akaster>
Eh. I'm sure some WPT tests for this and I can clean it up later 


2023-09-14
[00:29:08.0804] <Panos Astithas>
Meeting minutes: https://docs.google.com/document/d/1V6_s_VsaWcI9J-ZATbIKKijn59JbVmRMsHXYyH29sho/edit

[00:34:32.0360] <annevk>
If folks are interested in attending, the meeting information can be found at https://www.w3.org/events/meetings/efdf2435-c675-41ea-9af2-9fa6443e504c/

[00:34:58.0317] <hsivonen>
Are any break times known in advance?

[00:35:09.0161] <hsivonen>
Sevilla lunch time perhaps?

[00:36:07.0375] <annevk>
hsivonen: https://github.com/whatwg/meta/issues/284 has the agenda, breaks are between the items

[00:36:16.0398] <hsivonen>
Thanks

[00:36:28.0503] <annevk>
So the first break would be at 11. We haven't started yet though.

[00:36:41.0542] <annevk>
 * So the first break would be at 11AM in ~ 1.5h. We haven't started yet though.

[00:39:17.0821] <zcorpan>
Can remote folks hear us ok?

[00:40:52.0409] <krosylight | pto until 2023-09-10>
Yup

[00:40:58.0747] <hsivonen>
I can hear folks in the meeting room

[00:41:16.0757] <zcorpan>
https://whatwg.org/code-of-conduct

[02:39:58.0532] <keithamus>
https://docs.google.com/document/d/1V6_s_VsaWcI9J-ZATbIKKijn59JbVmRMsHXYyH29sho/edit minutes for those who want the link 

