2022-12-01
[23:54:25.0487] <hsivonen>
FYI regarding earlier discussion: https://github.com/orgs/mdn/discussions/242#discussioncomment-4274011 (TL;DR: MDN continuing to use Prettier without forking it.)

[00:07:25.0825] <annevk>
> The google style guides are almost an antithesis of what we are teaching at MDN.

o_O

[01:25:36.0988] <sideshowbarker>
https://stackoverflow.com/questions/74638920/iframe-issue-javascript-alert-dialog-block-from-parent-when-added-permissions-p

[01:29:54.0177] <sideshowbarker>
https://stackoverflow.com/questions/74630989/why-use-domstringlist-rather-than-an-array is probably worth an answer from somebody familiar, with details on its history (from somebody familiar with its history)

I don‚Äôt know enough to answer well there. I guess `DOMStringList` started out as something used in `window.location`‚Ä¶ for some reason, and then it got used with IndexedDB‚Ä¶ for some reason ‚Äî but then not used anywhere else, and won‚Äôt be, because `sequence<DOMString>` is the thing to use instead?

[01:30:21.0518] <sideshowbarker>
 * https://stackoverflow.com/questions/74630989/why-use-domstringlist-rather-than-an-array is probably worth an answer from somebody familiar with `DOMStringList`, with details on its history (from somebody familiar with its history)

I don‚Äôt know enough to answer well there. I guess `DOMStringList` started out as something used in `window.location`‚Ä¶ for some reason, and then it got used with IndexedDB‚Ä¶ for some reason ‚Äî but then not used anywhere else, and won‚Äôt be, because `sequence<DOMString>` is the thing to use instead?

[01:30:33.0486] <sideshowbarker>
 * https://stackoverflow.com/questions/74630989/why-use-domstringlist-rather-than-an-array is probably worth an answer from somebody familiar with `DOMStringList` ‚Äî¬†and answer with details on its history (from somebody familiar with its history)

I don‚Äôt know enough to answer well there. I guess `DOMStringList` started out as something used in `window.location`‚Ä¶ for some reason, and then it got used with IndexedDB‚Ä¶ for some reason ‚Äî but then not used anywhere else, and won‚Äôt be, because `sequence<DOMString>` is the thing to use instead?

[03:28:43.0034] <Domenic>
Answered. That was a fun one.

[03:34:12.0773] <sideshowbarker>
> <@domenicdenicola:matrix.org> Answered. That was a fun one.

wow yeah, really great answer ‚Äî thanks much

[03:41:50.0430] <sideshowbarker>
By the way, https://w3c.github.io/stackoverflow/ is a dashboard thing I put together recently ‚Äî for daily review of Stack Overflow Q&As for web-platform features (in part as a way to help get a better understanding of which web-platform features developers are actually using, and what their common pain points are)

It is just a set of links to some tag-based searches. If you mouse over the names of the feature sets like **Core** and **Graphics+typography**, it‚Äôll show you which tags it‚Äôs searching on. Or else if you just follow the links, the search-results pages all also show which tags the results are for.

[03:43:35.0068] <Domenic>
Oh, fun!

[08:41:17.0843] <dlrobertson>
annevk: re https://github.com/whatwg/fetch/pull/1520#discussion_r1037244005 do you have an example of a case where a internal model is specified?

[12:32:19.0260] <TabAtkins>
annevk: I'm trying to figure out how to say "if a URL's fragment is an ID reference" (rather than a Media Fragment, or one of those SVG fragment functions, or the like). Any opinions on how to phrase this?

[12:32:30.0949] <TabAtkins>
(I just need to carve out those other cases as Explicitly Undefined right now.)

[12:35:52.0876] <TabAtkins>
possibly the answer is to just not do that, and instead just unreservedly attempt to find an element with the given ID, and if it fails, handle the failure generically.

[12:36:04.0241] <TabAtkins>
(context: i'm cleaning up the spec text for https://github.com/w3c/csswg-drafts/issues/3320)

[13:01:21.0391] <annevk>
TabAtkins: perhaps HTML's fragment navigation thingie needs an abstraction, but that's where I'd look

[13:02:19.0052] <TabAtkins>
I'm end-running around the thing, since I need to handle "can't find the ID" the same way as "isn't an ID ref at all" anyway

[13:02:30.0829] <annevk>
https://html.spec.whatwg.org/#the-indicated-part-of-the-document

[13:02:58.0812] <annevk>
dlrobertson: Headers/Response/Request all do it pretty well I think

[13:03:14.0762] <dlrobertson>
üëçÔ∏è thanks I'll take a look

[13:03:37.0133] <annevk>
(really most WHATWG documents are good at separating private from public API)

[13:07:45.0788] <TabAtkins>
annevk: Hm, the "find a potential indicated element" is what I'm reproducing manually right now, so it would be nice to use it, but the algo specifies its "root" argument as a Document, not Document or ShadowRoot

[13:08:02.0436] <TabAtkins>
Well, I'm not doing the a-name resolution, but I could take or leave that

[13:14:20.0014] <annevk>
It should be possible to generalize to allow for another caller (while at the same time maybe constraining the name attribute stuff)

[13:14:27.0848] <annevk>
Gotta go for the day

[13:14:37.0472] <TabAtkins>
kk, i'll raise an issue. thanks for the help!


2022-12-02
[22:35:58.0269] <Domenic>
Would this be the first time WTF-16 is referenced as a public API name in a programming language? https://github.com/WebAssembly/stringref/blob/main/proposals/stringref/Overview.md

[22:36:06.0299] <Domenic>
`string.new_wtf8` etc.

[23:36:27.0587] <annevk>
Domenic: oh my. Is this on top of the previous "let's use UTF-8" or this some new iteration of that?

[23:47:54.0568] <annevk>
/me files https://github.com/WebAssembly/stringref/issues/54

[00:05:30.0090] <Domenic>
It seems like it's... separate? The previous thing was about the component model, which I think is about boundaries? Whereas this is about adding WTF-8/16 strings to WebAssembly itself?

[00:10:09.0116] <annevk>
I looked through the issues and they're even considering WTF-8 literals (which goes against Simon's spec)... I hope this is not a thing that has wide buy-in.

[00:15:36.0446] <Domenic>
Well, I think now is the time to give feedback through your local wasm committee member... I decided this was pretty low-level and mostly language-ey and not web platform-ey so I didn't have very strong opinions.

[00:16:04.0328] <Domenic>
That is, it seems icky to introduce WTF-* strings into a new programming language in this day and age, but wasm isn't really a new programming language anyway, it's a compile target for old ones, so...

[00:20:54.0317] <annevk>
Domenic: yeah I filed an issue and pinged someone internally. I personally see Wasm as more than just a compile target. At least I'd like them to be more ambitious than that.

[00:21:50.0017] <annevk>
I also don't understand the zero-copy requirement. Given the myriad of JS string types JS engines have, that seems improbable.

[00:22:26.0987] <Domenic>
I think there's only generally two types, strings and ropes. Presumably ropes need to be flattened, but basic strings wouldn't.

[00:22:54.0044] <Domenic>
Hmm, although there's also the 8-bit latin1 vs. 16-bit distinction

[00:23:46.0044] <annevk>
Right, I think in Gecko it ended up at 16 variants total at one point, but maybe that changed

[00:24:40.0591] <annevk>
I would expect Andy Wingo to know that though, so not sure what's up

[01:09:58.0560] <hsivonen>
annevk: What's the use case for an external spec being able to set _beStrict_ to true here https://url.spec.whatwg.org/#idna ? What external spec sets it to true?

[01:26:09.0628] <annevk>
hsivonen: it's not meant for an external spec, it's meant for https://url.spec.whatwg.org/#valid-domain

[01:26:36.0540] <annevk>
hsivonen: no external spec can call those algorithms, they have to go through the host parser

[01:28:30.0735] <hsivonen>
> <@annevk:matrix.org> hsivonen: no external spec can call those algorithms, they have to go through the host parser

That _beStrict_ didn't occur in the caller part of the spec confused me

[01:29:27.0326] <hsivonen>
Positional arguments vs. keyword arguments in specs...

[01:29:54.0187] <annevk>
hsivonen: I could probably remove the default, I'm not even sure why I gave it one

[01:30:55.0849] <hsivonen>
Anyway, it looks like I need to support setting UseSTD3ASCIIRules both ways, but I don't need to support transitional processing.

[01:33:18.0588] <annevk>
hsivonen: I'll make that change and I'll also add beStrict to domain to Unicode for the same reason (URL has 2 callers for Unicode ToUnicode at the moment)

[01:34:21.0073] <hsivonen>
> <@annevk:matrix.org> hsivonen: I'll make that change and I'll also add beStrict to domain to Unicode for the same reason (URL has 2 callers for Unicode ToUnicode at the moment)

Thanks. Aside: It's super confusing what the level of operation reuse in ToASCII and ToUnicode is. It turns out that Gecko uses ICU4C's ToUnicode operation as the back end for both!

[01:35:05.0051] <annevk>
Domenic: could you review https://github.com/whatwg/url/pull/717 and https://github.com/whatwg/url/pull/719?

[01:35:35.0676] <Domenic>
Will do, although maybe not until next week.

[01:36:51.0022] <annevk>
hsivonen: hopefully it being part of Interop 2022 (and likely 2023) will make IDNA handling a bit more understood and worked upon, but it's been rather frustrating trying to make progress on it

[01:37:09.0208] <hsivonen>
I note that the URL Standard at least hard-codes three of the flags: CheckHyphens set to false, CheckBidi set to true, CheckJoiners set to true. Now I'm curious about the history of those being flags in UTS 46.

[01:37:26.0664] <annevk>
hsivonen: including with people deciding out-of-band that non-transitional is suddenly okay without much coordination across browsers and such, very weird

[01:38:20.0248] <annevk>
hsivonen: right yeah this doesn't make sense as an end state to me, UTS 46 can and should probably simplify 

[01:39:15.0229] <annevk>
(and then Chromium advertising this as an IDNA2008 thing which UTS 46 does rather specific things with is also concerning, but hopefully it'll all work out)

[01:40:06.0302] <hsivonen>
(Context: https://github.com/unicode-org/icu4x/issues/2850 )

[01:49:14.0585] <annevk>
hsivonen: you want to review https://github.com/whatwg/url/pull/720?

[01:53:15.0664] <annevk>
Thanks!

[02:19:44.0790] <Ms2ger üíâüíâüíâ>
> * <@annevk:matrix.org> files https://github.com/WebAssembly/stringref/issues/54

Thanks. Fwiw, Andy is out for the next few months, and I doubt we'll make significant changes before he returns


2022-12-07
[01:41:30.0312] <Daniel Mil, van>
Hello, I don't know if the question belongs here, but I was currently involved in a design question like https://discourse.wicg.io/t/waituntil-on-dom-events/2056 and was curious for the possible answer (see http://discourse.wicg.io/t/waituntil-on-dom-events/2056/3). Anyone?

[02:38:17.0829] <Domenic>
I think the comment right after the one you linked is the answer.

[04:34:05.0286] <Daniel Mil, van>
> <@domenicdenicola:matrix.org> I think the comment right after the one you linked is the answer.

Thanks for the answer. But then I was wondering why ExtendableEvent (from the ServiceWorker API) does support async dispatching with the same API?

[04:34:38.0515] <Domenic>
It doesn't support async dispatching. It supports giving a promise to the browser which tells it not to shut down the service worker until the promise is done.

[04:34:46.0608] <Domenic>
That promise doesn't extent event dispatch in any way

[04:34:53.0978] <Domenic>
(E.g. you cannot cancel the event asynchronously)

[04:35:10.0482] <Daniel Mil, van>
ah ok

[04:35:13.0293] <Daniel Mil, van>
interesting

[04:36:02.0191] <Daniel Mil, van>
I had to review some code and a colleage implemented something like: https://github.com/rektide/async-event-target

[04:37:02.0406] <Daniel Mil, van>
For some reason this doesn't seem right and I was wondering why this would be the case, but although it "feels" wrong I can't seem to find the good arguments not to do so

[04:40:06.0241] <Daniel Mil, van>
the comment here http://discourse.wicg.io/t/waituntil-on-dom-events/2056/3 also says: "That requires way too much changes", not that's it's not possible or not a valid use case? 

[04:40:19.0735] <Daniel Mil, van>
we could also chat in private is this is not the place to discuss this here

[04:41:50.0403] <Domenic>
It seems fine to create your own thing if you have no other way of solving the problem. The platform doesn't provide it, and we definitely can't change every EventTarget on the platform to provide it.

[04:42:15.0976] <Domenic>
Heading to bed now myself, but others might have thoughts :)

[04:42:55.0098] <Daniel Mil, van>
thanks!

[05:02:18.0685] <annevk>
mek: https://github.com/whatwg/fs/pull/78


2022-12-08
[08:29:24.0804] <annevk>
While getting groceries I realized that `Response.error()` prolly exists for service workers. If they return one, do you get a rejected fetch?

[09:46:26.0347] <annevk>
Jake Archibald: so based on `error_response` in WPT `service-workers/` it seems like there is some expectation that `Response.error()` is not turned into an exception similar to a network error. At least I think the cache test tries to store and retrieve it as-is.

[09:54:06.0293] <annevk>
It does seem that responding with `Response.error()` from a service worker is treated as a network error, nice.


2022-12-09
[00:33:48.0890] <Jake Archibald>
annevk: are you saying that Chrome's implementation is doing the right thing (`Response.error()` returned from the service worker results in a failed fetch), but some tests suggest it should do something different?

[00:44:09.0463] <annevk>
Jake Archibald: I think the main oddity I found is that you can store it in the Cache API

[00:44:31.0792] <annevk>
Jake Archibald: which both does and does not make sense, so I guess it's okay

[00:50:55.0958] <Jake Archibald>
annevk:  hmm yeah, I see what you mean. I guess it's fine. The only way to get one of those errors is `Response.error()` right?

[01:00:30.0400] <annevk>
Jake Archibald: yes

[01:01:10.0612] <Jake Archibald>
yeah, it's fine I think. Having errors end up in the cache unintentionally might be an issue.

[01:01:21.0675] <Jake Archibald>
But it seems like it has to be pretty intentional now

[03:35:09.0674] <annevk>
Weird, I'm suddenly getting `hgroup` errors again for whatwg/url PRs

[03:36:21.0670] <annevk>
As far as I can tell bikeshed-boilerplate and bikeshed-data are both good. TabAtkins is api.csswg.org known to sometimes use an old version or some such?

[03:36:48.0148] <annevk>
sideshowbarker did something change in the validator perhaps?

[03:40:11.0776] <annevk>
Also weird, PR Preview still has an `h2` in the `hgroup`. I guess it uses some other kind of template?

[03:49:29.0741] <annevk>
Hmm, seems to have been some kind of fluke? Builds are passing again. Very weird.

[03:57:24.0458] <sideshowbarker>
> <@annevk:matrix.org> sideshowbarker did something change in the validator perhaps?

Not sure. We did recently update the checker to align with the current spec. But that was weeks ago, and nothing since then

[03:59:58.0532] <annevk>
Yeah, looks like it was an api.csswg.org fluke of some sort.

[04:00:01.0618] <annevk>
Thanks!

[04:45:10.0041] <Domenic>
It might be because the PRs are not rebased on main

[04:51:36.0316] <annevk>
Domenic: that would not explain it failing first and later passing without changes to the PR

[04:52:36.0397] <annevk>
If you're curious you can look at the two commits of https://github.com/whatwg/url/pull/722. First one still has its failing result. The second also failed, but I ran CI again.


2022-12-11
[04:37:06.0847] <Andreas Kling>
howdy folks! I'm working on implementing <link> on top of fetch primitives, and I've hit a problem:

[04:37:29.0634] <Andreas Kling>
fast-forwarding through all the setup and most of fetch itself, once we get to `fully read` (https://fetch.spec.whatwg.org/#body-fully-read) step 5, we're asked to `react` (https://webidl.spec.whatwg.org/#dfn-perform-steps-once-promise-is-settled) which ends up calling `PerformPromiseThen` (https://tc39.es/ecma262/#sec-performpromisethen) which calls `HostMakeJobCallback` (https://html.spec.whatwg.org/multipage/webappapis.html#hostmakejobcallback)

[04:37:37.0314] <Andreas Kling>
in `HostMakeJobCallback` it wants the incumbent settings object, but since I'm just reacting to the HTML tree-build, there's no script-having execution context present. this breaks the assertion in `incumbent settings object` step 2.1 (https://html.spec.whatwg.org/multipage/webappapis.html#incumbent-settings-object)

[04:37:46.0403] <Andreas Kling>
what am I missing here? was something above supposed to do a "prepare to run callback" (and thus populating the backup incumbent settings object stack)? or could this be a spec issue? (if the spec assumes that fetch operations always happen within some kind of JS execution context)

[04:58:09.0540] <Noam Rosenthal>
Oh hello Andreas Kling 

[04:58:33.0672] <Noam Rosenthal>
Fetching always assumes there's an environment settings object

[04:58:55.0248] <Noam Rosenthal>
in this case, the document. <link> always fetches with the document as the environment settings object

[04:59:11.0389] <Noam Rosenthal>
the whole thing with promises is a bit out-of-spec, `<link>` doesn't work on top of the JS `fetch()`

[05:00:28.0532] <Noam Rosenthal>
specifically it's the request's client (https://fetch.spec.whatwg.org/#concept-request-client)

[05:01:38.0680] <Andreas Kling>
hmm okay, so am I doing something wrong and I shouldn't end up in "fully read a body" in the first place?

[05:02:22.0630] <Andreas Kling>
or what do you mean the thing with promises is a bit out-of-spec? :)

[05:02:40.0110] <Noam Rosenthal>
oh I see what you mean, I forgot about that bit

[05:25:34.0112] <Noam Rosenthal>
Andreas Kling: following the spec:
`PerformPromiseThen` 10.b: Let fulfillJob be `NewPromiseReactionJob(fulfillReaction, value)`.
`NewPromiseReactionJob` 1.e: let handlerResult be Completion(HostCallJobCallback(handler, undefined, ¬´ argument ¬ª)) (https://tc39.es/ecma262/#sec-newpromisereactionjob
)
`HostCallJobCallback(callback, V, argumentsList)`: 3.: Prepare to run a callback with incumbent settings. https://html.spec.whatwg.org/multipage/webappapis.html#hostcalljobcallback

The latter pushes to the backup stack

[05:25:57.0613] <Noam Rosenthal>
https://html.spec.whatwg.org/multipage/webappapis.html#prepare-to-run-a-callback (1.:Push settings onto the backup incumbent settings object stack.)

[05:27:18.0703] <Noam Rosenthal>
seems super-complex, I've never touched this part of the spec TBH

[05:27:20.0881] <Andreas Kling>
earlier in `PerformPromiseThen` step 4.a, we call `HostMakeJobCallback`(https://html.spec.whatwg.org/multipage/webappapis.html#hostmakejobcallback), that's when the assertion fails

[05:28:15.0865] <Andreas Kling>
agree this is very complex

[05:28:33.0906] <Andreas Kling>
 * earlier in `PerformPromiseThen` step 4.a, we call `HostMakeJobCallback`(https://html.spec.whatwg.org/multipage/webappapis.html#hostmakejobcallback), that's when the assertion fails

[05:56:05.0974] <Noam Rosenthal>
Andreas Kling: some of it is a bit out of my comfort zone, but I think that if Fetch had a prepare-to/cleanup-after callback pair before/after the promise, with the task destination as the parameter, it would create the right result. I'm sure other people here can validate better though

[06:05:23.0759] <Andreas Kling>
hmm all right. curiously, we already do basically that as a workaround in our implementation of `HostEnqueuePromiseJob` since a while back: https://github.com/SerenityOS/serenity/commit/25909dcc051db82bf7ab4e554a8eb8ec8b173863

[06:06:04.0944] <Andreas Kling>
would be great to have spec clarity on all relevant situations here. understood that it's outside your comfort zone, thanks for the help so far! :)

[06:07:58.0544] <Noam Rosenthal>
Yea I agree it needs clarity. If this is validated I'd be happy to help with a Fetch PR

[06:08:19.0949] <Andreas Kling>
much appreciated!

[06:25:38.0685] <Noam Rosenthal>
Andreas Kling: I think actually a cleaner version would be to create a read request (https://streams.spec.whatwg.org/#read-request) in `fully read a body` (https://fetch.spec.whatwg.org/#body-fully-read) and not deal with promises at all

[06:28:45.0778] <Andreas Kling>
I'm not familiar enough with streams (yet) to tell if that's a good idea, but I welcome any simplification :)

[06:30:04.0044] <Noam Rosenthal>
I believe Mattias Buelens can shed some light here

[09:10:16.0118] <Mattias Buelens>
Hmm, this is indeed a bit awkward. We have "read a chunk" which takes a read request with chunk steps and error steps, which nicely keeps promises out of your way. However, "read all bytes" (https://streams.spec.whatwg.org/#readablestreamdefaultreader-read-all-bytes) still returns a promise...

I'd say the better solution would be to refactor that abstract op in Streams, so it takes "success steps" and "error steps" instead.


2022-12-12
[20:55:44.0280] <Noam Rosenthal>
Mattias Buelens: `read all bytes` is a exported, so probably we need to create another one and have `read all bytes` call that? Or do we know that it's not in use outside of `streams`?

[22:47:32.0637] <Noam Rosenthal>
https://github.com/whatwg/fetch/issues/1568

[23:24:09.0943] <Mattias Buelens>
Usually we just track down all call sites across other specs and open pull requests to change those too. üôÇ

[00:03:50.0475] <Noam Rosenthal>
Mattias Buelens: where do you track those?

[00:04:31.0180] <Noam Rosenthal>
s/you/we

[00:06:04.0739] <Ms2ger üíâüíâüíâ>
Noam Rosenthal: are you aware of https://dontcallmedom.github.io/webdex/ ?

[00:09:58.0952] <Noam Rosenthal>
Ms2ger üíâüíâüíâ: I was NOT aware of this. This changes my life retroactively

[00:10:50.0281] <Ms2ger üíâüíâüíâ>
I wish we had better ways to share information like this than mentioning them occasionally on matrix

[00:34:33.0402] <Noam Rosenthal>
Mattias Buelens: seems like callers rely on the promise behavior, so I preferred to add a new function. https://github.com/whatwg/streams/pull/1250
/cc Andreas Kling 

[01:10:58.0357] <annevk>
Ms2ger üíâüíâüíâ: https://github.com/whatwg/meta/pull/265 as a start

[01:11:42.0916] <annevk>
It's not quite PR template necessary just yet I think, but maybe at some point

[02:00:04.0819] <annevk>
Andreas Kling: note https://github.com/whatwg/streams/issues/1178 as well; the streams integration is rather messy due to there not being a clean separation between platform streams and JS streams

[02:02:04.0417] <annevk>
Andreas Kling: also, I saw you were looking at `file:` URLs, given that you're developing a new OS I'm not sure how much guidance Fetch could give, but presumably you want unix-y behavior? (Also made me wonder if you considered using a novel newline code point to mess with everyone.)

[02:03:44.0167] <Andreas Kling>
our system fully Unix-like when it comes to filesystem things, so anything that works for Linux/BSD/etc would be good enough for us too :)

[02:05:06.0582] <Andreas Kling>
I was mostly just amused by `file:` being an "exercise for the reader" per the spec

[02:05:19.0336] <Andreas Kling>
 * I was mostly just amused by `file:` being an "exercise for the reader" per the spec

[02:09:28.0906] <annevk>
Andreas Kling: we do define `file:` URL parsing, but unfortunately there's another one of these: https://url.spec.whatwg.org/#origin

[02:10:15.0709] <annevk>
(Browsers are somewhat close to making that an opaque origin, but I think there's still a bunch of special cases.)

[06:39:42.0513] <annevk>
I kinda wanna try Mastodon but having to pick a server is making it difficult

[06:46:23.0564] <annevk>
https://til.simonwillison.net/mastodon/custom-domain-mastodon looks interesting but apparently https://masto.host/pricing/ had too many interested parties

[06:49:55.0833] <littledan>
> <@annevk:matrix.org> I kinda wanna try Mastodon but having to pick a server is making it difficult

Hachyderm.io has worked well for me; I feel like I can trust the moderation policy and technical administration.

[06:56:03.0910] <littledan>
Standards discussions are starting to happen on Mastodon, but I had trouble responding due to client instability haha

[06:56:07.0522] <annevk>
Yeah I guess if I don't do my own domain name that's pretty good. And I didn't really attempt the own domain name with Matrix either...

[06:56:55.0109] <annevk>
I heard good things about Ivory but it's not yet finished

[06:58:00.0371] <annevk>
https://tapbots.social/@ivory/109433914793802708 (some podcasters I listen to have access to the beta)

[06:58:38.0828] <annevk>
 * https://tapbots.social/@ivory/109433914793802708 (some podcasters I listen to have access to the beta)

[06:59:08.0119] <networkException>
> <@annevk:matrix.org> I heard good things about Ivory but it's not yet finished

For iOS Metatext is quite nice 

[08:13:12.0811] <annevk>
> The dir IDL attribute on Document objects must reflect the dir content attribute of the html element, if any, limited to only known values. If there is no such element, then the attribute must return the empty string and do nothing on setting.

Cursed.

[09:02:31.0027] <annevk>
> Running again to show the original line numbers.

Domenic sideshowbarker it seems this might no longer be needed? At least for me these numbers were the same.

[13:46:07.0883] <TabAtkins>
annevk: what was the context of that? if it was bikeshed, then while I try to surface line numbers when possible automatically, i can't do it all the time (since lxml sucks), thus the special mode that does destructive edits to get more line numbers in.

[14:44:40.0668] <Domenic>
annevk: they're almost never the same for me. You might've got lucky, or edited something early in the file.

[14:44:52.0855] <Domenic>
They're different because of the various insert-blocks-of-text-here steps.


2022-12-13
[00:29:13.0677] <freddy>
> <@annevk:matrix.org> I kinda wanna try Mastodon but having to pick a server is making it difficult

You can migrate servers which will automatically migrate followers too. With that, I think choosing (and switching) servers are not as problematic. 

[00:29:35.0633] <freddy>
btw, https://docs.joinmastodon.org/user/run-your-own/#so-you-want-to-run-your-own-mastodon-server has a list of more server providers than just masto.host, if you want to choose your own domain

[02:40:35.0818] <Alejandra Ba√±uelos>
E

[02:48:35.0411] <Alejandra Ba√±uelos>
E

[04:16:46.0352] <Alejandra Ba√±uelos>
Alejandra Ba√±uelos: 

[04:25:08.0876] <banuelosalejandra391@gmail.com>
Alejandra Ba√±uelos: Alejandra Ba√±uelos: Alejandra Ba√±uelos 

[04:25:11.0988] <banuelosalejandra391@gmail.com>
Q

[13:32:49.0354] <sideshowbarker>
> <@annevk:matrix.org> > Running again to show the original line numbers.
> 
> Domenic sideshowbarker it seems this might no longer be needed? At least for me these numbers were the same.

Interesting. Dunno, will look today

[14:26:09.0831] <sideshowbarker>
Domenic: https://stackoverflow.com/questions/74136196/why-does-web-streams-api-lack-duplex-stream

[14:29:29.0080] <Andreu Botella>
You can use a `ReadableWritablePair` which works with `passThrough()`


2022-12-14
[16:16:22.0236] <Domenic>
I don't know what `ReadableWritablePair` is, but indeed, any `{ readable, writable }` object works with `pipeThrough()`.

[16:16:56.0341] <Andreu Botella>
That's the dictionary type name for `{readable, writable}`

[16:17:02.0085] <Andreu Botella>
https://streams.spec.whatwg.org/#dictdef-readablewritablepair

[16:17:11.0217] <Andreu Botella>
 * That's the dictionary type name for `{readable, writable}`

[16:17:17.0718] <Domenic>
Ah, so it is.

[01:19:33.0896] <annevk>
sideshowbarker: please don't, as Domenic mentioned I hit a rather unusual case.

[02:02:35.0937] <sideshowbarker>
> <@annevk:matrix.org> sideshowbarker: please don't, as Domenic mentioned I hit a rather unusual case.

Ah ok, I hadn't managed to make time yet to look anyway :)

[03:31:42.0532] <krosylight|out-until-Jan-6>
A stream question:

```js
var readableStream = new ReadableStream({
  start(controller) {
    controller.enqueue(new Uint8Array(40));
  },
  type: 'bytes'
});
var [branch1, branch2] = readableStream.tee();
reader1 = branch1.getReader({mode: 'byob'});
console.log(await reader1.read(new Uint8Array(8)))
reader2 = branch2.getReader({mode: 'byob'});
console.log(await reader2.read(new Uint8Array(12)))
```

The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?

[03:31:52.0063] <krosylight|out-until-Jan-6>
 * A stream question:

```js
var readableStream = new ReadableStream({
  start(controller) {
    controller.enqueue(new Uint8Array(40));
  },
  type: 'bytes'
});
var [branch1, branch2] = readableStream.tee();
reader1 = branch1.getReader({mode: 'byob'});
console.log(await reader1.read(new Uint8Array(8)))
reader2 = branch2.getReader({mode: 'byob'});
console.log(await reader2.read(new Uint8Array(12)))
```

The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected?

[03:32:14.0410] <mztea9281>
krosylight|out-until-Jan-6: 

[03:32:24.0395] <krosylight|out-until-Jan-6>
 * A stream question:

```js
var readableStream = new ReadableStream({
  start(controller) {
    controller.enqueue(new Uint8Array(40));
  },
  type: 'bytes'
});
var [branch1, branch2] = readableStream.tee();
reader1 = branch1.getReader({mode: 'byob'});
console.log(await reader1.read(new Uint8Array(8)))
reader2 = branch2.getReader({mode: 'byob'});
console.log(await reader2.read(new Uint8Array(12)))
```

The first call obviously gets a view with length 8, and surprisingly the second call also gets a length 8 one instead of 12. Is this expected? If then what should a dev do to get 12-length view for the second call?

[03:40:45.0288] <krosylight|out-until-Jan-6>
Hmm, Blink somehow fails to get byte stream from tee() while Node.js has the same behavior with Gecko

[04:43:32.0422] <Domenic>
Blink indeed is still working on implementing https://github.com/whatwg/streams/commit/cada8129edcc4803b2878a7a3f5e1d8325dc0c23

[04:44:10.0754] <Domenic>
That behavior is expected because the source readableStream has already sliced out 8 bytes and handed that chunk to each branch

[04:44:32.0384] <Domenic>
If you want 4 more bytes you'd need to request them. (That will then slice another 4-byte chunk for each branch.)

[04:45:36.0804] <Domenic>
https://github.com/whatwg/streams/pull/1145 would be helpful for that, as it would aggregate the 8-byte and 4-byte chunks for you

[04:46:19.0308] <Domenic>
If Firefox is interested in implementing that I believe we can merge it.

[04:51:24.0332] <jgraham>
Hmm, so I think I thought that browsing context groups were 1:1 with agent clusters, but it seems like they aren't.

More concretely what I want to know is "what's the set of browsing contexts that can access each other's DOM nodes?". Specifically for WebDriver-BiDi we want to be able to vend a reference to a Node that's usable in any context where that Node is reachable, but not outside of that context (so e.g. I should be able to write a BiDi script that gets a reference to, say, `window.opener.body` in some Window, assuming that's permitted by the security policy, and then use that reference in the opener Window to get the `<body>` element).

[04:51:37.0456] <jgraham>
 * Hmm, so I think I thought that browsing context groups were 1:1 with agent clusters, but it seems like they aren't.

More concretely what I want to know is "what's the set of browsing contexts that can access each other's DOM nodes?". Specifically for WebDriver-BiDi we want to be able to vend a reference to a Node that's usable in any context where that Node is reachable, but not outside of that context (so e.g. I should be able to write a BiDi script that gets a reference to, say, `window.opener.body` in some Window, assuming that's permitted by the security policy, and then use that reference in the opener Window to get the `<body>` element).

[06:38:09.0186] <annevk>
jgraham: that would be all the browsing contexts belonging to a single agent cluster that belongs to a browsing context groups, though that gives you "can potentially access" (as some of those might only be same origin-domain once you use `document.domain`)

[06:40:03.0351] <annevk>
jgraham: https://docs.google.com/presentation/d/1hi4gH7pJPHsg_hnIj77XN_ce54HIaNUnBLenVwohFVo/edit#slide=id.g5641ecbac9_0_0 and slide 13 give an overview (related slides have approximate definitions)

[07:28:21.0328] <jgraham>
Hmm, that seems distressingly complex. So given _node_ and _document_, is there an easy way to tell if _document_ is reachable from _node_'s Document?

[07:28:33.0569] <jgraham>
 * Hmm, that seems distressingly complex. So given _node_ and _document_, is there an easy way to tell if _document_ is reachable from _node_'s Document?

[07:36:06.0502] <annevk>
jgraham: maybe through IsPlatformObjectSameOrigin? Though that feels a bit hack-ish

[07:37:36.0702] <annevk>
jgraham: I guess you can compare node's node document's surrounding agent's agent cluster with document's surrounding agent's agent cluster? Again, this gives you potentially reachable, not reachable.

[07:45:37.0431] <jgraham>
Yeah, so IsPlatformObjectSameOrigin doesn't work for mechanical reasons at least (it's not clear that Current Realm is well defined when you're calling from WebDriver, so you'd need to write an equivalent algorithm that takes a realm (or document or whatever) as a parameter).

[07:48:02.0269] <jgraham>
The difference between potentially reachable and reachable also seems relevant; it would be surprising if you could use WebDriver to get an element from document A in document B if that would usually require both A and B to set document.domain.


2022-12-15
[17:04:31.0233] <krosylight|out-until-Jan-6>
> <@domenicdenicola:matrix.org> https://github.com/whatwg/streams/pull/1145 would be helpful for that, as it would aggregate the 8-byte and 4-byte chunks for you

Thanks! I'm off for the rest of the year, I'll look into it next year

[01:26:55.0601] <mztea9281>
That‚Äôs alot

[01:27:53.0125] <annevk>
Yeah, kinda weird that it's a download. Anyway, I wish we had ways to prevent PRs from getting to that point.

[01:42:05.0586] <annevk>
Automatic formatting might go a long way.

[01:43:12.0878] <sideshowbarker>
Some kind of heads-up bot/automation is imaginable: When a PR reaches some configured threshold of number of comments (or rate of comments during a day or week), the bot comments with an alert saying, "This PR has accumulated a lot of comments"

[01:44:55.0760] <sideshowbarker>
...and then you could step back and reconsider if there's some change that could be made so that it doesn't end up accumulating even more

[02:02:33.0531] <annevk>
Well, this isn't a heated discussion. It's the popover PR and as far as I can tell it's all constructive. It's just a big change with a lot of details to get right. Perhaps though we need something similar to TC39's staging process for bigger changes?

[02:39:42.0033] <sideshowbarker>
Maybe so ‚Äî but in general, it seems like when a PR has that many review changes, it has probably also been open for quite a long time, and if so, then you run into the technical problems of merge conflicts, and also the problem that the PR author and reviewers just get fatigued with it all

[02:40:28.0025] <sideshowbarker>
so sometimes I guess it can be an opportunity to step back and consider doing some kind of course correction ‚Äî breaking it into smaller commits if possible, or whatever

[02:42:00.0227] <sideshowbarker>
but all that said, I know well that for some of the HTML PRs, it‚Äôs kind of unavoidable ‚Äî because it‚Äôs necessary to touch a lot of places in the spec, and the relationships between the different parts can be complex

[02:42:21.0005] <sideshowbarker>
 * but all that said, I know well that for some of the HTML PRs, it‚Äôs kind of unavoidable ‚Äî because it‚Äôs necessary to touch a lot of places in the spec, and the relationships between the different parts can be complex

[03:06:18.0915] <moekhar khar>
hi

[04:02:04.0122] <jgraham>
Well another problem is ecossytem breakage. For example all the navigation changes in HTML have totally broken WebDriver so the spec won't even build because there were breaking changes in the "API surface" of the HTML spec. And on the one hand, I get it that we want to make these changes and "just let the rest of the ecosystem deal with the fallout" is probably the only practical way to get it landed at all, but on the other hand you wouldn't get away with that kind of thing in a software project.

[04:08:52.0640] <jgraham>
I think my point, such as it is, is that because it's nonsense to "pin" an older version of a spec, the full set of web specs is essentially a (structured) monolith. But we treat them like they're independent "libraries" because we don't have the tooling required to handle the non-local impact of changes upfront.

[04:47:17.0758] <Ms2ger üíâüíâüíâ>
> <@jgraham_:matrix.org> Well another problem is ecossytem breakage. For example all the navigation changes in HTML have totally broken WebDriver so the spec won't even build because there were breaking changes in the "API surface" of the HTML spec. And on the one hand, I get it that we want to make these changes and "just let the rest of the ecosystem deal with the fallout" is probably the only practical way to get it landed at all, but on the other hand you wouldn't get away with that kind of thing in a software project.

For someone who's dealt with the python 2 to 3 transition, you're quite positive about software :)

[04:58:02.0342] <jgraham>
Well that's fair. But I was thinking more about what you'd get away with in like a web browser where "sorry we updated the DOM internals so now the browser doesn't build" wouldn't fly. Or at an even bigger scale, something like the Google monorepo where you can't just check in breaking changes, but there's a lot of tooling support to make larger refactorings possible.

[05:07:48.0847] <annevk>
jgraham: we tend to patch downstream proactively. Perhaps https://dontcallmedom.github.io/webdex/ wasn't used enough for the navigation changes, but I would expect people to try and do some due diligence on that front.

[05:10:12.0011] <Ms2ger üíâüíâüíâ>
Would be interesting to have tooling that surfaces which definitions disappear in a given PR - I guess there were plenty in the navigation pr

[05:23:51.0860] <annevk>
Useful output diffs would help with that as well. It's one of the downsides of only checking in the source. But yeah, disappearing IDs are one of the other things people tend to overlook.

[05:26:49.0077] <jgraham>
Well ultimately the way you handle this is for changes to a lib/API/spec to build all consumers of that in CI, so you can see breakage directly. But we're far away from having that kind of tooling.

[06:12:06.0082] <annevk>
Domenic: if you could give https://github.com/whatwg/html/pull/8496 another look tomorrow or so to validate the approach that would be appreciated; turns out "reflect" does a lot of heavy lifting, though we might be able to improve that over time


2022-12-16
[17:20:00.0601] <Domenic>
We audited the IDs in the navigation API PR and preserved as many as we could. https://docs.google.com/document/d/1yxnzjRDVmAR5CC9GcAyY448lBD0u0E98eUEMHDhx1Dw/edit#heading=h.wljr2vzc2ntc

[17:20:05.0081] <Domenic>
The exported terms did indeed change

[17:21:03.0647] <Domenic>
But WebDriver and other parts of the ecosystem were very broken (using browsing contexts, and thus not working whenever COOP happened) so arguably it's just an improvement to have HTML updated, even if WebDriver was not.

[17:21:12.0948] <Domenic>
We did indeed file issues on places like WebDriver.

[17:21:20.0314] <Domenic>
And are willing to help advise on the best fixes.

[19:16:14.0504] <Aditya Shankar>
hey, I'm sorry for like just jumping in here lol

[19:16:57.0238] <Aditya Shankar>
I believe there should be an extra specification in html, for mastodon like distributed social media services to be able to connect with each other, just like there is for us to be able to send using any emailing service

[19:18:26.0758] <Aditya Shankar>
one of the issues with distributed social media services like mastodon is its impossible to "follow" another individual on another mastodon server without "copy pasting" the link to that server to another website

and this partially is because there is no distributed spec through which this is possible within the web itself

[19:19:10.0684] <Aditya Shankar>
idk if this is too naive a question, or it perhaps doesn't matter because distributed social media services aren't popular and this may not be worth doing

[19:19:48.0882] <Aditya Shankar>
but yeah, basically I'm curious to if there are any solutions in the html spec that can be used to overcome this issue - without centralization

[19:20:12.0499] <Aditya Shankar>
I'm really sorry if this question is to naive or if I've come to the wrong forum to ask about this

[20:12:03.0791] <Domenic>
Normally for new features the process is https://whatwg.org/faq#adding-new-features . Here I guess it's a bit unclear whether the feature you're suggesting is a web platform feature at all (instead of, e.g., something that different social networking services should coordinate on building into their websites). But that might still be a useful starting point.

[23:35:14.0560] <annevk>
I think Mastodon and such might even be based around https://w3c.github.io/activitypub/? Haven't looked at it too deeply, but that name came up.

[01:42:12.0035] <annevk>
freddy: at some point we discussed `setHTML(input, { sanitize: "unsafe-none" })`, right?

[01:42:32.0485] <freddy>
I have never heard of this.

[01:42:36.0378] <annevk>
freddy: we might still need that, but it would prolly be bad to only ship that at first

[01:43:25.0193] <freddy>
What is "that"? A Sanitizer that doesn't sanitize? I suppose you could use innerHTML instead?

[01:44:06.0130] <annevk>
freddy: it's using the parser without a sanitizer

[01:44:36.0852] <annevk>
freddy: and you can't really use `innerHTML` as you might have to set some other option, such as `enableShadowRoots: true`

[01:56:48.0575] <sideshowbarker>
> <@annevk:matrix.org> I think Mastodon and such might even be based around https://w3c.github.io/activitypub/? Haven't looked at it too deeply, but that name came up.

Seems so, but with a couple of proprietary extensions https://github.com/mastodon/mastodon/blob/main/FEDERATION.md

[02:00:14.0110] <sideshowbarker>
The ActivityPub community has a Matrix space with a bunch of rooms #activitypub-community:codelutin.com 

[02:04:07.0720] <sideshowbarker>
#fediverse:pixie.town seems to be the main room

[04:41:00.0796] <Aditya Shankar>
> <@domenicdenicola:matrix.org> Normally for new features the process is https://whatwg.org/faq#adding-new-features . Here I guess it's a bit unclear whether the feature you're suggesting is a web platform feature at all (instead of, e.g., something that different social networking services should coordinate on building into their websites). But that might still be a useful starting point.

thank you!


2022-12-17
[19:15:14.0011] <sideshowbarker>
https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo has a couple of sections with info that seem also generally useful to anybody in our world who‚Äôs writing specs or designing APIs ‚Äî specifically, these sections:

- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#a-word-on-designing-apis
- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#philosophy

[19:15:43.0708] <sideshowbarker>
 * https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo has a couple of sections with info that seems also generally useful to anybody in our world who‚Äôs writing specs or designing APIs ‚Äî specifically, these sections:

- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#a-word-on-designing-apis
- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#philosophy

[19:15:50.0132] <sideshowbarker>
 * https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo has a couple of sections with info that seem also generally useful to anybody in our world who‚Äôs writing specs or designing APIs ‚Äî specifically, these sections:

- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#a-word-on-designing-apis
- https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#philosophy


2022-12-19
[20:22:34.0034] <olekpiasecki>
  hi

[20:23:00.0239] <mztea9281>
That‚Äôs wassup

[20:26:49.0449] <olekpiasecki>
ok ill try follow.i can try fix it . but i dont have the best brain like my grandma

[21:19:00.0936] <mztea9281>
‚ÄéUse this link to join a WhatsApp video call: https://call.whatsapp.com/video/YloA56FQVyaibkIXpSJ9Ix

[21:19:01.0710] <mztea9281>
‚ÄéUse this link to join a WhatsApp video call: https://call.whatsapp.com/video/YloA56FQVyaibkIXpSJ9Ix

[21:20:54.0035] <Dominic Farolino>
Can you throw an exception in steps that return a promise? Does that just magically reject the promise in WebIDL or...

[21:25:46.0886] <Dominic Farolino>
https://w3ctag.github.io/promises-guide/#always-return-promises seems to say no

[21:32:12.0093] <Dominic Farolino>
Oh nvm, it does say WebIDL should take care of things automatically

[23:38:20.0951] <annevk>
Dominic Farolino: I'm not sure if the promises guide is a good reference, I'd recommend reading Web IDL directly

[23:39:25.0031] <annevk>
Oh, I guess it has been overhauled since it no longer seems to include example prose

[23:39:36.0529] <annevk>
 * Oh, I guess it has been overhauled since it no longer seems to include example prose

[06:01:49.0708] <annevk>
So in order to avoid writing `document.documentElement` folks will write `<html id=html>` so they can use `html`.

[06:54:06.0689] <miketayl_r>
that's a fun hack

[06:56:16.0821] <annevk>
miketayl_r: will I encounter this on a slide at a future web developer meetup? üòÖ

[06:56:41.0365] <annevk>
Domenic: any interest in making the Live URL Viewer show the origin field?

[07:03:12.0074] <miketayl_r>
i'm going to start using `<html id=jQuery>` just to spite future me

[07:03:50.0949] <Andreu Botella>
`<html id=jQuery><body id="$">`

[07:08:29.0436] <Dominic Farolino>
What's the canonical way to start a timer for some task in spec prose? I would guess calling https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps, but that dfn isn't exported, and I'm certain we shouldn't call the actual DOM setTimeout() function from a spec algorithm...

[07:29:57.0143] <annevk>
Dominic Farolino: "run steps after a timeout"

[07:31:51.0945] <annevk>
Note that you'll have to queue your own task if you need one

[07:42:19.0754] <Dominic Farolino>
Thanks

[07:43:25.0707] <Dominic Farolino>
Btw what is the common way to assert that a set of steps are running i.e., on the main thread. Just something like Assert: These steps are running on the FOO task source? Not sure if there is a more formal way...

[07:45:38.0551] <hacknorris>
ey - someone knows if **comment** is a self-closing tag in xml/html/xhtml/html5 ?
means - this comment : `<!-- thing -->` not `<comment> thing </comment>` as was somewhen in IE...

[07:46:37.0760] <hacknorris>
cause for me it looks even more out of specs than doctype tag...

[07:52:48.0326] <hacknorris>
 * cause for me it looks even more out of specs/inconsistent than doctype tag...

[08:09:26.0272] <hacknorris>
cause while i can know that doctype is self-closing for comment there is no such info

[08:10:03.0503] <annevk>
Dominic Farolino: maybe assert there's a current settings object or a surrounding agent?

[08:10:52.0883] <annevk>
hacknorris: there's no comment element or comment tags

[08:11:08.0312] <hacknorris>
> <@annevk:matrix.org> hacknorris: there's no comment element or comment tags

i meant `<!-- -->`

[08:11:21.0969] <hacknorris>
in both html, xml and all related markups

[08:11:26.0287] <hacknorris>
 * in both html, xml and all related markups

[08:11:51.0733] <annevk>
I'm not sure what you mean here?

[08:12:19.0080] <hacknorris>
no, already fine, i just see you had a lag but then i thought it was plain ignorance =]

[08:13:38.0109] <annevk>
So what is the question then?

[08:13:50.0532] <hacknorris>
is `<!-- -->` self closing

[08:14:32.0341] <Andreu Botella>
Comments have no contents in the DOM tree, so there's nothing to close

[08:14:35.0423] <Andreu Botella>
unless you mean skipping the final `-->`

[08:15:30.0818] <hacknorris>
no i mean if its self closing thing cause it neither looks like `<!--> <-->` neither `<!-- --\>`

[08:15:50.0613] <annevk>
hacknorris: the concept of self-closing only applies to start tags

[08:15:54.0617] <Andreu Botella>
Comments are their own thing, they're not tags

[08:16:09.0663] <hacknorris>
> <@abotella:igalia.com> Comments are their own thing, they're not tags

ok, thx for clarify

[08:17:55.0580] <hacknorris>
btw other question - is <img> really closing tag? cause i oftenly like to do <img src=""> comment here </img> in html... and yet better - it works...

[08:18:33.0706] <hacknorris>
or what i do is totally invalid and i should do \<img src=""/> comment ?

[08:18:37.0473] <hacknorris>
 * or what i do is totally invalid and i should do \<img src=""/> comment ?

[08:19:23.0510] <hacknorris>
like i want a11y, comment under image even if exists and relation to image 

[08:19:27.0634] <hacknorris>
 * like i want a11y, comment under image even if exists and relation to image 

[08:19:28.0159] <annevk>
hacknorris: it's invalid and won't work in `text/html`. With `text/xml` or equivalent you can get away with it, but tooling might end up being confused.

[08:19:35.0437] <annevk>
hacknorris: use `alt`

[08:19:45.0417] <hacknorris>
but alt isnt visible if image exist

[08:19:52.0813] <annevk>
hacknorris: and `aria-describedby`

[08:20:09.0483] <hacknorris>
i know i can use css with text insertion but i dont think its best proctice here

[08:20:16.0513] <annevk>
hacknorris: or `<figure>`

[08:20:21.0960] <hacknorris>
 * i know i can use css with text insertioon but i dont think its best proctice here

[08:20:26.0800] <hacknorris>
 * i know i can use css with text insertion but i dont think its best proctice here

[08:20:47.0923] <hacknorris>
> <@annevk:matrix.org> hacknorris: or `<figure>`

?

[08:21:56.0648] <hacknorris>
for now looks cool but i think its a waste of code to embed img tag inside other tag just to link image to description

[08:38:11.0838] <hacknorris>
also another question - is it a good practice for custom html tags ? like im making an appstore-like page and for each app i wanted to have container with some data (like icon, name, description, rating, etc...)

[08:38:27.0661] <hacknorris>
i have that as custom : <app-content></app-content>

[09:04:03.0266] <hacknorris>
very bad idea? thank you =]

[09:07:25.0516] <Andreu Botella>
> <@hacknorris:arcticfoxes.net> very bad idea? thank you =]

This room is not so much for people learning HTML, as for people working on browsers and on the specifications. If we don't answer it's probably because of that.

[09:07:34.0495] <hacknorris>
a, ok

[09:07:51.0662] <hacknorris>
thought you have some "best practices" or something =]

[09:08:01.0931] <Andreu Botella>
But to answer your question, it's fine to do that. Browsers will treat it as any other element, just without any given semantics. And web components are basically built on such "non-existent" elements, where you define their behavior with Javascript.

[09:08:18.0408] <Andreu Botella>
Just note that they will render as inline elements by default.

[09:09:18.0935] <hacknorris>
> <@abotella:igalia.com> But to answer your question, it's fine to do that. Browsers will treat it as any other element, just without any given semantics. And web components are basically built on such "non-existent" elements, where you define their behavior with Javascript.

more css, my pages rareily have JS and have it only when its very needed (like for example games built in web console or one page to copy special ascii characters)

[09:09:53.0537] <hacknorris>
i try to be a minimum but accessible (mostly my bad practice is just only forgetting alt text, rest is fine at me)

[09:14:04.0498] <hacknorris>
like for example my blog - where do you see JS here : 

[10:17:59.0112] <hacknorris>
btw - can i have a html feature request for you? only asking =]

[10:18:57.0255] <Andreu Botella>
https://whatwg.org/faq#adding-new-features

[10:34:05.0237] <hacknorris>
good or bad ? https://github.com/whatwg/html/issues/8632

[10:59:47.0182] <olekpiasecki>
> <@domfarolino:matrix.org> https://w3ctag.github.io/promises-guide/#always-return-promises seems to say no

IM SO SORRY,no more promises

[11:01:58.0260] <hacknorris>
> <@hacknorris:arcticfoxes.net> good or bad ? https://github.com/whatwg/html/issues/8632

very bad, yes ?

[11:05:35.0123] <networkException>
> <@hacknorris:arcticfoxes.net> good or bad ? https://github.com/whatwg/html/issues/8632

good

[11:05:50.0955] <hacknorris>
ok, will wait then =]

[11:53:00.0514] <hacknorris>
and my last question - how it is with custom html tags? i know i can use them for text but now i would like to make custom tag for image - ever possible ?

[11:53:12.0804] <hacknorris>
 * and my last question - how it is with custom html tags? i know i can use them for text but now i would like to make custom tag for image - ever possible ?

[13:16:27.0660] <hacknorris>
okay - dead chat so a similar question - someone knows a way for custom property (or redefinition of existing attribute but for other elements) to be accessible as a background image of such tag ?

[13:17:02.0881] <hacknorris>
like this : `    <app-container><app-box><app-icon data-href="pinky-kde.gif"></app-icon><app-name>test</app-name></app-box></app-container>`

[13:17:31.0988] <hacknorris>
cause styles apply for <app-name> but i cant see <app-icon>

[13:17:54.0677] <hacknorris>
my css : 
```
    app-icon {
      display: inline-block;
      background-image: attr(data-href url);
      font-style: none;
      width:auto;
      height:auto;
      background-size: 100%;
      background-repeat: no-repeat;
    }
```

[13:18:18.0869] <hacknorris>
(yes i just putted everything i found on stackoverflow and still doesnt work)

[13:28:29.0902] <hacknorris>
?

[14:00:38.0467] <hacknorris>
okay so noone knows. sad ;-;

[14:34:37.0223] <hacknorris>
will be tomorrow maybe bye


2022-12-20
[16:23:23.0983] <jugglinmike>
Is there a syntactic convention for enum values?

[16:35:47.0373] <jugglinmike>
It looks like they're indistinguishable from strings https://webidl.spec.whatwg.org/#idl-enums

[22:45:51.0424] <hacknorris>
üëª

[00:35:15.0341] <annevk>
jugglinmike: they are, but also: https://w3ctag.github.io/design-principles/#casing-rules

[00:35:38.0629] <annevk>
(perhaps we should enforce those casing rules in IDL)

[00:44:38.0498] <hacknorris>
But im back with same question as yesterday?

[00:46:20.0939] <foolip>
hacknorris: It sounds like you're asking for more of https://w3c.github.io/csswg-drafts/css-values-5/#attr-notation to be supported?

[01:21:29.0588] <hacknorris>
sort of too but also for a way to imitiate img tag with only css

[01:21:36.0173] <hacknorris>
* sort of too but also for a way to imitiate img tag with only css

[01:22:20.0038] <hacknorris>
And making ot automated for different image sizes

[01:24:01.0863] <hacknorris>
Image source

[01:24:37.0746] <hacknorris>
Containers source

[01:25:07.0056] <hacknorris>
App-container > app-box > app-icon

[01:45:23.0661] <foolip>
hacknorris: I'm not sure that I understand, but WHATWG doesn't maintain CSS, if it's one or more new CSS features you'd like to suggest, https://github.com/w3c/csswg-drafts/issues is the place for that. Although just filing an issue and waiting will probably be a bad first experience, https://www.w3.org/Style/CSS/current-work#contribute might be a better place to start.

[01:47:08.0568] <hacknorris>
But attr() url property is documented?

[01:47:12.0888] <hacknorris>
just not used

[02:02:43.0422] <hacknorris>
And i'd like to know if there is any other way to convert custom tag to embed/img

[02:03:33.0848] <foolip>
It's only partially implemented, in particular using it for URLs isn't supported and a topic of security discussion, see https://github.com/w3c/csswg-drafts/issues/5092

[02:03:54.0624] <hacknorris>
* And i'd like to know if there is any other way to convert custom tag to embed/img

[02:05:06.0253] <foolip>
hacknorris: assuming you want something that works today, can you use a framework with a template system, to generate the complex markup from much simpler inputs?

[02:14:20.0886] <hacknorris>
Mhm

[02:15:16.0527] <hacknorris>
Dtd?

[02:37:09.0009] <hacknorris>
> <@foolip:matrix.org> It's only partially implemented, in particular using it for URLs isn't supported and a topic of security discussion, see https://github.com/w3c/csswg-drafts/issues/5092

will check later - temporary problems in hosting service

[03:34:48.0310] <lpfreelance>
Hello,

I've been playing around with the File System Access API. I experimented with it and found it may lack of a functionality. As I'm new to the WHATWG / specification world I'd rather ask here before submitting anything on the repository (https://github.com/whatwg/fs).

When retrieving a FileSystemHandle (either a file or a directory) from IndexedDB storage, there is currently no direct way to test if an entry exists on user's device. While trying (on Chrome at least), you need to call a method (like `createWritable` / `getFileHandle`) which will ultimately test that such entry does exist, when it does not, returned Promise rejects with a NotFoundError.

May I suggest to add a new method on the FileSystemHandle interface, something like `Promise<boolean> exists()` to test it? Apart from this storage use-case, I think it could be used in other use-cases (e.g. watch-like feature).

Btw, what difference is there between specification of WICG and WHATWG? I don't see which one would be more suited to eventually post my issue.

[03:52:52.0981] <Domenic>
In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use

[03:53:18.0743] <Domenic>
It's better to do the thing you want to do, and if it fails, handle the error, instead of checking if what you want to do is possible, then trying to do it (which might still fail)

[03:54:17.0579] <Domenic>
See also https://nodejs.org/api/fs.html#fsaccesspath-mode-callback for a different ecosystem's documentation of the problem

[03:58:25.0111] <arai>
Can there be an attribute's getter steps which has side effect?  or is it prohibited?  I'm wondering if we can assume all DOM-related getters (represented by `attribute` in `WebIDL`) can be considered side-effect free.  the context is https://bugzilla.mozilla.org/show_bug.cgi?id=1806598 , where we're trying to figure out the list of side-effect free native functions in getters

[04:10:20.0359] <lpfreelance>
Well thank you for the definition of TOCTTOU !
I understand, it makes sense and I didn't have this edge-case in mind, hence the  `FileSystemSyncAccessHandle` interface with an exclusive lock, I guess.
I'll look into the documentation, many thanks and good day üôÇ

[04:14:39.0133] <annevk>
arai: what kind of side effects are you concerned about? A lot of are so-called "lazy" getters, so they'd end up allocating objects when first invoked

[04:16:32.0537] <annevk>
arai: we generally want `x.getter === x.getter` to be true, but that is sometimes violated as well (e.g., `input.valueAsDate`)

[04:17:57.0457] <arai>
good point.  let me think

[04:18:04.0734] <annevk>
arai: https://github.com/whatwg/webidl/issues/212 last comment there might be of interest

[04:18:33.0193] <annevk>
 * arai: what kind of side effects are you concerned about? A lot of them are so-called "lazy" getters, so they'd end up allocating objects when first invoked

[04:22:22.0693] <arai>
returning different value for each access is fine for out case.  lazy getter is somewhat problematic if it can modify internal state of objects too much (let me think what "too much" is...)

[04:25:33.0642] <arai>
hm, let me explain the context a bit more.  the context is eager evaluation in the developer tools console, where the value of the given JS codelet is evaluated before user hits Enter.  and we want to check if given native function can be called there

[04:31:25.0152] <arai>
so allocating objects and storing the result in the cache should be fine

[04:41:08.0487] <arai>
possible problematic case is that `x.something_else` returns different value between before/after calling `x.getter`

[04:47:54.0258] <lpfreelance>
> <@domenicdenicola:matrix.org> In general such methods are bad, for all file system APIs, because they create TOCTTOU errors. https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use

After thinking about it. Could such method be implemented with a documentation alike to the one in Node.js to inform end-user?
I understand the principle of TOCTTOU and EAFP. Errors must be taken care of any way. But don't it prevent any chance at green code practice without such method?

e.g. I retrieve a file from storage, I don't know if it exists, I need to save data in it. But doing so requires me to run long computation / algorithm to prepare data before writing it in the file. In such case, wouldn't it be preferable to be able to test if the file exists before running computation / algorithm? And indeed, still handle edge-case and test for any error when actually writing in the file.

What do you think?

[04:56:47.0983] <annevk>
lpfreelance: getting a handle shouldn't really require any computation?

[04:58:29.0221] <arai>
to my understanding, the extended attributes mentioned in https://github.com/whatwg/webidl/issues/212 are about the restriction on the return value across multiple calls.  and I think that's slightly different about our concern in the eager evaluation case, where the focus is "whether calling the getter is visible to remaining code"

[05:02:55.0818] <lpfreelance>
annevk:  I mean preparing data to write in the file/handle:

Code flow currently: 

1. Get handle of file

2. Prepare data

3. Write data in file

With `exists` method:

1. Get handle of file

2. File exists?

> no: stop

> yes: continue to (3)

3. Prepare data

4. Write data in file

[05:03:36.0538] <lpfreelance>
* annevk: I mean preparing data to write in the file/handle:

Code flow currently: 

1. Get handle of file

2. Prepare data

3. Write data in file

With `exists` method:

1. Get handle of file

2. File exists?

> no: stop

> yes: continue to (3)

3. Prepare data

4. Write data in file

[05:04:24.0061] <lpfreelance>
* annevk:  I mean preparing data to write in the file/handle:

Code flow currently: 

1. Get handle of file

2. Prepare data

3. Write data in file

With `exists` method:

1. Get handle of file

2. File exists?

> no: stop

> yes: continue to (3)

3. Prepare data

4. Write data in file

[05:06:08.0599] <lpfreelance>
* annevk: I mean preparing data to write in the file/handle.

Code flow currently:

1. Get handle of file

2. Prepare data

3. Write data in file

With `exists` method:

1. Get handle of file

2. File exists?

> no: stop

> yes: continue to (3)

3. Prepare data

4. Write data in file

[05:07:36.0264] <lpfreelance>
2. Prepare data, is where it requires computation.

[05:19:54.0071] <Noam Rosenthal>
Hmm I see that we only perform the microtask checkpoint for regular tasks, but not during "update the rendering". This would mean that microtasks queued inside requestAnimationFrame/ResizeObserver callbacks would only be triggered as part of the next task. This is not how implementations work... am I missing something?

[05:24:55.0094] <lpfreelance>
 * annevk: I mean preparing data to write in the file/handle.

Code flow currently:

1. Get handle of file
2. Prepare data
3. Write data in file

With `exists` method:

1. Get handle of file
2. File exists?
> no: stop
> yes: continue to (3)
3. Prepare data
4. Write data in file

[05:31:55.0389] <zcorpan>
> <@miketayl_r:mozilla.org> i'm going to start using `<html id=jQuery>` just to spite future me

```
<form name=documentElement><input name=scrollTop>
```

[06:02:04.0277] <annevk>
Noam Rosenthal: there's also some kind of cleanup

[06:02:24.0182] <annevk>
Noam Rosenthal: Jake Archibald prolly knows off the top

[06:09:54.0022] <Jake Archibald>
Noam Rosenthal: there's a microtask checkpoint after calling a callback

[06:10:05.0597] <Jake Archibald>
Whether it's in a task or the render steps

[06:11:04.0057] <Jake Archibald>
So, `Promise.resolve().then(callback)` if you run this in a raf callback, `callback` will be called as soon as the JS stack empties 

[06:14:00.0684] <Jake Archibald>
https://html.spec.whatwg.org/multipage/webappapis.html#clean-up-after-running-script

[06:15:14.0517] <Noam Rosenthal>
thanks Jake Archibald , that explains it!

[06:19:08.0807] <annevk>
ah right, it's the same thing non-JS dispatched events use

[06:19:45.0324] <annevk>
summarized as "is there still JS on the stack?"

[07:12:36.0192] <annevk>
arai: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it

[07:16:13.0842] <annevk>
lpfreelance: somewhat fair, although what you really want I think is to tack a lock on the file so you're relatively sure your eventual write won't fail either. Taking https://whatwg.org/faq#adding-new-features into account filing an issue against whatwg/fs and asking for thoughts seems like a good next step to me.

[07:56:53.0208] <lpfreelance>
annevk: In such case indeed, to tack a lock on the file could be ideal. It might also be useful with a directory entry. Alright, I will also check for any related issues before filling one. Thanks for your feedback!

[08:04:12.0699] <annevk>
lpfreelance: btw, the difference with the WICG draft is that the WHATWG spec defines the fundamentals only; the WICG draft builds on that and adds end user file system access, but there's no agreement that that should be exposed across browsers

[09:53:33.0373] <arai>
> <@annevk:matrix.org> arai: I can't immediately think of a getter that is quite that bad and I certainly wouldn't mind experiments in trying to enforce it

good to hear that :)  if the possibility of the side effect is quite low, I think we can just allow all built-in getters in eager evaluation

[11:13:23.0744] <hacknorris>
holy offtopic

[11:56:12.0409] <mztea9281>
That‚Äôs us @david 

[12:07:06.0891] <hacknorris>
which david, guy, i dont even know what tf you talk about üòÜ


2022-12-21
[16:30:27.0741] <Domenic>
arai: I think Chromium has some kind of annotation on all side-effecting getters in Web IDL, specifically for DevTools purposes. I'd suggest poking around the codebase.

[16:36:37.0397] <arai>
great :) I'll look into it

[21:27:30.0541] <arai>
found `[Affects=Everything]` extended attribute for attributes:  https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/bindings/IDLExtendedAttributes.md#affects_m_a , but I don't see the occurrence in the source  https://source.chromium.org/search?q=Affects%3DEverything&ss=chromium%2Fchromium%2Fsrc:third_party%2Fblink%2Frenderer%2Fcore%2Fdom%2F

[21:27:57.0591] <arai>
so I guess there's no such attribute right now?

[00:30:13.0670] <Noam Rosenthal>
Domenic Jake Archibald : I'm trying to understand some of the navigation-API changes and how they relate to navigation timing. 

In https://html.spec.whatwg.org/#create-navigation-params-by-fetching #8, we set the initiator type of the request to the container's name, if the container is not null. Setting the initiator type makes Fetch automatically report resource timing.
Would this mean that *any* iframe navigation would report resource timing? That would be a bug, as we need to report only the ones initiated from the parent (the source snapshot's fetch client I guess? https://html.spec.whatwg.org/#source-snapshot-params-client)

[00:38:13.0983] <Noam Rosenthal>
yea I think it's a bug, will post a PR

[00:38:58.0453] <Domenic>
(This seems unrelated to the navigation API, I guess you meant the rewrite.)

[00:44:56.0430] <Noam Rosenthal>
Domenic: yes, I meant the rewrite.

[00:51:41.0686] <Noam Rosenthal>
> <@noamr:matrix.org> Domenic Jake Archibald : I'm trying to understand some of the navigation-API changes and how they relate to navigation timing. 
> 
> In https://html.spec.whatwg.org/#create-navigation-params-by-fetching #8, we set the initiator type of the request to the container's name, if the container is not null. Setting the initiator type makes Fetch automatically report resource timing.
> Would this mean that *any* iframe navigation would report resource timing? That would be a bug, as we need to report only the ones initiated from the parent (the source snapshot's fetch client I guess? https://html.spec.whatwg.org/#source-snapshot-params-client)

https://github.com/whatwg/html/pull/8638

[04:54:59.0042] <annevk>
Mattias Buelens: hey, if you have a quick minute to look at https://github.com/whatwg/fetch/pull/1569 and comment on the state of Streams and event loop integration I'd appreciate it (I realize I might have asked about this before, I'm afraid I forgot)

[05:15:27.0028] <Noam Rosenthal>
annevk: how about inlining "package data" in "consume body"? it's the only caller AFAICT and it's not exported

[05:16:04.0965] <Noam Rosenthal>
instead of passing promises around we could use a single promise in the scope and resolve/reject it

[05:18:38.0434] <annevk>
Noam Rosenthal: hmm maybe, I don't immediately see it as we invoke it twice, but it might be possible

[05:18:45.0738] <annevk>
/me looks at blame

[05:21:03.0979] <annevk>
Not quite unlike how it started out: https://github.com/whatwg/fetch/commit/313cc37deb6346690a5f6a7dd096cb74afa19d03

[05:21:20.0031] <Noam Rosenthal>
annevk: we invoke it once in `consume body`

[05:21:44.0452] <Noam Rosenthal>
(before my patch)

[05:22:12.0804] <Noam Rosenthal>
> <@annevk:matrix.org> Not quite unlike how it started out: https://github.com/whatwg/fetch/commit/313cc37deb6346690a5f6a7dd096cb74afa19d03

hehe that's how it goes sometimes

[05:23:03.0664] <annevk>
Noam Rosenthal: well, but before is buggy in a different way in that it awaits a promise it resolved with a non-JS value

[05:24:09.0311] <Noam Rosenthal>
right. let me play with inlining and it would hopefully end up in a better state

[05:45:41.0233] <annevk>
Some people, when confronted with a problem, think ‚ÄúI know, I‚Äôll use HTTP-augmented ABNF.‚Äù Now they have `1#` problems.

[07:19:51.0238] <Noam Rosenthal>
annevk: New version up (building), I'm much happier with this. Takes event-loops into account by running "package" in parallel and queuing resolve/reject on `this`'s event loop. It's much closer to implementations than what we had there before

[08:35:47.0091] <annevk>
Noam Rosenthal: package cannot run in parallel though as it creates JS objects

[08:39:46.0328] <Noam Rosenthal>
annevk: hmm right. just thought that I'd revise it though to have the different functions (.json() etc) pass a packager callback rather than have this switch statement

[08:40:37.0423] <Noam Rosenthal>
... since it creates JS objects it needs to run on the main thread, after the task queuing I guess

[08:43:42.0741] <annevk>
Noam Rosenthal: for the case where body is null we also cannot queue a task I think as that will be observable, at least in theory that promise resolves in the task that gets hold of it

[08:44:38.0544] <annevk>
I will be able to review tomorrow, but after that it might have to wait until 2023; back Jan 2 or so

[08:45:13.0261] <Noam Rosenthal>
> <@annevk:matrix.org> I will be able to review tomorrow, but after that it might have to wait until 2023; back Jan 2 or so

thanks for the heads up, enjoy the holiday

[08:45:48.0295] <annevk>
thanks, happy holidays

[14:43:52.0005] <ser.bicer@hotmail.com>
https://github.com/census-instrumentation/opencensus-go/blob/v0.24.0/go.mod#L1


2022-12-22
[16:37:05.0558] <ser.bicer@hotmail.com>
valid connected account request

[22:27:27.0672] <Noam Rosenthal>
> <@annevk:matrix.org> Noam Rosenthal: for the case where body is null we also cannot queue a task I think as that will be observable, at least in theory that promise resolves in the task that gets hold of it

Good morning, have another version up... put the different parts of `package data` in their corresponding functions instead of a big switch-case, I think it's cleaner now, and the task thingy is sorted.

[07:12:01.0501] <Noam Rosenthal>
Andreas Kling: as per your report, consuming the body in fetch doesn't need promises anymore.

[10:38:30.0036] <jugglinmike>
annevk: Domenic I don't know if it matters much, but the return value of [parse a JSON string to an infra value](https://infra.spec.whatwg.org/#parse-a-json-string-to-an-infra-value) seems inconsistent to me. Rather than always returning a completion record, it returns an "throw" completion record on failure and a infra value on success

[10:43:35.0858] <jugglinmike>
I only know of two call sites: HTML and WebDriver BiDi. HTML's wording seems fine with this https://html.spec.whatwg.org/multipage/webappapis.html#parse-an-import-map-string

[10:44:28.0904] <jugglinmike>
WebDriver BiDi is a little more ambiguous--"if [the algorithm] throws an exception" https://w3c.github.io/webdriver-bidi/#handle-an-incoming-message

[10:50:51.0387] <jugglinmike>
Or if ECMAScript's [implicit normal completion](https://tc39.es/ecma262/#sec-implicit-normal-completion) applies, then maybe HTML's call site just needs a tweak


2022-12-23
[17:13:58.0572] <Domenic>
> <@jugglinmike:matrix.org> annevk: Domenic I don't know if it matters much, but the return value of [parse a JSON string to an infra value](https://infra.spec.whatwg.org/#parse-a-json-string-to-an-infra-value) seems inconsistent to me. Rather than always returning a completion record, it returns an "throw" completion record on failure and a infra value on success

returning a throw completion record is the same as throwing an exception.

[18:45:35.0272] <jugglinmike>
Domenic: Right. I was thinking about how it seems to return a completion record in some cases and an infra value in others. When I remembered the "implicit normal completion" section in ECMAScript, I thought that might explain things here, because if it also applies to the Infra spec, it would mean that the algorithm always returns a completion record.

[18:45:56.0683] <Domenic>
It always either returns an Infra value or throws an exception.

[18:46:31.0505] <jugglinmike>
But an Infra value is not a completion record, right?

[18:46:49.0579] <Domenic>
Correct. It never returns a completion record.

[18:48:35.0491] <jugglinmike>
Oh, huh. So a throw completion is not a completion record?

[18:49:28.0035] <jugglinmike>
That can't be it. "throw completion refers to any Completion Record with a [[Type]] value of throw."

[18:51:21.0062] <jugglinmike>
Here's where I'm getting confused: I can't square the statements that "[the algorithm] never returns a completion record" and "[the algorithm] always either returns an Infra value or throws an exception", given that "returning a throw completion record is the same as throwing an exception"

[19:47:38.0195] <sideshowbarker>
At Google is there a current Developer Advocate for WebAssembly? (I know it used to be Ingvar Stepanyan)

[00:53:44.0948] <annevk>
jugglinmike: it makes sense to me; it returns an Infra value or throws an exception (which is inclusive of returning a throw completion record as that's the same thing)

[10:02:22.0599] <jugglinmike>
annevk: So could we also say, "it returns an Infra value or it returns a throw completion record"?


2022-12-24
[02:38:50.0736] <Andreas Kling>
hey folks. I believe there's someone using ChatGPT (or similar) to reply to whatwg issues on GitHub. this seems like something that could get extremely annoying.
first spotted here: https://github.com/whatwg/html/issues/8646#issuecomment-1364449920

[02:38:55.0331] <Andreas Kling>
 * hey folks. I believe there's someone using ChatGPT (or similar) to reply to whatwg issues on GitHub. this seems like something that could get extremely annoying.
first spotted here: https://github.com/whatwg/html/issues/8646#issuecomment-1364449920

[03:12:21.0102] <sideshowbarker>
> <@awesomekling:matrix.org> hey folks. I believe there's someone using ChatGPT (or similar) to reply to whatwg issues on GitHub. this seems like something that could get extremely annoying.
> first spotted here: https://github.com/whatwg/html/issues/8646#issuecomment-1364449920

Thanks for the heads-up. I‚Äôve deleted the comments and blocked that user.

https://github.com/whatwg/html/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+commenter%3AMitesh2020 shows the had only posted on two issues so far. Glad it wasn‚Äôt more. (At Stack Overflow I‚Äôve handled cases of some users who posted dozens of ChatGPT-generated answers in short succession‚Ä¶)

[03:17:16.0623] <Andreas Kling>
cool, thanks for swift action! here's hoping for some kind of GitHub site wide policy against it

[03:21:07.0757] <sideshowbarker>
yeah now that you say it, I would‚Äôve expected GitHub to have long ago made some policy and announced it ‚Äî since the mass ChatGPT abuse has been going on in various places for more than three weeks now (since about December 1st at least)

[03:21:16.0397] <sideshowbarker>
 * yeah now that you say it, I would‚Äôve expected seen GitHub to have long ago made some policy and announced it ‚Äî since the mass ChatGPT abuse has been going on in various places for more than three weeks now (since about December 1st at least)

[03:21:25.0888] <sideshowbarker>
 * yeah now that you say it, I would‚Äôve expected GitHub to have long ago made some policy and announced it ‚Äî since the mass ChatGPT abuse has been going on in various places for more than three weeks now (since about December 1st at least)

[08:29:41.0495] <annevk>
jugglinmike: I suppose, but that would be confusing for all callers as it's to be used from web platform specs, which don't really use completion records


2022-12-27
[02:45:07.0713] <smaug>
is it defined somewhere which agent cluster service workers may or may not use (vs the relevant web pages)?


2022-12-28
[22:08:52.0511] <Domenic>
> <@smaug:mozilla.org> is it defined somewhere which agent cluster service workers may or may not use (vs the relevant web pages)?

https://html.spec.whatwg.org/#obtain-a-service-worker-agent

[00:41:38.0777] <frank-dspeed>
Hi Frinds what is the current suggested way to create a Transform Stream that waits until the writeable side got closed so that we are sure we get complete data before we enqueue it for the next stream? So Common Backpressure 

[00:42:39.0340] <frank-dspeed>
i hacked this together but it feels a bit wrong maybe some one did come up with a waterMark based method or something better or at last can verify that this is the best generic we have 

[00:42:51.0328] <frank-dspeed>
```js
class BackpressureTransformStream extends TransformStream { constructor() { const backpressure = []; super({ start(){},
  transform(data,_controller){ backpressure.push(data); },
  close(controller){ controller.enqueue(backpressure.flaten()); backpressure.length = 0; },
  cancel(){ backpressure.length = 0; },
}); }};
```

[00:44:19.0102] <frank-dspeed>
 * Hi Frinds what is the current suggested way to create a Transform Stream that waits until the writeable side got closed so that we are sure we get complete data before we enqueue it for the next stream? So Common Backpressure 

[00:48:38.0510] <frank-dspeed>
i need that for example to create Url Objects so i can not take the data incremental but i also do not want to write it via pipeTo i want to Transform in a streaming way and then i want to transform the complete object some times. so i Did come up with the above i apply 4 pipe Through before this gets hit and after that 3 pipeTrough's it works but i am not sure why and how it works at all :). As i am not sure how my sources Underlying  Stream is implemented exactly but it looks working in all tests at present.

[00:52:43.0243] <frank-dspeed>
for that who wonder about the length 0 stuff that is a old engine trick to fast unload arrays that is not so important 

[07:38:54.0058] <Mauricio Ortiz>
hi

[08:34:40.0249] <hacknorris>
someone know when attr() types will be available in firefox?

[08:34:45.0470] <hacknorris>
and safari too

[11:07:43.0595] <TabAtkins>
hacknorris: No timeline bc feature still has open security questions I haven't been able to address yet.

[11:08:05.0513] <TabAtkins>
Domenic annevk: Sigh, can we close https://github.com/whatwg/html/issues/8653 as a troll?

[11:08:18.0330] <hacknorris>
> <@tabatkins:matrix.org> hacknorris: No timeline bc feature still has open security questions I haven't been able to address yet.

a. ok

[11:08:44.0195] <hacknorris>
> <@tabatkins:matrix.org> Domenic annevk: Sigh, can we close https://github.com/whatwg/html/issues/8653 as a troll?

wtf ?


2022-12-29
[19:17:08.0376] <Domenic>
I'm wondering if we as a community can pull together the fortitude to ignore it for a week or two, then close.

[22:13:14.0333] <TabAtkins>
I'm not sure why it would be good to ignore it? It's someone doing bad faith concern trolling.

[22:13:32.0759] <TabAtkins>
* I'm not sure why it would be good to ignore it? It's someone doing bad faith concern trolling.

[01:20:36.0496] <emilio>
Yeah not sure it even deserves an answer, I'd just close it like we close hacktoberfest spam or so

[13:26:36.0736] <kblom3>
Hello

[13:27:21.0826] <kblom3>
I would like to know if there has verb any discussion on the topic of making webpages accessible through Terminal by default ?

[14:44:52.0894] <hacknorris>
> <@kblom3:matrix.org> I would like to know if there has verb any discussion on the topic of making webpages accessible through Terminal by default ?

Me too, active user of lynx XD

[14:57:04.0958] <kblom3>
The HTML5 standard is one that will evolve, but for Terminal users there is only a curl request that is built into Terminal, everything else needs to be downloaded.

[14:57:47.0185] <kblom3>
I think that every single HTML markup could be made to display well in Terminal, even if that just means an ASCII representation


2022-12-30
[17:36:03.0817] <frank-dspeed>
why do you all suggest bad background behind the html issue? i would love to understand the reasoning for that he simply asks for inclusiv language wouldn't it be simple to respond with something like that he can already name elements how ever he wants? he does not need to depend on footer?

[17:38:39.0975] <frank-dspeed>
i mean footer is not needed for anything so i am hard triggered to answer: https://github.com/whatwg/html/issues/8653 with it is up to the developer to not use the footer tag it is not needed for seo or any other browser implementation logic 

[17:53:18.0718] <frank-dspeed>
ups i did it again ...... :D

[18:01:56.0960] <frank-dspeed>
kblom3: that is not a issue at all see browser like lynx which are fully terminal driven browsers as you can also simple fetch a web page and use a markdown transpiler that creates markdown from it. hope that helps

[18:03:20.0961] <frank-dspeed>
else you could use some service like my chromium virtual environment it is a scriptable chromium you can easy add some scripts to get screen reader support and that via cli

[18:03:29.0230] <frank-dspeed>
as you can send string instructions to it

[18:04:12.0521] <frank-dspeed>
i even have a project called Stealify Lang a Language Implementation Framework written in ECMAScript using ECMAScript Engine fundamentals

[18:04:39.0867] <frank-dspeed>
to implement languages IDL, DRL, and any Polyglot code

[18:05:06.0728] <frank-dspeed>
That should in future allow to code more delcarativ in general and so more accessiable

[18:06:08.0196] <frank-dspeed>
Combining the Stealify Lang to create a accessiblity Module that uses the chromium protocol to create a cli driven accessible useable lang is possible

[18:07:14.0477] <frank-dspeed>
it would then look like ```read page https://.... section #tag ```

[18:07:43.0856] <frank-dspeed>
we could implement a set of text instructions to use that then via voice and cli commands that send string text instructions

[18:08:12.0564] <frank-dspeed>
as we got voice to text and text to voice that solves the circle

[18:09:22.0152] <frank-dspeed>
in general stealfy lang is a good system mainly designed to compose openAI like software that takes text instructions which are in general more inclusiv and developer frindly

[18:11:04.0721] <frank-dspeed>
that would then enable people for example to access services like discord and join channels in a easy way

[18:11:24.0136] <frank-dspeed>
as we can use the full devtools protocol for that 

[04:33:47.0604] <annevk>
TabAtkins: seems to have been closed, I banned the person for 30 days with notification as a warning

[04:41:01.0311] <frank-dspeed>
the disscussed  trolling above mentioned issue by the way got closed by it's creator he liked the answer ignoring so was not the right thing to handle it only for information

[04:41:18.0911] <frank-dspeed>
 * the disscussed  trolling above mentioned issue by the way got closed by it's creator he liked the answer ignoring so was not the right thing to handle it only for information

[04:46:25.0978] <frank-dspeed>
conclusion there are no dumb questions in any case any question deserves a answer even if we do not understand why it gets asked. No KI knows why you ask it something we should act in the same way simple answer if possible. We can never assume educational Background or anything before i started to implement everything my self i was also under the Assumtion that a rfc or discussion is needed to get something started. 

[10:23:05.0129] <kblom3>
> <@frank-dspeed:matrix.org> kblom3: that is not a issue at all see browser like lynx which are fully terminal driven browsers as you can also simple fetch a web page and use a markdown transpiler that creates markdown from it. hope that helps

frank-dspeed: My position stems from the problem of trickle data; living outside of a metropolitan area, in the countryside, the internet lines can be ruptured by trees, or even nibbled by squirrels (that's a real problem). This leaves only a trickle service, which is where Terminal would come in handy.

[10:24:19.0064] <frank-dspeed>
Sounds like you would need a so called forward proxy that is by the way the same that serviceWorker do implement in the userland

[10:24:34.0952] <kblom3>
I know that Lynx and the like will do what I am asking, but that requires extra work and it's not just ready for the worst of times. Most normal people will not do that, but they can type in "curl" followed by the website. Think of Twitter's "hashtags" before they were a thing, or "@" to reply to somebody, it could be the same for curl

[10:25:01.0892] <hacknorris>
> <@kblom3:matrix.org> I know that Lynx and the like will do what I am asking, but that requires extra work and it's not just ready for the worst of times. Most normal people will not do that, but they can type in "curl" followed by the website. Think of Twitter's "hashtags" before they were a thing, or "@" to reply to somebody, it could be the same for curl

wow, i use lynx too

[10:25:21.0394] <frank-dspeed>
hmmm ok sounds again now more like you need something like my chromium virtual environment

[10:25:37.0324] <frank-dspeed>
something that you can use via the cli that is able to handle any loading case via automation

[10:25:54.0257] <frank-dspeed>
so that you only get back the requested result if it is even possible 

[10:26:39.0890] <frank-dspeed>
can you code in general do you know javascript?

[10:27:00.0095] <frank-dspeed>
there is a free solution called browserless.io it should get you up and running 

[10:27:36.0211] <frank-dspeed>
they offer chromium headless packaged with puppeteer inside docker so a single unit to execute and use like a database

[10:28:25.0814] <frank-dspeed>
you can code a small cli that does the so called scraping which is the technical term for taking partial site page content

[10:28:46.0475] <kblom3>
I can code in Swift. Imagine learning a safe language and then finding out about JavaScript. I did look into it, but got sidetracked by CSS (which I know is a markup language).

[10:29:06.0004] <frank-dspeed>
oh use Typescript it will also do the job

[10:29:13.0130] <frank-dspeed>
then you got it more type save 

[10:30:06.0275] <frank-dspeed>
but wait you say swift your a mac user right?

[10:30:25.0297] <frank-dspeed>
You can use the jshost of macos and automator app that they ship with the operating system

[10:31:02.0815] <frank-dspeed>
i would suggest to setup something with browserless.io and automator if you only target mac

[10:31:26.0639] <frank-dspeed>
https://support.apple.com/guide/automator/welcome/mac

[10:31:46.0371] <kblom3>
All this is too much to digest right now, what is "chromium virtual environment", is that line VM Ware, what's its purpose.

[10:32:08.0854] <frank-dspeed>
 * https://support.apple.com/guide/automator/welcome/mac

[10:32:43.0326] <frank-dspeed>
Chromium Virtual Environment simply refers to a special chromium version that has not even a static rendering backend

[10:32:52.0919] <kblom3>
I am not targeting macOS specifically, but yes, Terminal is a Linux/Unix thing, but I don't see why Command cannot be used, both ping, so both should be able to browse the web. Kind of. The idea being that websites can be translated into something familiar like ASCII.

[10:32:54.0406] <frank-dspeed>
it is not ready to get used in the wild

[10:33:25.0336] <kblom3>
Sorry, what is "static rendering backend" please ?

[10:33:47.0233] <frank-dspeed>
it is a similar concept to webkits wpe port using the fdo-gstreamer backend https://webkit.org/wpe/

[10:34:10.0714] <frank-dspeed>
in general chromium when you install it will use your display manager to render the content of pages

[10:34:37.0805] <frank-dspeed>
Chromium VE does not do so it writes to something we call fdo a virtual file object that then can get used anywhere

[10:34:47.0963] <kblom3>
The idea was to be able to use the internet even if the country's infrastructure was attacked, at worst, or if the internet cables were wearing thin. The pandemic showed how reliant folk had to be on home delivery, but what if one was cut off, that was where I got the idea from as sometimes the inserted would be down and I could not do anything.

[10:35:03.0634] <frank-dspeed>
then the most simple is a forward proxy

