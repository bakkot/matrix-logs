2025-08-01
[17:42:54.0185] <Kaiido>
That would be super old, but it was indeed discussed back when <svg:video> was proposed: https://lists.w3.org/Archives/Public/www-svg/2003May/0005.html

[22:28:59.0048] <annevk>
Lea Verou: not sure, but HTML should probably define some of it eventually.

[07:40:20.0822] <annevk>
Meghan Denny: thanks for dealing with the spam!

[07:43:20.0752] <annevk>
Luke Warlow: did you consider giving ReflectEnum all the values needed instead? `ReflectEnum=(enumToUse, "anonymous", "anonymous", null)` or some such (probably incorrect example).

[07:48:01.0105] <Luke Warlow>
Hmm I hadn't actually, would require slightly funky grammar but that's not insurmountable.

Could also just have multiple extended attributes but still put those on the idl attribute.

Problem then is you duplicate the values between usages of the same enum (fetch priority, cross origin)

[07:49:18.0247] <annevk>
Oh yeah, hmm.

[07:50:04.0977] <annevk>
Okay, so turning an enum into not-quite-an-enum still looks like the best course of action.

[07:57:33.0952] <Luke Warlow>
The grammar to annotate the enum values is a trivial change (updated my parser easily enough), so provided we can work the prose out I think that design is probably best

[08:06:30.0498] <annevk>
Luke Warlow: I thought you determined that didn't make much sense? Or is the idea that we either annotate a value or annotate the enum? And when we annotate the enum it signifies null or some such?

[08:09:13.0405] <Luke Warlow>
> <@annevk:matrix.org> Luke Warlow: I thought you determined that didn't make much sense? Or is the idea that we either annotate a value or annotate the enum? And when we annotate the enum it signifies null or some such?

Yeah either that or there might be a way to just make it fallback to the null / "" case in the event one isn't defined at all

[08:11:04.0791] <Luke Warlow>
Perhaps my current syntax is what ends up being optimal but if we want the other one it is doable

[08:20:48.0365] <annevk>
Looking at this again "no state" seems weird. I wonder if we can get rid of that eventually. But ignoring that, putting it always on the enum is probably the least confusing, even if it's a tad more verbose.

[08:22:21.0917] <annevk>
And I guess they can always take a string that is either one of the enum values or a new state that cannot be expressed as keyword.

[08:23:31.0970] <annevk>
Lol, we also have an actual "No state" (it's different).

[08:24:06.0458] <annevk>
The as attribute does indeed use the "no state", but could also have used a "Default state" or some such and branched on that.

[08:24:40.0085] <annevk>
And the as attribute might be the only attribute that builds on that oddity? Seems ripe for removal.

[12:56:56.0990] <Meghan Denny>
np! happy to help out where i can :)


2025-08-04
[06:18:35.0173] <Noam Rosenthal>
Are the WHATNOT minutes (specifically last week's) published in somewhere shareable?
 cwilso annevk ?

[09:19:55.0542] <annevk>
Noam Rosenthal: thanks for the reminder, sorted.

[10:35:18.0068] <mfreed>
Hi all, just a friendly reminder to post any discussion topics for this Thursday's joint CSSWG/WHATWG/OpenUI task force meeting to the meeting agenda issue: https://github.com/whatwg/html/issues/11483


2025-08-05
[01:24:24.0058] <Doctor>
Are there any pending changes/proposals to do with the way streams work? 

[01:30:29.0134] <evilpie>
I don't think this is what you mean, but https://github.com/whatwg/streams/pull/1283 added transformer.cancel, which hasn't been shipped in any major browser.

[01:33:34.0250] <Doctor>
Not what I was hoping for 

[01:39:14.0074] <Noam Rosenthal>
Being more specific would help people answer your question better. there are probably all kinds of stream-related proposals/issues on github that you could search or propose new ones 

[01:39:50.0908] <Doctor>
Is there a structure guide somewhere on proposing new ones? 

[01:40:13.0623] <Doctor>
What I'd like to change is to allow transform streams to be byob

[01:45:56.0153] <Noam Rosenthal>
https://github.com/whatwg/streams/issues
"New Issue" has a few templates

[01:46:18.0047] <Noam Rosenthal>
... and you can search the existing list in that URL

[07:26:04.0169] <Aron het Lam>
Hi, I am told to ping [Domenic](https://matrix.to/#/@domenicdenicola:matrix.org) about this in the Ladybird chat, so I hope thatâ€™s ok.
Does this in the WebIDL spec essentially mean that extended attributes are allowed on both sides of the `required` keyword for dictionary members?
To me it seems the linked spec below can be expanded to `ExtendedAttributeList required TypeWithExtendedAttributes identifier ;`
 https://webidl.spec.whatwg.org/#prod-DictionaryMember

[08:05:36.0312] <annevk>
Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird.

[08:08:38.0736] <annevk>
* Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird. Hmm no it doesn't as that wouldn't match the production.

[08:09:15.0327] <annevk>
* Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird. Hmm no it doesn't as that wouldn't match the production. I suspect this came to be as part of making extended attributes associable with types, but that left a couple of weird corner cases.

[10:47:08.0320] <Cesar Sanchez>
Hi

[12:45:03.0670] <Doctor>
In a byob readable, you may be given a buffer that that has an offset greater than zero and a length less than the remainder of the buffer. Aka a subsection of the underlying buffer. When transferring this buffer and/or responding with a new buffer, should one make sure the contents before and after your section of the buffer aren't mutated/missing? 

[12:46:00.0494] <Doctor>
For example, if I `.respondWithNewView`, should I guarantee that any content that was before my offset in the buffer given matches that with the buffer I'm now passing back?


2025-08-06
[18:06:43.0950] <Garv>
iframes should be an empty element

[20:49:36.0339] <sideshowbarker>
annevk: (or anybody else familiar with the Fetch API who might have a few minutes), about the part of the diff at https://github.com/mdn/content/pull/40643/files which adds an additional `cache.put`:

Is that additional caching step at that point actually necessary or useful in practice?

