2025-08-01
[17:42:54.0185] <Kaiido>
That would be super old, but it was indeed discussed back when <svg:video> was proposed: https://lists.w3.org/Archives/Public/www-svg/2003May/0005.html

[22:28:59.0048] <annevk>
Lea Verou: not sure, but HTML should probably define some of it eventually.

[07:40:20.0822] <annevk>
Meghan Denny: thanks for dealing with the spam!

[07:43:20.0752] <annevk>
Luke Warlow: did you consider giving ReflectEnum all the values needed instead? `ReflectEnum=(enumToUse, "anonymous", "anonymous", null)` or some such (probably incorrect example).

[07:48:01.0105] <Luke Warlow>
Hmm I hadn't actually, would require slightly funky grammar but that's not insurmountable.

Could also just have multiple extended attributes but still put those on the idl attribute.

Problem then is you duplicate the values between usages of the same enum (fetch priority, cross origin)

[07:49:18.0247] <annevk>
Oh yeah, hmm.

[07:50:04.0977] <annevk>
Okay, so turning an enum into not-quite-an-enum still looks like the best course of action.

[07:57:33.0952] <Luke Warlow>
The grammar to annotate the enum values is a trivial change (updated my parser easily enough), so provided we can work the prose out I think that design is probably best

[08:06:30.0498] <annevk>
Luke Warlow: I thought you determined that didn't make much sense? Or is the idea that we either annotate a value or annotate the enum? And when we annotate the enum it signifies null or some such?

[08:09:13.0405] <Luke Warlow>
> <@annevk:matrix.org> Luke Warlow: I thought you determined that didn't make much sense? Or is the idea that we either annotate a value or annotate the enum? And when we annotate the enum it signifies null or some such?

Yeah either that or there might be a way to just make it fallback to the null / "" case in the event one isn't defined at all

[08:11:04.0791] <Luke Warlow>
Perhaps my current syntax is what ends up being optimal but if we want the other one it is doable

[08:20:48.0365] <annevk>
Looking at this again "no state" seems weird. I wonder if we can get rid of that eventually. But ignoring that, putting it always on the enum is probably the least confusing, even if it's a tad more verbose.

[08:22:21.0917] <annevk>
And I guess they can always take a string that is either one of the enum values or a new state that cannot be expressed as keyword.

[08:23:31.0970] <annevk>
Lol, we also have an actual "No state" (it's different).

[08:24:06.0458] <annevk>
The as attribute does indeed use the "no state", but could also have used a "Default state" or some such and branched on that.

[08:24:40.0085] <annevk>
And the as attribute might be the only attribute that builds on that oddity? Seems ripe for removal.

[12:56:56.0990] <Meghan Denny>
np! happy to help out where i can :)


2025-08-04
[06:18:35.0173] <Noam Rosenthal>
Are the WHATNOT minutes (specifically last week's) published in somewhere shareable?
 cwilso annevk ?

[09:19:55.0542] <annevk>
Noam Rosenthal: thanks for the reminder, sorted.

[10:35:18.0068] <mfreed>
Hi all, just a friendly reminder to post any discussion topics for this Thursday's joint CSSWG/WHATWG/OpenUI task force meeting to the meeting agenda issue: https://github.com/whatwg/html/issues/11483


2025-08-05
[01:24:24.0058] <Doctor>
Are there any pending changes/proposals to do with the way streams work? 

[01:30:29.0134] <evilpie>
I don't think this is what you mean, but https://github.com/whatwg/streams/pull/1283 added transformer.cancel, which hasn't been shipped in any major browser.

[01:33:34.0250] <Doctor>
Not what I was hoping for 

[01:39:14.0074] <Noam Rosenthal>
Being more specific would help people answer your question better. there are probably all kinds of stream-related proposals/issues on github that you could search or propose new ones 

[01:39:50.0908] <Doctor>
Is there a structure guide somewhere on proposing new ones? 

[01:40:13.0623] <Doctor>
What I'd like to change is to allow transform streams to be byob

[01:45:56.0153] <Noam Rosenthal>
https://github.com/whatwg/streams/issues
"New Issue" has a few templates

[01:46:18.0047] <Noam Rosenthal>
... and you can search the existing list in that URL

[07:26:04.0169] <Aron het Lam>
Hi, I am told to ping [Domenic](https://matrix.to/#/@domenicdenicola:matrix.org) about this in the Ladybird chat, so I hope that’s ok.
Does this in the WebIDL spec essentially mean that extended attributes are allowed on both sides of the `required` keyword for dictionary members?
To me it seems the linked spec below can be expanded to `ExtendedAttributeList required TypeWithExtendedAttributes identifier ;`
 https://webidl.spec.whatwg.org/#prod-DictionaryMember

[08:05:36.0312] <annevk>
Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird.

[08:08:38.0736] <annevk>
* Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird. Hmm no it doesn't as that wouldn't match the production.

[08:09:15.0327] <annevk>
* Aron het Lam: that seems correct, but I suspect it also means you could have `[X] [X] Type ident;` in theory, which is also a bit weird. Hmm no it doesn't as that wouldn't match the production. I suspect this came to be as part of making extended attributes associable with types, but that left a couple of weird corner cases.

[10:47:08.0320] <Cesar Sanchez>
Hi

[12:45:03.0670] <Doctor>
In a byob readable, you may be given a buffer that that has an offset greater than zero and a length less than the remainder of the buffer. Aka a subsection of the underlying buffer. When transferring this buffer and/or responding with a new buffer, should one make sure the contents before and after your section of the buffer aren't mutated/missing? 

[12:46:00.0494] <Doctor>
For example, if I `.respondWithNewView`, should I guarantee that any content that was before my offset in the buffer given matches that with the buffer I'm now passing back?


2025-08-06
[18:06:43.0950] <Garv>
iframes should be an empty element

[20:49:36.0339] <sideshowbarker>
annevk: (or anybody else familiar with the Fetch API who might have a few minutes), about the part of the diff at https://github.com/mdn/content/pull/40643/files which adds an additional `cache.put`:

Is that additional caching step at that point actually necessary or useful in practice?

[20:51:14.0206] <sideshowbarker>
Or to put it more simply, is that actually the recommended way to use the API? (The way that MDN should be showing developers to use it)

[21:22:35.0984] <Garv>
no like seriously, there's in todays era there's essentially no chance iframes don't run on a browser, and since the only purpose of iframes being full elements was to display an error message, nowadays they should be empty

[21:22:46.0679] <Garv>
* no like seriously, in todays era there's essentially no chance iframes don't run on a browser, and since the only purpose of iframes being full elements was to display an error message, nowadays they should be empty

[23:53:18.0197] <annevk>
sideshowbarker: I'm not sure. Jake Archibald would know. Or you could look at the service worker WHATWG uses. Hopefully that follows best practice somewhat.

[03:23:13.0876] <Jake Archibald>
sideshowbarker: [I've replied](https://github.com/mdn/content/pull/40643#issuecomment-3159234101) 

[03:23:47.0914] <sideshowbarker>
Excellent — thanks much

[03:25:59.0084] <Jake Archibald>
Garv: that's ideally true for a lot of elements. I mean, ideally, `/>` would have been meaningful outside of foreign content. The problem is, it's not something that can be changed about the platform now without severe breakages. Here's some history https://jakearchibald.com/2023/against-self-closing-tags-in-html/

[03:27:39.0756] <smaug>
keithamus: I could be wrong, but I think [this](https://html.spec.whatwg.org/multipage/form-elements.html#the-button-element:popover-target-attribute-activation-behavior:~:text=Otherwise%2C%20run%20the%20popover%20target%20attribute%20activation%20behavior%20given%20element%20and%20event's%20target.) doesn't work if the relevant nodes are in shadow DOM

[03:28:05.0183] <smaug>
* keithamus: I could be wrong, but I think [this](https://html.spec.whatwg.org/multipage/form-elements.html#the-button-element:popover-target-attribute-activation-behavior:~:text=Otherwise%2C%20run%20the%20popover%20target%20attribute%20activation%20behavior%20given%20element%20and%20event's%20target.) doesn't work if the relevant nodes are in shadow DOM (related to popovers inside buttons)

[03:28:23.0278] <smaug>
because of https://dom.spec.whatwg.org/#dispatching-events:~:text=true%3A-,Set,event%2E

[03:28:41.0018] <Jake Archibald>
Garv: Specifically, what would you do with the examples of `<iframe src="…">fallback</iframe>` in the wild? According to your suggestion, the "fallback" would be rendered. Eg see [this example](https://jsbin.com/yacedit/edit?html,output)

[03:28:55.0985] <smaug>
Prove me wrong 🙂 

[03:29:26.0757] <keithamus>
hmm

[03:29:28.0965] <Jake Archibald>
* Garv: Specifically, what would you do with the examples of `<iframe src="…">fallback</iframe>` in the wild? According to your suggestion, the "fallback" would be rendered. Eg see [this example](https://jsbin.com/yacedit/edit?html,output). You see "Fallback" on the page there as a direct consequence of `<img>` being an empty element.

[03:29:58.0738] <smaug>
I couldn't immediately see tests using shadow DOM

[03:30:01.0815] <smaug>
for this stuff

[03:30:10.0038] <Jake Archibald>
* Garv: Specifically, what would you do with the examples of `<iframe src="…">fallback</iframe>` in the wild? According to your suggestion, the "fallback" would be rendered. Eg see [this example](https://jsbin.com/yacedit/edit?html,output). You see "Fallback" on the page there as a direct consequence of `<img>` being an empty element - it can't have insides, so the "Fallback" is outside of it. Essentially, the `</img>` is ignored.

[03:30:14.0552] <smaug>
* I couldn't immediately find tests using shadow DOM

[03:32:26.0658] <keithamus>
how does one have a popover inside of a shadowroot referenced through the button though?

[03:33:38.0417] <keithamus>
As in:

```
data:text/html,<button id=b>Open<div id=d><template shadowrootmode=open><div popover></div></template></button><script>b.popoverTargetElement = d.shadowRoot.querySelector('div')</script>
``` 

Doesn't work because `popoverTargetElement` will not accept that element as it is not a flat tree ancestor, right?

[03:34:46.0717] <smaug>
keithamus: I was thinking the case when both button and popover are inside shadow dom

[03:35:33.0682] <smaug>
under the same shadow root

[03:41:55.0143] <keithamus>
Okay so `data:text/html,<div><template shadowrootmode=open><button id=b popovertarget=p>Open<div popover id=p></div></template></button></div>` works in Chrome but not with this patch, so they must do something different to the spec I suppose?

[03:44:07.0769] <keithamus>
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/html/forms/html_form_control_element.cc;l=440-446?q=html_form_control_element.c 🤔

[03:54:27.0272] <smaug>
I wonder what rawtarget is

[03:54:38.0914] <smaug>
is that something which isn't cleared?

[03:57:43.0165] <keithamus>
https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/dom/events/event.h;l=150-152?q=event.h indee

[03:57:44.0951] <keithamus>
* https://source.chromium.org/chromium/chromium/src/+/main:third\_party/blink/renderer/core/dom/events/event.h;l=150-152?q=event.h indeed

[03:59:19.0997] <keithamus>
I'm confused though, it's the exact same code as `target()`, and `SetTarget()` doesn't look to do anything particularly special

[04:01:02.0880] <smaug>
hmm

[04:08:26.0144] <keithamus>
seems like a simpler way to resolve this might be to mark the default handled for an element that is a popover, so that by the time it propagates to the button click it would just ignore the click

[04:08:58.0573] <keithamus>
but I suppose the button might do something other than popovertarget... though I'm not sure that's warranted even

[04:09:12.0893] <keithamus>
For example if you had a popover in a submit button, should clicking the popover submit the form?

[04:20:33.0232] <Noam Rosenthal>
Jake Archibald: are you planning to join WHATNOT tomorrow morning? I thought we could put patching on the table including some of the issues you've already raised around it

[04:20:54.0230] <Noam Rosenthal>
(it was discussed a few weeks back but attendance was low)

[04:21:34.0936] <Jake Archibald>
Noam Rosenthal: yeah, I'm up for that. I've not attended WHATNOT before. What's the best way to track it?

[04:22:00.0605] <Jake Archibald>
(it might clash with my onboarding stuff, but I'll take a look)

[04:22:21.0156] <Noam Rosenthal>
To be added to meeting invites? I'm not actually sure... cwilso ?

[04:23:09.0246] <Jake Archibald>
Ah, I'll respond to https://github.com/whatwg/html/issues/11527

[04:25:18.0452] <Jake Archibald>
Oh wait, actually morning. Hah, I'm so used to that meaning 'afternoon' for me. Yeah I can make that

[04:28:26.0987] <Noam Rosenthal>
Yup, I think we live at around ~25 minutes distance so timezone adjustments are less necessary :)

[04:29:42.0469] <keithamus>
https://github.com/whatwg/html/issues/11537

[04:44:54.0233] <smaug>
keithamus: does it work for Gecko if you use mOriginalTarget ?

[05:14:11.0590] <smaug>
...since I guess we don't end up clearing the target in this case, given that the final target is in light DOM

[07:07:18.0333] <keithamus>
smaug: it does indeed work. Fixed and added the requisite test case. 


2025-08-07
[19:50:37.0194] <Doctor>
I did a bit of testing myself and the answer seems to be yes. One shouldn't make sure that they mess with or lose the data outside of their subjection of their buffer.

[23:16:06.0610] <annevk>
Domenic: is it intentional that `error` dispatches more often than `load` here: https://html.spec.whatwg.org/#execute-the-script-element

[01:07:41.0684] <Luke Warlow>
annevk: I don't suppose you're about for whatnot

[02:07:17.0354] <annevk>
Sorry for being late. I'm really bad at early meetings because they so rarely happen I'm usually fully absorbed by some other engineering task.

[02:09:02.0254] <annevk>
We also need to figure out the chairing situation as initially these meetings were pitched with the idea of not putting additional burden on editors and while it's not that much work, I do feel it (and occasionally forget). Panos Astithas cwilso any ideas?

[02:12:02.0054] <Noam Rosenthal>
If we had a rotation for chairing I'm happy to take part

[02:23:50.0940] <annevk>
Sounds good. Apart from managing the discussion, the main thing is organizing the minutes, making sure the minutes are posted to this week's issue, and opening the issue for the following week.

[02:36:03.0412] <annevk>
zcorpan: keithamus: for https://github.com/whatwg/html/pull/11413 should we also change the `hn` selectors in the UA style sheet to use `:heading(n)`?

[02:37:19.0416] <annevk>
Oh wait, we already discussed that it seems back in June. Okay. I'll approve. But let's not forget that change when adding the attributes as it's important.

[02:37:48.0224] <zcorpan>
It's equivalent now but would make a difference with `headingstart` or what it's called

[02:38:41.0755] <keithamus>
I think so, especially if we ship headingoffset 

[02:39:11.0308] <annevk>
Maybe after this lands, keithamus can rebase the attribute PR(s?) to include that.

[02:41:47.0363] <annevk>
For those that are interested in the MoU we have with the W3C: https://github.com/w3c/whatwg-coord/issues/22

[03:05:12.0666] <Noam Rosenthal>
opened this for patching: https://github.com/whatwg/html/issues/11542

[03:09:49.0563] <Noam Rosenthal>
... the other one has been open for 9 years (https://github.com/whatwg/html/issues/2142) so I posted on it some of the discussion from today :)

[03:15:17.0510] <Noam Rosenthal>
annevk: given the WHATNOT discussion perhaps https://github.com/WICG/sanitizer-api/issues/190 needs to be reopened?

[03:28:34.0714] <annevk>
Noam Rosenthal: that seems reasonable. Though it's very much out-of-scope for the work currently ongoing it does seem good to keep it in mind.

[03:47:38.0024] <Luke Warlow>
> <@noamr:matrix.org> ... the other one has been open for 9 years (https://github.com/whatwg/html/issues/2142) so I posted on it some of the discussion from today :)

Perhaps worth raising an issue on the trusted types spec too, for some discussion on a new createHTMLAsync poly method or some such

[03:48:02.0956] <Luke Warlow>
* Perhaps worth raising an issue on the trusted types spec too, for some discussion on a new createHTMLAsync policy method or some such

[03:48:31.0351] <Noam Rosenthal>
Yea absolutely, didn't get to it yet. Thanks!

[04:16:53.0653] <Noam Rosenthal>
https://github.com/w3c/trusted-types/issues/594


2025-08-08
[22:07:41.0053] <Doctor>
Are there any other popular matrix servers worth joining? Being in only one for a platform seems lonely.

[02:05:55.0617] <janvarga>
Is there any reason why WebIDL allows a return type for setters? https://webidl.spec.whatwg.org/#idl-indexed-properties https://drafts.css-houdini.org/css-typed-om-1/#csstransformvalue

[02:06:43.0458] <janvarga>
We are discussing this in https://bugzilla.mozilla.org/show_bug.cgi?id=1981764

[02:13:05.0121] <emilio>
/me filed https://github.com/whatwg/webidl/issues/1516

[02:13:31.0242] <annevk>
janvarga: I think emilio is correct and we should either enforce undefined or forbid a type declaration altogether if possible 

[02:14:36.0047] <janvarga>
Sounds good.

[02:16:55.0178] <janvarga>
Interesting how this started spreading. I mean, allowed in WebIDL, then CSS Typed OM used that, then chrome and webkit copied that :)

[02:18:04.0464] <emilio>
Well if it wasn't for that compiler warning about unused results we wouldn't have noticed either probably

[02:18:24.0796] <janvarga>
Yeah :)

[02:18:54.0932] <emilio>
Sent https://github.com/w3c/css-houdini-drafts/pull/1143 to the typedom spec

[02:19:00.0903] <janvarga>
Even CSSUnparsedValue was ok, because the generated code used an out param ...

[02:19:20.0709] <emilio>
Hah, so mostly by chance...

[02:20:28.0089] <janvarga>
So I guess, the way to go now, should be changing the WebIDL in Gecko to return undefined and maybe also provide a simple patch for WebIDL.py to assert that ?

[02:21:22.0059] <annevk>
That sounds good to me. That way we hopefully identify other cases as well.

[02:22:17.0638] <annevk>
I don't think WebKit has shipped CSS Typed OM  btw, there were too many issues with that.

[02:22:24.0579] <annevk>
* I don't think WebKit has shipped CSS Typed OM  btw, there were too many issues with that specification.

[02:22:30.0823] <janvarga>
Hm

[02:23:22.0170] <emilio>
annevk: epiphany does support it at least, can't check Safari r/n tho...

[02:23:54.0426] <janvarga>
`let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.lenth` returns 1

[02:23:59.0849] <janvarga>
in Safari on mac

[02:24:17.0153] <janvarga>
* `let t = new CSSTransformValue([new CSSTranslate(CSS.px(10), CSS.px(20))]); t.length` returns 1

[02:31:26.0876] <annevk>
janvarga: emilio: I misremembered. It's only CSSTypedOMColorEnabled that's disabled.

[02:32:57.0156] <annevk>
I wanted to use that for `<input type=color>`, but alas.

[02:33:39.0585] <emilio>
FWIW I only find one instance of named setters in Gecko (`Storage.setItem`, which does return `undefined`)

[02:37:07.0682] <emilio>
Same on WebKit and Blink

[02:37:25.0461] <annevk>
There's also `DOMStringMap`, `HTMLSelectElement`, and `HTMLOptionsCollection` per HTML, but they're all correct.

[02:37:39.0868] <emilio>
Right but those are not named right?

[02:38:07.0927] <emilio>
I was just thinking that, syntax wise, it might make sense to remove the return type for setters/deleters altogether

[02:38:50.0491] <emilio>
But at that point may as well remove the name

[02:39:01.0212] <emilio>
It seems only Storage would need to change?

[02:39:08.0781] <annevk>
I wonder if that creates an ambiguity as then for a named setter it might look like it returns a setter type.

[02:39:28.0093] <emilio>
(As in, add a `undefined setItem(...);` on top of the setter 

[02:39:38.0422] <emilio>
* (As in, add a `undefined setItem(...);` on top of the setter)

[02:48:37.0483] <annevk>
I see, if that's really the only setter we have that might be reasonable, but it will make it inconsistent with getters, where I don't think we'd want to make such a change. So hmm.

[02:50:11.0363] <emilio>
Right, my point is we'd remove named setters altogether

[02:51:09.0708] <emilio>
Ok... It was just an idea, I don't have very strong opinions either way. It's just that restricting it in prose tends to not be super effective in my experience :)

[02:52:31.0922] <emilio>
Yeah I guess named getters are used pretty often

[04:22:16.0933] <janvarga>
Interesting, Gecko has a WebIDL parser tests containing: ```interface SpecialMethodsCombination {
  getter deleter boolean (DOMString name);
};```


[04:24:33.0256] <janvarga>
Obviously changing boolean to undefined doesn't work because getters must have non-undefined return type, maybe this was the reason for having return type for setters and deleters

[04:24:57.0305] <janvarga>
* Interesting, Gecko has a WebIDL parser test containing: `interface SpecialMethodsCombination { getter deleter boolean (DOMString name); };`

[10:50:56.0041] <TabAtkins>
Yeah, the fact that setting *does* return a value, and WebIDL allows it, caused me to add that type to the setter. It made sense, at least to me.


2025-08-10
[23:10:49.0831] <annevk>
Anyone want to review https://github.com/speced/bikeshed/pull/3152? Is using the South Korean name for Korean okay?


2025-08-11
[17:56:50.0375] <Kaiido>
 It is correct, as far as I (a non-native) and my partner (a native) can tell.

[02:27:41.0580] <Štefan Balog (AI Worldwide Brain)>
Hi

[02:29:20.0870] <Štefan Balog (AI Worldwide Brain)>
Life cycle and digital world databaze ipfs for IoT and AI Brain IT infrastrukture and World AI Brain softwear

[06:18:11.0914] <annevk>
Noam Rosenthal: interested in reviewing https://github.com/web-platform-tests/wpt/pull/54227 and https://github.com/whatwg/fetch/pull/1847?

[06:56:01.0140] <Noam Rosenthal>
Happy to take a look

[06:57:56.0985] <Noam Rosenthal>
WebIDL q for the room: is there a specified precedence when the same key exists both in an interface and in "named properties"?

[06:58:45.0690] <Noam Rosenthal>
(A web developer was noticing that the behavior of `localStorage.setItem = 'foo'; console.log(localStorage.setItem)` is not interoperable, and trying to decipher what's the spec-compliant one)

[07:04:22.0761] <Ms2ger 🌴>
Yes, there is

[07:04:47.0811] <Ms2ger 🌴>
I don't have time right now to work through the algorithm though :)

[07:06:10.0948] <Ms2ger 🌴>
webstorage/storage_functions_not_overwritten.window.js may be of interest

[07:06:13.0664] <Ms2ger 🌴>
in wpt

[07:17:39.0640] <Noam Rosenthal>
Ha interesting. this is relevant indeed but does the opposite thing (it uses `localStorage.setItem("setItem", value)` rather than `localStorage.setItem = value)`

[07:22:11.0991] <Ms2ger 🌴>
If you write a test for the other case, I'll try to review 😇

[07:23:20.0639] <Noam Rosenthal>
I think I still need to find the spec bit to reason for what the right result is :) Will investigate. Thanks!

[07:46:46.0603] <annevk>
Noam Rosenthal: https://webidl.spec.whatwg.org/#LegacyOverrideBuiltIns can be used to change the order, so `Storage` will behave as if that is not applied; couldn't find a change related to that

[07:48:13.0962] <Noam Rosenthal>
Ha ok so for `Storage`, the following should apply: "the usual behavior, which is for named properties to be exposed only if there is no property with the same name on the object itself or somewhere on its prototype chain."

[07:48:22.0620] <annevk>
I think so, yes

[07:49:20.0925] <annevk>
I vaguely remember a former Googler making a point about this on the WHATWG mailing list, so surprising to see that Chrome has a bug here

[07:50:11.0720] <Noam Rosenthal>
I think actually chrome does the right thing here and Gecko/WebKit are in the wrong

[07:50:55.0869] <Noam Rosenthal>
`localStorage.setItem = 1234; console.log(localStorage.getItem("setItem"))` should return null according to this IIUC. It returns null on chrome but 1234 on FF/Safari


[07:52:16.0847] <Noam Rosenthal>
but I guess in this case it's slightly vague in the spec whether a named property that wasn't set yet is "exposed"

[07:54:20.0261] <annevk>
I think in that case https://webidl.spec.whatwg.org/#legacy-platform-object-set applies since it implements setter? Not a 100% sure though.

[08:01:23.0540] <Noam Rosenthal>
Ah yes. Storage would fall under the definition of a "legacy platform object" because it's a non-global with named properties. So "setting" `setItem` on it would invoke that algorithm and the result would be 1234 and not `null`. Thanks!

[10:12:10.0351] <cwilso>
Hey gang.  I'm out on leave for the next four weeks.  I'm going to need someone to chair the WHATNOT meetings.  Any takers?

[10:35:11.0643] <Noam Rosenthal>
Happy to chair with the * of sometimes having unexpected family commitments at 5PM.

[11:54:11.0083] <Noam Rosenthal>
(would be good to have backup, also I'm OOO on Sep. 4th)

[14:45:55.0562] <Alan Stearns>
Perhaps we should cancel the form controls meeting on the 21st? It comes right as three all-day meetings end for CSS, so our participants will likely be entirely zonked out.


2025-08-12
[02:56:33.0554] <Doctor>
When people make custom streams, do they actually make use of the queuing strategy?

[08:24:27.0212] <Noam Rosenthal>
For people who were there at WHATNOT or interested in partial streaming updates/patching, I've updated the patching explainer and moved it out of the main README following the feedback: https://github.com/WICG/declarative-partial-updates/blob/main/patching-explainer.md


2025-08-13
[19:46:03.0424] <arai>
is there any way to search through Web API specs for the reference to certain definition?  I'm looking into the consumers of [incumbent](https://html.spec.whatwg.org/#incumbent) to see when and how it's used in what kind of situations, and now I'm wondering if it's also used from other specs.  So far I find some references in the WebIDL spec

[21:25:12.0478] <Andreu Botella>
there's webdex: https://dontcallmedom.github.io/webdex/i.html#incumbent%20global%20object%40%40html%25%25dfn

[21:25:45.0703] <arai>
great! thank you!

[21:28:17.0337] <Andreu Botella>
hm, i wonder if bikeshed/wattsi's dfn panels should link to it as well

[22:49:46.0138] <annevk>
TabAtkins Domenic  ^^ seems like a pretty good idea

[22:50:27.0650] <TabAtkins>
That does sound good. File an issue on me to look at it later?

[23:07:26.0102] <Doctor>
The docs here say: https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/read
> The promise will fulfill with a `value: undefined` if the stream has been cancelled. In this case the backing memory region of view is discarded and not returned to the caller (all previously read data in the view's buffer is lost).


[23:07:51.0628] <Doctor>
But for the life of me, I can't seem to produce any code that will actually get the returned value to be undefined.

[23:09:17.0602] <annevk>
Doctor: usage questions are best asked on StackOverflow.

[23:09:29.0014] <Doctor>
Okay

[04:01:05.0936] <annevk>
zcorpan: is there a strong reason for `:heading` to take `<An+B>#` rather than `<An+B>` as the equivalent pseudo-classes take?

[04:10:07.0682] <annevk>
The tests also don't cover the parsing aspect too much.

[04:17:01.0866] <zcorpan>
keithamus: do you know?

[04:19:14.0530] <keithamus>
It allows for simpler expressions like `:heading(1, 2, 3)` which otherwise might require authors to figure out the right an+b expression for (which otomh I can't do).

[04:19:36.0258] <keithamus>
I guess it would be `3n-2`? 

[04:21:10.0481] <annevk>
I spotted it myself, but my initial implementation would have supported `odd of *` as argument for instance.

[04:21:22.0417] <keithamus>
Oh, `-n+3`. Hopefully this serves as suitable demonstration as to why 😆

[04:22:12.0288] <keithamus>
I think we should ensure that ` of ` expressions are parse errors. Thanks for calling that out. 

[04:23:34.0578] <annevk>
But you also get weird situations like `:heading(odd, even)` and we lived with `<An+B>` just fine for the other pseudo-classes...

[04:24:15.0152] <keithamus>
`odd, even` doesn't seem too weird. It's effectively "all", no?

[04:24:25.0277] <keithamus>
It's an odd way to write `:heading` for sure. 

[04:49:10.0458] <zcorpan>
Maybe because the number of heading levels are not unbounded (like number of children), it's clearer to just list the numbers you want

[04:54:59.0518] <annevk>
It adds quite a bit of complexity for not that much benefit. It seems we also lack serialization tests.

[05:06:41.0648] <annevk>
As in, you could also write `:heading(1), :heading(2), :heading(3)` if you can't be bothered to write `-n+3`.

[05:12:12.0422] <annevk>
Filed https://github.com/w3c/csswg-drafts/issues/12599

[08:37:51.0866] <TabAtkins>
The "of *" stuff isn't part of an+b, that's a separate grammar term that the :nth-*() pseudos have

[08:38:05.0201] <TabAtkins>
* The "of\_" stuff isn't part of an+b, that's a separate grammar term that the :nth-_() pseudos have

[08:38:10.0434] <TabAtkins>
* The "of \_" stuff isn't part of an+b, that's a separate grammar term that the :nth-\_() pseudos have

[08:39:51.0464] <annevk>
I don't think anyone said it was part of it.

[09:12:32.0903] <TabAtkins>
Ah, keithamus said "we should ensure that `of` expressions are parse errors"; I read that as being a comment about the spec. If it's just a comment about the test suite, then sure.


2025-08-14
[00:30:22.0669] <Julian Descottes>
Hi, I'm working on the WebDriver BiDi implementation in Firefox, and I'm looking at the `WebDriver BiDi download started` triggered from the HTML spec (step 5.4.4 of https://html.spec.whatwg.org/#attempt-to-populate-the-history-entry's-document). I have a couple of questions around this (spawned from https://github.com/w3c/webdriver-bidi/issues/980).

First, do I understand correctly that this is not triggered when users click on a link with a `download` attribute? (which goes through https://html.spec.whatwg.org/#downloading-hyperlinks). 
Then if that's correct, I would like to change this so that we also trigger the BiDi hook in case of a `download` attribute. But then I'm not sure there would be a navigation id relevant to send to BiDi in this case?

(I can also file an issue on GitHub if preferable to discuss about this)

[00:35:24.0047] <annevk>
Julian Descottes: there's an existing issue of the `download` attribute not being described in terms of the navigate algorithm. That would fix your issue. Are there other WebDriver callbacks that happen before or after this is called that also require the navigation ID? Because if not I suppose we could just generate a synthetic one in the `download` attribute algorithm as a workaround for now, but it's not great overall.

[00:37:37.0948] <Julian Descottes>
annevk: ok, great. And no the navigation id from this particular event is not really meant to be reused or shared with other events, it's more for completeness. So the workaround would be fine, but we could also make it optional on the BiDi side and omit the info until the HTML spec is fixed.

[00:38:02.0243] <Julian Descottes>
do you have a link to the issue about the download attribute?

[00:44:03.0030] <annevk>
Julian Descottes: https://github.com/whatwg/html/issues/5548 might be the most canonical one, but there's several. 😅

[02:39:16.0020] <zcorpan>
annevk: OK if I resurrect https://github.com/whatwg/html/pull/2480 ?

[02:42:24.0580] <annevk>
zcorpan: 

[02:42:32.0590] <annevk>
* zcorpan: please!

[02:43:59.0986] <zcorpan>
annevk: do you remember details of this comment? https://github.com/mozilla/standards-positions/issues/466#issuecomment-745120322

Is the no-referrer-based redaction not sufficient?

[02:50:33.0661] <annevk>
zcorpan: I think if the redaction is based on the policies of the embedding elements (with their node document policies as fallback) it's probably good. (Modulo the debate as to whether an HTTP-level policy needs to override, but that can probably be kept as its own issue that might impact the behavior here down the line.)

[02:57:26.0685] <annevk>
zcorpan: ah

> This is even further complicated when an embedded site is navigated as the site being navigated to would never know about its parent (other than that one exists).

is a case where we start exposing more information and also more strongly conveys that referrer policy now has this dual purpose. I think that's probably all okay though and it's relatively straightforward to follow.

[02:59:31.0925] <annevk>
zcorpan: my PR seems wrong in that it stores the referrer rather than some computed version of the referrer policy.

[03:00:22.0399] <zcorpan>
annevk: OK thanks. I'll start with rebasing

[06:08:52.0304] <zcorpan>
Hmm, no spec preview in https://github.com/whatwg/html/pull/11560

[13:44:45.0166] <Eric Portis (he/him)>
zcorpan: I wrote a draft blog post about repeating `sizes` within `picture` (and the `sizes=auto` special case, and why it should be extended). Any thoughts/feedback before I polish & publish? https://gist.github.com/eeeps/1ed57ba4c16c61e5ec6e9400d242da28


2025-08-15
[00:21:02.0399] <zcorpan>
Eric Portis (he/him): LGTM

[00:24:48.0032] <zcorpan>
I guess we should revive https://github.com/whatwg/html/pull/6695 cc Jake Archibald 

[01:18:04.0125] <annevk>
Hmm, why does locking an issue restrict it to people with write access. That's kinda prohibitive. Would be nice if there was a "has engaged with this organization prior to this issue" variant.

[01:44:06.0658] <annevk>
Well, the XSLT issue is locked to people with write access unfortunately. Can't be reading that all day.

[03:58:25.0207] <Jake Archibald>
Hah, yeah. I'll get that PR up to date.

[05:03:05.0167] <Jake Archibald>
Filing my yearly complaint about the HTML spec's wrapping making it hard to search

[05:03:12.0180] <Jake Archibald>
* Filing my yearly-ish complaint about the HTML spec's wrapping making it hard to search

[05:04:58.0007] <jmdyck>
(I make myself a version without so many linebreaks, just for ease of searching.)

[05:19:47.0811] <keithamus>
annevk: writing tests now for styling of `:heading(n)`, I'm confronted with: should the default styles for `:heading(7..9)` also be tweaked? We could simply set them to the same has `:heading(6)` or something?

[05:20:07.0848] <keithamus>
Feels weird that `:heading(7)` is now larger than `:heading(6)` 

[05:22:17.0492] <annevk>
keithamus: ah, good point. Matching 6 seems reasonable, but not sure if that would violate some guidelines.

[05:22:40.0326] <zcorpan>
keithamus: maybe as part of adding `headingoffset`

[05:22:53.0543] <keithamus>
zcorpan: indeed 

[05:23:09.0681] <annevk>
(Adding that attribute is what we're discussing.)

[05:25:45.0271] <keithamus>
AFAIK there aren't guidelines on the visual size of a heading, only that they are in order. Anything close to looking like a guideline for each heading only mentions h1-h6... so I think we may be in slightly uncharted territory

[05:32:10.0369] <zcorpan>
Making the text even smaller seems bad, it would be unreadable. Bold italic could work, but only gets us another level. Maybe alternating bold / bold+italic? Another thing for authors to "reset" though

[05:51:53.0771] <annevk>
keithamus: I suggest we keep them bold, but give them all the same margins and font-size as `p`.

[05:52:44.0469] <annevk>
keithamus: I guess this does raise the question as to whether we spell it `:heading(7, 8, 9)` or `:heading(7), ...`. Meh.

[05:53:48.0581] <zcorpan>
n+7

[05:53:48.0657] <keithamus>
I was going to hedge and spell it `:heading(7), ...` 😆

[05:54:39.0059] <keithamus>
`:heading(7)` is valid whether settle on `<AnB>` or `<integer>#` so it skirts the whole discussion/conclusion

[05:54:55.0919] <annevk>
:nod: 

[05:57:36.0755] <zcorpan>
Same as `p` matches no other heading style, but same font-size as :heading(4). Not sure that's better than matching :heading(6)

[06:04:24.0897] <annevk>
Oh, I didn't realize. Wow. None of those defaults are great then.

[06:13:22.0959] <Jake Archibald>
zcorpan: https://html.spec.whatwg.org/multipage/images.html#sizes-attributes - if I say "if element has a sizes attribute", would that be false if the element had a `sizes` attribute but the value was invalid?

[06:13:52.0904] <zcorpan>
Jake Archibald: no

[06:14:04.0310] <Jake Archibald>
I'm concerned about the "A sizes attribute is an attribute with requirements defined in this section." followed by "If present, the value must be a valid source size list."

[06:14:40.0426] <Jake Archibald>
So I was worried that it wouldn't 'have' one if it didn't meet the requirements

[06:15:22.0506] <zcorpan>
It's the DOM definition of attribute being present

[06:30:23.0426] <keithamus>
annevk: I think we also want `headingReset` to be `true` when the Dialog is in the modal state. Whether or not the IDL reflects that I am unsure of, but I am sure we don't want to expect developers to manually add it so....

Do I add headingReset getter steps or do I add additional steps in the computed level steps?

[06:47:00.0770] <Jake Archibald>
It feels like it shouldn't be getter steps, else `el.headingReset = el.headingReset` becomes weird

[06:48:15.0732] <Jake Archibald>
I wonder if it's a bit too magic in general.

[06:48:19.0393] <annevk>
Not sure that's a property we generally care about though. Hmm.

[06:49:16.0602] <keithamus>
I'm perfectly happy just adding something akin to `or inclsuiveAncestor is a dialog whose is modal is true`

[06:49:24.0184] <keithamus>
* I'm perfectly happy just adding something akin to `or inclusiveAncestor is a dialog whose is modal is true`

[06:49:28.0536] <annevk>
I think we generally make the getter compute the actual state if we can.

[06:50:13.0243] <annevk>
That does create weirdness for the case Jake mentions, but I think that's generally weird because we compute quite a bit.

[06:52:24.0676] <Jake Archibald>
Interesting. Which other cases of this exist? I know stuff like `input.type = input.type` can set the attribute to "text" even if it was absent or invalid, but that seems fine (the default isn't contextual). `input.value = input.value` has side-effects, but… is that a good thing? `document.cookie` is a mess of course.

[06:53:09.0686] <Jake Archibald>
Eh, I guess you're right, you can't assume `obj.prop = obj.prop` is 'safe' on the web

[06:53:16.0714] <keithamus>
probably `button.type` which is contextual

[06:53:31.0969] <keithamus>
`dialog.closedby` also 

[06:54:25.0001] <Jake Archibald>
Good points. Yeah, I formally retract my concern :D

[06:54:34.0224] <Jake Archibald>
* Good points. Yeah, I formally retract my concern 😁

[06:55:14.0528] <Jake Archibald>
Given `button.type`, `headingReset` should be computed

[07:06:27.0568] <keithamus>
Here's with implicit font size of `1em` for 7-9

[07:06:47.0759] <keithamus>
html.css:

```
:heading(7), :heading(8), :heading(9) {
  margin-block: 1em;
}
```

[07:10:48.0881] <annevk>
keithamus: that certainly has meme potential. Matching h6 is probably better then? (Or we don't support >6 in HTML, but I suspect that will also make people upset even though some (one?) screen readers reportedly treat >6 as 1.)

[07:15:23.0931] <keithamus>
yes I think so

[07:44:20.0746] <keithamus>
This all begs the question... `<h>` when??

[07:47:37.0486] <Jake Archibald>
zcorpan: what do you think in terms of `source.sizes` if it has no `sizes` attr, but the related `img` does?

[07:52:16.0022] <keithamus>
so if `dialog` doesn't have a content attribute of `headingreset`, it can return true if `is modal` is true? 

[07:52:26.0853] <keithamus>
But if it has a content attribute it must respect it?

[07:53:07.0471] <keithamus>
This is effectively the same though, as it's a boolean attribute - so the presence of it dictates is truthiness. I don't think you can set it to a value which would represent false?

[07:57:47.0683] <Jake Archibald>
Correct

[07:58:50.0778] <Jake Archibald>
In terms of spec, I'd write it as if modals force heading resetting

[10:42:35.0922] <annevk>
keithamus: it seems weird if it only resets while it's in the modal state because that means if you open it another way the headings would have a different level.

[10:42:54.0015] <annevk>
keithamus: that makes it effectively depend on an API call. I don't think that's good.

[10:43:41.0479] <keithamus>
> <@annevk:matrix.org> keithamus: it seems weird if it only resets while it's in the modal state because that means if you open it another way the headings would have a different level.

I think that’s right though. A dialog which is not modal should have the document heading structure. A modal dialog should have its own discrete heading structure. 

[10:44:52.0168] <annevk>
I think we even have examples where calling both showModel and show are okay. It would be extremely confusing I think to have those end up with different heading levels.

[10:53:58.0935] <annevk>
We can discuss it, but I think it would be better if we don't add special heading reset semantics anywhere. Just make people request it explicitly as an expert feature. (Maybe if some element down the line clearly calls for it we can reconsider, but dialog in its current form isn't quite it I think.)

[10:56:54.0081] <keithamus>
> <@annevk:matrix.org> We can discuss it, but I think it would be better if we don't add special heading reset semantics anywhere. Just make people request it explicitly as an expert feature. (Maybe if some element down the line clearly calls for it we can reconsider, but dialog in its current form isn't quite it I think.)

I disagree. The headingreset attribute was precisely carved out for modals, which need to have an h1 title - I think this is actually a wcag recommendation IIRC. 

I think if there was ever an element that would have implicit headingreset, it would be a modal dialog. 

[10:57:23.0206] <annevk>
But we don't have such an element.

[10:57:33.0005] <annevk>
And you can already use `<h1>` there if you need it.

[10:57:58.0593] <keithamus>
This is the point, you won’t be able to. You’d have to manually add headingreset to your dialogs. 

[10:59:24.0804] <annevk>
I could see adding it to dialog elements, period, but having heading levels change depend on the state seems bad.

[10:59:39.0363] <annevk>
* I could see adding it to dialog elements, period, but having heading levels depend on the state seems bad.

[11:00:12.0397] <keithamus>
I agree it’s not nice but I don’t think either adding it to all dialogs, or not adding it to any, result in a better situation for users. 

[11:01:13.0223] <keithamus>
If developers have to opt in to headingreset on modals then it becomes another thing that - if missed - becomes detrimental to users. If developers have to opt out by adding hesdinglevel=N it might negate the benefit of the feature (because they’d have to figure out the N which is sometimes not possible). 

[11:03:18.0878] <annevk>
I think it's also bad for users if the outline of the document ends up shifting when they open a dialog.

[11:03:37.0601] <keithamus>
It does anyway. The entire page becomes inert. 

[11:04:39.0772] <annevk>
That's an interaction thing. I'm talking about the semantics on which you might build new UIs and such.

[11:04:44.0362] <keithamus>
I think none of the options are great but IMO adding to just modals is confusing for developers but the best option for users. Adding to all dialogs by default is the worst option because it’s wrong for users and difficult to workaround for users. 

If we really must then I suppose leaving it for the developer to add headingreset is better than forcing it all the time but it is a distant second imo. 

[11:06:02.0649] <keithamus>
I don’t understand your point about semantics for new UIs. 

[11:08:59.0405] <annevk>
I don't think the semantics of the document should change based on the state of a control. What :heading(x) matches should stay consistent throughout.

[13:32:59.0995] <Noam Rosenthal>
If you have the same <dialog> element that can be in both modal and non-modal state in the context of the same document, would you expect it to have different heading styles/behavior based on that modal state, or would the author put headingreset on that particular <dialog> so that both cases appear the same?

[13:33:27.0523] <Noam Rosenthal>
keithamus: ^

[13:37:03.0212] <keithamus>
> <@noamr:matrix.org> If you have the same <dialog> element that can be in both modal and non-modal state in the context of the same document, would you expect it to have different heading styles/behavior based on that modal state, or would the author put headingreset on that particular <dialog> so that both cases appear the same?

I struggle to imagine a case where a dialog might become modal. It seems to me it is a single element that expresses two concepts. 

[13:37:22.0165] <keithamus>
If you have an example I’d love to see it. Not trying to skirt the question. 

[13:38:46.0270] <keithamus>
But I suppose I would expect the heading structure to change. When modal it’s effectively its own page so having a heading structure that starts at 1 so a user can “reach back” to the root heading could be useful. 

[13:40:44.0703] <Noam Rosenthal>
hmm let's say you have a design system component for error notifications based on dialogs, with a `<dialog id=error>` element. Whether that dialog is shown in a modal way or not depends on which error it is and the context

[13:45:01.0958] <Noam Rosenthal>
I would find it surprising that showModal() changes things not to do with interactivity... but perhaps we can make this behavior feel a bit more explicit by having headingreset="when-modal" or "auto" or some such that hints that headingreset is a product of state

[14:00:42.0540] <Noam Rosenthal>
if this use case is not interesting and I *always* intend to use a particular <dialog> element as a modal, perhaps putting a headingreset on it is not a bad way to express in an explicit intent of using it as a modal

[14:01:03.0111] <Noam Rosenthal>
* if this use case is not interesting and I _always_ intend to use a particular \<dialog> element as a modal, perhaps putting a headingreset on it is not a bad way to express an explicit intent of using it as a modal in the future


2025-08-17
[09:35:42.0091] <sadlyascii>
hi

[09:38:36.0758] <sadlyascii>
is it valid for `text-decoration: underline` to be broken into different hights?

[10:27:05.0835] <sadlyascii>
ok i noticed that it's not valid by the spec


2025-08-18
[02:36:47.0181] <Jake Archibald>
annevk: what's modern practice in terms of linking in the HTML spec? I see lots of reference to "attribute value", that doesn't link to the DOM spec. Should new text link to those terms?

[02:41:19.0961] <annevk>
Jake Archibald: not sure, Dominic Farolino and Domenic probably know better what modern is there. DOM integration is still a bit messy.

[02:43:11.0703] <Jake Archibald>
https://github.com/whatwg/html/pull/6695#discussion_r2281740944 - this is what raised the question

[02:45:12.0533] <annevk>
Jake Archibald: I see. I agree that linking it is preferable. The main worry I have with HTML is that it some point it OOMs in all browsers.

[02:52:26.0649] <Jake Archibald>
That's what multipage is for!

[06:51:53.0483] <keithamus>
https://github.com/whatwg/html/pull/11563 seems like it is worth locking this conversation to just collaborators, as the rhetoric from the locked issue has now migrated to the PR. 

[07:29:04.0041] <annevk>
Oh I was contemplating doing that this morning when there was just a single new comment. Way to go internet.

[16:34:25.0592] <eosuna-uno>
Hi everyone, i was checking the anchor tag, and wanted to add an event listener when a new page opened, so i added the click event listener, but it doesn't handle middle click, and obviously doesn't handle when on focus, space or enter, i saw the documentation, and not able to find, what events exists i was looking for something related to opening the page from within the anchor tag, is this possible? like `anchor.addEventListener("open", ()=>console.log("the page got open")` or do i need to look for pressdown, up, and several clicks?

[16:47:02.0480] <eosuna-uno>
or is this not the right place to ask that?


2025-08-19
[21:18:46.0033] <Doctor>
Are there any existing proposals on giving the ability to disable ArrayBuffer's transferable-ness? 

[21:22:48.0184] <Doctor>
From my understanding the buffer for WebAssembly.Memory is special in that it can't be transferred. 

[21:23:37.0398] <Doctor>
So arguable there are use cases for the ability to disable its transferable-ness

[07:37:03.0975] <Luke Warlow>
Is https://svgwg.org/svg2-draft/ the latest SVG spec that's published? It's wildly out of date and just wondering if there's some other document I'm meant to be looking at.

[07:37:43.0457] <sideshowbarker>
That’s unfortunately the latest published spec

[07:38:24.0179] <sideshowbarker>
The owner of the svgwg.org domain is the only one who can get that updated

[07:40:32.0821] <sideshowbarker>
I hope what we can manage to get done is, he sets up a permanent redirect to from svgwg.org to https://w3c.github.io/svgwg/, and then that becomes the canonical URL for the spec instead

[07:43:19.0834] <sideshowbarker>
But in the meantime, I guess I should at least get the https://w3c.github.io/svg2-draft/ URL working. I supposed it’s just a matter of fiddling with the spec build (which I think is an ad-hoc thing that doesn’t use Bikeshed or Respec)

[07:43:28.0836] <sideshowbarker>
* But in the meantime, I guess I should at least get the https://w3c.github.io/svg2-draft/ URL working. I suppose it’s just a matter of fiddling with the spec build (which I think is an ad-hoc thing that doesn’t use Bikeshed or Respec)

[07:47:20.0183] <sideshowbarker>
That said, if there’s somebody here who’s looking for opportunities to contribute, messing around with getting that build working again would be a nice way. The build seems to be some combination of Python and Node-based JavaScript stuff

[07:51:00.0827] <Ms2ger>
I wonder if it'd cost more time to get the build system working or to convert everything to bs

[07:51:29.0248] <Luke Warlow>
If someones got time could they finish speccing SVG while they're at it ;)

[07:52:00.0911] <Ms2ger>
Just don't tell me if it's using anolis

[07:52:13.0936] <sideshowbarker>
heh

[07:54:34.0936] <sideshowbarker>
Anyway, yeah, 100% agreed on both counts: It ideally should at least be using the same build tooling we use for other specs — but really, the bigger problem is that nobody’s actually been working on the spec itself for literally years now

[07:55:51.0547] <Ms2ger>
At least moving it to bs would be a finite amount of work :)

[07:56:23.0212] <Ms2ger>
I might do it if you have budget

[07:56:23.0456] <Luke Warlow>
The thing is there are changes to the source that just aren't reflected in the published form, so if someone was looking to make changes it would be confusing.

[07:58:22.0620] <Luke Warlow>
Admittedly very few changes considering but there are some. Even some from before the last published date that don't show up.

[08:08:10.0228] <sideshowbarker>
Yeah, especially for anyone trying to work on a new completely implementation from the spec, it’s not workablwe

[08:08:15.0382] <sideshowbarker>
* Yeah, especially for anyone trying to work on a new completely implementation from the spec, it’s not workable

[08:11:39.0059] <sideshowbarker>
I may be able to get a budget for it. About the general problem of finding ways to get not-actively-being-edited specs edited, I’m planning a breakout for TPAC about it. And I have some ideas about how we can get some funding mechanisms set up

[08:13:54.0495] <sideshowbarker>
But maybe in the meantime, this migrate-the-SVG-spec-build-to-Bikeshed thing would be also be a good concrete way to investigate some alternative funding ideas

[08:14:43.0969] <sideshowbarker>
What I have been wondering about is, getting something set up similar to what Polar.sh used to provide

[08:16:08.0359] <sideshowbarker>
…which is, basically, enabling a way to set bounties in particular GitHub issues — and anybody who cares enough about a particular issue can directly offer some amount of money bounty on the issue

[08:16:43.0354] <sideshowbarker>
And then whoever puts together a patch/PR which resolves that issue would end up getting the money from the bounty on the issue

[08:18:06.0558] <sideshowbarker>
And ideally the bounty could come from multiple people — so we could potentially “crowd-source” a bounty from multiple individual small contributions

[08:18:41.0747] <Ms2ger>
Ideally it would come from the companies with big pockets :)

[08:18:49.0118] <sideshowbarker>
well

[08:19:36.0323] <sideshowbarker>
That’s what we’ve always done in the past — but more behind the scenes, not publicly

[08:20:05.0470] <sideshowbarker>
But it seems to be getting harder to get money that way these days

[08:21:16.0980] <sideshowbarker>
And there’s something to be said about exposing the funding pain points more publicly, and making them into problems that the community collectively has more of a direct stake in helping with

[08:36:00.0243] <AtkinsSJ>
Reviving the SVG spec in some way would be greatly appreciated. It's a really widely used format, with a lot of holes in the spec and an assortment of interop issues.

[08:46:19.0001] <Ms2ger>
(No way I'm touching the contents, just to be clear)

[12:03:30.0778] <bkardell>
hey I'd like to add something to the xslt issue... 

[12:04:16.0576] <bkardell>
can someone unlock it or add me as a collaborator somehow?

[12:04:37.0661] <bkardell>
not sure who can do that really

[12:22:55.0491] <bkardell>
oh well, I sent it to mfreed - I guess he can include it for me worst case

[13:06:25.0607] <sideshowbarker>
The associated PR isn't locked (yet). So you could post your comment directly yourself there

[13:24:24.0107] <Luke Warlow>
That's locked too

[13:24:38.0372] <sideshowbarker>
Yeah, I just now noticed that

[13:26:05.0695] <sideshowbarker>
Too bad we can't have an  actual technical discussion about this anywhere in the issue tracker without the trolls showing up

[15:17:34.0550] <sadlyascii>
also i wanted to ask, the issue mentions a pollyfill in js, so could browsers, instead of using libxslt, have that pollyfill built-in to render xslt in js, similarly to how they use pdf.js to render pdf?


2025-08-20
[18:04:19.0024] <Domenic>
The reasons why that isn't workable were already discussed on the thread.

[22:17:43.0189] <Noam Rosenthal>
For performance related features some RUM providers have created a community group (RumCG) that also acts as a funnel to fund key implementation/spec projects that are not on the browser vendor priority list. Finding a model like this for SVG would be amazing... 


[22:19:49.0630] <Noam Rosenthal>
More specifically, Wix.com had funded a lot of SVG implementation work recently but got a bit tired of doing it on their own. I'd love to see "medium pockets" like that organizing together on spec/implementation issues that they care about rather than everyone relying on "big pockets" that might be big but have their own priorities

[01:21:39.0255] <Ms2ger>
There's te

[01:22:09.0300] <Ms2ger>
the separate question of whether it's worth investing anyone's time in improving the svg spec if the browser vendors aren't interested

[01:25:53.0062] <Luke Warlow>
> <@ms2ger:igalia.com> the separate question of whether it's worth investing anyone's time in improving the svg spec if the browser vendors aren't interested

Novel browser vendors are quite interested. I also imagine that it we could agree on interopable behaviour for the various inconsistencies a "third party" could get that fixed upstream. For new features I agree it might not be as worth it.

[01:28:01.0059] <Noam Rosenthal>
companies that fund spec work would normally also fund upstream implementation work

[05:14:20.0568] <zcorpan>
mfreed: does the polyfill support transforming the current document's DOM without fetching? To replace `xml-stylesheet` in e.g. RSS, I figure people could just insert an XHTML `script` element.


2025-08-21
[22:48:26.0999] <Domenic>
Hi WHATWG community, I wanted to let you know that I'll be retiring soon. My last day is Friday 2025-09-26.

Although it's tempting to stay involved in web standards, I'll be doing my best to start a new life chapter and leave it all behind. I won't be at TPAC 2025, although I'm staying in Tokyo so if you're traveling that way before/after Kobe let me know if you want to meet up!

I plan to continue participating full-time until the last week or so, and then unsubscribe from various repos, remove myself as editor, etc. If there's something you'd really like me to be sure to finish before leaving, let me know.

[01:24:17.0060] <Lea Verou>
Wow, quite the news. Thank you for your service Domenic! Best wishes for this new chapter!

[01:45:49.0603] <farre>
Noam Rosenthal: congratulations for getting the deferred commit changes landed

[01:45:54.0907] <farre>
now I have questions :D

[01:46:05.0915] <farre>
* Noam Rosenthal: congratulations to getting the deferred commit changes landed

[01:47:15.0313] <farre>
I'm not sure how [#resume-applying-the-traverse-history-step](https://html.spec.whatwg.org/#resume-applying-the-traverse-history-step) is supposed to work

[01:48:00.0575] <farre>
I get that by giving it the right arguments we can short-cut passed a bunch of things (like checking for if unloading is canceled etc), but I don't see where we pause it

[01:49:06.0278] <Noam Rosenthal>
farre: this was a tricky one, let me try to recall

[01:51:30.0192] <farre>
because we've had some difficulties in exactly the place where [it's called](https://html.spec.whatwg.org/#navigate-event-firing:resume-applying-the-traverse-history-step) insofar that we don't have a committed to entry at that point, something that apply the history step would fix (I think). the other navigation types update their committed to entry inline there, but not "traverse"

[01:51:46.0200] <Noam Rosenthal>
https://html.spec.whatwg.org/multipage/#inner-navigate-event-firing-algorithm 34

[01:52:47.0773] <Noam Rosenthal>
@farre: in that spot, we either call the "commit" steps which call "resume" straight away, or hold on until all the precommit handler promises are handled and then call the "commit" set of steps

[01:56:15.0170] <farre>
right, but I was more thinking about before calling #inner-navigate-event-firing-algorithm. say we do [#apply-the-traverse-history-step](https://html.spec.whatwg.org/#apply-the-traverse-history-step), and in [#apply-the-history-step](https://html.spec.whatwg.org/#apply-the-history-step) step 5 fire a traverse navigate event. then we'll call `#resume-applying-the-traverse-history-step` (which calls #apply-the-history-step) recursively from inside #apply-the-history-step

[01:57:17.0734] <farre>
sure, we don't pass a traversable, so we won't fire again, but we'll execute apply twice?

[01:57:28.0754] <farre>
or rather, I expect we don't, but I can't find where

[01:57:39.0374] <Noam Rosenthal>
but step 5 returns

[01:58:25.0502] <Noam Rosenthal>
so it's apply ->( fire -> resume -> apply -> continue past step 5) -> return from the external "apply"

[01:58:40.0433] <farre>
ok, that makes sense

[01:59:21.0540] <farre>
and for non-traversables

[02:01:16.0996] <farre>
i.e 12.7.2 in apply the history step, how do we not re-enter there?

[02:08:12.0618] <farre>
yeah, I guess because it's queued. I figure we've changed how we handle the ` changingNavigableContinuations`

[02:50:57.0111] <keithamus>
Congratulations! I presume this also means retiring as a Googler?

[04:29:21.0673] <smaug>
Aha, I [guess](https://github.com/whatwg/html/issues/11483#issuecomment-3189976403) there won't be WhatWG/OpenUI meeting today, even though I seem to have the calendar invite.

[04:32:57.0252] <smaug>
...and now I found "Event Canceled: OpenUI-WHATWG/HTML-CSSWG task force" in my email

[04:41:38.0088] <Noam Rosenthal>
we simply don't re-enter :) https://html.spec.whatwg.org/multipage/#inner-navigate-event-firing-algorithm 32.7 has different steps by navigation type and only the traverse one re-enters anything

[04:42:19.0287] <Noam Rosenthal>
the other one hook to the navigation spaghetti at a different spot

[04:42:21.0227] <Noam Rosenthal>
* the other ones hook to the navigation spaghetti at a different spot

[04:45:12.0281] <farre>
right, but there are two traverse navigate events

[04:45:32.0265] <farre>
and it's [this](https://html.spec.whatwg.org/#updating-the-traversable:fire-a-traverse-navigate-event) that I was thinking about

[04:47:59.0896] <farre>
but that's on the navigation and traversal task source. is that a recursive call of apply the history step then. yeah, I guess

[04:48:08.0327] <farre>
or "recursive" I should say

[04:52:10.0193] <Noam Rosenthal>
oh you mean non-traversable navigable rather than non-traverse navigation types, gotcha

[04:52:26.0934] <farre>
yeah, exactly

[04:54:22.0649] <Noam Rosenthal>
I don't think you can intercept and cancel navigation on those

[04:55:07.0939] <Noam Rosenthal>
(reading through to find where this is and if I was too quick to say that)

[04:56:22.0996] <Noam Rosenthal>
yea https://html.spec.whatwg.org/#inner-navigate-event-firing-algorithm #10

[04:59:01.0677] <Noam Rosenthal>
https://html.spec.whatwg.org/#dom-navigateevent-intercept #4.1

[04:59:33.0509] <Noam Rosenthal>
you can't put a precommitHandler on a non-traversable history-traversal navigation (the automatic "back" on an iframe)

[05:01:45.0504] <farre>
So cancelling isn't really what I was worrying about, it was how the resume the history steps works in that fire traverse navigate event, but I think I realized that when that happens it's going to like starting at a non-traversable sub-tree

[05:03:31.0576] <farre>
* So cancelling isn't really what I was worrying about, it was how the resume the history steps works in that fire traverse navigate event, but I think I realized that when that happens it's going to be like starting at a non-traversable sub-tree

[05:04:36.0600] <Noam Rosenthal>
yea

[06:26:02.0865] <Jake Archibald>
Noam Rosenthal: I'm trying to figure out how I'd write something like "load page shell, display page shell, commit URL, load full content, display full content, navigation complete". I proposed an `event.commit()` API to make this kind of thing easier.

[06:32:28.0431] <Jake Archibald>
Noam Rosenthal: like this https://gist.github.com/jakearchibald/8ef3f49a5fbff9240bef314fe8338c0e

[08:53:36.0649] <Noam Rosenthal>
Yea the second one is what you have to do. The "commit" thing worked ok for this simple use case but had lots of error conditions and gotchas

[08:54:13.0327] <Noam Rosenthal>
and we were working with people trying to integrate it into all kinds of apps and existing routers etc.

[09:10:21.0602] <Jake Archibald>
Fair enough. I guess I can write a wrapper

[09:12:34.0635] <Noam Rosenthal>
Yea... it was really finicky since if you forget to call "commit" in your code it's like a hanging promise but in a way that's more difficult to detect. I wonder if a generator function could wrap this nicely but haven't tried yet

[12:53:33.0150] <Lea Verou>
Just checking, the meeting didn't happen today, right?

[14:35:14.0767] <bkardell>
its a late meeting

[14:35:24.0209] <bkardell>
I think, anyway :)

[14:36:09.0417] <bkardell>
good luck too! thanks for all of it!

[16:53:26.0018] <smaug>
OpenUI/WhatWG didn't happen (AFAIK), WHATNOT did.

[16:53:39.0681] <smaug>
* OpenUI/WhatWG didn't happen (afaik), WHATNOT did.


2025-08-22
[23:56:09.0530] <Domenic>
I'm so happy https://github.com/whatwg/html-build/pull/302 worked, the line numbers were driving me crazy. (Review needed, BTW.)

[07:34:52.0898] <Lea Verou>
Bummer, I missed it as I was at the CSS WG. Was the images in video issue discussed?

[07:34:58.0910] <Lea Verou>
* Bummer, I missed it as I was at the CSS WG F2F. Was the images in video issue discussed?

[08:13:26.0015] <Lea Verou>
* Bummer, I missed it as I was at the CSS WG F2F. I see no minutes in the minutes doc? Was the images in video issue discussed? 

[12:07:51.0000] <smaug>
There are some meeting minutes, and they do tell what was discussed

[12:08:09.0377] <smaug>
and no, that video thingie wasn't really discussed


2025-08-23
[02:42:28.0966] <Kaiido>
I can't seem to find the minutes for that meeting. The last I see is https://github.com/whatwg/html/issues/11541 which planned the 14th's meeting, but doesn't have minutes either, and nothing about the one from yesterday. Did it move to another repo maybe?

[02:42:55.0489] <Kaiido>
* I can't seem to find the minutes for that meeting. The last I see is https://github.com/whatwg/html/issues/11541 which planned the 14th's meeting, but doesn't have minutes either, and nothing about the one from this week. Did it move to another repo maybe?

[02:51:53.0970] <smaug>
ah, I meant in the doc

[02:52:07.0783] <smaug>
which is linked from the meeting invite

[02:52:14.0031] <smaug>
I guess the minutes weren't copied yet


2025-08-25
[21:30:52.0796] <sideshowbarker>
Bravor Eric Meyer for https://meyerweb.com/eric/thoughts/2025/08/22/no-google-did-not-unilaterally-decide-to-kill-xslt/

[21:30:57.0541] <sideshowbarker>
* Bravo Eric Meyer for https://meyerweb.com/eric/thoughts/2025/08/22/no-google-did-not-unilaterally-decide-to-kill-xslt/

[03:06:11.0681] <zcorpan>
"Google has trillions of dollars" is also not true

[04:13:43.0435] <Ms2ger>
Just the one trillion? 😇

[07:31:03.0295] <Lea Verou>
Hi folks, just a reminder to fill out State of HTML 2025, which is closing in a few days: https://survey.devographics.com/en-US/survey/state-of-html/2025?source=leaverou
I suspect everyone in this community will have *really* interesting input. 

[11:07:29.0225] <bkardell>
so scroll to text fragment is all in wicg but implemented everywhere?

[11:19:32.0797] <sideshowbarker>
Yep

[11:20:28.0423] <bkardell>
seems weird

[11:20:44.0468] <bkardell>
Ok, I will take my questions over there :)

[11:21:15.0913] <sideshowbarker>
well hang on

[11:21:31.0250] <sideshowbarker>
see https://github.com/whatwg/html/issues/8282#issuecomment-3201473163 cc Dominic Farolino 

[11:22:10.0402] <sideshowbarker>
so I dunno, depending on what you want to ask, you might instead want to just ask here or in that HTML issue

[11:22:47.0223] <bkardell>
well, I'm looking for where to send a mathml laison who has questions about it 

[11:23:18.0131] <bkardell>
Happy to ask them to come here if it's a good place for their questions/thoughts

[11:23:49.0763] <bkardell>
https://github.com/w3c/mathml-core/issues/240

[11:23:59.0158] <bkardell>
is the relevant person/bit

[11:24:22.0593] <sideshowbarker>
Yeah, it’s up to them I guess. There’s certainly now downside to raising an issue in the WICG issue tracker for the current spec

[11:25:04.0824] <bkardell>
what's the downside? :)

[11:25:32.0075] <sideshowbarker>
urp I mean to type "no", not "now" (fixing…)

[11:25:38.0690] <sideshowbarker>
* Yeah, it’s up to them I guess. There’s certainly no downside to raising an issue in the WICG issue tracker for the current spec

[11:26:47.0508] <sideshowbarker>
Anyway that looks like a good catch from an implementor — one the spec authors would seem to welcome having a discussion about

[11:27:13.0489] <sideshowbarker>
so yeah raising an issue in the WICG issue tracker for the spec seems good

[11:29:39.0188] <bkardell>
thanks sideshowbarker 


2025-08-27
[03:33:10.0749] <smaug>
hmph, pip spec is in a pretty bad shape 😕 All the task vs in-parallel handling is wonky and transient activation handling not matching implementations etc.

[03:36:59.0490] <smaug>
* hmph, (video) pip spec is in a pretty bad shape 😕 All the task vs in-parallel handling is wonky and transient activation handling not matching implementations etc.


2025-08-28
[10:12:20.0247] <Luke Warlow>
Regarding the pseudo-element discussion I think it would be very helpful to have concrete use cases. Because I worry this is designing something that doesn't actually solve use cases. It gives web authors maybe some of the stuff they want to solve use cases. For example, `::backdrop` keeps being mentioned. What do authors want to do with it? We have closedby=any for the light dismiss case now. Can we perhaps look at more things like that?

[10:14:13.0618] <Noam Rosenthal>
I used backdrop because it's easy to demo with, but the actual use case this started from is about scroll markers

[10:15:18.0609] <Noam Rosenthal>
This issue started from view-transitions: https://github.com/w3c/csswg-drafts/issues/11559

[10:16:07.0386] <Noam Rosenthal>
and https://github.com/w3c/csswg-drafts/issues/12163 is about scroll-markers

[10:16:27.0096] <Noam Rosenthal>
I think if we find something that's general enough for these two use cases we'll be off for a good start

[10:19:45.0900] <Noam Rosenthal>
Luke Warlow: with a11y - proxying with an element can have some interesting benefits if designed right... like the HTML aria attributes can override the default pseudo-element attributes, giving more control

[10:20:06.0251] <Noam Rosenthal>
(benefits over having this as a JS-only thing)

[10:21:09.0415] <Luke Warlow>
There was mention of popovertarget, can you speak more to what the thinking there is? Given they only work on buttons right now?

[10:22:58.0782] <Luke Warlow>
For *some* of these, just hiding the the pseudo and using HTML as a replacement provides all those benefits though. Which is why I'm wondering some of the use cases other than backdrop.

[10:23:38.0370] <Noam Rosenthal>
Yea, for some of these, sure... but for the style/layout-generated pseudos there is no good alternative

[10:24:39.0156] <Noam Rosenthal>
Like an equivalent alternative would be to create an actual shadow-dom for these and give you access to the ShadowRoot

[10:24:57.0181] <Noam Rosenthal>
(which is perhaps an alternative we can consider)

[10:25:21.0621] <Luke Warlow>
Sorry if I'm missing something obvious but these are both quite solution oriented? Is there a summary of use cases rather than 'how do make pseudo elements real'?

[10:26:43.0833] <Noam Rosenthal>
Look above, the use cases come from people trying to do things with view transitions and scroll markers and not being able to. Definitely problem oriented, but the solution went into the more general space after years of adding piecemeal pseudo-element supports in specific APIs like getComputedStyle and web animations

[10:29:33.0573] <Noam Rosenthal>
It's easy to say "let's just fix this point problem" over and over, and sometimes it's the right thing to do, but I think that's sort of how we went about pseudo-elements from the start and it got us to a place where it's not a concept that's well defined enough at the platform level

[11:09:30.0302] <TabAtkins>
Exactly that, yes. We keep growing more pseudo-elements, and it's clear the piecemeal solutions are not viable for our additions, let alone the clear path for the future.

[11:24:05.0058] <Noam Rosenthal>
having said that, a list/table of use cases for this would be helpful either way.

[11:28:49.0303] <Noam Rosenthal>
(there might be one that I don't have a link to, I asked Daniil who was supposed to present the issue today)

[16:46:33.0042] <jmdyck>
In recent merge to HTML spec re deferred commit, https://html.spec.whatwg.org/#inner-navigate-event-firing-algorithm, step 35.1 defines variable 'precommitController', but doesn't use it.

[16:46:49.0362] <jmdyck>
Might be a mistake.

[16:54:36.0361] <Domenic>
Noam Rosenthal: ^


2025-08-29
[01:16:43.0116] <Noam Rosenthal>
oops, I'll take a look. Thanks!

[01:44:30.0021] <Noam Rosenthal>
yea that section got a bit botched with all the rebasing... (or I originally muddied it somehow, which happens)

[01:48:30.0401] <Noam Rosenthal>
https://github.com/whatwg/html/pull/11603

