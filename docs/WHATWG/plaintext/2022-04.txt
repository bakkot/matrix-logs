2022-04-01
[23:32:28.0182] <annevk>
It's not useful to know that it can only throw due to OOM? Is there anything else?

[08:46:36.0334] <Domenic>
Stack overflow IIRC was a big thing for our implementation

[09:55:29.0747] <mgaudet>
annevk: I'm not sure. Certainly for reading the specification, and trying to hold it together as a concept I think it's helpful. As an implementer, I'm less sure of the value (could be wrong, would welcome other opinion). 

[09:55:30.0931] <mgaudet>
I know I definitely came into some of this with an incorrect assumption that OOM handling was something done on the web in complicated code bases-- that seems to not actually be the case though?

[09:56:32.0326] <mgaudet>
(The concern I had/have is broken streams that originate from states 'impossible' in the specification, generated by things like OOM, or stack overflow) 

[13:21:31.0325] <Jesper van den Ende>
Hey, I noticed setting Node.parentElement works in all browsers. But the spec says it is readonly, doesn't that mean setting it should throw. Or am I missing something?

[13:24:06.0541] <evilpie>
How could I get someone else interested in https://github.com/whatwg/html/issues/3255  ?

[13:31:41.0751] <Jesper van den Ende>
> <@jespertheend:matrix.org> Hey, I noticed setting Node.parentElement works in all browsers. But the spec says it is readonly, doesn't that mean setting it should throw. Or am I missing something?

ah never mind, I was trying this in the inspector console, which doesn't use `"use strict"` I guess


2022-04-02
[08:37:20.0920] <annevk>
mgaudet: I think only for ArrayBuffer allocation is OOM defined; some have the ambition to define it more exhaustively, but I haven't seen progress on that for many years


2022-04-03
[15:19:56.0300] <Domenic>
> <@evilpie:mozilla.org> How could I get someone else interested in https://github.com/whatwg/html/issues/3255  ?

I will ping the relevant internal team chat, and make frowny faces at them for not responding earlier :(


2022-04-04
[07:42:06.0079] <evilpie>
> <@domenicdenicola:matrix.org> I will ping the relevant internal team chat, and make frowny faces at them for not responding earlier :(

Thank you!

[14:13:23.0296] <smaug>
hober: by any chance, do you happen to know examples of "we found several examples of web pages that had incorrect behavior when requestAnimationFrame() callbacks were fired at a non-60Hz frequency." mentioned in https://github.com/WebKit/explainers/tree/main/animation-frame-rate ?

[14:14:13.0115] <hober>
> <@smaug:mozilla.org> hober: by any chance, do you happen to know examples of "we found several examples of web pages that had incorrect behavior when requestAnimationFrame() callbacks were fired at a non-60Hz frequency." mentioned in https://github.com/WebKit/explainers/tree/main/animation-frame-rate ?

I'll ask!

[14:14:21.0458] <smaug>
thanks!

[16:20:22.0927] <c8fdy5dbkp>
smaug: 


2022-04-05
[14:49:27.0838] <vrafaeli>
Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe in modern browsers)

[14:49:46.0333] <vrafaeli>
 * Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe)

[14:50:07.0196] <vrafaeli>
 * Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe in modern browsers)

[14:51:15.0749] <Andreu Botella>
come to think about it, maybe embed and object could be moved to the obsolete features section

[14:52:18.0944] <vrafaeli>
btw nice to see you Andreu. I think we chatted a bit before on IRC


2022-04-06
[23:35:57.0122] <annevk>
Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.

[01:02:51.0320] <annevk>
GitHub's "smart URL paste" continues to trip me up, I keep forgetting it's there and ending up with a result I don't want

[01:03:18.0944] <annevk>
And I kinda worry that if I learn it I'll expect it in other places and run into trouble there

[02:23:57.0117] <freddy>
I'm looking for something that resets a whole document, including expando attributes etc. - I suppose I could emulate this by serializing+parsing the whole document or by cloning it. But, ideally, I'm looking for existing patterns for this "reset" or at least individual puzzle pieces. It seems to me that even the puzzle piece that removes "all" event handlers from an element seems to be a "no" already :/

[04:54:03.0550] <annevk>
freddy: "document open steps" does a bunch of that

[04:55:20.0364] <freddy>
I _did_ see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it "replace the document with a new object" sounded to me as if the corresponding element-tree would be gone?!

[04:56:03.0246] <freddy>
OK, I realize I only read the non-normative stuff (I feel bad now)

[04:56:08.0438] <freddy>
 * OK, I realize I only read the non-normative stuff (I feel bad now)

[04:57:36.0122] <annevk>
freddy: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are

[04:58:13.0194] <annevk>
But we do have primitives such as "remove all listeners" in the platform, but they're not widely available

[04:59:41.0350] <freddy>
Yeah, so the thing is that there's an apparent lack of "inside knowledge" from the sanitizer folks (freddy, otherdaniel, koto) about the potential state that could be attached to the document. The lack of knowledge lead to a security-conservative "we want it all gone" design goal. Similar to the other security-conservative choices we made (can't just a string-to-string API and hope for the best, can't parse a string with implicit/wrong context element, etc.).

[05:00:17.0222] <freddy>
So, one ideas is that I'm trying to find out if there's an algorithm that would a) shine some light on the apparent lack of details and b) alleviate the concerns by being an existing thing.

[05:00:54.0823] <annevk>
Again though, what's the actual input here? If you start with a tree, don't you have to trust that tree already?

[05:01:08.0909] <freddy>
On the other hand, I know that all other sanitizer libraries traverse a DOM tree based on the input (or parse it based on the input) and not even re-use those elements but create completely new ones and copy the bits over selectively. Which is a bit like a clone, but more... iterative

[05:01:56.0050] <freddy>
No. You don't. E.g., `<iframe sandbox="allow-same-origin" src="bad stuff>` contains attacker-controlled stuff and you want to "promote" it into the current document, but need it to be sanitized first

[05:02:13.0997] <freddy>
so `sanitize(iframe.contentDocument)`

[05:03:50.0083] <freddy>
OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox="allow-script" src="some-sandbox-domain-for-user-content">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`

[05:04:03.0954] <freddy>
 * OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox="allow-script" src="some-sandbox-domain-for-user-content">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`

[09:13:31.0461] <vrafaeli>
Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:11.0833] <vrafaeli>
> <@annevk:mozilla.org> Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.

 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browsers PDF engine will do the "remount" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:40.0987] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will do the "remount" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:55.0456] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:15:52.0811] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information because it doesn't have the "type" attribute.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:39:08.0693] <annevk>
vrafaeli: the only thing I know about performance is that you want to measure first

[09:40:04.0483] <annevk>
freddy: how would you get iframe.contentDocument unless it's same-origin?

[09:47:07.0133] <freddy>
annevk: (Sorry, I somehow changed direction midsentence above?!) I suppose the more realistic scenario, is that the content is on a sandbox domain that is CORS-enabled and you fetch it via XHR? OK, I see...then the follow-up question is why would anyone add stuff to the document before sanitizing? Mh. I suppose assuming that a framework is operating in mysterious ways? Realistically, people don't write all the code themselves. I admit that it's getting handwavy. 😕 But given that we took the conservative approach with all string-returning APIs, why don't we take the conservative approach when accepting documents?

[09:48:19.0996] <freddy>
Actually, I really have to disconnect. I will be back tomorrow.

[10:24:07.0495] <annevk>
freddy: the conservative approach is to just add setHTML() until we understand this better, imo

[10:53:44.0515] <ntim>
https://twitter.com/argyleink/status/1511761383024521218 pretty sure this should use <popup>


2022-04-08
[06:12:01.0774] <mrkishi>
hey, folks! i think there's a couple of issues with the [named character reference state](https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state) in the html spec but i wanted to check i'm not missing anything before filing an issue...

- the example says character references are not parsed in attributes, but this is not reflected in the algorithm. wouldn't a properly matched name would fall in the `if there's a match > otherwise` branch? (if inside attribute AND last not a semicolon AND followed by either equals or alphanumeric, then flush it, _otherwise_...)
- while browsers will indeed not parse `&notit;` in attributes, they'll parse at least `&amp;`, `&quot;` and `&apos;`, so even if the example is right it doesn't seem to be the whole story

does this seem right?

[06:17:25.0407] <mrkishi>
 * hey, folks! i think there's a couple of issues with the [named character reference state](https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state) in the html spec but i wanted to check i'm not missing anything before filing an issue...

- the example says character references are not parsed in attributes, but this is not reflected in the algorithm. wouldn't a properly matched name fall in the `if there's a match > otherwise` branch? (if inside attribute AND last not a semicolon AND followed by either equals or alphanumeric, then flush it, _otherwise_...)
- while browsers will indeed not parse `&notit;` in attributes, they'll parse at least `&amp;`, `&quot;` and `&apos;`, so even if the example is right it doesn't seem to be the whole story

does this seem right?

[07:35:28.0727] <Yaser Nojavan gol>
Hi

[07:35:53.0600] <vrafaeli>
Anyone knows what the hack is going on with iframe:
https://codesandbox.io/s/iframe-size-bug-bb3hgi?file=/src/App.tsx
Why is it 10% bigger than the defined size? same in Chrome and Mozilla

(The space on the right seems to be of the size of the vetical scrollbar, which is not there. Perhaps the same is true for the bottom excessive size.)

[07:52:06.0376] <emilio>
Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

[08:03:22.0721] <vrafaeli>
> <@emilio:mozilla.org> Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

You are rigth regarding the borders. I noticed that also. But the borders are only 2px big. Removing them does reduce the size by negligible amount.

[08:05:14.0764] <vrafaeli>
Seems like the additional size is (borders +) scrollbar

[08:06:44.0515] <vrafaeli>
first is with the 2px iframe border, second is without that

[08:38:38.0591] <vrafaeli>
> <@emilio:mozilla.org> Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

 * You are correct about the fact that borders do exist. I noticed that also. But the borders are only 2px big and removing them does reduce the size by negligible amount.

[08:50:40.0908] <emilio>
vrafaeli: ok at the computer now. Other than the border, what you're seeing is that the iframe is baseline-aligned by default. You can avoid that with `display: block`, for example

[08:51:02.0659] <emilio>
`<iframe>` is `display: inline` by default, like `<img>` and other replaced elements

[08:52:26.0573] <emilio>
Also `vertical-align: top` would work in your example

[08:52:32.0363] <emilio>
Anyways that's all behaving as expected

[08:57:51.0726] <vrafaeli>
> <@emilio:mozilla.org> vrafaeli: ok at the computer now. Other than the border, what you're seeing is that the iframe is baseline-aligned by default. You can avoid that with `display: block`, for example

I see. Thanks a lot.

[10:11:45.0008] <annevk>
mrkishi: it's an example, by necessity it's not the whole story; and it's an example about a very specific instance so generalizing from it in that way would be wrong

[10:13:00.0896] <mrkishi>
> <@annevk:mozilla.org> mrkishi: it's an example, by necessity it's not the whole story; and it's an example about a very specific instance so generalizing from it in that way would be wrong

right, but the example isn't reflected in the algorithm, and neither is current browser behavior... unless i'm missing something?

[10:14:23.0120] <mrkishi>
i know examples aren't normative :p

[10:14:57.0128] <annevk>
mrkishi: I'm pretty sure the example is correct

[10:16:37.0652] <mrkishi>
> <@annevk:mozilla.org> mrkishi: I'm pretty sure the example is correct

what's your interpretation of this, then?

> If the character reference was consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next input character is either a U+003D EQUALS SIGN character (=) or an ASCII alphanumeric, then, for historical reasons, flush code points consumed as a character reference and switch to the return state.
> 
> Otherwise:

and where is the `&amp;`, `&apos;` and `&quot;` exceptions handled?

[10:17:12.0041] <annevk>
Well, you need to start with the first paragraph of https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state

[10:17:50.0255] <annevk>
For `&notit;` that gives you `not` in the table, as the example says. So you have a match.

[10:18:15.0567] <annevk>
But say you're parsing an attribute it won't work as it doesn't end in `;`

[10:18:35.0250] <annevk>
But if the input was `&quot;` it would, since that does end in `;`

[10:18:37.0844] <mrkishi>
oh, i'm an idiot.

[10:19:02.0615] <mrkishi>
this whole time i thought not's named reference was `&notit;`

[10:19:03.0785] <annevk>
Well, I wouldn't go that far; reading specifications is a skill you need to learn

[10:20:00.0952] <mrkishi>
> <@annevk:mozilla.org> Well, I wouldn't go that far; reading specifications is a skill you need to learn

i have some other pretty convincing rationale, but i'll spare you the details

[10:20:05.0806] <annevk>
And even then it can be involved 🙂

[10:20:25.0983] <mrkishi>
thanks for taking a look and so sorry for wasting your time.

[10:20:45.0944] <annevk>
No worries, was fun to learn this again!

[13:53:31.0994] <Yaser Nojavan gol>
vrafaeli: 

[13:55:32.0325] <Yaser Nojavan gol>
💛🤍💜 

[13:55:44.0544] <Yaser Nojavan gol>
Hi


2022-04-10
[00:18:31.0828] <annevk>
I wonder if we should start moderating "Update?" comments. Or would that just create more of them? I'd be inclined to mark them as "Off topic" and see how it goes.


2022-04-12
[01:38:47.0926] <omninode>
Is there a place where one easily can see what features and updates that has been created since the html5 was launched?

[05:13:22.0981] <zcorpan>
 omninode https://platform.html5.org/history/ has history between 2003 and 2014

[05:17:10.0363] <zcorpan>
omninode: https://github.com/whatwg/html/pulls?q=label%3Aaddition%2Fproposal+is%3Apr+is%3Amerged is merged PRs with "addition/proposal" label, though I don't know how consistently the label is used


2022-04-13
[04:57:31.0489] <zcorpan>
This term doesn't show up. What gives? https://respec.org/xref/?term=expose+legacy+touch+event+apis - https://github.com/w3c/touch-events/pull/113 was merged yesterday

[07:16:41.0356] <Domenic>
> <@zcorpan_:matrix.org> This term doesn't show up. What gives? https://respec.org/xref/?term=expose+legacy+touch+event+apis - https://github.com/w3c/touch-events/pull/113 was merged yesterday

Shouldn't it be <dfn export> not <dfn class="export">?

[07:17:13.0169] <zcorpan>
Domenic: https://respec.org/docs/#data-export

[07:20:33.0537] <zcorpan>
https://github.com/w3c/webref/blob/main/ed/dfns/touch-events.json was updated 5 days ago, but the latest reffy run was 2 hours ago

[07:23:16.0914] <Domenic>
Hmm OK, no ideas then :-/

[08:38:33.0775] <zcorpan>
Domenic: ok, thanks. Filed https://github.com/w3c/webref/issues/560

[08:40:53.0221] <zcorpan>
well, now it's there: https://github.com/w3c/webref/blob/main/ed/dfns/touch-events.json#L1266

[08:45:26.0847] <Domenic>
Haha, nice. Just time I guess...

[08:45:37.0200] <Domenic>
Anyone remember navigator.connect and have any links to relevant documentation?

[08:46:15.0708] <zcorpan>
Domenic: yeah. the build still fails, but hopefully some more time will fix it

[08:47:47.0603] <Domenic>
> <@domenicdenicola:matrix.org> Anyone remember navigator.connect and have any links to relevant documentation?

Nevermind, found it: https://mkruisselbrink.github.io/navigator-connect/

[08:48:00.0628] <zcorpan>
Would be nice to shorten the time it takes for terms to flow through


2022-04-14
[08:44:59.0426] <Domenic>
Noam Rosenthal: do you know if PDF responses will respect early hints?

[08:46:36.0683] <Domenic>
Also will step 18 of https://html.spec.whatwg.org/#initialise-the-document-object sometimes try to iterate over null?

[08:52:03.0496] <Domenic>
Filed https://github.com/whatwg/html/issues/7823

[09:15:19.0416] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Noam Rosenthal: do you know if PDF responses will respect early hints?

I think not
Will double check 

[09:15:45.0584] <Domenic>
Yeah I was unsure whether they happen more at the network layer or inside the document-creation layer or both

[13:56:09.0751] <Domenic>
Does anyone know any realistic URL schemes that use [opaque hosts](https://url.spec.whatwg.org/#opaque-host)?

[15:42:26.0220] <sideshowbarker>
Domenic: https://stackoverflow.com/questions/71872980/cors-cross-origin-error-on-dynamic-load-of-resource

> The base URL is about:blank because import() is called from a CORS-cross-origin script.

…I’ve never seen that error message before

[15:42:36.0980] <sideshowbarker>
 * Domenic: https://stackoverflow.com/questions/71872980/cors-cross-origin-error-on-dynamic-load-of-resource

> The base URL is about:blank because import() is called from a CORS-cross-origin script.

…I’ve never seen that error message before


2022-04-15
[17:04:21.0367] <Domenic>
Sounds like a problem with their extensive compilation stack

[17:54:16.0325] <sideshowbarker>
Domenic: ok, so that _“The base URL is about:blank because import() is called from a CORS-cross-origin script”_ message isn’t coming from the browser?

[17:54:43.0673] <Domenic>
It may, or may not, dunno. But it's totally undecipherable what their actual code is after the tooling gets done with it

[17:55:14.0959] <sideshowbarker>
OK

[17:56:39.0064] <sideshowbarker>
(and a naive grep through chromium sources doesn’t find any matches for that message text, but that could be because of line breaks or how the message string is constructed)

[18:09:22.0164] <sideshowbarker>
ah, found it at https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/script/dynamic_module_resolver.cc;l=239

[18:15:37.0335] <sideshowbarker>
https://source.chromium.org/chromium/chromium/src/+/09e82ae40f8408bd6e7b4b4cd011b7447edc1ba2

[18:16:30.0321] <sideshowbarker>
https://github.com/whatwg/html/issues/5751


2022-04-16
[17:06:20.0348] <sideshowbarker>
looking at https://github.com/mdn/content/issues/15030, to test `navigator.mediaDevices.getUserMedia()`, any advice on how I can emulate a system without a camera and microphone?

[17:08:59.0092] <sideshowbarker>
I want to make `navigator.mediaDevices.getUserMedia()` throw a `NotFoundError` error at (I guess) step 9.3.1 of https://w3c.github.io/mediacapture-main/#dom-mediadevices-getusermedia

[17:11:14.0894] <miketayl_r>
sideshowbarker: you might send `Permissions-Policy: camera=(), microphone=()` and try in chrome

[17:11:20.0453] <miketayl_r>
in theory that should work

[17:11:47.0972] <miketayl_r>
(maybe it throws some other error tho... like NotAllowedError)

[17:12:09.0534] <miketayl_r>
hm, step 11 suggests that

[17:12:18.0768] <sideshowbarker>
thanks — will try it

[17:12:36.0685] <miketayl_r>
sideshowbarker: it looks like it should throw the wrong error

[17:12:43.0083] <sideshowbarker>
ah OK, yeah

[17:12:48.0672] <sideshowbarker>
 * ah OK, yeah

[17:12:57.0910] <miketayl_r>
next up: get a screwdriver... :P

[17:16:46.0923] <sideshowbarker>
I thought maybe I could change my OS system settings on my laptop to completely disable my microphone and camera — but macOS at least does not provide a way to do that, as far as I can see

[17:17:43.0404] <miketayl_r>
hmmm

[17:18:21.0703] <sideshowbarker>
ah wait, maybe this: https://support.apple.com/guide/mac-help/control-access-to-the-microphone-on-mac-mchla1b1e1fe/mac

[17:18:31.0303] <miketayl_r>
this kinda looks like the right thing to poke at

[17:18:34.0596] <sideshowbarker>
yeah, that :)

[17:18:39.0767] <miketayl_r>
good idea

[17:18:51.0370] <sideshowbarker>
will try it

[17:19:17.0492] <sideshowbarker>
hope it’s reversible 😆

[17:22:06.0803] <sideshowbarker>
incidentally, I notice that Element/Matrix now have (beta) support for (Slack-like) threaded replies/conversations

[17:22:20.0548] <sideshowbarker>
wonder how long that’s been there

[17:22:57.0162] <miketayl_r>
oh, interesting

[17:23:52.0042] <sideshowbarker>
OK yeah, that worked 🎉 I got it to throw the `NotFoundError` I wanted

[17:57:25.0114] <sideshowbarker>
OK, raised https://github.com/mdn/content/pull/15038 — thanks much, miketayl_r 


2022-04-19
[13:44:05.0049] <TabAtkins>
Domenic: Note that I don't have merge permissions in webidl, so you'll need to hit that button as well.

[13:44:21.0086] <Domenic>
Yep, was just waiting for the build

[13:44:31.0308] <TabAtkins>
ah kk

[14:07:33.0201] <Alan Stearns>
Cool. Thanks for pointing this out.


2022-04-20
[03:49:12.0364] <Luca Casonato>
timothygu / Edgar Chen  Would you be so kind to PTAL at https://github.com/whatwg/webidl/pull/1098? It is a pre-requisite for https://github.com/whatwg/fetch/pull/1392 and https://github.com/whatwg/encoding/issues/267.

[03:49:23.0976] <Luca Casonato>
 * timothygu / Edgar Chen  Would you be so kind to PTAL at https://github.com/whatwg/webidl/pull/1098? It is a pre-requisite for https://github.com/whatwg/fetch/pull/1392 and https://github.com/whatwg/encoding/issues/267.

[03:59:08.0798] <Edgar Chen>
Luca Casonato: I will take a look these days.

[03:59:18.0835] <Luca Casonato>
Thank you :-)

[11:31:11.0014] <smaug>
Does wpt.fyi have some way to show how often some intermittently failing test fails?


2022-04-21
[21:03:13.0235] <sideshowbarker>
looking at https://github.com/mdn/content/issues/15129 — when `setTimeout(handler, timeout, ...arguments)` is called with a _timeout_ that’s not a number, what spec defines how it gets coerced into a number?

[21:04:24.0783] <sideshowbarker>
https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timer-initialisation-steps says nothing about coercing _timeout_ to a number but instead assumes it’s already a number

[21:29:48.0138] <sideshowbarker>
I guess somehow I end up at https://webidl.spec.whatwg.org/#abstract-opdef-converttoint

[23:56:38.0532] <arai>
https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin says the definition is `long setTimeout(TimerHandler handler, optional long timeout = 0, any... arguments);`

[23:57:16.0163] <arai>
so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens

[02:27:48.0528] <sideshowbarker>
OK, so then for a string like `"1 second"`, I think ultimately that:

1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:
2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `"1 second"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:
3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“
4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“

Does that sound right?

[02:28:40.0409] <sideshowbarker>
> <@arai:mozilla.org> so, the conversion defined in https://webidl.spec.whatwg.org/#es-long happens

 * OK, so then for a string like `"1 second"`, I think ultimately that:

1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:
2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with`ParseText(_text_, _StringNumericLiteral_)` — which for a string like `"1 second"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:
3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“
4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“

Does that sound right?

[02:31:13.0244] <sideshowbarker>
 * OK, so then for a string like `"1 second"`, I think ultimately that:

1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:
2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext withParseText(_text_, _StringNumericLiteral_) — which for a string like `"1 second"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:
3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“
4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“

Does that sound right?

[02:31:26.0915] <sideshowbarker>
 * OK, so then for a string like `"1 second"`, I think ultimately that:

1. calls into the ES spec at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, which then:
2. calls into https://tc39.es/ecma262/multipage/ecmascript-language-source-code.html#sec-parsetext with ParseText(_text_, _StringNumericLiteral_) — which for a string like `"1 second"` fails to be parsed as a _StringNumericLiteral_, and instead returns a List of errors, and so then:
3. we reach step 3 at https://tc39.es/ecma262/multipage/abstract-operations.html#sec-stringtonumber, “If _literal_ is a List of errors, return **NaN**.“
4. we go back to https://webidl.spec.whatwg.org/#abstract-opdef-converttoint and hit step 8, “If _x_ is **NaN**, +0, +∞, or −∞, then return +0“

Does that sound right?

[02:33:38.0360] <arai>
let me check

[02:37:07.0021] <arai>
yes, that sounds right

[02:37:19.0702] <sideshowbarker>
OK, thanks much

[03:30:43.0193] <Andreu Botella>
I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as "not that important" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue

[03:30:48.0190] <Andreu Botella>
https://github.com/whatwg/html/issues/7840

[03:31:08.0679] <Andreu Botella>
 * I'm the kind of person who had noticed months ago that nested worker termination when the parent worker closes is wonky in the spec, but put it off as "not that important" months ago... but got nerd-sniped into opening that bug right now in order to justify a minor point in a different issue

[05:19:57.0424] <Jake Archibald>
Does anyone know the history of `DOMContentLoaded`, as in, why is it named using a different pattern to other events?

[05:23:30.0399] <Jake Archibald>
I guess the mattern started with mutation events in DOM-level-2

[05:48:59.0127] <annevk>
Jake Archibald: yeah, there was a group of people that thought we should prefix and case event names in that manner, see also DOMFocusIn and the like

[05:49:37.0424] <annevk>
Jake Archibald: I suspect it had strong overlap with the Java people, but I don't know for sure, predates me

[06:03:25.0741] <Jake Archibald>
 * I guess the pattern started with mutation events in DOM-level-2

[06:03:58.0598] <Jake Archibald>
ta!

[15:19:34.0660] <sideshowbarker>
TabAtkins: In MDN, for https://drafts.csswg.org/css-scroll-snap/ we now have a bunch of links with broken fragments.


[15:20:08.0146] <sideshowbarker>
So I notice that, e.g., the anchor at https://drafts.csswg.org/css-scroll-snap/#scroll-padding no longer exists.
But I see it at https://drafts.csswg.org/css-scroll-snap-1/#scroll-padding.
So I guess the cause must be that the https://drafts.csswg.org/css-scroll-snap/ alias was recently changed to point to the https://drafts.csswg.org/css-scroll-snap-2 spec rather than the https://drafts.csswg.org/css-scroll-snap-1/ spec.

[15:21:31.0523] <sideshowbarker>
I don’t understand why the Level 2 spec doesn’t have those same parts from the Level 1 spec.
Is the Level 2 spec a delta spec or something?

[15:22:34.0339] <sideshowbarker>
At MDN we have a policy of using the level-less URLs for all https://drafts.csswg.org/ specs (or really, for leveled specs in general)

[15:22:53.0196] <sideshowbarker>
 * I don’t understand why the Level 2 spec doesn’t have those same parts from the Level 1 spec.
Is the Level 2 spec a delta spec or something?

[15:25:51.0752] <sideshowbarker>
…except in cases (like this one, I guess) where the leveled version which a level-less URL points to lacks some parts/anchors for features documented in MDN that are in some (earlier or later) leveled version

[15:30:37.0262] <sideshowbarker>
So I could fix the broken-fragments problem in this case by updating MDN to use the Level 1, e.g., https://drafts.csswg.org/css-scroll-snap-1/#scroll-padding URLs, but there’s a lot of them that broke — about 25.
And I guess that means there are at least 25 features that are in the Level 1 spec that are missing from the Level 2 spec — which kind of makes me wonder why the https://drafts.csswg.org/css-scroll-snap/ alias was changed to point to the Level 2 spec.
 

[15:31:19.0330] <sideshowbarker>
TabAtkins: So I wonder if maybe the https://drafts.csswg.org/css-scroll-snap/ alias could be changed back to pointing to the Level 1 spec rather than the Level 2 spec?

[15:43:04.0277] <TabAtkins>
Yup it should be, I've just adjusted it

[15:43:11.0948] <TabAtkins>
Thanks for the catch

[15:44:03.0200] <TabAtkins>
(we shouldn't be pointing the unleveled aliases at delta specs, please report if you catch us doing that)

[16:32:36.0771] <sideshowbarker>
TabAtkins: cheers — thanks much

[16:34:33.0811] <sideshowbarker>
> <@tabatkins:matrix.org> (we shouldn't be pointing the unleveled aliases at delta specs, please report if you catch us doing that)

will do — pretty sure that for now was the only current one (otherwise my mdn-spec-links build automation would catch it, which is what happened in this case), but definitely will give a heads-up if/when I never run into another one


2022-04-22
[17:58:52.0042] <Seirdy>
Bit confused about `aria-labelledby` versus `aria-describedby` wrt `<figure>` and `<figcaption>`. reading MDN (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Figure_Role), it says that `aria-describedby` is for long captions and `aria-labelledby` is for short captions, but we should use `<figure>` and `<figcaption>` instead. If the figure caption is a wee bit long (say, >150 characters), does it switch from being a label to a description? Firefox's accessibility tree doesn't seem to indicate so, and neither did the HTML Living Standard when I checked.
Some of my captions start with something like "Code Snippet 4 (shell): ...", and then comes a longer description. I'd ideally want to make everything before the colon the "label" and the full caption the description (or maybe just everything after the colon?).
I hope I'm not being too "clever" by breaking the first rule of ARIA, but it seems like plain HTML really doesn't handle the distinction between labels and descriptions when using "figure" elements.

[07:57:43.0881] <Domenic>
Seirdy: have you tried testing with a screen reader? I'm not sure screen reader users actually benefit from having both label (thing before the :) and description (thing after the :). Just a longer description would work better for them IIRC.

[08:47:39.0590] <Seirdy>
> <@domenicdenicola:matrix.org> Seirdy: have you tried testing with a screen reader? I'm not sure screen reader users actually benefit from having both label (thing before the :) and description (thing after the :). Just a longer description would work better for them IIRC.

Good point. Though I should try testing with different verbosity levels too...

[08:57:52.0095] <Seirdy>
yeah it looks like Orca does understand the difference but doesn't read the description by default when the label is provided.

[08:58:50.0562] <Seirdy>
hang on, i think there's more. gimme a sec...

[09:02:38.0000] <Seirdy>
ok i got it:

[09:02:53.0447] <Seirdy>
orca understands "everything before the colon" is the aria-label and reads it first.

[09:03:05.0163] <Seirdy>
then orca reads the entire figcaption.

[09:03:12.0664] <Seirdy>
(including everything before the colon)

[09:03:19.0953] <Seirdy>
so there's some repetition.

[09:04:13.0371] <Seirdy>
Now, I have like 20 code snippets on this page so I want people to be able to quickly identify them using a short label rather than the full caption. So I don't wanna give up on the concept of a label shorter than the "full description".

[09:04:55.0899] <Seirdy>
semantically I think the right thing to do would be to make "everything before the colon" a heading.

[09:06:05.0940] <Seirdy>
visually i might have to mess with CSS a bit to make that "look right" and not look like a new subsection of the article (i.e. look like a figure).

[09:07:06.0595] <Seirdy>
ideally "everything before the colon" would not get is own newline, so i could just break the first rule of ARIA and give the pre-colon text a role="heading" 😈

[09:24:08.0095] <Seirdy>
huh apparently if you navigate to a figure landmark, orca will read the label (which is the caption) and then enter the figure and  includi including the caption. the caption gets read twice. making "before the colon" the aria-label has improved this.

[09:24:53.0868] <Seirdy>
idk why i didn't think to actually follow SR behavior before, i got too caught up in theory. Thanks for the reality check Domenic! Seirdy out, for now.

[10:19:49.0165] <smaug>
Domenic: I guess in my mind NavigationTransition or some such would be the object which the event had a pointer to and once event dispatch was done, Navigation.transition would point to that (if navigation would proceed). So effectively this object which tells about transition would be created before, not after, the event dispatch and event dispatching is used to tell how the transition should work by modifying that object. 

[10:20:17.0972] <Domenic>
Hmm, well, the idea behind the name transition was that it only exists if you call transitionWhile().

